{
    "title": "The Second Place Sister Bk. 01",
    "pages": [
        "Synopsis and Notes\n\nIt is the start of summer vacation, and twin sisters Tori and Stephanie Hamlin are about to be seniors. Stephanie, though, carries with her a dark and terrible secret. Feeling overshadowed by her twin's success, and consumed with her own lust for her father, Stephanie falls prey to a shadowy network of conspirators who promise to give her everything she thinks she wants, if only she can pay the price.\n\nOn the face of it, the NewYou Clinic for Adolescent Addiction is a model for rehabilitation and therapy, taking in troubled young girls and helping them overcome their terrible urges. When Stephanie has Tori framed, and labeled a drug addict, the conspirators arrange for Tori's incarceration at the clinic. Outside, Stephanie begins to work on her family, remaking them to fit her perverse vision of perfection. Meanwhile, inside the clinic, Tori learns that rehabilitation can be very humiliating, indeed, but can lead to new relationships that will help her to persevere.\n\nWhen she's returned to her family, wholly different, Tori must face the changes that her sister has wrought on her family, and herself, facing the terrible truth of what has happened to her. The sisters, and their family, will need to come to terms with not only the changes to Tori, but the changes within themselves. Through trials they never thought to experience, the Hamlin's will need to find the way forward, learning that the power of a family's love is often times the greatest weapon against a terrible evil bent on submission and domination.\n\nAuthor's Notes on Book One\n\nThanks, dear readers, for taking the time to devour this filth and depravity with your eager little eyeballs. I'd like to take a moment to give some background, for those who care to read it, on the litany of perversion which lies ahead. For a writer, such as myself, who actually cares very much for his characters, despite the humiliating things he puts them through, it's important for me to give the reader some sort of warning before you dive in to this fantasy land of debauchery.\n\nFirst, a warning. If you are at all put off by themes of incest, personality modification, hot teenage girls getting their slutty little holes plugged by a multitude of horny cocks, mild cuckolding, light bondage, female chastity, or other such perversions, then this story will not be for you. However, if these things are up your dark alley, by all means, read on. Second, an idea of what you are getting yourself into. I wrote the story for my own enjoyment, which doesn't mean that others won't also enjoy it, it just means that through my many years of reading all the filth on the internet, I never quite found the combination of filth that made my ideal story.\n\nIt was with this in mind, that I put fingers to keys to craft, what I hope you will agree, is a combination of a great stroker (for those that like that) and also a story about people. Any author will tell you that their characters, once established, begin to take on a life of their own. This often results in the story taking unexpected turns, or characters ending up in situations the author really had no intention of placing them in in the first place.\n\nThis story has a great deal of graphic sex, but alongside that charts the lives of people who are flawed, give in to impulsiveness, end up having to deal with the consequences, but also find that love will see them through the storm. While it's important to have that in a good story, in my humble opinion, this one also contains elements that simply do not take place in the real world. The world of the Hamlins, for example, doesn't contain such awful things as STDs, unwanted pregnancy, and a court system that moves very slowly. Those are all consequences we, in the real world, have to deal with, so please understand that safe sex is good sex! Again, thanks for reading, and I look forward to your feedback on this, the first book of the Hamlin series.\n\n*The Second Place Sister*\n\nOne hundred meters.\n\nTori's feet pounded the track, her blood rushing in her ears.\n\nNinety meters.\n\nHer legs burned with exhaustion. She spared a quick glance and saw her sister just a step behind.\n\nEighty meters.\n\nStephanie poured her last ounce of strength in an all out sprint, and closed on Tori's heels. She could do this! She saw Tori flagging, her sister slowing as she used up her final burst.\n\nSeventy meters. Sixty. Fifty.\n\nStephanie gulped in air, lungs on fire. Tori surged ahead suddenly. Stephanie raged inside. Where did Tori come up with more energy?\n\nForty Meters. Thirty.\n\nStephanie huffed, arms pumping, her long legs weakening. She wasn't worried about anyone behind her. She had a good twenty meters on the closest runner.\n\nTwenty meters.\n\nTori felt the win. Her next gold hovered right there, just seconds away. She could see Stephanie struggling, but almost close enough to touch.\n\nTen meters.\n\nStephanie felt hot tears sting her eyes. If she could just muster one last burst! Tori raised her arms in triumph.\n\nFive meters.\n\nStephanie saw victory die as Tori crossed the line and slowed, bent with her hands on her knees. Stephanie finished less than a second behind and did the same. She wouldn't cry. Not here. Not now. She huffed and sucked in air. Tori looked her way with a smug grin. Stephanie would have choked her if she'd had the strength. Right there, in front of the cheering crowd, she could have wrapped her hands around her twin's little neck and squeezed, until she turned blue and fell over.\n\nSecond place. Again. Stephanie filed through the door behind her family, clutching her second place medal in her fist with a death grip Tori, exuberant, strutted in at the head of the line with yet another gold for first. It was something Stephanie had grown used to after all these years. Her twin had always been first in everything. Tori was the first to be born, by only a few seconds. She was the first to crawl, the first to walk, the first to talk. When the two girls were old enough to start competitive sports, the sport of choice had been track. As runners, they were just about equal. Tori, though, always placed first, beating Stephanie by a few seconds each time. Today was the closest she'd ever come.\n\nThe only thing Stephanie had come first in was her big teen tits. Stephanie had developed her breasts early on, and where Tori's development had stopped at a nice small C cup, Stephanie's tits had ballooned to D's. She was sure that was why she was always a step behind on the track. Her big heavy udders slowed her down. That had to be it. There was no way Tori was just naturally better at everything.\n\nAs her family marched into the living room, Stephanie plastered on a big fake smile and pretended to be happy for Tori's success, yet again.\n\n\"You were great, Tori!\" She exclaimed, giving her twin a big hug and mashing her fat tits into Tori's slim runner's body.\n\n\"You were, too, Stephie,\" Tori replied, \"One of these days you're going to whip my ass on the track!\"\n\nTori's voice dripped with sarcasm. Stephanie burned with anger inside, but she'd learned long ago how to wear a mask. Their parents, John and Melanie, looked on with pride. Their brother, Mike, blew them off and went downstairs.\n\nThe two sisters broke their embrace.\n\n\"Race you for the shower!\" Tori cried, and took off up the stairs. Stephanie, of course, came in second.\n\n*Jealousy*\n\nStephanie was on her knees beneath the desk of her chemistry teacher, Mr. Hart. His pants were down around his ankles, and Stephanie's little blonde head bobbed up and down on his thick cock. The big-breasted soon-to-be-senior eagerly sucked her teacher's shaft, taking him down her throat to the balls, only to come back up and pull him out of her mouth completely.\n\n\"Oh, fuck,\" the older man groaned, \"I'm gonna miss you this summer!\"\n\nStephanie stroked his big dick with the copious amounts of saliva she's slavered on it.\n\n\"You mean you'll miss shoving your fat prick into my teen throat,\" she teased, \"You'll miss having me stroke your cock between my big slut melons until you blow your cum all over me, right?\"\n\nThe teacher's meat pole throbbed in her hand. He was close to cumming, as Stephanie knew from experience. She'd been blowing her chem teacher for a while now. Not that she needed to. She was smart, and her grades had always been excellent. She just enjoyed the power. From the time she started growing her over-sized fuckbags, she had noticed that men and boys had positively drooled over her. She loved the attention, and the way that she could manipulate them into doing just about anything for her. And if she had to slobber on their dicks once in a while to keep them on a tight leash, what was the harm? Besides, she loved it when they shot their sticky spunk into her throat, or covered her tits with it. She often finger fucked her snatch at night thinking of men cumming on her big tits.\n\nShe slowed her stroking to an even, deliberate pace, and worked her fist around Mr. Hart's bulbous head. She put the tip back in her mouth, and worked his shaft, moaning around it. Every few strokes, she would pause long enough to talk dirty to him. She loved spewing filth while she sucked off cocks. It was a huge turn-on.\n\n\"Are you gonna cum for me, Mr. Hart? Are you gonna fill up my tummy with your hot load? Or would you rather cover my big tits?\" Slurp, \"Maybe you want to squirt your cum all over my face this time?\" Slurp, \"Go on. I'm your little cocksucker. You can cum anywhere you want to. Show me what a hot old man does to little teenage suck sluts, Mr. Hart.\"\n\nThat was it. The teacher grabbed his student's face and shoved his whole prick back into her mouth. He wanted to scream out his orgasm, but retained some awareness that he was in a school building. Instead, he gritted his teeth and unloaded spurt after spurt of goo right down Stephanie's throat. She happily sucked it all down, milking his cock for every last drop before popping it out of her mouth.\n\nMr. Hart, eyes glazed, stared down at the sexy little blonde girl as she pushed the remaining drops of cum into her mouth, licking her fingers noisily. Stephanie stayed where she was until Mr. Hart recovered a bit. When the teacher started to pull up his pants, she stood, and sat on the edge of his desk. Once he had collected himself, he leaned back in his chair with a satisfied grin.\n\n\"So,\" he said, \"I suppose you want to know where we are with the mixture?\"\n\nStephanie nodded. Mr. Hart took a key from his pocket and unlocked a desk drawer, pulling out a small vial, which he handed to Stephanie.\n\n\"Now, remember,\" he said, \"just a single drop into a drink each day. It's highly concentrated. After a few days, there's no way in hell she'll pass any kind of drug screen. It'll look to a lab like she's been dosing with a suite of illegal drugs for weeks. There's also a mile aphrodisiac that will start to increase her sex drive, especially in situations where's she's embarrassed or uncomfortable. Chronic masturbation will be a side effect. I wouldn't be surprised if she has some trouble concentrating, performing routine tasks, that sort of thing. It's not going to be anything that will harm her permanently, but it's going to be noticeable.\"\n\nStephanie took the vial with a mischievous smile.\n\n\"And Steph,\" he added, \"it goes without saying that I had no part in giving you that. If you get caught, that is.\"\n\nShe nodded. \"I won't. Now, what about the other part?\"\n\n\"Tori is a bitch, I'll give you that,\" he said, \"but what you're doing is going to change her life forever. You know that, right?\"\n\n\"She deserves it,\" Stephanie snapped, \"Now where are we?\"\n\n\"If everything goes as planned, the NewYou clinic is ready to take on your sister for their program. And the judge knows the deal. NewYou keeps him in plenty of money and teen pussy to make sure they get the right girls for the program. There won't be any problems.\"\n\nStephanie nodded. She leaned in and gave Mr. Hart a big sloppy kiss on the lips.\n\n\"When we're done, I'll make sure you're getting plenty of teen pussy to keep you happy, too.\"\n\n\"I know you will. You always deliver.\"\n\nThey grinned at each other evilly.\n\n*When Everything Began to Change*\n\nStephanie gave Tori her first dose in her sports bottle at track practice that same day. Mr. Hart hadn't lied. By the end of practice, everyone noticed that Tori was having an off day. She started strong, but by the end of it she was falling behind Stephanie for the first time in her life. Stephanie was elated.\n\nAs they changed in the locker room, Stephanie admired her twin's body. It was, of course, just like hers, and Stephanie knew that she had a fantastic body. Her long legs were toned and slim. Her ass was well rounded, even perfect, firm. Her belly was taut and hard, and her teenage breasts sat high and pert on her chest.\n\n\"What the hell was wrong with you out there?\" Stephanie asked, pulling her shirt over her huge globes.\n\nTori reddened, angry, and snapped, \"I don't know! I feel kind of shitty today. I think I'm getting sick.\"\n\n\"Well,\" Stephanie gloated, \"I, for one, feel great. I beat your time for the first time, in like, ever!\"\n\n\"Don't get used to it,\" Tori shot back, \"You'll be in second place again next time.\"\n\nThe two girls rode home together. Tori, quiet and disheartened, shut herself in her room after dinner. Her head hurt. Her stomach ached. She was perspiring more than normal. The strangest thing, though, was that her young pussy was moist and aroused. She laid back on her bed, shut her eyes, and tried to fall asleep. Her pussy was yearning though.\n\nOf course, she'd masturbated on occasion. It wasn't something that she did often. She was usually a little ashamed when she did, but there were times when the body just needed a release and she wasn't ready to let her boyfriend do it, yet. At the thought of Tim, her studly, football player boyfriend, her pussy got even more juicy. She pictured his fit abs, his muscled arms, his thick lips when they kissed, and her hand strayed down into her shorts. She remembered his smell, like sweat and leather, and slipped a finger into her wet folds. Just outside, Stephanie pressed her ear to the door, listening closely to see if her sister was jilling off her teen cunt. She'd already seen the effects of the doses on Tori's performance on the track, and Mr. Hart had said that the aphrodisiac in it would make Tori a little more horny than usual. She wasn't sure if that really meant anything, though. Her sister was a prissy little ice queen, anyway. Any improvement in her sexual energy would be a huge one. She hardly even kissed her boyfriend and, as far as Stephanie knew, they never made out or did anything else.\n\nInside the room, Tori played with her clit, then stroked her fingers in and out of her sloppy pussy. She hit just the right spot, and involuntarily moaned out loud. Stephanie heard it happen and smiled to herself. She waited a moment longer, waiting for Tori to really get into it. Tori finger fucked herself more vigorously, pushing two fingers in, then out, then rubbing her clit, then back in.\n\nShe was humping her hand now, thinking of Tim, her mind suddenly wondering what his cock would feel like inside her. She'd only seen it twice, felt it, and jerked him off after a concert. She had virtually no experience with cock, but now she was curious. What would it be like to have a cock in her instead of her finger? Her pussy gushed on her fingers. She was panting now, moaning audibly, shoving her fingers in and out of her box, pushing close to a good hard cum.\n\nSuddenly, a loud knock at the door shattered her concentration, and Stephanie's voice came from the other side.\n\n\"Tori? Are you awake? I'm coming in!\"\n\nTori hardly had time to pull her hand out of her shorts and cover her wet pussy with her blanket before Stephanie opened the door and peeked her head inside the dimly lit room.\n\n\"Fuck, Steph,\" Tori cursed, \"there's a reason for closed doors.\"\n\nStephanie came in anyway, and sat on the edge of Tori's bed.\n\n\"I was worried about you,\" she lied, \"I just wanted to make sure you were okay. Still feeling sick?\"\n\n\"Yeah,\" Tori replied, a little guilty that she had snapped at her sister, when she was obviously so concerned for her.\n\nStephanie sniffed the air, and said, \"I guess you're feeling a little better,\" she grinned, \"It smells like someone was having a good time with herself!\"\n\nTori blushed, and pulled the covers up higher around herself, saying, \"Leave me alone.\" She looked like she might cry.\n\nStephanie stroked her twin's long blonde hair, and reassured her, \"It's okay, Tori. A girl needs to get off. It's nothing to be ashamed of. I finger my cunt all the time!\"\n\n\"You're filthy,\" Tori complained.\n\n\"Oh, get over yourself. Everyone masturbates. Some of us are just comfortable with our bodies, and enjoy ourselves. Maybe you shouldn't be such a prude.\"\n\n\"I'm not a prude. I just have self-respect!\"\n\nStephanie tried to diffuse the situation. It wasn't time to push her sister too hard.\n\n\"I'm sorry,\" she said, \"That was rude. I just wanted to make sure you were okay.\"\n\nShe leaned down and kissed her twin's forehead with her full lips.\n\n\"I'll see you tomorrow. Night.\"\n\n\"Night, Stephie.\"\n\nStephanie retreated from the room, pleased that she'd not only ruined Tori's orgasm, but made her feel like shit. It was turning out to be a wonderful day. She made her way downstairs, and then into the basement. Her brother, Mike, had what amounted to his own apartment down here.\n\nAt 20, Mike was a sophomore in college. Their mother had been knocked up by their father when she was only 18 and he was 19. Their conservative parents had been, understandably, very upset at the time. However, their father had proven to be a very reliable and responsible young man. He'd cared for his child, married their mother, and then made his own way asking for no one's help. He was entrepreneurial, and even at 16 had started his own computer business. Two decades later, the family wanted for nothing. Stephanie always felt a twinge in her oversexed young cunt when she thought about her dad.\n\nStephanie slipped into her brother's \"apartment\" and quietly made her way down the stairs. At the bottom was another door, which she opened without knocking, and poked her head inside. The sounds of moaning and slapping of flesh drifted from around the corner. Mike was obviously jerking off to some porn. Stephanie smiled and slipped inside, closing the door behind her. She walked quietly around the corner. Mike sat in front of his computer with no pants. On his big screen was the image of a slim blonde girl with a hard body and big tits, just like her. The slut was getting a huge cock shoved down her throat, and another was stretching out her tender young asshole. The violated girl was quaking with orgasm after orgasm as the two hunks plowed her repeatedly, using her body to jerk their cocks off with.\n\nMike had his fist wrapped around his own big dick. Stephanie licked her lips as she watched him stroke it. Her brother was easily one of the biggest dicks she'd seen in person. He was nearly ten inches long, and thick. She pulled off her shirt and dropped it on the floor, exposing her bra-covered tits. She pushed down her shorts, and left them on the floor, too. Straightening her thong panties, she tip-toed closer to her brother, her mouth beginning to water. Mike, engrossed in his jerking didn't notice his sister until she was kneeling down in front of him.\n\n\"Oh shit!\" he shouted, and dropped his massive meat from his hand, \"Steph! You scared the shit out me!\"\n\nStephanie quickly wrapped her small hand around her brother's thick fucktool and stroked it gently.\n\n\"I'm sorry,\" she said, looking up into his eyes, \"You were so engrossed in your nasty porn, and I didn't want to disturb you while you stroked off this huge cock.\"",
        "Mike groaned as she squeezed his dick.\n\n\"I thought maybe I could do that for you while you watch,\" she teased, spitting on her hand and wrapping her fingers back around it, \"unless you want me to leave?\"\n\n\"Shit! You're such a little slut,\" he breathed heavily, \"feeding you my dick was the best decision of my life.\"\n\nStephanie leaned in and put her brother's fat cockhead between her lips, teasing his piss hole with her tongue.\n\nShe pulled it out and said, \"Mmmm. It sure was. I'm so lucky to have such a beautiful cock to suck on right here at home,\" she jerked him slowly, \"Now you just watch your stupid porn slut get railed and let your horny sister take care of your prick.\"\n\nShe slid her mouth back over the head, and swirled her tongue along the underside of his shaft as she swallowed a few more inches of his meat. Her pussy was gushing fuck honey as she slowly took Mike's thick shaft down her throat. He put his hand inside her bra and groped her big tits as she looked up into his eyes.\n\n\"Oh fuck,\" he groaned, \"You look so hot with your mouth full of my cock.\"\n\nStephanie took him as far as she could, almost getting to the base of his monster, before she gagged. Mike held her head on his dick with his free hand for just a moment, twining his fingers into her honey blonde hair, then pulled her mouth off of him so she could catch a breath. Strings of hot spit stretched between his sister's lips and his fat mushroom head.\n\n\"Yeah, you like choking your hot sister with your nasty brother cock, don't you?\" she teased, continuing to stroke him off with her saliva, \"You're such a fucking pervert, making your sister swallow your over-sized prick! I should tell mom and dad about how you rape my mouth and use it like a cunt!\"\n\nMike pushed her head back down on his shaft, using her hair to guide her mouth up and down his dick.\n\n\"Oh, yeah! You're such a dirty cocksucker, Steph. Rub my fucking balls while you suck me. You know what I like.\"\n\nStephanie massaged her brother's huge balls. She could feel them hot and heavy with a huge load. Mike used her mouth roughly, alternating glances from the porn on his computer screen, down to his horny sister and her bulging tits. He fondled her nipples, while pulling her off his dick. He knew she'd spout more filth as soon as her mouth was available, and he absolutely loved the way Stephanie talked dirty.\n\nGasping for breath she taunted him even more, \"You sick fucker! You're so twisted. Who gets off on turning their own sister into their personal suckslut?\" She squeezed his cockhead in her fist, \"You should feel bad for gagging your pretty sister with this huge dick of yours.\"\n\nMike's breathing was ragged as his sister worked his cockmeat over with her slimy hand.\n\n\"Why don't you let me fuck you, Steph? I know you'd love it.\"\n\nStephanie giggled at him, \"I'll bet you'd like that! It's not enough that you make me swallow your fat prick. You won't be happy until you have it shoved up my tight little teenage snatch, will you? I'll bet that wouldn't even keep a pervert like you happy. After you had my pussy aching for this big fuckstick inside it every day, you'd probably push it up my ass and make me your little three-hole whore, wouldn't you, you sicko?\"\n\n\"Fuck!\" Mike could hardly hold back his nut with the torrent of filth pouring from his sister's mouth.\n\nStephanie went on, \"Well, you know the deal. You don't get anything but my mouth until dad takes my cherry.\"\n\nThe thought of their father pushing his big cock into his sister was just too much. Mike growled like a beast and started bucking his hips in orgasm. Stephanie quickly pushed his cock back into her mouth and milked his sperm from his balls, gulping spurt after spurt down her throat hungrily. Her brother's head swam in ecstasy as Stephanie guzzled his cum. His head felt like all the blood had rushed out of it. He practically passed out from slut overload! Stephanie continued to milk his cock, massaging his balls to get every drop she could. Finally, drained, she pulled his thick meat from her mouth and stroked it gently.\n\n\"You'll never guess what I just heard,\" She said, standing up and dropping Mike's deflating cock. \"I caught Tori fingering her snatch before I came down here.\"\n\nShe straddled her brother's lap, pushing her big tits into his face and rubbing his soft cock between her firm ass cheeks and soaked panties.\n\n\"Bullshit,\" Mike said, his voice muffled by her bra-covered tits.\n\n\"She was totally getting herself off,\" Stephanie confirmed, \"her whole room smelled like horny cunt.\"\n\n\"That frigid little bitch probably doesn't even know she has a twat,\" Mike said, \"let alone how to get it off.\"\n\nStephanie slipped her tongue into his mouth, making out with her hunky brother. She could feel his dick getting hard again and smiled inwardly.\n\n\"I can feel your dick growing again,\" she teased him, \"You're really a horny fucker. You should get that big dick into a tight pussy sometime soon.\"\n\n\"You're such a cocktease,\" Mike groaned, \"But dad will never fuck you. There's no way.\"\n\n\"I don't know,\" she said, \"You know, as well as I do, that mom and dad are freaks. And you've seen their porn collection. Dad loves hot young pussy. How long do you think it's been since he got to shove his big cock into a nice, warm, teenage slut hole?\"\n\nMike grabbed her bra and pushed one of the cups aside, sucking on Stephanie's hard nipple.\n\n\"Now that I'm legal, I'll bet you I can get him to let me ride his cock. And after he pops my cherry, I'll let you have a turn, too!\"\n\nWith that, she pulled her tit from his mouth, pulled her bra up, and slapped his hardening dick.\n\n\"Have fun jerking off, sicko!\"\n\nShe flounced out of the room, snagging her clothes on the way out. Mike just sat dumbfounded with a new hardon.\n\nThe next day was a Saturday, and Stephanie was up early for her morning jog with Tori. This was their weekend routine. She prepped a couple of protein shakes, making sure to dose Tori's with a drop of the compound Mr. Hart had supplied her with. Shortly thereafter, Tori dragged herself down the stairs. She looked like she hadn't slept well at all. Her eyes were dark, her hair only barely run through with a comb. She was dressed in a pair of track pants with a zip-up jacket. By comparison, her hot twin wore booty shorts with \"catch this\" printed on her ass, and a tight sports bra.\n\n\"Good morning, gorgeous!\" Stephanie quipped energetically.\n\n\"Fuck off.\" Tori snapped, grabbing her shake from the counter and chugging it quickly.\n\n\"Someone's in a mood,\" Stephanie scowled, \"maybe you just need a good finger fuck to brighten you up.\"\n\nTori reddened with embarrassment and anger. She had a short fuse today. After Stephanie had barged in her room and ruined her masturbation session, she'd fallen into a fitful sleep. Her head was still cloudy this morning, but she didn't feel quite as shitty as the previous night.\n\n\"Whatever,\" she said, \"let's run. I'm gonna kick your ass!\"\n\nStephanie was out the door and instantly outpacing Tori. Tori, angry, picked up her pace and was soon beside her twin.\n\n\"This is a jog, remember,\" Tori said, \"Not a run.\"\n\n\"Can't keep up?\" Stephanie quipped.\n\nTori scowled, but didn't say anything else. Side-by-side, the two girls jogged down the sidewalk, enjoying the chill of the early summer morning as they worked up a sweat. As their feet hit the concrete, meter after meter, Stephanie's big, bouncing tits turned heads. She ignored the attention, but secretly reveled in it.\n\n\"What...is...it...with...you...showing...off...your...boobs..?\" Tori panted.\n\n\"It's comfortable.\" Stephanie shot back. She wasn't even winded.\n\nIt was clear that Tori was starting to struggle a bit, and they were only halfway through their routine. She started to lag behind. Stephanie slowed.\n\n\"You okay?\" she asked.\n\nTori came to a stop and rested her hands on her knees.\n\n\"Just...don't feel...well...\" she breathed.\n\n\"Let's go back,\" Stephanie said, \"We'll just walk it.\"\n\nTori nodded and straightened up. The two girls walked the distance back to the house slowly. By the time they got in the door their family was getting around. Their mom was in the kitchen frying up bacon, while eggs and pancakes cooked on the stove. Mike sat at the table pretending to stare at his phone. Stephanie, however, could see that he was really sneaking glances at their mother's ass.\n\nShe could hardly blame him. At 38 their mother was fit and gorgeous, an older version of the twins. Her long blonde hair was tied back with a ponytail. Her firm ass cheeks looked delicious in a pair of night shorts that barely covered the fine round globes. Their father was standing in the living room watching the morning financial news. He gave them a glance when they came in, then tried to hide his stare when Stephanie paused in the doorway, bent and stretched for him.\n\n\"Good morning, Daddy!\" she chirped, running up and giving him a big hug, mashing her tits into him.\n\n\"Morning, Stephie,\" he returned, as his big arms went around her.\n\nShe smelled like sweat and sex appeal. The scent made his big dick start to rise and push against Stephanie's leg. Stephanie looked up into his eyes, making sure that her cleavage was on display.\n\n\"I need a shower,\" she said, breaking away, \"I'm all sticky and sweaty!\" She teased, and brushed the back of her hand against his bulge. Feigning surprise, she gasped and whispered, \"Daddy! You should get someone to take care of that for you!\"\n\nWith a giggle, she stalked off, swaying her tight young ass for her father's pleasure. When she got upstairs, Tori was already in the shower. Stephanie decided to head for her room and pick out her clothes. Her mother was taking the twins out for a shopping trip at the mall this morning.\n\nTori, meanwhile, looked at herself in the mirror. She was stripped naked and staring at her haggard reflection. She hadn't slept well, and her head felt fuzzy. She just had no motivation to do anything today. What she found odd, however, was that her pussy was aroused. Her nipples stood out from her firm teenage tits, and she could feel herself getting wet between the legs.\n\nShe shook her head as if to clear it, which didn't work, and then stepped into the shower. As she started to wash away the sweat from her jog with her sister, she soaped up her tight body, lingering on her breasts, rubbing her sensitive nipples. When she made it down to her shaven mound, she found that her juices were flowing freely.\n\nShe cocked her head and listened for any signs of activity outside the bathroom, but heard nothing. She couldn't understand why her pussy was juicy. She didn't really feel horny, just mildly aroused; enough that her fingers lingered on the folds of her teen muff. She slowly teased her clit out, her breathing becoming more ragged. What was she doing? She hardly ever masturbated, and certainly not twice in two days. Yet, it was like her mind was possessed with the urge to push her fingers into her sloppy channel and bring herself off. Stephanie had ruined it for her last night. It had been so embarrassing!\n\nThe thought of her sister catching her with her fingers in her pussy was awful. She remembered clearly just how excited she'd been, how close she was to cumming, and then Stephanie barged in on her. The memory of her embarrassment at being caught seemed to just make the sexy teenager even hornier. What if she hadn't covered up in time? What if Stephanie had seen her plunging her fingers in and out of her juicy hole? What if she had stood in the door and just watched with that stupid grin of hers.\n\nWithout really noticing, Tori had squatted lower in the shower, spread her legs, and leaned against the wall. The hot water pounded down on her hardened nipples. Her fingers rubbed her clit furiously, then slipped into her pussy, back out to rub her clit, then back in. Before she knew what was happening, she was wildly fucking herself with her hand. The image of Stephanie watching her masturbate herself was lodged firmly in her mind. It was a terrible thought, and at the same time, it was turning her on. She could feel her stomach tighten, her legs quiver. She was so close. Just another minute! And then it happened. A loud pounding on the door completely broke her trance.\n\n\"Tori,\" she heard Stephanie's voice, muffled, through the door, \"Don't use up all the hot water! Remember mom's taking us shopping!\"\n\nThe horny, frustrated teen gritted her teeth in rage. She couldn't believe Stephanie had ruined it again! She was so close!\n\n\"Fuck off, Stephie!\" She yelled.\n\nStephanie didn't reply.\n\nThe water had cooled a bit, and Tori wondered just how long she had been in here finger fucking herself. She'd lost track of time. Briefly she thought about finishing herself off, but the mood was completely broken, again. She quickly rinsed the rest of the soap from her toned body and shut off the water.\n\nOn the other side of the door, Stephanie smiled to herself. Her stupid sister had no idea just how loudly she'd been fucking her overheated little cunt. Hell, Stephanie could hear her moaning and gasping as she walked past the door. It seemed only right that she should ruin Tori's pleasure again. For some reason, the thought of Tori sexually frustrated and unable to cum made the sexpot teen's warped mind rejoice. It wasn't long before the shower stopped running, and she heard Tori get out. Satisfied that Tori wasn't going to finish herself off, Stephanie went back to her room and collected her clothes, waiting her turn in the shower.\n\nAn hour later, Stephanie stepped downstairs. Her father was gone, undoubtedly in his little office in the back of the house. Her mother stood in the kitchen, dressed in a hot little tan skirt and high heels. She wore a loose-fitting blouse, the neckline of which plunged just to the tops of her full breasts.\n\n\"Hey there, sex on legs,\" Stephanie called out, laughing.\n\n\"Stephie,\" her mom smiled, \"Don't be crude. There's nothing wrong with a woman looking good. I can see you've learned that for yourself.\"\n\nThe busty teenager smirked. She's gone with a similar getup to her mother. Her skirt was scandalous, a small black mini. Her spiked heels made her toned runner's legs look even longer, and her top-heavy tits strained against her tight black top.\n\n\"I'll never hold a candle to you, mom. You're a total milf!\"\n\n\"Flaunt it if you got it, I always say!\" Her mother quipped.\n\n\"Well, you certainly got it, mom!\"\n\n\"Where's your sister?\"\n\n\"I don't know,\" Stephanie replied, \"She wasn't feeling well yesterday, and the same this morning.\"\n\nHer mother looked concerned, \"I hope it's nothing serious. I'll go and check on her.\"\n\nHer high heels clicked across the floor. Stephanie watcher her mother's gorgeous ass sway in her tight skirt as she walked past and climbed the stairs.\n\nMelanie paused outside of Tori's door, and quietly pressed her ear to the thin wood. Maybe her ears were playing tricks on her, but it sounded like Tori might be masturbating! Melanie was no stranger to masturbation herself. In fact, she was probably one of the horniest women she knew, and had been all her life. It was part of why she'd gotten pregnant so young, after all.\n\nEven though she was highly sexed, she'd never really thought about her daughter's having sexual urges in the same way she thought about her own. In fact, Tori and Stephanie masturbating was something that had just never crossed her mind, for some reason. And yet, here was the sound of Tori panting and moaning behind her closed door.\n\nBriefly an image of her beautiful girl repeatedly shoving her long, limber fingers in and out of her teenage snatch, writhing around in ecstasy on her bed, flashed through her mind. Despite how wicked the image was, Melanie felt her own pussy getting damp. She hadn't brought herself off in two days, and her husband hadn't fucked her since earlier that week, either.\n\nThe horny mother felt her cunt taking control of her, as it so often did. Maybe, if she was quiet, she could just nudge the door open and see what Tori was doing. Horrible thoughts raced through her mind. Tori's smooth runner's body spread out on her sheets, her fingers dripping with her fuck honey. It had been too long since she'd been with another woman. The opportunities just weren't as frequent these days.\n\nThough she knew it was wrong, the taboo excited her, as it always had. Very slowly, as if in a dream, her hand moved to the door handle. She eased it down, carefully, and felt the door give. She opened it just a bare crack and peeked in.\n\nPoor horny Tori had come in from her shower with every intention of getting dressed to go out with her mom and sister. She'd dropped her towel, and started to rummage through her closet for something to wear. She fumed with anger at her sister. She couldn't believe that Stephanie had managed to ruin her cumming again! At least she hadn't just barged in the bathroom, though. That would have been so humiliating! She felt her pussy spasm at the thought. What was wrong with her? That shouldn't have happened!\n\nAs she went through her clothes, one of her long dresses swished against her exposed mound, and she groaned. She was still so horny. Just that light touch of the fabric against her pussy was enough to set her off. Maybe she had time to finish herself off, if she was quick. Tori left the closet and threw herself on the bed. Within seconds her fingers were all over her hot sex, grinding her clit, swirling her pussy juice around her folds, her fingers plunging into her gripping hole. Soon she was happily humping her own hand, drawing closer and closer to the release she needed so badly. Her hips were humping up and down on her bed. Her head tossed from side to side as she moaned out her pleasure.\n\nThe peak was right there! Her stomach was full of butterflies as she pushed herself toward the edge. Through half-lidded eyes, she swept her gaze across her door and noticed that it was cracked open! Not only that, but there was an eye looking through the crack, watching her fuck her small pussy with her hand. The eye locked on to her gaze, and she noticed that it was her mother.\n\nHer mother was watching her masturbate! A wave of shame and humiliation swept over the pretty teen, and with it came a crashing orgasm. Unable to stop herself, Tori continued to fuck her slit with her finger as her mother watched. Her sweet little pussy gushed cream while she groaned and thrashed on the bed. She was so embarrassed! As the orgasm rippled through her body, she pulled up her sheets around herself.\n\n\"What...what the hell, mom!\" she cried.\n\nHer mother quickly stepped into the room and shut the door, hurrying over to her daughter as the horny teen shuddered with pleasure and shame.\n\n\"Baby, I'm so sorry,\" her mother said, \"Stephanie said you weren't feeling well, so I just came up to check on you, and...well...\" She was at a loss for words.\n\nTori began to cry, \"Y, you could have knocked!\" she wailed.\n\nMelanie stroked her daughter's pretty hair, soothing her, finally coming to her senses.\n\n\"Oh, baby, don't cry. It's alright. You have nothing to be ashamed of. Everyone likes to masturbate.\"\n\nCrying, Tori whimpered, \"But their moms don't watch them do it!\"\n\n\"I'm so sorry, honey,\" Melanie said, \"I didn't mean to.\"\n\n\"You won't tell anyone, right?\" Tori asked, thinking of Stephanie's stupid smirk, and the way she would tease her endlessly.\n\n\"Of course not, baby,\" Melanie assured her, \"What you do is your business. Maybe next time, though, you should lock the door.\"\n\nTori couldn't help but smile a little bit.\n\n\"We're going out shopping,\" Melanie reminded her, \"Are you feeling okay?\"\n\nNow that her horniness had subsided somewhat, Tori realized that she did not feel okay. Her head was still fuzzy, and she didn't want to get out of bed.",
        "\"You guys go ahead,\" she said, \"I don't feel good.\"\n\nMelanie nodded, saying, \"That's okay. You just rest up today. Call me if you want me to bring you anything home, alright?\"\n\nTori nodded.\n\n\"I love you, baby.\" her mother said, leaning in and kissing her daughter's forehead.\n\n\"Love you, too.\" Tori mumbled, and turned over in her bed to nap.\n\nMelanie got up and left the room, closing the door and clicking the lock on her way out. Outside, she breathed a sigh of relief. She couldn't believe she'd been caught watching, but at the same time it was tremendously exciting. The lingering smell of Tori's pussy, and the image of her bucking her hips as she came, their eyes locked on one another, was something that would fuel Melanie's fantasies for weeks.\n\nTori quietly sobbed into her pillow. She didn't understand what had possessed her to masturbate for the third time in two days. She was a good girl! Good girls don't finger their pussies three times in two days! And good girls certainly don't cum in front of their mothers! It was so nasty! Yet, the lingering memory of her mother watching her fuck her smooth pussy had her juices flowing again.\n\n\"No,\" she whispered to her pussy, \"stop it! I'm a good girl! You're not supposed to make me feel naughty!\"\n\nBut she did. She felt very naughty. As humiliating as it had been to get caught with her hands in her pussy, she couldn't deny that the shame had set off the biggest orgasm she'd ever had. Her head was still swimming from the stars that had exploded in her mind when she'd seen her mother watching her. Tori closed her eyes and tried to nap, but she kept playing the scene over and over in her head. Somehow, her fingers had found their way back to her pussy, and before she knew what was happening, her legs were spread and she was jilling off her cunny again.\n\n*Planting Seeds*\n\n\"Mom, do you think someone can masturbate too much?\"\n\nStephanie drove to the mall, her sexy mother in the passenger seat.\n\nMelanie thought for a moment, \"Well,\" she finally said, \"I suppose if it gets in the way of leading your life, then yes. Why do you ask?\"\n\nShe thought back to only a short time ago, picturing Tori bouncing on her bed in a lust-filled haze, oblivious to anything but her impending orgasm.\n\n\"I don't want to upset you, mom, I'm just worried about Tori.\"\n\n\"How so?\"\n\n\"Well, it just seems like she's been masturbating a lot lately. It's, like, all she ever does lately,\" the buxom teen lied.\n\n\"Everyone does it, Stephanie.\"\n\n\"I know that, but she just hasn't seemed herself lately. She's been saying she doesn't feel well, and then she hides in her room and fingers herself. I just don't know if it's healthy.\"\n\nHer mother contemplated that thought.\n\n\"You're both about to go into your last year of school, honey. There's probably some degree of trepidation and nervousness, and maybe Tori is just handling it a different way.\"\n\n\"I suppose so,\" Stephanie agreed, \"You're probably right. I'm sure I'm just being a worry wart!\"\n\n\"We'll just make sure that Tori knows we love her, and that there's nothing to worry about.\"\n\nStephanie agreed with a nod, and drove on to the mall.\n\n*Chronic Masturbation*\n\nIn her room, Tori was a sweaty mess of naked teenage flesh. After her fourth orgasm of the morning, her fingers looked like prunes. She had fallen into an exhausted sleep, but after an hour she was awake again, a lingering dream of her mother watching her in the back of her mind. The memory had driven her to bring herself off continually through the morning.\n\nShe couldn't understand why she felt this way. When she thought of how embarrassing the situation was, it just made her even more aroused! As though in a trance, the sexy teen had stumbled from her room, still naked, and stopped in the bathroom to relieve herself. Her lust-filled mind seemed only to be focused on her excited pussy. Her fingers weren't enough. She needed to try something new.\n\nLike a zombie, she found herself walking into her parent's room. It was no secret that her mother kept some sex toys in her nightstand. The twins had found them years ago while snooping around where they shouldn't be. Tori opened the drawer of her mother's nightstand and looked at the cornucopia of sexual devices laid out inside.\n\nShe had no idea what most of them were, but there were a variety of dildos and vibrators. She picked up a thick pink dildo, and a slightly smaller one. For a brief second her mind cleared, and she almost put them back. What was she doing? But then the thought of how good it had felt to cum on her fingers returned. If her fingers were that good, what would it feel like to use the toy?\n\nLike a little thief, she hurried back to her room and shut the door, locking it this time. Tori collapsed on the bed, the two toys in her hand. She looked at the thick pink one. It had a little switch that she flipped, and felt it begin to vibrate gently in her hand. Slowly, she moved the phallus to her swollen pussy, and began to rub it.\n\nThe vibrating plastic cock was amazing. Shivers of excitement emanated from her swollen pussy each time the toy rubbed across her clit and between her lips. What would her mother think if she walked in on her now, seeing her spread legs jerking while the stolen toy slid back and forth between her daughter's engorged pussy lips?\n\nHardly even realizing what she was doing, Tori stood up, keeping the vibrating toy between her legs, and walked to the door. She unlocked it, and turned the handle, leaving just a crack in the doorway. If someone walked by, they would certainly hear the buzzing of the toy, as well as her groans and squishy teenage pussy. They would probably put their eye to the crack, and then they'd see her playing with herself. She'd feel ashamed, embarrassed, humiliated.\n\nShe lay back down on the bed and started to fuck herself faster. The thick pink dildo squeezed into her tight young pussy, filling it with something other than her fingers for the first time. The feeling was amazing! Her tight walls seemed to suck at the toy, pulling it deeper inside her. She could feel her inexperienced pussy contract around the invading phallus.\n\nThe vibrations inside of her were such a new sensation, and in no time she was creaming all over her sheets again. As far as she knew, her father and brother were still in the house. They could very easily be peeking in the door right now, watching her cum all over her mother's sex toy. Just the thought made her teenage body quiver and spasm in orgasm as she pressed the toy against her clit.\n\nHer pussy was so slick with her young cream that the dildo slipped off of her clit, down between her ass cheeks, and bumped up against her anus. The sensation sent sparks through her body, and a little mini orgasm followed. Her head swam. She had never considered her ass to be a pleasure zone. The thought was disgusting! And yet, just the slight, accidental contact had been exciting. Feeling ashamed by her actions only made her more horny, though. Almost unconsciously, she picked up the smaller toy and placed the head at the entrance to her sweat and cum-drenched asshole.\n\nHer mind a haze of masturbatory lust, she experimentally pushed a little bit in. The rubbery toy slipped easily past her lubed sphincter, the first inch sliding easily up her virgin asshole. Surprisingly, it didn't hurt at all. Another couple of inches pushed inside of her, and the feeling was strange. There wasn't any pain, just an odd sensation of being full. Her finger on the end of the toy, she slowly pushed the remaining few inches into her backdoor and, in doing so, her finger accidentally switched on the vibrating function on the toy.\n\nThe poor teenager's mind suddenly exploded with stars, and she let out a long drawn out moan of pleasure as the shaking toy vibrated the walls of her tender young butthole. Her knees buckled, and her free hand grasped the second toy, pushing it into her well-used little pussy. Her first double penetration was just too much. The series of powerful orgasms, new sensations, her lust-addled brain just couldn't take anymore. Tori passed out from exhaustion with both toys still vibrating away in her holes.\n\n*Caught!*\n\nStephanie and her mother bumbled into the house with their arms full of shopping bags, giggling like a couple of teenage girls. The busty teen and her sexy mother were giddy with the teasing they'd been doing. All throughout the mall, heads turned as they sauntered past, the hot milf and her top-heavy daughter in short skirts drawing every eye. Husbands and boyfriends were slapped or dragged away, salesmen were left speechless, and by the time the two sex magnets were home they were both heady with arousal.\n\n\"I thought for sure that one in the blue tie was going to cum in his pants when you bent over for that bottom shelf,\" Stephanie said to her mother.\n\nMelanie laughed, \"Yeah, but it wasn't as good as when you kept bumping that big rack of yours against his back as you pointed out things for me to look at.\"\n\nStephanie grinned. It seemed as though, since she turned 18, her mother had been much more open with her. She liked the change. She was coming to find that her mother was just as much of a tease as she herself was.\n\n\"I don't know about you,\" Melanie said, \"But I'm beat. I think I'm gonna go have a shower.\"\n\nStephanie agreed, but first she dropped her bags in the living room and ran to the first floor bathroom.\n\nMelanie, however, made her way up the stairs. She was concerned about Tori, and wanted to check up on her to see if she was feeling any better. She quickly dropped her bags off on her bed, and made her way down the hall to Tori's room. The door was slightly ajar, which was puzzling, and she could hear some kind of low humming sound from inside. Peeking in through the crack, she was completely unprepared for the sight before her.\n\nShe quickly slipped inside and shut the door behind her. Her beautiful daughter was unconscious on the bed. Her whole room reeked of teenage arousal, a thick sweet scent that Melanie was all-too-familiar with. Tori's bed was a mess of sweat. Her sheets were soaking with pussy juice and perspiration. Her legs were spread open, and two of Melanie's dildos were lodged inside Tori's ass and pussy, still vibrating away. It was apparent to the more experienced woman that Tori had obviously cum herself into oblivion. Melanie recalled the many times that she herself had been in a similar state.\n\nHer hands shaking, Melanie looked down at her daughter, recalling her earlier conversation with Stephanie in the car. Maybe Stephanie was right. Tori had certainly overdone her masturbation today. Carefully, Melanie took hold of the vibrator in Tori's pussy and flipped the switch to stop the vibration. Tori didn't even move. She was obviously deeply asleep.\n\nThe smell of her young, virgin pussy was heavy on the toy. It was greasy with her teenage cum, slick and sticky. Horny with the taboo of what she was doing, but unable to help herself, Melanie put the dildo to her mouth and tentatively stuck out her tongue. Her head spun as she licked her daughter's cum off the toy, putting it into her mouth to suck all of the sweet nectar off of it. She sighed with happiness. It had been so long since she and her husband had shared any hot young pussy, and Melanie couldn't believe how much she had missed the taste of teenage cunt juice.\n\nAfter cleaning the toy with her mouth, she slowly eased the second toy from Tori's asshole and flipped it off. This was so dirty. Her mind was in conflict with her body as she slowly brought the toy to her mouth and tasted Tori's ass. She slurped it with passion, cleaning every drop from it. The task done, she turned her attention to her daughter. Tori's body was so hard, toned, beautiful. But this was her own daughter. She shouldn't have the feelings of desire that were welling up within her right now.\n\nHer mind flashed back to the last young girl she'd been with. Mike's babysitter when he was young had been a college freshman. The horny couple had seduced the younger college girl fairly easily, and for the next year they'd fucker her silly, both individually and together. She could remember clearly watching the tight young college freshman get her inexperienced pussy, ass, and mouth stretched open by John's huge cock. She recalled fondly the times that she had happily licked John's balls while his wife rode his dick up and down. She'd licked her husband's big loads out of the girl's ass and pussy many times, swapped his cum, fucked herself on the young girl's face. But that had been long ago.\n\nLooking down at her daughter's hot young body, Melanie recalled all of these things. But even as horny as the sight made her, Melanie was overcome with motherly love for the poor passed out teen. She took a box of Kleenex from Tori's nightstand, and used them to gently clean her daughter's ass and pussy of her juices. She didn't want to wake the young girl, and so she pulled the sheets up around her, quietly slipped out the door with her borrowed toys, and let Tori rest.\n\n*I Kissed a Girl*\n\nTori didn't emerge from her room by the time the family finished dinner, and though Stephanie had listened at her door a few times, she hadn't heard anything. Her mother, over dinner, told the family that Tori wasn't feeling well, and should be left alone for the night. A few times, she'd disappeared into Tori's room to check up on her, bring her water, and once something to snack on. Stephanie eavesdropped on those occasions, but wasn't able to hear anything but Tori sobbing quietly. The thought of Tori's tears was enough to make her evening a happy one, though.\n\nBy the time morning came, Stephanie was up fairly early. She was getting morning shakes ready for herself and Tori, just in case her sister came down for their morning jog. As usual, she put a drop of Mr. Hart's wonderful solution into Tori's shake. She had just finished dosing it when Mike came into the kitchen. She could clearly see his morning hardon in his boxer shorts, and was suddenly hit with inspiration. Since no one was around, she was fairly certain that it wouldn't be long before her brother was pawing at her body, probably looking to release the big load in his monstrous balls.\n\nSure enough, as she leaned against the counter, her back arched and ass sticking out behind her in her tight shorts, she felt Mike push up against her backside. One hand roamed up under her shorts, and she spread her legs a little, moaning as Mike's fat finger slid along the folds of her pussy. His other hand slipped into her shirt and groped one of her big tits.\n\n\"Good morning to you too, pervert,\" she said.\n\nMike only grunted, continuing to play with her body as his huge cock swelled in his shorts. Stephanie turned around, letting him pin her against the counter. She stuck her tongue in his mouth, tasting his foul morning breath, but not caring a bit. Her hand slipped inside his boxers, wrapping around his fat schlong.\n\n\"I'll bet you have a nice big load of cock cream inside those big balls of yours, don't you?\" She whispered in his ear.\n\n\"Mmhm,\" Mike grunted, pinching her nipple.\n\n\"You're probably going to make your poor little sister jerk off your swollen prick, too, aren't you?\"\n\n\"You know you want to,\" Mike said.\n\nStephanie purred, continuing to stroke his big shaft, taunting him further, \"Of course not. What sister wants their big brother's cock spewing a nasty load of cream in front of them? You're the worst brother ever,\"\n\nHe forced his tongue back down her throat as she increased the friction on his thick penis, then broke away and vomited more of her filthy talk quietly into his ear, \"There's something way wrong with you, if you think your little sister actually wants your big, nasty, brother cock anywhere near her. It doesn't matter if I don't want it, though, I know that you'll just push me down on my knees and rape my hot mouth until you explode, won't you?\"\n\nMike could only stand so much of his hot sister's nasty talk. He pushed down on her shoulders until she was eye-level with his throbbing dick. The fleshy monster tented his boxers as Stephanie's warm breath puffed out on it. Mike pulled his boxers down, and his cock popped out, slapping lightly against her cheek. Her breathing increased. She was panting. Her pussy was getting moist. She looked up into her brother's eyes, which were glazed over with lust. He was beyond control. Even if she had really wanted him to stop, there was no way he was going to unless his balls were empty.\n\n\"Open,\" he breathed quietly.\n\n\"Uh, uh,\" Stephanie teased, \"You're not sticking that nasty thing in my mouth!\"\n\nMike rubbed the bulbous head across her lips, smearing precum across them.\n\n\"Open up, slut,\" he said, more desperately this time.\n\nStill, Stephanie kept her lips sealed, daring him with her eyes, shaking her head.\n\nRoughly, Mike took her hair in his hand, and pulled her head back with it. Involuntarily, her mouth opened in surprise, and Mike quickly pushed his cockhead past her lips. Stephanie moaned as her brother's huge penis slid over her tongue, and pushed into the back of her throat.\n\n\"Mmmmph,\" she pretended to complain, putting her hands on Mike's legs and pushing as though to fight him off. Her feigned resistance only fueled her brother's horny urges, though. He tightened his grasp on her hair and fed his cock deeper into her mouth, holding 7 inches of the thick shaft in her throat as she tried not to gag.\n\n\"Take it you cocksucker,\" he hissed, \"suck down that brother cock. I'm gonna jerk myself off with your face,\"\n\nAnd that's what he did, relentlessly pulling and pushing his huge prick in and out of her sucking mouth. Grunting with exertion, Mike used his sexy sister's mouth to get his morning wood off. Stephanie was moaning with delight by the time she felt his cock throbbing in her mouth. She knew it wasn't going to be long.\n\nAs he pulled out of her mouth momentarily, she hissed at him to wait, and quickly grabbed Tori's shake off the counter. She quickly stroked Mike's quivering cock, jerking it for the big load that she knew was coming. A moment later, his hand gripped her ass cheek hard as he gritted his teeth. He wanted to roar, but couldn't risk his family hearing what was going on. Stephanie beamed with delight as she milked his big dick into Tori's shake, watching his huge creamy load spewing its contents. Finally, he stopped cumming, but his legs were quaking as Stephanie gripped his shaft.\n\nShe let it go and stared into Tori's shake. A thick film of sperm covered the top. She picked up a spoon and quickly mixed it all in until there was no sign of it. Mike slowly pulled up his boxers, tucking his dick away.\n\n\"Y, you're going to drink that?\" he breathed.\n\n\"No, silly,\" Stephanie, said quietly, \"This is Tori's.\"\n\nMike's jaw dropped. His sister's depravity was, at times, more than he could fathom. He could see that she was completely serious, too. She was going to feed Tori his cock cream. The thought make his big dick start to rise again. His stuck-up bitch sister was about to swallow his huge morning load, and had no idea.\n\nAs though she had been summoned by the thought, the two siblings heard footsteps on the stairs. Stephanie quickly wiped a string of saliva from her abused mouth with her hand as Tori rounded the corner in her jogging suit. Her blonde hair was pulled back into a ponytail. She looked more rested than the day before, but still had dark circles under her eyes.\n\n\"Good morning, sissy,\" Stephanie beamed, all smiles, \"Feeling better?\"\n\nShe handed Tori her shake, and her twin took it gratefully.\n\n\"Yeah, I guess so,\" she said, swirling her drink around, \"I guess I just needed to rest.\"\n\nShe upended the shake as Mike and Stephanie watched. Mike's eyes looked like they might pop out of his head. Stephanie quickly downed her own shake, kicking Mike's shin lightly behind the counter. He quickly made himself busy in the pantry, trying to hide his erection.",
        "\"Ready?\" Stephanie asked.\n\nTori nodded and the twins were heading out the door, Stephanie's big tits bouncing in her top, while Tori kept pace beside her. Stephanie shot her twin a sidelong glance, checking for any signs that the potent serum was working on her. Sure enough, within a few minutes, Tori started to lag just a step behind.\n\nPoor Tori didn't understand. She had awoken more invigorated this morning. Her head was a little hazy, still, but the long hours in bed had helped. Her mother had come in and talked with her a few times through the evening, comforting her as she told her about finding Tori with the dildos shoved up her tight teenage holes, laying in a pool of her own cum and sweat. Melanie told her how she had cleaned her up a little and let her sleep. She had taken her soiled sheets and replaced them with new ones, and assured Tori that she had nothing to be ashamed of. It was alright to experiment with your body. Everyone tried new things.\n\nWhile it had helped a little, Tori was still confused about why she had done any of it in the first place. She felt so ashamed about the way she'd left her door open, secretly hoping that someone would see just what she was doing in her room. She'd become excited at the thought that any of her family could walk by and see her ass and pussy stuffed with sex toys, and that she knew that the embarrassment would make her teenage pussy cum even harder. Just thinking about her day spent in bed masturbating was starting to make her wet.\n\nShe'd sincerely hoped that the morning workout would purge her mind and body. She's prayed that the lustful, nasty thoughts would be expelled, but instead she was slowing down. Her head was becoming more cloudy and confused by the second. Her pussy juice was starting to flow down her leg. What the hell was wrong with her? She never acted this way! Her life was in control. She was a track all-star, a top student, a wholesome and well-respected pillar of the school! She was always in first place.\n\nNow, though, her brain was foggy, and her stupid pussy was crying out for attention. She needed to fuck it with her mother's toys again. She looked at her bitchy, big-titted sister, now easily outpacing her on a simple morning jog. This wasn't right. Stephanie was the one who was always a step behind, not Tori!\n\nWithout warning, she stopped dead in her tracks and started to cry. Stephanie jogged a few paces before noticing that Tori was no longer by her side. She stopped, turned, and saw her sister with her head in her hands, tears flowing. The smallest twinge of remorse flashed through her mind, but the jealous teen quickly pushed that thought away. Tori deserved this. Tori was the bitch. Tori was stuck-up and thought she was better than everyone.\n\nStephanie walked back to her sister, feigning concern. She put her arm around Tori, and pushed her big tits against her.\n\n\"Tori? What's wrong?\" She asked, sounded so genuine.\n\nTori looked up at her with tear-stained cheeks, her eyes puffy and red.\n\n\"I don't know what's wrong with me, Stephie! I don't feel good, again.\"\n\n\"Come on, honey,\" Stephanie said, \"let's take you home.\"\n\nTori nodded and leaned against her sister, feeling lucky that Stephanie cared so much about her. Her sister wouldn't let anything happen to her.\n\nThe twins had only made it a couple of blocks from the house, so the trip only took a few minutes. Stephanie ushered her sister inside. The house was still quiet. Their parents hadn't yet made it downstairs, and Mike had vanished into his cave. Sniffling, Tori plodded up the steps to her room with Stephanie right behind her.\n\nThe girls went into Tori's room, and Stephanie shut the door behind them. The room still smelled faintly of young Tori's hot cunt, which she had played with so vigorously the day before. Stephanie tried hard not to smile at the thought. She grabbed the box of Kleenex from Tori's nightstand as she sat her sister on the bed. Carefully, Stephanie wiped Tori's eyes, handing her a couple of tissues to blow her nose.\n\nStephanie went to Tori's closet and pulled out some loose shorts and a tee shirt, taking them to the bed.\n\n\"Come on, sis,\" she said, \"Let's get you changed and let you lay down.\"\n\n\"I, I can dress myself,\" Tori said, sniffling.\n\nStephanie looked hurt, her face falling, she tried to portray the image of the most caring and concerned sister that anyone could ever hope for.\n\n\"Oh,\" she said, \"Okay. I just want to help,\"\n\nTori stood up, weakly. She was in no mood to fight. She held her arms up, still crying. Stephanie took hold of her track top, pulling it over her twin's head and tossing it aside. Tori's perfect boobs were held in place beneath her sports bra. Stephanie felt a stab of jealousy. Tori's tits were just the right size, not like her own over-sized fuck balloons. Tori sat back and Stephanie pulled down her track pants, discarding them with the shirt. She peered between Tori's legs. She wasn't wearing any panties! Clear fluid was evident on her legs. The little bitch was creaming right in front of her.\n\nStephanie stood up from the floor and leaned over to pick up the pajamas, in the process shoving her huge boobs into Tori's face.\n\n\"Stephie!\" Tori complained, her face muffled in Stephanie's cleavage.\n\n\"Sorry,\" Stephanie apologized, \"They just get in the way sometimes.\"\n\nShe pulled the top over Tori's head, making sure to brush her hands over Tori's smaller breasts in the process. She felt her twins' nipples harden, and her sharp intake of breath. Next, she slid the shorts over Tori's feet, catching the smell of her aroused pussy as she bent down. She pulled Tori to her feet, and slid the shorts up her long legs. Her hand \"accidentally\" rubbed against Tori's juicy cunt, eliciting a moaning from her sexy sister.\n\nStephanie looked Tori in the eyes, and quickly leaned in and planted her lips lightly on her sister's. Tori gasped, and for the briefest of seconds, didn't move. Then she seemed to realize what had happened, and pulled away.\n\n\"Stephie, what the hell?\" Tori hissed.\n\n\"I, I'm sorry,\" Stephanie stumbled, \"I just...you smelled really good, and I...well...I don't know. You just looked like you needed someone to love you.\" She blushed, feigning embarrassment. She knew that in her aroused state, Tori would just feel more confused about her feelings. Stephanie pulled her twin close and hugged her tightly.\n\n\"I'm sorry,\" she said again, \"please don't think I'm some kind of lesbo,\"\n\nStephanie's knee rubbed up against Tori's crotch, sending shivers through her body. Her twin could feel the slight convulsion as Tori's pussy twitched. Tori was so confused. It actually felt kind of good to have Stephanie's big soft tits pressed against her, and having someone hold her while she felt so confused and strange was comforting. Even so, she couldn't help but think about how Stephanie knew she had been playing with herself the other day, and how she had almost seen her.\n\nThat brought rushing back all of the memories of the previous days lengthy masturbatory session, and how dirty she had acted. Her teenage pussy was already soaking, and Tori could hardly wait to cum again. Still, when she'd felt Stephanie's lips, it hadn't felt bad. In fact, it had felt naughty, and exciting. It had felt shameful, and that feeling had only served to make Tori's poor pussy even hotter.\n\nBefore she knew what she was doing, she found herself carefully leaning back into Stephanie, pushing her lips lightly against her twins'. Stephanie sucked in her breath, and opened her mouth just a little bit, slipping her tongue into Tori's mouth. One of her hands, meanwhile, snaked down into Tori's shorts and between her legs. Tori moaned into her sister's mouth as her knees quaked.\n\nThis was so wrong! She shouldn't be letting her sister feel her pussy. She shouldn't be so turned on. She was a good girl! It was disgusting! Then Stephanie's finger found Tori's engorged little clit, and rubbed it. Instantly, the confused teen found herself bucking up against her sister's hand as she came violently. Her legs turned to jello, and she broke away from their incestuous kiss as she panted and came all over Stephanie's hand.\n\n\"It's okay,\" Stephanie was whispering in her ear, \"It's okay. You need this. You need to let it out, Tori. Cum for your sister.\"\n\nThe nasty words coming from Stephanie's mouth only served to make Tori more aroused. How could she have enjoyed that? It was so filthy. It was incest! She had just cum on her sister's fingers. She was a horrible person. Good girls didn't cum on their sister's hands. Poor Tori didn't know what to do. It had felt good, but it was so gross! She started to cry again, even as she continued to hump Stephanie's hand.\n\n\"Shhh,\" Stephanie was hushing her sobbing twin, \"It's alright, honey. Your little pussy is so horny from all those years of being the perfect girl. You have a naughty pussy, Tori,\" Stephanie went on, pushing two fingers up her twin's overheated snatch, \"It's a filthy little slut pussy, and it has to cum or you'll go crazy,\"\n\nTori buried her face in Stephanie's neck, smelling her shampoo, feeling the heat from her body as she let her sister fingerfuck her soaking teenage cunt. The nasty things Stephanie was saying almost made sense. Maybe she was right. Maybe Tori did have a naughty pussy. After all, a good girl wouldn't want this.\n\nShe was so ashamed of herself. A wave of guilt swept through her, and she came again, finally unable to keep herself standing. She fell back on her bed, shaking. Her legs were like spaghetti. Her stomach was tight and heaving. Her head was exploding with light and stars. She felt Stephanie push her fingers into her mouth, and without even thinking about it she tasted her own pussy juice as Stephanie fed it to her.\n\n\"That's a good girl,\" Stephanie was saying, \"clean up your fuck honey. Good, Tori.\"\n\nTori sucked all of her juices from her twins' fingers, and found that it was not unpleasant at all. The sweet taste of her pussy mingled with the salt from her tears as she continued to sob in her confusion. Was she some kind of lesbian now? Was she a pervert? Stephanie's fingers were gone now, and so was her sister. She hadn't even noticed her leave. Tori rolled onto her stomach and softly cried into her pillow. As she sobbed, her mind a whirlwind of emotion and confusion, her sensitive nipples rubbed against the sheets, causing her to moan. Without realizing it, her hand had found its way into her shorts, and she began to tease her soaking pussy again.\n\n*What Mike Saw*\n\nStephanie was overjoyed as she shut Tori's door, leaving it open just a hair so that she could peek in on her again later. Her perfect sister had just turned into a sobbing, pussy juice-sucking little slut right before her very eyes. The experience had left her own cunt screaming for attention. Silently, she thanked Mr. Hart for his excellent work, vowing to fuck the living shit out of him after she convinced her daddy to pop her cherry. As much as the excited teen wanted to go off and finger her own juicy box, there wasn't time.\n\nBy the time her parents came downstairs, Stephanie was humming to herself as she made up a big breakfast of waffles and sausage. Her handsome father strode into the kitchen wrapped in his bathrobe. Her mother was right behind, dressed in a skimpy little nightie. Their hair was damp and they smelled wonderful. Stephanie wondered if they'd been in the shower together. For just a moment, she pictured her mother pressed up against the shower wall as her hung father plowed her juicy pussy from behind.\n\nThe horny teen felt a stab of jealousy. Her father was the sexiest man she had ever seen. He was so confident, exuded sex appeal, and to top it off he was a wonderful person. Her mouth watered thinking about how it would feel to have his big dick spread open her virgin pussy, or push her face into the bed as he mounted her and made her take his huge prick into her ass.\n\n\"Morning, sunshine,\" he beamed at her, taking in the sight of her teenage curves in her booty shorts and halter top.\n\n\"Good morning, daddy!\" she cried, turning from the stove and giving him a big hug, pressing her huge tits against his chest.\n\nShe could feel his cock twitch beneath his robe, and she wished that he would just pull it out and shove her to her knees, press her head back against the counter and feed her every inch while she moaned out her lust. Instead, he broke away and went to the table, pulling up the morning financial news on his tablet. Her mother came and gave her a kiss on the forehead before pouring coffee for the both of them.\n\n\"Where's your sister?\" She asked, a twinge of concern in her voice.\n\n\"Still not feeling well. We came back from our jog early, and I put her back in bed. She's probably up there playing with herself.\"\n\nHer father coughed, and her mother frowned.\n\n\"Stephanie, that's not nice.\"\n\n\"Sorry, Mom.\"\n\n\"It looks like you have things well in hand,\" Melanie said, \"maybe I should check on her. I'll get her in to see the doctor tomorrow.\"\n\nStephanie watched her mother's gorgeous ass sway out of the room and up the steps. She turned back to her cooking, plunked a couple of waffles and some sausage onto a plate, and brought it over to the table. She placed the plate in front of her father, leaning across the table so that her big tits hung down in front of his eyes. He glanced up, pausing with his coffee halfway to his mouth.\n\n\"Thanks, honey.\" he stammered.\n\n\"Anything else you'd like, daddy?\" she asked coyly, still bent over the table.\n\nThere was a heavy silence between them for just a moment, during which her father's eyes were locked on her over-sized teenage fuck melons. He swallowed hard, and pulled his gaze away.\n\n\"I, um, I think that will do it,\" he choked out, \"maybe some more cream for the coffee?\"\n\nStephanie stood and blatantly pushed her tits out, asking, \"Any particular kind of cream you like?\"\n\nShe padded over to the fridge, opened it up and bent over, sticking her perfect, round ass out for her father.\n\n\"Well,\" he said, \"some milk, or the french vanilla will be fine. Lady's choice.\"\n\nStephanie grabbed the milk, and brought it over, popping the cap off. She stood at his shoulder and poured a dash into his coffee for him, then set it on the table. She threw her arms around his neck from behind and put her lips next to his ear.\n\n\"That nasty creamer shit is full of chemicals. You should stick with the milk. I can't have my big daddy getting all sick from a bunch of garbage! How could you keep your fat daddy stick up for mom if you put that shit in your belly?\"\n\n\"Stephie,\" he gasped, \"what's with you?\"\n\n\"Me? Nothing, daddy. I just want you to be healthy!\"\n\nThe teasing teen kissed his neck and pulled away, fleeing from the kitchen with her heart racing. She dashed into the bathroom to shower and bring herself off, the image of her father's huge prick in her mind.\n\nDown the hall, Melanie peeked through Tori's partially open door, watching as her hard-bodied daughter plunged her fingers in and out of her teenage pussy yet again. It seemed that Stephanie had been right. This was at least two days straight that Tori had hidden in her room masturbating. This time, though, she wasn't really hiding. She'd left the door open as though she wanted to be caught. Maybe she was developing a fetish for being watched?\n\nAs Tori writhed on the bed in pleasure, Melanie's hand strayed to her own pussy, which was quickly becoming excited again. She'd just cum hard while John fucked her in the shower, but the sight of Tori's naked teen flesh was enough to get her going again. As she started to massage her mound, Tori let out a long groan and bucked against her hand, cumming hard all over her sheets. Her orgasm seemed to go on forever, until finally, the exhausted teenager's hand drooped, and her head fell to the side. She had fucked herself unconscious again. Melanie quietly shut Tori's door, and went back down the stairs.\n\nJohn was still at the table, his breakfast gone. Stephanie was nowhere around. Melanie quietly came up behind her husband and draped her arms around his neck, just as Stephanie had done only moments ago. John looked over his shoulder, beaming at his sexy wife, feeling her breasts pressed into his back. She licked his earlobe and purred, running her hand down into his robe and rubbing his hard chest.\n\n\"Someone didn't get enough, it seems,\" he quipped, \"sausage?\" he held up a partially eaten sausage.\n\nMelanie giggled, and slid her hand further down his robe.\n\n\"I'd rather have this one,\" she hissed, wrapping her hands around his thick head.\n\nJohn growled deep in his throat. His dick was already half hard from watching Stephanie's teasing, and he was certain that's what it was. He couldn't fathom it, but he could swear that lately she'd been trying to get a rise out of him. John pulled his wife around, pushing his chair back in the process. She straddled his lap, letting his big dick rest between her legs as she pushed her tongue into his mouth.\n\nHer pussy was sopping, and his dick was getting harder by the second. She opened his robe, and without any ceremony, lifted her hips, pushed the thin nightie aside, and rubbed her pussy against his hard cockhead. As their tongues wrestled with one another, John felt her pussy start to squeeze around his cock, sucking him in. He wondered what had gotten her so worked up that she was willing to fuck him right at the table with the kids home.\n\nMelanie moaned into his mouth as a few inches of his huge prick slipped up her cunt. She thought about how Tori had just cum so hard she passed out, and the image of her daughter's sexy young pussy was at the front of her mind as John pushed himself deeper. She wondered, briefly, how hot it would look to watch Tori cum on a real cock, a big cock like her husband's. How sexy would it be to see her tight, inexperienced pussy get split open by a thick, foot long shaft like this? It would be like the sexy babysitter they'd fucked together years ago.\n\nThe memory of the young girl getting defiled by her husband's huge meatpole was always vivid. She had loved watching the poor girl lose control of her senses when John took her ass for the first time. The way she had, at first, moaned with pain, but then begged him to make her cum with his cock up her ass was amazing.\n\nMelanie remembered the first time it had happened to her, and the way she'd become addicted to it. Over time, she had done about any nasty, perverted thing her big-dicked husband wanted of her. Such was the power of the pleasure he gave her, the control his huge dick had over her body and mind.\n\nNow, as she felt all 12 inches of his manhood fill her up to the breaking point, she pictured her tiny daughter's tight little hole getting filled with this monster cock. Just the image in her mind had her bucking her hips, fucking herself silly as her clit rubbed up and down John's thick tool. She held tightly to him as his hands gripped her firm ass cheeks, pulling her up, and then letting her fall back down onto his rod. She was so heady with her repeated orgasms that she was hardly even a participant anymore. He simply grunted and used her pussy to jerk off his engorged prick. She was constantly quaking, her legs shaking, her breath coming in short gasps.\n\nHer husband's powerful tool filled her up so completely that she lost all sense of where she was. The only thing in the world was the giant meat stalk that repeatedly shoved itself into her soul, seeking release. She threw her head back and screamed, \"Ooooh, fuck, yes,\" as she felt John's huge balls swell against her ass.\n\nThen, with a roar like a lion he bathed her insides with a ridiculous amount of sperm. His cock was lodged all the way insider her, his balls against her ass as he let himself go. There was so much cum that it had nowhere to go. It gushed in rivers around his shaft, and somehow squeezed out of the tight seal of her stretched cunt to dribble down his balls. It pooled in his chair, dripped on the floor. He picked his quivering wife up and laid her back on the table, his big dick still tightly inside of her. He held her hips as he continued to milk his swollen cock with her tight hole.",
        "Melanie's eyes were rolled into the back of her head as she continued to cum over and over in waves. Drool had flowed from the corner of her mouth, and was pooling on the table. Finally, with a final push, John doubled over on top of his wife. Her clenching pussy twitched as his spent cock slowly slid from her cummy hole.\n\nWhen it popped out, a torrent of cum rushed out like a dam had broken. It flowed freely onto the table, dripping to the floor in thick white drops. Melanie lay twitching on the table, her legs spread wide, her breathing ragged. John, his big dick swinging, came around the other side of the table. Taking her limp arms in his hands, he pulled her to the edge of the table. Her head slid right off without resistance, and hung over the side.\n\nWith a grin, he pushed the big, deflating head of his slimy dick into her mouth. The sweet taste of his cum, mixed with her own pussy juice hit her taste buds and she moaned happily. Her fingers worked her clit, smearing her wetness all around as John used her mouth to clean up his powerful penis.\n\n\"That's my slutty little wife,\" he panted, \"Get it all clean. Swallow that spunk, you cocksucker. You know how much you love it,\"\n\nAnd she did love it. God, she loved it all. She eagerly lapped up every bit she could get, until he pulled it from her mouth. She was close to another orgasm, and as John lifted his heavy balls and placed them on her lips she went over the edge. He smashed his balls against her mouth, taking hold of her legs as they kicked in the air and holding them apart while her mind blew again.\n\nFinally, Melanie was fucked out. For only a moment she caught her breath, but then she felt John lift her and carefully place her on her chest on the table. He held her hair, and through watery eyes she could see the big puddle of spunk on the table, where it had gushed from her pussy. She knew what he wanted. Happily, she began to lick up the puddle of sperm, moaning like a whore the whole time.\n\nIt was just at this moment that Mike poked his head around the corner. He'd been drawn by the noises from upstairs, and had to know what was going on up there. The sight he beheld was like nothing he would have ever imagined. He'd always had the hots for anything with tits and an ass, and his mother was no exception. The very fact that it was his mother was one of the primary reasons that he found her one of the hottest women on the planet. As he rounded the corner, his mouth fell open. He stood dumbfounded. His mother was face down in a pool of cum, lapping it up like an eager puppy. His dad held her hair in a firm grip, and one of the biggest dicks he'd ever seen swung between his legs. He knew his dad was hung, and where he'd gotten his cock from, but he'd never seen it so blatantly displayed.\n\nUnable to move, or speak, Mike just stood and watched his mother swallow what looked like a gallon of sperm. It was all over the chair, the floor, the table. John and Mike locked eyes, and shared an instant of shock. Then, to his amazement, his dad put his finger up to his lips and gave him a wink. Mike's mouth worked, but his brain could not come up with a single thing to say, anyway. His dad waved him away quickly as his sexy mother was finishing her meal. With a final glance, Mike backed away and quietly retreated to his cave. His heart beat against his rib cage so fast he thought it would explode. His big cock throbbed in his pants.\n\nHe could hardly come to terms with what he had seen. In a daze, he had his cock in his hand, stroking it for all he was worth. The image of his sexy mother, her nightie bunched up around her waist, ass in the air, and face a mess of cum was all he needed. His balls burst and a huge torrent of cum flew from his cockhead to land all over his floor. He couldn't have cared less about the mess he made. He knew his parents were horny, kinky, and over 20 years he'd heard them fucking plenty of times. He'd just never seen it, never knew just what a total cumslut his mom was. The revelation had his young cock erect again in no time. He knew, then and there, that he had to get his dick into his mother. He just had to.\n\n*The Tease*\n\nStephanie emerged from the steamy bathroom wrapped in a towel. Her bulging young tits scraped against the rough cloth, causing her nipples to stiffen in a most delightful way. She walked down the hall, noted Tori's door was closed now, and stopped to listen. She couldn't hear anything inside. She was probably asleep. The sexy teen moved on, entering her own room, and checked her phone.\n\nTim, Tori's hunky boyfriend, had sent a text message. He wanted to know if she'd heard from Tori. She hadn't answered his calls for a couple of days. She toyed with the idea of telling him that Tori was busy with her fingers up her overheated little cunt, but instead settled on relaying that she wasn't feeling well. A moment later he sent over a thank you.\n\nShe dropped her towel, running her soft hands over her huge boobs, tweaking her nipples. She was so hot from finger fucking her sister to an orgasm this morning. The following tease she'd done on her father, and the way Mike had fucked her mouth, all culminated in an overwhelming urge to make her virgin pussy cum just one more time.\n\nShe knew, though, that when she got off it would make the feeling dissipate for a while, and she enjoyed being sexually keyed up like this. It made her feel so naughty. She'd also skipped out on the breakfast that she'd prepared for her parents, and her stomach was rumbling.\n\nGoing through her closet, she came up with something that could have been labeled an outfit, but was really just a getup to show off her curves. She hoped her father would be around the house today so that she could flirt and tease him. She'd heard him pound her mother sometimes four or five times in a day, so she knew that eventually he would give in. She just hoped it would be soon. His big prick was constantly on her mind these days, and she desperately wanted him to take her cherry.\n\nShe packed her round ass into some tight-fitting yoga pants, and pulled an equally tight tank top over her huge melons. Her hair still a frizzy mess, she bounced down the steps into the kitchen. Her father was gone, probably already in his office. Her mother was crouched on the floor, though, her nightie rumpled. She looked to be cleaning up something off the floor.\n\n\"Hey, hot stuff,\" Stephanie quipped, \"Whatcha doing?\"\n\nMelanie looked up at her stacked teenage daughter. Her face had the shimmer of having been recently cleaned. There were wet spots all over her nightie, though, big patches of filmy white.\n\n\"Hey, Stephie. Just cleaning up. Your father had a little accident with some cream. And you know that when boys make messes, we girls get to clean them up!\"\n\nShe didn't look too upset that she was cleaning up the mess.\n\n\"Was Tori feeling any better, when you checked on her?\" Stephanie asked.\n\nMelanie shook her head, \"She was taking a nap.\"\n\nStephanie nodded, saying, \"I hope she gets better. We've got finals this week.\"\n\nMelanie stood up and tossed a big bunch of paper towels into the trash.\n\n\"You girls are growing up so fast,\" she said, giving Stephanie a big hug.\n\nStephanie put her arms around her mother. This close, she could smell both Melanie's soap from her shower this morning, but also a tangy scent of cum. She was certain of it. The spots on her nightie, the cleaning. She felt sure that it wasn't coffee creamer her mom had been cleaning up. Somebody had sprayed a huge load of cum in the kitchen, and her mother had been the recipient of that big load. She was sure of it.\n\nShe felt a little buzz in her brain as she imagined her dad's huge cock hosing her mother with sperm. The horny teen's mouth began to water, just thinking of how much cum that giant fuckstick could pump out. Probably twice as much as Mike's. Stephanie loved cum. She loved having it on her tits, on her face, squirting down her throat. Breaking away from her mother, she changed the subject.\n\n\"Mom, can I ask you something?\"\n\n\"Sure, honey,\" Melanie said happily, \"you know you can always talk to me.\"\n\n\"Well, do you think I could be a model?\"\n\n\"A model? Baby, you're so pretty. Of course you could be a model. Why do you ask?\"\n\n\"I want to make some extra money over the summer, and I've been thinking of that ad we saw at the mall yesterday. The one for swimsuit models. I thought that, maybe, I could take some pictures and build a portfolio. Laying around in bikinis all day sure beats bagging groceries, or something.\"\n\nMelanie beamed, \"I think it's a great idea, baby. You know, your dad likes to do a little professional photography on the side. Just the occasional wedding here and there. Maybe he could help you put together some pictures?\"\n\nStephanie did know, and she hoped her dad could be convinced, as well. She just wanted her mother on-board with the idea, too.\n\n\"Do you think he would,\" she wondered aloud, \"I mean, he wouldn't think it's weird to take pictures of his daughter in a bikini?\"\n\nMelanie giggled, saying, \"Honey, regardless of whether you're his daughter, your father is a very red-blooded man. Any chance to check out a gorgeous young girl in a bikini is probably something he's not going to fight too hard.\"\n\nStephanie squealed with girlish delight, hugging her mom close and saying, \"Thanks mom! Can I go ask him? Is he in his office?\"\n\nMelanie gave her a peck on the head. Stephanie could smell cum on her breath.\n\n\"Yes, he's in his office. Don't bother him too much if he's busy, okay?\"\n\nStephanie nodded her pretty blonde head and dashed from the room, tits bouncing, down the hallway. Her father's office door was open, and she found him inside in front of one of his computers. He was on speakerphone with someone else, but grinned widely when he saw her and waved her inside. He held up his finger to indicate she should wait a second.\n\n\"Thanks, Al,\" he said into the phone, \"That should keep them happy. I'll get back in touch on Tuesday.\"\n\nThe man on the phone hung up. John spun his chair around to face his busty daughter.\n\n\"Hey, Stephie. What's up?\"\n\nStephanie entered full-on tease mode. She sauntered up to her daddy and plopped into his lap, wrapping her arms around his neck. Her wild, uncombed blonde hair tickled his nose.\n\n\"Daddy,\" she said girlishly, \"I have a favor to ask you,\"\n\n\"My wallet's upstairs, honey,\" John grinned.\n\n\"I don't need money, daddy,\" she laughed, \"well, actually, I do. Just not your money.\"\n\n\"I'm listening.\"\n\nStephanie adjusted herself a bit, rubbing her tight ass against his crotch. He still hadn't changed from his robe.\n\n\"Well, I was hoping to get a little different job this summer, and I saw this ad when mom and I were at the mall,\"\n\n\"Go on,\" he said, his cock jumped as Stephanie's firm ass rubbed against him. She smelled like fresh teenager, and her big tits were positively straining in her tank top to break free. Daughter or not, John was a pussy hound, and Stephanie was a gorgeous piece of teenage ass. He had never had any qualms about fantasizing, especially the way she'd been teasing him lately.\n\nShe continued, \"Well, there's an ad for some swimsuit modeling, and I talked to mom about it. She said it would be okay to put together a few pictures in a portfolio, and see if I could get the job. I was hoping that you would help me take some really good shots that look professional?\"\n\n\"Hmm,\" he considered, \"I suppose I could help out. I'm glad to see you're taking some initiative to make something on your own. What kind of dad would I be if I didn't lend a hand?\"\n\nStephanie squealed and kicked her legs like a little girl. In the process, her tits jiggled wildly, and her butt rubbed all over his lap. Unexpectedly, she gave him a quick kiss right on the lips. She didn't linger in any manner that seemed improper, though.\n\n\"You're the best, daddy! I can't wait! Can we do it this afternoon? Maybe out by the pool? Pleeease, daddy?\"\n\nHer big blue eyes were begging, her lips trembling. John's big dick rose until it was resting firmly against her ass. There was no way she couldn't notice, but she didn't say anything about it.\n\nLaughingly, John said, \"Alright, baby. Settle down, now. I'll need to check all my equipment, but I don't have anything important to do today, so sure. Let's say, maybe, two hours? I just have to finish up some emails and get things ready. I'll meet you out by the pool.\"\n\n\"O-M-G,\" she yelled, \"This is going to be so cool! Stephanie's gonna be a model,\" she sang, \"Stephanie's gonna be a model!\"\n\nShe leaped from his lap and swished her ass all the way out the door like she was on a runway. Poor John had to adjust his big dick. He'd certainly need to wear some extra baggy shorts this afternoon.\n\n*John and Melanie*\n\nAfter tossing her soiled nightie into the dirty clothes, Melanie put together some clothes for the gym. Despite her three children, she had the body of a college girl, and constantly worked to keep it rock hard and attractive. Not only was it for her husband's benefit, but she felt like, as the owner of a spa, she needed to portray an attractiveness that her client's felt like they could also attain. As she was packing her bag for the gym, John came into the room, looking a little flustered, and with his erection tenting his robe.\n\nMelanie stopped what she was doing and put her hands on her hips, asking, \"Are you okay? You look a little...turned on?\"\n\nJohn smirked. He had never hidden anything from his wife, and she hadn't from him. They didn't need to. They lived life on the same page, and that policy had provided them with years of happy marriage. Just last night, Melanie had opened up to him about how it had made her feel when she'd discovered their daughter with her ass and pussy filled with sex toys. She'd come clean about how she'd sucked Tori's wonderful pussy juice off of the dildos, and how horny the whole situation had made her. John had responded by tongue fucking her to multiple orgasms as he made her tell him exactly what she had fantasized about. Now it was his turn to come clean.\n\n\"So, Stephanie's told you about this modeling business,\" he began.\n\n\"Mmhm,\"\n\n\"And you're okay with our daughter modeling bikini's for strangers?\"\n\n\"She's an adult now, honey. She's also gorgeous, and if she wants to use her looks while she has them to get ahead a little, I'm okay with it. Just as long as she's safe,\"\n\n\"And you're okay with me helping her take racy photos for a modeling portfolio?\"\n\n\"Of course, baby. I'd rather it be you that some stranger, her first time,\"\n\nHer emphasis on first time was not lost on John.\n\n\"As long as you're okay with it,\" he said.\n\nMelanie could tell he was holding something back.\n\n\"What is it?\" she asked.\n\n\"Well,\" he hesitated, \"I don't know for sure, but I think Stephanie has been flirting with me. She's been, well, very affectionate lately, and I could swear she's trying to tease me,\"\n\nMelanie laughed, saying, \"Well, duh!\"\n\nJohn looked confused.\n\n\"Anyone could see that she's been teasing you,\" Melanie said, \"and pretty shamelessly, I might add,\"\n\n\"You know?\" he looked amused.\n\n\"Honey,\" she said, reaching into his robe and molesting his hardening cock, \"She was born of a full-fledged, professional cocktease,\" she ran her little tongue over his lips, \"and she's grown up to be a huge tease, herself. You should have seen her at work at the mall yesterday,\"\n\n\"And the fact that she's trying to cocktease her own father doesn't bother you?\"\n\nMelanie wrapped her hand around his thick shaft, pressing her body up against his.\n\n\"Truthfully,\" she hissed in his ear, \"No. it doesn't bother me. She's so sexy, isn't she?\"\n\nShe began to stroke his big boner, bringing it to life. John groaned at his wife's teasing.\n\n\"I know how much you love a big pair of young tits,\" Melanie went on, \"And how much we both love some hot, young, tight, pussy,\"\n\n\"You're so bad,\" he whispered, \"That's your daughter,\"\n\n\"And our daughter is a full-blown wet dream,\" Melanie said, feeling his bloated head, \"a teasing, bitchy, horny, little hottie,\"\n\n\"Mmmm,\" he hummed, \"She is that. But, you told me how you felt just watching Tori play with herself,\" he tried to argue, \"and we know that it's not right. Despite everything we've done together, all the pleasure, all the dirty, nasty, filthy sex, we've never once involved the kids,\"\n\n\"Would it be wrong to open up to them now that they're all adults,\" Melanie continued, \"wrong to let them know that they have a whole world of pleasure available to them, and wrong for them to learn about it with two people who love them, instead of getting into some of the...situations we did?\"\n\nShe was stroking his cock harder now.\n\n\"When you put it that way, it doesn't sound so bad,\" he said, but still sounded uncertain, \"What if we're wrong, though? What if Stephanie is just a tease, and likes it that way. What if she thinks it disgusting to do anything else?\"\n\nMelanie stuck her tongue in his mouth and jerked his big dick. After a second she pulled off his lips and said, \"Honey, that girl is so horny she's about to burst, trust me. She's got a serious daddy complex, and if she can't get what she wants from you, you can bet that eventually she'll go find some dirty old man to do it for you. And you know what else? The whole time, she'll be thinking about you,\"\n\n\"I don't know, Mel,\" he said, his breath raspy, \"Do you really think that's what it is?\"\n\n\"Baby,\" she assured him, \"I think it's time some things started changing in this family, and all of the kids are adults now. They're good kids, and we love them. There's nothing wrong with love, right?\"\n\nJohn agreed. It was hard to disagree with a woman who was stroking your cock so expertly.\n\n\"As long as we're divulging all of our secrets and hidden desires,\" he said, \"there's one more thing...\"\n\n\"Mmmm, what's that?\"\n\n\"Mike saw us, this morning,\" he said, \"he walked into the kitchen while you were...cleaning up the table,\" he grinned ruthlessly, reaching up to fondle his wife's beautiful tits.\n\nMelanie gasped, her voice a hushed whisper as she said, \"You mean, when I was licking up that big pool of your spunk off the table?\"\n\nHe nodded, \"Saw it plain as day. I waved him off, but he certainly got an eyeful. No doubt about it now. He knows that his mom's a horny little cumslut,\"\n\nMelanie moaned as she held her husband's cock.\n\n\"How does that make you feel, baby?\" he asked, \"to know that your son saw you lapping up that big pool of cum like a hungry kitten?\"\n\n\"Oh, God,\" Melanie hissed, \"do you think he jerked off to it?\"\n\nJohn had to laugh. His wife was amazing. Where most women would have been appalled at the thought of their son seeing them in such a compromising scenario, Melanie only wanted to know if Mike had cum because of her.\n\n\"Probably,\" he said, \"I'll bet he's down in his room right now stroking off,\"\n\nMelanie smiled, dropped her husband's cock, and composed herself.\n\n\"Well,\" she said, \"I guess I'm glad he's got something other than porn to get his rocks off to. Now, I'm going to work out. I'll go to the store after, and I'll plan to be home promptly at 5. Until then, you are in charge of this madhouse. Try not to burn it down, hot stuff.\"\n\nShe grabbed her bag, slung it over her shoulder, blew him a kiss, and was gone. John's boner was at full attention, disregarded by his sexy wife as though it were a toy she was tired of. Not only that, but he was due to meet up at the pool in back soon, and there was very little chance that he'd be able to hide his huge meat from his teasing daughter. Now, though, he wasn't exactly sure he wanted to.\n\nThe fact that his wife had pretty much given her consent to allowing Stephanie to seduce him was something that he couldn't yet comprehend. He wasn't even sure of his own feelings, for that matter. Yes, Stephanie was gorgeous. She was a tease. She obviously wanted to arouse him. Could he allow himself to let it happen, though? Heaving a big sigh, he instead focused his energy on getting into a pair of shorts, and then making his way to his office to break out the camera equipment.",
        "*The First Taste*\n\nThe early summer sun blazed down on the Hamlin's back yard. John had opened up the pool a month ago, but Stephanie just hadn't really taken the time to enjoy it much this year. Of course, she'd worked on her tan a bit, but hadn't been in the mood to swim much. Today, though, the pool area held new promise.\n\nShe was sure that baring her body for her father in all manner of skimpy swimsuits would help her seduce him. She'd seen her parents extensive collection of teenage porn, and knew that they were into younger girls. Her poor, horny, teen pussy throbbed with need. She was so tired of just using her mouth. She desperately wanted to know how a real cock would feel buried in her hot little snatch.\n\nShe carefully laid out a variety of swimwear and beach attire on the lounge table, along with a bottle of sun oil. She figured that the pictures would look better if her skin was shiny. The modeling job wasn't only to help with her father's seduction, after all. She was genuinely interested in making some money for herself. If she could do it by showing off her hard little body, and making men want to jerk off their dicks to pictures of her, so much the better. Wrapped in a towel, she laid herself out on a lounger by the pool to wait for her father to arrive.\n\nShe didn't have to wait long. John came out carrying two cases of camera equipment. He set them in the shade of the back porch, set up a tripod, and placed one camera on top. He set out a smaller handheld camera, and a second tripod to capture video. He could probably get some great stills from the video as he had Stephanie change poses and move around. His stacked daughter laid out on a lounger, wrapped in a towel, with a pair of big sunglasses on her face. Her lips shimmered with gloss, and she flashed him a big smile, sexily bending one leg while she spread her thighs just slightly. John smiled to himself. She knew what she was doing, alright.\n\nEquipment ready, John walked over to stand over her. His flipflops smacked the concrete with each step closer. He wore a pair of long, baggy shorts to hide his massive cock. His chest was bare, and he wore a visor to block the sun.\n\n\"Hi, daddy,\" Stephanie called, \"Isn't it a lovely view out here today?\"\n\n\"Sure is,\" he replied, drinking in her long, smooth legs.\n\n\"Daddy, could you oil me up? I think the pictures would look better if my skin was glistening,\"\n\nShe held up her bottle of oil in her dainty hand. John took it.\n\n\"Sure, baby. Why don't you lose the towel,\" His voice almost cracked as she grinned at him.\n\nStephanie stood up, put her back to him, and unfastened her towel. She glanced over her shoulder as she slowly lowered the towel, exposing her bare shoulders, then the strap of the tiny bikini she had chosen to model first. Finally, she dropped the towel. John's breath caught in his throat as the thin strap of cloth cut the crack of her perfectly rounded teenage ass. She kicked it away with one leg and laid face down on the lounger.\n\n\"I'm ready for you, daddy,\" she said quietly.\n\nHer whole body quivered with excitement. She was about to feel her father's strong hands stroking her bare flesh. She wanted to jump up and stick her tongue down his throat, and beg him to please take her. She could hardly stand the anticipation. What if he didn't want her, though? What if he was disgusted by the thought of plunging his huge tool into her tight young body? She'd seen some incest porn in her parents collection, so she was sure it was something they'd fantasized about in the past. What if it was only that, though? Something that he would never consider doing for real?\n\nA moment later she felt his touch on her skin. The cool oil and his warm hand were an erotic contrast. He began in the small of her back, spreading the oil very liberally into her teen flesh. Her breath blew out of her body, and she tensed.\n\n\"Just relax, baby,\" her father said softly, \"I'm sure the pictures will turn out great. You're so beautiful.\"\n\nShe sighed contentedly as he smeared the oil on her back, working it up her spine, into her sides. He pressed it up under the strap of her bikini, and she imagined him pulling the knot free and letting her top fall away. Her breathing became more ragged. The feel of his hands was incredible!\n\nHe massaged the oil into her shoulders next, his touch gentle but firm. More oil into her neck, then back down to her back. In a few minutes her skin was glistening, but he wasn't done. He slowly worked more oil into the backs of her legs, starting low with her ankles, and ever so slowly working his way up her hard legs. She giggled a little as he touched the backs of her knees, tickling her ever so slightly.\n\nShe was panting by the time his hands worked their way up to the top of her legs. He was so close to her ass. He rubbed the oil onto the inside of her thighs, his cock starting to swell in his shorts.\n\n\"Spread your legs,\" he whispered. The words almost made the oversexed teen cream herself.\n\n\"Yes, daddy.\" she said obediently, and spread her legs a little wider. The bikini bottoms were so small that she was sure he could see her exposed, puffy, teen pussy. He worked the oil into her inner thighs, his fingers dangerously close to her wet cunt. Then his hands were sliding up the globes of her ass, the slick oil causing them to slide easily over her cheeks. Sexy young Stephanie could feel her pussy spasm as her father's big hands massaged her ass. Her head reeled at the thought of him spreading her cheeks and shoving his tongue up her oiled up asshole. Her butt squirmed under his touch and she couldn't help but moan. Then his hands were gone.\n\n\"I think the back's done,\" John said, \"How's it feel?\"\n\n\"Great, daddy,\" she said truthfully, \"Are you okay to do the front?\"\n\n\"Sure, honey,\" he accepted happily.\n\nIt was an intense battle with his penis right now. The supple teenage flesh beneath him was just begging to be ravaged. He hardly cared if this little cocktease was his daughter. He wanted to watch her little pussy spread open as he worked his huge shaft up inside her.\n\nStephanie turned over, and John suppressed a groan. Her bikini top was almost as small as the bottoms. It was hardly more than a couple bits of fabric over her hard nipples. Her big tits spilled out around them, firm and plump on her chest.\n\nJohn began at her feet, working his way up slowly, oiling her ankles, then her calves, up to her thighs. He smeared the oil on her inner thighs, purposely brushing his thumb against her pussy lips, feeling her jump at the intimate contact. He could see her chest heaving with excitement.\n\nShe was absolutely turned on by this. He straddled the lounger and worked the oil into her stomach, watching her beautiful face the entire time. She bit her bottom lip, as though afraid to open her mouth. She felt that if she did, she'd scream. His hands moved up from her abdomen, slid into the valley between her breasts. Stephanie's brow was furrowed in concentration.\n\n\"Don't forget my big tits, daddy,\" she heard herself whisper.\n\nJohn grinned, and did as she asked. He added more oil, and his hands cupped his daughter's big tits, smearing them from the bottom of the perfect globes, and then sliding under her top. When his hands passed over her nipples, Stephanie couldn't hold back. All the tension in her body suddenly shot down to her pussy, and her hips began to wriggle back and forth of their own accord. With her father's hands on her tits, Stephanie came right there by the pool. Her young body shook as she moaned and tossed her hair. It wasn't a powerful cum, but John's experienced eye saw it for what it was.\n\n\"I, I'm a little sensitive there, daddy,\" she said, blushing.\n\nJohn's dick was now hard. It tented his shorts.\n\n\"I'm sorry, honey,\" he said, pulling his hands away, \"are you okay?\"\n\n\"Oh, yeah,\" Stephanie said, \"I'm great. I think I'm good and shiny, now!\"\n\nHe couldn't tell because of her sunglasses, but he was pretty sure she was staring at his hardon, which was quite evident.\n\n\"I'll grab the camera,\" he said, turning away.\n\nStephanie tried to collect herself. Her father had just made her cum by touching her tits. Her father had touched her tits! Holy shit! She had craved this attention for years, and it was finally here. He'd obviously been aroused. There was no hiding a dick like that when it was hard. Stephanie fought to get control of her breathing. Her daddy was coming back with the camera.\n\n\"Ready for a couple of shots?\" he asked, his dick still hard. He wasn't trying to hide it. She took that as a good sign.\n\n\"Sure, daddy. How do you want me?\" She grinned.\n\nOver the next hour, Stephanie teased the living hell out of her father, and he her. He instructed her to pose in several different ways, some on the lounger, some against a tree, on the table, by the water, in the water, and in various swimwear, some fairly conservative, some of it utterly lewd. Throughout the process his cock never was in danger of softening, and by the time he finished the last shot Stephanie's little cunt was sopping wet. Finally, he set the camera aside and jumped in the pool. He was under for a few seconds, and then emerged with a gasp.\n\n\"Damn, but it's hot out here!\" he yelled.\n\nWasting no time, Stephanie followed him in, making sure to splash him as much as possible. He was sputtering as she came up under him, brushing her toned body against his hard rod. John gasped as she broke the surface right under his nose, coming up fast so that her lips landed right on his. Rather than pull back, he found himself lingering, feeling her young lips pressed against his. His arm went around her waist, and her hand slid into his shorts. She wrapped her small hand around as much cock as she could, moaning into his mouth as her lips opened and she felt his tongue slip inside. Finally, he broke away, still holding his sexy little girl.\n\n\"Stephie,\" he breathed, \"I know you've been flirting with me,\"\n\n\"Was it that obvious, daddy?\" she asked.\n\n\"Only after your mother pointed it out,\"\n\nShe gasped and almost let go of his cock, but she'd wanted it for so long that she held on, \"M, mom? Mom knew?\"\n\nHe nodded, \"Your mother's the greatest tease I've ever known. She can spot a flirt a mile away, and you, have obviously inherited her talents in that regard,\"\n\n\"Daddy,\" she whispered.\n\n\"Stephie,\" he said gruffly, \"look. I know what it's like to be a horny teenager. Hell, I was one not too long ago. You're an adult now, though. That means you need to think very carefully about the things you do, and the repercussions of your actions,\"\n\n\"Oh, I have daddy! I've been thinking of you for a long time,\"\n\n\"Just hear me out, Stephie. You're my daughter, and that means that there are things that some people might think are wrong, you know that,\"\n\n\"You mean,\" she put her lips to his ear, \"things like daddies pushing their big, swollen, daddy cocks into their daughter's virgin pussies? Or do you mean horny little girls trying to fit as much of their daddy's big dicks into their throat as they can manage? What about holding your daughter down while she offers up her tiny asshole for you? Would some people say those things are wrong, daddy?\"\n\nJohn's cock lurched under the water. Fucking fuck! His daughter was a pro at spewing nasty talk. Any restraint he had was beginning to crumble.\n\n\"I, uh, yes...yes, Stephie. There are people who would say all those things are wrong,\"\n\n\"Would you say they're wrong, daddy?\" she asked, stroking his stiff pole under the water, \"Would you say there's anything wrong with a loving daughter offering up her juicy, teen cunt for her daddy to enjoy whenever he wants?\"\n\nUnable to control himself, John took hold of one of her big tits. Stephanie moaned.\n\n\"Those are yours, too, daddy. It's all for you. I've been saving my pussy just for your big, hard, daddy dick,\" she moaned.\n\n\"Stephie, you know that nothing will ever be the same, right? Once you cross this line, I'm going to make you addicted to my cock. You're going to do anything I want, just like your mother, just so you can keep getting filled by me. And your mother will know. She'll know about it every time I shove my cock into your willing little cunt, and she'll know about the way you scream and cum when I teach you how to take the whole thing up your ass,\"\n\nStephanie was lost in lust. Her father was a dirty talker, too. She was on the edge of cumming just from his naughty words. She was so close to having him. She just had to say it, and her cherry was gone. Her daddy would take her and make her a woman.\n\n\"Yes,\" she said without hesitation, \"I want that, daddy. I want it so bad. Please, please make me your slut. I want to be your slut, daddy, please.\"\n\nShe sucked on his tongue, her small hand jerking his huge cock while he molested her big tits. They made out in the pool a few more minutes, oblivious to everything else.\n\n\"Stephie,\" he pulled back, \"This is something I have to think really hard about. I'm not stupid. I know that things in our family are starting to change, now that you're all adults. But that doesn't mean I'm ready to rush into anything. If you really love me, you're going to have to accept that. If we, as a family, decide to take our relationship in a new direction, it's going to be one filled with love and respect. That doesn't mean it won't be kinky, dirty, and filled with debauchery, but it's not something to take lightly. Do you understand?\"\n\nStephanie nodded her head, her face falling in disappointment. She should already be feeling his big cock bumping against her uncontrollable slit. She should be choking on his fat cockhead! Before she knew what was happening, he was lifting her from the pool and sitting her on the edge. He spread her legs, revealing her puffy little teen cunt. And then, swiftly as a cobra striking its prey, her daddy buried his face between her legs. The sudden contact of his hot breath on her pussy made her gasp, and then her bikini bottom was roughly pushed aside. Her body convulsed in mind-bending pleasure as John's tongue slowly ran the length of her exposed slit.\n\n\"Oh, fuck, daddy! Oh, fuck! Yes! Push your tongue up into my virgin cunt. I want you to taste what you can have whenever you want. It's all yours, daddy. It's your pussy,\" she screamed.\n\nJohn took his sweet time on his sexy daughter's young, dripping box. The smell of her arousal and chlorine from the pool was going to his head. It had been years since he'd tasted the unspoiled fuck juice of a virgin pussy. The fact that it was his busty daughter's only made it more exciting, more nasty. Stephanie's hands were on the back of his head. She was moaning and thrashing her hips, desperately fucking her wet pussy against his tongue.\n\n\"Fuck me with your tongue, daddy! Make your little girl cream on your face! I'm gonna fill your mouth up with fuck honey, daddy. It's going to taste so good! Oh, God, Oh God, Oh God, I'm gonna cum for you, daddy! Your slutty daughter's going to cum on your tongue!\"\n\nAnd cum she did, harder than any time in her young life. Her hot girl juice squirted like a fountain on her father's face, bathing his tongue and lips with her sweet cum. She fell back on the concrete, her head spinning with unbelievable pleasure as her daddy sucked her clit and rubbed her ass and pussy holes with his big fingers. When he slipped one finger in cunt, and another up her tight little ass, Stephanie completely lost control. Her mind could no longer form a coherent thought or word. Finally, he pulled his tongue from her dripping box, crawled from the pool and stuck his tongue into her mouth.\n\n\"Taste your pussy, baby,\" he hissed, \"lick up your sweet cum like a good slut,\"\n\nWild with desire, she complied readily, licking all of her juices from his face, his lips, sucking her pussy off of his tongue. When she was satisfied that she had cleaned up well enough, she finally opened her eyes, seeing her father grinning down at her.\n\n\"Daddy, please..please fuck me...I've waited so long,\" she begged.\n\nJohn shook his head, \"Not today, baby. That was just a tease. I have a lot to think about before I bury my big cock inside that firm little body of yours. Until then, I want you to think about it, too. I want you to play with your naughty little cunt while you think about your daddy pushing his fat prick up your pussy. If it happens, it's going to be unexpected. You'll never know. It could be tonight, or next week. Maybe while the whole family is eating dinner, you'll be sitting on my lap with a foot of cockmeat stuffed inside of you. You'll never know until it happens. If it happens. Now, you should get cleaned up. Your mother will be home soon, and I have a lot to talk about with her.\"\n\nWith that, he stood up, collected his camera equipment, and left his daughter trying to regain her composure. As her mind swirled with what had just happened, she couldn't help but feel disappointed. She was so sure that her plan would work. He was supposed to shove his big tool into her and make her his little teenage fuckhole. Instead, he'd eaten her pussy like a madman, made her cum harder than ever in her life, and then left things wide open.\n\nOne thing was certain, though. She was more determined than ever to get her daddy's huge cock in her every hole, and living in a family of sexual deviants, that should take much more doing. Today was a success, in reality. He hadn't turned her down, and he hadn't been disgusted with her confession. There was still a chance, and that gave her hope. As her high came down, she stared up at the sky. The sun was lower, less blazing, and as she soaked it in her eyes fell on an upstairs window.\n\nIt was Tori's room. Maybe Tori had seen what happened. The thought made Stephanie very hot again. She hoped that Tori had watched her daddy bring off her pussy with his expert tongue. On wobbly legs, she stood and collected her swimsuits from the yard. She needed another shower.\n\n*Sharing with Melanie*\n\nMelanie returned from the gym sweating, sore, but happy. The workout had burned off some of the sexual energy she'd left the house with, but while driving home she had begun to wonder if anything had happened while she was out. Stephanie would have, likely, taken advantage of this photo shoot to mercilessly tease her father. And she had purposely left him in a highly aroused state, just to encourage him to maybe feel out his daughter's intentions toward him. By the time she pulled into the driveway, her panties were soaked with a combination of sweat and her horny juices.\n\nShe came through the front door, tossing her gym bag in the entryway. It could be dealt with later. She took her small sack of groceries into the kitchen, and was surprised to see Tori and Stephanie already there. Tori looked a little more lively, probably driven from her room by pure hunger. She'd hardly eaten anything the last few days. The two girls were in the midst of putting together some kind of pasta dish, the amazing smell wafting out of the kitchen. She recognized Italian spices in the air, and the smell of fresh baked bread. A steaming pot of sauce simmered on the stove. Mike was there, too, setting places on the table.\n\nThe three children stopped what they were doing as she entered, all smiles, and yelled, \"Welcome home, mom!\"\n\n\"Well, isn't this a pleasant surprise. My three beautiful children, all getting along, and cooking a family meal? I'm inclined to ask what you did wrong, and how much it's going to cost us to fix,\" she jabbed.\n\nStephanie laughed, \"Oh, mom. Nothing's wrong! Everything is great! We just want you to know how much we appreciate everything you guys do, and how much we love our family! See, even Tori pulled her hands away from her pussy long enough to help!\"\n\n\"Stephie! Shut up!\" Tori cried, blushing a deep red.\n\nMike laughed quietly, his cock aching in his pants at the sight of his hot sisters and his equally sexy mother. He couldn't take his eyes off of her. Her body shone with sweat. There were splotches of it on her sports bra, and her tight little workout shorts. He imagined, for a moment, that the stains weren't sweat, but rather blobs of hot cum that some gym stud had sprayed her with after she sucked him off in the shower room. Maybe he'd let loose a hose of semen on her pretty face, and she'd eagerly lapped it up and asked for more. His dick was throbbing as he hid it behind the tabletop.",
        "\"Where's your father?\" Melanie asked.\n\n\"Back in his office,\" Stephanie replied, \"touching up my fantastic new modeling photos!\"\n\n\"Modeling photos?\" Tori questioned.\n\n\"Your sister is going to apply to do swimwear modeling over the summer. Your dad helped her take some pictures this afternoon to make a portfolio.\"\n\n\"Is that what the fucking racket was out there?\" Tori said.\n\n\"If you want to, you can go tell dad that dinner's about done,\" Stephanie said to her mother, ignoring Tori's comment.\n\nMelanie nodded, set her grocery bag on the table, making sure to lean over the table to give Mike a great view of her glistening cleavage.\n\n\"Could you please put these away for me, sweetie,\" she cooed at her handsome son, \"I want to make sure they don't spoil.\n\n\"Uh, sure, mom.\" the infatuated college boy replied.\n\nMelanie rounded the table, and gave him a big hug, pulling him against her tits.\n\n\"You're such a good boy,\" she said, and glancing up to make sure the girls weren't watching, she leaned in and gave Mike a quick, but slightly more than motherly peck on the lips. She winked, and turned around to find her husband.\n\nMike was dumbstruck. Did his hot mother actually just hit on him? There was no way. He must still be fucked up over what he'd seen her doing this morning. He knew his parents were freaks, but hitting on their own kids? There was no way in hell. Trying to hide his raging erection, he began to put her groceries away.\n\nDown the hall, Melanie entered her husband's office. He was touching up a variety of photos from Stephanie's shoot earlier in the day. She closed the office door quietly, and came to stand beside him. John looked up and grinned like a devil, nodding toward the screen. A series of photos showed their stacked daughter in everything from a conservative one-piece suit, to skimpy little beach wear, to more revealing bikinis, and finally in a scandalous micro-bikini that may as well have left her completely nude, for all the flesh it managed to hide. Melanie felt her arousal spiking as she looked at the images.\n\n\"My god,\" she whispered, \"she's even more beautiful that I'd imagined. I can't believe you had the restraint not to fuck her right there. You didn't fuck her, did you?\"\n\nJohn shook his head, saying, \"No. We did have a little talk about her flirting, and she came clean. Well, she came clean in about the filthiest way possible, practically begging for me to take her cherry, and make her my personal fucktoy. That girl is as wild as her mother,\" his hand cupped Melanie's aroused pussy mound, \"There's something else you might like to see, though,\" he grinned devilishly.\n\nMelanie raised an eyebrow. He had her curious. He minimized the collage he was working on, and brought up another file. This one was a lengthy video of the entire photo shoot. Most of it was what she had expected. There was John, shirtless, rubbing oil into Stephanie's hard body. They went through a variety of poses, shots, John directing her to try different things, work various angles, and then he leaped into the pool. Stephanie was right behind him.\n\nThe camera captured perfectly her emergence from the water, her forceful kiss on John's lips. Melanie's breathing became rapid as she watched her daughter skillfully make out with her husband. It was clear that her hand was stroking his cock. The video was too far to have picked up sound, but she watched John pull away, talk for a moment with Stephanie. She looked disappointed for a moment, but then John picked her up and set her lithe body on the side of the pool. Her daughter's legs spread wide, and then her husband's face disappeared between Stephanie's legs.\n\n\"Oh my god,\" Melanie whispered, \"You...you ate her pussy?\"\n\nJohn looked up at his wife. Her eyes were glazed over with lust, and her hand was now inside her shorts. He smiled and turned back to the video. On the screen, the camera showed Stephanie grinding her hips against his face, her head thrown back in pleasure. Her long blonde hair shook from side-to-side as she experienced her first orgasm from a man's tongue. After only a few moments, she collapsed on her back, her big breasts heaving.\n\nHer body continued to spasm as John's face came back into view. He crawled from the pool and stuck his tongue into his daughter's mouth. Melanie moaned and worked her fingers over her engorged clit. The sight before her was incredible. She had never imagined how erotic it could be to watch John bring off his own daughter with that skillful tongue. Finally, he walked away, leaving Stephanie twitching as her high receded.\n\n\"So,\" John said with a grin, and a little trepidation, \"What do you think?\"\n\n\"Baby, that was...it...well...I can't...I don't have any words. It was the hottest thing I've ever seen, John.\"\n\nHe turned in his chair and took his wife's shorts in his hands, sliding them down her long legs. The intoxicating smell of her sweat and arousal hit his nose, and his mouth watered. The video began to play again on its own. Melanie couldn't take her eyes from the screen. She felt John's big tongue slip between her folds and bump her clit. She trembled as he lapped at her horny cunt with a passion. Her pent up arousal was coming to a head as, on the screen, she again saw her busty daughter cum all over her daddy's tongue. The sight was just too much. She began to cum herself, fucking her pussy against her husband's face. A moment later, she started to come down, and released her death grip on his hair.\n\n\"Fuck me, John. Holy fuck me! That was amazing!\"\n\n\"Her pussy tasted just like yours,\" John said, \"so sweet, but more innocent. She's definitely a virgin. I'd be willing to bet that no one has ever eaten that pussy before today. She said that she's been saving it for her daddy, and wants me to teach her how to take my big cock in every hole,\"\n\n\"She didn't!\" Melanie hissed.\n\n\"Not in those exact words, no. It was more like 'Do you think it's wrong for daddies to shove their big daddy cocks up their little girls cunts? And is it wrong for a daughter to want to fit as much of her daddy's big prick into her throat as she can take. Is it wrong for a little girl to offer up her asshole so that her daddy can make his whenever he wants?' Yeah it was more like that,\"\n\n\"Oh, my, God...She really lays it on, doesn't she?\"\n\n\"I'd say she inherited it from the best,\" he said, standing up to kiss his wife hungrily.\n\nMelanie shook her head, trying to clear away the growing urge to fuck herself silly on his huge cock right there.\n\n\"The kids have dinner ready,\" she said, \"we should go.\"\n\nJohn nodded. He turned off the video, locked his computer, and followed his wife into the kitchen.\n\n*The Slutty Queen who Rules this Roost*\n\nDinner was a quiet affair, as the entire family seemed to be famished from the day of lewd activity. Tori consumed two huge plates of everything, trying to regain her strength. Her thoughts kept drifting to her sister fingering her to an orgasm that morning, and how good it had felt. By the time she was finished eating, she could feel that her chair was a wet mess from her drooling pussy.\n\nUnder the table, Stephanie rubbed her foot against her father's leg, while unbeknownst to the sexy teenager, her mother was also rubbing his bulging erection. Mike, left out, was consumed with his own thoughts about his hot mother's cum covered face. Once the meal was over, Tori claimed that she still felt sick, and returned to her room. Mike left without a word. John returned to his office to continue working on the photos, which left Stephanie and Melanie to clean up the remains of dinner.\n\n\"I can handle this, mom,\" Stephanie said, \"You should go catch a shower and relax. You look beat!\"\n\n\"Oh, that's alright, baby. I can lend you a hand before I clean up,\" she smiled.\n\nShe watched her daughter's big tits jiggle in her tight top as she leaned across the table to collect dishes and bring them to the sink. Melanie brought the remainder, and together they began to wash off the plates and glasses, loading them in the dishwasher. When the task was done, Stephanie stood and stretched, her joints popping delightfully. Melanie pulled her close and hugged her, stroking her blonde hair.\n\n\"Did you enjoy your photo shoot?\" she asked, innocently.\n\n\"It was great,\" Stephanie replied, \"I'm sure daddy will make them look awesome!\"\n\n\"Mmmm, I know he will. And did you enjoy his tongue in your hot little pussy?\"\n\nShe snaked her hand down to Stephanie's mound, cupping it through her shorts.\n\n\"W, what do you mean,\" Stephanie gasped, suddenly afraid, \"He, well, we, uh, uh...\"\n\n\"Shhhh, baby. It's okay. I know how hot you are for you daddy's dick,\" she whispered, her tongue flicking her daughter's ear, \"It's so big and powerful. When he stretches my cunt open with it, it's like being in heaven. His tongue is amazing, but when he holds me down and forces the length up inside my pussy, or in my tiny ass, I'll do anything he says.\"\n\n\"Mom...\"\n\nMelanie's fingers slipped into her shorts, finding her daughter's clit. She roughly pressed Stephanie against the counter and began to work her finger into her slick cunt. Stephanie was at a loss. She never imagined her mother being into girls, and especially not her daughter. Yet, here she was, pumping Stephanie's virgin pussy with two fingers. Melanie kissed her like a lesbian slut, sloppily working her tongue into her daughter's mouth. Stephanie pushed her pelvis against her mother's hand, moaning into her mouth. Melanie broke their kiss, using her other hand to slide under Stephanie's shirt and rub her nipple.\n\n\"I never realized that you were such a hungry little slut, and not just a tease,\" Melanie taunted the busty teen, \"I never knew that my sweet little girl was a cock-craving cunt that wanted her daddy to fill her up with his giant prick. That is what you want, isn't it Stephie?\"\n\nHer mother's words were making her head spin. Light flashed behind her eyelids as she started to cum.\n\n\"Yes,\" she hissed, riding her mother's fingers, \"Yes, I want my daddy's big cock. I think about it all the time, mom. Do you... do you think I'm a pervert? Am I wrong to want to feel a real cock inside me?\"\n\nMelanie pulled her sticky fingers from her daughter's snatch and fed them to her little girl. While Stephanie cleaned her own fuck juice from her mother's hand, Melanie said, \"It is wrong. You're a filthy little teenage cunt. You're an incestuous, nasty, cum-loving slut that craves her own daddy's fat prick. You're obviously fucked up in the head, baby. No good girl wants their daddy to make her take his foot long cock up her tiny asshole. A good girl doesn't beg him to please let her suck it. You're a teasing little tramp with a body to die for, and that's why I love you.\"\n\nMelanie kissed her again, groped her big tit, and then stepped back, licking her lips. Stephanie tried to catch her breath. The last few minutes had been so hot that she could feel her pussy on a hair trigger, eager to cum again at the slightest touch.\n\n\"Now, I'm going to take a shower. Your poor father has a lot to think about, and I want you to keep your urges in check for now, baby. If your daddy wants to feed you his big prick, and pop your cherry, I'm not going to stop him. You just remember something,\"\n\nStephanie nodded.\n\n\"You remember that that man is my husband. I love him more than life itself, and more than anything in the world. I also love you kids the same. But, there will be no jealousy in this house. If I get even a hint that you're trying to take my husband, I will bury you. So help me God, I will make it my mission to destroy you, or any other woman that thinks that she can compete with the slutty goddess that rules this roost! If you can accept that, then I think that a lot of things are going to change in this family, and bring us all closer together. Do we have a deal?\"\n\nStephanie didn't even need to think. She had never seen her mother so dominant, so frightening, so serious. For all of Stephanie's alpha tendencies, she knew that her mother could grind her under her boot heel anytime she chose. She kissed her mother passionately for a few seconds, fell to her knees and placed her head between her mother's legs, smelling her desire.\n\n\"Yes, ma'am,\" she said meekly, \"yes. I'm just a dumb little slut that can't control her pussy, and I know that you'll teach me to please my daddy the way he likes.\"\n\nMelanie smiled, pulled her shorts down, and leaned against the table.\n\n\"Show me what a good little stupid slut you are, baby.\"\n\nStephanie pushed out her tongue, and tasted her first pussy. As soon as the sweet taste of sweat and fuck honey hit her tongue, she knew it wouldn't be her last.\n\n*Framed*\n\nWith only a few days left in her junior year, Tori was having trouble concentrating. She chalked it up to nerves, but it just seemed like everything around her was happening in a daze recently. She'd be a senior in a few months. The thought had been weighing on her heavily all year. That must be it. She just wasn't sure what she wanted to do next, after high school was behind her. She'd already started getting notices about scholarship opportunities for track from various colleges. Stephanie had gotten some, too. Tori really hoped that she could go to the same school as Stephie. Having her sister there would make life so much better. Stephie was always so supportive.\n\nRight now, though, her head hurt. It was hard to focus on what Mr. Hart was saying. She'd never cared for chemistry. Not that her grades weren't good. She was a perfect student, in fact. She just didn't like the way Mr. Hart stared at her like a pervert all the time. The last week, it had been even worse due to the constant tingling in her pussy.\n\nAnd it wasn't just Mr. Hart. Everything had been worse! She'd felt a little sick each day. She was getting headaches. Some days it was hard to keep on task. Her recent visit to the doctor had come up with nothing. The doctor wrote off her feeling as psychological, probably stress related. She was sure the stress would go away once summer began, and things would be fine.\n\nThe classroom door opened, and a teacher's aide came in with a note for Mr. Hart. He took it, glanced at it.\n\n\"Tori,\" he said, \"The office would like to see you for a moment.\"\n\nTori was confused. She'd never been called to the office for anything. She never got in trouble. She was a good girl! Good girls don't cum on their sister's fingers, she thought briefly, then tried to push that dirty thought away. She clumsily pushed herself up from her desk and made her way up to the front of the room, taking the note from Mr. Hart. Her head spun. What could she possibly be needed in the principal's office for?\n\nHer head hurting, Tori left the room and slowly made her way to the office. For a moment, she almost forgot where it was! Then, she collected herself and remembered. Yes, it was up toward the front. She pushed past the glass doors leading to the reception desk, where Angie sat busily typing. Last year, Tori volunteered as an office assistant on her free period. Angie had been really nice to talk to.\n\n\"Hi, Tori,\" Angie greeted her happily.\n\n\"Hey Angie. I guess I'm supposed to see the principal for something?\"\n\n\"Go on in, hon. I'm sure it's nothing. Probably another college coming to try to woo you!\" Tori felt better. Maybe it was some good news! She walked past the reception desk to the Principal's door, and knocked softly.\n\n\"Come in,\" Mr. Patterson's voice boomed from behind the door.\n\nTori turned the knob, stepped inside, and was immediately frightened. What was going on? Mr. Patterson sat behind his desk, frowning. Behind him stood one of the school police, and seated in front of his desk was her father. Mr. Patterson and the officer looked disappointed, while her father looked furious.\n\n\"You, um, wanted to see me, Mr. Patterson?\"\n\n\"Yes, Tori. Please sit down.\"\n\nShe sat next to her father, who reached out and held her hand affectionately. He didn't seem angry with her, but rather with the two men on the other side of the desk.\n\n\"Tori,\" Mr. Patterson began, \"A short while ago, we received an anonymous tip that you were in possession of illegal narcotics,\"\n\n\"This is absurd,\" her father raged, \"Tori is one of your best students. This is obviously some kind of prank.\"\n\n\"That could very well be,\" Mr. Patterson went on, \"However we are bound by law to investigate all claims of this nature, as you know. I know Tori's reputation is nothing but stellar, Sir. I'm sure that this will all turn out to be nothing. Now, Tori, we had to request that one of your parents be present for this discussion. We will need you to please empty out your pockets, and the officer here will need to escort us all to your locker to have a look, too. Will that be any problem?\"\n\nTori was aghast. Drugs? She didn't even know what drugs looked like, let alone take any!\n\n\"Of course not, Sir,\" Tori agreed, \"I don't have anything to hide!\"\n\nShe stoop up and emptied out everything in the pockets of her snug jeans. Her school ID, a pack of gum, some spare change. No drugs.\n\n\"Thank you, Tori,\" Mr. Patterson said, \"Now I understand that you father has requested his legal counsel to be present before we proceed any further. When your attorney arrives, we'll take a quick trip to your locker.\"\n\nAn uncomfortable few minutes passed, and then a knock came on the door. It swung open, and John's attorney stepped inside, looking a consummate professional. Stu had been a long time friend of the family, having grown up with John. In fact, it was John who loaned him his starter money to open his practice when he'd passed the bar, and in exchange he made John his priority client in all matters. Stu shook hands with everyone in the room, introducing himself. He then switched into full attorney mode.\n\n\"Am I to understand that my client is being investigated for possession of illegal narcotics?\"\n\nMr. Patterson confirmed, \"I wouldn't yet call it an investigation. An anonymous tip was phoned in to the office this morning, and as you're aware we are bound to investigate that claim. Would you agree, Sir?\"\n\n\"That's correct, and I'm sorry, John, Tori, but they do have the right of it. Since the report is on school property, and the lockers are also school property, the administration doesn't require your consent for a search. They've extended it, I think, out of respect for Tori's well-known record as an upstanding student.\"\n\n\"Thanks,\" John grumbled.\n\n\"Shall we go?\" Mr. Patterson asked. The men nodded.\n\nHer father held her hand, and the small group made their way through the halls to the junior lockers. Tori was just glad that classes were still in session, so no one would see how embarrassing this was. At the same time, the embarrassment had started her confused pussy leaking, and she hoped that no one could hear the squishing sounds it was making as they walked.\n\nThey stopped in front of her locker, and she put the combination in with the dial. The door clanked open. The officer, with rubber gloves on, began to remover her books, papers, folders. She always kept things neat. Once everything was out and placed on the ground, the locker was empty. No drugs.\n\nBut then he reached back inside. There was a loose panel in the back, and the tip of what looked like a plastic baggie poked out from the corner. The officer pried the panel back further. There, clear as day, was a small baggie filled with several items that Tori had never seen before.\n\nHer father, the principal, and the officer all looked at her in shocked disbelief. She didn't know what to say. She didn't know what the baggie was. She looked pleadingly at all of them, tears welling up in her eyes.\n\n\"That isn't mine,\" She cried, \"Someone must have put that in there! It's not mine!\"\n\nBecoming hysterical, she began to cry. Her father put his arm around her."
    ],
    "authorname": "Hamlin",
    "tags": [
        "stephanie",
        "tori",
        "18-year-old",
        "slut",
        "hamlin",
        "sister",
        "brother",
        "father",
        "mom",
        "19-year-old"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-second-place-sister-bk-01"
}