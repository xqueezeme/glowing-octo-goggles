{
    "title": "My Little Ventrue Pt. 04 Ch. 12",
    "pages": [
        "~~Beatrice~~\n\nShe was starting to become envious.\n\nAthalia was a bitch. A real, horrible, nasty bitch of a person. Only vamp Triss had ever seen talk to Athalia and not get chewed out or glared at was Jack, but it wasn't Jack that Triss was envious of. It was Athalia, and that monster chick vibe she had going for her. Badass monster chick on the inside, perfectly normal, attractive woman on the outside.\n\n\"Fiona's told me about you,\" Triss said. \"About your... form, I guess?\"\n\n\"... horror.\"\n\n\"Sorry?\"\n\n\"It's our horror. The horror that lives in the nightmare. It is the nightmare.\" She shrugged, and continued down through the black tunnel. Unlike the tunnel Beatrice had come from, this one had no working lights at all, and the further they went, the darker it got.\n\n\"That does sound badass.\" And it was making Triss jealous. Nosferatu and horror were kindred spirits, but with Athalia, seemed like she was more than that. \"And I've seen Fiona do some oddly impressive shit. It's pretty neat stuff. Makes me kinda wish I was a\u2014\"\n\nAthalia stopped, looked at her, and frowned. \"You don't really mean that.\"\n\n\"I don't?\"\n\n\"... you're a vampire. You don't know what it's like to... be changed like this.\"\n\n\"Fiona says\u2014\"\n\n\"Yeah well Fiona's a stupid idealist. We're not the same. The little thing inside you, hiding in shadows, tiny little wings and tiny little talons, is not the same as us. So fuck off and shut up.\"\n\nOh god the melodrama was going to make Triss puke. This woman wasn't just angry, she was anger incarnate, just a walking pile of livid and hateful.\n\n\"... so I'm a little thing?\"\n\n\"You are. The thing inside you is.\" She waved a hand aside like she was dismissing a fly. \"Sometimes it looks like a rat, sometimes a bat or snake, and often, an owl. An insignificant creature that loves to hide in the shadows, instead of using them as the weapons they are.\"\n\n\"And that would make Jacob what?\"\n\nAthalia snarled at her, even as she continued to walk without pause. Yeah, Jacob was one of those vamps she hated, with one of those tiny little shadow creatures in him, part of him, was him. A tiny creature, and this woman probably could not understand how it was able to kick her ass like she was a child. Worded like that, Triss would be angry too.\n\nBut Athalia didn't retort, just chewed on her hate and kept walking.\n\n\"So, uh, Azamel is uh... a pretty terrifying looking... thing.\"\n\n\"... she showed herself to you?\"\n\n\"No, that's what this eye is for.\" Triss turned and pulled down on the cheek of her new eye. \"Jacob had one too.\"\n\n\"... I... don't understand.\"\n\n\"You monsters think you're so scary. Athalia, I have seen Jacob do shit that makes you monsters look like pussies. This eye is just a little bit of the crazy shit that man can summon.\" Ok, maybe she shouldn't have been rubbing it in the girl's face that her boss was scarier than Athalia's boss, but she couldn't help indulge a little. My dad can beat up your dad. Or mom, in this case? \"I can see little bits of the nightmare. And I can see you.\"\n\n\"... and what do you think?\"\n\n\"Kind of envious, honestly. You look like something from a Motorhead album cover.\"\n\n\"And I suppose that means a lot of skulls and claws and black wings and shit.\"\n\n\"Exactly.\" Triss snapped her fingers and pointed at her, summoning her inner Fonzie. Athalia was a scary woman, but compared to the shit Jacob had been showing the Nos as of lately, it was manageable. And besides, Athalia was once human, and that was some even ground.\n\n\"... well, you would have gotten to see anyway.\"\n\n\"Whatcha mean?\"\n\n\"You heard Azamel. There's something going on in one of our chambers. And you're tagging along while I investigate, apparently.\"\n\n\"Yeah, but where's that? Other side of town, or... or... in the nightmare.\"\n\nIt was Athalia's turn to smirk, and she stepped into the final shadow of the curving tunnel. This far out from Azamel's little nest, the shadow was now the unending blackness, and as far as Triss could tell, it went on endlessly. Pure, delightful darkness. Normally Triss would be fine with that, but after the Azlu shit, she didn't want to be in the tunnels like this. The thought of getting more spiderwebs on her made her shiver, and rub her arms to try and dislodge the nonexistent, sticky webs.\n\nTriss set her hand on the wall of the tunnel, and slowed down her pace. Couldn't move quickly in this without risking tripping. \"Fucking dark.\"\n\n\"Monsters have different worlds, different realms, different things they like. The Eshmaki, like Fiona and myself, need darkness.\"\n\n\"Darkness, right. So I... shouldn't pull out my phone then. Cause, you know, it has a light and\u2014\"\n\n\"Not yet.\"\n\nAlone in the dark with the scary-but-cool-but-major-bitch woman, Triss continued walking forward, and let the darkness swallow her. Nope, nothing wrong here, just a stroll through old, abandoned tunnels in complete black with a darkness nightmare monster thing. She kept walking, squinting, trying to see something, but it was no use, too damn dark. No choice but to keep walking, and listen to the quiet clack of her boots on concrete.\n\nAt least, until her footsteps started to change sounds. Weird, and worthy of her stopping to kneel down and touch the floor. Stone.\n\nAnd that's when it kicked in. Like a scene from Pulp Fiction, a needle full of adrenaline straight into the heart, every reflex in her body kicked in. Overload. She jumped up with a spin, and looked around. Still darkness, couldn't see shit, and every muscle was tensing hard enough to hurt. She wasn't in the tunnels anymore. And like a cat dumped into a new home with no warning, she wanted to get somewhere protected and safe so she could get her bearings.\n\n\"W-Where am I?\"\n\n\"You may turn on your light now.\"\n\nWhite dots, two of them in the distance. They didn't give off enough light to illuminate whatever it was they were in, but they were there, two white dots she recognized. Gulping all too loudly, Triss pulled out her phone and turned on the light.\n\nAthalia, in all her angel of death glory. An enormous torso, skin taught and bones exposed, covered in serrated spikes. A skull, with a tiny white dot in the center of each large eye socket. Enormous black angel wings. And best of all, Athalia had no legs, just a dangling spinal chord that followed her as she flew\u2014hovered around. Her wings weren't flapping, just taking up space as the abomination moved along the cave floor and through the darkness.\n\nCave floor. For a second she thought maybe Athalia had found a cave entrance in the tunnels; certainly possible with the shit Jacob did in his free time. But, no, this couldn't have been a cave like that, cause when Triss looked up, she could see stars.\n\nShe shined the light at the cave walls, and gulped again. Her new eye wasn't showing her any flickering, waving, or oddities anymore. Now, she was in the nightmare, and the eye had no more secrets to expose. Just darkness, endless, and deep.\n\n\"The fuck...\" It was some sort of vertical cave, a pit, a giant hole in the ground. A spiraling edge followed the contours of the enormous hole, and went down, and down, and as she shined the light into the black, she stared down into its depths. The light couldn't reach the bottom. She pointed the light back up against the walls, and tried to see to the other side of the cave, but the light couldn't reach. Back up, she stared at the twinkling stars, their light unable to penetrate the depths of the hole. Hole wasn't a strong enough word, more like someone had taken a drill a thousand feet wide, and decided to try and dig to the depths of the Earth.\n\nTerrifying, and thrilling.\n\nThe angel of death continued on. It really didn't fit; or at least, Athalia didn't fit her horror. The shadow, the dripping black mist, the onyx wings, the giant torso and dangling spinal cord, all just silhouettes in the darkness except under the light of Triss's phone, that were right at home in the cave. But Athalia herself was a bitch, a mean, hateful bitch, and the form she carried with her looked like it belonged on some sort of greater entity, like a personification of death or inevitability or something.\n\nThen again, woman hadn't said a thing since she transformed, or exposed her other half, or whatever was a politically correct way of describing her horror half. And from what Fiona said, the nightmares this woman had as a child had something to do with this horror, this thing, this death personification floating before Beatrice. What sort of horrible things would those kind of dreams do to someone, with those wings haunting their thoughts, those white, glowing dots for eyes in the black, and those claws tearing at the ground? The sort of nightmares that made you pull your arm and legs under the covers nice and snug. The sort of nightmares Triss wished she had the power to inflict with her nightmare discipline; purely for defensive purposes of course.\n\nMuch as it must have been a horrible experience, to have this creature haunting her dreams, she did look god damn badass.\n\nTriss had to jog a few moments to catch up, and jogging wasn't so easy with the stone beneath her being an unpleasant mix of smooth, wet, slippery, and randomly jagged with tiny drops. But she caught up, and started walking beside the angel of death. Just, a giant, floating torso thing, with its spinal cord hanging out and almost hitting the dark stone Triss was walking on. Christ.\n\n\"I uh... don't suppose I should try and pull a Jack, and start talking about personal shit, right?\"\n\nThe creature turned to look at her, enormous skull blending into the obsidian around her except for the two white dots, a foot apart. \"I do not suggest it.\" Oh damn that voice, a whisper in the dark if there ever was one.\n\n\"Can you tell me something about where we are then? Cause, I mean, yeah, this might be the norm for you guys, but vamps spend their every night and day in the city. I mean, I haven't left Dolareido since I was embraced, cause it's not like I could handle sunlight.\"\n\nThe enormous creature turned to look at her, but didn't stop its slow hovering down the sloping path that circled the giant hole. With the darkness as her backdrop, it was hard to ever truly see any of the monster's features, just bits and pieces as she swayed, body catching hints of starlight or Triss's phone light.\n\n\"We are here to ensure Fiona is not in danger, and to kill her attackers if she is. I have no reason to share my secrets with you.\"\n\n\"Not like I'm trying to\u2014\"\n\n\"Aren't you? Jacob and his eye allowed him to see me, Mark, Azamel, as you explained.\" Her voice caught between a whisper and a harsher rasp, and clawed down Triss's spine. \"The same eye you now have.\" She didn't use her lips to speak; barely had lips at all, skin so tight on the face it was basically a skull. No nose. Her voice just emitted from her, as if using a mouth with a tongue was something this entity was beyond needing.\n\n\"Yeah, the eye lets us have a peek at you guys and your nightmare worlds. But\u2014\"\n\n\"Leeches. Sneaking, cowardly leeches.\" The arm came out, and pushed Triss. Not the arm of the tall, slender black woman Athalia, but this dark shadow creature, and its enormous arm, with bone claws that dripped more of the black mist around her. It was more than enough to knock the vamp over, and she cursed as she started to roll down the slope.\n\n\"Fuck!\" She didn't go far, but a little ways was enough for her to roll against the wall of the enormous cave where it met the path, and come to a stop in some bones resting against the stone. \"You bitch, I could have... have... holy shit.\" She pointed her phone at the bones, at the walls, and then, gasped.\n\nThe tunnel wasn't just a big hole drilled into the Earth, with a pathway that circled the side all the way down like a screw. It was a graveyard. Bodies, randomly spread out against the wall and ground. Limbs with clothes still on them. Some fresh, or at least only a year or so old. Most were far older, skeletons, of varying sizes, some far too small to be adults.\n\n\"There was a time, centuries ago, when bandits and raiders were as common as fleas.\" The angel of death hovered past the corpses and skeletons where they amassed in a pile against the wall, before passing it and moving further down the slope. And once Triss caught up with her again, she couldn't help but notice more, and more, and more bodies they passed. \"There was a legend, of a horrible place where these bandits and raiders would toss their kills. And, so the legend went, many of those tossed into the great hole of the dead were still alive when thrown in.\" The demon motioned with one of its giant hands of bone toward the wall, where another pile of bones had grouped up in the grooves of dark rock. \"And some survived the landing, only to die of their injuries, screaming up into the emptiness above them for help.\"\n\n\"... yea, that's pretty fucking dark.\"\n\n\"Indeed.\" It, she, nodded, and continued once again. \"An exaggeration. In my travels I found this place, I found the bones, the dead, centuries gone and buried. Not so nearly as large as this, but then dreams are prone to exaggeration. The fears of the dying carved this chamber into the primordial dream.\"\n\n\"... I thought you weren't going to share your secrets with me.\"\n\n\"There is power in legends.\" The dark angel shrugged, a strange motion for shadow to make, and gestured to the pit in the center of the vertical cave. \"Begotten feed on fear, as Fiona has no doubt told you. For the others to fear us, fear me, is to my benefit.\"\n\n\"You think I fear you?\"\n\n\"Of course you fear me.\" Athalia came closer, and Triss stepped back. The fuck was she supposed to do? Athalia might as well have been a literal angel of death for all Triss could see, and the fucker knew it too.\n\n\"You really underestimate vamps.\"\n\nThe monster snorted, a weird, half rasp half groan noise that echoed off the rock walls, before she, it, they continued along. \"Perhaps. It is easy to underestimate a cockroach until you try and kill one yourself. You are notoriously difficult to kill, and you spread in much the same way.\"\n\n\"Yeah well, a great man once said eventually we'll all be dead, and the only ones left are gonna be five cockroaches and Keith Richards.\"\n\n\"... and you take pride in this?\"\n\n\"A bit, yeah.\" She shrugged, adjusted her tank top, and resumed the walk into the endless pit of black. \"So, pit of death, some sort of fear-created... thing, place... thing?\"\n\n\"Yes. You vampires know of only the physical. Azamel tells me both Jacob and Antoinette have long sought to touch the borders of other realms, but you... you're so limited. What could you know of spirits, or the other realms, the layers of existence where the universe is... no, I waste my breath.\" The monster waved a dismissing, titan hand, and floated out over the empty hole. Triss had to jog down the slope \u2014 fucking scary \u2014 to catch up as Athalia landed on the other side, before continuing down. What a bitch. \"What do you know of H. P. Lovecraft?\"\n\n\"Just the basics. Cthulhu, fish men, knowledge so unimaginable that it's capable of making you go... insane...\"\n\nThe monster turned to her, and Triss froze solid as she came in closer, and closer, until the colossal face of nigh bone was almost up to her. The dark skull was easily five times the size of a normal skull.\n\n\"If you dreamed a dream, infantile vampire, a dream that let your mind go, that let it reach up and out of this single realm of the physical, it could scrape against the walls protecting it from the outside.\" The thing hovered down the cave slope further still, until at long last their walk came to what seemed some kind of bottom. \"If you had any idea what sort of entities waited for you, just waiting for you to be stupid enough to leave the safe confines of your little world, you'd never sleep again.\" The floor of the pit cave was covered in the dead, in bones and clothes and empty bags. Some bones belonged to horses, and others to dogs. \"You think Azamel is terrifying? You have no idea, cockroach, just how terrifying the grander existence of things beyond understanding can be.\"\n\n\"I never really did get the cosmic horror thing.\" She shrugged, and gestured to the graveyard they'd started walking through. \"Call me simple but I think spooky things in the black are scarier.\"\n\n\"You are simple.\" The entity returned the shrugged, colossal shoulders move its colossal wings with the motion, before it continued along up and over a pile of bones.\n\nClimbing bones didn't go as easily as Triss figured. They moved or broke under her feet, and thrice she fell down onto her face, bones meeting her and jabbing up into her. Many shattered where they were once connected, and hands or feet fell apart, raining down the sides of the hill of the dead and sending Triss sliding down along with them. Like trying to climb a hill of nothing but ice and loose snow, ugh.\n\nShe gave up, and walked around, one hand to the stone wall, the other pointing her flashlight at the bones beneath her. \"This isn't real, right?\"\n\n\"It is real.\"\n\n\"Thought this was a nightmare?\"\n\n\"It is.\"\n\n\"I... oh.\" Ok, that put it into better perspective than all of Jacob and Athalia's ranting combined. Nightmares were real, actually real. The crazy shit the mind could only manage a glimpse of during dreams, was real. Yeah, ok, now she was starting to get a chill.\n\n\"This way.\" The monster disappeared into another hole in the wall, big enough for her wings and titanic bones to fit through. Triss jogged after her, hopping up over bones and onto any rock or empty space where her feet could land on stone. \"Turn your light off.\"\n\n\"Right.\" Fiona had said she was a monster that dealt with darkness, and had said Athalia was the same. Did they need it to function, or did they just prefer it? Everything was such a mystery with these damn things, and Fiona either didn't know the details, or wasn't willing to provide them. She didn't blame the girl, but then maybe she and Jacob wouldn't have had to come here, with a witch eye each, if they knew as much about the Begotten as they did Kindred, or the Uratha for that matter.\n\nChrist, what the fuck else existed out there she didn't know about or had never seen. Ghosts? Mummies? Fucking fairies?\n\nShe almost tripped as her boot got stuck in mud. If it was mud. She froze again, and took a long sniff of the air. Humidity, heat, water, rot, and mulch. The cave had connected to some kind of jungle or something.\n\n\"Is this\u2014\" Gunfire cut her off. She ducked low, and blinked into the darkness ahead of them. Or, ahead of her. Athalia was nowhere to be seen in the black, and the damn thing hovered around so it wasn't like she made footsteps, or breathed. Triss grit her teeth and waited, listening, straining her ears to adapt to the new environment. A jungle, an actual jungle, humidity and heat and weird noises and all.\n\nIt couldn't have been the same place she just came from. Wherever she'd been, whatever nightmare that was, it'd be silent, and cold. But without a door or gate or some magical, mystical watchamacallit to make the transition more notable, she'd entered someplace new, someplace hot, someplace where the environment itself pressed down on her.\n\nShe crept along, crouched and silent, claws against the mud, the roots and shit beneath her. A jungle, it had to be a jungle. Fiona's jungle. Girl had mentioned it but Triss hadn't really given it much thought, since Begotten were strange and it was easier to think of them like that, easier to dismiss the girl's words as weird metaphor or something. Not a metaphor, not a metaphor at all. And as Triss moved forward, some light started to reach her, enough for her eyes to adjust and see the bark, the mud, the moistness and moss and fungus and mushrooms and fucking insects. Oh god the insects, everywhere, creepy crawly things with a thousand legs and others with none at all.",
        "More gunfire, and screams. She continued along, summoned her vitae, and hid herself in the cloak of night. With this much darkness, trees, and vines dangling around, she'd be able to walk up to someone and punch them before they realized she was near.\n\nOr at least, that would have been nice. But as she came closer to the gunfire, the sound of voices joined in, and then lights, far stronger lights than Triss's phone, cut through the black. And then the toppling of a tree.\n\nShe'd never heard a tree fall. How could she have? City girl her whole life, and second life, and the closest she'd ever heard to a tree falling was in movies. But there was no mistaking the creaking of wood, and then the tearing of vines and breaking of branches in a crescendo of weight and an impending crash. The tree was huge, so very huge, so very fucking huge, and it tore a through the canopy until moonlight bled through the wound.\n\nTwo moons. Holy shit.\n\nHoly shit! She jumped back and scampered as someone fell in front of her, and landed hard enough to splat against the mud and splash it against her clothes. Some black dude in a suit. The fuck?\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\nThat hurt. That really fucking hurt. His head didn't hit anything too hard on the way down, but riding a giant tree down as it tumbled onto its brethren through the black night of a jungle, wasn't fun. Close to the bottom, when gravity decided it didn't like Eric anymore, the man fell and crashed down through brush, vine, and darkness. Mud greeted him, and softened his landing as much as a bellyflop in a swimming pool would. Better than breaking all his bones, but it still really fucking hurt.\n\nHe sat up, groaning, rubbing his head. Covered in mud, and Fiona's blood, and god only knew what else, whatever sort of shit, literal or not, you found on a jungle floor.\n\nHe froze. A woman was staring at him. The light from the torn-open canopy hit her enough he could see her decently well, or at least he should have been able to. Something was making it hard, something pushing at his eyes, causing them to slide off of her, and he had to squint and focus to force his gaze back onto the stranger. She was only two feet away, in literal punching distance, but it was damn hard to look at her.\n\nShe had one normal eye, and one snake eye. Fucking weird. They stared at each other, both unmoving, his heart pounding and his breath panting. But not hers. No breath, no heartbeat.\n\nAnd just like before, his gears kicked in. Again, adrenaline spiked his system, and he found himself breathing in the scent of this newcomer, trying to analyze the threat they posed, trying to figure out friend or foe, or where they fucking came from.\n\nShe was doing the same thing. Expression on her face was\u2014holy shit she had extra teeth, extra teeth where her cheeks should have been. Her raven hair hid it by framing her face, and so did the darkness, but the piercing moonlight and his new eyes managed to catch glimpses of them. Weird crocodile teeth, sharper though, and big enough that it was easy to imagine them tearing off limbs whole.\n\n\"... I... uh\u2014\"\n\nShe held up a hand and put one of her fingers to her lips. She had claws.\n\n\"Don't move, don't speak, or I'll rip you in half.\"\n\nHe almost said something. Very a much a 'don't look down' sort of situation, being told not to say anything so suddenly. But after he stared into her very, very weird eyes for a moment, he nodded. Girl was sending him the same sort of signals Jessy and Natasha did, some sort of sneaky-but-deadly vibe, the sort of vibe he imagined anyone would get when walking around poisonous snakes. \n\n\"Work for Jeremiah?\"\n\nOne of them had said that name, Jeremiah. He shook his head. Girl didn't know he wasn't one of these hunters Fiona was dealing with. \n\n\"How can I trust you?\"\n\nHe gulped, and gestured to his clothes. Not like these hunters were in suits, and unlike him, they had weaponry.\n\n\"... good enough I guess. But, tell me, name of the person who let you in here?\"\n\n\"Fiona. Scot girl. Asked me to help her follow four people. Said she wanted to find someone named Jack.\" Spilling the beans. Well, in all the chaos, this girl with the crocodile mouth seemed like she was on Fiona's side, and that was his best option at the moment. \n\n\"And\u2014\" She raised her hands to protect herself as the sound of gunfire, and the sound of tearing trees started up once more. He did too, and threw himself to the side behind a trunk as gunfire ripped through the leaves.\n\nAnd then, claws. Bone claws. Giant, massive, black claws tore through the leaves around him, over him, and black feathers covered the sky over their heads. Spikes, serrated, jagged, ripped at the bark and the vines, pulled down the forest with the motion of the titan, and earned the ire of the hunters. Shotgun blasts fired in the direction of the damage, and both he and the new woman found themselves face down in the mud.\n\nAnother monster. This one had wings, and some sort of torso of bone. Its beady white eyes, tiny, betrayed what must have been a huge skull. Streaks of reflecting black cut through the jungle, curved, showing only glimpses of its form, of spikes and horns, of ribs. No legs. No fucking legs. As it moved, hovering through its new path of carved and ruined jungle, he could see its spine dangling behind it.\n\nDeath. He was looking at death, moving around, and hunting in the darkness.\n\nThe hunters appeared in a clearing, their backs to each other, pistols and shotguns and two special knives drawn. The moment something moved, they shot it, and Eric winced as he recognized the sound of Fiona's new, monster scream. But, as he peeked out from behind the tree trunk, he caught a glimpse of the spider woman. Wounded, but alive, and still trucking, pulling herself up into trees and slashing out at the four hunters.\n\nDamn the four shmucks were so outclassed, but they kept on fighting, each firing into the black, and every so often, they earned an alien snarl from the darkness. This time it was one Eric didn't recognize, some sort of raspy thing without the texture of a human voice. The other one, the other thing with black wings, it hissed and rasped and disappeared into the black as quickly as it came. A bullet managed to hit it, clipped one of the bones, and only then did Eric notice it had skin, gaunt to the point it wrapped the bone like saran wrap clinging to leftovers. Bits of the black material tore away, and blended into the mud of the dark jungle.\n\nAnd then shit got even more crazy. Universe just felt like dumping it on, shitting down his throat with as much insanity as he could possibly handle. Another dude showed up.\n\n\"Get down!\"\n\nThe crocodile mouth girl didn't listen to the new voice. Instead, she sank her claws into one of the trees and started climbing, while Eric was more than happy to throw his body to the muck and cover his head, as he watched the man pull a grenade from his trench coat, and toss it into the forest.\n\nAn explosion, his first explosion. He wasn't prepared for the kinetic force of it striking out like a wave, or the sound of it. And he wasn't prepared for the debris, the shredding bark and branches cutting through the air. Somehow, crocodile lady was prepared, and she held on as she climbed higher.\n\n\"How did you get in here!?\" Fiona called out from the black.\n\nThe newest newcomer laughed, and wiped his thumb on his lip, content to keep his secrets. He took out another grenade. And then, another. And the jungle forest screamed in agony as the man destroyed it with reckless abandon. Two more grenades immediately after, into the darkness, into the chaos. Not like the stranger had to worry about casualties, not with his four buddies beside him.\n\nEric certainly had to fucking worry. He did his best, stayed down and covered his head, but this fucker was tossing his grenades around like confetti, and they got closer, and closer, until everything around Eric was shredded trees falling over. If he didn't move, he was dead. If he got up, he was dead; the hunters weren't asking questions, just shooting first.\n\nHe started rolling, staying as low to the ground as he could, but there was only so much he could do to avoid what was turning into a giant fuckfest of carnage and mayhem. Get up, and die. Stay down, and die a bit later once one of those grenades landed beside you, or one of the hunters noticed him. More and more of the forest was being destroyed, so more of the dual moonlight was reaching them.\n\n\"Such a young monster,\" the trench coat fucker said. Might as well have been wearing sunglasses at night. \"Got a name?\"\n\n\"I\u2014\"\n\n\"Don't tell him anything,\" the blackness said. That angel of death thing, no doubt. Both Fiona and its voice sounded horrific, but the death thing's voice was the sort of raspy you expected to hear in a graveyard when you were looking for ghosts. Almost like a whisper that was somehow louder than yelling.\n\n\"Athalia, you really should just come out and let me kill you. Think your daughter is going be as nice as I am?\" Man's voice flirted on playful, and angry. Reminded Eric of a bar before a fight erupted, when people were pounding their chests, but thought they were being sly about it by using shitty jokes and sarcasm.\n\n\"You... brought Angela... here?\"\n\nThe sound was more focused, coming from somewhere past the five humans \u2014 christ, identifying people with 'human' was fucking weird \u2014 and showed a touch of shadowy movement. The guy with the grenades took advantage, drew his pistol, and fired. Eric didn't see the movement, just the result, his gun aimed. Fast.\n\nHis bullet hit something, and something hissed its fury as it faded back into the shadows behind the trees.\n\n\"Lovely girl. She's really looking forward to repaying you.\"\n\n\"I did nothing to her!\" Again the voice came from the black, but Eric couldn't pinpoint it this time, and neither could the man. Jeremiah, according to the hunters and what they said earlier. And he'd also said something about 'her daughter'. So, that made this death angel creature a woman, and a mom too. Creepy.\n\n\"Guess that whole wandering life, getting into fights with the werewolves and the vampires, making enemies of everyone, having it follow you wherever you went, didn't agree with her.\"\n\nMore movement, shadows slipping by the trees still standing. Jeremiah shot his pistol just once, straight into the darkness, and earned another loud hiss of pain. How the man could hit anything in the jungle, let alone through the parts of it that were pitch black, Eric had no idea, but he was.\n\n\"You... poisoned her against me.\"\n\n\"No, you did that. I just found her. Gave her a lift. Gave her a gun.\" The man marched forward, pistol in one hand, and he eased a sword out of a hidden sheath into the moonlight. And it shined with the weird shine the two hunters and their special knives did. \"Who's your new friend? Another Eshmaki vermin to hide with you in the shadows?\"\n\n\"She is none of your concern.\"\n\n\"I think I'm going to have to make it my concern. Hurt one of my friends here. And besides, can't let a monster live.\"\n\n\"Get out of my home.\" Fiona's voice, or Vrall's, Eric supposed. Making heads or tails of this whole situation was getting insane.\n\nFiona lashed out, massive legs coming in from above and stabbing down at the ground. It was her home, she had the advantage, and she was a fucking monster. The fact the humans were standing their ground was hard to comprehend, but they were, and they rolled out of the way as massive blade-like legs stabbed down from above. When they all started firing upward, Fiona had already moved on, legs carrying her back up into the canopy in another direction, dark skin fading into the shadows.\n\nAs they got up, one of the hunters leaned in, and whispered something to Jeremiah. The man nodded, and began looking up, but not in the direction Fiona's shadow had moved. He was looking for something else, and he squinted hard as he panned his gun over the black canopy above.\n\nHe fired. Someone screamed. A woman's voice, a normal, human-sounding woman's voice.\n\nEric almost stood up as the woman from earlier came crashing down beside him. She screamed fury and pain, and rolled to the side to get behind a tree trunk as a hail of bullets followed her. The ground and mud and roots ripped up, rocks and insects scattering over the jungle floor as lead decorated the wet moonlight beside Eric. The girl's shoulder had a hole in it, and she covered it with her hand as she pinned her back to the tree. No blood, or at least, she didn't gush blood like he expected from a wound like that. There was something red between her fingers, thick and slow, and it didn't smell like human blood.\n\nNothing about her smelled human.\n\n\"Triss, get out of here! Take Eric with you.\"\n\n\"What?\" Crocodile face said, and she looked across the cut ground to him. \"Are you fucking serious? Let me\u2014\"\n\nBoth Triss and Eric flinched, covering their heads, as an enormous splatter of white coated the trees around them. Webbing, a lot of it, not arranged into any pretty patterns or elegant strings, but thick, heavy vines of white that splattered around randomly, chaotically, painting the trees and forest and everything between Eric and the humans with spin art.\n\n\"Get out Beatrice! We'll be fine. Mark will be here soon.\"\n\nTriss winced at the word Mark. \"He uh... might be? Jacob\u2014\" Another grenade landed by their way, slipping through the webs, and splashing in the mud between Eric and Triss.\n\nThe two of them stood up, and threw themselves to the darkness. The landing didn't go so well, and Eric felt rock and branch rip through his suit and into his body. Skin tore, his blood joined the fabric, and his knee was fucking killing him.\n\n\"Mark will recover and be here shortly.\" Athalia this time, her voice somewhere above them, flickering bits of dripping black mist sliding off the branches overhead.\n\n\"R-Right... well, you're the boss.\" Coughing, groaning, and still holding her punctured shoulder, the crocodile lady started pushing herself up to her feet, back to the bark. Eric couldn't help but stare. Certainly an attractive woman, with a very lean, fit body, with the muscle and abs to go with it. But as her head hung forward, her long tongue dangled out of her mouth, and Eric shuddered. Perfectly normal human lips from the front, but where her cheeks should have been, crocodile teeth chomped together. Not the time to be staring at her extra teeth, but something about them made him do a triple take. Something about the idea of biting someone with those teeth was oddly appealing.\n\n\"How the fuck are we going to get out of here?\" he said. Don't ask why this random monster woman would bother saving him, just assume she would for now. He had to do something, anything. Bullets whizzed by his head, and he again rolled onto his stomach. Crawling, dragging his body, he wormed his way through the jungle floor and toward another tree further from the gunfire and yelling men and women.\n\n\"Back the way I came. Christ that fucking gun is strong. The hell is this.\" She motioned toward him with her shoulder, and he winced as he managed to peek through the hole and out into the jungle for a second. \"I can't leave until I have some fucking clue about Jack though.\"\n\n\"You're looking for Jack too?\"\n\n\"Yeah, I am, I\u2014\" A chunk of the tree beside her head exploded outward, and she ducked as the bullets started ripping the trees around her apart. Then she vanished. Like a fucking ghost fading out of existence, she was gone, and Eric stared on as he gulped down his surprise. Just gone, vanished and\u2014she appeared in front of him, and grabbed his wrist. \"Stay close, and\u2014\"\n\nAnd he punched her.\n\n\"Shit! God fucking damn it, christ woman. You fucking startled me.\"\n\nShe picked herself back up off the mud, now coated in the slimy earth, and snarled at him. The hole in her shoulder was starting to close, right before his eyes, the weird blood, thick and heavy, filling the wound and pulling in skin and muscle, or making it new. But, before he could apologize again, or comment on the fucking insanity of her healing something so fast he could actually see the flesh rebind itself, she reached out, grabbed him, and started running.\n\nHe tried to move his legs to run with her, but they weren't touching the ground. Like one of those silly videos with someone picking up a dog and carrying them just over ground, and the dog tries to walk or swim but can't reach the water or ground. He was that dog. This woman, average height, built like a rock climber, was far stronger than even her impressive muscle mass would allow. Carrying him like a fucking child. And he was kind of glad she was, as more bullets started to slam into trees around them, causing the wet bark and vines to explode and shower them in plant matter, and god knew what else.\n\nShe threw him down into the muck, and she threw herself down next to him. Bullets crashed against rock, a couple creating some small sparks as they hit the minerals. There was a crag ahead, some sort of wall, some sort of cave.\n\n\"Stay close,\" she said. \"You're invisible now, sort of, just stay close and stay quiet. Assuming the way back actually takes us back to the real\u2014er, the material world, you'll have to run out without me.\"\n\n\"Cause of this Jack guy.\"\n\nShe nodded, crawling on her belly right along with him. Her shoulder was working again.\n\n\"Kid needs saving, if he's alive. And this Jeremiah fuck or his buddies might know where he\u2014\"\n\n\"I... did hear these fuckers say that Jeremiah was coming from the prison.\"\n\nShe stopped, turned to look at him with her normal eye, and her crazy green snake eye. The smile was unsettling.\n\n\"You just saved the fucking day... Eric, was it?\"\n\n\"Yeah.\"\n\n\"Don't know why a human is with Fiona and in this shit, but if we make it out of here alive, we're gonna have a lovely chat.\"\n\nHuman. She called him human. Every warning signal was going off in his brain, telling him that this girl was dangerous, but it was a shit load better call than going back toward the psychos behind him.\n\nThey continued crawling along, bellies to the mud, darkness covering them again as the sounds of gunfire, screaming, monster roars, and howling animals came and went. Laughter too, that guy in the trench coat, but not the sort of laughter you might expect to hear from a guy in a trench coat in a jungle with grenades and swords and guns. This guy's laugh was heavy, hoarse, smoking and yelling his whole life, but only strengthening his voice instead of damaging it. The sort of guy who could scream his fury at the ocean, and it'd notice.\n\nIt started to rain. It was a jungle, so of course it started to fucking rain. Not just rain, but flash flood, water pouring down the enormous leaves and twirling vines above. With Triss and Eric back under the canopy, none of the rain hit them directly; instead, it hit them as waterfalls flowing from the branches above. And it was strong enough, heavy enough, to leave the man gasping for breath with each forward swing of his elbows. Drowning in the mud of a jungle was not fun.\n\nThey continued the crawl toward the cave, and once they had their hands against the rock, they got to their knees and moved into its welcome embrace. Anything to get away from the hail of gunfire slamming into rocks and trees behind them.\n\nBeatrice grabbed his arm, pulled him up, and the two of them broke into a jog. Or at least, that was the plan, but he fell, groaning and clutching his knee. Soaked, in pain, exhausted, and scared. What a fun night.\n\n\"The fuck is the matter with you?\"\n\n\"Fucking knee. Old injury.\"\n\nCrocodile lady mimicked his groaning, and got down on a knee. Too dark to see much in the cave, but he could tell what she was doing by the feel of her arm holding his.",
        "\"Hop on.\"\n\n\"... seriously?\"\n\n\"Seriously. Two seconds before I leave without you.\"\n\n\"Fucki\u2014fine!\" He got behind her, hooked his arms around her neck, and then his legs around her hips.\n\nAnd then she got up and started running, as if she wasn't carrying a middleweight fighter on her back. Hell, he'd seen people struggle to run this speed with a heavy backpack on. She definitely wasn't human; not that he needed more proof, what with the crocodile face, but it was a sight to behold \u2014 or feel in the darkness \u2014 that she was carrying him. No wonder she'd been able to throw him so easily.\n\nHope she didn't run into a wall in the darkness, or he'd have to add broken nose to the list of tonight's delights.\n\nShe didn't go far. Maybe a few hundred feet before she stopped, and looked up. He did too, and sucked in his breath hard at the sight of the sky and moon. The moon, but not the moon, something alien but familiar, around alien but familiar stars. And the smell, alien but familiar. His new nose told him it was old rot and bones, a different smell to the jungle. Wet but not soaking wet, barren, rock, and while the jungle was half alive, half dead, there was nothing but dead awaiting him in this new nightmare. \n\nBut he couldn't see shit. He hooked his arm around the woman's neck, reached into his pocket for his phone, pulled it out, and\u2014 \"Oh fucking hell it isn't working.\"\n\n\"Phone flashlight?\"\n\n\"Phone flashlight.\"\n\n\"We're so wet we might as well have been swimming. I probably can't use mine either.\"\n\n\"Then what the fu\u2014\" Gunfire snapped past them again, hitting more rock while others slammed into the bones before him. So damn dark he almost couldn't see it, but with the stars and moon way way up there, and them apparently at the bottom of some giant hole in the ground, he could just make out the silhouette of a mountain of death before him.\n\nBeatrice jumped forward, and onto the bones. And then again, jumped, each jump going a fair bit higher than was possible, each landing into the bones and sending them scattering in random directions from the weight of their combined bodies. Bones cracked and shattered, many exploding and sending their shards down the hill of the dead.\n\n\"The fuck is this?\" he said\n\n\"Another nightmare. Athalia's.\"\n\n\"Right, that... that...\"\n\n\"Yeah, I know. Fucking spooky. And she has a daughter apparently, working with that Jeremiah fuck.\" Through her scaling over the mountain of bones and toward the other side of the enormous vertical cavern, she didn't break her words at all. Almost as if she didn't need the breath. \"I\u2014\" And then gravity decided the two of them needed to join the dead beneath them.\n\nGunfire, several shots, shattering the silence of the cave. Beatrice went down, slamming into the mountain of dead, and launching Eric to the side as she spun. He only had time to realize she was falling harder than a simple trip would have caused, before the dead decided to ensnare him. Hands, arms, skulls, they all took liberties with pushing against his clothes and rubbing against his mud-soaked face as he rolled down the hill. At least he was rolling toward Beatrice's goal, but every roll was a combination of a horrifying dance with the dead, and scraps and bruises peppering his already very beat up body.\n\n\"Fuck!\" Crocodile face fell down the hill somewhere beside him, and he had to blink a few times to find her silhouette in the darkness. She was holding her leg. \"Fuck fuck fuck. Give me a few minutes,\" she said, dropping her voice to a whisper.\n\n\"A few minutes to what?\"\n\n\"Heal.\"\n\n\"What happened?\"\n\n\"Someone's coming up behind us. One of those hunter fucks must have got past Fiona and Athalia. Put a hole through my shin.\"\n\n\"... and you're going to heal that in a few minutes.\"\n\n\"Enough to put weight on it again at least.\"\n\n\"Are you fucking serious? Christ, you and Fiona and that corpse angel thing, the fuck are you\u2014\"\n\n\"We can discuss it later. We\u2014\" They both turned and raised a hand to cover their eyes as white light blinded them. A flashlight. And as he tried to block out the searing in his eyes, the sounds of gunfire joined the white beam.\n\nNot for him though. He would have recognized something like a gunshot wound in his body, even with his eyes covered, he was sure. Seems the hunter was aiming for crocodile face, and was a good shot from the sounds. Each was followed with a shriek of pain, and the thud of a bullet hitting flesh. The creature fell backward, screaming again, and again as a bullet ripped through her and splattered a mess of her flesh out over the dead that surrounded them. The splatter, lit by the hunter's light, vanished as it moved through the air, turning into tiny flickers of ember and ash.\n\nEric threw himself to the side and out of the way, but once he was on his knees and palms again, he stared at the hunter at the top of the mountain. One of the woman hunters had managed to follow them, and she sneered from atop the hill of bones, gun still pointed at Triss. So much for being invisible.\n\n\"H... how\u2014\"\n\n\"You were moving the bones while you walked on them. Idiot.\" The human managed a quiet chuckle, out of breath and covered in sweat and jungle muck. She loaded in another magazine, smooth as butter, and pointed it at Beatrice.\n\nEric managed another glance at crocodile face, and winced. She had a bunch of new holes in her body, lit by the flashlight the hunter was holding underneath the pistol. Seven shots fired, seven hits, and each straight into crocodile face's torso. Enough to make the monster cough up some of that weird, thick red liquid that wasn't blood onto her extra teeth.\n\n\"... fear...\" Some of the red liquid trickled from the woman's tank top and stomach, too thick to go far, and some of it slid back into other holes, as if something inside the monster was pulling it back into her guts. \"Fear.\"\n\nEric expected to hear the click and boom of another bullet, but none came. The hunter stood there, shaking, glaring, and fresh sweat started to drip from her forehead, lit by the glow of her flashlight. Her breathing quickened, and Eric blinked as he watched her gun and light start to jitter. Her heart was beating faster too, and she raised her flashlight to her face to wipe away the sweat drops threatening to touch her eyes.\n\nSomething was up, something was wrong, something was weighing down on the area and burying it in the cold, suffocating grip of terror. He gulped and stared on as crocodile face, sitting on the side of her hip with her hands to the ground in front of her, looked up at the hunter, stared at her, and growled. It came out of her, out of Beatrice, something invisible, something that clawed at his skin and told him to get away from her, something that felt wrong.\n\n\"I'm not afraid!\" Click. Bang. The shot went wide, missing crocodile face and slamming against the rock wall behind her. There was a ramp, some sort of path that led up the side of the vertical cave, some way to get out and escape. But what really got Eric's attention was that somehow, the hunter missed. She fired again, and again it missed, as crocodile face stared down the woman above her.\n\n\"... fear.\"\n\nPanting and panicking, shaking and fumbling, the hunter woman started to mumble to herself, words of encouragement like 'it's not real, it's not real' and 'she's just fucking with your brain, it's not real' over and over. Didn't change that the girl was trembling, and the bones around her were rattling right along with hers.\n\nTriss jumped up, and growled. Not a human growl, not a human sound, something far closer to an animal, something that would hide in shadows and bite with the ferocity of a badger or wolverine. Something that told Eric's gut that she was a creature of shadow, a hunter in the night, something that told him she was like a wolf\u2014no, no. He had it all wrong. Not a badger or wolverine or wolf. \n\nAn owl, waiting in the night for prey. An owl that could growl, that could roar, that could sink fangs into you. The imagery struck him still.\n\nThe human screamed and ran. Eric gulped and looked after her, but with her went the light, and soon he and the thoroughly punctured monster were left in the dark again.\n\n\"The fuck did you do?\"\n\n\"Lot of vamps have ways to fuck with a person's mind. I mean come on, you must have seen Dracula.\" She sighed, a dreamy sort of sigh, and as his eyes adjusted to see her silhouette, he noticed she was fanning herself. \"Gary Oldman back then? Fuck, I'd let that man do a million things to me.\" Acting like she barely noticed she was horribly injured, and perhaps she did barely notice.\n\nWait.\n\n\"... you're a vampire.\"\n\n\"Yeap.\"\n\n\"... Fiona mentioned vampires... do... do all vampires have mouths like yours?\"\n\n\"Ha, fuck no. Nosfer\u2014you know what? How about we get out of here first. My phone is...\" She reached into her jeans, soaked in blood, mud, water, and covered in bits of dead everything, and pulled out her smartphone from the rather tight confines. Girl definitely had a thing for her ass, with jeans like that. \"Yeap, my phone's fucked too. Fuck fuck, why does this fucking nightmare shit affect us like it's real? Oh, right, cause it is real.\" She started crawling, but crawling fell to groaning and grunting as her body fell too. \"Ok, switch. You carry me.\"\n\n\"You can't be serious. I can't\u2014\"\n\n\"It's either that or you leave me here, and I can personally guarantee my boss will do worse to you than I did to that hunter if you do, so come on.\"\n\nYeah, point taken. Grumbling, he forced himself to his knee, and held his hand out to her.\n\nAnd then began the crunching, the grinding, and the pressing bone against ruined cartilage that could not protect the joint. Knee injuries were the fucking most horrible thing, because of how much they lied to you, how much they tricked you, how easy it was to think your knee was functional, that it could handle something, that it'd be ok if you pushed it a little. It was good at this lie, and Eric fell for it far more often than he liked to admit.\n\nHe groaned once, grit his teeth, and forced down the next dozen groans as he started up the cave ledge. It was a wide ledge, no real risk of falling down the hole in the cave's center, but each step on the slope was precarious, and falling down it to roll a rather painful trip was not something he wanted to experience. And each step, his knee tried to make that a reality, each step putting the weight of this bleeding, swiss cheese vampire on his back into his knee. She wasn't extremely heavy, but with a body like that, she had enough muscle mass to put a decent amount of weight on him.\n\nHe almost laughed. Bad time to tell a girl she was heavy.\n\n\"You are slower than molasses going uphill in January.\"\n\n\"... the fuck kind of expression is that?\"\n\n\"Had some relatives from Canada. Newfoundland I think.\"\n\nHe groaned a few more times, and came to a stop. He managed maybe a hundred feet before his leg started to buckle, and he fell to his good knee. But falling to a knee was a painful position to be in for his bad knee, no matter which knee he landed on, and he groaned again, louder, as the fucking thing clicked.\n\n\"Sorry,\" she said, \"didn't know you were eighty.\"\n\n\"Fuck... you.\" He almost told her to get off and carry him, but he could feel the holes in her flesh with how her body was pressing against him. Vampire indeed, a walking, talking corpse. No wonder she didn't sound winded earlier, since she probably didn't need to breathe. But despite that, he was better off than her, and it was the better call that he be the one carrying her. He got moving again, but the best he could get was a slow walk. No way they were outrunning anyone chasing them like this.\n\nBut it seemed like no one was chasing them anymore. Thank fucking god.\n\n\"Shit, I hope Fiona's alright,\" she said. \"We just left her.\"\n\n\"She told... us to leave... seemed... confident.\" Every word was labored, sweat dripping down his forehead and chest, each step a shaky mess.\n\n\"You're handling this insanity pretty well.\"\n\n\"Just... guess I... was getting used to... crazy shit.\"\n\n\"Oh?\"\n\n\"Just... nevermind... Fiona can tell you... later.\" If Fiona and this dead thing on his back were friends, well, maybe she'd tell Triss about his dreams later; hopefully after telling him about them.\n\n\"K, I can walk now. But christ, that hunter pumped me full of holes. Only walking.\"\n\n\"Walking... better... than this.\" He got down again, and the vampire hopped off. She put a hand on his shoulder, and the two started walking. Fuck fuck fuck every step was painful, every step made his leg wobble, and every step made him grumble.\n\n\"You're a whiny fuck, aren't you?\"\n\n\"... you can't be serious. My knee doesn't work you\u2014\"\n\n\"I know you can't see it in the dark, but I currently have a bunch of holes in my chest and the lead's in there too. I'd be dead twice over if I was human. Oh, and you saw what that Jeremiah fuck did to my shoulder. So, yeah, I still feel pain. Get over it.\"\n\nDamn this girl had bite, crocodile teeth or not.\n\n\"... so vampires exist.\"\n\n\"Yeap. You really shouldn't know that, but you seem to be helping Fiona out, and me out now, so I'll cut you some slack.\"\n\n\"... and if I wasn't?\"\n\n\"Well then you'd be dead, or forcefully turned into a thrall. Masquerade violation, letting you know about us, about any of this shit.\"\n\n\"Violation?\" Even with her off his back, his breathing, his words, all of it was getting weighed down by his exhaustion, his pain, every step up the slope draining him. This night was brutal. Walking with Fiona, then running with her in his arms, then the trees in the jungle, then belly crawling along the jungle floor, then this shit in the cave. He wouldn't be able to stand for days, maybe weeks, once he got to sleep. Hopefully his boss would let him sit at his new job, assuming he still had it.\n\nFuck, he really hoped he still had that job.\n\n\"Yeah. There's a reason you didn't know vamps existed until now.\"\n\n\"Shit. Am I fucked?\" Fuck, did he just stumble into the mafia, except, vampires? Fuck. Fuck fuck.\n\n\"Well, maybe. We'll see. But stick with me and I'll see about getting this sorted out.\"\n\n\"... and if I don't stick with you?\"\n\n\"Then I have to tell the boss, and you'll be dead within twelve hours. Or worse.\"\n\n\"... guess I won't need to worry about my new job at the Bloodlust then.\" He really should have just told Fiona no, and let the girl do this on her own. Doubtful she'd have found the hunters then. Probably wouldn't be fighting them now, or had gotten shot earlier, or any of this shit. Bad decisions loved to create cascades of horrible leading to more horrible.\n\n\"You work at the Bloodlust?\"\n\n\"I do. I did. Started just a little while ago, bouncer.\"\n\n\"Heh, you've probably met other vamps then.\"\n\n\"... really?\" Wait wait wait. Those two Fiona was with, what were their names? \"... Jessy, and uh... Natasha?\"\n\n\"Ha, yeap.\"\n\n\"Shit. Fucking shit, Jessy agreed to do me a favor.\"\n\n\"Getting a favor from an Invictus? Might as well have been getting a favor from the devil. Expect to be repaying that favor,\" she said. Great. Fucking great. Life was just a lovely avalanche of shittyness shitting down his shit-filled throat. \"How'd you get mixed up in all this anyway?\"\n\nHe almost told her, about him and Fiona, about her saying she knew about his hallucinations, his dreams, all that shit. Life or death kinda did that to people, apparently, got them feeling truthful when they really should just shut up. He didn't know if this woman would actually help him, or if she was just using him to get out of this nightmare and back to Dolareido, where she could then suck his blood out and leave him a withered corpse. So he decided to keep the truth to himself, and wait.\n\n\"Met Fiona at the bar. She came to me tonight, asking if I knew where Jack was. I didn't, never seen the guy, but she mentioned she was also looking for four strange people, which I had just seen. We tailed them.\"\n\n\"You left your job randomly, to tail some strangers, cause a girl asked you to?\"\n\n\"... she was very convincing.\"\n\n\"Uh huh, right. Well, whatever, we're friends so she'll tell me about it later.\" She shrugged, and then screamed before falling down to a knee again. \"Forgot... about... the fucking shoulder.\"\n\n\"How the fuck do you forget about a hole in your shoulder?\"\n\n\"Fuck you dude, let's see how well you last with a fuckload of holes in your body.\"\n\n\"Pretty sure I'd just die.\"\n\n\"Then don't fucking complain!\"\n\n\"I've earned the right to complain.\" With one arm hooking around her waist so she could hook his shoulder, he gestured to the stones and rock beneath them with his other. \"I can't see shit. I'm in a nightmare. I'm going to have to see a doctor about my knee, for the tenth time. And now you're telling me Jessy is a fucking vampire, and Invictus, whatever that is. I... she said she'd take care of Montoya, and then she'd fuck my brains out. Please tell me she wasn't making some sort of metaphor.\"\n\n\"Jessy? Well, I have no idea who Montoya is, but yeah, fucking the bouncer from the club sounds like something she'd do. Probably while you're in the club too. Don't be surprised if she wants a Kiss though.\"\n\n\"A kiss?\"\n\n\"Vampire Kiss, you know? Suck your blood.\"\n\n\"... Jesus! What\u2014\"\n\n\"Don't worry about it. Feels good, won't kill you, and knowing that whore, she'll fuck you and do it at the same time.\"\n\nThe strangest. Conversation. Of his life. Pit of dead beneath them, bones and random crap like bags and clothes littering his route, a precarious walk up a very long path up the inside of a cave, all inside a nightmare world. But it was the realization that the girl he owed a favor to was a vampire that poked his brain more. Please just mean sex, please just mean sex, he didn't want to be a vampire or some vampire's slave.\n\nThe path came to a stop, almost at the top of the cave, where it turned into yet another cave, small, but tall enough and wide enough for the two of them.\n\n\"You came in through here?\" he said, and as she nodded, he guided her through the passage. Yay, more absolute darkness. Fucking annoying.\n\n\"Yeah, Athalia was walking me through the dark and then bam, I was here.\"\n\n\"Sounds like me and Fiona. I\u2014holy shit.\" The sweet sweet clack of his shoes against something man made: concrete. Yes, finally, back to city, back to reality, back to hum of cars and other machinery, echoing down as near-silent vibrations through the earth.\n\nThe jungle had been overwhelming. He much, much preferred the breathing of the city, even if he was... \"Where are we?\"\n\n\"Beneath Morning Street. The old tunnels.\"\n\n\"Right... I\u2014\"\n\n\"You, are going to get my ass topside. We got a prison to get to... and maybe ask Azamel for a phone.\"\n\nDo what she says you dumbass, or you won't live to regret it.\n\n\"Think... think Fiona and them will be alright?\" he said.\n\n\"We'll find out tomorrow. Right now we got a dumbass kid to save. Fuck, if he's not there or if he's dead, the Prince will burn half this city to the ground to get revenge.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nFire hurt. Getting shot, stabbed, cut open, beaten, broken, dismembered, all of that was horrible, painful, excruciating, agonizing, and made each undead nerve in his body scream bloody murder. But fire was different. Fire was alive, and it laughed at him as more than just his nerves screamed in pain, but as his beast did as well. The licking flames filled him with both pain, and dread, and struck terror into his gut until it felt like ice cold enough to burn.\n\nIce, burning his insides, while fire burned his outsides. The clash of pains sent his whole being into a frenzy, sent his beast roaring into its own level of agony, and overwrote every thought he had except for one: get out.\n\nOne of the hunters got up from their friend. They'd managed to get him down and pinned, but only after he stabbed Angela. And after they hit the man several times in the face, Jack could tell his brainwashing was broken. Henry was borderline unconscious though, with the beating they gave him, so that was another hunter Jack didn't have to deal with at least. The one getting up though, she was in Jack's way, and Jack bowled her over, hard enough he could hear the crack of her skull against the floor.",
        "Probably not dead, or at least, not if someone pulled her out of the fire along the wall.\n\nHe didn't stop to see if they did. No, he couldn't stop, couldn't control himself, couldn't do anything other than ride the overwhelming, overpowering need to get the fuck out of the fire. It took all his willpower to guide the beast toward the other entrance, instead of letting it pull him back to the safety of the prison cells, where there was no fire. Ahead, was fire, and it clawed and scratched at him as he ran past it.\n\nHe managed only a momentary glance over his shoulder to see what the psycho was up to. Angela was on her knees, bloody knife beside her on the floor, and she was screaming. Screaming, and standing. That deserved another glance, and he winced as the woman turned to face him, reached out, grabbed the knife soaked in her own blood, and started running after him.\n\n\"I'm going to fucking kill you!\" Her voice mixed with the fire, like someone bellowing over the ocean. She ignored the hunters, ran past them, clutched the hole in her stomach with one hand and squeezed the blade grip in the other. The other hunters, their voices blended with the fire, were buried by it as they tended to their wounded, got people away from the flames. But not her, her voice vibrated along the walls and slammed against his ears, piercing the flames like a siren.\n\nThat woman was not human. \n\nHe jumped through the lobby. If he went fast, the flames had only a split moment to touch him, grab at him, dig at him. Surface wounds. His skin burned away, sending more searing pain up through his body and into his skull. He had to wonder if spontaneous human combustion was really a story about vampires catching fire. Or at least, he tried to wonder, but the beast in his gut suppressed the thoughts, pushed them aside, pushed the pain aside, and let the fear of its bane drive him through the lobby.\n\nHis skin was leaving him, ashes, dust to the flames. He was moving fast enough to keep his pants and shoes from catching fire, but his torso, his arms, the flame caught his skin and took it like peeling a sunburn, times a thousand. And it hurt, it hurt until he felt like he was back in that mill with Viktor and Tony.\n\nBut the fire was starting to fade, and once he burst through the wall of flame into the center of the civilian lobby, he found much of the fire had faded. Gasoline or other flammable liquids on concrete meant it wouldn't last, and he thanked fucking god that he didn't have to run through more halls filled with vampire bane.\n\nHe kept going. He could hear screaming him, all coming from Angela, the others defeated and exhausted. But not her. The psycho continued after him, and made a few loud clicking noises of metal on metal. She was reloading.\n\nGunfire. Bullets ricocheted against concrete, slammed into the counter as he got past it, and sent sparks flying as some found the bars of the gate ahead of him. Normally he wouldn't be concerned about some bullets, but if she nailed him in the head, he'd be down and wouldn't be getting back up without someone spoon feeding him a mountain of blood. And in his current condition, even a shot to the heart or spine would probably do that as well.\n\nOutside. Oh thank god the outside. The beast finally calmed down, let him take in his surroundings, let him make some decisions, let him think about things other than the overwhelming need to flee, and feed. He just fed, ten fucking minutes ago, but it was gone, used up, bleeding out of him or healing his wounds to at least get his legs working.\n\nWorking was a strong word. As he got out onto the street, he fell, and screamed out as he landed on one of the stumps of his arm. Legs collapsed, muscles refused to contract and tendons refused to bend to pull on the bones.\n\nOutside though, he was outside. Good, and bad. Gunfire out here meant cops would be coming, eventually. Cops were also good, and bad. The hunters wouldn't want to be around for that, to have to explain to cops what they were doing with their weapons, or to\u2014bang! More gunfire, more bullets whizzing past him, hitting nearby buildings, shattering windows, and hitting parked cars. The fuck were this many parked cars doing here in the middle of the night in this part of town? Half a dozen more cars than seemed normal. The hunters, maybe? Too many cars for this part of town to be just civilians, and a van was parked beside the prison too.\n\nFor a second, he thought maybe the hunters would come pouring out of the cars, each armed with guns and stakes and fire, but they were empty, and he leaned against one as he forced himself back to standing. Running wasn't working anymore, and instead, he limped forward, one leg refusing to propel him like it should, so each step was weighed down by it.\n\nHe looked back toward the prison. Only Angela came out. Now holding her wound with her knife hand and bleeding down her leg, she limped after him, gun hand aimed and wobbling. She fired again, and again. One of them caught him in the back, and he screamed as he fell over again, landing on an elbow. But, the pain blended into the mess of agony writhing up and down his punctured, burnt corpse, almost fading away as he got back up, and started limping away again.\n\nThe other hunters weren't with her. Why? For fuck's sake don't look a gift horse in the mouth, just move. Go.\n\nHe couldn't go, not very well anyway. Best he could manage was limping, dragging his body against the cars, each step a painful lesson in how heavy even his light body could be when injured like this. Antoinette had fought with injuries like this, and only when she had lost an arm and leg did her wounds bring her to a halt. She was a Daeva though, and it was Ventrue and Gangrels that were the more resilient of the clans, that could get a chunk of their skull chopped off and shake it off, that could get up from a train wreck, that could march into a hail of gunfire and ignore the bullets tearing through them. How she managed to do it as a Daeva, he couldn't imagine.\n\nVentrue resilience was the only thing keeping Jack from slipping into torpor. He grabbed his Ventrue blood, forced it up, felt that piece of Viktor inside him, and Julias, and used it. His body was holding together, just barely, just enough he could keep moving, keep dragging himself away from the maniac with the gun.\n\n\"Get back here you fucking leech!\" Another gunshot hit the windshield behind him, and the glass exploded over his body as he limped over to the next car.\n\nHow the fuck was she keeping up with him? A glance back showed she was struggling, bleeding, limping, but it didn't matter to her, like a wound wouldn't stop her. It was a fucking knife wound, through the back and out the stomach; it should have been enough to stop her. Streetlights lit the red path she was leaving behind, and she announced each drop of blood with a curse, a scream, and many were paired with more gunshots.\n\nShe pulled out another magazine, and loaded it, letting go of her wound to do so. Jack looked over his shoulder as he heard her scream, then grunt with impact. She'd fallen. It might have been a good opportunity to turn around and kill her, if he hadn't been in the same boat, stumbling, dragging, fighting the urge to pass out as well. No, he had one option here, and that was to run.\n\n\"Fucking killed Johnny, and Mike, and Fran, and Stacey's dead because of you. You don't get to just walk away!\" She got herself up again, put her hand back on the hole in her gut, and leaned against the cars as she limped toward him. More gunshots, all misses, all decorating the streets beneath him and shattering the glass of car windows beside him. At least the newer cars had windshields that didn't explode, but older cars weren't so nice, and bits of the sharp material showered Jack like rain.\n\nEventually, he ran out of cars to lean against. In this part of North Side, there were no houses around, no neighborhoods, just factories and business buildings. Empty streets, old roads, and older buildings with alleyways between them. Darkness. Some of the streetlights weren't working anymore, and as he passed through the black spots, Angela stopped shooting. The moment he was back out into the light, more gunfire came for him.\n\n\"Stop running and die!\"\n\nHe only offered a growl. Part of him wanted to insult her, throw a scathing remark or two, but buried in pain and wounds and ashes, with bones and guts exposed, all that came out of him was the noises of the beast. More growls, a few snarls, and one scream as one of her bullets caught his leg.\n\nNot just his leg, his ankle. The shattering of bone was too much, and his shriek sliced the night air apart as he fell down again. Asphalt greeted him with a punch to his arm and chest, and he screamed again as the tried to get back up. Bones broken, muscles punctured, tendons torn, skin peeling off of him as ashes, he lay there and managed to roll onto his back. Get up. Get up. Get the fuck up.\n\nNo one was around to help him. Middle of the night, no one was in North Side, not near the abandoned prison anyway. The cars they passed had to be more of her hunters, but they weren't here. Off scouting, planning, taking notes about vampire whereabouts maybe? Either way, no one was around to hear him scream, hear him snarl, hear him shout and curse at the fucking woman as she limped her way over to him. The best he could hope for was the echo of gunshots being enough to entice someone to call the police.\n\nHe drove his heels against the road, pushed his body away from her with his weight on his elbows and ass, and ignored the grinding of his bones against the street. Keep moving, don't stop, you're not going to die here.\n\nShe came in closer, and closer, hissing a dark laugh and firing her gun again. Missed. She fired again, missed, and fell to her knees with a crunch.\n\n\"Kill... you... fucking... vampire.\" Even crawling she was still faster than him, and after a few feet she forced herself back to standing, gun hand weighing her down like an anvil tied to her wrist. \"Going to... fucking... kill you...\" She got closer, and closer, blood dripping and her curses growing louder with each drop.\n\nHe only snarled.\n\n\"Mother... was right... about vamps.\" She reached him, and stepped onto his ruined leg. She'd probably have kicked him if it didn't risk her tearing open her insides any worse than they already were. \"Look at you. Fucking... growling like a wounded animal. That's all you are, a wounded animal that needs... to be put down.\"\n\nShe fell forward, right onto him, but she was smart about it and landed on her knee against his chest. The crack hit his ears first, and then pain came after, but all he could manage was more snarls and growls. Thoughts were almost gone, just noises to his brain now, just meaningless words, and all that came up instead were more animal sounds.\n\n\"We're going to... purge this town, you fucking... leech. Going to burn you all out. Vamps, the fucking monsters, whatever else is hiding... in the god damn cracks of this slut city, they're all dead.\" The knife came out, the one soaked in her blood, and she brought it up as she glared down at him, glass eye piercing into his soul.\n\nShe was going to kill him.\n\nHe tried to find more of that power, that will, that beast inside him that let him defeat those weird handcuffs, that let him summon thousands of rats, that let him break the minds of three hunters easily. Gone, all gone. He was just a defeated corpse now, holding together as well as a paper bag held water.\n\nBut, a smile sneaked its way onto his lips. \"The Prince is going to kill you.\" A threat of posthumous revenge? A very real threat though, and he let his head settle back on the street as he went limp. God, he wanted to see Antoinette again, so damn badly; the only damn thought to break through his frenzy. Just hold her one last time, say something poetic, kiss her again, and\u2014\n\nAngela's skin started to light up. Heaven, maybe? White light at the end of his puny existence? The dark skin, the soft face but steel gaze glowed brighter and brighter as more light shone upon her; so familiar.\n\nHonking yanked his attention back up from the depths, and he turned his head enough to see an oncoming car. Maybe he could get run over, squash his brains into pudding. Better than letting this psychopath cut his head off.\n\nAngela sat up and held one hand over her eyes, trying to pierce the blinding light of the incoming car. High-beams. And the car wasn't slowing down. In fact, it was speeding up.\n\nOnly at the last moment did Angela actually force herself to stand up.\n\n\"What the fu\u2014\"\n\nJack stared on, and watched as the car came for them, the two of them. Two tons of metal roaring, wheels spinning with all the care or delicacy of a child given a rocket launcher. A split second, for a lightning moment, he managed to see the bumper of the car slam into Angela's body and send her flying. The next moment, a wheel was on his stomach, and he got to feel what it was like to be run over.\n\nIt wasn't that bad, actually. Massive weight crushing his punctured guts into his back, spinning rubber tearing up the already ruined skin, and the impact forcing him to roll were all horrible. But it was disorienting, overwhelming. He didn't even register the second tire, just a blur of sensory input, of lights and noises and some sort of extra pain adding to the mix. He didn't make a sound, didn't move, just let the insanity take him and turn him into a skid mark on the street.\n\nOr at least he thought he'd be a skid mark, but there was a curb. The car hit it, and somehow, some of the crushing weight didn't press down onto him. He rolled a few times before hitting against that curb, and went still as his mind tried to make sense of what just happened. He'd just been run over, literally, a car had just run over him with its two right tires. Did the left tires hit him? No, almost hit his feet but not quite. He tried to move them; still working.\n\nA groan escaped him, and it turned into a gargled scream as he tried to sit up. Ok, ok, no sitting up. He touched his stomach with his stumps. Still had a stomach, just a mangled, flattened, ruined one. Still intact. Ok, everything was still together, or at least, just as intact than before the car hit him. Ventrue resilience indeed.\n\nStill in one piece other than his hands, and the moment of relaxation ripped away the pain suppression of the beast's anger. The pain returned, the agony, and he let out a wail as his skin, his guts, his bones, everything told him he was dying, like he was being boiled alive, like he was being dipped in acid, like he was being set on fire. Close to the truth, too close, and another groan turned into a gargled sob as that pain came back to him and danced along his charred body.\n\nHe turned his head. The car had run into the parking lot of one of the business buildings. Angela's body was over there too, off to the side. Must have been launched like a basketball to land over there. She wasn't moving. Good.\n\nHe tried to move, to take advantage, to do something to get away from his current situation, but trying to move his arms was met with one, two, maybe three inches of movement, and other than his head, they were the only things moving much. Couldn't go anywhere, couldn't get away. So close, so damn fucking close, but he couldn't move.\n\nThe car was coming back. There was yelling, but not from the car. Somewhere down the street he could hear yelling, from several people, and then gunshots. He had trouble making out what was happening, but, once he heard the sound of bullets hitting metal, he was starting to put together a picture. People were shooting at the car.\n\nAnd the car came to a stop on the street between him, and the sources of the gunfire. \"Get in!\" Someone's voice, from the window. A man's. \"Holy fuck how is this kid still alive?\"\n\n\"Jack! Jack you fucking idiot. Holy fucking shit.\" Another voice, a woman's. A voice he recognized. Triss.\n\nAnother sob broke through, but he choked down the second. No time for crying, not yet. Get up. Get up get up get up get up get up.\n\nWasn't happening. He raised his arm, and managed a small wave of the stump toward the car. Blurs of color and light was all he could make out anymore. That, and the feel of something slipping under his shoulders and legs. Someone else's arms.\n\n\"I've seen roadkill in better condition than you.\" Triss's voice again.\n\n\"You... r-ran... me... over.\" Did she really have to make a stupid joke like that now? He was literal roadkill.\n\n\"If I had known you were this fucked up, I might have tried something a little different. Seemed like the only option at the time though, considering a second later she would have cut off your head.\"\n\n\"I\u2014aarg!\" He had enough energy to scream, but that was it. Just scream, and groan as the Nos picked him up. Arms dangling, legs swaying, every fiber of his body started sending him warning signs that he was falling apart, that his limbs were going to slip out of their sockets, skin was going to tear in half, and his guts were going to fall out.\n\nIt didn't happen. Felt like it would, but it didn't happen. Triss didn't waste time coddling him either, and threw him into the backseat of the car hard enough he bounced a little. More screams.\n\n\"Eric, get back there and let him drink.\"\n\n\"What!? You can't be fucking serious,\" the stranger said. Eric. Jack tried to look at him, to see this man driving the car. Couldn't, not as everything grew heavy, and the blurry colors started to fade into a gray mess.\n\n\"Do it! Just put your wrist on his lips and help him bite down.\"\n\n\"You fucking do it! I'm not\u2014\" Gunfire again, more glass shattering, and the harsh tink tink of bullets slamming into metal. It sounded so distant now; it shouldn't have.\n\n\"Do it! You'll be fine. Vamps shouldn't\u2014I don't have time to explain shit! Do it, I'll drive.\"\n\nLots of yelling between these two. They threw some curses at each other, some more noises, and created an almost settling atmosphere of panic and anger, a pleasant change from the torturing chaos of moments before. Almost felt like he had a sitcom on the TV in the background.\n\nEric jumped in back with him while Triss got into the front seat. Did she know how to drive? Lot of vampires didn't drive, not in a dense city where it wasn't needed, where driving came with risks; an accident that showed a vampire surviving a car crash was always a potential problem. For all he knew, Triss behind the wheel was just as dangerous as being under Angela's knife.\n\nThe thought made him laugh, for a moment, before the pain punched him in the sternum and reminded him he was nearly dead and looked dead twice over.\n\n\"Fuck, you vampires can survive a lot.\" Eric's voice. He was leaning over Jack, looking down at him. A black man in a nice, casual suit, but covered in what smelled like mud and blood. Weird.\n\n\"Admire how awesome we are later, just\u2014fuck!\" Triss slammed on the pedal hard, hard enough for the screech of tires skidding on the street to ring loud and split Jack's ears. He started to slide along the seat with the shifting inertia as Triss made some turns, but Eric held him down. Gunfire joined the screeching, and Eric ducked down against him as glass and metal were pummeled by incoming lead.\n\n\"Where the fuck did you learn to drive!?\" Eric said.\n\n\"I didn't!\"\n\nFuck, he knew it. Jack would have loved to say something, to protest, but as much as he tried, all he could get out were groans. \n\n\"Every cab driver in the city just clenched hard enough to shit diamonds, fucking city girl!\" Eric seemed to agree with him.\n\n\"Fuck you, cab drivers are horrible drivers.\"\n\n\"Fuck you we are! You're the\u2014\"\n\n\"Just feed the man!\"\n\nEric yelled some more curses, and put his wrist to Jack's mouth.\n\nOne taste was all Jack needed to know there was something weird about this guy. One more taste of the sweet, delicious, amazing, perfect concoction of life-giving power in blood form, to not care that something was weird about this guy. Give it to me.",
        "He reached up with his hands to try and grab him, to pin the wrist to his mouth, to devour him, to absorb his life and sate the beast in his gut that was roaring for more. But he had no hands, and the attempt to squeeze filled Jack with pain. No, just lie down, lie down and relax and drink as much as this man is willing to give you. This strange man, and the strange, amazing blood he was giving you. So good, so fucking good. Was it because he was starving? Near death? It was so damn good.\n\n\"This... feels... weird,\" Eric said.\n\nTriss laughed, the gunfire getting quieter and quieter behind them. \"Just wait till Jessy does it the right way. Won't be weird, just fucking awesome.\"\n\n\"... terrifying.\"\n\n\"Ha,\" she said. The car started to slow down, and Jack felt parts of him relax as both fresh blood entered his punctured body, but also the fear of dying horribly in a flaming ball of metal death abated somewhat. \"I called Julias, kid. He's got a bunch of vamps on the way over, and a bunch of thralls and shit. They'll clean up the mess, maybe catch some of the hunters. Maybe get that girl's body and get some answers.\"\n\n\"Christ, I'm getting lightheaded here.\" Eric pulled his wrist away from Jack's mouth. Or at least he tried, but Jack had bitten down, and the man had to put his other hand against Jack's head and force it back to pry his wrist loose.\n\n\"... s-sorry,\" Jack said.\n\n\"... yeah.\" Eric, on his knees in the leg space, crammed and twisted, looked at his wrist and the holes Jack's teeth had made. Didn't have the time to lick them closed. Didn't have the energy. \"You lost your hands.\"\n\nJack groaned. Triss laughed.\n\n\"He'll regrow them with a night or two's sleep and a few meals,\" she said.\n\n\"Regrowing limbs... you people are fucking insane.\"\n\n\"As insane as nightmare jungles and a giant spider lady and floating death angel monster.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\n\"Julias!\"\n\n\"Triss?\"\n\n\"No time to talk, on Azamel's phone. Jack might be at the old prison. Heading there now.\"\n\nIt took ten seconds to finish the conversation with Triss. It took thirty seconds to send out the message to his nearest Kindred and a host of thralls and ghouls, and have them begin moving to the location. Another fives minutes to double check that the occupied prison was running as usual, to confirm it was the old abandoned prison that Triss meant. An hour to beginning cleaning up the mess, and another hour to finish.\n\nPolice were directed elsewhere easily enough, and records adjusted to make sure no mention of gunfire in that section of the city existed. Thralls and ghouls poured over the scene, cleaning up blood stains, removing bullet casings, and cleaning out the abandoned prison. No bodies though, despite Jack's testimony. For the hunters that had died, the blood traces suggested their bodies were taken away. But the body of the hunter hit by the car, the blood pattern suggested she got up, or was picked up, and managed to move some distance before a vehicle took her away.\n\nSupposedly this woman, Angela according to Jack, had been stabbed through the back out the stomach, and then hit by a car moving at a decent speed. He also said she was immune to his mind control, and had a glass eye. A strange woman, the sort that just refused to die. So, maybe she was alive. Or maybe they just read the blood patterns incorrectly, and she was in fact dead. Either way, when his troops arrived only minutes after Triss left with Jack, there was no sign of any hunters, no bodies, and most of the cars around the prison Jack reported were gone, the van too.\n\nWhat did remain was the bodies of rats.\n\nThe phone call hadn't done the situation justice. The kid had sounded horrible, voice hoarse and quiet on the phone, like he was nearly dead, but he'd managed to get across the details, about being captured by some hunters who wanted details about Azamel. He told Julias about Angela, about Jeremiah, told him about the torture, told him about the threats Angela had made, the suggestions that a lot more hunters were in the city, told him about their plans to cleanse all of Dolareido. And, he'd told Julias about how he escaped.\n\nThe cuffs weren't there. The hunters must have removed them from the chair before leaving; made sense if Jack was right and they were special in some way. But there were two withered, bony, disgusting hands, smashed against the wall like someone had kicked them aside, the two hands Jack had told his dominated prey to cut off so he could escape. Quick thinking, rational thinking. He could have hesitated, and looked for another way out. But that could have easily backfired, or cost him precious seconds. No, he'd made the correct call, getting out of the cuffs and chair ASAP so he could react to the situation from a position of power.\n\nBut, damn, it took some cold logic and will to make a move like that. Very impressive, very Ventrue. And it would have made Julias smile with pride, if not for Maria's stories about Viktor's hobbies in their last conversation.\n\nLooking around at the hundreds of dead rats, Julias sighed and brushed back his hair with his fingers. A truly horrible sight. Jack had sounded quite sad about their deaths on the phone, but his words hadn't prepared Julias for the amount Jack had summoned, and sacrificed.\n\nJulias would have trouble summoning this many rats.\n\n\"Holy shit.\" Jessy came up to him, stepping around the dead rats in the hallway of the prison. Thralls and ghouls were about, and a few of the younger Invictus Kindred as well, cleaning up the rats and such with harsh chemicals and garbage bags. \"Jack fucking did this?\"\n\n\"... apparently.\"\n\n\"I mean... god damn. He's certainly your childe, Julias.\"\n\n\"... or Viktor's.\"\n\n\"His childe's childe then?\" she said. He frowned, but she pat him on the shoulder and smirked her jackass smirk. \"Viktor was fucking deadly for his age, we all know that. So are you. And Jack is... um... well, this is pretty nuts.\" She gestured around to the bodies of burned and squashed flesh as the two of them walked into the prisoner lobby, past the thralls cleaning it up, and then to toward the civilian lobby.\n\nWoman had a way with words. Triss would have been as blunt, but purposefully so. Jessy was so blunt because she was oblivious to how direct she was being about a sensitive topic. Made him smile; like old times.\n\n\"Did you see him?\" he said, \"when Triss drove by?\"\n\n\"Yeah. God damn that kid was wrecked. Really, really, really wrecked. What's the plan with him?\"\n\n\"Triss said she'd already got him a quick meal, and now she's on the way to let him sleep in my mansion stronghold.\"\n\n\"Trusting a witch with your childe?\"\n\n\"Trusting my lover with my childe, Jessy. Don't push it.\"\n\nShe shrugged, like usual, and walked beside him as the two of them made their way for the prison entrance. The smell of chemicals was in the air, but buried by the smell of burned flesh and hair. So much death surrounded him, he had to wince as he looked around and tried to piece together the insanity. Jack had done his best to recount the tale on the phone, but like with the rats, the exhausted boy couldn't do justice to the madness. Shards of glass were all around, and the bullet holes or marks were everywhere. He'd mentioned a flamethrower too. Damn.\n\n\"What's the footage on Azamel's tunnel show?\" Jessy said. \"You said Triss used Azamel's phone?\"\n\n\"Triss left the tunnels with the Begotten Mark, and a man I do not recognize. She called me, gave Mark back the phone, and then ran off toward the street. Far as I know, she caused quite a stir on the street. Used her cloak of night enough to keep her teeth hidden, but otherwise caused some mayhem as she and this Eric fellow stole a car from some kine hopping out of it.\"\n\n\"Eric... black dude? Average height? Shaves his head?\"\n\n\"Yeah. Know him?\"\n\nJessy grinned a pretty damn big grin, and rubbed her hands together. \"I think I might just.\"\n\n\"I'll let you follow up on him then. I have work to do.\"\n\n\"Yeah, deal. And... I mean, you should be proud, right? Your childe is barely a year embraced, and he's taken down a bunch of hunters and pulled some pretty hardcore animalism shit here.\" She crouched down next to a pile of the dead rats, and whistled. Gangrels were naturals at animalism in much the same way Ventrue were, though with them, it was more a question of being more in tune with their beasts, rather than a Ventrue's natural affinity for dominating the minds of others. Still, she knew what she was talking about. \"I remember Viktor had some pretty impressive stories about when he was younger, and summoning a bunch of animals and shit to his side to wreak some havoc.\"\n\n\"Yeah... that's what scares me.\"\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~Author's Note~~\n\nSorry for those who were hoping Jack would become the ultimate badass in this part of the series. He's still very young and has lot of growing to do. :3\n\nSorry for those who were hoping to see Eric unlock his change in this part of the series. I have plans for him, big plans. :3"
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal romance",
        "slow",
        "thriller",
        "vampire",
        "violent",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-04-ch-12"
}