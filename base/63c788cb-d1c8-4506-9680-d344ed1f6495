{
    "title": "The M Chronicles",
    "pages": [
        "Life immediately after college tended to reflect life in college. I hung out with three friends from the university plus two new friends. We drank, talked and pretty much tried to deny we were supposed to be grown up.\n\nAfter dinner at Alexis' apartment one night, Liam suggested a round of Truth or Dare. We groaned, saying we were way past that. \n\n\"Then, how about strip poker?\" he offered.\n\nAlexis laughed. \"Liam, you need to get laid. You've got sex on the brain.\"\n\n\"I'm twenty-three, what else am I supposed to have on my brain?\"\n\n\"Nothing,\" she said. \"I am surprised, however, that you'd be willing to expose all your 'shortcomings' in front of the rest of us.\"\n\n\"I'm a good poker player, so I don't think it would be me exposing anything. Besides, I wouldn't describe them as anything close to short.\"\n\n\"Ooh,\" said Emily. \"Maybe we could play. I'd certainly like to call that bluff.\"\n\nBart said, \"No strip poker. I've never played poker. If we must do something, I'd be up for Truth or Dare\u2014emphasis on Truth.\"\n\n\"I could go along with that,\" said Will. \"How about you, Hannah?\"\n\nAlthough the thought of seeing any of these people naked was enticing, I wasn't sure I could strip in front of them. It's not that I wouldn't enjoy it. Being naked in front of others was a mild fantasy of mine. It was, however, a fantasy I never thought would ever become a reality.\n\n\"I'll play if everyone agrees.\"\n\nLiam took the lead. \"Let's set the rules. We can use this empty beer bottle to spin. Alexis goes first since it's her apartment. When the bottle points to a person, that person gets to choose Truth or Dare. The spinner then issues the challenge. If the person refuses it, he or she has to take a swallow of Tequila and remove one article of clothing.\"\n\n\"That's dumb,\" said Emily. \"That's just a way to get the girls naked.\"\n\n\"It could work the other way,\" countered Liam.\n\n\"I know how guys think,\" she said. \"You'll gang up on one girl until you have her clothes off.\"\n\n\"What do you suggest?\" asked Will.\n\n\"Let's see. How about you can only ask Truths? If the person refuses, then the drink and clothes come into play.\"\n\nWe agreed that sounded fair. As a group, I'd have to say my friends are better than average good looking. My girlfriends would make most men stop and take a long look. Alexis, Emily and Will were classmates. Liam worked with Will and Bart worked with Alexis. Even though those two guys were the newest in our group, they fit right in. To my knowledge none of us had hooked up with anyone in the group.\n\n\"If we are going to include clothes coming off, we need to make sure that everyone has the same number of articles,\" said Alexis.\n\n\"What are you wearing?\" asked Liam.\n\n\"Bra, panties, shorts, tee shirt\u2014that's four.\" The rest of us rid ourselves of shoes, socks and anything else until we each had only four pieces left.\n\n\"It's still not fair,\" I said. \"When the girls get to the third item, we have to show our boobs.\"\n\n\"I'm very shy about my boobs,\" said Bart. We all laughed.\n\n\"Chill, Hannah,\" said Emily. \"We've all seen yours, anyway.\"\n\n\"For just a second and I didn't think that wave would pull down my top.\"\n\n\"Come on, let's play,\" urged Liam.\n\n\"Fuck it,\" said Alexis. She spun the bottle. It stopped on Liam. \"This is what I call poetic justice,\" she said.\n\n\"The first Truth, Liam, when was the last time you jerked off?\"\n\nWe all let out a sound. \n\n\"Getting right into it,\" I said.\n\n\"It was his idea to play,\" replied Alexis.\n\nWe stared at Liam. \"I know all of you do it, too,\" he said. \"It was this morning.\"\n\nWe applauded. \"What were you thinking about?\" asked Emily.\n\n\"That's a second question, and it's not your turn.\" Liam spun the bottle. It stopped at Will.\n\nLiam and he had met at work. They hit it off and quickly became pals. Due to the relatively short time they'd known each other, neither of them knew much about the other's background.\n\n\"How many people have you slept with?\"\n\n\"That's kinda' personal,\" I offered.\n\n\"He can always take off his shirt and do a shot,\" said Liam.\n\nEmily, Alexis and I went to school with Will. I think we knew most of his girlfriends. Will said, \"What the hell. Five.\"\n\n\"Five?\" I repeated.\n\n\"That sounds like too many,\" said Emily. \"There was Charlotte the Harlot.\" Alexis and I giggled. Will admitted when it happened that Charlotte had been his first, but he was far from hers.\n\n\"Plus Katie Adams and Ginny Provone,\" I added. \"We know all about them. Who are the other two?\"\n\n\"I girl I met after graduation. You guys don't know her. We hooked up when I went to Ireland after school got out.\"\n\n\"An Irish lass with an Irish ass,\" said Liam. Laughing, we bumped fists.\n\n\"So, who's the fifth?\" I asked.\n\n\"I'd rather not say.\"\n\n\"Come on, Will. Tell us,\" pushed Emily.\n\n\"You guys will laugh.\"\n\n\"Promise we won't.\"\n\nI took a deep breath. \"Monica Joyal.\"\n\n\"Mrs. Joyal. The sociology prof?\" I shouted. \"Holy shit, Will. You fucked a teacher!\"\n\nHe nodded.\n\n\"How was it?\" asked Liam.\n\n\"Awesome.\" He smiled. \"It was after I graduated. I met her at the beach one day. We started talking, then went to a bar for a couple drinks. She asked me if I'd like to have a drink at her house. I did and, well, things sorta took off from there.\"\n\n\"You mean you took her clothes off from there,\" said Emily. After we stopped laughing, Will said she was pretty much on target.\n\n\"She looked like she had a good bod,\" said Alexis. \"Was it?\"\n\n\"Very,\" Will said.\n\n\"Care to share more?\" prodded Liam.\n\n\"No. I like her and don't feel right about talking about her that way.\"\n\n\"Are you still seeing her? By seeing, I mean fucking,\" asked Alexis.\n\n\"Not regularly. She sorta has a girlfriend she dates.\"\n\n\"Shit, if I'd had known that, I would have given her a try,\" said Alexis. She and Emily gave each other a high five.\n\n\"A MILF! You fucked a MILF,\" Liam said. \"You're my hero.\"\n\n\"Enough walking down memory lane,\" said Alexis. \"It's your turn to spin.\" Will twirled the bottle and it stopped at Alexis. Grinning, he said, \"When was the last time you masturbated?\"\n\nThe room was instantly silent. \"You're an asshole, Will.\"\n\n\"You started it.\"\n\nShe sipped her beer. She looked at the other two girls, then shrugged. \"Like Liam said, we all do it. Last night.\"\n\nI reached over to give her a high five. She then said, \"Let's make that the last masturbation question.\"\n\n\"No way,\" said Liam. \"How about we all say when the last time was. Then, we'll have gotten it all out.\"\n\nWe looked at each other. Breaking the ice, Will said. \"Tonight, just before I came over.\"\n\n\"Came over what?\" teased Emily. \"And, I hope you washed your hands.\" That broke us up. \"Anyway, for me it was, uh, three days ago,\" she said.\n\n\"Yesterday,\" added Bart. \n\n\"I guess we all really do jerk off,\" I said. \n\n\"Once you tell us when you last did it, we'll know that everyone does it,\" said Liam.\n\nI must have turned several shades of red. In a small voice, I said, \"Last night.\"\n\n\"Hey, you told me you were watching Netflix last night,\" said Emily.\n\nI shot her a glance. \"Oh, I get it. Visual stimulation! What were you watching?\"\n\n\"It was just a stupid movie.\"\n\n\"What stupid movie?\" Bart asked.\n\n\"God, you guys are impossible. Ok, it was \"Shame\". Satisfied?\"\n\n\"I love that movie,\" said Alexis. \"Does Michael Fassbender not have a totally awesome bod? I loved that you could see his dick. You don't get that too often in the movies.\"\n\n\"There was a lot of masturbation in that movie. I always used to think it was so, I don't know, perverted,\" I said. \"You know, you only supposed to do it when alone and in the dark.\"\n\n\"Who said you have to be alone,\" Emily said.\n\n\"You've done it with someone else watching?\" asked Alexis.\n\n\"I wouldn't say the other person was just watching,\" as she spoke she shot a glance at me.\n\n\"No way,\" Will said. \"You two got off together?\"\n\n\"It's not as weird as you think,\" I said. \"We roomed together senior year. It was either doing it together or being horny all the time. And, for the record, she was in her bed and I was in mine.\"\n\n\"That's hot,\" said Liam. \"Two girls getting off together\u2014definitely hot.\"\n\n\"What about two guys doing it together?\" asked Alexis. \"Girls, would you like to watch that?\"\n\n\"That would be totally cool,\" said Emily.\n\n\"Guys don't do that stuff,\" said Bart.\n\n\"Never?\" I asked.\n\n\"It's never for me,\" he said. The girls looked at Will and Liam. \"Not since early teen years,\" Will confessed. \n\nLiam turned red. \"Well, actually it's been a little more recent for me.\"\n\n\"Do tell,\" said Alexis.\n\n\"I don't think so.\"\n\n\"Does that idea turn you on, ladies?\" asked Bart.\n\n\"A little,\" said Emily. \"I think watching any live sex could be hot.\"\n\n\"Has a guy every jerked off for you?\" Alexis asked.\n\nIt was Emily's turn to blush. \"Maybe.\"\n\n\"We'll take that as a 'Yes',\" said Alexis. Emily giggled.\n\n\"Did you ask him or did he just do it?\" Liam followed up.\n\n\"First time, he just did it,\" said Emily. \"We were in my room and he said he was horny. I told him it was my time of the month. He asked for a BJ. I said no, and that he could feel free to take matters into his own hands.\"\n\n\"And?\" said Alexis.\n\n\"Dropped trou and jerked off,\" she said as she laughed.\n\n\"Did you find it sexy?\" asked Bart.\n\n\"At first, I was kinda shocked. Then, I sorta got into it. When he came, I liked it. I never saw a guy come on himself, you know watching his stuff come out. The next time I asked him to do it.\"\n\n\"Where was Hannah?\" Will asked.\n\nThe two women exchanged a glance. We broke up laughing. \"I asked her if she wanted to stay. She told me she'd be in the library for a week.\"\n\n\"So, you made him jerk off again?\" asked Alexis.\n\n\"Yeah, I really tried to convince Hannah to stay. She always thought Tim was cute and she used to say she had a nice, tight bod. But, she gave me a definite 'No'. Couldn't convince her.\"\n\n\"Wait,\" Will said. \"You're talking about Tim O'Toole?\"\n\n\"Sorry, that slipped out.\"\n\n\"It sounds like he pulled it out,\" chimed in Alexis.\n\nAfter we stopped laughing, Emily told us that Tim stripped and sat on her bed. He started stroking and then going faster. \"I think he was really excited, because he shot a ton of stuff. I couldn't believe how he kept coming and coming.\"\n\n\"Did the three of you ever...?\" asked Liam.\n\n\"No. Never done that,\" said Emily. \"Plus, Hannah would never get involved in something like that. She's really shy. She almost died from embarrassment when that wave took her top down. \"\n\n\"I think I speak for all of us,\" said Bart. \"No need to feel embarrassed. They're awesome boobs, Hannah.\"\n\n\"Right! Awesome might describe what Alexis seems to have. Mine are marginal at best. I know you all know the expression, 'More than a handful is a waste'. Well, let's just say I am least wasteful person I know.\"\n\n\"I thought it was more than a mouthful that was a waste,\" said Liam. Alexis threw a pillow at him. \"You really do have sex on the brain.\"\n\n\"That was a sexy story,\" he replied.\n\n\"So, are you turned on?\" Alexis asked.\n\n\"Maybe.\"\n\n\"Sit up and let us be the judge.\"\n\nLiam looked around and then got up on his knees. The bulge in the front of his shorts was obvious. Liam was only about five seven, but still had a wrestler build. By the looks of his pants, there was something else that was still in good shape.\n\n\"I may have to take back that 'shortcomings' comment,\" said Alexis. Liam wrapped his hand around the bulge, demonstrating something that appeared to be more than a handful. It looked too big to be real.\n\n\"Maybe, you should relieve some pressure,\" said Alexis.\n\n\"I will, if you will,\" he said back.\n\n\"Hey, guys, slow down,\" I said. \"This is getting out of control.\"\n\n\"You missed out on the last time a guy put on a jerk off show,\" said Bart. \"This could be a make-up.\"\n\n\"It's not just watching Liam jerk off. It's because, he wants Alexis to do it, too. Then, there's going to be pressure on all of us to do it. I'm not down with that.\"\n\nWill could sense her discomfort. \"Hey, let's take a break. I want to have some of those brownies Alexis made.\"\n\nAfter a few moments of awkward silence, we began to stand and head to the kitchen. We grabbed beers and brownies. Alexis has a small balcony off the living room. I went out for some air. The night was still hot. I was standing there when Will appeared next to me.\n\n\"Thanks, Will.\"\n\n\"For what?\"\n\n\"You know. For getting us away from that nonsense.\"\n\n\"It's ok, Hannah. I think they were bluffing, anyway.\"\n\n\"I don't think so. I could see it in their eyes. They wanted to do that.\"\n\n\"Would it really freak you out?\"\n\n\"Yeah. I mean, Emily and I did it. But this would be with guys. I don't think I could do it in front of a guy. I've only been with two guys. Other than Emily, those are the only two who have seen my...you know, down there.\"\n\nI'm about three inches taller than Will's five feet ten inches. I keep my blond hair long and straight. Being on the college crew team, I was always in shape. Regular visits to the gym kept me tight and fit. I placed an arm around his shoulder and tilted my head toward him.\n\n\"Everyone's probably forgotten about this stupid idea by now. Let's go back in\" Will said.\n\n\"You've always been a nice guy, Will. Thanks.\" We returned to the living room to find the other four deep in a discussion.\n\n\"We have a great idea,\" said Alexis.\n\n\"What?\" I asked.\n\n\"We're going to have a contest. We'll meet here again next Friday for dinner. Afterwards we'll each share a story about jerking off. It can be real or fiction. There are no rules. The story just has to have someone jerking off. We'll all rank the stories from the girls and the guys. The two who have the lowest scores have to jerk off in front of us. It'll be one girl and one guy.\"\n\n\"No fucking way,\" I said.\n\n\"Come on, it'll be fun. We'll find out what our fantasies are and get to watch two people getting off. It's just a goof. It'll be about the safest sex any of us will ever have.\"\n\n\"You all agreed to this?\" I asked, the incredulity evident in my voice.\n\nEveryone said yes. I turned to Will.\n\n\"I don't know,\" he said. I sensed he wanted to join in, but hesitated because of our recent discussion.\n\n\"Come on, Will,\" said Bart. \"Don't be a wuss. Besides you're a writer. I bet you won't lose.\"\n\n\"It's just that I'm not sure we're all comfortable with the idea,\" he said.\n\n\"You mean Hannah isn't,\" said Emily.\n\n\"I think if even one of us doesn't want to do it, then we shouldn't,\" he argued.\n\nEmily turned to me. \"Does this really freak you out? We're still young and that means we can still be stupid. This will be fun; don't do a Debbie Downer on us.\"\n\n\"I guess I could do it.\" I spoke in a soft voice. I knew it was the peer pressure working against me. I wanted Will to come to my defense, but then realized he was excited about the ideas of watching one of three attractive women masturbate.\n\nWe agreed on some more details and then called it a night. On Wednesday, I put in a panicked call to Will.\n\n\"I'm totally fucked,\" I said. \"I've got nothing written and not a clue on what to write. I can't face the idea that I'll have to play with myself in front of all of you. I think I'll fake being sick, or something.\"\n\n\"Have you talked with Emily about this?\"\n\n\"She's really into it. She told me she's written a couple stories and is trying to decide which one to submit. She said I have do it on my own, like everyone else.\"\n\n\"She always has been competitive,\" he offered.\n\n\"What am I going to do?\"\n\nHe said he had written what he thought was a pretty good story. It involved getting caught by his cousin when she came to visit once. She walked into his room when he was naked and stroking away. He said there was more to it, but he would save the rest for the get-together. \n\nHe then offered to help, but said he didn't know how. \"I guess if you want to talk about different scenarios, I could give you some feedback,\"\n\n\"God, Will, that would be embarrassing.\"\n\n\"As embarrassing as masturbating in front of five people?\"\n\n\"Shit, I'm just going to move away\u2014leaving no forwarding address.\"\n\n\"Come on, Hannah. We're all friends. It's gonna be mostly a laugh.\"\n\n\"Could you do it? Could you jerk off in front of them?\"\n\n\"Honestly, just the thought of being naked in front of you three girls gives me a hard-on. The thought of jerking off while you're watching makes my erection throb.\"\n\n\"That's a lot more information than I expected. You're serious aren't you?\"\n\n\"Yeah.\"\n\n\"Uh, are you...hard now?\"\n\n\"That would be a positive.\"\n\n\"Shit!\" I said. \"I bet everyone is getting off on this. What's the matter with me?\"\n\n\"Hannah, you're shy when it comes to something like this. No shame in that. How about I call the others and tell them the deal is off?\"\n\n\"They'll want to know why and probably figure out it's because of me. They'll be all over my case.\"\n\n\"Let me ask this, and you don't have to answer. Ok?\"\n\n\"What?\"\n\n\"Have you ever masturbated to a really sexy fantasy? I mean something that turned you on and helped you get off?\"\n\n\"You know, Will, we've been friends a long time. It's just blowing my mind that we're talking about masturbating like this.\"\n\n\"I get that, but can you answer me. Is there a secret fantasy that works to make you want to orgasm?\"\n\nI kept silent so long that Will had to ask if I was still on the phone. I told him I would tell him, but not over the phone. \"Can you come over?\"\n\n\"Sure, I'll bring my laptop and can write what you describe. You can edit it. I bet we can work yours up.\"\n\n\"I can't believe we're going to do this. Bring beer; I'm going to need it.\"\n\nFor the next twenty minutes I vacillated between panic and dialing Will's number to tell him to stay home. My palms were sweating while my heart raced. When my doorbell rang, I nearly jumped out of my skin. I went to the door and peeked through the hole to see Will. I called out, \"Nobody home.\" He laughed and told me to open up. I undid the bolts and let him in.\n\nHe was wearing one of our old college tee shirts and shorts. In his arms he held a bag from which he produced a six pack of Stella and a package of Oreos. I smiled realizing how well he knew me. If I had the courage to follow through, he was going to know me a lot better.\n\nWill opened two beers along with the Oreos. We sat on the futon in my tiny living room. He held up his beer and I clinked on it. \"What are we toasting?\" I asked. \"Courage,\" he answered. I thought I was going to need it, along with the rest of the beers.\n\nWill smiled as he pulled his laptop from his backpack. \"So, what's your story?\"\n\nI finished my beer and went to the kitchen for another. Coming back, I sat on the futon, took a deep breath and began to talk. I think I rambled a long time before I began to get into the details of my fantasy. Will nodded encouragement and typed as I spoke. When I finished, Will asked if he could do the first edit. I agreed and went to the kitchen for the last beer. I knew I should offer half of it to Will, but I needed the alcohol to calm my nerves after what I had just told my friend. I lingered in the kitchen until Will called out and said he wanted to show me the result. \n\nHe was standing by the futon. I couldn't help but notice the obvious tent in his shorts. I pointed at the bulge and asked, \"What's that for?\"\n\n\"Hannah, that was so freaking hot. I thought I was going to come listening to you talk and then reading it over, I got really turned on. I had to use all my will power not to take it out and get relief.\"\n\n\"Really? Do you think it will be good enough to save me from being at the bottom? I mean it's a fantasy, not something that really happened.\"\n\n\"I can't imagine anyone having a better story than this. Besides it sounds like it coulda happened. Wanna read what I did to it?\" I sat next to him and put the laptop on my thighs. Will sat close and I could still see the outline of his erection. He ran his hand over the front of his pants.",
        "\"Read it out loud,\" he said. I began to read.\n\nHannah's Story:\n\nIt was my junior year in college. I needed a part-time job to help cover my expenses. After my psychology class, I was telling Alexis about wanting to work somewhere. I guess my professor overheard us, because he said he was looking for an assistant for a special experiment. Alexis told me I should go for it. She winked at me; something she never had done before.\n\n\"What's involved?\" I asked.\n\n\"It's a bit of a confidential experiment,\" he replied, \"but you will be perfect for it. Can you come to my house this Saturday?\"\n\n\"Your house?\"\n\n\"Yes, I'll email you the address. Come around one in the afternoon. And, plan to stay for a few hours.\"\n\nBefore I could ask any more questions or even find out what the pay was, he headed off down the hall. I looked at Alexis. She had a strange smile on her face, and told me it would be all right.\n\nI arrived at his house at the appointed time. He answered the door and welcomed me in, leading me into the living room. It was tastefully furnished with a large sofa off to the side, facing the center of the room. There were two side chairs on either side of a large fireplace with a carved mantle. The windows were covered by heavy velvet curtains, allowing no light into the room. On either side of the fireplaces, bookshelves housed volumes of leather-bound books. There was a lamp with a Tiffany shade on a round table next to one of the chairs. It was the only light in the room.\n\nThe professor indicated I should sit in one of the chairs and he took the other. \"Hannah, I'm sure you have many questions. I will not be answering them. There is one question, however, that you will answer yourself.\"\n\n\"What is it?\"\n\n\"In time, dear, in time. I've observed you for a while. You're obviously very smart, yet, at times you hesitate to raise your hand or speak out. You could be shy, of course, but I think it's more than that. Look at how you dress.\"\n\nI crossed one leg over the other and fidgeted as the professor fixed his eyes on me and slowly gazed at my body as I sat.\n\n\"You are quite beautiful, and yet you wear clothes that do nothing to expose the beauty. You wear skirts, when most of the others wear tight jeans or shorts. I've seen you in your rowing costume. You have an exquisite derriere and elegant long legs. No one can detect those attributes behind your skirt. Often you will have a sweater or sweatshirt on top. I think you want to disguise your chest. Are you ashamed of your breasts? Do you think them too small? Hannah, I will tell you that your breasts are perfect. Have I seen them? No. But I have, again, seen you at regattas and it is evident that your breasts are worthy of admiration. So, you are beautiful, yet you hide it.\"\n\nI touched the collar of my blouse that was buttoned up to my throat. I knew my bra and panties could be described as something an old woman would wear. I squirmed in my seat as the professor spoke. I didn't think he should be talking to me in this way. He hit a tender spot. I am reluctant to call attention to myself, whether in class or in my appearance. In private I long to be more flamboyant and to show more of myself, but I continue to fall back into the shadows.\n\n\"Your face is that of a painting by a master. The delicate skin, so quick to blush, begs for a caress. The color of your eyes...well, they defy description. One moment they're green, then hazel, then brown. I have often lost my train of thought in class when I catch you looking at me, and I see your eyes. When you wear your hair down, something rare I regret to say, it makes one want to run his fingers through it over and over again.\"\n\nI touched my hair, held in a tight bun. My blush spread from my face to my chest, not that the professor could see it behind my blouse and cardigan sweater. I wondered what his long fingers would feel like as they moved along my head. Would he touch my neck? I'm so sensitive there, and would those fingers see how warm I was? \n\n\"So, there is shyness, but there is much more, my dear, much, much more. You try to hide it, but there is heat inside you. Oh, you can shake your head, but your body does not lie. You think no one notices, but I do. You moved where you sat on the first class. Now, you sit near that tall, boy with the long hair. He excites you. Don't shake your head, Hannah; I see how your eyes grow dark when you look at him. Your nostrils flare and you rub your thighs together. Even under your skirt, I know what you are doing. I imagine you must be quite wet at those times. You have such heat and you go to such lengths to deny it.\" \n\n\"Professor, I don't think this is appropriate. I should go now.\" His words burned into me. I wanted to flee, to regain the protection of my dorm room, yet I lingered. Professors should not be speaking to students in this way, but I was affected by him. He was right, I did get wet looking at Lincoln, the boy with the long hair. What shocked me even more was not that the professor knew of my excitement in class, but that I was dripping wet right now.\n\n\"You are free to leave at any time. I think, though, that you want to stay. No one has seen you as I have. You are intrigued. You are excited. You want to know what the \"question\" is.\"\n\nI wanted to stand and run out of that house. I wanted to tell him he knew nothing about me. I wanted to prove he was completely wrong about everything he said. My feet remained planted. The silence in the room made me acutely aware of my pounding heart. I wondered if the professor could hear it. I willed myself to stand, but my body remained fixed.\n\n\"See, Hannah, you are curious. You want to know what I want of you. Fear mixed with curiosity can be a powerful stimulant. I can see your chest heaving. I'd wager your nipples are aroused and sensitive. You are on the edge of flight or fight. That's a delicious position.\"\n\nI squirmed in my seat. My thighs pressed together and I felt the dampness. My nipples ached to be touched as they rubbed against the fabric of my bra.\n\n\"The question, my dear Hannah, is how to set yourself free.\"\n\n\"Free of what?\" I asked.\n\n\"Free from what?\" he replied. I stared at him. He was tall and lean, with dark features. Today he wore a black turtleneck over black jeans. His dark hair was combed straight back. He wore rimless glasses with the lens catching the light from the lamp next to him. On his left wrist he had a copper bracelet and a silver ring on his thumb. He leaned forward, resting his elbows on his knees.\n\n\"Free from those chains that hold you back. Free from the repressed sexuality that is bursting from your young body. Free from the fear that you would not be the good girl your parents want if you give into your deep desires. Hannah, you long to be free. Today, you will have a taste of what it is to be free\u2014to be a sexual woman.\"\n\n\"You're crazy. I'm nothing like that and don't have any of those feelings you say. I'm a normal person, not some pervert.\"\n\n\"Desire is not perversion. Desire makes us human. Desire enables our people to survive. Without desire, we are not alive.\"\n\n\"I'm going to leave now,\" I said. His words frightened me. I am a good girl, not some slut controlled by her sex. Even as I thought of that concept, I longed to reach under my skirt and touch myself. I wanted to pull my panties aside and plunge a finger in my wet cunt. God, when did I ever say cunt?\n\n\"You are free to go at any time,\" the professor said once more. \"I know, though, that you want to stay. You want to know what's next.\"\n\n\"I'm leaving,\" I said, but remained seated.\n\nAfter a minute, he spoke. \"You say you're leaving, but here you are. Hannah, I am going to loosen some of your chains today. It will be only a start. You will have to take the rest of the journey by yourself.\"\n\n\"What...what are you going to do to me?\"\n\n\"I am going to do nothing. I am going to give you permission to do what you want, what you have denied yourself.\"\n\n\"How?\"\n\n\"Stand up, please.\"\n\nI forced my legs to work. Slowly I raised myself from the chair, praying my knees would not give way.\n\n\"Take your clothes off.\"\n\nI stopped breathing. Surely, he didn't tell me to undress. My mouth hung open.\n\n\"I...I can't. I won't.\"\n\n\"Hannah, you wear these clothes that cover you so completely. Why do you do this? Is it because you are afraid of your eroticism? Do you think by hiding your figure that you can hide your desires? That's not possible.\"\n\nThe professor smiled. \"You are also afraid that exposing your flesh to others will put at risk of being rejected. You are not confident that your body will be found desirable. You hide your desires and you hide your skin. Today, we will overcome that. Take your clothes off, Hannah. Let the real woman appear.\"\n\nI was sweating, soaking the armpits of my blouse. My hands remained close to my sides. How did I get in this ridiculous situation? I'm not going to strip in front of my professor. I've never done anything like this. I'll refuse and leave. At least I can face him in class again. If I did what he wants, I could never look at him again.\n\n\"Get rid of the sweater and then unbutton your blouse.\"\n\nThat's it. I'm leaving. My feet remained fixed. I decided that I would stay, but I would not allow him to make me comply. I willed my arms to remain still, yet somehow my hands began to move to my neck. I pulled the sweater off and threw it toward the couch. I shuddered as I undid the top button of my blouse. One by one, I opened the shirt, exposing my bra and the flesh of my tummy. \n\n\"Good. Slip it off your shoulders.\" As if in a dream, I let the cotton fabric slide down my arms and dropped the blouse to the floor. I instinctively covered my breasts, hidden behind the sturdy bra. I tried not to register the shock that the touch on my erect nipples sent through my veins. The greater shock was I was standing half naked in his living room. I wanted him to command me to do more\u2014to do things I never dared to even think about.\n\n\"Loosen your hair and shake it free,\" he said. I reached up and pulled the pins from my bun. As my hair cascaded to my shoulders, I shook my head loosening it into thick waves. \n\n\"Run your fingers through it.\" I let the silky strands slide through my fingers. I felt an intense tingle between my legs.\n\n\"Beautiful. Now, Hannah, reach under your skirt and remove your underwear.\"\n\nI knew we had reached my barrier. There was no way I was going to take off my panties. I stared at him. The professor smiled and slowly extended his hand. He anticipated the gift of my intimate undies.\n\nI bent and ran my hands up my legs. Hooking my thumbs in the band of my panties, I eased them down to my ankles. Holding the band with one hand, I stepped out of them. I stood, the white garment hanging from my fingers. The professor inched his hand forward. I placed my underwear in his hand. He used his thumb and forefinger to rub along the crotch, feeling the wetness. He looked at me with a smile.\n\n\"The bra, please, Hannah.\"\n\nI felt bereft of resistance. I unclasped my bra, shrugged it off and let it fall. The air ran over my nipples, hard and protruding, causing me to shiver.\n\n\"My, how exquisite, my dear. Now, touch your nipples. You must play with them, squeeze them.\"\n\nAs my hands cupped my breasts, my breath caught in my throat. I had never felt this level of sensuousness in my entire life. I rubbed my fingers over the nubs. I licked my lips when I pinched each nipple. They had become so hard and yet so sensitive. I never wanted to stop touching them. I wanted to show them to the professor. I wanted him to desire them.\n\n\"They are so beautiful, Hannah. Please turn around.\"\n\nI twirled until I was facing away from him. \"Take off your skirt.\" Again, without my willing it, the skirt was undone and fell to the floor.\n\n\"Magnificent,\" he said. \"Bend at the waist.\" I complied, feeling air move past my exposed sex lips, damp with arousal. \"Yes, you are wet,\" he said. \"Turn back toward me.\"\n\nAs I faced him, he stared at my full and untrimmed bush. \"Just as I suspected,\" he said. \"So many women shave it off. They don't understand the sexual allure of pubic hair that hides the special treasure. Hmm, I can smell your arousal, Hannah. It is a good smell. Rich and fecund. Please sit.\"\n\nI retook my place in the chair, knees pressed together. \n\n\"Spread your knees; open your legs to me.\"\n\nI complied.\n\n\"Now, touch yourself.\"\n\n\"I can't,\" I said in a whisper.\n\n\"Why? You want to. In fact, you ache to do so. Your cunt is begging for a touch. This is your last barrier, Hannah. Cross it, set yourself free.\"\n\nI moved my finger to my crotch. My tip grazed my clit, still retreating behind its hood. I know I moaned. \n\n\"Continue, Hannah.\"\n\nI rubbed my clit. Every ounce of modesty dissipated as my fingers pressed down. I had no control. My sex was driving my mind, my hands. Pushing the hood back, I ran my fingertip back and forth. As the pressure built, I slipped a finger inside me. I cried out with pleasure. I added a second finger, plunging faster and faster. As I played with two sets of fingers, one outside and one inside, my pelvis thrust forward, for harder contact. My butt was lifting off the seat as my tempo increased. When I thought the end would never come, my body convulsed. I came and cried out. The spasms rocking my body drove everything from my mind except for the sweet pleasure of release. Slowly I lowered my butt back onto the seat and pulled my hands away. My legs splayed open; my sex dripping in front of the man across from me.\"\n\nMy eyes were closed as I tried to regain some composure. I felt a movement. I startled as I felt a damp cloth press on my sex. Opening my eyes I saw a dark-haired woman with green eyes gently wiping me. She wore a gossamer gown that showed her full and erotic naked body beneath. Her hands brushed my breasts as she leaned in to kiss my forehead. When she finished cleaning me, she moved to stand next to the professor. I could see her large breasts topped by dark nipples and a thin dark strip between her legs behind the flimsy garment.\n\n\"That was beautiful, Hannah. I think you know that you are different now. You may wonder what I thought.\"\n\nHe stood; the outline of his erection evident in his trousers. The woman standing next to him ran her hand along the shape. She unzipped him and slid her hand inside. The professors emitted a low growl.\n\n\"You may leave, Hannah, but you will never abandon the lesson you've learned. Embrace your sex, embrace your womanhood. You are freeing yourself. The rest is up to you.\"\n\nThe beautiful woman fondled him inside his pants. I dressed and left.\n\nThe End.\n\nI lifted my eyes from the screen of the laptop. Will had loosened his shorts. His hand was buried inside his underwear, stroking his cock. He opened his eyes.\n\n\"Guess you liked it?\" I asked.\n\n\"That's the hottest thing I've ever heard.\" With a grin, he extracted his hand from his shorts, but did not zip them.\n\n\"You know it's a fantasy,\" I said. \"Nothing like that ever happened, or would ever happen.\"\n\n\"Maybe.\"\n\n\"There's no maybe,\" I said. \"It's just a made-up story. It helps me get aroused and I use it as a way to intensify my masturbation. Fantasy\u2014that's it.\"\n\n\"Yeah, a story you use to turn yourself of so you can masturbate. I get that, but the thing about fantasies is that they must somehow be connected to reality in order to work. You have to imagine that you really are in such a situation.\"\n\n\"I'll admit that, but it's still fantasy.\"\n\n\"Hannah, the professor sounded a lot like our psych teacher in junior year, Mr. Arnold.\"\n\n\"Maybe.\"\n\n\"I think it's more than maybe. You used to say he was hot.\"\n\n\"So what? I never did anything with him.\"\n\n\"Who was the girl?\"\n\n\"Made her up.\"\n\n\"Really? It made me think of Alexis.\"\n\n\"I made her up, get it. Besides Alexis would never do something like that.\"\n\n\"That's not true and you know it. She told us about some of her flings with other girls. As I recall you thought that sounded sexy. And, you've often said that Alexis was the sexiest person you knew.\"\n\n\"She and I never did anything, honest.\"\n\n\"I believe you, Hannah. But remember this is fantasy. Maybe part of your fantasy includes Alexis. Maybe you'd like to see her naked and masturbating. Or, maybe you'd like her to masturbate you?\"\n\n\"That's stupid. I'm not discussing it any longer.\"\n\n\"Whatever,\" Will said. \"But you have a hell of a story here. Too bad.\"\n\n\"Too bad?\"\n\n\"Yeah, you won't be voted as the worst story. I'm not going to see you naked and playing with yourself.\"\n\n\"You're a jerk,\" I said and slapped his leg. I let my hand rest on his thigh, inches away from his open fly. I could tell he still was erect behind his white briefs; there was a damp spot on his briefs at the crown of his erection. \"Maybe you ought to zip it up now.\"\n\n\"I could,\" he said. \"Or, I could, you know, take it out and finish. Would you like that? Maybe you'd like to help.\" He moved my hand to rest on top of his erection behind the underwear. I felt it throbbing.\n\n\"Why don't we wait to see what happens tomorrow night.\" I patted his hard shaft before I pulled my hand away.\n\nHe smiled and closed his shorts.\n\nThe Contest\n\nAlexis had ordered in a ton of Chinese food. We all chipped in for the cost and we shared lots of wine that we all had brought with us. When we cleaned up, we gathered in the living room, just as we had when we decided to agree to this wild contest.\n\nAlexis took charge and said we should draw numbers from a bowl. The lowest number drawn reads his or her story, the second lowest goes next and so forth.\n\n\"We're going to read them out loud?\" I asked, trying to hide the fear in my voice.\n\n\"Yeah. I think it will be much sexier if we hear the person saying the words. Is there any objection to that?\"\n\nNo one said anything, so I figured I would keep quiet. Alexis said she had written numbers on pieces of paper and put them in a small bowl. She said we should draw one piece of paper, but don't look at it until everyone has one. She passed the bowl and we each extracted a folded paper. When everyone held a paper, Alexis said she'd go first.\n\n\"Five,\" she announced. Bart was sitting on her right and he said, \"One. Fuck!\" We continued until we established the order. It would be Bart, Will, Emily, Liam Alexis and me. We refilled our wine glasses and turned our attention to Bart.\n\nBart was not a gifted storyteller, and that's putting it mildly. His tale centered around phrases like, \"Huge fucking tits\" \"fucking yanking\", \"fucking wanking\" and \"fucking stroke the shit out of my fucking huge cock\". He left us begging for less when he announced \"I fucking shot a fucking ton of jizz outta my fucking cock\".\n\nWe all booed at the end. \"Not too good?\" he asked.\n\n\"At the risk of teeing up another contest,\" Emily said. \"It fucking sucked.\" We agreed and even Bart joined in on the laughter. \"Well, let's see what the rest of you came up with?\" he said.\n\n\"Don't you mean 'fucking came up with'?\" teased Alexis.\n\nIt was Will's turn. I was really excited to hear his story. Part of me wanted to even the score since he had heard mine. The other part centered around admitting that I found him attractive and wanting to see if I could use my imagination while he spoke. I recalled the feel of his erection after I read my story to him. I had regretted that he did not expose himself that night. I would have wanted to see his erection. I would have enjoyed watching him masturbate.\n\n\"I hate to disappoint you after that classic tale from Bart, but mine actually happened. Further disappointment...I don't think I use the word fuck at all.\"\n\nWe cheered him and he began his tale.\n\nWill's Story\n\nIt was the summer between my junior and senior years of high school. My mom's sister and her family came for a visit. My aunt and uncle, and my cousin, Addy, would be staying at our home. The adults took the guest room and Addy bunked in my sister's room, who was working at a camp for the summer. ",
        "I hadn't seen Addy for a couple years. We always had gotten along all right. My mom and aunt are twins. Addy and I were born on the same day, though in different parts of the country. Over the last few years, she'd changed. Gone were the braces, glasses and stick figure. Addy now had a sweet smile, contacts that showcased her blue eyes and an attractive figure. This was corroborated on the second day of their visit when she and I went to the community pool. In her bikini she showed round breasts pushing against the top and a tight butt. Her legs were taut and tan. I could see a lot of the other guys checking her out.\n\nI met some friends, introduced Addy. It was a good day of swimming and just hanging out. On the walk back home Addy said she liked my friends.\n\n\"The girls are all so pretty,\" she said. \"I kinda felt like I didn't belong.\"\n\n\"What? You were the hottest one there.\"\n\nShe turned to look at me. \"You think I'm hot? Seriously?\"\n\n\"Uh, I mean yeah, but not like I was perving on you. You're just, you know, really pretty.\"\n\n\"Thanks, Will. I didn't even think you ever noticed me.\"\n\n\"Maybe a couple years ago I didn't, but you've changed.\"\n\n\"Getting rid of my braces helps. So does getting boobs. They're not huge, but a lot more than I had a couple years ago.\"\n\n\"Yeah.\"\n\n\"So you noticed my boobs?\" She laughed.\n\n\"Only in an innocent cousin way,\" I added quickly.\n\n\"What's a 'cousin way'?\"\n\n\"Shit, I don't know. I just didn't want you to think I was checking you out.\"\n\nAddy touched my arm. \"That wouldn't freak me out, Will.\" She took my hand and held it as we walked toward home. I swear I got an immediate boner. I shifted my towel so I could hold it in front of me to hide the obvious tent.\n\nWe got home in time to get cleaned up for supper that my mom said would be ready in an hour. My sister and I shared a bathroom that connected our bedrooms. I told Addy she could go first. When I heard the shower start, I stripped and lay on my bed with my tablet. I called up my favorite porn site. I was really worked up from what Addy said, and holding her hand. As I watched teens playing naked on a beach, my mind wandered to what Addy would look like naked. Imagining her just feet away in the shower, running her hands over her smooth, wet skin made me put down the tablet and concentrate on stroking. I closed my eyes and streamed images of her in her in the bikini.\n\nI was at the edge and gave myself long, fast strokes until the dam burst. My cum was coating my chest and stomach when I heard a sound. I opened my eyes to see Addy standing in the bathroom doorway wrapped in a towel. She stared at my cock as it dribbled its last bit into my short-cropped pubic hair. I didn't know what to say as I grabbed my towel off the edge of the bed and covered my softening cock.\n\n\"Don't do that, Will,\" Addy said.\n\n\"What?\"\n\n\"Don't cover it up. I want to see.\"\n\n\"God, didn't you see enough. I'm so embarrassed.\"\n\n\"Don't be. I enjoyed it. It was so sexy.\"\n\n\"You're not grossed out or pissed off?\"\n\n\"Just the opposite. Will, it's the first live dick I've ever seen.\"\n\n\"No shit?\"\n\n\"True.\" She entered the room and sat on the bed. She smiled and lifted the towel from my waist to peek underneath. \"It's sorta cute.\"\n\nI tossed the towel on the floor. \"It gets bigger. Right now it's like, you know, tired from just having cum.\"\n\n\"I think it's a nice size. I like it.\"\n\nWe were both silent as Addy continued to look at my naked body. \"You can, you know, touch it if you want.\" I said. She smiled, then nodded. As her fingers slowly approached my cock, it twitched. She jumped and pulled her hand away. We both laughed. \n\n\"It's ok, touch it.\" She let her finger rest on my shaft. \n\n\"Pick it up; put your hand around it. Play with it. It's kinda like a pass to do what you want.\"\n\n\"I don't know what to do with one.\"\n\nI took her hand and guided her fingers to wrap around my shaft. \"Oh, it's warm.\" I nodded. She picked it up. \"It feels heavier than I thought it would.\"\n\n\"You've been thinking about my cock?\" I teased. Addy dropped my cock and blushed. \"No, I mean not really. I've seen pictures of penises, but I couldn't imagine how they'd feel.\"\n\n\"I'm kidding you.\" I guided her hand once again to my cock. She lifted it and ran one finger along the tip. \"Does touching it feel good?\"\n\nI showed her the spot underneath the tip that was most sensitive. She ran her finger along it and I made a noise. \"That felt good?\" I told her it felt very good. \n\n\"Can I touch your balls?\" I told her to be careful not to be too rough. She cupped my sac and let my balls rest in the palm of her hand. I showed her how to isolate a teste. She played with my nut. \"God, I could never imagine doing this. It's really cool.\" As she played with my balls, her other hand stroked my shaft. \"This is what you were doing,\" she said. I nodded.\n\nIn a few short seconds, nature took over and I began to get hard. \"This is awesome,\" Addy said, as I grew and hardened in her hand. \"Show me what to do.\"\n\nI reached into the drawer in the bedside table and pulled out a tube of lube. I squirted a dab into her hand. \"Cover my shaft with this. Then you can pump it up and down. The lube helps against making it painful.\"\n\nShe carefully lubed me and then moved her hand up and down. \"Like this?\"\n\n\"Yes, just like that.\" The tip of her tongue slipped past her lips as she concentrated on stroking me. I was squirming and moving my hips. \"This feels good?\" I nodded.\n\n\"Are you going to, you know, cum again?\"\n\n\"It might take a while since I just had a good one?\"\n\n\"Do you think of something sexy when you're doing it?\"\n\n\"Yep.\"\n\n\"What were you thinking about?\" She slid her hand at a faster pace.\n\n\"You.\" Her hand froze in mid stroke. \"Me?\"\n\n\"In your bikini,\" I added. Her hand began to move again. Wondering if I should tell her the whole story, I said, \"Actually I was thinking about you in a different way, too.\"\n\n\"How?\"\n\nShe was moving her hand faster. \"I was imagining you in the shower. I tried to picture what you'd look like without the bikini while you washed yourself.\"\n\nShe smiled. \"Thanks, that's sexy.\" As she continued to rub me, she asked, \"Are you going to cum again?\"\n\n\"Maybe, it depends.\"\n\n\"Depends on what?\"\n\n\"Depends on if I could see what's under that towel.\" Her hand stopped.\n\n\"You want to see me naked?\"\n\n\"Definitely. I mean I'm naked.\"\n\n\"Don't you dare laugh.\"\n\nI crossed my heart. Addy undid the towel and let it fall to her lap. Her breasts were pale pillows on her chest. There were a few freckles on the tops of them, but mostly they're white. Her small nipples rested in the middle of rose-colored areolas. I thought they were perfect.\n\n\"Could you stand up?\"\n\n\"Why?\"\n\n\"I want to see the rest.\" Taking a deep breath Addy stood. She had a tiny belly button and prominent hip bones. My eyes stayed fixed on her strawberry patch of pubic hair. She obviously trimmed it to fit inside her bikini, but it was still thick and silky looking. I extended my hand toward her bush and then hesitated. Addy nodded. I ran my fingers through the tangles. Although it was not the first pussy I had touched, I believed it was the most beautiful and certainly the softest. Addy took in a deep breath as my finger grazed her sex. She put her hand on my wrist and held it still. I moved my finger between her lips. Addy said quietly, \"Not yet.\" I pulled my hand back. \n\n\"Could you turn around so I can see your butt?\"\n\n\"Really, you want to look at that?\"\n\n\"It looked so good in your bikini, I want to see it for real.\"\n\nAddy spun. Her small cheeks held a dimple in each. I couldn't resist cupping them. She flexed and as they tightened I fought the desire to run my tongue along the sweet crack. Although small, they were round and formed a tiny bubble. I think I was in love with her ass.\n\nShe turned back toward me and sat on the bed. \"So, you're not totally grossed out?\"\n\n\"You're the most beautiful girl I've ever seen. I could look at your body all day. And, hey, your face is fabulous.\"\n\nShe giggled. \"Fabulous!\" Her eyes fell back on my erection. \"I'll tell you what's fabulous, this dick.\" She began to stroke me.\n\n\"Keep doing that; I'm so close.\"\n\n\"No,\" she said.\n\n\"Huh?\"\n\n\"I want to watch you do it. It was so hot the first time.\"\n\n\"Are you going to do it too?\" I asked.\n\n\"Not now. Maybe I will later, when I'm alone.\"\n\n\"That's not fair. I'd like to watch.\"\n\n\"Ok, I'll think about it. But now, do it.\"\n\nAddy had a look of complete concentration as I slid my hand up and down. I stared at her breast I told her I couldn't last any longer and shot a long strand onto my stomach. She reached out to touch me. I told her to pump. She did and I deposited three more small puddles.\n\nMy dick began to soften. Addy ran her forefinger along my tip, collecting some liquid. \"Is it too disgusting that I want to taste it?\"\n\nI shook my head. Addy licked the cum from her finger. She remained quiet as the taste coated her tongue. Then smiling, she scooped some more from my stomach and put it in her mouth.\n\n\"I like it\u2014it's so different. Jesus, Will, this is unbelievably sexy.\"\n\n\"Yeah, maybe we can do it again while you're here.\"\n\n\"I want to. Maybe you could teach me some other stuff.\"\n\n\"Like what?\"\n\n\"Blow jobs?\"\n\nAs that thought caromed through my brain, I thought this was going to be the best family visit ever.\n\nThe End\n\nAfter a few moments of silence, Alexis said, \"Wow, that's hot.\"\n\n\"So, she was a red head,\" asked Bart. Will said it was more strawberry blond. \n\n\"And her pussy was red?\" Bart asked.\n\n\"Why's that important?\" asked Emily.\n\n\"Red pussy is like the Holy Grail of pussies,\" he answered.\n\n\"I thought guys liked shaved pussies,\" said Alexis.\n\n\"Definitely,\" Bart said, \"but there is something about a red pussy that gets a guy going.\"\n\nAlexis looked at Liam and Will. From the stupid grins on their faces, she surmised they agreed.\n\n\"What were her breasts like?\" I asked.\n\n\"Nice. Not too big, maybe somewhere around what you and Emily seem to have.\"\n\n\"Not like Alexis?\" I followed up.\n\n\"Uh, no,\" he said. \"Hers are in another category all together.\"\n\n\"You're such a pig,\" Alexis said. \"But a pig who tells a good story. So, did you two get it on?\"\n\nWill shook his head. \"No. I told you the five women I've slept with. I did get to educate her on the fine points of blow jobs. And, she permitted me to demonstrate that women's orgasms can come from oral sex as well.\"\n\n\"It's still early,\" said Alexis, \"but I have to say that Will is way in front and Bart is way behind.\"\n\nIt was Emily's turn. She's probably the cutest of the girls. Alexis is beautiful and so hot. I'm pretty, but don't turn heads. Emily is your sister, the girl next door and a co-worker you love to flirt with. Her blond hair is cut short, framing her face and complementing her green eyes. She is the smallest of us with a compact body, like the gymnast she was in college. I've seen her naked and know her breasts are a bit larger than mine with big areolas and dark nipples. She maintains a well-trimmed blond patch. She is rarely without a smile and the center of most social events because of her out-going personality.\n\nShe took a folded stack of papers from her purse, wiggled her butt to settle in the cushions and began to read.\n\nEmily's Story\n\nI never thought I'd be telling other people about something so private. And, I never, ever thought I'd be talking about this particular part of my sex life. My story is real and it began, like so many things do, innocently.\n\nAt work I met a nice woman who was on our team. She's older, maybe mid-forties. One day we bumped into each other in the line at the deli down the street. Marsha, that's her name, suggested we grab a table and eat together. I gave her my order and stood near the tables to snag the next one that came open. I was finally sitting down when Marsha arrived with our orders. I paid her and we began to eat.\n\nWe found we shared some interests like the books we read and foreign movies. We chatted non-stop and had to rush back to the office when we realized we'd lost track of time. After that we had lunch together most days. Our conversations ranged from the trivial to the personal. I found myself talking about my love life, or more specifically at that point, my lack of one. Marsha was divorced, but seeing a guy she seemed to like a lot. She sympathized with my run of back luck with guys. \n\nAfter one particularly bad date over the weekend, I was bitching to Marsha. I told her he was clueless about how to get me excited. I said I should stick to masturbation, but that never satisfied me.\n\n\"What do you use?\" she asked.\n\n\"Use? Nothing, I guess, just my, you know, my fingers.\"\n\n\"Oh, honey, you need to get a toy.\"\n\n\"I've never used one. I wouldn't know where to even begin. Besides, I'd be too embarrassed to go into one of those stores.\"\n\n\"Emily, those stores don't give a shit about you. Everyone is in there for the same reason\u2014sex. They're not going to think anything about you or what you're buying.\"\n\n\"But I wouldn't know what to even ask for.\"\n\nMarsha seemed to be thinking that over. \"Are you around this coming weekend?\"\n\n\"Yeah, nothing lined up.\"\n\n\"I'm coming by around one on Saturday afternoon. Be there.\"\n\n\"But...\"\n\n\"Trust me. Just be there.\"\n\nAll week I tried to pry out what she had in mind. Marsha just smiled and said she'd be at my apartment at one. As Friday rolled around my curiosity and anxiety was scaling up and up. I begged her one last time to at least give me a hint.\n\nShe kissed my cheek and said, \"See you tomorrow at one.\"\n\nI thought the morning would never end. I chilled a bottle of wine and prepared a cheese and fruit plate for us. When my wall clock chimed one, I was checking the view out my window to see if Marsha were coming. I was startled to hear my doorbell. Through the intercom I heard Marsha and buzzed her in. A minute later she knocked and I let her in. She gave me a hug. I saw the brown paper bag she was carrying.\n\nWe were both casually dressed. I had on shorts and a tank top, while Marsha wore shorts and a pink tee shirt. This was the first time I saw her figure in such an exposed way. She had long, toned legs and a full looking bust under her shirt. For a woman her age, she was in great shape.\n\n\"What's in the bag?\" I asked.\n\nMarsha laughed. \"Aren't you the eager on? Are you going to offer me some wine or something?\"\n\nI opened the wine, poured two glasses and put out the tray with the goodies. Marsha tilted the rim of her glass toward me.\n\n\"What are we toasting,\" I asked.\n\n\"To a new adventure, and an end to frustration.\"\n\nI'm sure she could read the puzzlement on my face. She took another sip of wine and picked up the bag from the floor and placed it on the couch between us. \n\n\"Emily, this is a present. I can say from personal experience that this will change your life. Are you ready?\"\n\nI nodded. She pulled a box out of the bag. It was a tall box, about the size of a liquor bottle box, but maybe a little wider. Marsha had wrapped it in silver paper and tied a pink ribbon around it. I held it and felt its weight. It was heavy, but not heavy enough to be a bottle of vodka. I shook it, but didn't hear anything.\n\n\"Open it,\" she said.\n\nI slipped the ribbon off and tore at a corner of the paper. Underneath was a black box. I could see the words, \"Fifty Shades of\". The rest was still covered. I ripped the paper free and now read, \"Fifty Shades of Grey\" underneath was written \"The Official Pleasure Collection.\" Then there was a picture of an odd item, that looked a little like a dildo, but not one I had ever seen before. Under the picture were the words, \"Greedy Girl, G-Spot Rabbit Vibrator\".\n\nMy cheeks began to burn. My mind was a bowl of mush. It took me a few seconds to realize that Marsha was giving me a vibrator. \n\n\"So, this is a...\" I tried to say.\n\n\"This, Emily, is a miracle worker. Believe me you'll wonder why God even created men after a session with this. I guarantee that you'll always come to work with a smile on your face, no matter how bad your weekend date might have been. Take it out of the box.\"\n\nMy hands were slow to react, but I managed to open the box. The thing was black with a penis shaped appendage and another arm sticking up with a forked ending to it. Looking closer I could see that the forks did look like a pair of rabbit ears and the bulbous base resembled a rabbit's head.\n\n\"Marsha, what...I mean how do I...?\"\n\n\"You're a big girl. You can figure it out.\"\n\n\"Are there instructions?\"\n\nMarsha laughed. \"How about I throw in a free lesson as part of the gift?\"\n\n\"You mean you'll, uh, show me how to use it?\"\n\n\"What are friends for?\" she said and finished her glass of wine. \"Look, we're both mature and sensible women. You may be embarrassed, but you are definitely frustrated. I've been using one like this for over a year. I've learned what all the settings do and how to get the most out of each of them. It's not like we're going to go gay. It's just one friend helping another.\"\n\nI finished my wine. \"This might go beyond what friends do.\"\n\n\"Not really. I had a friend show me. I'm just paying it forward.\"\n\nI turned the vibrator in my hand. \"Is yours black?\"\n\n\"No, mine's pink. I thought the black looked more powerful, and I thought you might need one that also worked on your psyche.\"\n\n\"It looks more like something Darth Vader would use,\" I said with a grin.\n\n\"That's it,\" Marsha said. \"We'll call it Darth Vader.\"\n\n\"We're naming it? What's yours called?\"\n\nMarsha grinned, \"My triple P.\"\n\n\"Triple P?\"\n\n\"Pink Pussy Pleaser.\" We both laughed.\n\nI spent the next few minutes reading all the language and cautions on the box. \"This says it needs to be charged for two hours before using. I guess we'll have to postpone the lesson.\"\n\n\"Nope. I charged it before I brought it over. It's ready to roll. Let me show you.\" Marsha took the black beast and pushed a button. The black phallus started vibrated, pulsating and generally making obscene gestures. Marsha played with it to show its various speeds. She then pushed another control and the rabbit ears started twitching.\n\nMarsha pushed the rabbit ears against my finger. The sensation made me gasp as I imagined it on my clit. \"It's at its lowest setting right now,\" said Marsha. \"I wouldn't recommend going any higher until you've gotten used to it. Even I have to work up to top speed.\"\n\n\"What happens when you reach that speed?\"\n\n\"My world explodes. I come like I've never come before. The orgasm zaps through my body like lightning bolts. It's simply fucking amazing.\"\n\n\"I don't know, Marsha. It may not be for me.\"\n\n\"It's for every woman. I'm going to wash it off again. I already did it once, but I want you to be comfortable. Why don't you make yourself more comfortable?\"\n\n\"I am.\"\n\n\"Honey, take off your bottoms.\" Marsha rose and went to the kitchen. I heard water running in the sink. I was sure I could not go through with this crazy idea. I recalled how the rabbit ears felt on my finger. Now those fingers were at my waist, undoing my shorts. I pushed them off and stood in just my bikini panties from the waist down.\n\nMarsha returned, drying Darth Vader with a dish towel. \"You need to lose those panties.\"\n\n\"Do I have to?\"\n\n\"It's the only way to get the most out of old Darth.\" Taking a deep breath, I eased my panties off. I covered my sex with my hands.\n\n\"Emily, I'm going to see your pussy in a few seconds. Relax.\"\n\nI dropped my hands to my side. Marsha stared without any shame. \"That's lovely, dear. I like the little blond that you've left. I'm smooth. When I saw a couple grey hairs appear, off everything went. I don't want someone down there to think I'm that old.\"\n\n\"You're beautiful, Marsha. You don't look old.\"\n\n\"Thanks. I've got a couple years before everything goes to shit.\" She spread the towel on one of the couch cushions. \"Sit with your butt on the towel. Things will get pretty wet and you don't want to stain your couch.\" I arranged myself with my knees up, but tightly closed. Marsha sat at my feet.",
        "\"Spread your legs.\" I let my knees fall apart, exposing my sex to my friend.\n\n\"It's even prettier looking at it from this angel. You know you're swollen and red.\"\n\n\"Sorry. I'm getting turned on, plus I'm so embarrassed.\"\n\n\"No, it's good. If you're already wet, things will go easier. You are wet. Right?\"\n\n\"Guess so.\"\n\nMarsha extended her hand and ran a finger along my lips. I cried out.\n\n\"Yep. You're wet. Good girl, but you might need a little help. Do you have any lube?\"\n\nI told her I have some in the nightstand by my bed. I went to get up, but she told me to stay. \"Here, hold Darth. You two need to begin to bond.\" She left and I let my fingers run all around the black thing in my hands. Marsha returned with the bottle. She opened it and squirted some onto her fingers. Taking Darth from me, she coated the long, thick shaft. She handed it back to me. \"I'm going to put some in you, too. Ok?\"\n\nAll I could do was nod. Marsha spread my lips and inserted a finger inside. She moved it around spreading the lube. In spite of my tension, I felt my insides clench at her finger. She pulled out and wiped her finger on the towel between my legs. I placed Darth in her outstretched hand.\n\nMarsha ran the tip of the phallus along my lips. My hips swiveled as I fought the urge to push forward and take the black thing inside. Marsha kept moving it along lightly. Next she pushed my lips open with the tip of Darth. My breath caught in my throat. I realized I had moved beyond embarrassment and now was anxiously awaiting more.\n\n\"I'm going to push it inside. I'll just put the tip in, before we go deeper. You need to adjust to its size. It may be larger than what you're used to.\"\n\n\"Not really used to anything,\" I said, trying to make a joke. I stopped smiling and gasped as the hard tip entered me. Once again I resisted the urge to thrust forward to capture it. Marsha began to slowly twist it from side to side. I felt my entrance opening. She moved it in an inch or so.\n\n\"Does this feel ok?\" I nodded.\n\nShe pushed in further until I felt the rabbit ears near my covered clit. Marsha held the phallus in place while she adjusted the ears to fit around my clit.\n\n\"Ready?\" I shrugged.\n\nMarsha turned on the phallus. \"This is the lowest setting. Let me know if it is too intense.\"\n\nThe vibrations shocked me. I never experienced anything like this before. The soft hum was the accompaniment to my rapid heartbeat and the explosion of experience between my legs. My hands cupped my breasts, squeezing my nipples through the fabric of my bra and shirt.\n\n\"I'm going to increase the setting a bit,\" she said. As the hum increased, Darth must have started using his light saber to touch every part of my interior. The intensity was getting to be overwhelming. I slipped my hands under my shirt and pushed it and my bra up. My nipples were rock hard as my fingers played with them.\n\nAfter a minute of this intensity, I felt the orgasm approaching. It felt big.\n\n\"As I move to the next setting, I'm going to start the rabbit ears.\" I wanted to tell her to stop, but words failed me. The only sound I made was a scream as the ears began to vibrate around my clit. I never even imagined feelings like this existed.\n\n\"I'm amping the rabbit ears to the next level.\" Before I could react, the vibrations seemed to increase exponentially. I couldn't control my hips as they bucked to increase pressure on the thing invading me, and the wand on my clit. I pulled my nipples hard, extending my breasts to their limit. The combination of pain and pleasure took control of my mind. I know I was mewling like a cat\u2014a cat in heat.\n\nWithout warning Marsha increased the strength of the phallus. I could not hold back. My voice even scared me as I cried out when the first wave hit. When the second and third rolled in, I was literally out-of-control. I did not know if I said anything. All my senses were focused on my pussy to the exclusion of sight, sound, hearing or smell. I came hard.\n\nAt length the vibrations and pulsing diminished. Marsha extracted Darth and I felt cool air flow across my pussy. Marsha's hand covered my pussy, easing the still lingering sensations. Using all my strength, I rolled onto my side, closed my eyes, and slept.\n\nThe End\n\nWe all sat in silence absorbing the impact of Emily's story. I couldn't judge how the others were feeling, but I was imagining all that she'd said. The pictures in my mind caused my panties to become soaked.\n\nAlexis asked, \"Is this a true story?\"\n\nEmily nodded.\n\n\"Do you still use Darth,\" Liam asked.\n\n\"God, yes. We have become the best of friends.\n\n\"Do you still see Marsha?\" asked Bart.\n\n\"Yes, and just like Hannah and I, we have mutual sessions. They are fun. I have to add that Marsha also helped me find equilibrium with Darth.\"\n\n\"What's that mean?\" asked Alexis.\n\n\"She had to perform an intervention. After that first experience, I began to use Darth regularly. Well, make that constantly. I could not get enough of those orgasms. I truly became addicted. When I showed up late for work a couple mornings because I couldn't get out of bed and leave Darth, Marsha became suspicious. On weekends, she'd ask me to go out with her for lunch or shopping, and I always begged off. I never told her the reason was that I wanted more time with Darth. Finally, when I called in sick two days in a row, Marsha knew there was something up.\"\n\nEmily filled her wine glass and drank half of it in one gulp. Her face was flushed, and she had trouble looking at any of us.\n\n\"I had given her a key to my apartment so she could take care of my plants when I was away. She arrived mid-morning. When I didn't answer the doorbell, she let herself in. After calling out for me, she came into my bedroom. I was naked and Darth was working his magic. I think it was the fourth or fifth time that day.\n\nShe sat on my bed and stroked my face. I know I should have stopped, but I couldn't. I had both the phallus and ears settings at maximum and was rushing headfirst over the cliff of my orgasm. I came hard. Marsha took Darth out of me and turned it off. She once more put her hand on my pussy to try to quell the sensations I was feeling. I pressed my hand on top of hers. We stayed in that position. Finally, Marsha pulled her hand away. Climbing into bed, she spooned me.\n\n\"Honey, you're out of control,\" she said softly into my ear. \"I know what you're feeling because I was there myself. You need to learn to pace yourself.\"\n\nI told her I wanted to, but it felt so good that I couldn't stop. Sometimes I would do it three or four times in a row. I only would stop because I was too exhausted to continue.\n\nMarsha hugged me and told me she understood. \"Emily, I'm going to take Darth with me.\"\n\nI sat up and turned to her. \"No, you can't. I need him.\"\n\n\"It's not him; it's a machine and not a person. I'll bring him back after work. You stay here and clean up your apartment. It'll give you something to do and, honestly, it looks like hell in here. When I return, you can have it back, but I'm coming again before you go to bed and take it. I'm serious; you need to get control.\"\n\nDespite my protests, that's what Marsha did. In the back of my mind I knew she was right, but it was still so hard to part with Darth.\n\n\"Did this intervention work?\" asked Alexis.\n\nEmily laughed. \"At first I practically rubbed my clit raw using my fingers. That didn't work. I was like a junkie waiting for a fix. When Marsha returned, I was still naked. Grabbing Darth, I sat on a chair and, without an ounce of shame, brought myself off. She and I argued when she was ready to leave and wanted it back. I finally gave in. That was the longest night of my life.\"\n\nEmily explained that within a couple days, she realized that Marsha was right. Marsha kept control of Darth for two weeks. By the end of that time, Emily said she had realized that she couldn't go on as she had. She set up a schedule and kept to it.\n\n\"Still on that schedule?\" asked Liam.\n\n\"Mostly,\" she said. \"I might get a bit carried away over a long weekend.\"\n\n\"That would be so hot to watch,\" said Bart. \n\n\"Not going to happen,\" replied Emily. \n\n\"I guess a guy is going to face some stiff competition in the future,\" I said.\n\n\"Well, if he's really stiff, it'll be a good start.\" We all laughed. I sorta felt like Bart, though. I thought watching Emily use Darth would be incredible. I was horny and we were only halfway through the story part of our evening. Then, we would have the two lowest scorers performing for us. I hoped I could last and not have an orgasm in front of my friends.\n\n(End of Chapter 1. Chapter 2 will soon follow with stories from Liam, Alexis and Hannah.)"
    ],
    "authorname": "AltheaRose",
    "tags": [
        "male masturbation",
        "masturbation",
        "naked in public",
        "naked with friends",
        "watching masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-m-chronicles"
}