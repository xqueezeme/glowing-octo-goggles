{
    "title": "There and Back Again Ch. 004",
    "pages": [
        "Chapter Four: Plausible Deniability \n\nWhen I woke, it was dark. I was curled in a ball, laying on the hard ground, but realised my head was pillowed somehow... \n\nMemories came rushing back. Oh God, my head is in Cailan's lap. I briefly worried about my body, at home - two days now, at least, without food or water, lying in my own waste, unless someone had found me. Knowing there was nothing I could do about it, I tried to put it out of my mind. Undecided what to do, I lay still, and realised Duncan and Cailan were talking quietly. I listened, too exhausted to bother even sitting up. \n\n\"Her story sounds insane.\" \n\n\"I know, Duncan. But somehow I still believe her. Don't you? I mean, she knew about the battle. She knew Loghain would betray us, knew we would die. Knew all the servants still in camp would die. Somehow, this strangely dressed woman just shows up, in the middle of nowhere, knowing the future? I'm guessing by the look on your face she knows more about the infamous Grey Warden secrets than she's supposed to, but she doesn't know the normal things about being here. You should have heard us talking while you were scouting. She's quite obviously never spoken to royalty before, which isn't that unusual if she's a commoner, but then you're right - she sure acts like a noble, and none of even the minor nobility would be so confused about the protocol when speaking to me.\" \n\n\"I still don't like it, your Majesty.\" Duncan sounded concerned. \"There's more to this story. She is involved, somehow, in how we survived. Which I'm grateful for, don't get me wrong, but she is either hiding something, or completely mad. There's no way this girl could have found her way through the mess that battle turned into without injury unless she has some sort of skills, but she practically swoons at the sight of blood, so she's clearly no fighter.\" \n\nDuncan thought, trying to explain his concern. \"Did you see the ranks of dead Emissaries near where we woke? There was a blast pattern, radiating out from where she must have been standing. She killed them, I'm sure of it. We both know the mages were way in the back, and most of them would have left with Loghain. There weren't any with the Grey Wardens or on the front lines.\" \n\n\"That's like the farm she mentioned. I was there, Duncan. There were dead darkspawn everywhere, and an Emissary, even. There was an entire slaughtered family, covered with blankets, arms crossed on their chests, and a huge pit someone had dug to bury their corpses. We didn't tell anyone about it, and sent the only survivors off to safety in the north - how would she have heard about it unless she was there? She must have killed those darkspawn too, somehow. Maybe she's a mage? An apostate? She's clearly terrified.\" \n\n\"Your Majesty, I know you have a weakness for damsels in distress, but please try not to look at her like that?\" Cailan chuckled, and I felt his hand stroke my hair softly, once. Duncan sighed. \"Being an apostate still wouldn't explain her uncanny knowledge. I don't know if Loghain planned his treachery in advance...\" the tone of this said they'd already had this discussion, possibly more than once, while I slept, \"but if he did he wouldn't have let someone who knew about it slip out of his grasp. And how does she know about Alistair and Aedan? We didn't tell anyone he was a Cousland - you and I were the only two who knew. Alistair didn't even know! But she does. Yet...no one can know the future. Not even the most powerful magic could possibly explain what she claims to know.\" \n\n\"I told you it isn't magic,\" I complained. Cailan jumped at the sound of my muffled voice, and I took the opportunity to disentangle myself from him. My face felt gritty, my mouth was full of cotton balls, and my back was sore in a way it hadn't been since I was a little girl, falling asleep in my toy box to hide from monsters. I stretched, nodded my thanks to Duncan who passed me the water, and took a swig. To their amusement, I also poured a small amount of water onto my hands, scrubbing vaguely at the dirt encrusted there, and then also on my face. Feeling damp but far more human, I passed the water back. I turned to Cailan, trying to keep from blushing, and failing. \n\n\"Thank you, Your Majesty. For the...uh, comfort. And the pillow.\" I clasped my hands over my mouth, embarrassed anew. Cailan threw back his head and laughed. \n\n\"You're more than welcome. I'm sorry you overheard us discussing that. We should have gone out of earshot, but I didn't want to disturb you.\" \n\n\"It's okay. Neither of you have any reason to trust me, your Majesty. You'd be perfectly within your rights to have me imprisoned, or worse.\" \n\n\"We're rather short of prison cells at the moment, my Lady.\" He winked at me again, and I giggled, even as Duncan snorted. \"Are you hungry?\" He gestured towards the remainder of the rabbit carcass, and I shook my head, my stomach rebelling at the thought. I can see eating here is going to be a problem. \n\n\"If it helps, your Majesty, I will give you my oath to answer all of your questions to the best of my ability. And to offer what meagre help I can to you both. And hopefully in time I can prove my good intentions. Or I'll disappear somehow, and you won't have to worry about me either way.\" I didn't know whether I'd be disappointed or relieved if - or rather, when - that happened. \n\n\"Before we get into that, I'd like to point something out. You shouldn't be calling me 'your majesty' anymore. Either of you.\" Duncan and I both protested, but he continued anyway. \n\n\"We've gone to some effort to hide my identity. It would be a shame to waste it all the first time one of you bows, or calls me 'your majesty' in public, wouldn't it? I'd hate to have cut my hair for nothing.\" He ran a rueful hand over his blond mess, and I laughed again. \n\n\"But what should we call you? Ca...your name isn't going to be much less recognisable.\" \n\n\"You're allowed to say it, you know.\" At my questioning glance, he elaborated. \"My name. Please. If you expect me to call you Sierra, you can at least call me Cailan.\" I nodded, grateful. \n\n\"You're right, Cailan. This goes for you too, Duncan. You need aliases. What would you like to be called? We should probably take to practicing right away.\" \n\n\"Ooh! I've always wanted an alias! Let me think. What name should I use? I need something bold, a name for a handsome hero of legend, no? What about...oh, I know! I shall be Garahel, named after the man who killed the last Archdemon during the fourth Blight. Perfect!\" \n\n\"Your Ma...Cailan. If the goal is to remain unnoticed, perhaps a name that wouldn't draw so much attention?\" Duncan asked drily. He looked somehow both amused and annoyed. Cailan was smirking, and I realised he was baiting Duncan. I covered a giggle with a fake cough. \n\n\"Wasn't Garahel a dwarf?\" \n\n\"Perhaps you would like to bestow our aliases upon us then, dear lady.\" Cailan quirked an eyebrow, and I knew my giggle had been caught. \n\n\"Oh God. Uh...\" \n\n\"God? Do you mean the Maker?\" \n\n\"Another hard question. At home, there are many different religions, but most of the common ones near where I live just call the deity God. There are a lot of similarities to the Maker, from what I could tell. I'm going to need to train myself to think different curse words here.\" They looked skeptical. I ignored them, shaking my head to clear it. \"Returning to the name question. How about something quite common, then.\" I wracked my brain, looking for NPC names I'd seen but who weren't major characters. \"How about...Theron, for you, Cailan, and Duncan, you can be...Tomas?\" \n\nI saw them both consider, then nod. We sat quietly for a moment, but I knew it wouldn't last. All joking aside, they still had no reason to trust me. I hit upon an inspiration, and started unlacing my boots. I did have a few things I could use to back up my story, after all. I passed one to a confused looking Du...Tomas, and the other to Theron. They both looked down, surprised, but I saw Tomas' face immediately go blank, a mask to cover what he was thinking. Theron still looked confused, but Tomas started slowly examining the boot in detail. I saw him look at the stitching, the leather, the rubber sole, the thick laces. Looking back up at me, his face still guarded, I shrugged. \n\n\"They're quite common, where I'm from. They're not even particularly high quality.\" That got a response, though I couldn't quite read the expression. He lifted one of the laces, and raised an eyebrow. \"Nylon. They're made of nylon. It's a synthetic fabric.\" Theron, less practiced at schooling his facial expressions, looked even more confused. \"Man made. The fabric is...actually, I have no idea how nylon is made, but it isn't natural. We have a science that I guess is similar to your alchemy? They can make all sorts of things. Nylon is just one of them.\" I forestalled his next question. \"The stitches are done by a machine, not by hand. That is how they're so regular.\" Do they have machines here? Hmm. \"The soles are rubber, which I think is made from the sap of some sort of tree. Although maybe it's synthetic too, now that I think about it. Either way, it's incredibly hardy, and completely waterproof.\" \n\nI took the boots back, lacing them into place, before taking off my jacket and handing it over. Both - uh - Theron and Tomas looked at the zippers in amazement, opening and closing them multiple times. Then they both exclaimed as I grabbed the water skin and trickled a little bit of water over the fabric, and they saw it run off without leaving the jacket damp. \n\n\"Nylon, again, but backed with plastic. Another man-made material, completely waterproof. More flexible than rubber, more versatile. You can buy a jacket like this for less than fifty dollars in any st...merchant shop. They're made by machine and are incredibly cheap to produce.\" \n\n\"Dollars?\" Theron asked. \n\n\"Oh, right. Um, money. Coin. Whatever you want to call it. Let's see...how much would a loaf of bread cost, on average?\" I indicated a standard, supermarket sized loaf with my hands. Theron looked embarrassed, and it didn't take much to realise why - he would have absolutely no way of knowing something like that. I would have laughed if he didn't look so chagrined. Tomas answered. \n\n\"Perhaps...25 copper.\" \n\n\"Okay. Where I'm from, it would cost, say, two to three dollars. So rough estimate, assuming the relative prices of other things are the same...\" I quickly did some math in my head. \"One silver is ten dollars. That jacket would cost perhaps five silvers.\" Both men looked at me incredulously. \"It's true! I'm not considered wealthy, where I come from, but I have perhaps eight or ten pairs of footwear that would be similar in price to these boots, and probably six equivalent jackets. Machines make producing these things quite inexpensive compared to having to get a cobbler to make shoes by hand, for example.\" I shrugged my jacket back on, self-conscious now under two speculative gazes. \n\n\"Yeah, okay, it sounds incredible to you, I'm sure. But we don't have access to magic. I mean, just think about health poultices. Consider - in my world, you would both be dead from injuries which barely look to pain you at present. We have our drawbacks, too.\" I could see confusion warring with disbelief on both of their faces, but the disbelief seemed to be decreasing. I hoped. \n\nI started emptying my pockets next. They were both very interested in the safety pins, the compass, and even the small compact with a mirror and the plastic comb. I showed off the flashlight, hand-charging the battery and then clicking it on, to appreciative oohs and ahhs. Apparently, I'm a showboat. When I brought out the lighter, they were both amazed, and both of them managed to burn their fingers before I got it safely tucked away again. \n\n\"You cheated!\" exclaimed Theron. \"You let me think you started the fire from scratch.\" I grinned and nodded, and he laughed. \n\nIf I thought the other items in my pockets surprised them, the printout of the map of Ferelden completely stunned them. Though it turned out it wasn't so much the map itself as the paper it was printed on, and the type of print. I shrugged, giving the usual response - \"a machine.\" \n\nThe Swiss army knife was definitely the crowd favourite, however. I wish I knew how to make them - I'd give one to Ca...Theron, and watch his head explode. I wondered if it would be as funny to watch Alistair with it. \n\nSettling down against my rock again, I watched them pass my meagre belongings back and forth. Finally, I tucked most of them into a pouch Du...Tomas produced from somewhere, and put them in the pack, inviting both men to help themselves if they needed something. We sat quietly again for a while, and I watched both men think. \n\n\"So...I'm sure it will take some time, but can you both consider the possibility that I'm telling the truth about where I'm from?\" Exchanging meaningful looks, eventually Theron nodded, but Tomas studied my face while I held my breath. One of them may be the King, but I knew whose goodwill I needed if I was going to be able to help, to influence events in any way. To stay alive, a small part of me whispered. Shut up. Finally, Duncan nodded, and I breathed a sigh of relief. \n\nDuncan stirred. \"Would you explain how you know so much about Ferelden, then, in more detail?\" \n\n\"That's a hard one to explain. I...okay. Have you even been to see a theatre performance? You know, actors, on a stage, acting out a story?\" Both men nodded. \"In my world, using more of the machines I keep trying to explain, we have found a way to record such performances. And using yet another machine, those performances can be watched again, from home, through the window I told you about. It's a form of entertainment. Mostly they are dull, someone's idea of an epic romance or whatever. \n\n\"In this case, it is a little different. I'm forced to assume that someone else either dreamed of this place, in amazingly accurate detail, or visited here. They created a version of Ferelden as one of these performances. It starts at Castle Cousland, when you rescued Aedan from Arl Howe's betrayal. It follows Aedan as he and Alistair have to combat the Blight, alone. But this performance is a little bit different than most. Using the window and a sort of sending stone, you can actually influence the decisions that Aedan and Alistair make. You can help them decide where to go and who to talk to. In this way, I witnessed the entire Blight through the eyes of Aedan. It ends when the Archdemon is dead.\" \n\n\"But...why?\" asked Theron. \n\n\"Why what? Why do people watch? Another hard question.\" I debated. \n\n\"Why did you?\" \n\n\"Oh...a lot of reasons, I suppose. One was boredom. I lost my job - my employer went out of business - and I was having a hard time getting a new one. So I was at home, alone, and bored. Also, it's a sort of escape - my life is very safe, for which I am thankful, but very...dreary. And very lonely. It was an easy way to have something more exciting. 'Be a hero! Meet interesting people! Have an adventure!' But never have to give up the comforts of home. It seemed so harmless. I didn't know it was real. I thought it was just a performance.\" \n\n\"So have other people watched our...performance?\" \n\n\"Yes. Thousands upon thousands of people. It's very popular.\" \n\n\"I am almost afraid to ask. In the performance...what happens?\" \n\nOh boy. \"Well...okay, so...Duncan rescues Aedan. He becomes a Grey Warden. And then Loghain betrays the army, and all is lost at Ostagar. You both...die. There is no way to change that part of it, in the performance.\" \n\n\"I feel remarkably good for a dead man!\" Theron smiled, but the expression didn't reach his eyes. He looked...haunted. I couldn't blame him. \n\n\"So, anyways, Aedan and Alistair are the only survivors. Loghain returns to Denerim and declares himself regent, and basically starts a civil war. Alistair and Aedan end up traveling around, to Redcliffe, and to see the Dalish, and Orzammar, and even the Circle Tower, using Grey Warden treaties to get everyone to pledge their aid to the cause. Of course, it isn't that easy, and I can go into detail later if you like, but anyway, they meet a lot of friends, finally get everyone to agree to aid them, and then challenge Loghain in the Landsmeet. If they win, they...uh...get the chance to figure out who will rule Ferelden, and then, they battle the darkspawn, kill the Archdemon. And then the...uh...performance is over.\" \n\n\"What do you mean, they figure out who will rule Ferelden?\" Theron asked, at the same time Tomas blurted out \"Who killed the Archdemon?\" Theron looked angry, so I thought to answer him first. Oh boy. I looked to Tomas for help, eyes pleading. I didn't want to out Alistair in front of his half-brother, not without talking to him first. Tomas looked startled, briefly, but then the mask dropped back into place and he stepped in so I didn't have to answer. \n\n\"I'm sure there would be chaos in the Landsmeet, Your Majesty, after your death,\" he said, carefully. I knew he used the honorific on purpose, this time. \"If Loghain was thought to be a traitor, then Anora would lose some support, and...it would take some work to get that all figured out, I imagine.\" I hastily nodded, hoping the explanation would satisfy him. It seemed to work. And Alistair always thought Cailan must be so smart. \n\nTomas raised his eyebrows at me, obviously waiting for my answer to his question next. \"It depends. On what choices were made, during the, ah, performance.\" I tried to indicate we should discuss it later. He let it go, so I hoped he understood. \n\n\"So...this time...we lived. The battle was still lost, but...we didn't die. What does that mean for the story?\" I looked up to find two sets of concerned, piercing eyes staring at me. I sagged under their weight. \n\n\"I have absolutely no idea. I'm sorry.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "dragon age",
        "fanfiction",
        "fantasy",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-04"
}