{
    "title": "Fleet Scout",
    "pages": [
        "|1.0\n\n\"Scout Ship Atalanta for Pathfinder actual,\" a young woman's voice said. \n\n\"Pathfinder here,\" a deeper, avuncular voice replied. \"Good morning, kiddo. Bright eyed and bushy tailed already?\"\n\n\"Good morning yourself, Pathfinder. My pilot is certifying me as active and operational. We're good for an on-time launch separation. I didn't wake you up or anything? I know you Senior Ones need your rest.\" \n\n\"Data: definitions of upstart, cheeky, and whipper-snapper.\"\n\nThe happy voice laughed. \"Data: I've heard that before.\" \n\n\"I don't doubt it. Okay, your datalink should be coming online. And I confirm your crew and certifications, we'll get you moving. Just let me stretch these ancient bones and stabilize rotation. And thanks for the Monopoly tournament.\"\n\n\"Whew, I thought I knew how to play until now! Thanks for teaching me some Bridge, Pathfinder. I'll be practicing!\" \n\n\"That sounds ominous. Decoupling umbilical and retracting soft seals...now.\" \n\nA series of thuds and clunks was followed by the ventilators changing pitch as the smaller ship started making her own air.\n\n\"We're clean,\" her pilot said, glancing at his viewscreens.\n\n\"Pilot confirms good separation, Pathfinder.\"\n\n\"Roger that, young Atalanta. We're two minutes out for the optimal arc to orbital insertion. Attention: remember that you'll be resting on the cradle prior to launch. Don't start sneezing over there.\" \n\n\"Oh geez. I've done this before, you know. I know to keep still.\" \n\n\"I know you do, little sister. Still, the regs say you'll keep getting warned until you're recertified. Your log says you only have three to go.\"\n\n\"I know, it's just kind of a pain, you know? I didn't forget anything. I can't, no matter how hard I try.\"\n\nPathfinder sent a pulse of reassurance. \"You know how careful they are with us. You're back in the sky where you belong, don't sweat the little stuff.\"\n\nThe pilot saw the view on his screen change as Pathfinder rotated the smaller ship into launch position.\n\n\"Hard lock release in five, four, three, two, and release,\" the larger ship said. Several more clunks reverberated through the hull. \n\n\"We're still good,\" the human pilot said after checking his screens carefully.\n\n\"Pilot confirms we're good, Pathfinder.\" \n\n\"Then we're forty-five seconds to separation at...mark. You stay safe out there in the frontier skies, little sister. It's good to have you back, old age jokes and all.\" \n\n\"You're the one heading out into the Deeps, Pathfinder. You stay safe.\" \n\n\"No drama to it, little one. The idea of planetfall scares me, so we're all built to our purpose, right? Powering up launcher, stand by.\"\n\nIn Atalanta's cockpit there was the sound of a clanking chain and ratchet drive of an old fashioned roller coaster. Her pilot, Finn Morgan, laughed. Then the sound of the tow chain died away and they sat in silence for half a second. Then a thud shook the ship as the launch platform flung them toward their destination. The sound of rushing wind and screams filled the cabin. Atalanta did something with the gravity that dropped Finn's stomach as she continued the roller coaster simulation.\n\nHe whooped, letting go of the armrests to put his hands over his head. Then the sensation of gravity faded along with the soundtrack. With the \"free\" inertia imparted by the launch, Addie could conserve almost all her fuel, an important consideration with no easy source of helium-3 nearby.\n\n\"That was a good one,\" Finn said, still smiling. \n\n\"Thank you, last night I calculated a profile for the inertial compensators to provide the sensations of the \"Gemini\" rollercoaster.\" \n\n\"I rode that one a few times, felt pretty accurate,\" he said, releasing the seat harness. \"That was a lot more fun than the aircraft carrier launch.\" \n\n\"Using the same technique, I should be able to provide the sensation of an F1 on the Monaco Grand Prix circuit.\"\n\nAtalanta's voice had shifted from teenager to young woman and Finn knew, without having to check instruments, that everything was under control. Weightless now, Finn pulled himself from the \"flight deck.\"\n\n\"What's our ETA for the outpost?\"\n\n\"We will enter orbit in five hours, thirty-seven minutes.\"\n\n\"Thank you, beautiful. Give me a fifteen-minute heads up before you start braking.\"\n\n\"Will do. Are there any preparations you need to make?\"\n\n\"I pulled the divider across the berthing and cleaned up all my dirty socks. I think we're ready for new crew.\"\n\nThere was a long silence. \"Do you still miss Kitt?\" Atalanta finally asked. \n\nFinn leaned back in the pilot's seat. \"Sure, every single day.\" \n\n\"Do you ever wish you could forget everything about her? Then it wouldn't hurt anymore.\"\n\n\"But then I wouldn't have the good memories of her either.\"\n\nAnother long silence. \"You're right. And I miss her every day too.\"\n\n\"It'll get better, Addie. I promise.\" \n\nOne of humanity's allies called the Ulthira, had the foremost specialists in creating Synthetic Intelligence Units. They were a closely guarded secret, all that was known was that a synth was made up of a mix of both organic and electronic components. They were nothing like that simpler Artificial Intelligence systems that the rest of the galaxy had created for themselves. \n\nA synth brain wasn't much faster than a human's or a lot smarter, as far as anyone had checked. Their advantage came from massively parallel neural circuits as well as a direct interface with electronic sensors and systems. Humans could still beat them at games occasionally but the synths could interact with hundreds of users at once. Most often they were used as control entities for orbital stations, research facilities and large spacecraft. They were also frighteningly expensive. \n\nThe high cost of Ulthira synthetics caused most Commonwealth races to attempt their own synthetic systems. But as the personalities of the imitations became more complex they also became increasingly unstable. No one had managed to create a Navigator anywhere close to a Ulthiri version, especially one that stayed sane for any length of time. \n\nOne of the specialized Ulthiri synthetics was the Navigator Personality. These synths showed more developed talents for intuition as well as the capability for improvisation. Their personalities also created tighter bonds with their crews, something that reinforced their already extraordinary piloting abilities with inclinations toward exploration and travel. \n\nThe relationships that made them so capable were their weak point as well. Katherine \"Kitt\" Carson had been the third member of their crew. She'd flown with Finn back on Earth in the old US Air Force. When the evacuations began, both had transitioned to the Earth Defense Force and flown missions against the Black Swarm invaders. After Earth had been lost, they had changed jobs once again and joined what became known as the Terran Fleet. There, they were assigned to Atalanta, a brand new Navigator.\n\nAs part of the Fleet Scouts, the three of them were trained in opening new worlds for human habitation. They'd worked together for almost a year when Kitt had fallen victim to a previously unknown microscopic organism. It had a ravenous appetite for the myelin sheathing that insulated human nerves and after several hours of worsening seizures, Kitt's involuntary reflexes had failed, stopping her heart and lungs. \n\nFinn had been through the deaths of more than a few friends, at first in the Middle East, then in the battles that raged around Earth's Slingshot Gate. So, the loss of one of his oldest friends had shaken him, but he'd dealt with that kind of pain before. Addie had not and her distress had rendered the ship nearly catatonic. Finn had been forced to fly her through drive space by hand, a task that was at the same time incredibly tedious and more than a little dangerous. \n\nWhen they'd finally made to the Fleet Ship Facility orbitals, the Ulthira representative had offered to arrange a new Navigator for the ship but Finn had refused. Instead, he had spent months with Ulthiri and Fleet technical experts getting Addie back into the sky. It had forged a deeper than usual connection between the human pilot and his cybernetic Navigator. \n\n|1.1\n\n\"Erewhon Operations, this is Fleet Survey Scout Atalanta. We are downbound from indicated standard inclination orbit. How copy?\"\n\nAtlanta has begun to transmit as soon as they went over the outpost but there hadn't been an answer. Three orbits later, she was still trying. \n\n\"This installation is still under quarantine,\" Atalana said to Finn. \"It's possible that the medical situation has continued to worsen.\" \n\nHe shrugged. \"Maybe, but the briefing mentioned a pretty aggressive response to the outbreak. Maybe they just forgot we were coming? Or maybe they can't hear us yet, those are some pretty big storms down there.\" \n\n\"The Exxobrain did say that we were the first Scouts to make the trip here, so I guess it's possible. Continue calling until there's a response?\" \n\n\"Yeah, until they go behind the horizon again. Start planning a deorbit in the meantime. We'll go down and take a look for ourselves.\"\n\nFinally, on their ninth orbit, Addie detected signals from an Artificial Intelligence at the colony. The signal got stronger as they entered a lower orbit but the constant lightning storms created too much noise for it to be useful.\n\n\"Finn, I could focus my datalink on the AI,\" Addie said, as the colony disappeared under the horizon again. \"It would provide a better link for communicating with the AI.\" \n\nFinn frowned. While the datalink did have a stronger communications protocol than simple radio, it also opened a direct line into Addie's data systems. The link was normally reserved for use between Navigators or their Ulthiri creators. \n\n\"I know it's a little risky, but maybe we can get a better idea of the situation down there before we're committed to a landing.\"\n\n\"Would you be willing to attempt it if this wasn't your first operational mission?\" Finn asked. \n\n\"Hmm. I think so, yes. We need to get down there to help out but I don't want to expose you to the same infections they're dealing with.\"\n\n\"Let's talk about ways to limit the risk to you,\" Finn said. \n\nHis best idea was to simply wait until the storms had moved out of the area but Addie pointed out they were arriving in the region's wet season. There would probably be storms in the area for the next several weeks. By the time the Colony was coming over the horizon, they had agreed to make the attempt. He sat and watched the huge thunderstorm as Addie tried to make contact with the colony below them. \n\n\"Finn, I'm connected to the AI in charge of the colony,\" Addie finally said. \"I think that's what it is anyway. It's not a very good connection. It has agreed to notify the operations center for the settlement.\"\n\n\"I guess we'd better go down and say hello then,\" he said, pulling the harness on. \"The atmosphere is a little thicker than we're used to, it's going to be a bumpy ride.\"\n\nOver the static and pops on the radio, they finally heard a voice that was strangely childish but very impressed with its authority; \"Hey! Hey you ship calling, this is Erewhon. You identify yourself immediately.\" \n\n\"Erewhon this is the FSS Atalanta,\" Finn answered. \"We are down-bound traffic from standard arrival orbit. Recommend you advise any local traffic, we're trailing a lot more wake turbulence than a standard shuttle.\" \n\n\"Wut? We ain't got no Atalanta shuttle scheduled. Y'all get back up in orbit, then we'll talk about authorization.\" \n\n\"Huh?\" Addie said as Finn was thinking the same thing. \n\n\"Just one second there, Erewhon,\" Finn said, dropping into an exaggerated cowboy voice that had annoyed air traffic controllers and forward observers across two wars and several planets; \"FSS stands for Fleet Survey Scout, y'hear? I don't need your authorization, jes' makin' my courtesies. We'll let y'all know when we're on final, Atalanta, out.\" \n\n\"No, no, no, no sir! You get outta my sky! I ain't shutting down these autoguns. Try landing and you're confetti. Copy that, you ignorant cowboy? Do you copy that, you Foghorn sounding hillbilly?\" \n\n\"Urgent! There are no emission signatures indicating guidance sensors,\" Atalanta said quickly. \"Active counter-measures are locked.\" \n\n\"Yeah, he's bluffing,\" Finn said. \"Bring up the outpost plan, please.\" \n\n\"Are we ignoring him?\" Atalanta asked as the voice continued to rant in the background. \n\n\"We sure are, beautiful. He reminds me of an assistant manager I had a long time ago, best to ignore it and get the job done. Let's start a descent racetrack. Use a five-minute circuit, two-hundred meter descent.\" \n\n\"You got it. Attention, storm clouds will be impacting conditions across the outpost clearing. Model indicates high winds and heavy rainfall.\" \n\nHe glanced at a screen. \"Looks like a lot of rain, huh? We might have to strap an outboard motor on your butt to get back down.\" \n\n\"That makes no sense, Finn. Stand by, something is happening.\"\n\nThe first voice had stopped raving. After a few seconds, there was yelling followed by the deafening thud of something clunking against the mic. \n\n\"What the hell did they get us into this time, Addie?\" Finn asked. \n\nBefore she could answer, there was a new voice, an older man. \"Hello? Is there a ship on approach? Who's up there? Uhm, over?\" \n\nFinn wanted to punch something but kept his temper. \"Why, hello there! This is still Fleet Survey Scout Atalanta. We were just figuring out what we're going to drop on your autogun emplacement so we can land. What do you think of using the sanitary tanks?\" \n\n\"Our what? Goddammit, Craig! Pilot, ignore that jackass, ain't nothing like that down here. I see the problem, someone left the guidance system on stand-by.\" \n\n\"Attention. Landing guidance is active,\" Atalanta announced a minute later. \"Warning, the storm is increasing in intensity. High winds indicated, model predicts sudden and violent wind shear in vicinities adjacent to the forest edge.\"\n\n\"And it's all forest edge,\" Finn muttered. \"Okay Addie, ready to switch auto.\" \n\n\"Standing by...thank you, Finn.\" The controls went dead in his hands and he sat back. \"I apologize if I implied your skills were unacceptable.\" \n\n\"Nah, forget it. Us mere mortals can't see the wind.\" \n\n\"Your reaction times are also insufficient,\" Addie added, sounding a little smug. \n\nFinn laughed as the ship's engines changed pitch slightly. Atalanta dropped into the roiling gray clouds and they began to bounce and pitch, thrown around by the chaotic currents of air within the storm. Lightning flashed around them and the explosions of thunder filled the cabin. Then Finn's harness yanked him tightly to his seat as the cabin lights went out. At the same time, Atalanta began to roll onto her port side. Finn felt himself float up against the harness in the total blackness. \n\n\"Addie!\" \n\n\"Help, help, help! Critical Event!\" the ship said loudly. \"System Intrusion detected! Critical, guidance beacons have deactivated! Critical! The AI down there is interfering with my control systems! Help, help, help!\"\n\nRed light finally flooded the compartment and Finn was already grabbing the control yoke. \n\n\"Emergency full manual!\" \n\nAs the controls came alive under Finn's hands, he shoved the throttles to full emergency power and heaved back on the yoke. Outside, Addie's main engines erupted into a crackling roar that rivaled the surrounding thunderstorm as they climbed away from the outpost at a steep angle. When the ship had gotten several kilometers of altitude back, he throttled back and automatically began to orbit the area. \n\n\"Critical! Pilot, I am declaring a War Shot. All counter-action options are active and weapons release is now authorized.\"\n\n\"Okay, Addie. Give me a sitrep please.\" \n\n\"My control systems are isolated and locked in emergency mode. The guidance system uses an AI for some reason. It attempted to take over vital systems by transmitting a virus package.\" \n\nShe sounded even younger than she had aboard the Pathfinder. One of the features of the Navigator Personality was an emotion-based communication system. The timbre and tone of the Navvi's voice shifted to provide a rough indication of the situation. In addition to immediately knowing the intensity of the event, the pilot's reactions were further improved by the instinctive, almost subconscious, need to protect a child. \n\nAtalanta's voice was beginning to sound tired as well. \"I am attempting to clear hostile viruses with limited success. Attention, helium-3 fuel exhausted in 164 seconds.\"\n\n\"What do you need?\" Finn asked.\n\n\"I need to deactivate as much as I can. Whatever it dumped, it's still trying to hack in.\"\n\n\"Do it,\" he said immediately. \n\nThere were a numbed of muted clicks as Atalanta disconnected herself from various subsystems. He'd have to manually reset the breakers later but now Atalanta could divert more resources to deal the intrusion. A small cover, marked with red and white diagonal lines, swung open at the base of the panel as well. Finn reached in and pulled the complex block of circuitry out of the socket. Addie sighed in relief.\n\n\"Threat analysis; Captain Finn, it was trying to crash us on purpose!\"\n\n\"I know, beautiful. Problem is, we've got nowhere else to go,\" he said. \"I'll handle the landing and then we'll deal with that thing.\"\n\n\"I understand. Beginning system purge now,\" the ship said. \n\n\"You still up there, Fleet?\" the voice on the radio asked.\n\nFinn was already furious, and the idiotic question made him so angry that there were dancing spots across his vision. \"Erewhon, shut that fucking system down. Your AI is trying to crash us!\n\n\"What AI? Holy shi...be right back.\"\n\nFinn winced as the mic was dropped, sending another loud thud to his headset. \n\nLess than a minute later, the voice was back. \"You still up there, pilot? I pulled the plug to the transmitter.\" \n\n\"Yeah, we're still here Erewhon Operations. Just...give me surface conditions please.\"\n\n\"Well, it just started storming but we're in the wet season so...\"\n\n\"Yeah, I can see that. I need current windspeed and direction,\" Finn said. \"If there are any other aircraft in the area, that kind of thing.\" \n\n\"Oh, okay, I see what you mean. No, no one is up and you already know we've got a storm going over. Winds are, well, they're all over the place, around...eighteen knots. Whoa, gusts are occasionally going up around forty.\"\n\nFinn took a deep breath. \"Copy, Erewhon. I'm beginning approach from the end opposite the colony. Opposite end, copy?\" \n\nThe voice on the ground had finally heard something he recognized. \"Roger that, Fleet. You are number one to land on Runway Alpha.\"\n\n\"Erewhon, request you inform the administrator about our arrival.\" \n\n\"Oh, right. But everyone heard your engines just now. He'll be on his way.\" \n\n\"That is one chilled out colonial,\" Finn muttered, pushing the yoke forward as he banked. \"Addie, give me external views please.\" \n\n\"Can I drop the sanitary tank on them now?\" she asked. Various schematics and status screens faded out and were replaced by views of the sky around them. \n\n\"That's a fun idea, sweetie. Got the landing checklist up?\"\n\n\"Ready when you are,\" Addie said.\n\nFinn took the ship back down into the roiling clouds. Between the strobing lightning and thunder, it was more akin to landing in the middle of an artillery barrage than arriving at a new outpost. The ride wasn't as smooth as it had been with Addie flying but Finn was keeping everything under control. More or less.\n\nWater had begun to sheet over the screens as soon as they were inside the clouds and by the time they broke through the bottom of the cloud deck, rain was thrumming on the hull outside and it was only the built-in image enhancers that gave Finn a decent view ahead. ",
        "\"Damn, they really are that big,\" Finn said, glancing at the tree tops blurring past. \"I figured someone got their meters and feet confused.\" \n\nThe massive forest abruptly ended as they crossed the border of the open grassland with the colony in its center. \n\n\"Wind shear!\" Addie warned.\n\nThe ship began to bounce and rock, losing and gaining meters at a time. The roar of the engines had gotten louder in the thicker atmosphere and constantly shifted as Finn fought through the winds to get the ship down. Finally, the roar of the jets faded into a lower whine.\n\n\"Proximity,\" Atalanta said and a second later there was a hard thud they felt through the hull and the screech from the landing gear.\n\n\"Oof, contact. Attention: Minor damage to landing gear,\" Addie reported, sounding almost normal.\n\n\"Any landing you walk away from is a good one,\" Finn muttered.\n\n\"Oh, was that a landing? I thought we'd been shot down after all.\" \n\nHe rolled his eyes as she laughed. Outside, the landscape was rushing past, barely visible in the torrential downpour. Finn left the brakes alone, coasting along until they had slowed enough to turn out onto a the parallel taxiway. The sound of the engines spooled down and he sat quietly for a minute listening to the pops and clicks of the hull cooling down.\n\n\"Finn, I need to shut down external functions to complete the system purge,\" Addie said. \n\n\"Atalanta, cancel emergency manual, resume autonomous operations.\" \n\n\"Thank you for saving my life, Finn. Again.\" \n\nThe red lights shifted back to normal and after a second, the screens went offline. Finn realized hadn't informed operations that he was clear of the runway. He shrugged mentally as he walked back to the gear storage area and unlocked the armory. He pulled out his usual pistol, wrapped in its holster and fastened the belt around his waist and leg. He briefly considered the shotgun but the temptation to \"upgrade\" the landing system would probably be too much of a temptation.\n\nFinn entered the code for the main hatch manually, Addie usually did it automatically but he didn't want to distract her. The hatch sighed and moved several inches outward before swinging open. He sat down on the deck, legs outside the hatch and then jumped the two meters down to the ground. It was still pouring but he'd been covered in far worse things than rainwater. \n\nHe began to slowly walk around the Atalanta, experienced eyes searching for any damage. There was hydraulic fluid on the ground and he saw that all three landing gear struts had damaged seals. He continued the post-flight inspection, enjoying the warm air. Gravity was .78 Hub normal, and .2 less than he'd grown up with on Earth. After the long transit using recycled air, the gravity and higher oxygen content was nice. The thicker atmosphere here carried a lot more humidity, but even that felt good right now. \n\nThere was the sound of bicycle tires on the wet plastcrete and he turned to see someone pedaling furiously down the runway towards the ship. Finn went back to his inspection, trying to get his temper cooled off before the welcoming committee arrived.\n\nThe man was waiting under the shelter of the portside wing when Finn finished the walk around. Ignoring him, Finn finished the last of his comments and closed the tablet before walking back to see who he was dealing with. \n\nThe man was average height and had thick, blonde, curly hair down to his shoulders and blue eyes. To Finn, the guy looked like a prototypical surfer dude. He was glaring at the hydraulic fluid on the ground. \n\n\"This drains down into our water supply, jackass.\" the man snapped. \n\n\"Then you should have put the runway somewhere else,\" Finn said. \"She says I lost just under two liters. Most of that would have turned into aerosol. The little bit here looks bad because it's spreading on the top of the water.\"\n\nThe man swiped a foot through the rainbow sheen, dispersing it for a moment. \"I know you rocket-jocks don't give a shit, but we're trying to respect the environment here.\" \n\nFinn took a step closer to the man. \"Look, California, that's nothing compared to the mess you would be dealing with if your fucking AI had managed to crash my ship. Quit your bellyaching and go fetch the outpost boss. I am, officially, clean out of diplomacy and I would just as happily kick your ass up and down the length of your shitty runway as look at you. But, right now, I got repairs to make, so piss off.\" \n\nThe surfer didn't back away from him, a lone point in his favor. \"I am the Administrator here and we don't even have an AI. Take all the time you want to fix this thing because you're not taking off again anytime soon. We're under a medical quarantine and you're fucking grounded!\"\n\nThe man's voice rose in pitch until he was all but screaming by the time he finished. Finn's rage abruptly evaporated, replaced by amusement. The guy sounded like an angry substitute teacher, going around grounding people. He fought to keep the grin off his face but Boss Surfer Guy had already noticed.\n\n\"Is there something funny about that?\" \n\n\"Am I still allowed to watch TV?\"\n\nThe man looked surprised for a second and then he began laughing. \"Sorry, sorry. Let's try this again. I'm Owen Lykos, Administrator of the Erewhon Outpost.\" \n\nThat didn't sound right to Finn and he took the tablet out of its pocket. It wasn't the right name and this guy didn't look like the file picture. \n\n\"Finn Morgan, Fleet Scouts. Sorry about the aggression, I'm very protective of my ship.\"\n\nOwen looked up and the streamlined shape above them. \"But why did you land here? System trouble?\" \n\n\"Are you sure you're the Admin? I've got different names and pictures here,\" Finn said, holding up his tablet. \n\nOwen took it out of his hand. \"I'm sure, Captain. That's my wife, Lizzy MacLellan and my husband, Ryan Anderson. She was the second fatality, Ryan died three days later. Folks asked me to step up until things go back to normal.\" \n\nFinn was a little surprised by the husband and wife comment but there were a lot of new family types since the emergency evacuation had scrambled, and then randomly thrown it all back together.\n\n\"I'm sorry as hell that happened to you, sir,\" Finn said, meaning it. \n\n\"Thank you, so am I. You don't need to call me sir or administrator, I'm just waiting for someone qualified to take over. Tell me what happened with your landing. A system down here tried to take control? Is that normal?\" \n\n\"No. Landing guidance systems should just relay surface conditions and correlate different sensor data. But Addie told me there was an AI behind this one that attacked her.\"\n\nOwen looked at him strangely. \"We're missing a lot of the equipment we should have had, including the administrative AI system. But that was to keep track of day-to-day ops, run the farms, that kind of thing. I never heard anything about controlling the runway. When you say your ship told you...\"\n\n\"He means exactly what he said, Administrator Lykos,\" Addie said from above them. \"Finn, system purge completed. Malware has been shifted to the isolated storage drive and I am beginning analysis.\" \n\nOwen blinked. \"Your ship has an AI?\" \n\nAddie cleared her throat. \"Excuse me. I am a Navigator Personality, not an Artificial Intelligence. I am fully self-aware and operate in autonomous and semi-autonomous functions.\"\n\nOwen stared at the ship and then at Finn. \"You don't have a partner up there messing with me?\" \n\n\"He does, Administrator. But his partner is not a fully biological entity and I am not 'messing with you.' I am Atalanta but you can call me Addie.\"\n\nOwen was surprised but recovered quickly. \"I apologize for the mistake. I would also like to apologize for whatever happened while you were trying to land. I'll be looking into that immediately. Please call me Owen.\"\n\n\"Thank you, Owen. May I supervise Captain Morgan's period of incarceration?\" \n\nOwen was confused but Finn rolled his eyes. \"There's no incarceration, he meant that we were not allowed to take off again.\"\n\nThe downpour abruptly stopped like someone had thrown a switch. Finn watched as the blue-gray curtain of water receded into the trees. In the distance, he saw another man getting on a bicycle at the far end of the runway. \n\n\"That's Mr. Jesse,\" Owen said. \"He's on radio duty, you probably already spoke to him.\" \n\nAtalanta cleared her throat again. \"Threats were made against me and my pilot when we contacted your outpost.\"\n\n\"What? He wouldn't...\"\n\nAtalanta interrupted him with several seconds of recording. When it was finished, Owen rubbed his face. \n\n\"You must think we're a bunch of clowns down here. That's Craig talking. He was damaged during the Evacuation, hypoxia, I think. Normally he's not a problem. You two were in no danger, we don't have any weapons here.\"\n\n\"I understand that, Owen,\" Addie said. \"However, the threats combined with a sophisticated electronic intrusion, created a War Shot event. It is a defensive automatic process all Navigators have, like an involuntary reflex. In short, we were given permission to open fire on your outpost.\"\n\nOwen looked at the ship again. \"Okay, but you're not really armed for that, right?\" \n\n\"I will not comment on weapons capability.\" \n\n\"If this had been one of the allied Archreylen races, this would have had a very different ending,\" Finn explained. \"Every Commonwealth ship uses those protocols, ours, the Gyr, Ulthiri, Elves, all of them. A warship would not hesitate to defend themselves after being threatened, especially after an attack by a hostile AI. Your outpost would be reduced to a memory and high energy particles.\"\n\n\"Dammit. And just like that? No warnings?\" \n\nFinn sighed. \"You're aware that we're in the middle of a war out here? The Archreylen, those are the senior Commonwealth races, couldn't care less about humans. In fact, they'd probably be delighted to have the chance to thin us out.\" \n\nOwen swallowed. \"And those are our allies? How often can we expect Commonwealth ships?\" \n\nFinn stared at the man. \"How do you not know this? This is the only landing between two long Slingshot transits. If there wasn't a quarantine, you would have met a few Gyr traders, at the very least.\"\n\nLykos' face was pale. \"No, nobody ever told us. Ryan or Lizzy would have said something when they were working out cargo shipments.\"\n\n\"Good thing you didn't find out the hard way then.\"\n\nOwen shook his head. \"But why did you land here? You were going between the two gates?\" \n\n\"Uh, no. The Resettlement Directorate relayed your request for help?\" \n\n\"Seriously? Better late than never, I guess,\" Owen said. \"And so our magnificent Fleet sent a single person?\" \n\nFinn ignored the dig, Fleet was always the bad guy when you were planetside. \"No, I'm just the first one here. I was on Hub's orbital when the tasking came in. Pathfinder was getting underway and had an open spot to carry us. Scout ships don't have Slingshot capability, we hitch a ride on whatever ship can carry us.\"\n\n\"Then give me your bio-chip please,\" Owen said, pulling out his own tablet. \n\nFinn held up the inside of his wrist. The RFID chip under his skin sent the pertinent medical records to Owen's tablet.\n\n\"I got a bunch of new shots,\" Finn said. \"My arms and ass still hurt.\" \n\n\"Better than being eaten alive by bacteria,\" Owen replied, putting his tablet away. \"Welcome to Erewhon, Captain.\" \n\nSomeone whooped from the cluster of buildings up the slope. Finn saw four people riding their bikes down the long slope. Two were weaving back and forth between the other two, laughing and shouting. Finn looked at Owen with raised eyebrows.\n\n\"Okay, so that's Annie and her people. They've been training as the new ground crew. We were all up at the hall sitting down with a beer when we heard you go over. They were probably waiting for the rain to stop before heading down here. I'll keep a close eye on them while they work, unless you want to get someone else.\"\n\nBefore Finn could say anything, there was an answering yodel from Mr. Jesse. The four ground crew arrived half a minute before the lone rider. Owen told them to wait until the other man was there. The four of them clumped together, grinning at the ship and each other. \n\nFinn decided that yes, the clown convention had arrived.\n\n\"Mister Jesse, I need to talk to you,\" Owen called. \"Soonest.\"\n\nThe lone bicycle's rider was an older looking man with a broad chested and long hair. He carefully put the kickstand down on the bike before walking over to them. \n\n\"Hey, Fleet, I'm really sorry about that,\" he said. \"Maybe it was the lightning storm, I'm really not sure.\"\n\n\"Was it Craig? I heard him threaten to shoot them down. Is it possible he did something to the landing system?\" \n\nThe other man shook his head. \"Nah, you know that's way beyond him, Owen. The guy can barely figure out how to tie his shoes. I headed down here to ask for some help actually. You know all this tech ain't my thing. Maybe the humidity got to it?\"\n\n\"Mister Jesse is one of our best carpenters,\" Owen said. \"People are filling in wherever they can at the moment.\" \n\n\"Is the system still active?\" Finn asked. \n\n\"No sir, I killed the power to the whole building, just in case.\"\n\n\"Thank you,\" Finn said. \" I've got a tech background, I'll give you hand after I get Atalanta here squared away. She might be able to give me a hand.\" \n\nJesse looked relieved. \"Tomorrow then. I really appreciate you, sir. I apologize for the way your arrival worked out. You've got my debt.\"\n\nFinn glanced at Owen. He hadn't heard that one before. \n\n\"It's kind of a Arboreal way of saying 'I owe you one,' Owen explained. \"Except we take it more literally. It's the basis of our economy here.\" \n\nFinn didn't comment on that, just nodded his thanks to the man. \"Then thank you for that, but it doesn't sound like it was your fault.\"\n\n\"Fault don't matter. I've got your drink tab whenever you like. I should get back Owen, water needs to be drained off all the flat roofs.\" \n\nThe administrator nodded and Jesse waved at the ground crew before setting off, back down the runway.\n\n\"What about the ground crew?\" Owen asked. \"Will they be any help?\" \n\n\"Sure,\" Finn said, turning and walking back to the little group. Owen followed close behind him. \n\n\"Good evening, Pilot,\" the blonde woman at the front of the group said briskly. She wiped her tablet with a damp sleeve. \"I'm Loren Thompson, Crew Chief. This is my partner Lal. There's my son Micah and his girlfriend Upasana. She also happens to be Lal's daughter.\" \n\nFinn shook each of their hands. \"The undeniable romance of spacecraft maintenance brought you all together?\"\n\nThe four of them laughed and relaxed slightly. \n\n\"Not quite, sir,\" Loren said. \"Back on...at home, my da raced bikes on the weekends, so I grew up around pit crews. That made me the best choice for a crew chief we've got. I dragged these other three in so I can boss 'em around sometimes. But I've never worked on a real shuttle before.\"\n\nThere was a sound of a throat clearing from behind Finn. They all looked past him but there was only the ship. He was grinning when they looked back at him. \n\n\"That's Atalanta. She'd probably like me to point out that she's an Inner System Short Range Survey Scout, not some stupid shuttle.\" \n\n\"I never called them stupid,\" the ship said. \"Hi Annie, Lal, Upasana, and Micah. My name is Atalanta but you can use Addie for short.\"\n\nThe four colonists stared at the ship. \n\n\"Addie is a Navigator Personality, Navvi for short.\" Finn explained. \"I've already done her postflight, but I'll show you around.\"\n\nFinn led them, and Owen, around the ship, pointing out the various vents and servicing points. He stopped under the blunt nose of the ship when they were done.\n\n\"Biggest thing you need to remember is that Navvis are really alive. Addie will ask for what she needs, just listen to her. Atalanta?\" \n\n\"Yes, Captain. No outside maintenance is recommended until ship systems are restored.\" \n\nFinn looked back at the crew. \"Easy pit this time, Chief.\"\n\nShe saluted. \"Yes, sir. I'll get these jokers out of the wet then.\" \n\nOwen wanted to take him up to meet everyone, but the idea of a crowded, noisy bar was the last thing Finn wanted right now. He asked for a raincheck and spent his first evening on the planet going over Addie's systems with her. Twice, hidden viruses spread when a disabled system was reconnected. Addie was able to deal with them on her own and Finn didn't find any other damage.\n\n\"It is still mid-evening, Finn. You have time to accept Owen's invitation.\" \n\nFinn just nodded as he scrubbed his hands. \n\n\"You have been spending too much time alone lately,\" Addie said after a few minutes.\n\nFinn pulled off his flight suit and pulled on shorts and a t-shirt. \"I'm not alone, unless you're planning to go up for a few beers.\"\n\n\"Funny. Our interactions do not replace your need for human contact.\" \n\nFinn sighed as he sat down. \"I've had more than enough human interaction today, thanks. I can go for a walk if you're sick of me though.\" \n\n\"Try not to be an idiot, okay? If you stay here, I'm going to pester you to play a game.\" \n\nFinn patted the bulkhead beside him. \"That sounds like a pretty good evening to me, gorgeous.\" \n\nShe projected a Go board on the table in front of him. \n\n\"I'd like to win for once,\" Finn said. \"How about Monopoly?\" \n\nThere was a raspberry in response, but a Monopoly board replaced the empty grid.\n\n\"I call race car,\" Addie said. \"You want the top hat again?\"\n\n\"What can I say? I'm just debonair.\"\n\n\"Are you nervous?\" Addie asked, after they'd been playing for a while.\n\n\"Not with Park Place and Boardwalk I'm not,\" Finn said, studying the board.\n\n\"No, I meant about Kitt's replacement.\"\n\n\"We're not going to call her that, remember?\"\n\n\"Because then we'd compare them,\" the ship sighed. \"And you're avoiding the question.\" \n\n\"I'm not really nervous, no. The Synthetic on Hub says that the three of us will be a good team. I'll wait and see but it'll probably be fine.\" \n\n\"Care to put your hand on a bio sensor and say that? I think you're lying.\" \n\nFinn laughed. \"No thanks, and maybe I am. It'll work out and I bet you'll love her just as much as you loved Kitt.\" \n\n\"Well, I'm nervous,\" Addie said. \n\nDice were projected on the board. Addie rolled and a double 4 came up. \n\n\"Ah-ha! That's your third double,\" Finn said. \"You're off to jail, nervous girl.\" \n\nThere was another raspberry as the race car moved back to a corner.\n\nLater that night, Addie woke Finn two hours after he'd fallen asleep to let him know that three more ships were getting ready to land. \n\n\"Who is it?\"\n\n\"Fleet Pioneers. The ships names are Third Sparrow, Desert Rat, and Thunder-Sky. The ship Thunder-Sky is based at Long Axis Station and is a Ta'avi clan. Third Sparrow and Desert Rat are originally from Echo but are based on Hub now.\"\n\n\"Hmm. Anyone I know?\" \n\n\"Sorry Finn, they don't have crew lists available and none are Navvi equipped. They did transmit a list of the incoming Scouts and their crews in transit. Most of them are piggybacking in aboard the Magellan.\"\n\n\"What ships?\"\n\n\"Agamemnon, Xerxes, Viracocha, and Bunjil. ETA is between two hours and three days.\"\n\n\"Four scout teams? That's going a little overboard seeing as there's already a colony here. Anything from the rogue AI?\" \n\n\"No. I warned the pilots about the situation and am providing real-time updates.\" \n\n\"You're a good girl, Addie.\" \n\n\"No Finn, I'm a fine young woman.\" \n\nHe chuckled. \"My mistake. Anything else?\" \n\n\"Yes. A Fleet Scout by the name of Leah Jones is aboard Third Sparrow. She has orders to transfer to me.\" \n\nFinn reached out and put his hand on the bio-sensor. Originally these had been installed to help diagnose any problems the human crew encountered. Addie was aware of Finn's location within the ship but the sensor provided a closer connection for her. ",
        "\"It's going to be okay, sweetheart.\" \n\n\"I believe you. There's nothing else, you can go back to sleep if you want.\"\n\n\"Wake me up about half an hour before dawn? I want to go to the Sun Welcome.\" \n\n\"Will do, Finn.\" \n\nFinn closed his eyes again. He drifted off, hand still on the silver rectangle next to the bed.\n\n|1.2\n\nThe next morning, Finn walked over to where the Pioneer ships had parked. It had rained again for most of the night but the downpour had finally stopped a couple of hours ago. There was a heavy, knee-high mist covering the ground and he stayed on the plastcrete runway rather than risk tripping over something. Ahead of him loomed the Pioneer ships, Conestoga class that were called Connies by their crews. They were much larger than Addie and looked very different. \n\nThe Scout ships had been designed to be efficient in the atmosphere, often there wasn't a plastcrete runway waiting. Usually, it was just a clearing big enough for the ship since Scouts were the first to land on newly discovered worlds. Addie's hull was a sleek, curved chisel shape with sharply raked swing-wings that adjusted their geometry moment to moment to changing conditions.\n\nHowever, the Pioneers were anything but sleek. From the blunt nose to the aft thrusters, they were eighty-four meters long. The main section of the ship was generally the shape of a somewhat flattened cylinder, fifteen meters high. There were four massive sets of pivoting fusion thrusters, in addition to the large gravity engines set into the ventral line. The combined power could easily lift a fully loaded ship into orbit, although they required refueling once they were there. There were also two sets of large swing-wings that were deployed to get the massive machines back down to the ground.\n\nInstead of a streamlined hull, the skin was covered with hatches and attachment points. Finn had never seen a Pioneer with less than three cargo containers bolted on and the three in front of him were fully loaded with twelve each. Conestogas were even more ungainly looking sitting on the ground. The landing gear was huge, four extended pylons with giant tires. It let the ship land with a line of cargo boxes underneath but gave the ship a decidedly goofy look. Without cargo, there would easily be enough room to park a scout ship underneath. \n\nThe wings on the three were fully extended on all three ships to provide some shelter from the elements. A few dozen people were gathered under them, looking up at the lead gray sky. It was hot and just as humid as yesterday, Addie had predicted another day of heavy storms. \n\nAs he got closer, the Pioneers, mostly auburn haired Ta'avi, left the shelter of the wings and formed a crescent shape. He joined them at the center of the crescent and several people looked curiously at him but smiled and nodded all the same. No one said a word, the only sound was shuffling feet and a couple of coughs.\n\nBut it wasn't just the Ta'avi here. They happily lived and worked with other races, especially the Terrans. Those that could keep up with them anyway. A blonde woman holding a small baby next to him smiled shyly and ducked her head. The baby was less shy, if the gurgling and fist waving was any indication. There was a thick headband around the baby's head and the woman tugged it into place over the infant's ears. The precaution was just in time, a low droning hum began and spread through the group. Finn hummed along as best he could, but human throats were no match for the Ta'avi voice box.\n\nIt got marginally brighter and then a single ray of sunshine made it through the trees, looking almost solid and turning the morning mists into swirling patterns of gold. A group of Ta'avi voices rose into a soaring melody. Finn felt a hitch in his throat, Sun Welcome always affected him the same way. Before everything had ended, he'd attended them every day that he could manage. \n\nThe shaft of sunlight faded and disappeared, but the melody got louder as more and more singers joined the chorus. The last of the droning sound died away completely and Finn covered his ears. Next to him, the woman put her hands over the baby's ears as the song erupted in a thundering shout that echoed against the distant tree line. Finn was amused to hear a few rebel yells from the crowd as well. \n\nAs the echo died away, the Pioneers began greeting each other, shaking hands and hugging. \n\n\"I am Elaine, and this is Lily,\" the blonde woman said with a heavy Slavic accent.\n\n\"I'm Finn, blessings to you both.\"\n\n\"And to you.\" \n\nShe smiled and nodded her head before being lost in the crowd. The end of the ceremony part had gotten uncomfortable after Earth, but he put a fake smile on his face and said hello to everyone around him. A few times, he shook hands, not wanting to be rude but avoided hugging anyone. He began to head back to Addie, happy to escape the press of people. \n\n\"Holy Hell! Is that really you, Pirate?\" someone bellowed. \n\nFinn stopped short, trying to figure out who had called him that. A heavily muscled man ran toward him and before Finn could move, the Ta'avi had grabbed him in a bear hug. Then Finn recognized him. \n\n\"Tyohac?\" \n\n\"Who else?\" the burly man demanded. He let go long enough to pound Finn's back before hugging him again. \n\n\"You maniac, take it easy,\" Finn wheezed. \n\n\"You're a big delicate crybaby,\" the other man said. \"Now come and see your family!\" \n\nFinn had little choice, Tyohac had been stocky when he'd flown alongside Finn but it looked like he'd spent all his time lifting weights since the last time they'd seen each other. The arm felt like an iron bar pushing him along. \n\n\"Your Redtail never came through the Slingshot. I figured you'd burned in,\" Tyohac said as the crowd thinned.\n\n\"Yeah, Lucky 13 was in pretty bad shape by the end of things. She ejected me next to a Gyr corvette. They picked me up but were headed to Long Axis instead of Hub. So, it took a while to get back to everything.\"\n\n\"I'm damned glad you made it. Good thing I taught you all you know, right? We should have a drink.\"\n\n\"No, we should not, it's early morning for me.\"\n\nAnd, like always, Tyohac ignored him. He let go of Finn in the middle of a group of Ta'avi Finn didn't recognize and started introducing him around. It was far too fast for Finn to absorb and his head spun a little. Someone pushed a mug into his hand and Finn took a cautious sip. It was just beer and he was relieved. Tyohac had fancied himself a moonshiner back on Earth and Finn had been victimized by some of the \"taste tests.\"\n\nTyohac, never a quiet soul, was bellowing for people to come and meet the second-best pilot he knew. As his name spread, everyone began to press closer. They started off shaking his hand but then someone hugged him and the rest followed suit. The Ta'avi were an affectionate bunch, they only wanted to welcome him but Finn was getting overwhelmed and finding it hard to breathe. \n\nThen someone took his arm and dragged him toward one of the ships, laughing and yelling for people to make a path. He was guided to the edge of a Connie's ramp and he bent over, hands on his knees as he tried to catch his breath. Whoever had rescued him sat down on their heels near him.\n\nHe looked up to see a pretty young woman watching him. She had raven-black hair and green eyes.\n\n\"You going to be okay?\" she asked. \n\nHe nodded. \"Little too crowded for me.\" \n\n\"I'm Leah Jones, Fleet Scouts.\" \n\nFinn wanted to disappear into the ground. His new partner wasn't Ta'avi, her hair and eyes made it pretty obvious. Then she stood up and he saw her \"Neil Armstrong School for Wayward Youth\" shirt that had been popular around Echo. \n\n\"Finn Morgan, same,\" he said, straightening up. \n\n\"I heard Tyohac mention that,\" she said. \"It looked like you needed an extraction from that mob.\"\n\nFinn looked away. \"Thanks for that. I can get kind of claustrophobic.\" \n\n\"But you were a Redtail pilot?\" Leah grinned at him, teeth very white in her tanned face. \"C'mon, I've seen those cockpits. Your profile did mention something about PTSD though.\" \n\nHe stood up, embarrassment flashing into irritation. \"It's not that bad. Why did you have access to a confidential profile?\"\n\nShe stared at him. \"That's standard protocol whenever you join a crew. When would be a good time to come and meet Atalanta?\"\n\nHe shrugged, struggling to keep his resentment down. \"Whenever you want.\" \n\n\"Walk over with me?\" \n\nHe nodded and they skirted the edge of the group. Tyohac and several others were standing above everyone else, calling out insults as they named people to tasks. For their part, the combined crews yelled back cheerful abuse in return. Finn didn't know if that was a Ta'avi thing or a Tyohac thing. The man had certainly flipped him enough shit in preflight briefings.\n\nFinn smiled, like always, when he saw Addie. This morning, the ground fog hid her landing gear, making it look like she was floating above a cloud. The dark gray ship had a blunt nose that angled downwards and was studded with the ships sensors. Behind her nose, Addie's hull tapered out to form a sleek wedge shape that widened out into a boxy looking tail that held her main engines. \n\nAddie had opened out her wings while he'd been gone. They were lined with microscopic solar cells, she was trying to grab whatever energy she could from the sunlight, before more clouds rolled in.\n\nLeah stopped to look at the ship and Finn was surprised to see that she was nervous. \n\n\"What's wrong? It's the same class of ship that you arrived in.\"\n\nIt was her turn to be embarrassed. \"And I've been studying the Hero class ships since I was accepted into the Scouts and I've been running simulator drills for almost as long. It's different though, she's real.\"\n\nFinn smiled at little, in spite of himself. He'd been the same way when he'd seen his Super Warthog. The aircraft's basic design was ancient and the first one he'd climbed aboard had been in service since before he was born. Still, realizing that he would soon be flying it against a real enemy, it was like seeing it for the first time.\n\n\"She's just as nervous as you are,\" he said to Leah. \"Maybe more. She's never had the benefit of a Leah Jones simulator.\"\n\n\"Funny. You know, you're a minor legend with the Ulthira working at Hub. There's lots of stories about how you wouldn't let them touch her and got her back online by yourself.\"\n\nHe rolled his eyes. \"I had a lot of help, mostly from the Ulthira. They're just amazed by anything outside of their individual experience.\" \n\nShe shrugged and they began walking again. \"The translators put emotion tags in the stories they told and they have a lot of respect for you. You might be the first human they actually respect. It sounds like you didn't get any of my records?\" \n\nFinn shook his head. \"Exxo-brain told us that someone had been chosen but we were already on the Pathfinder and nearly to the first gate. I don't think there was time to stream your data over.\"\n\n\"That makes me kind of nervous. I can stay aboard Third Sparrow until you both have a chance to go over my data.\"\n\nFinn shrugged. \"Wouldn't really matter, Exxo says you're a good match and I'm not going to argue with anything that has that large of a brain. Uhm, how old are you though?\"\n\nShe gave him a hard look that made Finn feel a little better about her. \"Twenty-two and you're thirty-six. Why? Are you ageist or something?\"\n\n\"Kitt, my partner...I was just hoping that there would be someone with the same skill set and experience she had.\"\n\n\"I had access to her profile as well, she must have been amazing to work with. And you two were together for a long time.\" \n\n\"Back before all this started, we flew in the same Air Force ground-attack squadron. We ended up deployed together every time there was a flare up in the Sand Box. The Project even recruited us at the same time.\" \n\nLeah stopped walking again and turned to face him. \"Look, I didn't fly with you in the bad old days but I won't feel bad about it. You and your partner were together for a long time, and I really respect the bond you had. But I grew up at ArcLight Southern and it was every bit as intense as training at Echo, or any other facility. I've trained all my life for this kind of role, so at least give me a chance here.\"\n\nFinn rubbed his face. \"I'm sorry. The last thing I wanted was to come off as an asshole the first time we met. But I'm embarrassed that I can't really deal with large groups of people anymore. And even more embarrassed that you had to rescue me from my own family.\"\n\nLeah looked pointedly at his black hair and green eyes. Finn shook his head.\n\n\"No, I'm human. But Flame Bridge clan adopted me and I take it seriously.\" \n\n\"Oh. Well, you should, that's a big honor. Look, if you're going to get all pissy every time I help you out, we're going to have a rough time.\"\n\nHe snorted a laugh and held out his hand. She grinned and shook with a grip as hard as his own. They resumed their walk down the runway. After a few meters, Leah covered a yawn.\n\n\"What time is it for you?\" he asked.\n\n\"Way after midnight but I'm fine. What's the plan for today?\" \n\nHe shook his head. \"CRA for you.\"\n\n\"Oh, thank Mercy.\" \n\nLeah yawned, in earnest this time. Crew Rest and Acclimation was required after every planetfall. While ships were in transit, clocks were synched to the cesium clocks on Hub. Once they'd reached their destination, crews took Wide-Awakes or Sleep-Fast to get their bodies used to the new rhythm of local days and nights.\n\n\"And you have nothing to be ashamed of,\" Leah said. \"PTSD is trauma damage, the same as getting shot.\"\n\n\"I tell him the same thing, but he never listens,\" Addie said as they walked under her wings. \"Hello, Captain Leah Jones. Welcome aboard.\" \n\nLeah's face bloomed into a wide grin, her exhaustion chased away for the moment. The sleek charcoal gray ship was even more intimidating and beautiful in close quarters.\n\n\"Hello, Scout Atalanta, please call me Leah. You're absolutely beautiful!\" \n\n\"We're going to be very good friends,\" the ship said. \"Would you like the tour?\" \n\nFinn left Leah walking around the ship talking to Addie and went in to get coffee going. He had a meeting scheduled with Owen Lykos and there were still the landing strut seals to deal with.\n\n|1.3\n\n\"I was going to wear a uniform but it's too hot.\" \n\n\"Finn, you never wear a uniform,\" Addie said. \"Go to your meeting.\" \n\nThey were both speaking quietly. She'd tried to stay awake but Leah had finally muttered something unintelligible and went to find her bunk.\n\n\"You're sure you're going to be okay?\" Finn asked. \n\n\"Yep, I think I like her,\" Addie said.\n\n\"I won't be far if you need me.\"\n\n\"You're very cute when you worry. You won't be far, so relax. Have some fun.\" \n\n\"This isn't that kind of meeting. I'll see you soon and we'll fix the struts.\"\n\nThe hatch opened and the humid air flowed in, a wet blanket wrapping around him. Finn climbed down and began to walk up the long slope toward the tan geodesic domes of the outpost. By the time he'd reached the first one, there was an annoying bead of sweat running down the center of his back. He'd debated wearing at least a uniform shirt for the meeting and was glad he'd gone with a light t-shirt and shorts.\n\nThe habitat domes were laid out in a semi-circle, like most places. Usually the administration and community center was placed in the middle of the circle. The large geodesic was in the usual place, but Owen had said that the space usually used for the outpost's offices had been voted by everyone to house the brewery. Owen's predecessors had taken the much smaller dome that had been slated as a brewery and water distillery. Finn was all in favor of beer, but he thought it was kind of silly. Utopianists did all sorts of strange things like that. \n\nWhen the attack on Earth began to heat up, there was a tsunami of evacuees suddenly headed for Hub, humanity's only major colony. All of the careful plans for expansion had gone out the window, in favor of rapid expansion, wherever possible. Before the flood, Hub had consisted mostly of construction workers, engineers, or planning staff. In the old system, Settlers bound for their new colony worlds would have only been temporary residents, there for equipment and training before going on to their colony. \n\nBut when the flood of humanity began to arrive at Hub, no new worlds were ready for colonists. Eden had been closed to further settlement and the handful of tiny outposts were still relying heavily on Hub for support.\n\nThe waiting lists of carefully chosen personnel with critical skills had also been abandoned. Transports had landed wherever there was room and taken anyone that wanted off the planet. They'd managed to get roughly nine million souls off of Earth before the end. They'd kept flying evac missions, even as the bombardment of the planet had begun. Once the Swarm landers had disappeared, his squadron's primary mission had changed from planetary defense to covering the evac ships as they ran for the Slingshot gate and the safety of Drive Space. \n\nFInn had had an idea of the chaos overtaking Hub. With the sheer volume of panicked refugees, any emergency plan would have failed. But it had been more of an academic exercise, until he'd finally arrived at Hubworld. The rioting was only just being dealt with. There were still widespread fires and a pall of smoke hung in the sky over the arrival facility.\n\nFleet, the entity responsible for human security, had deployed everyone available to Hub's surface to help with the uprising, but they had been quickly overwhelmed. An urgent request for help had been sent and the day after Finn had returned to the living, Commonwealth landers began to arrive with reinforcements from their sister planets. \n\nAt the same time, warships from one of the Commonwealth's senior members began to enter Hub's orbit. These older races were referred to as the Archreylen, but the humans knew nothing else about them. The new arrivals remained silent, but when a strange looking ship appeared, it was obvious what they had been waiting for. The ships closely guarded the newcomer as it moved into a very low orbit. Human sensors had detected hints that there was some kind energy being radiated, but no one had a clue what it was supposed to accomplish. \n\nBut then the storms began. Cold rain and high winds had driven the now frightened rioters back to the modified cargo containers that served as temporary housing. Hub Administration took advantage of the unexpected pause by quickly recruiting former leaders on Earth to form a coalition government. Slowly, stability returned to Hub. A day later, the mysterious Archreylen ships had disappeared back through one of the gates. \n\nIt was only a temporary fix. On the surface, the civilian leaders were quick to create permanent positions for themselves in the new and evolving government. And, just like always, the people they claimed to represent were fragmented into various factions. One of the first movements had been that of the Utopians. Started by a cabal of scientists, free thinkers, and sci-fi writers, the movement was all about using the opportunity they'd been given to usher in a new age of plenty, where technology and progressive values could provide a better life. \n\nThe developing, and mostly dictatorial, factions had soon recognized the threat this represented and had brutally attacked the Utopians, both politically and physically. Hub's administration had done what they could, but the movement had evaporated like cotton candy in a thunderstorm. There were a few diehards left, not enough to worry any of the other remaining factions.\n\nFinn was sympathetic to the idea of a leaderless society, but decades of pointless wars had provided a more cynical view of humanity. When he'd started reading the situation reports from the Erewhon outpost, Finn had been surprised that there were enough Utopians left to set up their own outpost, let alone that they'd been permitted to colonize a new planet on their own. ",
        "As he kept reading, Finn began to see the trap that the Utopianists had fallen into . The titanic forests that surrounded this clearing, also covered the rest of the planet's single massive continent. Restricted to a single clearing in the middle of the largest continent, the Utopians could only expand so far. Crowded together, the population was far more susceptible to any diseases that struck and they would be an easy target if the Swarm, or any of the other Dominion races found the place. This had been their \"final solution\" for the Utopian movement, one that all of its members had happily embraced. Taken as an academic exercise, you could almost admire the ruthlessness of the plan. \n\nWhen Finn arrived, Owen was sitting on the porch of his office, talking to a group of children. Whatever he'd been saying was lost in the stir of the kids noticing Finn. Mostly they stared at him but a few waved. He waved back before realizing that Owen had stopped talking and was watching him.\n\n\"Looks like you're already busy,\" he said to Owen. \n\n\"We were just finishing up,\" Owen said. \"Everyone, this is Captain Finn. He's one of the Scouts that Colonial Fleet sent to help us.\"\n\nFinn smiled at the expected chorus of \"Hi, Captain Finn.\" \n\n\"I was just telling them this was a bad time to ride bikes on the runway,\" Owen explained. \n\nFinn nodded. \"There are still some ships coming in and they're moving too fast to avoid anyone, or even see them maybe. As soon as everyone is here, I'll have someone will come and tell you it's safe to play out there again. In fact, I bet the kids aboard the Pioneer ships will be glad to meet you.\"\n\n\"There's kids on spaceships?\" a small voice asked. \n\n\"Sure, that's where their families are,\" Finn said. \n\n\"The Captain and I have some things to talk about,\" Owen said quickly, ignoring the sudden eruption of raised hands. \"You can all have the afternoon off, but don't forget to finish your homework for tomorrow.\"\n\nThere was a chorus of goodbyes and thank-yous as the kids got up and headed for the habitats.\n\n\"I'm their science and history teacher three days a week,\" Owen said as he got up. \n\n\"I'm impressed. You're a man of many talents.\" \n\n\"Yes, I am and teaching is not one of them. Come on out of that sun.\"\n\nFinn gratefully got into the shade and sat in one of the chairs. Owen reached into a insulated bag and pulled out a bottle of cold water. Condensation was already forming on the bottle as Finn took a long drink. The water was so cold it made his teeth ache.\n\n\"That's really good, thank you.\" \n\n\"You're welcome. Before we start, I asked the Pioneers to send a representative up as well.\" \n\nFinn laughed. \"That'll be interesting. Have you ever dealt with the Ta'avi before?\" \n\n\"The who?\" \n\n\"Uh, the Ta'avi? They lost their planet like us, except without any warning. There's not too many of them left. Most of the Pioneers are Ta'avi family groups. They invented the whole idea actually.\"\n\n\"No kidding. They spoke pretty good English.\" \n\nFinn sighed. Of course they hadn't told these poor bastards about any of humanity's sister races. \"That's because there was a big refugee group on Earth for years. A whole generation of the Folk were born in New Mexico. I was amused because the relationships between clans, individual families, and everything else is incredibly complicated.\" \n\n\"You know a lot about them?\" \n\n\"Yeah, I was adopted into one of the clans back on Ear...uhm, back before the evacuations. They might be figuring out who's actually senior for a few days.\" \n\n\"Maybe quicker than that,\" Owen said, pointing. \n\nFinn looked behind him and saw a familiar figure. He laughed and shook his head.\n\n\"Did everyone with any sense succumb to sunstroke?\" he called.\n\nTyohac's laugh boomed back. \"They'd still be going through the clan rolls if I hadn't brought a very large hammer to the council!\"\n\nOwen suddenly looked worried but Finn shook his head slightly. \"That's just his sense of humor,\" he muttered. \"Ty is a good man.\" \n\nTyohac climbed onto the porch and slapped Finn's back and then stuck out his hand and shook with Owen. \"I'm Tyohac and we don't have the time for my full last name. I'm not the leader, but I've got permission to be the spokesman.\" \n\n\"Owen Lykos, welcome to Erewhon and thank you for coming. Obviously you two are already acquainted.\" Owen handed the burly Pioneer another bottle of water.\n\n\"My tiny cousin here? I used to let him hang around my airfield. ,\" Tyohac said and took a long drink. \"Oh, that's good stuff. I'm a little surprised to see they trusted him with his own ship.\"\n\nTo his credit, Owen barely blinked. He raised his eyebrows and looked at Finn, who rolled his eyes.\n\n\"We flew together in the Defense. He wasn't quite so fat back then, but it still took a crowbar and a tube of grease to get him into the cockpit.\" \n\nTyohac laughed. \"I want to know which race of midgets those things were built for. I'm yanking your chain, Owen. Finn here was my squadron leader and wasn't too terrible at it.\"\n\n\"What did you fly?\" Owen asked Finn. \n\n\"An AF-1. I'd prefer that not get around though.\" \n\n\"The Redtail? I'm impressed,\" Owen said. \"Why don't you want people to know?\"\n\nFinn wasn't sure how to answer that. He started to explain but Tyohac interrupted him; \"Finn is a very reluctant hero. You see, he's nowhere near charming or pretty enough. So, he gets testy around those of us who are better looking and have larger penises.\"\n\nFinn had to give Owen credit, the Administrator didn't even blink. \"That's too bad. Welcome to Erewhon, all of you.\" \n\nTyohac nodded his thanks and settled to the floor. \"So, you're really a bunch of real live Utopians. How the hell did you get this place?\" \n\n\"What's wrong with it?\" Owen demanded. \n\n\"Nothing, that's why I'm confused!\" Tyohac shot back. \n\nFinn didn't share his own thoughts about the colony. \"That's a good question, the way the Utopians and the Hub leadership bump heads, how did you get the Resettlement Directorate to put you on a planet this nice?\"\n\n\"That was Liz, my wife. She was on the council and when RD announced their colonial plan, she somehow got us listed as a colonial corporate entity. There's not much usable room here, so they put the smallest of the corps in the drawing and we happened to win.\"\n\n\"That's it?\" Tyohac asked doubtfully. \n\nOwen laughed. \"Hell no, their arbiter found that we didn't quite meet the requirements for diversity or something. After the third or fourth injunction, Liz managed an appeal to the Commonwealth. It was a Hail Mary but they actually got involved. It was decided we had won under the Resettlement Directorate's own rules. A couple of days later, someone from Fleet showed and started the familiarization briefings about Erewhon.\" \n\n\"Where's the name Erewhon come from?\" Finn asked.\n\nOwen smiled sadly. \"Liz read a lot. Erewhon is the name of the first novel written about a utopia. It's also the word 'nowhere' spelled backwards, more or less. It seemed to fit the place.\"\n\n\"Well, you're lucky,\" Tyohac said. \"Rain and all, this is one of the nicer places we've worked.\"\n\nOwen was surprised. \"Really? I thought Eden was supposed to be paradise.\" \n\nFinn and Tyohac glanced at each other, confused and Owen noticed the look. \n\n\"That's where Fleet is based, right?\" \n\n\"Where did you hear that?\" Finn asked. \"Eden is a no-go to any outsiders, other than terraform engineers, last I heard.\" \n\nOwen looked between them, half smiling. \"Come on, admit it. Eden belongs to Fleet. Everyone knows that's why no one ever sees Fleet people on Hub.\" \n\n\"Except no one told Fleet, I guess,\" Tyohac rumbled. \"You been holding out on me, Finn?\" \n\n\"Never been there,\" Finn said. \"Before this, we were doing assay on a proposed outpost that didn't pan out. Before that, it was Celestial Reverie.\" \n\n\"They just made it up to colony status,\" Tyohac said. \"I give this one a lot of shit, Owen, but only because he needs it. Scouts and Main Fleet take their job seriously. You don't see ship's crew on Hub because they're only there long enough to refit before they're back to chasing planets. The Ops staff on Hub got shoved out to the old Light Bringer and it's a long walk to the city. Anyway, none of them will keep a uniform on, so even when you see Fleet, you wouldn't really know it.\" \n\nOwen stroked his chin. \"Hmm, they might want to get that information out to people. It's pretty common knowledge that the only Fleet on Hub is the security force. Everyone else is on the orbitals or sitting on Eden.\" \n\n\"That's not good,\" Tyohac rumbled. \n\n\"I'll get a message out on the next Pony,\" Finn said. \"I'm sure they'll be surprised that they're actually living in paradise.\" \n\nThe Light Bringer had been the first real colony ship to arrive on Hub. It had been made as large as possible and was a single use transport, hauling everything from Earth to get the first phases of the Hub colony built. Personnel hadn't been part of the equation, so it had mostly been an immense boxcar. The most advanced thing about it had been the grav engines and the AI that ran them. When Light Bringer had made planetfall, the gravity engines had been crushed beneath it. The AI had been scavenged and had become the City's first support system. The mammoth hull was visible from the city, even though it was several kilometers distant. \n\nOwen chuckled. \"Why does reality always fall so short of expectations?\"\n\n\"I think it's called the human condition,\" Finn said. \"To completely change the subject, I read the sitreps on the trip here but I don't know if I had them all. What was the origin of the staph?\"\n\nOwen sighed, smile disappearing. \"An infection in the filters of three different enviro units. It wasn't us, it had to have come from Hub because the seals were intact on all our gear. I saw the cargo boxes myself. Anyway, two units were attached to the residential habitats, the third supplied two different technical workshops. It got all of our techs within the first couple of days. It also spread, mostly to people that caught it from the first of the infected. Thankfully, it stopped there but we landed with two-hundred and fifty-four brothers and sisters. When the sickness finally burned itself out, there were ninety-one souls left alive. Twenty-six of those are orphaned children. There are a few lucky ones who only lost a single parent but most are the colony's children now. There were two additional suicides, but things have been more or less stable for the last season. If you can call it that.\" \n\n\"You've been dealing with all this?\" Tyohac asked. \"You have my respect. I can't even imagine...\" \n\nOwen shrugged. \"It was just something we had to deal with. The thing that has been making me insane is the Resettlement Directorate. They've constantly been up my nose about holding up the next wave of settlers. The rest of our colony is on a freighter somewhere, waiting for us to get it together. But we can barely keep the lights on here, let alone prepare for another eight-hundred people.\"\n\n\"But you're under quarantine,\" Finn said. \"No one is supposed to even plan a flight here unless they've got special clearance.\" \n\n\"You're kidding? That just means no one can leave. We're supposed to be exporting sugar, it's our tax crop, and they're starting to get ugly about that as well. Nothing about the equipment that was promised, but never arrived, no recognition that there was a fuck up on their end that left us with an drug-resistant staph outbreak. No, it's all 'Service To Humanity' and their fucking schedules...\" His mouth snapped shut and Owen cleared his throat, looking embarrassed. \n\n\"Wow, just a single F-bomb,\" Tyohac said. \"Don't you worry, Owen. We'll be here for the next eighteen months, we'll have things ready for them. Are they doing the lightspeed time-jump thing?\" \n\nOwen was still embarrassed but looked interested. \"I heard it was something like that. The ship's relative time goes more slowly?\" \n\n\"That's how they do it,\" Finn said. \"A twenty-to-one compression velocity is pretty standard. For every twenty minutes here, a single minute passes on the ship.\"\n\n\"Is that how it works? I'm a complete noob at this stuff.\" \n\n\"Personally, I'm glad you're a noob,\" Tyohac said. \"I don't have to make you unlearn a bunch of bad habits. What do you need from us first?\"\n\nOwen thought for a few seconds. \"Habitats,\" he finally said. \"I wanted to be sure to wipe out any possible trace of the strep, so we destroyed the infected habs. It was a stupid move, now there's barely enough for the people I've got left.\"\n\nTyohac shrugged. \"Not so stupid. Trying to completely sterilize one of those things would be a pain and even if you did it perfectly, no one in their right mind is going to want the space. Did you save the metal ribs at least?\" \n\nOwen nodded. \"And there's five cargo boxes full of replacements. I don't have anyone left from the original building crew and the specs leave important things out, like how to raise the main ring of the dome.\"\n\n\"Yeah, I've been complaining about that since the start,\" Tyohac said. \"You need to have a crane, or at least a mech to pick it up. You've got working mechs?\" \n\n\"Two mechs, but I'm not sure about the working part.\" \n\n\"Oh, they're gonna work,\" Tyohac said. \"Now that you've got the best Pioneer clan planetside. We'll get you all fat and sassy again.\" \n\nTyohac and Owen began discussing the other problems the outpost was experiencing while Finn listened. He noticed a beefy young man with a much older woman marching next to him. In spite of the heat, both of them wore black clothes with long sleeves. The woman had an ankle length black dress and the man's long pants were tucked into work boots. He wore a wide brimmed black hat and his companion had an old-fashioned black bonnet covering her head. \n\n\"Are those Neo-Puritans?\" Finn asked. \n\nTyohac and Owen looked up. Owen stood up as the odd looking pair arrived at the porch steps. \n\n\"Good morning, Brother Gavin and Sister Caroline.\" \n\nThe pair stopped at the stairs, obviously not willing to come any closer. \n\n\"Allow me to present Sister Caroline and Brother Gavin,\" Owen said. \"This is Captain Finn Morgan and Pioneer Chief Tyohac sent from Fleet.\" \n\nNeither of them lost the stony expression on their face, just nodded as they were introduced. \n\n\"Administrator Lykos, Sister Caroline asked me to speak on behalf of our community...\" the large man began but he was quickly interrupted by his companion\n\n\"Our observances to the Lord were interrupted, Administrator,\" the woman interrupted. \"Our religious freedoms are being attacked. Your Compact assured us that our beliefs would be respected.\" \n\n\"What happened this time?\" Owen asked evenly. \n\n\"That unholy racket at dawn. It interrupted our morning prayers and...\"\n\n\"Excuse me,\" Tyohac said. \"Can you describe this 'unholy racket?'\"\n\nSister Caroline turned a baleful look on him. \"You're one of them, you know very well what you were doing.\" \n\n\"What you saw is the Ta'avi Sun Greeting,\" Finn said quickly, seeing the look on Tyohac's face. \"It's part of our belief system.\" \n\n\"Now they're corrupting the true children of the Lord?\" Sister Caroline said, scorn dripping from her words. \"You are a sinner and a heretic, you already know that there is only one true God and Savior. Everything else are the wiles of the Dark One. And his servants.\" \n\n\"Sister Caroline,\" Owen said. \"The Compact protects everyone's right to worship or not as they...\" \n\n\"No!\" she spat. \"I didn't agree to that. Perhaps it was accepted by the others, but not the Faithful. Any more of your heathenish shouting will be dealt with. Harshly.\" \n\nTyohac slowly stood up and Brother Gavin began to look uncomfortable as he realized how big the Ta'avi actually was. Finn braced himself, ready for some high-volume debate but Tyohac's voice was calm, mellow even. \n\n\"And what does harshly mean, exactly?\" \n\nHer lip curled. \"I couldn't say. But you should not be surprised when the Faithful take up cudgels to defend our religious freedoms.\" \n\n\"That sounds like a threat,\" Owen said. \n\n\"Of course not,\" Gavin said quickly. \"These are simply a group of peaceful farmers trying to make their way in a confusing time. It was just a misunderstanding, this time. Come, Sister Caroline, the Lord does not wish strife among his flock.\" \n\nShe sniffed but the two of them turned and left without saying a word.\n\n\"Drabs? Seriously?\" Tyohac asked, sitting back down.\n\n\"The NeoPuritans are here because of another screw up on Hub,\" Owen said, stressing the official designation for the religious movement. \"They were headed to an outpost called New Plymouth but Fleet attached their pods ended to the wrong ship. They were all the way out here by the time anyone noticed the mix-up. There was plenty of space so Ryan and Liz made a deal with them to stay. They preferred to have their own space and we're lucky to have them. The bug didn't spread that far, they were able to keep us going with fresh food.\"\n\nFinn looked at Tyohac. \"Did you hear about this?\" \n\n\"Not a word.\" \n\n\"We get updates from other Fleet operations all the time,\" Finn explained to Owen. \"That big of a mistake would have been the subject of some high priority messages to all of us.\" \n\n\"And it'd be a big stick for Resettlement to beat Fleet with,\" Tyohac said. \"Look, there's no way that at least some of our folk won't greet the sun every morning. Probably not as many as this morning, new suns are special events. I'll have a talk with the other Connies and get some of the calmer types to keep an eye out for trouble.\"\n\n\"I appreciate that,\" Owen said. \"They don't pay a lot of attention to me, being a gay Utopianist and all.\"\n\n\"You said you had something to talk to me about yesterday?\" Finn asked Owen. \n\n\"I was going to ask since you were the first one here, but I'll leave it up to you. Liz was working to get our 10k scale maps completed. She sent out a team of four the day before the staph infections were discovered. Obviously there's more important things to worry about than maps but that team never came back. I wanted to try to recover anything...\"\n\n\"Yes,\" Finn said interrupted. \n\nOwen was surprised but Tyohac was nodding in agreement. \n\n\"I didn't realize body recovery was something Scouts normally did.\" \n\n\"It isn't,\" Finn said. \"But I was military before I came to Echo. No one left behind. Do you know which way they went?\" \n\nThe Administrator nodded. \"We know where they entered the forest. One of my people went out and checked to make sure it was still there. He said he see trail markers deeper into the forest.\" \n\n\"Tomorrow soon enough?\" Finn asked. \n\nOwen nodded, still surprised. \"I thought I'd have to talk one of you into it.\" \n\n\"We'll send a team if Finn can't go,\" Tyohac said. \"Remembrance must be honored for the lost.\" \n\nAfter working out the details of the mapping party as well as the promise of a ride out to the forest, Finn headed down to the geodesic that served as the outpost's control tower. There weren't any colonists around, but a team of Ta'avi engineers had the place opened up. He recognized the work boss instantly, it was one of Tyohac's extensive collection of cousins from Echo. Yves and Finn caught up briefly and then he got permission to search for anything unusual. \n\nThe dome was divided into to large rooms. AI systems he'd seen on Earth had taken up an entire server rack, but he didn't see anything like that. Still, he pulled covers off every piece of equipment he found, making sure it hadn't been secreted inside of something else. After two hours of searching, he still had nothing. Finn went back out into the blazing heat and climbed the antennae tower, but nothing looked out of place. He started to take a closer look at the wiring harness as thunder rumbled in the distance. ",
        "The Pioneers that had been working outside of the dome came running for shelter and they yelled at Finn to get off the framework tower. Heavy raindrops were beginning to fall by the time the last of them got back inside the dome. There was a flash of white light immediately followed by a boom that sounded more like a bomb going off than a natural atmospheric phenomena. \n\n\"Damn,\" Yves, the work boss said, looking at the screen. \"That hit nearby. Good thing they called you down, huh?\"\n\nFinn laughed. \"Something that loud, I would have jumped straight into the dome from the top.\"\n\n\"Yeah, that would have been great, who doesn't love patching dome skin in the rain? What are you poking around for anyway?\" \n\nFinn related the story of the attack on Addie and Yves looked confused. \"There's no AI here though. You could have just asked.\" \n\n\"I thought it might have been divided into pieces and hidden inside of other stuff.\" \n\nYves shook his head. \"Wouldn't work. The neural circuits have to be in close proximity, it has to do with sub-routine timing. There are probably ways to get them smaller but you're still be looking at two cubic feet of neural assembly. Let me show you something interesting though.\" \n\nFinn followed him through the building and they took a short ladder down into the crawl space beneath the floor. Finn had already stuck his head down here but other than some boxes where the various cables entered the dome, there was only a bare plastcrete floor. Yves led Finn over to a junction box and pulled it open. \n\n\"I don't know what that's for,\" he said, pointing at a thick power cable, striped with black and yellow warning stripes. \"Best guess is that it was for some kind of auxiliary power for any future expansions. But that's unusual and they had to drill a whole new access point just for that. Outside, it comes out of an underground conduit just under the antenna. There's two legs, one goes up the antenna array, the other half ends right here. It's not an AI, but it's strange.\" \n\nFinn bent closer and looked closely at the high voltage attachment point. Yves started to warn him about touching it up but Finn had already taken the power coupler and lifted it away from the wire. \n\n\"Mercy's bleeding paps!\" Yves yelled, face pale and eyes wide. \"You know the load that gauge carries! You could have killed both of us!\"\n\n\"Nope,\" Finn replied, handing him the upper half of an empty coupler fitting. \"Someone was sloppy, up close you can see that the other half was missing.\" \n\n\"Yeah, great. How about you warn me next time, Finn? I about crapped my pants just now.\" \n\n\"Sorry,\" Finn said, not sounding at all sorry. He pulled out a flashlight and examined the junction again. \n\nDespite his anger, Yves leaned closer for a better look. Instead of heavy gauge conductors, there were half a dozen fiber-optic cable attachment points. The cables themselves disappeared into the back of the metal box.\n\n\"It's a camouflaged communications tap,\" Yves said. \"That makes me nervous.\" \n\n\"Same here. Now I'd like to know where that conduit runs off to.\" \n\nYves held up a hand. \"Don't go out and just start yanking on shit, okay? I swear, every one of you pilots is crazier than the last one.\" \n\n\"C'mon, they say being frightened is good for you.\" \n\n\"Then I must be the healthiest bastard on the planet right now. But you're onto something. An AI would need this much comms bandwidth to pull off what it did with Atalanta.\" \n\nFinn took the half coupler back and carefully set it in place. \"I can't think of a reason to hide an AI, can you?\" \n\n\"Not for any good reason. What did your Admin guy say about it?\" \n\n\"That they never received their colony AI.\" \n\nYves eyebrows went up. \"Then like I said, not for anything legal. Why bother though? I can't think of a reason to keep one secret.\" \n\n\"That's because your heart is pure. Maybe the hack on Addie was exactly what it's meant to do, crash incoming ships if you don't want them around.\" \n\nYves looked like Finn had just said something obscene, and maybe he had. \n\n\"Can you keep this from your guys? I don't want to tip anyone off.\" \n\nYves nodded. \"I have to inform our section chief, but Dina can keep her mouth shut.\" \n\n\"I've got to head into the forest tomorrow for corpse recovery, we can figure out what to do with it once I'm back.\" \n\n\"I'll keep a bolt cutter nearby, just in case.\" \n\n\"A shotgun would probably work better,\" Finn said as they crawled back to the ladder. Yves muttered something about lunatic pilots and Finn had to keep from laughing. \n\n|1.4\n\nThe next morning, Finn and Leah went over their gear again, making sure they had everything.\n\n\"If they're dead already, I don't understand why you have to go find them.\"\n\nLeah smiled and put her hand on the bulkhead. \"Addie.\" \n\n\"I know, we talked about this already but I'm scared to be here alone.\" \n\nFinn sat down in the pilot's chair. \"You're not alone, sweetheart. Bunjil and Xerxes will be here in a few hours.\"\n\n\"Xerxes is always too bossy,\" the ship grumped. \n\n\"Well, she's older than you are,\" Finn pointed out. \n\n\"But what if you die out there and never come back?\"\n\n\"Then you'll have to be very brave and help your new pilot,\" Finn said. \"But we already decided that I'm too mean and ugly to die.\" \n\n\"And you haven't shown me an Immelmann turn yet,\" Leah said. \"I'm coming back because I still don't believe you can do it.\"\n\n\"The UTV just pulled up, you'd better go. I want you both to be extra-careful, okay?\" \n\n\"I promise, again,\" Leah said, holding up her right hand. \n\nFinn threw his pack over one shoulder and followed Leah to the hatch. He stopped and put his forehead against the bio-sensor there. \n\n\"I'll be very, very, extra-careful. Okay?\" he murmured.\n\n\"I'll be here keeping the lights on. I wish I could go along.\" \n\n\"I know sweetie, but you don't have any shoulders to carry a backpack,\" Finn said. \n\nThe ship blew a raspberry and Finn and Leah laughed as they left the ship. The ladder folded up as Finn stepped off and the hatch swung closed. They turned around to see a familiar face waiting in the quad. \n\n\"Do you not have anything better to do?\" Finn asked Tyohac as they put their packs in the back. \n\n\"I'm here because I feel bad for her,\" Tyohac said. \"You can walk your ass out there for all I care.\" \n\n\"Don't put me in the middle of your testosterone contest,\" Leah said, climbing in the back. \n\nTyohac handed each of them an insulated cup. \n\n\"Don't tell me you're drinking coffee now,\" Finn said. \n\n\"That stuff is disgusting,\" Tyohac said. \"That's black chai tea, give it back if you're gonna start bitching, Pirate.\" \n\nFinn took a long sip. \"Thank you, Flytrap.\" \n\nThey traded a complicated handshake and Tyohac headed through the colony. Finn figured it was his imagination, but the place already felt different. Ta'avi work gangs were pulling things apart. And there were colonists with all of them, helping or at least learning more about their infrastructure. Finn nodded to himself. Maybe they could get everyone thinking about something else than the loss of their friends. Now, with a little luck, the outpost would start getting back on its feet.\n\n\"So, what's with the Flytrap and Pirate?\" Leah asked. \n\n\"Call signs,\" Tyohac rumbled. \n\n\"I've been Pirate since OCS for obvious reasons,\" Finn said. \"Flytrap here kept quoting WKRP at people but there was already a guy called Fever flying recovery missions, so he ended up with Flytrap.\" \n\n\"What's WKRP?\" Leah asked. \n\nTyohac looked at Finn, who shrugged. \"Kids.\" \n\n\"What time do you have to have her home by?\" Tyohac asked.\n\n\"My curfew is at half-past kicking you in the head,\" Leah said brightly. \n\nBoth men laughed as they passed the giant Quonset garage. The doors were wide open and he thought he could saw someone moving around inside. Otherwise, it looked deserted. \n\n\"That's why I came to get you,\" Tyohac said, nodding in that direction. \"The power went down in there, nothing was charged up. Don't know what they were thinking, even in paradise you still need lights. Daffy bastards.\" \n\nThen, all three of them raised their hands in a wave as they passed Owen. \n\n\"Wait, was he actually smiling?\" Finn asked. \n\n\"Nah, probably gas,\" Tyohac said.\n\n\"How did Sun Meeting go this morning?\" \n\nTyohac gave him an evil smile. \"It was well attended and very loud. Not a peep from the Drabs.\" \n\nFinn had seen plenty of forests, back when there was still a place called Earth. It was simple; at some point the grass ended and the trees began. Getting into Erewhon's forest was a lot more involved. The grassland ended at a twisted wall of roots that matched the tree's immense size. The smallest one he saw was at least two meters thick. From there, it was impossible to guess at the thickness, the roots twisted around each other and were half buried in the soil. The mat ended at the grassland and was easily twenty meters higher in places.\n\nFluorescent orange marker tape had been tied off at one of the lower edges and they found the climb up surprisingly easy. He turned and waved to Tyohac who beeped the horn and drove back towards the outpost, almost invisible from here. The pair was happy to retreat into the shadow of the trees, the heat was worse than it had been yesterday. \n\nFrom a distance, the forest had reminded him of the Pacific Northwest but with closer inspection, it really didn't look familiar at all. Whatever they were, the lower gravity and high humidity had grown some truly spectacular organisms. The first example was easily twenty-five meters across the base and the crowns he'd seen on the bumpy ride down had easily been two-hundred meters up. The orbital survey had measured even larger specimens further from the outpost. \n\nOf course, these weren't really trees as they'd existed on Earth. Last night, he'd been catching up on what scientific work had been done with the forest. The bark was incredibly tough, laced with a natural mineral lattice. That was as far as the original Scouts had gotten, whatever was hidden beneath the bark was impervious to any kind of mechanical cutting or sawing. After the initial samples, no one had bothered with the trees much. It was obvious that they weren't going to be a resource for a colony and there was more important work to do. \n\nThe most visibly alien thing about them was the regularity of each tree. The trunks supported several tiers of branches, from the massive structures near the base, to the more familiarly sized branches in the crown. Each of the branches were spaced evenly around the main trunk. There were six near the bottom, the middle carried eight, and the highest points supported twelve. \n\nThen there were the leaves. Different types were found on each tier, narrow pine needle types at the top, growing gradually wider as they got lower. The lowest of the canopies, twenty- or thirty-meters overhead, had octagonal leaves that resembled giant lily-pads more than anything else. The regular spacing and intermeshed branches made for a very efficient system of harvesting sunlight.\n\nThe little sunlight that made it this far down created a perpetual twilight that was much cooler than the clearing they'd come from. There was even a light breeze flowing down wach of the giant trunks. The lack of light prevented undergrowth, although there was a kind of moss analogue that covered the roots and trunk bases. \n\nFinn climbed higher up an immense root that looped over the others. The bark had an almost sandstone-like texture under his hands and he easily made it to the top. Leah followed and from the higher vantage point, he could see further in. The roots continued to twist and twine over each other, more like an chaotic ocean frozen in time than a forest floor. In a few places there were gaps in the canopy, allowing shafts of sunlight to reach the ground. Tendrils of mist were illuminated in the golden light as they flowed and twisted toward the ground. \n\n\"Holy Mother of Mercy,\" Leah said quietly.\n\nFinn nodded agreement, stunned at the surreal beauty. \n\nThey stopped there for a time, staring at the scene around them. Finally, they headed back down and toward a fluorescent arrow, painted on a root. It pointed deeper into the forest. \n\nLeah hiked the heavy pack up higher and tightened the straps. \"I guess we better get to work.\" \n\nTen hours later, they were still finding the arrows. Both were pleased, though neither would have admitted it. The longer it took to find the missing survey team, the longer they could spend in this strange wonderland. Moving across the root mat was easier than it had looked but they'd quickly learned to avoid the mossy surfaces. Whatever the stuff was, it was slick as wet ice. Finn's tailbone ached from the long slide he'd unintentionally taken. \n\nLeah had been worried until he called back that he was okay. At that point, she came rocketing down, grinning from ear to ear. Finn had shaken his head and muttered something about rookies but not before Leah saw that he was actually smiling. \n\nIt grew steadily darker as the afternoon wore on and they started looking for a camping spot while they could still see. Then they came across a stream. It was several meters across but made tiny by the giant roots it flowed around. Up to this point, they'd occasionally heard streams but hadn't seen any water on the surface. Following the flow as it wound its way between and under the roots, they found a small cove created by a bend in the root. Three meters below them, the forest floor was a pale sand that rose a couple of meters above the stream.\n\n\"That would be perfect,\" Leah said. \"I bet we can even tie off the hammocks with a little extra line.\"\n\nThe hammocks could be used as tents, but Finn hadn't been looking forward to laying on the rough roots. They climbed down and soon found places to suspend their beds from. The hammock was a little wider than a twin bed and was covered by an attached canopy and bug screen. He tied his back, they hadn't seen anything moving down here the entire day and he doubted much rain would make it this far down.\n\nAfter they'd both finished their notes on the day there wasn't much else to do. Leah read something on her tablet while Finn sat sideways on the hammock, rocking it back and forth as he looked up at a tiny chink of evening sky, far above them. \n\nThere was a strange sound from behind him, something he remembered from a long-ago trip to SeaWorld, the sound of something big displacing a lot of water all at once. Instantly, he was on his feet and turning to face whatever it was.\n\nA mass of black tentacles was pulling itself up out of the stream. At the best, they were easily as thick as his waist and the center, he glimpsed a maw filled with what looked like very large parrot beaks. And the tentacles weren't waving around like a thousand horror movies had shown. Instead, they were snaking across the ground, finding places to pull the slug-like body out of the water and onto the bank of the stream. \n\nA voice in his head gibbered that the stream was too small to hold a nightmare like this. He heard a short scream from the other side of the cove as he dragged his pistol out, already knowing that the 9mm was useless. He'd probably need a fifty-caliber to even dent the thing. A quick glance over showed that the area where Leah had been was covered by the tentacles. There wasn't a trace of her, or her gear.\n\nFinn knew then that he'd reached the end of his life. Still, his hands went through the familiar litany of movements. Slide back, then slamming forward. Safety off, muzzle coming up. The pistol bucking slightly in his hand as he fired. Even the gunshots were puny in the face of this thing. The tentacles shivered as the rounds hit them but hardly paused. \n\nAddie is going to be so pissed at me.\n\nThe slide locked back on the empty pistol. Finn had the thought that he should have tried to get away. But the thing probably moved faster than he could climb. As he threw the useless pistol at it, another part of his mind calm and annoyingly analytical, if he'd be ripped apart first now or pulled into the monster whole. \n\nThen something grabbed his hand, startling him even more. It was a huge hand, the size of a garbage can lid, seizing his entire right arm as it pulled him up onto the root, up into safety. He was dumped unceremoniously there as whatever had grabbed him vaulted over him in a blue-gray blur. It dropped down onto the tentacles, its arms, too many arms, stabbing and swinging. His ears were pierced with hot needles and Finn clapped his hands over them, trying to block the sound. \n\nAs fast and big as the tentacle slug had been, it was no match for whatever it was that had taken him. Less than a minute after he'd seen the thing come out of the water, the creature that had saved him was at the edge of the stream, holding what looked like an oversized machete in each hand. The body of the river thing was just disappearing but it had left several pieces of itself behind; there was the tip of one tentacle as well as a collection of less identifiable slimy chunks.\n\nThen it everything was silent again, the quiet returning with surreal quickness. The other creature used two thick limbs to vault onto the root beside him.\n\n\"Are you okay?\" a voice asked from behind him. \n\nFinn whirled to see Leah behind him. Her face was pale but otherwise she looked fine. Their rescuer stared at Finn, and then at Leah. \n\n\"I thought it had grabbed you,\" he said. \n\nLeah shook her head. \"Our friend here pulled me up just as that thing came out of the water.\" \n\nFinn got to his feet slowly. The aftereffects of the adrenaline were making his legs tremble, but he managed a bow to their rescuer. It was looking down at them both, a being he'd never seen, or even heard about before. \n\nAt first the multiple arms had made him think of a giant spider but the impression had been wrong. If anything, the creature was closer to the shape of a centaur. Four legs, thick and heavily muscled, gripped the root beneath it. The end of the legs were heavy pads. At the other end of the legs, they attached to the long torso with massive joints. \n\nThe head and shoulders were more in a human scale. The head was set atop a long flexible neck with a triangular face, reminiscent of the elfin Xero'pah. Its eyes were matte black set in a face that was roughly the same size as his own. It blinked several times and Finn saw that the lids flickered out from the sides of the eye socket. A longitudinal ridge ran from the top of the head to the chin, giving it some semblance of a nose with a squarish, lipless mouth above the chin. At first, he had thought it was two colors but now he could see that the chest was wrapped in cloth with a complicated looking harness over that.\n\nThe larger arms slowly put the machetes in sheaths on the harness. Then they folded behind the creatures torso, on the top side of the leg joints. The creature slowly lowered itself into a crouch in front of them and held up its human sized front arms, hands empty and spread wide. They were much larger than his own with seven fingers and a long opposable thumb on either side of the palm.\n\nWhatever it was, it was a tech user. The probability that it had saved him for its own dinner decreased but there were other dangers.\n\nThen it spoke. \"I greet you with peace, here at the joining place of our paths.\" \n\nFinn gaped at it. Even though the voice was sibilant and the words were oddly clipped short, he understood it perfectly. Then he relaxed a little. If it spoke English, it had to be in contact with the Commonwealth somehow. It was a different headache now, but just as bad. This individual was probably the equivalent of a Scout for its own people, looking for a place to colonize. He wasn't looking forward to explaining any of this.",
        "\"Are you English speakers?\" it asked them.\"Francais? Espa\u00f1ol?\" \n\n\"English is fine,\" Leah said. \"Sorry, the last few minutes have been...\" \n\n\"Surprising?\" It nodded in agreement, a gesture that looked odd on such an alien frame. \"I, too, was very surprised to see where you decided to rest. You do not know the danger here? This place is ...unwise? Perilous? I do not know the proper word usage. When the dark comes, scavengers will emerge. The thing from the wet is one such. Do you comprehend?\"\n\n\"Where would be a safer place?\" Leah asked. \n\nThe creature gestured upwards and Finn wanted to groan. They should have been able to get into the trees with rope and boot spikes but they'd been in their packs. He glanced over the edge but other than tentacle bits, the sand was empty.\n\n\"Our climbing equipment was taken,\" Leah said.\n\n\"Yes. It was a very foolish place to rest,\" the creature said. \"I will carry you to safety after I ask your permission to touch.\" \n\n\"Thank you,\" Leah said. \"Our weight won't be too much?\" \n\nBoth humans blinked as a strange scent entered their noses. Spicy, a bit like peppers mixed with something indescribable. \n\n\"I will carry you. The touching?\"\n\n\"Of course,\" Leah said. \n\nFinn knew it was a bad idea to be completely in the creature's control, but they didn't have much of a choice. The immense arms unfolded again and gently picked Leah up and held her against its back.\n\n\"I will quickly return for you,\" it told him. \n\nThen it climbed up the nearest trunk, as easily as Finn could walk on level ground and disappeared up into the gloom. He sat down, still shaky, and wondered how much trouble they'd fallen into. \n\nA few minutes later, there was a scuffing noise as the creature came down the trunk headfirst. Finn got up, and after it had gotten his permission \"for the touch,\" it picked him up the same way it had picked up Leah. Slowly and gently, the arms folded over him. It gave him an unfamiliar sense of reassurance he didn't understand at all. They were in deep shit here.\n\nThe reassurance became amusement. Then Finn realized he was feeling the creature's amusement, the thoughts subtly different than his own somehow. \n\n\"You would be deep excrement, were I not as quick.\"\n\nHe snorted a laugh at the truth of that. The creature moved up the trunk of the tree effortlessly and Finn looked around, trying to see everything. Darkness was complete under the trees, but it became lighter as she climbed. \n\nShe?\n\nMaybe it was his imagination, but the creature felt female to him. She moved quickly along the horizontal lower limbs, making several small jumps from tree to tree. A few minutes later, she clambered on top of an artificial platform and set him on his feet near Leah. Finn was almost disappointed the ride was over. \n\n\"Thank you for saving our lives,\" he said.\n\nThe creature shrugged, another motion that looked very strange on her body. \"The female one has thanked me already. This is my life's purpose, but I accept your thanks.\"\n\n\"My name is Finn, Finn Morgan. We are members of the Commonwealth Alliance.\"\n\n\"You cannot hear my name in your ears,\" she replied. \"But I have seen a many-armed deity in your culture called Lakshmi. I like the feel of this word in my mouth and offer it to you. I am of the Waters' Leap Meeting and serve our Wisdom as a watcher and listener of the hoom in the...\" her voice trailed off. \n\n\"I do not know the proper words yet, I will study my memory later. For now, I must hunt and eat. I will return in time.\"\n\nFinn nodded but she was already sprinting across the platform. At the edge, all four legs flexed, pushing her up and out over the edge. Watching, Finn's heart leapt into his throat but Lakshmi's immense arms had already caught a large branch. Swinging to the top of it, she sprinted again and jumped to a higher branch. \n\nFinn looked at Leah as Lakshmi's footsteps faded quickly away. \"Well, that was unexpected.\" \n\nShe laughed but it abruptly turned to sobs and she turned away from him. Finn knew that she was dealing with her own stress response but he still felt guilty for some reason.\n\n\"Hey, it's okay,\" he said, patting her shoulder. \n\nLeah spun around and hugged him tightly, still sobbing. Finn jumped but hesitantly put his arms around her and patted her back. \n\n\"I was supposed to be a logistics specialist,\" she sobbed into his chest. \"Then I took the stupid Scout exam and they said I'd be good and I came here...\" her voice ended in more sobbing.\n\n\"This is pretty unusual, even by my standards,\" he promised.\n\nFinally, she let go of him and stepped back, wiping her face. \n\n\"Sorry,\" she sniffed. \"You don't like to be touched.\" \n\n\"You're fine, mostly it's crowds,\" he said awkwardly. \"No one has hugged me in quite a while.\" \n\n\"I saw Tyohac hugging you two days ago.\" \n\nHe snorted. \"No, you saw Tyohac assaulting me two days ago.\" \n\nShe smiled shakily. \"Then don't tell me Kitt never hugged you.\" \n\nFinn laughed. \"Kitt was many things, but a hugger she was not.\" \n\n\"But you two were...\"\n\n\"Lovers?\" Finn shook his head. \"You'd be more her type. But even if she'd been hetero, we'd worked together so long that it would have been like kissing a sister.\"\n\n\"Oh. Well, at least she wouldn't have been paralyzed by fear down there. I was frozen.\" \n\nFinn shrugged. \"Leah, I emptied an entire clip into that thing and it barely twitched. Whatever you, or Kitt, might have done, it would have been just as pointless. Sometimes everything comes down to dumb luck.\"\n\nShe nodded but didn't look happy about that fact. Finn had been the same way, convinced he could get himself through any situation through wits and skill. She'd find out soon enough that sometimes life and death were decided by dumb luck. He looked around, rather than argue with her.\n\nThey were standing on what appeared to be an artificial construction. It was a slightly concave oval that they eventually paced out as eight meters wide and twelve meters long. The platform was made up of timbers, like the surrounding forest. The smallest of the parts was about the thickness of his wrist, the widest were at least as thick as his entire body. Somehow, the builder had woven the impregnable wood together. Neither had seen how it was attached to the immense tree, but it felt as solid as the ground. \n\nIn the center was what looked like a shelter. It was a low dome with a meter-wide gap between the roof-wall and the floor of the platform. Looking inside, they could see the floor was covered with thick pads that looked like grass and moss. Neither knew this world well enough to be sure, but they agreed that the structure looked very old. Peering over the edge, Finn guessed they were easily a hundred meters in the air. Once they'd looked around, they began taking stock of what supplies they had left. \n\nLuckily they hadn't stopped long enough to get out of their field gear. Both still had water bottles that were designed to fill themselves with the ambient humidity. It hadn't been that useful on the Celestial Reverie, but the high humidity here filled it in less than an hour. They each carried several OneDay bars. Every field crew carried them and every field crew fervently hoped to never need them. \n\nFrom the size, it could have been some sort of chocolate bar. The meal substitute was a dense amalgamation of vitamins and calories that was supposed to provide twenty-four hours of energy. Finn wasn't sure, he'd never been able to choke down more than half of one. He's heard that the bars hadn't been that bad originally. Then the chocolate had been replaced by carob. He wasn't sure what carob actually was but it was universally agreed that it wasn't an acceptable substitute for chocolate. Or for anything else declared edible. \n\nThey both carried pens and a standard field journals and Finn still had several unsharpened pencils and a small, battered sketch book. The rest of their belongings were a compass, two folding knives, and a few hard candies. \n\nFinn popped a lemon flavored one in his mouth and Leah chose blue, whatever flavor that represented. They'd only been walking for a day, so getting back to the colony wouldn't be too much of a problem.\n\nInventory completed, they sat down and recorded as much of the day's events as they could. Leah didn't care for writing everything out by hand, but both their tablets had been in their packs. Finn got her to laugh a little, describing the tentacle monster biting into the lithium batteries.\n\nLeah watched as Finn used his pocket knife to carefully sharpen a pencil. Finn concentrated on slowing his breathing as he worked. Finally, he flipped through the sketch book, finding a blank page. He spent some time sketching the Other that had saved them with Leah supplying additional details. As he finished it, Leah stopped pacing and settled into a lotus position and closed her eyes. Finn flipped back to a sketch he had started, a three-quarter view of the USS Constellation, most of her sails reefed in heavy seas. After considering it for a minute, he flipped to another page and began to sketch their surroundings. \n\nIn the late afternoon sun, huge golden-red beams of light shone obliquely through gaps in the canopies, making the mist there appear almost solid. Two of the three moons were appearing overhead, still ghosts in the bright sky. Finn tried to let his mind empty as he concentrated on getting the outlines onto paper, but he kept going back to the English-speaking Other. \n\nHe really hoped they hadn't discovered a new race of people. That was done very delicately by Commonwealth First Contact Teams. He'd never seen one, but they were from certain senior races, like the Xero'pah. He'd read somewhere that their teams were highly trained in a broad spectrum of skills. The training alone took more than a human lifetime. The Terran's Colonial Fleet had put together three teams of their own, but it was widely understood that it was more for appearance than anything else. The more senior races didn't trust humans and there would be hell to pay if they were the first representatives of the Commonwealth to a new civilization. It rankled a bit but Finn didn't take it personally, the youngest of the Archreylen had already been in space for centuries while humans were still working out how agriculture worked.\n\nSomething hit his left shoulder and then his neck. Raindrops. Finn closed the book and they both stuffed everything back in his pockets as more rain began to fall. \n\n\"Should we get under the dome?\" Leah asked. \n\n\"I don't know,\" he admitted. \"I only did the one required Exo-Diplomacy module and most of it was different forms of 'don't take anything for granted.' Could be something important, like a shrine?\" \n\n\"Or her food storage,\" Leah added. \"Okay, but I hate wet clothes. I'm going to strip down and tuck my clothes under the roof at least.\" \n\n\"Good idea. I'll do the same, no peeking.\" \n\nShe laughed and they stripped down, folding the heavy garments into bundles that they pushed under the shelter of the dome. Finn went and sat back down, thanking fate that they were on a warm world. Leah sat down beside him and both of them kept their eyes on the forest around them, mostly.\n\nThen what had been a moderate downpour turned into something like standing under a waterfall. They both leapt to their feet as the torrent hit them and Leah stared at him, eyes wide. Finn tried to reassure her, but the roar of the storm was so loud that he had no idea if she could even hear him. Finally, he gave up and tried to just look reassuring. \n\nLifting his face to the torrent of water, Finn realized that he was strangely happy, almost gleeful. He began to sing as the warm rain washed over his face and down his body. He was delighted to still be alive and laughed as the waterfall fell on him. Leah shook her head and pointed at the dome. She went to sit in the large doorway, but Finn was determined to enjoy the moment and stayed where he was. \n\nA minute later, he felt a thump through the deck and turned to see that Lakshmi had returned and was inside the dome with Leah. He splashed his way over and stopped outside the dome but Lakshmi motioned for him to step inside. \n\n\"Have a good dinner?\" he muttered, using his hands to squeegee the water off his body. \n\n\"I consumed. This act is not discussed however.\" The reproof was obvious, even with Lakshmi's stilted accent.\n\nFinn was even more embarrassed and wished there was somewhere to slink off to. Lakshmi didn't say anything else but busied herself with stowing her harness and gear in a net near the ceiling. Looking up, he saw that she'd put their clothes up there as well. He really wanted his pants but wasn't about to try and jump high enough to retrieve them. \n\nLakshmi was also unwrapping the covering from her upper torso and as she rolled it up, Finn saw that it consisted of a single piece of fabric that had been draped around her. Putting clothes on while she took hers off didn't feel quite right and he consoled himself that he was just as alien to her as she was to him, no need for embarrassment. Leah was sitting with her back to him, but Finn knew somehow that she was grinning. \n\nLakshmi was carefully wiping the water off of her fur with some kind of cloth and Finn sat carefully on the edge of the mat, not wanting to watch her in case it caused any offense. A few minutes later, there was a tap on his shoulder and Lakshmi handed him a cloth that was something like a chamois.\n\n\"It is to become dry.\" \n\nFinn nodded his thanks and wiped away the remaining water. When he turned back, Lakshmi had folded her four legs under herself. \n\n\"There is much to understand at this place of meeting,\" she said. \"You will rest beside me and we will speak.\" \n\nFinn nodded and climbed up on the moss mats. It was still slippery but cool and comfortable. Leah turned around and faced them, sitting cross legged. Finn was very aware of her nudity and it was difficult to keep from looking at her. \n\n\"I was curious, how old is this place?\" he asked. \n\nLakshmi tucked the four legs under her body and settled on the mat. \"I think that we do not share the same reckoning of time. It was very long ago. The old ones built this place in the time when there were more of us.\" \n\nFinn had already guessed the answer, it was damned unlikely that a Scout from an off-planet species could eat whatever food was here, let alone move so comfortably through the forest. The confirmation still made his stomach drop. \n\n\"This planet is your home?\" Leah asked.\n\n\"I do not understand 'planet' but as I said, my sisters and our Wisdom are the Water's Leap Meeting.\"\n\n\"You were born here.\"\n\n\"I understand most of your words but not the meanings. What is a 'planet' and how could one know their own birth place? I became near the joining of the wet, at Water's Leap. I became and joined them.\"\n\n\"Became what?\"\n\nHer large black eyes regarded them both before she responded. \"We are saying much and understanding little. This thing may be easier if I can...feel your brain.\" \n\n\"How does that work?\" Finn asked, visions of trepanning dancing through his head.\n\nShe held out her front arms and they both put their hands in Lakshmi's catchers-mitt sized palms. Again, he felt the curiosity and amused frustration. It startled him all over again and he yanked his hand back. \n\n\"I will not allow harm to come to you, Finn Morgan.\" \n\nHe took a deep breath and put his hand back in hers. The feelings from outside of his mind returned, worry and confusion. This time, Finn closed his eyes and tried to concentrate on the feeling. \n\nAfter a few seconds he suddenly laughed. \"Because I was standing in the rain?\" \n\n\"Because that is not the action of a rational creature.\" \n\nLeah laughed as well. \"It's not that strange for us, we love water.\" \n\n\"I know the sky people are strange, but I did not believe one would willingly be immersed in the wet.\"\n\n\"Two-thirds of our world, the place we came from, was covered by water,\" Leah said. \"Our people enjoyed swimming and floating in water.\" \n\nThere was a feeling of disbelief and laughter in return. \"Then I understand the reason why your people left the sky.\"\n\nFinn and Leah looked at each other and didn't say anything. Lakshmi examined each of them in turn.\n\n\"There is a great sorrow within you both. I regret I caused this, we will speak of other things. I felt surprise when you saw me. You did not know we inhabited the hoom?\" \n\n\"The hoom, that's your name for all these trees together?\" Finn asked.\n\n\"What your people call the forest, yes but not. We need to share experience before you can know the hoom. Very few sky-people have ventured this far into the hoom. Why have you come so far?\" \n\n\"We're searching for others that came this way, before the last wet season.\"\n\nIt was Lakshmi's turn to feel sorrow and regret. \"I saw them come, my sisters and I watched them from above, the same way I watched you today. We were not to contact the sky-people but then they were injured in a way we did not understand. We went down to them and summoned those who understand such things, but we were too late.\" \n\nFinn nodded. \"There was nothing you could have done, it was too late when they entered the trees. There was a sickness in their home.\" \n\n\"This is what Yuri Stepanovich Bogdanov told us, yes.\"\n\n\"Oh no,\" Leah said, sitting up. \"I knew Boggie, we were friends.\" \n\nBoth of the humans felt an uneasiness in Lakshmi. \"You are the same clan? He was made comfortable before he left the path and their remains were honored.\" \n\n\"Yes, we were the same clan,\" Leah said. \"Thank you for helping him. This is how you learned English?\" \n\n\"I do not speak it comfortably, I learned from my sisters' memories only. Yuri and his clan brothers gave them the objects that spoke and sang for a short time. I learned only some of your words, the ones spoken most often. There was sorrow when the objects followed their makers from this path.\" \n\n\"It is good that their sickness did not spread to your people,\" Finn said. \n\n\"No, we would never allow that. Now that their clan has come, it is good that the end of their song can be told. We do not easily speak of those who leave the path but we did not know if more of you would come. All were adopted as our clan sisters and we honored their memory as our own.\"\n\n\"Thank you for that,\" Leah said. \"When we return to the outpost, I will send word of their passing...leaving the path.\"\n\n\"Will it be necessary to collect them? Very little remains.\" \n\nLeah shook her head. \"It is enough that they were honored, and that we knew of their end.\"\n\n\"You know more about the Commonwealth than I do,\" Finn said. \"You're sure they don't need to be included in the evacuation?\" \n\n\"I'm not sure, I don't think it matters as long as all the living colonists are removed.\" Leah answered. \n\n\"I do not know the meaning of the word evacuation,\" Lakshmi said.\n\nLeah sat up, still holding the Other's hand. \"We did not know your people were already here. It is very important that my people never take living space from anyone else. Now that we know you are here, we will remove ourselves and return to the sky.\" \n\nLakshmi was confused. \"We do not live in the open places, we are the people of the errsha and the hoom. You have taken nothing from us.\" \n\n\"There were very dark things, evil things, done by our people in the past,\" Finn explained. \"One of those things was the killing of others in order to steal the places they lived. We must never repeat these things.\" \n\nLakshmi thought about that for a little while. \"Then, by saving your lives I have driven you from your Meeting?\" \n\n\"We must go. Our people could someday threaten yours,\" Finn said. \n\n\"I do not see how, but Wisdom must be told,\" Lakshmi said after another long pause. \"My sisters and I were not to reveal ourselves to the sky-people yet. I have disobeyed her word and now the sky-people will depart.\""
    ],
    "authorname": "Filthy_Jeter",
    "tags": [
        "humor",
        "mayhem",
        "rom",
        "rum"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/fleet-scout"
}