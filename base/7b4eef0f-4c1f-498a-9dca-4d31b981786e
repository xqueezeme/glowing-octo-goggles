{
    "title": "Secret Smiles and Three Little Words Pt. 27",
    "pages": [
        "Chapter 29* \n\nThe phone shrill caused Alex to jump in the bed. She in the midst of such a deep and dream filled sleep. Happy dreams. Gavin and a son, waiting for her by a pond. They were waving to her. Gavin and a \"mini me\" Gavin. Same hair, same eyes. Same damn hypnotic and mischievous smile. The one that had her willing to do anything. \n\nGavin snatched it off the stand next to his bed. \n\n\"Charles? What's wrong?\" Gavin said immediately. He listened with held breath. \"That stubborn bitch! Ok.\" He flipped on the light and pulled his watch to him. \n\n\"It's 2 a.m.,\" Gavin said checking the time. \"Send the jet to the airport in Pittsburg and I'll meet it there.\" \n\n\"Gavin,\" Alex said taking his arm. \"What's going on?\" \n\n\"Madelyn had a small stroke,\" Gavin told her. \n\n\"Oh God!\" Alex began to tear up. \n\n\"She is fine,\" Gavin said trying to calm her. \"But I need to go back.\" \n\n\"No, we'll both go,\" Alex told him. \n\n\"No, your parents and family are expecting you,\" Gavin reminded. \n\n\"I don't care!\" Alex semi barked. \n\n\"Nora is expecting you,\" Gavin said softly. \"She needs that new dress and she was excited you were taking her to the movies today.\" He said stroking her face. \n\n\"Anzi has checked her out, she is in no danger and I can hear her in the background telling me not to come back!\" He laughed holding the phone so Alex could hear her ranting that he better not show up or she would kick his ass. \n\nThis caused Alex to smile and relax a little. If she was that feisty then she was fine, she hoped. \n\n\"Don't go to Pittsburg,\" Alex told him. \"If the jet is small enough, Averin is a small town ten miles from here, it has a small airfield.\" \n\n\"Charles,\" Gavin smiled winking at her. \"Charles, have your pilot at Averin, Pennsylvania. It's a small nearby airfield.\" Gavin listened then got out of bed. \"Fine, be there ASAP.\" \n\n\"She is going to be alright?\" Alex asked as he got up to start his shower. \n\n\"Yes,\" Gavin said, his voice was strained and that wasn't comforting to her. The normally calm and focused Gavin had a tinge of worry and that upset her. \n\n\"You're sure?\" Alex asked him. \n\n\"She had a stroke,\" Gavin explained. \"Until we run a full testing spectrum, we won't know the damage.\" \n\n\"So I should go!\" Alex told him. \n\n\"No,\" he shook his head. \"Look I appreciate you want to go, but Anzi is a specialist in Neurology and strokes, he said she is fine, she says she is fine...,\" \n\n\"But you have to be Gavin,\" Alex nodded with a nervous smile and understanding. \n\n\"I can't be anyone else,\" he smiled kissing her lips. \"Really I'm leaving this up to Anzi, I can't be involved in something like this with Madelyn, I wouldn't be able to keep myself objective and focused, so I'm just going to sit there and be in the way myself.\" He winked at her. \n\nAt the crack of dawn the small private jet touched down on the tarmac and Gavin hopped out of the car and went to the trunk. He hadn't said much to her on the way over, spending most of his time on his phone, either talking on it or going over test results via email. She drove to Averin, trying to give him the time to be Gavin, one focus and right now, that was Madelyn. \n\nShe still felt like she should go, but that would involve going against the new role she wanted to maintain. No arguing, submissive at all costs. That was going to be very difficult for her in things like this. Who was she kidding? That was going to be difficult in everything! She was just so stubborn! But Gavin was worth trying hard for. Forcing her to go against the nature and be submissive. \n\nAs the jet turned around, Alex and Gavin walked towards it. The door opened and the stairs dropped. \n\n\"Dr. Steward?\" a man asked as he stuck his head out. Gavin nodded. \"Flight time is fifty seven minutes doctor.\" Gavin nodded and handed him his bag. \n\n\"Ok,\" Gavin said taking her face in his hands. \"Deep breath!\" \n\n\"I should be getting on that plane with you!\" She argued softly. \"We are now a couple, meaning we meet everything head on...together!\" \n\n\"Unless we have to fight separate battle fronts,\" he smiled. She furrowed her brow. \"Look,\" he said with a shake of his head seeing the fire in her. \"All the tests so far say the same thing. She is fine. So both of us going back is senseless, especially seeing how she is going to be livid!\" \n\n\"Secondly,\" he said softer. \"I have a solution for Livy.\" \n\n\"You do?\" Alex asked relieved, he nodded. \n\nShe had a multitude of solutions for Livy as well. All of them had some form of going over to Don and beating the shit out of the cheating bastard. She was hoping Gavin could come up with something a little more civilized. \n\n\"There is no way she is going to be able to make a decision in that house,\" Gavin told her. She nodded that she agreed. \"She needs someplace quiet, someplace where she can just decompress and look at things from a non-pressure situation. With nobody hounding her about religion or appearances.\" \n\n\"Ok,\" Alex said slowly not knowing where he was going. \n\n\"I want you to convince her and Nora to come to Chicago with you,\" Gavin said. Her jaw dropped open. \"Not for forever! But for a few weeks, maybe a month. If she gets away from you mother and sisters, she will see things from a different perspective. If nothing else she will have time to breathe.\" \n\n\"Would she stay with us?\" Alex asked him. \n\n\"Sure, the condo is your home too!\" he shrugged. \"The guest room is open, we will have to move some of your art stuff into my forbidden man cave...\" He joked while waving his hands like a magician. Teasing her, yet again, about her stand on giving him space. \n\n\"But they should have plenty of room there. Then she will have you to distract Nora, while she contemplates one of the most difficult and painful decisions of her life.\" \n\n\"What about our little secret?\" she smiled. \"I can be kinda noisy!\" \n\n\"That, my love, is what they make ball gags for!\" Gavin smiled kissing her. He stroked her cheek then climbed the stairs. Alex moved back to the safety of the Mercedes as the plane lifted off. \n\n\"A ball gag?\" She smiled as she started her car. \"There is one I haven't tried before!\" She giggled and drove back to the hotel to shower herself. \n\n*** \n\n\"I figured you would be up,\" she whispered to her father as he sat at the table drinking coffee. She had quietly let herself into the house after her shower, she knew he was an early riser, so there was little doubt when she pulled up and saw the kitchen light on that it was him. \n\n\"What are you doing up this early?\" he asked her surprised as she went to the coffee maker and poured herself a cup. \"Where is Gavin?\" \n\n\"Gavin's good friend Madelyn had a mini stroke last night,\" Alex frowned. \"He had a jet pick him up in Averin and take him back to Chicago.\" \n\n\"Is she alright?\" Al asked her concerned. \n\n\"Gavin says so, she sounded like the hard ass Madelyn can be, on the phone, but I'm so worried!\" Alex said sitting next to him. \"Madelyn took the place of Gavin's mother after she passed. I...I don't know if he is strong enough to lose her!\" She explained to her father as his eyes told her he didn't understand. \n\n\"He is very strong!\" Al argued with a scoff of disbelief taking her daughter's hands in his to help comfort her. \n\n\"Almost as strong as you, but...,\" Alex frowned. \n\nShe didn't have the same confidence that her father had. He wasn't privy to how Gavin's mind worked as she was. Gavin looked to Madelyn as a maternal guidance. A mentor. Losing her would reopen all the wounds of losing his parents again. How strong is he? How strong is anyone? Everyone has a breaking point, even Gavin. \n\nMadelyn was all he had until she came along. How strong would he be if she were to pass? Would their relationship be enough to sustain him through the tough time that would follow? Even she couldn't answer that for sure. In all honesty, she wasn't willing to risk it. \n\n\"But what?\" Al asked her lifting her chin to look her in the eye. \n\n\"Gavin has lost every person he has ever loved...tragically! His mom to cancer, his dad a short time later from a broken heart...then there was the girl that broke his heart,\" Alex said softly. \n\n\"What happened to her?\" Al asked softly, gently nudging his daughter to talk to him. He could see his daughter's heart breaking just talking about the pain Gavin had to endure. His heart broke for her. \n\n\"She OD'd on heroin,\" Alex said softly, a single tear rolling down her face. \"Gavin hasn't had a steady girl since then, and that was in med school.\" \n\n\"Until you?\" Al asked, his face looked pained to ask. \n\n\"I hope,\" she smiled. \"I'm definitely further along than any previous girl...but nothing is ever certain, is it?\" \n\n\"That depends on how hard you are willing to fight,\" Al winked at her. Alex let out a deep breath. \n\n\"What is your position on Livy and Don?\" Alex whispered in case her mother was up. She needed to find an ally to help her with her upcoming campaign to get Livy to come back to Chicago. Her father would have some sway. \n\n\"You mean other than wanting to kill the son of a bitch?\" Al growled. Alex nodded with a soft smile. Question answered. Good old dad, she could always count on him. \n\n\"I want to take her and Nora back to Chicago with me,\" Alex told him. \"Just for a few weeks, give her some space to clear her head and take a long look with no one hounding her about the bullshit.\" \n\nHe nodded as he thought about it. \n\n\"What does Gavin say about that?\" he asked her. \"I mean having a kid in a bachelor pad and all?\" \n\n\"It was Gavin's idea,\" Alex smiled proudly. \n\n\"No shit?\" he laughed a short laugh of disbelief. \"Well, I think that would help her out a lot. To have a different attitude around her. A change of latitude, to change the attitude, so to speak.\" \n\n\"I'm not trying to convince her one way or the other,\" Alex clarified. \"I just want her to take a deep breath, ask herself her the questions that she needs to explore and go from there.\" \n\n\"I would support that,\" he agreed with a firm nod and troubled brow. \"I just don't know if Livy will take advantage of the offer.\" \n\n*** \n\nNora squealed as she entered the Disney Store in Pittsburg later in the day. She ran from one display to the next, the look on her face said it all. She was in her version of heaven. \n\n\"You have just become the greatest person on the planet,\" Livy smiled as she put her head on her sister. \"Nora has been dying to come here.\" \n\n\"You guys have never been here?\" Alex asked stunned. \n\n\"Don hated coming into Pittsburg, Mom thinks it's some sort of devils playground, so coming here was out of the question,\" Livy sighed. \n\n\"What does she think of Chicago?\" Alex gasped. \"Never mind, I can guess.\" The girls laughed. \n\nThey walked around the mall, Nora in her new Disney dress to replace the one with blood they couldn't fully get out. The small girl was swinging in between them as they held her hands. Nora's head back and laughing so hard that her eyes were watering and that made Alex laugh with her. Alex was careful to hold her by her wrists to make sure the cut did not reopen and ruin another dress. \n\nAlex looked to Livy who saw her daughter laughing, that made her smile and feel sad at the same time. As Alex looked at her sister and there was something that Alex couldn't read. Turning into the little play land the mall had set up near the food court for small kids, Nora dropped their hands and ran off. \n\nNora made a quick friend who was also in a Disney dress and they compared dresses proudly. Alex and Livy took a seat set up for parents to watch their children at the edges of the play land. \n\n\"Thank you so much for coming home for Christmas,\" Livy said as she smiled at her daughter. \"You were a real ray of light. I was so worried that this Christmas would be the worst one of her life!\" \n\n\"I loved being home,\" Alex said with a smile. \n\n\"Liar,\" Livy chuckled with a shake of her head. \n\n\"What do you mean?\" Alex asked her defensively. \n\n\"You were so desperate to get out of here there was barely a vapor trail when you left,\" Livy pointed out. \"If dad wasn't here, there would be no way you come back!\" \n\n\"How about I was happy to see you, Nora and Dad?\" Alex altered. \n\n\"That I buy,\" Livy agreed with a single long head nod. \n\n\"Hey,\" Alex said softly watching her sister watch Nora play. \"I have a favor to ask.\" \n\n\"Anything for you,\" Livy smiled turning her head to her. \n\n\"I want you to come back to Chicago with me,\" Alex told her taking her hand. \n\n\"What?\" Livy gasped with a shake of her head. \n\n\"Think of it,\" Alex tried to counter the automatic denial. \"You would have a place where you could think, with no pressure. Just a quiet place to gather your thoughts.\" \n\n\"I couldn't leave Nora with Don,\" Livy shook her head. \"He doesn't want her around with the new girl, and there is no way in hell I'm leaving her with mother. I put up with that but I will not subject my daughter to it!\" \n\n\"No,\" Alex shook her head. \"The two of you, in Chicago...with me.\" \n\n\"Where would we stay?\" Livy asked. \"Your apartment is barely big enough for you and Lena!\" \n\n\"Well,\" Alex shrugged. \"I'm living with Gavin anyway, so you would stay in our guestroom there.\" \n\n\"No wonder mom has been flipping out!\" Livy laughed with a shake of her head. \"I was under the impression you were staying there one or two nights then had your apartment.\" \n\n\"I still have my apartment,\" Alex said with a laughing shrug. \"I just don't live there, I just pay rent.\" \n\n\"What is Gavin going to say when you show up with your deadbeat sister and her overly energetic child?\" Livy asked. \"He seems like the kind of guy who likes peace, quiet and order!\" \n\n\"He very much likes order,\" Alex agreed watching Nora and the new girl squeal loudly. \"But in all honesty, this was his suggestion.\" \n\n\"No,\" Livy shook her head. \"I wouldn't want to intrude on your new life, I mean you guys are still learning about one another and everything!\" \n\n\"Livy,\" Alex frowned. \"We want you to come live with us for a while, not forever. I know what it is like living in that house going against mother! You need someplace to think! Christ! Someplace to breathe!\" \n\nLivy looked to her daughter. She shrugged and shook her head at the same time. \n\n\"Just think about it?\" Alex pleaded. Livy hesitated and nodded. \"Thank you.\" \n\n*** \n\nGavin walking into Madelyn's hospital room caused her to growl. \n\n\"I don't want to hear it,\" Gavin said firmly as he picked up her chart from the nurse. \n\n\"Who in the hell wanted you here?\" Madelyn raged. \n\n\"Keep it up and I'll have you sedated,\" Gavin warned her looking through her charts ignoring her anger. \n\n\"Charles, if you weren't with me for everything I would so fire your ass for calling him!\" Madelyn barked at him furiously. \n\nShe was furious with her loyal butler for this betrayal. She had begged him not to call Gavin, because she knew Gavin would drop everything and come to her, but what he was doing was so important to her! Something he would never understand. She wanted Gavin at Alex's more than Alex did. \n\n\"But I have been here for everything,\" Charles said calmly. \"We love you, so even if you fired me, I would still stay and take care of you!\" \n\n\"Anzi,\" Gavin began. \"Did you run a CT scan?\" Gavin asked the doctor as soon as he walked in. \n\n\"Of course,\" Anzi said with a shake of his head that he wouldn't have done the most simplistic and basic test first. \n\n\"Ischemic or hemorrhagic?\" Gavin instantly questioned. \n\n\"Hemorrhagic,\" Anzi frowned. \n\nHe knew Gavin would be this way. He didn't know why he was even remotely surprised. At first, when Gavin asked him to take over Madelyn's treatments, Anzi was surprised. Then he saw the way he was with her, and he knew why. He loved her too much. It was like working on his mother. He couldn't keep his emotions in check with her. Still, it was a pain in the ass any time he had to examine her as Gavin would question everything. \n\n\"Small vessel,\" Anzi continued with a roll of his eyes. \"Then I did Carotid ultrasound, and an MRA.\" He continued to list the various tests he had run because Gavin would ask for them. Anzi blew out an exhausted breath. \n\n\"I'm not that bad, am I?\" Gavin asked hearing the playful disdain in Anzi's voice. \n\n\"Yes,\" the three of them said in unison. \n\n\"Fuck all of you!\" Gavin frowned, containing his anger by going over the chart in his hands. \n\n\"I'm spending a lot of her money, Gavin,\" Anzi said with a pat on his shoulder. \"If she was any other patient I would have sent her home by now, but I knew that would send you off the deep end, so I'm running tests that doesn't need to be run. Because I know you!\" \n\n\"Let's run a echocardiogram,\" Gavin said looking over her file. \n\n\"She has one scheduled at two,\" Anzi shook his head, realizing his efforts were falling on deaf ears. \"Because I knew that you could do my job better than me! I mean I'm only the specialist, I'm the one you brought in because I was the best.\" \n\n\"Then why hasn't she had the test already?\" Gavin asked him. \n\n\"Because this is a hospital!\" Anzi argued with disbelieving smile. \"In a city of nearly three million people. We take care of a lot of patients!\" \n\nGavin stood there looking at him unimpressed with Anzi problems. \n\n\"I have already bumped her in front of three patients!\" Anzi defended. Still Gavin stared. \"Good God! I'll go and see if I can get the test moved up!\" Anzi shook his head and walked to the door. \n\n\"You know Maddy,\" Anzi said at the door. \"If I were you, I would seriously think about dumping this overprotective louse! He is spending more of your money than needs to be!\" \n\n\"It's Gavin,\" Madelyn frowned. \"He can only be who he is.\" \n\nGavin sat on the edge of her bed and took her hand. \n\n\"Now what test are you giving me? What's an echocardiogram?\" \n\n\"It's an ultrasound of the heart,\" Gavin told her. \"Are you taking your damn pills?\" \n\n\"Most of the time,\" Madelyn frowned. \"How is Alexandria?\" \n\n\"Do not change the subject on me young lady!\" Gavin barked. \n\n\"I love you,\" Madelyn smiled as she stroked his face sympathetically. \"I love that you will drop everything for me, but you have to think about Alexandria now! You were meeting her parents and her family! That was such a big deal.\" \n\n\"You're kidding me right?\" Gavin scoffed in disbelief. \"It was all I could do to keep Alex from coming with me! You think I'm bad?\" Madelyn shook her head with a smile. She hadn't thought of the fire that Alex had. \n\n\"Look,\" Gavin said softer now. \"The pills I have you on, are not pills you can take when you feel like it. They need to be in your system regularly, they take time to balance the system. Taking them one day, then not the next is a complete waste of time!\" \n\nMadelyn looked down at his hands that wrapped hers. She then looked to Charles who read her command easily and left them. \n\n\"Are you thinking of marrying her?\" Madelyn asked him. \n\n\"Quite changing the subject,\" Gavin warned her. \n\n\"Are you?\" Madelyn asked again, not relenting. \n\n\"It hasn't even been a year,\" Gavin defended knowing she wasn't going to give up the line of questioning. \n\n\"Gavin,\" Madelyn shook her head. \"Your history tells me I need to check.\" \n\n\"Why is everybody so hell bent on thinking my relationships last only a year because it's my fault?\" He asked her. Madelyn looked to him in anger that he would even try to defend himself in this fashion. \n\n\"You can try that bullshit with someone who doesn't know you. Someone who hasn't sat with you at the end of every relationship, trying to think of a way, to tell you how big a mistake you were making!\" she said to him in a forced calm, her voice laced with anger that was straining the words. \n\n\"I love you, I adore you. Most of all I want you to be happy! I've seen the things you do to push girls away that get too close! Of all the things I want in this life, I want to see you with someone who makes you smile, like you are right now, just because we are talking about her!\" Madelyn said as a tear streaked down her aged cheek. ",
        "\"I'm not ending anything with Alex,\" Gavin said with a smile and shake of his head. \n\n\"Alex?\" Madelyn questioned. \n\n\"She is my sub I can call her any fucking thing I want!\" Gavin growled having the name pointed out to him \n\n\"I'm not saying you can't,\" she smiled softly with a relieved sigh. \n\n\"I'm not looking at her like just a sub anymore,\" Gavin admitted. Madelyn smiled. \"I love her.\" \n\nMadelyn let more tears fall from her eyes as he said it. \n\n\"Don't get all blubbery on me,\" Gavin said with a shake of his head. \n\n\"That's a big, big step,\" Madelyn told him with a proud smile. He shrugged. \"Don't disrespect how big of a step that was for you with a shrug!\" \n\n\"I'm not,\" Gavin chuckled. \"It's a big deal, I know it is.\" \n\n\"But?\" Madelyn asked him reading him easily. \n\n\"But it scares the holy living shit out of me! Alright?\" Gavin painfully admitted. \"I'm so scared it's hard to breathe when I stop and think about it!\" \n\n\"Why?\" Madelyn asked him softly. \n\n\"What if,\" he paused as he closed his eyes. \"What if, she wants more later? More than I can give her?\" \n\n\"Then you find a way to give her more,\" Madelyn said firmly. \"You will have to go outside your comfort zone, Sweetheart. You will have to move into things that make you shudder. That's what being in love is! To trust the other to venture on the ice you were afraid to tread on before...alone.\" \n\n\"What if I can't?\" Gavin asked her. \n\n\"Can't, isn't in love's vocabulary,\" Madelyn smiled. \"Any more than I 'can't' keep you from coming here today!\" She kissed his cheek. \"When you think you 'can't', close your eyes and jump, then let Alex do the rest!\" \n\n*** \n\nAlex sat in the driver's seat, looking into the rearview mirror at Nora as she looked out the window. Nora wanted the top down on the convertible, despite the fact it was in the low teens. Livy chewed on her nail as she peered out the window. A nervous habit she had not been able to shake since childhood. Something it seemed the whole family did. \n\n\"I can't believe I'm going with you to Chicago,\" Livy finally smiled. \"Did you see mom's face when dad barked?\" \n\n\"I know!\" Alex laughed. \"I thought she was going to flip out when dad told her that the bible said she was to obey him! That he wanted you to go, and if she interfered it would be taken up at church!\" \n\n\"She is such a hypocrite, isn't she?\" Livy asked her. \n\n\"She just has her beliefs, they are wrong, but they are her beliefs,\" Alex shrugged. \n\n\"Aunt Alex,\" Nora asked from the back. \"Are we almost there?\" \n\n\"Baby,\" Alex laughed. \"We have only been in the car for about an hour! We have eight more hours to go!\" \n\n\"Why don't you get some sleep?\" Livy asked her. \"Then when you wake up we may almost be there!\" \n\n\"I don't want to miss it!\" Nora argued. \n\n\"We will wake you when we get close,\" Alex assured her. \n\n\"Are you sure Gavin is going to be ok with this?\" Livy asked. She was still paranoid she was intruding on the man. \n\nEverything about him screamed privacy. He was a 'private' physician. His mannerisms were soft and subtle. His eyes were gentle. The way he was with Livy endeared him to her heart but even that was quiet and gentle. Did this man have any idea what he was in for? Inviting a six year old into a quiet life? If peace was what the man desired, he was out of luck! \n\n\"Yes,\" Alex said with a laugh and a shake of her head. \"He is the one that suggested it!\" \n\nThat was the first fight that she had to win. Convincing everybody that it was ok with Gavin. Even though she had told them all repeatedly that it was his suggestion. None wanted to believe that. When that failed, her mother launched into a tirade that a child shouldn't be removed so far from her father. \n\nLivy countered with, he didn't want her around with the new woman. They were afraid with her rambunctiousness she would hurt her and the unborn baby on accident. \n\nMarylyn then countered that Nora shouldn't be exposed to two adults living in sin the way Alex and Gavin were living. Alex countered, was their sin worse than her father's sin of betraying Livy and getting another woman pregnant? \n\nAl ended it with his statement. That caused the entire house to look to him as he stared his wife down. There was a few moments of awkward silence as it appeared that Marylyn was thinking of a counter before Al ended the debate by walking away, gently rubbing his sore shoulder. \n\n*** \n\nPulling her Mercedes in front of the condo entrance Mike beamed a smile at her. \n\n\"Ms. Lasko!\" he said coming outside from around the desk. He nodded a hello to Livy while smiling at Nora. \n\n\"Hey Mike!\" Alex said as she pulled the bags from the back. \n\n\"Do you want me to get one of the guys to carry that stuff up?\" Mike offered taking a bag from her. \n\n\"Nah!\" Alex said with a shake of her head. \"We can get it!\" He nodded as Alex took the bag from him. \n\n\"Is Gavin home?\" Alex asked him as the car hop took her car to put in the garage. \n\n\"I thought he was with you?\" Mike told her with a mixture of confusion and concern on his face. \n\n\"No,\" Alex frowned. \"He came home two nights ago, a patient needed his attention.\" \n\n\"Well,\" Mike shrugged holding the door open for her. \"Maybe he is coming in late and leaving before I come on.\" Alex nodded but she doubted it. It meant he was staying at the hospital or at Madelyn's. \n\n\"Oh, my gosh!\" Nora squealed as she ran to the window. \"You have a pool!\" She spun to run back to Alex. \n\n\"Can we go swimming?\" she begged. \n\n\"Can we put our stuff up? Get our bathing suits on? Or should we just jump in like we are? Mike, are there rules of what we wear in the pool?\" Alex teased. \n\n\"I believe suits are mandatory,\" Mike said with a firm brow looking at Nora. \n\n\"Oh man!\" Nora growled as she pressed her face to the window to the pool. \n\n\"Mike,\" Alex laughed. \"This is my sister Livy, and her daughter Nora, they will be staying with us for a while.\" \n\n\"Yes, Ma'am,\" Mike nodded in hello. \n\n\"Would you pass the word?\" Alex asked him. \n\n\"I will,\" Mike agreed. \"Will she need a key?\" \n\n\"No, I will give her the one Lena was using...speaking of which...how did your date go?\" Alex asked him with a flick of her eyebrows. \n\n\"Um, I thought it went well,\" Mike smiled an embarrassed smile as he rubbed his jaw in an 'aw shucks' look. \"I mean she let me take her out again and all.\" \n\n\"Reaaaallly,\" Alex smiled diabolically. \n\n\"Any other information should probably come from her,\" Mike said firmly with a polite embarrassed smile. \n\n\"No problem,\" Alex laughed as they made for the elevator. \"Lena will give me all the dirty details!\" \n\n\"Ms. Lasko!\" Mike chided, causing the two ladies to laugh at his discomfort. \n\nOpening the door to the condo Nora squeezed by them and sprinted into the condo. She ran to the balcony window and looked out into the city. The lights coming on as the sun started to set. \n\n\"I can see the big building!\" Nora yelled. \n\n\"Willis Tower,\" Alex smiled at her, reminding her. \n\n\"Yeah!\" Nora beamed. \n\n\"We will go to the top one day this week,\" Alex promised her. \"They have this deck where you can walk on air and stand at the very top with nothing but a piece of Plexiglas beneath you!\" \n\n\"Really?\" Nora beamed. \"Which room is ours?\" Nora ran to one. \n\n\"That is Gavin's office!\" Alex called out. Nora came back out and ran to the next room excitedly. \"That's my room!\" Alex laughed. Nora ran to the next room. \"That! Is your room!\" \n\n\"This place is huge!\" Livy pointed out. She went over to some work of Alex's on the wall. \"This yours?\" Alex nodded with a smile. \n\n\"Oh my gosh!\" Livy raved looking at a newspaper picture of Alex in front of her creation. \"Is this your wall?\" \n\n\"That's the first part of it,\" Alex nodded. \"It was forty-eight feet long, so getting it all in one picture is next to impossible.\" \n\n\"I wish I could have seen it!\" Livy frowned. \n\n\"You still can,\" Alex shrugged. \"They moved it to the Museum of Art.\" \n\n\"Really?\" Livy gasped. \"The Museum of Art?\" When Alex and Gavin talked about her success she hoped it was true, but Krista, Brandy and her mother doubted all of the success. They believed some of it was a ploy to build Alex up in their eyes. But the Chicago Museum of Art does not take in those who are not worthy. \n\n\"Takes up one entire side of the hallway leading to modern artists of Chicago exhibit,\" Alex shrugged embarrassedly. \n\n\"I want to see it,\" Livy said firmly. \n\n\"We will,\" Alex smiled. \n\nJust then the door opened to the condo and Gavin walked in. \n\n\"Uncle Gavin!\" Nora yelled as she made a mad dash for him. \n\n\"Ahhhh!\" he yelled in surprise at the attack. \"It's a munchkin attack!\" \n\nThe girls smiled at him as he scooped her up carefully and put her on his shoulder. \n\n\"Hello ladies,\" he smiled kissing Alex on the lips. \"Trip home ok?\" \n\n\"Yes,\" Alex smiled. \"How is Madelyn?\" \n\n\"Being quite the pain in my gluteus maximus!\" Gavin growled. \"Nora, can you tell me why women are such a pain in the behind?\" \n\nNora shrugged as he looked to her. \n\n\"You don't know, or won't tell?\" Gavin laughed. He spun her off his shoulder and took her hand to look at it. \n\n\"See? All better!\" Nora smiled. \n\n\"Well,\" Gavin disagreed. \"It's better, but not all better.\" \n\n\"Can we go to the pool?\" Nora asked him hopping up and down. \n\n\"Not for at least a week with that hand,\" Gavin smiled loving her eagerness. \n\n\"A week?\" Nora pouted, her jaw dropping. \n\n\"Should keep it out of the water, sharks are attracted by blood,\" Gavin teased carrying his and Alex's bag to the bedroom. \n\n\"You have sharks in your pool?\" Nora asked him following him in. \n\nAs soon as she disappeared with him, Alex and Livy began laughing. They then heard her screaming in laughter as Gavin tossed her on the bed and began tickling her. \n\n\"Mom! Aunt Alex! Save me!\" Nora begged from within the bedroom. \n\n\"Coffee?\" Alex asked with grin disregarding her pleas. \n\n\"Coffee,\" Livy agreed. \n\n*** \n\n\"How did you sleep?\" Gavin asked her when he walked into the kitchen. Livy was there staring into her coffee cup. Peering into it like it was going to predict the future. She wished it would give her the future so she knew what the right decision was. She lifted her head and smiled at him. \n\n\"Very well,\" she smiled at him. \"Thank you for the invitation to stay with you. It's beyond generous.\" \n\n\"You're Alex's family,\" Gavin said pouring hot water into a cup for tea. \"It makes her happy to have you here. What else could I have done?\" \n\n\"Not invite her psycho family to stay with you! I mean, wow, you don't even know me or my daughter!\" Livy pointed out as he sat next to her. \n\n\"I don't need to,\" Gavin shrugged. \"If it makes Alex happy, that's all I need to know.\" \n\n\"You like her that much?\" Lily smiled looking at her cup with a burgeoning jealousy. She only heard of this type of feelings in movies and in books. Here was a living breathing proof that the type of love she yearned for was out there. \n\n\"No,\" Gavin frowned. Livy lifted her head. \"I love her that much. More than anything else.\" \n\nLivy looked to him with soft tears in her eyes. He took her hand. \n\n\"Everybody deserves to find that,\" Gavin told her gently. \"To find that one person that they can't live without. That one person who makes them smile when they enter a room. Then to know, that person thinks the same about you,\" Gavin shook his head. \n\n\"I find myself going through my day, and when I hear my phone ring, or alert me of a text, I find myself hoping that when I look, that it's Alex,\" Gavin shrugged. \"And when it is, my day gets a tick brighter. If I'm down, whether it be a patient or whatever, she makes me smile.\" \n\nGavin let out a soft huff of a laugh. \n\n\"And she can make me smile and not even be in the room,\" Gavin told her picking up his cup. \"Just knowing I was coming home last night and she was going to be here, made coming home a priority.\" \n\n\"She was concerned when you didn't come home at all when you came back,\" Livy told him. \n\n\"There was no reason to come home,\" Gavin shrugged. \"So I just stayed with Madelyn.\" \n\n\"Alex was the reason you came home?\" Livy asked with a jealous smile. \n\n\"She was the only reason to come home,\" Gavin said firmly. \n\n\"That's what I want,\" Livy smiled. \"To find a man that wants to come home because I'm there.\" \n\nGavin looked to his watch and then stood. He touched her cheek and tilted her head up. \n\n\"He's out there Livy,\" Gavin assured her. \"Waiting for you to rescue him, like Alex did me.\" \n\nLivy held his hand to her face for a second. \n\n\"Thank you so much!\" Livy whispered as a tear escaped. \n\n\"Take as long as you need,\" Gavin said. \"Get yourself in the right frame of mind.\" \n\n\"What frame of mind is that?\" \n\n\"The frame of mind that the only thing you need in life to be happy, is sleeping in her princess dress,\" Gavin smiled. \"Once you realize your happiness is dependent only on her, then you will find that man that will compliment you, not fulfill you.\" \n\nAlex came in a short time later her hair still wet from her shower. She also noticed that Gavin was freshly showered. She wondered if there was some early morning romance in the shower going on to keep the noises down from the guests that were now there. \n\n\"Hey,\" Livy smiled as she watched her sister move about to get her coffee. \n\n\"Hey,\" Alex said over her shoulder. \n\n\"You have a certain glow this morning,\" Livy teased. \n\n\"Do I?\" Alex giggled. \"Did Gavin leave already?\" \n\n\"He did,\" Livy said with a shake of her head. \"After he knocked me off my feet with the sweetest words I had ever heard.\" \n\n\"What?\" Alex asked her sitting down. \n\n\"The man adores you,\" Livy said with a jealous smile. \n\n\"The feeling is definitely mutual,\" Alex said with a nod and a wink. \n\n\"I know it's a bit early,\" Livy said slowly, cautiously. \"Do you think you will get married?\" \n\n\"Yes,\" Alex said without a second of hesitation. \n\n\"Wow,\" Livy said surprised at the quick response. \n\nShe was expecting some hesitation, or a speech that danced around the subject, but to have it settled in a single word had her gasping. \n\n\"You have discussed it?\" Livy asked. \"Has he asked?\" \n\n\"No, he hasn't asked,\" Alex frowned. \"But we have discussed where we want to be.\" \n\n\"Where you want to be?\" Livy asked. \"How does that work?\" \n\n\"We both agree, we like where we are going, we both believe it will wind up at the altar, and we both are prepared to do just that,\" Alex told her. \n\n\"So if he asked?\" Livy smiled. \n\n\"I would beat his Aston Martin there on foot,\" Alex laughed. \n\n*** \n\n\"Where are you kidnapping my daughter to?\" Livy asked as she came out and Alex was bundling her up in her bright pink jacket. \n\n\"I have an errand to run,\" Alex told her standing up. \"Thought you could use some quiet time!\" \n\n\"That's not necessary,\" Livy argued. \"If you have things to do, then do them. You guys don't have to put your life on hold for us! Or feel the need to take Nora with you.\" \n\n\"We aren't,\" Alex assured her. \"I need a tempting treat for the wolves, so I thought Nora would be the perfect bait!\" Alex winked at Nora who widened her eyes at the thought of being wolf bait. \n\n\"Well, I feel sorry for the wolves already!\" Livy smiled shaking her head. \n\n*** \n\n\"Whose place is this?\" Nora asked looking up at her as she held her Aunt's hand. \n\n\"This is Madelyn's place,\" Alex said down to her. \n\n\"Is she a queen?\" Nora asked. \"This place is as big as a castle!\" Her voice raising with excitement. \n\n\"It is,\" Alex agreed looking around at the grounds with Nora. \"I guess Madelyn is a queen.\" \n\n\"Should I bow?\" Nora asked her. \n\n\"Yes,\" Alex laughed. \"We both will!\" \n\nCharles opened the door and smiled broadly at her. His eyes shifted to Nora and the confusion washed through his eyes. \n\n\"This is my niece, Charles,\" Alex introduced them. Chuckling internally that Charles may be thinking Nora was her daughter, and it was unknown to them. \"Nora, this is Sir Charles, he takes care of Queen Madelyn.\" \n\n\"Hello Sir Charles,\" Nora bowed to him. Charles, without missing a beat, played along, seeing the game being played for Nora. He bowed formally. \n\n\"Princess Nora,\" Charles bowed graciously. \"Please enter the castle and I will alert the Queen she has guests!\" \n\nThe two girls entered the hallway and as he started to walk away Alex stopped him. \n\n\"Charles,\" she said softly. \"Has she taken her medicine today?\" Charles tilted his head at her and smiled. \n\n*** \n\n\"Not one beautiful princess, but two!\" Madelyn beamed as she entered the parlor. Nora and Alex stood and both bowed to her, which caused her to laugh. \n\n\"Rise my pretties!\" Madelyn smiled as she came over. She hugged Alex warmly and then turned her attention to Nora. \n\n\"My, my, my!\" Madelyn raved. \"You look like Princess Alexandria!\" \n\n\"Yes, ma'am,\" Nora beamed looking at Alex. \"That's what everybody says!\" \n\n\"So,\" Madelyn smiled as she ran her hands through Nora's hair, as she smiled at the small child and thought of the possibilities of Gavin and Alex with children. \"Come to yell at me as well?\" \n\n\"Of course not,\" Alex smiled holding her hand out. Madelyn looked to it confused then held hers out to take whatever Alex had in her hand. \n\nAlex dropped the medicine into Madelyn's palm and this caused her to laugh. \n\n\"I warned you,\" Alex said handing her a glass of water. \"Now I get to show you my Switch.\" \n\n\"You can't spank a Queen!\" Nora gasped, missing the meaning. \n\n\"Watch me,\" Alex said firmly not taking her eyes off Madelyn. \n\n\"Oh my!\" Madelyn laughed as she popped the pills in her mouth and took the water from Alex. \"Better?\" \n\n\"For today,\" Alex nodded taking her into a hug and holding her. \n\n\"You scared us,\" Alex whispered. \"We love you, don't do something to deprive us of you!\" \n\n\"No chance,\" Madelyn smiled from within the embrace. \"I have something to stick around for now!\" \n\nAlex released her and tilted her head. \n\n\"A wedding!\" Madelyn smiled. \n\n\"Whose?\" Alex asked. \n\n\"Yours,\" Madelyn told her with a wink. \"Not yet, but I can finally see a light at the end of the tunnel!\" \n\n*** \n\n\"Madelyn said she was visited by two beautiful princesses,\" Gavin pointed out over dinner later that evening. \n\n\"We went to see her today!\" Nora blurted excitedly. \n\n\"I know,\" Gavin smiled. \"She said you were the prettiest thing she had ever seen!\" \n\n\"I know,\" Nora nodded. \"I don't think I'm as pretty as mommy or Aunt Alex, but I promise to take my vitamins and grow up big and strong! Then I can wear pretty dresses like Aunt Alex and drive a car like Aunt Alex and visit Queens!\" \n\n\"Well,\" Gavin agreed with a nod. \"That would do it.\" He winked at her then turned his eyes to Alex. \n\n\"She said to tell you not to come up there just to make sure she is taking her pills,\" Gavin informed her. \n\n\"She did, did she?\" Alex asked carefully watching him. She didn't know if he would be mad at her for exerting her Switch on Madelyn. \"Do you not want me to?\" \n\n\"No...I absolutely want you to go,\" Gavin shrugged. \"She won't listen to me, she won't listen to Anzi. Perhaps you two can break through that thick skull of hers!\" \n\n*** \n\n\"Perhaps he didn't understand me,\" Madelyn frowned as she entered the parlor where Alex and Nora stood the next day. \n\n\"No,\" Alex shook her head. \"He understood perfectly, then he said I should continue, as you wish to be stubborn!\" \n\n\"Alexandria,\" Madelyn said as patiently as she could. \n\n\"You don't own me,\" Alex warned her firmly, again using the subtle innuendos from their life, like the Disney movies of today with their references that children wouldn't get but the parents being drug to theater would. \"Gavin told me to, so I have to do what he commands. You know this.\" \n\nAlex looked to Madelyn as Nora held out her medicine to her. Madelyn took it with a deep breath and a scowl at Alex. ",
        "\"This will be addressed,\" Madelyn threatened. \n\n\"Yes Mistress,\" Alex smiled. \"But until I'm told otherwise, expect us...daily.\" \n\n*** \n\nGavin was chuckling as he entered the condo. \n\n\"No,\" Gavin laughed. \"I understand.\" He nodded as the person on the other end continued to talk. \n\n\"I understand.\" \n\n\"Yep.\" \n\n\"I understand.\" \n\n\"Yep.\" \n\n\"I heard you the first time.\" \n\n\"Yep.\" \n\nHe looked to Alex and Livy who were looking at him as Nora took his bag from his hand and set it in its normal spot for him. He rubbed her head in a thank you. \n\n\"I understand.\" He shook his head as he covered his mouth. His smile seen through his fingers letting the girls know this was not an unpleasant conversation, just a very one sided one. \n\n\"Yep.\" \n\n\"Yep.\" He finally let loose a hard laugh. \n\n\"No, of course I'm not laughing at you!\" Gavin defended. \"I just find it really funny that you think you can boss me around! Me! Of all people!\" \n\nThis set whoever he was talking to into a frenzy as he pulled the phone from his ear and held it by his side obviously not caring about what was being said. He shook his head as he leaned in and kissed Alex and blew air into Nora's neck causing her to cackle. He put the phone back to his ear. \n\n\"Well,\" Gavin interrupted. \"It was real nice getting yelled at by you.\" He listened to the person on the other end, before turning his eyes to Alex. \n\n\"Alex,\" Gavin sighed pulling the phone from his ear. \"Madelyn wants to know if you are insisting on coming out there tomorrow?\" \n\n\"Give me the phone,\" Alex demanded getting up and going to him. \n\n\"Uh-oh,\" Gavin laughed into the phone. \"Now you have gone and done it!\" He handed the phone to Alex. \n\n\"Hey Madelyn,\" Alex said sweetly, her voice sticky sugar sweet and patronizing. \"Of course I plan to come up there tomorrow, and the next day. And the day after that! I'm going to come up every day until you realize that those pills will be taken every day!\" \n\nThis sent Madelyn into a fury on the phone and Alex smiled as she took the berating. \n\n\"Ok,\" Alex smiled. \"See you tomorrow.\" Showing she was not going to relent in her new found duty. She then listened and starting laughing but covered the mouthpiece up so Madelyn couldn't hear it. \"You promise?\" \n\n\"Ok,\" Alex agreed finally. \"As long as I have your word, no more screwing around. Take your pills.\" She nodded as she winked at Gavin. \"Ok, do me a favor? Put Charles on?\" \n\n\"Because I want to talk to him about something Nora left there,\" Alex said with a shake of her head at Livy to tell her that was a lie. \n\n\"Hi Charles,\" Alex smiled sitting down. Her entire demeanor changed, it went from laughing to a seriousness more suited for a trial. \"If she hasn't taken it by ten a.m., I want a phone call. If I don't get that phone call and I find out she isn't taking her medicine...I'm going to hold you personally responsible and you will both hate it when I come up!\" With that she hit the off button and handed it to Gavin. \n\n\"Oh man!\" Gavin smiled leaning in and kissing her again. \"Can I pick'em or what?\" \n\n*** \n\nGavin met Alex coming out of the master bathroom. \n\n\"Hey,\" she smiled as he blocked her into the doorframe. \n\n\"Hey,\" he said as he devoured her neck. \"I've been dying to taste you all fucking day!\" \n\n\"As you wish! Sir,\" she smiled. \n\nHe took hold of her gruffly there in the doorway. Lifting a leg up and putting it on his shoulder to rest as he devoured her sex. He didn't even bother to take the dress off of her, just pushing it up and over his head. \n\n\"Holy shit!\" she gasped as he buried his tongue. \"Man, when you get a craving!\" She teased as she opened herself as much as she could. \n\nHis aggressiveness reminded her of the movie Ace Ventura, Pet Detective, when Jim Carrey's character had returned a dog and the voluptuous owner went down on him in the doorway. Leaving him only to stand there in the camera shot with his entire body being thrust to and fro as she 'paid' him. The entire time he said 'real friendly here!' The scene had her and Lena rolling in the aisle of the theater. \n\nComing back up and he captured her mouth with the same ferocity as he had below. She clutched the doorway to keep from touching him. He took her lip into his teeth and pulled it out gently before releasing it as he unzipped the back of her dress and let it drop to the floor leaving her in only her strapless bra and black stockings with matching garter belt. \n\n\"I have one question for you before you pleasure me into oblivion,\" Alex stopped him. \n\n\"Perhaps I'm not in a question and answer mood?\" Gavin grinned. She shrugged with her eyebrows as his lips ran across her newly available skin. \"Ask your question.\" \n\n\"Before we left for my parent's house,\" she whispered as he continued to play with her body with his hands and mouth. \"You were torturing me?\" \n\n\"I don't remember it that way,\" Gavin smiled as she bit her nipple causing her to gasp. \n\n\"I was whining?\" Alex reminded. \n\n\"That I remember,\" he said moving to the other nipple to caress it hard with his tongue and teeth. \n\n\"You indicated you had multiple Christmas gifts for me,\" she reminded. He stopped and moved up to her face to rub her nose with his, and run his tongue across her lips. \n\n\"I do,\" he smiled. \n\n\"You do?\" \n\n\"I do,\" he repeated. She didn't respond, instead she closed her eyes and smile wickedly. \"What?\" he asked her concerned. \n\n\"I just love to hear those words from your lips!\" she teased. The tease of marriage promises. \n\n\"You want the other gift now?\" he asked her. \n\n\"NO!\" she blurted. \"I don't want it at all! It's just driving me nuts that I can't figure it out!\" \n\n\"Ah,\" he laughed. \"Stuck in your crawl is it?\" \n\n\"Very,\" she pouted. He moved away from her. \n\n\"Close your eyes,\" he commanded. \n\nHis voice unmistakable. This was not the boyfriend Gavin he had been portraying in front of Livy and Nora, or her family back in Pennsylvania. This was the Dom Gavin. The one not to be argued with or denied. She did as instructed. He moved away from her, presumably to get the gift. \n\n\"Turn around,\" he ordered and she did. \"Lift your hair on top of your head.\" \n\nShe took her hands and ran her fingers up her neck to pull her brown hair up on top and out of his way. He wasted no time and clamped his lips on the back of her luxuriously long neck. It caused a tidal wave of goosebumps across her body, her nipples got even harder than they were when he used his mouth on them, in sweet anticipation. \n\nShe shivered involuntarily at the sensations he was causing with his lips and tongue on the sensitive spot on her neck. Her body shook with excitement as his manipulation overwhelmed her body. It had been days since he ravaged her sexually. Since the kitchen before they left for Christmas. \n\nYes he had fingered her in the car, and yes he had tongue fucked her into multiple orgasms in the hotel. But none of that was remotely as pleasurable as his cock in her, or a session! Since Nora and Livy had been there, they had not done a scene and she was unaware how much she was missing it until he was taking her there in the doorway to the bathroom! \n\nThe cold, heavy feel of metal and something else around her neck caused her to gasp. Was he going to use some sort of new sex toy on her? One that would simulate his hand around her throat? It was cold and it was snug against her neck, it encircled her whole neck with the metal like feel. Like chain mail, at least three inches thick, and surrounding her throat all the way around. \n\nShe thought back to her first party, one of the shows had a woman being choked by the Dom with a leather strap. He would hold her oxygen off until she blued in the face. Was this going to be similar? She didn't know if she would enjoy that, but it was Gavin, as long as he was playing with her she was up for anything, well anything but the electro toy on her feet, she remembered the night at Alyssa's with a smile. \n\nShe felt his fingers clasp it into place before sliding his hands around her body and cupping her breasts from behind. Now his lips moved closer to her hair line, as whatever he wrapped around his throat kept him from nibbling as before. \n\n\"Now,\" he smiled as he licked her earlobe. \"You have to promise to not go ballistic.\" \n\n\"You know I can't make that promise,\" she whispered. This caused him to chuckle. He turned on the bathroom light with a click. \n\n\"Open your eyes,\" he whispered in her ear as he held her tight to his body so she could feel his excitement. Her eyes fell to her neck in the mirror and she found herself unable to breathe. She was physically unable to breathe. \n\n\"Breathe,\" he reminded when he saw her response in the mirror with his secret smile. She sucked in a quick gasp on command. \n\nHer fingers came to her throat shaking, he could see them tremble in the mirror. She lightly touched the diamond and sapphire choker that now encompassed her throat. Three complete lines of alternating diamonds and sapphires going completely around her neck to the clasp in the back. Hanging in the front was a diamond filled gold cursive \"A\" with a cursive \"G\" in sapphires wrapped around the \"A\". Intertwining the two letters permanently. \n\nThere must have been over a hundred stones wrapped up in the necklace easily. She trailed her fingers around her neck, touching each and every jewel. Each and every detail. Each and every expensive stone. \n\n\"Holy fucking shit!\" she whispered her first words. \"Are you fucking kidding me?\" she asked him in the mirror. He nibbled on her shoulder as he smiled. \n\n\"This is your new collar,\" he told her. \"For parties.\" \n\n\"Are you out of your fantastically generous mind?\" She whispered. \"How much did you spend on this?\" \n\n\"Hmm,\" he smiled. \"You wouldn't tell me...so I'm not obliged to tell you!\" \n\n\"Sir!\" Alex was in tears. But no words came out after that. \n\nShe had a million words flood her mind but each and every word got lost on the way to her mouth as each word seemed to be in awe of the choker she now wore. Each word unworthy of escaping her lips in the presence of the exquisite piece of jewelry. \n\nHer tears streamed down her face as he looked up to her in the mirror while he marked her shoulder with his mouth. The emotions of the moment overwhelming her as she stood there. She whimpered while she locked eyes on him as he rewarded her with what she deemed as good girl marks. \n\n\"Can the wolf come out and play?\" she finally managed to ask him in the mirror. \n\n\"He wants to,\" Gavin smiled at her invitation. \n\n\"I want him,\" she said firmly. \"I want him now, and only him!\" \n\nShe spun and kissed him hard, her hands wrapping in the folds of his shirt and holding him tightly. She bit his lip. Hard. Almost drawing blood. He stared at her as his heart beat on his rib cage. \n\n\"I want him,\" she whispered again as she slipped by him. \n\nShe went to the bed and stalked sultrily across it in a crawl. Her ass in the air as she lowered her face to the mattress making him swallow hard at the double invitation. Her voice and her positioning. \n\n\"Come...take me, Sir,\" She said from the bed. \"I want you.\" \n\nEasing back into the bedroom he looked at her in the bedside lamp. The light reflecting off her anal plug. It was emerald tonight. She had moved up in sizes he noticed. He ran his hands over her firm muscles in her ass. His fingers curving around her cheeks. \n\nHis thumb falling in the valley of her as she presented herself to him. His thumb coming to rest on the jeweled end of the plug. \n\n\"Take it out,\" she whispered. \"And take me the way the wolf has been begging you to!\" \n\n\"You are not ready for that,\" he whispered. Mesmerized with the idea of doing just that. \n\n\"I want to satisfy that wolf,\" she said looking back at him. \"Fuck me in the ass. Don't make love to me, or pleasure me. Use me! Fuck me! Nothing gentle! If I'm able to sit down tomorrow, I will be disappointed!\" \n\nThis caused Gavin to groan, and her to smile upon hearing the delicious sound of his weakness. Just a little more pushing, she felt. A little more and he wouldn't be able to stop the wolf. It would be out and on her and there would be no way she would stop him. She would swallow the bed covers before she allowed herself to say her safe words! \n\nHe gently removed the plug from her and she gasped with its release. \n\n\"Please Sir,\" She begged softly. \"Take me where you want, how you want, for as long as you can!\" \n\nGavin buried his tongue into her ass, and she smiled. This was it she told herself. He was going to do it. Something she had been preparing herself for almost eight months! She was finally going to please him in a way only Elizabeth had been able to do since she came here. \n\nHis tongue pressed deeply in her ass, forcing its way in her before it closed completely from having the toy removed. While his tongue forced into an area she wanted his cock in, his thumb pushed into her sex causing a double penetration of exquisite pleasure. \n\nShe rocked back onto his face, forcing his tongue into her deeper and deeper as he tried to get into her bowels it seemed with his talented tongue! She clutched the covers on the bed into her fingers. Taking a firm grip to prepare herself for the ravenous wolf. And it would be ravenous. Anytime the wolf came out, it was an attack her body reveled in. He was in her, on her, and around her. Seemingly all at once. Like there was more than one Gavin. \n\nShe felt his fingers leave her and heard his zipper being pulled down. He wasn't even going to take the time to get fully undressed! He was just going to pull his cock out and shove it in her! God she loved that, that ability to make him bend his rules. She balanced herself as she felt him climb onto the bed. The weight of him between her legs causing her to push her knees further apart for balance. \n\nThe invasion was sudden and it was hard. It was also absolutely fulfilling! She grunted as he buried his hot shaft deep within her pussy in one strong stroke. His hips slamming against the skin of her ass with a force that rocked her forward. It forced her face to slide a bit across the bedspread. \n\n\"Yes Sir!\" she hissed as his balls slapped at her clit with such a force she thought he hit her by hand. \n\nHis hands dug into her as his fingers held her hips firm. \n\n\"Fuck me,\" she hissed. \"I want it!\" She looked back at him. \n\n\"No, I need it!\" she corrected causing him to smile, not Gavin's smile. The wolf's smile. Part sinister, part devious, and all about his pleasure. Normally she could see the wolf behind the eyes. Stalking behind the cage of his brown irises. Not tonight, he was buried balls deep in her. \n\nHe pushed her forward with his hands and pulled his cock out slowly with his hips, just as she thought he was going to pull all the way out, he pulled with his hands and drove his hips forward and slammed into her with a crash that would have set airbags off in the car! \n\nSlowly pulling back out, before driving home again. Over and over. Slowly...then plowing home with a grunt that caused her yelp under his power. \n\nGavin pulled his cock out slowly, this time as she prepared to take him deeply again, he fell out of her. She then felt his heavy head on the entrance of her forbidden hole. The hole that had only been entered one other time by a cock. \n\nShe held her breath, realized she was doing so, then slowly blew it out in an attempt to relax all her muscles to keep this from hurting. Despite all the preparation she knew this was still going to be painful. She just didn't know how painful. \n\nWould it feel like the first time? With her inexperienced overzealous boyfriend? Would the anal plug regimen she had been working on take some of the pain away? Most of it? All of it? She doubted it would take all of it, she was hoping for most of it, but in reality she was only putting a toy in her that was a fraction of the size of Gavin. So there would be pain involved. \n\nThere was only a flicker of concern in her that he would drive home the way he had his other thrusts. Then she abandoned that concern. She didn't care. This would please him like she hadn't been able to before. That was the only important thing right now. He hesitated as he looked at his bulbous head resting against her tight anus. Pressing there causing it to indent under his weight. \n\nShe looked back at him and found him hypnotized by the sight. \n\n\"Fuck my ass sir,\" she whispered. \"Satisfy the wolf!\" \n\nHis eyes shifted from the delectable sight of her ass, to the oasis of her blue eyes. They did not lie, she wanted this. The wolf's smile slithered across his face and she matched it with one of her own. The secret smile, the one she wore only for him now. The same he returned to her. \n\nThe soft knocking at the door was almost missed in the passion of the moment. \n\n\"Aunt Alex?\" Nora's voice carried from the other side causing Alex to snap her head to the door and realized there was no lock on it! The sheer panic of having the small girl walk in and find them in this position flooded her. That was a conversation she did not want to have! \n\n\"Just a minute Baby!\" Gavin called out, his voice fighting back the laughter and anger and the mounds of frustration. \"Uncle Gavin is getting ready for bed!\" He was off the bed in a flash and grabbing her robe and holding it for her. \n\nAlex mouth hung agape as she looked to him, a tear in her eyes as her lip trembled. She had him! The wolf! She had Gavin where he was going to take her in ways she had been dreaming about since the jealous filled night she saw Elizabeth please him. \n\n\"I'm so sorry!\" She gasped as she climbed from the bed. \n\n\"It's fine,\" he said through the strain. He was still laughing but that was only to cover for the immense disappointment of not being able satisfying himself. \n\nShe clutched his face with her hands and kissed his lips apologetically repeatedly. \n\n\"Go to her,\" he smiled stopping her with his hands. \"I'm fine!\" \n\nHe slipped into the bathroom as she made her way to the door and looked back just as the bathroom door closed. She wrapped the belt around her and stomped her foot childishly as she realized just how close she was! \n\n\"Fuck!\" she hissed as she took hold of the door handle. \n\nShe gathered herself and blew out a deep calming breath. She could still feel the pounding of her heart in her chest, part passion and part shock of being in the throes of sex only to have a small voice cause it to come to a crashing halt. \n\n\"Mommy is crying in the bathroom!\" Nora said through tear filled eyes as soon as Alex opened the door. \n\n\"Oh baby! Ok!\" Alex said pulling her into a firm hug and kissing her head. \n\n\"She is fine,\" Alex said holding her. \"I'm sure of it!\" \n\n\"I'm scared!\" Nora cried into her. \"I just want my happy mommy back! Not the one that daddy hurt!\" \n\nAlex looked back at Gavin as he exited the bathroom with his sleep clothes on. She could still see his cock was semi hard as he looked to them and climbed into bed and pulled the covers over him to protect his secret. \n\n\"Come up here, Princess,\" Gavin said patting the bed. \"Let Alex and your mommy talk and we will watch a movie in here on pay per view.\" \n\nAlex tilted the little girl's head back and smiled at her. \n\n\"Go keep Uncle Gavin company,\" Alex smiled at her. \"I'll check on mommy.\" \n\nShe looked back at Gavin with a massive apology in her eyes and he winked at her as Nora climbed into bed with him. Pushing the remote to turn the TV on he found the pay per view channels and they selected the movie Frozen, which she had seen a hundred times but Gavin hadn't, and he told her so. \n\nAlex tapped gently on the door and put her ear close and listened. She heard her sister sobbing. \n\n\"Just a few more minutes baby! Get into bed for mommy,\" Livy called out from behind the door, thinking it was Nora again. ",
        "Alex cracked the door and peeked in and saw Livy on the tile floor, her body distraught with sadness and tears. Alex slipped in the door and Livy looked up at her, her eyes crushed Alex with her sadness. \n\nAlex laid on the floor with her sister, and pulled her into her arms and held her tightly as the woman shook with her sadness. Livy's hands clutching at her robe like a child would on a storm filled night of thunder and lightning. \n\n\"I'm getting a divorce!\" Livy finally gasped in between sobs. \"I'm...getting a...divorce!\" \n\n\"I'm so sorry baby,\" Alex whispered as she pulled her in tighter and kissed her head with tenderness as the tears filled her own eyes then drop to Livy's hair. \n\nThe sobbing intensified as Alex hung on to her sister. There was nothing to say. No words to speak that would comfort her. No story to help her through this, this was the only way to get to the other side. The other side where a possible happiness could be had. If she could only get Livy to the other side, through the dense fog of pain. \n\nRight now, she could only hold her and let her cry it out. It could take minutes, it could take hours. It might even take days. But this was the road to recovery. It was filled with pot holes of pain, however. Alex held her sister as tightly as she could. It didn't feel like a real person in her arms. This body felt foreign to her and she couldn't place an identity on her. Olivia was gone for the moment. The timing of her return, was questionable."
    ],
    "authorname": "CJT",
    "tags": [
        "oral",
        "rough",
        "doggy style"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-27"
}