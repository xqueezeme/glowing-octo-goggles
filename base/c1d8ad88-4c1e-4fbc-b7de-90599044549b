{
    "title": "When My Parents Visit",
    "pages": [
        "Being that it was my birthday, I have to admit I was hoping for breakfast in bed. When I wandered into the kitchen, half-asleep and even less coherent, I was hoping for at least a decent breakfast. I was wishing for waffles and eyeing the Cornflakes when I heard a giggle behind me and my boxers were jerked down my legs.\n\nI spun around and nearly fell in the process but Sarah caught me before I could. She kissed me hard on the lips, and grabbed my cock, stroking it to hardness. She pulled back from the kiss, grinning wickedly. She stepped back from me, arms akimbo, as if modeling a dress. However she, like I now, was naked. Her skin glowed in the sunlight filtering into the kitchen. Her dark hair trailed behind her as she bounced back into my arms, pressing her body against mine. I felt the hardness of her nipples as they bored into my chest and the wetness of her pussy as she rubbed it against my leg.\n\n\"Since it's your birthday, big boy, I thought it appropriate that we both wear our birthday suits!\" She nuzzled my neck. \"I know you had your eye on that table saw at Sears but I hope you'll like this present just as well.\" She cocked an eyebrow and looked down at my bulging penis. \"I can tell the guy downstairs likes it.\" She dropped to her knees and kissed the head. She glanced back up at me. \"I'm just kidding. I bought the saw. This is just icing on the cake. And I do love icing!\" And then what should have been the best blowjob of my life began.\n\nShe raked her nails across my balls and flicked her tongue against the tip of my cock. Her head dipped quickly as she lightly batted her tongue against the shaft. She slowly drug her tongue up the length of the shaft and circled the head. Gently rubbing the side of her face against my cock and balls, Sarah looked up at me. Her green eyes sparkled as she very gently nipped at the tip of my cock. She pushed a few strands of hair behind her ear, grinned at me, and then sucked the whole length into her mouth. Her lips pressed into my crotch, her tongue working miracles on the shaft while she sucked gently on the head. Her head began bobbing up down, slowly, fast, slowly, alternating in speed. Her free hand had moved between her own legs, working furiously. By the moans that gurgled their way around my penis and out of her mouth, I could tell she was enjoying this as much as me. Well almost as much as me.\n\nI began to feel the familiar quiver in my groin and was just saying \"I'm gonna - \" when the doorbell rang. A sailor would've blushed at how I finished that sentence. \n\nThe bell rang again as Sarah stood up, wiping her mouth and grinning. \"C'mon, you. No - wait,\" she smacked at my hand as it moved to my cock. \"I didn't mean it that way! I'll finish this job later and if you jack off now and ruin it for both of us, well, to paraphrase a certain Soup Nazi, 'No fellatio for you! Come back one year!'\" Sarah wagged a finger threateningly then kissed me and grabbed a robe from one of the kitchen chairs. \"Pull up your shorts, sweetie, there's no need for a public indecency charge on your birthday.\" I yanked up my boxers and hurried to our room and back with a T-shirt. Sarah grabbed me as we neared the door. \"Hey, Romeo, do something about that woody, would you?\" I looked down at the tent in my shorts and quickly thought of my favorite mood killer, Mrs. Shwartz, my fourth grade teacher (the one with the ear hair).\n\nSarah opened the door before I reached it and I couldn't see who was on the other side. However, the look on Sarah's face (the same look that I've seen on hundreds of fleeing Japanese in Godzilla movies) gave me some indication. I peered around the door and saw something far worse than Godzilla. \n\n\"Michael! Happy birthday, son!\" \n\n\"Hey there, sport, how ya' doin'?\"\n\nMy parents had come to visit. \n\nI should probably elaborate on the problem. My parents are very conservative. They make Bob Dole look like a dirty hippie. What's more, the thing that they are most conservative about is sex. In our house, growing up, \"sex\" was as bad a word \"fuck\" or \"shit\" or any other George Carlin favorite. If not worse. I think that my conception was the only time my folks ever had sex and it was probably an accident that time. They would likely have slept in separate beds if it hadn't meant buying the second one. \n\nI didn't date all through high school and was still a virgin when I graduated college. Ahhh, and then I met Sarah. She was tending bar at one of the restaurants that I frequented. I asked her out, had a good time at a movie and dinner, and then somehow found myself going to bed with her. My first sexual experience blew my mind. I didn't go home the next morning or the morning after. I spent the next two months living with Sarah. I had no reason to go back to my little apartment. What was there that I needed? Sarah had food, we never wore clothes when we could help it, and she was all the entertainment I could want. After two months I ventured back into my dismal apartment. All the potted plants were dead, my answering machine was filled with telemarketers and I had developed a leak in my ceiling. I grabbed what I could and ran back to Sarah's. We lived together for another month, fucking like rabbits every chance we got. I swear, I learned more about sex in three months with Sarah than most people do in a lifetime. I asked her to marry me, she said yes, and we moved a thousand miles away. \n\nDon't get me wrong about my parents. I love them. They're wonderful people. But if they knew the things Sarah and I have done... We're no nymphomaniacs but we have a very healthy sex life. Sarah is one of the most open-minded, adventurous people I've ever met. But if my parents knew about the blowjobs, the anal sex, the French maid costume Sarah keeps in the closet or the Zorro suit I keep under the bed... I wonder which one of them would have the heart attack first.\n\nBut, I digress. Back to the story. \n\n\"Hey, Mom. Hiya, Dad. What's going on?\"\n\n\"What's going on? Michael, it's your birthday! We came to visit!\" My Mom bustled into the house throwing her arms around me. My dad grinned absent-mindedly behind her.\n\n\"Yessir, and we'll be here for two weeks!\"\n\n\"Two weeks?!?\" \n\n\"Darn straight!\" My dad mistook Sarah's shock for enthusiasm. \"We're retired, aren't we? We can afford to come out here and see our favorite son and daughter-in-law, can't we?\"\n\nThe two of them pushed and stumbled into the house. Sarah grabbed me by the arm, her other hand clenching her robe tight about her. After all, she was still nude underneath. She whispered in my ear through gritted teeth, \"Mike, God knows I love you, and I do my best to love your parents, but, two weeks? I don't think I can handle it.\"\n\nI tried to smile but it was probably more of a grimace. \"Hey, I put up with them for twenty years. This too shall pass.\"\n\n\"Sarah, dear!\" My mom's voice carried from the living room. Holding each other, we followed the sound. \n\nSarah's grasp on my arm tightened painfully. \"Holy sweet mother of God.\" Sarah's eyes widened and her mouth gaped. Standing by the sofa, my mom held a pair of Sarah's crotchless panties. A \"tsk tsk\" shattered the pleasant memory I was reliving of how those crotchless panties came to be there. \n\nMy mom eyed the flimsy red material, and spoke over her shoulder to Sarah. \"Sarah, dear, would you just look at these panties. The crotch has just worn all out of them!\" She shook her head. \"That's what you get when you buy them from one of those expensive lengerie stores! You pay for the name and not the material, there just isn't any quality at all.\" Sarah and I exchanged looks of relief. My mom was not done though. \"Dear, tomorrow you and I will take a ride to K-Mart and get you some sensible panties. Something with some life in them.\"\n\nI tugged Sarah out of the room. \"Listen, hon, I'm gonna throw on some pants and get them out of here for a few minutes. Show them the garage or something. Do a quick look and grab anything else that they might lose it over, ok?\" She started toward the bedroom. \"And you'd better put some clothes on before one of them tries to hug you or something.\" She shot me a look to kill and disappeared into the bedroom.\n\nLaying in bed that night, we barely dared to kiss each other goodnight. Due to a cruel design flaw (damn the man that built this house), the guestroom is next door to our bedroom. And, considering we could hear my dad's snoring quite plainly, my parents would no doubt hear anything we got into. \n\nSarah turned toward me, leaning on her arm, her dark hair cascading around her. Though she usually wore only a flimsy near-transparent teddy, if anything at all, she had come to bed in a pair of my sweat pants and an old T-shirt. The shirt was a little small for her and accentuated her breasts nicely, their roundness quite apparent even in the dark, her nipples straining against the material. She sighed, wished me one last happy birthday, and rolled over.\n\nI woke early the next morning. I could hear bangs and rattling from the kitchen. There was some whispered conversation that I couldn't quite hear and then a creaking outside the door. I looked over at Sarah. She lay flat on her back, one hand down the waistband of her sweat pants and the other up under her shirt. She must have been left wanting as badly as I when we were interrupted yesterday morning. I heard the click of the doorknob turning, grabbed for the sheets bunched up at the bottom of the bed and jerked them up, covering Sarah and myself. The door opened slightly and my mom's head peered around the edge. I pretended to be asleep and she disappeared. \n\nI woke Sarah up, knowing that leaving the door open and banging dishes was my mom's way of getting us up. Sarah yawned, stretched and rose out of bed. \"Sarah, maybe you'd better put something else on. That shirt doesn't leave a lot for the imagination.\" She looked down at her breasts straining against the shirt, areolas almost visible through the thin material. She lifted the shirt quickly, flashing me, pulled it back down and stuck her tongue out. She walked out the door and I scrambled after her. \n\nWhen we reached the kitchen we found my mom busily cooking and my dad busily eating. Our table was heaped with piles of eggs and bacon and toast and my mom was cooking more. She turned when she heard us enter and smiled broadly. \"Up just in time! I was afraid your father would eat it all.\" Sarah wrapped herself around a cup of coffee while I poured orange juice. \"Listen, Sarah, when we go to K-Mart later to buy you some underwear, remind me to pick up some jelly or jam. All I could find for the toast was something called K-Y Jelly. And it didn't look or smell very good.\" Sarah choked on her coffee and I sprayed orange juice across the table. Sure enough, each piece of toast was covered in a thick gooey layer of K-Y. To my utter horror and complete stomach-churning revulsion, my dad was munching happily on a piece of said toast. Sarah and I both grabbed for the plate of toast. We managed to trash what was left but lost any semblance of an appetite. While my mom ate and my dad began to massage his stomach (wonder why) I pulled Sarah out into the hall. \n\n\"Why was there K-Y Jelly in the kitchen?!?\"\n\n\"Don't you remember? A couple of weeks ago when you tried to make pork chops and kept burning them up? And you decided to 'pork' me instead? We must have left it in there. I guess it's just a good thing your mom didn't use that wooden spoon you stuck up my ass - I don't think we've washed it yet.\" She cocked an eyebrow at me. \"How in God's name did she not realize what the hell she was putting on that toast?\"\n\n\"I don't think she had her glasses on and she's blind as a bat without them. And of course my dad would eat a hubcap if it was put before him.\" Sarah sighed and leaned her head on my shoulder. \"Listen, hon, I'll tell you what. I'll get you out of going to the store with my mom to buy undies if you'll give a really good look all over the house and make sure there's no more surprises. And make sure you get my porn tapes too, all right? Last night my dad put in \"In Diana Jones: Raiders of the Lost Arse\". I managed to stop it before the orgy scene with the pygmies but...\"\n\nWe managed a pretty uneventful trip to K-Mart. I guess fate decided to even things out by letting the evening go so bad. My parents declared that they were going to treat us to a nice dinner. And so we shuffled off to a fancy restaurant downtown. It was a dark little place, very private and quiet. Sarah and I had eaten there before. In fact I had eaten Sarah there before. Like I said, private and quiet. \n\nSarah wore her best proverbial \"little black dress\", a modestly low-cut number that was pretty tight and very short. Luckily I managed to get her into the car and then into the restaurant without my parents noticing how little dress there was between head and legs. Once in the dim restaurant it wasn't as apparent. Sarah and I sat down while my parents made a beeline for a desert cart. Sarah leaned across the table, her cleavage sucking my eyes out of their sockets. \"Baby, do you know what I'm wearing under this dress?\"\n\n\"No, but maybe if you hum a few bars...\"\n\n\"Guess again, Sherlock.\" She grinned wickedly, her tongue darting between her shining teeth and licking at her pouty lips. She brushed a few strands of hair behind an ear and leaned closer. \"Nothing,\" she breathed in my ear. My cock sprang to immediate attention. And then my parents returned. And my cock wilted.\n\nAs my parents engaged in mindless conversation about some neighbor from back home and her botched plastic surgery (the poor lady came out looking like Jack Nicholson), I tried to communicate my state of mind to Sarah. My parents again left the table to contemplate the dessert cart and Sarah leaned across the table. \"Mike, what the hell is the matter with you? You've been pecking that breadstick on the table like a woodpecker with A.D.D.\" She nodded at the hard twisted bread stick in my hand.\n\n\"Didn't I ever tell you about when I was a Boy Scout? That was Morse code for 'I want to eat your pussy until you scream so loud that people three states away want to know just who the hell Michael King is and what it is that he's so fucking good at'.\" I grinned and peeked under the table, hoping for a glimpse at the shaved pussy sitting only a few feet away.\n\nSarah took the breadstick away from me, tapping it on the table to remove any stray crumbs. Never moving her eyes from mine she sucked the breadstick into her mouth. She worked it in and out, licking the length of it. Undoubtedly the best blowjob the appetizer ever had. Taking the wet and sticky breadstick out of her mouth, she moved her hand under the table. Her eyes grew larger and her grin wider. From the slight movements of what part of her arm that was about the table, I could tell that I had every right to be jealous of the breadstick. She was fucking herself with it. Beads of sweat appeared along Sarah's forehead as her arm began to move faster. Her full lips parted, her tongue edging out. She bit down on the tip of it, trying not to make a sound. Her eyes began to lose focus, her face growing red. \n\n\"Sarah? Are you all right? You look flushed, dear.\" My parents had returned.\n\n\"Whu? I wha? Who? The, uh, flushed, I didn't, who's,\" Sarah stuttered, her eyes trying to refocus, my mom peering down at her. \n\n\"Why don't you come to the bathroom with me, dear. We can splash a little water on your face. It's hunger, I dare say. I've never seen such slow service! Come on, Sarah.\"\n\nSarah mumbled, stuttered and stammered, and my mom hoisted her to her feet. And there, dangling, just barely visible hanging out from her dress, was the tip of the breadstick. It was still in her pussy! No one else had noticed it; my mom was turned toward the restrooms and my dad was examining the ingredients of a package of Sweet N Low. Sarah wobbled after my mom, trying to walk and hold her legs together at the same time. Whimpering and waddling like a penguin, she disappeared into the rear of the restaurant with my mom.\n\nThe next week or so passed almost without incident. Once, while poking around in our room (she's a mom, she doesn't need a reason to poke around your room, or so she says), my mom found one of Sarah's vibrators. She thought it was a body massager. Before I could stop her she began rubbing it over her back and shoulders. Luckily Sarah had washed it good after it's last use and my mom walked away none the wiser. \n\nAs for Sarah and myself, we didn't fare as well. I don't think a day had gone by since we met that we hadn't had sex. Hell, when I was in an car wreck a couple years ago and had to wear a neck brace, we still fucked. It hurt like hell but I got over it. However, after a week of no sex whatsoever, no oral, no anal, no nothing, we were beginning to lose it. Sarah came in on the eighth day of my parent's visit to tell me how a Maytag commercial had her horny. \"The Maytag Repairman, Mike! I was turned on by the Maytag Repairman for God's sake!\" I could sympathize. I had been watching Martha Stewart Living that morning and, well, Martha was starting to look pretty good. If that's not a signal that something's wrong, I don't know what is.\n\n\"Mike, you've gotta do something. That's all there is to it. I can't take this anymore. If I don't get fucked tonight...I...I...I don't know what I'm gonna do but I'm gonna do something!\"\n\n\"All right, calm down. Look, I'll get rid of my folks for the evening, all right?\"\n\nAnd so I did.\n\n\"Sarah?\" I caught her in the bedroom, grabbed her in a bear hug and threw her onto the bed. \"They're gone. They're gone! I told them that we were going to go over some bills and receipts and sent them to that Chinese restaurant out by the mall, Wok and Roll, to get some food. Wok and Roll has the slowest service in the world! Mom and Dad'll be lucky if they're out of there by midnight! And, just in case they do come back, I told them not to bother us, to pick a video out of the shelves and watch a movie! Oh baby, baby, baby, the things I am going to do to you!\"\n\nSarah threw herself from the bed into my arms, knocking me over. We fell to the floor together and rolled around, tearing at each other's clothes, kissing and licking any available bit of flesh. It had been so damn long, we didn't know what to do first.\n\nI caught Sarah's hands and pressed them to the floor on either side of her. I kissed her hard, sucking her tongue into my mouth and massaging it. We broke apart and I whispered for her to just lie back and let me take care of things. She grinned, put her hands behind her head, and prepared to enjoy the ride. I tore at her shirt, buttons flying everywhere, until I got the damned thing open. Thank God, no bra underneath. Precious seconds would not have to be wasted trying to unhook the stupid contraption. I kissed her again and then led a trail of kisses down her throat to the base of her neck. I worked over her shoulders, kissing and massaging, teasing and tantalizing as much as possible before I moved on to greener pastures. I cupped her breasts in my hands, hefting them and testing their weight, my fingers lightly flicking and pulling at the small pink nipples. Kissing and licking, I brought my face down the valley between them. I moved to first the right breast then the left, kissing the soft pale mounds and sucking on the nipples. Sarah began to moan, writhing around and muttering incoherently. Giving each nipple one last flick of the tongue, I moved south. I drug my tongue gently down the length of her flat stomach, stopping to dip it in her belly button. My hands found the zipper of her jeans and wrenched it down. The button popped lose and in a flash I had the pants off of her legs. I kissed my way down her right leg, stopping at her feet to run my tongue between her toes and across the soles of her feet. She giggled madly, thrashing about, almost kicking me in the teeth. I began my trek back up her leg spending extra time on her inner thigh, completely ignoring her dampening panties for the time being. Kissing the left thigh, I began a trip down that leg. Again, pausing only to lick and tickle her feet, I started back up. ",
        "I stopped, laying between her legs and peered up at her. She opened her eyes, lifted her head and looked down at me. \"Fasten your seatbelts, baby, it's gonna be a bumpy ride!\" I grinned and jerked her panties down her legs. They separated from her glistening mound with a loud \"squelch\" and a deep resonating moan from deep within her. I buried my head in her pussy, inhaling the sweet aroma and dipping my tongue into her overflowing cunt. Sarah screeched and clamped her legs around my head. Licking harder and faster, I eased a finger into her tight, hot hole. Sarah moaned and lifted her ass off the floor into the air. Her legs clamped tightly around my head, I went with her. It gave me a perfect opportunity to thrust a finger deep into her perfect rosebud of an asshole. Surely my parents heard her screams across town at the Chinese restaurant. Working both fingers in and out and lapping away at her juicy pussy, I could feel Sarah getting close to orgasm. Hell, I could certainly hear it. I stopped my licking long enough to locate her clit, poking out from in under its hood. I sucked it into my mouth and began working it like a lollypop. Sarah came in a flood, drenching my face and the floor. Her screams and squeals merged into one long, loud moan as she thrashed about, legs and arms flailing. \n\nShe collapsed into a heap on the floor. I leaned up on my elbows, watching her skin flushing and quivering, goosebumps popping up all over. She laid like that for a few moments, a little smile fluttering around her lips. Then, with surprising energy, she jumped up, rolled me over and slid down between my legs. Her hands were a blur as they tore at my trousers. She freed my cock and it stood to attention. She eyed it hungrily. \"Now. Where were we when we were interrupted a week ago?\" With no further adu she thrust her face upon my prick. Her nose hit my groin, slid up the length of the shaft, then hit my groin again. This time it stayed there as she deepthroated my quivering penis. Her hands played with my balls, cupping them and gently squeezing. \n\nI gasped, speaking with great difficulty, \"Sarah, I'm gonna cum. I'm gonna - what the hell are you doing???\" Her head flashed up and off of my cock. She grinned and stood up, turning toward the bed. \n\n\"You're not getting out of it that easy, mister. I haven't been fucked properly for over a week. Now get in this bed and put that dick in my pussy and fuck my brains out!\" She crawled headfirst onto the bed, wiggling her ass at me. \n\n\"Who can refuse an offer like that?\" I jerked off what was left of my clothes and crawled onto the bed after her. I rolled her onto her back, spread her legs and jammed my dick into her pussy. \n\n\"Mike! Oh God, Mike! Fuck me, fuck me, fuck me, fuck! Fuck! Fuck! Oh yeaaaaaaaaahhhhhhh!\" She rocked the bed as I thrust into her again and again. Suddenly she rolled me over so that she was on top, never letting my penis leave her pussy. She began riding, bouncing up and down like she was riding a bull. Her long hair rose and fell around her face. Her hands were on her breasts, pinching and pulling her nipples. \"Yes! Yes! God Yes! Ahhhhhhhhhuhaahhhhhhuhaaaahuh! Yesyesyesyesyesyeesssssssssssssss!\" And then she stopped in mid scream, halfway impaled on my throbbing cock. Her head snapped toward the door. From the other side of the house was the sound of a door closing. Then my parents' voices. \n\n\"Shit! They're back!\"\n\n\"No, no, no, it's ok, Mike. We'll just be quiet. They'll watch some t.v. like you told them too.\"\n\nFrom the living room we could hear my parents, debating what movie to watch. \"Well, I was trying to watch Indian Jones the other day but Mike...\" that was my dad.\n\n\"It's just as well, I don't want to watch that. Oh, look! Home movies!\" that was my mom.\n\nWait. We don't have any home movies. Unless... surely Sarah hid that.\n\n\"Look! Look! It's Mike and he's dressed up like Zorro! It must be from Halloween!\"\n\nOh no. \n\n\"And there's Sarah, but why's she...what's that she's wearing...she's not wearing...\"\n\nOh God no.\n\nAnd then my mother's shriek cut through the house. I tried to rise up but Sarah pushed me back down. I could hear my mom crying and my dad's footsteps. Was he leaving the house? Or was he coming this way? \"Sarah, they've seen - \"\n\n\"Fuck that! And fuck me!\" she growled, pushing herself farther down my cock. She grunted, groaned, then let out a shriek to match my mom's. I could hear footsteps coming toward our room. I sighed and thrust upward to meet Sarah as she came back down. Oh well. My parents had to learn about sex sometime."
    ],
    "authorname": "CharlieRose",
    "tags": [
        "parents visit",
        "sarah dear",
        "parents returned",
        "sarah caught",
        "things sarah",
        "drug tongue",
        "mike god",
        "piece toast",
        "sarah grabbed",
        "chinese restaurant"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/when-my-parents-visit"
}