{
    "title": "What Will They Think of Next?",
    "pages": [
        "Being a woman has many advantages and not least among them is that our organs of pleasure are better arranged than those of the male of the species. For one thing they are far more discrete, neatly tucked away between our legs rather than dangling around looking untidy. For another, our state of arousal does not dramatically affect the size of our genitalia. Sure, if you look closely, there are tell-tale signs that we are turned-on but nothing as obvious as the ridiculous erection you men seem prone to any time a nice looking girl with a short skirt and a low-cut top catches your eye. \n\nGiven these advantages and the inexorable march of technology, it was surely only a question of time before someone invented a gizmo with which a girl can have a bit of high-tech but discrete fun. So it should not have been a surprise that one turned up last year, courtesy of St. Valentine and his earthly agent, my boyfriend Steve. \n\nHe presented me with the small, beautifully wrapped box while were sitting on the sofa in my apartment, relaxing over a pre-dinner glass of wine. I could tell by the look on his face that this was not going to be the piece of jewellery or chocolates that would be his usual choice of gift. After kissing him briefly in gratitude I untied the narrow ribbon and removed the paper. Carefully arranged in the box were two shiny black plastic objects, one a small circular dish, like a miniature flying saucer, and the other shaped like a letter 'C' with a small egg-shaped ball at one end and a larger one at the other. I removed the C-shaped thing from the box and held it up, turning it around in my fingers. It was shiny, black and beautifully smooth with a silver band round its middle but I had absolutely no idea what it was.\n\n\"Ok, you'll have to help me out here Steve. What is it?\" He laughed at my obvious puzzlement.\n\n\"It's a Lelo Tiani,\" was his reply. He might as well have been speaking Martian.\n\n\"Er... that doesn't exactly help,\" I said, \"what is a Lelo whatever-you-call-it?\"\n\n\"Tiani. T...I...A...N...I,\" he spelt it out for me. \"It's the latest thing from Sweden. I saw it in a design magazine in the hotel in Stockholm and managed to get hold of one. They're in pretty short supply you know.\" He paused. \"You still don't know what it's for?\" I shook my head.\n\n\"Try this.\" He took the thing from me and fiddled briefly with something on its surface. \"Hold out your hand,\" he said, and placed it back onto my upturned palm. \n\n\"Oh!\" My exclamation was born mainly of surprise as the device lay gently pulsating against my palm, but it was also the result of shock at the realisation that my boyfriend had bought me a vibrator as a Valentine present. \n\nNow I'm no stranger to sex toys, in fact discretely hidden beneath the underwear in my bedside drawer is a very simple but highly effective vibrator that sees regular use, especially as Steve travels a lot. Steve, I was sure, did not know of its existence. This thing though was intriguing. It did not take a genius to work out the basics of its operation but I decided to string Steve along a bit. In any case I wasn't quite sure where he was coming from. After all, how many men are going to give their loved one a battery powered replacement for their own, nature-provided, moving part. I played the innocent.\n\n\"No, I still don't get it,\" I said, enjoying watching him squirm. I picked it up between thumb and forefinger and examined it more carefully. \"Some sort of kitchen gadget?\"\n\n\"Er, No. Some sort of bedroom gadget,\" he said with a slightly embarrassed smile. \n\nI was not going to let him off the hook so I said nothing and continued to examine the device in a suitably obtuse manner.\n\n\"It's a vibrator,\" he came clean, \"you know a sex toy,\" his words came out in a rush. \"It's the latest thing, from Sweden, you put one end inside you and the other end rests against your clit. That's why it's curved like that. Both ends vibrate; you get it going against your G-spot and your clit at the same time. Mega-orgasm every time; guaranteed.\" \n\nHe should have been a vacuum cleaner salesman. \"Brilliant,\" I said, \"I'll go upstairs and try it out while you cook the dinner. I'll try and keep the screams of passion to a minimum so you can concentrate. Did you get spare batteries, I'll probably need them?\"\n\nMy sarcasm was apparently lost on the hapless idiot because he replied with a crestfallen expression, \"Its re-chargeable...\" His voice tailed off and he looked so pathetic that I decided to take pity on him. \n\n\"Steve, it's a lovely thought but why would I want a vibrator when I have you.\" \n\nDid I feel a slight pang of guilt as I heard myself utter this outrageous lie? No, not really. Men's fragile egos have to be protected and if that means the occasional economy with the truth then so be it.\n\nMy mendacity appeared to have the desired effect. \"Ah,\" he said, some of his natural cheer returning to his voice, \"Well that's rather the point. Pass me the box.\" I complied, giving him the open box, and he took out the other, dish shaped, object, which I confess I had rather overlooked in my desire to humiliate my partner.\n\nHe fiddled with it for a second or two. \"Hold out your bit,\" he said and I did as he asked, holding the vibrator in my hand. He shook the disk thing gently from side to side.\n\n\"Bloody hell Steve!\" I am not one who is prone to swearing but I couldn't help myself. As he shook the little disc thing, the vibrator, which had been pulsing quietly away to itself, jerked in rhythm. When he stopped shaking, it stopped; when he shook it, it moved. \"What the hell is that thing?\"\n\n\"Remote control.\" He was grinning like a Cheshire Cat. \"I can change the intensity, and it even has an accelerometer. The possibilities are endless...\"\n\n\"Jesus Steve, what are you thinking of? \" I was by no means enthusiastic but we duly read the instructions and later that evening, more to humour him than anything else, we gave the thing a run out. The instruction book was full of great ideas about how the Lelo would enhance our sexual experience if worn while making love but to be honest it was just a pain. After messing about with it for a while, we abandoned it and Steve got down to some serious Valentine's day work with his tongue and cock, which was a lot more satisfying than the sex toy, despite its Swedish designed, re-chargeable, remote controlled, Bluetooth enabled wizardry.\n\n***\n\nAfter that night I didn't really think much about the Lelo, at least not until a few weeks later, when Steve was away on a business trip somewhere. \n\nAlone at home after a busy day I had been pampering myself and after soaking the cares of the day away in a lovely warm bath, I was massaging a richly scented body oil into my skin -- another present from Steve. Sitting naked on the bed in the warmth and privacy of my bedroom gently rubbing the warm oil into the soft skin of my feet, I began to feel the desire for a little bit deeper and more intimate pleasure. \n\n\"Why not,\" I thought to myself, it would relax me and help me sleep. I looked at my reflection in the long mirror which stood next to the door. I'll admit that I was pleased at what I saw. My skin had absorbed much of the oil and was taut and smooth, glowing with a healthy sheen in the subdued light. I turned to assess my silhouette. My breasts jutted forward, firm and well proportioned. I filled my palms with the warm oil and smoothed it into them, closing my eyes, enjoying the feeling of the sensuous self-massage. I took their weight in my cupped hands and gently pinched my nipples between thumb and forefinger feeling them swell and harden under my touch. My fingers still slick with oil, I turned to face the mirror and opened my legs. Running my forefinger down through the patch of downy hair covering my mound, I teased open my pussy lips. It was delicious, that first touch, as my fingertip found the tight little bud of my clit and coaxed it out from its covering fold of skin. I massaged myself gently, enjoying the bursts of sensation, growing in intensity as my fingers did their work. With my other hand I continued to work on my breasts, enjoying the heightened sensitivity of my skin as I became aroused. After a few minutes I reached over and opened the drawer in the bedside table where I kept my handy little dildo, sliding my fingers beneath the carefully folded underwear, trying to locate it. Instead of finding the familiar shape though, my fingers closed over the box containing the Lelo -- which I had popped into the same drawer. \n\n\"Well,\" I said to myself, \"might as well give it a try.\"\n\nI opened the box and took the toy out. It looked quite cute sitting there in my hand. I switched it on for a second to test it and it pulsated briefly against my palm. Satisfied that it was working, I took out the remote control and placed in within reach. Then, leaning back against the pillows, lifted my legs up onto the bed and spread them wide, watching myself in the mirror as I slowly pushed a finger deep into my pussy. I was very wet - the last few minutes of self-stimulation had taken care of that. \n\n\"No lube needed then,\" I whispered to myself and eased the smaller end of the LELO into my pussy. Spreading my labia with the fingers of one hand, I pushed the LELO deeper inside so that the larger end pressed right up against my exposed clit. It felt cool and hard against my soft warmth. I relaxed against the pillows and picked up the remote. \n\n\"Here goes,\" I thought, and pressed the 'on' button.\n\nThe orgasm, when it came, was a good one. Not the most earth shattering climax I had ever experienced but deep and powerful enough. I had expected the Lelo to be 'hands free' but it wasn't; to get the sensations I wanted I had to press it against my clit and move it around a bit -- even though it was capable of quite vigorous vibration. What did impress me was how quiet it was, I found it rather spooky actually; I was used to my cries of passion being underpinned by the friendly buzz of my plain old vibe. Just hearing myself moaning with pleasure at increasing volume and frequency as the Lelo silently did its work was a rather different experience. \n\nAs I finally stretched myself out in bed, luxuriating in the feeling of the cool cotton sheets against my skin, still sensitized by my recent orgasm, I decided that the Lelo might have been a good investment after all. \n\n***\n\nThe Lelo and I got to know each other a little better over the next few months. It replaced the old vibe in my affections and became my preferred boyfriend-substitute when the real thing was not available. This was still not something that I wanted to share with Steve and, as he didn't mention the Lelo again, I did not volunteer any further information on the subject. Things would probably have proceeded in this basis ad infinitum had it not been for the Great Bet.\n\nTo say that both Steve and I are opinionated would be something of an understatement. I operate on the principle that things are to be done in one of two ways; my way and the wrong way. There have been a few occasions on which Steve has unwisely disagreed with this stance and in such circumstances it had become our custom to engage in a small wager on the outcome. \n\nMoney does not change hands, you understand, that would be vulgar. Instead the stake will take the form of a penance, some minor inconvenience to be performed by the losing party. Steve had to do the washing-up for a week when he foolishly opined that the weight of my suitcase exceeded the baggage allowance of the airline on which we were about to depart for a weekend break. \n\n(I now, in front of you, freely confess that the reason I was so confident in taking up this challenge was that I had already weighed the case on the bathroom scales). \n\nOn another occasion he agreed to take me to any restaurant of my choosing, were he to be proved wrong on some trivial matter. Of course he duly was and I picked the Fat Duck, not because I particularly wanted to eat snail porridge or cabbage ice cream but in the hope that the astronomical bill would cause him to see the error of his ways: It didn't. I can't even remember the disagreement which resulted in The Great Bet. It was certainly something trivial because it was only over trifles that we would resort to this form of sport. In this case I was particularly sure of myself and it was I who initiated the idea of the bet.\n\n\"A weekend in Paris says I'm right,\" was my, in retrospect, rash proposal. He thought for a few seconds. \n\n\"I'll take you to Paris if you're right,\" he said, \"but if I win...\" he paused. \"Have you still got the Lelo Tiani?\" \n\n\"Er, yes,\" I was a little cagey, unsure where this was going. I kicked myself mentally, I should have told him I'd sold it on eBay. \n\n\"Right, a trip to Paris if you win. If I win, you wear the Lelo to the next dinner party we're invited to and I get the remote control.\" \n\nMy heart sank. The devious bastard had me over a barrel. His smirk said it all. I would either have to back down from the bet or run the risk of being the victim of his perverted scheme. \n\nReneging on the bet was out of the question -- especially as I'd started the whole damn thing. How sure was I that I would win? My prior certainty was suddenly assailed by doubt, but it didn't matter anyway, I had to go ahead or I would never live it down. All of these and other, more murderous, thoughts raged through my head until, stung into action by the unbearable smugness of Steve's expression, I uttered the fateful words.\n\n\"You're on!\" If I was feeling uncertain I was careful not to let it show and the detailed negotiations started. \"I choose the hotel\", played against, \"I get to check it's fully charged and switched on.\" \n\n\"Business class flights,\" were traded for, \"I check the installation.\" \n\nCheck the installation! Jesus, he made my pussy sound like one of his stupid engineering jobs. \"One orgasm... No Steve, ONE orgasm and then I switch it off.\" This was a sticking point, but he realised he was pushing his luck in expecting me to wear the Lelo for the entire duration of the party.\n\n\"No we are not having a rehearsal,\" I put my foot down. \"You'll have to learn on the job.\"\n\n\"Can I pick your dress then?\" This was a bit of an odd one. \n\n\"Steve, why would you want to choose my dress?\" I was puzzled.\n\n\"You're always asking me what I think you should wear,\" he replied.\n\n\"Yes Steve, but you and I both know that when a woman asks a man what she should wear she is not seeking advice. The correct response to such a question is, 'Darling, whatever you wear you will look wonderful', or words to that effect. Everyone knows that.\"\n\nDespite some misgivings, and with a few caveats, I gave way and agreed that Steve could pick my dress and on that note we finally agreed terms and shook hands, the traditional and irreversible sealing of the pact.\n\nMy fate was decided within a few seconds of internet access on Steve's iPhone. That was all it took. For once I was wrong, wrong, WRONG. To give him his due, Steve was magnanimous in victory. He did not, as I expected, gloat over me; well not as much as he could have. \n\nAll he said was, \"I knew we'd find a way to have some fun with the Lelo,\" and then, with a knowing smile, \"I'll make sure you enjoy it!\"\n\nLater, alone, I pondered on this. My abiding suspicion was that Steve had bought the Lelo with precisely such a plan in mind. When I proposed the bet, he hadn't had to think for a second about what he wanted. He had planned this, I was sure of it. This was some fantasy of his that muggins here was now going to play out for him. \n\n***\n\nDamage limitation was now the name of the game. The deal was, 'The next dinner party' and as it happens we had nothing in the diary. I certainly had no intention of waiting for a random invitation. My parents could easily call and invite us to one of their ghastly 'dining club' evenings where we would have to deal with their circle of friends, consisting almost exclusively of professors of this, doctors of that, with the odd architect and lawyer thrown in. My parents had a habit of ringing the house, not my mobile, and if Steve picked up he'd accept any invitation like a flash. That would set the cat among the pigeons. The darling daughter having an orgasm during the cheese course would be a change from the usual discussion of the latest exhibition at Tate Modern. As soon as I could, I called the only person I knew I could rely on in just such a crisis as this.\n\n\"Roz, I need you to invite us to dinner, I need you to do it quickly and the party has to be as-soon-as, if not sooner.\" Was I babbling? Even I thought so.\n\n\"Okaaay,\" was her rather puzzled reply, \"are you going to tell me why?\" I confessed all. The whole sorry tale.\n\nThe Cow. I thought she was going to suffocate. I swear to God she laughed so much that she couldn't speak for ten whole minutes and even then her first words were not comforting.\n\n\"I think I pee'd myself,\" she said, bursting into a further bout of unseemly mirth. Patiently, I hung on the line, waiting for my oldest and dearest friend to get it out of her system and, thank Heaven, once she regained the faculty of speech, she came up trumps, agreeing to send an invitation for the following week, just as soon as we got off the phone.\n\nThere was a bit of a spat when she insisted on extending the invitation to a group of our close friends. I had assumed that we would have small soiree with Steve and I, Roz and her husband, Dave. Obviously I was not looking to play to a big audience. \n\n\"Roz, you can't,\" I pleaded, \"you know I'm a screamer.\" \n\n\"Oh, yes,\" she said, \"I remember all those nights of passion in the flat when you and Steve first got together. The walls were very thin, I don't think I had proper night's sleep for six whole months.\"\n\nIt's true. I climax noisily. I can't help myself and, of course, Steve knew it. He was going to do his best to make sure I came at the most inopportune moment and he knew that there was a good chance that it would be a noisy affair. In her defence, Roz made the point that the more people there were, the greater the background chatter, the less likely I was to be noticed. I was highly sceptical. How much dinner party conversation would it take to disguise the fact that one of the company was having a screaming orgasm? More than is traditional at the dinner parties I normally attend, that's for sure. But Roz was not to be moved. \n\n\"It's my dinner party, which I am arranging at short notice to get you out of a jam. I will chose the guests, \" she said, and then added, \"By the way, you don't think by any chance that Steve is on the phone to his Rugby club chums to see if any of them might be in the mood for hosting a more-than-usually intimate dinner, do you?\"\n\n\"Oh My God!\" The thought had not occurred to me. Of course he bloody well would. He was probably on the phone right now trying to arrange a hideous gathering of his mentally sub-normal mates and their WAGS, with me as the entertainment. I shivered as the full horror of the situation sank in. \n\n\"You're right. You can invite the staff from Tesco and the band of the Coldstream Guards if you must but get that invitation out in the next five minutes. Roz, I am depending on you as my oldest and most cherished friend, don't make this any harder for me.\" \n\nI must have sounded as pathetic as I felt because she took pity on me. \n\n\"Leave it to me Louise, I'll think of something,\" she said before hanging up. Sure enough, within a few minutes, my phone pinged and an email from Roz, inviting us to dinner the following Saturday popped onto the screen. Nothing from Steve, or any of his pals. I had got in first. I sank back into my chair and closed my eyes, my head spinning with relief and, definitely there, lurking in the shadows; excitement.\n\nOver the next day or so it became apparent that I had misjudged Steve as we received no other invitations. This could, of course, be because none of his, so called, friends could get their act together or -- and I chose to give him the benefit of the doubt -- it had not occurred to him, as it had to me, to give fate a helping hand. ",
        "Having sorted out the date and time, and with the guest list in Roz's capable hands there were a couple of things I needed to sort out. Steve was going to pick the dress but I needed to know in advance what I would be wearing so I had time to sort out the rest of my outfit. For all I knew Steve would pick something I had no shoes or bag for. And, although I'd flatly refused to submit to Steve's proposed rehearsal with the Lelo, I fully intended to try it out myself before the 'live performance'. I was by now familiar with the feeling of the Lelo while lying naked on the bed but I would be sitting, standing and wearing clothes on the night of the party. I had to know what to expect and, please God, learn a degree of self-control before Saturday. \n\n***\n\nI got the opportunity to give the Lelo a test run rather sooner than I expected. The following day I got a phone call from Steve to say that he had been summoned to some sort of crisis meeting in Brussels and was, even then, on his way to the airport. I had an unplanned evening to myself so I rang Roz and invited her over to help me out. I needed a substitute for Steve as remote control operator. \n\nOnce again she seemed to find the whole thing rather more amusing than I did but she agreed to ditch her Zumba class in favour of a glass or two of wine and a session as 'Lelomeister' as she so quaintly put it.\n\nBefore you get the wrong idea about Roz and me, I need to give you a bit of history. We first met at university, starting on the same day and meeting at a fresher's party in our first week.\n\nWe hit it off immediately, had a great deal in common and became extremely close friends. We shared a flat together and supported each other through the trials and tribulations of college life and beyond. There were drunken nights, exam pressures, boyfriend problems, family crises and all the usual joys and sorrows of two young women finding their feet in the world. Our friendship has withstood the test of time, Roz' marriage to Dave and my long-term partnership with Steve did not get in the way and, although we no longer see each other as often as we once did, we are still as close as ever. While I consider myself not-bad looking, Roz is drop-dead gorgeous and always has been. What's more she knows it. She is brazenly provocative in a way that I could never be. If the positions were reversed and Roz had lost the bet, she would likely insert the Lelo at the dinner table and pass the remote around to see who could give her the best time. \n\nTo give you some idea of what she's like let me tell you about 'Stiffy', the game she invented during the long, hot summer of '96 not long after we left university. \n\nWe were both starting out on our careers, sharing a flat together and commuting into London every morning by train. On one particular morning, Roz and I were sitting together minding our own business when I realised that the guy sitting opposite appeared to be mesmerised. He could not take his eyes off Roz. This was not all that unusual, Roz was, as I just said, a Looker. \n\nWhat's more she habitually dressed to cause a stir. That day she wore a thin, white cotton blouse over a short navy skirt. I hardly ever knew her to wear a bra and that day was no exception. She had great boobs, and the thin blouse did little to disguise them, especially as Roz apparently had problems doing-up buttons. As I watched, the boy opposite became more and more uncomfortable, shifting his hands in his lap and folding them together to cover up an increasingly obvious erection. I turned to look at Roz, she was apparently lost in a daydream but, in an absent-minded sort of way, the ring finger of her right hand had disappeared between the buttons of her blouse and was gently stroking her left breast, just below the nipple. \n\nShe caught my eye and with a slight raise of the eyebrow, let me know that far from dreaming, she knew exactly what she was doing, and the effect it was having on the stranger opposite. I was, frankly, rather shocked, especially when Roz slowly leaned back in her seat, stretching the thin material of her blouse over her nipples -- which stood proudly erect, thanks, do doubt, to the work of her own teasing fingers a few moments earlier. \n\nI watched a bead of perspiration trickle from the temple of the hapless victim and it was not just the weather that caused his temperature to rise, of that I was certain. \n\nAt this stage proceedings were interrupted as the train pulled in at my stop. I grabbed my bag, and with a, \"call you later\", to Roz, accompanied by what I hoped was a warning look, hopped off the train. \n\nIf Roz had detected my disapproval she showed no signs of remorse when we met that evening for an after-work glass of wine.\n\n\"What do you think you were playing at?\" I asked, when we were seated at our quiet corner table. \"I don't know what you're talking about,\" she replied, as though butter wouldn't melt in her mouth.\n\n\"On the train this morning,\" I insisted.\n\n\"I was playing Stiffy, \" was her enigmatic response.\n\nThis was my introduction to Roz's invention -- the game of Stiffy. After my initial shock I saw the possibilities and under Roz' patient tutelage became reasonably adept at playing it, although I never approached her skill and daring. \n\nWe refined the rules of Stiffy over time but the basic object of the game was to cause an erection in some poor, random male. Points were awarded for various achievements, one point for the basic task of causing a visible erection, up to a maximum of 10 points when the victim appeared to have missed getting off the train at his stop, either being too distracted to notice, or (even better) too embarrassed to stand up. \n\nI never scored a 10, but Roz maintained that this is mainly down to my poor choice of victim and not to any shortcomings in my looks or ability to use my charms. Roz, of course, scored a 10 at least once a week. We had a lot of fun over that summer, playing havoc with the testosterone levels of unwitting members of the male of the species. \n\nLooking back it's amazing we got away without being attacked but it seemed rather innocent to me at the time. \n\nIt's true that Roz has calmed down a little with age, but you now know the tenor of the woman that breezed into my flat clutching a bottle of chardonnay and kicked off her shoes before throwing herself onto my sofa. \n\n\"Get me a drink and that remote control, honey. I'm just the girl to Turn-You-On,\" was her command before she collapsed in a fit of laughter.\n\n***\n\nIt took a glass of well-chilled white and the pained expression on my face to make her treat the situation with the gravity I felt it deserved and eventually she became efficient and practical. \n\n\"Go get the thing and let me see how it works,\" she ordered. I brought it from the bedroom and showed her. She was suitably impressed as I held the remote and she held the business-end between her fingers.\n\n\"Have you used it?\" She asked.\n\n\"Of course I have,\" I replied, resolving to put embarrassment to one side. \"I use it to masturbate on a regular basis but not with someone else in control and always lying down, not standing or sitting. I don't know what to expect.\"\n\n\"Only one way to find out girl,\" she said, \"go put it in and make sure you have on the panties that you'll be wearing on Saturday. You need them to be tight enough so this little baby doesn't come out and that might make a difference to how it feels.\"\n\nShe was right. I hadn't given any thought to my underwear and I rummaged through my drawers to find a pair of panties that seemed fit for purpose. This was not going to be an occasion for the thong. I switched the Lelo to remote mode so that it was still, but could be activated via the external control, and, rubbing a little lube on both ends, inserted it into my pussy easing its small globular tip between my inner lips so that it rested snugly against my clitoris. \n\nI pulled on the selected panties and stood up, smoothing my dress down over my thighs. The panties held the Lelo firmly in place and I could feel it there, tight up against my clit. \n\nI took a few tentative steps. The act of walking had an effect, the Lelo gave my clit a gentle massage as I moved. It was far from unpleasant but walking around the bedroom a few times provided reassurance that without additional stimulation there was no danger of me climaxing. Walking downstairs was slightly more interesting, each step provoking a delicious little nudge from the Lelo. Maybe more delicious than I thought because Roz took one look at me as I walked into the sitting room and giggled. \n\n\"Hey girl. I haven't even switched it on yet and look at you!\" We both laughed and I took a sip of my wine. I felt more relaxed then and a little excited too. I experimented; sitting on the sofa, on dining chairs at the table and walking about. \n\nWith the LELO on standby it was pleasurable but nothing to write home about so, after taking a few minutes to get used to the novelty of the sensation, I turned to Roz.\n\n\"I'm as ready as I'll ever be. Think yourself into Steve's twisted mind, what will he do?\" Roz thought for a moment. \n\n\"He's going to tease you as much as he can. He'll string it out, starting the moment you leave home. He'll want to keep you on the edge so he can control when you finally cum and, if I know Steve, that's going to be right in the middle of dinner. That's when everyone will be together and you'll be the centre of attention.\"\n\nAs Roz said it, I knew she was right. \n\n\"That's it!\" I said, \"he's going to wait for a lull in the conversation and, Pow! Louise gets to break the silence by having an orgasm. Jesus, I see it all.\"\n\nRoz burst out laughing. \"Forget the preamble then, you can manage that. Sit at the table, let's just see how good it's going to be.\" I leaned over to pick up the bottle of wine and Roz gave me a quick, burst which took me by surprise.\n\n\"Ahh!\" I let out an involuntary gasp as the Lelo came to life between by legs.\n\nRoz turned me off. \"You need to learn to take your pleasures in silence,\" she shook her head in mock disapproval, and turned the Lelo on again. \"Ohhh!\" I couldn't stop myself. It felt good. My panties held the LELO in the perfect place, my G spot and my clitoris were simultaneously getting massaged and the combination was a powerful stimulant. \n\n\"Better get used to it baby,\" Roz smiled ruefully, \"this is what Steve is going to put you through.\"\n\n\"Jesus, I hope so,\" I whispered, more to myself than to Roz. The Lelo was working its magic, I felt myself flushing as the pleasure mounted, spreading from the gently pulsating device. My whole body was becoming sensitized. Even the feel of the rough pile of the carpet against the soles of my feet as I walked up and down the room was enough to set my nerves tingling. \n\nI sat down on the dining chair breathing deeply, desperately trying to disguise my rising libido but the pressure of the Lelo on my clitoris increased when I was seated and the waves of sensation emanating from between my legs became more intense as a result. Roz sat down opposite me, watching my face carefully.\n\n\"You look as though you're having a good time,\" she said after eyeing me up and down.\n\n\"I... am... having....Ahhh... a good ... time,\" I managed to get out between barely suppressed moans, \"switch...the...damn thing...Ohh... off!\"\n\nShe laughed. \"No chance Louise, I'm enjoying this,\" she paused, \"but not half as much as you seem to be. I think I'm going to get myself one of these Lelo things.\" She held up the remote control as if to tease me. \"It's not even turned up full.\"\n\n\"Don't...you...Aaahhhh... dare!\" I managed to get out, but with a gleeful grin she tweaked the button on the remote, the vibrations redoubled in power, and I was gone. \n\n\"Oh God....Oh God.....yes...yes...YES...\" I was incoherent as the waves of orgasm overtook me. Roz looked on with a mixture of amusement and awe written on her face as wave after wave of pure pleasure coursed through my body. It was not just the noise, not only did I fail to suppress my passionate cries, but I could feel my whole body stretch and release in rhythm with my climax.\n\nCarried away on the river of sensation I curled my toes into the carpet, arching my back against the hard dining chair, clenching my thighs, squeezing the last ounce of feeling from the tiny wonder between my legs. \n\nMy nipples, hard and hyper-sensitive thrust against the thin material of my T-shirt, calling for attention. I did manage to restrain myself from actually taking them between my fingers and giving them the squeezing that they so much wanted, but it was a close run thing.\n\nAs the bursts of sensation gradually became less powerful, my incoherent cries waned in volume and my body became more my own. \n\n\"Turn it down,\" were the first coherent words I managed. Roz complied immediately, and the Lelo's movement declined in intensity. I rested back in my chair, eyes closed, enjoying the feeling of release as my orgasm subsided. Roz waited a minute or two, before she spoke. \"Had enough girl?\"\n\n\"Yes, turn it off,\" I had certainly had enough. The vibrations were now a distraction and it was a relief when Roz switched the Lelo off. I relaxed into the immediate post-orgasmic glow, my mind for a moment still. We were both quiet. \n\nI opened my eyes after a few moments, Roz was looking at me in a new and wondering way. I suddenly felt very close to her, I had performed, if that's the right word, a very intimate act in front of her. She had, I supposed, taken an active role even if it was by proxy. By the look on her face she felt the same way. There was a softness to her eyes that told me that behind her mask of humour and bravado she was touched. She spoke first, her voice was gentle.\n\n\"Wow Louise that was something else.\"\n\nI felt the need to hold her so I stood up, feeling a little light headed. The movement, with the Lelo still in-situ, sent another small frisson of pleasure through my already sensitised pussy. She came round the table and we hugged each other, as though cementing the new bond of intimacy that had been created between us. \"Let me go take the Lelo out and then we'll talk,\" I said, heading for the door. I did not want to walk upstairs with the Lelo inside me. Even the walk across the room was a bit uncomfortable, so I paused in the hall just out of Roz' sight. \n\nI pulled up my skirt, slipped my soaking panties to one side and eased the Lelo out of my pussy. I switched it off and disappeared upstairs to the privacy of my bedroom.\n\n***\n\nTen minutes later, cleaned up, I returned to the living room to find Roz sitting on the sofa deep in thought. I refilled my wine glass and made myself comfortable at the opposite end of the sofa.\n\n\"Now what?\" was my opening gambit. \n\nRoz smiled. \"Yes, that's what I was wondering,\" she paused. \"Louise, can I say something?\"\n\n\"Of course,\" I said, \"whatever you like.\"\n\n\"You're beautiful,\" she almost whispered. This was not what I was expecting, it was not like the Roz I knew and I wasn't sure what to make of it.\n\n\"Well thanks...er, what brought that on?\" Was all I could think of to say.\n\n\"It's just that you're so in control normally. Watching you come like that, so wanton, so much outside yourself, I saw a part of you that I haven't seen before. Not in all the years I've known you.\"\n\nI was touched, and I felt very close to Roz, but I needed the practical, dynamic Roz at that moment, not this new dreamy woman. \n\n\"No. It's the same old me, \" I said, It's just that I don't make a habit of having sex with a bit of Swedish plastic while my best friend looks on.\"\n\nShe burst out laughing and the old, familiar Roz was back. \n\n\"No, I don't suppose you do. But you're going to have to do it again on Saturday in front of a room-full of people.\" Roz looked sheepish. \"I'm sorry now that I invited a crowd of people. I really did think that you'd be able to cum without being noticed if there was a lot of background noise but if today's performance is anything to go by that's not going to happen is it?\"\n\nI didn't think so either. \n\n\"No it's not. Once I get to a certain point I lose control. I'll probably manage to be a bit less vocal, but not much.\" \n\n\"And acting like someone having a seizure?\" \n\n\"The same probably.\"\n\nRoz became business-like. \"I thought so. We need a plan B.\" She was silent for a moment or two, obviously deep in thought. \"I don't suppose you fancy taking the direct approach? Just announce the whole thing to the room as soon as you walk in. You tell Steve to do his thing. You provide the entertainment then we just sit down to an enjoyable dinner and put it behind us.\n\nMy look must have been sufficiently clear to communicate what I thought of this idea.\n\n\"Ah, well, no, perhaps not then,\" she said hurriedly. \n\nBy the end of the evening though, despite having consumed the best part of a bottle of wine each, we still had no firm idea of how we were going to manage things at the dinner party. Any faint hope I had of being able to maintain my composure under the tsunami of sensations that the Lelo induced was gone. I was mortified at the thought of revealing my most intimate self to even the small circle of friends that Roz had lined up but I could not think of a way out. \n\nRoz, I was sure, was in two minds. On the one hand I think she felt for me but, on the other, she had at no time suggested trimming down the guest list, it would have been relatively easy to come up with an excuse. So some part of her was looking forward to the show. \n\nI was not wholly reassured therefore when she said, \"don't worry, I'll think of something,\" as she planted a parting kiss on my cheek, and left. I shut the door behind her and went to bed feeling decidedly tipsy and still deeply worried about the prospect that faced me, only few short days away.\n\n***\n\nSteve arrived back from his trip to Belgium the following evening and we had a pleasant enough dinner, exchanging our news over a simple meal. I told him that I had spent the previous evening with Roz but neglected to go into the finer details of our time together and he did not press for information. Once we had cleared away the dishes we went through to the sitting room and there, waiting on the sofa, was an elegantly wrapped parcel.\n\n\"It's for you,\" was Steve's response to my questioning look. \n\nI carefully untied the ribbon and removed the paper. Inside the box, carefully wrapped in tissue paper, was a dress; and what a dress! Steve had chosen my favourite colour, it was a rich blue which complemented my auburn hair perfectly. I took the garment carefully from the box. Made from a smooth satin fabric, it flowed over my hands as I held it up for closer examination.\n\n\"It's the dress for you to wear on Saturday,\" Steve watched me closely as I examined the vision in partywear that he had given me.\n\n\"Wow Steve, I expected you to pick something from my wardrobe, not go out and buy something new. This must have cost a fortune.\" I had just caught a glimpse of the designer label. I stood up and unfolded the dress.\n\n\"It wasn't cheap,\" he admitted, \"but I thought you'd look good in it.\"\n\nI held the dress up. He was right, I would probably look good in it. There would certainly be plenty of me on show. The dress was far more revealing than anything in my current wardrobe. The length of the dress was fine, it was short but not too short. The top was a different matter. The dress was backless and the front consisted only of two narrow strips of fabric running from the waistline to fasten in a halter neck style. It would leave very little to the imagination. \n\nI was speechless. It was a beautiful and no doubt expensive dress which in other circumstances I would have been delighted to receive but it was absolutely not what I would have chosen to wear for a dinner party, and particularly not for my forthcoming ordeal. It was absolutely guaranteed to make me the centre of attention, just when I was hoping to blend into the background. ",
        "\"Are you going to try it on?\" Steve asked, before I had a chance to even say thank you.\n\n\"Steve, it's lovely, but I'm not sure it's going to be right for Saturday.\" \n\nAny faint hope that he would take pity on me, was immediately dashed.\n\n\"It will be perfect,\" he said firmly, \"especially as the deal is that I get to choose the dress.\"\n\n\"Let me try it on then,\" I was resigned. \n\n\"And no, you can't come and watch, I'll come down when I'm ready and I'll wear it on Saturday, but only if it fits properly.\"\n\nI took the dress to my bedroom and stripped down to my panties. The dress could not be worn with any sort of bra, it was cut too low in both back and front. I stepped into the dress and pulled it up, reaching behind to fasten the small clip that held the dress in place at the nape of my neck. The cool satin was like a second skin, flowing over my body in a sensuous wave. I turned to face the mirror. The dress fitted perfectly, it could have been made for me and its colour was ideal for my skin and hair colour. I did a little twirl and looked over my shoulder. Although I say so myself, I looked fabulous, the only problem being that I was more-or-less naked from the waist up. The dress had no back and with the deep slash down the front, my breasts were barely covered. It was far more daring than anything I had ever worn outside the bedroom. I lifted my arms above my head, the shape of my breasts was clearly outlined against the sheer satin. I was decent, but only just. \n\nI sat on the bed, needing moment or two to collect my thoughts before I went downstairs to give Steve his fashion show. Could I go through with it? If I was going to pull out now was certainly the time to do it. I felt out-manoeuvred and exposed, literally and metaphorically, but on the other hand I have never been one to quit and the need to complete what I started was very strong. Added to this, already heady, mix, was something I could hardly bring myself to acknowledge, that small part of me that envied Roz' smouldering sexuality and wished I was more like her. \n\nStanding up I walked to the mirror and turned slowly round. I liked what I saw, the sexy, confident woman looking steadily back at me from the glass. I had a great body, why not show it off? Suddenly, it was as though a light bulb had been switched on in my brain. I knew how to handle the party, and Steve. At last I had a plan. All of a sudden I felt in control.\n\nI delved into the bottom of my wardrobe, looking for a pair of shoes. I knew I had some that would go with the dress, if only I could find them. Eventually I found the box, buried at the back. I put the shoes on and admired the effect in the mirror. Three inch stiletto heels and horribly uncomfortable but they were the perfect foil for the dress. Steve was in for a treat. \n\nI headed downstairs and made my entrance. \n\n\"Wow!\"\n\nIf Steve had been a cartoon character his eyes would have popped out on stalks at this point. Being merely human he just stared, mouth half open, as I entered the room. He looked me up and down and I gave him a catwalk twirl. I had no idea what fantasy he was living when he bought the dress but I clearly lived up to it.\n\n\"You are GEORGOUS! \" He said. \n\n\"I am,\" I replied. \"This outfit will be absolutely perfect for Saturday.\" \n\nAt this Steve looked puzzled, but also relieved.\n\n\"Oh, er... great,\" he hesitated. \"You sound surprised,\" I had him on the back foot.\n\n\"Well, yes, I suppose I am a little,\" he was thoughtful, \"I kind of expected you to be a bit, you know...\" he trailed off.\n\n\"No, I don't know. A bit what?\" I was not going to let him off the hook.\n\n\"Well, sort of... resistant,\" he said.\n\n\"You mean resistant to having dinner with friends wearing a dress that reveals more of my body than my bikini, or resistant to having an orgasm in front of said friends?\" \n\nSarcasm may well be the lowest form of wit, but it can be very satisfying.\n\n\"A bit of both, I suppose.\" \n\n\"No Steve, I'm looking forward to it,\" I was firm, \"it'll be a new experience; for everyone in the room probably. Now come upstairs and you can help me out of this dress.\"\n\n***\n\nAs soon as I could the following morning I got on the phone to Roz. I told her about the dress. \n\n\"Jesus, Louise, I can hardly wait to see you in it.\" Her reaction was entirely predictable. \n\n\"You'll see me tomorrow and you'll be amazed,\" I was business like. \n\n\"Roz, I need you to get in touch with the girls and tell them to dress sexy -- tell them it's a theme for the evening or something. I don't even need to ask you, you always dress to kill.\" \n\nSomething in the tone of my voice must have told Roz that I was telling, not asking, because she agreed without question. \"And another thing, I want you to sex the place up. Candles, music, whatever you've got.\" \n\nAgain she agreed readily. \"You have a plan don't you?\" Roz interpreted the signs.\n\n\"Yes, and I'm not going to tell you what it is, but just follow my lead, alright?\"\n\nShe giggled, \"I am at your command.\" We both laughed.\n\nI knew Roz would do what I asked. It would suit her down to the ground to create a bit of erotic charge, and she was an expert in the field. I left work a couple of hours early and went shopping. I wanted some gold body sheen and two pairs of panties that would not show beneath the clinging satin of the dress. Based on the experience from the rehearsal, I expected to have to change them during the evening. \n\nI went home and tried on the whole outfit, including the Lelo. Call it a dress rehearsal . By the time Steve came home I was soaking in the bath, relaxed and satisfied, the panties were in the washing machine and the Lelo was back in its box. I was ready. \n\n***\n\nSaturday arrived and we spent the day pottering about doing the usual stuff. In the morning I took Lelo out of the drawer and passed it to Steve. \n\n\"You'd better make sure it's charged. I don't want it running out on me half way.\" I was nonchalant. He looked a little surprised but took the box from me and busied himself plugging the thing in. \n\n\"Don't forget to charge the remote as well,\" was my parting shot as I disappeared to have my nails done.\n\nRoz had invited us for 7:30 so it was late afternoon when I started to think about getting ready. I filled the bath, adding my favourite French Lime Blossom scented oil. I got Steve to open a bottle of Cava and he brought me an ice cold glass while I soaked myself in the warm, fragrant water, I emerged an hour later wrapped in a warm towel, exfoliated and glowing. \n\nI dried my hair and put on my makeup while Steve was in the shower, then turned my attention to the small pot of body sheen that I had acquired the previous day. I was sitting on the bed, smoothing the cream into my body when Steve came into the room, still towelling his hair dry. \n\nHe watched me as I finished applying the cream to my arms and turned my attention to my torso. \n\n\"Hey I can help with that,\" he said as I began to massage the cream between and over my breasts.\n\n\"You can do my back if you like,\" I offered, and he wasted no time in taking a blob of the cream and spreading it over my back. I let him smooth the cream on my back and sides, enjoying the massage. \n\nWhen he had completed the job to his satisfaction I got up from the bed, let the towel drop from my waist and stood naked in front of the mirror, twisting round to check that the cream was evenly distributed. \n\nIt was fine, the upper half of my body shone with a subtle golden sheen which would enhance the rich hues of the dress. It was time for the Lelo. \n\nI turned to Steve who was watching me as though he hadn't seen me naked a thousand times. \n\n\"Pass me the Lelo,\" I said. He unplugged the thing from its charger and passed it over. I switched it on. \n\n\"Check it's working before I put it in,\" I told him. Steve picked up the remote and switched it on. The Lelo sprang to life in my hand. \n\n\"OK, switch it off while I put it in.\" I opened the drawer looking for the tube of lubricant, while Steve looked on goggle eyed. Then a thought struck me. \n\n\"I need a bit of lube to get it in. Why don't you oblige?\" Steve looked puzzled. I stuck my tongue out and he got the message. \n\nI stood next to the bed and lifted one foot onto it. Steve knelt on the floor between my splayed legs and began licking me. His probing tongue soon found its way, sliding between the inner lips of my pussy and I moaned softly as he sucked on my clit. I toyed with the idea of allowing him to take me all the way to orgasm. It was tempting but I decided to wait and, pushed him away after only a minute or two. He sat back panting slightly. The tell-tale bulge beneath his towel was inviting but off-limits for at least the next few hours. \n\nI took the Lelo and pushed it gently into my pussy, now beautifully open and moist. It slipped in easily and I pressed its curved end tight up against my clit. My new, specially acquired, panties held it firmly in place and I enjoyed the gentle stimulation it delivered as I padded across the room to get my dress. \n\n\"Steve, I'll be ready before you, for the first time ever,\" I said to the hapless man who stood gawking like a schoolboy as I took the dress off its hanger. He snapped out of his trance and began to pull his pants over his still firm erection. \n\n\"Shit Louise,\" he said, panting slightly, \"I don't even want to go to the party now, I just want to lay you over the bed and lick all that cream off you.\"\n\n\"Forget it.\" I was firm. \"It's probably poisonous anyway. You're strictly on remote control duty tonight and, you seem to forget, it was your idea in the first place.\" I stepped into the dress as I spoke and carefully pulled it up, fastening the small clasp behind my neck. The delicious smoothness of the satin brushing against my nipples sent a shiver through my body. I was already feeling hot and we had not even left the house.\n\nSteve dressed in a hurry while I slipped into my shoes and wrapped myself in my pashmina - which served the dual purpose of keeping me warm and preserving my modesty during the short taxi ride to Roz' house. \n\nThe taxi journey proved to be quite an interesting experience. As before, sitting down tended to increase the pressure of the Lelo's tip against my clit. Add to that the movement of the taxi as it negotiated the various bumps and potholes that characterise the streets of the City in these days of economic austerity. Further add Steve's teasing bursts of remotely induced vibration and you will perhaps begin to understand the taxi driver's puzzled looks in the rear view mirror at the intermittent and greatly muffled squeaks from his female passenger and the fiendish grin on the face of her partner. \n\nI don't know what he thought but I was glad of a few moments of respite, standing in the cool evening while Steve paid the fare, exchanging pleasantries with the driver.\n\n\"Bastard,\" I hissed, as Steve joined me at the bottom of the short flight of stairs leading to the front door of the elegant Georgian terrace that Roz called home.\n\n\"I love it when you talk dirty,\" he grinned at me and gave me a blip on the Lelo. \n\nMy squeal of surprise was drowned by the noise of passing traffic and two minutes later we were inside, the last to arrive as usual. Our welcome from Roz and Dave was effusive as we embraced and made the usual introductory smalltalk. \n\nI was pleased to see that Roz had not let me down. She wore a low cut, short, black number which emphasised her voluptuous figure to the full. Sexy it certainly was and I hoped my message had been relayed to the other girls, waiting to greet us in the living room. \n\nAs soon as she decently could, Roz shooed the boys away in the direction of the drinks and they left us without demur.\n\n\"Let's see you under the pashmina then,\" she said as soon as we were alone. I unwrapped myself and allowed the warm garment to slip from my shoulders, revealing the full splendour of the dress.\n\n\"My God Louise!\" Roz gazed open mouthed, looking me up and down, apparently lost for words. When she eventually found her voice she gushed. \"It's gorgeous. You're gorgeous.... but...\"\n\n\"But what?\" I asked, unexpectedly put out.\n\n\"Well there's not much of it, is there?\" She laughed. \"Now I know why you wanted me to dress sexy.\" She looked down at herself and there was plenty on show to look at. She adjusted her top, exposing even more of her cleavage. \"I feel quite covered-up compared to you.\"\n\n\"Everyone is going to be covered-up compared to me, I know that. As long as they're at least flaunting it a bit I'll be fine,\" I was emphatic.\n\nRoz smiled, \"You'll be OK, the girls have followed instructions. The menfolk are not quite sure what's hit them,\" she paused, \"and when you walk in...well,\" she rolled her eyes and we giggled like naughty schoolgirls. \"Have you got the thing in?\" She asked. \n\n\"Of course I've got it in. I nearly came in the damn taxi. Steve's got the remote and he keeps giving me a little buzz. He must be out of range at the moment, or I expect I'd be getting remotely rogered as we speak. He wouldn't be able to resist it.\" I confessed then. \"I'm feeling really hot Roz, it's the slow build up, the dress, everything, every movement gives me a tiny little high. I think when my orgasm comes it's going to be one to remember.\" \n\nRoz shrugged her shoulders but remained silent, offering no comfort. I sighed, \"Might as well get the show on the road.\"\n\nMy entrance into the living room caused the anticipated stir. The hum of conversation died as I followed Roz through the door. The men stared goggle-eyed unsure where to look first. They didn't need to undress me with their eyes, I was already mostly undressed. \n\nSteve shifted his gaze from me to the other guests, smirking. Luckily I saw his hand reach into his pocket, so I was ready and able to stifle a moan when he switched the Lelo on. \n\nThat broke the spell. \"Hi everyone,\" I said brightly, \"Sorry we're a bit late.\" The chatter resumed and the girls gathered round. \n\n\"What a wonderful dress\"\n\n\"Wow Louise, You look fabulous.\"\n\n\"Very daring darling.\" \n\nI let the girl-talk wash over me, controlling the urge to scream as the Lelo continued to do its work. I looked round the room trying to distract myself. Roz had done a great job as I knew she would. There were scented candles, and music too. I giggled inwardly, Marvin Gaye's 'Lets get it on' was playing softly in the background, Roz and subtlety did not go together. \n\nA small bronze sculpture stood in one corner, depicting a naked couple with the man seated and the woman, head thrown back, sitting astride him, his face buried between her breasts. \n\nThe assembled company divided along gender lines with the men and women clustered in two small groups, each engrossed in their own conversations. Steve was obviously playing a waiting game. I could see his tactics. He kept the Lelo off most of the time, but periodically switched it on for 30 seconds or so. This had the triple benefit -- from his perspective -- of a) keeping me hot, b) preserving the battery for the main event and c) maximising the opportunity of my letting out an embarrassing and hard to explain squeak at the unexpected burst of activity between my legs.\n\nSomewhat to my surprise I found myself easily able to cope with this. True I did let slip the odd muffled squeal, attracting a quizzical glance or two along the way but nothing so overt as to merit comment. \n\nAfter half an hour of enjoyable chit-chat Roz disappeared into the kitchen and five minutes later we were summoned to the table. Our hostess, fussing around like a mother hen, arranged us round the table, alternating the sexes and making sure that nobody sat next to their partner. \n\nRoz sat herself opposite me, directly across the circular table and I found myself sitting between Dave, her husband, and Mark, who I only vaguely knew. Steve, much to his chagrin, was seated to the side where his view of the proceedings was less than perfect. He may not have been in optimal position but there was no doubt that Steve was easily in remote-control range. Almost as soon as we were sat down he switched the Lelo on. \n\nAs before, being seated pressed the Lelo more firmly against my clitoris, increasing the sensations centred on its gently vibrating tip. I found that by raising my feet on tiptoes I could lift my thighs a little way off the chair and reduce the pressure slightly. \n\nI slipped off my shoes and sat in this position, legs slightly apart trying to stem the slowly mounting river of feeling that I knew would eventually engulf me. \n\nThe starter was delicious, a delicate mixture of pink and white grapefruit with plump, juicy, king prawns on a bed of salad and carefully carved avocado pear. \n\nThe conversation slowed as we enjoyed the wonderful food. I focused on the explosion of flavour as a temporary distraction from the insistent pulse of the Lelo, working its magic down below, but, inexorably, my arousal increased. With only my toes resting on the floor my calf muscles began to ache with the strain but each time I tried to relax by placing my feet flat I was rewarded by a burst of sensation that I could not help but vocalise. \"Mmmm, mmm, lovely... \" I was able to translate my moans of pleasure into complements over the food. If I seemed a little over-enthusiastic nobody seemed to notice. There were similar expressions of approval from around the table. \n\nDave seemed oblivious, engrossed in a conversation with his other neighbour, but Mark sensed something was going on. He looked at me with a surprised expression after I allowed a particularly obvious whimper of pleasure to escape. \n\nI saw him look me up and down, his eyes lingering over the deep slash in my dress and the pale skin of my breasts revealed beneath. The twin peaks of my nipples, already rock hard and minutely sensitive, stretched the sheer fabric that covered them and Mark stared as though transfixed by the sight. He turned away quickly, when he realised that I had noticed his interest.\n\nPerhaps it was the wine, or maybe just devilment overcame me. Without looking at Mark I leaned forward, just an inch or two, but enough to allow the fabric of the dress to open up. I did not need to see his reaction to the glimpse of nipple that I had given him, the spluttering and choking noises that came from my right as he inhaled a slug of wine said all that was necessary. \n\nI thumped him on the back with an outer expression of concern while inwardly rejoicing at the effect my simple exhibitionist act produced.\n\nRoz pushed her chair back, ready to clear the starter plates away. I saw my opportunity and without even pausing to put on my shoes, leapt to my feet with an offer of help. Roz seemed about to refuse but she caught my eye and understood. \"Thanks, Louise,\" she said, \"please stay put everyone, only room for two in the kitchen.\" \n\nShe instructed Dave to deal with the wine and I gratefully followed her into the kitchen. \n\nMercifully, as the door swung shut behind us, the throb of the Lelo died -- I was out of range. \n\n\"Thank God,\" I breathed a sigh of relief and leaned on the kitchen counter for support.\n\nRoz looked me over. \"You look quite hot and bothered,\" she said with a wry smile, \"and what have you done with your shoes. \n\n\"I left them under the table.\" I held a hand up as I saw the question forming on her lips. \"No, don't ask, I'll tell you later, and I am Hot. With a capital aitch, didn't you hear me?\"\n\nRoz grinned, \" as it happens I did, but I thought you did rather well. I'm pretty sure that I'm the only one apart from Steve who knows what's going on.\"\n\n\"Mark suspects something.\" I told her about the nipple flash. \n\nRoz bust out laughing. \"Hey!\" She said. \"That's my speciality, or at least it used to be.\" A wistful expression stole over her face, but only briefly. ",
        "\"Poor boy, he might have choked,\" she said. For a moment I considered the possibility. Having someone die at the table would certainly get me off the hook -- especially if it was Steve. At this juncture I would willingly have killed him but Roz flatly refused my only half-joking suggestion that we put weed killer into his food. \n\n\"Don't be silly,\" she said, \"I'm not having my reputation as a hostess ruined by you bumping-off the guests. Anyway there's the long jail sentence to be considered, not to mention all the tedious media attention it's bound to attract.\"\n\n\"Alright,\" I reluctantly abandoned my brilliant, if homicidal scheme. \n\n\"At least it was worth a try.\" It was back to plan A. \n\n\"Now listen,\" I said, \"I'm not going to be able to contain this much longer. So far Steve's had the thing on low power and he's bound to turn it up during the main course. As you saw the other night, I can't take that for long. I'm going start a somewhat out of character conversation when we get back in there. You must join in and support me, OK?\" \n\nThe tone of my voice clearly brooked no objection because Roz nodded, even though her expression betrayed her puzzlement. \n\n\"Where you lead, Roz your faithful friend will dutifully follow.\" She said and gave small curtsey. \n\nI would not have said it was possible to curtsey in a sarcastic manner, but I was wrong. I tried to kick her but missed, and we fell into each other's arms, helpless with laughter.\n\nResigned to my fate, it was a matter of a few minutes to take the beautifully golden brown quails from the oven and pop them onto the pristine white plates. I drizzled a little of the unctuous sauce over them while Roz worked her magic with the vegetables. The food looked and smelled absolutely wonderful, and a good thing too. \n\nThe sound of \"Aaaah!\" As I entered the living room came from the assembled company as though from one voice and easily drowned out the passionate moan which I could not suppress as the Lelo pulsed into life the moment I stepped through the door.\n\nRoz, following, ordered Dave to help her fetch the remaining plates, effectively cutting off my retreat to the sanctuary of the kitchen. \n\nSteve watched me carefully as I placed the plates on the table. His hand was in his pocket and the Lelo fired briefly into over-drive. The relief on his face at my squeak of surprise was plain to see. \n\nI wondered for a moment whether he thought I'd gone into the kitchen to take the Lelo out but he knew me better than that. It was far more likely that he was just glad that the thing was obviously still working. \n\nI pointedly ignored him, settling back into my seat at the table and turning the full force of my electronically induced hyper-libido on the thoroughly bemused Mark. \n\nWithin minutes, the persistent throbbing of the Lelo had the hormones coursing through my bloodstream once again. I felt the familiar tautness in my breasts as my nipples engorged. I hardly dared move my shoulders, even the slightest touch of the fabric of my dress against the super-sensitised peaks was almost too much to bear. I was desperate for release. My time had finally come. \n\nWith everyone at the table and beginning to tuck in to the delicious food I put my plan into action.\n\n\"Mmmm, this is delicious Roz, you'll have to give me the secret of this sauce.\" I joined in the generally appreciative chatter as the main course got under way. \n\nWaiting for my chance to introduce the conversational gambit that I hoped would be my life-line. Taking advantage of the pause in the flow as people got to grips with their food I launched my opening salvo.\n\n\"Did anyone see that news article last week about the research that says most women are only noisy in bed to please their men?\"\n\nIt had the desired effect. Most of my fellow guests had either read or heard a report of the research and a lively debate began. \n\nI had only to let the conversation flow for a few minutes before intervening to direct the discussion down the avenue I wanted it to travel. \n\nIn the meantime Steve began to turn up the power on the Lelo, just as I thought he would. I breathed an inward sigh of relief, he was so predictable. He had kept me on simmer during the first course but now he was going to bring me to the boil, slowly turning up the heat on the Lelo so that he could savour every last minute of the build-up and my eventual climax. \n\nWe both knew that the orgasm, when it came, was going to be a biggie. The long slow build up would see to that. I was like a volcano, I could feel the pressure inexorably building and it was not a question of whether, only of when I would erupt. \n\nTiming was everything now. I squirmed in my seat, trying to suppress the urge to scream as the insistent pulsations from the Lelo sent waves of sensation through my lower body.\n\n\"What intrigues me, \" said Dave, \"is how they collected the data for the research?\"\n\nI seized my chance, \"I expect they asked people, \" I interjected, \"Let's see how we fare.\n\nCome on girls, whose passion has the neighbours reaching for the earplugs?\" I looked pointedly at Roz as I said this and she took the hint, breaking the moment of embarrassed silence that was the immediate consequence of my forthright question.\n\n\"Oh! Mine definitely,\" she said. Dave looked rather shocked at the casual way in which his wife offered to reveal their bedroom secrets. \n\n\"And I can tell you now, it has nothing to do with pleasing Dave. It's definitely all about Me!\" \n\nPerhaps the laughter round the table dispelled embarrassment because the series of admissions that followed gave an insight into aspects of my friend's lives that I found truly surprising. \n\nThe wine probably helped and most people seemed quite willing to share their intimate secrets with the group. And it was the girls that did the talking. \n\nMark, still sitting at my right hand side, was a little tight lipped when his partner, Ann, began to talk about what it was they did that caused the most noise but he appeared in any case to be mesmerised by my attempts to suppress my arousal. My wriggling and squeaking were more obvious to him than anyone else and the glimpses of my breasts that he must have been getting as I strove to contain myself were clearly affecting his ability to concentrate on the conversation.\n\n\"Your turn now Lou,\" Roz said. \"All our bedroom secrets are now fully in the public domain, let's hear yours.\"\n\nNot a moment too soon, I thought, and seized my opportunity. \n\n\"God, yes. I'm a serious contender in the loudest-climax-on the-planet competition. Our neighbours should get a government grant to install triple-glazing.\" \n\nEveryone looked at Steve. \n\nHe nodded saying, \"She's right,\" and turned the Lelo up to full power. \n\nIt was all too much. I was gone, curling my toes into the shag pile and rocking my pelvis forward so that the Lelo's throbbing tip pressed tight up against my clit. It was as though a volcano had erupted deep inside of me sending rivers of fire radiating through my body. \n\n\"Oh my God!\" I almost screamed , \"OH MY GOD!\" \n\nI had contained myself, against all the odds, for more than two hours. It was too long, I was almost mad with it and now my body cried out for release. \n\nI no longer cared what anyone thought. I spread my legs under the table, opening myself fully to the insistent beat of the merciless device. \n\nMark almost fell off his chair. \n\nThe first great clenching spasm of my climax gripped me.\n\n\"None of you are noisy, \" I managed to blurt out. \n\n\"This is noisy...AAAAAArgh!\" \n\nIt was loud. Even I thought it was loud and I'm used to it. I shuddered from head to toe with the sheer, soul-churning pleasure of it, the warm wave flooding through my whole body. I felt myself flushing, the heat radiating through my skin. I arched my back against the chair, stretching the material of my dress tight over my nipples -- the delicious feeling of the cool fabric against my hypersensitive breasts triggering the next and even deeper, orgasmic contraction.\n\n\"This is how...OHHH, MMM...noisy...I...AM!\" \n\nI managed to get something more or less coherent out. I had to keep talking, even though what I really needed was to abandon myself utterly to the paroxysms of pleasure that engulfed me.\n\n\"I see what you mean.\"\n\n\"Yes, that IS rather noisy.\" \n\nMy friends seemed to be enjoying the show. But, apart from Steve who looked slightly shocked and Roz who I feared would explode with suppressed mirth, they appeared not to have grasped the true nature of the performance. \n\n\"AAAAGH!\" another great convulsion wracked my poor body, so intense it was almost painful. \n\n\"Triple...OHH...glaz...MMM...ing!\" I managed to gasp. They laughed. \n\n\"Do you wear ear plugs Steve?\" \n\n\"Doesn't need them, she'll cover his ears with her thighs,\" Roz was razor sharp as always.\n\nThe jokes started and with a rush of elation I knew I had got away with it. They thought I was pretending. \n\nAnother fountain of pleasure, welling up, deep inside of me, \"OHHHH.... YES.....YES!\" \n\nThe pinnacle of my climax and this time I gave it full voice, looking them straight in the eye, playing to the crowd. \n\nThey fell about. The timing was perfect I began to enjoy myself, rocking lightly back and forward, brushing my nipples against the satin of my dress, triggering another ecstatic cry, a wave of laugher from the others and Mark, treated to a more sustained view of my breasts. \n\nWith interest I noticed his hands. They were firmly crossed in his lap. I might have discovered my exhibitionist-within, but it looked as though he preferred to keep his feelings firmly under wraps. My orgasm was by then subsiding, I was still getting small frissons of pleasure which caused me to release relatively minor squeaks but they were easily disguised in the general hilarity. I caught Steve's eye and gave him the look that said, \"enough.\" \n\nHe honoured our agreement and immediately slowed the Lelo down and then, finally, the demon machine became still. \n\nI sighed with both relief and satiation. The conversation moved on to other topics as I pulled myself together, mentally and physically, adjusting my dress to be as decent as its scant material allowed. \n\nI reflected on my feelings, temporarily disengaged from the company. Did I know this wanton exhibitionist who had inhabited my body for the previous few minutes? She was a new and rather surprising discovery that could be explored in the future but right now I needed to test a theory. \n\nMark's hands were still crossed in his lap and he was obviously in some discomfort. I did not put this down to guilt over his flagrant voyeurism although I wondered whether Ann might have something to say when they were alone. \n\nI motioned to Roz, \"If the men clear the table and bring things through to the kitchen you and I can stack the dishwasher and prepare the desert.\" I stood up expectantly.\n\n\"Good idea,\" Roz got up from the table, looking puzzled, but by then she had become used to playing my game, even when she didn't understand the rules.\n\nIt was Dave who was the first to intervene. \"Just give us a minute to digest the main course please girls. It was so wonderful, I'd like to let it settle first.\" \n\nMurmurs of assent came from the other men. A quick glance around the table added weight to my hypothesis. Not one pair of male hands was visible and was there was a great deal of embarrassed shuffling going on. Men are so transparent.\n\nI said, \"We'll start the desert anyway, bring the plates as soon as you're ready, come on Roz,\" and before she had time to object, grabbed her by the hand and more or less pulled her through the kitchen door. \n\n\"My God Lou, you were wonderful. That was AMAZING,\" Roz enthused as soon as we were out of earshot.\n\n\"Wait a minute, \" I turned my back on her, hitched up my dress, and pulling aside my soaked panties, eased the now motionless device out of my pussy. Roz passed me a piece of kitchen towel in which I wrapped the Lelo before hiding it away in my bag.\n\n\"Do you think I got away with it then?\" I asked. \"I'm sure you did,\" she laughed, \"you're a genius, I would never have thought of a scheme like that, not in a million years.\"\n\n\"How come the men are not helping clear up?\" I was a picture of innocence.\n\n\"Well I can tell you why Dave isn't,\" she said with a smile, \"he's sitting on the biggest erection he's had since the night we first had sex, and he daren't stand up\".\n\n\"Ah, yes, well, I can't vouch for the size of Mark's manhood but I can tell you that he is also sitting down to avoid an embarrassing revelation in the trouser department. And if I know Steve, he too is feeling indebted to Dave for giving him time to 'cool down', if I may put it that way.\"\n\n\"After that performance Lou, I'd be surprised if any of them make an appearance in the next quarter of an hour. We might as well just have a glass of something to help recover from your performance.\" \n\nRoz grinned, reaching for a fresh bottle of wine from the fridge.\n\n\"I'm sure you're right, \" I could hardly keep the smugness from my voice. \"You know what this means though, don't you?\" I said.\n\nRoz looked puzzled, \"Er, no,\" she replied.\n\n\"It means that I am the undisputed, all-comers, black-belt, Stiffy Champion of the World.\"\n\nI thought Roz was going to choke she laughed so hard. It was almost five minutes before she could speak, and even then, through her tears, all she could say was. \"You are...my God, so you are.\"\n\n***"
    ],
    "authorname": "trobson808",
    "tags": [
        "sex toys",
        "exhibitionism"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/what-will-they-think-of-next"
}