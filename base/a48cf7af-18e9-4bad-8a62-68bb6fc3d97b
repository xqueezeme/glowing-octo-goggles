{
    "title": "What The Cat Dragged In Ch. 29",
    "pages": [
        "Hi everyone,\n\nI really wish writing this story could be my full time job. Unfortunately, I am constrained by the demands of reality, as I'm sure all of you are. I do hope you enjoy this chapter though, and I hope you continue to be patient with me. :)\n\nAlso, I want to thank those who nominated this story and voted for it in the Reader's Choice contest. I had no idea it was so highly thought of, but it was a wonderful and humbling experience. \n\nThank you all so much!\n\npsyche b\n\n29. Proofs\n\nThe honed marble-lined steam shower in the Chicago apartment was nearly as big as the entire bathroom had been in the guest house. The water got hotter, it was driven by more pressure and it emerged from several body sprays. They didn't hit her in the right places, so she turned them off. Shampoo, conditioner and shower gel was on the shelf. Her pink shower puff and his loofah sponge hung on the hook below. It was all familiar. All comforting. Almost enough to make her believe that the last few weeks had been a bad dream. Almost.\n\nKelly stepped under the water and let it work at the knot in the back of her neck. She closed her eyes. The aching exhaustion had hit her as soon as they stepped into the elevator. It was an object lesson in the weight of nervousness and loss and uncertainty. Her mind drifted back to what Hank had said about hatred and she wondered if that had added to the burden she was carrying. There was no way to tell. She'd hated Stan for so long, the emotion was intertwined with her DNA. Of course, recent events had proven that DNA wasn't exactly set in stone either. \n\nShe sighed. It was too much to try and sort out at that moment. \n\nShe tilted her face up to the water, then put her head down again. She heard the bathroom door open. Victor walked in and started to undress. It was one more little nibble of normalcy. She took the shampoo bottle off the shelf. He opened the glass door and took the bottle out of her hand.\n\n\"Your hair's gotten longer.\" He handed the bottle back to her. \n\nShe put it back on the shelf and stood with her back to him. \"You haven't noticed until now?\"\n\nHis fingers worked the shampoo through her hair, only the tips of his claws scraped lightly against her scalp. Pleasant shivers coursed down her spine. Kelly moaned softly. He chuckled. \"You keep it all braided and pinned up, 'cept when you're in bed. When you're in bed, I ain't thinkin' about your hair.\"\n\nKelly blushed. \"I'll get it cut soon. Cassie showed me a picture of herself from last year. Her hair was short then. She said it would look good on me-\"\n\n\"No.\" His thumbs massaged the back of her neck. \"I like your hair long.\"\n\nKelly knew she should have been upset by his pronouncement. The relaxation that had spread through her body had gone too deep. She hadn't been entirely sure about the haircut anyway. She smiled a little. \"I have to get it trimmed at least.\"\n\n\"Few inches is okay.\" He lowered his hands and Kelly stepped under the spray again. He took the conditioner and stroked it through the strands of her freshly rinsed hair. She took his shower gel and loofah and started to work the thick suds over his shoulders and chest. \"I know you hate it here.\"\n\nShe looked up at him. \"I don't hate it here.\"\n\n\"You tensed up as soon as you walked in the door.\"\n\nShe laced the fingers of one hand with his and moved the rough textured sponge over his arm with the other hand. \"I didn't realize I had, but it's not that I hate it. It's just...\" She took his other hand and searched for words. \n\nHe lifted her chin so that she was looking up at him again. \"Just what?\"\n\nShe moved behind him. \"I don't know how to say it without sounding stupid.\" She took a deep breath. \"It's so big, and no matter how many lights I turn on, there are still these pools of shadow that just linger.\" Her fingers worked at his heavily muscled shoulders. Her hands weren't strong enough to ease the deeper knots, but some of the tension relaxed. \"I know I don't see as well as you do. You probably don't even see them.\"\n\nHe reached back and pulled her in front of him. Kelly rinsed her hair while he put gel on the softer nylon puff. He started at her shoulders and rubbed vigorously. \n\n\"I do see 'em. Probably not as many as you do. I don't like 'em either. Coulda fuckin' kicked myself when I realized.\"\n\n\"You didn't notice when you bought the place?\"\n\nHe laughed. \"When I bought the place it'd been empty for a couple years. Well, if you don't count the rats and cockroaches and a couple of winos.\" His hands moved over her back and down over her hips. \"Took months to get it livable. The whole time I thought all the wide open space was what I wanted. After about a week with nothing to do, I realized it was too damn big and I'd fucked up the lights.\"\n\nShe turned to look at him. \"You didn't though, it's beautiful.\"\n\n\"Came out mostly alright.\" There was a little smirk in his voice. \n\n\"Did you ever live here? For more than a few days at a time I mean.\"\n\n\"Yeah. For six or eight months I was picking up local jobs pretty steady. I always figured I'd get around to fixing it and never did.\" \n\nThe tone for the elevator sounded.\n\n\"Who-?\"\n\n\"Conlon. I sent him out for pizza and shit for breakfast.\" He reached around and pinched her nipples. \n\nKelly moaned, a little smile touched her lips. \"Dinner'll get cold.\" She turned and stroked her fingertips over his hardening shaft. Her tongue flickered over his nipple.\n\nSomething between a growl and purr rumbled through his chest. \"So?\" His fingers laced into her hair. \"I like cold pizza.\" His mouth found hers in an aggressive kiss.\n\nKelly surrendered. The exhaustion that had suffused her whole being only a few moments before had been replaced with a need that set every nerve on fire. The dance was familiar to both of them, and as always Victor took the lead. He lifted her with one arm around her waist. She wrapped her arms and legs around him. Her mouth found the place where his neck and shoulder joined. The taste of his skin was obscured for a moment by the soap and water. She moaned when the masculine flavor of him came through. \n\nHe growled. His claws bit into her hip. Her teeth scraped his skin with a teasing touch. One large hand cradled the back of her head, holding her still. Kelly's nails bit into his back. The world spun as he slammed her back against the wall, entering her in the same harsh movement. \n\nShe wanted him. Needed him. None of that was a match for feral passion and heavy muscle. His intensity brought tears to her eyes. Her pained cry bounced off the walls, even as her arms and legs tightened around him. He was still. A growl rumbled through his chest, but his lips and tongue teased her neck and shoulder gently. \n\nShocked tension began to drain away. She nipped lightly at his earlobe and felt him grin against the side of her neck. He moved again with as much intensity as before. The slow tenderness of the night before had been replaced by a claiming, bruising need. Tears streamed down her cheeks even as her orgasm began to build. Her legs tightened around him, her nails bit into his shoulders. The dull scratches drew a dangerous growl from deep in his chest. \n\nOne large hand crept around her throat, the other shifted to her hips, supporting her body. His eyes locked with hers. Lust and danger swirled in those deep pools. Kelly's breath caught in her throat. Her inner muscles tightened around him.\n\n\"Something making you nervous, little girl?\" He squeezed her throat lightly. His hips rocked slowly. Even though he was barely moving, he was hitting all the right places. \n\nKelly couldn't speak, so she nodded instead.\n\nHe shook his head, a wide grin put his fangs in full view. \"Uh-uh frail. I wanna hear you.\"\n\n\"Y-yes.\" A little more pressure on her throat. Not enough to cut off her breathing, just enough to make her feel like it was. Her hands fluttered over his back and shoulders like frightened birds.\n\n\"Awww.\" His hips punctuated the sarcasm. It was almost enough to push Kelly over the edge. \"What could possibly be makin' you nervous?\"\n\n\"Your...your hand.\"\n\nHe leaned forward and sniffed the side of her neck. \"Don't smell so nervous.\" He inhaled again, deeper this time. His hips rocked slowly, letting her feel every thick inch. Kelly started to tremble. \"Smell like you're about to cum.\" His tongue teased her skin. \"Are you about to cum for me frail?\"\n\nThe world was standing still while she found her voice. He kept her just on the edge. She knew he could keep her on that edge for as long as he wanted. \"Yes. Please, I need to.\" \n\nA low purring growl. \"Oh I know you do. Ask me again, real nice.\"\n\nBetween the maddening pressure of his thumb and the painful need, Kelly could barely form the words. When she did, all that came out was a pleading whimper. \"Please.\"\n\nHe stopped moving. His hand drifted down over her body and he leaned in closer. \"You're lucky I'm such a nice guy.\" His claws dug into her hip as he drove her over the edge. Kelly's cry reverberated off the walls.\n\n*~*~*~*~*~*\n\nAt first, Kelly thought the white noise of the shower was just part of the humming afterglow. The pressure of her knees on the tiles came through next, then the sting in her hip. Her body was still cradled by his though. His hands moved over the small over her back. She opened her eyes and looked up at him. Concern drew his eyebrows together. His thumb stroked over her cheek, just under her left eye. Kelly remembered the tears from the beginning. She stroked his chest. Her lips brushed over the hollow of his throat. She looked up at him again. This time, a little smile curled the corner of his lips.\n\n\"Water bill is gonna be un-fucking-believable.\" His voice was a low rumble. \n\nKelly gave a short laugh. \"I was just in here to take a shower.\" Her voice was soft.\n\n\"So it's my fault, huh?\" His fingers drifted down over her bottom.\n\nHer finger teased the tip of his nipple. \"Course.\"\n\nHe wrapped his fingers in her hair. She looked up at him; his little smile mirrored her own. \"You're fucking lucky I'm in a good mood.\" The tender tone didn't match the words. He let her go. \"C'mon, I'm hungry.\"\n\n*~*~*~*~*~*\n\nCreed woke with a start. For a long moment the expansive, dimly lit room was unfamiliar to him. The relaxation of sleep was replaced by adrenaline and readiness to fight. Recognition came a heartbeat later. He took a deep breath. The loft in Chicago. The brick-lined barn of a place that would serve as a comfortable cage for the frail until he could end the current threat permanently. He could deal with the place, but he fucking hated the purpose. Made what Jimmy and the old man thought about the frail being a captive seem almost true. That pissed him off even more. Still, they were both safe enough in the quiet moment. The pumping adrenaline subsided enough for his claws to retract. He looked down at the frail.\n\nShe was sleeping next to him with her head on his thigh and had been since about an hour after she cleaned up the dinner dishes. He remembered her starting to shiver at around midnight and he toyed with the idea of taking her up to bed then. He liked how she felt next to him though. He'd pulled the throw from the back of the sofa and put it over her instead. She'd mumbled something and settled again. \n\nHe figured he had too. He glanced at the nearly silent TV. Lucy and Ethel were attempting to wallpaper a room and failing miserably. He smiled a little, halfway picturing his redhead doing something similar. The frail wasn't much for movies or soap operas or shit like that, but she loved the classics. He could take it or leave it. It was always too sweet, always too fucking perfect and he never saw what was so goddamn funny about it. Course now he was starting to get some of the jokes. Was probably just because he was getting old, or senile or some shit like that. He turned off the set and looked down at the sleeping girl. Any other night, he might have just stayed there with her. Tonight, he wanted to stretch out.\n\nCreed shifted the frail's head. She moaned and drew her knees up closer to her chest. He lifted her, leaving the throw wrapped around her body, and headed for the stairs. Halfway there, her eyes fluttered open. He felt her tense as she looked around.\n\n\" 'S alright frail. Just goin' to bed.\"\n\n\"What time is it?\" Her voice was soft and tangled with sleep.\n\n\"Little after four.\" He set her on the bed. She started to unwrap herself from the throw.\n\n\"Late.\" She managed to get free and pull the covers down.\n\nHe pulled his shirt off and watched her pull his shirt off over her head. \"Or early. Depends on your perspective I suppose.\"\n\nShe pulled the blankets up over her naked skin and slid over, leaving room for him. \"What's your perspective?\" From her voice, he could tell that she was mostly asleep.\n\n\"I don't give a shit one way or the other.\" He got in next to her. \"I just want to stretch out in a bed that ain't too small for me.\" He pulled her into his chest. She laced her fingers with his. A deep purr rumbled through his chest. He didn't even think about trying to control it.\n\n*~*~*~*~*~*\n\nWhen Creed woke up again he was stretched out over half the bed. The frail had drifted over to the other side, her arms and legs flung wide. One of her hands was still resting on his wrist. Every so often her fingers would twitch, or her foot would quiver and something about that made her seem so fucking vulnerable. He shifted closer to her. She moaned and moved closer to him, one small hand found his chest.\n\nShe'd wake up in a few minutes. When she did, she'd smile at him and ask him what he wanted for breakfast and the day would start. Meaning she would do her thing and he would do his and they would be apart. Together, but apart. She arched into him. As far as he was concerned, the day could wait a little while longer. He stroked the outside of her hip, exploring the expanse of silky skin. A little smile curled the corners of her lips, but she didn't open her eyes.\n\nA smile touched his lips as well. \"Playin' possum, huh?\"\n\nShe looked up at him. Her sea-glass eyes carrying a glimmer of mischief. \"No, just enjoying the moment.\"\n\n\"What makes you think I wasn't?\" His hand drifted down over her thigh and back up to her hip.\n\nA little shrug. \"I just figured if I said anything you'd want breakfast or,\" a blush stained her cheeks. \"Something else. Just felt good to be close like this.\"\n\nHe moved onto his back. She moved with him and rest against his shoulder, one arm around his waist. \"Coulda sworn you liked that 'somethin' else'.\"\n\n\"I love that something else. Not the same as just being close though.\" Her voice was still soft with sleep. Her body was molded to his.\n\nHis claws drifted through her hair. \"Fuckin' I understand.\" He shrugged instead of finishing the thought. \n\nShe laughed softly. \"I'd say 'understand' is an understatement.\" She looked up at him for a long moment, then kissed his shoulder. \"You've got good instincts for the rest though.\"\n\nHe chuckled. His hand drifted over the curve of her back. The empty grumble from his stomach broke the moment. \n\nThe frail laughed. \"Eggs and sausages?\"\n\n\"He didn't get any bacon?\" He let her up and handed her the olive drab shirt she'd been wearing the night before.\n\nShe pulled on a pair of her homemade socks with pinks and purples shifting and fading into each other. He knew they were her favorite pair. \"He did, but we had bacon yesterday. I thought that you might like a change.\"\n\n\"So? Yesterday we were livin' on the old man's rations. Make both.\"\n\nShe ran her fingers through her hair and smiled over her shoulder. \"Both it is.\" She picked up an elastic band from the nightstand and started twisting her hair into a loose braid as she walked down the stairs. \n\nA smile tugged at the corner of his mouth. Only she could make just rolled out of bed look so fucking good and she had no goddamn idea of the effect she had on him. He got up and pulled on a pair of sweats. He'd tell her after breakfast. Well, his cock would tell her, but she'd get the message. The little smile turned into a hungry smirk. \n\n*~*~*~*~*~*\n\nKelly stretched out on the sofa with a copy of The Grapes of Wrath. She'd read it once already, but the first five chapters and a list of questions were her first assignment. Describe the characters, situations, how the author sets the tone, blah, blah, blah. The usual ways that teachers managed to suck all the life and enjoyment out of a great story. Maybe it was a good thing the assignment was so straightforward. Her mind was decidedly unfocused.\n\nThe emptiness of the room was a looming, leering presence reminding her that Victor was gone. She knew that it was ridiculous to be so nervous. Sure she was alone in the apartment, but Conlon was right downstairs. Victor had changed all the codes twice since they arrived. No one could get in and even if someone managed it, he'd turned on another alert that would signal when the garage door opened. All she had to do was look at the monitor to see who it was. They couldn't get to the upper floors without the elevator and Victor had taught her how to keep it from descending. He wouldn't have left her if it were unsafe. Now all she needed was to repeat that to herself another million or so times. Or more. At least until Victor got back.\n\nShe looked over at her phone. Calling Victor wasn't an option. She never knew what to say to him on the phone anyway and that hadn't really changed. Neither of them felt the need to fill silence with pointless conversation. If she was honest with herself, his voice on the phone wouldn't make her feel much better. It would make it even more obvious that he was away from her.\n\nCassie would be in class.\n\nGranna would talk to her all day, if Kelly was willing to talk about what happened while she in the bunker. Every detail of what happened while she was in the bunker. Over and over again. She wasn't ready to think about most of it, let alone rehash it. Just thinking about that conversation was making her stomach turn.\n\nShe picked up the book again. She could relate to the Joads. The pain of being forced from the familiarity of home to a frightening future. The desire to get to somewhere better. To work and to live normal lives. The desperate need for hope amidst the ugly business of survival.\n\nKelly was getting absorbed when the garage tone sounded. Kelly put the book down and ran to the monitor, her heart pounding, her chest tight. A dark colored sedan pulled in. A few minutes later, Victor got out and looked up at the camera. Kelly took a deep breath and felt the tension start to drain away. Victor's grainy, black and white image moved to the back of the car. She folded the throw and straightened her stack of books on the coffee table. \n\nThe elevator tone sounded.\n\n\"You spend all fucking morning fussing around?\" He set a dark blue Best Buy bag on a chair and picked up the plastic grocery bags. The scent of Chinese food drifted out to her.\n\nKelly reached for some of the bags. He pulled them away. \"Just take the yellow one. It's got lunch in it.\"\n\nKelly took the yellow bag and brought it over to the dining table. While he loaded the fridge with perishables, Kelly set the table and took General Tso's Chicken and pork fried rice out of paper cartons and put it into serving bowls. She put the egg rolls on a plate. By the time he was finished, Kelly had lunch set up. \n\nHe looked at her, then at the table. \"Well shit, I turn my back for five minutes and you go and make everything all civilized.\" \n\nShe laughed. \"I can put it back in the cartons if you want.\"\n\nHe gave a little shrug. \"Now that you got it all in bowls and everything. Might as well eat it.\" He grabbed a beer from the fridge and sat down.\n\nFor a few minutes, he ate silently, then washed it down with a long swallow of beer.",
        "Kelly felt tension start to drain out of her shoulders. For the first time, she realized that she was starving. She dug into the spicy chicken.\n\n*~*~*~*~*~*\n\nIn a way, it had been a test. He could have sent Conlon out, stayed home and kept the frail naked and exhausted and on the brink of fucking dehydration. That's what Creed wanted and that was probably what the frail wanted too. It wasn't what she needed though. She needed to know that she would be alright on her own and he needed to know it too. Judging from the thick odor of unsettled fear that was competing with the spicy scent of the food, it hadn't exactly been a roaring success. She had managed though, and that was something.\n\nHe glanced over at her. Her small frame was a study in concealed tension. It was starting to ease, but he could still see it in the curve of her neck and the way her right leg twitched from time to time. She was trying to hide it from him. She always did. Not that it did a damn bit of good, even if he couldn't see it, he could smell it. \n\nThis time, she was probably trying to hide it from herself too. He scented the air again. The frail's calmer scent was creeping in, the peppery scent of the food, and a hint of some sort of cleaner. He figured it had to be coming from the bathroom. Anyplace else and the scent would have been stronger.\n\n\"Gonna wear out those tiles.\" He took more of the chicken.\n\nA smile touched her lips. One shoulder shrugged delicately. \"We left it kind of a mess last night.\"\n\nHe looked at her. \"Not an all morning kind of a mess.\"\n\n\"No.\" She took another bite of rice. \"After you left I got things straightened up and then I did my homework for the Lit class.\"\n\nHe'd looked at her schedule before he left. \"That was quick.\"\n\n\"I've already read the novel. The rest of it is just kind of dull so far. I still have to catch up, but the first part of the class was just readings from a textbook about theme and symbolism and all that stuff. If I work on it tonight and tomorrow I can probably get through it. Frankly, I was expecting something harder but I suppose I should be thankful that the semester only started a couple of weeks ago.\"\n\nHis curiosity was piqued. \"That's it?\" \n\nShe nodded. \"I guess it would be more in depth if there was a lecture or discussion along with it. Still, doesn't seem worth the money.\"\n\nHe looked at her sharply, his eyes narrowed. Creed hadn't mentioned the financial part of his little deal. He doubted many people outside that room knew about it. \"Money?\"\n\nHer eyes were direct. The tang of nervousness had all but disappeared. \"Professor Xavier made his offer to keep me there. He said it was to give me time to recover or to protect me from you, but that's not what he really wanted.\" \n\nCreed sat back in his chair and studied her. \"What'd he want?\" This he had to hear.\n\n\"Something from you. I'm not sure what exactly.\" Her tone was matter of fact.\n\nCreed gave a short laugh. \"Fucker's been tryin' to get rid of me for years.\"\n\n\"Maybe, but an engineered healing factor doesn't exactly make me stand out in that crowd. If either one of us would be useful to him, it would be you. If I were there, he'd have something you want.\"\n\nHe smirked. \"You don't believe in all that goodness in his heart?\"\n\nShe laughed. \"I believe he gets something out of everything he does, and if the payoff isn't big enough, he doesn't do it.\"\n\nHe grinned. \"Don't think I'm charming enough to get him to change his mind?\"\n\nA little smirk. \"I think you always find a way to get what you want. It took me forever to figure out why he took me in in the first place. Once I realized it was never about me, everything else got a lot clearer. Whatever you paid him must have been more valuable than your services.\"\n\nFor a long moment he just looked at her, then he shook his head. \"You don't miss a fucking thing, do you?\"\n\nShe laughed. \"That still surprises you?\" She got up and headed toward the kitchen.\n\n\"Now what? You forget the finger bowls or somethin'?\"\n\n\"No, but I noticed that you're almost out of beer.\" \n\nHe watched her cross the room. She'd put on a pair of jeans at some point while he was gone, but she was still wearing his shirt. The sleeveless garment came down to the middle of her thighs and hid the shape of her ass. The sway of her hips couldn't be concealed. He felt himself starting to harden. He sat back to enjoy the view as she bent over and got the beer out of the fridge and came back to him. He let her set the beer down, then he grabbed her wrist. \n\n\"You know I don't give a shit about it.\"\n\nHe saw confusion cross her face. \"About what?\"\n\n\"The money.\" He shrugged and let her go. \"Couple jobs, I'll have it all back.\"\n\nShe nodded and sat down again without meeting his eyes. The money did bother her, but she'd get over that on her own. The way she saw herself in all this bothered him more. She'd been a pawn for Stan and Cavallo and even when she was half dead she was a pawn for an old man in a fucking wheelchair. He couldn't even tell her that she was wrong and it pissed him off. The fact that he didn't know how to fix it pissed him off even more. \n\n\"What?\"\n\n\"Nothin'.\" He took most of the chicken and put the last couple of pieces on her plate. She opened her mouth to protest, but he shook his head. \"Don't even try it. You were fussing around here all through breakfast. You barely ate a thing.\"\n\n*~*~*~*~*~*\n\nKelly cleaned up lunch and tried to keep her eyes off the large bag. \n\nBefore he left, Kelly had tried to convince him that she didn't really need her own computer. He'd set up a profile on his laptop and if he left and took it with him, the system in the apartment had two tower units. One that ran the security system and one for his use. He'd listened and then told her that he was getting her one anyway. She knew it was only partly generosity, but the longer that bag sat there, the more curious she became.\n\n\"You gonna stare at it all damn day or are you gonna open it?\" There was a smirk in his voice.\n\nShe blushed. \"I had to get things cleaned up.\"\n\n\"You been fussing for twenty minutes.\" He was sitting on the sofa with his feet on the coffee table. His right foot twitched. He was just as anxious for her to open it as she was. Kelly dried her hands and brought the bag over next to him. He looked away. She pulled out a wide, shallow box and struggled to open it. He muttered something under his breath and sliced through the tape with one claw. She unwrapped layers of packing material until she got to the computer inside. The lid started out as a bright pink and then faded to purple. \n\nKelly's eyes widened. \"It's pink and purple!\"\n\nCreed grinned. \"Yeah. You shoulda seen the look on that geeky little fucker's face when I told him what I wanted and said it had to be pink. For a minute I thought he was gonna shit right there in the middle of the store. This was the closest they had.\"\n\nShe laughed. \"It's perfect. Can I try it?\"\n\n\"Not yet. I gotta install some shit and make sure no one is gonna find their way onto my network.\"\n\nShe looked up at him. \"The security system-\"\n\n\"Safe.\" His tone was certain. \"Nothing else is connected to it.\" He pointed to her computer. \"This ain't gonna be connected to anything else that's here. Anybody manages to trace a signal, which I doubt, they ain't gonna get anything other than your school work and whatever else you happen to keep.\" He grinned at her. \"Gonna thank me?\"\n\nShe set the box aside. \"Sure, but that sounds like you were expecting something specific.\" She knelt next to him on the sofa.\n\n\"Been watching you shake that little ass of yours all afternoon. Whaddya think I'm expecting?\" He pulled her into a deep kiss.\n\nKelly's fingers deftly worked the buttons of his shirt. A soft growl vibrated his chest when she stroked his skin. She smiled against his mouth. \"What if I wasn't planning to thank you that way?\" Her mouth trailed down over his jaw.\n\nHe reached for her, but his hands stopped just clear of her shoulders. \"What were you planning then frail?\"\n\nHer fingertips floated over the contours of his muscles while her mouth traced over the front of his throat. Only the very tip of her tongue touched his skin. \"Thought I would write you a letter.\"\n\nHe tilted his head back even more. His fingers twined in her hair and a laugh rumbled through his chest. \"What're you planning to say in this letter?\"\n\nHer mouth moved down lower, taking a leisurely path down to the edge of his ribcage where she nipped lightly. \"Dear Mister Creed.\" Another light nip. \n\nHis back arched. \"Mister Creed?\" The words were followed with a soft pleasure growl.\n\nShe smiled and traced his navel with her tongue. \"It's a very formal letter.\" Her fingers worked his belt and the button of his jeans. She could feel how hard he was already.\n\n\"Mister Creed.\" He pushed the jeans down over his hips. \"Think I might like you bein' formal.\"\n\nThe sight of him so thick and hard brought an achy heat to her lower tummy. Her eyes were on his, a little smile was on her lips. She let her tongue make a slow circuit around the swollen head of his erection. \"Mister.\" Her tongue made the same slow trip in the other direction. \"Creed.\"\n\nHis eyes were closed, his head resting back on the arm of the sofa. \"Fucking love how you say that.\"\n\nThe musky scent and salty flavor of his skin brought out a lustful avarice in Kelly. She took him into her mouth, using her tongue and hands with shameless abandon, working the length of his shaft. \n\nA deep growling purr rumbled through his chest. One hand wrapped in her hair, guiding the movements of her head. Each time he was in the back of her throat, Kelly moaned deeply. His groans of pleasure retreated into the background. The blood was rushing in her ears, hiding his moans of pleasure, she felt every twitch of the organ in her mouth though. Her head moved faster, her tongue rubbing the underside.\n\nThe hand moved out of her hair to her shoulder. He grabbed a handful of her shirt, his claws raking over the back of her shoulder hard enough to make Kelly whimper. His legs tensed. His stomach went rigid and his back arched.\n\n\"'Nough.\" It was more of a growl than a word he punctuated it with a hard shove that sent Kelly off the edge of the sofa. \n\nBefore Kelly could react, he was standing over her, a dangerous grin on his face. He kicked off his jeans. \"Think you been in control long enough little girl.\" His leaking member was a little above her eye level. A fresh rush of need settled hot and heavy between her legs. He knelt on one knee in front of her, one hand twisted in the back of her hair, holding her head still. \"You got ten seconds to strip,\" He kissed her hard. \"Kneel on the sofa facing the back,\" A nip on her lower lip. \"Spread your legs and show me your fucking pussy.\" His lips played with hers. Kelly reached out with her tongue, but he pulled away and grinned. \"Uh uh frail. Take too long I'm gonna tear up your pussy so bad you ain't gonna walk right for a fucking week.\" \n\nHe said it with a smile, but it was a predatory grin that sent shivers down her spine. He got up and stood over her again, arms crossed, eyes boring into her. She never doubted that he meant it. Nervous adrenaline pushed needy excitement to a new level. \n\nShe pulled the shirt off easily enough, but the jeans were more a struggle. She fumbled with the button and when she finally got that undone she struggled to shed them without falling. He walked around her, staring at the contours of her body and clucking his tongue.\n\n\"Damn. I liked that tight little pussy of yours too.\"\n\n\"I'm trying.\" She knelt on the sofa with her pants hanging on one ankle. She ventured a glance back at him. \n\nHe tugged them off and tossed them aside, then he pushed her forward so that her hands were resting on the back of the sofa. She spread her legs and pressed the arch of her back downward, her heart pounding the whole time. \"So? Told you what I wanted.\" He stroked her back from her neck down to her bottom, then down between her legs. Kelly moaned. \"All's you had to do was to do it. Nothin' hard about that, now is there?\" The side of his hand brushed over her pouting lower lips.\n\nKelly whimpered and closed her eyes. \"N-No, but-\"\n\n\"But you want me to overlook it.\" His knuckle traveled over her wet slit. She moaned and pressed back against his finger. His other hand moved up her back to wrap lightly around her throat. \"Can't hear you frail.\" A little growl added danger to the statement.\n\n\"Yes.\" She gasped. \"Please.\"\n\n\"Please what?\" A little more pressure against the center of her pleasure. It wasn't quite enough to push her over the edge, but it was more than enough to cloud her mind. Kelly closed her eyes and tried to sort through what he wanted while her hips rocked against his hand.\n\n\"Please, Mister Creed.\" The words were a moan.\n\nHe leaned over her. \"Fucking love how you say that.\" He pressed the wide head of his erection against her entrance. She reached back and guided him in. \n\nTheir union was slow, deliberate perfection. Threats of violence were replaced with mutual need. His body was over hers. His fingers resting lightly on the front of her throat, the other hand on her breast. Kelly moved with him, her inner muscles gripping him, his growls blending with her moans, each one was sharper -- needier -- than the last. He moved faster, harder, driving the world away. Pleasure closed in and Kelly let herself fall into it.\n\n*~*~*~*~*~*\n\nCreed lay on his back on the sofa, the frail was on his chest. They were both still naked. She was still flushed from cumming twice in such a short time. He didn't figure he'd ever get sick of seeing her that way. He pushed a lock of her hair out of her face. She smiled and arched against him, her fingers traced over his chest as if she was memorizing the contours of his body. \n\nHe didn't figure he'd ever get sick of the way she touched him with those delicate fingers. He could get lost in those little touches, those little sighs. Didn't make a damn bit of sense. \n\nHis fingers trailed down her spine. She arched and kissed his shoulder. Fucking frail. Always giving him shit he didn't even know he wanted. A little shiver coursed through her. He found his shirt on the floor and wrapped it around her.\n\n\"Gonna make me want to stay here all afternoon.\" Her voice was soft, dreamy. \n\n\"So? 'S early. Even if it gets late, who the fuck cares? I ain't got a schedule for awhile.\" His fingers trailed through her hair. He felt some of that deep relaxation start to slip away. And just how the fuck was he supposed to interpret that? \"What?\"\n\n\"Getting lonely before you're gone.\"\n\n\"Lettin' yourself start worrying about shit.\" Her skin was silky under his fingertips.\n\nShe shook her head a little. \"Can't help it. I know it's stupid.\"\n\n\"Nah. Just gotta get used to it again. 'Sides, it ain't like you'll be alone.\"\n\n\"You don't trust Conlon.\"\n\nA short laugh. \"I never did.\" She looked up at him; he could read the surprise in her face. \"Not completely anyway.\"\n\n\"Then why-?\"\n\n\"Trust people in this business and you end up in a shallow fucking grave or as somebody's goddamn lab experiment. Guarantee you he don't trust me either.\"\n\n\"How can you...do what you do...if you don't trust the people you work with?\"\n\nShe never asked him about what he did. Never wanted to know the whys or hows. He figured she wanted to avoid the reality of what he was. He looked at her relaxed profile. Curiosity drew her eyebrows together, but there was none of the horror or disgust he'd expected. \"I don't fuckin' know. It's more of an agreement based on mutual need and thinly veiled threat. I ain't thrilled with Conlon, but I ain't leavin' until I got some shit together.\" \n\nThe corner of her lips curled into a little smile. \"And you hope I'll calm down in that time.\"\n\nHe chuckled. \"That too.\"\n\n*~*~*~*~*~*\n\nKelly dozed with Victor for awhile, then they both got up and showered. She didn't bother dressing, preferring one of his shirts and a pair of warm socks. While he set up her computer she picked up her Lit textbook and started reading. A page and a half in, she was glad she hadn't had to sit through a lecture. Reading it was painful enough. At least she'd have something to do while he was downloading or installing or whatever it was he was doing to her computer.\n\n\"You should be good to go,\" He said after an hour. \"Where're you gonna set up?\"\n\n\"I'd been thinking about that.\" She set the book aside. \"The dining room table has that section of drywall behind it, and no windows.\"\n\nHe thought about that for a minute and smiled. \"The blandest place in the whole fucking apartment.\"\n\nShe shrugged. \"Just in case anybody's looking.\"\n\nHe nodded. \"Lemme know a half hour before dinner's ready. I'm gonna want a shower.\"\n\nKelly watched him grab a tape measure from the kitchen drawer and climb up to the loft. He climbed up on the railing. She sat up straighter. \"What are you doing?\"\n\n\"We're gonna be here for awhile. I figured I'd fix the lights.\" He jumped and pulled himself up onto one of the ceiling beams. Kelly was amazed by his agility and terrified at the same time. A few minutes later he looked down from directly above her. \"Did you dust up here?\"\n\nThe question caught her off guard. \"Well, awhile ago.\"\n\nHe groaned. \"Tell me you sent Conlon up the ladder to do it.\"\n\nKelly squirmed. Even from this distance his gaze was intense. \"Well, Conlon did hold the ladder.\"\n\n\"While you climbed it.\"\n\nShe looked up at him and bit her lower lip. \"I didn't think he would do it right.\"\n\n\"Frail.\" He shook his head. \"We're gonna talk about this later.\" He stood up again. She could hear him walk to the first dim spot. \n\nFor awhile, all Kelly could focus on was the sound of him moving overhead. She was sure that he was going to lose his footing on the narrow beams and fall down to the hardwood below. When he didn't, Kelly slowly went back to her reading.\n\n*~*~*~*~*~*\n\nIt took Creed less than five minutes to beef up surveillance on Cavallo and Stan. It would take him a hell of a lot longer to decide what to do to the motherfuckers. The project with the lights gave him time to think in relative privacy. It also gave him a good excuse to go out every few days for supplies, leaving the frail alone. Letting her see that she would be alright on her own. She needed to know that.\n\nCreed looked down at the frail. She was in the kitchen, starting to fuss around with dinner. He fucking loved to watch her move. He sat on the beam and indulged himself.\n\n*~*~*~*~*~*\n\nOver the next few weeks, Kelly's life settled in to a comfortable routine. She spent mornings with Victor, sometimes in bed, sometimes just stretched out with each other on the sofa or the floor. From two to three, she attended Trig lecture via webcam while Victor worked on the lights. In that hour, Kelly was convinced that he spent more time watching her, but that wasn't exactly uncomfortable either. In the evening she used Skype to study with Cassie for a few hours. Well, they studied for awhile. The rest of the time she spent getting to know Cassie again and avoiding her questions about where she and Victor were. \n\nWhen her mind wasn't actively engaged in something, Kelly waited for the other shoe to drop. She knew Victor was going to leave eventually. She knew he was planning something, even though he was doing his best to keep it from her. She pretended she didn't know. He pretended he didn't know she was pretending.\n\nIn those quiet times, Hank's words chased bone-jarring hatred around in her head. Every time she so much as thought of Stan's name she felt the tension in her chest and tasted bile in the back of her throat. The longer she thought of him the worse it got. In her heart, she knew it would be that way until she stopped being Stan's victim. Victor would take him out of the world; she had no doubt about that. Kelly knew that only she could remove the cancer of him from her soul.",
        "*~*~*~*~*~*\n\nCreed sat on the edge of the bed and looked at the clock. Five in the fucking morning and he was sitting there fully clothed while she was sleeping, stretched out and naked next to him. He should either get his ass back in bed or wake her up and ask her what he had to ask her. \n\nThat felt too much like drawing her into the dark part of his world. She deserved the opportunity though. Besides, he hadn't told her he was leaving yet.\n\nHe put his hand on her bare hip and rubbed until she woke up. \n\n\"What?\" Her voice was a sleep-addled mumble.\n\n\"I need you to wake up, Frail.\"\n\nHe waited until she sat up and started reaching for the light before he turned it on.\n\n\"What time is it?\" Her voice was clearer now.\n\n\"Little after five.\" He took her arm and pulled her closer.\n\nShe snuggled against his chest. Her skin was still warm from sleep. \"You're leaving.\"\n\n\"Yeah. For a couple of days.\" He took a deep breath. \"I need to know what you want.\"\n\nShe looked up at him. For a moment he thought she was going to answer. \"Want...how?\"\n\n\"What you want to happen to Cavallo and Stan.\"\n\nHer eyes widened. \"I can't! Even if I knew I couldn't tell you what to do!\"\n\nHe shook his head. \"That's part of it. I can fuck up both of them, drag it out for years or do it quick. If it ain't what you want though, then it don't mean shit.\" His fingers drifted through her hair.\n\nShe relaxed against him again. For a long moment, she was silent, then she looked up at him. \"I want to talk to Stan.\"\n\nThat was something unexpected. \"And then?\"\n\n\"After I've said what I need to say, I don't really care as long as he never comes near me or my family ever again.\"\n\n\"Cavallo?\"\n\n\"He's sick and useless. I don't want to have to look over my shoulder for him or his people.\" Creed felt her tremble. He pulled her closer, stroking her hair until she relaxed again. \"How long will you be gone?\"\n\n\"'Round four days.\" He stroked her cheek. She looked up at him. \"Lights are fixed.\" \n\nShe smiled. \"I know. Thank you.\"\n\nFrom the tone of her voice, Creed knew she wasn't talking about the lights. He kissed her lightly, his lips playing with hers for a long moment. \"Go back to sleep, frail.\"\n\n\"Want some breakfast before you go?\" She did her best to make the question sound casual. He could smell how nervous she was.\n\nHe rubbed the back of her neck. \"Nah. Too fucking early to eat. I'll get something on the road.\" He stayed where he was. \"'Sides, you need your rest so you can finish your homework.\"\n\nShe gave a little groan. \"I hate proofs.\"\n\n\"You hate proofs because you tell yourself you can't do 'em so you don't practice.\"\n\nShe sighed. \"I promise I'll do it.\"\n\nCreed kissed her, then got up and headed down the stairs."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "oral sex",
        "sex from behind"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-29"
}