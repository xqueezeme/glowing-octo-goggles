{
    "title": "Coming Home: Davis Brothers Ch. 07",
    "pages": [
        "\"Where are we going?\" Lonnie asked as Brandon missed their turn. Ricky squirmed in his lap, trying to look out the window. \"And why did you bring Ricky?\"\n\nBrandon cut his eyes over at his little man, before turning his attention back to the road. \"It's a surprise.\"\n\n\"Oh. I like surprises,\" Lonnie grinned as he looked up and down the street, trying to figure out their destination.\n\n\"Good.\"\n\nBrandon seemed a little nervous to Lonnie, which made him wonder all the more what the surprise was about.\n\nWhen Brandon stopped in front of the pizzeria and parked the truck, Lonnie frowned. \"Pizza is the surprise?\"\n\n\"No, smart ass. I'll be right back.\" Brandon leaned over and gave Lonnie a quick peck on the lips. He left the truck's diesel engine idling and hopped out. Ricky bounced up Lonnie's lap and put his paws up on the window and watched his big daddy walk around the front of the truck.\n\nLonnie watched his sexy bear of a man get out of the truck and hurry into the restaurant. Brandon returned a few minutes later with a large pizza box, breadsticks, and a plastic bag with bottles of soda.\n\nWhen Ricky saw Brandon, he bounced off Lonnie's lap into Brandon's seat. The little dog's tail was wagging a mile a minute.\n\nBrandon managed to get the door open before Lonnie could reach over and help.\n\n\"Scoot, pest,\" Brandon growled at Ricky.\n\nBrandon handed the items to Lonnie as he got into the truck, then scooped Ricky up, gave him a quick kiss on top of his head, and then put him on the floor in front of Lonnie's feet. Lonnie turned around and carefully put the pizza on the back seat. He put the bag of breadsticks into the bag with the sodas and set it on the floor, next to a big duffel bag. Lonnie poked at the bag, wondering what was in it and if it was related to the surprise.\n\nBrandon put the F-250 into gear and turned and looked out the window towards the street. The engine rumbled loudly as he pulled into traffic.\n\nLonnie turned back around and put his seat belt back on. He looked out the window, trying to get his bearings on their secret destination.\n\nThey drove for about fifteen minutes before things started looking familiar.\n\nWhen Brandon turned down onto the dead-end road, Lonnie's heart began to race. He had been dying to see the old flip house ever since the construction was finished just two days ago. He was especially excited to see the inside, since Brandon asked for his advice on paint colors and other decorating choices. That really made him feel good, like he was really part of the company. He couldn't wait to see how it all turned out.\n\nBrandon pulled into the driveway of the small ranch home, parking the truck in the driveway, in front of the garage.\n\nLonnie's mouth fell open at the sight in front of him. \"Oh my god, Brandon! This is fabulous!\"\n\nLonnie unbuckled his seat belt, pushed the door open and stepped down onto the running board. He hopped down onto the driveway, scooped up Ricky and set him down on the ground, and walked around to the other side of the truck to look at the house.\n\nThe flip house had been repaired and completely repainted on the outside, a really pretty shade of pale green, exactly the color he suggested. Brand new shutters framed the windows. A new application of sod on all sides made it look like a real home. The walkway from the sidewalk to the rebuilt front porch was lined with stones and flower beds. It was way more deluxe than he imagined it would be.\n\nBrandon fished into his pocket and handed Lonnie a keyring with a single key on it. \"Here, cupcake.\"\n\nBrandon watched Lonnie's face light up. Those dimples he loved so much made an appearance and he couldn't help but smile. He grabbed the pizza, drinks, and the duffel bag he had stashed earlier in the day. He followed Lonnie up the sidewalk to the front porch.\n\nLonnie put the key into the deadbolt lock and turned around and looked back at Brandon. \"I've never come in this way before. I can't wait to see how it turned out.\"\n\nThey both chuckled as Lonnie pushed open the door. As soon as he stepped into the living room, Lonnie couldn't help but gasp.\n\nThe inside of the house had been gutted and remodeled. Long gone was the cold, dark abandoned house that he took refuge in when he became homeless. The inside was almost unrecognizable.\n\nThe dirty carpeting had been torn out and replaced with beautiful bamboo floors throughout the home. The living room was painted the earthy, warm sage green color he had chosen. The fireplace had been refinished with a gorgeous stone work. Lonnie ran his hand along the fireplace mantle, wishing that he could have enjoyed such gorgeous craftsmanship in the short time that he lived here. He flipped the switch next to the fireplace and the gas ignited, bathing the fireplace logs in bright, warm flames. He watched the flickering flames longingly for a moment. How sexy would it be to make love with Brandon in front of the fire on a cold winter night? He shut the switch off and moved on.\n\nThe living room flowed right into the dining room, which had a simple chandelier and white wainscoting on the walls to differentiate it from the living room space. Lonnie leaned on the new counter that separated the brand new kitchen from the dining room. New stainless steel appliances, custom cabinets, and granite countertops gave it a fresh, contemporary look.\n\nBrandon set the pizza box and bags on the breakfast bar and they continued their tour. Off the kitchen was a pantry and a utility room that had a new washer and dryer. Moving down the hallway to the bedrooms was the newly remodeled bathroom, the two smaller bedrooms and finally the master bedroom.\n\nIt was the master bathroom that made Lonnie want to cry from envy. A new bathtub with jets sat in the corner. There was a separate glass shower stall big enough for two, complete with dual shower heads. A huge mirror took up the wall above the double sink vanity. The tile work was simply amazing.\n\nRicky's nails clicked on the tiled floor as he walked around the bathroom, sniffing all of the new fixtures. Brandon snapped his fingers. \"Boy, if you lift your leg in here, I'm gonna drop kick your ugly little ass.\"\n\nAs they walked back to the kitchen, Lonnie shook his head. \"Brandon, this is just amazing. I can't believe the work you guys put into it. I thought you were going to go cheap and quick?\"\n\n\"Well, it started out that way, but this place is special to me.\"\n\nLonnie squeezed Brandon's hand, touched that he thought of the house where they first met as special. \"Yeah. It's nice to see it like this, the way it should be.\"\n\n\"Let's go out back.\"\n\nThey walked into the kitchen towards the back door. Lonnie smiled when he saw that the doggie door was still there.\n\nRicky darted between their legs, heading right for the doggie door. He hit the doggie door and then fell back onto his butt when it didn't swing open.\n\n\"Aw, poor baby,\" Lonnie said.\n\nRicky yipped at the door.\n\nBrandon laughed and tapped it with his steel-toed boot and it didn't swing open.\n\n\"It's remote controlled, like Toby's,\" he explained. \"It only opens with the right sensor on the dog collar. Don't want any ugly stray mutts to come in and squat.\"\n\nLonnie laughed. \"You're so mean. Don't talk about our baby that way.\"\n\nBrandon lifted an eyebrow and looked down at Ricky. \"That is not my baby. That is a dog.\"\n\n\"Mm-hmm. Whatever you say.\" Lonnie knew damn well how much Brandon loved Ricky, no matter what he said.\n\nLonnie opened the door and walked past a protesting Brandon.\n\nStepping through the back door, the back yard was unrecognizable. In place of the crumbling concrete steps was a brand new wooden deck. The deck wasn't too large, but it would be plenty big enough to hold a patio table set and a barbecue grill.\n\nThree little steps led down to a completely sodded back yard that was now enclosed in with a wood-slat privacy fence. A row of saplings along the back fence would give the yard a little more privacy once they grew up and out.\n\nLonnie leaned against the deck railing and looked out at the yard, watching Ricky running around the yard looking for the perfect spot to lift his leg on.\n\n\"You like it, cupcake?\" Brandon asked as he slid next to Lonnie and put his arm around his shoulders. He leaned down and pressed his lips to the top of his cupcake's head.\n\n\"I love it. It's perfect, Brandon,\" he replied quietly. \"Whoever buys this place will be really happy.\"\n\nWhile he was overjoyed that the house had been renovated so lovingly and so beautifully, the thought of someone else living in the house hurt his heart. Lonnie blinked away the tears that started to form. He was just being stupid. It was just a house. He pulled the key out of his pocket and held it out to Brandon.\n\nBrandon closed Lonnie's fist around the key. \"That's yours, cupcake.\" He unclipped the keychain connected to his belt and held it up, jingling the many keys there. \"I already got one.\"\n\nLonnie opened his palm and looked at the key. The sound of Brandon's keys snapped him out of his trance. He looked up and stared open-mouthed at Brandon as he reclipped his keys to his belt. What was Brandon saying? Did he mean... Surely not!\n\nBrandon leaned against the railing and pulled Lonnie to his chest and bent down and kissed the top of his head. Lonnie tilted his head back and looked up at the big bear who was holding him so tight.\n\n\"This is our place now, baby,\" Brandon spoke quietly. \"I want to start new with you. Me, you, and Ricky... We're a little family now, hmm?\"\n\nLonnie buried his face in Brandon's chest and wrapped his arms around him. He couldn't help the emotions that bubbled over and his shoulders shook as he silently cried tears of happiness.\n\nBrandon held him tighter when he felt Lonnie trembling in his arms while hiding his face in his chest. He rubbed his hand down Lonnie's back, trying to calm him. He rubbed his nose in Lonnie's hair and gave him a kiss on top of his head. \"So, what do you say, cupcake? You wanna move here with me?\"\n\nLonnie nodded against Brandon's chest. He lifted his head and nodded again as he looked into Brandon's eyes. He sniffled and swallowed, finally getting his emotions under control. \"Yes, Brandon. I would love to.\"\n\nBrandon wiped Lonnie's face dry, then kissed him. Lonnie opened for Brandon's tongue, sucking it into his mouth. He didn't pull away until he was close to passing out from lack of oxygen.\n\nBrandon held Lonnie's chin in his hand and stroked his thumb over Lonnie's bottom lip. \"You know I love you, don't you?\" Brandon asked.\n\n\"Yes. And I love you, too.\"\n\n\"You make me so damn happy.\" Brandon's voice cracked a little at the end. His eyes started to itch a little and he had to blink a few times.\n\nBrandon's reaction melted Lonnie into a puddle. It was very rare that Brandon let his emotions show. \"You make me happy too.\" Lonnie sniffled and wiped his nose. \"So what are you gonna do with your old place?\" Lonnie asked as he stroked his hands over the soft flannel covering Brandon's chest. He rubbed at the wet spot that might have come from his eyes or, yikes, from his nose. He found the tufts of auburn hair peeking out at the hollow of Brandon's neck and twirled his finger around them.\n\n\"The company's gonna fix it up and sell it. Trade this flip for that one.\"\n\n\"It doesn't bother you... selling your home?\"\n\n\"Nah. That place never really held any sentimental meaning. I mean, I lived there with my ex-wife, but I'm moving on. I'm starting over with you. It only makes sense that we start with a new home. And what better place than right here, huh?\"\n\nLonnie nodded and snuggled closer to Brandon. \"When I first saw your house, it made me sad for you. It was so empty, just a shell... Kinda like you were when I first met you,\" he said. He ran his fingers over Brandon's beard and looked up at him lovingly. \"But look at this place now... It's been totally transformed. It just needed love and care. Just like you, Brandon.\"\n\nBrandon drew in a ragged breath and blinked, trying to soothe the burning behind his eyes. \"Being here with you, baby... It's like coming home. And I'm never gonna leave.\"\n\nBrandon captured Lonnie's mouth in a soul-searing kiss. \"I love you, cupcake,\" he whispered against Lonnie's lips, then pressed one more kiss.\n\nLonnie clutched at the key in his fist and returned Brandon's kiss.\n\n***\n\nBrandon watched Lonnie set the pizza box on the counter and pull the sodas out of the bag. Lonnie pulled out the big stack of napkins and started to get ready for the pair to eat dinner.\n\nBut Brandon wasn't in the mood for food. He was hungry for something else. He licked his lips as he stared down at the round cheeks of Lonnie's rocking ass. So damn tight and perky. He moved behind Lonnie and leaned in close, letting him feel the heat of his bigger body. Lonnie froze and drew in a puff of air.\n\nBrandon let his hand slide down Lonnie's right arm. He took Lonnie's hand and pressed it against his groin, letting the little man feel his erection.\n\n\"Do you feel what you do to me?\" Brandon whispered into his ear.\n\nLonnie closed his eyes and shuddered. The sensation of Brandon's beard and the warmness of his breath tickling his ear was just too hot. He squeezed the large bulge in his hand, stroking his fingers back and forth over the denim-encased flesh.\n\nLonnie turned around and lifted his head up for a kiss. When Brandon leaned down, Lonnie opened his mouth for his slick tongue. His hands moved to Brandon's belt and quickly unbuckled and then unzipped his jeans. Since Brandon never wore underwear, his dick came free and slapped against his belly. Lonnie couldn't help the moan that slipped past his lips. Brandon had the most perfect dick. It was so big, so hard.\n\n\"Suck it, boy,\" Brandon growled as he pushed Lonnie onto his knees.\n\nLonnie willingly dropped to his knees in front of his bear. The hardwood floor was cold and hard against his knees, but he didn't care. He ran his tongue up the underside of that magnificent cock, tracing along the largest of the veins. He could feel the hot hardness pulse with each of Brandon's heartbeats. When he got to the underside of the head, he flicked his tongue back and forth across that ultra-sensitive little piece of flesh where his foreskin connected below the head. Brandon groaned and tightened his hands in Lonnie's hair.\n\nLonnie gripped the base and aimed it down. He took the head into his mouth and started to suck. He knew exactly how Brandon liked his blowjobs. He relaxed his throat and took Brandon deep. When he pulled back, he sucked down all the slobber with a slurp and swallowed. He took another breath as he slid back down. When the head bumped the back of his throat, he swallowed and took in another inch.\n\nHe felt like he barely got started when Brandon reached down and pulled him back to his feet. He looked at Brandon questioningly.\n\n\"You're gonna make me come too quick,\" Brandon explained. \"Your mouth is just too fucking good, and I'm gonna be inside your ass when I come.\"\n\nBrandon kissed Lonnie slow and deep, stroking his tongue with his own. Lonnie sucked Brandon's tongue into his mouth, and Brandon pushed his throbbing cock into Lonnie's belly.\n\nWhile they kissed, Brandon began unbuttoning Lonnie's shirt. He needed his boy naked. He tossed the shirt aside, then started on his pants. Lonnie held himself steady on Brandon's big frame and toed off his shoes.\n\nBrandon reached into the duffel bag and pulled out a thick comforter. He spread it on the wood floor, hoping that it would be enough padding. He dug around the bag and pulled out a brand new bottle of lube.\n\n\"Lay down on your back,\" Brandon commanded.\n\nLonnie instantly obeyed, laying down, spreading his legs with his arms at his sides. Brandon could see his boy was trembling with desire and need. His cheeks were flushed and his breathing was already quickening. His dick was rock hard, laying rigid against his stomach, pointing towards his belly button. Redness crept down the dusky shaft, and the crown glistened with slick pre-come.\n\n\"You're so obedient,\" Brandon told him. \"Such a good boy. I think you deserve a reward.\"\n\nBrandon stroked his hands down Lonnie's body, caressing his perfect skin. \"Your skin is so soft, baby. So smooth and creamy...\" When his hands reached his boy's waist, he rubbed his thumb over Lonnie's clover tattoo.\n\nLonnie let out a little moan as Brandon touched him, letting Brandon know how good he was making him feel. Brandon grabbed his boy's legs behind the knees and pushed them up and out, spreading him wide. He dipped his head down and licked Lonnie's delicate sack, pulling his balls into his mouth one at a time until they pulled up tight against his body.\n\nBrandon grabbed Lonnie's dripping dick and slid his fingers around, smearing the copious pre-come all over. He pulled the stiff dick away from Lonnie's belly and slid his fingers over the sensitive head and watched a pearly drop ooze out of the slit. He swiped his tongue over the tip and Lonnie's breathing hitched.\n\nLonnie panted and arched his hips up just a bit before dropping back down. \"Daddy, please,\" he moaned, his voice tight and needy.\n\nBrandon knew what Lonnie was asking for. In the two months they'd been together, Brandon still hadn't taken Lonnie into his mouth. Lonnie gave him head nearly every morning and they fucked nearly every night. Brandon regularly ate Lonnie's ass, but for some reason, he couldn't get himself to suck his dick. Lonnie had never asked him to do it, but who wouldn't want a hot mouth on their dick?\n\nLonnie lifted his hand, and paused hesitantly, then moved the shaking hand to the back of Brandon's head. His delicate fingers lightly rubbed the stubble of Brandon's high and tight cut. Brandon looked up and his eyes met Lonnie's. The depth of emotion in the boy's expressive brown eyes never failed to amaze him. Those eyes were begging. Lonnie's hand on his head gave the gentlest of nudges while his hips pushed up slightly.\n\nHow could Brandon possibly resist his gorgeous boy? With his fingers tight around the base of Lonnie's cock, Brandon pulled it up so that it was pointing upwards. He never took his eyes off Lonnie's as he took him into his mouth.\n\nAs he closed his lips around the shaft and began sliding his mouth down, he watched Lonnie's facial expression. Lonnie's mouth dropped open and he drew in a deep breath. Brandon had never done this before, but he found it wasn't so bad. He knew Lonnie liked a more gentle touch since he was so sensitive, so he sucked softly while his mouth slid up and down. He kept a tight seal with his lips and made sure to keep his teeth covered. No one liked their cock scraped. He must have been doing it right, judging from the sexy whimpers and moans spilling from Lonnie's mouth.\n\nBrandon was surprised to find that he enjoyed having Lonnie in his mouth like this. Lonnie's dick didn't really have a taste, but the leaking pre-come was sweet and salty and slippery. Brandon managed to wet his middle finger, while still working Lonnie with his mouth. His finger slid into Lonnie's crease, searching for the hairless target hidden there. Lonnie moaned and spread his legs wider, encouraging Brandon. A gentle push and Brandon's thick digit was buried inside his boy's tight heat. A flick forward and he rubbed the rough, calloused pad of that finger against Lonnie's walls, pressing against his sensitive gland on the other side.\n\nLonnie bucked up, pressing his dick deeper into Brandon's mouth. \"Oh god, daddy!\" he cried. He grabbed a handful of the comforter in his fist while the other hand tensed on Brandon's head.\n\nBrandon moaned around Lonnie's dick, bobbing his mouth up and down. His boy's dick wasn't big, but he was just right for sucking as far as Brandon was concerned. Brandon found he could easily take him from tip to root with each stroke of his mouth. His finger moved inside his ass in a counterpoint rhythm. When he replaced the single finger with both his index and middle fingers, Lonnie started to shake. Brandon knew that Lonnie was about to come, but he was so into what he was doing, so into Lonnie's responses, that there was no way in hell he was going to pull off. Brandon increased his head speed and moved his fingers with increasing pressure, wanting to make sure Lonnie was stretched for what was going to happen next.",
        "\"Brandon,\" Lonnie warned in a gasping breath. Lonnie's body shook uncontrollably as he tried to squirm away from Brandon's mouth and hand. The pleasure was just too intense. He let out a cry that bordered on pain. \"I'm coming, I'm coming!\"\n\nBrandon ignored Lonnie's attempts to pull away. He pressed a hand on his boy's belly, fanned out his fingers and pinned him down. He bobbed his head faster and stroked his pumping fingers against Lonnie's g-spot.\n\nA bitter-sweet fluid exploded into his mouth and he suppressed the urge to gag and swallowed it down. He sucked harder, still bobbing his head while Lonnie screamed, bucked and writhed beneath him until he was completely spent. But Brandon didn't stop. Knowing how sensitive Lonnie got after he came, he sucked harder, wanting to drive the boy to delirium.\n\n\"No more,\" Lonnie cried. His hips pulled back and he kicked his legs out and tried to pull Brandon's head away. \"I can't! Sensitive! Oh my god!\"\n\nBrandon growled around Lonnie's dick, sucking hard on the head and twisting his mouth around. He fluttered his tongue back and forth over the top of the slit, making Lonnie buck beneath him. \"Daddy!\"\n\nBrandon plunged down the shaft again and an extra burst of liquid oozed into Brandon's mouth. He growled wolfishly and swallowed it down, damned pleased with himself.\n\nBrandon finally let Lonnie go with a pop. He crawled on top of Lonnie, pushing his thighs wide apart with his knees. He looked down at the younger man with a grin on his face. \"Good boy,\" he growled.\n\nLonnie looked up at Brandon with wonder and awe. His man just gave him the best blowjob he had ever experienced and made him come not once but twice! In a row!\n\nOh, wow, Brandon looked so freaking sexy right now. Brandon's swollen lips and his thick beard were soaking wet with spit and spunk. His green eyes shined bright with love, love for Lonnie.\n\nLonnie reached up and pressed a hand to his furry jaw. He wanted to speak, but he was unable to form the words. He was afraid he'd burst into tears. His emotions were just all over the place today. He never felt more loved and cherished than he did right now.\n\nBrandon turned his head and kissed the inside of Lonnie's palm. \"My sweet boy,\" he whispered. \"My cupcake.\"\n\nLonnie relaxed as Brandon shifted and his weight settled on top of him. When he felt something poking his balls, he realized that his man still needed relief. He reached between the big man's legs and wrapped his fingers around the hardness he found. He maneuvered the head of that monster dick beneath his balls. It poked into Lonnie's taint, wet and hot, probing and seeking that tight entrance. Lonnie licked Brandon's sloppy chin, tasting his own juices trapped in the thick beard. Mmm, talk about a flavor saver. Woof!\n\nBrandon bent down and kissed Lonnie hard while his hips began a slow grinding, hard and hot and needy.\n\nBrandon reached for the lube and moved apart from Lonnie temporarily to break the plastic seal and snap the top open. He gave the bottle a squeeze and nothing came out. Shit. He had to twist the top off to get rid of the paper cap. While he fumbled impatiently with the bottle, Lonnie sat up on his elbows and took Brandon's hard-on in both of his hands.\n\nBrandon grabbed a delicate wrist and stilled the milking motion. \"You're gonna make me shoot way too quick.\" Brandon wanted to shoot his load inside Lonnie's ass.\n\nLonnie smiled and moved a hand underneath, cupping Brandon's low-hanging nuts, so heavy inside their furry sack. \"God, I love how big you are. You're just big all over.\" Lonnie's other hand scratched through the thick pelt of hair in the middle of Brandon's chest. \"My big, sexy bear man. I wanna sit on you. Can we try that?\"\n\nBrandon moved faster than he thought possible and laid flat on the blanket. \"Hell yeah. Ride me, baby.\"\n\nLonnie snickered at Brandon's eagerness. He took the lube from Brandon and straddled his lap. He poured the slippery liquid down Brandon's dick, smiling as Brandon sucked through his teeth at the coolness of the lube. A couple of twists of Lonnie's hand and Brandon was ready.\n\nHe held the heavy shaft steady while he got into position. His hole was already twitching in anticipation of having the big man buried balls deep inside him. He gently eased the generous head past his tight ring. He closed his eyes and took in a deep breath. He braced his knees on the floor and his hands on Brandon's belly, then pushed in with one smooth move. He had to pause halfway for a moment to adjust to Brandon's girth. After a few relaxing breaths, he pushed down until he was seated fully on his man.\n\nBrandon groaned as his cock was surrounded by heat. His boy was so god damned tight. His thick ten inches were buried completely inside Lonnie's lean body. Where it all fit, he didn't know. He was just glad that it did. Lonnie clearly loved it, too, since his dick was once again rigid as steel, pointing up towards his belly, dark and wet with need.\n\nWhen Brandon felt Lonnie's body relaxing, Lonnie opened his eyes and looked down at him. \"I love you, Brandon.\" He drew in a staggered breath. \"I love you so much.\"\n\nHe reached up and caressed Lonnie's face, grateful at the love that radiated from his boy. \"I love you too, cupcake. More than anything.\"\n\nLonnie lifted up and then pushed back down. Both men groaned loudly as Lonnie began to move, slow at first, then quickly building up speed once he got used to the new motions.\n\nBrandon's meaty hands gripped his boy's waist, holding on tightly, helping him to move up and down. He bucked his hips up to meet him halfway, making sure to angle right into his prostate with every jab.\n\nBrandon stared at Lonnie with unabashed lust. Lonnie's head was thrown back, eyes closed, mouth open. Christ, Lonnie was so fucking sexy riding his cock. Brandon reached up with his left hand and began pinching and rolling one of Lonnie's nipples. He hawked a wad of spit into the palm of his right hand and grabbed Lonnie's cock. Lonnie went fucking crazy.\n\n\"Daddy!\" he cried out as he began roughly sliding up and down on Brandon's cock like a mad man, bucking forward into Brandon's fist and then slamming back down on his cock.\n\nTheir bodies moved in harmony as they frantically slammed against each other.\n\n\"Fuck yeah, boy,\" Brandon growled, his voice deep and husky. \"Fuck yourself on that big daddy cock! I wanna see you fucking cream all over my cock like a little slut.\"\n\n\"I'm your slut,\" Lonnie managed to gasp. \"I'm your boy. You can fuck me whenever you want. Wherever, whatever you want. Your cock is so good, oh god, it's so big.\"\n\n\"You like that big cock, boy?\"\n\n\"I love your big cock!\"\n\n\"Your tight little ass is so fucking good. You're gonna make me shoot my load, baby.\"\n\n\"Come inside me, Brandon. Please. Oh god. Daddy, you're gonna make me come!\"\n\nIt was just too much at once: Brandon's huge cock stabbing at his g-spot, his spit-slicked hand stroking him, his other hand alternating between his nipples, tweaking and pinching them. Lonnie went into sensory overload. Lonnie froze in place, his body tight and rigid, as Brandon threw him past the point of no return.\n\nWhen Lonnie's body started to shake itself apart, Brandon took control. He gripped Lonnie's hips so tight he was momentarily worried he was going to leave bruises. He pumped his hips up as hard as he could, relentlessly jabbing and stroking against Lonnie's prostate. Lonnie threw his head back and cried out in ecstasy.\n\nLonnie's sphincter clamped around Brandon's cock and began contracting. Brandon couldn't have held back even if he wanted to. With a roar, Brandon let loose, firing jets of hot come into Lonnie's ass. He was coming so hard, he was barely aware of Lonnie's cries and the warm liquid that splattered all over his belly and hand.\n\nWhen Brandon came to his senses, he grabbed Lonnie's quivering body tightly and turned him around, laying him back on the blanket. He settled on top of him, cradling his head in his hands.\n\nBrandon watched a tear fall from Lonnie's eye, down his temple, into his silky hair. A quick swipe of Brandon's thumb brushed the track away. Brandon didn't need to hear the words to know how much Lonnie loved him. It was written all over his face.\n\nLonnie sniffed and smiled up at him. \"Can we stay here tonight?\"\n\n\"Anything you want, cupcake.\"\n\nBrandon looked down at him and knew that he would do anything that Lonnie asked him, give him anything he wanted. Lonnie was his forever. He couldn't believe that just a couple of months ago, he tried to deny what he felt for Lonnie. Claiming Lonnie was the best decision he ever made in his life.\n\nHe laid his head next to Lonnie's and pressed a kiss on his collarbone. Lonnie's hands rubbed down his back. One hand moved to his shoulder while the other settled above his ass, where he raked his fingers through the patch of hair above his ass crack. Damn, his boy really loved his body hair.\n\n\"Maybe after we rest a bit, we can try out that new shower.\"\n\nLonnie let out a soft sigh. \"That sounds nice. Brandon? How soon can we move?\"\n\nBrandon pressed his lips to the side of Lonnie's head. \"The house is ready to move in. As soon as we get packed.\"\n\n\"Let's start packing first thing tomorrow,\" he said with a happy grin.\n\nBrandon chuckled at Lonnie's eagerness. \"We have to make a slight detour first. Ben's got a surprise of his own for Benji.\"\n\n\"Aren't they still in Iowa? When are they coming back?\"\n\n\"Get ready for a road trip, baby,\" Brandon said with a grin.\n\nLonnie couldn't get over how his big bear looked like a little cub who had gotten into the honeypot. Well, he did just feast on Lonnie's goodies, but what the heck was he up to now?\n\nA muffled 'Yip!' had Lonnie raising his head up. \"Where's Ricky?\"\n\n\"Oops. I might have left him outside.\"\n\n***\n\nBenji paced back and forth in the lobby. He felt like the bottom was going to drop out of his stomach while waiting for their appointment.\n\nHe heard the creak of the men's room door and turned. Ben stepped out, wiping his hands on his pants. If Benji didn't feel like he was going to throw up, he would have taken the time to check out how nice his man looked. They were dressed alike, each in black slacks and a white linen shirt. It wasn't too dressy, but it was still stylish and, more importantly, very comfortable. Benji was surprised that Ben picked out the clothing for the big day, since Ben was more of a t-shirt and jeans kind of guy. But Ben admitted that Lonnie helped; his friend just didn't know what the clothes were for. Benji felt that Ben pulled off the outfit better. The shirt looked good on his big frame. Benji looked down at Ben's feet and noticed his big boots, the ones he always wore. He couldn't help but smile.\n\n\"Don't be nervous, baby.\"\n\nBenji took in a deep breath. \"I can't help it.\"\n\nBen looked up at the clock on the wall and frowned. He looked towards the front door.\n\nBenji turned and looked at the clock. Just shy of an hour to go.\n\nThe door to the Justice of the Peace's office opened and two women exited, holding hands. They were both wearing white suits. They looked at Benji and Ben and smiled warmly at them as they walked past.\n\nBenji waved and smiled back and all of his nerves evaporated as he watched the couple laughing and hugging each other.\n\nHe looked up at Ben as he took his hand. He moved in close and Ben put an arm around him. Ben led him over to a bench and the two sat down to wait their turn.\n\n\"Finally,\" Ben grumbled.\n\nBenji looked up and followed Ben's gaze.\n\nBrandon and Lonnie rushed in the front door and hurried over to Benji and Ben.\n\nBenji stood up with Ben, his mouth open in shock.\n\n\"Oh my god!\" Lonnie squealed and grabbed Benji in a tight hug. \"I can't believe it!\"\n\n\"What are you doing here?\" Benji asked, looking between Lonnie and Brandon, who was hugging his brother.\n\nBen put his hand on Benji's back. \"You didn't think we'd get married without our two best men, do you?\"\n\nBenji wrapped his arms around Ben and laid his head on his big man's chest and squeezed him tight. \"I love you.\"\n\n\"I love you, too, baby.\"\n\nBenji let go of Ben and looked back at Brandon and Lonnie accusingly. \"Wait a minute. What did you do with Toby? You're supposed to be watching him.\"\n\n\"Toby and Ricky are back in our motel room,\" Lonnie said. \"We're in the same motel as you guys.\"\n\nBrandon grunted. \"Do you know what it's like driving two little dogs halfway across the country? When the both of them weren't running back and forth across the backseat from window to window, they were squeaking those fucking toys. Driving me fucking crazy. After Ricky pissed in the backseat of my truck, I almost threw him out the god damn window with Toby's god damn stuffed duck. Then we had to stop every five fucking minutes to make sure they wouldn't have an accident.\"\n\nBenji looked at Lonnie and the two of them struggled, trying not to laugh at the grumpy bear.\n\nBenji then gave Lonnie a stern look. \"Did you know what Ben was going to do?\"\n\nBrandon and Ben both laughed and Brandon answered for him. \"No. You know Lonnie would have blabbed before you even got on the road.\"\n\nLonnie spun on his heels and put a hand on his hip. \"Hey, I can keep a secret.\"\n\n\"Benjamin Davis and Benjamin Carter.\"\n\nThe two couples turned back towards the Justice of the Peace's office door.\n\n\"Here we go,\" Ben said.\n\n***\n\nBrandon held up his champagne glass. \"To my little brother and my new little brother-in-law. I wish the two of you a lifetime of happiness. You both deserve it.\"\n\n\"Thanks, Bran,\" Ben said after clearing his throat.\n\nBenji clinked his glass against Ben's, then Brandon and Lonnie's. He took a sip of the bubbly. \"Mmm. It's sweet.\"\n\nLonnie let out a squeaky laugh. \"It tickles my nose.\"\n\nBrandon laughed and put his hand on the back of Lonnie's chair and twirled his fingers through the hair at the nape of Lonnie's neck. He let out a loud belch and thumped his chest a couple of times with his fist. \"Bubbles.\" He set his champagne glass aside and switched back to his beer, as did Ben.\n\n\"I want to thank you guys for coming,\" Benji said to Lonnie and Brandon. \"It means a lot to me. To us.\"\n\n\"We wouldn't miss it for the world, little bro,\" Brandon said.\n\nThe waiter arrived with their salads and the four men settled to enjoy their dinner.\n\n\"It's your turn now,\" Benji said quietly to Lonnie. At Lonnie's questioning expression, Benji tapped his wedding band.\n\n\"I gotta meet Lonnie's mama first,\" Brandon said as he set his beer bottle back on the table. \"In person, not just on the phone.\"\n\nLonnie looked back at Brandon and the two gazed into each other's eyes, becoming lost in each other.\n\nBenji turned to Ben and let out an exaggerated sigh. \"Ah, young love...\"\n\nBen laughed and leaned down and kissed his husband.\n\n***\n\nBen stood naked at the window, adjusting the air and heat unit, while Benji tugged the blankets back and crawled into bed.\n\n\"Close the curtains, Ben,\" Benji said. \"You're showing off my new goods to the whole city.\"\n\nBen laughed and tugged the curtains closed. He turned back to Benji, grabbed his six inches of flaccid dick and wagged it at Benji. \"Oh, so this is yours now?\"\n\n\"Yup. It's been mine for a long time now. Ever since you gave it to me... hmm... over a year ago now.\"\n\nBen crawled into bed with Benji, pushing the blankets down to the foot of the bed. He slid next to Benji and pushed his massive arm behind Benji's neck, cradling him in his arms. \"Yeah, babe. It's yours.\" Ben slid his hand down to Benji's already hard dick and gripped it in his fist. \"And this is mine.\" He ran a finger through the crack of Benji's ass. His voice dropped to a husky growl. \"This here is mine, too. You belong to me, Benji. You are all mine. No one else will ever touch you.\"\n\n\"Do you think the ring is enough to let people know? Or do you think I need to get 'Property of Ben Davis' tattooed on my forehead? Or do you want to club me over the head and drag me around by the hair?\"\n\n\"Smart ass,\" Ben laughed.\n\nBenji laughed and put his hand around the back of Ben's neck and pulled him closer. \"I love you, my big caveman.\" He lowered his voice to a whisper. \"And I love it when you get all growly and possessive.\"\n\n\"I love you, too, baby.\"\n\nBen grabbed Benji's leg and hooked it over his, giving him access to all of Benji's body. Ben produced a bottle of lube and gave it to Benji. He held out his hand and Benji popped the cap and poured some onto Ben's fingers.\n\nBen rubbed his slickened fingers into Benji's crack. He went right for his target and slipped a finger into Benji's tight hole, making his boy moan.\n\nBen kissed Benji deeply while his fingers expertly manipulated Benji's sphincter, preparing him to take the massive cock laying against his belly, already starting to drip and ache with need.\n\nBenji broke the kiss and took a breath. \"Make love to me, Ben.\"\n\nOnce Ben was satisfied that Benji was stretched and ready, Ben moved on top of the smaller man. Benji's legs spread and cradled Ben's big body between his thighs. Benji pulled his legs back, opening himself for his man.\n\nBen pushed his dick down with a thumb at the base and ran it down Benji's crack. When the slippery head reached his hole, Ben gave a push forward. Ben's cock popped through Benji's tight muscular ring and then sunk inside. So soft and so warm, Benji's hole stretched and sheathed his cock like a glove.\n\nBen rested his weight on his forearms, and cradled his baby's head in his hands. Benji's hands rested against Ben's furry chest while his legs locked around Ben's hips.\n\n\"Move, Ben,\" Benji begged. \"Please.\"\n\n\"You feel so good, baby. You're the fucking best. I'm gonna love you forever.\"\n\nBenji grabbed Ben's waist and pulled him forward, urging him to move in deeper. Ben started out slow, then gradually moving in longer strokes until he was giving Benji his full length.\n\nBen changed up his angle until he found Benji's prostate. When he hit the sensitive nerves, Benji's body shuddered and he let out a slow groan and his head rolled from side to side. Ben kept up the slow and steady rhythm with his hips. Benji's hands slid up and down Ben's chest and stomach, back around his back up to his wide shoulders.\n\nBen made sure to peg Benji's prostate with each thrust. Benji's body trembled beneath Ben's as he arched his back up, pushing his throbbing dick against Ben's pumping body.\n\nBen leaned his head down and pushed his tongue into Benji's mouth. Benji took the kiss like he was starving. He sucked on Ben's tongue and stroked it with his own.\n\nAll the while Ben kept up the slow and steady rhythm. Each snap of his hips was slow and sure, gradually building both men up to what was going to be an explosive climax. Ben spit into the palm of his hand and pressed it between their bodies. He grabbed Benji's dick in his fist and gripped it tight.\n\nBen's mouth moved to Benji's neck. He sucked hard, purposely marking a string of hickeys along Benji's neck down to his collarbone. He nibbled and sucked and rubbed his biker 'stache all over Benji's neck, relishing in Benji's whimpers.\n\nBenji gasped and bucked his hips, trying to pump into Ben's hand while pushing back onto Ben's cock.\n\n\"Oh god, Ben... Just like that,\" Benji moaned quietly. \"Don't stop, Ben. It feels so good.\"\n\n\"Baby,\" Ben grunted. \"I'm gonna come. Come with me, baby.\"\n\nBenji's back arched up and he dug his heels into Ben's muscular ass. \"I'm coming, Ben.\" He couldn't help but cry out in ecstasy. He didn't care that he was in a motel with paper thin walls. His man was making him come!\n\nAs Benji writhed beneath him, scratching his nails into Ben's back, Ben bucked on top of the little man, stifling his grunts. He pumped Benji's ass full of spunk, filling him to overflowing. As he stiltedly sawed his hips back and forth, his spunk leaked out around the softening girth of his cock and dripped down Benji's crack.",
        "Ben collapsed on top of Benji, but managed to keep his weight from crushing his smaller lover. Their kisses were slow and leisurely.\n\nBen rolled off Benji and flopped down next to him. \"Whew. Give me a few minutes to recharge. Then we can start on round two.\"\n\nBenji's soft cock started filling out and it flipped up onto his belly.\n\nBen laughed. \"Someone likes that idea.\" He nuzzled into Benji's neck, pleased to see the red whisker burn and the red bruises. He flicked his tongue over the most prominent hickey and planted a kiss there.\n\n\"I think you marked my neck,\" Benji said.\n\n\"Maybe.\"\n\n\"Yeah right, 'maybe'. I suppose I should be grateful. Unlike the forehead tattoo, it'll fade away.\"\n\nBen grunted. \"I don't like that. I'll just have to make more of them.\"\n\n\"You're lucky I love you,\" Benji laughed as he bunched up his shoulder and squirmed away from Ben's mouth.\n\nThere was a loud bang against the wall behind their heads, startling them out of their post-orgasmic bliss.\n\n\"What the hell was that?\" Ben asked, looking up towards the headboard.\n\nBenji winced when the rhythmic thumping grew louder against the wall. The sounds coming from the room next door were unmistakable. After a muffled cry of 'Daddy!' and a series of loud, deep, animalistic grunts, there was silence.\n\nBen turned his head and looked at Benji with a raised brow and snickered. \"'Daddy'?\"\n\nBenji covered his mouth with his hand, trying to stifle his laughter.\n\nIt couldn't be helped. The dam broke and the two men rolled on the bed together, laughed loudly until their sides hurt.\n\n***\n\nBenji sat in the passenger seat of Ben's semi-truck cab staring at his left hand. He knew he had a big goofy grin on his face, but he couldn't help himself. He just couldn't stop looking at his ring. It was a traditional style gold wedding band. It was exactly what he thought Ben would wear. Benji would never take it off his finger. He begrudgingly tore his eyes away to look across to Ben. To his husband. Ben had both hands on the big rig's steering wheel. The matching gold ring on his left hand looked just as good as his own.\n\nBen glanced over at Benji and smiled. \"You happy, baby?\"\n\n\"Yes,\" Benji replied.\n\nHis smile lit up the cab. Ben reached over and grabbed his baby's left hand and brought it up to his mouth to give the back of his knuckles a couple of small kisses.\n\nBenji had never really given marriage much thought previously. It had never even occurred to him that he could even get married. But when Ben asked him, he was over the moon happy. Now everyone would know that he was Ben's and that Ben was his. Nothing would ever come between them.\n\nHe squirmed in his seat and smiled. His husband was an animal. Twice last night, then again this morning. God, his ass hurt, but it was so damn good.\n\nAfter they had breakfast with Brandon and Lonnie, they got on the road. Benji looked back in the sleeper. Toby was curled up, happily asleep with his stuffed duck. He hoped the little schnauzer would be okay until they could stop again.\n\nBenji reached between his legs and cupped his crotch as he thought of the last rest stop they visited. Benji could still taste Ben's spunk in his mouth.\n\nThey had stopped at a truck stop to use the restroom and grab some snacks. They each took a stall to pee. Benji noticed the hole between the stalls right away and couldn't help but lean back and sneak a peek at Ben's big dick. For a split second, he wondered if Ben had used these holes before he met Benji. Even if he did, it didn't matter. He knew that once Ben first set his sights on Benji, he hadn't even so much as looked at anyone else.\n\nHis cheeks started to burn as he remembered the way Ben's flaccid, hooded cock slowly slid through the hole inch by inch.\n\nOh my god. \n\nWithout even a seconds hesitation, Benji dropped down onto his knees and he took it into his mouth. He was sucking Ben's dick, right there in a public restroom! He prayed that no one would walk in because he didn't know if he'd be able to stop.\n\nHe then prayed that no cops would come and bust them. The thrill of doing something forbidden only encouraged Benji. He sucked with increased enthusiasm. His left hand held Ben's dick steady. His right hand gripped his own throbbing, aching dick.\n\nHis head bobbed up and down in a fast, steady rhythm. He flattened his left hand against the wall and took Ben into his throat. He heard Ben's breathing catch through the partition.\n\nBen stifled a grunt, as if he was trying to keep quiet. It must have been tough. His Ben was usually loud when they were having sex. Benji looked up to see Ben's hands curled over the top of the partition. Ben began thrusting his dick back and forth through the hole, his breath coming in pants.\n\nWhile he sucked Ben off, Benji jerked his own cock, desperate to come at the same time his husband did.\n\n\"Suck it, baby,\" Ben hissed over the partition as he fucked Benji's mouth through the glory hole. \"Don't stop. Fuck, you're gonna make me come.\"\n\nHearing Ben's words tripped Benji over the edge. Not taking his mouth off Ben, Benji moaned and then exploded. He came hard, spurting pools of semen onto the floor between their stalls. He had even splattered Ben's cowboy boot with a pearly ribbon of come.\n\nAt the same time, Ben let out a groan and Benji's mouth filled with Ben's hot, thick spunk. The first stream smacked the roof of Benji's mouth and pooled on his tongue. Volley after volley of the hot liquid made Benji swallow over and over. After Benji swallowed down every drop of Ben's spunk, Ben pulled out and Benji sat back on his heels and watched him through the hole.\n\nBen stumbled backwards, his jeans still pooled around his cowboy boots. He slumped down onto the toilet seat, bracing his hands on the walls, trying to steady himself. \"God damn,\" he muttered as a shudder wracked his body.\n\nBen's chuckling snapped Benji out of the memory. He looked over at Ben and his smirking face. Ben's eyes darted to the side for a second and looked at him. \"You're thinking about sucking me off at that glory hole, aren't you?\" Benji's eyes widened and Ben laughed some more. \"You are so busted.\" His hand moved to his crotch and he groped the big bulge. \"I'm thinking about it too. Shit, if I didn't think I'd crash the truck, I'd let you suck me off again right now.\"\n\nBenji laughed. \"Oh, you'd 'let' me? That is so generous of you.\"\n\n\"It sounds more manly than 'I'd beg you',\" he said, his laughter growing louder.\n\n***\n\nBen turned the semi-truck into the Ace truck entrance and parked it in the back lot. While he moved their bags to Ben's pickup truck, Benji took Toby over to a grassy spot to relieve himself.\n\nBy the time they arrived home, they were both exhausted.\n\n\"It's so good to be home,\" Benji said with a yawn.\n\nAfter making sure Toby got outside and had full water and food dishes, they got ready for bed. They tossed their bags aside, deciding to deal with them in the morning.\n\nBenji cut off the bathroom light and almost tripped over his feet when he saw Ben. He had turned down the blankets and was sitting in the middle of the bed, back against the headboard. His legs were splayed apart. His right hand was slowly sliding up and down his massive hard-on. Benji's dick went from flaccid to painfully erect in less than two seconds.\n\n\"Come to bed, baby,\" Ben said, his voice deep and growly. \"I wanna fuck my husband in our own bed.\"\n\nBenji grabbed the bottle of lube off their nightstand and jumped on top of Ben, straddling his lap. He poured some slick into his hand and reached behind him. He pressed a pair of fingers into his ass, slicked Ben's cock up and sank down on it until it was buried all the way inside him.\n\n\"Oh my fucking god,\" Ben moaned.\n\nOnce the burn of entry passed, Benji began to move. He wrapped his arms around Ben's neck and began sliding up and down. Ben gripped Benji's hips, helping his boy move.\n\n\"I like doing it like this,\" Benji panted. \"Sitting up, I mean.\"\n\n\"You feel so fucking good, baby. Damn, your cock is leaking snot all over me.\"\n\nBen's hands slid around to cup and squeeze Benji's ass cheeks. He pulled up and pushed down, helping Benji to work himself on Ben's cock.\n\nBenji held on tight to his man. He rubbed his dripping dick all over Ben's furry belly with each movement of his hips, fully impaling his ass onto Ben's girth while Ben pushed up.\n\n\"I'm getting close, Ben. You're so big,\" Benji moaned. \"So fucking thick!\"\n\nBen smacked Benji's right ass cheek. The sound echoed through the room. \"Watch your mouth, boy. I don't wanna hear my baby cussing. Leave that shit to me.\"\n\nBenji gasped and moaned, his entire body shuddering. \"Ben...\"\n\nBen slapped Benji's other ass cheek, getting another moan from Benji.\n\nBenji grabbed both of Ben's wrists. \"No more,\" he pleaded.\n\nBen easily pulled from Benji's grasp and spanked both hands on Benji's ass.\n\n\"Fuck!\" Benji cried, his back arching.\n\nBen leaned forward and nipped Benji's neck with his teeth. \"What did I just tell you? I think you forget who's in charge here. I got both of my arms now, boy,\" Ben growled. \"I think you need a reminder what I can do with them.\"\n\nHe pulled free from Benji's hands, gripped Benji tightly around the back and pushed forward. Without leaving Benji's body, he managed to push Benji onto his back. Kneeling between Benji's legs, Ben grabbed Benji's wrists and pinned them above his head.\n\n\"Oh god,\" Benji groaned, tugging at his wrists.\n\nBen watched Benji try to escape. It was useless. The boy wasn't going anywhere unless Ben wanted him to. Ben was bigger and stronger, though all Benji had to do was say the word and Ben would let him up in a flash. But the fire in Benji's eyes told him that he wanted this.\n\nBen held Benji down by the wrists, his fat cock buried inside his baby to the hilt. He didn't move his hips. Benji arched his back up and fell back to the bed and whimpered.\n\n\"Move, Ben. Please,\" Benji pleaded. His eyes misted over. \"I need to come. Please make me come!\"\n\nBen's cock throbbed inside Benji's ass. \"Damn, you beg so fucking sweet.\"\n\nBen pulled back and snapped his hips forward hard. Benji moaned loudly, his body bucking upwards. Ben continued to slam into Benji's ass, jackhammering the head of his cock against the boy's prostate.\n\nBen looked down at the little man underneath him. Benji tugged his arms, trying in vain to pull his wrists free. His body thrashed underneath Ben. His moans and whimpers grew higher in pitch.\n\n\"I'm coming,\" Benji cried. \"Oh my god, I'm coming!\"\n\nBenji tightened his legs around Ben's waist and his body tensed up. He cried out Ben's name as his climax hit hard.\n\nBenji coming underneath him set off Ben's orgasm. It hit him hard, like a fist to the nuts. He drew in a deep gasp of breath as his body emptied every ounce of spunk through his cock into Benji's convulsing ass. Ben lost count of how many jets he fired into Benji. All he knew was that he was completely drained. He'd probably shoot dust if he tried to have one more orgasm today. He groaned, his throat sore from shouting.\n\nAs he came down from his climax, Ben loosened his grip on Benji's wrists and slid them into Benji's hands, interlacing their fingers together.\n\nBenji looked up at Ben. \"You're my everything, Ben. I don't know what I'd do if I didn't have you.\"\n\n\"You won't ever have to find out, baby. I'm never gonna leave you. I'm gonna be here forever.\"\n\nBen dipped his head down and the newlyweds shared a slow, sensual kiss.\n\n***\n\nBrandon leaned against the kitchen door frame, watching Lonnie cook dinner in their new kitchen. The little man was darting around the kitchen like a dynamo. He was multitasking his ass off, really impressing Brandon with his skills.\n\nLonnie never ceased to amaze Brandon.\n\nBrandon was definitely getting used to this life. Lonnie treated him like a king, and Brandon treated Lonnie like he was God's gift, because that's what he was. He didn't know what he did to deserve Lonnie, but he wouldn't question it. Not anymore.\n\nLonnie flipped through three drawers before he found the wooden spoon he wanted. \"I can't remember where we put stuff,\" he laughed. \"I love this kitchen, by the way.\"\n\n\"I'm glad. You picked out the cabinets and hardware and the counters, you know.\"\n\nLonnie turned around and looked at Brandon. \"Yeah. I didn't know I was picking out stuff for us. I thought I was helping out the company. I thought you wanted my opinion on decorating.\" He turned back around and stirred the pot on the cooktop.\n\nBrandon moved up behind Lonnie and put his hands on his boy's slender waist. He heard Lonnie swallow, but Lonnie didn't look back at him. Brandon leaned down and kissed the top of Lonnie's head, and buried his nose in the soft, silky hair, sniffing in that wonderful, sweet shampoo scent he used. He brushed aside the hairs covering the nape of Lonnie's neck and planted a kiss there, nibbling and sucking.\n\n\"Mmm,\" Lonnie moaned. \"Your beard feels so good against my skin... and your mouth....\"\n\nBrandon pulled back, letting Lonnie's hair fall back to cover his neck. He let his forehead rest on the top of Lonnie's head and he moved his body closer to Lonnie, needing more contact with his smaller partner.\n\n\"I knew how excited you were when we were planning,\" Brandon told him. \"I saw how proud you were that we asked for your help. It wasn't a one time thing, cupcake. We're gonna need your help flipping my old place.\"\n\n\"Yeah?\" Lonnie asked as he stirred the stew.\n\n\"Yeah, if you wanna take it on. Otherwise, Walker will just throw up beige paint and be done with it. I know you want more job responsibilities. It's yours if you want it.\"\n\n\"Great!\" Lonnie said as he turned around and bounced on his heels. \"Because I have a bunch of ideas. For the master bed--\"\n\nBrandon laughed. He grabbed Lonnie's face in his hands and bent down and kissed him mid-sentence. Lonnie melted in his man's embrace and went limp against him, letting Brandon take his mouth.\n\nThey were interrupted when the doorbell rang.\n\n\"Fuck. That's probably the furniture delivery,\" Brandon said against Lonnie's lips. \"I wanna keep kissing you though.\" He pushed his hard crotch into Lonnie's belly. \"Wanna do more.\"\n\nLonnie gave Brandon's chest a push. He smiled when Brandon voluntarily stepped back; Lonnie wasn't strong enough to move the big lug. \"Go take care of the delivery men while I make dinner.\" He looked down at the bulge laying along Brandon's hip and pointed at it with his spoon. \"And you better do something with that before you answer the door, otherwise they'll know you're a sex-starved pervert.\"\n\nBrandon growled and gnawed playfully at Lonnie's neck. \"I'm starved for my cupcake. Starved for that hot little ass. Gonna eat you up tonight, cupcake.\"\n\nLonnie closed his eyes as a shudder ripped through his spine.\n\nBrandon chuckled and gave Lonnie one last kiss, before walking off with a grin to answer the door. Lonnie smacked Brandon's ass with the spoon, leaving a wet spot on the back of the man's jeans. Brandon turned around and held up a finger. \"Don't think you won't be punished for that later.\"\n\nLonnie just smiled. He went to put the spoon back in the pot. \"Shoot,\" he mumbled and tossed it into the sink. As much as he loved Brandon, he didn't want to stir their stew with a spoon covered in Brandon's ass cooties. He pulled open a drawer, shut it and then went to the next one before he found another spoon.\n\n***\n\n\"Oh, wow,\" Benji exclaimed as he ran his hand over the motorcycle. \"It's sexy. This is the one you had built?\"\n\nThe custom Harley-Davidson was hot -- black, red and chrome, all perfectly shiny. Benji walked around the big bike while Ben stood to the side with his hands across his chest.\n\n\"This is the one,\" Ben said. He lowered his voice to a husky growl. \"You're gonna look damn good sitting on the back of it. And you're gonna look even better bent over it.\"\n\nBenji's eyes darted to the salesman standing a few yards away. He tugged the front of his shirt down over his groin. \"Hurry up and sign the paperwork, Ben.\"\n\nOnce they got home, they dropped Ben's truck off and Benji got his helmet. He strapped the helmet on and stopped. He stared at the bike, but couldn't bring himself to get on.\n\n\"You okay, baby?\" Ben asked.\n\nBenji looked over at Ben. Ben was looking at him, but he couldn't see his eyes behind his sunglasses. He still knew that Ben's expression was concerned. Benji couldn't help but think of the accident and how Ben had been hurt.\n\n\"Come here,\" Ben said quietly. He pulled Benji close and put his arms around the smaller man.\n\nBenji leaned against Ben and breathed in his musky scent, which calmed him a little bit.\n\n\"You don't have to be scared, baby,\" Ben whispered. \"I'll be extra careful.\"\n\n\"You promise?\"\n\n\"I promise.\"\n\n\"I just don't want you to get hurt.\" Benji took a deep breath and let it out slowly. \"Okay. I can do this. I do this all the time.\"\n\nHe hopped on the back of the bike and grabbed onto Ben with a death grip. Ben throttled the engine and with a roar they took off.\n\nAs they drove, Benji started to relax. He forgot how much he loved riding with Ben. It felt good, the wind on his face, the rumbling vibrations underneath his butt, Ben's hard body in front of him.\n\nAfter a leisurely two-hour ride, taking mostly deserted back roads, they finally returned home. Once they pulled the bike into the garage, Ben dropped the kickstand and cut the engine off.\n\n\"That was fun,\" Benji said.\n\nBen got off the chopper and rolled his head on his shoulders, stretching and popping his neck. Benji watched him stretch his arms over his head.\n\nBenji wet his lips. Damn, his man looked good. He still had his sunglasses and half-helmet on with the strap unbuckled, and with his thick horseshoe biker 'stache, it made him really look the part of a tough biker. Benji could see the outline of Ben's semi-hard dick pushing down the pant leg of his worn blue jeans. His shirt had damp sweat stains soaking the armpits. Benji's husband was a man, no doubt about it. Riding on the bike had him half-erect. Looking at Ben got him the rest of the way there.\n\n\"Shut the garage door, Ben,\" Benji said while he groped his dick in his jeans. His voice was quiet and husky and Ben's eyes snapped up to Benji's.\n\n\"Fuck, baby,\" Ben groaned as he looked Benji up and down.\n\nWhile Ben took care of the door, Benji pulled off his shirt and unbuckled his pants. He pushed his jeans and underwear down and they dropped around his ankles, pooling around his shoes. Whoops, he forgot to take his shoes off first.\n\nBefore he could even get at the shoes, Ben grabbed him, spun him around, and bent him over the bike.\n\n\"This what you want, baby?\" Ben growled in his ear, as he pushed his hard cock into the crack of Benji's ass.\n\n\"God, yes.\" Benji tried to lift his leg to pull off his shoe, but Ben pushed his leg back down.\n\n\"Leave it.\"\n\nBenji heard the rip of a lube pack and then felt the cool gel being applied to his ass. A pair of fingers slid in and stretched him out. Ben was hurried and rushed in his preparations and that only turned Benji on more. He loved it when Ben got hot like this, like he couldn't wait to take Benji.\n\nBenji tried to spread his legs further, but his jeans around his shoes kept them too close. \"Ben--\"\n\n\"I said leave it.\"\n\nBen pushed a hand on Benji's back and bent him forward. Ben's legs moved to the outside of Benji's and the head of his big cock pushed its way inside him.\n\nBenji grabbed anywhere he could on the bike to steady himself. \"Yes, Ben,\" he moaned as Ben entered him.\n\nBen braced himself with one hand gripping Benji's shoulder, the other holding Benji by the hip.\n\n\"Now, Ben. Fuck me.\"\n\nWith a grunt, Ben started to move. Slow at first, then faster. His body slammed into Benji's over and over, the muffled sound echoing through the small garage.",
        "Benji looked back at his man. Ben had taken his helmet and sunglasses off and was staring at him with unabashed lust. He was still dressed, wearing his jeans and shirt. His pants were unzipped, his cock sticking out of the fly, pumping into Benji's ass. Ben's shirt was soaked through in the middle of his chest and under his arms. His forehead was damp with sweat.\n\n\"So. Fucking. Good,\" Ben grunted loudly, accenting each word with a thrust. He reached around and grabbed Benji's dick. \"Come for me. Now!\"\n\n\"Oh god!\" Benji cried out. His dick jerked in Ben's hand and began spurting all over the new bike.\n\nWith a loud roar, Ben shoved in one final time, all the way to the root. Benji could feel Ben's cock pulsing and jerking as it filled him with his warm, thick spunk.\n\nBen collapsed on Benji's back, his body shuddering on top of Benji. He pulled out and staggered backwards. \"God damn, baby.\"\n\nBenji slumped against Ben's seat, his arms and legs totally useless. \"Can't move...\"\n\n\"Fuck, you look so damn hot.\"\n\nBenji felt Ben's big hands on his ass. Ben kneaded and massaged his cheeks, pressing them together before spreading them apart. \"Fuck yeah,\" Ben whispered before he pulled away. \"So fucking hot.\"\n\nBenji laid there for a few more seconds. He knew he had to get up and clean up the bike and get dressed. Benji heard a couple of 'click' noises and looked over his shoulder to see Ben with his cell phone. He snapped a picture of Benji while his other hand stroked his rising cock.\n\nAs much as Benji liked to see Ben's foreskin sliding back and forth like that, he didn't want naked pictures of him on Ben's phone. I mean, what if someone saw it!\n\nBenji jumped up and grabbed for the phone. \"Gimme that, you big perv!\"\n\nBen lifted the phone into the air, easily out of Benji's reach. \"But it's so fucking hot, baby. God damn, look at you.\"\n\nBen turned the screen to show Benji. He was slumped over the bike, spread wide open. He looked completely debauched and totally fucked. Ben's spunk was thick in his crack, dripping down his leg. Okay, it was pretty hot, but it was definitely not for public display!\n\nBenji gasped and tried to grab the phone. \"Ben!\"\n\n\"Come on, baby. I need something to look at when I'm on the road,\" Ben said as he moved the phone away from Benji's grabbing hands. \"Look how hard you make my cock.\"\n\nBenji sighed and thought for a moment. \"If you delete that pic, I promise I'll have phone sex with you the next time you have to go on the road.\"\n\n\"Deal,\" Ben said eagerly. He made a show of pressing the delete icon, then dropped the phone into the front pocket of his jeans.\n\nBenji let out a breath of relief. \"Thank you.\"\n\nBen gave his hard-on a tug, sending a last drip of come flying onto the ground. He stuffed his hard-on into his jeans and buttoned up while Benji got dressed.\n\n\"I think I need a nap,\" Benji said as he stifled a yawn. \"I'm exhausted.\"\n\n\"Sounds good to me. It's been a long day.\"\n\nAs Ben exited the garage's side door leading towards the house, a thought occurred to Benji. \"Hey. Did you take more than one picture of me?\"\n\nBen didn't turn back, just kept walking, but Benji could swear the big guy was chuckling.\n\n\"Ben!\"\n\n***\n\nBrandon shoveled his last french fries into his mouth. As he chewed, he picked up the phone and looked at the time. He had met Walker at Ray's for a quick lunch to give Walker Lonnie's design choices for the new flip.\n\n\"We gotta get going,\" Walker said. \"I need to get back to your place. Uh, your old place.\"\n\nBrandon picked up his cup of soda and finished it off. \"I'm ready.\"\n\nBrandon signaled the waitress to bring their check. When he saw the burly, bearded man at the cash register, he wasn't going to let him go without talking to him. Not this time.\n\n\"Meet me in the parking lot,\" Brandon growled.\n\nWalker turned around in the booth to see what was going on. \"Brandon, leave it.\"\n\nBrandon pulled out his wallet and tossed a handful of bills onto the table. \"Pay my bill for me,\" he said, ignoring his business partner's warning.\n\n\"O'Reilly,\" he called out after the man as he pushed the diner door open.\n\nLonnie's dad stopped at his pickup truck and turned around and looked at Brandon. \"Yeah?\"\n\n\"My name is Brandon Davis,\" he said. He held out his hand.\n\n\"Dylan O'Reilly.\"\n\nDylan had the decency to shake Brandon's hand.\n\n\"I wanna talk to you about your son,\" Brandon said. He noticed that Dylan's posture stiffened. \"I know you saw me with him a few weeks ago.\"\n\nDylan cleared his throat and shifted between his feet, giving Brandon what Brandon took for a guilty expression. He should feel guilty for what he did.\n\n\"Lonnie and I have been seeing each other for a while. Things are serious between us.\"\n\nDylan looked back at Brandon and frowned. \"You don't look like a queer.\"\n\n\"Well, I am, and I'm in love with your son. The way you treat him hurts him, and that really pisses me off.\"\n\nDylan sighed and leaned back against his truck. \"Look, I've known for a long time that something wasn't right about Lonnie. I tried to get him interested in guy stuff, but he just gave up trying. When me and Keiko split up, he didn't want nothing to do with me.\"\n\n\"First off, there's nothing wrong with Lonnie. And did you ever try to do anything that Lonnie was interested in? Lonnie told me that he was in drama club. Did you even go to any of his shows?\"\n\nDylan cleared his throat and rubbed the back of his neck, not making eye contact with Brandon.\n\nBrandon shook his head and sighed. \"I think you need to talk to him.\"\n\n\"I don't know what to say to the boy. We don't got nothing in common.\"\n\nBrandon pulled a business card from his wallet and wrote down Lonnie's cell phone number. \"He's your son. That's what you have in common. Be a fucking man and give him a call.\"\n\nBrandon gave the card to Dylan and turned and walked away without another word.\n\n***\n\nBenji and Lonnie walked out of the department store with their bags and headed back to Benji's car.\n\nBenji had bought Ben a couple of t-shirts and a new pair of jeans to replace the ones that had developed a hole in the butt. Lonnie didn't find anything he thought Brandon would like but did find a good deal on towels for their master bathroom.\n\n\"You ready for lunch?\" Benji asked.\n\n\"Yes, I'm starved.\"\n\nThe pair went to a small cafe near the mall and decided to eat on the patio since it was such a nice day.\n\n\"How's Brandon doing with quitting smoking?\" Benji asked Lonnie.\n\nLonnie swallowed his mouthful of food and wiped his mouth with his napkin. \"He's doing really good, actually. I think it's a stress thing for him. He's a lot more relaxed these days. The mornings are when it's kinda bad. He's especially grumpy wanting a smoke, but um... I figured out a way to take his mind off it.\"\n\nBenji set down his drink and leaned in closer to Lonnie, a big grin on his face. \"Oh? So did that trick work?\"\n\n\"Yeah.\" Lonnie blushed and leaned in closer. \"I can make Brandon come in, like, two minutes.\"\n\nBoth men laughed. Lonnie looked around to make sure no one was listening. \"I still can't get it all, but I'm working on it. Brandon is huge.\"\n\n\"I'm sure Brandon doesn't mind the practice,\" Benji snickered. \"It took me a while to do it. Ben's really big, too. And my god, the first time we did it, I thought I was going to die.\"\n\n\"Oh my God, I can't believe we're talking about this.\"\n\n\"I know right. But you know that Ben and Brandon talk about sex all the time.\"\n\nLonnie rolled his eyes. \"Men are such pigs.\"\n\nBenji and Lonnie cracked up.\n\nBenji pushed his plate away from him and laid his napkin on the table. \"That was good, but I am stuffed.\"\n\n\"Me, too.\"\n\n\"I was gonna get dessert, but I didn't save room--\"\n\nLonnie's cell phone started to ring and he pulled it out of his pocket.\n\nBenji watched Lonnie stare at the screen for a moment.\n\n\"It's my dad.\"\n\nBenji handed Lonnie his car keys. \"Go on ahead. I'll take care of this.\"\n\nLonnie nodded and took the keys. He answered the phone as he walked away. \"Hello?\"\n\nBenji watched Lonnie push through the patio gate and head through the parking lot towards his car, the phone up to his ear. He really hoped that the man didn't upset Lonnie.\n\nThinking about Lonnie and his dad had Benji thinking about the last time he saw his own dad. His dad didn't know that he was married now. Benji stared at the ring on his left hand and wondered if his dad had married that woman yet.\n\nHe wanted to get out of here and go home. He wanted to see Ben.\n\nHis cell phone chimed and buzzed in his pocket. Benji pulled out his phone and looked at the screen. Speak of the devil. He had received a text message from Ben: 'HURRY HOME. NEED U'.\n\nBenji started to panic. What was wrong? What did Ben need? He waved for the waiter to bring their check.\n\nHis phone buzzed again. Ben had sent him a picture message. He tapped his screen and the image of Ben's large, fully erect dick was plastered all over his screen.\n\nA sharp gasp from behind made Benji quickly turn off his screen. The red-faced waiter set the check presenter on the table and then ran off.\n\nBenji was mortified. He could not believe that Ben did that. He tapped a reply back to Ben: \"You are so gonna get it when I get home!\"\n\n'FUCK YEAH BABY!!!' was Ben's reply.\n\nBenji couldn't help but laugh. That was so not what he meant. But yeah. Ben was going to get it when he got home.\n\nBenji put down enough cash to leave the shell-shocked waiter an extra nice tip.\n\nMaking sure no one was looking, he took one more look at the picture. Damn, his husband had a nice cock. His finger hovered over the delete button, but then he tapped 'save' instead. Hey, if Ben could have pictures of his ass, then he could have a picture of Ben's dick.\n\nWhen Benji got to his car, he found Lonnie in the passenger seat, staring at the cell phone in his lap.\n\nBenji got in the driver's seat and looked at his best friend. His eyes were red and puffy. He had been crying. Benji's eyes welled with sympathetic tears.\n\nBenji reached out and put his hand on Lonnie's. \"Are you okay, Lonnie?\" Benji asked him.\n\nLonnie sniffed and shook his head, and turned and looked back at Benji. \"Yeah. Um. Is it alright if we just go home now?\"\n\nBenji squeezed Lonnie's hand. \"Yeah. Of course.\"\n\n\"It's nothing bad,\" Lonnie said with a smile. \"He said he was sorry. Kinda.\"\n\n***\n\nLonnie waved goodbye to Benji as he pulled away. He could hear the lawnmower in the backyard, so he went inside and set down his bag.\n\nHe found Ricky in the kitchen at the back door. The little chihuahua mix was highly annoyed that his daddy had locked his doggy door and left him inside. Lonnie picked Ricky up and gave him a quick kiss on top of his head.\n\n\"Sorry, baby, you can't go outside while big daddy's mowing the lawn.\"\n\nHe set the little dog down and went out the back door and sat down at the patio and watched Brandon mow the lawn.\n\nBrandon was wearing a pair of work boots with white socks, denim shorts and a wifebeater. He had his sunglasses on, but his baseball cap was on the patio table. He was a sweaty mess. Damn, his big bear looked good.\n\nWhen Brandon finally saw Lonnie, he stopped the lawnmower and walked up to the porch. He leaned down and gave Lonnie a quick kiss.\n\n\"Hey, cupcake. You're back early.\"\n\n\"Yeah.\"\n\nBrandon's brows furrowed. He pulled off his shades and set them on the table. \"Are you okay? What's wrong?\" He squatted down in front of Lonnie and grabbed his hands.\n\nLonnie couldn't help himself. He started to cry. He grabbed Brandon and pulled him closer and gave him a tight hug.\n\n\"Cupcake, you're scaring me.\"\n\nLonnie laid his head on Brandon's shoulder. Brandon was soaking wet with sweat, but Lonnie didn't care. He needed to be close to his man right now. \"My dad called me.\"\n\nLonnie felt Brandon's body tense up. \"What did he say?\"\n\n\"It was so surreal.\"\n\n\"Let's go inside and get comfortable, okay?\"\n\n\"Okay.\"\n\nBrandon took Lonnie's hand and led him inside, straight to their bedroom. He wanted to crawl into bed with Lonnie, but he realized that he was a mess.\n\n\"Shit,\" Brandon muttered. \"I'm all sweaty. Ah shit, I got you all sweaty too.\"\n\n\"We can take a shower.\"\n\n\"Okay,\" Brandon agreed. That would be a good way to relax them.\n\nBrandon followed Lonnie into the bathroom. When Lonnie got the shower temperature adjusted, they stepped in and shut the glass door behind them. Brandon rinsed the layer of sweat off his body, then pulled Lonnie into his arms.\n\nThey let the warm water from the dual shower heads wash over them. Lonnie found his body relaxing and going limp under the steam. Lonnie laid his head on Brandon, resting his cheek on Brandon's furry chest. His hands held tight around Brandon's soft waist. \"I'm okay, Brandon,\" Lonnie said with a sigh.\n\nBrandon pressed his lips to the top of Lonnie's head. \"You wanna tell me what happened?\"\n\n\"We were having lunch when he called. It was weird. He was making nervous small talk, you know, about the weather and stuff. He asked about work, and I told him about my new job. He seemed like he liked that I was working for a construction company. He said it was hard, honest work. He's big on that. He said he was sorry that he didn't try harder when I was younger.\"\n\nLonnie's voice cracked and he held Brandon tighter, needing his strength to keep from falling apart.\n\n\"I asked him if he wanted to come over for dinner sometime,\" Lonnie said with a sniffle.\n\n\"Yeah? What did he say?\"\n\n\"He said he was still trying to work through the whole 'gay' thing. He said he couldn't deal with me and you at the same time, knowing that we are... together. But he said maybe we could have lunch, just me and him. He said he'd call me.\"\n\n\"You don't think he will?\"\n\n\"I don't know. He always said he'd do stuff before but then never did. I guess we'll see.\"\n\n\"It sounds like he's trying. Give him time.\"\n\n\"You think? I'm not gonna hold my breath, but I hope you're right.\"\n\n***\n\nOver the next few weeks, Lonnie and Brandon settled into a comfortable life together in their new home.\n\nAnd it looked like a home, too. Lonnie definitely had the gay decorating gene. The rooms were warm and inviting but still reflected a comfortable masculine vibe. When you walked through the home, you could see Brandon and Lonnie's personalities reflected in every room.\n\nThey divided up their chores pretty evenly. Brandon was happy to do the cleaning and the dishes, while Lonnie took care of cooking and laundry.\n\nLonnie also took care of Brandon in the bedroom. The younger man was a little horndog, much to Brandon's pleasure. Brandon didn't think he would ever tire of Lonnie's tight little ass. Just being around Lonnie made Brandon's cock hard.\n\nBrandon woke up almost every morning to Lonnie's hot mouth on his cock. Brandon discovered that he loved sucking Lonnie off as well. His cupcake made the sexiest noises when he was coming. He especially loved it when the two of them got into a hot 69, with Lonnie taking Brandon's monster cock down his throat while Brandon sucked him and finger banged his ass at the same time.\n\nAs much as he liked oral, Brandon definitely preferred to top Lonnie. They almost always fucked in missionary position so that they could see each other's faces. Brandon also liked it when Lonnie rode him. As long as he could see Lonnie's face when he came. Sometimes they'd do it slow and easy, but most of the time it was hard and fast. Lonnie took everything that Brandon threw at him. Brandon had exceptional control. He would pound Lonnie until he screamed in orgasm, then he'd let go and dump a huge load into Lonnie's greedy, milking ass.\n\nLife couldn't be better.\n\nNow that their house was in order, Brandon wanted to have Benji and Ben over for dinner, so they decided to plan a small housewarming party. To make it easy on themselves, they decided to just have family to this gathering. It was just going to be them, along with Benji and Ben.\n\nBrandon had hoped that Lonnie's dad would have come around by now, but the fucker was still dragging his feet. He still hadn't made lunch plans with Lonnie, though they had talked on the phone a couple of times. The conversations were short and awkward, but Brandon encouraged Lonnie not to give up hope.\n\nSince it was his first time hosting an event in their new house, Lonnie had worked himself into a nervous mess. He just wanted everything to be perfect.\n\nLonnie ran through the house, straightening and double-checking everything. When he got to the kitchen, he looked around and went over his mental checklist one last time.\n\n\"Ah,\" Brandon admonished as he pulled Lonnie's hand away from his mouth.\n\nLonnie looked up at Brandon and blinked. He hadn't even been aware that he had been chewing on his thumbnail.\n\n\"Everything is perfect, cupcake. Relax.\"\n\nLonnie scanned the room once again. \"I'm nervous,\" he said quietly. \"It's our first get-together here.\" He began to chew his bottom lip while he looked over the room again.\n\nBrandon pulled Lonnie against him and kissed him, trying to calm his nerves. When he finally pulled away, Lonnie was like putty in his arms. Lonnie let out a sigh and patted Brandon's chest.\n\n\"Better?\" Brandon asked.\n\n\"Yeah. Your kisses always make it better.\" He pushed up onto his tip-toes and gave Brandon a quick peck on his bearded cheek.\n\nBrandon gave Lonnie's ass one more squeeze before he let him go. He opened the fridge and pulled out the steaks and chicken parts he was marinating. \"Looking good.\"\n\nLonnie squeezed Brandon's hand. \"I'm gonna check on Benji outside.\"\n\n\"Can you start the grill for me?\"\n\n\"Yup.\" Lonnie walked out the back door onto the patio.\n\nBenji was squatted down in front of a cooler. He dumped a second bag of ice into the cooler and arranged various bottles and cans. Benji looked up and smiled at Lonnie. \"Hey, Lon. Everything is all set out here.\" Benji looked at Lonnie, who had his hand up to his mouth, chewing on his thumbnail. He pushed Lonnie with his shoulder. \"Don't be nervous. It's just us.\"\n\nLonnie gave Benji a quick hug. \"I can't help it. I've just never hosted a party before.\"\n\n\"It's no big deal. It's family, Lonnie. Hey, you know, you're kinda like my brother-in-law now. Once you get married to Brandon, it'll be official.\"\n\n\"Yeah, I guess that's true. That's awesome.\"\n\n\"I know right?\"\n\nLonnie thought for a moment. He brought his thumb up to his mouth and quickly dropped it to his side. \"You really think Brandon will marry me? I mean, I'm not in any hurry, or anything.\"\n\n\"Yup. You know Brandon. Once he has his mind set on something, he just does it.\"\n\n\"He says he wants to go to Japan so that we can visit my mom. He really wants to meet her.\"\n\n\"See. That tells you he's serious.\"\n\n\"I suppose. Mom will love Brandon, I think. Every week when I call, she wants to talk to him, too. But even if we don't get married, I wouldn't change a thing about my life right now. I'm really, truly happy. We both are.\"\n\nLonnie opened the grill lid, turned the burners to high, and pressed the 'ignite' button. Once the burners ignited, he closed the grill and looked out into the yard.\n\nToby and Ricky were running around the back yard, chasing each other. They took turns pouncing on each other, rolling around in the grass, then doing it all over again.\n\n\"They love playing together,\" Lonnie said.\n\n\"I know. It's cute. Toby loves his cousin Ricky.\"\n\n\"They drive Brandon crazy, though,\" Lonnie added with a snicker.\n\nBenji pulled his cell phone from his pocket and looked at the time. \"Let's go see if Ben's here yet.\"\n\n\"Where is he?\" Lonnie asked.\n\n\"I don't know. He said it's a surprise. Brandon doesn't even know.\"\n\n\"Ooh. I like surprises.\"\n\n\"Yeah, me too.\" Benji looked down at his ring finger. His last surprise was Ben asking him to marry him. It was the best surprise ever.",
        "Lonnie pulled open the back door and he and Benji went inside. As Lonnie started to shut the door behind him, Ricky came running through between his legs, with Toby hot on his tail. Their nails clicked and skidded on the floor as they scrambled through the kitchen and into the living room, nearly tripping Brandon in the process.\n\n\"Goddammit.\" Brandon clapped his hands together and glared at Ricky. \"Boy, stop all that running in the house!\"\n\nRicky and Toby both froze and sat down on their butts and looked at Brandon with their heads dipped and ears flat back against their heads.\n\nLonnie and Benji chuckled.\n\nBenji went into the living room and collapsed in the recliner. \"I love your house. The wood floors are gorgeous. And all the new furniture is great. And I want a bathroom like yours so bad.\"\n\nLonnie sat down on the new leather sofa that Brandon picked out. \"Thanks. Brandon picked out the furniture in here, but I picked out most of the accessories.\"\n\nJust when dinner was almost ready, the front door opened. Ben knocked on the door as he pushed it open. \"Hey. Look who I found,\" he said with a huge grin on his face.\n\nBen had his arm around his mother, helping her into the house. Lonnie and Benji both gasped and jumped up and gave Bonnie hugs and stood back so that Ben could get her inside and shut the door.\n\nBrandon walked in from the backyard, followed by the dogs. He had a pair of tongs in his hand. \"Is that Ben? Where the fu--\" His mouth dropped open when he saw his mom. \"Mom?\"\n\nBonnie held out her hand to Brandon. \"Bennie said you and your Lonnie were having a housewarming with the family.\"\n\nBrandon couldn't believe that Ben checked their mom out for the party. And she was smiling and seemed to be lucid today. Brandon swallowed the lump in his throat and nodded. \"Yeah, Mom.\" He cleared his choked voice and blinked his eyes a couple of times. \"Come on in. Lemme give you a tour of the house.\"\n\nBrandon walked up and kissed his mom on the cheek, then pulled his brother into a tight hug, holding on to him for a few extra seconds. He linked his arm around his Mom's and she held tight. Her feet shuffled along as Brandon slowly led her through the house, giving her the grand tour.\n\n\"Oh, it's fabulous,\" Bonnie exclaimed. \"You built it?\"\n\n\"My guys remodeled it. Lonnie decorated it.\"\n\nLonnie, Ben and Benji followed the two, Ben holding Benji's hand tight. Ricky and Toby followed them, wanting to know what everyone was doing.\n\nAfter the tour, everyone moved out into the backyard. They sat around the patio table while Ben and Brandon stood at the grill, arguing over proper grilling techniques.\n\nOnce dinner was ready to be served, they went inside and sat down at the dining room table together.\n\nBonnie looked around the table at her boys and smiled. \"I think we should join hands and give thanks. It wouldn't be a proper Thanksgiving if we didn't do that.\"\n\nBrandon nodded. \"Sure, Mom.\"\n\nIt was the middle of summer, nowhere near Thanksgiving, but why the hell not. He wasn't going to tell his Mom that it wasn't Thanksgiving. Besides, he had a lot to be thankful for.\n\nBrandon looked to his right and took Lonnie's hand. He turned to his left and took his mom's hand. She took Ben's hand, and he joined hands with his Benji. Benji took Lonnie's free hand, completing the circle.\n\nBrandon said a quick grace.\n\nBen leaned in and kissed Benji. \"I love you, baby.\"\n\nBenji smiled back at his husband. \"I love you, Ben.\"\n\nEveryone's hands separated, but Brandon held onto Lonnie. He pulled Lonnie closer, and leaned down and kissed him. \"I love you, cupcake,\" he whispered.\n\nLonnie nuzzled his nose against Brandon's bearded cheek. \"I love you, too, big daddy.\"\n\nBrandon looked around the table at his family and everyone was happy and smiling.\n\nToday was the best day ever.\n\nBrandon hadn't known how empty and lonely he really was until he met Lonnie. Lonnie filled his life with love and happiness like he had never known. With Lonnie he made this place, this little house at the end of a dead-end street, something more.\n\nThey had made it a home.\n\nTHE END"
    ],
    "authorname": "robcub32",
    "tags": [
        "gay novella",
        "gay romance",
        "gay bear",
        "gay interracial",
        "bear",
        "twink",
        "interracial",
        "trucker",
        "bareback"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/coming-home-davis-brothers-ch-07"
}