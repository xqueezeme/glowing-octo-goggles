{
    "title": "Church Girl: 7 Days of Self-Sin",
    "pages": [
        "Summary: Virgin teen discovers the joys of creative masturbation. \n\nNote 1: Thanks to HFernandez for suggesting this idea. \n\nNote 2: Thanks to Tex Beethoven, Robert, Dave, and Wayne for editing. \n\nWarning: This story manipulates religious doctrine... if that offends you, please quit reading now. \n\nThis is part three of a potentially lengthy series. Part one, Church Girl: 1 Perfect Turn, sweet, innocent, virgin Mary Martins is selling raffle tickets door-to-door when she arrives at Mrs. Taylor's house. Mrs. Taylor, a seductress of teen girls, takes the opportunity to seduce the minister's daughter and make her a submissive pet. \n\nIn part two, Church Girl: 3 Oaths of Obedience, sweet Mary is tested in her new role as submissive pet to Mrs. Taylor as she pleasures her at church while her Minister father is preaching upstairs about the sins of the flesh. Mary is ordered by Mrs. Taylor to masturbate for seven days... each time with a different object. \n\nChurch Girl: 7 Days of Self-Sin \n\nTen minutes later, another smaller flood of The Lord's tantalizing creation lapped up, and an ineffective attempt at washing her cum-splashed face in a small bathroom sink, Mary was returning to her pew next to her mother just as Dad was wrapping up his sermon. \n\n\"Always be true to yourself and to The Lord,\" Dad advised. \"Because if you do, you will also be true to all others in your life, even if they don't agree with your choices at the time.\" \n\nMary couldn't believe her father's words. She was being true to herself and The Lord. His holy words were indeed a sign from above that what she was doing was okay. Relief coursed through her at the thought that this was who she was, and this was what she was meant to do. \n\nHer father finished his sermon, and Mary went back up to the dais to play piano for the last two hymns, feeling rejuvenated and worthy. \n\nOnce the service was over, her father came over to her and asked, \"Are you okay, Mary?\" \n\n\"Never better now,\" Mary smiled, honestly feeling liberated by the invisible chains of guilt she had felt for not following her father's one-sided words. \"I just needed to get rehydrated,\" she explained, not lying, as her juices were indeed flowing, refueled by the Lord's heavenly homemade nectar. \n\n\"Well, thank the Lord,\" he said, rubbing her back. \n\n\"Indeed, always thank the Lord,\" Mary concurred, feeling both close to her saviour, and yet excited at the innuendo her father wasn't catching onto... it was like Mary was sharing a sexy secret with The Lord that her father was oblivious to. \n\nHer mother walked up and asked, looking at her closely, \"Are you feeling better, dear?\" \n\n\"Yeah,\" Mary nodded, \"I think I was simply dehydrated.\" \n\n\"You still look a bit flushed,\" her mother pointed out. \n\n\"I am a bit feverish,\" Mary answered, although it was her pussy that was still heated up and wanting more... one orgasm not enough for her. \n\nMrs. Martins moved her hand to her daughter's forehead and said, \"You don't feel warm, but your face feels a bit sticky.\" \n\n\"I had a bit of a fever before and I was sweating, but I think I'll be fine,\" Mary improvised, already wondering what she could use to masturbate with later today. \n\n\"Okay, just be sure to stay hydrated,\" the concerned mother recommended. \n\n\"I plan to stay hydrated from now on,\" Mary nodded, somehow feeling giddy that she was actually talking about eating as much of Mrs. Taylor's pussy as she could. \n\nMrs. Taylor watched the mother and daughter talking, smiling at the coup she had just achieved, when another naughty thought popped into her head... the only greater seduction than a young virgin Christian daughter of a minister, would be the mother of the daughter and wife of the minister... and the only thing more wicked than that would be having the daughter be a part of the seduction... oh, the possibilities! So much fun! \n\nMrs. Taylor's pussy tingled again at the naughty incest idea. Incest wasn't completely uncommon in the community... she knew of two mothers who had seduced and dominated their daughters... something she herself had considered with her eighteen year old cheerleader daughter Carla... but somehow that was the one taboo she hadn't been able to commit... instead feasting on her friends... although her ultimate conquest would be her own daughter... and one she still had lurking in the back of her mind. \n\nGloria texted Joan, a neighbour who lived alone, who was currently in the same room talking to Mrs. Martins: Up for a sixty-nine? \n\nJoan finished her conversation before checking her phone, the ring tone alerting her it was Gloria. The ring tone also implying she was going to be eating pussy soon as Gloria only texted for playtime. She read the message and texted back: Well it is almost lunch. My house in twenty? \n\nGloria was chatting with Mrs. Kensington, an elderly woman who could bake the best pie (real pie, not the pussy kind she also enjoyed), when Joan replied. Gloria finished up her conversation and glanced at the response. Of course, she wasn't surprised when Joan responded in agreement; she had never rejected a cunt-munching rendezvous. \n\nGloria looked around at the variety of women who were here, including the almost one dozen who had already worshipped at the church of Gloria. Besides Joan and Mary, there was Cassandra, the mayor's wife and an eager submissive; there was also the incestuous family of Jane and Julie; there was her daughter's friend Kendra who she had recently seduced during a sleepover at her house (her daughter almost catching them); there was the town librarian and the oldest member of her secret lesbian society at sixty-two; there were a couple of teachers, Jasmine Walker, an early forties married submissive who wrote porn on the side on a website called Literotica; and Kendall Pierce who was a first year teacher who Gloria had seduced during parent teacher interviews, finger fucking her to orgasm in her classroom as the next parent waited outside; there was Josie, a college student back home for the weekend with Kendra, her live-in girlfriend; there was the mother of six kids aged 2-13 who was a switch: able to be submissive, but preferring to wield a big strap-on and fuck women to multiple orgasms; there was the seven months pregnant Carol who was a secretary at a law firm; there was Xanadu (yes, that was her given name) who owned the hip clothing store that Gloria's daughter Carla worked at... the perfect place to seduce young girls which Xanadu often did; and there was Principal Jones who was the lesbian evaluator for potential teens... always letting the secret society know which teens were ripe for the licking. \n\nGloria pondered who would be next. Should it be Mrs. Martins? Oh, that would be delicious. Although there was also Hannah, a newly married redheaded bombshell, who looked absolutely delicious and redheads, from her experience, were always wild in the bedroom... and often needed to be tamed, although even with years of training they always retained a hint of rebellious fire. \n\nRegardless, Gloria headed for her favourite Sunday lunch (well any day's to be honest). \n\nMary helped clean up as she always did, before heading home, pondering what she could use to help quell the fire already burning inside her. \n\nKnowing she had at least an hour to herself... Mom and Dad always went for an afternoon lunch after the service... usually with Mary, but she'd used her slight sickness to go home instead... her true sickness being horniness. She looked around the house for items to use on herself. \n\nIn the kitchen Mary found serving utensils (too awkward), kitchen knives (way too dangerous), a rolling pin (too narrow and then too wide), and other minor things before she saw a wide hand-carved wooden spoon and wondered if that would work. \n\nIncreasingly horny, Mary decided it was the best thing available at the moment, and scurried to her room. As soon as her door was closed, she was on her bed, legs spread and rubbing the long, thick, handle up and down her already wet pussy lips. \n\nGloria, at the same time, was enjoying a lavish 69, realizing she would need to give her new pet further instructions when she was done eating her munch (giggling internally at the play on words for brunch). \n\nMary was too nervous to slide all of her wooden dildo inside her, the spoon a lot longer than Mrs. Taylor's finger. She kept teasing herself with the two-inch-wide handle as she closed her eyes and replayed this morning's wild antics. She still couldn't believe she'd done that in church! She also couldn't believe how therapeutic it had felt to be sexually cleansed in the house of God... not to mention the oath that somehow seemed to bind her to both The Lord and Mrs. Taylor... her Mistress. \n\nIn her head she replayed the multiple orgasms she'd brought to her Mistress... and the one she herself had received, that reminded her again of the pleasure The Lord wanted his followers always to enjoy. Meanwhile, her real time orgasm began to build. Slowly, Mary slid the thick wooden spoon further inside her and began pumping it in and out of her wet cunt. \n\n\"Oooooh,\" Mary moaned, as she fucked herself for the first time. In no time at all, her orgasm was rising and she wanted more. She fucked herself faster... deeper. \n\nAnd although it took a long time to break, the orgasm bubbling under the surface but refusing to burst, it finally hit and she screamed, \"Yessssss, God!\" feeling free to just let loose with her parents not home and worshipping The Lord in a new powerful way... thanking him for the pleasure he gifted her and all women. \n\nMary stopped fucking herself and lay back bonelessly on her bed, totally relaxed, allowing the orgasm to meander through her... not as strong as the ones her Mistress had given her, but still a wonderful experience. \n\nWhen Mary finally opened her eyes and pulled the spoon handle out of her, she gasped. It was covered in blood! Her sheets were full of blood! \n\nHer eyes went wide. What was wrong with her? Her period was still a week away, give or take. Panicking, she got off the bed, pulled off her sheets and hurried to put them in the wash even as she texted her Mistress. Mistress, I just had an orgasm with a wooden spoon and bled everywhere! Help!! \n\nGloria was just getting dressed after her mid-afternoon munch when her phone buzzed. Checking it, she read the text and smiled. Mary was easily the most innocent girl she had ever seduced... maybe even ever met. She decided to call instead of text. \n\n\"Mistress, what happened to me?!\" Mary wailed, quite frantic as she sprayed excessive stain out in hopes of washing the blood out of her sheets. \n\nGloria explained calmly, \"You just broke your hymen, my pet.\" \n\n\"My hymen?\" Mary asked, a part of her body she had never heard of. \"What's that?\" \n\nGloria shook her head as she walked to her car. She asked, \"Didn't you learn about this in sex education in middle school?\" \n\n\"My parents wouldn't let me participate,\" Mary explained. \n\n'Of course they wouldn't,' Mary mused, as she got in her car. \"My pet, this is natural and happens to every girl, but only once. This is technically the final piece inside you that once broken, officially transitions you from a girl to a woman. Physically, you're no longer a virgin, although only in the technical sense.\" \n\n\"Oh,\" Mary said, not completely understanding, but feeling much better since her Mistress explained it was just a natural part of blooming into a woman. \n\nGloria continued, being both a Mistress and a maternal figure at this key moment in the young girl's life, \"Go have a nice bath and I'm going to text you some instructions for the week.\" \n\n\"Okay, Mistress,\" Mary nodded, even though Gloria wasn't there to see her do it. \n\n\"And when is your next period, my pet?\" Gloria asked, curious. \n\n\"In a week,\" Mary answered, not even thinking that was a weird question, although it sure would have been weird two days ago. \n\n\"Okay, and keep track of each orgasm you have this week, and each time text me what implement you've used once you're done,\" Gloria instructed, expecting her pet to get more creative as the week progressed, and annoyed that their cycles were right after each other. \n\n\"Yes, Mistress,\" Mary agreed, as she started the washing machine, praying the blood would come out. \n\n\"Bye, my pet.\" \n\n\"Bye, Mistress,\" \n\nMary went and had her bath, trying to relax after the anxiety that had hit her. \n\nGloria meanwhile, texted her pet: Remember you can have as many orgasms as you wish, but EACH must be with something different. Be creative and text me once you're done. Also, be sure to praise The Lord for the gift of feminine pleasure each time you come! \n\nMary read the text an hour later, after a long bath. The water had turned slightly pink, but nothing alarming. She checked to see that the blood had come out of her sheets before she put them in the dryer; it had, which was a huge relief. \n\nMary texted back: I will obey, Mistress. \n\nMary then did her homework, helped with dinner, and watched some television with her parents before retiring to her bedroom. And although she considered masturbating, she was exhausted and actually drifted to sleep quickly right after she knelt at her bedside to thank The Lord for all her blessings. \n\n... \n\nThe next morning Mary wanted to wear her garter-belt and stockings, but choose against it... partly because she was too nervous to do so and perhaps be asked about them by her mother or her classmates, and partly because she only had the one pair and didn't want to ruin them. So instead she put on a pair of black pantyhose. \n\nOddly, the pantyhose felt tight on Mary... as if suffocating her. They also felt scratchy in comparison to the sheer silk ones Mistress Gloria had given her. Lastly, she realized how much more she liked the clear toe compared to the reinforced toe which now seemed to merge abruptly and distastefully from light black to dark black. \n\nAs Mary walked to school, she texted her Mistress, recalling those wonderful lace top stockings that didn't need the garter-belt: Where can I buy some of those thigh high stockings you wore yesterday, Mistress? \n\nGloria was having breakfast when the text arrived. She read it and smiled. Mary was everything she thought she would be and more! She responded: I'll make sure you have some ASAP! \n\nMary felt her phone vibrate a couple minutes after she texted her Mistress and instantly got excited. She couldn't explain it, but she now lived only for pleasing her... and thus pleasing The Lord... as absurd as that sounded. \n\nMary read the message and responded back: You don't have to, you sweet Mistress. I can buy my own. \n\nGloria was expecting that response and decided to use it to add another layer onto the idea of the caring Mistress training and nurturing her pet. She explained: My pet. As your Mistress it is my duty and my pleasure to look after you in all ways... like a parent... but, of course, with a much different focus. I will obtain for you whatever you need for your journey and make sure you have everything you need to become the disciple and spreader of joy The Lord envisions you being. \n\nMary felt her phone vibrate again. As she read the message, a second message followed. As she read the first message she smiled, feeling silly for questioning her Mistress... she wasn't supposed to... not in any way. She checked the next message which was also from Mistress Gloria. \n\nPlus, where could you go in this town where the cashier wouldn't notice you were purchasing them... and probably gossip about it? \n\nAs Mary read that, she realized just how important a resource and guide Mrs. Taylor was as she got used to her new way of life, a way which included a fundamental shift in her thinking and one where she could easily slip up if she wasn't careful. This was not only a judgemental world, but also a talkative one! \n\nMary responded: Yes, Mistress. Thanks for pointing that out! Also, thank you for taking me under your protective and guiding wings. I am so blessed. \n\nGloria smiled again, Mary was so na\u00efve that she could tell her almost anything that popped into her head, and the teen would follow blindly like so many gullible sheep had always done, whatever their religion had dictated in the past. She texted back: I'm blessed too. The Lord has given me a great responsibility and I am privileged to carry it out. Have a blessed day, my pet. \n\nMary responded, glowing on the inside and the outside: You too, Mistress. \n\nAt school, Mary was her usual self-conscious, dedicated student self, although more than once she would look at a female classmate and ponder how she could help guide her to The Lord, especially the promiscuous sluts who definitely needed to be saved before they got pregnant or diseased. \n\nMeanwhile, Gloria drove to the city an hour away, and purchased a few presents for her newest pet... something she had never done before. Yet she could sense that this could be a seduction with a massive payoff if she played her cards right. She purchased six pairs of sheer thigh highs (2 black, 2 mocha, 1 white and 1 red), two pairs of stockings (in beige and black), seven thongs (planning that would be all she would allow pet Mary to wear, unless she decided on commando), a rabbit vibrator, a set of three butt plugs (for a bit further down the road), a collar and leash (not sure if she would use that or not) and for herself, a new double-dick strap-on (both dicks pointing in the same direction) so she would be able to double penetrate her pets all by herself (she planned to use this one very soon). \n\nMary finished the school day and was walking home when Gloria pulled up to the curb beside her. \n\n\"Get in, pet,\" Gloria ordered with a welcoming smile. \n\n\"Yes, Mistress,\" Mary eagerly obeyed, her cunt instantly getting wet with possibilities and her mouth watering with anticipation. \n\nOnce Mary was sitting next to her in the SUV, Gloria asked, \"How was your day?\" \n\n\"Excellent,\" Mary answered, always trying hard to avoid generic terms like 'fine' and 'okay'. \n\n\"Have you pleasured yourself yet today?\" Gloria asked, as she began driving. \n\n\"No, Mistress,\" Mary admitted, before adding, \"but hopefully soon.\" \n\n\"I want you to text me the minute you've finished,\" Gloria instructed. \n\n\"Of course, Mistress,\" Mary agreed, loving the term Mistress... even though she couldn't explain why... even as she was disappointed to realize Mrs. Taylor was driving her home and not to her own house for more worship activities. \n\nGloria noticed the downcast look on her pet's face and explained, \"I'd love for you to come over and worship with me, my pet, but Carla will be home soon and, well, my period arrived this morning. \n\n\"Oh, it's okay,\" Mary nodded, understanding, but disappointed. \n\n\"Are you craving some of The Lord's heavenly juice?\" Gloria asked. \n\n\"Yes,\" Mary admitted. \"Is that a bad thing? The bible says temptation and lust are sins.\" \n\n\"Oh no, honey,\" Gloria said, placing a gentle hand on her pet's leg. \"The Lord wants you to savour His creation every time the possibility exists, and definitely doesn't want His faithful followers to go without.\" \n\n\"Oh,\" Mary nodded, liking what she was hearing, even though she was still disappointed she wasn't going to get any Holy juice this afternoon. \n\n\"If you are really craving the Lord's cum creation,\" Gloria continued. \"I do have some other followers who would be more than willing to offer their cum to a true believer.\" ",
        "\"Really?\" Mary asked, excited by the possibility of tasting pussy today, yet nervous about doing it with someone else. \n\n\"Oh yes, my pet,\" Gloria continued, reaching her hand under her pet's dress. \"There are a surprisingly large number of loyal followers in the community who are either Mistresses like me, submissives like you, or switches.\" \n\n\"Switches?\" Mary asked, the idea of there being more like her intriguing... even as she spread her legs wider to allow her Mistress to touch her fevered pussy. \n\n\"Women who can be either a Mistress or a sub,\" Gloria explained, as her finger moved to her pet's pantyhose clad crotch... which was, as she expected, very wet. \n\n\"Oh,\" Mary moaned, the simple touch instantly triggering a fire in her loins. \n\n\"Would you like me to set you up with someone tonight?\" Gloria asked, slowly rubbing her pet's pussy, although it was challenging through the pantyhose and panties. \n\n\"I don't know,\" Mary answered honestly, excitement and trepidation both debating inside her, neither winning. \n\n\"I promise one hundred percent discretion,\" Gloria guaranteed. \n\nMary was torn. She really, really, really wanted to taste Mistress Gloria again, but that wasn't immediately possible. Could she go a few days without any pussy? That seemed unlikely, now that she had savoured The Lord's special cream and become addicted. Yet, she also didn't want to become dependent on it. She needed to be able to balance her studies, her family, her friends and her new worshipping. \n\n\"I'll make some calls,\" Gloria decided for her pet. \n\nThe decision made, Mary suddenly felt relaxed. She wasn't deciding, she wasn't allowing her lust to control her... no, her Mistress knew what was best for her and was taking charge. Mary nodded, \"Thank you, Mistress,\" just as they pulled up in front of her house. \n\nGloria rubbed the teen's pussy for a full minute, making the teen very horny, before moving her hand away and reaching back for one of the two bags in her back seat. She handed it to Mary and said, \"This is for you.\" \n\n\"Really?\" Mary asked, completely surprised and frustrated, her orgasm very close. \n\n\"Yes, my pet,\" Gloria nodded. \"I expect you to be wearing a pair of these every time I see you.\" \n\n\"Of course, Mistress,\" Mary nodded, excited to see what was inside. \n\n\"Now go fuck yourself, my pet,\" Gloria ordered. \n\n\"Yes, Mistress,\" Mary nodded, not seeing the dismissal as rude at all, but excited to do just that, her pussy already near the brink. \n\nMary scurried out of the SUV, her pussy so excited that even the friction from walking was getting her closer, went into her house, and directly to her room. She locked her door, ripped her pantyhose off and surveyed the room for something to, in the holy words of her Mistress, 'fuck herself' with. Her pussy on fire, she was desperate, and she grabbed an empty collectible Coke classic bottle she had bought while in Savannah a couple of summers ago (she also had one that was still full of Coke because she thought it looked cool that way) and moved to her bed. \n\nThere was no teasing herself or getting herself wet. No, Mary simply slid the fat bottle into her pussy and began fucking herself. Truthfully, she was so horny, so desperate to come, that she didn't even have time to fantasize as her orgasm hit her in just over a minute of furious bottle fucking. \n\nMary's cum squirted out of her like a broken pipe as she screamed loudly, allowing the bottle to slide out of her, and praising her Creator, \"Yay, God!\" \n\nMary lay there in the afterglow of euphoria for a few minutes, the orgasm usurping all the energy out of her. When she did finally sit up, she saw a large puddle of wetness seeping into the bedspread where her cum had gushed out of her, and noticed almost an inch of liquid in the coke bottle. She shook her head at how much she came... wondering if that was normal... according to the words of her Mistress the first time she had come, it wasn't. Although so far she had only seen two pussies release cum, and they had both done it in abundance. \n\nMary texted Mistress Gloria and attached a picture of the partially filled coke bottle: Came in just over a minute with a classic Coke bottle.  \n\nGloria was putting her new toys away when her phone buzzed. She hadn't even had time to make any calls, unsure who she wanted to be the first to congratulate her on her ultimate turn coup. She read the text and smiled at both the choice and the picture. Shit, this little slut-to-be squirts more than I do... something she hadn't thought was possible. No doubt she had found her future successor... someone almost any girl... or even woman... would eagerly submit to and find addictive. \n\nDeciding to make her pet wait, which was always a crucial part of the training, she put the toys away and pondered who to call. \n\nCassandra was only a submissive, so she was out. \n\nAny students were out as the secret needed to be kept for now and teens, well, they were teens. \n\nThe teachers were good choices... but in the end the choice became obvious. She texted Principal Jones: You available tonight? \n\nPrincipal Jones was still at school, at her desk reading the most recent education brief, with Angie Saddleton, a senior who'd been caught smoking in the girls' washroom a month ago and was working off her detention twice a week after school in her office, under her desk, slowly lapping away. Sometimes she seduced the teens, sometimes she sent names out to other seductresses in the community, and sometimes she just forced them through blackmail... although once they had tasted her sweet nectar they always came crawling back for more (often literally). She texted back: For you, always. \n\nGloria responded, deciding to tease the Principal first: I have a new turn and she is one of yours you failed to alert me about. \n\nPrincipal Jones was instantly curious. Very few teen turns happened without her knowledge. Gloria was clearly the queen bee of the complex, growing Sapphic community, but she felt pretty confident she was number two in the growing hierarchy of the secret lesbian society. She texted back, as she reached down and pulled the bitch's face deeper into her cunt, a clear unspoken cue to shift from the slow licking she'd been doing for over half an hour to eager lapping: Who? I don't know anyone new. \n\nGloria responded: First I need to know if you're free, Tamara. \n\nTamara replied instantly, even as her orgasm began to build after half an hour of simmering: I'm definitely available. \n\nGloria responded: Be at our Pleasure Room in the library at exactly 7:30. \n\nTamara sighed, it was obvious she wasn't going to learn the secret student at this moment. She responded: I'll be there. Any chance I can get a hint who is your newest turn? \n\nGloria smiled. She loved being the keeper of secrets. She was the only one who knew every woman who was a secret submissive cunt muncher. And although she had considered keeping Mary to herself a little longer, she decided that Mary needed to discover that not all pussy was the same... although all pussy was delicious on its own (except for you smokers), only the rare few had the God given gift of squirting... which was a taste that was unique all on its own. She replied: You'll never guess! \n\nTamara began grinding her cunt on the eager cunt licker, as she guessed: Is it Tiffany? \n\nIronically, Tiffany was Mary's best friend, and even more socially awkward, but was not yet a member of the teen sub club. Gloria instantly decided that Mary's first attempt at turning another student should be Tiffany when the time came. She responded: You'll find out at 7:30. Be gentle with her though, she is more than just a submissive or a bimbo slut... she is the next big thing. We're grooming her for greatness. \n\nTamara moaned loudly as her orgasm suddenly hit, and she wondered who could have been turned in her school that she wouldn't know about. She and Gloria had been speculating about the next one for over a year. They both believed that the world was on the brink of a sexual revolution where finally women would be in control... on top... and men would be the submissives, the pussies, the bottoms, the cock suckers. The Internet had accelerated the pace where men were now becoming way more curious about sucking cock and being pegged... their natural fall from power was getting closer, as all hierarchies eventually fell (ask the Turks, the Romans, the Vikings). \n\nWhile women were finally coming to understand they had all the power... always had... and as men crumbled under their fixations on porn and cock (almost every guy would suck cock or get sucked by a guy given the right circumstances), woman would use their sexuality to take control of the power vacuum before the men even realized what had happened. \n\nThis was the revolution Gloria hinted at to Mary, and one she felt could eventually be led by Mary once she was trained: first as a submissive pet, and then as a switch who seduced straight women to becoming submissives and Mistresses themselves. Gloria, and perhaps Tamara, would be powers behind the throne. \n\nBut that would take time, patience, and excellent planning. \n\nAs Tamara coated her slut's face with her cum, she mentally listed every girl in the senior class who wasn't already a pet. \n\nKara, a black cheerleader who'd moved here a few months ago was a possibility, as she was strong-willed and beautiful, yet Tamara wasn't sure the world was ready for a black Goddess to lead the way... although Tamara would follow in a heartbeat... the idea of being a white slave to a dominant black woman was her biggest unfulfilled fantasy. \n\nCameron was a tall, lithe athlete who played both volleyball and basketball, and had an intense on the court personality, yet was sweet as pie off the court (with a pie Tamara hoped to sample soon). \n\nZelda was an intriguing possibility. A drama student who carried the lead in every play, and was so gender neutral she could excel in both male and female roles. So much so that Tamara often wondered if she didn't have a cock. \n\nFive more weren't even possibilities: Sarah was too shy, Emily too ADD, Wanda too chubby, Dani too dumb, and Mary too Christian. \n\nAs Tamara finally let go of Angie's head, she concluded she had no fucking clue who it could be. No one fit the profile she had envisioned to be the next one. There were a couple of younger students she felt would be strong candidates once they were legal (Gloria had a clear eighteen plus rule which Tamara reluctantly followed), but none of the seniors stood out strongly enough to be 'the next big thing'. \n\nTamara sent Angie away and tried to work, although it was no use... until she found out who this new hotshot was, she wouldn't be able to think straight... not that she ever did anyway as long as her mind was on pussy. \n\nMary was cooking a chicken stir fry for dinner when her cell buzzed. She looked at the message. Be at the library at 7:30. Go to the back of the Reading Room and take the stairs down to the basement. The password for the third door on your left is SLUT69! \n\nAs was often the case for Mary ever since she'd had that lemonade spilt on her last Saturday, a juicy spark of excitement and anxiety zapped through her. \n\nAlthough she was nervous, she knew she was to obey Mistress Gloria without hesitation as part of her training, just as she was to obey The Lord faithfully in all things. She responded: Yes, Mistress. May I ask who I am meeting? \n\nGloria responded: You may ask, but I won't tell. I will tell you she too is a loyal follower of The Lord and one who will be sympathetic to your craving for the Lord's libation. Obey her as you would me. \n\nMary read the response, disappointed not to know, her anxiety not at all fading, yet the mystery was also exciting, which was evident from the fresh wetness that had just dampened her new panties (if they could really be called panties as her thong barely covered her cunt, and didn't cover her ass at all). So as was becoming habitual, she responded: Understood, Mistress. \n\nGloria responded teasingly a couple of minutes later, just as her oblivious husband walked in the door: PS: You know this woman! \n\nWhen Mary received the last text, she gasped! Even though she should have known in this small town that was always a possibility. Who could it be? Before she could really ponder this, her mother walked in the door and Mary put her phone away and resumed prepping dinner... even as the sentence 'You know this woman' kept playing through her head. \n\nMary fidgeted during the making and eating of dinner, both nervous and excited. Her mother noticed and asked, \"Are you okay, Mary?\" \n\n\"Yes, I'm fine,\" Mary nodded. \n\n\"You've seemed different the past couple of days,\" her mother correctly recognized. \n\n\"Oh, just the usual stresses,\" Mary answered, before adding, \"I do need to go to the library tonight.\" \n\n\"Oh, okay,\" The concerned Mom nodded, not pushing it further, even though she was certain something was different. \n\nMary was thankful when her mother didn't push it. She sure wasn't ready to discuss with her mother any details of her newfound closeness with the Lord. \n\nTamara was downstairs in the secret Pleasure Room a few minutes early, giddy to discover who the new turn was and who Gloria was confident would be the next big one. She had suggested a few potential next ones in the past couple of years, but Gloria always disagreed. \n\nMary also got to the library just a couple minutes early, not wanting anyone to see her going to this room, trepidation at being caught weighing more on her mind than who she was about to meet. She trusted her Mistress implicitly, and knew that she wouldn't ever risk Mary's reputation. Yet, the unforeseen consequences that could domino if she were caught in the act was terrifying her. Mrs. Taylor had no way of controlling the odd library patron, or at least she didn't think so. \n\nBut Mary, using her faith in The Lord and her newfound faith in her Mistress, overcame her insecurity and doubt, entered the almost completely empty library and headed directly to the spot instructed. Reaching the door, she saw the keypad she had never noticed before, although she had noticed there was a door down here... one she'd assumed was for book storage and repair. \n\nMary looked up and down the hallway and ensured that nobody was in sight, so she quickly entered the unique password and a tiny red light changed to green. She quickly opened the door, scurried inside and closed it, feeling a rush at being in this room. \n\nPrincipal Jones heard the door open and a rush of adrenaline hit her... almost three hours of complete mystery was about to be answered. Suddenly her phone buzzed. She looked at the text: Call me the minute she arrives and you have discovered who is the one. \n\nTamara wondered why. This was new. Yet, first things first. 'The One' had entered the alcove and was about to walk around the corner into the Pleasure Room. Who would it be? \n\nAnd as the girl entered, Tamara gasped. 'No fucking way! Mary?! How was that even possible?' \n\nMary entered and found herself in a sumptuous room she never expected to find in a library! It wasn't large, a bit larger than a teacher's office, no windows and only one other door probably leading to a bathroom, powder blue walls broken up with thick, red four-foot-wide draperies hanging every few feet, and on each stretch of blue wall was hanging a large oil painting of anywhere from two to eight women engaged in sexual activities. On the floor was a thick, burgundy carpet, and instinctively Mary knew she wasn't to walk on this with her shoes, so she slipped them off and set them beside another pair of heels beside the door. There were two sections to the room, one containing two elegant couches and two love seats, and the other containing only a large, canopied, four-poster bed. The maroon coverlet was pulled invitingly back to display black, satin sheets with bright red Rolling Stones logos printed on them. Sitting on one of the couches was Principal Jones, who she had just heard gasp, and she couldn't help gasping herself! She couldn't even process the reality that her no-nonsense Principal was the one she was about to serve. \n\nPrincipal Jones was equally shocked as she said, \"Come kneel before me, Mary. I need to call Mistress Gloria, and quickly.\" \n\n\"Y-y-yes, ma'am,\" Mary stammered, her excitement fading as trepidation took control. She walked over the few feet and dropped to her knees as Principal Jones picked up her cell phone and speed-dialed. \n\nAfter a couple rings, Tamara greeted, \"You requested I call.\" \n\nGloria ordered, \"Make sure you're not on speakerphone.\" \n\n\"I'm not,\" Tamara said, as she slipped her stockinged foot into Mary's hands. \n\nMary understood the wordless request, and began massaging the Principal's nylon-clad feet... nylons which were the same sheer silk she was now wearing. \n\n\"Surprised?\" Gloria asked. \n\n\"Shocked,\" Tamara answered, enjoying the foot massage from the Minister's daughter, \"I'm dying to hear the whole story.\" \n\n\"I'll stop by soon and tell you everything,\" Gloria promised. \"But for now it's important you understand I've used religion to get her addicted. She thinks cum is a gift from The Lord.\" \n\nMary was trying to eavesdrop, assuming the conversation was about her, as she massaged the nylon-clad foot... a task that was subservient and yet felt natural to her. Plus, she loved the feel of the sheer nylon... kind of feeling like Lenny petting Curley's Wife's hair in 'Of Mice and Men'. \n\nTamara wanted to laugh, yet also wanted to salute Gloria, who always knew how to find the weakness or vulnerability in a woman... especially a teen. She replied, \"Good to know.\" \n\n\"Yes, so use religious terms whenever you can,\" Gloria continued. \"By the way, I know you don't often go down on a teenager, but I highly recommend you do this one. Believe me, you'll have good cause to thank me later.\" \n\n\"You have me curious,\" Tamara purred, as she offered her other foot to the obedient submissive. \n\nMary was also curious, but took the second foot and resumed massaging, even as she thought to herself, 'I'm about to lick my principal's pussy'. \n\nGloria finished, \"I'll leave her to your wisdom, but she is not to be dommed, but treated with kid gloves. No humiliation, although she'll willingly do whatever you say.\" \n\n\"As you wish,\" Tamara agreed, having already treated a teen roughly earlier today. \n\n\"Tell her Mistress Gloria says hi and to enjoy The Lord's creation,\" Gloria said. \n\n\"Will do,\" Tamara again agreed, amused at the strategy taken, and dying to hear the whole story. \n\n\"Bye.\" \n\n\"Bye,\" Tamara finished, before hanging up and looking down at the cute teen, still in awe of who was now before her. After a moment, she said, \"Mistress Gloria says hi.\" \n\nMary wasn't sure what to say back. Mistress Gloria was no longer on the phone, and everything about what was happening felt weird... except for the task at hand that she was very much enjoying. \n\n\"Don't be nervous, Mary,\" Principal Jones said. \"Craving The Lord's creation is something many young women struggle with.\" \n\n\"Oh,\" Mary said, the familiar words sounding different coming from her no nonsense principal. \n\n\"It's actually something you will crave your entire life,\" the principal continued, seeing the vulnerable look in the teen's eyes. She added, \"But that is what The Lord wants. You to be addicted to his creation so it can always bring you closer to him.\" ",
        "These words relaxed Mary as she indeed did want to be closer to God, not just in words, but in actions. She had lived her whole life trying to serve The Lord, but not until she had tasted the Lord's secret juice... something that her father and the church were hiding from her and other followers... did she really feel at one with Him. This made her want to lead others to drink from the Well of Holy Pleasure and she nodded, \"I want to help end the lies the church is spreading about its oppressive male hierarchy.\" \n\nTamara's cunt gushed at the words and was impressed by how quickly Gloria had manipulated a faithful follower of The Lord without actually changing her core values of loyalty to a higher power. Tamara nodded, seeing exactly how Mary may indeed be the one, \"With proper training, you'll be able to play a key role in this fight.\" \n\n\"I want all women, regardless of age, to know the true pleasure God created strictly for women. It's ridiculous that all women know only the pain God inflicted on us, the one that we experience with the greatest gift of all: reproduction. God has given us females the ability to please other women and allow them to discover the euphoria living and breathing inside them. Calling that sinful is one of the greatest sins of all,\" Mary proclaimed, annoyed at the lies the church and even her father had been spewing to keep women separate from a true connection with The Lord. \n\nTamara could again see why Gloria thought Mary was the one. She was determined, morally strong, eloquent, and yet easily manipulated... and, she assumed from Gloria's hints, she had a tasty box. Tamara pulled her foot away, raised her skirt to her waist, spread her legs wide and asked, \"Do you want to indulge in the wine of the Lord?\" \n\n\"Yes indeed, Ma'am!\" Mary nodded, staring at the principal's unadorned, shaved, glistening pussy. \n\n\"Come and savour the sweetest of wines,\" Tamara offered. \n\nMary no longer cared who she was licking or where, only that she could satisfy her addiction. She needed to lick pussy, taste pussy, and drink pussy juice. She leaned forward and buried her face between her principal's legs and began licking. \n\n\"That's it, part the pink sea and enjoy the oasis of wetness,\" Tamara babbled, trying to keep it religious, amused at her 'pink sea' creation. She would have to share that one with Gloria later. \n\nMary indeed parted the pink sea, eager to enjoy the oasis of wetness, the wine of the Lord. As she licked, she noticed Principal Jones's scent was slightly different, her taste also slightly different... although she couldn't explain the difference in any concrete way. Oddly, even as she licked and probed, she wondered if pussy juice was like snowflakes... no two alike. \n\nTamara still couldn't believe this innocent gem was between her legs... but she was already believing that Mary had potential. Many young subs lick eagerly, thinking it's about the race and not the journey... treating licking pussy just like sucking dick, when the reality was the two acts were different in almost every possible way, other than the girl is often on her knees (or the guy, since there were more and more male cock suckers and female slit munchers out there nowadays... in this very school, two male staff members sucked dick regularly, and a good half-dozen students... not to mention quite a few married men in the community; and over half the female staff munched cunt as eagerly as they breathed the air), and the end result was cum (whether it be semen spurt or pussy splash). The rest, however, was completely different. Licking vs sucking, bobbing vs probing. \n\nMary noticed the difference in the appearance of the pussy, though. Principal Jones's pussy lips were a lot thicker than her Mistress's, and her clit was wider. She also had less wetness leaking out of her, which was the only slight disappointment of this surreal encounter. It was only two weeks ago she'd been in Principal Jones's office asking for a reference letter. \n\nAs Principal Jones enjoyed the slow burn... her orgasms usually taking anywhere from half an hour to an hour to reach... she recalled the last time she'd spoken with Mary, a couple weeks ago, when she'd been asked to write a reference letter (which she now realized she hadn't yet done... but would do ASAP), and how the entire five minutes Mary was in her office, a cheerleader, she could 't recall which one at the moment (she had five cunt lapping cheerleaders serving on rotation under her desk) was lapping away at her box. \n\nAs she enjoyed the eager teen's tongue, the fact that she was the Minister's daughter only enhancing the thrill, she recalled Gloria's words that Mary was worth tasting. Tamara very rarely ate pussy, she was more a traditional domme, unlike Gloria who liked to give as much as she received (truthfully, she was shocked Gloria was still married, she was so obviously a lesbian... even though she called herself bisexual). \n\nMary kept licking, her brain on cruise control as she only had one task at hand. No thoughts, just sensation. \n\nAfter a little while Tamara shoved Mary gently away, stood up and offered, \"Come join me on the bed, my dear. Let's get more comfortable.\" \n\nShe walked across the room, removed her dress and draped it carefully on the back of one of the love seats, then lay back across the middle of the bed, now wearing nothing but a bright turquoise pair of thigh high stockings. Deciding a 69 would be a nice diversion, she invited Mary, \"Come, straddle my face.\" \n\nMary walked towards the bed, excited. Her pussy was indeed burning, like it had been doing almost non-stop since Mrs. Taylor had introduced her to the pleasures exclusive to women. \"Yes, ma'am,\" she nodded, as she approached the older woman. \n\n\"Are you wearing panties?\" Principal Jones asked. \n\n\"A new pair that Mrs. Taylor gave me,\" Mary admitted, not sure whether to use the term 'Mistress' around someone else, even though Principal Jones had spoken it. \n\n\"Remove them,\" Tamara ordered. \n\n\"Yes, ma'am,\" Mary obeyed, as she slid the thong, which is what the tag had called it, down her legs. \n\n\"Hand them to me,\" Tamara ordered. \n\nMary obeyed. \n\n\"Oh my, these are quite wet,\" Principal Jones smiled. \"Are these wet because of me?\" \n\nMary hadn't thought about it, but a couple of gushes of wetness she had felt during the licking said that it was so. \"Yes, ma'am.\" \n\n\"Well come, let me taste you,\" she smiled, as she lay onto her back. \n\nMary straddled her, awkwardly, she was not the most coordinated girl in the world, before she lowered her pussy on her principal's face. \n\nTamara was surprised to see a hairy pussy. Today's teen girls were almost all bald down below. Yet it made sense, considering how innocent, how na\u00efve Mary was, and how protected she had always been by her parents. \n\nMary lowered her face back in the delicious pussy, finding this position very strange in comparison to her previous positions. \n\nTamara moved her hands to the teen's ass and pulled it down the last inch so she didn't have to crane her neck, and was swarmed with a strong heavenly scent, the perk of having long tangles of pubic hair to capture it. She then began licking, instantly enjoying the tangy taste. It was as addicting as Gloria's, the only cunt she munched on regularly. Mary's seemed to have its own addictive DNA in it (a homemade version of nicotine). \n\nMary moaned into her principal's cunt the moment she felt a tongue on hers... the flame burning inside her spreading like wildfire on contact, and she had trouble licking, since she was so consumed by the inferno building inside her. \n\n\"Keep licking, Mary,\" Tamara ordered, as she allowed her tongue to brush over the teen's swollen clit ever so lightly. \n\n\"Yesssssss, ma'am,\" Mary moaned louder, beginning to lick more recklessly, more wildly. \n\nTamara knew the teen wouldn't need much to get off, but she wanted to enjoy this rare pussy snack. So she kept teasing, just grazing the pussy lips, the clit. \n\nAnd for several minutes Mary kept lapping hungrily while being teased methodically... her orgasm bubbling just below the surface... the lava of her personal volcano ready to erupt as soon as it was given the right stimulus. Meanwhile the intensity of the imminent volcano kept building and building! \n\nTamara's orgasm also close, she decided to finally allow Mary to come, being able to read the teen's body and knowing it would take mere seconds of extra stimulation to get her off. She aggressively took the clit into her mouth and tugged, while simultaneously using her tongue, and instantly... like magic... she felt the full drench of a sudden storm... a storm of torrential cum drops! \n\nMary screamed the moment Principal Jones aggressively attacked her clit... the lava instantly erupting out of her in massive gushes. \n\nThe moment the cum soaked her, Tamara knew exactly why Gloria believed Mary was the one. She was a squirter, even more so than Gloria... and in addition to the abundance of her cum, it was the sweetest taste she'd ever had... again even better than Gloria's! Tamara briefly became the addict, not the domme, and she wanted more of this teen's succulent cum. She eagerly lapped and licked as the cum storm kept coming and coming, flowing over her face, dripping into her ears, soaking into her hair and onto the bed. It felt like she was bathing in it! \n\nMary quit licking, unable to lick and cum at the same time... her orgasm too intense to multitask. \n\nTamara licked with insatiable lust until the rain of cum finished. Suddenly desperate to come herself, she flipped the teen, still trembling from her orgasm, onto her back in one quick move and sat on her face. \n\nMary was startled by the quick transition, but now surrounded by legs and a pussy, she leaned up and resumed licking... determined to get her principal off. \n\nTamara, when she was this close, almost always came the same way, by grinding. She reached down, pulled the teen's head into place and began grinding her pussy up and down. \n\nMary was surprised, although Mistress Gloria had done something similar, just in a different position. So she extended her tongue motionlessly and as rigidly as she could, and just allowed her face to be used for another woman's pleasure... feeling wetness covering her face in gentle waves. \n\n\"Lick me, slu--,\" Tamara began to demand, but caught herself. She usually called her pets sluts, especially when she was near climax, but wasn't sure if that word had yet been used on Mary, or if Gloria was taking a more refined approach with the religious teen. \n\nMary, though, was so intoxicated by the cunt on her face, as well as the closed space she was in, that she was incapable of hearing what was said to her with any clarity at all. \n\nAfter a couple of minutes, Tamara finally came as she screamed, \"I'm coming.\" \n\nMary eagerly lapped up the Lord's wine, although it didn't come in massive sprays like it had from Mistress Gloria or from her own cunt, but rather it oozed out... which did make it easier to keep up with as she swallowed. \n\nTamara sat on the teen's face until her orgasm had finished its journey through her, before she got off and said, \"You're a natural, Mary.\" \n\n\"Thank you, ma'am,\" Mary replied, flattered at the compliment, considering this was really her second pussy and fifth time licking (if you counted both previous multiple episodes with Mistress Gloria as separate lickings). \n\n\"No, thank you,\" Principal Jones smiled, pulling the teen up. \n\nMary wasn't sure what to say or do now. Suddenly, it was awkward. Her purpose here was done. She said tentatively, \"I guess I should get going.\" \n\n\"Me too,\" Tamara agreed, as she got up and slipped into her dress. \n\n\"Thank you, Principal Jones,\" Mary repeated, wanting to let her know she appreciated the opportunity to get her addiction satisfied. \n\n\"Anytime you need the Lord's heavenly wine, you just come and see me,\" Tamara offered, before adding, smiling wickedly, \"I have a nice spot under my desk just waiting for you.\" \n\nMary's face went beet red instantly at the idea of being under the principal's desk doing she knew very well what. \n\n\"I'm serious,\" Tamara continued, seeing the shock in the teen's face. \"If you get cravings at school, I can always provide a safe place to provide your fix.\" \n\n\"Okay,\" Mary nodded, not able to fathom ever doing that. \n\n\"Have a good night,\" Tamara smiled, knowing that the teen was feeling awkward, but also knowing that she would indeed come crawling back... likely before the week was done. \n\n\"You too,\" Mary said, before leaving the secret room. As she slipped on her shoes and walked out, no one noticed her at all, except the librarian who waved and asked, \"Is there anything I can help you with Mary?\" \n\nMary instantly felt completely naked... even though there was no way to know if Mrs. Jewel had any clue about what she had just been doing... yet, she likely did. Principal Jones had been so confident and matter of fact about everything just now that it was impossible this would have been the first time for her, and it would be very difficult to hide a room like the one she had just visited from the librarian herself. \n\nMary stammered, \"I-I-I'm just heading home.\" \n\n\"Okay, see you,\" Mrs. Jewel smiled, thinking to herself, 'Wow! They got Mary!' \n\nA couple of minutes later, Mistress Tamara came out and smiled as she passed Mrs. Jewel. Jewel smiled, \"Have a good night.\" \n\n\"I already have,\" Principal Jones smiled back. \n\nWhen Mistress Jones left, Mrs. Jewel's own cunt tingled and she shook her head, as she noticed Mistress's whole head was soaking wet... not just her face! 'I want some of that!' she thought to herself, thinking Mary was a delicious addition.  \n\nMary went home feeling what was almost her new normal - a maelstrom of excitement and confusion. \n\nMrs. Jewel went downstairs to clean the Pleasure Room. Those women and girls always left it so wet! But first she would use the Sybian and get herself off. \n\n... \n\nDay 3: Tuesday \n\nMary woke up on her stomach, her hand in her panties as she dreamt of being under Principal Jones's desk. Already horny, she reached for a pillow, put it between her legs, and began grinding on it... imagining it was Principal Jones's face. \n\nMary humped the pillow while continuing to rub her clit, and in only a couple of minutes she had her first ever morning orgasm as she moaned into her bed, \"Yay, God!\" She lay there for a couple of minutes to recover before she got up and saw a huge stain on her very wet pillow case. She shook her head as she got up, and headed downstairs for breakfast, feeling surprisingly refreshed... something she never felt in the morning. \n\nMary texted Mistress Gloria: Had a morning orgasm from riding my pillow. \n\nAlthough Mary had cunt cravings, she felt incredibly awkward going to see the principal for that purpose, and thus avoided that whole area of the school. \n\nShe did, however, have a fantasy where she turned all the cheerleaders into missionaries for the Lord as she drowned out her teacher, Mrs. Walker, her English teacher... something she never did. In her visualisation, Mrs. Walker was actually unconscious afterwards, and Mary had to revive her with mouth-to-mouth. As the teacher revived, she kissed Mary back with great passion (and an agile tongue) before she realised where she was and allowed Mary to help her to her feet. \n\nGloria didn't respond until the afternoon, when she texted back: Next time fuck your ripe cunt with some sort of food. \n\nMary felt her phone vibrate while she was imagining licking each of the cheerleaders. She slyly took her phone out, something she never did in class. Before she could read what she hoped was a response from her Mistress, Mrs. Walker startled her by ordering, \"Phone, Mary.\" \n\nMary was mortified that she was caught having her phone out in class, thus absent-mindedly disrespecting Mrs. Walker's rules... and her favourite teacher, too! She stammered, \"S-s-sorry, ma'am,\" as she got out of her desk and handed her the phone... making sure to exit the message with a quick swipe. \n\nMrs. Walker was surprised to catch her star pupil both seemingly in a daydream while she was teaching, and worse, pulling out her phone. Yet, as she placed the offending instrument on her desk, she just figured that all students have their days. She kept discussing Willy and the stockings metaphor, all the while admiring Mary's nylons (like she did every day... none of her students being aware of her nylon fetish or that she actually was an erotica writer on the side). Mary was one of only a handful of students who regularly wore nylons, and most of the ones who did were now secretly submissive to the lesbian society she too was a member of. If she had enough clout and fewer submissive tendencies, she would recommend Mary for the society because she was the archetype submissive who was always willing to please. Although her strong religious upbringing would likely prohibit the possibility, more's the pity. \n\nMary listened to the rest of class finding that today's metaphor being the symbolic significance of silk stockings incredibly ironic... and somehow yet another hint from The Lord that her new path was the one she was supposed to be following. This led her to realize that Mrs. Walker also wore nylons every day... even on casual Fridays... wearing nylons under her jeans with her three inch heels. Although it was unlikely she was a lesbian, Mrs. Walker being married with two kids, Mary couldn't help but wonder if she too was lapping the luxuriant blessings of the Lord. She shook that thought out of her head as she listened to a lesson on stockings, amused at how apropos the symbolism in 'Death of a Salesman' seemed to suddenly be in her life. Originally she had worn them because her mother did, and they were what ladies wore... but now she wore them because her Mistress had instructed her to, thus she wore them for The Lord. \n\nFor the last fifteen minutes of class, students were starting work on their essays. Mary decided she would write hers on the stockings metaphor, and Mrs. Walker sat at her desk and began marking freshman tests from earlier in the day which were likely to be a disaster... freshman students were always exhausting. A couple of times though, she glanced at Mary, who was busily working now... but was slipping her feet in and out of her shoes (like she often did... Mrs. Walker knowing she did that whenever she was nervous). \n\nMrs. Walker, known as silkstockingslover online, not only had a major nylon fetish, but especially a nylon foot and toe fetish, and Mary's pink painted toenails had her entranced into an almost hypnotic state. So not able to focus on grading, she noticed Mary's phone light up when an email arrived. \n\nMrs. Walker glanced at the phone and Mrs. Walker couldn't help gasping as she read the beginning of the message... only the first part showing up... next time fuck your ripe cunt with. She looked at the number and recognized it instantly... it was Gloria's secret number. A number that she had received texts or calls from a few times herself, summoning her for booty licks. She looked up at Mary. How could this possibly have happened? She actually chuckled to herself at her earlier thought how perfect a candidate Mary actually was. She then shook her head at the power Gloria had... she could apparently get any girl or woman, no matter how slutty or how virginal, to submit to her. \n\nMary glanced up and saw Mrs. Walker looking at her phone. Instantly stress hit her. What if the message was from Mistress Gloria? Sure, her phone had a password and Mrs. Walker wouldn't be able to look, but the first few words of any message always appeared. Mary was instantly thankful that she hadn't saved Mistress Gloria's number, so an incoming call wouldn't come up with her name, and it was just displayed as some generic number. ",
        "Mrs. Walker looked up and saw Mary staring at her. \n\nMary's face went beet red, as it was obvious that the message was from Mistress Gloria, and it had obviously just been read by Mrs. Walker. \n\nMrs. Walker smiled, unsure what else to do, and then tried unsuccessfully not to blush herself, perusing the entire room, trying to look casual. \n\nThe bell rang a minute later and Mary awkwardly came to get her phone. \n\nMrs. Walker handed it to the true submissive, instantly curious how good she would taste, and how good she would lick, as she offered, \"Mary, if you ever need to talk... about anything,\" she smiled as if sharing a secret joke with her student... \"I'm always here for you.\" \n\n\"Thank you, Mrs. Walker,\" Mary said, taking her phone and scurrying out of the room. She quickly went to the washroom, into a stall, and read the message. \n\nOn her screen were the words: Next time fuck your ripe cunt with. \n\n'Oh God, Oh God, Oh God!' Mary thought to herself. Mrs. Walker had definitely seen that! What was she thinking right now? That I was some kind of lesbian slut? Oh God! \n\nBut that thing about always being here for Mary was after she saw the screen. Was Mrs. Walker part of the secret society and coming on to her?! \n\nYet Mary, already addicted to Gloria's training, wanted to read the rest of the message. What was she supposed to fuck her cunt with? \n\nShe opened her phone and read the entire message, which was only four more words: Next time fuck your ripe cunt with some sort of food. \n\n'Oh my!' Thought Mary. What kind of food would be useable inside her cunt? And why was her cunt suddenly completely soaked? \n\nShe suddenly needed to get off, her pussy burning. She knew that this would make her late for Chemistry, but if she didn't get herself off, there was no way she would be able to focus on the class, and it was a review class where Mr. Gordon always gave hints to the test big time, and she wanted to maintain her 99% average. \n\nYet, Mary had very limited options to get herself off and no food. But with The Lord burning inside her, she knew she had to come quickly, and decided she would get off with food next time as she saw the metal cylinder holding the toilet paper as a perfect possibility... the only other option was a pen. \n\nSo Mary, desperate to come, took the toilet paper roll off, lifted up her skirt, spread her legs, tugged her thong to the side and slowly slid the tube inside her fevered cunt just as the bathroom door opened and some girls came in. Oops! \n\nMary froze with the cylinder inside her as the girls filled the bathroom with sound, talking about boys. As a girl entered the stall beside her, she began slowly fucking herself as she needed to get off and needed to do so in a hurry. Her orgasm began to slowly rise, but was definitely not going to burst with such slow stimulus. Mary was already learning that when it came to self-pleasure, she liked it fast and hard. \n\nWhen a toilet flushed, Mary seized the opportunity and pumped her cunt a half dozen times rapidly, before slowing down again as the sound dissipated... biting her lip not to moan. \n\nAs the girl exited the adjacent stall and washed her hands, Mary resumed fucking herself faster, hoping the running water would drown out any sounds she made. \n\nAs the door opened and closed and footsteps faded away, Mary furiously fucked herself with the cylinder as she imagined Mrs. Walker ordering her to lick her after class. Mrs. Walker was a pretty teacher, her favourite teacher, and one she would love to help lead to the Lord... as she wasn't a regular church goer... coming only a few times a year. If Mary started sneaking off with her for private worship, she might become a regular attender! \n\nMary, as usual, came pretty quickly once she got into it, and she pulled the cylinder out and sprayed her cum all over the bathroom floor as she moaned loudly, but suppressed any screaming or audible declarations to the Lord. \n\nAs soon as she was done, Mary looked down and saw wetness everywhere. She quickly sat up, put the cylinder back in place with the roll back on it and hurried out of the bathroom, not even washing her hands, as she wanted out of there before she was caught... instantly feeling guilty for doing it there and then. Thankfully the Lord was still watching over her, and she made it to class just before the bell rang. \n\nMrs. Walker, having a preparation class period, closed and locked her classroom door, returned to her desk and got herself off imagining being Mary's pet... she was way more a submissive than a dominant... although she could be a switch if the need presented itself. \n\nGloria meanwhile, was planning a Sunday to remember... a day where she would bless her pet with her first fuck. She knew her husband had golf planned for that afternoon, just like every Sunday afternoon, and her daughter would be at the lake with her boyfriend. She would have the house to herself... except for a strap-on and a virgin. \n\nMary, sexually satisfied for the time being, was able to focus in chemistry class and it wasn't until she was walking home that she texted Mistress Gloria back. Mistress, I am asking forgiveness. I couldn't focus after Mrs. Walker took my phone and saw part of your message. But I was so horny, I got myself off in the bathroom with the toilet paper holder thingie. I had read the food order, I had none with me and was desperate to feel the Lord in me so I could focus on my studies. I'm so sorry. I will definitely find some food for the next time. Your pet. \n\nGloria was working out, something she did every day, when her phone buzzed. Curious to see if it was Mary, she went and checked her phone. She read the lengthy text. She smiled at Mary's sexual hunger, her apology and her creative toy. She also realized she needed to have a quick chat with Jasmine Walker about Mary. She texted back: You're forgiven, Mary. And I will have a chat with Mrs. Walker... don't worry she is one of us. \n\nMary was holding onto her phone, hoping for a quick response. She read it and first felt happy that she was forgiven... and then shocked to learn Mrs. Walker was a lesbian too. If Mrs. Walker was, anyone could be! She texted back: Thank you, Mistress. \n\nMary had dinner with her family and went to the church youth group that night and refrained from having a third orgasm that day, as she was worried about getting too addicted. \n\nGloria called Jasmine and explained Mary's situation in vague terms and stressed the religious aspect of the seduction and that she was off limits for the time being. \n\nMrs. Walker reluctantly agreed, although Mistress Gloria promised she would get the opportunity to serve Mary soon. So Jasmine did what she always did when she was horny... she wrote erotica. She began composing a new story called 'Church Girl' in which she envisioned Mary's story. \n\n... \n\nDay 4: Wednesday \n\nMary was sick. She stayed home and once she woke up around 11:30, she texted Mistress Gloria: At home sick today. Don't have any energy. I'll still try to come at least once today. \n\nGloria read the text as she was getting groceries. She texted back: It's okay, my pet. You had double orgasms yesterday and thus can go a day without. Rest, get better. I'll have a special surprise for you Sunday after the service. \n\nMary was relieved, as for the first time since she'd discovered The Lord's pleasure, she wasn't in the mood to reach for it. She drank some water and returned to bed. \n\n... \n\nDay 5: Thursday \n\nMary felt better, not great, but good enough to return to school... she hated missing classes. \n\nThat said, she still wasn't feeling the yearning to touch herself. \n\nThe morning moved fast, she wrote her chemistry test at lunch, stopped by the Chemistry Lab and turned it in, and it wasn't until English class that Mary's libido suddenly woke up when she saw Mrs. Walker wearing a black skirt and matching nylons. At one point Mrs. Walker looked meaningfully into Mary's eyes and gave her a warm smile, but Mary wasn't sure what she should make of it, if anything at all. \n\nMary made it through the class, returned to the Chemistry Lab and retrieved her corrected test, and was impressed to see she had gotten 98%. She scanned through it quickly to find where she had lost marks and sighed. One of the two marks she'd lost was a multiple choice question she should have known. \n\nOnce home, Mary went online and googled foods that could be used in the vagina. To her surprise there were many: cucumbers, carrots, bananas, zucchini, celery, and eggplants were all vegetables suggested. She headed to the kitchen, suddenly curious, and found the carrots were all mini-carrots. Oh well. She then found some celery, but it seemed too thin and fragile. Then she found a cucumber. It was long and thick. Longer and thicker than her previous choices. And she said it was good. Biblical, even! \n\nMary carried the cucumber upstairs, hopped onto the bed and fucked herself to an orgasm as she imagined being Mrs. Walker's pet. The cucumber spread her cunt wider than anything before, creating new pleasures. The cucumber also reached new depths inside her, creating new pleasures... and within a couple of minutes she had her most intense self-induced orgasm ever as she screamed in the exuberant freedom of an empty house, \"Thank you, God!\" \n\nAfter she recovered and had stopped gasping for breath, she texted Mistress Gloria while she headed outside to toss the cucumber in the garbage. Mistress I used a cucumber today. It was big and thick and made me come super hard. I miss you!! \n\nGloria read the message. Her period was nearing its end and her pussy would be nice and fresh to munch on tomorrow, but she already had plans for tomorrow night with her husband... believe it or not. She responded back: Good girl. The next one needs to be super creative. And this weekend I have very special things planned for you. PS: I want you to slice up the cucumber wet with your heavenly cum and put it in tonight's salad. \n\nMary felt a rush of excitement at the promise for the weekend, as she stopped just a few feet from the garbage. Her cheeks went red at the naughtiness of feeding her parents a cucumber with her cum on it... yet it was The Lord's cum so it wouldn't be a sin... but a holy gift. She responded back: I will obey, Mistress. \n\nMary returned to the house and quickly made a salad including thin slices of the cum-coated cucumber. She also heated up some leftovers from yesterday, and everything was on the table when her parents arrived for dinner a few minutes later. \n\nMom smiled, happy to have dinner all prepared, \"Thank you, honey. I really wasn't in the mood to make a meal.\" \n\n\"No problem,\" Mary nodded, both giddy with excitement at watching her parents eating her cum in the salad and nervous they would somehow detect what it was. \n\nAnd as they had dinner, neither parent recognised the taste of cum, but Dad did remark, \"This salad really is exotic tasting.\" \n\nMary felt her pussy tingle in response as she explained, \"The dressing is homemade.\" \n\nMom added, \"You'll have to give me the recipe.\" \n\n\"Will do,\" Mary promised, even though she realized she now had to figure out a mixture. She was hungry for more cunt, and even though she had enjoyed her own juices just now, she wished she could get a nice face full of cunt. Tomorrow she may have to go see Principal Jones. Or that pretty Mrs. Walker? She had offered that if Mary ever... \n\nThat night, Mary googled 'go fuck yourself' for other options, looking for something creative. She was stunned by the choices. There were lots out there: screwdriver, hammer, plyers and flashlight were a few of the tools mentioned, as were a shovel and a plunger. Mary assumed they meant the handle end of each... although they would be very unsanitary... although, in retrospect, so was the toilet paper cylinder. Other strange suggestions included bedposts (which included an illustration of a girl impaled on a thick bedpost, arms and legs in the air and a huge grin on her face, which made Mary gasp), doorknob, bike seat, candlestick holder, candle, sharpie marker, broomstick, curling iron (Mary couldn't fathom how that would work without risk of injury), hairbrush, toothbrush, cellphone, rolling pin, a back massager (how would that possibly work?) and a television remote. \n\nMary couldn't believe many of the suggestions, but either way, as she read the list her pussy was wet again. She grabbed her long, thin remote, not as long or thick as the cucumber, and began idly fucking herself with it while continuing to read. \n\nAs she slowly fucked herself, she read about the fact that many women have orgasms using a washing machine. She read in awe as it explained... when on the spin cycle, sit on top or lean against the machine so your labia meets with the metal side and enjoy the ride (the article promised you'd reach your own rinse cycle before the machine did). \n\nAlthough there was no way she could try that now with her parents home, Mary was greatly intrigued by that possibility... something she hoped to try on Friday or Saturday when her parents were gone for the weekend, as her father was giving a sermon at another church three hours north. \n\nMary closed her eyes and fucked herself with the remote... kind of annoyed at how small it was after the fullness she'd felt with the cucumber inside her. Yet eventually she came and texted Mistress Gloria: I had another orgasm. This time a remote control which wasn't as fulfilling as the cucumber... not sure if that was creative, but I have a great idea for tomorrow. \n\nGloria was watching television when Mary texted: She responded back. Don't worry, after Sunday you will always have something big and long to satisfy you. \n\nMary felt a delicious chill at the promise and texted back: I can't wait. \n\n... \n\nDay 6: Friday \n\nMary again woke up wet and willing and looked around the room for a new pleasure wand. She saw a sharpie on her desk, went and grabbed it and quickly got herself off... liking the feeling of cleansing herself with an orgasm to start the day. She texted her newest toy to her Mistress with promises of a wickedly fun idea for after school. \n\nDuring English, she was called to the office by Principal Jones. Ironically, she had already been pondering going to see her as she had been salivating all day, craving the Lord's cream as she felt like she was going through withdrawal. \n\nMrs. Walker excused her, with a slight smile that implied she knew the real reason Mary was being summoned to the office, which knowledge turned Mary on. Reaching the office, Mrs. White, who was the blackest women Mary had ever met, smiled and said, \"Principal Jones is expecting you, Mary. Go right in.\" \n\nMary had no clue if the chubby black woman had a clue about the secret lesbian society, as she smiled, \"Thank you, Mrs. White.\" \n\nMary entered the office and closed the door. \n\nAs soon as it was closed, Principal Jones ordered, \"Knees, Mary, it's time to worship.\" \n\nMary obeyed, dropping to her knees, instantly feeling wetness in her thong and anticipation in her heart. \n\n\"Crawl to me,\" Tamara ordered, slightly annoyed that the teen hadn't come to taste her sooner on her own accord. \n\n\"Yes, ma'am,\" Mary obeyed, beginning to crawl to the desk feeling both excited and silly... the crawling felt rather strange... especially in a dress. \n\nThe seductress said, \"I was quite surprised you didn't come to get some of the Lord's heavenly sweetness.\" She then added, trying to guilt the teen into further obedience and reliance, \"I thought you were more loyal to the Lord than that.\" \n\nMary had reached the desk when the statement was made, which made her feel bad. She defended, \"I just didn't want to become so addicted to the Lord's cream that I couldn't continue to succeed in my studies.\" \n\nTamara rolled her chair back and nodded, as she looked down at the submissive, \"I guess that is understandable, but you can't turn your back on The Lord, either.\" \n\n\"I'm sorry, ma'am,\" Mary apologized, feeling terrible if that was the message she was giving her saviour by not savouring his holiness. \n\n\"It's okay,\" Tamara said softly. \"It's important to balance all aspects of your life, but you need to learn that you now have a mission from The Lord. A responsibility much greater than most girls your age can even comprehend.\" \n\n\"I have a mission?\" Mary asked, looking up at the principal in surprise. \n\n\"Yes, you are to spread the joy of The Lord through giving and receiving pleasure,\" Tamara said, having had a long talk with Gloria last night, before she had one of the cheerleaders come to her house and lick her for two hours while she watched the taped Monday episode of the Bachelor. \n\nFor Mary this reinforced the words Mistress Gloria had said and made perfect sense to her. \"I understand, ma'am.\" \n\n\"Good, now crawl under my desk and get your daily fix,\" Tamara ordered. \n\n\"Yes, ma'am,\" Mary nodded, as she crawled under the desk, surprised how much room there was under the desk. Had it been constructed with this in mind? \n\nTamara hiked up her skirt, rolled her chair back under the desk, and spread her legs as she instructed, \"Take your time, and you'll find a cushion on your right for your knees; you'll need to stay under there until my meeting is done.\" \n\nMary's eyes went wide at what she heard. \n\n\"Hurry up, get started,\" Tamara ordered, knowing she had shocked the teen. \n\nMary obeyed, her head spinning with where she was and what she was doing... and during the school day! After a few slow long deliberate strokes, Mary froze, when over the intercom Mrs. White announced, \"Mrs. Martins is here.\" \n\n\"Keep licking,\" the principal ordered, before adding, \"while I have a nice chat with your mother.\" \n\nEven after all the shocking things that had transpired since last Saturday, from the spilling of the lemonade, to the porn played on a computer, to being licked by Mrs. Taylor, to licking Mrs. Taylor, to the variety of self-pleasures, to the secret library rendezvous with the principal, to her recent sexy daydreams about Mrs. Walker, what she had just heard was the biggest shock of all... she was about to be licking pussy while her (hopefully) oblivious mother was in the same room. \n\n\"Send her in,\" Principal Jones replied, loving the taboo of having the daughter under the desk while talking to the mother... a prank she had enjoyed on more than a couple of occasions. \n\nA minute later, Mrs. Martins walked in and Principal Jones invited, \"Please have a seat.\" \n\n\"Thank you for seeing me today,\" Mrs. Martins said, as she sat down, completely unaware that just a thin piece of wood separated her and her daughter. \n\nMary was completely stressed out, yet she also kept licking, ever so slowly so as to not make a sound or get the principal too excited. \n\n\"Any time,\" Tamara said. \"Your family is very important to the community, and Mary is a very intelligent and industrious young lady who will do anything I request.\" \n\n\"She is a go-getter,\" the mother nodded, before adding, \"although this isn't about her.\" \n\nAnd for fifteen minutes they chatted about an upcoming event that the church wanted to collaborate on with the school. \n\nThe entire time, Mary licked, and Mrs. Martins puzzled about the blissful expression on Principal Jones's face. \n\nThe entire time, Mary was stressed, but as she licked, she began to wonder if this was another test from the Lord, like the girls in the bathroom, or Mrs. Walker seeing part of Mrs. Taylor's email. \n\nThe entire time, the principal's left hand was resting gently on her head, holding her in place. ",
        "The mother finished, \"And thank you for all you do for Mary.\" \n\n\"Oh, your daughter gives as much as she receives,\" Principal Jones replied, loving dirty innuendos that only she and her cunt muncher would understand. \n\n\"You be sure to push her this last month,\" Mrs. Martins said, as she stood up. \n\n\"Oh, I plan to push her to the limit, and have her explore avenues that will test her fully, but make her stronger,\" Tamara promised. \n\n\"Great,\" the mother said. \"She needs to be pushed and forced outside her conservative box. She is a bit too shy. I guess she gets that from me.\" \n\n\"Oh I think she is climbing further out of her conservative box than you can imagine,\" Principal Jones retorted, thinking of the adventurous box Mary was exploring right now. \n\n\"That's great,\" Mrs. Martins said. \"She's been so focused on her grades and getting into the best schools, I think her social life has been compromised.\" \n\nAs Mary listened to this, she was annoyed. She focused on her grades primarily because that was what both her parents never tired of preaching to her about. \n\n\"I promise,\" the principal continued, loving this conversation, and the permission the mother was accidentally giving her, \"I'll help her stretch the limits of who and what she is.\" \n\n\"That's great,\" the mom said happily. \"She'll be starting college soon, and she'll need to know who she is when her parents aren't around.\" \n\n\"I've really seen her coming out of her shell lately,\" Tamara added, barely able not to laugh, \"I mean she is hungry... to learn, and to explore... who she is. I've never seen someone lap up knowledge like she does.\" \n\nThe moment the door was closed, Tamara pulled the teen's face roughly into her heated furnace and ordered, \"Work for your blessing, you eager little angel, you.\" \n\nMary obeyed, desperate to get her off, to get the blessing she craved, yet being called a 'little angel' startled her. Surely she was just a common girl! That said, she had no time to think about it as the principal held her face deep in her wet cunt and began grinding up and down. \n\n\"Oh yes, suck on my cunt, eat my twat, fuck me with that wicked tongue,\" Tamara ordered, really fucking the teen's face, briefly forgetting who she was using as her orgasm rose quickly. \n\nMary oddly liked the nasty talk, having concluded that the sinfulness of swearing was another of the church's lies. Calling someone names to hurt them was indeed a sin, but using swear words for pleasure was okay, and kind of turned her on. To her surprise, her own cunt was burning and had been ever since her mother had walked into the room. \n\nTamara finally came, and Mary eagerly licked up the sweet, if meager, blessing. \n\nOnce Tamara was done a minute later, she let go of the teen's head and said, \"I expect you to come begging me for your blessing at least three times a week; is that clear?\" \n\nMary liked being told exactly what was expected of her. She liked the black and white world where she didn't have to make decisions. She responded, not even realizing she was saying anything until after the words had tumbled out, \"Yes, Mistress.\" \n\nTamara smiled as she rolled her chair backwards and said, \"You'd better get back to class.\" \n\nMary crawled from underneath the desk, stood up and joked, although she was hinting she would love the principal to eat her out, \"I'm not sure I'll be able to think straight in this condition.\" \n\n\"Well, you're not straight, Miss lezzy angel,\" Principal Jones pointed out, before asking, \"do you want to come before you return to class?\" \n\n\"Desperately,\" Mary nodded, thankful Principal Jones had seen her hunger. \n\n\"Sit on my desk and spread those legs,\" Tamara ordered. \n\n\"Yes, Mistress,\" Mary replied, saying it on purpose and with respect this time. \n\n\"You know I almost never eat cunt,\" Tamara pointed out. \n\n\"Really?\" Mary asked. \n\n\"No, because The Lord created some of us to be full of blessed cum for her many other followers,\" Tamara made up on the spot. \n\n\"That makes sense,\" Mary replied, as she spread her legs. \n\n\"But you're special Mary, and so is this ripe cunt of yours,\" Tamara complimented, as she rolled her chair back up and dined on the teen's box. \n\n\"It is?\" Mary moaned. \n\nThe principal added, \"Oh yes, Mary. The Lord has given you a blessed cunt. One that followers and wayward sinners will soon be begging to be blessed from.\" \n\nMary loved that idea, although she couldn't fathom how Mrs. Jones could know that. Yet, her orgasm, as usual, rose rapidly and her brain shut off and she allowed the pleasure to wrap her up in a cocoon of rapture. And in a couple of minutes, her blessed cunt had blessed her principal as she received the blessed pleasure the blessed Lord had gifted her with. \n\nTamara enjoyed the cum facial as she eagerly lapped up as much of the flood as she could. Sitting straight up, she said, \"Don't ever forget, Mary. Your purpose in life is to please others with your expert tongue, and bless others with your special cunt.\" \n\n\"Yes, ma'am,\" Mary nodded. \n\n\"Say it!\" \n\n\"Say what?\" \n\n\"Your purpose in life.\" \n\nMary declared, believing every word as inspiration from the Gods seemed to direct her tongue, \"I was born with but two purposes in life: To bring pleasure to as many women as possible so they can be closer to The Lord, and to bless many women with the Lord's special cum by allowing them to feast on my own cunt, which is the Chalice of the Gods.\" \n\nTamara was happy she was filming all this for Gloria, as the training and brainwashing were definitely ascending to new levels. \"Good girl,\" Tamara smiled. \"Now you'd better get to Chemistry, you missed your entire English class.\" \n\nMary shrugged, \"Maybe I'll just eat Mrs. Walker's cunt after school as an apology.\" \n\nTamara was surprised by Mary's bluntness. Yet she pointed out, \"Actually my pet, Mrs. Walker is more likely to beg to eat your cunt and be blessed by your heavenly cream.\" \n\nMary nodded, \"Good to know, ma'am, maybe I'll offer her a drink from my Blessed Wellspring of The Lord's Cum.\" \n\nPrincipal Jones chuckled, \"I'm sure she would love not only to drink, but even to bathe in your heavenly nectar. She is quite the eager cunt muncher.\" \n\nMary laughed, \"Hey, me too!\" \n\n\"Indeed you too.\" \n\nMary headed to class and once the class was done she chatted with Tiffany for ten minutes, where she had to lie about why she'd missed the entire English class, then she went to see Mrs. Walker... her cunt already wet at the idea of having her favourite teacher lip-smacking between her legs. She couldn't explain it, but there was definitely a different feeling between eating cunt and having her cunt eaten... although she couldn't yet explain why each of them gave her different rushes, different pleasures. \n\nUnfortunately, Mrs. Walker had already left, ironically having gone home to meet Gloria for a Friday snack. \n\nMary, on the other hand, hurried home and directly to the washing machine. \n\nOnce home, she threw in a load, including all her nylons and thongs from the week, even the thong she'd been wearing today, and started the machine. \n\nMary grabbed her phone and reread the instructions, and then read the comments which all confirmed that this was one of the best ways to get off without the use of an actual person or toy. \n\nMary waited impatiently for the spin cycle to begin. When it finally started, she leaned in and pressed her labia to the corner of the vibrating machine. Instantly the vibrations sent tremors through her, and once she'd adjusted her body to the perfect position, the euphoria began. \n\nThe vibrations in her whole nether regions were intense, unlike all the localised things she had previously used to get off. She closed her eyes and allowed the vibrations to take control of her body. \n\n\"Ooooooooh,\" Mary moaned, relishing the intimate contact. \n\nHer other orgasms had usually come quickly, but these vibrations took her to a different level of self-pleasure, almost equalling the intensity of the tongues of Mistress Gloria and Principal Jones. \n\nAnd in under a minute, something that usually only happens to boys, she was coming. She remained leaning on the magic machine as her orgasm trembled through her, deciding instantly that this time, one was not going to be enough. \n\nMary knew this would look incredibly compromising if someone were to come in and see her like this, yet confident she was alone, she just let herself go, to enjoy the pleasure God was bestowing on her. \n\nA second orgasm erupted in Mary a few minutes later, and she now discovered that the pleasure was too good to stop! Her third orgasm was building when the spin cycle stopped. Frustrated, Mary kept rubbing her pussy against the edge of the machine... but it didn't work. \n\nMary, greedy for her third orgasm, grabbed a lint brush and furiously fucked herself... her third orgasm finally coming... literally. \n\nOnce recovered, and exhausted, she texted Mistress Gloria: Came twice in a row leaning on a washing machine and a third time with a lint brush. The vibrations were to die for. \n\nGloria was getting dressed for her night out with her husband when she received the text. She smiled, impressed by the teen's creativity: Everyone should use the spin cycle at least once... very creative. Don't worry, I plan to have you vibrating like a tuning fork on Sunday. \n\nAs Mary drew herself a bath, she received Mistress Gloria's text and responded: I can't wait! \n\nThat night, Mary and Tiffany went to a movie together... Mary wondering if she could help Tiffany get closer to the Lord... she would have to ask Mistress Gloria if and how she should. \n\n... \n\nDay 7: Saturday \n\nHome alone, Mary slept in until almost eleven. The wild week had apparently taken more out of her than she'd realized, as she wasn't one to sleep in past 8:30. \n\nAs Mary got out of bed, she saw her phone flashing and saw two messages from her Mistress. My pet, I can't see you today, but I promise tomorrow I am all yours and you are all mine!! \n\nMary sighed, she had been really hoping to see and serve Mistress Gloria today... although they say patience is a virtue, and tomorrow she had been promised a special day. \n\nThe second message was a link and a message. My pet please watch this the first time without touching yourself at all... although I'm sure you will be tempted. Then watch it again and come as many times as you wish. Be blessed, my pet. Tomorrow your training continues. \n\nMary, although she was hungry, it being over twelve hours since she'd last eaten, headed back to her room and pulled open her laptop. She texted the link from her phone to her email and then clicked on it. \n\nThe video was called 'Call to Worship Pussy' and starred a very cute, sweet-looking teen named Charlotte Stokely going door-to-door trying to promote the message of The Lord. \n\nInstantly, Mary couldn't believe how similar it felt to her own experience last Saturday. \n\nMary watched the video, completely drawn into the story as in her imagination she became the blonde girl and Mistress Gloria became the older woman. \n\nMary watched as the older woman got undressed and slowly seduced the young blonde, who was flushed and rattled by the sudden sexual attention. Like Mary though, she was overwhelmed and wasn't sure what was happening to her... or why she was feeling things she didn't know could exist. \n\nThe teen explained The Lord was there to help people with their needs. The MILF questioned, as she cupped the teen's breasts and her wet cunt, \"Tell me exactly what I get.\" \n\nThe bewildered teen answered, \"Whatever you need.\" \n\nMary's own cunt was burning with desire as she watched the intoxicating video. \n\nThe teen gasped, \"Oh my God,\" even covering her mouth when she said it. \n\nAfter minutes of touching and teasing, the MILF ordered the teen to sit on her face. Mary desperately wanted to have someone sit on her face... enamoured by the teen and her innocent response, \"You want me to sit on your face?\" \n\nMary had to use all her will to obey Mistress Gloria and refrain from touching herself. \n\nEspecially when the older woman licked the teen's pussy and purred, \"You see, God wants you to feel good.\" \n\nThe teen replied, \"Oh God, this does feel good.\" \n\nMary reminisced her own first orgasm as she continued to be immersed in the video that seemed to be a parallel to her own discovery of The Lord's pleasure. \n\nWhen the teen licked the older woman's cunt she declared, \"It's so yummy.\" \n\nMary salivated at the sight of the dripping pussy and recalled the heavenly tastes of both Mistress Gloria and Principal Jones. \n\nAnd when the teen came at the expert tongue of the older woman, she declared on camera, \"I think I found God, I finally found God.\" \n\nMary repeated the inspiring words, having felt the exact same way when she'd discovered her real purpose in life and the exquisite taste to be found in a woman's loins. \n\nAs soon as the scene ended, Mary got up and looked for the perfect thing to fuck herself with. She wanted something long and thick, but nothing in her room was suitable. She considered her mouse but it was too short, she pondered a few other things, but none of them fit what she needed. Frustrated, she headed downstairs and in the living room found a candle, still wrapped in plastic. She grabbed it and thought... longer than the cucumber, although not as thick... but it will have to do. \n\nMary hurried back to her room, pressed play on the video and watched the entire video as she slowly fucked herself with the candle... going slowly... not wanting to come until the teen in the video erupted in ecstasy. \n\nAnd thus Mary teased herself for over twenty-five minutes, slowing down or even stopping when she felt her orgasm getting too close... The teasing drove her wild and when the teen finally came, Mary followed seconds later as she screamed, \"Thank you God! I'm yours!\" \n\nMary texted Mistress Gloria: I watched the video twice and came around a long candle. \n\nGloria, who was in a stadium with her husband, watching her daughter competing in a cheerleader competition, pondering whether she should try to seduce a cheerleader from another school or a mother, read the message and replied: Good girl. Watch it as many times as you wish. And come as often as you wish. Tomorrow is the beginning of Stage 2! \n\nMary was super curious about Stage Two ... she also became addicted to the video, which she watched three more times that day, and coming five more times from: humping a teddy bear, fucking herself with a wine bottle with the cork still in it, awkwardly fucking herself with a rolling pin, frustratingly using three bananas (all softened way past their ripe stage), and again leaning against the running washing machine while inserting five baby carrots inside her (which was amazingly orgasmic, but she had a bitch of a time getting the last one out after she was done). \n\nGloria seduced a mother, making her go down on her in the darkness of the parked team bus, and slyly fingered another mother at the competition during the final. \n\nThe Mistress and the submissive each looked forward to Sunday... Mary oblivious of the fact that she was about to lose her virginity (if you ignored the dozen or so inanimate objects she had already fucked herself with). \n\nMary went to sleep excited about what lie ahead... although she had trouble falling asleep. \n\nGloria, still horny, allowed her husband to fuck her... although as usual he didn't last long enough to get her off. \n\nTomorrow... each thought as they lay in bed... tomorrow. \n\nThe end \n\nComing in 2018: \n\nChurch Girl: A Virginity Taken"
    ],
    "authorname": "silkstockingslover",
    "tags": [
        "lesbian",
        "stockings",
        "18-year-old",
        "masturbation",
        "toys",
        "nylons",
        "church",
        "milf",
        "teacher",
        "submissive"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/church-girl-7-days-of-self-sin"
}