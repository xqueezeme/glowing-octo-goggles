{
    "title": "The Bra Salesman Ch. 02",
    "pages": [
        "Part 2: The Importance of Exercise\n\nI cannot tell you how glad I am to get out of work today. I had to sit through two moronically pointless meetings today, and now I'm that much farther behind in what I have to get done even after putting in an extra hour today. All I need at this moment is to find a seat at the bar of my favorite drinking hole and get a scotch before heading home.\n\nI am so drained, and not just from work. I broke up with my girlfriend last week, and I'm starting to reach that point where I'm second-guessing myself, wondering if maybe I'm a fucking idiot for dumping her. She wasn't the problem, it was me. I know people say that even when they think the other person was a total psychopath and it was totally their fault, but that's not what I mean. I was the problem. I mean, sure, we had been fighting some lately, but that's not why I finally ended it. \n\nNo, the problem was this busty goddess. About three weeks ago, I was at a department store and this na\u00efve woman with an enormous rack thought I was a bra salesman and modeled some lingerie for me. So me, being the conniving prick that I am, I convince this innocent, dense woman to take off her clothes and let me measure her chest and fondle her tremendous tits. And then I convinced her to let me measure her pussy by shoving my cock in her repeatedly. This is the part where I'm supposed to say how much I hate myself for what I did, but the truth is it was fucking awesome.\n\nI never told my girlfriend about what I did, but ever since then things just weren't the same between her and me. So I ended it. And by that, I mean I called her a bunch of immature names during our last fight until she punched me in the face and walked out on me. \n\nNow I'm a lonely, overworked guy on his way to a bar and wondering if I made a mistake with one decent woman while being secretly infatuated with another gorgeous woman whose huge knockers still haunt my dreams. Some shrink would make a million writing a book about what's going on in my head, but that would involve me getting off my ass and doing something, which we all know ain't going to happen.\n\nAs I'm scanning the bar for an open stool, I see this woman at the bar with an incredible figure. Her back is facing me, with thick, silky blonde hair dangling halfway down her back. She's wearing a yellow t-shirt and blue-jeans that fit snugly around a fantastic ass. I haven't seen an ass that good since that woman at the department store. At the moment, I wished I could have been that stool and had those beautiful round buttocks on my face.\n\nThen the woman turned to the side and I could see her profile. Holy shit, it IS the woman from the department store! The last time I saw her, she was talking to the department store manager to tell him what a great employee I was. I didn't stick around to see what happened when he informed her that there's no such thing as a bra saleman, that I wasn't a real employee, and that she had just fucked a random stranger in the dressing room. No doubt she reported me to the police and I'm on some FBI top ten list of horrible assholes they'd love to drop in a penitentiary and \"accidentally\" forget about. \n\nFuck! She kept turning and now she sees me. I can tell she recognizes me because I can see her eyes getting bigger. Ok, if I turn around now and sprint, I might be able to barrel my way through the crowd and get to the door. I think a good, stiff elbow to that one lanky dude's face standing by the front and I'll have a clear shot all the way... hold on, is she smiling at me? And she's waving hello? \n\nI'm definitely not in the mood to get into a fight, much less do any running, so maybe I should just see what's going on here. So plaster that ridiculously stupid grin on your face and walk towards her. And try your best not to do anything that will get you arrested this time.\n\n\"Hi there! How are you?\" she asks me with an enthusiasm that's obnoxiously perky, like she got hit in the head with too many pom-poms in high school. Ok, that's ridiculous, pom-poms wouldn't even hurt... wait, shut up and focus. Ok, so she seems genuinely glad to see the fake person who fucked her and left. Not sure what's going on here.\n\n\"I... I'm good. How are you?\" I mean, what else am I going to say? Her t-shirt is cut low in the front and I can see some cleavage peeking out. That is not going to help my conversational ability.\n\n\"I'm...I'm good. Did you manager give you your bonus?\" Did my what give me my what? I must've had a look of stupefying confusion that even someone as stupefyingly confused as her could figure out. \"I talked to your manager at the department store, remember? He said he was going to give you a bonus, did you get it?\" \n\nUnbelievable, I cannot believe my luck. How much do you want to bet that manager was too busy ogling her body and nodding his head to anything she had to say to him. If I didn't know any better, I think she still has no idea that there's no such thing as a bra salesman. I know that I should be grateful I'm not going to jail and that I shouldn't press my luck, but I'm already conjuring up strategies to get her naked again. And by strategies, I just mean I'm imagining her naked again. Except you do need to actually take part in this conversation, jerk.\n\n\"Oh yes! Yes! Yes, thank you! He was very appreciative!\" She gives me a smile of such warmth that even a complete dickwad like me can vaguely recognize it as a genuine moment of decent humanity. Of course, I'm too busy trying to figure out how to get my tongue onto those wonderful tits of hers. \"I never did get your name, miss...?\"\n\n\"I'm Tasha, but my friends call me Bubbles.\" Oh dear Lord. I will bet $100 bucks right that she owns at least one item of clothing that has pink rabbits jumping around on it. I'm trying to stare down the top of her shirt again as she asks, \"What was your name?\" as she wipes something out of her eye.\n\n\"I'm...\" Shit, I need a name. Not my real name, another name, something I can remember. Something I can respond to, something... oh shit, I'm standing here as if I can't think of my own name. What kind of an imbecile can't remember his own name? Tell your name to the woman with huge tits, so round, I think they're bouncing a little... Jesus, pick a name! I need a goddamn name now! \"I'm...\" Come on, Einstein! Think of something! Anything!! \"...Albert.\"\n\n\"It's nice to see you again, Albert.\" She smiles again, but her lip is quivering. And her eyes are getting all watery. Is she having some sort of traumatic flashback to my shtooping my cock into her pussy in that dressing room? Yes, sometimes I get flummoxed when I'm lying to a woman with tits bigger than a child's head and I said \"shtooping,\" get over it.\n\n\"Tasha? Are you ok?\" I put my hand on her shoulder, and it takes me a few seconds to realize that I touched her out of concern and not in some plan to get into her pants. Maybe I'm not as big of an asshole as I thought. She takes a deep breath, and my eyes center on her massive chest rising up and I think I can see her semi-erect nipples barely pushing against her shirt.... Ok, scratch that, I am that big of an asshole.\n\n\"Yeah, I'm just... y'know... I need to go home.\" She hops down off the stool and I find myself admiring her incredible figure again with her wide hips, that slim, flat stomach, and those unbelieveably huge breasts bouncing back and forth. She gives me another smile and puts her hand on my forearm, \"It was good seeing you, Albert.\" \n\nAs I watch her walk away from me, I blurt out without thinking, \"Are you ok? Do you want some company?\" I don't know why I said it. Ok, that's not true. I would like to be able to say it was because I thought I might be able to help her with whatever was bothering her, but I know that isn't true. The fact is all I've thought about for the last three weeks was how great it was fucking her and I wasn't about to let those gigantic breasts walk away from me yet.\n\nShe wiped her eye and said, \"Actually that would be really nice.\" I didn't need any more encouragement than that, so I followed her out the door. \"I live a couple of blocks that way,\" and she pointed down the street. \n\n\"So... what's wrong?\" Ugh, real smooth. Way to ease into it, maestro. \"I mean, if you feel like talking about it. You just seem upset.\" Ok, that was better.\n\n\"Yeah, I... Jack and I broke up yesterday. He was my boyfriend, and we... well...\" and she sniffled again.\n\nI had this sudden urge to kick the living shit out of the stupidest man alive. \"Why on Earth would anyone break up with you?\" I asked with incredulousness. Seriously, why would any straight, heterosexual guy with a functioning brain want to stop having sex with the most gorgeous woman on the face of the earth? Maybe he was getting carpal tunnel from squeezing her tits too much? Or maybe his dick was getting raw and swollen from masturbating twenty times a day. Perhaps he had an aneurysm that caused his reason and logic to suddenly stop performing at a level above your average cocker spaniel. No that couldn't be true, even a cocker spaniel would be smart enough to not stop humping her. She smiled, so I'm sure she could hear the astonishment in my voice.\n\n\"He was a jerk. He said he couldn't trust me because I was too dumb and gullible. Can you believe it?\" Uh, yeah, of course I could believe that. I just don't understand what the downside was. \"He said I was an idiot and I was having sex with too many other guys.\" Uh oh, I didn't like where this was headed. \n\nShe wiped her nose with a tissue and kept talking, \"Jack called me stupid for believing that auto mechanics require blowjobs before they give estimates, even though that's exactly what the guy at the service station said. And Jack said I was too gullible when the delivery man accidentally spilled water on my blouse and told me to take off all my clothes before they started shrinking.\" Clearly I am not the only asshole in the world who has concocted malicious plans to get this beautiful woman naked. I thought that would make me feel better, but it actually made me sad that there were so many pricks like me out there. No wonder the human race is so fucked up. Hrmm, requiring blowjobs for estimates, I've got to remember that one.\n\nShe kept going, and I knew this was coming, \"And you won't believe this! He actually said there's no such thing as a bra salesman and that no one ever gets their pussy measured! I mean, you of all people should know, right?\" She looked at me expectantly, waiting for me to respond and defend myself.\n\nThis is the moment when any honorable man would admit his mistake and own up to what he did. That's what any good, honest person would do. But I think it's evidently clear by now that however one might choose to describe me, using any of the thousands upon thousands of possible words in the English language, decent and honest aren't at the top of the list. \"I can't believe he would say that to you!\" I said with fake astonishment. I know my incredulousness wasn't genuine this time, but I hope to hell it sounds authentic..\n\n\"So, Jack said he couldn't take it any more, and now...\" She was starting to tear up as we went up the stairs to her apartment building. \"Oh, listen to me, going on and on about that jerk. I'm sorry.\"\n\n\"No, it's ok, it sucks when a relationship ends.\" I suppose I should have felt bad for being part of the reason why she is no longer in a potentially healthy and mutually beneficial relationship, but I couldn't stop staring at the tears dripping on to her massive chest that shuddered with each step she took. And then it dawns on me that we are both single, that neither of us would be cheating, that we are both totally 100% unencumbered and can fuck each other as long as we want with no guilt whatsoever. This is fucking fantastic!\n\n\"Yeah,\" she continued, \"I'm going to miss having someone to go on dates with, watch movies with, have sex with... Now it'll be at least two months before I have sex with anyone again.\"\n\nI hear soft crackling somewhere, so that has to be the sparks shooting out of my ears from my brain being shortcircuited. I realized I stopped walking and race ahead a couple of steps to catch up with her. \"What do you mean?\" Hey Romeo, why don't you try saying that next time but without that crack in your voice like a teenager going through puberty. \"I mean, why would you wait so long?\"\n\n\"It's just something I do, I try to give myself a little time before getting into another relationship. Don't you do anything like that?\" Give up sex? Are you kidding? Lord, the most I do is masturbate a few extra times until the weekend when I try to get laid.\n\n\"Oh sure,\" I said solemnly. This is god-fucking-awful. No sex for two months? Are you shitting me? Goddamnit, I can't wait that long to get my hands on those tits of yours.\n\nWe walked a little further before stopping in front of an apartment complex, \"Thanks for walking me home.\" She pressed her body against me and gave me a big hug. All I could think about was the number 48. That was the measurement I took when I wrapped that measuring tape around her huge tits. And those were the tits she was pressing against me right now. Goddamnit, I need a reason to stick around. \n\nI was just mumbling out \"It was good seeing you again,\" when all of a sudden, a horribly devious idea came to me and without thinking I blurted out, \"and don't forget to continue your exercises.\" I don't even have a formalized plan yet, but it seemed like an avenue that I could turn into something.\n\n\"Exercises?\" she looked at me with alarm, \"What exercises?\" She turned around with her mouth agape, and standing a few steps in front of me, her incredible chest was right in front of my face. This would really be an inopportune time to lick my lips. But I can see that I am only a couple inches from her erect nipples and I have to gyrate my hips slowly so that I can secretly move my stiffening cock into a more comfortable position. \n\nWait, where was I? Oh yeah, exercises, talk about that, \"You know, the exercises that will make sure your bras and panties stay comfortable. You know about those, right?\" I hope you do, because I sure as hell don't.\n\n\"No! There are exercises I need to do?\" The bewilderment in her voice was so innocent and pure with goodness, it would have made me rethink what I was doing and made my heart grow three sizes too big if my cock hadn't done it first.\n\n\"Oh yes, I can show them to you if you want.\" My mind was already racing with ideas, but most of them involved handcuffs or whipped cream, which I don't think will mesh well with this plan.\n\n\"Yes, thank you!\" No, do not give me those puppy dog eyes of adoration, like I'm doing you some fucking favor. Don't you realize that I am desperately trying to get into your pants? Don't you know that all I want to do is squeeze your tits and fuck your brains out? Her thanking me was so pathetically sincere, and I want you to know I thought about leaving right then and there. I mean, I knew I wouldn't, but I forced myself to think about leaving just so I could say I thought about it. There, there I said it.\n\nWe walked up a flight of stairs and she unlocked the door to her apartment. It was a modest one-bedroom place with living area and a stand up kitchen in the corner. The place was modestly furnished and there were items scattered on the table and some socks along the wall. \"Please excuse the mess,\" she asked. There is no fucking way I'm ever bringing her to my pigsty of a place. You can barely see my carpet, it's so covered in crap. I haven't cleaned in so long, I don't even remember what color the carpet was originally. And I don't want to think about what new species of grimy organisms are breeding at the bottom of the pile of dishes on my counters. \n\nShe put her keys and purse down on a nearby table and looked at me expectantly. \"What do you want me to do?\" Oh, if I could only break out those handcuffs and whipping cream, I'd tell you exactly what I want you to do. But I'd better keep this somewhat credible.\n\n\"First thing,\" I said confidently, \"is to take off your clothes.\" She immediately did what I told her to do. If she had a look of concern or embarrassment on her face, I didn't notice because I was too focused on her incredible tits as she took off her t-shirt and bra. Her remarkable breasts jiggled mightily as she worked her shorts and panties off. She let them fall to the carpet and then stepped out, so that she was now completely buck naked in front of me. Buck naked? God, I lose my mind and sound like a geezer whenever I see those breasts of hers.\n\n\"This first exercise will help you loosen up your muscles and stretch.\" I only go to the gym three times a year, but I've been enough times to know about stretching. Or at least the idea of it.\n\n\"Now rub your hands over your breasts in an outward motion five times, and then gently pull on your nipples.\" Did that sound authoritative? Apparently it did because there she goes. Of course I have no idea if this is a good exercise or not, I just wanted to see her rubbing those glorious boobies. Jesus, I either sound like a geezer or a ten-year old. Boobies? What the fuck is wrong with me?\n\n\"Slower,\" I say as though I was the fucking prince of breast massage. Oh man, I could watch her do this all day. Watching her pull on her nipples, stretching her tremendous mounds of mammaries forward, I can't move from being so transfixated. No, so mesmifixed. I can't even think of real words anymore.\n\n\"Repeat that, keep going.\" By the third time she was tugging on her nipples, I had to adjust my pants a little and give more room for my achingly throbbing cock as I watched her play with her beautiful, gorgeous, amazing, wonderful, beautiful tits. Did I say that already? I never can get my brain to think good around her. Think well. Think... shit, I can't even think.\n\n\"Like this?\" she asks. I try to respond but I think my tongue just stopped working. Take a gulp and relax, dork.\n\n\"Not exactly, here let me show you.\" And she smiled at me as I reached out and began moving my hands over her breasts. She was staring at my hands and studying the intricacies of my movements so that she could see how to properly rub her own tits. As if there were a wrong way. \n\nI buried my fingers into her soft flesh and slowly worked my hands around her entire chest. This was even better than I remembered. They say heaven is full of clouds and angels and gold, but I now believe that heaven is made up entirely of her breasts and that true eternal joy comes from being able to fondle those tits whenever you want. \n\nWhen my hands were at the bottom of her breasts, I moved my fingers inwards so that I got into the underside of her mammoth breasts, and I could feel her skin was even more soft and tender than the rest of her velvety skin. I gave a gentle squeeze and lifted her tits up for a second, and then nodded at her. Her face lit up with a huge smile, so delighted she was that I had shown her some secret move that would undoubtedly make her underwear more comfortable. Of course, showing her this move made my underwear more uncomfortable for my ever-hardening dick.\n\nMy fingers then worked their way up to her erect nipples, and I gave them a mild pinch. She gasped and started breathing slowly. When I gently twisted them, however, I think she actually moaned. \"Ok, I see what you're doing, that's great. What's this exercise called?\"\n\nHrmm, I need names for these exercises that I can actually remember. If you're going to lie, at least be consistent, right? \"Uh, the Rubbiggams Stretch. It was developed by a clinic in California.\" I don't know why I said that, I guess it sounds more authentic.\n\n\"Mmm, Rubbiggams Stretch. I like this exercise. Thank you so much!\" That insipid smile of hers was bothering me, making me feel guilty for being such a prick. Not guilty enough to stop, of course, that would be crazy. \"That's all I need to do?\"",
        "\"Oh no, there are lots of exercises that you could do, I'm just showing you one of the basic ones.\" I am sure the look of knowing contemplation I put on my face let her know that I was thinking of a vast array of helpful exercises, but really I was just imagining sexual positions that are to this day still illegal in several states.\n\n\"Can you show me some others?\" Yeah, how about the exercise where I shove my cock between your boobs and tittyfuck you? How does that sound? No, I've got a better idea.\n\n\"Sure, here's one you should do. It's called the... um, Pumpmaclit Drill. Take two fingers and slide them into your... your...\" She seems so innocent, I didn't know if I could just blurt out pussy to her. I didn't know what term would she be comfortable with. Pussy? Cunt? Twat? Dripping Wet Cavern of Pleasure?\n\n\"My hoochie?\" Suddenly \"boobies\" sounds so snobbish and elitist. Hoochie? Seriously? Again, I'm having visions of garments with pink bunnies, and it's a buzzkill to my hardening cock. But stare straight ahead. Do not, I repeat, do not roll your eyes. Do not ruin this plan, numbnuts.\n\n\"Yes, your... hoochie, just insert your fingers.\" Her cheeks became flush with embarrassment, but she obediently slid her hand down her body and put two fingers into her hoochie. Her pussy. It's her pussy, you fucking moron, please do not ever think that word again. \n\nShe looked up at me waiting for more instructions, so I told her, \"What you need to do is go in and out five times, and when you get moist, spread your fingers apart a little.\" \n\n\"Ok,\" and she proceeded to fingerfuck herself in front of me. I saw her fingers were now glistening with her pussy juice, but I observed her like a tutor watches a student. I kept a stern and thoughtful look on my face as I swallowed the extra drool that was building in my salivating mouth. Because slobbering like an idiot is not the image I want to project right now.\n\nShe seemed to have trouble spreading her fingers apart, so I asked her, \"Would it help if I showed you?\" She nodded vigorously, eager to allow someone with my professional experience demonstrate the subtle nuances of shoving fingers into a pussy. \n\nNevertheless I graciously and generously put my hand into her crotch and pushed my fingers into her damp cunt. I slowly slid my fingers in and out of her, and I could feel her pushing her pelvis slightly towards me every time I went in. Shit, she is actually loving this, she is grateful to me for fucking her with my fingers. God, I am the luckiest son of a bitch that ever walked the Earth.\n\nThis is great, but I can't see what I'm doing down there, and I want to enjoy every second of this. \"If you put your hands behind your back and push your shoulders back a little, you will have a much better tilt and I think you'll really feel an improvement.\" I don't know where this bullshit is coming from, but I am so thankful I can shovel this crap so easily. \n\nShe immediately arched backwards and with her shoulders pushed back and her massive chest jutted forward. After five more thrusts, I spread my fingers apart as wide as I could against her soft, moist vagina now swollen in arousal. She put her head back a little, but then caught herself and looked back at me. \"See how I'm doing this? A long, steady push outward.\" Keep shoveling, man.\n\nShe said, \"Yes,\" but it came out as more of a gasp than a word. She clenched her lips and her cheeks became even rosier. \n\n\"Let me do this a few more times, just to show you.\" With every plunge of my hand, I could feel her become wetter. Her pussy was dripping with pleasure when I spread my fingers the next time, and her body shuddered just a little which made her huge breasts bounce and shake. She's biting her lip like she's all innocent, but she's spreading her legs a little to let me go in deeper, the little slut! She loves this, so let me give her more of what she wants.\n\nI drive my fingers into her harder and harder, slapping my palm against her crotch, and her tits jiggle with every impact. She closed her eyes and put her head all the way back now, gasping every time I shove my soaking wet fingers into her waiting pussy. My throbbing cock is am so ready to cum that I feel like it's going to gouge a huge hole in my pants \n\nAfter several minutes, I pulled myself out of her. She was panting heavy now as she opened her eyes and smiled at me in gratitude. Hell, I should be on my knees thanking her, or putting dollar bills in a string on her leg or something. I should go buy her some roses or take her... whoa, get a hold of your hormones. \n\n\"Can you feel a difference?\" I asked her, hoping I could plant the thought in the few lonely cells of what remains in her brain.\n\nShe smiled exuberantly, \"Oh yes, this is really helpful! How often should I do this?\" Every fucking hour if I had my way.\n\n\"At least once a day. You can do it yourself anytime, although you get better results if someone else does it for you.\" I could see her thinking about this, maybe she's asking herself why, so I added, \"The angle is better, y'know.\" She nodded as if the horseshit lies randomly coming out of my mouth made any fucking sense at all. \n\nI was hoping she'd want me to keep doing this, but then it occurred to me that I didn't want some other asshole off the street to take advantage of her. And by that, I mean I didn't want someone else using my good hard-earned schemes to fuck her when it should be me, so I'd better sweeten the deal a tad, \"Just be sure to find someone certified in these exercises, otherwise you won't get the results you want.\"\n\nHer face dropped, \"But I don't know anyone who is certified. I mean, other than you.\" I wasn't sure if I'd have to connect the dots for her, but thankfully she had just enough brain matter to figure it out on her own.\n\nI grinned, \"I'd be happy to help you in however I can.\" You're goddamned right I'll help you however I can. And whenever. And whatever. And whichever. Wait, does that even make sense? \n\nShe was still standing in the middle of the room, completely naked and looking at the clock on the wall, \"Do we have time for you show me another exercise?\" \n\n\"Absolutely,\" I agreed, and I tried to think of something that would help my poor cock get the release is so desperately needed right now. All I could think about was her giving me a blowjob. \"How about you... uh... kneel on the carpet in front of me.\" Ok, so far so good.\n\n\"Like this?\" She kneeled down and her head was inches from my crotch, so I really hoped she couldn't hear my engorged cock pounding against the inside of my pants. \n\n\"Perfect! Now\" I licked my lips and said, \"Open your mouth wide and I... I... will put my penis in your mouth as far I can go in.\" Oh my god, what the fuck am I saying? The sperm building up in my balls must be somehow stopping any oxygen from getting to my brain. What kind of stupid exercise is this?\n\n\"And this will help my bra and panties fit better?\" Great, NOW she starts asking if I'm full of shit. Goddamnit! What am I supposed to say to that?\n\n\"Yes, I... uh...\" I stammered. \"It's... um... a muscle relaxant. Yes, it will help all the muscles in your body relax and... uh... be firmer.\" What the hell kind of an explanation is that? \n\n\"This sort of seems like a blowjob,\" she said nervously. Damnit, she's thinking this is bullshit. Which of course it is. If she realizes I'm full of shit, then it's game over. No more tits in my face, no more fucking her pussy, and no fucking chance at any fucking blowjob, that's for damn sure. This isn't good, I need some grade-A bullshit and pronto.\n\nI took a deep breath, imagined I was reading some Zen spirituality spa manual, and started speaking. \"Actually, it's different. This particular exercise is called Buhjay and it originally comes from a karmic technique that is used in holistic healing therapy for cleansing your inner chi and releasing the negative energy from your system.\" Wow, I may be an utter asshole, but once in a while I manage to surprise myself.\n\n\"So this isn't sex? This is a... a....\"\n\n\"A karmic technique used in holistic healing therapy, that's right.\" Come on, Bubbles, please don't think about it too much, just let me stuff my throbbing cock into that sweet, luscious mouth of yours, you big-titted dimwit. Oh please oh please oh please.\n\nShe grinned ear to ear, \"Well then that's ok! I love most anything holistic!\" And with that, she put her holistic mouth on top of my pulsing cock. She lightly licked the tip, and I had to bite my lip from screaming with happiness. And then, let me tell you, then she ever so slowly wrapped her lips around head of my penis. She grabbed my dick with one hand to stop it from quivering as she sucked the tip a few times. \n\n\"The more,\" I gasped, but it barely sounded like words and more like a tire that is gradually releasing air. So I grunted and tried again, \"The more you can get in, the better results you'll get.\" I honestly didn't know if her results would be any better, but I knew mine sure would. \n\nShe obediently slid her lips down my shaft, and I felt my trembling cock enter deep into her mouth. I could feel her moist saliva covering my dick as her tongue instinctively rested against the length of my schlong. God I am such a dork when I'm horny. \n\nI put my hands on her head and held her steady while I slowly pushed my cock deeper into her mouth. She let go of my dick with her hands and allowed me to enter her until I felt the tip of my penis bump against the back of her throat. Then I gently moved my pelvis back and forth so that my dick carefully slid in and out of those luscious lips. \n\nShe surprised me when she took her mouth off of my penis and slid her tongue up and down my shaft. \"You're right, this IS relaxing,\" she said pleasantly, \"I can feel all the tension in my body melting away. Can we do this a little more?\"\n\n\"We can do this as long as you want,\" I answered. Of course I knew it wouldn't be long until I ejaculated an enormous wad of cum all over her, but I didn't think that was information she needed to know just yet.\n\nShe smiled and put my cock back in her mouth. I had over half of my cock pulsing in her mouth, and I felt some precum escape me. It wouldn't be long now, and I kept euphorically sliding in and out of her and panting hard. I heard her quietly moaning as she bobbed her head back and forth, and my dick was glistening with her drool. \n\nI could see her tits jiggling beneath me, and it looked like her erect nipples had become hard and stiff. I wished I could have squeezed her huge tits to find out for myself, but I was a little preoccupied at the moment.\n\nThen I felt her move her head all the way forward so that her forehead was resting against my torso. She was deep-throating me and I felt like my cock was halfway down her throat. I thought that if I moved my pelvis forward any more, I might puncture her lungs. I had no idea how she was breathing, but she was sucking so hard that my cock was shaking and ready to explode.\n\nI could feel myself starting to cum and I tried thinking of terrible things, various ways to die, naked family members, surgeries involving lots of blood, Rush Limbaugh, anything to keep myself from cumming all over her and her magnificent tits. Her eyes were closed as if she were meditating. \n\nBut now she was moving her head faster and faster, bobbing back and forth with such vigor that her chest was noticeably swaying and bouncing. My entire cock was shoved so deep into her mouth and her throat that her lips were touching my pubic hairs. She held still and was sucking as hard as she could, and I couldn't hold back any more.\n\nI know there couldn't have been a literal explosion, but I swear to you I heard an audible boom in my groin. My cock erupted with cum, filling her mouth and streaming down her throat. She pulled my cock out of her mouth, and cum came pouring out of her mouth, tumbling over her lips and chin, and dripping large globs of cum onto her massive chest. \n\nOh shit, what have I done? I got wrapped up in my own orgasm and now she's never going to let me doing anything like this ever again. I mean, look at her, her entire face is covered in cum, her tits have globs everywhere, her nipples are so... wait, where was I? Oh right, I need a think of an explanation for this.\n\nBut before I can say anything, she looks up at me with these puppy dog eyes and starts stammering, \"I am so sorry, I didn't mean to... I just... I am so sorry.\" Is she going to cry? Fuck, I'm obviously not one prone to feelings of guilt, but even this is too much for me.\n\nI was panting hard now, but I managed to gasp out, \"It's ok, sometimes these things happen.\" Sure it happens, but for me, fucking the mouth of a big-breasted woman usually happens in the darkest corners of my perverted imagination.\n\nShe continued apologizing to me, \"No, you were trying to help me out with these exercises, and I didn't... I'm sorry.\" No goddamnit, do NOT cry on me.\n\n\"You did fine for your first time. I could tell you were very... focused on these exercises.\" I looked at her as sincerely as I could, but sincerity is not an emotion that is coming easily for me right now. \"You were very good at picking up the finer intricacies of these exercises, they're not as easy as you might think.\" She's starting to smile a little. \"I hope you at least had fun.\"\n\nOk, that perked her up. \"Thank you,\" she giggled. \"I did have a lot of fun.\" At least she's now smiling as she wipes my jism off her face. \"These are the best exercises ever! Thank you for showing them to me.\" Her voice trailed off and then she bit her lower lip as looked at me like she had something to say and didn't want to say it. \"Can I ask you a favor?\"\n\n\"Uh, sure,\" Shit, where is this going?\n\nHer naked, cum-covered breasts swayed and shuddered as she stood up. \"Can you come over and do these exercises with me tomorrow? I can really feel a difference and I feel so much more relaxed. And you said it will help me fit into my clothes better, right?\" So, could you? I mean, if you don't mind?\" \n\nMy limp cock was dripping cum onto my chin which had suddenly dropped below my knees. Snap out of it! \"Yes, yes, of course, I agree, it would do you good to review these exercises again tomorrow while they're still fresh in your mind.\" Probably one of the few things that could be considered fresh in that mind of yours. Really? You're going to take cheap shots at this nice woman who just sucked your dick? Do you have to be a complete douche?\n\n\"Thank you so much, you are such a good friend!\" She threw her arms around me and gave me a big hug. Ok, I'm back to feeling like a prick. But I can feel her cum-soaked nipples pressing against me and getting my shirt all sticky, and once again I stop caring that I'm a prick. I'd rather be a prick that gets to fondle and fuck a beautiful, busty woman like this than to be some guy who... like... shit, I don't care enough to think about being any other guy right now.\n\nShe's still standing there naked as we make plans for me to come by her place after work the next day. Then she laughs and says, \"Tomorrow, I promise I'll do much better about not making you... y'know, shoot off.\" She gives me this big smile to show how earnest she is.\n\nOh lady, I promise you that is one promise you will NOT keep."
    ],
    "authorname": "bobrobertson",
    "tags": [
        "busty",
        "lingerie",
        "breasts",
        "exercise",
        "scheme",
        "lie"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-02"
}