{
    "title": "There and Back Again Ch. 037-038",
    "pages": [
        "Chapter Thirty-Seven: Sleeping Arrangements \n\nWhen I woke, we had shifted positions; Alistair was spooned behind me, and his arms were around me tightly. It was extremely comfortable. And then it occurred to me that one massive hand had settled, unknowingly I was sure, on my left breast. I was wearing armour \u2013 I had gotten used to sleeping in it, sadly \u2013 so it wasn't like he was feeling much of my actual boob, but it made me blush anyway. And if nothing else, I could feel the heat of his hand through my leathers, and knew my nipple was probably hard as a rock just from the principle of the thing. \n\nI had only a moment to reflect on that, however, before the whole tent shook and I heard angry shouting. \n\n\"Sierra!\" Aedan sounded pissed. Or freaked. I wasn't sure which. \"You better be decent, because I'm coming in.\" My brother's head popped in through the tent flap. \"Andraste's sodding ass, Sierra, what do you think you're sodding doing in this sodding tent?\" \n\nAlistair woke with a start and a muffled oath. I laughed, and Aedan narrowed his eyes at me. \n\n\"Aedan, as you can see, we're both dressed. We're even under separate blankets, okay? Get it under control.\" \n\nMy lack of remorse seemed to be aggravating the situation. Aedan's face was purple, and I couldn't tell for the life of me what that expression meant but it clearly wasn't good. I could vaguely hear Zevran whispering, behind Aedan, and Leliana was saying something too, but I ignored them and stared Aedan down. I may have been thrilled to suddenly have a family, but I wasn't about to let him humiliate me into feeling bad about this situation. And I was suddenly sure \u2013 Alistair hadn't moved his hand, and he must have realised where it was by now \u2013 that the level of intimacy was going to be increasing, and soon, and I wasn't going to let Aedan ruin it for me. Fortunately Alistair's hand was hidden by blankets, otherwise I thought I might see what human spontaneous combustion looked like. \n\nFinally, with another oath, Aedan looked away. He backed out of the tent and stormed off, and I assumed Zevran would follow him and prevent him from doing anything stupid. I squirmed around until I was lying on my back, Alistair's arms still around me, hand still cupping my breast through my leathers. I sighed. \n\n\"Sorry, Sierra. Knew he'd be angry but I didn't think...\" \n\n\"Don't worry about it. He needs to learn to cope. I'm not a child, and he may be my brother but that doesn't mean he gets to judge my decisions.\" I couldn't believe we were just going to talk about Aedan, and not discuss the hand. His face was sort of flushed, but not a word? Not one to point out the elephant in the room, I waited to see what would happen. \n\n\"Sorry I didn't speak up. I'm not the brightest first thing in the morning, so at first I was just confused, and then after, I didn't even know where to start.\" \n\n\"Nah, it's good. He'd have lost it if you'd piped up, I think. And it isn't about you, it's about how he sees me. We need to figure that out between us. So actually, thank you for letting me fight my own battles.\" I smiled, and his hesitant face broke out into a sunny grin that melted my heart. \n\n\"I like waking up with you in my arms. Even if it involves Aedan shouting.\" \n\nHis smile faded and changed to something more intense, his eyes darkening as he leaned in for a kiss. I closed my eyes and surrendered to it, opening my mouth and moaning as his tongue immediately took advantage. It occurred to me to wonder who taught him to kiss \u2013 I really should send whoever it was a thank-you note \u2013 but decided I'd just enjoy it rather than worry about it. Especially since I knew jealous-Sierra was never far from the surface when it came to Alistair. \n\nAnd then the hand on my breast flexed slightly \u2013 I suspected it was involuntary \u2013 and suddenly I couldn't think about anything except his lips, his hands, and how to get closer to that gorgeous body I knew was under there somewhere. My passion seemed to have rubbed off on him and he rolled forward, trapping me half under him, pressing my hip into the bedroll and kissing me savagely. \n\nI lifted my one leg that had mobility, curling it around his hip, my free hand running down his sculpted chest, feeling the curve of hard muscle. He gasped and clutched me harder, setting up a feedback loop of pleasure and accidental boldness until he broke away with a low growl, rolling to his own back beside me and releasing my right side. I couldn't quite stop a disappointed whine from escaping as his weight left me and his hand extracted itself from my breast. \n\n\"I am such an ass.\" He lifted his arm up to lay across his eyes, as if shading them from the sun, but given that we were in a tent, it was sort of obvious he was just avoiding eye contact. \n\n\"Alistair?\" His tone frightened me, and I tried to prepare myself for what I thought would come next \u2013 the apology followed by 'I made a mistake'. \n\n\"I offer you a place to sleep and promise to be a gentleman, and then I jump on you the first chance I get. Do you think...you could forgive me? I swear if you give me another chance I won't take advantage. I-\" \n\nI cut him off, almost laughing in relief. I rolled to my side and pushed up to kneel beside him. I stretched out across him, self-conscious about the weight I was laying on him, but needing the intimacy and wanting to be nose-to-nose before I spoke. \n\n\"Nothing to forgive, love.\" I reached up and moved the arm he'd flung over his eyes, putting his hand back on my now-chilly breast, then leaned down and kissed him lightly, teasingly flicking my tongue across his lower lip. He opened his eyes in surprise, and I smiled down at him. \n\n\"Besides. Even if something had really happened...\" I leaned closer to whisper directly into his ear, \"...it most definitely would not have been one-sided.\" \n\nI gave him a moment to process what I'd said, then sucked his vulnerable, perfect earlobe into my mouth, teasing the sensitive skin with the tip of my tongue. His reaction was electric, and he clutched me to his chest, hand again involuntarily squeezing my breast, gasping my name as he sort of convulsed. His voice was low and husky, and made me shiver. Before I could do anything else I promised myself I wouldn't do, I pushed up and off him and rolled away, straightening my hair and adjusting my armour. \n\n\"Sierra?\" His tone was still husky and I had to steel myself against pulling off my armour and attacking him on the spot. \n\nI turned my head to face him, and gave as lascivious a grin as I could. \"Rise and shine, sweetheart; time to face the music.\" I winked. \"I'm going to go deal with Aedan. Do you mind packing up the tent? I promise to help tomorrow.\" \n\nHis face was thoughtful as I scooted out of the tent. \n\nOut by the campfire, Leliana was making breakfast. \"Good morning, Sierra! Breakfast?\" Her eyes were twinkling, and I knew the teasing later would be intense. Wynne had her nose in a book, as usual, and didn't even notice me. I wondered if avoidance was her way of not being judgemental about us. Or maybe it was just a good book. \n\n\"Hey, Leli. Um, I'll eat in a minute. Seen Aedan?\" \n\nHer grin widened and she gestured off towards the hot spring. I sighed and headed that way. I found Aedan, sitting on the bank, his feet soaking in the warm water. Zevran sat silently a few feet away on a rock, and I wondered if Aedan had even noticed he was there. The assassin smiled at me and squeezed my hand as he headed back to camp, leaving me alone with my brother. I sat down next to Aedan, legs curled beside me, and after a silent minute, leaned my head on his shoulder. \n\n\"So. Do you truly object, or are you just being a protective big brother?\" \n\nHe sighed. \"I don't know.\" \n\n\"Okay, then, let's start with something easier. Do you think Alistair is a bad choice for me?\" \n\n\"No. Not at all.\" \n\nHis immediate response to that made me smile. \"And do you doubt that I love him?\" \n\n\"Any idiot can see that you love him. Except him, I suppose.\" \n\n\"Do you believe he loves me?\" \n\n\"Any idiot except you can see that one.\" He grinned slightly, and shifted to put his arm around my waist. \n\n\"So let's see. He loves me, I love him, and you approve of the match. You didn't know any of those three things the first time you snuck off into the bushes with Zevran, did you?\" \n\nHis cheeks coloured. \"No.\" \n\n\"So it's just a double-standard then? Cousland men are allowed to sleep with anyone, anytime, but Cousland women are expected to remain celibate even after they've found the person they love?\" \n\n\"Sierra...\" \n\n\"Don't 'Sierra' me. It's going to happen, if I'm incredibly lucky, and I'm not going to turn him down because you're being an over-protective freak, but I really would like your blessing. Not to mention that if you don't give it, things are going to get awkward at dinners in camp...\" \n\nHe sighed. \"Oh, you have my blessing. You knew you would. But you could have, I don't know, warned me or something.\" \n\n\"It wasn't like it was a plan! You fell asleep on me, and Zevran heard me struggling and helped me get you to bed, and you stopped thrashing and having nightmares when he held you, so it just made sense for him to stay. So I went out, and realised I didn't have anywhere to sleep except alone in Zev's tent, but you know I don't sleep well alone, and so Alistair was awake and he offered...\" \n\n\"Okay, okay. Fine. Does that mean it goes back to normal tonight?\" \n\nI looked at him, simultaneously amused and irritated at his stubbornness. \"...No. I think it's way past time that you and Zev had a tent of your own. And frankly, it turns out Alistair makes a comfortable pillow, which is hard to find on the road. Nothing is happening between us \u2013 yet \u2013 but I'm not giving up waking up in his arms to assuage your weird feelings.\" \n\n\"You don't make it easy, do you? It's hard enough watching my best friend and my sister together, but now I can't even tell you to 'be careful' the way I should, because I know damn well he won't hurt you. It's just...awkward.\" \n\n\"I love you too. And I'll be fine, you know I will. And I know that you and Sten will beat Alistair into next week if he hurts me, so I think I'm safe.\" \n\nAedan grinned. \"Who knew the big guy would turn out to be such a softy, hey?\" \n\nWe both laughed, and Aedan shook the water off his feet before stuffing them into socks and then boots. We walked back to camp, laughing and teasing each other, and both cracked up when Alistair's face, abnormally pale and sweaty, came in to view. Aedan let me go and walked up to Alistair. He held out his hand, and they shook. Alistair's look of relief was comical, and I plopped down beside Leliana to giggle as we watched them. Breakfast was a rowdy affair, even Morrigan joining in the general revelry, before we packed up and headed out again. \n\nAs we walked, Alistair took my hand and then proceeded to drag his feet until we were well back from the rest of the group. When he thought no one was looking, he dragged me off the path, pressed me up against a tree, growling, and kissed me. It was sudden and unexpected and intense, and left me panting. \n\n\"So what exactly did you mean when you said you'd help me pack up tomorrow?\" \n\nI blinked, confused. \"Uh, I thought that was sort of self-explanatory. After we wake up, I'll help you pack our tent and stuff.\" \n\nHis voice cracked slightly. \"Our tent?\" \n\nMy cheeks coloured and my heart dropped. \"Oh, I, uh, didn't think. And I wasn't planning on having sex or anything. I just sort of assumed you'd...\" I trailed off, embarrassed and mortified. \"...but if you'd rather not, then I can find somewhere else to sleep. I understand. I'm sorry, Alistair-\" \n\nHe silenced whatever I was planning to say next with another intense kiss. He pressed me against the tree, pulling my arms up around his neck, grinding his hips against mine. His tongue ruthlessly invaded my mouth, and I moaned, tangling my hands in his blond hair. His armour was hard and uncomfortable squashed between us, and his hands roamed down my sides, one of them dipping down to stroke the curve of my hip. \n\nHe finally pulled away, resting his forehead against my own. We were both breathless, and I could feel the puffs of air leaving his mouth blowing across my lips. I moaned again, confused, and at the same time, completely aroused. When he spoke, his voice was that low, husky tone that I couldn't resist, and it sent waves of heat washing through me. \n\n\"I can't wait until tonight, then. This is going to be a long day.\" He rubbed the tip of his nose against mine and I giggled. \"Maker's Breath, what did I ever do to deserve you? I am a lucky man.\" He kissed me again, soft and sweet this time, and then broke away, catching my hand and pulling me back out onto the road. \n\nWe were less than two days from Denerim, Aedan informed us as we caught up to the rest of the group. Two days to figure out what the hell we were going to do once there. We needed to confront Marjolaine, see if we could sneak into the Alienage and check on things, talk to Wade and get some armour made, and then hide out while he worked on it. I imagined we'd do some good deeds, some chanter's board stuff to make money, that sort of thing. I'd also had a thought about having a chat with a particular dwarf in the market district. \n\nThe problem was, we had absolutely no idea what to expect heading into Denerim. The world had changed from what I knew, and it was possible they were barring the gates, or searching those who entered, or had lookouts trying to spot Aedan and Alistair. We batted around ideas \u2013 trying to sneak multiple small groups in, or having everyone try to dress as servants with me as a noblewoman, but none of the ideas were fool-proof. We decided to wait and see what the situation at the gates was before entering. There was no one else on the road to ask for an update, which in itself was a bit of a bad sign \u2013 there should have been at least some traffic this close to Denerim. \n\nWe had decided long before that Sten, Shale, and Morrigan would remain outside the city. There was just no way to hide a golem or a Qunari in a human city, and I had always been amazed in game that no one commented if you were strolling through the Denerim market as, say, an elf, with only a Qunari, a golem, and a mabari for company. And between Morrigan's clothes and her temper, it was probably best that she stay away from heavily inhabited areas. None of the three seemed upset at the idea, though I figured we should buy Morrigan something shiny, and get Sten some cookies, just in case. I had no idea what to get Shale, really. \n\nAlistair and I spent the rest of the day watching each other. Whether we walked together or apart, every couple of minutes I'd glance over to ogle the handsome man I was going to be sharing a tent with that night, only to catch him staring at me with dark eyes. We'd both blush when our eyes met, and look away, only to have it happen again five minutes later. Before long, even Leliana wouldn't walk with me anymore, and Alistair and I were banished to the back of the group to walk together. I barely noticed, all my attention trained on the mouth-watering Warden at my side. \n\nThe day passed quickly, and we soon found ourselves putting up a tent together, using the extra material from Zevran's to enlarge it, laying our two bedrolls side by side with blushing smiles. There was a small stream \u2013 barely deep enough to get wet, and ice cold \u2013 that would be the last chance we had to clean up before arriving in Denerim. After sparring with Aedan as usual, I took the opportunity to bathe as well as I could, hurrying back to the fire in a simple linen dress as fast as possible to warm up. Alistair, who'd also cleaned up, was in trousers and a shirt instead of armour, and for the first time, when I sat in his lap and he wrapped his arms around me to help me warm up, I couldn't help but feel the heat of him burning through both layers of thin clothing. I could feel the hardness of his impressive muscles when I curled into him, trying to leech heat, and I was sure he could feel the curve of my hip under his hand, my ass against his lap. \n\n\"Maker's Balls, Sierra! Your hands are cold!\" \n\nFor fun I stuck them down the back of Alistair's neck, thoroughly enjoying his wriggling attempt at escaping. He finally managed to grip my hands in his own, rubbing them and blowing warm air on them, which was strangely erotic. Right now everything he does is erotic, if I'm honest. I smiled appreciatively and tried not to let my mind climb down into the gutter. Leliana served the ever-popular stew for supper, and I laughed as I watched Aedan and Alistair wolf theirs down like mabari pups and then ask for more. We skipped templar practice \u2013 I was a hot mess, all edgy in anticipation, and I doubted Alistair was in much better shape. As soon as it was practical, we retired to our tent, faces crimson with embarrassment and desire. I heard laughter coming from the campfire after we left it, and couldn't even bring myself to care. \n\nI discovered a problem once we were in the tent \u2013 changing into sleep clothes. Neither of us planned to wear armour, but I didn't intend to sleep in my linen dress, and I wasn't about to get naked in front of Alistair just yet. I sat on my bedroll, legs tucked under me in a most lady-like fashion, and looked up to find Alistair staring at me. Awkward! \n\nI cleared my throat and tried to think of something to say, failing miserably. Alistair just kept looking at me, and my mind went completely blank. We stayed like that, both blushing, me fidgeting with the shift I planned to sleep in, until I'd finally had enough. \n\n\"Oh, for the love of God. Forget this!\" \n\nI uncurled from my bedroll and flung myself into Alistair's arms. He caught me without hesitation, and the awkwardness faded to nothing as our lips met. He pulled me into his lap again, my arms around his neck, hands fisting in his short, golden hair, and I felt his hands, one splayed against my back, the other on my thigh just above my knee. I immediately opened my mouth, and he took the invitation, stroking my tongue with his own, making me groan softly. I was dizzy with the intensity of the kiss, and some part of me realised I wasn't breathing, and I pulled away. Alistair grunted, disappointed, until I used my grip on his hair to pull his head back and attacked his jawline with my lips and tongue. He tasted like soap, of course, but also camp smoke and sweat and something that was just all him. It was intoxicating, and I kept going until I reached his ear, relishing the sounds I was dragging out of his mouth. \n\nI could feel his hands, fisted in the material of my dress, the one stubbornly, frustratingly staying on my knee, the other behind my back. I wanted those hands elsewhere; I wanted to rip off my clothes and have my way with him. I wanted to break the iron control that was allowing him to hold position. I squirmed in his lap, aroused and unsatisfied, and he gasped and clenched his hands. I grabbed his earlobe between my lips, nibbling it gently, before running my tongue up the outside of the sensitive skin. He was shivering, now, but I wanted more. I stroked my tongue back down his ear, only to continue down his strong neck. I lapped at his skin, enjoying every hiss and moan, and then gently bit him in the crease where his neck met his shoulder. \n\nI finally got the response I was looking for. With a feral moan, the hand behind me slid up to tangle in my thick brown hair, pulling me back from his neck so he could ravage my mouth with a kiss. The hand on my knee crept to my waist, settling just below my heaving breast, tantalising me with its proximity. Impatient and unable to wait any longer, I grabbed the hand in one of mine and dragged it, unresisting, to cover my breast. ",
        "When he'd touched my breast that morning, it had been through leather armour. This was nothing like that. His hand was almost hot, and I shivered at the temperature differential as he engulfed the small mound. My nipple was hard, and scraped across his palm as I dragged it into place. We both moaned, and his hand convulsively clutched me again, squeezing my breast. I almost came on the spot, feeling his hardness under my lap, his fingers toying with my erect nipple. I bucked up into his hand, and he gasped out loud. \n\nI had just enough time to enjoy the sensation before I heard something coming from the direction of camp. Through a haze of desire, part of my mind tried to sort out what I was hearing. There was the bounding sound of a large animal running, and I pulled away from the kiss with a look of total confusion on my face. And then Aedan's voice came into focus. \n\n\"Prince, no! Bad dog!\" \n\nSuddenly anticipating what was next, I wrapped my arms around Alistair's head and threw my weight into him. Surprised, he fell back, avoiding banging his head by a narrow margin. He instinctively pulled me close, which turned out to be a bad move because when the ton of enthusiastic mabari \u2013 and a few pounds of oiled tent cloth \u2013 landed on me, I fell forward to head-butt Alistair directly in the face. I heard a shout and a muffled swear, and felt blood pouring down his face, running into my hair and streaking my own face in the process. Preparing to jump, Prince transferred his weight to his back paws, and I let out a scream as I felt something pop under the weight. A rib, I assumed, from the fire racing through my chest and my sudden inability to breathe without pain. \n\nPrince yelped \u2013 I could have sworn he actually said 'sorry' \u2013 and finally managed to get off; I hoped someone corralled the silly animal before he stepped on me again while trying to apologise. When my head finally cleared, I could feel Alistair wriggling around under me, and hear a panicked Aedan shouting my name. I tried to respond, but ended up emitting only a pained moan. Suddenly the material of the tent was lifted, and I turned my head to try to see the worried face of my brother peering down at me. A glance behind him showed Zevran smirking, and Leliana covering her mouth as she tried not to break out laughing. Wynne's face was disapproving, but somehow still both concerned and slightly amused, while Morrigan's typical sneer just added to the overall hilarity I could somehow see. \n\nWithout further ado, I absolutely lost it. I howled in laughter, my sides shaking, the heaves jarring my sore chest, but I couldn't stop. I heard Leliana's refined giggle, and Sten's snort of disgust, and then Alistair and Aedan joined in and shortly we were all cracking up. I cackled until I felt the soothing aura of Wynne's healing as she repaired my rib, and then Alistair's nose, which was still pouring blood. Alistair gently held me as he rolled to the side, depositing me on the remains of the tent, and scrambled to his feet. He gave me an embarrassed grin as he bent down to pick me up and set me down on a nearby log. \n\nI buried my face in his shirt as he held me, relieved to have the pain gone, amused by the ridiculousness of the situation, and frankly disgusted by being covered in Alistair's blood. He finally pulled away, and I looked up to see our tent being reassembled by Zevran and Leliana, while Aedan just glowered at Prince. Or at least he tried to glower; it was difficult, with Prince sitting by me, chest puffed out proudly, looking quite pleased with himself. \n\n\"Aedan? What on earth was that about?\" \n\nMy brother walked over and settled beside me with a sigh. \"I'm going to guess that Prince didn't want anyone touching his human.\" Prince woofed happily, giving me what looked like a grin. Aedan face-palmed. \"And it would seem he's a misogynist \u2013 he didn't do it to me and Zev.\" \n\n\"Hey!\" Alistair protested indignantly, and Prince gave him a look that said 'you know you deserve it'. I couldn't help but laugh, earning myself a glare from Alistair. I schooled my expression as Aedan called Prince over. He slid his huge head into Aedan's lap, almost purring. Aedan cupped his face and lifted to make eye contact. \n\n\"Bad dog, Prince. You hurt Sierra badly today.\" Prince whined and tried to look away, but Aedan maintained the position. \"Sierra can take care of herself. You don't need to protect her from friends. Only from darkspawn and bandits. Alistair is a friend.\" \n\nPrince rolled his eyes over to look at Alistair, crouched nearby, and sneezed in his general direction, before looking back at Aedan with disgust. He whined again. \n\n\"Friend.\" Aedan said it firmly, right in Prince's face, and the furry monster finally made a noise that sounded vaguely like acceptance. \"Now you better think of some way to make it up to Sierra and Alistair. You owe them both an apology. And if you do something like that again, I'll chain you to a tree in camp from now on.\" \n\nThe fact that he was talking to his dog like normal parents might to a six-year-old was too funny, and I had to laugh. Aedan finally released Prince, and he came over and tentatively licked my fingers. I scratched his ears and he chuffed happily. Turning to Alistair, he looked back once at Aedan, like he was checking to see if Aedan was joking, and when he got nothing but a glare in return, he stepped up to Alistair, lowered his head in an oddly submissive pose, and whined. Always a softy, Alistair snorted but then reached out to stroke the soft fur on Prince's head. Satisfied that he'd been forgiven, the mabari wandered back over to the fire and laid down. \n\nChapter Thirty-Eight: Spidey Senses \n\nLeli and Zev had finished with our tent, and I stood up, taking Alistair's hand. As I stood, Aedan pointed down towards the river. \n\n\"Get cleaned up again, both of you. You look like you've been rolling around in a battlefield.\" \n\nI looked up at Alistair and realised his face and neck were covered in dried blood; reaching up, I recalled that so was I. My hair was crusted with it, and I was suddenly thoroughly disgusted. His expression mirrored my feelings, and after grabbing soap we headed down to the stream hand-in-hand, barely able to see in the last light of dusk. I knelt on the bank, carefully using a cloth to wash my face and neck. Alistair just waded right in, fully clothed, to my amusement. When he assured me I'd gotten the blood off my face, I cast about awkwardly trying to figure out how to wash my hair without climbing in entirely. \n\n\"Let me.\" \n\n\"Huh?\" I'm always so eloquent. \n\n\"Roll onto your back, and I'll wash it.\" \n\n\"I'll fall in!\" \n\n\"Not with me right behind you. I won't let you fall, Sierra.\" \n\nI trusted Alistair, but was still a little nervous. I reluctantly turned, sitting with my back to the stream, and he waded up behind me. He put his steady hands on my shoulders and eased me back; I gasped as the cold water crept down my neck as my hair submerged. His fingers were strong, his hands warm, and he leaned over me, concentrating intensely, as he carefully lathered my long thick hair. His fingers massaged my scalp, and I moaned, the sensuousness contrasting strangely with the cold. \n\nHe smiled softly at me. \"You are so beautiful, Sierra.\" \n\n\"Flattery will get you everywhere.\" I closed my eyes and just enjoyed the intimacy. \n\nI was surprised when, a moment later, I felt his lips press gently against mine. It was like some weird moment from a chick flick \u2013 I recalled a scene from the Bourne Identity or some such where he was washing her hair and they ended up kissing \u2013 but it was better. He was Alistair, and he was real, and it was happening to me. The kiss ended and he pulled away, still supporting my head. \n\n\"All clean, I think. And it's cold \u2013 we had better get you dry and warm.\" \n\nHe helped me sit, and I quickly wrung the excess water out of my hair and twisted it into a bun to prevent it dripping too much. He climbed out of the water, and I was momentarily dumbstruck. Despite being fully clothed, the water meant that nothing was really hidden. He was six feet of gorgeous, and I moaned again in spite of myself. He glanced at me curiously, and I was intensely grateful for the near-darkness that covered my blush. I shook my head, trying to gather my wits, and scrambled to my feet. \n\nSuddenly aware of how cold it was, we instinctively clung together, though his wet clothes were probably not helping me any. Reaching the tent, I insisted he crawl in first and change his soaked clothing, and I went to huddle by the fire. Zevran, on watch, was the only one left outside, and he had thoughtfully tossed some extra wood on the fire. I wiggled as close to the fire as I could tolerate and sat with my wet hair towards the heat. I knew it wouldn't dry that fast, but the warmth felt wonderful. \n\nZevran raised his eyebrows with a smirk on his face as he dramatically glanced over at the tent I shared with Alistair and then back at me. His thoughts were plain \u2013 why was I out here when there was a perfectly naked, gorgeous templar in there? I scowled at the elf and shook my head. I'd had enough unintentional embarrassment for one night \u2013 I didn't need to add walking in on Alistair while he was changing. I wanted to get naked with him, more than I was comfortable admitting, but I wasn't going to have the first time be sort-of accidental and awkward and in a tent with everyone listening. We weren't ready. Zevran just shook his head, amused. \n\nAlistair saved me by emerging quickly, dry if not yet warm, and I slipped into the tent to change into a light shift for sleeping. I looked critically at the dress as I took it off \u2013 it was probably a lost cause, with all the blood around the neck, but I put it aside to ask Leliana's opinion later. I wonder if they have bleach in Ferelden. I called out softly when I was ready, and Alistair crawled back into the small space. \n\nNeither of us spoke; I think we both knew that the mood had been well and truly broken, and I for one was freezing. Our bedrolls were pushed up side by side, and as he laid down, I snuggled up to him. I could feel myself start to shiver, and he wrapped a warm arm around me as we pulled both blankets up to cover both of us. Cuddled in his arms, finally starting to warm up, I felt myself drifting off to sleep. \n\n\"Love you.\" I mumbled. I felt more than heard him reply, but I was asleep before whatever he said penetrated. \n\nI woke in the same position I'd been sleeping in, snuggled up to Alistair's side. I opened my eyes, expecting to see morning light filtering through the tent fabric, but it was mostly dark outside and very, very quiet. I couldn't shake the feeling that something had woken me, though I couldn't imagine what; Alistair slept peacefully, so obviously it was only me. I tried to settle back down and get more sleep \u2013 my eyes were gritty with fatigue, and I clearly needed the rest \u2013 but I felt like I was going to crawl right out of my skin, and the sensation wouldn't let me rest. It was a familiar sensation, the more I thought about it, and I realised that it was similar to the feeling I'd had early on after meeting Zevran when he'd been trying to prank me while meditating with Alistair. In fact, it suddenly occurred to me, it wasn't similar \u2013 it was exactly the same. \n\nI would have slapped myself upside the head if I thought I had time. I jerked upright, and let out the loudest yell I could manage. \n\n\"Wake up! We're under attack!\" \n\nI heard a startled Leliana scramble to her feet out by the fire, grumbling about bad dreams, just in time for the whistle of an arrow to be heard flying through the camp. It thunked into something, and from Leliana's sudden shriek, the something was her. Moments later I felt Wynne's magic flare, and then a few seconds later Morrigan's, and I hoped one or the other had taken care of Leliana. \n\nAlistair, more alert than I despite having just woken, grabbed me with one arm, his sword \u2013 which I hadn't realised was right beside his bedroll \u2013 with the other, and with a grunt, rolled us. We hit the side of the tent and stopped, just as a couple of crossbow bolts pierced the spot we had been sleeping in. Releasing me, Alistair bolted from the tent with a growl, and I heard his shout at the same time as the clashing of metal from the other side of the camp. \n\nI scrambled for my own daggers, our tent no longer under attack since Alistair had exited, and tried to follow him out, but he was blocking the exit, engaged in furious combat with someone whose legs I could only glimpse briefly between Alistair's. There was enough moonlight to see, but barely. It was just as well; as I ducked back into the tent, I felt the aura that could mean only one thing \u2013 our ambushers had a mage with them. It was different from Wynne's soothing presence, and similar to Morrigan's, but I could tell Morrigan was on the opposite side of the camp, in spider form I guessed, and this was much closer. \n\nClosing my eyes to concentrate, I found the source of the mana and reached out, as I'd shown Alistair on the hapless darkspawn Emissary. I heard a scream as I seized that power, but then had no idea what to do with it. Crawling back to the tent flap, by the wan moonlight I could see Alistair bleeding from a slash to the arm, and all of a sudden instead of being afraid, I was angry. How dare these bastards try to hurt my family? I growled and felt the power I held change, move somehow, and suddenly Alistair was surrounded by a brief flash of white light. I catalogued what I had done with half my mind, comparing it to what had happened at Ostagar, while the rest still watched Alistair. The next time his assailant got a hit in, the sword stopped an inch from his skin as though he wore his usual armour, and a spark flared; the sword seemed to rebound up and fly away, and I heard a curse as the man lost his grip. Alistair slashed his neck easily, and the would-be assassin dropped, hands trying in vain to close over the wound. \n\nWhen Alistair stepped forward, I could finally see Aedan, dancing between two men with great swords, and my anger flared again; another flash of white light, and I knew he'd be similarly protected. I was able to crawl out of the tent and climb to my feet, turning to see the terrified visage of a young man in robes, clutching a staff ineffectually, and chanting frantically. I was amused to note that what he was chanting wasn't an attempt to cast a spell, but rather a prayer to the Maker. I looked away from him and spun, picking out my friends in the darkness, seeing flashes of light as shields went up. Alistair was relieving some of the pressure on Aedan, while Zevran fought to keep Leliana safe near the fire. Prince and Sten were finishing off the archers that had started the whole thing, and Shale protected Wynne as she circled, looking for obvious injuries. I couldn't see Morrigan, but her aura had last flared at the edge of the woods, and a number of writhing, screaming attackers demonstrated the power of her bites. None of the people I could see near her were capable of standing, never mind fighting, so for the moment she was safe. \n\nAs I completed my circle, the rest of my group finished off the last of the enemy; Zevran and Aedan went around slitting the throats of those still breathing. That left just the mage near me, now completely devoid of mana. I caught Alistair's eye and then put up one of the shields I had finally figured out, and he nodded. Aedan walked up to the mage, who had fallen to his knees, dropped his staff, and held his hands out to the sides in an effort to look non-threatening. His frightened eyes were fixed on me until Aedan stepped into his line of sight. \n\nI didn't stop to watch the encounter between the mage and Aedan; I turned and rushed over to where Leliana had fallen by the fire. Zevran had her propped up against his chest, his hands holding her shoulders still, while Wynne slowly, methodically worked an arrow out through the back of her leg. She'd cut away the leather of her armour, revealing an expanse of pale thigh. I was relieved to see not much bleeding \u2013 the arrow hadn't hit an artery \u2013 but one look at Zevran's too-blank face and I knew I was missing something. When I looked closer, I could already see the edges of the wound blackening, and Leliana didn't even seem to notice the pain as Wynne pressed the arrowhead deeper into her flesh. Poisoned, damn it. Leliana's face was pale, and I didn't think she'd notice our conversation. \n\n\"Wynne?\" \n\n\"I see it, child. I tried, but I don't know enough about poisons.\" \n\n\"Zev?\" \n\n\"Two or three possibilities come to mind. If I knew which, I could make an antidote \u2013 maybe, if I have the supplies available \u2013 but if I give her the wrong one, it will be worse than the poison.\" \n\nI swore. \"Zev, can you...look, don't hurt anyone, but can you find out what the poison was?\" I gestured with my head to the mage behind me. \n\nZev nodded grimly, grabbing Leliana's blanket and wrapping it around her now-shivering upper body. I stayed with her, but watched Zev as he stood and headed back to the apostate, still kneeling in front of Aedan. He reached down into the grass near my tent and picked up one of the daggers that I'd dropped there. Steeling myself against what I had asked him to do, I watched him walk up behind the mage, grabbing a rough handful of his hair and tilting his head back. His hair fell back, and I realised he was an elf. I hadn't even noticed. Zev held the dagger at his throat. \n\n\"Zevran...\" Aedan murmured, warningly. \n\nHe must have winked at Aedan, because his body language subtly relaxed. Zevran spoke. \n\n\"I'm afraid your sad story won't sway me, little mage. My friend is dying. So either you tell me what poison they used to tip their arrows, or you die.\" He pushed his head down, and looked at Aedan, who nodded, ever so briefly. Like he'd actually kill someone. Oh wait... \"Think carefully, little maleficar. I've seen your friends \u2013 they were nothing more than thugs. I'd be willing to bet that you made the poison for them. Tell me now, and I might be inclined to allow my friend here to continue with whatever soft-hearted plan he has that will allow you to keep your pathetic little life. Refuse me, and I will use you to refresh some skills I haven't practiced in a while.\" \n\nI almost felt sorry for him, felt sick for torturing him even if only emotionally, but we needed to know what poison they used. I left Leliana, wrapped tightly in a blanket, with Wynne, and walked over. The apostate's eyes went wide as I approached. Zevran shook his head, pulling at his hair \u2013 enough to hurt, not enough to damage. \n\n\"Speak.\" \n\n\"I don't...I don't know what it's called. Please. I'll tell you everything I know. There used to be another mage with us \u2013 he died a few months ago \u2013 but he taught me how to make basic poisons and poultices. I don't know what it's called, but I can tell you how it's made. Or, I can make the antidote. I know how. One of the guys accidentally cut himself once on an arrow. There might even be some of the antidote back at my camp. Please, please. Don't hurt me. Kill me if you have to\" \u2013 his eyes opened, tears streaming, looking at Aedan, pleading \u2013 \"but don't let her hurt me.\" I was fascinated that it was me he was concerned about, despite Zevran's dagger at his throat. He was babbling, and I figured about ten seconds from soiling his robes. \n\nThe assassin shook the young mage's head again. \"Tell us how the poison is made, and then the antidote. Lie, and you're mine.\" \n\nI looked at Zev skeptically, and tried not to grin. Zev crouched down and listened to a list of ingredients and instructions flow frantically out of the terrified elf's mouth. Zev nodded every now and then, and I was encouraged to see that he seemed to recognise the poison. After a few minutes, he stood up. ",
        "\"Can you fix it?\" \n\nZevran shook his head. \"There's no way to get what I need, here. But it sounds like they've got some of the antidote, and probably the supplies I'd need to make it, back at their camp. He says this was all the men with them, that the camp is deserted. I'll go check it out, and if it's not a trap, I'll get the antidote.\" \n\n\"Can you trust that it's the right one?\" \n\n\"I'll know it by smell. It's quite distinctive. If it's wrong, I'll make some myself with their herbs.\" \n\nAedan's voice rang out. \"Take Morrigan with you. She can scout by air, and if you get in trouble, come get us.\" \n\nI heard the cawing of a crow overhead, and knew she was one step ahead. Zevran handed me my blade and took off after her at a run. I walked away from the hapless mage with a disgusted snort and headed back over to where Wynne was hovering over a grey, sweaty Leliana. With nothing else to offer, I sat beside her and held her hand. I briefly wished I was religious \u2013 any faith would do \u2013 so that I could at least pray and believe it might help. Wynne spared me a sympathetic look and continued to fuss over Leli, checking and rechecking on her condition. Alistair had dressed, and came to sit behind me, his enormous plate armour giving me something to lean against, and held my other hand in his. \n\nAedan joined us, and I realised he'd left the mage alone and unbound. Well, alone except for Prince, who obviously shared my dislike and stared at the young man with an almost disturbing intensity. Shale and Sten were piling corpses for burning off in the woods. I shot Aedan an incredulous look, and he shrugged. \n\n\"How long can you keep him from casting?\" \n\n\"No idea, actually. Though if I lose it, Alistair can take over. Why isn't he at least tied up?\" \n\n\"There's extenuating circumstances, Sierra.\" \n\n\"Of course there are. And so we're going to do what with him? Let him go? Ask him to join us?\" \n\nAedan spoke defensively. \"It's what you had us do with Zevran, I'll remind you. Sten too, for that matter.\" \n\n\"Because I knew what would happen! I don't know this kid. He wasn't in the performance. He could turn around and slaughter us in our sleep. Or turn us in to Loghain or Howe for the bounty. Best case scenario he's an extra apostate to deal with, and one who can't turn into a bird and disappear when the templars show up. I'd never have taken Zevran or Sten either, if I didn't know the future. You're really shocked I don't trust him?\" \n\n\"Are you even going to hear his story?\" \n\nI sighed. \"Of course I will. I'm probably the softest touch of all of us. Just don't expect me to like it.\" \n\nAlistair squeezed my hand and Aedan grinned. By unspoken agreement, we would wait until Zevran returned and Leliana was safe before discussing anything further. Sten and Shale returned, Sten favouring the young mage with glares that rivalled Prince's. The apostate stayed put, curled in on himself, shaking every time he looked our way. I steeled myself against his pathetic sadness and stayed with Leliana, resting against Alistair's armoured chest. \n\nAs we sat I could feel the mana in the mage regenerating, and I gradually drew more of it in as it did. If he was uncomfortable, he wisely kept it to himself. I don't know how long we sat, waiting for Zevran to return, but it felt like hours. It felt like a death vigil. Everyone was jumpy, startling at every noise, and I had to restrain myself from heading off after Zev half a dozen times. If he's fine, you'll just slow him down; if he's not, you're not the one who can help him. Steady girl. We sat, and Leliana got paler, her breathing more laboured. The sun peeked out over the horizon as dawn arrived. \n\nAfter an eternity, I could hear rustling, and then the caw of a crow, and Zevran burst out from the trees. He was sweaty and panting, obviously nearly exhausted, but he carried a pack full of herbs on his shoulder and a small vial triumphantly in his fist. Morrigan transformed right in front of us and plucked the vial from the wasted elf's hands, and proceeded to rattle off instructions to Wynne that she'd obviously been given by Zevran. The former assassin made it to the fire and then collapsed, spent. Aedan found a blanket and covered him, curling up behind him for good measure. Morrigan sat beside me and I favoured her with a grateful smile. \n\n\"Any trouble?\" \n\n\"None. Though the camp was a little further than he said. 'Twas abandoned and the supplies were right where they were supposed to be. There was nothing there worth scavenging besides the herbs and the antidote. Even the food...\" Her disgusted look gave me all the explanation I needed. She paused. \"I admit to being impressed; the elf can run.\" \n\nI felt a flash of warmth at the thought of our companions working together to save Leliana; I'd never really seen them come together like this before, though I supposed they had when I'd been burned. But Zevran had run himself into the ground to get the antidote, and Morrigan didn't even try to hide the concern she felt. I contemplated teasing her, and decided to pass. I couldn't do it after everything she'd done. I reached over and squeezed her hand, once, then settled back against Alistair to watch Wynne work. \n\nShe'd apparently administered the antidote already, and I saw the empty vial roll away from her in the dirt. Leliana was still pale and sweaty, and I felt Wynne's magic flare again as she tried another healing spell. It felt weaker than normal, and Wynne herself started to look a bit peaked. She reached into a nearby pack, and I saw her pull out a Lyrium potion. Worried about my favourite grandmotherly mage, I stirred to object, but Morrigan cut me off. \n\n\"Allow me to try. It can't hurt.\" \n\nWynne nodded, and Morrigan shuffled to her knees, reaching out to place her hand over the wound. I felt her magic flare, but again nothing changed. Leliana looked the same, and Morrigan, sniffing, tried again. And again, each time weaker than the time before. I squeezed Alistair's hand in a death grip, and he squeezed back. I met Morrigan's eyes, and she shook her head. \n\nBoth of our mages were tapped, and Leliana still looked like death. \n\nFinally beyond guilt, I got up and approached the apostate. \"You lied.\" \n\nHis face was white as a sheet, looking up at me. He practically squeaked as he spoke, and I wondered just how old he was. \"I didn't. I swear! It should have worked. I've used that antidote before.\" \n\n\"You'd better come up with a better answer than that. You know what I am, don't you? I don't think you want to be on my bad side.\" I felt bad using the templar card. Almost. \n\n\"I...look, I'm a healer. If I had any mana, I could maybe come up with something. Like this, I'm less than useless to you.\" \n\nI looked over at Wynne, who met my concerned gaze with a similar expression. Morrigan broke in. \n\n\"Let him try. If he attempts to attack, or escape, we will end him. 'Tis simple; even were he a blood mage, we have him greatly outmatched.\" \n\nWynne nodded reluctantly, as did Alistair. I glanced at Aedan, but he was busy with Zev, who must have been in even worse shape than I thought, to have my brother so absorbed. I closed my eyes and released the mana I was holding. \n\nHesitantly the apostate climbed to his feet, taking a few steps then kneeling by Leliana's unresponsive form. I felt his magic flare, and a blue light seemed to pass from his outstretched hands into Leliana's wound. Wynne and Morrigan both watched, apparently fascinated, as time stretched. After another eternity \u2013 which was probably only a minute or two \u2013 he nodded. \n\n\"May I see the arrow you removed?\" \n\nEyebrows drawn in puzzlement, Wynne handed the arrow she'd fished out of Leliana's leg to the elf. He stared at it for only a couple of moments, before holding it out to her again. \"There's a piece broken off. I'm guessing it's still in there.\" He gestured to the wound. \n\nWynne accepted the arrow skeptically, squinting in the dim light. \"Good eyes. If you're right, we need to get that piece out.\" She looked around, grimacing. \"This isn't going to be fun.\" \n\nWe shifted Leliana to lie back on the ground, and I went over to lie beside her, one arm holding her shoulders at Wynne's direction. Alistair shifted his own weight to hold down her legs. We recruited Sten to boil a pot of water, and then, in the fire, heat a slender piece of metal Wynne produced from her pack. Morrigan, Wynne and the apostate hovered over the ugly, blackening wound, Morrigan providing a magic light to supplement the sunrise, holding strips of cloth we'd torn up to make bandages in the other hand. Wynne took the cooling piece of metal and began probing into the wound gently. The elf held the edges back, and blood oozed out of the wound. I looked away and tried not to vomit. \n\nWynne almost jumped when the probe clunked softly against something hard, and we all shared a look of mixed relief and concern. Relief that we knew what the problem was; concern, because we had no good way of removing it. What I wouldn't give for a scalpel and a pair of tweezers. Wynne muttered a warning to Alistair and I, closed her eyes briefly in what I assumed was some sort of prayer, and then carefully slid one finger into the hole the arrow had left. \n\nI'd vaguely expected it, at some point, but Leliana's scream still caught me completely off guard. Alistair, fortunately, was not as surprised as I and managed to continue to hold her down as she thrashed. I pressed harder on her shoulders, murmuring soothing endearments that I doubted Leliana could even have heard, never mind understood. Wynne just grimaced and kept digging, more and more of her finger disappearing into the small hole. She finally must have bumped into something, because she grunted and shifted her hand, removing the probe. \n\nNow came the hard part \u2013 getting the rest out without letting it fragment into pieces. It felt like forever, as Wynne gently wiggled and teased the fragment of arrow out of Leliana's inflamed flesh. Periodically Leli would half wake up, screaming and trying to thrash, but then pass out again for a while. With a triumphant gasp, Wynne finally lifted a hunk of black, nasty looking stone out of the wound. Nodding to the elf, she whispered. \n\n\"Could you check?\" \n\nHe closed his eyes and the blue light resumed. In a few moments, I gasped as the wound edges drew together and sealed. The blackness around the entry was gone, and the skin came together like, well, magic. \n\nThe wound in Leli's thigh was closed. The skin was puckered awkwardly, and I felt sad about the unfortunate scar it would leave, but the bleeding had stopped and the skin had sealed completely. Shifting my glance to Leli's face, I noted she wasn't shivering quite as much, and the sweat on her brow was drying. With a sigh, Wynne ran her hands across the scar, and I felt her magic flare once more. It lasted only a few seconds, but the smile I saw on her face was the most beautiful thing I could imagine. \n\n\"She will recover.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-37-38"
}