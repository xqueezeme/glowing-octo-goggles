{
    "title": "A Little Animal Ch. 05",
    "pages": [
        "Part 5 of a larger work best enjoyed together. Whereby our heroine tries her new tricks out on her unsuspecting husband.\n\nHuge thanks to SueDNym for ongoing contributions. Far more than mere editing. Be sure and check out her own excellent works.\n\n*****\n\nChapter 14\n\nGary conducted the meeting and left in such a rush that it might have been considered rude. But, the negotiations led to a compromise which was acceptable to both parties. Monique's little surprise and his cheeky response had left him feeling energized, confident and authoritative. His testosterone rush definitely worked to the benefit of all. \n\nEvery time he pictured the risqu\u00e9 image sent by his wife, two things happened. First, his cock swelled until rock hard. Then, an immense feeling of pride blossomed in his chest at the thought of the beautiful, sexy woman who was waiting at home. While his reactions were juvenile, he didn't care. For the first time in years, his wife's sexuality was empowering to him rather than emasculating. It was a very welcome change. \n\nHis assertive mood had positively affected his involvement in the negotiations throughout the day. He was decisive and spoke with vigor. Both sides appreciated his suggestions and they quickly moved forward with few distractions and setbacks. Plans had been agreed upon and contracts were signed, days ahead of schedule. The CEO, Brendan, had been impressed and appreciative. \n\nGary hit the road without hesitation, trying his best not to attract the attention of police officers. Under the circumstances, it was a difficult task. The hour and a half drive was torture in his uncomfortably tight trousers, since his balls had been aching for hours.\n\nHe was out of the car and in the house before the automatic garage door had closed. Feeling a primal need to be close to his woman, Gary planned to relentlessly kiss and grope Monique. He hoped the kids were occupied elsewhere in the house so she couldn't use that as an excuse to push him away. Years of experience had conditioned him to expect the worst. \n\nThe savory smell of his wife's cooking welcomed him home. He heard her moving about in the kitchen while happily humming an upbeat poppy tune. Following his nose and ears, he sought out his prey.\n\nThere, he found his pert, thirty-two year old yummy mummy. She was dressed simply in comfortable form fitting jeans and a snug t-shirt. Enjoying the view, he stood in the doorway and silently watched her from behind. Monique's buttocks moved in a beautifully subtle dance beneath the pants which clung to her perfectly flared hips. Her hips swayed in rhythm with the music playing in the background. In response, he carefully adjusted his erection, which seemed to be growing by the second. Her flawless pale skin glowed as she bustled about while finishing the meal preparation. His mouth watered and it had nothing to do with the aroma of food.\n\nThe hypnotic sway of Monique's hips, along with her feminine humming, wove a powerful spell of lust within Gary. Was his wife aware of the effect she had on men? Being the one man in the world to which she would occasionally gift her most intimate company only increased his sexual arousal. \n\nIn actuality, Monique had long understood the effect pretty young women had on the opposite sex. It was unavoidable, like gravity. Though far from arrogant, Monique knew her good looks attracted attention from men. 'The effect' was a double edged sword. There were certainly men from which she didn't want attention and minimized any outward show of sexuality in their presence. Rarely, she harnessed and focused that power to satisfy her modest desires in life.\n\nBut, Monique was feeling more confident in her sexuality than ever before. She knew precisely what she was doing to the man standing silently in the doorway across the open living space. With her back towards him, she smiled deviously. Perhaps she should have chosen to wear something more provocative. But no, that time would come soon enough. \n\nMonique struggled with her own impatience. Would it be possible to lure Gary from merely lurking in the doorway to actually attacking her on the spot? Tormenting her husband, before rocking his world, was becoming a guilty pleasure.\n\nWithout turning, Monique teased, \"Are you going to stand there like some teenage stalker or greet your wife properly?\"\n\nGary grinned and sauntered over to the sweet little package by the stove. He scooped her up and sucked her neck where it gracefully transformed into her shoulder. Like some crazed teen, he sank his teeth into the muscle above her collarbone. Though he did not break the skin, Monique was thrilled at the force of Gary's attack. Her vagina instantly moistened as his lips produced the first true hickey she had ever received. Gary publicly marked her as his. It would be difficult to hide in the place he had chosen. \n\nGary's teeth pressed quite hard and it hurt Monique as she struggled to free herself. But, with her feet off the ground, the only purchase she could get was to push her hands against his chest. Suddenly, she was reminded that her husband was very strong. There was no possible way to break his hold. He only needed one hand to lift her, by gripping her backside, and his other hand mauled a breast. \n\nGary's mouth left her shoulder and his lips crashed into hers. The kiss was the most intense of Monique's life. \n\n'Fuck,' she thought, 'this is hot!' \n\nHer underwear rode up uncomfortably into her crack, but that only added to the desire which was quickly consuming her. By now, she was seated on his hands, which he placed on the counter. Capturing his face in her hands, she tried to make the moment last. \n\nThe kiss ended and they both panted heavily. Gary had a wild grin on his face that reflected a feeling of joy and a desire for more. \n\n\"Wow, now that was a kiss!\" Monique gushed.\n\n\"Good thing the kids are upstairs,\" murmured Gary. \n\n\"Ummm, actually it's just us. I dropped them at my parent's house. Tonight, I want you to myself for a change.\"\n\nGary's eyebrows rose at the unexpected news. This was a first! For the last six years, he had come in a distant 3rd place for Monique's attention, behind their two offspring. He had never once complained. After all, how could he begrudge his kids love from their mum? He was as crazy about them as Monique. But, until now, her affection seemed to be a finite resource and she had never had much left for him. He was pleasantly shocked by the change of circumstance.\n\n\"I made us a lovely dinner.\" Monique crinkled her pretty nose. \"You need to go shower and meet me in the dining room. I'll give you fifteen minutes.\"\n\nGary sniffed his armpit on his way up the stairs. Sure enough, he reeked of office sweat. Not the clean heady musk of hard physical labor, but the sour smell of stale stress. Fair enough! He was happy to make himself presentable for his woman.\n\nGary showered, shaved and, for the first time ever, trimmed his unruly pubic bush. Appraising himself in the bathroom mirror, he decided to put in a little extra effort to compliment his wife. Considering her recent grooming efforts, he felt it was the least he could do. He finished his bathroom preparation with a light splash of cologne. Wanting to keep it casual, he donned his favorite track pants and a simple black T-shirt to match her comfortable outfit. Fourteen minutes later, he made his way downstairs.\n\nChapter 15 \n\nAs Gary came down the stairs, Monique directed him to the dining room, which was off the foyer. The table was set for two, complete with candles. From where he was seated, the kitchen was not visible. \n\n\"Dinner smells great, Honey. What are we having?\" Gary called out, his voice laced with happiness and anticipation.\n\nMonique sounded sultry as she replied, \"You'll see in a moment.\"\n\nJust then, he heard the click of high heels on the wood floor in the hall. Turning, he was greeted with a mesmerizing sight. \n\nInstantly, he felt underdressed, or maybe overdressed, for the occasion. His wife proceeded to saunter into the dining room and stroll slowly around the table with a platter of Greek styled roasted lamb. She stopped just beyond his reach, turned, bent forward at the waist and placed the platter on the table in front of him. While still leaning over the table, Monique picked up a small piece of the delicious roasted meat and used her tongue to pluck it from her fingertips. She moaned while slowly chewing then sucked the juices off her fingers. Gary was transfixed.\n\nStraightening slowly, Monique turned and strode back the way she had come, while looking over her shoulder maintaining eye contact. She exaggerated every move for maximum effect.\n\nClich\u00e9 though it may have been, the show was fucking hot just the same. Gary sat stupidly, his mouth agape at the vision that was his date for the evening. Yet again, he found himself wondering who this woman was and what she had done with his wife. \n\nAn image briefly flashed in Gary's mind. It was a frightening picture of his dowdy old wife, trussed up in one of her horrid flannel onesies. Mentally, Gary hogtied, gagged and locked the old Monique in a closet. Hoping she would stay lost and forgotten, he chose to concentrate on her enchanting doppelganger, with whom he was now smitten. That uptight, emasculating nag had been usurped by this mysterious goddess. \n\nThe old Monique couldn't be more different than the woman who had just boldly paraded herself through their dining room in sheer black lingerie. Wearing a half bra, Monique's erect nipples proudly led the way. Her peekaboo panties cupped flawless buttocks and framed the exposed cleft of her backside. Thigh high hose hugged her toned legs, with the seam perfectly aligned up the back, appearing to lengthen\n\nher already long legs. Patent open toed booties completed with seductive ensemble. She looked like a walking advertisement for sex in the four inch heels that forced her hips to sway, provocatively. \n\nAs if the outfit wasn't enough, she actually managed to wear makeup that spoke directly to his cock. Dark grey eye-shadow gave Monique a smoky \"come fuck me\" look that was punctuated by her fire-engine red lips, finger and toenails. Giving the impression that she had already indulged in a little play, her dark shoulder length hair had been teased in a slutty fashion. In fact, she had set her hair such that there was nothing to lose if she was to be ravished. It was both slightly messy and enticing.\n\nGary had never thought of Monique as anything less than stunningly beautiful. Even in their sexually lean years, when she still had baby weight and dressed like a 60 year old librarian, any man could tell she was a natural beauty. Having never felt comfortable receiving overt attention, Monique had always been careful not to promote her natural assets. \n\nBut, the woman who just served dinner was pure sex on legs. No lingerie model had ever done an outfit like this more justice. He could not possibly picture an expensive, top end escort having made a more arousing entry. His painfully erect penis was testimony to this being the most fantastic sexual experience of his life. And, nothing more than a catwalk had taken place! \n\nPushing his chair back from the table, he stood and quickly adjusted his uncomfortable underwear. Just then, Monique returned with two plates of salad. He never noticed that the salad, like the platter of roasted meat, had also gone 'Greek'. Gary remained blissfully unaware that his new, naughty wife had a theme for the evening. \n\nMonique caught Gary in the most embarrassing and incriminating pose possible. Hunched forward, Gary's thumb was hooked in his waistband. Trying to find some comfort, the other hand fished to readjust his stiff cock and aching balls.\n\nMonique placed the plates down on the table, frowned and wagged a finger at her husband as if he was a naughty little boy. \"Oh no, Baby. One mustn't play alone with Mummy's favorite toy.\"\n\n\"Oh no, Babe, it's not like tha...\"\n\nMonique slid forward, well into his personal space, and cut off his explanation by placing her finger on his lips. \"Hush now. Let Mama take care of her Sugar Daddy.\" \n\nSlowly, Monique sank to her knees, drawing Gary's pants and underwear down to his ankles. His hard prick flicked upward when freed, and bounced lewdly in her face. Monique then gripped the root of his shaft in a ring of her thumb and forefinger. \n\nMonique studied her husband's beautiful cock. It was rock hard and throbbing veins pulsed from the hot blood beneath the now tight foreskin. His glans was obscenely shiny and purple. It looked... impatient. \n\nMonique's mouth watered as she looked up over his short crop of public hair and flat abdomen. His body was divinely masculine. Traveling up past his navel and pecks, her eyes made contact with his as she opened her luscious lips and fell forward onto his shaft.\n\nJust. Like. That. Why was it suddenly so easy, Gary wondered?\n\nGary felt nothing until his glans pressed on the back of her throat. She did not hesitate for one moment, but merely plunged her pretty nose into his pubic hair. Without even a peep, she closed her lips tightly on his root. Gripping a buttock in each hand, she crushed her nose against his pubis and inhaled deeply. Then, she began to rhythmically swallow his cock. At first, it was a weird and uncomfortable sensation, but she knew he would love the tight fit of her throat.\n\nTwenty full seconds passed before she came up, gasping for air. His cock glistened and dripped with saliva. Pursing her ruby red lips, Monique slurped up the excess drool from the underside of his cock, beginning at the base and finishing at his shiny purple knob. Watching his face, Monique again plunged his manhood to the back of her throat and began the process anew. \n\nAt the end of her fourth pass, it became too much for her overstimulated husband. As her pouting lips prepared to slide tightly back over the head and begin another downward plunge, he gripped her hair and unloaded with a bellow into her wanton, hungry mouth. His thick jism splashed forcefully against the roof of her mouth and tongue.\n\nDuring her successful deep throating performance, Monique had been dripping with desire. Her enthusiastic sucking of Gary's dick fueled a maddening arousal of her own. She had been unable to resist fingering her own sopping sex through the flimsy material of her panties. Slightly rough, the texture of the fabric helped stimulate her erect clit. Receiving his thick goo into her hungry mouth set off a climax of her own. She quaked and shuddered through a lovely cum, as she greedily swallowed down her husband's delicious jizz.\n\nGary dropped, panting and weak legged, onto his chair. Monique rose. Bringing her hand to her face, she scooped some stray semen from just below her bottom lip, and sucked their combined nectar from her slimy fingers. \n\n\"Yummy. It's the perfect entre, don't you think?\" She queried, coquettishly. \n\nMonique serenely sat next to her shattered husband and began calmly serving meat, as if she had not just given the most incredible cock-sucking known to man.\n\nGary broke. Sitting naked from the waist down, pants around his ankles, his now flaccid cock leaked leftover cum onto the dining chair between his splayed thighs. He started chuckling, in disbelief.\n\nSoon, they both chortled, madly. Watching his gorgeous wife giggle and smile, was also highly stimulating to Gary. She appeared to be the perfect, pretty little slut. Her ruby lipstick had smeared lewdly when she collected his ejaculate from her lip. As she laughed, her pert titties jiggled enticingly. Noticing her erect nipples, Gary was struck by the fact that there was still more to come. \n\nHer sex appeal was irresistible. Lunging forward, he planted a tender, heartfelt kiss on his beautiful wife's lips. \n\nHer tongue stole out and parted his lips in return. \n\nMonique tasted like cum.\n\nHis sweet, innocent spouse, the mother of his young children, had cum on her breath. He was conflicted. The idea of tasting cum (even if it second hand and his own) threatened to turn his stomach. But, the idea that his naive wife had magically become a cum loving... slut? That was definitely arousing and had him rock hard, almost immediately.\n\nGary decided 'slut' and 'whore' weren't the appropriate monikers. He knew Monique would never sleep around with just anyone and he certainly didn't want her to. No sharing would take place. But, he very much wished this behavior would continue. Great male lovers are often referred to as a 'studs'. What was the female equivalent? \n\nMonique was a sex goddess, Aphrodite incarnate.\n\n\"Honey, I have never cum so fast in all my life. Where the hell did you learn to give head like that?\"\n\nMonique opened her mouth to answer, but he cut her off, abruptly. \n\n\"On second thought, maybe I don't really need to know. Let's leave it a mystery.\" He joked. \"Nice work though. You blew my mind out the back of my head\".\n\nMonique grinned. \"Why thank you, Darling. No training was involved. I'm merely an inspired and enthusiastic amateur. Although, it's amazing what one can learn from the web these days. I'm glad you enjoyed it as much as I did.\" She winked, slyly.\n\n\"I love the new you, Baby. It's an awesome change of pace.\"\n\nGary watched his lingerie clad hostess rise and strut the length of the table, her arse swaying seductively. At the far end, she paused, turned and skimmed her fingertips over her protruding nipples. It was too distracting! Gary's appetite for food had been overwhelmed by his desire for Monique. It was precisely as she had intended.\n\nGary beckoned to her with wave and a wolfish grin, pointing to a spot on the floor, just in front of his chair.\n\nMonique slowly strode back with her cock-tease attitude, hands on hips. She was enjoying herself immensely. But, the look on her husband's face indicated he wanted her in a more intimate fashion. \n\nPushing his buttons was exciting for her. When would he lose control, and what would happen when he did? The unknown potential of his unrestrained lust was thrilling beyond belief.\n\nA moment of embarrassment ensued when she saw the damp patch, left by her pussy, on the fabric of the dining chair. How on earth would she ever explain that? In a moment of true liberation, Monique realized she didn't give a fuck.\n\nThe new dynamic also changed the way she viewed Gary. This interlude was reminiscent of having a new sexual partner. Mystery mixed with a touch of uncertainty, and perhaps, danger. There was a definite thrill involved in 'the chase'. Wanting to push both their limits, she couldn't wait to see where the night would end. \n\nObediently, Monique stopped where instructed, in front of her seated husband. Soaking wet, her moist labia slid smoothly together as she rhythmically swayed her hips. It was friction she desired at this moment. \n\nGary reached forward and took both hips in his hands. Looking intently at her, he forced her to stop the hypnotic movements. Monique reveled in the power of his grip. While not painful, he clearly had strength to spare. She loved being at his disposal and wanted more. The normally strong willed, independent woman would never have surrendered her body, or dignity, like this in the past. But now, having built his desire beyond anything she had previously attempted, Monique was desperate for an unpredictable sexual act. \n\nGary tugged on Monique's arm, bringing her a step closer. She stood between his splayed knees, in front of his proudly jutting erection.\n\nShifting forward, Gary planted a kiss on the soft skin of her flat belly and softly stroked her mound through the flimsy fabric of her sheer panties. \n\nMonique felt ready to burst, acutely conscious of her own arousal. Her sex literally buzzed with anticipation. Never again would she deny herself such pleasure. Being a 'good' girl was GROSSLY overrated. ",
        "His face was close enough that she felt his hot breath on her skin through the sheer panties. Knowing how wet she was, Monique fretted he might be able to smell her excitement. On cue, Gary inhaled deeply. Clearly, he could. And, judging by his moan, he liked it.\n\nGary stood and kicked his feet free from his pants. Pressing the full length of his body against hers, he kissed her hard. Their lips melded together and Gary forced his tongue into her mouth. With one firm thrust, he drove his painfully hard cock into the crevice between her swollen labia and smooth thighs. \n\nWhen the kiss ended, an immensely pleased Monique couldn't help but smirk. Wielding her newfound sexuality like a super power, Gary was defenseless.\n\nJustifiably, Gary felt manipulated, causing his own masculinity to explode. It was time to take control away from this little tease. If she wanted him this aroused, fine. But consequences would be forthcoming. \n\nGary turned from her and calmly swept aside the unused dinner dishes. Then, he grabbed his sexy bitch by the shoulder, deftly spun her and forced her forward, over the edge of the dining table.\n\nMonique cried out in surprise at his sudden and assertive move. Relinquishing control at this moment felt decadently submissive and she loved it. His hand, planted firmly between her shoulder blades, pressed her tits roughly against the table. Exposed, her erect nipples were forced back into her yielding flesh by the cold, polished wood. \n\nGary gently but firmly kicked her ankles apart. Looking down at her dripping sex, he realized she was in heat. \n\n'Yes', she thought. 'Take me! Take my horny cunt!' \n\nIn high heels, her feet gave little purchase. Splayed and helpless, she couldn't stay balanced. So, she chose to rest all her weight on the table. Gary's hard-on snugged into the cleft of her buttocks as he shifted his weight into her behind.\n\nPulling back, he continued to hold her down with one hand. Monique was amazed and excited at Gary's show of strength. He had easily man handled her into a highly vulnerable position. Perhaps, it would have been different had it been any man other than her loving husband. Although, horny as she was, anyone might do. \n\nUnbidden, the thought of being taken by someone other than Gary drove her arousal to new heights. Guilt at such nastiness quickly followed, but this strangely served to ramp up her need.\n\nThe euphoria of finally being unleashed was almost overwhelming for Gary. Grabbing his cock, he forced the head into the peekaboo of her underwear. He roughly stroked the head up and down Monique's cleft, from her erect clit, past her dripping labia and over her now slippery anus. 'Fuck, she has never been this wet,\" he thought. \n\nA few quick passes of his rubbery glans over Monique's pucker had her hoping he would take her arse, immediately. From a lube standpoint, she was not as prepared as she would have preferred. However, at that moment, she was so sexed up, it didn't seem to matter. In fact, she looked forward to the vigor and pain of being sodomized in this position. Even so, the abrupt assault caused her pussy and arse to clench, protectively.\n\nInstead, on his next upward swipe over her hard clit, Gary's knob found her open labia too enticing to resist. He violently thrust into her and buried the full length of his rigid shaft in her tight quim. Crushing her against the table with his weight, his hand gripped her bra strap and continued to hold her down. She was trapped and at his mercy. \n\nIn a mere fifteen seconds, they had gone from a passionate kiss to an unmistakable show of dominance. Though sopping wet, she had no time to adjust to such a forceful entry. Monique screamed from the combination of joy and pain. \n\nIt HURT... soooo goooood. In the dark recess of her brain, she instinctively acknowledged this was the stuff of which rape fantasies were made. Before today, that concept was abhorrent. \n\nMonique hissed, 'Yeeeeesssssss. Fuuuuuck!'\n\nGary willingly obliged and commenced with a pounding rhythm. Slapping his hips against her arse, he drove in and out with full length, hard strokes. Monique was slammed and jerked forward with each hammering blow. Grasping the edges of the table, she anchored herself. Pain from her tightly clenched vaginal muscles merged with pleasure from her hyper-aroused tissues. Each painful, yet pleasurable stroke caused her muscles to coil tighter in a quest for the ultimate release. Unable to relax, her body was trapped in an escalating cycle \n\nThrust. Pleasure/Pain. Clench. Thrust. Pleasure/Pain. Clench. Thrust. Pleasure/Pain. Clench.\n\nThis is exactly what she sought, the culmination of her newly freed libido. Gary's response to her offering far exceeded her expectations. She never guessed her previously respectful (to the point of timidity) husband capable of such aggression and brutality. \n\nGary felt like a thirst quenched man at an oasis. Years of pent up frustrations were finally being unleashed. During their last session, Monique had been very assertive and somewhat rough with him. Well, if that was what she wanted, that is what she would receive, which each powerful thrust. \n\nMonique silently repeated a mantra, 'My power and lust brought us here.' This felt so right.\n\nThrust. Pleasure/Pain. Clench. Thrust. Pleasure/Pain. Clench. Thrust. Pleasure/Pain. Clench.\n\nShe gasped, panted and moaned. Unable to breathe, Monique was caught between her tension and Gary's force. Her neural feedback loop spiraled towards the pinnacle of pleasure. \n\nThrust. Pleasure/Pain. Clench. Thrust. Pleasure/Pain. Clench. Thrust. Pleasure/Pain. Clench.\n\n\"Aaaiiieeeeeeeee, Baby! FUUUUuuuck!\" \n\nShe CAME harder than she ever had in the past. Her stomach seemed to flip as her abdominal exertions reversed. Now, her body pushed outward at the rampant invader. Ironically, her holes loosened in the process. The pleasure/pain dichotomy flipped into overwhelming waves of ecstasy as her vagina gushed onto his thighs. \n\nGary did not relent. Despite her cries and moans, he redoubled his efforts, determined to overwhelm her with sensation. Continuing to slam her repeatedly, he over-stimulated her spasming pussy. He had absolutely no idea how he managed to maintain his stamina. Instinctively, his body seemed to accept the necessity of proving his sexual prowess to Monique, who appeared to crave a good fuck. \n\nMonique's orgasm ebbed and broke several times before he began to slow, minutes later. They were both drenched in sweat from their exertions.\n\nIt was a heated session for both husband and wife. But, his cock remained insanely hard even as the intensity waned. Hyper-sensitive, the corona of Gary's glans felt her tightly clenched vagina and his knob flared with pleasure during each stroke. His tip, in similar fashion, felt the presence of her cervix and the swelling of her g-spot. At the thought of her sexual anatomy, his frenzy started anew.\n\nThe impact of his hips against her buttocks caused waves in her flesh that were the ultimate aphrodisiac. Gary gripped Monique by one hip and a fist full of hair. Arching her back, he redoubled his rapid fire thrusting, amazed at his stamina. Punishing her for years of neglect mingled with a reward for the discovery of her sexuality. It was a heady combination.\n\n\"Yeeeeesssss,\" she hissed. \"Baby, I love it! Fuuuuuuuuck meeeee!\" Monique managed to push back and meet his thrusts, having released some of her passion and feeling more in control of her body.\n\nHe obliged and within a minute was rewarded with another moaning climax from his bitch in heat. Gary found her addictive. Hot beyond porn scene fantasies, Monique was beautiful, aroused and real. And, she was all his. Continuing to lay claim to her body, he drove her through multiple additional orgasms. \n\nFinally, he bellowed, \"Ohhh yeaaaah, Baby\", unloading into her searing hot and gripping depths. \n\nNot surprisingly, Gary's erection didn't wane. Never before, had he been so incredibly aroused. He would never get enough of Monique in her current state. Briefly, he felt like an insatiable teenager, but wagered this was better. As adults, they didn't have to navigate the intricacies of school, curfews or anxious parents. Yes, this might possibly be the best time of his life. \n\nPulling her up into his chest, he slowed the merciless onslaught. Even in his present state, he could be gentle. With the change in position, his strokes were shallower, allowing Monique to recover from her multiple orgasms. With a breast in each hand, he rolled her hard nipples between his thumbs and forefingers. While slightly painful, the pressure was wildly stimulating, nonetheless.\n\nThe tip of his hard-on stirred their combined juices in the oozing mouth of her cunt. Hard as he was, Gary needed a break. Even so, one last wild urge took hold of him as he noted the room reeked of sex. Monique appeared to now embrace wild, messy sex. How far would she go, he wondered? \n\nOnce again, Gary abruptly spun his wife around to face him. This time, he forced her to her knees in front of his rigid, dripping cock. It was slick with their copious juices, while his pubic hair was matted and drenched. \n\nMonique was confronted with his turgid tool. Obediently and eagerly, she widely opened her mouth. Gary smiled down benevolently at his cock hungry wife before proceeding to steadily feed his greasy shaft into her pretty face. Her satisfied moan indicated it was just what she needed. \n\nRed and messy with her own cunt juice, the sight of Gary's proud cock had Monique drooling. She, rather, THEY, tasted amazing. In one slow steady thrust, he inserted his entire cock down her throat. When her nose hit his damp pubic hair, the overwhelming odor of her own sex was unmistakable. \n\nThe head of Gary's six-inch cock pressed on the back of her throat. Having lost control of this interlude, she struggled to maintain her composure. Monique choked and coughed a few times before managing to relax. But, relax she did. As it turned out, she had a natural talent for fellatio. Whoever would have thought such a skill would reside in the formally prim mother?\n\nGary, his fists tightly gripping her hair, held Monique tightly to his groin. The idea of having his entire jizz coated cock stuffed down his pretty wife's throat was erotic as hell. Monique was a total goddess, which explained why he was still hard, despite having ejaculated twice in the last thirty minutes. \n\nHe waited until she became comfortable then released his grip. Monique breathed deeply through her nose, reveling in the musky scent of their sex potion. She took her time coming off the stiff prick. \n\n'Wow!' She was impressed with Gary. He had blown twice and was still ready for more. That was a good thing because she was, too. Monique hadn't reckoned on 'Captain Assertive' showing up and ravishing her vaj so thoroughly. Initially, the plan was to blow Gaz and take the edge off so that he would have some stamina. Then, she wanted to go upstairs and surprise him with her new back door skills. Figuring he would get a bit overexcited, she really needed the experience to last. \n\nWell, those plans had certainly changed and Monique loved the new direction. Withdrawing, she sucked hard, savoring the flavor of their combined slime. His glans audibly popped out of her pursed lips, inducing a moan from her beloved husband.\n\nIf only Erin could see her now.\n\nChapter 16\n\n\"Ooooh, Baby,\" Monique cooed while rising to her feet. \"It's still nice and stiff. I think we should take this upstairs and see if I can't finish you off, once and for all.\" \n\nWith that, she turned and led him by the hand towards the bedroom. Her freshly fucked pussy began drooling with anticipation, yet again. She was simply insatiable. \n\nMonique slowly climbed the stairs in her stilettos. The exaggerated sway of her sexy butt caused her swollen labia to slide against each other in that deliciously maddening way she was coming to love. Since they made her feel like 'fucking', she resolved to wear high heels more often. \n\nArriving in the bedroom, Monique advised Gary to get comfortable on the bed for a few minutes, whilst she used the bathroom. From the doorway, she evaluated the sexed up guy who strolled in and leapt onto the bed with great verve. \n\nYou'd think watching a hot, aroused, naked man trot across the bedroom would be a complete turn-on. But... no. A hard cock looked sexy, especially on a guy as good looking as Gary. But, a bouncing dong looked hilarious. Monique turned away before she started to giggle and emasculate him with her irrepressible smirk. God forbid he lose that lovely hard-on! She needed it. Maybe this was why most couples made love in the dark?\n\nIn the ensuite, Monique had a chance to appraise herself. Whoa! She was a bit of a mess. The modest amount of make-up she quickly applied whilst Gaz showered was smeared with certain body fluids. Her hair had morphed into a complete birds-nest. And, her bra currently hung down around her waist, although she didn't remember pulling her arms out of the straps.\n\nHer panties were now stretched out of shape and damp in some places while crusty in others. Luckily, they were cheap and tawdry. After all, her goal had been to look like a sex kitten. And, she had been spectacularly successful! The added benefit of cheap lingerie was that it didn't matter if it was ruined in the course of frantic fucking. Those pieces could be inexpensively replaced. \n\nIn short, Monique looked like she had been thoroughly fucked. It was quite fulfilling in a primal way and the sight kept her wanton vagina producing prodigious amounts of juice.\n\nQuickly, she wiped off and reapplied the smeared eye-shadow and lipstick. Though she removed her bra and panties, the stockings, garter belt and heels remained in place. Very purposely, she didn't bother to clean up the mess between her legs. The idea that her pussy had been so utterly used only fuelled her desire for more. She did swipe her index finger deep into her oozing box and then sucked it clean, enjoying their combined flavor. \n\nShe needed to urinate. Monique sat on the toilet and parted her knees. Looking down over her clean-shaven mound, she parted her slippery labia with the fingers of one hand and released her bladder. In her hyper aroused state, the sight had an unexpectedly erotic appeal that set her clit buzzing. Indulging her curiosity, Monique slowed her flow and watched closely as the golden stream drained from the crest of her slit. \n\nShe had, of course, heard that some people enjoyed 'golden showers'. As recently as few days ago, she thought those acts were a sign of serious depravity, committed only by sick perverts. That opinion hadn't really changed. However, she now found it intoxicating to indulge her own inner nasty girl. \n\nA new thrill coursed through her body. Could SHE be a sick pervert? After all, she had just thoroughly enjoyed sucking a slimy used cock. And, she was about to act on an overwhelming desire to have her rectum reamed by that same delicious piece of meat. Her clit had become painfully hard while she pondered her current situation, leading her to believe it just might be true. \n\nMonique reached down with her other hand and allowed the slowing stream to coat her fingers. Pressing one fingertip hard against her clit, she rolled it around, firmly. Head tilted back and eyes closed, she whispered, 'Oh God, that's good'.\n\n\"You Ok babe?\" Gary's query from the next room broke her reverie just as her bladder finished emptying. With a start, she hopped off the toilet seat, completely forgetting to dry her puss. \n\n\"Yes Honey, won't be long. Keep the fires stoked for me,\" she called.\n\nMonique moved to wash her hands at the sink, but stopped to observe the stranger in the mirror. That woman appeared to be a wanton slut. She was simultaneously proud and uncomfortable while studying such an overt display of sexuality. Looking like a Hollywood clich\u00e9 of a post session call girl, Monique noticed her clit had started to tingle and her nipples were rock hard. Nonchalantly, she slid her clean hand down to her quim and proceeded to insert 2 fingers while crushing her thumb against her erect clit. \n\nSome weird impulse she would later struggle to justify drove her to raise the urine soiled hand to her nose. Inhaling deeply, she caught the pungent scent of her own waste. Then, she deliberately and widely opened her pretty, red-coated lips. Forcing all four fingers deep into her watering mouth, she triggered her own gag reflex. \n\nMonique finished by sucking her hand clean as she withdrew her fingers. Oh yes, she avidly watched the pretty little sicko in the mirror, while driving herself mad with desire. \n\nThe acrid flavor and odor assaulted her psyche as much as it did her sense of taste and smell. 'What the hell have I just done?' Shame and excitement merged within and washed through her soul, ratcheting up her arousal several notches. \n\nWashing her hands quickly, she set about her next task, which was important. Feet apart and squatting slightly, she applied the pre-prepared douche bulb of lube directly into her pucker. Pushing out with her rectum and in with her hand, the slim probe seated quite easily. She squeezed its contents in, deeply. Having learned from the trial run, she used quite a bit less than before.\n\nNext, she inserted the butt plug, hoping to loosen up a little for him. Monique didn't want pain to diminish Gary's enjoyment of the long-awaited treat. While not expecting an issue, she was concerned that nerves might get the better of her, even after experimenting so successfully. In truth, she was looking forward to it at least as much as he ever had. \n\nUnless Gary had done it with another girl before marrying, (and she did NOT want to think about that) Monique accepted that she was the more experienced anal practitioner. It's not like Gary had time to seriously plan a course of action when he didn't even know what was coming. \n\nMonique returned to the bedroom and found Gary relaxing against the head board. Unfortunately, his cock was now flaccid.\n\n'Oh well,' she thought. 'It'll be fun fixing that situation with my newfound skills.'\n\nStanding a few feet from the edge of the bed, she beckoned him forward. Eagerly, Gary scooted his butt to the end of the bed, planting his feet on the floor. Once more, his cock began to harden. He reached for his sexy wife and drew her to him, going straight for an erect nipple with his suckling lips and nibbling teeth.\n\nMonique giggled girlishly at his playful enthusiasm. \"Ooooh yeah Baby, suck my titties!\"\n\nFor a couple of minutes, he did just that. Hungrily moving back and forth from one to the other, he vigorously mauled her nips with his lips. Pulling back, he stretched her breasts with his teeth on her teats and sucked whole mouthfuls of her soft, yielding flesh into his mouth. \n\nShe giggled and gasped as he moaned into her jiggling bust. Playfully slapping his face, she shoved him away to break his focus even though Gary's zeal made her feel like a sex goddess. He had literally worshipped her now red and wet bust. \n\nMonique dropped to her knees, between his thighs, \"Let's make sure you are hard enough for some serious playtime.\" \n\nGrasping him by the root of his shaft, she bent down and tenderly kissed the tip. His manhood was already as stiff as it was going to get and didn't need any work. But, Monique was really into sucking cock now and didn't intend to skip this step. \n\nAs much as she loved to explore new sex acts, sucking cock was her favorite so far. So, just for kicks, she set about kissing and licking Gary's shaft. After tickling the corona with the tip of her tongue, she eventually sucked hard on the knob and rasped her teeth over the head. The submissive pose was as much a thrill for her as it was for him.",
        "Gary recognized Monique's obvious enthusiasm for fellatio. His dreams had, indeed, come true. Since she wasn't done fucking, it was lucky he had already cum twice or her fabulous technique would have ended him for the night. Falling back, he closed his eyes and savored the wonderful sensations. \n\nHer mouth left his member, but he felt her grip the shaft and tug it up towards his belly. Shockingly, his entire hairy ball sack was then engulfed by her warm, wet mouth. In itself, it wasn't a particularly intense sensation. But, to have a gorgeous woman suck his post intercourse, funky scrotum was a total mind-blowing trip.\n\nAfter gently rolling his nuts around with her tongue, Monique released his sack and stretched it up towards his navel. She then lifted one of his knees up and placed it to the side. Following her lead, Gary lifted the other. While in the vulnerable position, he decided to let her take charge. After all, she was doing a hell of a job. The wide pad of her tongue languidly licked up each side of his scrotum, where his groin and inner thighs joined. The tip of her tongue danced daringly back and forth over his sweaty perineum. Gary enjoyed the tongue bath physically and mentally. 'Holy fuck, this is wild'. \n\nWhile cleaning her man, Monique moaned in happiness at the taste, smell and nature of the nasty bath. After placing her tongue tantalizingly close to his anus, she withdrew. An overwhelming desire to force the tip of her questing tongue into his naughty hole had surfaced, but she worried he would freak out over the highly kinky act. For now, that was a bridge too far. Realizing she had, again, become distracted from the main game, she moved back several paces.\n\n\"You fucked me so hard downstairs, Honey. Do you think you have enough energy for a big finale?\" Knowing the answer in advance, she nevertheless tried to look concerned.\n\nPropped on his elbows, Gary grinned and glanced at his stiff prick. \"I think I'm good to go another round. Of course, that's not surprising given the stunning inspiration before me.\"\n\n\"Babe, I'll be honest with you. You may have noticed a change in my sexual behavior. I have taken your feedback to heart and decided to embrace a more adventurous and enthusiastic approach to sex\". \n\nWith difficulty, Gary maintained a poker face, \"Hmmmm, maybe I noticed a slight change in the weather, yes.\"\n\nMonique continued, \"Good, because I'm REALLY enjoying myself! And, right now, I need to be fucked.\"\n\nGary's eyebrows rose in surprise at the filthy mouth on his sexy minx. \n\nShe continued. \"But before we get down to business, I need a favor.\" With that, she turned around, bent at the waist and pushed her lovely heart shaped buns back at her stunned husband. \"Could you help me out with something?\"\n\nThere, nestled between her glorious buttocks was a piece of black plastic. It was aligned vertically, snug in her anal cleft. He could clearly see her wet swollen labia beneath the dark intruder. Reaching back, she lewdly pulled her cheeks apart and, like a flower, her labia opened to reveal her empty vagina. There was no doubt. A butt plug was deep in her arsehole. \n\n\"Holy fuck, Baby! That is the hottest thing I have ever seen!\" Gary was shell-shocked.\n\nMonique grinned, boldly. \n\n\"A lady shouldn't have to ask twice... I think I have something obstructing my arse. Pretty please, could you give it a tug and then fuck my naughty hole?\"\n\nBlown away, Gary reached forward with one hand and gripped the greasy plastic. Attempting to draw it out gently, he found it difficult to grip. So, he burrowed a couple of fingers under the base, one above and one below the central shank, and pulled.\n\nMonique groaned in ecstasy. She had long since become accustomed to the plug's seated diameter. But, the flared hip of the plug stretched her in a way she was learning to love. Her sphincters dilated readily, which was weird. Though tight, she felt no discomfort. Finally, the plug popped free. Monique stood and, looking over her shoulder, winked at her husband.\n\n\"Okay Big Guy. If we are going to do this, I get to drive, the first time. Lay back.\"\n\nGary did as he was told. Incredulous at the prospect of his first anal experience, he was concerned about maintaining the proper level of control. The very last thing he wanted to do was hurt Monique, so he happily followed her lead. Upon further reflection, that she was willing to fuck herself in the arse with his cock was even hotter. \n\nPulling his knees together, she straddled him facing his feet... reverse cowgirl. \"Hold it straight up and don't move Baby,\" she instructed. \n\nTo properly lube him up, she first lowered her dripping cunt onto his quivering hardness. Monique moaned in delight. 'Damn this feels good.' While the heat in her vagina had been yearning for more attention, her kitty was not going to be the star of THIS show. Seated fully on his lap, her welcoming pussy engulfed his pole. Monique rotated her hips a few times to get him nice and slippery. She loved the feeling of his cock head stirring all the juices inside her. There seemed to be an especially sensitive area in her channel that she suspected was her g-spot. When Gary's cock rubbed against it, she purred.\n\nLeaning forward, she balanced on his knees, using her hands. This deliberate move exposed her cute little pucker to Gary. She wanted him to have an unobstructed view as she sodomized herself on his cock. \n\n'Ooooh yeah,' she thought. 'Fuck! This makes me sooo horny! I need his dick in my ass, NOW!'\n\nShe slid forward, dislodging herself then reached back between her legs for his greasy tool. Gripping it firmly, she pressed it against her sweet (kinda) virgin anus. After pausing a moment, she looked at her reflection in the mirror directly in front of her, attached to the bathroom door. Turning, she checked herself in the free-standing dress mirror that was off to the side. Monique had moved it into position, against the wall, in anticipation of this moment. Thanks to on-line porn, she discovered she liked watching sex!\n\nThis was like the ultimate in Virtual Reality Entertainment. Even better than watching the action, she would actually feel every delicious sensation. Her horny clit buzzed even more at the idea of such a deviant experience. The girl in the mirror was a stranger who might do almost anything. But, her own body would transmit the experience to Monique's brain. She felt free, at last... although slightly schizophrenic.\n\nFor his part, Gaz was transfixed by the image of his formerly prim wife bending forward, exposing herself in the most lewd manner possible and applying his cock head to her slimy anus. She pulsed the tip in and out with a hypnotic rhythm. \n\nGary briefly looked up and caught Monique turning to look at something. She was watching herself in the mirror! The mirror wasn't normally there, against that particular wall. She must have moved it on purpose! Staring intently at their reflection, she continued to rub her anus on and off the head of his dick, while humming quietly. Obviously, she was getting off on watching the show. \n\nThe sensation of a firm band sliding on and off the knob of his penis eventually drew his attention. Looking at her arse crack, Gary realized he had almost missed it! His knob had actually breached her sphincter. They were very well lubed, but he had expected a virgin arsehole to be super tight. Monique was placing his glans inside her sphincter with apparent ease. Tiring, she sat back and took all of him deep into her rectum, in one easy plunge. As his cock was enveloped, he was stuck by the accompanying silence. There was no moan, nor even a whimper. WTF! \n\nSurprisingly, Gary was left disappointed, suspicious and resentful. Surely, she hadn't done this before. All his previous attempts to play with her arse had ended in a firm reprimand and a subsequent episode of pouting. Had she been unfaithful? \n\nOf course not! He suddenly remembered the butt plug and the shine of lube in her crack. Obviously, she had taken a prudent course and prepared herself. He also recalled she had recently indulged in a private session of self-discovery. He supposed he couldn't blame her. Sodomy did have a bad reputation. \n\nSo what if she had practiced? It was her body. Was he really upset not to have 'taken her anal cherry'? Well, of course not! He loved Monique and would have hated causing her pain. Now, he felt stupid and ashamed that the thought even entered his head. Ultimately, he loved being graced with this porn star fantasy from his beautiful wife. Those women took it in the arse with ease and enjoyment. They were all the more wildly sexy for that talent. If Monique was teaching herself such skills in private, more power to her.\n\nNow, as she looked over her shoulder, Gary eyes widened at the sensation of having his cock buried in Monique's tight arse. A squeeze from her tight ring, on the base of his shaft, caused his eyes to momentarily roll back in his head. \n\nHaving rested her legs for a moment, Monique then resumed her up and down movements. Gathering speed, she was soon fucking him smoothly and professionally. \n\n\"How's the view back there babe? Is it everything you'd hoped for?\" She asked, whilst once again watching herself in the mirrors.\n\n\"Ohh, it's so fucking hot you sexy little minx. Your arse is so tight.\" Then, considering her auto-voyeuristic tendency he added, \"You really need to see this.\"\n\n\"Ooooooo yeah, that would be sooo wild,\" she admitted. \"My phone is on the bedside. Grab it and film my butt riding your hard cock, Honey, please!\"\n\nWTF! Again she surprised him by escalating the situation. \n\nWith his long arms he lunged for the smart phone and eagerly did as instructed. All the while, his horny wife continued to slide her now comfortable anus up and down his insanely hard prick. \n\n\"Ok babe,\" he said, when the camera was recording. Moaning in pleasure at the exhibitionist stunt, Monique arched her back and preened. Then, she reached back, gripped her cheeks and widely spread the cleft of her arse. Monique increased her speed, as an epic orgasm built in her loins. Her clit was so hard she could feel it throbbing. \n\nMonique was dazed with passion. Using Gary's dick, she sodomized herself with abandon while he filmed in high definition. \n\nIn truth, Monique was very self-conscious about her clit. Unlike the rest of her, it wasn't petite and ladylike, but rather, it was quite large. Now, the throbbing inch long staff pinched her labia as they lay over her dripping cunt. In preparation for a release, she felt her muscles coil. \n\nWith all her heart, she wished she could watch from Gary's vantage point. But, he continued to film the spectacle with her phone. Each time she rose from his cock, her anus stayed open. It was easily the most erotic sight he had ever seen. True, she had loosened up to a surprising degree and easily coped with his cock. No longer able to feel the clench of her ring on his shaft, he became even more excited. Her ass was a warm, soft glove moving over his erection. It was further evidence of Monique's wild side that had been hibernating till now.\n\nComing out of his shocked stupor, Gary began to thrust upward into her anus and matched her rhythm. Their flesh slapped together noisily. An unwelcome distraction, the phone was tossed aside. Running his hands over her spectacular buttocks, Gary massaged the love of his life through her inaugural anal sex experience. \n\nGary had never been more in love with Monique than at that moment. It wasn't because of the sensational arse fucking. Nor was it due to her act of submission, pursuing that which she had previously despised. Rather, it was because she had faced her fears and fully embraced something far outside her wheel house. He was enormously grateful to experience this with her. The whole situation drove him towards the brink of another earth shattering climax. \n\nAt that point, his gorgeous wife sat up straight and bottomed herself out on his iron hardness. Watching in the mirror, Gary was mesmerized as Monique gripped a tit in one hand, mauled her pussy with the other and swiveled her hips on his love stick.\n\nFor Monique, a tidal wave of orgasmic potential loomed and she dived towards the blessed drowning. Although her sphincters had loosened up, they were sensitive beyond measure. She felt each ridge on his member as it drilled her naughty hole and loved the feeling on her rim. Bearing down and out, her rectum sensed a dull pressure as the head of the cock surged deeper within. Occasionally it reached a depth that caused a small, exciting stab of discomfort. \n\nWhile initially focusing on the sensations in her arsehole, she realized her entire body was involved in the frenzied intercourse. Rock hard, Monique's nipples and clit continued to pulse. Her inner thighs and the tops of his were wet with the runoff from her wanton cunt. The room reeked of her pussy and a subtle pungent contribution from her arse. Reflected in the mirrors, the highly personal sex show was a wonder to behold. \n\nThe sounds of sex filled their ears. She and Gary grunted through their rutting, which was punctuated by the slapping of flesh on flesh contact. A depraved hydraulic squelching rounded out the trio of sounds. Occasionally, a fart escaped from her now open and sloppy arsehole. The cacophony was music to her ears and she loved what it represented.\n\nSuddenly, she sat back and violently grabbed a handful of tit and sloppy box, crushing her nipple and clit between thumb and forefingers. \n\n\"Aaaaaarhhheeee!\" Moninque wailed at the ceiling, as the orgasm crashed over her. Their smooth rhythm broke as she began to spasmodically shudder and twitch. Straightening, her legs trembled, causing her to fall backwards onto Gary. Her anal sphincters tightened and pulsed in time with her abdominal convulsions. \n\nIt was fucking intense. Her pussy flooded as her bowel tried to expel the wonderful invader. But, her body weight wouldn't allow it. With eyes rolling back in her head, fireworks went off in her mind. Monique surrendered to the orgasmic bliss.\n\nGary held his shuddering wife tight to him. She was in the throes of the most intense orgasm he had ever witnessed. 'Crazy fucking hot!' As her arsehole retightened, his cock was crushed by rapid fire twitches. 'Man, this was wild!' He couldn't help but be jealous of how hard and long a woman could orgasm. \n\nAn evil idea occurred to him. 'Just how hard could she come?' She hardly touched her pussy, so this was most likely the rare and fabled anal orgasm. Again, his pretty wife's latent sexual talents amazed and excited him. She had completely lost control and given in to her lust. He would happily be the conduit for her pleasure seeking adventures. But, just how long could he stretch this out for his beloved?\n\nHe reached up for a big pillow and pulled it down to waist level. In a haze of ecstasy, Monique felt herself rolled over onto her stomach. The pillow lay beneath her hips, propping up her arse. Gary was still deep in her butt hole and both her hands were trapped beneath her body and between her legs. So naturally, she gripped herself by the vagina and mauled the swollen flesh.\n\nGary balanced his weight on his hands, which rested on Monique's buttocks. He widely spread her cheeks until the crack of her arse felt like it might tear asunder. To gain purchase, his fingers dug into her pliant buttocks. Then, he began to really fuck her. Driving into her from above, he vigorously took her arse. Every so often, he would vary the cycle by throwing in a swirl of his pelvis. \n\nMonique could not stop cumming. The pleasure boiled over constantly, as he took her like an animal from behind. She was his helpless fuck doll and did not want to be anywhere else.\n\nThe fingers of one hand clutched her open vagina, while the other relentlessly rubbed and pinched her huge clit. To Monique, the friction from Gary's hard cock on her arsehole was the height of decadent delight. His powerful downward thrusts stretched and wrenched her anus mercilessly. Remarkably, even her g-spot received stimulation through the walls of her rectum. Her rectum! Gary was fucking the shit out of her rectum! And, she had initiated the whole scenario! \n\n\"Aaaaaahhhhhhhh! Don't stop! Please don't stop! Fuck my arse! Fuuuuuckkkk meeeeeeee baybeeeeeee!\" Desperate, she cried for more. \n\nUnable to catch her breath, bright colors gave way to dark splotches in her vision. The world scaled down to a single place of raw sensation, centered between her legs. The movement of the maddening pole in her burning rectum suddenly drove to full depth and held still. Her bum felt full and bloated. Raw. \n\nAn absurd and obscene thought popped into her addled mind, 'I need to take a shit!' \n\nThen, 'how crude!' \n\nLava surged and spread deep within her bowel, accompanied by another tsunami of bliss. Time seemed to stop, as did her heart. She was only distantly aware of a woman's muffled scream in the background. Monique hoped that girl would be OK, but she was too high on arse fucking to care. What a filthy girl she had become! The room faded away. \n\nGary drilled into the helpless honey below him. Monique was minutes deep into a truly mind-blowing climax and he could not have dreamed up a more spectacularly gratifying experience. It really didn't get any better than this. He was living out his deepest fantasy. In the middle of a swirling, rotating pile drive into his wife's now loose and defeated butt hole, his own climax surfaced. He threw his head back, drove in hard and lost his mind. Grunting like a beast over his bitch, a cum-dump into her arse ensued. \n\nThe body below him shook and he vaguely heard a woman scream. Willing his cock to transform, extend and wriggle deeper into Monique, he sought to bathe her very soul with his seed. Unloading stream after stream of hot semen deep into her body, his very breath seemed to flow out the end of his cock. Each spurt seared through his urethra like ignited napalm. Balls aching, his muscles pumped seed with an intensity he had never before experienced. \n\nHe collapsed forward onto his beloved wife, struggling to recover. Finally, he could breathe again. Gary felt so utterly sated he could not imagine ever needing sex again. Cock softening, his sexual tension drained. Knowing it would get harder to move if he waited any longer, he willed himself to motivate. Rolling sideways, off the pliant body beneath him, he was careful not to crush her with his body weight. As he did, his super sensitive glans was acutely aware of sliding out of and over her smooth rump.\n\nGary lay on his back, drawing deep breaths. He resisted the trap of utter relaxation building within his mind, threatening him with a post sex coma. Monique would surely want some company and attention after such a performance. He couldn't begrudge her that. Never had a woman been more deserving of a cuddle than Monique. Fighting off overwhelming drowsiness he turned to his wife. \n\nShe hadn't moved, at all. In fact, he couldn't remember the last time he had seen her even twitch. Panic and adrenalin surged and he was instantly on his knees, leaning over her. She lay totally motionless, face down in the disheveled sheets. Her head and face were covered by hair which had become an utter mess. She looked like a corpse.\n\n\"Oh God no, Honey!\" Gently, he lifted and turned her head. Completely unresponsive, her neck was totally limp. \n\n\"Fuck! Monique! Honey, are you OK\"\n\nHe desperately looked for signs of life. Taking a wrist in hand, he checked for a pulse and looked for signs of breathing. It seemed to take an eternity, but her chest rose and fell almost imperceptibly. \n\n\"Oh thank Christ!\" Gary offered his prayer to the ceiling. \n\nWTF! She had passed out! Who does that? Is that even a thing? \n\nApparently, it is.",
        "He patted and rubbed her hand, trying to get a response. Shifting his weight he leaned on something hard. It was Monique's phone, which had been tossed aside and forgotten in the heat of the moment. Picking it up, Gary noticed it was still recording. The whole episode had taken just 17 minutes! \n\nShould he? \n\nNo, he shouldn't! \n\nBut he was going to...\n\nHolding the phone out at arms-length, he started filming his efforts to wake the horny tramp. Panning the camera up and down her body, he took time to focus on her magnificent butt, still perched over the pillow. Wickedly, he spread her cleft to get a close up of her lady bits. \n\nHer arsehole was a mess. Ordinarily, her crinkle looked small, neat, pale and... well... feminine. Now, it looked well and truly used. Lube and semen leaked from the reddened recess. While not gaping, it certainly looked loose. \n\nNow, how to wake her? Another deviant idea occurred to him\n\nShould he? \n\nNo, he shouldn't. \n\nBut he was going to...\n\nThe last thing Monique knew, she had been on the receiving end of a hardcore her arse-fucking. Obviously, she loved the experience. Well, that was one way to get her attention.\n\nHer lecherous husband gently pushed 2 fingers into the dirty nympho's used backdoor. \n\nHe had been correct. It felt even looser than it looked. This caused conflict, in Gary's mind. Although, undeniably sexy as hell, he was somewhat saddened.\n\nIt felt like her sweet innocence was gone forever... as if he had defiled her, somehow. Well, what the fuck did he expect? This whole thing would never have come to pass if he hadn't wanted it. What the fuck had he been thinking? He now realized why she had been reluctant for so many years. Knowing she would be terribly hurt by such thoughts, he resolved never to express them to her. \n\nUpon further consideration, he felt like an idiot. He knew she had not been a virgin when they met at the age of twenty three. It was ridiculous to expect such purity from a beautiful woman in this day and age. He had never asked and never cared. It didn't affect his love for her in any way. Why was this any different? In reality, he was married to a gorgeous, sexually adventurous woman who had just given him the most mind-blowing sexual romp imaginable. Their loving connection made it possible, as much as the beautiful, sexy arse that had sheathed him only moments ago. \n\nWhile pondering this turn of events, Gary continued to stare at the lewd mess before him. He gently stirred the sloppy trickle of cum leaking out of her opened bum.\n\nMonique began to move her butt in small circles.\n\n\"Mmmmm. That's nice lover. You had enough back there baby?\" She asked, dreamily. \n\nQuickly, he hid the phone behind his back and shut it off, unsure of whether she would approve.\n\n\"Oh yes, Beautiful. Definitely! I hope you don't mind, but I made a bit of a mess,\" he chuckled.\n\nReaching back, she took his wrist and gently withdrew the three fingers he had worked into her willing hole. Rolling over, she sat up and shook her locks out of her pretty face. \n\nMonique was so happy, she felt ready to burst. The night had gone so spectacularly well, she was officially committed to seeking wild and fulfilling sex, for life. Never again would she hold back from Gary, with whom she was madly in love.\n\nMonique studied her husband's slimy fingers. His stirring had worked the cum into a mix of clear ooze and opaque foam.\n\nIt was disgusting, yet looked irresistible. \n\nAgain, that crazy inner voice spoke, suggesting she take the fingers into her mouth and suck them clean. \n\nSo, Monique did.\n\nGary was shocked! His only reaction was to raise his eyebrows so high he worried about straining neck muscles.\n\nMonique giggled at his stunned response and threw her arms around him. Then... she went for a kiss... on his lips. He lunged back but couldn't escape. She was too quick for him.\n\nAGAIN?! What was with her putting that filth in HIS mouth?\n\n'Fucking yuuuuck!' he thought, as he cringed in the opposite direction. What the fuck was she thinking? Had she lost her mind? It was bad enough to suck the arse cum off his fingers. But, to kiss him like that! Was she trying to snowball him? Fucking no way! He kept his lips tight closed to her probing tongue. \n\nAnd WTF with passing out like that and then waking up minutes later, ready to play again?! It was like she was a crazed sex robot who had accidentally switched off in the middle of a fuck then picked up where it left off when turned back on. \n\nBizarre!\n\nInsane!\n\nCrazy HOT!\n\nMonique rolled on top of him. With her breasts crushed to his chest, she began kissing him like a teenager.\n\n'Ahhh, fuck it,' he thought. He loved the crazed babe with all his heart. Giving in, he kissed her back with passion \n\nLips closed. \n\nBut, with passion.\n\nTurned out that was entirely possible."
    ],
    "authorname": "Powda69",
    "tags": [
        "lingerie",
        "new trick",
        "oral",
        "wife",
        "anal",
        "anal sex",
        "husband"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-little-animal-ch-05"
}