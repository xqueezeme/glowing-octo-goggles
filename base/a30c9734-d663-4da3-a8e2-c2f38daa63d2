{
    "title": "The Missing Dragon Ch. 04",
    "pages": [
        "Author's Note: Thanks be to Krissta for editing duty. Thanks to everyone else for your enduring patience. Hope you enjoy!\n\n*****\n\nUlf Bloodwrath was studying a wooden penis, and he wasn't quite sure why.\n\nIt had begun when he'd reported to the training fields earlier that morning only to find Ulag, the proving master, bearing down on him like an oncoming hurricane. The old orc had then spent a good ten minutes bellowing loudly in Ulf's face about the dangers of defacing the training equipment before shoving Ulf into the armoury. It was then that he'd first seen Nullik and things started to make some sense. His friend, pack mate, and occasional bane of his existence had been sat waiting after having already received a loud scolding from Ulag. During the night it seemed that someone had crept inside the proving grounds and had scribbled some very scandalous suggestions about the questionable presence of master Ulag's testicles across the training armour. They had also taken the time to carve several of the fighting clubs to look like male genitalia. Because of this, Ulf found himself in the odd predicament of regarding a large wooden carving of a shlong, wondering what in the almighty shit-pits was happening.\n\nHe looked up from the wooden pecker and narrowed his eyes at Nullik.\n\n\"It wasn't me!\" Oddly enough, Nullik seemed to be quite genuine for once. He was a consummate prankster, but he couldn't lie about his antics without bursting into laughing fits. Not even to save his life.\n\n\"Well who else would be this idiotic?\" Ulf grumbled before walking over to the bucket of water and taking out one of the rough scrubbing cloths to begin cleaning up the mess.\n\n\"I don't know, but I want to find out.\"\n\n\"So that we can beat them senseless for getting us into this mess?\"\n\n\"Actually, I was thinking of buying them an ale and swapping suggestions.\" Nullik grinned as he regarded a chest plate that poetically suggested Ulag had enjoyed several improper dalliances with mountain goats.\n\n\"Nullik, so help me if I find out this was you I'll-\"\n\n\"It really wasn't! I know I like a joke, but I'm not exactly this . . . eloquent.\"\n\n\"No. No you're not.\" Ulf grunted and picked up another chest plate to start scrubbing.\n\nIt took the pair of them almost the entire morning to clean off the obscene writing from the armour and then to go out and carve some new training clubs to replace the ones that had taken on a phallic appearance during the night. Nullik was clearly the chief suspect, and given his past actions Ulf could hardly blame Ulag for suspecting him. As the leader of Nullik's pack, it was Ulf's duty to share the punishment. It hadn't exactly helped that his pack mate often stopped to show him some of the more imaginative insults scrawled on the armour with a tone of gleeful reverence. It was like watching an amateur craftsman admire the work of a master.\n\nAnnoying as that was, he didn't truly believe that Nullik was the culprit. For one thing, Nullik's usual pranks weren't quite so overt. So he told the younger orc to get some lunch with the rest of the pack whilst he took the final box of wooden trouser snakes to the jungle to be burned. Obviously, Ulag wanted the matter taken care of with discretion and Ulf didn't want to get even further into the proving master's bad side. In truth, he didn't particularly want to get caught carrying a box of dong-shaped weapons around the camp at any rate. Things like that tended to start rumours.\n\nHe made his way alone out along the path to the forest, feeling his stomach rumbling in protest at walking in the opposite direction of where his lunch was waiting for him. To pass the time, he thought of numerous ways to beat the living snot out of the phantom trickster that had gotten him into so much unwarranted trouble. He found a quiet and secluded spot and used some kindling and flint to set the box of wooden man-rods alight.\n\nThat was when the hand reached out from within the foliage to grab his shoulder.\n\nReacting without thought, he shifted to the side and grabbed the wrist of his would-be stalker before twisting around to lock their arm in place in an attempt to render it useless. The move was instinctive, well practiced and far too old fashioned to work on the owner of the hand. As Ulf tried to lock the arm, his assailant gracefully flipped backwards to render the twist useless and bent her arm to smash an elbow into Ulf's face. The stunned expression on him was priceless. All that remained to be done was a simple hook of her heel behind his leg, followed by hard shove to send him careening off balance and falling down onto his back.\n\nHe recognised the sultry laugh that followed and it immediately set him at ease. That relief only lasted a moment, and he quickly tensed up again as the fear and excitement of battle was replaced with embarrassment. He felt a pleasant weight descend upon him and the world stopped spinning to allow him to see the beautiful jade coloured face of Ulla Strongblood resting over him. She pinned him to the grass effortlessly, pushing his wrists down against the earth over his head. It gave him quite a view of her plentiful chest, snugly held back by a thick strap of fur that couldn't quite contain her curves. Instead, it offered a spectacular view of her deep cleavage merely inches away from his nose.\n\n\"Yield?\" she asked.\n\nUlf squirmed beneath her, he was stronger than Ulla and he could have overpowered her. Unfortunately for some reason his heart wasn't quite in it, especially when his struggling caused her luscious breasts to jiggle so enticingly inside her top. She grinned when she saw where Ulf's eyes were fixed and took the opportunity to quickly smash her forehead against his nose. The impact took a considerable amount of the fight out of him.\n\n\"Yield.\" This time she said it as more of an order than a suggestion.\n\n\"Fine! By the First, Ulla. What are you doing here?\" Ulf growled the words whilst she released his hands so he could rub his sore nose.\n\nShe lifted herself up over him on her knees, settling her rump down on his lap and extending her arms above her head to stretch out in a languid victory pose over her fallen opponent.\n\n\"Nullik said you'd gone into the jungle to burn something. I followed you out and brought you something to eat, dear alpha.\" She turned her head and nodded to the linen bag she'd brought with her before seeing the opportunity to sneak up on him.\n\nUlla was one of the Runts. They were considered the weakest pack in the proving grounds, though Ulla's problem wasn't that she couldn't fight. One-on-one she could have probably taken out half of the encampment. Ulla's problem was that she couldn't listen. Teamwork was an almost alien concept to her and she'd been through five other packs before finally falling in with the Runts. All of the other packs had rejected her because she simply wouldn't do as she was told.\n\nUlf had kept her, and for that she seemed to have developed a grudging sense of gratitude. Though Ulla's thanks often came with an ass-whupping the like of which he'd just received. If he was honest, he hadn't kept her with them because she was a useful member of the pack. She was headstrong, she didn't get on with anyone, and in a true battle she would probably get them all killed.\n\nHe'd allowed her to stay simply because looking at Ulla Strongblood had quite a strong affect on him. She was strong, fast, and a great fighter. It was only right that he should respect that. At least that's what he'd told himself for the past year she'd been with his pack. Lately, however, even he had to admit that it was much more than respect that kept his eyes wandering over to her whenever the opportunity presented itself.\n\nThose wandering eyes of his hadn't gone unnoticed by Ulla. She quite enjoyed the way he looked at her when he thought she wasn't paying attention. Others looked, of course. Why shouldn't they? She was Ulla Strongblood, younger sister of Rowun Strongblood. She would be a prized mate for any male if they could best her. She had already started getting unofficial little challenges for her affection the previous year, and had even begun to accept those challenges two months ago. So far none had managed to claim her affections in direct combat and she hadn't felt that any of them deserved for her to go easy on them.\n\nUlf on the other hand had kept his interest to himself for some reason. He was the noble sort, with a high name of his own to live up to as one of the son's of the warchief. He hadn't tried to challenge her because it might have made waves in their pack and he didn't want to lose her as a pack mate. It was a shame. Ulla felt Ulf's strong body between her legs and decided that she might not fight her hardest against the idea of rutting with him. When that thought crossed her mind she smiled down at him before pushing her firm rear back to rub herself against the soft lump of his loincloth. It did not remain soft for very long.\n\n\"Ulla! What-\" Ulf started to ask before she leaned over him and placed her fingers across his lips to hush him.\n\n\"I just saw you out here, burning a box of suspiciously cock-shaped clubs and wondered if you collected them because yours didn't work. I'm very glad to report that I was wrong.\" She grinned wickedly and wiggled her hips to feel him beneath her. \"It's a big one isn't it? Perhaps one made for two hands?\"\n\n\"Will you quit it!\" He growled and shoved her off him as she rolled over onto her back and laughed. Instead of pouncing him all over again, she reached over for her linen bag and opened it up to show him the cuts of juicy beef and fresh bread inside.\n\nUlf licked his lips and walked back to her, urged on by the inviting smell that had emerged from the bag. Within moments he was sat beside her on the forest floor, munching on the beef and bread whilst Ulla watched him curiously.\n\n\"I thank you for this.\" He said after the third mouthful.\n\n\"You'd have done the same for me.\"\n\n\"I would.\" He nodded.\n\n\"So, why are you out here burning cock-clubs? Should I be worried?\"\n\nThe question got an unexpected laugh from Ulf. \"No. Someone carved them out of the training clubs last night. Ulag thought Nullik was to blame because, let's face it, it's nearly always Nullik who's to blame for such things.\"\n\n\"Well I was going to-\" Ulla started but fell silent when she saw something else catch Ulf's attention.\n\nIt didn't take long for her to pick up on it. Battle! The blood warmed at the prospect and she scrambled to her feet along with Ulf to run through the forest in the direction of the noise. The ringing clash of metal along with the grunts and yells of combat called to the young orcs like some sweet siren song.\n\nUlla was ready to burst right out of the foliage and attack whoever dared to fight in their territory. Instead she was only allowed to let out a strangled gurgle of objection when Ulf grabbed her wrist and pulled her back. It was just like Ulla to run straight into any fight. He preferred to at least check that they might stand some chance of winning whatever brawl they were getting into before diving chin-first into the conflict.\n\nPeering through the leaves, he was immediately glad that he'd stopped Ulla. Largely because a full-on attack would have seen them charge out to lay waste to their newest pack mate. Gregory Hopkins, the first human to be allowed into the proving grounds in centuries, was engaging in a fierce sparring match. It wouldn't have looked favourably on the Runts to have accidentally ambushed one of their own members. They had enough problems already.\n\nThe second reason that springing out into the fight would have been a terrible idea came in the form of who Gregory's sparring partner was. Algra Strongblood was one of the most renowned warriors of her people. She had been the life-mate of Rowun Strongblood until he had fallen in battle. Despite having lost her mate and her status it was evident from watching her that she had definitely not lost her skill in combat. Ulf heard a low, dangerous growl rise from beside him. Ulla had lifted herself up having recognised Algra. Ulf knew little of Rowun, other than what his legends spoke of him. He'd never asked Ulla about her brother, but from the way she tensed with a vicious aggression at the sight of Algra it was clear what she thought of her brother's life-mate.\n\nThe pair of them stayed hidden and watched Algra deftly sidestep Gregory's strike before closing the distance along his outstretched arm to plant a solid elbow in his chest. Ulf winced, knowing full well that the young human's chest had been badly injured only weeks before on the proving grounds. The move stunned Gregory and he stumbled backwards allowing Algra to press her advantage, kicking him backwards to smack loudly against the trunk of a tree.\n\n\"Yield! Yield already. Damn it, Algra,\" Gregory said, woozily trying to bring his vision back into focus.\n\n\"That was pathetic. Slow. Poorly timed and you continue to use your head too much,\" She gave him a disapproving clout over the back of the aforementioned head in an effort to get him to snap out of it.\n\n\"Well, I did consider just taking my head off at my shoulders and putting it to one side, but I don't think that would make me fight any better.\"\n\n\"That is not what I mean, idiot! And if you go into a true battle like this then someone else will soon do that for you.\" Algra started pacing in front of him. \"All warriors need to use their head in battle, but we think of the long-fight. You use your head to think of the short-fight.\" She stopped to jab a finger into his sore chest.\n\n\"Ow! Huh?\"\n\nAlgra outright snarled.\n\n\"Wait! I'm with you. I've just never heard of the idea of a long-fight and a short-fight before. You're saying I should stretch it out? Tire out the opponent?\" He looked over Algra's incredible physique. Tiring her out would probably take him several days.\n\n\"No! The long-fight is taking into account of yourself, your ground, your advantages and disadvantages. Then finding a way to use it all to put your enemy in the dirt.\"\n\n\"Well that's what I'm doing!\"\n\n\"No, you are thinking of each punch, each kick, and each dodge. The short-fight. You are letting me set the speed, force you back into bad ground, and take all the advantages whilst you think about these things. The short-fight should not be where your mind is. Act. React. No thinking. Save your thoughts for winning the long-fight.\"\n\nGregory considered that advice and then finally brought himself to his feet.\n\n\"So, any advice for fighting the short-fight without thinking about it?\"\n\n\"You already do. That is why it is so vexing that you do not.\"\n\nGregory tried to analyse that one but his brain wasn't playing along.\n\n\"What?\"\n\n\"When we first met. You beat me soundly.\"\n\n\"Yeah, but that's because you were desperate, not thinking properly, and you didn't think I knew how to fight at all.\"\n\n\"I was. You saw that. You saw I was too angry and I pressed too much, so when you hit back it was . . . unexpected. I fell. It was a good move.\"\n\n\"Well I was pretty shocked, so it was mostly just-\"\n\n\"Instinct?\"\n\nGregory nodded, beginning to understand what she was driving at.\n\n\"When you beat the mad boy. That was instinct too.\"\n\n\"That wasn't shock. That was out-and-out rage.\"\n\n\"Why do you think orcs use our anger in battle? It helps to keep our heads out of the short-fight. Let the rage and the power and the training carry that. Keep our brains on the long-fight.\"\n\n\"Well, when I lost it with Freddie, I wasn't thinking about any long-fight. I was way too angry.\"\n\n\"Then find balance.\"\n\nHe nodded and took a fighting stance to indicate he was ready. Normally he'd consider which stance to start out in based on his technique but he took Algra's words into account and just opted for something that felt good and solid. She let out a low growl of intent and then launched into an attack. What did he have over her? She was a legendary warrior and he was basically a novice with very little actual combat experience. He studied her as he blocked two of her attacks and dodged the third. Instead of letting her push him back, he shifted to the side and countered. Algra blocked his strike but he hadn't meant to really take any advantage. It wasn't time yet. She was aggressive, agile, and incredibly fast. She was also probably stronger than he was. No advantages there. Wait, that wasn't exactly true, was it? She liked to spend a lot of her time during combat in the air. Her legs were always in use shifting around to deliver devastating kicks and leaping from one stance to another. That could work to his advantage.\n\nWith a plan in place, he decided to use another of Algra's weaknesses that had worked for him in the past. Low expectations. They both knew she was the better fighter and she'd gotten frustrated with him for not doing as he was told. \n\nSo, he decided to not do as he was told. \n\nHer next blow made him shift back onto muddy ground, she pressed her advantage quickly and used his lack of mobility to deliver three hard strikes across his thigh, belly, and chest. That was fine, he was expecting them. They still hurt like hell, but it was a sacrifice for the long-fight. He used all the traction he could get to leap backwards and press his back against a tree. Algra growled with fury as he allowed her to easily take the favourable ground yet again and she leapt up to deliver a finishing kick to his stomach.\n\nGregory saw it coming. He'd pushed himself back to the tree on purpose. Using it as leverage to push himself off, he went straight for her as she spun in the air and delivered two open palmed blows to her side. The attack immediately unbalanced Algra and though she managed to slam her knee against his ribs, she didn't get the full force of the blow and was instead forced to expend all her energy in finding her feet once again. Gregory was shoved backwards against the tree, but Algra managed to land on her feet and stay upright, though now it was her standing in the mud.\n\n\"Better,\" she approved. Then she launched herself forwards again to continue the bout.\n\nStill hidden in the foliage, Ulla grinned her approval. \n\n\"He learns fast.\"\n\nUlf nodded his agreement. Though he wasn't certain that it would be fast enough.\n\n\"If he is well, then he should return to the pack,\" Ulf noted.\n\n\"Well if he's as useful as he was last time, we're better off without him.\"\n\n\"That's not the point, Ulla. He has a duty now.\"\n\n\"The human is barely a week out of his sickbed, Ulf. And he looks to be training to fight rather than readying himself to run. Give him another week before telling Ulag he's ready to return.\"\n\nThe idea of letting the human have a holiday whilst the rest of the pack trained together hardly sat right with Ulf. He frowned at the decision and considered that Gregory didn't seem the type to back down. Ulla was right. He wasn't going to run. Then, when she reached out and put her hand on Ulf's shoulder, she made his decision easier.\n\n\"He get's a week. No more.\" Ulf said.\n\n\"Good, now come. We must return. Let us leave the human to his fight.\"\n\nThey both heard the sudden sound of a loud thud and a low groan of pain before turning back to see Algra stood over Gregory who she'd just handily dumped into the mud, face first.\n\n\"Maybe we should give him two weeks.\" Ulla suggested.\n\nUlf let out a passive and unimpressed grunt before turning away to walk back to the camp.\n\n* * * * *\n\nLydia heard the familiar noises coming from within the tent of the courtesans before she even laid eyes on it. As she moved closer, she could discern the familiar deep male grunts sounding out in rhythm with her friend's almost melodic feminine moans. It did not take a mastermind to figure out what she was about to walk in on, and after knowing both of the suspected subjects for years it would certainly be weird to just drop in on them mid-coitus.",
        "Not that it would stop her from peeking on them, given that she had a good excuse. Reaching the canopy, she flipped open the cover and ducked inside to see the passion driven couple in all their naked glory, busily trying to outrace each other to a climax.\n\nThe pair didn't notice Lydia's entrance. Talina's eyes were closed tightly with her lips parted to release lustful pants of air from her lungs. Her head lolled back as she continued to ride her lover toward what must have been a closely incoming crescendo. For his part, the young blacksmith found it quite easy to compare the feel of her clenching sheath sliding up and down his hot steel to his idea of pure heaven. Even after weeks of Talina's erotic attentions, Torren couldn't quite believe she was all his. It was hard to remember there even was a world beyond her in those stolen moments, let alone notice any prying eyes enjoying the show.\n\nLydia watched the way Talina expertly shifted her hips in quick, sharp movements and found herself somewhat impressed with the way Torren's big hands grasped her waist to help those movements along. She'd known him for a long time, although they hadn't talked much except when she needed his smithing services. He'd always tended to slouch, and he was a dedicated daydreamer. His quiet ways and bulky frame hadn't exactly made him the talk of the ladies of the camp, but Lydia could certainly see why he'd kept Talina's interest. For one thing, he might have been somewhat large framed, but she was shocked to see just how much of that extra weight was hard muscle. He might have enjoyed food a little more than he should have, but he also spent every day working hammer and forge. It showed. What's more, given that she could now clearly see exactly what was giving Talina cause to moan as it slid inside her over and over again, Lydia had to admit she should have given him more attention in times past. The voyeur thought about interrupting the very happy couple for a few moments before deciding she'd take the high road and wait patiently for them to finish.\n\n\"Yes! Yes! YES!\" Talina's lips curled into a smile that quivered around her cries of pleasure. She pushed herself down hard with each passing moment to thrust every inch of her lover deep inside her. Each gliding movement stoked the fire inside her until she could finally burn no brighter.\n\nThe slender beauty pressing her hands to his broad chest and letting her pussy convulse around him drove Torren over the edge. A fiery detonation that he'd been building bubbled up his length to gush into her welcoming body. Heat. Lust. Bliss. The trinity of sensation filled them both as their climax brought them together harshly and then fell away into a soft, relaxing lull.\n\nTalina lowered herself down upon Torren and let out a little laugh of delight before she settled her lips to his and they kissed slowly and sensually.\n\n\"My, he has come a long way.\" Lydia put her hands together in a slow albeit genuine round of applause that the performance.\n\nTalina didn't seem to hear or care about the compliment, but the heavy-framed blacksmith's eyes shot wide open upon hearing another voice in the tent. He broke the kiss in an effort to run off and hide some place where he could comfortably die of embarrassment. The woman currently impaled on his cock was having absolutely none of it. She rudely shoved him down by his shoulders before rising up on him to straddle his lap and absently brush away the long wave of midnight hair that had fallen over her shoulders. Any struggle between the pair should have been overwhelmingly in favour of the powerful blacksmith, yet it was Talina who unmistakably emerged on top. A catlike grin settled on her lips as her fingertips raked down his chest and she gave her bare rear a little wiggle.\n\nShe felt Torren's length twitch inside of her with that movement and then she finally looked over to Lydia, mildly annoyed.\n\n\"Lydia, when I asked you and Fiona to keep out of the tent this morning so that Torren and I could be alone, did you think it was so we could compare notes on making horse shoes?\" Despite the levity of her words, there was a distinctly lethal edge to Talina's tone.\n\n\"No, but I'm afraid Emmet insisted on the interruption. Bolut is about to take the trade caravan out into the human kingdoms and it seems that they can't do without you.\" Lydia shrugged, not quite knowing herself why Emmet required a trained courtesan for the job of counting and carrying goods. It wasn't exactly Talina's speciality. \"Perhaps he's preparing you to take over from him. We all know how clever you are, and the poor man is getting on in years.\"\n\nTalina rolled her eyes. \"He's just wanting to check up on something. Tell him I'll be out in a little while.\"\n\nTorren had turned a very alarming shade of scarlet by that point after having a pair of beautiful women conduct a casual conversation over his nude body. He shuffled his shoulders to try and lift himself up onto his elbows. The sudden slap to his cheek was swift and lightning quick. It wasn't the first time Talina had slapped him like that. It didn't particularly hurt him, except to leave a brief and mild stinging sensation on his skin. He blinked and before he could figure out what he'd done wrong he found himself looking up into Talina's pale green eyes along the length of her finger which was suddenly pointed at the tip of his nose.\n\n\"Stay,\" she commanded.\n\nHe didn't move.\n\n\"Good boy.\" She grinned and gave his head a little pat.\n\nLydia raised her hand to her mouth to try not to laugh aloud at the treatment. Talina had a very odd way of showing affection, though few men complained about it. Torren sank back to lie down beneath her and the corner of his mouth turned up in a little smile. It was hard to be mad at the woman with his cock lodged inside her and returning to its formerly rigid state more and more by the moment.\n\nTalina slid off of him and shifted to his side where she knelt down and lowered her lips to give the tip of his glistening manhood a playful little kiss. After that, she licked their mixed love juices from her mouth and gave him an affectionate wink.\n\n\"Stay here, Torren. I'll return soon.\" Talina lifted herself to stand and reached out to grab her long, hooded cloak and cast it over her bare shoulders. She spent a little time after that affixing her sandals to her feet before blowing her lover a kiss goodbye and departing the tent with Lydia.\n\nFor her part, Lydia was adorned in her usual small bronze bikini that highlighted her curves magnificently. Not much modesty could be seen about her luscious frame. Perhaps even more so than her two closest friends, Lydia was quite the exhibitionist. In the heat of the orc encampment, her skimpy attire was a small blessing. She often looked at Torren working the furnace in his tunic and cringed for the poor lad. Although she had to admit that it seemed the gods had finally favoured him as of late.\n\n\"I see you've got him well trained.\" The curvy courtesan quirked a brow toward Talina in amusement.\n\n\"He's coming along nicely.\" Talina lifted her nose loftily whilst keeping her tone tellingly neutral.\n\n\"You seemed to be cumming along quite nicely too, from what I saw in there.\" Lydia contemplatively looked over her shoulder back towards their tent. \"Do you mind if I try him? I have to admit, I didn't think much of our resident blacksmith before you took him under your wing.\"\n\n\"He's mine. Train your own,\" Talina snapped.\n\nLydia let out a little throaty laugh. \"Alright! You can sheathe the claws. I was only curious.\"\n\nSilence reigned for a few moments as they walked through Bolut's camp at a leisurely pace.\n\n\"What are you wanting Torren for anyway? Is the master not keeping you satisfied?\"\n\nLydia frowned at that and offered a shrug of her shoulders that made her sizeable breasts bounce and strain against the tiny arrangement of strings and cloth confining them.\n\n\"Gregory has been distant. He wanders off all day into the wilds with Algra. His mind is elsewhere when we bathe him. I've tried to capture his attention. He hardly seems to notice. Between Janette, Algra, and Valise, he has his nights occupied well enough.\"\n\n\"He is a man. Subtlety is hardly going to be his strength. If you want him, then offer yourself more blatantly.\"\n\n\"He saw through one of your masks, Talina. I hardly think he needs help seeing what's right in front of him.\" Lydia folded her arms across her bountiful bosom and pouted to herself.\n\n\"The best place to hide is always in plain sight, Lydia. People don't look for things that are right before their eyes.\" Talina's gaze shifted forward when Bolut's caravan came into view on the road at the edge of the camp. The other human slaves were busily packing up the wares onto the large cart and the enormous oxen were being settled and fed in preparation for the journey.\n\n\"Fine then! I'll just march in his tent this evening and bend over his table after carefully lettering the words \"Fuck\" and \"Me\" on my rear end. A word on each cheek. How's that?\"\n\n\"Perhaps you shouldn't be that blatant.\" Talina offered her friend a little curve of her lips.\n\n\"By the way, I've been dying to ask, how does Torren compare to Gregory?\" Lydia lowered their voice to a conspiratorial whisper as they approached the ears of the slaves ahead of them.\n\nTalina's brow furrowed with annoyance for a moment as she looked at Lydia and saw that she was genuinely albeit playfully curious rather than just simply jesting with the question. \"He's not as naturally gifted, but he's a good student and we're both enjoying ourselves more and more with each lesson. They're both quite . . . industrious.\"\n\nBefore Lydia could press for juicer details, Emmet shuffled his old bones from around the caravan and laid eyes upon them both.\n\n\"There you are! Where have you both been?\"\n\n\"She was fucking Torren like a wild woman. I watched.\" Lydia passively replied as she stepped up to the caravan and put her hands on the edge to peek over it and over the assembled array of goods that had already been loaded.\n\nThe reply took the wind out of Emmet's sails a little and the poor old man looked for a few moments like he'd just seen a unicorn.\n\n\"I'm here now,\" Talina pressed, \"what's the matter?\"\n\nEmmet cleared his throat and walked a bit away from the caravan, Talina smoothly fell into step at his side and slid her arm beneath his to help him along. Emmet was a clever man with a keen mind, but the aches and pains of a long and hard life were catching up to him. Lydia saw them moving away and moved to follow but she was stopped when Talina turned her gaze to face her and shook her head. She knew what they were likely about to discuss and it could have put the woman in danger.\n\n\"What have you learned?\" Emmet asked as they slipped in the gap between two large and currently empty supply tents.\n\n\"Nothing.\" Talina folded her arms and looked away, down at the ground between the tents.\n\nEmmet remained quiet, sensing the bait for an argument was being laid.\n\n\"I'm serious! It's all well and good trying to prove something but the proof actually has to be there! I'm certain elder Wren had something to do with what happened to the mad boy but if he did then he's not trying anything else right now. He spends his days at the provings and at the great hall. At night, he sleeps. What more do you want?\" Talina's green eyes lit with an angry fire as she turned back to look to Emmet.\n\n\"You're sure it's him?\" Emmet asked in a carefully relaxed tone.\n\n\"No! But if it's not him then I don't know who in all the dark realms it could be.\" Talina's shoulders sank and her arms unravelled to fall to her sides.\n\n\"Don't let your hope fall, girl. There's more than one way to skin a traitor. They've slipped back amongst the shadows, and looking into the abyss for answers is beyond even those with the sharpest eyes.\" Emmet reached behind himself to rub his sore back as he considered their options. Then after a moment, he looked to Talina again. \"Keep your eyes here now, on the camp and on our boy. If we can't seek out our enemy then at least we can defend ourselves. Can you do that without raising anyone's hackles?\"\n\nTalina looked around the place. The tents and pavilions that comprised Bolut's section of the camp were made in a relative circle around a central open space with a simple line of stalls beside, bordering the dirt road.\n\n\"At night, I can keep watch easily enough but during the day the camp is too busy to effectively guard. Too many orcs and slaves walking through our tents. I only have two eyes. And I need sleep from time to time.\" Talina rubbed her brow with frustration. \n\n\"Take Fiona under your wing then, show her how to use those feline eyes of hers.\" Emmet suggested.\n\n\"That is . . . frowned upon.\" Talina pointedly didn't elaborate.\n\n\"Do it anyway, and tell anyone who frowns at you to take it up with me. Damn it all, girl! My back hurts. Let's go back to our business. If you need anything, ask me.\" With that, Emmet turned to shuffle back to his own abode.\n\nTalina watched after the old man before turning back towards her home, considering the conversation she'd just had with each stride. She didn't like being on the defensive, but Emmet was right. There wasn't really any other choice. She also didn't particularly want to show Fiona the tricks of counter spying. Though she liked Fiona well enough, sharing that information would likely make her curious about why Talina knew so much about it in the first place.\n\nGregory had once told her in passing that curiosity and felines weren't a good mix.\n\nFinally, she thought of Torren waiting for her back in her tent and the image of him laid there ready for her perked up her pace somewhat. At least life wasn't all shadows and eyes in the dark.\n\nNot anymore.\n\n* * * * *\n\n\"Ow!\" Splat.\n\nJanette winced with empathy as she watched Gregory get lifted into the air and slammed down hard against the dirt for the third time that morning.\n\n\"You still think too much!\" Algra growled before offering her hand to the fallen young man.\n\nGregory took it reluctantly and allowed himself to be pulled back up on shaky legs.\n\n\"Algra, I promise you, I haven't been thinking in at least two hours. It hurts to think right now.\" He wobbled from side to side as his aching head tried to focus on his sparring opponent.\n\nAlgra's words about the short fight and the long fight had indeed sunk in, but that didn't mean he was remotely ready to fight her at her best. She was damned near unbeatable. Not only did she lay him out on his backside every time they engaged each other, she promptly told him exactly what he'd done wrong each time. The orc made punching someone in the face an art form. Janette had been watching them for over an hour, and watching Algra was more like watching a very talented dancer than a fighter.\n\nA very talented dancer with a partner who had two left feet.\n\nIt wasn't that Gregory was bad. He was just way out of his league. If things continued on their route, he wouldn't get back to the proving grounds any time soon. Janette knew the deal he'd made with his orc lover. The first time he put her down, she'd admit he was ready to go back to the provings.\n\nIt wasn't that he'd thought it was going to be a stroll in the park. He knew and respected Algra well enough to know she was a formidable opponent. Still, he thought he might get at least one sparring victory in a hundred. He'd lost count of how many times she'd put him on his ass after two hundred and thirty six attempts. That was a week ago.\n\nIt took her a full fifteen seconds to win the next bout before she casually stood up and walked over to Janette's rock to grab her skin of water and take a few gulps. The jungle was very hot, and beating the living crap out of people was thirsty work.\n\nJanette hopped down from her perch and walked over to Greg, who was still laid out on the ground and enjoying the moment of rest. The soft grass felt good beneath him and the sky was clear and blue above. He saw Janette's beautiful face pop into that view and he looked over to her.\n\nThe warm weather and relative privacy allowed her to shun her cloak beneath which she wore only the skimpiest of garments. A collection of thin threads pulled over her hips and between the bare cheeks of her rear, holding together a small triangle of black fabric that was pulled rather suggestively against her sex. Slightly larger triangles of matching cloth covered her plentiful breasts displaying the rounded curves of her cleavage and the undersides of the soft mounds where the material couldn't quite stretch.\n\nA very convincing part of him demanded that he get up and start a gruelling training regimen of ravenous lovemaking right there in the grass. A larger part of him carefully reminded his libido that he could barely stand up.\n\nJanette crouched down beside him. Bright red hair spilled across her shoulders as she tenderly stroked her fingers across the defined muscles of Gregory's chest. Careful not to aggravate any impending bruises, she caressed what felt like warm steel beneath his deeply tanned skin. She loved his new attire. The trunks put quite a bit of his powerful frame on display and she was more than happy to get an eyeful at every opportunity. Even with the newly earned battle scars across his chest, he looked downright delectable.\n\n\"Maybe you should both take a longer rest?\" she suggested.\n\n\"No rest.\" Algra took another gulp of water.\n\nGregory kept his focus on Janette. \"This is your fault,\" he grunted whilst trying to summon the will to get back up again.\n\n\"My fault?\"\n\n\"Yeah. Sat on that rock there looking like that. A guy can get distracted.\" He managed a somewhat weary smile up at her.\n\nShe gave his arm a chiding slap but couldn't quite hold back the grin from her lips.\n\n\"Ow,\" Gregory winced. Everything hurt.\n\n\"Wuss.\"\n\n\"Yup, that's me alright.\" Figuring that Algra would soon be returning, he finally lifted his heavy limbs to sit upright and came nose to nose with Janette.\n\n\"So, how did you beat her before?\" Janette's hand lightly lifted to stroke his cheek.\n\n\"Surprised her.\" Greg turned his head to kiss her open hand.\n\n\"So do it again.\"\n\n\"I'm pretty sure it was a special occasion. She doesn't surprise easily.\" His gaze shifted over to look at Algra who was pouring more water over her face. The sight of that water cascading over Algra's firm, incredibly athletic figure and sliding between her plump breasts caused his tongue to run across his lips.\n\n\"I've seen the way she looks at you Greg. She gets weak at the knees.\" Janette stroked a few stray blades of grass from his shoulder.\n\n\"Nope, I've seen her knees quite close up over the past week or so. Hurtling towards my face, along with her fists, elbows, and feet. I can conclusively say there's nothing weak about them.\" He finally hefted himself up to his feet and he helped the girl up beside him.\n\n\"That's not what I meant and you know it. You know I've been hanging out a lot with Talina, right?\"\n\n\"Mmmm.\" Talina. Janette. Hanging out. Yum.\n\n\"Well, she says that even the best of warriors are always vulnerable. You just have to find that weakness and exploit it, see?\" Janette slipped her foot around behind Gregory's ankle in a smooth motion, the skin of her firm thigh caressing along the outside of his leg.\n\nShe'd got so far under Gregory's guard with the mental imagery and the smooth manoeuvre that by the time he realised he was being set-up, all she had to do was straighten out her leg. Doing so knocked him completely off balance and her hands gave him a sharp shove to send him sprawling back onto his butt. Again.\n\n\"Hey! What the...\" Gregory started to complain, but when he looked up at the mischievous glint in the eyes of the redhead above him, he knew the lesson she was trying to convey almost immediately. He stopped, thought about it and then looked over to Algra, who was now approaching them.",
        "He blinked and looked back to Janette. \"Think that'll work?\"\n\n\"I'm pretty sure you've tried everything else by this point. It couldn't hurt.\" Jan extended her hand out to help him up and he gladly took it.\n\n\"Believe me, it could hurt a lot. Seems like everyone's knocking me on my arse these days.\" Gregory flexed the muscles along his shoulders and felt the anticipation of the imminent brawl. It was oddly invigorating.\n\n\"Yeah, well maybe I'll let you do something to my arse later to make up for it.\" Janette leaned in to lay a parting little kiss on his cheek before hurrying off to sit back on her rock and watch the show.\n\nThat parting hint immediately shifted Gregory's attention from the oncoming orc to look towards the gorgeous red haired vixen with his mouth hanging open in near shock. She was going to let him do what!? That was-\n\nHe never quite got to work out what it was since Algra's fist immediately smacked into the side of his head and sent him staggering backwards. The blow was so hard that it almost knocked him unconscious, but by some miracle he managed to stay on his feet with enough presence of mind to hop backwards avoiding Algra's following lunge.\n\n\"Hey! No fair, I wasn't ready!\" He only realised how much like a five year old he sounded after the words had left his lips.\n\n\"Half of your fights will be attacks, half will be defending yourself. Attackers don't give warning unless they're idiots. Don't expect one,\" Algra advised.\n\nHe was about to argue out of sheer frustration, but instead he saw the sense in her words and simply gave a brief nod. Alright then. If she wanted to fight dirty maybe he could return the favour.\n\nShe attacked again and he fell into a simple and effective series of defensive manoeuvres. Sidestep, stance shift, block, feint, feint, sidestep, strike. He could have probably done it in his sleep. The strike didn't hit but everything leading up to it had gone pretty well. Algra hadn't managed to put him on his back or make him see double and he was starting to consider that to be a win. It would have been easy to get a little confidence, but he knew all too well that she was only testing him. Like a shark letting its wounded prey tire itself out before going in for the kill.\n\n\"So, um, quick question?\" Gregory spoke as they circled each other.\n\nAlgra didn't lose that predatory look in her eye. Her trained vision was waiting for him to give her an opportune opening. She did let out a brief grunt in the affirmative, however. Gregory took the opportunity to delay getting turned into chum.\n\n\"Alright, well I was wondering if you've got any advice on a problem I'm having on focusing.\" He kept his guard up, knowing that question-and-answer time was also potentially getting-his-ass-kicked time in the orc's opinion.\n\n\"You have many problems. Explain.\" Algra's tone wasn't unkind. It was just brutally honest.\n\n\"Well, what happens if I'm squaring off with someone I find incredibly attractive? Like, if I can't concentrate because all I can think about is how good she'd feel pressed against me. \"\n\nAlgra's eyes widened and she stood a little more upright. Her guard didn't completely fall but Gregory resisted the strong urge to slip into the advantageous position that her surprise offered him. If he pushed his luck, she'd figure him out in a snap and then likely snap something of his to make a point. So instead, he continued to play the innocent and pursue his question.\n\n\"I'm just saying, how can I focus on keeping myself in the fight when all I can think about is tearing off your clothes? Is there some sort of trick you use?\"\n\nAlgra's answer came in the form of a lunge that didn't bear her usual degree of finesse and style. After Gregory had tactfully sidestepped the attempt to get her hands on him, he noticed Algra's gaze fall down over his body to rest on the front of his trunks. He was crazy about the gorgeous orc, but subtlety wasn't exactly one of her specialities.\n\n\"See? I mean, I'm trying to stand here in my usual fighting stance but it gets kind of awkward when you're making me so hard. Especially in these tight leather trunks you jammed me into.\" He lowered his guard to gesture to his crotch where Algra saw a thickening bulge rising out stubbornly against the tough leather.\n\nShe lunged for him again, but forgot to take her eyes off of that bulge until it was far too late. This left her with a lot of momentum and little direction, and Gregory swiftly sidestepped the attack and reached across to give her ass a lusty squeeze before she could recollect herself.\n\n\"It's like you've got this unfair advantage.\" Gregory deftly ducked under one of Algra's counter swings for his face before hopping back onto the favoured ground. \"In the provings, I'd want to beat my opponents. But you? I associate a hot and sweaty Algra Strongblood with some very happy moments in my life. It's hard to want to put you down when all I can think about is how much I want to pin you up against that tree.\"\n\nHis words had a very alarming effect of making the gorgeous orc lose her sense. The long-fight be damned. She wanted to attack him, to get him close against her and feel him inside her. She also wanted to break his nose. It was a conflict of interest that was making her fighting skills somewhat erratic.\n\nGregory didn't help matters when instead of dodging her next charge, he ran right back at her. He only broke his momentum the moment before what would surely have been a bone-crunching impact in order to swerve off to one side and grapple her. This had the rather spectacular effect of making him swing around his muscular lover and settle his feet in the earth behind her. Instead of taking his chances and trying to put her on the ground, he instead lowered his head and tenderly ran his lips across a spot on the nape of her neck that usually made her groan. His hands lifted to cup her breasts over that little fur top that barely constrained the voluptuous, green globes.\n\nShe felt him behind her, the strong musculature of his broad chest along with the thickness of his thighs leading upwards to that firm rise in his trunks now pressing tightly against her rear. A threatening growl lifted from her throat, but she pushed her gloriously firm behind back against that pleasant lump.\n\nGregory wasn't stupid enough to press his luck too much. Stimulating Algra's libido along with her battle-lust at the same time was a dangerous tactic. One wrong move and he'd have a very horny orc on top of him and likely beating the crap out of him at the same time. Breaking the slow grind they were starting together, he gave Algra a rude shove forward whilst holding onto her little skirt. The stitches of thread that held it together tore apart to leave her standing only in the small fur top. She didn't seem to mind that she was baring her lower delights and the sight of her almost distracted him enough for her to turn the tables in their little game. Seeing her toned bare legs rise up to that finely rounded ass was very distracting. That wasn't even mentioning the way she glistened in the afternoon sun at the apex of her thighs when she swiftly turned around to face him.\n\nHe caught the faintest hint of her musk in the air, and the teasing abruptly came to an end. She saw it in his eyes, that ravenous hunger for her that never quite seemed sated. \n\nIn combat, the male's main problem was a lack of focus. As she said, he spent far too much time planning his movements and not enough time actually moving. Except when something like anger served as a lens to narrow his thoughts into one single goal. Algra had seen it in him before, and knew just how much more deadly her master could be in those brief moments when he lost himself to the fight.\n\nShe saw a similar change in him then, as his attentions slipped away from shifting from one stance or movement to the next and he wanted nothing more than to claim her.\n\nWhat's more, Algra usually found her own focus easily enough in riding her battle-rage after spending two decades mastering the correct mindset for a fight. The problem was that ever since they had met something about him had deftly slipped beneath her guard. Perhaps it was simply because the first time she had laid eyes on him she'd been half-insane with desire, and ever since whenever she saw him something inside her called back to that time when she wallowed in the depths of heat.\n\nThat he had so eagerly and thoroughly ravished her soon after, sating that maddening lust and bringing her back to the world in a series of explosive orgasms? Well, that had probably helped.\n\nThe end result was simply that Algra didn't have her usual level of focus when she faced him. Sure, even with her mind occasionally running astray it was easy for the trained warrior to best him in open combat, but when he was so blatantly baiting her to the call of the rut?\n\nHe was definitely going to get it.\n\nIn the same instant, each of them roared their own battle cry and leapt into combat.\n\nJanette's eyes widened in momentary terror as it seemed like her two lovers were about to rip each other to pieces. It was only after the first few blows had been struck that the rising cry in her throat fizzled out and she was left watching in wide-eyed wonder.\n\nGregory was fighting like a warrior born. She'd seen him try to use his own training before, and it had even proved effective against the likes of Bolut and had doubtless kept him alive more than once since they had found the ring. When he went up against Algra, it just didn't work. In the previous days he'd told her he'd tried everything he could think of from his training back on Earth. Karate, judo, kick-boxing, even a couple of styles of kung-fu he'd been practising before Arolius. Nothing had gotten close to working against the orc. \n\nJanette didn't know what style or technique he'd adopted. She privately branded it Fuck-Fu and with bated breath she watched a sudden and vicious display of strikes crash between the two fighters. Both male and female moved faster than Janette had ever seen before, shifting without thought or care for anything but each other.\n\nAlgra struck him across his shoulder as he feinted to shift his head out of the way. Instead of trying to shift for better footing, he wrapped his arm around hers to hold her extended limb in place before smashing his fist into her ribs with three sharp and powerful blows.\n\nGrowling fiercely at the attack, Algra used the grip they had on each other along with her raw strength to shift herself and fling him over her hip. It might have been the end of another bout right there, but this time Gregory moved with the throw and landed on his feet with his hands grasping onto one of her thighs and his head lifting up directly between her legs. \n\nShe practically buckled at the knees the moment his mouth made contact with the silken seams at the apex of her thighs. That delicious green flesh spasmed as his tongue slid across the puffy folds. It gave him just enough of a distraction to get his arms locked around her thighs and his hands firmly clasping her taut backside.\n\nJanette watched the scene unfold in the bizarre position. Algra was still stood upright, one of her arms putting up little fight when it came to rest on Gregory's chest. He was exhibiting quite a bit of dexterity, practically crab-walking with his feet planted on the ground, his arms holding onto her legs and his body resting almost horizontally parallel to the earth. It didn't look like the best position to take any sort of advantage, but somehow he managed to use his footing along with his grip to twist sideways in a powerful move that finally cause Algra to fall.\n\nApparently Fuck-Fu could be quite effective!\n\nThe mighty orc female barely seemed to notice she had been taken off her feet in the midst of combat. Landing on her side, her first reaction was to lift her leg up in the air to give the human easier access to her gushing pussy.\n\nJanette watched Gregory expertly explore the depths of his lover with his tongue and felt quite a bit of fresh heat rising in her own body. She'd seen the pair of them go at it like animals plenty of times since they had arrived on Arolius. It never failed to ignite her own flame of desire. Hell, that flame had gotten so intense the first time she'd watched them that she'd practically offered herself like an orc in heat to the pair of them.\n\nSo it was without a thought for decency that she lifted her legs to settle her feet on the rock beneath her and spread her knees wide open. The soft touch of her fingertips descended down between her open thighs to lightly tease little circles around her clit. In moments those fingertips glistened with her excitement, and she pressed deeper into herself whilst watching the lovers in the field.\n\nAlgra moaned upon feeling his tongue swirl around the nub of flesh at the height of her slippery slit. Normally he loved that noise, and it was made all the sweeter when she rolled onto her back. All that remained was to pin her shoulders to the soft earth beneath her and victory would be his.\n\nVictory could wait.\n\nHe could tell that she needed him now. It was beyond a game or a bout on the training field. If he left her like that and pinned her then she would leave angry and unfulfilled. Angry? He could deal with that, for orcs were notoriously short tempered. To knowingly leave her on the edge in that moment when she needed him? He loved her far too much for that sort of thing. The ring could rust and Earth could wait, for in those moments Algra was all that mattered.\n\nShe felt his tongue spear her depths and roll inside her before his lips sealed between her legs and she felt him gently suck her heated flesh. She felt his touch lapping against her silky inner walls, drawing her down into a deep and blissful trance. The shock of him shifting his tongue from massaging her tasty depths to slide up and rapidly flicker across her clit made her back arch and her body tremble.\n\nHis arms once again wrapped around her thighs as she lost control and crashed headlong into a powerful orgasm that seemed to erupt through her belly and outward to her fingertips and toes.\n\nGregory dutifully continued his tongue lashing through that scorching wave and carefully measured her reactions in the build-up to the next. Algra was quite a sensitive creature, and the combination of sex and fighting had apparently made her all the more pliable. Right then, their battle was the furthest thing from his mind, and he released one of her legs to reach down and loose his aching cock.\n\nIt felt incredible to feel the tight leather trunks give way to the open air and he certainly had a better place to put it. A lewd wet noise reached their ears as his mouth lifted from her sex and he lifted himself over her until they came eye to eye. It was clear that they had both forgotten all about the training. Looking upon each other with lust drunk eyes, they immediately descended into a hungry kiss. They feasted upon each others taste whilst he tore the fur top from her body and she reached between them to grasp his length and plant the tip between her welcoming lower lips.\n\nWhen they finally pulled together Algra felt him slide himself fully into her simmering body to almost immediately detonate a small explosion of ecstasy that made her toes dig into the earth. She grasped his firm ass to savour the steady grind of his hips as his thick length slipped inside her tight pussy again and again. \n\nHe felt one of her legs wrap around his own and loved the way her heavy breasts cushioned to his chest. Their bodies gleamed with perspiration and slid gloriously together beneath the sun. Once she had fully accommodated him, he pushed with a deeper and more primal desire.\n\nJanette saw that Gregory had finally won the battle. Algra's shoulders were well and truly pinned to the ground, even as her hands embraced him and her fingernails trailed across his bare back. She was taking defeat admirably, although that was likely because she didn't know about it yet. Janette let out her own victory cry as the sight of the pair of them rutting on the grass finally drove her over the edge and she dug her fingers deep inside herself whilst her thumb teased her slippery clit.\n\nAlgra broke the kiss to cry out when his relentless ravishing finally sent her spiralling into another climax that sent white-hot jolts of energy through her gorgeous figure. They watched each other, and she saw him bare his teeth in determination before he slammed into her deep enough to steal the air from her lungs. A last gasp of air was taken before she felt another burst of pleasure deep inside her combined with the familiar pulse of her lover's seed pumping into her waiting body.\n\nThey each closed their eyes, needing only the sensation of their touch to guide them along the way before they fell together and tenderly kissed and licked at each other in the open glade.\n\n\"Wow. Gregory definitely wins. Flawless victory.\" Janette did her best video-game fight voice.\n\nHe felt Algra tense up beneath him, then had the unique sensation of being launched five feet into the air where he managed to flail about just enough to turn and land on the grass at Algra's feet.\n\nBlinking up at her, he vaguely wondered how the hell it was possible she was that fast to be standing upright above him in the space it took for gravity to get the better of him. Shortly after that he saw the look of cold fury in her eyes as they lowered to his bared testicles and quickly rolled away before she could get any ideas.\n\n\"Algra!\" Janette materialised between them and rudely shoved a fingertip up against the orc's nose. \"You two had a deal. He won fair and square. Your shoulders hit the ground and you were well and truly pinned there.\" Janette glanced over her shoulder at Gregory before turning back. \"Although nailed would probably be a better word for it, huh?\"\n\nAlgra released a low growl filled with brutal intent.\n\n\"Oh yeah, now he's going to go back to the provings you want to give him a few broken bones? Smart. We both know you weren't going to keep him here forever. You lost, and the whole point of this was to make sure he was back in shape enough to defend himself. Judging from what I just saw he clearly is. Now get back to the camp and cool off.\"\n\nAlgra's gaze shifted from Gregory to Janette. The look she gave the girl might have routed a platoon of hardened warriors. It seemed that Janette just didn't give a damn, and she stood her ground without so much as flinching.\n\nAfter a tense stare down it was Algra who finally lowered her eyes and made a strangled little noise of frustration before moving to grab her clothes and turn from them back towards the camp.\n\nGregory stared up at Janette, momentarily awed by the sheer volume of pure moxy he'd just witnessed.\n\n\"Wow. I did not see that coming.\" He looked over to Algra again just before she vanished into the tree line.\n\nJanette let out a long, slow breath and turned around to face him. Her hands came to rest on the luscious curves of her hips and her eyes scanned him once out of concern and then again because he looked particularly yummy laid on the grass with his trunks hanging off his right boot. He saw her lick her lips as she took a moment to enjoy the view before she focused back on his face.\n\n\"Algra wouldn't hurt me. I'm not a warrior. She's not a bully.\"\n\n\"Yeah, she beats me up a lot but never takes my lunch money.\" Gregory pulled himself back up to his feet and stepped back into his trunks before pulling them up his legs.\n\n\"So that was . . . intense, with you and Algra\" Janette said as they started the walk back to the camp.\n\n\"I needed to make Algra weak at the knees. It kind of had to be.\" Gregory reached out to push an overhanging branch out of their way.",
        "\"I thought she might kill you for a minute.\"\n\n\"Well it'd be your fault if she did.\"\n\n\"Hey!\"\n\n\"It was your idea.\"\n\n\"You think she'll be ok?\"\n\n\"She's worried about what comes next.\" He turned to look ahead of them where the camp could be seen between the foliage. His expression grew sombre. Algra wasn't the only one troubled at the thought of him returning to the proving grounds.\n\n\"Everyone is.\" Janette watched him closely, unsure of her footing on the subject.\n\n\"I'm that popular?\"\n\n\"You stood up for Valise. You're bringing Emmet's family here. Bolut admires you. Algra and yours truly are both truly yours, and I'm pretty sure Talina would walk over hot coals if you asked her to. Though I'm not exactly sure why.\"\n\nGregory took a few steps in silence as he thought about all the people he'd met in the strange new world in such a short time. It probably that meant he wasn't the stalwart introvert he was back on Earth anymore. He turned to Janette as they left the forest and made their way through some open grass toward the noise and bustle of the encampment.\n\n\"You know, for such a supposedly beloved guy, I sure do get punched a lot.\"\n\nThose wise words of reflection brought a sudden laugh from Janette's throat that formed her mouth into a stunning smile. She slipped her arm into his, feeling muscle that had strengthened considerably over the past months.\n\n\"We wouldn't want you going soft, now would we?\"\n\n\"That doesn't often happen with you around, Jan.\"\n\n\"Did you just make a wang joke?\"\n\n\"Maybe.\"\n\n* * * * *\n\nThey arrived back at the camp and took some dinner by the fire. Algra had stormed past everyone to take her leave in their tent. No one decided to pester her. An angry orc might literally take someone's head off. Instead Gregory and Janette had settled down to the usual helping of meaty broth on offer from the cooking pot. It was a pleasant surprise as he got fresh, tender pork with chopped carrots and onions. He'd gotten used to chicken and beef, but it certainly made a nice change of pace.\n\n\"So you are to return to the provings?\" Talina asked him as she poured a bowl from the cooking pot for Torren and then herself.\n\n\"That's the plan.\" Gregory had finished his meal just after Talina and Torren had emerged from their tent. He'd scooped Janette up to sit in his lap. She was peeling an apple for them to share for dessert and he'd been busying himself lightly teasing his lips across her earlobe.\n\n\"It is not a good one.\" Talina took her bowl and jabbed a spoon into it almost spitefully.\n\nGregory turned his attention from nibbling on his favourite redhead to look over at Talina.\n\n\"It won't be like it was last time. I can handle myself better, and Ulag's proven his point. So I doubt we're going to be set up against the wrecking machines again.\"\n\n\"The Berserkers,\" Talina corrected him. \"They are the worst you could face, but not the only ones who are dangerous. All orcs fight for glory in the provings. They are young, and prone to excessive violence. Your new pack leaves much to be desired.\"\n\n\"Come on, Ulf seems to have a good head on his shoulders. They can't be that bad.\"\n\n\"One of them doesn't have all his limbs. One has taken too many hard knocks to the head. Two look like they'd get blown away in a stiff breeze. Then there's Ulla, who might kill you herself before the other packs can get their fists on you. I've watched them fight. They are a glorious mess.\"\n\n\"Well, that's something to look forward to then.\"\n\n\"You'll get 'em.\" Janette unexpectedly spoke up before popping a slice of apple between Gregory's lips.\n\nHe blinked at her, then remembered to chew. \"You've changed your tone.\"\n\n\"What? Hey, I don't want you going back there but if you are dead set on it then I might as well be supportive.\" She leaned in and pecked his cheek with her silky lips. The touch left a pleasant tingle on his skin.\n\n\"Thanks, Jan.\"\n\n\"No problemo. Just promise me that you won't get your head knocked in again.\"\n\nThat brought an unexpected laugh from him before he nodded obediently. \"Alright, I promise I won't get my head knocked in.\"\n\n\"Well, since you two have decided to take leave of your senses, I'll eat elsewhere.\" Talina hopped up onto her feet and took her meal back to her tent.\n\nThey all watched after her before Torren turned back to look at Gregory, \"She's just worried about you, sir.\"\n\n\"Torren, don't call me 'sir'. It makes me feel old.\" Gregory smiled and then shifted his gaze to watch after Talina. \"You should go to her.\"\n\n\"When she's in that sour a mood? Would you like to go and spend some time with Algra right now?\"\n\nGregory glanced back to their tent where Algra was likely breaking things. He didn't particularly want to be on the list of available things to break.\n\n\"Fair point.\"\n\n\"Talina does speak the truth though, si- um,\"\n\n\"Don't call me 'um' either, Torren. My name's Gregory, or Greg.\"\n\nThe bulky smith nodded his apology before continuing. \"I mean, the Runts are the least amongst the packs. Perhaps you should seek out another alpha to fight for?\"\n\nGregory immediately shook his head at that idea.\n\n\"No. Ulf stuck his neck out for me. I'm not going to rub his face in the mud by asking around for better offers behind his back.\"\n\nTorren didn't seem to have thought about it that way, and that seemed to bother him for a moment before he shrugged his massive shoulders. \"Well, if you need any help then I'll do all I can, Greg.\"\n\n\"Thanks. Now, I should really go and let them know I'm ready to rejoin them.\" He gave Janette's rump a gentle pat. She hopped up onto her feet and then pulled him close after he'd stood up.\n\nThe kiss she gave him tasted of apples and her own uniquely delicious flavour. It sizzled with a slow, deep passion. She didn't want to let him go. When they parted, he saw a tear had spilled down her cheek. The girl was obviously more concerned than she let on. After all, the last time he'd left her to go to the proving grounds she'd nearly been left alone amongst the orcs.\n\n\"Hey, I'll be back,\" Gregory said, trying his best to channel Schwarzenegger.\n\nJanette laughed aloud at that, mirth momentarily replacing sadness in her eyes.\n\n\"Ok, first you're Conan and now you're the Terminator. Make your mind up.\" She sniffed and hugged him close.\n\nHe smiled and hugged her right back, only to realise that getting that close to a girl like Janette Riley gave a guy the idea to never let her go again. He felt the warm curves of her breasts pressed against his chest, the gentle embrace of her arms around his shoulders and he could still taste her on his lips. It was a hard thing to let her go, especially knowing where he was about to venture off to.\n\nSo she made it easier for him and stepped away after giving him one last little kiss to say goodbye. After that, Gregory willed himself to turn away and found that most of the camp was looking at him. Most of the faces he saw seemed concerned, though some were merely curious. He walked through them and onto the dirt path, making his way towards the proving grounds and feeling not entirely unlike someone on his way to meet his doom. Strangely, he found himself smiling at that thought. He couldn't die out there, Janette would never forgive him and Algra would kill him all over again.\n\n\"Well then,\" he said to himself as he walked over the road, \"I'd better go kick some ass.\"\n\n* * * * *\n\nThe Runts were already halfway through the morning's practice routine when he arrived at the proving grounds. He walked over to them, trying to ignore the stares of the other orcs around him. When he arrived beside his pack-mates, he gave them a nod of greeting as they each stopped their sparring to marvel at the fact he was still walking. After a brief moment of stunned silence, Ulf stepped forward to extend his arm out to the human.\n\n\"You return to us,\" he said.\n\n\"If you'll still have me.\" Gregory shook Ulf's offered arm in the orcish fashion with each holding to the other's forearm.\n\n\"More fists are always welcome.\"\n\n\"The First knows we couldn't do much worse,\" Nullik added.\n\nUlf shot him a glare and the prankster immediately shut up. Gregory waited a moment before Ulf looked back to him to size him up. \"You will train with Ulla today.\"\n\nAt the alpha's orders, Ulla stepped forwards with a somewhat bloodthirsty smile framing her small tusks. Gregory looked back to her and kept his expression cool. In truth he'd have liked to start out with the slim female orc in the pack, or even better, Nullik. They were at least his size. Ulla was larger and more muscular, though her figure retained a distinctly feminine shape. She reminded him of a somewhat more psychotic Algra.\n\nOff to a brilliant start then.\n\nHe stepped past Ulf for Nullik and the slim female to offer him a basic chest-plate and a single club. The slender orc introduced herself as Frelki and on closer inspection he saw that she was quite a bit older than the rest of the pups. He didn't rightly know how orc aging worked, but they shared many features with humans besides the tusks and the rich green skin. The rest of Frelki's features settled her somewhere in her late twenties to early thirties. Even for a pack of supposed \"pups\" there was an even older orc amongst them. Seated on a fallen log, the massive orc with plenty of grey strands in his black hair was watching him whilst taking a drink from a water skin with his only arm. A dull metal pauldron-like piece of armour covered the shoulder where the other limb had been evidently cleaved away. The question of the one-armed orc in the Runts had been nagging Gregory for weeks, but he'd known better than to ask around about it. Orcs could get very touchy about matters of war and honour, and he guessed that One-Arm wasn't exactly still fighting in the proving grounds without one of his limbs due to his feats of honour and bravery.\n\nUnfortunately, Greg had no time for curiosity or questions as he came to face Ulla. The rest of the pack quickly gave them some space and settled in to watch the impending beat-down. Ulla was happy to get it over with and wasted no time at all in charging him down.\n\nHe could see the battle-rage burning fiercely in her eyes as she closed the distance between them. Weeks of training and a natural instinct for fighting brought forth the fear and the thrill of combat. Taking his favoured battle stance, he braced himself to meet that charge head on. It didn't help. He'd given too much ground allowing Ulla to easily dodge his overhead blow and smash her club hard against his chest-plate. The armour just about managed to stop his ribs from breaking all over again. It wasn't nearly as successful in keeping the air in his lungs, leaving him gasping and stunned. Ulla finished him off with ease, casually kicking him off his feet to send him plummeting forwards to the ground and finally turning her back on him.\n\n\"Well, that was encouraging,\" Nullik sarcastically whispered to Frelki.\n\n\"Again!\" Ulf roared.\n\nGregory took a deep breath, slammed his fists into the dirt and pushed himself up to his feet. Stupid. Training day and night with one of the deadliest warriors in the camp and it had taken barely more than a second into his first spar with another partner to forget everything he'd been taught. Snatching up his club, he turned back to Ulla who had circled about to face him again.\n\nThe second bout lasted a bit longer than the first. It took Ulla an entire six seconds to plant him in the dirt, this time on his back.\n\n\"Again!\" The command came from Ulf before Gregory had even landed.\n\n\"This is brilliant,\" Nullik said. \"He can fall over so much that we'll be out of the provings before the other packs can even get to the rest of us.\"\n\nUlla was grinning maliciously as he pulled himself back up once more to face her. \"The human grows soft between his bitch's thighs.\"\n\nShe didn't know it at the time, but Ulla Strongblood very probably saved Gregory's life with those words. They had an almost reverse zen-like effect on him, as all his fears and self-doubts seemed to seep away into one focused beam of rage. He no longer felt angry at himself, for he was suddenly filled with a wild and desperate need to beat the living shit out of her.\n\n\"Fuck this,\" Gregory growled before throwing the unbalanced training club into the dirt and raising his fists instead.\n\nUlla laughed with glee at the human throwing away his weapon. She decided to break one of his bones to teach him an evidently much needed lesson about coming prepared.\n\nUlf watched the two opponents with a grim expression whilst he waited for the seemingly inevitable. Gregory's performance had been so bad that he wasn't going to be able to take part in pack manoeuvres. It would be too dangerous for him. Ulla was their best fighter, but even she was often outmatched by their opponents when set against the other packs. If Gregory couldn't even take on one orc, how would he fare when it came to fighting three?\n\nIt was then that Ulf saw the change in the human. The young man's eyes seemed to clear and he stood upright as Ulla started a final charge of brutal intent. Gregory simply didn't move. He didn't take up any of his fighting stances. He didn't dance around to make himself a harder target. Instead, he simply stood stock still. The thought of what was coming made Ulf wince for the boy, though he resisted the urge to cover his eyes.\n\nExcept when Ulla did reach Gregory, things didn't quite go to according to expectations. Instead of dodging back and conceding ground to her, he took a single stepped forwards and jammed both his fists directly into her exposed shoulder. The blow connected like a hammer on a bare joint, and the sudden move caught her completely off-guard sending a sharp bolt of pain up her arms and down her neck. She barely had the time to scream before Gregory moved again and planted his fist squarely in her jaw. The crushing impact sent the unbalanced orc flying backwards to land on her ass in the dirt. Her club landed several paces behind her.\n\nHe took a sure step back to where he'd been standing. It took him a few moments for the red mist to clear when he realised what he'd just done. He'd won! Someone else had a mouthful of dirt for a change. Orcs weren't all invincible behemoths of unbeatable force. \n\nOh, and he'd just hit a girl.\n\nCrap.\n\nWhen that last thought sailed through his mind like a mouldy raven his anger faded and he stepped towards Ulla to check if she was alright. She'd tried to get up but he'd clocked her so hard that it was proving to be more of a task than she'd anticipated. It was hard to get her legs beneath her when it seemed as if she suddenly had six of them.\n\n\"I'm sorry about-\" He started his apology, only to be met with a another roar of rage from her.\n\nShe finally found her footing, grabbed her club and ran at him as if possessed by a demon.\n\nGregory saw the danger, but the fear and the uncertainty of battle didn't return this time. Instead, he reacted exactly how Algra had shown him. No thoughts were cast to the short-fight, and he simply let instinct take him along the sidestep to dodge Ulla's opening blow. Focusing on the long-fight, he saw an immediate opportunity as Ulla was thrown off balance by her own club. This time, he brought his forearm up under her chin and pushed hard to take her off her feet and bring her down on her back. He quickly descended upon her and pressed his arm against her throat.\n\n\"Yield!\" For the first time it was a command rather than a declaration.\n\nShe growled, clawed and spat. Her legs were lifted on either side of him, her heels desperately kicking against his sides. She couldn't get a solid kick on him, and he'd immediately pinned her weapon arm to the ground. Her only free limb was used punched him on his upper arm with her free hand albeit at an awkward angle. It hurt like hell. He could take it.\n\nShe didn't yield. He realised that she'd probably choke herself out before giving up willingly. It would take a different tactic to best her, so he grabbed her shoulders and pulled her upright. She wasn't expecting it. Nor was she expecting him to roll backwards with her in tow, plant his foot on her stomach and hurl her backwards over his head and into a nearby empty weapon rack.\n\nShe clattered into the wooden beams like a bowling ball hitting a fresh strike.\n\nGregory looked over to her and got back to his feet. Ulla only groaned before slowly trying to get back up. This time there was no rage or fight left in her, and Gregory was privately very glad to see that she didn't reach for her club again.\n\nNullik burst out laughing. He'd never seen anyone beat Ulla in single combat, let alone seen it done quite so spectacularly.\n\n\"Good.\" Ulf stepped forward. \"Very good. But why did you not press your advantage when you had her on the ground?\"\n\nGregory made an effort to calm his breathing before answering.\n\n\"Wasn't a very good way to win,\" he said with a shrug.\n\nUlf nodded, looking at the human with more respect. \"You learn well. But you must fight with a weapon. Frelki will teach you.\"\n\nWith those words, Ulf gave Gregory a pat on the shoulder and then turned back to help out Ulla. She promptly shoved him away and went off to sit and sulk by herself at losing to a mere human. Frelki approached Gregory a little while later and offered him back his training club.\n\nThey spent until sunset practicing. Frelki was a patient teacher and the training was much easier on him than Algra's had been. The slender female seemed to have a somewhat gentler nature compared to most orcs. Although it soon became quite clear that she knew what she was talking about, and Gregory dutifully paid attention.\n\n\"Swing with the club. You're countering your weight against it. It won't be as powerful.\" Frelki advised before showing him the difference.\n\nGregory wasn't so sure that was the best way of going about things. Orcs were powerful foes, but they tended to be too top-heavy in their charges and if Ulla hadn't put her weight behind her swing in that third bout then he probably wouldn't have gotten such an easy advantage. Deciding it was best to do as he was told, he swung the club as instructed and then looked back to receive an approving smile and a nod from his tutor.\n\nFrelki wasn't built like most orcs, and he supposed that made her all the more interesting to his eyes. Her tusks were smaller than both Algra's and Ulla's, despite her being obviously older than both. She was also the first orc he'd seen that didn't have black hair. Instead, it was a mousey brown colour that looked quite appealing on her green head. She wore it in a simple braid that fell down her back.\n\nHer body was tall, but leaner and far more slender than most of her kin. He'd particularly noted her legs, which were bare and rather gorgeously streamlined. The gentle curves of those long stems had made him cast more than a single thought to what her ass looked like beneath her skirt. Though he tried not to dwell on those thoughts when she was teaching him something that might save him getting beaten to death. It was clear in her demonstrations and her movements that she was remarkably fit and almost eerily agile. She'd just been given the body of a ballerina as opposed to a bodybuilder. Strong, yet perhaps a little too fragile.\n\nFrelki's voice was easy to listen to, without the hard edge that most orc's carried in their throats. Though she did seem a little too gentle, or even timid. It made her stunningly cute, with a cheeky smile and keen eyes. Unfortunately, he wasn't quite so sure that the words cute, gentle, or timid were ideal to describe a companion who he might be going into a straight-up brawl alongside.\n\nAs the light started to fall away, Ulag marched out of his own tent to bark fresh orders to the assembled pups.",
        "\"Enough playing! Time for a real fight!\" The old orc yelled to the quick cheers of the others. Gregory noticed that none of the Runts joined in with cheers of their own. Instead they stayed silent and somewhat morbidly resolute.\n\nThat didn't exactly bode well for their chances.\n\nHe followed along with them as they fell into line and marched towards the fighting pits. Ulag was still to decide which of the packs would face off against each other. It wasn't exactly reassuring to see the old scarred orc out there again, given what had happened the last time he'd set up a mock battle. It made Gregory's chest hurt just to think about it.\n\nThe orc prowled before them and stopped short when he laid eyes on the human in their midst again. There was a quiet momentary snarl that crossed his features before he steeled himself against his annoyance. The brat was supposed to have limped off into the night after what the Berserkers had done to him. To see him standing there just over a month later looking alive, well and even ready to fight again should have been damn near impossible.\n\nUlag couldn't put the Runts up against the Berserkers again. The warchief had been angry about Ulag's little show the last time. He had some goodwill and an enduring friendship with the warchief, but throwing the Runts into the meat grinder again so openly would have made Grolfir angry. He'd seen Grolfir get angry before. It wasn't a memory he was keen on reliving.\n\n\"Runts! You fight the Thorns.\" Ulag yelled before plopping down glumly into his seat at the edge of the fighting pit.\n\nIf he couldn't outright beat the human out of his proving grounds, then he might at least be able to make a case that he shouldn't be there at all. The Thorns were decent fighters with a very strong pack mentality. They liked to test the waters of battle first, and bite into any weak spots they found. The Runts had plenty of weak spots for the tasting.\n\nThe human made no complaint as Ulf readied his pack, setting them into position and getting ready whilst the Thorns did the same thing. Around them, the other pups fell into a low chant of anticipation for the first clash of the upcoming fight. Their voices repeatedly shook the air like thunder. The beat of their song grew steadily faster as the packs facing off fell still. Ulag roared his approval and on his signal, the young orcs bolted towards each other. It was a different tactic for the Thorns to charge into the fray so openly, for they usually held off and drew out the fight in an attempt to weaken their foes. Ulag conceded that if the Runts got any weaker, then some of them might not have the strength to breathe properly. The two packs met at the centre of the pit. The human fell in behind Ulf whilst the great one-armed orc took the centre and fought into the fray like the veteran he was.\n\nThe Runts didn't do so badly at first, using the powerhouse of their two heavy hitters to centre the battle whilst Ulf, Frelki, Ulla, and Nullik prevented any flanking manoeuvres. It was hardly tactical genius, but the one-armed Wrut was a strong warrior, even despite his disability. Alongside him at the centre of the fight was Frun, a stout yet powerful orc whom Ulag had long since noticed was perhaps a few planks short of a barrel. What he lacked in smarts, he more than made up for in aggression. The Thorns on the other hand were a little too smart for their own good and hadn't quite taken Frun into account. Two of their members had already suffered a number of very powerful hits to their armour for overlooking him.\n\nThe human followed Ulf's lead and somewhat annoyingly he wasn't doing nearly as bad as he had done in his previous stint at the provings. Ulag watched him pick his moments carefully, often sidestepping around Ulf's opponents and taking the advantage. He never got much of an advantage, but the Thorns clearly weren't expecting him to be quite as aggressive as he was.\n\nUnfortunately for the Runts, the tide began to slowly turn on them as their wily opponents shifted tactics. The Thorns were pushed back, but they had also spread out and sacrificed much of the impact Wrut and Frun were making in doing so. Both Ulf and the human managed to actually bring down one of the Thorns into the dirt, but by then it was too late.\n\nUlla had taken the fight too far afield and gotten herself surrounded by two opponents who made quick work of her once she was outnumbered and cut off from help. The next to fall were Nullik and Frelki, who had gone on the attack and couldn't make much of an impact without their larger and more aggressive pack mates to back them up. That left Ulf, Frun, Wrut, and the human outnumbered. Ulag at least noted that they fixed their mistake, drawing closer together to watch each other's backs. Of course, by then it was far too late and the Thorns picked them off one at a time with their advantage in numbers. First, they went for Frun, who charged out of the formation to be quickly tripped and clubbed across his armoured back. After that, Wrut became much easier to outflank where his missing limb could offer him no protection on his left side. He landed in a heap beside Frun soon after.\n\nThat left Ulf and the human, back to back and looking understandably worried as the Thorns closed in for the final attack. The orc pups called for blood, just as they always did. Then the human did something no one expected. Instead of letting the circle of his opponents close in around him, he bolted straight for the strongest member of the Thorn's pack. He must have said something to Ulf, because the orc did the same in the opposite direction. The Thorns split their circle and were momentarily stunned at the sight of the human engaging in a brawl with a much larger orc and not losing.\n\nIt was clear that the opponent that the human had chosen was skilled, but the man's smaller size was proving to be an advantage in dodging the incoming blows. The orc had moved to swat him out of the way like a fly, and had quickly been taught a swift lesson in not underestimating his enemy. Ducking under the blow, the human cracked his club onto the orc's chest-plate so hard that it knocked him backwards. He followed that up with a hard kick into the side of the orc's leg before taking up a new line of attack. So, all there assembled watched one of their brethren start to limp whilst trying to fend off the attacks of a very pissed-off human male.\n\nIt was the first time that Ulag could remember the proving grounds going completely silent.\n\nThe advantage didn't last, of course. When the orc realised that he wasn't fighting a ferret, he managed to get back onto equal terms with the human. His pack mates helped and soon enough, the human was sent flying back into the dirt to slide across the pit gagging for breath from where the orc's club had smacked him in the gut.\n\nUlf had already fallen by then, lacking the human's means of surprising his foes. He'd only managed a few seconds of sparring with his opponents before they'd forcefully put him down.\n\nBeaten, the Runts slowly helped each other get back to their feet. Nullik offered Gregory a hand to lift him up and couldn't quite suppress a grin at his performance. \n\n\"Not bad. Not bad at all,\" Nullik spoke under his breath.\n\nThe human had managed to get air back into his lungs by the time he was standing upright again. Something inside him called out for another bout, and he was ready to push Nullik aside and go right back at the biggest of the Thorns who he'd almost managed to take down before they had swarmed him. Instead, he gave his pack mate a thankful nod and lifted his club into the air towards Ulag. There was a not-so-subtle implication in that action. He didn't speak out against the proving master, but all who saw the gesture knew its meaning.\n\nIs that all you've got?\n\nNormally Ulag would have liked that sort of spirit, but these were no normal circumstances. He couldn't throw the human out of the provings now after his surprising display of skill and bravery. The Runts had been beaten, but he'd made a better showing of himself than some of his allies had. So, the master of the provings stood up and stormed off away from the pits toward his tent.\n\nBelow, Ulf walked over to Gregory and patted his shoulder. \"Better than your first day. Be here tomorrow at dawn. We'll see if you can last it out.\"\n\n* * * * *\n\nGregory arrived back at Bolut's camp just about ready to strangle something. It only came to his notice that a large chunk of the camp had completely disappeared after he'd walked over to one of the storage tents and found it wasn't there anymore. Those particular tents weren't often occupied, and he wanted a place where he could cool his temper before showing his face to his friends. Sure, surviving the day had certainly been an accomplishment but the match-up of the provings had shown him just how truly dire his current situation was. The Runts weren't going anywhere fast, and he needed to pass the proving grounds to get the ring back from Grolfir. If his pack's performance was anything to go by, he might just get it back by the time hell froze over.\n\nThe familiar red crop of Janette's hair flitted between the many heads assembled in the orc encampment. When she broke free of the crowd to run towards him, Gregory's frustrations fell to the wayside at the sight of her approach. Even her troubled expression couldn't stifle her allure. She was all the more captivating having taken to wearing the garments of her new friends, the courtesans. A thin veil of sea green material covered her body, though he could easily see her gorgeous figure beneath the fabric. The shapely curves were adorned with simple and delectably skimpy undergarments that barely covered the girl's modesty.\n\nShe flung her arms around him only a few moments later and pressed just as much of that incredible body against him as she could. That soft, strong figure of hers felt almost good enough against his hardened muscular frame to forget about his current troubles altogether. It certainly beat stewing in his own frustrations in a storage tent.\n\n\"Are you ok?\" she asked.\n\n\"Yeah. I'm fine. Just a few bruises this time. Nothing broken.\"\n\nHis assurances did very little to settle her nerves and she immediately pushed at his shoulders to step back and look him over. This wasn't a difficult or remotely objectionable task, as Gregory had quite the appealing body of his own. His training with Algra combined with his time in the camp had bulked up that formerly lean frame quite a bit. He wasn't orc-like quite yet, but his muscles were much more defined. Even as she constantly worried about the scars that now ran along his chest, she couldn't deny that they did make her want to nibble at him quite a bit.\n\nHe was still only wearing the boots and trunks that were allowed in the proving grounds. There was quite a lot of nicely toned and sun-kissed bare male on display. By the time her gaze reached his belly button, she'd quite forgotten that she was looking for injuries and was simply enjoying the view.\n\nGregory spied that look in those bright blue eyes of hers and gently but firmly pulled her back against him. Their lips met a moment after that and only a few seconds later they were settled into a much-needed kiss. The heat of that touch made them both realise how cool the air was, and so they squeezed each other tighter to let their mutual warmth be shared.\n\nIt was getting to the point where Gregory was seriously considering taking up the orc practice of wildly rutting out in the open when Janette finally wiggled out from the kiss. Since he didn't want her wiggling away completely, he held her tight and playfully chased a couple of kisses from her lips and along her cheek. His enthusiasm made her laugh and brought a fresh flush of pink to her cheeks before she relented and stayed put. Though she did lift her finger to place on his lips in an effort to get the amorous male to allow her to speak.\n\n\"Ok, I believe you. You're not about to keel over.\"\n\n\"I might be about to bend a certain someone over.\" Greg nipped her fingertip with his teeth to show her he meant business.\n\n\"Will you stop!\" She slapped his shoulder and looked around for potential voyeurs. Only the backs of the tents could be seen from that part of the camp.\n\n\"Nope. Never.\"\n\n\"What happened? Did you win?\"\n\nJanette knew what winning meant. It meant getting the ring back, and maybe getting the chance to go home again.\n\n\"No. We lost.\"\n\n\"Hey, I don't care as long as you come back in one piece. Alright?\" She lifted her hand to stroke her fingers across his cheek.\n\nGregory let out a slow breath as the nature of the defeat seemed to flood back into the fore of his thoughts.\n\n\"We were a mess, Jan. It was barely even a contest. The only thing we had going for us was surprise and that's not going to last.\" He lowered his head and closed his eyes, touching his brow lightly against hers.\n\n\"Hey. Look at me,\" she ordered.\n\nHe did as he was told and found himself looking right into those twin seas of sparkling sapphire.\n\n\"Don't let yourself get like this.\" She raised herself to her tiptoes and settled a tender kiss on his lips to comfort the obviously troubled male. \"This was a win. Plain and simple. Bolut didn't think you could beat him, but you did. Algra didn't think you'd beat her, but you did. No one outside this camp thought you'd come out of there alive today, but here you are. Every time someone's put you down, you've stood up to them and here you are still standing. So you're in a faster race now. Don't give up at the first hurdle.\"\n\n\"I kind of thought getting beaten to a bloody pulp was the first hurdle, Jan. I remember literally sinking the landing with my face.\"\n\n\"Hey! I'll tell you what's a setback and what isn't.\" She flicked the tip of his nose with her finger to make sure he was paying attention rather than letting his gloomy thoughts get the best of him. \"Now, Bolut's packing up his camp to head north before winter gets here. Or at least that's the word around here. So, you're going to kiss me, then you're going to see him and wish him well since he's done so much for us. Then Algra's waiting for you in the forest.\"\n\n\"Is she naked?\" Gregory's eyebrows perked up.\n\nJanette smacked his bare chest with the palm of her hand.\n\n\"Hey, I'm just looking for a happy ending here,\" he teased.\n\n\"Right, that's it. I'm leaving you. I'm packing my bags and going off to live with the leprechauns.\" Her words might have had a bit more bite had she not been in the process of entwining her arms over his shoulders and lifting herself to kiss his cheek as she spoke.\n\n\"There are leprechauns now?\" He looked alarmed.\n\nJanette kept the presence of leprechauns to herself, though her laughter at his question eased his worries on the matter. Getting back a magic ring, winning fights against angry orcs, and trying not to die were proving to be quite formidable tasks. He didn't want to add finding a pot of gold at the end of a rainbow to his to-do list.\n\nThe girl wiggled herself out of his grip, and her laughter melted from amused to delighted when he put up another little fight on the matter. It involved a moderate amount of tickling and the occasional stolen squeeze of her smooth, firm bum. Eventually she managed to slip away from him and cast him a reproving look that was undermined somewhat by the way her lips quivered with a suppressed smile.\n\n\"I'm going to go back to the tent. Valise has been trying to teach me how to speak orc between my dancing lessons with Talina. It's made me really want one of those doohickeys.\" She pointed to the amulet around Gregory's neck that served to translate the language for him, and allow him to be understood by the green behemoths. \"But, at least it keeps me occupied.\"\n\n\"I thought you hated that sort of thing. I remember you could barely stay awake in French class.\"\n\n\"Yeah, well, it beats worrying about you all the time, you big dope. Besides, when am I ever gonna go to France?\" She cast him one last little smile before turning around to take her leave.\n\nGregory waited a beat before calling out to her again. \"Hey, Jan?\"\n\n\"Hm?\" She cast a look at him over her shoulder.\n\n\"Thanks for the help.\"\n\nThat brought the smile back, all the brighter on her red lips. \"Any time!\"\n\nWith that, she disappeared back into the bustling area of the camp.\n\n* * * * *\n\nBolut stood at the centre of the camp overseeing a truly enormous caravan of goods. A mere glance at the formidable trading vehicle showed that it took more design cues from a tank than a horse-pulled cart. Four enormous ox-like creatures had been reined in to pull the thing, and were currently chomping away at a box of jungle leaves in preparation for the journey ahead. Their curved horns were larger than anything similar Gregory had ever seen on Earth, and their front forelegs packed a tremendous amount of muscle compared to their smaller hind legs. Behind them, the vehicle itself rose up high enough to comfortably fit several fully grown orcs, though it was instead currently being stocked with various goods from the camp. The frame was clearly made of metal with a toughened wood exterior covered in hardened leather. Signs of wear and tear were evident in scratches on the leather, and a few arrowheads still embedded here and there with their broken shafts sticking out at odd angles.\n\nGregory guessed that travelling to human territories with plentiful supplies of trade goods wasn't exactly the safest of journeys for an entrepreneurial orc.\n\nBeside Bolut, Emmet was helping to oversee the loading operation from beside the juggernaut. They barked orders out every now and then before turning back to look over a number of parchments that Gregory assumed were the log books of the camp's current stocks.\n\n\"Um, excuse me,\" Gregory took a cautious step forward, deftly avoiding a slave rushing past with several rolls of multicoloured cloth piled up in her arms.\n\n\"Not now!\" Bolut yelled without looking up from his papers.\n\nRecognising Gregory's voice, Emmet turned and cleared his throat before jabbing Bolut in the arm. It was almost funny to see the frail wisp of an old man getting the huge orc's attention.\n\n\"What!?\" The orc growled out the word with no small degree of annoyance. After seeing Emmet pointing over to where Gregory was stood Bolut's expression shifted from anger to slightly flummoxed surprise.\n\n\"I'm sorry,\" Gregory held up his hands peaceably. \"Didn't mean to bother you.\"\n\nIt took Bolut a full minute to get out of \"boss mode\" and realise that his master was stood in front of him. He cleared his throat and spread his arms open in a far more welcoming gesture.\n\n\"Gregory! It is good that you are here. Forgive the shouting? Busy day,\" the big orc noted in a much more friendly tone, gesturing around them at the bustling humans and orcs loading up the massive caravan.\n\n\"Oh, it's no problem. I just wanted to see you before you left. Haven't had much of a chance to talk these past few weeks, have we?\" He paused and looked over the caravan. \"This is a bit . . . huge. When you said you were going on a trading trip I figured you'd just be hauling carts with horses or something.\"\n\n\"It was once just so.\" Bolut nodded grimly and folded his arms. \"These days there are many in the human bandits who attack us. Road is not safe. The caravan needs protection. Easier to protect this than a smaller convoy.\"\n\n\"Yes, and mister Rudd tells us that things are not getting better in the north,\" Emmet said. \"The high lord of Uldrin is sowing more discontent towards the orcs amongst his people. Many believe them to be child-eating, bloodthirsty murderers.\"\n\n\"Wait, what? I thought that the southern orcs and the humans were allies? Everyone fighting together in that long war in the northern mountains?\" Gregory took another step forwards toward the pair as introductions gave way to conversation.",
        "\"We are.\" Bolut spat at the ground to highlight just how much he thought that particular alliance was worth.\n\n\"The orc alliance is with the Empire,\" Emmet helpfully filled in. \"But there are five realms outside the central empire that are virtually their own kingdoms. The high lords of each realm have grown in power as the empire has weakened from the Eternal War. Uldrin is the realm that borders Embervine. We must travel through the territory to get to the central province. The imperial line has been that the southern orcs are friends and allies to the human peoples, but the high lord of Uldrin hates them. He can't outright revolt against the empire, but he does everything in his power to sabotage relations.\"\n\n\"He is an idiot. I have seen the Eternal War. If our warriors walked away from the north, the humans wouldn't stand six months before their lines were shattered and their lands burned.\" Bolut grunted, shaking his head.\n\n\"Quite. The rumour is that the High Lord of Uldrin isn't exactly . . . sane,\" Emmet said.\n\n\"Well at least now I know why orcs don't trust humans.\" Gregory let out a long breath. At least he wouldn't take the foul looks other orcs gave him all that personally anymore. If he was living next door to a bunch of bloodthirsty people ruled by a crazy guy then he might have had some trust issues too.\n\n\"Some humans are good,\" Bolut noted, his grim expression turning into a hearty smile as he looked back to Gregory.\n\n\"Thanks. Orcs aren't so bad either, despite the occasional near-death beating.\" Gregory flashed a grin before extending his hand out to Bolut. \"Anyway, I really just came over here to say thanks for everything. Stay safe out there.\"\n\nBolut, who had seen the gesture performed by humans before, reached out and shook Gregory's hand amiably.\n\n\"It is good that you are here, Gregory Hopkins. Do not fear for us. We have travelled the route many times and we keep well protected. Then, once we leave Uldrin and travel to the Imperial City, the gold flows like water.\" It was Bolut's turn to grin. The big orc's expression was similar to the one that the rest of his people took to when thinking about battle. \"Emmet will stay here with you, as will Valise and Torren. I know you have become close with them. It is good to have friends with you at the provings to talk of battle and victory.\"\n\n\"Heh! Yeah, victory.\" Gregory didn't sound very enthusiastic about that.\n\n\"Yes! Do not fear, my friend. After all, I managed to pass.\" He hefted his considerable gut for emphasis and his grin broadened. \"You have passed many great tests since coming to us. I believe you will pass this one.\"\n\n\"That's what Janette just told me.\"\n\n\"Then she is wise.\" Bolut nodded.\n\n\"I guess so.\" Gregory smiled. \"I'll let you get back to work. See you in a few months?\"\n\nBolut waved goodbye before resuming his contemplative frown as he regarded the papers before him. Gregory turned to go find Algra and realised that he felt relieved. He was glad that Emmet, Valise, and Torren would be sticking around. They had indeed become friends, and in Valise's case quite a bit more than that. Talina, Fiona, and Lydia would also be staying at the camp of course, given their duties. Gregory had heard around the fire that Bolut didn't take the courtesans into the human lands. Humans were apparently quite a bit less restrained than orcs when the girls started their entertainments. The big orc theorised that this was probably due to their repressed sexual practices of only allowing the act behind closed doors and keeping much of the body hidden under their clothes. Gregory felt he should argue that point, but he was slightly disturbed to find that he didn't quite know how.\n\nStill, he wasn't sure humanity was quite ready for fucking like rabbits in the street just yet.\n\n* * * * *\n\nMaking his way to the place he'd unofficially branded the Training Glade, he realised he was feeling considerably better about himself. Janette and Bolut had a point, and he'd done alright for himself. Especially after being hurled into a parallel dimension filled with mythological creatures that mostly seemed to want to either screw his brains out, bash them in, or in some special cases, both. He'd somehow managed to get himself a free pass to ravish a number of beautiful ladies, and if Bolut's caravan returned safely it seemed like he'd have quite the small fortune on his hands. His new pack had accepted him, and he'd managed to face up to some seriously dangerous orcs and survive.\n\nAnd he'd only nearly died once!\n\nWhen he saw Algra standing in the glade in all her fierce beauty, he came to another quick realisation: Some things were very much worth dying for.\n\nIt didn't surprise him that she turned to knowingly look upon him where he emerged from the tree line. The beautiful orc had the senses of a wolf, and he'd made no effort to silence his approach to the glade.\n\nWhat startled Gregory was the sight of his favourite emerald-skinned lady standing in the glade without a scrap of clothing covering her body. Even after all the times they had been together she was still breathtaking to behold in her alien beauty. She stood tall and proud, with her chin held high and a little mysterious smile playing around her small, white tusks. The wild mane of her black hair had been given attention for the first time since he'd known her. She had shaved the area about her temples to leave a thick Mohawk of wild black hair rising up across the top of her head and down to hang between her shoulders in a succession of intricately interlinking braids. The midnight colour of her hair contrasted against the gleaming golden rings linking those braids together.\n\nAlgra had always been a formidable figure to behold but in that place, with the golden light shining across her gorgeous figure, he saw that she could quite easily hold the mantle of a queen.\n\nHer nude body stood delectably firm and gloriously honed. The radiant image was highlighted by a thin layer of oil coating those appealing curves and scintillating slopes, making her skin gleam in a way that made his mouth water.\n\nWhatever the reason for her newfound attention to her appearance, it certainly had a notable effect on Gregory. Before he quite gathered the faculties to consciously make any decisions he realised he was already running toward her. In fact, he was sprinting so fast that the world at his feet was a blur. When he finally reached her, she welcomed him into her arms as he grasped her about her waist and melded his mouth against hers.\n\nThe kiss that followed was downright ravenous. Passion sizzled through his blood and he felt her naked form ignite with a primal lust of her own. Words were quite simply beyond him. His curiosity fell to the wayside in favour of feeling her body pressed to his.\n\nShe welcomed him with an eager and loving embrace, tasting the heady flavour of his lips and feeling the familiar flutter deep inside herself at having her lover so close once again. They both enjoyed that moment just after the first contact, where the sizzle of excitement and anticipation melted into a familiar greeting of flesh caressing flesh.\n\nThe oil she had lightly applied to her smooth skin had the exotic scent of the wildflowers in the surrounding jungle. He breathed her in, breaking their kiss only a moment to look down into her eyes. Given his earlier trickery, he half expected to be paid back in kind. To find a fist smashing up from nowhere or to be shifted into a painful hold. Both of them knew it was easily within her abilities.\n\nHe didn't give a damn.\n\nInstead of pummelling him, she instead reached down between them with both hands to tear apart the leather trunks he was wearing. It might have understandably terrified the average male to have so much raw power working so closely to such sensitive equipment. Gregory proved he was far from average, instinctively shifting his body against hers as his already aching length sprung up into her waiting hands.\n\nIt was a unique pleasure to hold him there, with their bodies surrounding her firm grip. She watched his eyes glaze and his breath catch in his throat at the uniquely pleasant feeling of her hand stroking along his bare cock.\n\n\"Rise, my master,\" Algra purred the words forth as a velvet caress to his ears.\n\nIt took him a moment to actually understand those words given that as far as he could tell he was very much \"risen.\" Hell, if he arose any more he might put someone's eye out.\n\nIt was only when she lifted one hand to gently push at his shoulder that he got the idea and stood upright just how she wanted. Raising herself onto her knees and never releasing his cock from her enclosed fingers, she presented herself before him with a sultry smile.\n\nGregory got the distinct idea that he was missing something quite important that was happening. If he could have concentrated for more than three seconds he might have actually figured out why Algra was waiting for him in the glade. As it was, she was far too distracting for him to care about the slightly odd circumstances.\n\nTheir sex was different to this. It was more a collision of mutual passions and a deep and ever-growing love than anything quite so formal or submissive as Algra was currently being. Even the way she had laced the word master had sounded a lot more like Talina than the beautiful orc woman. Gregory wasn't too ashamed to admit that having such a powerful woman offer herself like that was one hell of a turn-on. If he'd known the full implications of what they were currently doing, he might have thought twice about it.\n\nExcept Algra was determined not to give him that chance, and she stunned him with her next action. Lifting herself up on her knees, she grasped her breasts and lifted the jade globes around his jutting length.\n\n\"Algra,\" his utterance of her name fell somewhere between a moan and a growl.\n\nThe sound of her name on the air urged her on in her ministrations and soon enough she was enjoying the feel of his hardness slipping between her gleaming tits. It wasn't completely necessary to go quite so far in the act she had planned, but she had seen Janette administer a similar pleasure to him before and he'd seemed to enjoy it quite a bit.\n\nApparently Janette wasn't the only one who could impress with such an act. She quite clearly had Gregory in thrall as the fleshy pillows bounced with his rigid length resting between them. She watched the plump head of his cock pop out of her cleavage several times before lowering her head to let her tongue softly lap at the glistening bulb each time it appeared.\n\nHis hand fell upon her shoulder to steady himself when his knees threatened to buckle. She happily accepted the way his entire body leaned in against her and even encouraged the action by letting his balls slip between her tits and wrapping her lips around the spot she'd previously been licking.\n\nDespite wanting desperately to tell her how good she was making him feel, he found the only sound he was capable of making was a guttural grunt. She understood perfectly, and felt the hot steely cock throb with an imminent release. Sensing the end was nigh, Algra relaxed her grip on him and gave him one final slurp before blinking up at him and seeing his eyes closed tightly in an expression clearly verging on the edge of release.\n\nIt was right where she wanted him.\n\nShe set off a fresh spark of pleasure by flicking her tongue across the tip of his cock to allow it to bounce between her lower tusks before being ensnared by the soft seams of her lips. Her hands slid up around his strong thighs, gripping the firm muscle tightly and slowly pulling herself towards him. In each passing moment, Gregory had to fight away the urge to let go and spend himself on her tongue. It was almost excruciating to restrain himself, and yet with each passing moment her mouth felt so much better as she suckled him further between her lips.\n\nIt was a strangely unique sensation to feel her so tenderly massaging his cock with her tongue, and the way she slowly slid him deeper into her mouth might have surprised him if he could have formed a coherent thought. Algra didn't tend to spend much time on foreplay, presumably finding better uses for his hardened member than as a lollipop. Given the orc female's natural athleticism and incredible pussy it wasn't exactly a problem for their sex life that she preferred to get down to business. The times when she had taken him into her mouth had mostly been exploratory or playful in their nature. This time it seemed more like she was trying to hone fellatio into a fine art form.\n\nThe feel of her tongue gently massaging the underside of his length became all-consuming as she took more and more of him into her mouth. That gentle, wet caress halted when the engorged peak reached the entrance to her throat. She had never taken him so far before, and it took two attempts to avoid the reflex to pull away. In the end she used her grip on his thighs to pull herself closer and closed her eyes to swallow him into the tightness of her throat.\n\n\"Fuck! Algra that's...\"\n\nGregory quaked on unsure legs at the surge of pleasure she gave him. The experience of feeling her training herself to take him in such a fashion was more than he could take. Three times she slipped him from her throat, only to repeat the action and gulp him down once again. He wanted to tell her how incredible she made him feel, but her actions made breathing difficult. Speaking was almost out of the question. It was fortunate, in a way, because he certainly didn't have a word for the effect she was having on him. He'd probably have said it was \"orgazmocreduriffic,\" and that would just have been embarrassing.\n\nInstead of speaking, his body took the only action possible and sent a riptide of sizzling ecstasy through his body and pulsed fresh, creamy cum through his length. She'd seen the signs and felt those familiar pulses along her tongue just in time to slip her head back with her lips firmly sealed around his cock to drink deeply when he released the first heated gush into her mouth.\n\nIt wasn't the flavour or the texture of that lewd drink, but rather the desire to pleasure her mate which put the sudden deep thirst in her belly. He spilled himself across her tongue and she greedily swallowed every drop whilst he rode the wave of white fire through its crest and on to the shore beyond. Algra suckled at first with need, pulling him deep into her mouth before the eruption gave way and she settled her head into a gentle bobbing motion to savour his taste in the aftermath.\n\nGregory finally managed to open his eyes and watch the gorgeous creature kneeling before him, lapping at his organ with such obvious pleasure. A deep breath was taken before he reached down to run his hand across the large and unruly Mohawk atop her head. He'd never quite seen the style presented as Algra wore it. Instead of a thin like of rigid spikes, it was thick and wild as it swept back into the long braid that now swished across the green curves of her rear. He expected some type of styling agent in the black strands, but felt only the natural softness of her hair lifted only by its own thickness and determination.\n\n\"I love this,\" he admired the style along with the sight of the woman still tenderly pleasuring him.\n\nThe compliment finally made her relinquish him from between her lips. She released her grip on his legs to stroke the glistening member with one hand whilst using the other to pleasure herself.\n\n\"It is not seen among humans,\" Algra noted.\n\n\"Well it's fucking gorgeous on orcs. Maybe we should try it out.\" Their eyes met and he smiled down upon her.\n\nThe words made her heart thunder in her chest. It was a strange thing to be knelt before a human experiencing a thrill she never thought she would know again. Knowing that he might not enjoy her new look had troubled her twofold. First that he might find her less appealing, and even more so that she found herself caring so deeply about such a trivial thing.\n\nIt seemed that she needn't have worried about the former issue, and she was currently working on seeing to the latter being more acceptable to her pride. True to form, Gregory's insatiable length lost little of its rigidity in the moments after his climax. All it took was a few minutes of watching the stunning, naked orc before him for fresh steel to temper through his length.\n\nIt was then his turn to take the initiative, giving her bare shoulder a firm push that she allowed to lay her down on the soft grass. Her legs stretched languidly, releasing the tension built up from crouching before him and spreading open her thighs to suggest a suitable target for their next round.\n\nIt didn't take him long to take the bait, taking just a moment to enjoy the exquisite view down between those perfectly toned legs to the glistening treasure between them. A quick jolt of elation sent a shiver through her body when she saw him run the tip of his tongue across his lips. His habit of tasting her was definitely a happy perk of taking a human lover. Orc males seldom lavished such attention on their mates. Their tusks were too large, or at least that was their excuse.\n\nShe tensed with anticipation upon feeling his hands grasp her knees whilst he laid before her to lower his head between her legs. He always started with a little kiss, as if greeting an old friend. It was a gentle prelude that allowed him to settle her taste on his lips. She watched him with an amused little smile as his head lifted for a moment as he considered her like a puzzle-box. In their first days, this had annoyed her quite a bit given she wasn't exactly the patient sort. After months of being together, she had come to appreciate the little reverie more after figuring out he wasn't holding back so much as plotting exactly how he would force her climax.\n\nIt only took a few moments before his lips descended and she could fully appreciate his plan. Making a soft seal of his mouth, he gently lifted her outer lips to slip his tongue across the fleshy lips. She moaned appreciatively and relaxed her head against the ground to close her eyes and enjoy the ride. The hardened tip of his tongue then wiggled its way inside her to slowly lick up the length of her slit and soften to lightly flick across her clit. His hands slipped beneath her thighs before rising across her hips to wrap his arms about her legs. Knowing the strength of his lover, it was much safer to keep a firm grip on her.\n\nLooking up over her taut belly, he watched her breath hitch in her chest as he swished his tongue across her naked sex and swallowed down the rich love juice that flowed from inside her. Her full breasts jiggled enticingly with a natural allure as he watched just how good he was making her feel. A louder gasp followed as he plunged his tongue deep inside her, exploring the deep channel and tasting the flavour of her depths.\n\nAlgra ran her fingers through the grass and slowly gyrated her hips in unison with the movements of his tongue. Her lips parted as her breathing matched the rhythm of waves crashing against the shore amidst a rising storm. She lifted her hands from the earth to cup her breasts, pinching her hardened nipples and offering quite the wanton show for Gregory's appreciative gaze.\n\nShe felt the touch of his fingers parting her lower lips before his tongue pressed upwards, the thick muscle stroking across her clit in slow movements as the tip continued to dance inside her. A growl of lust rumbled inside her chest, she squirmed in an effort to press him more rapidly against her little nub of pleasure. He happily granted the unspoken request by licking across her sodden folds to quickly swirl his tongue across those tightly packed nerves, sending a sudden shockwave of blissful pressure seemingly right down to the bone."
    ],
    "authorname": "Lien_Geller",
    "tags": [
        "team games",
        "arena",
        "cat girl",
        "harem",
        "elf witch",
        "teen",
        "training",
        "orc"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-missing-dragon-ch-04"
}