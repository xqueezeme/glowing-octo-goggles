{
    "title": "Secuction Ch. 02",
    "pages": [
        "[Refresher: Zach and Nicki are high school seniors stumbling their way through the wonders of sex with the aid of Nicki's mother, Mandy who is using her supposed good intentions to support her own sexual desires for Zach's ten inch fat cock. In Chapter 1, Mandy seduced Zach after his failed attempt at sex with GF, Nicki. Nicki catches her mother sucking and fucking Zach but just watches. Mandy has set the stage as she sent Zach, with his newly acquired knowledge; to take her daughter's cherry.] \n\nMandy was stepping out of her shower. She wrapped a towel around her blonde hair and then one around her chest and tucked in between her breasts. It was a large towel and it covered from mid-thigh to her underarms. She was humming to herself as she walked into the bedroom and into a huge walk-in closet. She retrieved a hidden key and unlocked a cabinet door and pushed a few buttons and a video screen crackled to life. It was in full color and was high definition. She pushed a couple more buttons as images flashed quickly across the screen. She pushed another button and the flashing images stopped and she watched the playback of the living room security camera from the moment Zach and Nicki sat down on the couch. The monitor showed the main screen chosen to watch and three other smaller views of other rooms in the house at the same time. \n\nAs the scene on the main monitor showed Nicki pulling Zach's cock from his pants she started getting horny again. She dropped the towel around her body and her fingers went to her pussy. She was getting wet again. She watched the entire show on the main screen. She noted the dining room smaller screen of herself pulling her panties off and when she was almost caught by Nicki when she raced through the dining room and up the stairs. She stroked herself to a massive orgasm as she watch herself giving Zach a blowjob. \n\nThen she went rigid. In her peripheral vision she notice movement on the dining room screen and gasped out loud when she clearly saw Nicki watching Zach and her sucking and fucking. \"Oh fuck..Oh fuck. This is not good. What in the hell was I thinking,\" she said out loud to herself. She then thought, 'I wasn't thinking at all.' She went back to frigging herself viciously as she watched herself fucking on Zach's cock. 'Jesus Christ that is hot. What a gorgeous cock he has,' she thought. \n\nMandy shut down the security system and closed the cabinet door. No one, not even Nicki, knew about the cameras that she had professionally installed before they even moved in. They covered all of the downstairs except the bathroom, of course, and all around the outside yard. The bedrooms on the second floor had no cameras but the hallway did. She walked back into the bathroom and cleaned herself up again. She was trying to decide if she was going to confess having sex with Nicki's boyfriend or not. After all she was totally busted and the video proved it. \n\n^^^^^^ \n\nWhen Zach got home his dad was in the living room watching TV. He stuck his head in and said, \"Hi Dad. How was your day?\" He got back the same response as always. \"I'm going to take a shower and I will be right down. Did I miss dinner?\" He didn't wait for a response. He raced up the stairs to his room and took his clothes off. His underwear was so sticky he had to peel them from his dick. 'Jesus, what a mess,' he thought. He decided he had better wash them out in the sink before he tossed them in the laundry hamper. \n\nI walked naked across the hall to the bathroom and started the shower. While the water was getting hot I brushed my teeth. I was savoring the taste of Nicki's pussy all the way home but I figured I didn't need my dad getting a whiff of my breath.  \n\nIn the shower I was washing myself from head to toe and as always paid more attention to my crotch. My cock rose to attention, as always and I jerked myself off with slick soapy hands, as always. My cum splattered onto the shower floor and with some difficulty was washed down the drain. When I was done I stepped out of the shower. I dried myself off and went back into my bedroom to pull on some gym shorts and a tee-shirt. I went commando. \n\nWhen I sat down on the couch in the Living room my dad picked up the remote control and hit the mute button. He said, \"Zach we need to have a talk. When you stuck your head in to say hi before you went upstairs I noticed an unmistakable smell of sex on you. Are you and Nicki having sex?\" \n\n'Oh fuck,' I thought. I ummmmed and aaahhhhed as usual until he cut me off. \"Zach. There is nothing to be embarrassed about. I just want to help as much as you will let me. I know this time in your life is very difficult to wade through. I've been there and I remember how hard it was to figure things out and not be a total bumbling idiot. I'm sure Nicki is in the same boat and she is expecting you to be the expert and guide her as you experiment. Zach. I can help if you'll let me.\" \n\nI opened up totally to him about what had happened today. I left the part about Nicki's mom though. He explained some things I was still confused about, like the difference between putting my cock in her pussy versus putting it in her ass-hole (which I had heard some of the guys talk about). He explained that intercourse in a pussy was the normal way and was where you put your cock if you want to make a baby. Cumming in her ass would not make a baby. He continued by saying that many women don't like having their ass fucked. It can be painful. Some women love it. He said that she and I would have to figure that one out on our own. \n\nI loved our talk. He was very matter of fact and open about everything I asked about and even brought up some things that I had never even thought about. When we were talked out he said, \"Zach. I know you are a good boy and I know you will always treat Nicki or whoever with care and respect. We have talked about a lot of topics, but don't think for a minute that you know anything expect facts. Sex is so much more than facts. You are going to have to experience all the aspects of sex yourself and decide between you and your partner what you like and don't like. Always be up front with your partner. If you want her to do something ask her. Ask her to do the same with you. There are an infinity of emotions and sensations that you will encounter. I envy your journey. Enjoy it but always be mindful of her emotions because as a woman hers will likely be totally different from yours. It's just part of the mystery.\" \n\nWe had talked for more than three hours and it was late. I got off the couch and leaned down and hugged my dad and said, \"Thanks dad. I never imagined that a talk with you on this subject would be enjoyable.\" He hugged me back and smiled at me. \"I'll see you in the morning.\" \n\nIt was Saturday morning and the weather was hot and humid. I called Nicki and asked her if she would like to go to the beach or something. She did. I told her I would drive over and pick her up in a half hour. I told my dad where I was going and chugged down a cup of coffee. I pulled on my bathing suit. Being a competitive swimmer, my only bathing suit was a skimpy speed-o. I looked at myself in the mirror and I liked what I saw. My shoulders are broad and my waist and hips are narrow with firm pectorals and ripped abs, arms and legs. I pulled on some shorts over the bathing suit and a knit short-sleeved shirt over my head. I ran my fingers through my hair to mess it up a little. Nicki had told me she liked it that way. \n\nI bounded down the stairs and found my new pair of cross-trainers and pulled them on my feet. I yelled bye to my dad and slammed the front door on my way out. I jumped in my car and drove the fifteen minutes to Nicki's house. I was five minutes early. I guess I was anxious to see her. \n\nI rang the front doorbell and the door instantly opened. Mandy was standing there in her bikini and a transparent cover-up over it. She looked incredibly gorgeous as she always did. I must have had a confused look on my face because she explained, \"After you called, Nicki told me what your plans were and she asked if I would like to come too. It sounded like a good time. I don't get many good times.\" She winked at me. I gulped hard and my cock jumped in my bathing suit. At that moment I knew that wearing the speed-o was going to be a huge mistake. My cock bulged out in front even when it was soft. I had never had a boner during a swim meet but I was getting one now and the suit was not going to contain it very well. This was going to be an embarrassment of massive proportions. I gulped hard again. \n\nMandy invited me in and shut the door behind me. She walked from the foyer toward the kitchen in her high heeled sandals. Her hips swayed as she walked. I followed. She stood leaning back against the counter and asked if I would like a cup of coffee. I declined. I felt very awkward with her and she said, \"Zach. Sweetie. Relax.\" I smiled and leaned back in my chair and pushed my feet out straight in front of me. She looked down at me and smiled. \n\nFive minutes later Nicki walked into the kitchen. She was stunning. I just stared at her with my mouth open until Nicki said, \"What? Why are you looking at me like that?\" \n\nMandy watched the whole thing and said, \"Nicki. I think he just swallowed his tongue. You look amazing.\" I shut my mouth and moved in and kissed her on the lips. She kissed me back as she looked at her mother. She was never sure how her mother felt about her kissing boyfriends in front of her. \n\nWe broke the kiss and I said, \"Have you got all your stuff together? Are we ready to go?\" Both Mandy and Nicki nodded. I grabbed the beach bags and followed them through the front door. Mandy shut and locked the door behind me and we all piled into my car. Nicki sat in front and Mandy maneuvered herself into the backseat. She sat in the middle and she was all I could see when I looked in the rear-view mirror. When I look back she would smile and flick her tongue along her bottom lip. I tried to stop looking. \n\nWe found a spot of sand without tons of other people sitting on top of us. Nicki and Mandy worked together to spread out a couple of blankets. Nicki stripped down to her thong bikini. My dick surged when she turned 360 degrees to show herself off. Mandy did the same. She also was wearing a thong bikini that made her stand out among the sea of bikinis on the beach. Both of them were absolutely stunning. Mother and daughter and it was a toss-up as to which one was more beautiful. \n\nI made no move to remove my shorts. I could feel my cock, in its current state, would not be contained in my skimpy speed-o. Nicki said, \"Come on Zach. It's your turn. Get those shorts off.\" She knew that as a swimmer, I would be wearing a speed-o. I had told her once that it was the only bathing suit I owned. She had never seen me in it as she never came to swim practice and she had never been to a swim meet either. She wanted to see me in it now. \n\nMandy knelt down on a blanket and watched Nicki and I going back and forth. I took my shirt off and Nicki and her mother stared at my torso. Mandy looked at Nicki and Nicki looked back at her and said, \"Hubba.. Hubba. Very nice package, huh mom?\" Mandy couldn't take her eyes off me and she just nodded. I could see her nipples harden under her extremely undersized bikini top. \n\nMandy said, \"Come on Zach. You get to ogle us in our suits. It's our turn.\" Nicki knew that her mother had seen and tried out everything that her boyfriend had to show and Mandy knew that she knew from the security video. Of course Zach didn't know that Nicki knew about him and her mother and he also didn't know that Mandy knew that she knew. I was the only one completely in the dark. \n\nNicki leaned into her mother and whispered something I didn't catch. Mandy smiled and nodded. I lay down on the blanket and as soon as I had laid back both of them leaped to their feet and threw themselves on me. Mandy held me down while Nicki unbuckled my pants and pulled my zipper down. I was struggling to stop them and objecting verbally. As my shorts slipped past my hips everything stopped. Mandy was sitting on my chest looking down at Nicki as she had pulled my shorts down to reveal my speed-o suit. They both looked from my crotch to each other. Mandy said to Nicki, \"Holy Shit. Look at that thing. Nicki was licking her lower lip. \n\nMandy pushed herself off my chest and knelt on the blanket beside me. I looked at her as she was staring at my cock that was pushed several inches out of my speed-o. It was as hard as a steel pipe. I looked down at what they both were staring at and said, \"See why I didn't want to take my shorts off.\" Mandy knelt absolutely still. She was breathing heavily as she continued to stare at my cock lying on my stomach held in place by the elastic band of my speed-o. It was pulsing up and down with my heart beat. \n\nWithout even thinking first, Nicki reached down and began pushing my cock back into my suit. It surge with her touch. There was just no way that was going to happen until it went completely soft. Mandy's trance broke and she said, \"Nicki you had better pull his shorts back up before we get arrested.\" She abandoned her efforts on my cock and pulled my shorts back up. I lifted my hips to aid her efforts. I zipped up and buckled the belt. \n\nI was totally embarrassed so I rolled onto my stomach to hide it. Nothing more was said by anyone. Mandy and Nicki moved up and lay down on the blankets face down. They both knew that the sudden stream of guys walking up the beach was so they could ogle their asses on the way by. After several minutes Nicki moved over beside me. She rubbed my back and quietly said, \"Zach. I'm sorry we embarrassed you. Can you turn on your back so I can cuddle with you?\" I moved over onto my back as she requested and she pushed herself up against my side and rested her head on my shoulder. I wrapped my arm around her shoulder and pulled her in tight. I kissed her on the forehead and she kissed my nipple. \n\nMandy had her head turned in our direction and she watched Nicki snuggle into me. She could feel the moisture collecting in her crotch. Fortunately, the material of her bottom would not show a different color when it was wet. She pushed herself up to her feet and said, \"I'm going to take a stroll down the beach.\" \n\nNicki rolled over and shielded her eyes and said, \"OK. Mom. When Zach can get his equipment in that tiny little suit, we'll catch up. Nicki was still adamant that she was going to see Zach in that suit.\" \n\nMandy headed off down the beach. She knew she would attract a lot of attention with her looks and body. She was surprised at how many men walked by and said, \"Hi Mandy.\" Everyone would walk by and then turn to watch her walk away. She thought that the ones who knew her name must work at her company. She didn't normally show this much skin at places that her employees would be and she hadn't thought this through enough. She expected that she would find all kinds of photos of her on the many bulletin boards around the factory floor. She just smiled to herself and kept on walking. \n\nNicki's head was still resting on Zach's shoulder and every once in a while she would lift the waist band of his shorts to see if his cock was getting soft enough to get into his suit. She would reach down and push the tip down and it would push right back to where it was. She would giggle at the response. She noticed people walking by and pointing at them when they would catch her with her hands in his pants. \n\nIt was quite a while before Zach shrugged her head off and sat up. He reached down and made some adjustment inside his shorts and then he stood up and pulled his shorts down and kicked them off. His cock was completely encased in my tiny little speed-o. It wasn't completely flaccid but it was heading in that direction. She stared up at him shielding her eyes and scanning him from head to toe. Her gaze settled on his crotch. She said, \"Zach. Maybe you should just wear your shorts.\" \n\nI looked down and said, \"Why. This is about what it looks like at swim practice and meets.\" \n\nShe decided that she needed to pay more attention to swim practice and swim meets. \"Ok. Let's walk down the beach and catch up to mom,\" she said. We walked hand in hand. I had to look anywhere but at her or I would be out of this suit again. I had decided to carry my shorts, just in case. Everyone stared at us as we walked by at water's edge. We were coming up on a group of twenty-something women and one of them was pointing at us and I overheard her say, \"Holy shit. Look at that.\" They all stopped and stood there and watch us walk by. \n\nMandy had been stopped by a group of men. They apparently didn't work at her company but they wanted to meet her and maybe get a phone number or something. Mandy was polite and talked with them for a while. It gave us time to catch up. Nicki broke away from me and ran through the clutch of guys and grabbed her mother and jumped up and kissed her on the cheek. Mandy turned to the guys and said, \"Gentlemen, this is my daughter.\" She didn't give her name or Nicki's. She hadn't given any information that would allow any of them to track her down. She excused herself and continued walking hand in hand with Nicki. \n\nZach caught up and separated Mandy and Nicki and inserted himself in the middle between them. Mandy said that she was looking for a rest room. We found a public toilet building and walked toward it. The building had men's and women's entrances on opposite sides of the building. I headed one way and they headed the other. \n\nI had to make some further adjustments so I found an open stall. I happened to be in the handicapped stall. I washed my face to get the sand off. I had no sooner got my completely flaccid cock in its usual place in my suit when the stall door pushed inward. It was Mandy and she wasted no time squatting down and pulling my suit down to my knees. Without a word, she grabbed my cock and shoved it into her mouth. \"Mmmmmpppphhhhh\" was the only sound. I don't think my cock ever grew from completely soft to completely hard faster. She engulfed my cock and my head flew back as \"UUUUnnnnnggggghhhhh\" escaped from my throat. \n\nShe hadn't deep-throated me yesterday but she was right now. The sensation was incredible and \"UUUUUnnnnnnnngggggghhhh\" escaped again. She continued furiously throat fucking me. She knew I wouldn't last long and that is what she was working on so she could get in and back out before she got caught my Nicki. I told Mandy that I was going to cum. She just nodded her head. I would learn with time that experienced women knew that I guy was about to cum from the constriction in his balls and the expansion of his cock. Again I groaned, \"UUUNNNNNGGGGHHHH,\" as a massive loud of cum launched from my cock into her mouth. She took the first stream into her mouth and held it. She pulled her head off immediately and pointed my cock down. She had pulled her bottom triangle away from her body and the second and third ropes fired into her suit. She had pulled her tiny bathing suit top up over her tits and she aimed the last two shots onto her tits. The final couple of shots she aimed it into her hair. \n\nWhen the final small shots of cum drooled out, she stuck out her tongue to collect them. She stood up and showed me my cum in her mouth. She pushed it around with her tongue and then pushed it out of her mouth in a big bubble and sucked it back in. Then she made a big show of swallowing it. I could see her throat working on getting it down. She pulled her suit bottom out and pushed her hands down inside. She squished the double shot around her pussy. She then rubbed my cum all around both tits and put the tiny little top back in place over her nipples which were as hard as nails. \n\nWith cum on her lower lip she stood up on her toes and kissed me hard on my lips. I kissed her back. She moved over in front of the mirror and made some adjustments. She ran her fingers through the gobs of cum in her hair. When she was satisfied she turned to the door and when she knew there was no one else in the room, she walked out the door and circled the building to the ladies room side of the building. Nicki wasn't outside waiting for her so she just positioned herself like she was waiting for Nicki. ",
        "Less than a minute later Nicki came out and together they walked around to the Men's room. Zach knew he wasn't going to get his stiff hard cock back in the suit so I pulled my shorts up and buckled the belt. When I walked outside Nicki started laughing. I said, \"What's wrong?\" \n\nNicki was still laughing and said, \"What do you think mom? Is that a good look?\" \n\nMandy was laughing too. She covered her mouth with her hand and said, \"If you want to get off this beach alive I would suggest that you zip up your shorts.\" \n\nMy hands flew to my crotch. 'Jesus Christ.' My cock was poking straight out of my pants a good five inches. I pushed it inside and zipped up my pants. More embarrassment. I turned beet-red. Both Nicki and Mandy saw my face and they both rushed up and wrapped their arms around me. Mandy said, \"Oh Zach, we were just teasing you a little. Don't be embarrassed. Any guy on this beach wishes he was you right now.\" \n\nI guess she was probably right. I wrapped my arms around both of them. Nicki placed her hand on the front of my pants and said, \"Jesus, you are hard again. What happened?\" \n\nI looked at her and said, \"There is no telling what happened. This thing has a mind of its own.\" I left it at that. Mandy winked up at me as I hugged her into me. \n\nWe walked back to our blankets getting just as many stares as before. We soaked up the sun and I fell asleep on my back. I put my shirt over my eyes to shade them from the sun. When I woke up Nicki and Mandy were sitting there propped up on their arms watching the people walk by. This position thrust their tits forward. They both knew exactly what they were doing to every guy who walked by. I said, \"Are you guys having fun tormenting all the guys on the beach.\" They looked over at me and then at each other and both broke into huge grins and started giggling. \n\nAs the sun was getting low in the sky we gathered our stuff and headed back to my car. The ladies wore just their suits. They didn't bother to put on their cover-ups. When we drove into the driveway Mandy spoke from the backseat, \"Zach, please stay for dinner.\" Nicki turned to me with a pleading look on her face. \n\nI looked into the rear-view mirror and said, \"Thank you Mandy. I would like that. I'll call my dad to let him know.\" \n\nBoth Mandy and Nicki headed up the stairs as we came in the front door. Mandy stopped half way up and turned and said, \"Zach, you can get cleaned up in the downstairs bathroom. Feel free to take a shower. There are towels in the closet.\" She turned back and went up the stairs. Nicki's gorgeous ass had already disappeared and I stood there and watched until Mandy's ass was gone. My cock stirred again. \n\nI went into the bathroom and pulled a large towel from the closet. I turned on the water and adjusted the temperature. I pulled my shirt and shorts and speed-o off and stepped into the cascading water. I found some shampoo and washed my hair. There was a new bar of soap still in the paper. I used it to wash myself all over. I decided to jerk myself off like I normally do in the shower. With the memory of Mandy's blowjob in the men's room fresh in his mind, it didn't take long. \n\nStanding in front of the mirror with a semi-woody sticking out, I rubbed the towel to dry my hair and then I dried myself off. I put my shirt and shorts back on. I left the speed-o off, so I was going commando again. I walked back out to the foyer and placed my bathing suit on a table by the door so I wouldn't forget it. I went back into the kitchen and called my dad. \n\n^^^^^ \n\nUpstairs Nicki was luxuriating in her shower. She had been in there a long time just sitting on the seat as water fell on her head. She was thinking about yesterday. The fact that she saw her mother and her boyfriend engaged in every form of sex she knew of was consuming her. She didn't like how it was making her feel. She had to do something. She had to at least confront her mother to work this out. She hated being angry with her boyfriend but it was worse to be angry with her mother. She decided that she was just going to confront her and see if she lies. \n\nShe stood up and shut the shower off. She wrapped a towel around her body and walked down the hall to her mother's room. Mandy was just coming out of her bathroom with a terry cloth robe wrapped around her. \"Hi baby. How was your shower? Mine was delicious.\" Then she noticed the look on Nicki's face and she said, \"Nicki? Something's troubling you. What is it?\" She knew what it was. \n\nNicki looked right into her mother's face and blurted it out, \"Mom, I know you came home early yesterday and caught Zach and me in the Living-room. I need to talk about it.\" She stopped right there for the moment to see what her mom would say. \n\nMandy looked down with a shameful look on her face. She knew that Nicki had seen everything. She said, \"Nicki, baby. I confess that everything you just said is true. I watched you jerking off Zach's huge cock. \"Nicki could not know that her mother had cameras everywhere downstairs. She couldn't know that her mother knew exactly what Nicki had seen yesterday. There was no point in lying about it. \n\nNicki said, \"Well isn't this awkward? Did you see anything else while you were spying on us?\" \n\nHere it was. Truth time. Mandy said, \"Yes. I saw you run up the stairs crying but I couldn't figure out why. I was watching Zach's huge cock bouncing around in his lap. He was jerking himself off. I was so horny watching you guys and it has been so long since I have seen any cock and I have never seen a cock like Zach's. I stood in the Dining Room masturbating. I went brain dead and I walked in on him. He was very embarrassed and all I could see was his bouncing cock. I bent down and gave him a blowjob and then I sat in his lap and fucked him until I had an orgasm and then he came in me. I'm sorry baby. I just lost my mind.\" \n\nNicki smiled at her mother and said, \"I'm angry that you did that but thank you for telling me the truth. I watched the whole thing and I was so incredibly horny. You must go nuts not having a boyfriend or someone to take care of you. You said something about masturbating. What is that?\" \n\nMandy laughed and said, \"Without masturbation I would have gone crazy years ago. That is when you use your own fingers or a dildo of something to simulate a cock and you fuck yourself or rub your clitoris until you have an orgasm. Whenever I feel horny that's what I do, at least before yesterday. Have you had an orgasm before?\" \n\n\"I'm pretty sure I had one yesterday when Zach was fingering me and another one when he was fucking me.\" She laughed and said, \"I guess it's time for honesty all around. Oh mom, it hurt awful when he put his cock all the way in my pussy, but it was so wonderful. Those orgasm things are amazing. I thought I was peeing myself. Do you mean that I can make myself feel the same sensation by myself?\" \n\nMandy grinned and said, \"Yes, baby you can. I will show you how. If you want, we can go shopping and get you a dildo.\" \n\nNicki looked down at her feet and said very quietly, \"Mom, Zach is staying for dinner. Do you think we could all three have sex together. You can show me how to masturbate and we can share his cock. He seems to never get soft and he cums tons. Do you know he can cum from my bed all the way to the wall by the door?\" \n\nMandy just smiled because she knew only too well how hard Zach cummed. She said, \"Nicki, baby. I would love to do anything you want. Do you want to bring it up with Zach after dinner?\" \n\nShe nodded vigorously. She was so excited. She threw her arms around her mom's neck and kissed her on the cheek. She jumped up and ran down the hall to her room. Mandy sat there for a moment and thought, 'This is working out better than she could ever have hoped.' She smiled and went back into the bathroom to get dressed for dinner. \n\nZach was sitting on the couch in the living room. He had turned on the stereo. He was leaning back with his eyes closed just thinking about everything that had happened between him and Nicki and him and Mandy. He hoped that Nicki didn't find out about him having sex with her mother yesterday or today. He wasn't going to say anything that was for sure. His cock started moving around in his shorts. The more he thought about it the harder it got. \n\nWhen Nicki and Mandy came down the stairs and into the living room together he had a raging hard-on that bulged out in his shorts. He knew he should stand when women walked into a room but he thought better of it given the circumstances. \n\nNicki flew across the room and landed right in his lap. His eyes went wide as she came flying in. When she landed, her eyes went wide when she felt his hard boner. \"Oh God,\" he said as he doubled over with the pain. Nicki didn't understand the situation at all and she looked confused at her mother. \n\n\"What happened Zach? Are you alright?\" \n\nMandy started laughing at Nicki, \"I would guess that you just hit him in his junk.\" I was groaning and doubled up writhing around on the couch with my hands in my crotch. \n\nNicki said, \"What do you mean? Junk?\" \n\n\"Hitting a man in his junk or his equipment or his cock and balls is extremely painful. I'm told it starts out bad and gets worse over the next several minutes.\" I looked over at Mandy and pointed at her and nodded my head indicating that she was absolutely correct. I couldn't speak. I went down on the floor and pulled myself to my knees and leaned over to put my head on the couch. I just kept groaning. My cock wasn't hard anymore. After several minutes of groaning and writhing around, the pain started to diminish. Nicki stood watching with concern. Mandy had gone to the kitchen to get dinner started. \n\nI finally stood bent over with my hands on my knees and started to breathe normally again. Nicki dropped to her knees beside me and said, \"Zach. Are you OK? I'm sorry. I don't understand those guy things. What can I do?\" She reached her hand up and started rubbing my cock through my shorts. I stood up straight and she unzipped my shorts and pulled my flaccid cock out. She ran her hand up and down the length. It was about six inches long. She looked up at me and said, \"Is this as small as it gets?\" I nodded. She kept stroking it and I must admit it was feeling much better. She pushed her head down and put the tip into her mouth. She ran her tongue around the head several times. In just seconds, my cock grew the additional four inches and expanded in girth until she could barely keep her fingers wrapped all the way around it. She pulled it out of her mouth and stared at it in amazement. \n\nMandy called from the kitchen, \"Nicki. Can you come and give me a hand please?\" I groaned out loud. \n\nNicki whispered, \"Sorry baby. Later. I promise.\" \"I'm coming mom,\" she yelled. \n\nI pushed my cock back in my shorts and zipped up. With some adjustments, I was able to stand up straight. I took a deep breath and sat back down on the couch. A few minutes later both Nicki and Mandy came in and sat down. \"We're having spaghetti and meatballs. The sauce should be hot by the time the water boils.\" I was starving. I hadn't eaten since breakfast. I knew they hadn't either since we had been together all day. \n\nAfter dinner I helped clean up and we all retired to the family room to watch some TV. Nicki and I sat on the couch and Mandy sat in a recliner chair. I looked over a couple of time at Mandy and it looked like she had fallen asleep. She had reclined and appeared to be quietly snoring. I looked at Nicki as she looked at me. She smiled and whispered, \"She falls asleep in that chair nearly every night. Sometimes I have to wake her up so she can go to bed.\" \n\nShe leaned down and unzipped my pants again. When I felt her cold fingers reach in and touch my cock, it surge to full attention in seconds. She pulled it out and started jerking on it as she watched to make sure her mother was sleeping. When she was satisfied, she laid down on the couch with her head in my lap facing me. She put the tip of my cock into her mouth and held it there as she continued jerking on it. I looked from Mandy down to see this incredibly beautiful face looking up at me with my cock sticking out of her mouth as her hand smoothly stroked from base to her lips. \n\nI leaned down as far as I could and whispered, \"Squeeze it a little tighter.\" She did and I groaned to let her know it was good. She smiled up at me around my cock head. She was flicking her tongue all around the head as she more firmly jerked on my shaft. \n\nShe lifted herself up so she was on her knees and elbows and pushed her head down my shaft. She could only get about three inches in before she gagged. I looked over at Mandy to make sure she was still asleep. Nicki looked up at me and I nodded for her to continue. She did. \n\nBesides the TV, the only sound in the room was, 'mmmmpppphhhhh .mmmmmpppphhhh... mmmpppphhhh' coming from Nicki's mouth every time she sank down my shaft. The sound was intoxicating. Nicki had my ball sack in her one hand juggling my balls. The other hand held the base of my cock. I was struggling with all my strength to keep my climax at bay. I was doing better than cumming in my pants at first touch. I smiled to myself. \n\nNicki's ass was up in the air facing toward her mother. I reached over and ran my hand down inside her pants by her ass to her pussy. Her thighs were soaking wet. I moved my hand a little further up to the source of the wet. Her pussy was sopping wet. She was going commando too. She had no panties on. I slid the edge of my hand down the length of her pussy and back again. On both passes Nicki jumped when I touched the top of her pussy. It was very sensitive.' \n\nI pushed one finger into Nicki's pussy and she came right up off my cock and a loud moan escaped her throat. I held my finger still. Nicki turned to see if her mother had stirred at all. I looked too. Nothing. Nicki pushed her head back on my cock and I resumed my finger-fucking of Nicki's pussy. As she came up off my cock she sank her pussy down onto my finger and then the reverse. Nicki was sucking my cock and fucking herself. What an erotic sight. \n\nWithout warning I couldn't hold my orgasm any longer. I suddenly remembered that we hadn't come prepared, again. I was about to cum gallons again, as usual. Nicki couldn't handle the load and I was going to spray all over their furniture. 'Oh fuck', I thought. I closed my eyes and tipped my head back on the couch. There was nothing I could do about it now. \n\nNicki hadn't thought about it either. She felt my balls tighten in her hand and she felt my cock swell in her mouth. She knew now that this was the signal he was going to cum, and soon. She pulled her head back to clamp her lips on the ridge of my glans and started jacking her hand up and down the shaft. I smiled to myself. She had learned not to stop when he was about to cum. As she had correctly assumed, the first thick rope of cum shot into her mouth all the way into her throat. Her eyes went wide and she gagged. She had no choice but to pull completely off to cough. Her hand continued to jack my cock. \n\nI felt her pull off and I thought, 'well, here we go. Cum all over the family room.' It didn't happen though. I felt a mouth push right back down my shaft before the next shot was launched. In my absolute delirium her mouth felt different. I opened my eyes and looked down to see Mandy's and Nicki's face side by side with my cock in Mandy's mouth. I groaned out an \"OH FUCK,\" as I fired my hips up into Mandy's face. Nicki was staring me right in the eyes with a huge smile on her face. Mandy was concentrating on handling the huge load of cum being forced into her mouth. She was swallowing my gooey load as fast as she could. I fired stream after stream. Mandy's eyes went wide and I saw her hand move up to Nicki's head. Mandy pulled off my cock and she pushed Nicki's head back onto it. She didn't need to be forced. This was choreographed. They were a cum-sucking team. \"Holy Shit,\" I proclaimed. \n\nWith my cock now back in Nicki's mouth I watched Mandy maneuver her cum-load around in her mouth. She couldn't handle it all and some leaked out the side of her mouth and dripped down to her chin. I watched her swallow and swallow over and over again. Then she opened her mouth to show me it was all gone. She used a finger to collect cum from her chin and pushed it into her mouth. \n\nNicki's hand had never stopped the jacking motion as she caught the last two strong surges in her mouth. She flicked her tongue around in the gooey spunk and flicked my cock head to collect any additional cum that came drooling out. With our eyes glued to each other she pulled her mouth back off my cock. She squeezed my cock tight and pulled her hand up one more time to push any remaining cum from my piss-hole. She got some so she did the same thing again and again until no more cum was squeezed out. \n\nNicki was struggling with her load. Mandy said to her, \"Nicki, baby, give it to me,\" as she leaned her head toward her daughter. Nicki turned to her. They both puckered their lips as if to kiss and then their lips were locked together. Nicki was pushing cum from her mouth into her mother's. My cock, as spent as it was, jumped with the sight. \n\nWhen the transfer was complete they leaned back from each other. Mandy turned to me and showed me that her mouth was again full of cum. My cock jumped again. She closed her mouth with pursed lips and again struggled to swallow the gooey load. Nicki watched as her mother's neck muscles heaved up and down to force the cum down. Finally, Mandy smiled at Nicki and then to me and said, \"We can't have this sticky stuff flying around my Family Room, now can we?\" \n\nThere was total silence as I looked back and forth between these two gorgeous women kneeling in front of me with my cock bouncing up and down between my legs. They stared back at me with slight smiles on their faces. Finally, I broke the silence between us and said, \"WTF? You guys staged this didn't you?\" \n\nMandy and Nicki looked at each other as if they were sending telepathic signals to each other. Mandy just smiled at me and said, \"Maybe.\" \n\nNicki turned to look at me and said, \"Yeah, maybe.\" Then she turned back to her mother and said, \"Mom, I am extremely horny right now. Can you teach me about that masturbation thing you were talking about?\" \n\nMandy smiled at her and said, \"Sure baby. I'm pretty horny myself. Take off all your clothes.\" She turned to me and said, \"You take off your clothes too there buster. We may need your assistance a little bit later.\" She stood up and pulled her dress over her head and threw it on the couch beside me. She was completely naked. The sight made my semi-hard cock jump again. \n\nNicki stood and pulled her outfit off and she was naked as well. She tossed her clothes down on top of Mandy's. They stood there looking down at me and my cock jumped right up to full attention. I looked at these gorgeous faces and amazing bodies and said, \"Holy Mother of God. I must have died and gone straight to heaven. You two are the sexiest women in the world.\" They both giggled. \n\nMandy knelt down on her knees and pulled Nicki down with her. Nicki went down on her knees facing her mother. I sat back and watched to see what they were going to do. I didn't know what Mandy meant by teaching Mandy how to masturbate. I had always thought masturbation was a guy thing. At first I thought Mandy was going to teach Nicki how to masturbate me but that isn't what was going on. Speaking of masturbation; I wrapped my hand around my boner and started slowly stroking it up and down from head to balls. \n\nMandy sat down on the carpet and then she thought better of it. She said, \"Zach, please throw our clothes over here.\" I did as instructed. Mandy spread out her dress on the floor and sat down on it with her legs crossed in front. She thought better of that position as her feet would be obscuring Nicki's view of her mother's pussy. She pushed herself so her back was against a chair and she spread her legs with her knees up to the side. Her feet were flat on the floor. Nicki got up and pushed a chair over close so she could duplicate her mother's position and still be able to see. ",
        "Mandy said, \"Nicki, I want you to watch what I do and you do the same. OK?\" Nicki nodded so vigorously I was afraid her head would snap off and roll across the floor. When Nicki was in position, Mandy reached both hand down into her crotch. Nicki mimicked her every movement. Mandy used her index and middle finger of both hands to separate her outer lips. \"These are called Labia Majora,\" she said. Nicki could see that there was another set of folds covering the entrance to her mother's pussy. Mandy then spread open her inner lips and said, \"These are called Labia Minora.\" Nicki nodded. She was remembering things from her Sex Ed class last year. The class didn't mean much then and Nicki and never tried to inspect herself. She couldn't see down there anyway. \n\nMandy continued her tour of her own pussy and Nicki followed. Mandy said, \"Zach, get down here so you can see too. You need to learn a few things too.\" I gladly did as instructed. Class was in session. \n\nMandy was already highly aroused and was breathing heavily. She didn't have to pull back her clitoral hood that protected her clitoris. Her clitoris was already erect and pushed out past the hood. I looked over at Nicki's groin to see if her pussy looked the same. Nicki was highly aroused as well and her clitoris was visible and it was a little bigger than her mother's. They were both getting very red as blood engorged them. Mandy lifted one index finger and very lightly touched her clit. Her head launched back on her shoulders and a moan shot from her mouth. She dropped her head back down and watched as Nicki did the same. Her reaction was exactly the same as her mother's. Nicki noted the surge of electricity that rocked through her entire body when she touched her clit. \n\nMandy continued as she ran her middle finger down to the middle or her separated lips and gently, being careful of her finger nails, pushed it into her vagina. Nicki did the same and moaned again as her finger pushed into her pussy. Mandy smiled at Nicki's reaction. As I watched, my cock was completely erect. I don't ever remember it being harder than right then. \n\nMandy pushed another finger into her pussy and Nicki did the same. Now Mandy began finger-fucking herself. Nicki did the same and a deep groan surged from her throat. They both continued this action for a couple of minutes. Mandy said, \"Nicki, with your fingers curled up on the top of your vagina can you feel a rough area? It's about two knuckles in between your pussy and your pubic bone.\" Mandy was maneuvering her fingers around to find hers. Nicki was watching her mother's fingers and maneuvering her own inside her pussy. When she found it her fingers stopped. Mandy smiled and said, \"That is your 'G-Spot'. Now put some pressure on it with your finger-tip and rub on it. That is where the lubrication comes from that soaks your panties when you get horny.\" Both Nicki and Mandy were maneuvering around inside their pussys. I couldn't tell what they were doing but I could visualize from Mandy's explanation. \n\nNicki blurted out, \"Oh my God. That feels incredible.\" She picked up the pace of rubbing her 'G-spot'. Mandy's breathing increased markedly as she manipulated her own 'G-spot'. I increased my pace as well. We were all moaning. \n\nSuddenly, Nicki began bucking her hips. Her fingers stayed in place. Her head hung down. Her mouth was open. Mandy knew Nicki was right on the edge of an orgasm. She said, \"Nicki. Now flick you finger lightly on your clit.\" Nicki did as instructed and her head rocked back and she screamed, \"OH FUCK..OH FUCK...OH YES...MOM, I'M CUUUUMMMIIIINNNGGGG...JESUS...FUCK.\" Her entire body was quaking with spasm after spasm. I could see her pussy behind her lips clamping and unclamping on her fingers. Mandy had stopped to watch her daughter have her first self-induced orgasm. She smiled broadly. When Nicki started to calm down Mandy looked over at me and then down at my cock as I was jacking myself off. \n\nShe said, \"Zach, I have an itch I can't reach. Can you help me?\" I didn't understand right away what she meant. Then I thought \"DUH\" to myself. I smiled as Mandy leaned over onto her back. I moved over and got between her legs. She removed her fingers from her pussy but kept her lips pulled apart. She said, \"Fuck me, Zach. I need you in me. NOW!\" I looked over at Nicki and waited for some kind of sign that it was OK. Nicki smiled and nodded as she continued to finger fuck her 'g-spot'. She had stopped fingering her clit. It was too sensitive to even touch. \n\nI pushed my bulging cock-head past Mandy's labia and into her pussy. I didn't stop as she threw her legs around me and pulled me in hard. As my balls slapped up against her I could feel my cock-head push up against something. Mandy felt it too. She lifted her head to look at me and said, \"That is my cervix. \n\nThat is as far as you go buddy.\" She dropped her head to the carpet and released her hold with her legs. Zach proceeded to fuck her rapidly with just the glans. This felt amazing to him. She looked up again and said between gasps, \"Oooohhh. You little shit. You're getting the hang of this.\" She was thrusting her hips at his pace. Her head went back down on the carpet. \n\nI started fucking her in full strokes. She was moaning and would groan deeply when I bottomed out. She lifted one hand to her tits and pinched her own nipples. She reached up and pinched my nipples. I took the hint and using both hands pressed into her soft flesh tweaking her nipples. They got hard and erect. I noticed that mine were too. Nicki watch everything closely. She was mentally taking notes. \n\nMandy said to me, \"Pull my legs up to my shoulders with your arms and hold them there.\" I did as she instructed. \"Now, lower your hips like you were pushing your cock out through my navel.\" I did. When I felt the pressure of my cock pushing into the top of her vagina I knew I was stroking my cock on her 'g-spot' as I pushed in. She screamed, \"YES..YES...THAT'S THE SPOT. OH JESUS. OH JESUS..OH FUCK. YES.\" \n\nNicki had come over closer and sat with her mom's head in her lap with the back of her head resting on Nicki's pussy. Now Mandy could watch the action more easily. Nicki was now molesting her mother's tits and twisting her nipples. Mandy was going nuts. I was too. I wanted so bad to bring Mandy to an orgasm with my cock but I was losing the battle with my balls. I could feel cum building up preparing for an all out assault on her pussy. Mandy felt the surge and she began furiously pulling her hips up onto my cock. Her teeth were clenched and her eyes were closed. Every muscle in her body was contracted in her efforts to fuck herself to orgasm on my cock. \n\nI clenched my jaw. The tendons in my neck went taught. I slammed up into her as cum shot up my shaft and into her pussy with incredible velocity and power. Mandy rocked into a massive orgasm just as my second stream unloaded as I thrust hard into her. I screamed out,\"OOOOOHHHH...FFFFUUUUCCCCK. III'MMMM CCCUUUUMMMMINNNGGGG. FFUUUCCCKKK.\" Mandy's eyes were open wide as she looked up into Nicki's face. Nicki smiled down at her mother as she was now hanging from my crotch with her legs preventing any further penetration. My hips continued to pulse up and down but Mandy's body was coming with me each time. Stream after stream of cum continued to launch into her as her orgasm went on and on. \n\nEvery muscle in my body was clenched as I gasped for air. I raised my body to facilitate my breathing. Mandy's legs slowly dropped down my sides and onto the floor with knees up. I was buried in her still and I couldn't move. I was in a catatonic state. I stopped breathing all together for nearly a minute. Mandy and Nicki were staring at me as I was looking straight through them into infinity. It was like an out of body experience that people talk about. I finally gasped air out of my lungs and gasped air back in. My gaze pulled back to focus on the two naked women in front of me. \n\nNicki said, \"Jesus, Zach. You went away somewhere. Are you OK?\" \n\nI responded, \"I am the best I have ever been. Jesus. Fuck. That was...indescribable. I don't have adequate words except, Holy fuck.\" \n\nMandy giggled and said, \"My sentiments exactly. Holy Fuck.\" \n\nNicki said, \"When is it my turn? That was amazing. There is no way you're getting out of here without doing me too.\" \n\nMandy looked up at her daughter and said, \"Did you enjoy 'beating yourself off', to steal a phrase from the male gender?\" \n\n\"It was fantastic. I'm not going to get anything done now,\" she giggled. \n\nI pulled my limp cock from Mandy's pussy. She clenched herself tight and my cock-head was trapped in her. I looked at Mandy who was grinning up at me. She finally released my cock and it fell toward the floor. Cum was drooling out of Mandy's pussy and onto her dress. Mandy pushed her hand down between her legs and swished her fingers in the cum and vaginal juices. She pulled her hand back up and shoved all of her fingers into her mouth, \"Mmmmm,\" she moaned. She dipped her fingers in her pussy again and pushed it up for Nicki to taste. Nicki licked her mother's fingers clean and moaned too, \"Mmmmmm.\" \n\nI stood up and reached down to help Mandy up. Nicki was staring at my limp dick as it glistened with cum and Mandy's juices. Nicki scooched herself across the floor until her head was beside my limp dick. She lifted her head up and wrapped her lips around my dick and sucked it all the way into her mouth. She lifted herself with her legs so my balls were on her chin. She sucked in and out. She lathed my dick from end to end with her tongue. 'Jesus, that feels so good,' I thought. She stared right up into my eyes as she cleaned my dick. She was obviously hoping that she could get it hard again but it didn't. She popped it out of her mouth and lifted her hands up to me so I could help her up. She held her clothes between her legs to collect any escaped juices from her pussy. \n\nI pulled my clothes on. Mandy and Nicki went upstairs to put on some fresh clothes. Mandy walked, with her dress between her legs, into her bathroom. She spread her legs and let the dress fall into her hands. She raised it up to her face. It was covered with a huge quantity of cum. She pushed it into her face and licked the thick cum into her mouth. She pushed the material into her mouth and sucked the cum out. Her head was swimming. She was already horny again. She searched everywhere on her dress for more cum. She couldn't get enough. She was moaning from the taste and texture. She muttered to herself, \"Jesus, I love cum. I had forgotten how much I love a man's cum.\" She leaned against the counter to steady herself. \n\n\"Mom, are you OK?\" said Nicki as she walked into the bathroom. She noted the glassy eyes and flushed skin and heavy breathing of her mother reflecting back in the mirror. Nicki was dressed again in a tee-shirt and short-shorts. She had no bra on and her nipples were very erect. She noticed that her mother was holding her dress tight to her tits. \"What's up mom?\" She moved up close behind her and wrapped her arms around and cupped her hands under her tits. Her mother's nipples were hard as nails and Nicki began slowly moving her palms over them. \n\nMandy's hand went to her pussy and she finger'fucked herself furiously as Nicki sucked on her mother's nipples. Nicki pushed her hand down into her shorts and began fingering her pussy too. There was the two of them writhing around against the counter. They were both gasping for air. Nicki's orgasm arrived first and Mandy's followed very closely behind. They both very nearly collapsed on the floor. Their legs were quivering. Their bodies were quaking in spasm after spasm. There were a whole lot of, \"AHHH...AHHH's\" and \"OHHHH..OHHH's\" being groaned out to their own orgasmic frequency. Nicki's was faster and less spastic. Mandy's was slower and more spastic. A minute or so later they were slowly gyrating around on each other as their orgasms subsided. Mandy bent lower and kissed Nicki on the lips. Nicki hungrily kissed her mother back. Neither of them considered this to be lesbian sex. \n\nWhen they finally came down the stairs, I was sitting in the kitchen waiting for them thinking, 'Christ. How long does it take to get dressed anyway?' They walked in and sat beside him at the kitchen table. Nicki reached out and put a hand on mine. She looked up at me and said, \"Zach, baby. Mom and I have been talking and...Well...Is it possible for you to stay the night with us? Please. Please?\" She had that pleading look on her face that she always uses when she wants something from me. Believe me it is nearly impossible to ignore. \n\nI looked at Nicki and then at Mandy. She also had a pleading look on her face. Mandy said, \"You can call your dad and tell him you are staying at a friend's house. That wouldn't be a lie.\" My cock was screaming, \"YES. YES. YES.\" I looked from one to the other. Nicki squeezed his hand. My cock was surging to full attention at the prospects. \n\nAfter consciously forcing my big head to think this through, I said, \"Nicki, sweetheart. I shouldn't. I don't want to lie to my dad. If he starts asking me questions the lie wouldn't stand up very long. My dad doesn't lie to me and I have never lied to him. I know I'm totally insane for saying no but I have to.\" \n\nNicki's lower lip pushed out in a pout but she didn't say anything more. Mandy spoke up, \"Zach, you are the best of men. I respect your decision. I confess that I have been a sexual mess the last couple of days. I haven't felt like this since I was eighteen. Like then, all I want to do is suck and fuck your monster cock. I guess that's why I got pregnant with Nicki. My mind is consumed with it. \n\nNicki looked up and simply said, \"Yeah. Me too. Like mother like daughter, I guess.\" Mandy laughed out loud. \n\nI said, \"How about this? I wake up pretty early in the morning. What if I leave a note that I'm with you and I can be here as soon as I can? He doesn't usually get up before eight or nine on Sundays anyway. He won't know what time I left.\" Mandy looked at Nicki and again with the same mother-daughter telepathy they both nodded at the same time with huge grins on their faces. \n\n\"Ok then. I stood up from the table and the huge bulge in my shorts caught on the edge and lifted it off the floor. Mandy looked at Nicki and said, \"Jesus Nicki. Look at the size of that thing.\" Nicki put her hand to her mouth and giggled. She couldn't take her eyes off it. \"Leave the front door unlocked and the security system off. I'll be over as soon as I can.\" Mandy agreed. \"I'll come to your room.\" I was looking at Mandy. \"You have the king-size bed, right?\" She nodded. \n\nI kissed Nicki and walked to the door as Mandy led the way. She handed me my bathing suit and opened the door for me. She blew me an air-kiss as I walked out. The door shut behind me. I didn't hear the lock engage. I drove home in a fog. 'Wow. What a day this was. Two days ago I was cumming in my pants with anticipation and now I'm fucking the two most beautiful women on the planet and neither one can get enough.' \n\nMy dad was tipped back in his lounge chair snoring away. The TV was on. The volume was low. I touched his shoulder and he startled awake. I said, \"Hi dad. I'm home. It's late so you may want to go to bed instead of sleeping here.\" He smiled and nodded as he pushed the foot rest down and stood up. He hugged me and walked past me toward his bedroom which is on the main floor. Mine is one of two bedrooms upstairs. I headed up the stairs. \n\nAfter showering I climbed into bed and fell instantly asleep. I woke up around one in the morning with a raging boner. I was having an erotic dream. I tried hard to remember what it was about but it was gone. I hoped I would go back to it when I fell asleep again. My hand was wrapped around my cock just holding it. I woke again at 5:10 AM. I got out of bed quietly and grabbed the clothes I had laid out the night before. I crept silently down the stairs to the kitchen. I pulled my clothes on and slipped on my sneakers. I had one thing on my mind and that was I couldn't wait to slip under the covers of Mandy's bed between my girlfriend and her mother. My cock was at attention and sticking out the bottom on my shorts trying mightily to stand up. \n\nI pulled up a couple of houses down from Mandy's house and locked my car door. I looked around to make sure no one was about at 5:30 in the morning. It was silent. I walked slowly up to Mandy's front door. I stood there a couple of seconds and then turned the handle and pushed the door open. I stepped in and quietly shut the door and locked it. All was silent in the house as I took my sneakers off and silently ascended the stairs. I knew which room was Mandy's and I noticed that her door was wide open. I stood in the doorway and in the early dawn light I could see both of my ladies laying there with the covers pulled up to their waists. I could see Nicki's tits as she lay on her back. Mandy was lying on her side with her arms covering her tits. \n\nI stepped back into the hall and stripped off my shirt and shorts. I had no underwear on. My cock had been at attention since I left my house. I grabbed it with my hand as I stepped back into Mandy's bedroom. I quietly moved to the side of the bed where Nicki was sound asleep. I bent way over and kissed her on her lips. She puckered up her lips but she didn't wake up. I moved lower and kissed each nipple. They firmed up. Still she didn't wake up. I sucked her hardening nipple lightly between my lips and breathed on each one. They stiffened further. Still nothing. I flicked my tongue on one nipple and then the other. She moaned in her sleep and rolled away from me onto her other side. \n\nI climbed onto the bed and moved myself gently to lie beside her on my side facing her back. I wasn't touching any part of her. I licked a lot of saliva onto my upper hand and slathered my cock in as much as I could make. I pushed my cock down below her ass and gently pushed it forward along the underside of her ass until it poked out in front of her at her crotch like she had a dick. She moaned again but didn't move. I slowly began pulling back and then pushed slowly forward. Basically, I was fucking the gap at the top of her thighs so that my cock would slide along the length of her pussy. She was asleep but she was getting wet. As I continued this motion she moaned several times. \n\nNicki's moans woke her mother and she lifted her head off her pillow and looked me right in the eyes. She knew exactly what I was doing and I could see the grin on her face. She looked down at her daughter lying beside her. Mandy grabbed her tit with her upper hand and was tweaking her nipple. She laid her head back down on her pillow. I didn't realize it, but her other hand underneath her was now in her crotch finger-fucking herself. Mandy moaned too. \n\nI was going to continue fucking Nicki's pussy and thighs until something changed. It felt good to me. Nicki was moaning loudly now but she hadn't given the slightest indication that she was awake. Nicki started mumbling something under her breath. I couldn't make out what it was. Mandy indicated that she hadn't got it either. I picked up the fucking pace a little. I was ready for her to wake up now. I very gently reached around her and cupped my hand over her tit and gently squeezed it. She moaned again and when it was obvious she was going to move I pulled my slick cock back from her. \n\nNicki turned over to face me on her side. I had moved back so we wouldn't touch. She settled down and wrapped her arms around her tits. Her legs were straight. Mandy lifted her head to watch. I smiled at her. I put my hand down to her crotch and slid my finger in to see if she was wet. She was. I very lightly touched her near her clitoris. She moaned again. I couldn't believe how hard she was sleeping. My cock was still incredibly hard I decided to go for it. I lifted the covers off me so I could see her crotch. I moved myself ever so close to her and pushed my cock-head along her slit. Mandy pushed herself up on her elbow so she could see. Nicki mumbled something unintelligible. ",
        "I was hoping that she would be in an erotic dream in which she was doing the same thing I was doing so it would just make her dream that much more real but wouldn't wake her up. There was no way of knowing. I pushed myself lower toward her feet and pushed my cock slightly upward to the entrance to her pussy. I pushed again until my cock-head was in her. I stopped and held there. She mumbled again. This time it was comprehensible. She had mumbled, \"Oh fuck. That feels good.\" Mandy heard it too and she giggled so hard the bed shook a little. I shushed her and she mouthed the word 'sorry'. \n\nI pushed into her a little deeper. No more than an inch. Nicki apparently was separating her legs in her dream because she separated her legs in reality. I seized the opportunity and pushed in another two inches. I knew I couldn't push all the way in without touching her with my body. I was fascinated by how far into her I got and she still wasn't awake. I slowly pulled back and her hips pulled back. Then her hips came forward and I took that as a sign that I was supposed to push back in. I slowly repeated this cycle several time. Nicki moaned every time I pushed in. I decided that this had gone on long enough and I pushed my cock all the way in. Her eyes popped open and I realized she was just launching into an orgasm. Her mouth flew open and her eyes went wide. She was uttering, \"AHHHH...AHHHHH...AHHH.\" in synch with her orgasmic quaking. She threw her arms around my neck and pulled me on top of her as she rolled onto her back. \n\nI was fucking her hard now. Mandy pulled the covers off us both. I came up on my knees and hooked her knees and pulled them up to her shoulders and pinned them there. As her hips rolled upward to follow her knees, I lowered my position so I was fucking up against the top of her vagina. This is what she wanted last night after I had fucked her mother this way per Mandy's instructions. \n\nNicki was rolling her head from side to side as she repeatedly moaned, \"OOOOHHH...OOHHHH... OOOHHHHH,\" with each penetration. Mandy pushed herself over to suck on her daughter's nipples. Nicki held her mother's head in her hands. Nicki was delirious. She frantically lifted her hips as best she could to meet each penetration. I had shallowed my penetration so the ridge of my cock was rubbing on her 'g-spot'. I was getting awfully close to cumming and I was pushing back to try to bring Nicki along with me. \n\nI didn't have to wait long, thank God. A tremendous pressure was building up in her pussy pushing me out of her. I pulled out to my cock-head and liquid from inside her gushed past like when you stick your finger in a garden hose. It sprayed everywhere. I was soaked. Mandy was soaked. The bed was soaked. Nicki was soaked and she was screaming very loud. If anyone was outside the house the cops would be here in minutes. I didn't understand what was happening. I thought, 'Oh fuck. She's pissing herself but it doesn't smell like piss.' I pulled completely out of her pussy and a stream of liquid shot from her and hit me in the chest. It splashed everywhere. Mandy seemed to know what was happening and she reached down and placed her hand on top of Nicki pussy. This only knocked down the spray though. \n\nNicki shot four strong jets of liquid with enough pressure to shoot across the room. Mandy had contained the damage. Nicki was throwing herself with rigid muscles and I couldn't contain her. I released her legs and her feet flew down to the bed. The second her feet hit the bed she fired her hips up and shot one last spurt. She sat up straight and looked at her mother. She was horrified by what happened. She screamed out \"What the fuck was that? Mom? Is there something wrong with me?\" \n\nMandy laughed and said, \"No, baby. There is nothing wrong with you. You just 'squirted' that's all.\" Mandy raised her soaking wet hand to her mouth and licked her palm. \"Yummy. So sweet.\" She offered her palm to Nicki who stuck her tongue out to taste it. She smacked her lips and nodded. \n\nWhen Nicki had settled down, Mandy explained how 'squirting' happens often to some women. Some women never have one. She confessed that she had never had one. She went on to explain that 'squirting' is related to the stimulation of the 'g-spot'. I understand that the orgasms associated with 'squirting' are extremely intense and it looked like yours was exactly that. I'm so jealous.\" \n\nNicki said, \"Jesus. It was the most glorious feeling ever. What a mess though. Sorry mom.\" Nicki looked at me and said, \"And you mister man. How the hell did you get that monster cock of yours into me without waking me up?\" \n\nI was kneeling in the same spot I had been. Hell, everywhere else was soaking wet and cold. My cock had shriveled. I was expelled from Nicki's pussy before I could climax. I shrugged my shoulders and said, \"I was as amazed that I got that far as your mother was. My only explanation is that you must have been in a dream that you were getting fucked and reality just meshed with your dream.\" \n\nNicki pulled herself up on her knees and pulled herself to me as she hugged me hard and reached up to kiss me. That was a fuck for the ages. \"Holy Crap. I'm still quivering.\" She was too. I could feel her vibrations as I held her tight to my chest. \n\nFinally Nicki said, \"Jesus it is cold kneeling on these wet sheets.\" She pulled away and kissed me again. She stepped off the bed and she said, \"God, the carpet is soaked too.\" She was heading for her bathroom and she noted that she was almost to the door before the carpeting was dry. \n\nMandy pulled me down into the dry spot left by Nicki's body. I laid there on my back looking at the ceiling. 'Holy shit. Liquid was dripping from the paddles of the ceiling fan,' I thought. Mandy crawled over and put her head on my shoulder and cuddled up close to me. She jumped from the cold wet sheets under her. She settled down and Mandy's reached down and wrapped her fingers around my limp cock and started jacking on it. My hand ran down over her back to her ass and back up again. \n\nSince I hadn't cum since last night, my cock sprang to life within seconds. Mandy was thinking, 'Fuck. I love young man sex. Like an ever-ready battery commercial.' She increased her jacking pace as I got harder and harder. She lifted herself off my shoulder and dragged her head the length of my torso and settled it back down on my hip. She pushed my cock into her mouth and deep-throated me. What a fantastic feeling when my cock is buried in a woman's mouth all the way to the balls. She pursed her lips and kissed me at the base of my cock and then she opened her mouth wide and snaked her tongue out and flicked the tip on my balls. \n\nShe pulled her head back and copious amounts of saliva flooded out. She sucked it back into her mouth. Silver strings of saliva ran from my cock tip to her lips. She pulled them from her lips and wrapped them around my cock. She immediately went right back down and started giving an incredible blowjob. I was going to cum any second so she slowed way down and just laid still with my cock in her mouth, sucking on it. She pulled my cock from her mouth and Mandy swung a leg across my hips like she was mounting a horse. She pushed her body up so she was straddling my hips. My cock was bouncing up and slapping on her pussy. She felt it and looked down. She said, \"An eager little bugger isn't he?\" I laughed. I could hear the shower running in Nicki's room. \n\nMandy lifted herself up and guided my cock into her pussy. She gently sat all the way down on my cock and began intentionally clamping her vaginal muscles on it. I tried to manually use my muscles to make my cock jump in synch with hers. I could actually make it dance around if I wanted to. Her muscles were so strong I actually grimaced from the pressure. She smiled at me when she saw the grimace on my face. \n\nI pivoted my hips down dragging my cock out of her and then I drove them back up again. She groaned with this unexpected assault. I pivoted my hips again and she lifted away from me at the same time. As I pivoted back up she dropped back down. Our pelvises collided in the middle. We both groaned together. She leaned forward and put her hands on my chest. I raised my hands and caressed both tits and nipples. She groaned again. We were both breathing heavy as we picked up the pace of our fuck. She was grinding on me trying to get more and more of me into her. \n\nI felt her starting to quiver and quake in an orgasm. The small vibrations built stronger and strong until she was shaking. I held her by the hips as I furiously began launching my hips up into her. She suddenly screamed, \"FUCK. GIVE IT TO ME ZACH. GIVE IT TO ME. I'MMMM CUUUMMMMINNNGGG.\" She collaped onto my chest and I could feel my own explosion coming on fast. I continued furiously rocking my pelvis up into her in a blur. \n\nAs the cum-train burst into the station, I screamed, \"OHHH GODDDD. I\"MMM GOOONNNNEEE. OHHH FUUCCKK.\" I threw my arms around Mandy's back and pulled her down into me. She was still groaning and so was I. There was no movement at all as neither one of us had taken a breath in what seemed forever. Finally, she gasped and inhaled again. I then did the same. \n\nAfter minutes in this position my flaccid cock fell from her pussy and flopped down on the bed. Mandy giggled but didn't move. She couldn't. I was holding her tight to my chest. \n\nNicki walked into her mother's room completely naked. When she stepped onto the wet carpet she burst out with, \"Oh Christ, I forgot about the wet.\" Mandy's face was pointing toward the door and she smiled at Nicki's discomfort. Nicki said, \"I'm going back to my bed. There is plenty of room for the three of us. When you are done can we continue this in there?\" Mandy just nodded a couple times. Nicki walked back out. I watched her go and thought, 'what an incredible ass.' At that thought, I reached down and grabbed Mandy's ass in both hands and squeezed her gorgeous cheeks. \n\nMandy and I made our way to her bathroom. She turned on the shower and adjusted the temperature. It was a big walk-in shower and we both went in together. I washed her clean and she washed me. I paid particular attention to her tits and she did the same with my cock. The feeling of her hand and the soap water got me going again. It bounced up a little and then a little more and then a lot and voila, it was at attention. She looked up at my face when it slapped her in the chin. \n\nAs much as I wanted Mandy to suck it or fuck it I thought that we shouldn't be doing this without Nicki there. After all Nicki was my girlfriend and Mandy was her mother. This was an odd relationship. Nicki seemed to be all on-board but who knew what went on in the depths of a woman's mind. I looked down at her and shook my head. She frowned and stood up and hugged me. She stepped out and I shut off the water. She tossed me a towel and wrapped one around her torso. I dried myself off from head to toe and tried to find a way around the bed that wasn't soaked. Mandy did the same and we made our way down the hall in the nude to Nicki's room. \n\nShe didn't hear us coming and was oblivious to our presence in her room. She was sitting with her back against the headboard with knees pulled up and spread wide. Fingers of both hands were furiously frigging her pussy and clitoris. As we stood there and watched for a couple minutes, her hips rocked back and forth. Nicki shoved four fingers into her pussy and pumped them in and out. The thumb on her other hand was strumming her erect clitoris. The tendons in her neck stood out and her teeth had clamped down tight. She seethed air in and out. As she reached her crescendo she screamed, \"OHHHHH...OHHHH. FUUUUCCCKKK YYYYEEEAAAHHH. OHHHH MY GODDDDD. YES. YES.\" \n\nWhen she came down from the peak she slumped forward and relaxed her jaw. Her legs fell sideways. Her hands came up and grabbed her tits and tweaked her nipples. Her eyes opened and looked over at us standing in the doorway. She smiled and said weakly, \"OHH FUCK YEAH.\" Mandy moved past me and onto Nicki's bed and held her close as Nicki continued to quiver for several more minutes. \n\nWhen Nicki was completely recovered she was like a rag-doll, we all got under the covers. It was only now starting to get light outside. The room was dark and I fell asleep quickly. I was between Nicki and Mandy. Nicki wrapped her hand around my flaccid cock as if to protect it from her mother's incredible sexual appetite. Nicki laid there awake for a while thinking about her mother. 'She hasn't even gone on a date for two years. Where did this sexual appetite come from? She was insatiable and had pretty much taken the lead with Zach's cock. It is a nice cock,' she thought. \n\nMandy laid there next to Zach. She pushed her hand down between her legs. She was wondering where her appetite had come from as well. 'She was in heat. She couldn't get enough of Zach's cock. She was thinking that she was going to have some serious problems going to work tomorrow without a chance of fucking and sucking his cock. Jesus Christ, what the fuck is wrong with me? This isn't me,' she thought. She drifted off to sleep thinking, 'this isn't me.' \n\nStay tuned for Chapter 3..."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "teens",
        "3-way",
        "sucking",
        "fuck"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/secuction-ch-02"
}