{
    "title": "One Who Understands",
    "pages": [
        "Author's Notes:\n\n'One Who Understands' is the first book of a trilogy that began its life as a one off story. \n\nThe trilogy follows this order:\n\n\u2022 One Who Understands\n\n\u2022 The Most Valuable Gift\n\n\u2022 To Walk a Mile\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nOne Who Understands\n\n********\n\nChapter 1\n\n\"Hey, Mister Ed!\"\n\nEdward Walters looked over his shoulder and raised his hand in greeting as the pickup cruised past him on the town's main street. He recognized the speaker as Reggie Halston, one of the wide receivers for the Bearcats, the high school football team Ed played the Guard position for. Reggie was grinning as he leaned out the window of his buddy's pickup. His buddy being Mark Thompson, their quarterback.\n\nMister Ed. He hated that nickname because... well, he didn't like to think about it so he pushed it aside.\n\nHe gave his head a shake and continued down the street. He was on a mission. He had to buy his sister a birthday card. Grace was turning 22 tomorrow and he wanted to get her a really pretty card. A pretty card for a pretty woman! He blushed at the inappropriate thought. He'd known Grace since she was 10 and he came to live with her and her mom Shirley Wilson when he was just a young boy of 6.\n\nWhen his mom died in a car accident, Shirley, being her cousin and the only living kin available, took him in. He found out later that her charity was mostly to get her hands on his mother's limited estate and the insurance money. Shirley made sure he was aware that she was not replacing his mother. She also told him that while he was actually her cousin once removed he could call her Aunt Shirley for simplicity. She did make efforts to keep him fed, clothed, sheltered and educated. Through the years he'd spent with her she'd often remind him of those efforts. He heard her complain that he ate too much to afford keeping him fed, grew too fast to keep him in clothes that fit, was too big for their furniture, and most recently wasn't smart enough to get a job to pay back those debts he owed her for taking him in. Shirley wasn't exactly the warm and fuzzy type.\n\nGrace had been delighted to find Ed was an easy going little brother who pretty much let her do anything to him as long as he was allowed to hang out with her. Dressing up, make up parties, you name it, if Grace wanted to do it Ed would be right there indulging his new big sister. She had no idea the young boy was starving for the lost love of his mother and would take anything resembling affection. All she knew was that Ed was a fun new plaything. She had more of a nurturing nature than her mother and until she reached that age where boys suddenly became attractive, she would cuddle up to him on the couch to watch TV with him.\n\nWhen the puberty fairy started to fill her out in areas Ed was secretly enthralled by she began to restrict her physical signs of affection to ruffling his hair, pats on the back, an occasional kiss on the cheek, and the even more rare hug but she always had a smile and kind word for him. She saved the boy from a very lonely childhood and he loved her deeply for it. Though they were second cousins they grew up together as brother and sister.\n\nPuberty struck early for Ed and he exploded upwards and sideways as his frame grew to support the muscle mass it was destined for. His keen eyed gym teacher started him on strength training early and his body filled out quickly. Shirley's food bills were the source of many a verbal flaying during those days.\n\nWhen Ed got to high school he was immediately enrolled in the football team. He wasn't particularly aggressive but he was good at the game as he was bigger and stronger than most of the others. He continued to grow bigger and stronger than his peers. He wasn't as smart as most of them but he got along with many of them regardless of his shyness.\n\nThen came the fateful day when the coach walked into the showers to get the guys to stop clowning around. He saw Ed delaying his own shower until the others had left. He'd pushed the boy into the room and told him to get to it. Red faced, Ed hung up his towel and stepped into the shower. The room went silent until the coach's voice boomed out.\n\n\"Fuck, I guess we're going to have to call you Mister Ed from now on.\"\n\nWhen some of the players asked him what he meant he just told them to look it up. Edward recalled the look of disgust on the man's face as he left the shower room. When his teammates discovered 'Mister Ed' referred to a horse their laughter was a knife in his guts and his shame was complete. He couldn't help that he was so big. Being called a freak by his teammates was particularly painful even if they did it as a joke. He did his best from that time on to avoid showering with the others either by being first or last. He avoided the coach most of all. When he could. He took to wearing loose fitting pants. Anything to hide his shame.\n\nAt home he moved his bedroom to the spare room in the basement. There was a small bathroom down there where he could take his shower without Shirley or Grace accidentally seeing him. He couldn't bear the thought of them seeing his freakish nature.\n\nEdward gave himself a shake when he found himself dwelling on that old history. He was eighteen now and he did his best to put up with the ribbing from the rest of his team though it still hurt.\n\nHe made his way into the card shop and began his hunt. He didn't want something too drippy or sappy as Grace was not sentimental in the least. She was a practical woman. He wanted a pretty card with a simple heartfelt message.\n\nWhile he was hunting he felt eyes on him and looked down the aisle to see Melanie Stanwell and Izzy Desmond looking at him and giggling. They worked in the store. With a bold look at Izzy, Melanie walked down the aisle towards him with a smile on her lips. She was a tall, slim girl with lovely brown eyes and long wavy brown hair which went to her mid-back. He'd heard the other guys talking about her, saying it was too bad she didn't have big tits to go along with her sleek curves. Ed just thought she was nicely proportioned. She wore a lot of rings which always drew his eyes to her long elegant fingers.\n\nEdward was watching her nervously as she approached and gave her a friendly nod when she stopped beside him.\n\n\"Hello Ed.\" She glanced at the pink flowery birthday card in his hand and looked back into his pale blue eyes. \"Buying a card for a girlfriend?\" she said boldly.\n\nHe jolted a little then shook his head. \"Sister. It's her birthday tomorrow.\"\n\nMelanie's smile grew and she leaned in a little closer. \"You need help finding a card for her?\"\n\n\"Nah, I think I've got this. Thanks!\" he mumbled, a blush traveling up his cheeks. Melanie's eyes twinkled when she saw the effect she was having on the big man.\n\n\"Well if you need some help just let me know,\" she smiled.\n\nHe nodded his thanks and she strutted back to Izzy with a coy smile at him over his shoulders. She caught him looking at her sweet little ass and her smile got wider and the sway in her hips got a little more pronounced. He quickly looked away as he felt himself begin to stiffen. He cursed under his breath, closed his eyes and ran through his mantra to calm himself. His pants, which had been baggy two years back, were no longer that way due to the increased muscle mass he'd put on from training for the football season. He couldn't afford new pants so he couldn't afford to get excited in these ones. He had to make an adjustment so glancing around to ensure the coast was clear he shifted himself in his pant leg.\n\nFrom the burst of giggles he heard he realized the coast hadn't been as clear as he'd hoped. Blushing madly he quickly settled on a card and went up to the cash to buy it.\n\nIzzy was the cashier and she was doing her best to catch a glimpse at what he'd had to adjust. He paid and hustled out of the shop. The evening air felt especially cool against his reddened cheeks.\n\nChapter 2\n\nGrace Wilson cursed her life one more time as she left the big box store to head home for the night. That asshole Frank from HR hadn't left her side all night, constantly watching her with his creepy eyes. He had taken a liking to her dark looks. She wasn't Goth but she did like to dress in black and she and her co-worker Heather had taken to wearing black lipstick and smoky black eye shadow. With her pale skin, long straight raven locks, and curvy, well fleshed body she attracted more than her fair share of admirers.\n\nHeather's long, wavy white blond tresses, blue eyes, and her rail thin model's body was a perfect counterpoint to Grace's more 'full figured' look. She was saving up for a nose job as she hated the largish one she was born with and her braces only had one more year to go. They hung out together whenever they could as their work schedules allowed.\n\nGrace's job as a cashier had been the only one she'd been able to get since graduating and as her salary was keeping the family in their home and fed she couldn't afford to lose it. Her mom's disability cheque wasn't enough to keep them going and Ed's paycheque from his part time job in the home center helped but it was her money that kept them going. Now Frank was potentially threatening that by acting like a skeeze.\n\nShe got into her car in the employee lot which was far from the door and sparsely lit. She put her phone in the cup holder between the seats as she prepared to leave.\n\nSuddenly there was a tapping on the driver's window glass and she jumped. She looked left and there was Frank looking in her window with his greasy smile. She rolled the window down.\n\n\"What is it Frank? I'm on my way home. Isn't it time for you to go home to your wife?\" she reminded him.\n\n\"Aww Gracie don't be like that. You should be nicer to me. I can do things for you. Nice things that will make your life so much better. All you gotta do is some nice things for me,\" he said, slurring a little. Great, he was drinking on the job.\n\n\"Thanks but no thanks Frank.\"\n\n\"I can also make things really bad for you if you're not nice to me. Think about that!\" he growled.\n\nGrace looked up at his piggy little eyes and sighed. It was true. He could.\n\n\"Take out your cock.\"\n\nFrank suddenly grinned and quickly looked around but no one else was in sight. He was also partially hidden by the other cars. He quickly unzipped his pants and tugged his flabby little dick from his pants.\n\nGrace had to struggle not to laugh then not to gag as the stench of him wafted in the window.\n\n\"Mmm bring that beast in the window,\" she said with a seductive tone. He grinned and leaned in against the side of the car. He couldn't see her but he was expecting to feel her mouth on him any second.\n\nGrace leaned away as far as she could and took some photos with her phone's camera. He had his hands on the window sill so she got them in the shot as well with his distinctive school ring. She grabbed her heavy metal travel mug and slammed it down as hard as she could on one of his balls on the window ledge.\n\nWith a scream of pain Frank crumpled to the ground beside the car. She saw he was clear so she drove a few feet away.\n\n\"Frank? I just wanted you to know I have some very disgusting photos of your junk sticking in my car window. I'll send you a sample to your work address when I get home. You pull any crap like that again, I will see everyone you know gets a copy. You leave the women at the store alone now. Understood?\" When he whimpered and nodded she began to move forward but stopped once more. \"Oh and take a fucking shower with soap you smelly bastard!\" He whimpered once more and she drove away.\n\nMaybe she should have warned him earlier about her anger management issues.\n\nWhen she got home all she wanted to do was take a shower to get Frank's smell out of her nose. She stepped inside and her sinuses filled with the most wonderful scents of cooking food. Grace looked in the living room and there was her mother in the recliner, drunk or stoned or both. She hadn't expected the smells of cooking to have come from her efforts but it would have been a nice surprise. At one time she was an excellent cook and Ed would watch her for hours. Since the accident at the factory and her subsequent chronic pain, she hadn't felt disposed spend any time in the kitchen.\n\nFollowing the delicious scents Grace stepped into the kitchen doorway and smiled at Ed, the mountain of a man who stood with his back to her. She couldn't get over how he'd grown from a normal sized little boy to this broad shouldered, hard muscled man. She trembled. If he hadn't been raised as her brother she would have been all over him. That thought made her stomach twist nervously like butterflies were duking it out inside her. She loved her 'little' brother but sometimes she got so confused.\n\nShe must have made a sound as he looked over his shoulder at her and his face lit up with a happy smile when he saw her standing in the kitchen entrance. \"Welcome home. I'm making your favorite! Chicken and Chorizo Paella!\" his deep voice rumbled out. She smiled in return and studied his innocent face. Fair haired, light yellow blonde to be specific, reasonably styled and short. She cut his hair so they could save some money. He had amazing pale blue eyes under light brows. His nose had a bump on it where it had been broken and badly reset. It had character. He had nice lips and was almost always smiling. His jaw was strong and square. The overall combination wasn't classically beautiful but still pleasing to look at. He turned back to finish cooking.\n\nShe couldn't stop her eyes from traveling over his body as his back was turned. Though it made her squirm with guilt to think this way about Ed she thought his body was incredible! Hard, dense muscles and lots of them. Huge arms hanging from broad shoulders, and supported by his broad chest and powerful back. He didn't look overinflated like those professional bodybuilders but he did look ripped! Every t-shirt he owned was stretched almost to death over his torso. At home he wore sleeveless T's as they were more comfortable for him.\n\nHis legs were sexy as hell too, currently hidden in sweat pants. She knew her brother preferred to wear baggy pants but she didn't understand why he liked that look considering how great his legs looked. She'd even bought him a pair of stretchy but tight jeans using her employee discount but she had yet to see him wear them.\n\nGrace spun around and made a bee line to her room before she did something she'd regret. She knew her brother loved her so she had to protect him from her lustful thoughts. It would destroy their relationship.\n\nShe got cleaned up and into her own comfy clothes. Before she forgot she sent off the incriminating photo to Frank's work email. She was sorely tempted to send it to his wife too but she contained her rage once more with difficulty. She returned back downstairs just as Ed placed the plates on the kitchen table. She noted there were only two plates.\n\n\"Mom's not eating?\" she asked.\n\nEd's face showed his upset. \"I tried to get her to eat earlier but she just screamed at me to leave her alone. I think her pain is bad tonight. I'll save some for her for later.\"\n\nGrace looked at Ed and wondered how he could still show so much compassion for a woman who had never said a single nice word to him since the day he arrived. It was more a sign of Ed's strength of character than her mother's.\n\n\"I'll carry her up to her bedroom after I do the dishes,\" he said.\n\nGrace had a momentary flash of Ed carrying her instead, up the stairs to her bedroom in his strong arms to have his way with her. She trembled and he noticed.\n\n\"Something wrong? Your food not taste good?\" he said looking concerned.\n\nShe forced her mind away from those evil, lewd thoughts and smiled weakly at her brother. \"No! Everything is fine! It tastes wonderful! I was just thinking of something unpleasant from work.\"\n\nThey ate for a while in silence both enjoying each other's company and the excellent food. Grace had to restrain herself from wolfing the paella down. As he'd said it was her favorite.\n\nHe tried to put a casual expression on his face as he asked her a question. \"Speaking of work, did you find out if you have tomorrow night off? It's our final playoff game for the state championship. It would be nice if you could be there.\"\n\n\"I'm sorry Ed. I wish it was possible but I was asked to work a double shift tomorrow. Mary Carson broke her ankle and they're short staffed. And we need the money,\" she winced seeing his look of disappointment which he quickly hid behind a shrug and a smile.\n\n\"Score a touchdown for me Ed!\" she grinned as he rolled his eyes.\n\n\"That's not what I do,\" he groaned for the hundredth time.\n\nShe smiled at his frustration. \"What is it you do again?\"\n\n\"I knock people down,\" he huffed.\n\nShe could always catch him with this little game of hers. At first she used to worry that Ed might be simple minded but he was actually quite brilliant with some things. Ask him to repair something and he'd figure it out and get it working in almost no time. He was a really good cook as mixing ingredients in the proper proportions in the right sequence at the right time intervals came to him naturally. Ask him to deal with math and he'd struggle but he'd get to the answer, eventually. Ask him to explain what was going on in any TV show involving human interaction and he'd get the surface stuff but miss most of the nuance. He was innocent in that way. Intrigue was beyond him. He was what you saw and people who weren't confused him.\n\nIf he weren't so easy going and just big he would probably have had a much harder time in school. Speaking of which...\n\n\"Have you asked out that pretty brunette at the card shop yet?\" she asked him. Her love life may be on extended hiatus but that didn't mean his had to be.\n\nHe blushed. \"No!\"\n\n\"Why not?\" she pushed with a grin on her lips.\n\n\"I don't have time for a girlfriend!\" he smirked back. That was her favorite excuse for explaining why she wasn't dating. The 'I don't have time' excuse had been her automatic response for years. She shook her head at his victorious grin.\n\n\"You know you shouldn't take such pleasure in using that excuse. It's not like it's made me hysterically happy,\" she said in a rare moment of self-reflection.\n\n\"You deserve to find someone special,\" he told her sincerely, looking at her with his beautiful blue eyes.\n\nShe snorted angrily as her mind went to Frank in the parking lot sticking his dick in her window. He was the perfect example of the kind of masculinity she was surrounded with now in her life. Well, them and Ed who she couldn't have. Her anger flared again and she pressed her thumb against the side of the bridge of her nose as pain spiked behind her eye. Dammit! It was another anger induced migraine.\n\nShe heard the scrape of a chair then she felt his hands, his wonderfully large and powerful hands massaging the knots out of her neck muscles before they got a chance to really get started. Soon she was putty under his strong grip. The migraine dissipated as he worked her muscles. God his hands felt so good on her body! She wanted more and began to moan but locked that down in a squeak. She pushed herself to her feet as she felt her emotions start to go off the rails.\n\n\"Thanks for dinner, Ed. I'm going to bed. Not feeling well,\" she blurted and rushed upstairs. She closed her bedroom door and managed to drop onto the bed to smother her sobs in her pillow. Life was so fucking unfair!\n\nChapter 3\n\nThe team ran out onto the field and the crowd cheered louder as they saw their heroes. Ed didn't bother looking at the bleachers as he knew there was no one there cheering him on.",
        "He was still a little bothered by how upset Grace looked the previous night. He said something stupid and upset her and he was really mad at himself for hurting her.\n\nMark Thompson was checking his teammates to make sure they were all pumped and focused on the game. He caught the angry and distracted look in Ed's eyes and pulled him aside.\n\n\"Ed, where are you man? I can't have you wandering around out there. You're my protection!\" Mark said into Ed's ear.\n\n\"Sorry Mark. I'll get my head in the game,\" Ed apologized.\n\n\"What are you angry about?\" the quarterback asked.\n\n\"I said something stupid last night and I hurt my sister's feelings. I'm really mad at myself,\" Ed blurted.\n\nMark looked at the big man. That wouldn't do at all. If Ed was angry at himself he would be letting the other team roll over him. He had to get Ed to redirect his anger.\n\n\"Ed, keeping anger inside is bad. It will hurt you and your game. Here is what I want you to do. When we're at the scrimmage I want you to look at the guy across from you and think, 'there is the reason my sister is feeling bad'. Turn your anger on that and take it down. You have to direct that anger outwards. Don't let it eat at you. CRUSH IT! Can you do that?\"\n\n\"Yeah, I got it.\" Ed nodded and looked at Mark with surprise. He was really pleased Mark was being so thoughtful and helpful. He didn't realize Mark was just looking out for himself.\n\nPlay soon began and Ed was in his three point stance looking across at his man. No! It was him saying that stupid thing. He needed to punish that guy! At the snap he surged forward and crushed through the player and tossed him down to the ground. The running back shot through the hole Ed made and they soon had their first touchdown.\n\nSurprisingly, Ed felt a little better. He grinned at Mark who was beaming a huge smile back at him.\n\nThe game was fierce as their opponent's quarterback and receiver were very good. The score was close but no one got past Ed. Dave, their Center and Wally the Guard on Dave's other side were inspired and tried to match Ed's ferocity but they couldn't match his strength. Ed gradually took the opponent's offensive line apart. He slammed them down again and again and soon he'd broken their spirit. The game turned in their favor and once the clock ran out they were the new State Champions. The team went nuts and for once his coach patted him on the back and congratulated him.\n\nWhen the teams went out onto the field to shake hands none of the opposing team would shake Ed's hand. His teammates took exception to this and words were said and it got a little ugly until the coach got them off the field and back into the locker room.\n\n\"Jesus, did you get a burr under your saddle Mister Ed?\" the coach asked. That drew a lot of laughs from the guys. Then Mark stood up.\n\n\"Before the game Ed was mad at himself for something stupid so I told him to use that anger in the game. Looks like it worked.\" He smiled at his friends and they rose up to pat him on the back for his brilliant leadership. No one saw Ed's look of surprise at his words except Mark.\n\nLater the quarterback found him. \"You feel better now, right?\"\n\nEd had to agree so he nodded.\n\n\"Listen there's going to be a party at my place later tonight starting at 10pm. Attendance is mandatory for the team so be there! And really, thank you, you were awesome out there tonight!\" Mark said with a huge grin clapping him on the arm.\n\nEd felt better and promised Mark he'd come to the party.\n\nWhen he got home he struggled to find something to wear. He didn't have a lot of clothes and he understood that he had to look nice. The only nice pants he had were the dark blue jeans Grace bought for him but he felt they accentuated his issue rather than hid it.\n\nStill, Mark said that the party was for the team so he assumed that's who would be attending. They were already aware of his shame so it shouldn't be an issue to wear the jeans.\n\nHe pulled on some socks, then the jeans and yanked on a clean black t-shirt and his one black, button down short sleeve dress shirt. He looked at himself in the mirror. He felt so weird with the jeans showing off what he wanted so desperately to keep hidden. With the dress shirt untucked the ends almost disguised him. He sighed. Luckily his sister was still at work. He didn't want her seeing him like this.\n\nHe knew there would be drinking so he left his beat up old pickup at home and took the bus across town to the edge of a very affluent neighborhood. He had to walk quite a distance from the bus stop to Mark's place as he realized the distances between the driveways was huge. He watched for #12 and as he walked a police car stopped in front of him to ask where he was headed. Once he identified himself and who he was going to see and why, the police were friendly again. He was even congratulated on his aggressive play during the game. He thanked them and they moved on.\n\nMark's house, a mansion really, was set back quite a ways from the road. Ed walked up the long drive and saw many of his teammates had driven to the party. He shook his head as he could already faintly hear the pounding beat of music. They'd be drinking for sure.\n\nHe finally reached the front door and pressed the doorbell. Moments later the door opened and he was looking into the blue eyes of one of the prettiest women he'd ever met. She was tall and had red hair cascading down over her shoulders and framing her very impressive cleavage. He realized he was staring with his mouth open so he tore his eyes away in embarrassment and looked back up to her smiling eyes. She knew where his eyes had been and she'd enjoyed his appreciation.\n\n\"You must be Edward Walters. Please come in!\" she said in a wonderfully smooth voice. As she stepped back and he stepped in she held out her hand and he took it in his. Her hand felt so soft!\n\n\"I'm Rachel Thompson, Mark's mother. You were very impressive out there on the field tonight! So aggressive! You protected Mark very well!\" she said placing her other hand on his large bicep with a gentle squeeze.\n\n\"Thank you,\" he mumbled, completely dazzled by her beauty. He thought she might be in her mid-forties but she looked incredible! And that cleavage kept drawing his eyes.\n\nThen he felt it.\n\nHe was starting to grow. He subtly moved one hand down to the bottom of his shirt as if he was just straightening the fabric but he saw her glanced down catching what he was doing. Her smile grew sultrier.\n\nMark came to his rescue as his face grew hot with a blush.\n\n\"Mom! Can't you see my bro here needs a brew! Come on Mister Ed! Oops! Sorry Ed!\" He was slurring just a little. Mark had begun celebrating early.\n\n\"It was very nice meeting you,\" Ed said politely to Rachel as he was dragged away. He felt her eyes on his ass the entire way into the back room.\n\nA cheer went up when Mark led him into the large family room at the back of the house. Mark went to Reggie and was handed some money. \"I told you he'd show up! Get that man a beer!\"\n\nEd didn't drink but the entire team was holding those red plastic cups so he took the one offered to him and drank to the toast Mark bellowed out. The team responded in like and he smiled shyly. That's when he noticed how many ladies were in attendance. Most of the team had brought their girlfriends. Some of those girlfriends had invited along their friends. Ed lost count of how many people were in the family room but they spilled out into the adjoining kitchen and a large dining room beyond that had been cleared and turned into a dance floor. That's where the driving beat was coming from.\n\nHe finished the beer and another was placed in his hand and more toasts were raised.\n\nEd lost count of the toasts he had raised his glass to and he was feeling a little tipsy as he wasn't a drinker. He found himself a spot on the sofa and relaxed.\n\nA few minutes later Reggie was slapping his shoulder to wake him.\n\n\"Ed! Wake up, man! Someone wants to see you downstairs, man! Wake up!\"\n\n\"Wha-? Right, ok! Where?\" Ed struggled to get his head to focus.\n\nReggie turned away and seemed to be snorting or sneezing. He turned back. \"Just follow me, ok?\"\n\n\"Sure.\"\n\nThey left the family room and made their way through the dining room and the crowd of people on the dance floor. Ed's head was still spinning but he swore every girl he passed rubbed up against him. He was starting to swell down there but luckily the lights had dimmed considerably. As they came out the other side of the dancers Ed was face to face with Rachel once more and he smiled shyly at her as he squeezed past her. Again he felt something stroke across his groin but he failed to see her eyes widen in surprise or how she began to follow them down the hall to the stairs to the basement.\n\nEd was grateful the fabric of his pants stretched as he was seriously hardening in his pant leg.\n\nReggie led Ed to a door and gestured for him to enter. Ed looked at him then opened the door and entered. The light was pretty dim inside but he could make out the shape of someone sitting on a couch on the other side of the room. The person held out their hand to get him to approach. He did and saw it was Melanie. He immediately felt a blush on his cheeks and was grateful for the dim lighting from a number of small LED candles. He turned back to the young woman.\n\n\"Hi Melanie! Enjoying the party?\" he struggled to not sound like an idiot.\n\n\"Sit with me Ed,\" she said. He did and she slid closer.\n\n\"Do you like me?\" she asked.\n\n\"Yes,\" he croaked after a second of hesitation.\n\n\"I like you too. I'd like to kiss you. May I?\"\n\nEd was too stunned to speak so he just nodded.\n\nMelanie was suddenly pressed against his body thrusting her tongue into his mouth and sucking on his lips. He put his hands on her back and she moaned loudly and attacked his mouth more aggressively. He was starting to feel like his face was being licked by a dog, she was so sloppy. He had no experience with kissing but he knew it shouldn't be like this.\n\nShe crawled onto his lap and the pressure on his groin sent his erection into overdrive. She moaned as she felt the bulge under her leg.\n\nEd was seriously starting to feel dizzy and he needed fresh air. He lifted Melanie off of his lap and stood up. He missed that she'd undone his pants so he was totally unprepared when she yanked them down from her position on the couch behind him. The lights suddenly came on and there were at least twenty people crowded into the room looking at him standing next to the couch naked from the waist down.\n\nAt first everyone was frozen in shock.\n\nThen there was an absolute explosion of laughter, gasps, swearing, and a few screams from some ladies. He heard the term 'freak' and 'monster' multiple times from both male and female voices. Ed bent down and pulled his pants up but he could no longer fit his cock inside them. His shame. The reason they refer to him as a horse. Ten inches of cock when erect which it currently was and an intimidating thickness.\n\nHe did his best to force it back under cover and had to settle with closing his dress shirt over the length that rose above the waistband of his jeans. He surged forward and the group parted quickly until he was facing Rachel. He stopped suddenly and looked at her flushed expression. She'd seen him as well so his embarrassment was complete. Her eyes were wild and she seemed to be having trouble breathing.\n\n\"You- you'd better leave,\" was all she could say and he rushed past her and fled the house. He ran down the long driveway, through the long street to the bus stop and kept going. He was gasping and wheezing by the time he got home. He caught his breath on the front steps cursing himself, then pushed into the house.\n\n\"Hey Ed! You're home early,\" Grace said from the living room. She felt bad for how she'd left him last night so she got up to give him a hug. He pulled back when he saw her approach and rushed downstairs. \"Ed? What's wrong?\" she called after him. Grace walked down the stairs into the basement and saw his door was closed. She knocked.\n\n\"Don't come in! I'm not decent!\" he yelled from the other side.\n\nShe listened and she could hear what sounded like crying. \"Ed? Please let me in.\"\n\n\"NO! Stay out! I- I'm not DECENT! Please- please just leave me alone,\" he said roughly.\n\nGrace was worried about her brother. He was such an innocent. \"What did they do, Ed?\"\n\n\"Please- just let it go and let me sleep,\" a trembling voice came through the door.\n\nGrace wanted to punish someone for hurting her little brother. She would find out what they had done. She would get to the bottom of this. No one got away with hurting Ed. No one!\n\nChapter 4\n\nSleep came very slowly for Ed so he was jolted out of an exhausted slumber when Shirley slapped him awake in the middle of the night.\n\n\"Ow! What?\"\n\n\"I'm hurting so bad. I need a massage. Now!\" she whined. He could smell the whisky on her breath. No doubt with a Percocet chaser. The pain must be bad as she rarely climbed down the stairs into the basement. He'd have to carry her back to her room.\n\nEd sat up and got out of bed and prepared to lift her. Instead Shirley immediately laid down in his place. She allowed herself a secret moment to just absorb the feeling of his body heat from the mattress and his masculine scent on the sheets. Because of his size and weight they'd bought him a decent quality pillow top mattress years ago from a guy with a truck who had 'found' some mattresses.\n\n\"My back hurts so much!\" she moaned.\n\nHe was still partially asleep so he started to rub her back through her nightie but she cursed at him and told him to remove it. She struggled to lift herself enough for him to lift up the nightie but he accidentally brushed the sides of her large breast as he pulled the garment up. His cock immediately woke up and he cursed under his breath. He got her nightie off but he couldn't see how hard Shirley's nipples had become from his touch.\n\nHe put his hands on her back and began his deep muscle massage routine he had developed for her. She whimpered and moaned and cooed under his strong hands and his cock got harder and more sensitive the more he touched the woman's body. He had to sweep her ass length wavy brown hair from side to side so he could work unimpeded as he crossed her back. The ends of her hair tickled across her ass cheeks and she trembled with need. It had been a long time since she'd felt an intimate sexual touch of a man. The drugs in her system blunted the fact that the man touching her was related to her.\n\nThe pain shot through her again from her upper shoulders. She'd been struck in the spine just between the shoulder blades by a piece of suspended equipment being moved through the factory floor. That had been years before but her body had never recovered. The medical coverage was barely enough to cover the painkillers and she hadn't been able to afford chiropractic care. It wasn't in her health plan.\n\nEd was massaging on automatic as his sleepy brain dragged him back down. In his mind he was going over the material he'd read on spinal alignment. The body was just another machine to be repaired. He ran his thumbs up both sides of her spine and every time he felt a misalignment he'd push one side or the other or sometimes both. Her spine popped and creaked and Shirley was too stunned to speak. She was terrified at what he was doing but she couldn't speak as the relief after every pop was immense. He reached the point where the main injury had taken place and there was a major misalignment. Before she could even squeak in protest he pressed hard and there was a loud crack. The intensity caused Shirley to pass out. Ed's hands continued up on autopilot until he was sure every vertebrae was straight. He ran his thumbs back down her spine and everything felt right. His hands were on her ass and suddenly he was kneading them. His cock got harder and harder until it was tenting his baggy shorts badly. He frowned and woke up again realizing he'd pulled Shirley's panties down and he was rubbing her deep in the cleft of her ass. Her hips were rolling and she was moaning.\n\nShirley resurfaced with the most delicious feelings coming from down below. Then she realized she wasn't in pain any more. None. It was completely gone. The delicious feelings were going away as Ed was realizing what he was doing. She was so close to having an orgasm and she hadn't had one in years. A decade at least!\n\n\"That's helping make my pain go away! Keep doing that!\" she growled desperately.\n\nEd's hands twitched at the sound of her voice but they went back to squeezing and kneading her ass cheeks almost down to her pussy. She began to moan again but it sounded a little more frantic now. She exhaled noisily and her whole body shook. He throbbed painfully.\n\nShirley gasped and panted through her explosive orgasm and when it had finally subsided she felt something pressing against her leg. She sat up and realized she still didn't feel any pain. She looked down and saw the enormous bulge in Ed's shorts.\n\n\"What the fuck is that?\" she gasped.\n\n\"Nothing,\" he mumbled, looking away.\n\n\"You dirty boy! Did you get a boner when you gave me a massage?\" she hissed, not able to tear her eyes away.\n\n\"I'm sorry. I- I couldn't stop it.\"\n\n\"Take those off!\" she said pointing to his shorts.\n\nEd's eyes shot up to look at her flustered and reddened face which he mistook for anger. He slid his shorts down and his cock bounced free.\n\nShirley gasped once more when it was exposed and she grabbed it with both hands. Ed gasped.\n\n\"You dirty, dirty boy! Getting a boner for your Aunt Shirley!\" She was growling angrily but her hands were squeezing and stroking up and down.\n\nEd leaned back to pull away from her touch but she just started to stroke him faster in her tight grip. The sensations were flooding Ed's mind and he moaned and shuddered as pleasure shot through him.\n\n\"You were thinking all kinds of nasty things about your Aunt Shirley weren't you!\" she said in a breathy voice, her eyes locked on her hands pumping his cock so quickly now.\n\n\"Wait! Some- something's happening... stop, I- oh! I can't hold it-\" Ed desperately tried to get Shirley to stop but she just went faster and used one hand to rapidly stroke the top three inches and the head.\n\n\"OH FU-\" Ed began to yell before Shirley slapped a hand over his mouth.\n\nEd's mind whited out as stream after stream of cum exploded from him to splash over Shirley's face, chin, neck and chest. When he came back to his senses he was leaning back on his elbows breathing hard. He looked at Shirley and saw she was covered in his cum but she was no longer holding his cock. Her mouth was open and she was trembling but he couldn't read her expression. He thought she might just begin to scream at him but instead her voice was low and smooth.\n\n\"You are a wicked and dirty boy. Look what you've done to me!\" She smeared her fingers in the cum and rubbed it on her neck and chest. He wasn't sure how that was making it less of a mess but her glassy eyes never left his. \"I have to go clean up now. I want you to think about how wicked you were. How you are going to make it up to me. Such a dirty boy!\"\n\n\"I'm sorry-\" he began.\n\n\"No! I don't want to talk about it. You won't speak a word of this... wicked act to anyone. Do you hear me?\" Shirley hissed quietly.\n\n\"Yes.\"\n\nShirley stood up and wobbled a little. She wasn't used to walking without being hunched over and her orgasm was still with her. With her back to Ed she stroked a finger through a streak of his cum and raised it to her lips and inside. She shivered at the taste as it brought back memories of the incredible sex she used to have. She left Ed's bedroom with a final stern look back at him.\n\nEd was so distraught over what he'd just done he failed to realize that Shirley was able to walk all the way back to her room upstairs by herself.",
        "Chapter 5\n\nSchool the next day was a special kind of torture for Ed. News of his 'big reveal' had raced around the school populace so everyone seemed to be looking at him differently. The only saving grace was that not one of the people who'd been in that room had taken a picture. Some had their phones out but were too stunned to act in time.\n\nThe 'Mister Ed' nickname was being excessively overused, even by students he didn't know. He endured this all day and by the last class he just wanted to get through it and go home. He saw Mrs. Dmitrov, his chemistry teacher, staring at him repeatedly during the class.\n\nNear the end of the period she handed back a test they'd recently had and he saw he'd gotten a D, which in her class was a borderline failure. He saw she'd written instructions at the top of the page for him to stay after class to discuss the grade. She'd done this to a number of other students and afterwards there was always a vacant desk the following day. He needed the grade to graduate. Having to take a summer course to get the credit would screw up the job he'd gotten lined up for himself. A job he couldn't afford to lose.\n\nThe bell rang and the students rushed out of the room as he packed up. He left the test and his chemistry notes out.\n\nMrs. Dmitrov never smiled and her thick Eastern Europe accent made her class especially difficult for many students. Generally most people were uneasy around her. Students were scared because she held their future in her cold, uncaring hands. Other teachers disliked her because she never fraternized with them and treated them with disinterest. She was smarter than everyone else in the school and no one else seemed to be worth the effort to get to know.\n\nShe had greying brown hair, always pulled back in a severe bun and she wore plain black framed glasses over her brown eyes. She dressed in brown and green almost every day. She didn't wear any jewellery or makeup. She smelled like non-perfumed soap. She stood 5' 10\" in flat shoes and while no one would call her beautiful she wasn't ugly so much as plain. While she did appear to have large breasts, her large framed body was uniformly thick so if she had curves they were hidden under her drab clothes.\n\nShe looked up from writing something and gestured for him to come to the front of the class next to her desk. It was situated to the left side of the blackboard next to the windows. When he arrived she pointed to the spare chair next to the desk and he sat with his stuff on his lap.\n\nShe glanced at his test. \"You are failing my class.\"\n\n\"I really need this grade. Are there any assignments I can do, any make up tests available?\" he said with worry in his tone.\n\n\"What is difficult in my lessons for you?\" she asked.\n\n\"I had trouble with the last section and I'm worried about the next one,\" he said honestly.\n\nJust the smallest hint of a smile appeared on her lips. \"You read next section? Good. You get seventy five in next section, you will pass.\"\n\n\"Seventy five?\" he gasped. \"I've been getting sixties in your class so far. How am I going to get seventy five?\n\n\"I could tutor you but not for free,\" she said, staring at him intently.\n\nEd's heart dropped. \"I have no money.\"\n\nA look of distaste passed over her features and she waved his words aside. \"First I must know the truth.\"\n\nHe looked blankly at her.\n\n\"There is a rumor I overhear two teachers repeating today. You were at football party?\" she seemed nervous and Ed had never seen that on her before. Then he blushed as her words sunk in. Her eyes lit up.\n\n\"You are aware of rumor. Is true? You are big?\" Her accent was getting thicker with her nervousness.\n\n\"Uh, I'm not comfortable talking about this-\" he croaked before she interrupted.\n\n\"If I do not tutor you, how will you pass my class?\" she pressed, her eyes locked on his.\n\nHe looked at her and realized he had no choice. He nodded.\n\n\"Is true?\"\n\nHe hesitated then nodded again, his blush racing across his face.\n\nShe held out her hand for his notebook and she quickly went over his notes. \"Yes, you are grasping basics. I can work with this. You will come to my house tomorrow at 1PM for three hours. Yes?\"\n\nTomorrow was Saturday. He had the early shift at the home center, 7AM until noon so he could work that in. He nodded and she handed him his notes back with a slip of paper. He saw a map drawn on the paper.\n\n\"Map to get to my place. Do not be late, bring your text and notes, and be ready to study! I do not do this for anyone else so you cannot mention it to anyone. Understood?\"\n\nHe nodded.\n\nShe looked back to her work and he was obviously dismissed. He got up and left the school as quickly as he could.\n\nChapter 6\n\nGrace drove home thinking about how much better today had been than the day before. Still not wonderful but showing promise at least. She recalled how surprised she'd been when she was immediately called into Mr. Chambers' office when she'd first arrived. He was store manager and the administration offices were definitely buzzing as she passed through them. She knocked and heard his voice calling out for her to enter. She stepped inside.\n\n\"You sent for me, Mr. Chambers?\" she asked.\n\n\"Yes, please, have a seat,\" the white haired older man said gesturing to the chairs across from his desk.\n\nOnce she was sitting he got right to the point. He was direct like that and the staff all appreciated that.\n\n\"Frank Gorely has been fired. Effective immediately.\"\n\nShe couldn't stop the smile from leaking onto her face.\n\n\"From your expression this isn't unhappy news to you,\" he said.\n\n\"No, it isn't,\" she agreed.\n\n\"So you weren't having an affair with him?\" he asked bluntly.\n\n\"God no! He was disgusting!\" she growled then reined in her anger.\n\nThe manager hit a button then flipped his monitor around to display the image of Frank's privates hanging in her car window.\n\n\"Your car? Your picture?\"\n\n\"Yes, from his surprise visit in the parking lot last night as I was trying to go home. From his slurring I think he'd been drinking. He threatened my job if I didn't do something nice for him. I took some pictures then did something nice for me instead. I guess having a travel mug slammed down on his nuts didn't match his expectations.\"\n\nThat drew a smile from the man. \"My question is this. Are you going to sue the company over this?\"\n\n\"What? No! I can take care of myself as I proved last night. I told him to stay away from the women in the store. I sent him the picture as a warning to heed my words. I appreciate having a job. I just want to keep it. Your action in firing him certainly fulfills my need for justice,\" she blurted. She looked at the man. \"How did you get the emailed image?\"\n\n\"His own policy backfired on him. He implemented a mail filter on all company email to copy any messages containing 'pornographic images' and certain offensive words to a special HR inbox. Your message to him contained both so the first HR staff to arrive this morning got an eyeful of their bosses... parts. Frank is in the hospital recovering from emergency surgery last night. Seems he had a little accident. I doubt he will press charges considering what he was doing when the 'accident' occurred.\"\n\nShe nodded with a smile.\n\n\"Alright then. I formally offer you my apology for having to deal with Frank Gorely and my thanks for giving us the means to expediently remove him from the company.\" Mr. Chambers stood up and held out his hand. Grace stood and shook the offered hand. She understood the meeting was over. He walked her over to his door and the staff saw they were both smiling when she left to go back to her cashier's desk. She saw a few thumbs up on her way back.\n\nWhen she got back to her desk after lunch she saw every station had a bright and shiny metal travel mug perched atop it. News of her dirty deed had passed quickly and for the rest of the day she had been accepting thanks from many of the women in the office.\n\nShe felt kind of warm and fuzzy about it on her drive home but that hadn't added any extra money into their account. She had to keep in mind that she still had a job. And Frank's job was gone, like his testicle.\n\nChapter 7\n\nFriday night was pizza night. They had coupons which would get them one large pizza with one topping for half price. Ed would make salad and that was enough.\n\nFor the first time in a long time Shirley was sitting at the kitchen table with them. She still had her whisky but she was sitting in a chair.\n\nGrace was looking at her in shock. Just yesterday Shirley was drunk out of her mind and in agony. Today, she was just tipsy and only showing the occasional grimace as she moved her back.\n\n\"How are you feeling Mom?\" she asked quietly.\n\n\"Like I'm finally on the road to recovery!\" Shirley gushed.\n\n\"What happened?\"\n\n\"Edward has magic hands,\" her mother replied.\n\nEd looked distinctly uncomfortable when Grace looked over at him.\n\n\"I was in so much pain last night that I climbed down all those stairs to his bedroom and woke him up to massage my back. He did something to my spine with his thumbs and it felt so much better afterwards. I think I'd feel even better if my damn mattress wasn't so worn out. I felt better than this when I went to sleep last night.\"\n\n\"Mom, we can't afford to get a new mattress for you,\" she said. Grace was remembering how upset Ed was when he got home last night. He'd been crying, she was sure. Typical that her mother would ignore his feelings and just demand he fix her... back. She looked at him as her eyes widened.\n\n\"Ed, did you fix Mom's back?\"\n\nHe looked troubled. \"I don't remember. I was pretty exhausted last night. I don't remember much.\" He glanced at Shirley.\n\n\"How much is a new mattress at your store? One with a pillow top!\" Shirley blurted. Then she gave Ed a weird look and he looked away. Grace was lost. She had no idea what was going on.\n\n\"Even with my discount a basic mattress is at least $500 and the ones with pillow tops are all over $1000! Even a basic one would be a stretch on our budget!\" Grace exclaimed. Shirley looked glum.\n\n\"But my back is sore after sleeping in my lumpy old bed,\" she whined.\n\n\"We can't afford it! OK?\" Grace was starting to get angry again. It was always money! If she'd sued the store she might have gotten some money out of it but that would run out and then she'd still be in this stinking town but now with no job prospects.\n\nAppetite gone she pushed back from the table. \"I'm done in. Going to bed. See you in the morning,\" she grumbled as she left.\n\nShirley stood up. \"I'm going too. Goodnight.\"\n\nEd looked at her back with relief. He was so worried she was going to say something about the previous night. Once she was out of the kitchen he cleaned up and packed the extra slices of pizza for Grace's lunch. His stomach rumbled as he put the pizza in the fridge. He squashed that down and helped himself to more salad. It wouldn't last another day. He washed the bowl when he was done and went to bed himself. He had the early shift so he might as well go to bed early.\n\nChapter 8\n\nSometime around 1AM he heard his bedroom door open and he looked over to see Shirley walking towards his bed. He tried to blink the sleep out of his eyes because he couldn't figure out what she was wearing. It seemed to flow around her body like smoke. He got glimpses of too much of her skin and he had to look away.\n\n\"Ed, my back is hurting. I need you to massage it again.\"\n\nHe crawled out of bed and saw her crawl in with a smile on her face. He looked down at her back in dismay as the gauzy fabric was so... transparent. She had a nice body though it was carrying too much weight in some key areas.\n\nHe touched her back and she hissed at him. \"Under! You have to take it off!\"\n\nAgain she struggled to lift herself as he tugged at the nightie and ended up touching her skin all up the sides of her body. When he reached the sides of her breasts she snapped her arms in trapping his hands against them.\n\n\"You tickled me!\" she gasped.\n\n\"S-sorry!\"\n\nHe carefully peeled back her nightie until her skin was exposed. He began his routine and once more she sighed, cooed, moaned and writhed as he worked the knots out of her back.\n\n\"Do the thumb thing!\" she moaned.\n\nHe wasn't sure what she meant so he ran his thumbs over her shoulder blades. She groaned then shook her head.\n\n\"No! Along my spine!\" Shirley growled impatiently.\n\nEd moved his thumbs to her spine and a memory surfaced. He closed his eyes and felt the memory take over and let his thumbs move up and up as the image of the text book flashed by in his mind. He did feel a few new misalignments but they were small. He popped them and moved on and Shirley gurgled her happiness as his thumbs reached the top and began their way back downwards. Her pain was gone once more!\n\nHis eyes were still closed and he was slipping into that semi-conscious state where he was most aware of his sense of touch.\n\nShirley's skin was soft under his hands, her flesh pliable, her body receptive to his touch. Her coos became more sensual as he moved lower and lower. He was kneading her flesh once more when he surfaced from his Zen state and she was on the brink of release. He squeezed extra hard in surprise when he realized what he was touching and she cried out as she came.\n\nShe panted and gasped until she could catch her breath. She spun suddenly and sure enough he was tenting his shorts again.\n\n\"I can't believe it! A boner for your Aunt Shirley again? You dirty boy! Take those off!\" she demanded.\n\nHe looked down. \"Please. I don't want to.\"\n\n\"After all I've done for you, you're going to be disobedient?\" she gasped but smiled secretly when he looked away and tugged his shorts off.\n\nShe looked at his monstrous cock and shivered in delight. So thick! So long! So wicked!\n\nShirley grabbed it like she had the night before and felt the heat of it flowing into her hands. Oh god, she wanted to put it in her mouth then her pussy but it was too soon for that. He wasn't ready.\n\nShe began to stroke him firmly and he leaned away from her again but she just kept up her efforts. It took much longer to get him to the edge tonight. She was beginning to break a sweat and her hands were getting tired. Still, her eyes were glassy with lust and her panting breaths matched his. She could feel him thickening in preparation for his orgasm so she moved her hand to the top again and over stimulated the thick purple head. He cried out and his come burst forth over her face and down her chest as she directed the jets.\n\nThere was more than the night before! Some had shot straight into her open mouth. She savored it as she looked at his perspiring face. His eyes opened and he froze when he saw what he had done, again.\n\n\"Oh god! I'm sorry!\" he gushed but he noticed she wasn't looking angry like the night before. He was so confused. She- she liked this?\n\n\"Wicked boy! What am I going to do with you!\" she breathed. She slid a finger down her cheek towards her mouth and sucked the digit clean as he watched incredulous.\n\nShe stood and slowly walked out of his room as he flopped back on the mattress. His brain spun and spun until exhaustion took him.\n\nChapter 9\n\nThe morning shift at the home center had been brutal. They'd gotten a shipment of patio stones in and he and one other worker had to move them from the truck to the outdoor garden center. There was no room for the stones so they had to move ten pallets worth of bags of crushed gravel to make a spot.\n\nHis muscles twitched from the workout and he was a sweaty mess. He wished he had time to shower before going to his tutoring but his instructions were not to be late. He drove quite a distance out of town and found her small farm house off the highway. The location matched the map directions so he drove up the long straight lane between the trees and parked beside the house. Glancing at the dash clock he saw it was 1:07PM. He grabbed his backpack and rushed up to the front door and pressed the doorbell.\n\nThe door yanked open and Mrs. Dmitrov was standing there looking angry and a little frantic. She pushed the screen door open. \"YOU ARE LATE!\" she yelled. Her bottom lip trembled slightly and her eyes were a little red like she might have been crying.\n\n\"I'm sorry. There was a surprise shipment we had to move. Sorry I'm so sweaty!\" he stumbled through his apology. He entered the house and she pushed the door closed.\n\nShe froze as she took in his sweat stained shirt and the sheen on his skin. She moved closer and he saw her nostrils flare as she smelled the saltiness of his sweat and the heat coming from his overworked muscles.\n\n\"Put your bag down and take off your jacket!\" she barked.\n\nHe dropped the bag by the wall and yanked his jacket off. He turned and hung it on a hook.\n\nSuddenly she was pressed up against his back and her arms were under his arms and around his chest. She pressed her face into his sweaty t-shirt and breathed in deeply.\n\n\"Mrs. Dmitrov!\" he gasped as she ran her hands over his broad chest muscles.\n\n\"Nina. You will call me Nina but only in this house,\" she insisted.\n\nHer hands were sliding lower and he was starting to react to her touch and the feel of her breasts crushed against his back. He froze as he recalled her words the day before. She wanted to know if he was big. Her hands were about to find out.\n\n\"What- what about the tutoring?\" he stuttered.\n\n\"There is time for that later. Now I must know if you were telling the truth!\" She undid his belt, button and zipper. Then her hands were inside his pants.\n\nEd gasped as her hands reached the root of his swelling cock. It was trapped pointing down in his pant leg. She couldn't extract it so she made a sound of frustration and slid his pants down as she knelt behind him. He sprung free and she looked around his legs to see it.\n\n\"Ahhh... Oh god! Is true! It has been so long!\" she moaned as she delicately ran her hands over his stiffening flesh. Her face was pressed against his butt and he felt her kissing his sweaty skin as she stroked him to full size. Her hands gently hefted his heavy balls in her palm. \"You have much cum for me,\" she whispered. It felt like she wasn't talking so much to him as to his testicles.\n\n\"Mrs- Nina! Please! What are you doing?\"\n\nShe released his cock and stood up behind him. She stepped back and he turned to face her with his cock hidden behind one of his arms.\n\n\"Do not hide yourself. Not from me,\" Nina said as she looked down.\n\nReluctantly he pulled his hand away and his cock bobbed before her.\n\n\"It has been many years since I have seen one so large. My husband was large too but he died in war in my home country before I fled to the States. I want you to make me feel like I did when I was with him.\" At Ed's confused look she took his hand and began to pull him to the living room. He had to kick off his boots and step out of his pants and socks to keep from tripping but he followed her. He quickly looked around. Not much in the way of furnishings or personal touches. Very functional but that was about it. He turned his attention back to her.\n\n\"My husband was not a gentle man. He had coarse desires and took his pleasure. I was young and inexperienced but he brought me such pleasure by taking his own from my body. It has been years since I lost him. I wish to feel that again. You will do this.\"\n\n\"I've never... done that,\" he admitted with a blush.\n\nShe stepped up to him and looked him in the eye. \"You will not fail my class if you do not fail me here. I will teach you chemistry and I will teach you how I wish to be used. Not all women enjoy it as I do.\" She paused as she thought about that last statement. \"Most do not, but I do. You will do this.\"\n\nIt wasn't really said like a question but Ed felt compelled to nod anyway. He didn't have a choice as he needed the course credit.",
        "\"Good. First thing. His touch was not gentle. He gripped, squeezed, and pulled at my flesh strongly. He used my mouth, my vagina, and my ass for the pleasure of his cock as his mood desired. He slapped my ass when he fucked me. His favorite position was to take me from behind. He did not wait for my pleasure but I found it anyway. Is this understood?\"\n\nHe stared at the woman whose expression was stern but her eyes were silently begging him. He nodded. He pulled off his shirt then pointed to hers.\n\n\"NO! You must take it!\" she barked. He hesitated then reached over and gripped the bottom of her blouse and pulled it roughly up over her head. He was feeling a little panicked about this but her eyes were closed and her mouth had a little smile in the corners. He looked at her large, heavy tits bulging out of her ugly tan colored bra. He put his hands on them and squeezed. He watched her expression closely and saw she was beginning to frown as he caressed the soft fabric encased orbs. He yanked the cups upwards exposing her flesh and she gasped. He moved his hands to her skin and squeezed again. He tightened his grip until he saw her face show the first signs of enjoyment. Ed took her stiff nipples between thumb and forefinger and pinched them tightly and she moaned. He pulled them and she whimpered but made no move to stop him. He spun her in place and undid her bra and tugged it off. Then he pulled her back against his chest so he could get his hands on her tits again. They filled his hands so he dug his fingers in and she laid her head back against his shoulder and placed her hands over his as she trembled. He plucked at her nipples giving them little tugs and she made mewling sounds but ground her ass back against him.\n\nHe unbuttoned her pants and pulled them down as he knelt behind her. Her ass was huge from this vantage point. It was wide and soft and covered by ugly tan colored panties. He grabbed the waist band and pulled them down after her pants.\n\nFilling his hands with her ass flesh he squeezed and parted her cheeks. He was grateful she kept herself clean as it would have been very unpleasant otherwise considering how close he was. He stood and forced her to bend over the arm of the couch. This put her ass up in the air like she was prepared for a spanking. She said she liked that so...\n\nSLAP!\n\nShe cried out and looked back with glassy eyes. He slapped the other cheek and she cried out again. He was beginning to smell a scent he suddenly recognized. Shirley smelled like this when he massaged her ass.\n\nHe parted her red cheeks and saw her swollen pussy lips. He stroked a finger across them then pinched her pussy lips together and rolled them together between his fingers.\n\n\"Ahhh! Fuu- ahhh!\" Nina gasped.\n\nEd pushed his finger into her pussy and discovered where her channel was. She had flaps of skin covering her opening and pulling on them made her jump and twitch. At the top of her opening was a stiff, protruding bud of flesh that seemed very sensitive. He spanked it gently and she began to squeal. Her pussy began to drip and her scent got stronger. He watched her asshole winking at him as he spanked her. It seemed to be going through spasms and that was fascinating to see.\n\nEd's cock felt like it might break off from being so hard. He stood up and moved the head to her opening and pushed it against her. He felt his dry skin sticking to her. He needed to wet it. He walked around to her head and knelt in front of her on the couch. He undid her hair bun and her hair dropped to her shoulders. He gathered it up in his fist and pulled her head towards his cock. She looked up at him and he pressed the head against her lips but she just looked up at him in trembling defiance. He leaned over her body and slapped her butt cheeks hard. It was amazing to see her flesh wobble and shake but soon he felt her running her tongue along the side of his cock. He pulled back and got a grip on her hair again. He pushed the fat head between her lips and she dragged her teeth on his skin. He pulled out quickly and looked at her.\n\nNina's face was flushed with lust but there was still some defiance in her. He reached over her body once more and felt her brace for his slap so he pushed two fingers deep into her pussy instead. She gasped as he pumped them roughly in and out coating his fingers in her juices. He pulled them out and dragged his fingers up her smooth skin to her asshole. He rubbed the twitching orifice until it was slick with her juices.\n\nThen he shoved a finger inside.\n\nNina cried out and her whole body was shaking strangely. He could feel her insides rippling against his buried finger and she moaned as he began to pump the finger in her ass. He pulled it out and she whimpered. He leaned back and took a grip once more on her hair. Her mouth dropped open automatically and he slid his cock onto her wet tongue. She kept her teeth back now and he was able to stroke deeper and deeper until he felt the head touching the back of her throat. She gagged but he pushed just a little further then slid himself out. His cock was slick with her saliva. She coughed and looked up at him with tearing eyes. He smiled at her and moved back behind her.\n\nPlacing the head of his cock against her opening he pushed forward. Her head snapped up as she felt his hot flesh forcing the walls of her pussy apart. She began to groan and tremble. She was so wet!\n\nEd thought he'd died and gone to heaven. It felt like nothing he'd ever experienced before. It was so incredibly good!\n\nHe pulled back a little then slammed forward until he struck bottom. She jolted and cried out in pain which made him realize she was not as deep as he was long. He looked down at himself and he was barely past the midpoint. He pulled back and began to stroke his cock in and out, stopping before hurting her again. He recalled Nina said her husband spanked her during sex so he gave her ass a firm slap and she cried out and pushed back against him. He alternated cheeks and her cries became frantic as did her thrusting. He gently rubbed the welts on her ass and she moaned loudly. He felt his release approaching.\n\n\"I'm going to come,\" he groaned.\n\n\"INSIDE! Do it inside! I want to feel it deep inside me!\" she screamed as her movements became erratic.\n\nEd slid his finger around his pumping cock and made it wet with her juices. Then he sunk the digit deep into her ass. She shrieked as her second orgasm ripped through her. He felt her body stiffen and she clamped down on his cock and finger. He pushed himself deep once more and the intensity of the sensation was too much. He exploded deep within her body and surge after surge of cum jetted into her.\n\n\"AAAAAAAHHHHHH FFFFUUUUUUUCCKKK!\" she ground out as she shook and collapsed forward onto the couch. He rested for a few seconds then pulled out and saw he was still dripping. Ed moved to sit on the couch next to her. He grabbed her hair and lifted her head. She looked at him in surprise. He lowered her mouth over his cock and she took him inside. He felt her tongue lapping at his sticky flesh. He squeezed his cock from the base and ran his encircling fingers up to deposit the last load into her sucking mouth.\n\n\"Mmmmmmm!\" she purred with his softening cock deep in her mouth.\n\nEd pulled her off his cock as it was becoming too sensitive. She looked at his expression and saw he was done. She pulled herself off the arm of the couch and sat next to him. She hissed and her teeth chattered as her ass touched the cushions. He watched her eyes flutter as she adjusted to the pain.\n\nFinally her eyes opened and she looked over at him.\n\n\"This was your first time with a woman?\"\n\nHe nodded with a blush.\n\n\"You surprised me. You did things my Antov did and things I now wish he had done.\" She studied Ed's face with no expression on her own. \"Is good. I was trapped in past with memories of him. You were better. I see now I can move on.\"\n\nShe seemed to be having some kind of personal epiphany. Ed followed her eyes and noticed quite a few pictures of the same man in different places. He assumed this was Antov. He had obviously been very important to her.\n\n\"Get text book and notes. We work on your tutoring now. Leave your clothes off,\" she said as Ed bent down to pick up his shirt. He looked at her in surprise then dropped the shirt over the back of a nearby chair. He walked into the front hall to get his bag. He also picked up his pants and socks and carried everything back to the living room. He tossed his clothes over the chair with his shirt and followed Nina into the dining room. He pulled his books out and placed them on the table.\n\n\"Now we study,\" she said, sitting carefully next to him, still naked as he was.\n\nThe next 90 minutes passed in a blur as Nina learned how to teach Ed. As she explained it, each student had their own methods for memorizing and accessing information. If she could learn Ed's method she could tailor a lesson for him that would have a much higher chance of maximizing his retention and recollection. When she was done she nodded to herself.\n\n\"Yes. I can do this. Next Saturday you will return and I will teach you the next chapter in the text. Then you will write the test on the chapter,\" she explained.\n\n\"I can't learn a full chapter in one day!\" he gasped, feeling a little hopeless.\n\n\"Yes, you can. I will prove it next week,\" she insisted.\n\nHe sat next to the woman hoping she knew magic or something as he knew his brain had so much trouble with Chemistry.\n\n\"Now we fuck.\"\n\nEd's eyes widened at her statement. \"Aren't you in too much pain?\" he gasped. He'd seen her wincing through the entire time they'd been in the dining room.\n\n\"It does not matter. Now I want you to do with me as you wish. Anything you wish to do to learn the female body. Do not concern yourself with my pleasure or having me reach orgasm. Use me to learn,\" she stated bluntly.\n\nHe looked at her and realized he'd probably never have such an opportunity again. He stood and helped her to her feet. They walked back into the living room. He looked at the couch then turned to her. He didn't want her sitting on her welts. \"Could we use your bed instead?\"\n\nShe studied him then nodded. He wasn't sure what test he'd just passed but was grateful he did.\n\nHer bedroom was as sparsely decorated as the rest of the house. Just what needed to be there was there. He saw a few more pictures of Antov but she surprised him by placing them all face down. He gestured to the bed and she climbed on it and laid down in the center as he directed.\n\nHe climbed on next to her and she looked up at him.\n\n\"May I kiss you?\" he asked.\n\n\"No.\"\n\n\"No? I can fuck you but I can't kiss you?\" He was more than a little puzzled by this.\n\n\"Kissing is for lovers. There is no emotional attachment between us nor can there ever be. We must keep this rule. Understood?\"\n\nHe nodded. \"Sorry, I've only kissed one other person and even I could tell she wasn't good at it. I was hoping to learn how to do it better.\"\n\n\"For that you will have to look elsewhere,\" was all she said.\n\nHe nodded again. \"Wait, you said that most other women don't like it as rough as you do. Does this mean you won't respond the same way as other women do if I try something gentler, something that they might like?\"\n\nShe pushed herself up on her elbows and looked at him. \"I had not thought of that.\" She frowned. \"I can teach you anatomy only.\"\n\n\"OK,\" he said. He reached out and pushed her down on her back. Then he grabbed her tit and squeezed it to make the tit and nipple point upwards.\n\n\"This is your tit and this is your nipple.\" He leaned forward and sucked the nipple and the whole area around into his mouth. She gasped. He suckled and thrashed her nipple with his tongue and she arched her back to get more of her tit into his mouth. He grabbed the other one and squeezed it as well. He tugged the first nipple between his teeth then let it go to move over to the second nipple for similar treatment. When he was done Nina was squirming uncontrollably on the bed. He kneaded the soft flesh in his big hands and squeezed them together. He bit down firmly, but not dangerously, on both nipples at once and Nina screamed her pleasure/pain.\n\nHe released her tits but kept the nipples in his mouth, sucking and almost releasing again and again.\n\nHis right hand slid down her soft belly to the small patch of pubic hair she'd left above her pussy. He released her nipples with a pop. \"You trimmed this hair. Do all women do this?\"\n\nShe panted as her erect nipples throbbed. \"No, some leave it natural. Too messy for me.\"\n\nHe slid his fingers a little further down and encircled the stiff little bud of flesh at the top of her pussy.\n\n\"My clitoris!\" she gasped before he could say anything.\n\n\"This is very sensitive! I assume I will have to be careful how I touch it and when?\" he said as he ran two fingers up and down her skin on both sides of it. Nina was gyrating her hips trying to get him to touch her harder but he continued to tease her.\n\n\"Yesssss! Oh! Oh fuck!\" she hissed.\n\nHis left hand was still up by her tits so he pinched her nipple and gave it a tug.\n\n\"AHHH! OH! Oh fuck me! Mmmm!\" she moaned as her whole body writhed under his hands. Her eyes closed to enjoy the tingles shooting through her body.\n\nEd let go of her nipple and slid down to lay between her legs. He looked closely at her pussy and saw the outer lips were becoming swollen and wet. He dipped his head forward and ran the flat of his tongue over them.\n\n\"FFFFUUUUUUUAHHHH! WHA- What was that!\" Nina cried out.\n\n\"What? This?\" Ed said as he stroked his tongue across her pussy from bottom to top ending with a flick across her clit.\n\n\"AAAAAAAHHHHHH! OH FUCK! Mmmmore!\" she threw her head back and screamed.\n\nHe did as she asked and lapped at her as she clung to his head. He sucked the folds of skin into his mouth and lashed them with his tongue.\n\n\"NNNnnnngggg ffffuck!\" she moaned as she shook.\n\nHer pussy was becoming very wet with his spit and her juices so he slid a finger into her channel then two as he gently sucked her clit between his lips. He reached as deep as he could then began to pump them in and as he ran his tongue across her little bud.\n\n\"AAAAAAAAAAHHHHHHHH! FFFFFFFFFFFFFAAAAAAAHHHH!\" she screamed as a colossal orgasm roared over her senses. She clamped her thighs around his head and shook.\n\nEd was having a little trouble breathing and his hand was trapped as well. He managed to extract his fingers and rubbed them against the sensitive skin between her pussy and anus. Then he slid a finger into her ass and renewed his efforts on her clit.\n\n\"AAAaaauuuu-\" she began to scream once more then it just petered off as she went limp.\n\nEd pulled his face back from her pussy and gasped for a breath as she released his head from the grip of her hands and thighs. He looked up and saw her eyes were closed but he could feel she was still breathing. He got off the bed and stepped into her bathroom to wash her juices from his face then slipped back onto the bed to lie beside her.\n\nHe wanted to touch her but she was sleeping and it would feel creepy doing that. Her eye lids began to flutter and he watched her resurface.\n\n\"What-\" She swallowed. \"...what happened?\"\n\n\"I think you passed out. I hope I didn't hurt you,\" he said.\n\nShe considered him with no expression on her face. Ed found it uncomfortable when she did that. \"Antov never did what you did. Again, I wish he had.\"\n\nEd looked over at the clock and saw he needed to get moving. He had to pick up the ingredients for dinner tonight and tomorrow on his way home. \"I have to go. Thank you so much for the lessons.\"\n\nHe got out of the bed and she just waved at him as he went back to the living room to get his clothes.\n\nOnce he was dressed he gathered his books and let himself out. He hopped back into his truck and started back to town. He still had severe doubts about how he was going to get a seventy five on his next Chemistry test but he found himself actually looking forward to next weekend.\n\nChapter 10\n\nThe grocery store was quieter than Ed expected. Saturdays were usually when all the people who could do their shopping during the week decided to jam the aisles, aimlessly shuffling behind their carts. He sighed with relief as he made his way unobstructed to the meat department.\n\nHe had money in his pocket and two dinners to buy for. Saturdays they ate light, sandwiches and salads, but Sundays they had a family meal with a roast of some kind. Whatever was on sale at the time. It was a little tradition they tried to keep going no matter how tight their budget was.\n\nHe picked up a bag of day old Kaiser buns (they could be steamed back to freshness), a small tub of macaroni salad and one of creamy coleslaw, and hit the deli counter for some roast beef slices (not too many). The ladies who worked the counter all liked Ed and often added a few extra slices on the house. He always had a nice word and a big smile for them.\n\nSo dinner tonight was covered. Now for tomorrow's roast. He pushed his cart over to the meat section and slowly made his way along the aisle. Chicken was always the cheapest so they had that the most often. The pork roasts he could afford were typically very fatty. Beef was good but again, the cuts he could afford were typically pretty tough. He'd have to do a lot of work to tenderize the meat. He stood before the beef section comparing a few roasts when he sensed someone approaching. He made a snap decision and placed a roast into his cart. He glanced over and froze as he saw the red haired beauty approaching with a smile on her lovely face. She pushed her large sunglasses up into her mane of red.\n\n\"Edward Walters? Remember me? Rachel Thompson?\" she said with a cautious smile as Ed looked like he might bolt.\n\n\"Hi, Mrs. Thompson,\" he croaked.\n\n\"Please, call me Rachel,\" she said as she got closer. Much closer. \"Listen, I just wanted to apologize for that cruel prank my son and his friends played on you and Melanie.\"\n\nEd's face blossomed into full blush mode as he recalled Rachel had gotten a very good look at his shameful secret.\n\nRachel was watching his face, fascinated by his blush.\n\n\"That's ok. I think Melanie was in on it too and the guys are always teasing me. I'm used to it,\" he mumbled.\n\n\"Now, Edward I can see that's not true. It was mean and I gave Mark a good talking to the next morning. He promised me that he would find you and apologize first thing. Did he?\"\n\nEd's mind flashed to the memory of Mark bellowing his nickname in the hallway by the cafeteria entrance just before lunch. \"Uh, yes. He did.\" Ed looked away.\n\n\"No, he didn't. You're not a good liar Ed and that's a very good thing! It means you're a good person who has little practice with lying... unlike my son. Like father, like son.\" She frowned when she said that and placed her hand on his which was still on the handle of his cart.\n\nHe glanced down at her perfectly manicured slender fingers on his larger hand. When he looked up again his eyes were trapped by the sight of deep cleavage that he could have sworn wasn't visible seconds before. He struggled to lift his eyes and once more they were captured. This time it was her lush red lips which were currently showing a very pleased smile. He found himself getting lost in her smile. He blinked hard and looked into her eyes.\n\n\"You are just so sweet!\" she gushed with her breathy voice and he felt himself begin to respond.\n\nHe panicked a little. \"It was really nice meeting you again Mrs- Rachel. I should finished my shopping. I have to get home to make dinner.\"\n\n\"All this and you can cook too?\" she blinked her beautiful blue eyes in surprise.\n\nEd didn't know what she meant by 'all this' but he nodded to her. \"Yes, I like to cook.\"\n\n\"Maybe you could make something for me one day,\" she said with her sexy smooth voice. Ed was rapidly running out of room in his pant leg and was trying not to be obvious about adjusting himself as it was getting pinched.",
        "He smiled nervously and she giggled. This caused her cleavage to jiggle in a most delightfully mesmerizing way. While his eyes were trapped once more she dipped forward giving him an even better look. He swallowed slowly as she stood upright again. He noticed she'd picked up the roast from his cart.\n\n\"I thought you said you knew about cooking. This is not a good cut of meat,\" she chastised him gently.\n\n\"Yes, I know but it's all I can get with my budget. I've learned how to tenderize meat so it melts in your... mouth,\" he explained then his eyes locked on her mouth again and the smile came back.\n\nShe walked over to the selection of beef roasts and pulled out a large top sirloin dropping his roast back into the display. She put the roast into his cart and his eyes widened when he saw the thirty dollar price tag. He made to protest but she touched his lips sensually with a finger and shushed him. Her other hand tucked two twenties into the overly tight pocket of his pants then remained touching the taught fabric. Right over his straining cock.\n\n\"This is the least I could do to make up for the cruel behavior of my son. A big strong man like you deserves to treat himself every once in a while to the finer things in life.\" She glanced down and his eyes were followed once more to her soft, inviting tits which were now pressing ever so gently against his broad chest. He could feel her stiff nipples sliding across his shirt. His cock reached maximum rigidity and she cooed as she felt it swell under her fingers.\n\nThe squeak of another cart approaching broke the moment. She pushed back gently sliding her fingers up his cock then she smiled and lowered her sunglasses over her sparkling eyes. She turned and walked back up the aisle, hips swaying seductively the entire way. He couldn't tear his eyes away until he saw her walk out the front door.\n\nHe then realized she didn't have a cart or a hand basket. She didn't appear to be shopping for anything. Why had she come to the grocery store at all?\n\nHe pulled the money from his pocket and saw how much it was. He reached into his cart and took the roast out. It went back into the display and he picked up a roast just slightly larger than the first one he'd grabbed. It was still a cut he would have to spend time with to make it tender but it was worth the effort. As much as he would have enjoyed the top cut, he could put the extra money to better use. Like his sister's future.\n\nChapter 11\n\nGrace had Sundays off and what she liked to do most was absolutely nothing. With the weather outside turning decidedly chilly, there was nothing nicer than snuggling deep under her blankets and sleeping the day away.\n\n\"Grace! Get up! I need you to drive me to the mall!\" her mother bellowed through the closed and locked door. The lock had become necessary due to her mother's drinking. More than once Grace had found her drunken mother wandering around in her room in the middle of the night. Freaked her out so the lock went on.\n\n\"GO AWAY MOM! It's my fucking day off!\" Grace yelled from under her blankets.\n\n\"Language Grace! I need you to drive. You know my license lapsed,\" Shirley called through the door.\n\nGrace pushed the blankets down and looked at the clock. 10AM. Ugh.\n\nThen it hit her. Her Mom wanted to leave the house! She hadn't done that for... well, not since she got back from the hospital. What the fuck was going on with her! It had to be more than Ed's massaging her back.\n\nShe dragged herself out of bed and plodded over to her door to open it. On the other side was a stranger. Long, beautiful brown hair freshly washed and styled. Face scrubbed clean and wearing make-up? Not overly done either. Just a subtle application of eye shadow, mascara, a hint of blush, and lipstick. Grace blinked and rubbed at her eyes. She looked closer. Her mom looked, just a little... younger. She was smiling?!?\n\n\"Good morning love! Take your shower and get dressed. I need to get some new underthings. Mine are hideous!\" Shirley chirped happily. She patted her daughter's cheek then went down the stairs, her long hair bouncing and swaying. Her mom hadn't moved that quickly down a staircase since before the accident.\n\nGrace went back into her room and got some clothes. She took her shower, dressed, and met her mom down in the kitchen. There was an amazing smell coming from the room and Grace froze when she saw her mom scooping an omelette onto a plate.\n\n\"Here you go love. Eat quick then we have to go! Time's wasting!\" the woman smiled at her.\n\n\"Who are you and what have you done with my mother! Never mind, I'll keep you instead!\" Grace mumbled as she sat at the table with the delicious smelling breakfast.\n\nShirley laughed and patted her shoulder. \"I just feel so much better now that my back hurts so much less. I know we can't afford the new mattress for me right now so I'm going to do my part to reduce our expenses. I'm giving up the booze. That will be hard but it will also save us a lot of money. I'm also weaning myself off the Percocet. I'd like you to take me to the free clinic downtown to see what they suggest for helping me through the withdrawal. I might have to do it cold turkey and that terrifies me but I want my life back. I'm going to try to get a job, whatever I can get to help out around here.\"\n\nGrace was looking at her mother, waiting for her to start laughing and tell her it was all a cruel joke. Then she realized it wasn't. \"Are you back mama?\" she said with a trembling voice.\n\n\"Yes, baby. I'm back. I'm so sorry you had to carry me for so long,\" Shirley replied with trembling lips.\n\nGrace leapt to her feet and pulled her mother into a hug as her tears burst forth. She didn't grip too hard as her mother's back had been bad for so long. Shirley couldn't hold back her own tears as she clung to her daughter.\n\nOnce they got control of themselves again Shirley pulled away and said she had to touch up her make-up. Grace sat down and ate her breakfast. It was as good as it smelled. She put the dishes into the sink and saw Ed had set up the stove for one of his slow roasts. Her mouth was watering already.\n\nSleeping in she'd missed Ed this morning. He was working the early shift again at the home center. It was his last shift of the season. That little extra income of his would be drying up. He was hoping they could find another use for him in another department but it was likely he would be without a job for the next little while.\n\nShe'd tried finding out who had hurt Ed the other night but she wasn't part of his social circle so she got nowhere. That just frustrated the hell out of her but she should have known better. They wouldn't talk to the sister of the one they pranked.\n\nHe'd been a little distant with her lately and that made her worry. Ed was such an important part of her life she didn't want to lose him.\n\nShirley returned looking refreshed. Grace pulled her thoughts back to the present and looked closer at her mother. \"The skin on your face, it looks brighter, softer. What products have you been using?\"\n\nHer mother blushed oddly. \"A woman has to keep some secrets. When you begin to show your age I'll tell you the secret.\" A coy smile slipped onto on her lips. \"Are you ready? We have much to do!\"\n\nGrace looked at her mother and smiled. She'd have to thank Ed later for fixing her mother's spine. It was good to have her on her way back from the drunk miserable mess she'd been. She only hoped she wouldn't chicken out because of the withdrawal. She grabbed her keys.\n\n\"Let's go!\"\n\nChapter 12\n\nEd finished up his last shift (a double!) and collected his pay. He was sad to leave as he'd enjoyed working there. As expected there was no work left but they promised they would be calling him again as soon as they could.\n\nHe sat in his truck, not ready to go home just yet. The nightly visits from Shirley had continued last night and he was terribly confused about what she wanted from him. It was making him uncomfortable to be around her. He was terrified she'd say something in front of Grace and she'd discover his... issue.\n\nShirley was following a pattern. She would wait until he was asleep, wake him up demanding a massage, he would do that, then she'd make him touch her until she had an orgasm (now he understood that was what was happening), then she'd masturbate him and spray his cum over her face and chest. Last night he actually saw her rubbing it over her skin as she walked from the room. She'd called him a 'dirty boy' but now it was like she was talking to herself.\n\nHe was definitely beginning to feel used and that made him very uncomfortable. Grace would hate him for what he was doing to Shirley. He was certain of that so he desperately needed it to remain a secret but he was so bad at keeping those. Especially from her.\n\nHe felt his stomach knot up.\n\nEd started the truck and drove home. He was grateful to see Grace's car wasn't in the driveway. Aside from his current case of butterflies, he was glad the driveway was clear because he had to move his truck in and park it for the winter. With no job he'd be back to taking the bus... except for his drive out to Mrs. Dmitrov's place on Saturday, he recalled. Then the truck would definitely have to be put away. He couldn't afford the gas from then on.\n\nHe walked into the house and smelled the delicious aroma of his roast cooking. He was grateful for Mrs. Thompson's contribution as the larger roast would help with his enormous hunger tonight.\n\nHe heard the sound of a car coming up the driveway so he hustled downstairs to have a shower. He was sweaty from moving all that stock. They'd wanted to get as much from him today as they could because that was it. Working a double shift was nice for the extra money but he was tuckered out.\n\nHe stripped down in his room and wrapped his towel around himself. Peeking into the hallway he saw the coast was clear so he moved over to the small washroom and closed the door. The shower stall was very small but he was able to wash himself so it got the job done. Once he was clean he dried himself off and brushed his hair. Wrapping his towel around himself he stepped out into the hall.\n\nSuddenly he was captured in a big hug and he yelped in surprise.\n\nIt was Grace!\n\n\"Ed, you're so wonderful!\" she said against his chest.\n\n\"Grace! Let go! I'm not dressed!\" he yelled. His voice was a little sharp due to his fear that his towel would slip off.\n\nShe released him and jumped back like he'd slapped her and the jostling was enough to loosen the towel so it began to slide down his hips. He spun his back to her and raced for his room and slammed the door shut behind him. He was shaking with dread. Had she seen it? Was she even now reeling in horror and revulsion? God dammit! Why did she have to do that?\n\nHer voice came through the door. \"I'm sorry Ed! I didn't mean to scare you. I was just so happy about mom I got carried away. I didn't see anything. Don't worry!\"\n\nRelief pounded Ed to his knees as his body shook in reaction. His head spun a bit but once it cleared he looked at the door.\n\n\"You can't ever do that! Please! Tell me you'll be more careful in the future!\"\n\n\"O- Okay. Are you ok?\"\n\n\"Yeah... let me get dressed and I'll come upstairs in a minute. Dinner should be ready soon,\" he said as his muscles trembled in reaction.\n\n\"Your voice sounds a little funny, Ed. Are you sure you're ok?\" she pressed.\n\n\"YES! Go upstairs! I'll be right up!\" he barked then immediately regretted the harsh tone he'd used.\n\nHe heard footsteps climbing the stairs so he got up and pulled on his baggy track pants and his sleeveless t-shirt.\n\nEd walked up to the kitchen his cheeks burning with embarrassment. Grace was setting the table and she glanced at him and noticed his discomfort.\n\n\"I'm sorry Ed. I never meant to make you feel bad. I just had the best day with mom in... years. What you are doing for her has made such a difference in her!\"\n\nEd's eyes snapped to her face and he went still.\n\n\"She's no longer in pain and she told me about the therapy you've been giving her for her back. It's doing wonders.\"\n\nEd relaxed as she explained and he just smiled and nodded his head in his humble way of accepting praise. Grace felt comforted to see his normal behavior.\n\n\"Now that you're dressed can I get that hug?\" she asked gently.\n\nEd walked over and wrapped Grace in his arms and gave her a firm hug. She felt so safe when he hugged her against his large body. His warm, muscular, hard body. He felt so good and she was feeling really good! She pushed back as her face pinked up. Ed saw her reaction and turned away to glance down. He wasn't showing so he relaxed a little.\n\nThey both moved to get the table set and dinner on the plates. The delicious scent of roast beef, baked baby potatoes, and garlic green beans filled the room. The plates went on the table and Shirley arrived from upstairs.\n\n\"Very nice mom!\" Grace said with a smile.\n\nShirley was wearing a new dress she'd bought on sale today. She'd touched up her make-up once more and was wearing her new sexy bra and panty set she'd bought which made her feel so good. The bra presented her girls very nicely which the low neckline of the dress accentuated.\n\nEd froze when he saw Shirley. She looked like a different woman. Her long brown locks flowed over her shoulders and framed her abundance of womanly flesh rising out of the front of her dress. She was beautiful and Ed felt incredibly awkward to be feeling like this in front of Grace.\n\n\"Yes, you look beaut- beautiful.\" He cursed himself as he meant to tell her she looked very nice but his words got away from him.\n\nShirley's smile was brilliant and Grace echoed her as they took in Ed's blush.\n\n\"Dinner's ready. Let's sit and eat before it gets cold,\" Ed said briskly.\n\nThe ladies took their seats and when Ed sat Shirley reached out and took his right hand in her left. \"I'd like to say a special thanks tonight if you both don't mind.\"\n\nGrace smiled and took Ed's other hand.\n\n\"Lord, I know we don't talk very often and I'm sorry for that but I just wanted to say thank you finally for bringing Ed into our lives. I know I've been a terrible excuse for a caretaker for him but in spite of my shortcomings he has turned out to be an exceptional man. From how he looks after us and makes these wonderful meals to how hard he works to help out around the house and most of all how he's helping me with my back. Thank you lord and thank you Ed for being so wonderful to us both. Amen.\"\n\nGrace had tears running down her cheeks as she'd never expected her mother to acknowledge how important Ed was to them. \"Here, here!\" she said with a voice rough with emotion.\n\nEd just ducked his head with an odd smile and let go of their hands. His face was burning with embarrassment as Shirley had been stroking his palm with a finger through the entire speech. The sensual touch had made him stiffen up in his track pants which were tenting badly. He tucked himself under the table and tried to will it away. They all turned to their meals and as expected the roast melted in their mouths it was so tender.\n\n\"Oh Ed, this is so delicious!\" Grace moaned. \"You are such an incredible cook! You're going to make some girl an excellent husband one day!\" she finished with a grin. He smiled at her shyly.\n\n\"I learned from Shirley,\" he said quietly.\n\nShirley froze. \"What?\"\n\nHe looked at her. \"I learned how to cook from watching you.\"\n\n\"I didn't know that!\"\n\n\"Mom! You don't remember him watching you make dinner almost every night back then?\" Grace said with a surprised smile.\n\n\"No! I don't know why but I don't recall that at all!\" the mother blurted.\n\nGrace just shrugged as her temper flared momentarily. She knew how her mom felt about Ed back then so it actually wasn't much of a surprise she didn't remember. Grace forced the bitter memory down so they could enjoy the night.\n\nThey ate quietly, enjoying the meal and each other's company. Once they were done Ed surprised everyone when he pulled a small tub of ice cream from the freezer. It was chocolate as he knew Grace loved that flavor. He served up three small bowls and they sat eating ice cream with silly grins on their faces. It was the best family dinner they'd had in a very long time.\n\nChapter 13\n\nThe week passed quickly for Ed. Shirley continued to make nightly visits for the massage, the spinal adjustments, and always culminated the visit with her masturbating him to completion on her. The change was she no longer pretended to be upset about it.\n\nShe discovered it was taking longer to get him to his orgasm as his endurance was increasing so she upped the ante by stroking his cock between her big soft tits.\n\nThe first time she'd done this Ed hadn't lasted more than three minutes and she'd received an enormous load on her face. From that night on she used her tits every time.\n\nThankfully Grace remained blissfully unaware of the actual activities on her nocturnal visits.\n\nSchool wasn't any better. He was teased unmercifully and did his best to ignore it. With football season over he no longer had to spend time with the team. He also no longer smiled at Melanie for now he saw her for the person she was. He kept his head down and concentrated as hard as he could on his classes. His grades weren't very good. He was maybe pushing a C+ in his best classes but others he struggled to maintain a C-. He knew he had to improve the D in Chemistry and hoped Mrs Dmitrov had a miracle for him.\n\nHe was relieved that her treatment of him in class had not changed the tiniest bit. She was as cold and impersonal to him as she was to everyone else. The only sign that anything had actually happened the previous weekend was the note she slipped to him on Friday reminding him to come to her place at 1PM the following day. He hadn't forgotten.\n\nThe next day found him driving up the driveway to her place at five minutes to one. He didn't want her to be upset like she'd been the previous weekend. He walked up the steps and was about to knock when the inner door opened.\n\nNina was looking at him with a hungry expression.\n\n\"Tutor now or after,\" Ed asked, stepping inside and kicking off his boots.\n\n\"After,\" she growled.\n\nHe thought he'd surprise her this time so he quickly bent down and threw her over his shoulder and carried her into her bedroom. She wasn't a light woman but he hid his grunt of effort with a growl. He threw her down on the bed and immediately began tugging her clothes off. She didn't assist him in any way but instead made little moves to hamper his ability to undress her. He just flipped her over onto her stomach and flipped her skirt up to expose her ass. He yanked her panties down and spanked her until she was moaning and trembling. Her juices were flowing and he shoved two fingers deep into her pussy to see how wet she was becoming. Dripping. He pumped his fingers in her a few times to get her highly stimulated and she thrashed on the bed. He pulled his fingers out and sucked the juices off one finger then made her clean the other one in her mouth.\n\nHe pulled off the rest of her clothes as she lay on the bed moaning from the heat of her spanking and the residual tingles from his fingers in her pussy. Once she was naked he spun her on the bed until her head was hanging over the edge of the bed. Her large tits were flattened across her chest. He placed his hands on them and squeezed the flesh firmly. She moaned in response so he pinched her nipples and pulled them upwards.\n\n\"OOOoooooohhhhh! MMmmm!\" Nina groaned.\n\nEd released her nipples and quickly undressed himself as he stood next to the bed. Nina had her eyes closed as she ran her hands over her tits squeezing them roughly between her fingers. She gasped when his hot flesh rested across her face and her eyes shot open. He leaned forward and grabbed her tits in his hands and rolled her nipples between finger and thumb.",
        "\"Ssssssssssyyyyeesss!\" Nina sucked in a breath and moaned. She moved her hands to his cock, sliding them along his length as she pressed her lips to the soft underside. Her tongue slipped out to tease the tender area just under the head and Ed reacted by tugging on her nipples.\n\n\"AAAaaahhhh! Fuck yesss!\" she gushed.\n\nHe pulled back slightly and pressed the head of his cock against her lips. \"Get it very wet. It's going in your ass.\"\n\nShe gasped and he slid the head of his cock into her mouth. He reached forward and gently spanked her pussy. She jolted and moaned as his cock slid deeper into her mouth. He slowly fucked her mouth with the first three inches of his cock.\n\n\"MMMMMMMmmmmm!\" Nina mumbled around his member and the vibrations caused him to slide a little further into her mouth. He could feel her running her tongue over his cock and he fucked her mouth a little faster. He slid two fingers into her pussy, curled his palm over her clit and rubbed her in tiny circles vigorously.\n\n\"UUUUUUUHHHHHHNNNNNN!\" Nina groaned and his cock slid deeper still until he felt the head rubbing against her throat. He pushed himself upright and saw he had more than half of his cock in the woman's mouth. He slid himself out and felt her take a deep breath. He slid himself in deep again and slowly withdrew all the way.\n\nNina was red faced and gasping as his cock bobbed wetly above her face. He walked around the bed and spread her legs. Her pussy lips glistened with her juices. He moved between her legs and slapped the thick head of his cock against her clit and she jumped. Before she could recover he pushed her legs back with his hands at the back of her knees. Her ass came off the bed and he pushed his cock deep into her pussy.\n\n\"AAAAAAAAAAHHHHHHNNNNNNN FUCK!\" she howled.\n\nHe pulled out and slammed it back in and set up a steady rhythm of pounding. She grunted with every impact and her eyes rolled with the intense sensations. The wet sounds of his cock driving into her pussy filled the bedroom.\n\nHe pulled out and pushed her ass higher into the air. Ed dipped down and fucked her pussy with his tongue.\n\n\"FUCK! FUCK! OH! OH! OH! OH GOD!\" she chanted as he drove his tongue deep into her. Then he switched to driving his tongue into her ass and she shook, jolted, and squealed.\n\nOnce her asshole was thoroughly soaked with his spit and her juices he stood and pushed the head of his cock inside. Ed held still as the heat and tightness almost overwhelmed him. She squealed again and he began making little strokes. He kept up the pressure and gradually the little strokes took him deeper. He kept his eyes on Nina's face in case it became too much for her. She was gritting her teeth, hissing, and panting but she was also clinging to him to pull him deeper. He couldn't get over how tight she felt around his cock.\n\nHe started making longer strokes and Nina's mouth dropped open as her eyes locked on his.\n\n\"So gooooood! Your cock opens me so well, Edward!\"\n\n\"You feel incredible, Nina!\" he groaned and picked up his speed.\n\n\"FFFFFUUUCK! FUCK MY ASS!\" she screamed.\n\nEd began to pound her ass as vigorously as he'd pounded her pussy and her eyes rolled back as her tongue hung out of her mouth. He wanted to take her tongue in his mouth but she'd said no kissing. Nina rubbed her clit in rapid circles as he fucked her.\n\n\"I'm going to cum soon,\" he gasped.\n\n\"MMmmnnnnaaahhhhhHHH! AH! AH AAAAAAAHHHH!\" she screamed as her orgasm exploded over her. He felt the rhythmic clenching against his cock and he couldn't hold it any longer as jets of cum shot up deep inside her.\n\nShe suddenly reached up and grabbed his head and pulled him down on top of her. Her mouth found his and she kissed him deeply. He was dazed and confused but it was super hot and his orgasm was intensified for it. THIS is what a kiss was supposed to feel like! She pushed back as suddenly as she'd started.\n\nNina looked a little wild eyed and embarrassed. \"Please get off.\" Her accent was thick as her agitation was high. \"The kiss was mistake. Please forget we did that,\" she mumbled. He nodded.\n\nEd slowly pulled himself from her ass and she shook with an aftershock.\n\n\"Would you mind if I quickly rinsed myself in your shower?\" he asked.\n\n\"Please,\" she said gesturing to the ensuite.\n\nEd got off the bed and padded over to the bathroom. He stepped into the shower, washed and rinsed in a minute and dried himself off. He walked back into the bedroom and Nina was sitting on the edge. She looked troubled.\n\n\"Are you ok? I didn't hurt you did I?\" he asked.\n\n\"No. I am good. I should not have kissed you. My apologies,\" she said with a shaky voice.\n\n\"I didn't mind. It was amazing!\" he gushed with a smile on his face.\n\n\"But we must not do that again,\" she said sternly.\n\nHe just nodded.\n\n\"I tutor you now.\"\n\nNina stood gingerly and put on her robe. That signalled to Ed that he should get dressed so he quickly did then followed her out to the dining room.\n\nFor the next hour and a half Nina ran through the materials of the next two chapters of study and by the end Ed was amazed that he felt like he was actually retaining it. She gave him some practice sheets to keep the information in his mind fresh. When they finished Ed was smiling as he'd never expected to be able to get this.\n\n\"You're an amazing teacher!\" he blurted.\n\nNina smiled at him. \"Is much easier one on one and with a student eager to learn,\" she replied with a smile of her own.\n\n\"Would you like to have sex again?\" Ed asked awkwardly but hopefully.\n\n\"No. I don't think we should have sex... again,\" Nina said with a frown.\n\n\"Never? Did I do something wrong?\" Ed asked.\n\n\"No. I did.\"\n\n\"The kiss? I promise I won't kiss you again and I'll stop you if you try to kiss me!\" Ed gasped.\n\n\"I am too weak. The sex is too good. It reminds me not so much what I had but what I should have had. I will become emotionally attached. This cannot be. Please. We must stop now. Please go.\" She was looking into his eyes begging him to leave quickly. Her lips were trembling.\n\nEd looked away. \"OK. Thank you for everything you taught me. I promise I will get that seventy five on my next test! I'll work my hardest on it! Thanks again!\"\n\nHe grabbed his books and left before he did something stupid like hug her. He was shaken by the experience but deeply grateful.\n\nChapter 14\n\nThe rest of the semester went as smooth as he could expect. He did get the passing grade in Mrs. Dmitrov's class, a seventy eight to be exact, but it was the only class he managed to improve his grade in. The rest remained at the C- level no matter how hard he tried. Spring semester began and he no longer had a class with her. True to her word she never invited Ed over to her place again and word got out that she was transferring to another school in another city. He hoped she'd find happiness there.\n\nShirley continued to visit him on a nightly basis and he endured her visits. He lived in fear of Grace discovering what her mother was doing and worse, what he was doing to her. The woman struggled through her withdrawal of alcohol and Percocet but with her family's support she managed to get clean by spring. The house became an alcohol free zone and with the extra money going into the house account they ate a little better. Shirley managed to get her old job back, the manager was sweet on her, so there was even more money coming in. It only took a couple of months to be able to afford a new pillow top mattress for herself.\n\nThe school year was coming to an end and Ed was ready to begin his full time job. He'd managed to get work off and on through the winter and spring but his real job, working for Drakos Heating and Cooling installing air conditioning and furnaces would start the moment he graduated. He had a great relationship with the owner as he'd done some unpaid apprentice work with the man the previous two summers. Mr. Drakos was a surly older Greek gentleman with a strict work ethic. Ed was a hard worker with a natural aptitude with anything mechanical so he'd learned quickly at the side of Mr. Drakos' other workers.\n\nGrace and Shirley attended his high school graduation ceremony and they went out to dinner at a Chinese buffet restaurant to celebrate. There was a lot of yummy food and a lot of laughter at the table. Ed couldn't remember ever being happier.\n\nWhen Grace left the table to get some dessert Shirley leaned over to Ed and let him know that she wouldn't be coming to visit him at night anymore. She had a boyfriend now who would be providing her with what she needed. Ed nodded and felt an enormous wave of relief wash over him. He smiled and nodded at Shirley as Grace returned with chocolate ice cream. He smiled at Grace's look of delight then went to get his own dessert.\n\nEd showed up for work early on his first day and was immediately taken out to a job site to help with an installation. He didn't have his certification yet so he mostly did the heavy lifting and left the connections to the professionals as he'd done the previous summers but he watched the technicians closely and asked questions when they were doing something unfamiliar to him. He'd picked up a lot of knowledge during his apprentice periods. He got along really well with the other workers and none took offence when he asked for them to explain what they were doing as they did it.\n\nWhen they got back to the shop Mr. Drakos spoke with the installers then called Ed into his office. He smiled at Ed as the reports of his work had been favorable. He asked if Ed was satisfied that this was work he wanted to do as a career. Ed enthusiastically confirmed that it was. His boss smiled and told him he would enroll him in a six month night course for training in HVAC maintenance. He would pay for the certification exams as long as Ed would be willing to sign an employment contract to give the company time to earn back half of the course fees from salary deductions. Ed agreed and they signed the paperwork and shook hands.\n\nEd took to the training unlike anything he'd experienced in school. The information stuck in his brain and he couldn't get enough of the training manuals. He just got it.\n\nWith full days working at the shop and attending night courses he was pretty tired by the end of the day. Luckily the work itself was strenuous enough to keep his muscles in shape though he tried to slip in a formal work out every now and then.\n\nHe was joking with two of the more senior installers as they all ate their lunch by their truck under the shade of a tree by the sidewalk. It was a particularly hot day in late August. Both were older men who enjoyed their idle time and beer a little too much and teased Ed about his lack of a beer gut. They were both strong men but they had large round bellies. The two installers finished up and went back inside to finish the job. Ed's part inside was done and his last task was to break down all the packaging from the new appliance and put it in the van.\n\nAs he was alone he pulled his shirt off and set to work cutting and bundling the cardboard, lumber, and foam packing. He'd just loaded it all in the van and shut the door when he noticed a convertible had stopped next to the van. It was a beautiful silver sport coupe of some kind. Ed wasn't good at recognizing brands of cars. It just looked sleek and fast. Then he noticed the red hair of the driver.\n\nRachel Thompson was watching him through her large dark sunglasses. He realized he'd left his shirt on the front seat in the van so she could see how sweaty he was.\n\n\"Edward! So nice to see you again!\" she called out.\n\nHe walked closer. \"Hello, Mrs. Thompson,\" he replied.\n\n\"Rachel, please. No need to be so formal with friends,\" she said with a sultry smile.\n\nHe felt the beginnings of trouble as he watched her lush lips curve into that knowing smile she did so well.\n\n\"Is this your summer job?\" she asked, her eyes roaming over his muscles.\n\n\"This is my permanent job. I'm apprenticing and going to night school,\" he replied.\n\n\"Oh! Do you enjoy it?\" She was surprised he wasn't going on to college but did her best to keep it from her face.\n\n\"Yes, very much!\" he smiled and she returned it with a dazzling one of her own. God, she was pretty!\n\n\"Then you are a very lucky man! Mark whines all the time about how dull his summer job at his father's law firm is but he's going to University in the fall to become a lawyer. I doubt he'll ever be happy.\"\n\n\"That's too bad. A man should be happy at what he does.\" Ed frowned in sympathy. Now that he was free of the stress of school and working at something he loved the thought of taking a job that made him miserable was difficult to contemplate.\n\nRachel was surprised Ed showed any sympathy to her son considering the nasty trick he'd played on him. It raised Ed in her eyes.\n\nTwo large men were exiting from the house carrying tools so she saw her private time with Ed was coming to a close. She made note of the name of the company then looked back to Ed.\n\n\"It was really nice seeing you again, Edward!\" she said, taking one more long look at his body. Fuel for her fantasies.\n\n\"It was very nice seeing you again, Rachel. Enjoy the rest of your summer!\" he said with a smile.\n\n\"You too!\" she replied as she drove off.\n\nEd quickly put away the rest of their tools as the installers arrived. He took a little ribbing for flirting with ladies when he was supposed to be working and he blushed at that. They climbed into the truck and headed back to the office.\n\nChapter 15\n\nGrace paced nervously in the living room. She was pissed at herself for accepting the invitation to go out on a date with a co-worker. Leon Gabrielli worked in the Accounting Department and had begun dropping by her cash desk to say good morning and greeting her in the lunch room. Heather did some digging and found out he was single and lived alone with a cat. Grace told her that it was doomed to fail as she was a dog person but Heather gave her the evil eye and told her he was the most eligible match Grace had encountered and not to screw it up.\n\nLeon wasn't a bad looking man. Late twenties, relatively fit, had all his teeth and a good head of hair, and best of all he bathed and smelled good. When he asked her out to dinner and a movie she said yes because she couldn't come up with a reason to say no.\n\nShe was actually wearing a dress, a black one, as he'd told her he was taking her to a nice Italian restaurant downtown then they would see a movie.\n\nHe pulled up to her house and she let herself out. When she turned she saw his car for the first time. A 1983 Chrysler LeBaron with the fake wood trim on its sides. She forced a smile on her face and walked to the passenger side and got in.\n\n\"You look lovely tonight, Grace!\" Leon said as she buckled in.\n\n\"Thank you Leon. That's a nice suit,\" she replied. Leon was wearing a black suit with a white dress shirt and a black tie. A white carnation was in his lapel.\n\nThe car made a terrible whining sound as he turned the steering wheel. \"My uncle is going to fix that this weekend,\" he mumbled apologetically and she smiled.\n\nIt didn't take too long to get downtown to the restaurant. She looked up at the elaborate signage projecting over the sidewalk. Cervara di Roma. Glancing in the front window she was pleasantly surprised. She'd never been to this particular restaurant and it looked really nice.\n\n\"My uncle Ronnie owns the place so I get a discount.\" Leon said with an awkward smile. He stopped before they got to the door and his face went serious. \"A word of warning. My family is kinda loud and... rough around the edges.\"\n\nGrace smiled. \"There's nothing wrong with that.\"\n\n\"Don't say I didn't warn you!\" he said as he held the door open for her.\n\nThey went inside and up to the hostess station. An older woman with really big hair was standing behind the podium. She was well padded and wore a dress that barely contained her abundance.\n\n\"Leon!\" she cried and came around the station to kiss the man on both cheeks. Leon suffered the treatment with his awkward smile and looked over at Grace. The woman turned her attention to Grace as well and gave her a good up and down examination.\n\n\"Hi Auntie Gene! This is Grace. Grace this is my-\"\n\n\"Grace what? Are you Italian? You've got the coloring.\" Leon's aunt asked.\n\n\"Grace Wilson. Not Italian. I think way back my family came from England but we've never checked.\"\n\n\"Huh. Ancestry is very important! You should know your past!\" the woman said and dismissed Grace to turn back to her nephew. \"Are you just visiting or are you here for dinner?\"\n\n\"I'm here on a date with Grace. We're here for dinner,\" he asserted.\n\nAuntie Gene's eyes widened in shock and her attitude changed immediately towards Grace. \"Oh! Oh my! Well, please! Please come in! There is a lovely table for two by the fireplace. Perfect for lovers!\"\n\n\"First date Auntie Gene!\" Leon blushed as Grace's eyes went wide with surprise.\n\n\"Magic can happen!\" the woman said over her shoulder as she led them to their table. They sat and after fussing over her nephew for a bit the aunt smiled at Grace and hustled away to greet some new customers.\n\n\"Sorry about that!\" Leon said quietly, leaning towards Grace.\n\n\"It's fine. She obviously cares a lot about you and that's nice.\"\n\nA waiter came by and left some menus which they both spent a little time reviewing. Grace decided to keep it simple and when the waiter returned she just ordered a small portion of spaghetti with rich meat sauce with a side salad. Leon looked a little relieved and ordered the same.\n\nThere was a commotion in the kitchen and a short man in an apron with a large belly pushed his way out of the kitchen. Leon's face paled as the man headed in their direction. \"Shit! He wasn't supposed to be in tonight.\"\n\nThe man walked up to the table and stared down at Leon who was beginning to sweat.\n\n\"What have we here? Little Leon on a date? With a girl?\" the man sneered.\n\nGrace looked up at the man in surprise. What did he mean by that?\n\n\"Yes, Uncle Ramone. I'm on a date so if you don't mind I'd like to get back to it.\" Leon blustered.\n\n\"That's cute. When do you plan on telling her?\" Ramone grinned cruelly.\n\nOther customers were beginning to watch the floor show and Leon's face was starting to turn red.\n\nAnother man rushed out of the kitchen and headed straight over to them. He looked very similar to Ramone right down to the huge gut. He grabbed Ramone's arm and pulled it. Ramone yanked his arm away and glared back at his twin.\n\n\"Leave the boy alone. We need you back in the kitchen,\" the second man said.\n\n\"Leave HIM alone? He didn't leave my Nate alone and now Nate's dead. Because of this sick fu-\"\n\n\"RAMONE! In the kitchen now!\" the man growled and glared at his brother.\n\nRamone finally moved away but cast a look of disgust at Leon as he did.\n\n\"Sorry Uncle Renzo. I thought he wasn't working tonight.\" Leon mumbled.\n\n\"Maybe it's not such a good idea you eating here tonight. Sorry Miss,\" he nodded at Grace but his expression was stern.\n\nGrace got the message and stood up. Leon scrambled to follow as she made her way to the front door.\n\nOnce outside Leon began to sputter. \"I- I'm SO sorry about that. Uncle Ramone is...\" he held his hands up helplessly. He looked like he was about to fall apart.\n\nGrace suddenly understood. A dozen clues she'd seen at work with Leon but didn't catch suddenly aligned in her mind and she understood what this date had been.\n\n\"Was I supposed to be your beard?\" Grace asked quietly.\n\nLeon's eyes locked on Grace and his face flushed with embarrassment. She looked at him questioningly and he couldn't look her in the eye.\n\n\"I'm sorry Leon. You should have been honest with me.\" Grace said and walked away. The bus stop was around the corner.\n\nAn hour later she walked in the front door of her house and went straight up to her room and put on her comfort clothes. She went back downstairs and plopped herself on the couch in the living room."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "harem",
        "anal",
        "cunillingus",
        "oral",
        "blowjob",
        "incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/one-who-understands"
}