{
    "title": "Any Chance We Could Ch. 38",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to appreciate this tale. \n\n\n\n\n\nWednesday, October 31\n\nAt seven thirty Scott's cell rang and Veronica picked it up from the dresser and answered when she saw the caller ID was Grace. \"Hi, stranger, I've missed you. ... Thanks, and how's your brother-in-law? ... Good. ... This morning? Sure, where? ... Eight? ... We may be a few minutes late, but we'll be there.\"\n\nI'd just walked out of the bathroom and was tucking in my shirt when Veronica told me that Grace had just called and we were going to meet her for breakfast at the First Watch in the valley. As she hurriedly dressed, I went down to the den and found Grace's check and put it in my jacket pocket. Mary Claire had a cup of coffee waiting for me and both daughters got their usual morning embrace and ass squeeze. Mary Claire walked over to me, turned her back to me and said, \"Me too, Dad.\"\n\n\"Grace just called. Your mother and I are going to meet her for breakfast. Katrina you need to be at the club by ten, Mary Claire and Ashley you can hang here until eleven-thirty or leave with your sister at nine-thirty,\" I reminded them.\n\nCarol and Veronica came down about ten minutes later and I kissed Carol goodbye as we hurried out the door. I had grabbed the keys for Veronica's car so we went in that. At about five after we parked in front of First Watch and were greeted by Grace who stood from her booth when she saw us walking in. After hugs all around, we sat, quickly perused the menu and ordered. After a bit of small talk, Grace announced, \"I have some good news and some not so good news.\"\n\n\"The good news is that my brother-in-law should make a complete recovery and I've fallen in love with Edith and she with me.\"\n\n\"Wow,\" I uttered surprised. I didn't know what else to say. I knew a bit about what happened in California but for the falling in love part, Veronica's story hadn't hinted that they were that serious. My fianc\u00e9e seemed to be surprised as well by the quickness of it all.\n\n\"I know it's sudden. And truthfully it's caught us both off guard and we too are amazed by how rapidly our feelings developed for each other. I can't explain my feelings for her other than she and I've meshed emotionally and she's the person I've been looking for all my life. Edith wants us to travel together. She wants to show me sights she's seen and to explore new ones together. I'm leaving with her tomorrow to spend three weeks to a month at a villa in Tuscany. We fly into Rome where we'll spend a few nights before renting a car and driving to her villa. I guess we'll need to put the job I offered to take on hold. Truthfully, I won't be offended if you hire someone else. Sorry, if this is a disappointment to you.\"\n\n\"It is. I'll miss seeing you everyday. In fact, I have your bonus check with me,\" I said. \n\nI passed the sealed envelope across the table and Grace opened it with unsteady hands. After pulling it out she said, \"There seems to be a mistake. Payroll added an extra zero or two.\"\n\n\"No, no mistake, it's a million, just what Emerson and I agreed on,\" I said. \"Grace you played a big part in our success and we believe you should share in those fruits. This doesn't include your pension, which by the way Emerson made an extra deposit into it last Thursday to bring your annual payment from the corporate pension plan to seventy-eight per cent of current salary and you'll be carried on the medical plan until you become eligible for Medicare.\" \n\nHolding the check in both unsteady hands, she said, \"I just never expected, ... never thought, ... that you'd give me this much. Maybe a year's pay, but not this much. I don't know what else to say except 'thank you'. Do I get to keep it in light of my not staying?\" she asked with an unsteady voice.\n\n\"Grace, don't be silly. It's in recognition for what you've done for us, on the future at all. What you'd have been paid by me would've been on top of everything else. Grace, I suspect with what you've put aside over the years that you'll have a very comfortable retirement.\"\n\n\"You're right. My investment account is very healthy. I've learned much by listening to you and Emerson talk over the years,\" she smiled.\n\nGrace finally folded the check and put it in her purse when our food came. We chatted at length about Edith and I asked her if she thought that Cheryl Babcock would be a good choice to run my household office. I also told her that I was interviewing a financial manager later today. She had the highest praise for Cheryl and said the only caveat would be her husband. \"He was never too wild about her working, even though he travels quite a bit. He strikes me as over-compensating by constantly attempting to demonstrate that he's so manly. If she can avoid being distracted by her husband and his games, she'd do an excellent job. I've met her kids, very lovely daughter and a handsome son. Haven't seen them in a year though,\" Grace said. \n\nWhile I was tempted to tell her that Cheryl was divorcing her husband, it wasn't public knowledge yet, so I'd not violate Cheryl's trust.\n\nIt was approaching nine-thirty when I grabbed the check and told her we needed to leave for the closing. \n\nVeronica wished her well as we stood in front of the restaurant and she hugged and kissed us both. \"Keep in touch,\" Veronica told her. \"I'll put a piece of wedding cake in the freezer for you.\"\n\n\"I'm sorry I'll miss your wedding. You're both very fortunate to have found your soul mate. I strongly sense Edith may be mine. Love you both and I'll let you know when we're back in town. Dinner together, perhaps?\" she sparkled as she turned to walk the opposite direction to her car.\n\nVeronica and I got to the club a few minutes before ten and as we were standing in the lobby Katrina, Ashley and Mary Claire arrived. Emerson and Hazel were next and Kim and Gwen arrived just as Emerson's SUV was being driven to valet parking. Jack, Michael, Margaret and another man were next to arrive in a limo driven by Lauren. Michael introduced the other gentleman to Emerson and me as their attorney, Sanford Billing. I made an inquiry at the office and was told that room six was set up for us and that coffee and juice were waiting. As Emerson began directing everyone back to the room, Clairise Hoffman, Isadore's widow arrived in a cab and Cheryl pulled in right behind her. I went out and helped Clairise from the cab, and gave her a gentle friendly hug before she clung to my arm as we slowly walked in. \"Bad hip, really should get the damned thing fixed,\" she offered as an explanation for her slow pace.\n\nI rubbed her hand as we walked down the hallway. \"Clairise, I warn you, if you do I get the first and second dance,\" I smiled.\n\n\"Scott, you're always the charmer,\" she smiled. \n\nWhen we were just inside the door she tugged my arm and we stopped for a moment while she searched through her purse and withdrew an envelope and handed it to me. \"Here, I should have given this to you in July right after Izzy died, but I forgot.\"\n\n\"What is it?\" I asked.\n\n\"It's a formal letter of transfer of our sixteen seat private box at Busch Stadium. It's been approved by the Cardinals. I told them a little fib by telling them the box was staying in the family and you were Izzy's nephew.\" I nodded my understanding. She looked me in the eye, slightly squeezed my hand and smiled, \"In a way I wasn't fibbing, you were like a close nephew to Izzy. And I appreciated how you always respected him and how you were constantly with him during those last days.\"\n\n\"Clairise, you're right. He was like a wise uncle, which makes you my glorious and gracious aunt...and I hope that I can still can visit you,\" I said before kissing her cheek.\n\nIn her indomitable style of being careful not to be too emotional she replied with a grin, \"Now, now, enough of this nonsense. Regarding that box, now all you have to do is pay the annual fee. I've forgotten what it is, but you can probably scrape enough together to make it work. Redecorate it as you wish. I've taken a few collectables I wanted including the Dizzy Dean, Bob Gibson and Sandy Koufax autographed balls...now those three were great pitchers. Izzy would have wanted you to have the rest, including the signed pictures of him with Jackie Robinson and Hank Aaron, and a game bat signed by Joe Torre in 1971.\" As we began walking again to the meeting room she squeezed my hand again as a way to affirm that yes, I not only could but would be expected to visit her often. \n\nAs few steps later Cheryl came right behind me and walked alongside Clairise introducing herself. She then helped Clairise to her chair and sat next to her.\n\nEmerson, Hazel, Veronica and I sat side by side at the table at the bottom of the 'U', Michael and Margaret were on Emerson's right. Kim, Gwen, my three daughters and Cindy who'd just arrived filled the leg on Veronica's left. Sitting on the leg to Margaret's right were Cheryl, Clairise, Cathleen, Jack, and Sanford. As the waiters were leaving after filling cups and glasses, Emerson stood and introduced everyone and announced that the purpose of today's meeting was to affirm by a shareholder vote the sale of Midwest Capital to CitiGroup for two hundred sixty five million dollars. Sanford polled the shareholders one by one, announced each person's share holding and recorded a unanimous vote in favor of the sale. Each shareholder signed their stock certificates and gave them to Sanford in exchange for two wire transfer receipts. One for the cash deposited to their designated bank account and the other representing the restricted stock transfer to the brokerage accounts at Edward Jones.\n\n\"We'd love to stay for awhile but we've got this new company to run so if you'll excuse us,\" said Michael standing. \"Cheryl, why don't you stay for lunch.\"\n\nJack, Michael, Sanford and Margaret shook each hand around the table and Margaret called Lauren on her cell as they were leaving the room. Veronica nudged me and looked at Margaret's ass and legs. I followed her line of sight and noticed that Margaret was wearing seamed hose, the Cuban heel indicated garter stockings. \"I thought I noticed a garter bump on her thigh when she got out of the car,\" remarked Veronica.\n\n\"Good for her,\" I smiled. I then stood and asked, \"Cheryl, can Veronica and I talk to you for a few minutes?\"\n\nThe three of us walked across the room and when we stopped, I said, \"Cheryl, Grace was going to come work for me, ... us, but she's fallen in love and has declined the position. I don't want you to feel that you're a second choice, but I'd like you to consider being our personal secretary, household manager, executive assistant, purchasing agent or whatever we ask of you. No bottle washing, no windows, no floors or no cooking. I've watched you during the last week and you've very efficient. I'll pay you fifty percent more than you're making now, give you a car for personal use as well as to run errands for us, plus a twenty-five thousand dollar a year clothing allowance. I must warn you that Veronica or I could make clothing recommendations that would consume part of your clothing allowance.\"\n\n\"Are you serious. Gosh, Scott what an offer! Would I have to stop having sex with you, and you?\" looking at Veronica. \n\n\"No, I'm afraid not, at least not on our account. It started before employment and isn't a condition of employment. Participate as much as you desire. Call it a fringe benefit if you will. For all of us,\" grinned Veronica.\n\n\"When do you want me start, should I give Michael a two week notice?\" gasped Cheryl.\n\n\"With him telling you to stay for lunch I think the handwriting's on the wall. Did you notice anyone new wandering around your area this morning?' I asked.\n\n\"Yeah, I think I did. They were going to move me or fire me weren't they?\" she frowned.\n\n\"I expect they'll make some aggressive changes in middle management jobs very quickly, so probably yes but they've not indicated who or when to either Emerson or me,\" I said.\n\n\"Well, fuck 'em. I'll resign right after lunch and start with you tomorrow. I don't do accounting though, will that be a problem?\" Cheryl asked.\n\n\"No, we're interviewing a CPA this afternoon. Cheryl, may I make a suggestion?\" When she nodded, I continued, \"Hold off resigning today or even tomorrow, or leaving on your own before the customary notice. When Clairise is ready to leave, drive her home. When you get back to the office speak to Michael, apologize for the delay explaining you were taking Clairise home. Also mention that in the last two weeks you'd started to serve as my executive assistant while you were still the office manager and were wondering where you'll be working at the same level in the new organization. \n\n\"By mentioning your recent duties you'll provide him with the opportunity to tell you today his plan rather than later in the week or next week. He'll already have a settlement offer worked out, part of which'll be according to the purchase terms Emerson worked into the agreement, that anyone let go within sixty days will be given severance pay for three months. There's a similar clause for demoting someone too. But if you resign, the clauses don't apply and they'll keep what they were going to offer leaving you with only what's legally due you. If they're letting you go, accept their offer which is likely to be more generous in your case to keep you from making waves. Hence, by the end of the day, or tomorrow, you'd be free to accept my job offer. And as far as I'm concerned, your earlier statement is understood not as acceptance but as strong interest and that you'll get back to me by the end of the week. And Emerson and Hazel could also probably use you too. Tomorrow they're looking at the house next door.\"\n\n\"Yes, yes, yes, of course yes I'll consider it.\" She nodded with a smile, \"I plan to get back to you after I talk to Michael, I can't imagine anything better than seeing both of you every day,\" grinned Cheryl almost jumping up and down. We both knew she'd take the position, but formal acceptance needed to wait a day or two at the most.\n\n\"We'll eagerly await your answer,\" laughed Veronica. \n\n\"Thank you. Let me go find Clairise and offer to take her home.\"\n\n\"Tell her that I've told you to take her home. Otherwise she may decline your offer,\" I smiled.\n\nWe both hugged her and Veronica invited her, Beth and Max to join us back here on Friday at seven for dinner and dancing.\n\n\"What's the dress?\" asked Cheryl.\n\n\"Sexy,\" responded a grinning Veronica. \"Call me for details later.\"\n\nAs we got back to the table the wait staff was taking lunch orders and I announced that I'd made a job offer to Cheryl and that she's considering coming to work for us in the near future. After the applause from my family died down, Emerson asked if he could talk to me later.\n\nCathleen and Cheryl were sitting on either side of Clairise and they were keeping each other entertained. I overheard some bits and pieces and they were reminiscing about the 'old days' when Isadore had first gotten involved with us. Kim and Katrina had their heads together and were constantly laughing and touching each other. Gwen and Ashley were acting similarly and occasionally would draw Cindy and Mary Claire into their levity. Suddenly Kim piped up to the assemblage, \"Drinks are on the house, I'll buy the next two rounds. I've always wanted to say that, but now I can afford it.\" Everyone laughed and the waiters magically reappeared. \"Not now,\" she told them, \"Friday night when we're back here.\"\n\nAs things were winding down Veronica reminded Emerson and Hazel that they should drop by our house first and we'd go to the house next door with them. \"We have a limo to take us to dinner, so dress for 'messing around' and why don't the two of you spend the 'rest' of the evening with us. We'll need a refresher on Hazel's rules before we play on Bryce Field. Interested?\" cooed Veronica.\n\nEmerson immediately answered, \"Yes, who'll be the rest of the players, besides you two of course.\" \n\n\"Well, does it make a difference? But how about our three daughters and Carol. We could divide up into teams of four.\"\n\n\"If Hazel doesn't fuck me into a heart attack before then, count on us,\" grinned Emerson as Hazel grinned and vigorously nodded her head.\n\n\"Lauren Franklin, the CPA limo driver is meeting with us at two-thirty and I'll let you know this evening or tomorrow how that goes. You and Hazel might be interested in availing yourselves of her services,\" I told Emerson.\n\n\"Keep me posted I may just do that,\" he nodded. \"And would it be possible to buy some of Cheryl's services too.\"\n\n\"Yeah, let's talk about her too,\" I agreed.\n\nCindy came over and kissed both Veronica and me and said her goodbyes, she needed to get back to work. Mary Claire asked for a ride home with us, Ashley and Katrina took off for Wash U to meet with Evie. Clairise did accept Cheryl's offered to take her home and I invited Cathleen to join us Friday night here, at seven.\n\nVeronica in a soft voice said, \"Call me, we'll talk about what to wear. These events have become one where all the females get the males aroused and then dance very closely ... and.\"\n\n\"Do women dance together?\" asked Cathleen.\n\n\"Yep, no rules about who dances with who, or whom. It'll be fun. You'll be surprised at the 'new' Emerson and Hazel demeanor,\" I laughed.\n\n\"Okay, I'll be here. Veronica again ... are you sure about Saturday night?\" she tentatively asked.\n\n\"Absolutely,\" replied Veronica.\n\nThe five of us were the last to leave and after Veronica and Hazel kissed the other's spouse and Mary Claire kissed both the Jacobsons we left for home.\n\nLauren arrived at two twenty-five and through the window I watched her walk towards the door. She was wearing her long hair, now a dark blond with a darker underlayer, down and wavy. The scooped neckline of the sweater under her unbuttoned suit jacket was appropriately form fitting and accentuated her breasts to their best advantage. Her skirt ended five inches above her knees was of a stretchy material that tightly hugged the curves of her hips and ass. Finishing off the outfit her legs were adorned with tan hose and three inch black pumps. Lauren looked sharp and sexy, yet also a very feminine professional. Veronica opened the door and invited her in. As she walked into the living room I caught a whiff of her delightful perfume. Reaching out to shake her hand I said, \"Welcome to the inside of our house, nice to see you again.\" \n\nMary Claire wearing a more conservative French Maid outfit was in the kitchen making some snacks and producing some nice savory smells. \n\n\"Let's go into the den.\" I touched her elbow and led her in. Veronica sat on the couch and I offered either the couch or wingback to her. When she opted for the wingback I sat in the other one across from her and took the offered resume'.\n\n\"You're just as beautiful as you were Friday night, Mrs. Appleton.\"\n\n\"Please, it's Veronica and he's Scott, and thank you. You're very attractive yourself and I like the new hair color. Scott is very interested in your diverse skill sets and that's the reason you're here,\" said Veronica.\n\n\"Thanks, being a brunette was a brief interlude. I've also been a redhead.\" \n\nI began, \"Veronica and I are experiencing a lifestyle change. I've sold my company, I guess your dad told you, and as of today both my partner and I are 'retired' so to speak. Veronica and I want to put together a ten million dollar charitable foundation. More may be added later if other investments work well for us. Veronica may or may not go back into the real estate business, and I'll have a large portfolio to manage. We want to hire a secretary to handle correspondence, schedule our lives, pay approved bills and generally manage our household. We offered the position this morning to a highly efficient woman who worked for me and she is taking a day or two to consider the offer.\" She nodded her understanding. ",
        "I continued \"Your CPA certificate over-qualifies you for a job like that but we're looking for a financial manager, if you will, to assist us in understanding tax ramifications and help monitor our investments. I'd expect that you'd prepare all financial statements that we may need to present when making leveraged investments and all tax returns, not only for the foundation, but our personal returns and any necessary business returns. As things move forward and if our investments go well, we'll continue to diversify which will demand more of your skills to manage the day to day matters. \n\n\"Through the foundation we'll give outright gifts to various nonprofits, many, particularly for gifts in excess of ten grand, would be given through invited requests for funding proposals. On behalf of the foundation we would expect you to review and summarize the RFPs, annual reports and grant updates for organizations we invite to apply. We don't see this being a foundation that is open for any applicants but ones where the foundation invites a potential recipient to submit a RFP.\"\n\nLauren nodded, \"I can understand why you'd take that direction. I suspect that you'd be bombarded with a stack of requests otherwise.\" \n\nI added, \"It also allows us to follow our own interests rather than being wedged in by finely articulated and narrow guidelines. Now the job would be full-time but if you want to continue your sports officiating involvement we could easily work around that. Veronica and I are getting married in two weeks and for the week we're on our honeymoon we're doing an extensive expansion and renovation of this house. Even though I trust the contractor who has an impressive reputation, another pair of eyes wouldn't hurt either of us. While on our honeymoon in Florida I'll give you change order approval authority. I'll also expect by noon a daily email summary of the project's status as well as twelve to sixteen pictures of the progress. I'll give you a format to follow for the dailies and I'll want it to be no more than two hundred words.\" \n\n\"Two hundred words doesn't allow me to say to much,\" she said.\n\n\"Plenty can be said if it's well honed.\" After sipping my coffee I added, \"A college friend of mine was taking a doctoral course and his professor had his students summarize in one-hundred words the prior week's three hours of lecture material.\" \n\n\"Wow, to identify the essence and hone it down you'd really get to know the material. I'd hate to have been in that class,\" she laughed. \n\n\"Within twenty-four hours of our return we'll expect a concise and frank four page report on your impression of the contractor. While we're confident that he'll provide quality work at a quality price, I may well use him on other projects, so we want to be absolutely certain he's the right business partner. I want an exercise room in the basement that'll be your responsibility to equip, and arrange for the necessary renovations. I'd like you to be the personal trainer for both of us as well as our daughters. I've checked you out and learned you have stellar academic credentials and a flawless personal history. In searching the web I found a ton of your pictures but no nudes. I'd appreciate it if you didn't post any more pictures if you come to work for us. I talked to Brad and he said I wouldn't regret offering you this position. I don't think I've covered everything, but now it's your turn for questions.\"\n\n\"I appreciate you offering me this opportunity. The broad overview you've just given intrigues me. A couple of other things I don't think I mentioned in the park Friday night. I have a mechanical bent and understand computers including networking as well as most office software. I restored and rebuilt the 1961 Corvette I drove today. I'm sure the job description you just gave is merely the tip of the iceberg. I suspect your investments will be successful and it won't be long before I have my hands full. I like the idea of being in on the ground floor of what could be an outstanding opportunity. \n\n\"If you do offer me the job, and I accept, I think I'd like to move closer. When my lease expired last month I went to a month to month agreement. I appreciate that you'd let me work my officiating gigs, they're a great form of mental and physical stimulation and they're a way for me to keep involved in sports that I love. I'll take down all pictures that are within my control. Of course I have no control over what friends and family have posted on their Facebook pages, or what others have downloaded and reposted.\" \n\n\"We both understand those things,\" Veronica smiled. \"We don't want our financial professional to be the subject of unneeded gossip or ridicule over what's on the 'net. We expect you to be viewed as a smart and savvy professional by all with whom you interact.\" \n\nLauren nodded that she agreed. \n\nAs we were talking, she crossed and recrossed her legs, probably nerves, but I did notice a hose welt. Evidently she either liked wearing hose or had picked up that I liked them. Either way, her wearing them was a plus.\n\nVeronica continued, \"We're building an office/bedroom addition, a five car garage and on top of the garage will be a large studio for Scott's photography hobby/new business. We're adding space to the second floor bedrooms, enlarging this room and enclosing the pool to make it year around, and adding a new master suite wing atop the office/bedroom addition that will flank the one side of the pool.\"\n\n\"Goodness, how big an undertaking is this renovation?\" asked Lauren\n\n\"There are a few change orders in the works but as of yesterday, about 1.2 million dollars.\"\n\n\"I'll bet your net worth is on the level of a lot of medium sized companies and it sounds like a challenge I'd like to take on. What is your net worth, if I can ask?\" said Lauren.\n\n\"Combining our assets, Katrina's, and Ashley's whose assets you'll also help manage... in the neighborhood of just over two hundred fifty million.\" I smiled.\n\n\"You know when you start making gifts your popularity is going to increase. I would suggest that the foundation not have your name attached to it and that you use a PO box or a front office located a short distance from here. It'll help keep people from approaching you directly. Still, I could design a security system for the house and grounds. When I add jogging to your exercise routine, I can be armed if necessary when I run with you or anyone else in the family,\" she added. \n\nWe chatted in some more generalities for another forty-five minutes then Mary Claire came in and announced that snacks were ready. Lauren smiled when she noticed how Mary Claire was attired. We sat at the dining room table and Mary Claire served us a delicious variety of hot and cold nibbles and poured the wine. \n\nAs the conversation meandered Veronica said, \"I'm picking up a lot of positive energy from you. I must caution you that there's a lot of sexual freedom in this home and if you have any reservations about observing consensual sex, nudity, revealing clothing, open bedroom doors tell us now.\"\n\nAfter chewing and swallowing a bite she'd just put in her mouth she asked, \"You mean you could be wandering around partially dressed and you could be making love most anywhere in the house, that kind of sexual freedom?\"\n\n\"And not necessarily with Veronica, or she with me but that's about it,\" I said.\n\nLooking at Veronica she asked, \"You don't mind him playing with other women? And does that mean you play with women as well as men?\"\n\n\"Yes, on both accounts,\" my love smiled. \n\n\"So if I wanted to spend part of the day only partially dressed, you wouldn't mind?\" Veronica and I nodded. \"Speaking of that I have your g-string in my purse,\" she smiled looking at Mary Claire before she went on, \"You must have been very aroused when you took it off. It still smells wonderful.\"\n\n\"If you come to work for Dad I'll tell you why it smells so good,\" teased Mary Claire as she bent over to refresh Lauren's coffee.\n\n\"When I'm home alone I frequently wear a tee shirt and flats or heels, and nothing more. I have a fetish for negligee gowns, and while I don't have a large selection I often wear them instead,\" she paused to allow the images in our minds to take hold. Then she smiled, \"Could I do that here?\" \n\n\"Of course. We can agree on the dress code later,\" I smiled. \n\nLooking at me Veronica smiled, \"I think we could help to substantially increase your selection with a generous clothing allowance. I'd love to help you.\"\n\n\"You have to be kidding? I'd love it,\" she giggled.\n\n\"How much do you make during tax season? I assume they pay you by the hour for your tax work?\" \n\n\"Forty to sixty dollars an hour,\" she replied.\n\n\"Annually, that's about a hundred thousand dollars. But you don't work at that rate year around. But if you'd be willing to devote yourself to us, for however many hours it would take, with time off for officiating would you do it for, say, one seventy-five a year? I'll give you a 'signing bonus' of five thousand and make maximum contributions every year to a retirement plan and provide medical insurance. You could live here in the self-contained apartment attached to the office wing and have free run of this house,\" I said. \n\nHer eyes widened as I continued, \"Veronica and I are adamant that pretty is as pretty does and I'd expect you to dress appropriately for any outside visits and visitors. You'll also be expected to alert all of us well in advance of any scheduled visitors. I'll expect that you'll also be fashionably dressed and accessorized for all business meetings. Therefore as Veronica has suggested I'll also give you an unlimited clothing allowance and Veronica will help you shop if asked. You may also use your allowance for items of any nature that'll be worn at the office when you're alone or only my family is around.\" Her eyes glimmered with that news. \"Included would be necessary jewelry to complement an outfit. Any jewelry purchases over a thousand dollars per item would have to be approved by Veronica.\"\n\nAfter a pause I continued, \"You'll also have a BMW that will be primarily yours for personal and business use. For now you may want to garage your Corvette in one of those storage places and just drive it on nice days and special occasions. Down the line we may end up building a second garage where it could be parked along with a few other special cars Veronica and I are likely to buy in the coming year or so. As mentioned earlier, at lunch today I made an offer to hire a personal assistant to do the routine tasks that you're over-qualified for. I think that about covers it, interested?\"\n\n\"My God, yes. Can I participate in the sex activities, if anyone's interested in me that is?\" she asked in a rising tone of voice. \"Can I start right now? Do you want me to undress?\"\n\n\"Yes, to both the questions, but don't feel the need to undress. The bedroom won't be ready until near the end of the month.\"\n\n\"Oh, I don't know about the 'no' to undressing. I wouldn't mind seeing her disrobe in a sexy way. What about you Mary Claire?\" asked Veronica.\n\n\"Well, then at the very least I'd like to see your legs,\" I grinned.\n\n\"I think my legs and my ass are my best features,\" Lauren said as she stood and moved around to our side of the table. Then she slowly removed her jacket while swaying her hips and unfastening her skirt, letting it fall. She stepped out of the puddle and pirouetted with her hands on her hips. She stopped with her back to us and grinned over her shoulder. She had on light tan garter stockings, a white garter belt and a white g-string. Her sweater hem just skimmed the top of her garter belt. Her legs and her ass were wonderfully toned and as she raised up on her toes a bit her muscular calves became more defined. \"Like?\" she asked turning back to face Mary Claire and Veronica.\n\n\"Yum,\" said Veronica licking her lips. \n\n\"Now let's see your tits,\" Mary Claire grinned.\n\nLauren looked briefly at Veronica before she began slowly lifting her sweater and enticingly gyrated her hips. She slowly raised the bottom hem and tantalizingly revealed her sheer bra. She approached Mary Claire and bent in front of her, seeing Mary Claire's eyes focused on her breasts, she smiled before pulling a bra cup down revealing a very hard nipple. She then stood up, pulled the cup back up, stood in front of Veronica pushing them together asking, \"Like 'em? Natural C cup. \" \n\n\"Very, very nice. Nice size, wonderful shape, look tasty,\" remarked Veronica with a gleam in her eyes.\n\n\"From the glint in your eye I see that you really enjoy playing with other woman,\" Lauren grinned. \"I do too and if a morning or afternoon break involves a Veronica snack,\" and as she looked at me, \"or a Scott snack, or a daughter snack I doubt I'll ever want to leave your employ.\"\n\n\"Dad and I fucked in your car Friday night. That's what happened to my underwear. Keep it if you want,\" said Mary Claire.\n\n\"I shall and hope someday to taste the source first hand,\" she turned to grin at Mary Claire.\n\n\"Ooh,\" shivered Mary Claire, \"just any old time. Stick out your tongue and I'll sit on it.\"\n\n\"Shall we adjourn to my desk in the den and start to review where we are?\" I asked.\n\nLauren pulled her sweater back down, but left her skirt off. She bent to pick it up and flung it over her shoulder.\n\nAs we walked into the den Lauren turned to Veronica and asked, \"Tell me about your boundaries, if any, of 'sexual freedom' I'm intrigued.\"\n\n\"There are just a few. Most important is what happens between us, any of us, stays between all of us. Feel free to share your sexual wants and desires with any of us but don't expect any privacy. We're not jealous, but if you want to sleep with Scott I'd like to know, preferably before you do. I've yet to turn down an offer to fuck either one or both of us. I expect that outside this house you'll act with your most professional demeanor, but inside the house feel free to do as you wish. The common areas of our home and particularly the master suite are my domain. Or as a friend of mine has put it, I'm to be the queen bitch of my bed and home. That said, your office and apartment is your domain just as Ashley and Katrina's bedroom is theirs. If I play with them there, I respect their rules.\"\n\n\"Tell me about your family, who lives here?\"\n\n\"Our two other daughters you met Friday night, Katrina and Ashley. Cindy Monroe, a wonderful young lady, drifts in and out usually lives here on weekends. Carol McDonough a long-time friend of mine moved in Sunday and looks to be here for the long haul. Mary Claire also will be here for a long time I expect,\" smiled Veronica.\n\n\"Is Mary Claire another daughter, I noticed she calls you mom and dad,\" asked Lauren.\n\n\"No, we're not related, but that's okay, she can call us whatever she wants. She cooks and cleans and hopefully will go to Washington University next spring.\"\n\nLauren did share with us that tomorrow would be her last driving assignment and fittingly it was to take us and another couple to dinner. She did make a suggestion I didn't think about. If I was considering building another garage I should also consider buying my own limousine which she'd be happy to drive. Mary Claire added that she'd be interested in being our driver too. Before I could answer Veronica said that it was a good idea but we'd take some time to decide what type of vehicle to order. \n\n\"May I ask you one more question?\" asked Lauren. \"You've interviewed me together. Do you do most everything together?\"\n\n\"Simply put, yes,\" broadly smiled Veronica.\n\n\"That's wonderful. It's wonderful that you're so comfortable with each other. I think I'm going to like it here,\" grinned Lauren.\n\nVeronica invited her to stay for dinner tonight but she had a driving assignment tonight as well. After another hour or so of discussion with all three of us trading questions and answers she stood saying that she needed to leave. I must say that having a conversation with her without a skirt on was distracting, especially since she wasn't too careful about keeping her knees together. Veronica seemed to be enjoying the show as much as I. Lauren hugged us both after putting her skirt back on and asked, \"Will eight tomorrow morning be too early for me to start?\"\n\n\"If we aren't up, one of the girls probably will be, so yes that'd be fine,\" Veronica replied. \"We'll give you a key then.\"\n\n\"Can I tell my Dad,\" she excitedly asked.\n\n\"Of course. Your coming to work for us isn't intended to be a secret,\" I smiled. \"Oh, before I forget, plan on being here Saturday morning about eight for a construction update. We'll have a meeting soon with the former shareholders about tax ramifications, so you'll need to start preparing your ideas for us to consider to minimize taxes so we can implement them before the end of year. If you'll put together a list of questions for tax treatment of closely held stock sales we can talk in the morning and I'll dig up my prior year returns.\"\n\nAfter shutting the front door Veronica put her arms around my neck and after softly kissing me asked, \"Are you looking forward to fucking her as much as I am?\"\n\n\"Yes,\" I replied grinning.\n\n##\n\nAshley and Katrina knocked on Evie's door which was labeled \"Dr Evelyn Graham, Professor of Marriage and Family, School of Social Work. A voice from inside responded with \"Come in.\"\n\nBoth extended their hands as Evie walked from behind her desk to greet them. \"Sit please,\" said Evie motioning to a large couch. She turned one of the side chairs from in front of her desk and sat facing them. \n\nAfter exchanging a few pleasantries Katrina asked, \"Do you think you'll have time to talk about a puzzle that Ashley and I have that's not related to Mom and Dad getting married?\"\n\n\"Of course, I'm glad that you feel comfortable enough to ask. Veronica and Scott must have said some nice things about me,\" smiled Evie. \"I can readily extend our time together to do just that.\"\n\nFor the next hour Evie reviewed the major areas of contention that usually arise when step-children are involved in a marriage. She was able to weave enough into the discussion that led her to some conclusions about the second ceremony on the sixteenth. Her unspoken conclusions that she would later share with both parents was that Katrina and Ashley were deeply in love and had very strong commitments to one another. So strong that after answering a brief survey on separate computers that there was no hesitation on her part to conduct the ceremony.\n\n\"You both certainly reflect the values of each of your parents, who are probably one of the most perfectly matched couples I've ever counseled. I think you'll be part of the 'perfect marriage',\" she concluded. \"Now what's the conundrum that you have?\"\n\nKatrina began, \"My Mom, my biological mother, who used to be called Marty but now goes by Cathleen Morris, was visiting my new Mom, Veronica, and one thing led to another and Cathleen, Dad, and Mom wound up in bed. Did I confuse you yet?\"\n\n\"No, go on,\" replied Evie in a non-committal tone of voice.\n\n\"When we got home from classes I didn't realize that Cathleen, Mom and Dad were in bed because when I walked into their bedroom Cathleen was in the bathroom. When she came out I was kissing Dad and my face was covered with my hair. When I sat up we of course recognized each other. I was angry at first but Veronica and Dad calmed me down and we had a rational meeting of the minds. Carol came home a bit later and she and Cathleen knew each other. Cathleen then told us about the swingers group that she belonged to and that's how she knew Carol. Anyway, Ashley and I kinda seduced Cathleen and she spent the night in our bed,\" continued Katrina.\n\n\"Carol McDonough?\" asked Evie.\n\n\"Yes. While the three of us were enjoying each other, one of us playfully referred to her as a 'hot bitch'. From that point on she became more submissive and wanted, in her words, 'to be our bitch'. We thought she was playing some sort of game and played along. The more excited and hot she became, the more we became the same. Me ordering her around was all in the nature of good fun, or so I thought. The next morning she took us into the shower and asked us to pee on her and told us that she was truly our bitch. That's when it became scary and we started to think it was more than a game. ",
        "\"We've told Mom, that's Veronica, about this but not Dad. She said we should talk to you because it was out of her comfort zone. We're scared. What should we do? My mother and I've finally reconnected and I don't want to lose that, but I don't want her to be submissive to me, us, she's a grown woman, my mother, no less. Can you help?\" \n\nEvie had silently listened and when Katrina finished she rose and walked across the office muttering \"shit\" several times. She was clearly frustrated but gathered herself and calmly told the girls, \"I'm not angry about anything you've said or done. As a matter of fact if I didn't know what I know about Cathleen's past and her psyche I'd have been scared and puzzled too. Katrina it appears that you are a naturally strong leader and a dominant woman, which is confirmed by the survey you two took.\"\n\n\"You've got her pegged. That's another reason I love her so,\" grinned Ashley.\n\nWithout revealing what was shared by Cathleen in counseling sessions, Evie explained what happened to Cathleen's psyche. She noted that Cathleen favors women over men, and is particularly responsive emotionally and sexually to a dominant woman. She further explained that Monica over the course of their relationship, either knowingly or unknowingly, turned the word \"bitch\" into a sexual and psychosexual trigger. She did it by repeatedly calling Cathleen her bitch in their sexual life and interpersonal interactions, and doing so tapped into Cathleen's previously buried subservient nature.\" She paused to allow what she had said to be absorbed by Katrina. After a moment of silence she continued, \"I helped Cathleen work through the various submissive issues. But I feared it would be only a matter of time before something like what happened to both of you would occur. If it did recur I hoped that the person to whom Cathleen would submit would be a positive influence and use her power in a loving and positive way,\" she said with a furrowed brow.\n\nAshley asked, \"Where do we go from here?\"\n\n\"You said a few moments ago that you don't want a dom/sub relationship with your mom, ... Cathleen, that is. Don't use the trigger word, or words and next time I see Cathleen I'll get her to come and talk to me. Don't feel guilty, you had no way of knowing. You said you've reconnected, that's good, Keep working on that connection, just be careful in any sexual relations you have with her. Safe sex in this instance means not using the trigger word or words. Will that be difficult?\" asked Evie with concern in her voice. \n\n\"No. How do you know Cathleen and Carol?\" asked Ashley.\n\n\"We've been part of the same social circle for a number of years,\" responded Evie.\n\n\"I thought I knew a good number of my mother's friends. What circle was that?\" asked Katrina. Evie didn't respond allowing Katrina to quietly make the connections. \"Oh my,\" she said. \"Cathleen said she and Carol participated in a lifestyle group after she and Dad were divorced and Monica split with her. It was with Melissa's mom and dad wasn't it, Ashley?\"\n\n\"Are you a swinger?\" asked Ashley.\n\nEvie knew she was in a box but she also knew that she had to be honest. \"Yes.\"\n\n\"That's so cool,\" replied Katrina.\n\n\"Wow. What can you tell us,\" smiled Ashley.\n\n\"What I've admitted is in confidence. If it got out that my husband and I participate in the lifestyle it could be professionally damaging,\" replied Evie.\n\n\"We understand. There are sexual activities in our household that are kept confidential. No, there's no abuse. It's all consensual and we're all old enough,\" replied Katrina. \"Sometime can you tell us about it, or I guess we could ask Carol, huh?\"\n\n\"This isn't the appropriate time or setting to discuss my sex life. But in the proper venue I'll be more than happy to share with you,\" smiled Evie. I'd really like to share Veronica, she thought. And take her and Scott to a party. They'd both be a hit.\n\n\"Oh, one more thing,\" blurted Ashley. \"We know a bit about Abi and Sam, Mary Claire mentioned Gloria, she's going to a concert with her tomorrow night. How many children do you have? Mom's under the impression that there were only two?\"\n\n\"I've four daughters. My two are step-sisters to my husband's twins. He was a widower and so was I when we married. Our family melded together in wonderful ways I'd never have dreamed possible. The way you two fit with your mom and dad looks like it'll be as wonderful a melding as my husband and all our daughters have enjoyed,\" smiled Evie. \"It's been a pleasure seeing both of you again and I guess we'll next meet again nearer the wedding. My best to your mom and dad, and don't hesitate to call me if you have anymore questions and concerns about Cathleen,\" said Evie standing.\n\nBoth girls hugged Evie before leaving and she returned the hugs with a kiss on the cheek of each.\n\nAs they walked outside and across the grass, Ashley looked around and not seeing anyone closer than fifty yards loudly whispered, \"Wow, Mom and Dad's minister is a swinger. That's just so cool.\"\n\n\"Way cool. And she's not just their minister but she's ours too. I'd love to get into her too,\" giggled Katrina. \"I wonder if she'd take us to a party if we asked?\"\n\n\"I like the way you're thinking girl. Fuck our minister and then get her to take us to a fuck fest,\" smiled Ashley.\n\nKatrina and Ashley changed subjects as they wandered around the campus a bit. Twenty minutes later they looked at each other as they approached their car and said \"Let's go to school here,\" and laughed. \n\n##\n\nAt 4:30 Kim called my cell, and once again Veronica answered. \"Hi, Kim. ... Yes, he's here, want to talk to him? ... Tonight? ... Where? ... Why don't you come here? I'm sure Mary Claire can whip up enough for two more. ... Great. ... Five or so, we'll eat about six. ... No, you don't have to. ... See you then. ... Love you too, sweetheart. Bye.\"\n\n\"Are you screening my calls?\" I laughed.\n\n\"No, should I?\" she replied.\n\n\"You know I'd tell you anyway, but if you wish, feel free,\" I laughed again. \"What's up with Kim? Kim Jacobson I assume?\"\n\n\"Yes. She and Gwen wanted to take us to dinner but I've invited them over here instead. I know you won't mind seeing them and perhaps they're looking for some male companionship. Which you'll be more than happy to provide, I'm sure,\" smiled Veronica.\n\n\"Want something to drink,\" asked Mary Claire standing near us.\n\n\"Not right now,\" replied Veronica. I just invited Kim and Gwen to dinner, so with what you planned for tonight are you able to handle eight?\"\n\n\"Sure, I'll add another tenderloin and a few potatoes and veggies. I've been buying extra just in case so it's easy to do. It takes some careful planning because being able to get no more than a weeks worth before the refrigerator and pantry get full. I'm looking forward to the new pantry and the two commercial refrigerators Alyssa's suggested,\" replied Mary Claire. \n\n\"The new kitchen'll make it much easier on all of us, particularly you,\" agreed Veronica. \n\n\"What's the occasion? I haven't seen them for awhile,\" asked Mary Claire.\n\n\"Kim didn't say, but she knows she's always welcome here and knows you're a good cook, maybe they're just hungry,\" Veronica smiled.\n\n\"Are you gonna dress for them?\" asked Mary Claire.\n\n\"What would you suggest?\"\n\n\"Thin top, no bra, stockings, short skirt, pumps, and definitely some of your erotic perfume,\" said Mary Claire running her hand up the inside of Veronica's thigh and touching her labia.\n\nVeronica shivered and kissed Mary Claire. \"Speaking of a long time, when was the last time you sat on my face and let me suck on your pussy?\" Veronica asked.\n\n\"Mom, if you have to ask when was the last time, then it's been too long. Come in the kitchen with me while I start dinner and I'll see what I can do to take care of that question,\" smiled Mary Claire holding Veronica's hand while they walked into the kitchen.\n\nVeronica shot me a bright smile over her shoulder as she followed Mary Claire. I shook my head and went back to the desk and began making some notes about both Lauren's and Cheryl's jobs.\n\nMary Claire got some pots out on the stove, turned with a freshly peeled carrot in her hand, and asked Veronica, \"How about an appetizer,\" she pulled her skirt up, hopped on the counter spreading her legs, nudged her G-string to the side and slid it along her wetness. \n\n\"Mmm,\" said Veronica as she bent between Mary Claire's legs. She watched the edible shaft become slick and wetted. After it was dipped momentarily inside her Mary Claire turned it towards Veronica who slowly devoured it moaning, \"Mmmm,\" as she consumed each bite repeatedly reinserting it into Mary Claire's pussy. \n\nWhen the carrot was fully eaten, Veronica began to softly kiss and lick her maid's bare inner thighs above her stockings. As she was kissing closer and closer to her labia she pulled her g-string aside again and gently stroked her slit with her finger tips. \"You're very wet huh, I guess you like this?\" asked Veronica.\n\n\"Must be an involuntary reaction. God, Mom, you do that well. My sisters have learned well from you. Tongue now please, no more teasing,\" Mary Claire panted.\n\n\"I'm glad to hear that,\" Veronica smiled as her head moved ever closer.\n\nVeronica spread her labia with her thumbs and with her tongue began caressing her slit from her asshole to above her clit carefully avoiding her clit for now. She slowly rimmed her asshole and her vagina as Mary Claire began bucking her hips to get even closer to Veronica's face. \"Fuck me with your tongue, bite my clit, lick my asshole,\" begged Mary Claire. As Veronica began to kiss and nip her clit Carol walked up next to them and slid her hand under Mary Claire's top and pinched and rolled her nipples. \"Keep touching, harder, harder, suck my cunt Mom, suck it.\"\n\nLooking at the door Mary Claire began groaning. She smiled briefly before sliding her arms out from behind her where she had been leaning on them and flattened herself on the counter with her legs bent and spread. \"Oh, ... yes, ... yes, fuck, ... yes,\" she panted with glazed eyes. Her body shook seconds later with a satisfying orgasm as her chest rose and fell rapidly.\n\n\"Oh, God that was nice, thanks Mom.\" Rising on an elbow, \"Hi Carol,\" smiled Mary Claire after releasing Veronica's head from between her thighs. \n\n\"I love the smooth pussy feel,\" smiled Veronica. \"Hi Carol.\" Veronica stood and kissed Carol and after their tongues untangled Carol broke the kiss saying, \"She tastes good, do I get a first hand taste?\"\n\nAfter Carol disengaged her hand Mary Claire sat up and said, \"Whenever and where ever you want providing ... .\"\n\n\"Providing what?\" asked Carol with a raised eyebrow.\n\n\"I get to get as good as I give,\" grinned Mary Claire.\n\n\"Fair enough, now?\" smiled Carol.\n\n\"I've got to get dinner started but for dessert it's a definite option,\" said Mary Claire pushing off the counter and smoothing down her skirt. \"I'm dripping a bit. I'm going to leave it if no one minds.\"\n\n\"No one minds what?\" asked Ashley walking across the dining room. \"Smells like sex in here. Who got lucky?\" After kissing Veronica she pulled her face back, \"You ate Mary Claire. You smell like her and you taste like her.\"\n\nVeronica coyly smiled under her eyebrows and nodded her head. \"You smell heavenly too Mary Claire, wanna play?\" grinned Ashley.\n\n\"I'd love too, but dinner beckons and company is coming. We can later,\" brightly smiled Mary Claire.\n\n\"Where's your sister?\" asked Carol.\n\n\"Oh she went in the den to see Dad. I imagine she's still in there. Who's the company.\"\n\n\"Kim and Gwen,\" replied Veronica. \"Perhaps they're coming because Gwen wants Dad to be her first, but I really don't know. Kim called to invite us to dinner but I suggested they join us here, so that's all I know. Did you and Katrina have a productive conversation with Evie.\"\n\n\"Yes, very much so. She is really a cool lady. We'll tell you about it after dinner. What time are they coming?\"\n\nLooking at the clock Veronica replied, \"Shortly. I need to change. Carol, Ashley, join me?\"\n\n\"Kim's Emerson's daughter and Gwen's her partner, right?\" asked Carol on the way up.\n\n\"Yes and Gwen wants Scott to be her first man, she's never had real intercourse. A few weeks ago Kim spent the night in our bed and I guess Kim highly recommended Scott to her. Anyway, they're both terrific lovers and I expect you'll get to enjoy one or both tonight, if you're interested, that is.\"\n\n\"Hmm, I could be enticed,\" laughed Carol.\n\nAshley came running up the stairs behind them and when she caught up she announced, \"Dad and Katrina are making out on the couch. She's straddling his lap, her top is open and he's loving her tits. I suppose after a blow job she'll join us.\"\n\n\"I love this family,\" grinned Carol putting her arm around Veronica's waist. \"Never a dull moment.\"\n\nCarol and Veronica changed into very short skirts and were bare legged in red strappy three inch heel sandals. Mary Claire changed into another of her maid outfits that Veronica brought back from California. This was the one with the sheer bodice, black seamed fishnet garter hose and black pumps. Her skirt hem didn't quite reach the tops of her stockings. \n\nAshley opted for a tunic top that just barely covered her ass and sheer to the waist pantyhose over no panties and a pair of dark burgundy pumps. Katrina who'd come from my breast play and fingering her pussy was the last to change and she put on a mid-thigh length jumper over garter stockings and light blue pumps to match the color of the jumper. No bra and no blouse completed her outfit.\n\nMary Claire was in the kitchen and was the first to answer the door when Kim rang the bell. Kim looked outstanding in a short skirt and sheer white blouse over a sheer white bra. Gwen was wearing a light weight raincoat and after chatting in the foyer for a few minutes I offered to take it from her and hang it up. I didn't think that the weather was cool enough to warrant it but who knew. Initially Gwen demurred and Kim broadly smiled and said, \"Come on, you can do it.\"\n\nWhile she was deciding I introduced Carol to Kim and Gwen explaining that she was a 'close' friend of Veronica's who's living with us.\n\n\"Tree fall on your house like it did on Scott's\" smiled Kim.\n\n\"No, I fell in love with Scott and have loved Veronica since college. So nothing's broken and I'm very happy to meet the both of you,\" grinned Carol.\n\n\"A 'close friend' in that she sleeps with both of you, huh?\" laughed Kim. \"Lucky woman, I know I was when you slept with me.\"\n\n\"She's got us figured out,\" grinned Carol.\n\n\"Aren't you getting warm in that coat Gwen?\" asked Veronica.\n\n\"Yeah, aren't you?\" laughed Kim.\n\n\"Yeah, I guess,\" replied Gwen blushing. \"Okay, here goes nothing.\"\n\nShe said \"Scott,\" as she unbelted and unbuttoned the coat and held it closed for a moment then opened the front of it and began to shrug it off her shoulders. She was wearing a champagne colored corset that didn't have any bra cups, just underwires below her breasts, matching champagne colored garter stockings, a sheer white g-string and beige four inch heel pumps. \n\nMy jaw dropped and Veronica and Carol gasped. \n\n\"My God, how incredibly sexy you look,\" I gasped. \n\n\"Thanks, I was worried that it was a bit 'over the top' but looking at the front of your trousers it apparently isn't.\"\n\n\"I'm sorry, but I've just gotta touch you,\" I said as I moved towards her.\n\n\"That's kinda the whole point,\" she smiled as she raised her arms to embrace me. After holding her for a half minute, pressing an iron hard cock into her hip I loosened my hug, looked into her sparkling grey eyes and kissed her lightly before I turned her back to me. Looking at Veronica who grinned back, I took a breast in each hand. \n\n\"Mmm,\" she purred and put her arms over her head and around my neck. \n\nI nuzzled her neck and was kissing an earlobe when Veronica asked from a foot to the side, \"Looks like somebody came with an agenda of 'may I play in your bed tonight'?\" \n\n\"Well, since the ice has been broken. Yeah. Play and fuck,\" grinned Gwen looking Veronica directly in the eyes.\n\n\"See I knew you could do it,\" laughed Kim. \"It's taken her three days to work up to this. She said that if my father wants to fuck her sometime soon, she's not going to do it as a virgin. We've shaved her pussy completely bare for the occasion after Katrina told her at lunch that all of you, and I do mean all of you,\" looking at me, \"are now bare. If you're up to it, I think I'd like to fuck you as well, kind sir and experience the difference a shave can make.\"\n\n\"I'll do my best,\" I replied looking at Carol and Veronica. \"Shall we sit and have a glass of wine while Mary Claire works on dinner,\" directing them into the den. \n\nGwen sat in one of the wingback chairs, Carol in the other and Ashley, Katrina, Kim and Veronica on the couch. Kim crossed her legs revealing taupe garter hose and Veronica put her hand on Ashley's thigh and began caressing it. Whenever Katrina turned, a nipple would pop out the side of the jumper. Kim noticed immediately and with a nod from Katrina bent in front of her and began kissing and nipping on the currently free one.\n\nI did get a bit distracted in the kitchen by Mary Claire's luscious body. Her hand pulling down my zipper and then grasping my cock didn't help. Part of me wanted to play with her longer, but there was a long and fun night ahead. Besides, I wanted to make sure that Gwen got my best. Pushing Mary Claire away and telling her 'later, sweetheart' I laughed to myself, Who knew getting the wine was such a 'hard' job.\n\nI returned from the kitchen with wine glasses and two bottles of wine, one a Napa Valley Chardonnay and the other an Australian Shiraz. I paused as I looked over six sexy and gorgeous women. How did you ever get this lucky Scott? As I looked at the woman I loved more than my own breath and life I knew all the credit was Veronica's. Taking the last steps I smiled as I thought, This is going to be a wonderful and memorable evening. I just hope I'm up to the task.\n\nVeronica assigned the seating so that during dinner I sat at one end of the table with Gwen to my right and Carol to my left. Next to Carol was Katrina then Kim. Veronica was at the other end of the table opposite me with Mary Claire on her left then Ashley between her and Gwen. While the dinner was delightful, Veronica's seating encouraged particular playful pairings. Kim started things when Mary Claire called us to the table by disappearing into the bathroom to shed her sheer bra to leave her wearing just the sheer blouse which was unbuttoned to the bottom of her breasts. Taking her seat she teasingly moved her chest before Katrina's eyes when Katrina turned her head to say something to me. \n\nSometime before sitting down Mary Claire had pulled her sheer insert under her magnificent breasts to make sure that her nipples dragged across the cheek of whomever she was serving. \n\nGwen, what can I say, this enticingly delectable virgin had my attention throughout dinner. She gained my full attention when she put her stocking clad leg and high heeled foot on my thigh midway through dinner. Early into the meal a drop of salad dressing fell from her fork and landed near her nipple. Ashley who'd just turned to laugh at something Gwen said quickly leaned over and neatly cleaned the dressing off her nipple as if were a natural thing to do. \n\nI noticed that Katrina and Carol spent a good amount of time with their hands under each others minimal skirts. I was starting to get the impression that Carol had a strong continuing desire to be with Katrina. \n\nBy how she was sitting I'm pretty sure Veronica had her bare leg across Kim's thigh. From time to time Kim would lean forward a bit with her hand and most of her arm under the table. Whenever Kim leaned forward Veronica would broadly smile. Just as dinner was concluding, with an extra button undone I noticed Kim lean forward to whisper something to my dearest who merely nodded with a glint in her eye.",
        "Mary Claire who was not involved with any particular coupling seemed content to be watching and teasing each of us with her touches and breast shows as she served us. \n\nAfter dinner we dragged a few more chairs with us as we moved to the den The couplings from dinner remained the same as we enjoyed coffee and a delightful cr\u00e8me broule Mary Claire had prepared. As I was finishing my first cup of coffee Gwen moved from sitting beside me to my lap and leaned back against me. I put my arms around her and caressed a breast. I kissed her ear and nibbled an earlobe. A moment later Veronica asked, \"Wouldn't you be more comfortable in our bed?\" \n\nAfter Gwen nodded her assent, I tapped her waist to encourage her to stand. When we stood, I took her hand, raised it slowly to my lips, and as she watched me, I kissed her hand. Hand in hand we walked from the room and up the stairs. Before we entered the master bedroom I asked if she was sure. She nodded yes and before we entered the bedroom I drew her into my arms and kissed her. Her deep moan confirmed that she was ready and eager for what was ahead.\n\nWhen the kiss ended I playfully carried her across the threshold. As I carried her I recalled that this was an ancient custom that went back to the Romans who believed that carrying their virgin bride would bring the god of the threshold's blessing and a happy sex life for both. I turned on the camera as we entered the room. I certainly hoped that her first experience with a man would usher in other happy experiences with me and other men who she'd perhaps wish to bed. \n\nMeanwhile Kim turned to Veronica and said, \"Let's give 'em a few minutes. Gwen's as nervous as a cat. She's never been with a man before. In high school and college she dated a few guys but they were all over her and pawed her so badly that it turned her off on men.\"\n\n\"Let's give them plenty of time. Scott is likely recording it all and if Gwen feels comfortable and agrees, you and I can watch it later.\"\n\n\"I don't know how she'll react to knowing she was recorded. What if she's not comfortable and doesn't like what happens?\" Kim asked quietly. \n\n\"Simple, a push of a button on the machines and it will all be erased.\" Veronica continued to assure her young lover, \"We'll even have her push the buttons and confirm that there is no recording left.\"\n\n\"But if she likes it all?\"\n\n\"I'll suggest that I teach you both to use the various recordings to produce her own recording of her first time. I think you'll love going back and forth through the various recordings to choose which angle will be on the permanent recording. I think that you'll enjoy it so much that I doubt that you'll be able to produce it without two or three special breaks,\" laughed Veronica. \n\nBefore undressing I laid Gwen on our bed. She went to thumb her g-string down but I told her that was my job. She smiled, spread her legs and extended her arms to me. I climbed on the bed and laid on my side to her initial dismay. \"We're in no rush,\" I reminded her. \"You're a beautiful sensuous woman. I want to take my time enjoying you and more than anything, I want you to enjoy every millisecond of the evening.\"\n\nShe drew my head towards her and after a tender kiss she whispered, \"Thank you for caring about me.\"\n\nI began to gently and lightly touch her with just my fingertips. I took a good ten minutes lightly touching her whole body, moving from her upper thighs to her belly, from her belly down across the wet silk covering her pussy to lightly move up and down each of her legs. While my eyes followed my fingers, from time to time I looked at her contented and smiling face. Often her eyes were closed, but from time to time they opened and our eyes wordlessly locked.\n\nAs I moved up her legs for a fourth time and across her hips, I lowered my face to hers and lovingly kissed her as my fingers playfully moved over the fabric covered belly before moving to her breasts. After lightly exploring and studying the contours of her magnificent breasts, my pointer finger moved around and around taking in the texture of her large pinkish areolas and nipple. As I grinned at my discovery of the small volcano-like indents in the center of her nipples. To her delight I played with the little intents with my finger tip. \"You have glorious breasts Gwen. I really love how your nipples feel,\" I sincerely told her. \n\nGwen's grin warmed my excited heart. As I continued to tease and explore her chest my mouth and lips explored her neck and face. She cooed her encouragement. Lifting my face I smiled at her as my fingers moved on to touch her neck and face. \"You are such a beautiful young woman on the outside and more importantly in your heart too.\"\n\n\"Thank you Scott. Clairise is right, you are a charmer. And like her, I love it all,\" she quietly said before drawing me down for another kiss. Lifting my head, as I pushed several stray black hairs from her face I whispered, \"I'm thrilled that you're in Kim's life and that you love her as she loves you.\" \n\nAfter kissing her for several more minutes my fingers continued to explore, I murmured, \"Can we take this bustier off? I'd like to see and touch all of you without anything in the way?\" \n\n\"Of course,\" she nodded. As she sat up and began unhooking the back and I began removing the clasps from her hose. As she pulled it forward and dropped it on the floor I moved down to her feet and gently rolled each stocking down. I took off each shoe and rolled each stocking off her foot. After I kissed each toe and licked her instep I put her heels back on. \n\nAlternating from leg to leg I trailed kisses up the inside of her legs and to her thighs. As I moved upward she rested on her elbows and watched every kiss she was feeling. Moving between her spread thighs I kissed the center of her silk g-string. It was now soaking wet. After placing several tender kisses on the silken covered pussy, with my eyes looking up into hers, I used my teeth to grasp the elastic top of her g-string and gently pulled downward. Biting her lower lip with a nervous grin she lifted her hips. As the silk moved from behind her ass my eyes moved from hers to gaze on her freshly shaved pussy. \n\nAs my heart skipped a beat, I sucked in a big breath of air through my teeth and I grinned. There was not a hair anywhere in sight to obscure or distract my eyes from feasting on her lush pussy. It looked so beautiful as it gleamed before me. As I was pulling her g-string off her with my right hand my eyes moved to hers, \"May I keep these as a remembrance of this moment?\"\n\nShe nodded her head yes. \"You have an absolutely gorgeous pussy,\" I assured her. And it was. While I was slowly kissing up her legs I studied her crevice. It looked so tight and firm. Her outer lips weren't large but in their aroused state they hinted at the lush pink valley waiting for me. And a succulent valley was what I discovered as I spent many minutes exploring it to her moaning pleasure with my tongue and fingers. When my probing fingers parted her lips the valley was fresh, pink and filled with a delightfully tasty white cream. With her taste in my mouth I crawled up next to her and drew her tongue into my mouth. \n\n\"You are a sexy, gorgeous woman. Kim is lucky to have you as her partner and I'm blessed that you,re in my bed tonight,\" I softly said as my finger tips again explored her breasts. Looking into her grey eyes I continued to shower her with praise as my fingers explored. \n\nWhile kissing her gently, once again I moved a hand down to her mound and began touching her labia and the insides of her thighs. She spread her legs even further apart. As she began pushing her pussy into my hand I continued to kiss her, gently and lightly at first but as her tongue came into my mouth our kisses became increasingly more urgent. As I broke from the sixth, or was it the seventh kiss, I noticed Kim sitting silently on Veronica's lap in the dimly lit corner of the bedroom. How long they had been there? I'd no idea, and from Gwen's actions I doubt that she'd yet to notice them.\n\nI dipped my face to her breasts. My tongue and mouth slowly explored one and then the other. The longer I explored them the faster I licked and the harder I suckled them into my mouth the louder her moaning became. As her moaning increased in intensity, her hand excitedly played with my hair and she verbally encouraged me to suck her tits and nipples with greater intensity. \n\n\"Roll over, sweetheart,\" I encouraged many minutes later.\n\nAfter rolling over Gwen was facing away from the chair as I began to caress her ankles, calves and thighs from behind. A few minutes later I moved toward her awesome firm ass cheeks which I spent a minute or so kissing and exploring. As I kissed my way up the middle of her back she shivered and got goose-bumps. \"Ooh, that feels so nice,\" she cooed. As I was slightly to her right side she reached her hand and arm towards me. With little effort she found my very hard cock and wrapped her hand around it touching me for the first time. She started to roll away from me and said, \"Let me look at it.\"\n\nShe glanced over at Kim and Veronica. We both noticed that Kim's blouse was completely unbuttoned and Veronica's hands were cupping and squeezing her breasts and nipples.\n\nAs she continued to fondle me she whispered, \"Kim said I would enjoy playing with and sucking your cock. But right now I want this in me. Scott, please. Now!\"\n\n\"Do you want to be on top?\" I asked.\n\n\"Yes. I want to look at your face as you enter me and while you fuck me.\"\n\nI rolled to my back extended my arms and Gwen straddled me. Kim hopped up and before Gwen could lower herself Kim took my cock and dragged it through Gwen's very moist slit. \"Mmmm, that feels soo nice,\" gasped Gwen.\n\n\"The best part is seconds away. Now slowly lower yourself on his magnificent cock,\" Kim softly yet firmly encouraged.\n\nGwen slowly squatted closer to my stomach. With Kim holding my cock in position, Gwen paused as I first entered her. Her eyes remained focused on mine. We both moaned softly as she continued her descent as I smoothly slid into her another two inches. She lifted a few times but in less than thirty seconds she had settled with me fully in her. \n\nHer hands moved to my chest and I tenderly squeezed her breasts and thumbed her nipples. \"Mmm, ahh, God that feels so good. The real thing, your real thing Scott is really in me. It's so firm yet soft and so warm.\" As she slowly rocked she gave me a lazy half smile, \"Your cock is so much better than a toy.\" \n\n\"That it is Gwen,\" smiled her partner.\n\n\"Now I'm gonna fuck you,\" she giggled playfully. Then she gasped as she began to raise and lower herself. Her eyes widened even further. She sped up and in a few minutes I felt her vagina tightening around my cock. Her mouth formed into a wide \"O\" she was gulping in air as she frantically drove herself up and down on my cock with increasing rapidity.\n\nSuddenly she straightened her back and sat up with me fully inside her. She ground down. Her hips undulated around and around, and back and forth. \"Oh, oh, oh my God,\" she squealed as sweat shone across her forehead and chest. \"Ohhh my God Kim....my clit....wow...its throbbing.\"\n\nShe gulped one big breath after another as her stomach quivered. She rose and slammed hard onto me pushing her orgasm higher. \"Oh my God...oh myyyy Goooooddd.... so wonderful..... wonderful,\" and with another deep breath she fell against my chest while her body finished shuddering. \n\nA minute later as her breathing was calming. \"Oh, you lovely man,\" she said before she kissing me heatedly. Her tongue wildly explored my mouth. When the kiss ended, she raised her face, squirmed and with a questioning and worried look asked, \"Did you come?\" She sincerely asked. \"Did I miss something?\"\n\n\"No I didn't come. Roll beside me when you can.\" I held onto her, caressing her back and ass with my hands until I felt her start to move. \"Let's do this carefully and maybe I'll stay inside you.\"\n\nWe rolled to the center of the bed and were successful in staying joined. \"Want more?\"\n\n\"Oh yeah,\" she laughed.\n\nPutting my arms behind her knees I lifting her legs above her, with the backs of her thighs against my shoulders I gently began to pull back and then slowly entered her. \"God, you got bigger, longer,\" she smiled.\n\nOn the third or fourth stroke she asked, \"What am I feeling. Is that my g-spot? Oh, it is, that's incredible.\" She glanced at Kim who had returned to sit on Veronica's lap, \"See Kim I told you I had one.\" Grinning up at me she cried, \"Yeah, stroke right there. Harder now, get deeper. Oh yeah, oh yeah. That's soo good\" She continued to chant \"oh yeah\" as she repeatedly pushed back with eagerness into my engorged cock's downward thrusts. Each thrust was met with a gentle slapping of our bare genitals.\n\nI was lost in the moment of pleasure just as much as her. I was groaning and moaning as much as Gwen. Her long hair formed a dark halo around her face. Her expression was hotly filled with joy and pleasure. Several times I slowed as she approached her peak and after a period of slow and gentle trusting I picked up the pace again. After the third slow period, I was ready and from the look on her face she was too. I pumped fast and furiously, hard and deep. Her moans became squeals of 'yeses' as I pumped even harder. The slapping of bare wet skin grew louder and louder. \n\n\"Do you want me to pull out and come on you,\" I asked.\n\n\"God, no fill me. I want to feel it all.\"\n\nI felt that familiar stirring within my groin that signaled that I was seconds away from shooting off. My legs started to quake. I couldn't help groaning and crying out \"Ohhh yesss, here it is baby.\" \n\n\"Oh my God, I can feel you, I can really feel you coming,\" she loudly proclaimed. As I was still filling her she cried out, \"God I love it, mmmm. I'm gonna come too, right now, right now.\" She gasped for air as her orgasm overcame her. When I went to move she pleaded, \"Stay in as long as you can. Can you feel that?\" \n\n\"Yeah, your pussy is squeezing me.\" I panted.\n\n\"My kegels. Can you feel me moving them?\"\n\n\"Ohh, yeah,\" I grinned.\n\n\"Kim says she has a hard time getting her hand out sometimes,\" laughed Gwen. \"You're getting kind of mooshy, so I'll let you go for now, but only if you promise to come back for another visit...and soon.\"\n\n\"Mooshy? Did you hear that Veronica, I'm mooshy,\" I laughed.\n\nBoth Kim and Veronica came over to the bed. I was sitting on my heels when Kim wrapped her hand around my dick, squeezed and said with teary eyes and a quivering lip, \"Soft maybe, mooshy, no.\" Looking at me she quietly said, \"Thank you.\"\n\nAlso with tears wetting her eyes Veronica knelt on the bed and gently took me into her mouth and began sucking and licking my cock. She pulled off and quietly said, \"Gwen you taste wonderful, can I tongue fuck you sometime?\"\n\n\"Say the word, and I'm yours,\" beamed Gwen.\n\n\"God, you're easy Gwen,\" laughed Kim.\n\n\"Why the tears,\" I curiously asked Veronica.\n\n\"Men,\" she sighed. The other two women laughed with her. \n\nWiping her own tears Kim smiled, \"It was so beautiful. I'm so happy for my baby.\"\n\nGwen leaned into me and kissed me on the lips. \"Thank you. You were wonderful and it was better than I ever dreamed.\" I got the point.\n\n\"You're still easy,\" Kim kidded her. \n\n\"Yeah, easy. I'm twenty six and Scott's my first man. So what's this easy thing. Besides, other than you, Veronica and her daughters there have been maybe four other tongues and fingers in my pussy,\" she laughed.\n\n\"Let me have him Veronica. You fuck Gwen. She wants you. Bad,\" grinned Kim playfully.\n\n\"My God, I just got here and I'm horny, come on Mary Claire lets have some more dessert,\" said Carol reaching for the zipper in Mary Claire's uniform.\n\nSoon enough, Veronica and Gwen were in a sixty-nine to my left. Veronica was pulling Gwen down into her trying to get as much of Gwen and my combined offering as possible while Kim joyously labored successfully to get me hard with her mouth. Moments later Kim was straddling me and settling down on my cock. \n\nMeanwhile Mary Claire and Carol were both groaning in a sixty-nine on my right. Their fingers and mouths were wet and busy trying to bring the other to a climax. \n\nAshley and Katrina were nude in heels embracing next to the bed when Katrina smacked Carol's ass and said, \"Don't roll on us,\" before they climbed on the bed next to Carol and Mary Claire.\n\nLater that evening as promised I made love to Gwen again. She must have come another three or four times before I came in her once again. When I finished squirting, I felt wiped out. \n\nWhile Gwen and I were busy Veronica and Kim brought each other to mutual orgasms, as did Mary Claire and Ashley, and Carol and Katrina. \n\nExhausted, leaving Gwen and Kim cuddled on Bryce Field talking quietly to each other, Veronica and I got into the shower together. Though we were exhausted we both felt the need to play with each other and to affirm the other. After giving her an orgasm with two fingers in her pussy and my thumb in her asshole, we dried off and kinda wedged ourselves back into the bed. Katrina and Ashley had retreated to their bedroom and at Carol's insistence, Kim and Gwen were spending the night in our bed. Or as Kim joked, \"Gwen's had one too many orgasms to drive.\"\n\nCarol was missing. Evidently she'd headed off to spend the night with Mary Claire. Veronica motioned with her eyes to the girls. I leaned over Gwen to give Kim a soft goodnight kiss. I kissed Gwen goodnight a little longer before turning to kiss my love goodnight. \n\nSoft giggles from behind me filled my ears as Veronica turned off the already dimmed lights and melted into my arms. Her breasts felt so nice against my chest as my nostrils breathed in her warm exhalations. \n\nAs sleep started to overcome me I felt Gwen's breasts and body cuddle against me a moment before I felt her arm move over my side and have her hand rest by Veronica's. I also felt another hand, Kim's, resting on top of her lover's breast and against my back. My eyes flickered open for a moment to see in the dim light Veronica gazing happily at me. Just as I closed my eyes for the final time I noticed a small green light. The camera was still on. We had a wonderful night that I'll enjoy watching again and again in the coming days and years.\n\n\n\nI hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but the chapters may sometimes be published further apart because of my day job. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. I try to respond to all emails unless they're cranky. I'd like especially to hear from any female readers. "
    ],
    "authorname": "Reindeer58",
    "tags": [
        "hose",
        "heels"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-38"
}