{
    "title": "Without A Clue - The Other Side",
    "pages": [
        "(A while ago I wrote a story titled, strangely enough \"Without A Clue\" about a woman who couldn't figure out why her husband would cheat on her. Fair is fair. I thought it was time we looked at the flip side.)\n\n*\n\n\"Sam! It's Fred! You're not going to believe this I know. Janette has left me!\n\n\"I know! I can't understand it myself. Whatever happened to 'talking it out', or whatever it was she used to say? All the time she was on about 'talk to me, talk to me, talk to me'. Drove me nuts. Now not a word from her. I tried as much as any husband ever could, I know it.\n\n\"When did she leave? I'm not sure. Whadda ya mean, whadda I mean I'm not sure? I'm just not, that's all. After work yesterday I stopped at Flannigan's as usual. I had a few beers, shot some pool, ate a couple of orders of wings and watched the football game for a while. I came home at half-time, grabbed the beer in the refrigerator and watched the rest of the game in my recliner. I must have dozed off. I woke up sometime during the night and went to bed.\n\n\"I got up this morning and went to have breakfast. I sat down at the table and waited. And waited. No coffee there and no breakfast. After a while I got impatient and yelled for Janette. I mean. heaven knows I was patient enough. She knows better. She is supposed to have everything ready for me before she goes to work.\n\n\"Well I sat there and sat there. I yelled some more. What? No, I don't mean YELL at her, not the way you seem to be implying. Not loud anyway. I keep my temper. Sure, there was that time when I asked her to get my creel and she slipped off that rotten log and fell into the river. That was something to yell about. She disturbed the water so bad I didn't get a decent cast for the rest of the day. And to top it off she lost my creel while she was swimming to shore. Course it did look mighty funny watching her splash around screaming that she was drowning. I did appreciate you going in after her as she went down for the third time. I would have but I thought I had a bite. Turned out to be a damn snag. Now THERE was a disappointment.\n\n\"So she never showed up. I finally walked around the house and couldn't find her. Her car is gone and I looked in the bathroom. Why there? Shows you how much YOU know about women. I was checking to see if all of her doodads and makeup and such things were still cluttering her part of the bathroom. They weren't. I looked for her clothes. They're all gone too.\n\n\"A note? I never thought of that. Hold on, let me look.\n\n\"By golly, you were right Sam! It was on our bed. I must not have seen it last night. It was on her side, that's why. A lot of times she doesn't sleep there but in the other room. I dunno, something about beer breath all the time and snoring. As if I snore. Well, not enough to bother anyone. What do you mean, rattling the windows three doors down?\n\n\"What does the note say? Oh I forgot about that. Give me a moment...\n\n\"Oh, all its says is 'Had enough, I'm gone. You know why.'\n\n\"What does she mean? I don't know why. I don't have any idea. Wasn't I always a good husband? Didn't I always tell her when she was gaining weight? Make those cute 'porky, porky' sounds for her whenever it was needed? Didn't I always answer truthfully when she asked if some outfit made her look fat? Or when she thought about working out at the gym and I told her there wasn't any point in it, women her age should just accept that they're too old for that stuff.\n\n\"And wasn't I there for her sexually? I gave it to her all the time. Why last week we had sex five times. FIVE. How many husbands do that? I let her blow me four times and once I pounded her to glory. Well, hell, of course she liked those blow jobs. It gets her off, or whatever. I know, I saw that movie \"Deep Throat\". And when I give my woman a fucking, I GIVE it to her. I throw her right onto the bed and give her my big old Polish Sausage. Ha-ha.\n\n\"Oh don't start with that foreplay crap. She used to bitch about it all the time too. Why that last time I spent two, maybe even three minutes getting her ready, before I slipped it to her. And as always I satisfied her. Why, she kicked and yelled under me and beat on my back. So there! I don't understand, what does my being twice her weight have anything to do with it? Are you implying I'm too heavy to be getting on top of her? A beached whale? What the hell are you talking about Sam? A man's got a right to add a few pounds. Its a woman's responsibility to keep herself trim.\n\n\"Of course I was always romantic. Didn't I take her bowling for her birthday? I bought her a new power saw too. Oh, yeah, I guess that was last year. What's the date again? And I know I forgot our anniversary. But hey, now I made that up to her. Well, I thought I had. I still can't figure that one out. She was so damn excited when I told her we were going to the coast. Then we get there and she suddenly wants to go home! What could be better, duck hunting all weekend long out in the marshes on the flyway? I'd even set it up so we could stay out there the whole weekend. And she spent the whole weekend complaining and whining as though she wasn't having a good time. \n\n\"Oh, good LORD Fred! I just realized something, something REALLY important. Forget all the rest of it. My baby... its her time... she needs that special touch... but, but, WHO is going to wash and polish my truck? \n\n\"Sam, what am I going to do? The sink is full of dishes and my laundry is dirty and the lawn needs mowing. I'm hungry! I can't figure out how to use this can opener and I nearly set the house on fire trying to cook bacon. I thought you could cook anything in the microwave. Eggs sure do make a mess in there and who's going to clean THAT up?\n\n\"Sam, I don't understand what's going on. Its like she doesn't love me anymore. I can't think of the last time she said that. I don't know, its nice hearing that, I guess. She used to sit on the arm of my chair and put her arms around me and tell me that. I don't think she's done that in a long time, well, not since you and Sara were over that time. I know, I shouldn't have snapped at her and told her to get out of the way, but I WAS watching a baseball game. You know, I can't recall who was playing, or anything about that game, but I remember the look on her face. She must have known I didn't really mean it. Didn't she?\n\n\"I mean, you don't have to say those things do you? She must have known it all, right? She had to have. A guy doesn't need to tell her or show her that he loves her. That damn 'feminine intuition' should take care of that. \n\n\"She'll be back I'm sure. Women! They're so helpless anyway. Never can do anything by themselves, you know.\n\n\"Oh Sam, before I let you go. Do you have any idea how to work a coffee pot?\"\n\n(The End)\n\n*\n\n(Guys, I KNOW you're not really THIS bad. Well, not all the time. Well, not everything at once. Thank you Marian, as always, for your suggestions and support) "
    ],
    "authorname": "patricia51",
    "tags": [
        "relationships",
        "jilted"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/without-a-clue-the-other-side"
}