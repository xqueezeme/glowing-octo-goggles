{
    "title": "Al Andalus",
    "pages": [
        "December 26\n\nI'd just settled down to my morning coffee and an extreme Sudoku when my phone rang. I always do one of the puzzles before work to limber up my mind, and I'd gotten so accustomed to the exercise that I did it even on the days when I wasn't working.\n\nI guess you could say that solving puzzles is my profession. The group I'm in gets suspicious computer code from various sources and we have to figure out what it does, where it came from and how to counteract it. That kind of work suits me fine. I'm a bit of a nerd and I like solving puzzles. If someone wants to pay me to do it, so much the better.\n\nAnyway, the display on my cellphone told me it was my boss calling. I uttered a curse when I saw that. The last thing I wanted was a call from the office over the Christmas break. But when the boss calls, I answer.\n\nHe was all business - no \"Hello, how are you,\" no Christmas or New Year's wishes. All he said was, \"I need you in the office right now, Thomas!\"\n\n\"For real?\" I whined. \"It's the day after Christmas!\"\n\n\"It's a matter of national security, Thomas, so you need to get moving.\"\n\nI shook my head in disgust and hastily scribbled a note to Ginny to let her know where I was in case she came home and found the house empty. She'd gone over to be with one of her girlfriends who was going through a bad break-up. I thought that was a lot to ask of her, especially during the holidays, but that was Ginny: always looking out for her friends. It was one of the qualities that endeared her to me.\n\nAfter I'd written the note and gotten on my heavy coat, I piled into my car and headed out toward the Baltimore-Washington Parkway. \"What can be so damned important at this time of year?\" I wondered, but when the boss said \"national security\" you really couldn't question it. And he probably wasn't exaggerating for effect, or at least I didn't think he was. You see, we work for the NSA, the National Security Agency, and we deal with national security issues all the time.\n\nAs I headed toward Fort Meade, where the NSA is headquartered, I wondered if my boss's \"emergency\" had anything to do with the project I'd been working on. Three or four weeks ago he'd sent me a doozy of a puzzle to solve: a lengthy piece of code that didn't seem to do anything. It appeared to be a worm, a nasty form of virus that infects computers and makes them do things you don't want them doing. But this code turned up its nose at everything we plugged it into, so we hadn't a clue what it was supposed to do if it did find its target.\n\nI love puzzles like that. I love matching wits with some hacker who thinks he's smarter than everyone else. He'd fooled us so far, I had to admit, but I felt like we were closing in on him, and soon we'd crack the code.\n\nWhen I got checked in through security they told me to go straight to my boss's office, something I rarely did. When I got there, I found him talking in low tones to his director. This was definitely outside the norm.\n\nBen, my manager, was clearly uneasy about something. He hemmed and hawed for a little while, then looked at his director and shrugged. Turning back to me, he said, \"Thomas, there's no easy way to say this, so I'm just going to spit it out. Your wife is having an affair.\"\n\nI had had no clue why he had called me in. This announcement was about the last thing in the world I could have imagined, and it felt like a knife stabbing me in the chest. \"No!\" I yelled, jumping to my feet. \"That's a lie! How can you say such a terrible thing?\"\n\nHe had pulled back from his desk when I jumped up, but after he realized that I wasn't going to assault him he settled back in his chair and looked over to his director for help. The director stood up and began to pace around behind Ben. \"Thomas, I know this comes as a shock, but it happens all the time. You've got to face it like a man.\"\n\n\"No I don't,\" I said angrily, \"because it isn't true. You're wrong, you've made a mistake.\"\n\nThe two of them looked at each other and then the director shrugged his shoulders. \"We didn't want to get into the gory details, but I guess there's no other way to convince you.\" He gave a signal to Ben, who began calling up a file on his computer.\n\nThe director went on, \"This call was actually recorded on Christmas Eve, but because of the holidays we didn't get around to analyzing it until early this morning. After we heard it, Ben called you to come in.\" He nodded at Ben, who had the file ready to play. Then he looked at me again. \"You better sit down to hear this.\"\n\nBen clicked his mouse and Ginny's voice filled the room. Between the quality of the cellphone she was using and the computer playback, the sound fidelity wasn't high, but there was no mistaking whose voice I was listening to.\n\n\"I hate it that we can't be together these next two days,\" she said in a tone of voice I hadn't heard in a long time.\n\n\"What's the matter, baby, didn't I give you enough loving to tide you over last time?\" a male voice asked.\n\n\"No, never,\" she said with passion. \"Making love to you has just the opposite effect. Every time you do me I wind up wanting even more. You're like a drug to me.\"\n\nI thought for a second that I was going to be sick. Ben shot me an anxious glance and gestured toward the computer, offering to shut off the recording. But I waved him away - I had to hear it.\n\nThe man's recorded laugh startled and enraged me. \"When do you think we can we get together again?\" he asked.\n\n\"Well, Christmas Day is definitely out,\" Ginny's voice said, \"but I'll find a way to get out of the house the next day. I'll tell Thomas my girlfriend has the blues and needs comforting. That always works on him.\"\n\nThat little revelation made me grind my teeth.\n\n\"What would you want me to do to you if we could be together now?\" the man's voice asked teasingly.\n\nGinny's voice grew huskier. \"If you were here now, I'd want you to play with my nipples. I'd want you to pinch them and bite them until they're about to burst.\"\n\n\"Then what?\"\n\n\"Oh, baby, I'd like you to stick your big cock in my mouth and let me lick it and kiss it until it's as hard as my nipples.\"\n\n\"And then . . .\" he asked suggestively.\n\n\"I'd like you to rub your cock all up and down my little pussy until it gets all slippery and wet for you. And then when I couldn't stand it anymore I'd want you to hold my hips and slide it into me so slow and nice. And I'd be trying to buck up against you and make you drive it into me, but you'd keep holding me and teasing me until I was about to scream.\" I heard a shudder in her voice. \"Oh, baby, I'm starting to get all creamy just thinking about it.\"\n\n\"Turn it off!\" I yelled, startling Ben. To hear her talking like some sort of sex-crazed slut to another man was simply more than I could bear. My Ginny, the woman I'd loved and worshipped, had betrayed me! Without that recording I would never have believed it. Having to listen to it in front of my boss and his director made the whole thing just that much more humiliating. I closed my eyes, wishing I could crawl under the desk and hide.\n\nBen looked at me with concern. \"Are you alright, Thomas? Can I get you anything?\"\n\n\"No,\" I said quietly, shaking my head, still trying to process what I'd just learned. \"Just give me a minute - I'll be alright.\" Then a thought popped into my head and my pain turned into anger. \"Wait a minute! What were you doing tapping my wife's phone calls? You had no right to do that!\"\n\nThe director stepped forward, his hands held up placatingly. \"Things are not that simple, Thomas.\"\n\nI interrupted him. \"Yes they are that simple. You had my wife under surveillance. She's a citizen and she doesn't even work for the government. You had no right to do that!\"\n\n\"Thomas, we didn't have Ginny under surveillance. Our computer got a hit on the voice pattern of her, um, partner, and that's why we grabbed the conversation.\" \n\nI looked at him and shook my head in confusion. The director ran his hand through his graying hair. \"Thomas, I don't know how to tell you this, but your wife's lover is on our terrorist watch list. We think he's an agent of Al Qaeda or ISIS - these days it's hard to tell them apart.\"\n\nI thought I'd already had the worst shock of my life; now I realized that conclusion was premature. \"Ginny may be a cheater but she isn't a terrorist!\" I gasped. \"She'd never help those people. When the news about the latest terror attack came out, she was outraged. We talked about it several times.\"\n\n\"Relax, Thomas, no one thinks Ginny is directly involved with any terrorist organization. We think this fellow targeted her.\"\n\nAt first I felt a little better. It wasn't Ginny's fault; some Middle Eastern James Bond had set out to seduce her. But I couldn't get around the fact that she'd given in to him. Why was she seeing this guy, why was she flirting with anyone but me? I thought we had a strong marriage; when did she stop loving me? But I put that problem aside to try to comprehend everything else I'd just been told. \"I don't understand - why would some terrorist group target Ginny. It doesn't make any sense.\"\n\nBen gripped my shoulder. \"Think about it, Thomas. They don't care about Ginny, they want to use her to get close to you.\"\n\n\"Me? Why would anybody want to get close to me?\"\n\n\"We can't be sure, but we think they want to use Ginny to get to you, and to use you to gain information about the NSA. It's the only thing that makes sense.\"\n\nI slumped in my chair and glanced idly around the office as if something there might make sense of this madness. I spotted a Christmas wreath hanging from Ben's window and the sight seemed incongruous to me. Christmas was a thing of the past now, in more ways than one. I didn't think there would ever be \"peace on Earth, good will to men\" for me again.\n\nBen's director put both hands on the desk and leaned over to peer at me. \"Thomas, I have to ask you an important question now.\"\n\nI stared at him blankly.\n\n\"Thomas, can you face Ginny tonight and pretend like none of this happened? Can you act like you're unaware of everything you've just learned?\"\n\nI looked at him like he was crazy. \"Not a chance,\" I said flatly.\n\nHe glanced at Ben. \"That's what I thought,\" he said. \"I know I wouldn't be able to if the situation was reversed. So here's what we're going to do: we're going to send you out of town for a few days, get you out of the line of fire until we can have a handle on exactly what's going on.\"\n\n\"What's the problem?\" I demanded hotly. \"Just go pick the bastard up and interrogate him. If you need somebody to waterboard him, I'll be glad to volunteer,\" I added.\n\nThe two of them glanced at each other. \"That's the thing, Thomas: Ameer has disappeared, and he may have left Washington. In any case, his cellphone signal is off the air and he's not in the apartment where he was living.\"\n\nA thought struck me, and after what I'd just learned it felt strange to ask, but I did anyway. \"What about Ginny? Is she in danger?\"\n\n\"I don't think so,\" the director said. \"She wasn't Ameer's real target, only a means to an end. But don't worry, the FBI will keep a close eye on her.\"\n\nI felt a little better. What Ginny had done had left a gaping wound in me, but I still couldn't bring myself to want any harm to come to her. I'd cared too deeply for her too long; I just couldn't turn that off on such short notice.\n\nI looked up at the two men. \"So what do I do now?\"\n\n\"You need to get home right away so you can pack a bag. Then get down to Washington National right away. We're going to send you to Oak Ridge. Your reservations have already been made,\" the director said. \"The first flight available is a Southwest flight to Nashville at noon. We'll have somebody meet you at the airport and drive you to Oak Ridge.\"\n\nWhile I tried to take that in, the director added, \"Be sure to leave Ginny a note so she won't be suspicious, in case Ameer gets in touch with her again.\"\n\nWhen I got home to our little bungalow and went inside to pack, everything seemed changed. All the furniture and decor that had been cozy and familiar when I woke up now seemed foreign to me. Our home had been full of dreams and aspirations for me; now none of those remained.\n\nWhen I wrote my note to Ginny, it took everything in my power not to say the things that were in my heart. But I remembered what I'd been told about her lover, and the last thing I wanted to do was to alert him that we were onto him. So I kept my message simple and direct, and I didn't make any dramatic gesture like leaving my wedding ring on top of it. But I did take my ring off and slip it into my pocket. The bond it symbolized was broken beyond repair the moment I heard that recording.\n\nDuring the two-hour flight I tried to divert myself with the Sudoku in the in-flight magazine but I just couldn't concentrate. My hand kept slipping into my pocket to finger the ring lying there. If only it were a magic ring I could use to go back in time before all this started. But then I remembered that whatever urge or vulnerability that had led Ginny into infidelity would still be there, ready to arise when the opportunity came. Damn, I was so fucked up that I couldn't even generate a decent fantasy!\n\nAs I came off the jet bridge at Nashville International, a very large man with a prominent bulge under his sports coat sidled up to me and asked, \"You Thomas Selfridge?\" I started to answer, but realized that I didn't know who this guy was. \"Do you have any identification?\" I asked.\n\nHe sighed, pulled out his wallet and flipped open an FBI badge. I nodded and fell in beside him. \"How did you know it was me?\" I asked.\n\n\"They told me to look for the saddest-looking guy on the plane,\" he said without even a smile. I fell in beside him, depressed to think that my misery was obvious to everyone.\n\n\"Um, I didn't catch your name on your badge,\" I said, trying to be a little sociable.\n\n\"Henry,\" he said as he walked on down the concourse.\n\n\"Er, is 'Henry' your first name or last?\" I asked, hurrying to catch up.\n\n\"Yep,\" he said, still walking.\n\nI shook my head. Between my melancholy and Henry's taciturnity, the drive to Oak Ridge ought to be a barrel of laughs, I thought dejectedly.\n\nI'd checked the Google map in the airport before I'd left, and I knew Oak Ridge was slightly over 150 miles almost due east from Nashville on I-40. That meant we had a two-hour drive ahead of us. \n\nAs I'd expected, Henry kept his silence for most of the way. But when we passed the exit to Harriman, he unexpectedly nudged me and nodded out toward the left. I glanced up and did a double-take. There poking up through the low ridges and trees were two of the largest smokestacks I'd ever seen. Even with the winter afternoon shadows darkening the surrounding area, the towers were still tall enough to catch the light. The view was surreal, almost like something from a De Chirico painting.\n\n\"What is it?\" I asked.\n\n\"Kingston Steam Plant,\" Henry said. \"It generates 1.7 gigawatts of electricity, most of it for your NSA guys and the Oak Ridge National Laboratory.\"\n\nWe crossed over a bridge, and now I could see the entire structure. \"How tall are those things?\" I asked.\n\n\"Just over a thousand feet,\" he said, \"taller than the Eiffel Tower.\"\n\nAs I digested that, I suddenly realized that this was the longest conversation that Henry and I had held the entire trip. \"How come you know so much about all this?\" I asked.\n\nHe glanced over at me. \"I grew up around these parts,\" he said. Then he abruptly pulled off the interstate onto State Route 58 and headed north toward Oak Ridge. Shortly afterwards he turned into the parking lot of a roadside motel \"Too late to go visiting tonight,\" he said. \"We'll stay here.\"\n\nHe caught my skeptical look. \"Don't worry. The rooms are small but they're clean,\" he said.\n\n\"Great,\" I thought. \"A terrible day just got a little worse.\"\n\nDecember 27\n\nActually, the motel turned out to be more comfortable than I expected, and the breakfast they served the next morning was delicious. I'd never had grits before, but to my surprise I liked them.\n\nAfterwards we got back in the car and made our way to the gates of Oak Ridge National Laboratory. Even though we were on their approved visitors list, the security was still very thorough. \n\nThe NSA's operation at Oak Ridge goes by the less-than-descriptive name of the Multiprogram Research Facility, but everybody there just calls it Building 5300. The team at Building 5300 works primarily on code-breaking. In today's world, that means throwing maximum computing power at encrypted data until it whines like a puppy and gives up its secrets.\n\nMy specialty is different: I try to analyze computer software of unknown origin and either eradicate or neutralize it. The Oak Ridge boys (and girls) specialize in decryption, so I hadn't had much to do with them in the past. But once they began showing me their toys, ideas began to flow.\n\nIn a nutshell, Building 5300 houses what may well be the world's largest and fastest computer. It's so massive that it fills an area the size of a warehouse and requires a tremendous cooling capacity to keep it from frying itself. And did I mention fast? The current iteration of their baby is an exascale computer, which means it can perform ten-to-the-18th power calculations per second. Even 128-bit encryption can't stand up to that.\n\nWhat intrigued me was the idea of turning that kind of power loose on viruses, worms and Trojan horses. The hackers who write this stuff have their own style, their own way of solving problems. It occurred to me that it might be possible to identify who wrote a piece of malware by the way they wrote the code. \"I get it: kind of like a linguist can tell where a text comes from and when it was written by the choice of words, spellings and phrases,\" the head techie said excitedly. \"All we'd need would be enough samples so we could identify patterns and tendencies.\"\n\nI was pretty pleased with myself at that idea and vowed to present it to my boss as soon as I got back to Fort Meade. Businesses and governments were coming under increasing numbers of cyber-attacks. This might be a way to identify who had launched the attack and where it had come from.\n\nAbout that time I heard a grunt from behind me and I turned around to see Henry looking at his watch. He'd been patiently and silently following me all day, and now he was not-so-subtly letting me know that it was quitting time. I checked my phone and was surprised to realize just how late it had gotten.\n\nThat evening Henry drove me into the city of Oak Ridge and took me to Dean's Restaurant for dinner. The place wasn't much to look at - a converted pharmacy - but the fried catfish Henry ordered was delicious. \"I might turn into a Southerner if everything is this good,\" I told him. He just snorted.\n\nWhen I got back to my room at the motel, I turned on my cellphone and discovered that I had a voicemail from Ginny. My sudden \"business trip\" was unusual, and she was both surprised and annoyed, especially since I hadn't told her when I'd be back. \"I guess I'm making it hard for her to arrange her next liaison with Ameer,\" I thought bitterly, and started to erase her message. Instead I replayed it so I could listen to her voice more closely. It was strange: her voice sounded like it always did, but I couldn't stop hearing the lascivious tone she'd used with her lover. How could she be so recognizable and so unfamiliar at the same time? Finally I shut off the phone and flopped back on the bed.\n\nAs I lay there, scenes from our life together kept flashing through my mind. Suddenly, I recalled the time Ginny had come home all upset because her best friend had caught her husband cheating. \"I told her to kick that bum out and then find a hired-gun lawyer to take him to the cleaners,\" she said vengefully. \"If he didn't want to stay married he could at least have filed for divorce. He didn't have to cheat.\"",
        "Although I had agreed with Ginny's assessment, I'd been somewhat surprised at her vehement reaction. But at least I was reassured about my own marriage because it was obvious that Ginny would never cheat on me. \"What a fool you were!\" I cursed myself. \"What a hypocrite she is!\"\n\nDecember 28\n\nAfter breakfast I was scheduled to take a tour of the Y-12 Complex. That, of course, is where they made \"the bomb,\" and it's in a different area of the reservation. I never realized how big the Oak Ridge Reservation is. Henry drove me through rolling hills and woodlands that were uninhabited, and suddenly we came upon an industrial complex the size of a small town.\n\nAt Building 5300, I was among people from my own agency, and we could \"talk shop.\" At Y-12 I was just another visiting fireman, and it didn't take long for me to see that my guide thought I was a waste of his time. For that matter, I felt the same way. I understood that my boss wanted me out of the way so I wouldn't tip off Ginny and Ameer that we were onto them. But surely I could be doing something more interesting than wandering around a highly classified nuclear weapons manufacturing facility. Besides, I hated nukes and didn't want to be any nearer to them than was absolutely necessary.\n\nSo when noon rolled around, I sidled over to Henry and asked him if there wasn't something else we could do rather than traipse after my bored tour guide. Henry's face actually reconfigured itself into an expression I thought might be a smile. We made our excuses to my guide and Henry led me out to the car and off to another local eatery outside the reservation.\n\nOver lunch I asked him if there was anything to see in the area. \"For sure,\" he said. \"There's some might pretty country about a half-hour drive from here, if you're willing to get off the main roads.\"\n\nThat sounded good to me - at that point almost anything would have - so I eagerly agreed. Accordingly, after lunch I found myself going west northwest from Oak Ridge to Frozen Head State Park. When I asked Henry about the odd name, he told me it came from the main peak, which was often snow-covered in the colder months of the year.\n\nWe were already traveling on an old state highway when we turned north toward the little town of Petros, where the park entrance is located. Once we got to the park our car started climbing as the highway turned into a series of curves and switchbacks snaking their way up the side of Fork Mountain. The posted speed limit was 10 mph, and given the icy conditions and the sharp curves, I thought even that was excessive.\n\nThe park was mostly filled with deciduous trees, and with no foliage to block the view, the vistas were impressive. Henry kept pointing them out to me every time we came to an overlook, so perhaps that was why he didn't spot the SUV that overtook us and started to pass.\n\nOnly it didn't pass us, it suddenly rammed into the side of our car. \"Sunovabitch!\" Henry yelled and yanked the wheel to the right, but the other vehicle came right with us and slammed into us again. As our tires went off the pavement, Henry fought the wheel, and for a second I thought he was going to regain control. Then the world turned topsy-turvy as our car flipped and rolled. \n\nWhen the view through the windshield finally stabilized, we were on our back like a stranded turtle and I was groggily hanging upside down, held in place by my seatbelt. Movement in front of us caught my eye, and I struggled to make sense of the upside-down view. After a moment I saw the SUV that had sideswiped us pull into the entrance of a jeep trail up ahead, then back up and turn around. \"He's coming back to finish us off,\" I yelled. Henry was still cursing and struggling to free the big automatic he carried.\n\nThen as the SUV began to gather momentum towards us, a second car flashed passed us like some crazed moonshiner and barreled straight for the SUV. Instinctively I closed my eyes, waiting for the terrible crash, but at the last minute the SUV driver must have chickened out and wrenched the wheel away from the impending collision. I guess he lost control because the SUV flipped and rolled over the edge and down a ravine. I couldn't see what happened, but I could hear the noise as the car grated against the rocks and then smashed into the huge old-growth trees below.\n\nThe second car had skidded to a halt beside the point where the SUV had gone over. Then a figure came running towards us, and to my surprise I realized it was a woman. She was wearing jeans, a leather jacket and tall boots, and her dark hair was cut short and combed straight back on her head. But I stopped admiring her when I noticed the vicious-looking combat knife in her hand. \"Now she's coming after us!\" I thought and resumed struggling to free myself. \n\nThe woman ran up to Henry's side of the car, knelt down and reached through the shattered window to cut the straps to his seat belt. As Henry wriggled his way out through the window, she came around to my side and prepared to cut me free as well. \"Better grab onto something,\" she said in a voice with just a hint of an accent, \"otherwise you're going to fall on your head.\"\n\nI reached down (up?) and grabbed the car seat, but I still landed awkwardly when she sawed through my seatbelt. She started to pull me out of the car, but suddenly jerked away as she spotted something. I looked up to see Henry's head disappear as he clambered down the bank where the SUV had crashed.\n\n\"No, come back!\" the woman yelled, and started after Henry. \"Get away from there,\" she cried out, trying desperately to attract Henry's attention. Just as she neared the ravine, I heard a strange voice yell something that sounded like \"Los Angeles!\" Then there was a deafening explosion, and the mystery woman was knocked down by the blast. \n\nI managed to scramble out of the car and ran to her side. While I helped her to her feet, I asked, \"What the hell was that?\"\n\nShe had a grim look on her face. \"They call it a martyr's vest. They're all wearing them now.\"\n\nI wasn't sure what she meant, but I suddenly remembered my companion. \"Henry!\" I shouted, and started for the ravine, but the woman reached out and grabbed my arm. \"Unless you've had some heavy duty combat experience, you don't want to go down there and see that. I'm sorry but your friend is gone.\" She shook her head angrily. \"Aren't you people even briefing your agents on what to expect?\"\n\nI still didn't know what she was talking about, but when she pulled on my arm I dutifully followed her back to her car. \"What do we do about Henry?\" I asked as she started the engine. \"I need to let somebody know what's happened to him.\"\n\nShe shook her head angrily. \"The only thing we need to do now is to get out of here. They may have sent a second team.\"\n\n\"Who sent a second team?\" I asked, nevertheless fastening my seatbelt.\n\n\"ISIS, Al Qaeda, whoever. As far as we're concerned, the distinctions don't matter right now. They want to kill you, and I need to make sure that doesn't happen.\"\n\nInvoluntarily I looked over my shoulder, but no one was following us.\n\nWhen I looked forward I noticed a chunk of something red and oozing that had run down on the windshield. The woman turned on the wipers and the windshield cleaner and washed it away. \"That was part of Henry!\" I thought sickly. Then it struck me that Henry and the woman must have been working as a team. I turned to her and said, \"I'm sorry about your partner.\"\n\n\"What partner?\" she asked in puzzlement.\n\n\"Henry - the guy back there who got blown up.\"\n\n\"He wasn't my partner; I'm not with the FBI.\"\n\nNow I was really confused. \"But if you're not FBI, who are you with?\"\n\nShe glanced over at me for a moment before returning her eyes to the road. \"I'm with the Mossad,\" she said quietly.\n\nI gaped at her. \"The Israeli intelligence agency? What does the Mossad want with me?\" I demanded.\n\nHer lips pursed into a tight, straight line. \"Right now we're trying to save your ass,\" she shot back as the car slid around a tight downhill turn.\n\nI slumped back in my seat in confusion, unable to comprehend what was happening to me. As I sat there trying to make sense of what was happening, I noticed that we were out of the park and appeared to be heading back toward I-40. Now that we weren't careening through hairpin turns, I thought it might be safe to try to get some answers.\n\n\"Ok, well I do appreciate your saving my life back there, uh . . . I don't even know your name.\"\n\nShe looked over at me again and there was a little smile on her face. \"I'm Esther Freeman,\" she said. \"Pleased to make your acquaintance, Thomas Selfridge.\"\n\nWe were now back on the interstate headed east toward Oak Ridge. I watched as she set the cruise control for five miles above the speed limit.\n\nThe shock of what had happened was beginning to wear off, but it left behind only confusion. Why were Arab terrorists trying to kill me? Why was a Mossad agent protecting me? What was I supposed to do now? What the hell was going on?\n\nI looked at her querulously. \"I guess I don't understand. Shouldn't we call the police or the FBI and let them know what happened back there?\" I asked.\n\nShe gave me a grim look. \"You still don't get it, do you? Why do you think that guy was waiting for you?\"\n\n\"I don't know,\" I said helplessly. \"Only two days I was in Fort, um, I mean Washington, and then I got ordered to come down here to Oak Ridge. I don't know how they knew I was here or why they want to kill me.\"\n\n\"You don't have to be coy around me,\" she said. \"I know you work for the NSA. I also know the reason why your boss ordered you to fly down here on such short notice.\"\n\nI stiffened, \"You mean you know about Ginny and . . .\"\n\nShe nodded. \"We've known about her little liaison with Ameer for a while. I've listened to the tape of your wife's conversation, and several others as well.\"\n\nI grimaced in spite of myself. It's bad enough when your wife is cheating on you; it's infinitely worse when you learn that everyone else knows all about it. Angrily I snapped, \"That still doesn't explain why I was ambushed like that.\"\n\nShe took a deep breath. \"Didn't you think it was odd that your boss would send you out of town like that?\" she asked. \"Didn't you think it was strange that they would want you to tell Ginny where you were going?\"\n\n\"They were trying to keep me from having to confront her,\" I said hotly.\n\nShe shook her head like I was a slow child in her classroom. \"They were trying to use you as bait to lure Ameer away from Fort Meade,\" she said. \"They wanted him to follow you. They didn't know what he was up to and they wanted him as far away from the NSA as they could get him. They probably also thought that if he went after you, Henry could take him out. But Henry got careless when he drove you up to Frozen Head, and he managed to get himself killed in the process.\"\n\n\"They were using me for bait?\" I asked, growing angrier by the second at the thought. But before I think about it further, I noticed the first Oak Ridge exit flash by. \"Weren't we supposed to get off there?\" I asked.\n\nShe shook her head. \"That's the last place we want to go now. We've got to get you back to Fort Meade.\"\n\nI tried to digest that thought. \"Are we going to catch a flight out of Knoxville?\"\n\nShe shook her head. \"No planes, no credit cards, no cellphone calls. I can't take the risk of another interception attempt. We're going off the grid.\"\n\n\"We're going to drive all the way back to Washington?\" I asked in disbelief. She merely nodded.\n\nWe hit rush hour traffic in Knoxville just then, and I kept quiet while Esther maneuvered through the congestion. But once we were past and speeding toward the Virginia border, I couldn't hold my questions any longer.\n\n\"You never told me why the Mossad has been following me,\" I complained. \"For that matter, you haven't told me why Al Qaeda or whoever Ameer is with is trying to kill me.\" Suddenly a not unpleasant thought struck me. \"Wait, was that Ameer who blew himself up along with Henry?\"\n\nShe shook her head. \"No such luck. That was actually Ameer's brother, Hassan. He's another bad one, and I'm not sad he's gone, but Ameer is the one we really want, preferably alive.\"\n\nConsidering that Ameer was the one sleeping with my wife, I wouldn't have minded if he were in pieces back there. \"So who is this Ameer guy, and why does he have it in for me?\"\n\nShe took on a distinctly uncomfortable expression. \"Actually, that may have been partly our fault. You know that computer virus you've been working on for the past few weeks? Well, we were the ones who sent it to the NSA.\"\n\nI was appalled that she would know about that. Wasn't anything secret anymore?\n\n\"One of our people found it attached to a communication we intercepted in Tel Aviv. We haven't been able to figure out what it is or what it's supposed to do, but we think its target is something in the State of Israel. The only clue we have is what appears to be the name for the virus: \"Al Andalus\".\n\nThis was the first I'd heard about any name. \"What is 'Al Andalus'?\" I asked. \"Is it some kind of code or someone's name?\"\n\n\"No, it's a name out of history. Back in the 700s, the Moors invaded Europe from North Africa. Over time they managed to conquer Portugal, most of Spain and even part of France. They named the region Al Andalus, and various caliphates and emirates ruled it for much of the next seven centuries.\"\n\nI stared at her dumbfounded. \"All this is about something that happened 1300 years ago?\"\n\nShe nodded grimly. \"I know it's hard to believe, but ISIS wants to re-establish the caliphate and restore Muslim rule over Al Andalus.\"\n\n\"That's the craziest thing I've ever heard!\" I exclaimed. \"How can they possibly hope to do that? And anyway, that has nothing to do with me. I don't have any Spanish blood in me - I've never even been to Spain.\"\n\n\"You're looking at this from a Western perspective, not from theirs,\" she said calmly. \"To ISIS, the loss of Al Andalus was a humiliation that must be avenged, and they are prepared for a struggle that could last a century or more. They know they need the support of other Arabic countries, so their plan is to unite them by attacking the State of Israel. We think the Al Andalus virus is the opening salvo in that campaign. Our experts believe this virus is some kind of highly sophisticated cyber-attack on our defenses. But we couldn't crack it, so we passed it along to you.\"\n\n\"Why me? I'm just another hacker; I'm nothing special,\" I said.\n\n\"Don't sell yourself short,\" Esther said. \"We've been following your work and we know what you're capable of. More importantly, ISIS knows it too, and they're desperate to make sure nobody figures out a way to neutralize it. Why do you think they tried to get to you through Ginny? Why do you think Ameer sent his brother after you when you were suddenly sent to the biggest, fastest computer system in the country?\"\n\n\"My boss never said anything about any of this,\" I protested.\n\nShe shook her head in disgust. \"The NSA brass was never convinced the Al Andalus virus was all that important,\" she said. \"We had to push hard to get them to assign it to you.\"\n\nSuddenly a memory hit me. \"Just before that guy blew himself up, he shouted something that I didn't understand.\"\n\nShe was right there with me. \"Yes, he shouted 'Al Andalus.' Now do you believe me?\"\n\nI sat back in my seat and tried to take in everything I'd just learned. Another question came to mind, but before I could ask it Esther abruptly turned off on the exit toward Johnson City. \"Where are you going?\" I asked, but instead of answering she pulled off on the shoulder of the road and shut off the engine. Then her head slumped back against the seat rest. \"I don't think I can make it any farther,\" she said, and then to my horror she passed out.\n\nI guess I panicked a little because I yelled at her and shook her but she didn't wake up. I got out of the car, ran around to the driver's side and pulled open the door. Then I saw the problem. The left shoulder of the leather jacket she was wearing had a jagged tear in it. I put my fingers inside, and when I pulled them out they were covered in blood.\n\nI pulled her out from behind the wheel and managed to slide her into the back seat. Now what? In the distance I could see a sign for a motel, and, not knowing what else to do, I drove down to it. An old man was working behind what passed for the reception desk, and, remembering what Esther had said, I paid cash for a room for the night.\n\nWhen I went back to the car, I found Esther sitting up in the back seat. She nodded approvingly at me when she saw the room key, so I felt better. I pulled the car in front of the room and gently helped her inside and onto the double bed. She gasped as she flopped down, but otherwise she was as stoic as a Spartan.\n\nOnce I'd turned on the bedside lamp she looked up at me. \"You're going to have to help me get this jacket off,\" she said. I nodded and helped her slide her good arm out of the sleeve, then carefully slipped her wounded arm free. She closed her eyes and took a couple of deep breaths. \"Okay, now we need to get the sweater off.\"\n\nI gulped because the knit was tight and I knew it wouldn't slip off nearly as easily as her jacket. Carefully I pulled the ripped arm of the sweater off of her, and she gave a little sob as her arm pulled free.\n\nI gasped when I saw the bloody wound in her upper arm. I also tried hard not to stare at her torso, but that wasn't easy either. She had an athlete's body with well-defined abdominal muscles and virtually no fat. She was wearing some sort of athletic bra, but it was still obvious that she was well endowed. \n\nI glanced up to see a little smile on her lips. \"A girl always appreciates a look from a guy,\" she said as I blushed. Then her smile vanished and she was all business. \"You need to see if there's a drugstore around here. If you can find one, try to get ibuprofen, some isopropyl alcohol, a tube of antibiotic cream and some gauze bandages and adhesive tape. Oh, and get one of those pocket sewing kits, if they have it.\"\n\nI scurried out to the car, eager not to be caught staring at Esther any more. There was a little strip shopping center about a mile down the road, and I was able to purchase the things Esther needed. I remembered to pay cash for everything.\n\nWhen I got back to the room, Esther was sitting up in the bed. Evidently she's managed to rinse her arm off in the bathroom, but it was still oozing blood into the towel she'd brought with her. She took a couple of the ibuprofen tablets first, then had me clean and rinse off the wound with the alcohol. I knew that had to hurt, but she didn't make a sound.\n\nWhen I had cleaned it out as best I could, she looked up at me and said, \"Hand me my knife.\" I couldn't figure out why she wanted her combat knife, but I fished it out of her pocket and gave it to her anyway. \"Okay,\" she said, taking a deep breath, \"now I need you to stitch up the wound.\"\n\n\"Wait a minute,\" I protested. \"I've never done anything like that. I don't know how.\"\n\nShe looked at me grimly. \"If you don't sew it up, it's going to continue to bleed and I could go into shock. Don't worry, I'll walk you through it.\"\n\nReluctantly I threaded the needle and knotted the thread at the end. When I was ready she picked up her knife, put the handle in her mouth and bit down on the rubberized grip. With a gulp I started trying to sew up the wound.\n\nI heard her gasp and whimper around the knife, and once she took it out of her mouth to tell me to pull the stitches tighter. Several times I thought I was going to be sick, but seeing her courage shamed me into pressing on until the job was finished.\n\nWhen I'd tied off the thread, I smeared the antibiotic cream all over the wound. She spat out the knife and looked down at my makeshift surgery. \"Not bad for an amateur,\" she said, and then fainted. That frightened me, but her breathing and pulse seemed normal. I propped her on her back and used a spare pillow to elevate her feet. Then I covered her up with a blanket and waited.",
        "After a few minutes her eyes fluttered open. When she caught sight of me her lips flashed a little smile. \"Don't worry, Thomas, I'm alright, now; I just feel very weak. Let me sleep a little and I'll be fine.\" Then she closed her eyes.\n\nOnce Esther's breathing told me she had gone back to sleep, a wave of exhaustion swept over me. The assassination attempt, Henry's death, the revelations I'd heard, and now my impromptu surgery on Esther all combined to sap any remaining energy out of me. I got up and turned out the lights in our room, then sat down, kicked off my shoes and tossed my keys and wallet on the nightstand. There was nowhere else to sleep except the floor, and I didn't think I could handle that, so I slid in beside Esther. I was out like a light when my head hit the pillow.\n\nDecember 29\n\nThe sky was light when I woke up, and I was embarrassed to discover that I had cuddled up to Esther with my arm around her waist. I gently extracted my arm, hoping not to wake her. I didn't want her to get the wrong idea. She still seemed to be asleep, so I pulled on my shoes, grabbed my wallet and the keys, and went out to the car to find some food for us.\n\nFortunately there was a fast-food place near the drugstore I'd found last night, and I was able to pick up a sack of breakfast sandwiches and a couple of large coffees. When I got back to our motel, Esther was awake and sitting up in bed. At her request I changed the bandage around her arm. I was pleased to see that the bleeding had stopped and that there were no obvious signs of an infection.\n\nThen I had to help her get her sweater back on. I tried to be dispassionate about being so close to a barely clothed female, but it wasn't easy. Thankfully, I didn't do anything to hurt her or offend her.\n\nEsther and I were both ravenous, and we tore into the sandwiches. We were sipping our coffee when she looked at me curiously and said, \"I didn't know Ginny had a tattoo.\"\n\n\"She doesn't,\" I said. \"What made you think that?\"\n\n\"I woke up during the night and had to go to the bathroom. When I came back to bed, I noticed your wallet had fallen open to a picture of her. It looked like she had a tattoo on her neck.\"\n\nMy depression came back in a rush. \"That's an old picture,\" I said flatly, \"and it's not a tattoo, it's a port wine stain.\"\n\nEsther must have picked up on my tone because she raised her eyebrows and asked, \"Want to tell me about it?\"\n\n<blockquote> Ginny and I went to the same high school together. She was bright and cute and slender, and I was crazy about her. But I was shy and nerdy, so I could never work up the nerve to ask her out. Anyway, Ginny was born with a port wine stain on her neck. She was very self-conscious about it, and unfortunately the other kids teased her about it unmercifully.\n\nOne day I was walking down the hall when I saw a group of them surrounding her and taunting her. \"Ginny jelly,\" they called her birthmark, and that must have hurt because she was crying. Suddenly I was running as fast as I could, and I jumped in front of them, my fists clenched and my face red and distorted. \"You get away from her!\" I yelled at the top of my lungs. \"You leave her alone! She's beautiful and you're just too dumb to see it.\"\n\nAny one of the guys could have mopped the floor with me if he'd wanted to, but I was in such a rage that I didn't care, and that must have cowed them. Finally one of the girls on the edge of the group tugged on a guy's arm and said, \"Come on, leave her alone,\" and suddenly the little group of harassers dissipated.\n\nI turned to Ginny, who was watching all this through red, weepy eyes. \"Come on,\" I said, \"let's skip class and get out of here for a while.\" I led her out to the football field, and we climbed up into the stands.\n\n\"Why did you say that, Thomas?\" she asked hesitantly. \"Why did you say I was 'beautiful'?\"\n\n\"Because you are, Ginny,\" I said earnestly. \"You think your birthmark makes you look ugly, but I think it makes you unique and special.\"\n\n\"But it's ugly,\" she insisted. \"I see it every day in the mirror and I hate it.\"\n\n\"That's where you're wrong,\" I insisted. \"You look at yourself and the stain is all you can see. I look at you and I see a beautiful, special girl. You focus on your birthmark, I see the whole you.\"\n\nShe looked at me in wonder and then suddenly reached over and kissed me on the lips. That was the start of our relationship. We wound up going to college together and getting married after graduation.\n\nBut the thing was, Ginny never really believed that she was beautiful. That mark on her neck was always on her mind, and she continued to try to conceal it with make-up or hide it with the clothes she wore. Anyway, after we graduated and she got a job, she wanted to use her income to get the port wine stain removed. I loved her the way she was, but she was determined and went to a specialist to explore getting laser treatments. \n\nThe doctor gave her the good news that the treatments were really effective and could virtually eliminate the birthmark. But he had bad news too. He told her that it would take eight to ten treatments to do the job and that she'd have to wait several months between treatments to let her skin heal. The other bad news was the expense, which wasn't cheap and wasn't covered by insurance. But Ginny was so excited by the prospect of getting rid of her stain that I nothing else mattered to her.\n\nAnyway, Ginny finished the treatments about a year ago, and they changed her outlook completely. Her self-confidence soared, and she responded by becoming flirty and more outgoing. She also started wearing more revealing clothing now that she didn't have to hide that birthmark on her shoulder and neck. Of course that began to attract attention from other males. I wasn't happy about it, but Ginny loved it. She told me it felt great to have people look at her with admiration, not pity. Her new attitude bothered me, but when I tried to say anything she accused me of not letting her enjoy herself. I was glad Ginny was happy so I kept my reservations to myself. You know how well that worked out for me.</blockquote>\n\nEsther looked at me in silence for a long time, and I figured she thought I was a total wimp. Instead, she finally said, \"You're an interesting man, Thomas. You're not what I expected at all.\" Then she stood up abruptly. \"We need to get back on the highway. The morning is almost gone and we've got a lot of driving ahead of us.\"\n\nAlthough Esther said her arm was better, she still wasn't comfortable driving so I climbed back behind the wheel. In no time we had left Tennessee and crossed over into Virginia, but we still had nearly eight hours of driving ahead of us.\n\nAs we rolled north on I-81, I glanced over at Esther. \"So what do you know about the Al Andalus virus? Why are your people so worried about it?\" I asked her. \n\nShe was all business now. \"Our people have been working on it ever since we discovered it, but they haven't made any progress at all. They thought at first it was some sort of information retrieval routine, something to steal passwords, secret documents, confidential data. But the problem is that the damned thing doesn't do anything. We've quarantined different types of computers and 'infected' them with it. The virus runs momentarily, then shuts itself down.\"\n\n\"Then why are you so worried?\" I asked.\n\n\"For three reasons,\" she said. \"First, our people have never seen anything like it. It seems to be very complex and highly sophisticated. No one would go to that much trouble for something innocent. The second reason is that we're picking up all kinds of back-channel activity from ISIS. Everything we hear seems to indicate that something big is about to happen - we just don't know what or when. And finally, there's you.\"\n\n\"Me?\" I said in surprise.\n\n\"Exactly,\" she said. \"When we steered this virus to you, the noise levels peaked and then went silent. Then, the next thing we knew, two very bad types got put on your tail.\"\n\n\"Ameer and his brother,\" I said bitterly.\n\n\"Precisely,\" she said. \"When you add it all up, whatever Al Andalus is, it's critical to ISIS's plans. We've got to figure out its purpose and how to stop it.\"\n\n\"So when we get back to D.C., I guess we need to go straight to Fort Meade,\" I said.\n\nEsther shook her head in an emphatic \"no.\"\n\n\"I really doubt they'll let me in there with you,\" she said, \"and they might not even let you in after what happened in Oak Ridge. Rather than risk a long delay, I think it would be better for you to tackle the virus from your home computer. You have secure access to the NSA network, don't you?\"\n\nI told her I did, so that became our plan. The only part of working from home I wasn't happy about was the possibility of encountering Ginny. After all I had learned, I just didn't feel like I was ready for a confrontation with her. Besides, it would only serve as a distraction to keep me from focusing on the virus. Having it out with my wife would have to come later.\n\nI did my best to make up for our late start, but we kept losing time along the way. In addition to the inevitable pit stops and a break to pick up some lunch, the wound in Esther's arm was clearly causing her more pain than the ibuprofen could handle. Finally, I pulled off the interstate at Harrisonburg and went looking for a drugstore. I passed by a couple of chain stores and finally found an old-fashioned family drugstore. The pharmacist on duty was a woman, and when I showed her Esther's arm, she became very sympathetic.\n\n\"I'm trying to get my wife to our family doctor in D.C.,\" I told her, \"but I don't know whether she can hold out till we get there.\"\n\nThe woman went back among the shelves and reappeared with a little white envelope. \"Here's a Lortab,\" she told me. \"It's a combination of acetaminophen and hydrocodone. I can't give you more than one without a prescription, but this should help your wife till you can get home. I'd recommend she have something to eat before she takes it.\"\n\nI thanked the druggist profusely for her kindness and we climbed back into the car. Esther wanted to hold off a little before she took the medicine in case it made her sleepy, so I drove another hour until we reached the turn-off to I-66 and stopped in Front Royal. By then it was after 8:00 p.m., and we were both hungry. We found a funny little burger joint called Spelunker's - I guess because of Skyline Caverns - and we had burgers and fries, which were surprisingly good. \n\nEsther took the Lortab with her meal, and it seemed to hit her almost right away because she started to get drowsy right after we finished. I was worn out too, so it was obvious to me that we weren't going to make it home that night. There was a Super 8 motel almost right across the street, so after we finished our meal I drove the car over there and got us a room. I helped Esther inside and she was out like a light only minutes after she hit the bed.\n\nThat left me to sit around in the darkened room, and once again my mind started revisiting everything that had happened. In only a few days my whole life had been turned upside down. And the person who had caused all this chaos was none other than my wife Ginny, the woman I had loved without reservation and for whom I would have gladly given my life before all this started.\n\nBetrayal, I thought, has to be the worst sin. When you love and trust someone only to discover that they aren't equally committed, it shakes the very foundations of your being. I felt so many emotions that I couldn't even identify them all. The only thing I knew for sure was that Ginny was the last person I wanted to see.\n\nThe more I thought about the possibility of encountering her, the more upset I got until I did something I shouldn't have done. I went outside, turned on my cellphone and called Ginny's number, hoping that she wouldn't answer. Sure enough, the call rolled over to her voice mail, and hearing her recorded message brought my emotions quickly to the boiling point.\n\n\"It's me, Ginny,\" I said, trying hard not to yell at her. \"Listen, I know all about you, about your affair with Ameer. I heard what you'd like to do with him when you're stuck at home with me, and it made me sick. I can't believe you betrayed me like that, after all I've done for you and especially after all the things you said to me about faithfulness.\" \n\nI realized my voice was rising and I took a deep breath to try to calm myself. \"Anyway, I'll be home tomorrow and I don't want you there. Go to your boyfriend's house or to your parents' or go to hell for all I care. Just stay away from our house, because the only time I want to see you again is in divorce court!\"\n\nI wanted to say more, something to convey all the hurt and anger I felt, but I couldn't come up with anything clever so I hung up. At that moment I wished I had an old-fashioned phone with a receiver so I could slam it down.\n\nI was still pretty upset so I walked east along South Street for a little way and then retraced my steps. When I got back to our room, Esther was still sleeping. I looked at her and wondered what she was really like. Did she have a boyfriend back in Israel? Did she cheat on him? I shook my head, trying to dispel my dark thoughts. At least she had saved my life. And even though I knew she wanted my help, she hadn't hesitated to put herself in harm's way for me. That had to count for something.\n\nI lay down beside her. Even through the covers I could feel the warmth of her body, and it felt good. Then I realized that I was likely to be sleeping alone for a long time to come. On that sad note I drifted off to sleep.\n\nDecember 30\n\nThe \"continental breakfast\" the motel offered wasn't much but it fueled us enough to get us on our way. Esther told me that her arm was feeling a lot better, but when we were ready to leave I got back behind the wheel. Besides, I knew the way to my home in College Park. \n\nIt took us another hour and a half to get to Washington, and then we had to drive halfway around the Beltway. But once we made it to College Park the traffic dropped off significantly. With all the University of Maryland students gone for Christmas break, the streets were almost deserted.\n\nI drove through our neighborhood warily, but when I went by my house it appeared that Ginny had gotten my warning because her car was not in the driveway. I circled around the block once and then parked. \n\nInside the house was a mess, but I ignored it. I sure didn't feel like I had to apologize to Esther for Ginny's sloppy housekeeping. \n\nWe had turned our formal dining room into a home office, and I led Esther in there and began booting up my computer. But before I could log on to the NSA network, I heard a key in the lock of the front door. \"Damn it,\" I cursed, \"I told her not to come here!\"\n\nI ran to the door and yanked it open. There was Ginny, tears pouring down her face. \"I'm sorry, Thomas, I'm sorry,\" she blubbered. Before I could say anything she was shoved forward into my arms, and as I automatically tried to catch her, a man suddenly emerged from behind the frame of the door and barged into the house. \"What in the hell . . .\" I yelled, but then I saw the big black automatic he was pointing at me and I stopped abruptly.\n\nEsther had rushed up behind us. \"Get back,\" the man said menacingly, brandishing his gun to include all three of us. After slamming the door shut, his face took on a grin of triumph as he stared at us. \"Allow me to introduce myself. I am Ameer Nassir.\" He gestured at me. \"And you must be the hapless cuckold,\" he said with a sneer. Then his eyes caught sight of Esther and his smile widened. \"And who have we here? I do believe it's the redoubtable Esther Freeman, the Mossad lackey.\"\n\nOut of the corner of my eye I saw Esther tense and I realized that she was about to spring. Ameer must have seen it too because he shifted his gun to aim at her. \"No, no, no,\" he warned her, \"don't even think about it. You would die even if you managed to get my gun.\" Then he pulled open his jacket and we all could see the vest he wore under it. \"One wrong move and I blow us all away, me to Paradise and you three to damnation.\"\n\nEsther relaxed her muscles while Ginny and I stood there, paralyzed by fear.\n\n\"Very well, nerd boy,\" Ameer said with a sneer, \"let's see how much you've learned about our little surprise.\" With that he stepped into my home office, turned to my computer and moved the mouse to clear the screensaver. When it did so, the flatscreen revealed the login page for the NSA network. \"The password,\" he said, \"give it to me.\"\n\n\"No,\" I said flatly. I was hoping that keeping him in the dark about our progress might give us some leverage with him.\n\n\"So, the cuckold wants to show he has some balls after all,\" he laughed. \"I wonder what it will take for me to convince you to cooperate? Maybe if I kill the Jewess . . .\"\n\nI saw Esther stand up a little straighter, and I realized that she was fully prepared to die. But Ameer laughed again. \"No, she is a soldier and I think you know that all soldiers must be prepared to die sooner or later. I don't think her death will motivate you.\"\n\nSuddenly he swung the gun towards Ginny. \"So how about this one?\" he asked rhetorically. \"I wonder if you still have enough feelings left for her to want to prevent her death?\"\n\n\"Ameer!\" Ginny shrieked. \"You can't mean it, not after everything we've done . . .\"\n\nAmeer's face contorted into a look of distaste and contempt. \"Be silent! You are nothing to me, simply another Western whore ready to spread her legs and dishonor her husband at the first opportunity.\" Then he turned back to me and his face took on a sly smile. \"But I don't think I'll kill her. What if I merely mutilate her, say shoot off one of those breasts she likes to flaunt?\"\n\nGinny uselessly clasped her hands across her bosom and began to sob piteously, but Ameer kept his eyes on me the whole time. Dammit, I was so angry at her for betraying me, but I still didn't want to see her tortured. I couldn't shake off years of protecting her that easily.\n\n\"Alright, alright,\" I said, \"don't shoot her. I'll give you the password.\"\n\n\"Much better,\" he said, turning away from Ginny and back toward the keyboard. \"What is it?\"\n\n\"His hands,\" I thought, \"I've got to capture his hands.\" Suddenly I had a crazy idea. If it didn't work he would probably kill me on the spot. But then, I thought, he'll probably kill me anyway once he's certain that I haven't figured out how to disable his virus.\n\n\"I don't have it memorized,\" I told him. \"I used the product code written on that metal cube on the bookshelf.\"\n\n\"You really are a nerd,\" he said with contempt as he picked the cube up and examined it. It was made of a flat silvery metal about an inch on each side.\n\n\"But that's only half the password,\" I said breathlessly. \"The other half is on the second cube over here,\" I said, pointing at a wooden cabinet behind me.\n\nNow his suspicions were fully alerted, and I could almost feel the spot on my chest where his gun was aimed. \"Pick it up and show it to me - slowly now,\" he directed.\n\nBeing careful not to make any sudden moves, I picked up the cube off the wooden shelf and held it up for him to see. It was identical to the one he held. \"Do you want me to bring it to you?\" I asked.\n\n\"No!\" he snapped quickly. \"Place it on the floor and slide it over to me with your foot. Gently. . .\"\n\nGinny was still crying and Esther was watching me with a curious expression as I knelt down, placed the cube on the floor and gave it a shove toward him with my shoe. \"Now back up, all of you,\" he snarled.\n\nWhen we were back against the far wall he put his gun down within easy reach, knelt and grabbed the second cube in his right hand while still holding the first one in his left. Then he stood and brought the two up to examine them. But, to his astonishment and ours, his hands seemed to accelerate towards each other and slam together with so much force that I heard the bones in his fingers fracture.",
        "Ameer screamed in pain and sank to his knees, frantically trying to pull his hands apart. I ran at him somewhat clumsily and hit him with my shoulder, knocking him to the floor. Esther was only a moment behind me, and as he fell over she kneed him viciously in the head. She did it a second time and Ameer slumped unconscious.\n\n\"Have you got any tape?\" she yelled at me. I yanked open one of the desk drawers to pull out some duct tape. In seconds we had Ameer's arms wrapped together, his fingers still pinned between the metal cubes.\n\nAfter Esther had wrapped his legs together with the duct tape, she turned to me in puzzlement. \"What in the hell were those cubes?\" she demanded. \"I've never seen anything like that.\"\n\nI actually blushed. \"It's kind of a nerd thing. They're neodymium magnets,\" I told her in an apologetic tone. \"They're incredibly strong rare earth magnets. I saw them in a science catalog and bought a pair out of curiosity. But I never did anything with them because they scared me. Each one of those has a pulling force of about 140 pounds. It was the only way I could think of to keep him from setting off that damned vest.\"\n\n\"Omigod, no wonder he couldn't pull his hands apart. I almost feel sorry for him,\" she exclaimed.\n\n\"I wasn't sure it would work,\" I admitted, \"but I felt like I had to try something.\" Esther said nothing; she just gave me a long, appraising look.\n\nJust then we heard a terrific thud and the front door was kicked open. A number of men burst into the house carrying assault rifles. \"FBI,\" one of them yelled. \"Everyone down on the ground, hands in the air.\"\n\nIt took a while to sort things out. After the agents finally decided that the rest of us were who we said we were, they began concentrating on Ameer. First they carefully cut off the \"martyr's vest\" he was wearing and then disarmed it. One of the agents whistled. \"This would have blown the whole house apart if he'd set it off,\" he marveled.\n\nOnly then did they cut the tape off of the terrorist and try to separate his hands. It took two agents to pull them apart, and the pain woke the terrorist. He made a quick grab for the trigger to his vest, only to realize that it was gone and he was helpless. For a moment he slumped back in defeat, but then he turned his head to stare at Esther and me.\n\n\"You think you have won, but you are wrong. Even if you knew what to look for you are too late to stop what will happen. My life does not matter; the caliphate will rise as before. Al Andalus!\" he shouted, and then ground his teeth in a smile-like grimace. I heard a small crack and then smelled the odor of bitter almonds.\n\n\"Shit,\" one of the agents shouted, \"he's taken poison!\" \n\nThe medic who was working on Ameer's hands yelled at his partner, \"Amyl nitrite - stat! Hold it under his nose and try to get him to inhale it!\" But Ameer went into convulsions and within two minutes stopped breathing altogether.\n\n\"Cyanide,\" the medic swore. \"He must have had a fake tooth. The last time I heard of anyone using one of those was back in the twentieth century.\"\n\nAfter Ameer was loaded into a body bag and unceremoniously hauled out to the ambulance, there was only one more dramatic incident. One of the agents went over to Ginny and politely asked, \"Are you Virginia Selfridge?\"\n\nWhen Ginny nodded, he said, \"Mrs. Selfridge, you are under arrest as an accessory to murder and terrorism.\" With that he began to read her her Miranda rights as she gasped and protested. \"No, no, I had nothing to do with all this. I had no idea that he was a terrorist,\" she cried, but the agent ignored her protestations and calmly handcuffed her.\n\nShe was crying again, and she turned to me with fear in her eyes. \"Thomas, help me. You've got to do something. Make them understand that I wasn't a part of this. Ameer tricked me!\"\n\nI have to admit that I enjoyed the moment thoroughly. \"Sorry, Ginny, I can't help you. You brought all this on yourself. Next time you need to do a better job of picking the man you're going to commit adultery with.\"\n\nAs the agent led my sobbing wife out the door, I turned to one of the other agents. \"Are they really going to book her as an accomplice?\" I asked.\n\n\"Nah,\" he said, \"we know she's only guilty of being stupid and slutty - no offense. But we're going to put her through the wringer over the next few days to find out everything we can about Ameer, his methods, his network and anything else we can think of. I don't think the New Year is going to start off very pleasantly for her.\"\n\nSatisfied, I turned and walked over to Esther. The medic was looking at the shrapnel wound in her arm. \"This is going to be sore for a while,\" he said, \"but I don't see any signs of infection and I don't think it'll give you any problems once it's fully healed.\" Then he gave her a wink that I wasn't supposed to see and added, \"But if I were you I'd file a malpractice suit against whoever stitched you up. Those are the worst sutures I've ever seen!\"\n\nShe turned, touched my hand and gave me a little smile. \"I'll definitely take that under consideration,\" she said. \n\nThen her demeanor changed and she stood up and went to look for the agent-in-charge. When she found him she asked him for an escort to Fort Meade. \"Now that we don't have to worry about Ameer anymore, we need to tackle Al Andalus as quickly as possible, and we're going to need all the help we can get.\"\n\nApparently, the agent-in-charge had called ahead and explained what had happened because when we got to NSA headquarters in Fort Meade we were greeted like dignitaries. An armed guard took us to a high-security elevator that whisked us straight to the top floor. From there we were led to the NSA Director's office, a place I'd never been and never expected to see. In addition to the Director, we were introduced to high-ranking representatives of the FBI and the CIA. \"I am so far above my pay grade I can't even see my level from here,\" I thought to myself.\n\nEsther and I were asked to recount the events leading up to the present moment. Once we finished, the others added further details and new intelligence about the situation. The bottom line was that all three agencies were now convinced that a major terrorist attack, code named Al Andalus, was going to occur in the near future. Their best guess was New Year's Eve, and the most likely target was somewhere in Israel, although there were other possible targets as well. Moreover, everyone agreed that the computer virus we'd been investigating played a critical role. But after that, there was no agreement on anything and the group began to argue.\n\nAt one point, the CIA representative beckoned to Esther and the two of them left the director's office. When they returned, Esther had a strange look on her face. She leaned over and whispered, \"I've just had an interesting phone call. We got the head of Mossad out of bed! I've been ordered to stay with you and assist you in way I can.\"\n\nBefore I could respond, the NSA Director turned to me. \"Mr. Selfridge, I'm told that you are very good at solving puzzles like this. I'm also told that you've already been working on the Al Andalus virus for some time. Finally, we know that the Islamic State was so concerned about what you might uncover that they assigned two of their top agents to stop you. For all those reasons, I'm going to ask you to put together a team to break this code and thwart its purpose. Whatever resources from the NSA you need are yours for the asking.\" \n\nHe paused and nodded at Esther. \"I've also been informed that my counterpart in Tel Aviv would like Ms. Freeman to be part of your team as well. Is that correct, Ms. Freeman?\" When Esther nodded, the Director stood up. \"There's a great deal more that the rest of us have to do, but I think it would be best if you two get back to that virus as quickly as possible.\"\n\nHe must have hit some sort of signal because a man came through the door and escorted us to a work area on a lower floor. He pointed at the computer terminals and encrypted telephone stations and invited us to make ourselves at home. \"I'll be outside the door if you need anyone or anything,\" he told us.\n\nThe room we'd been given was not an ordinary conference room. On the walls was an array of television screens, each labeled with a city around the world and each with a live news feed from that city. Below each screen was a clock displaying the local time. \"Look,\" Esther pointed, \"it's 5:30 in the afternoon of the 30th here,\" she said, \"but in Israel New Year's Eve has already started. If the attack is planned for midnight, we don't have much time.\"\n\nI sat down at a terminal and called up the work I'd already done on the virus. The code scrolled out in front of me, line after line, page after page. I tried different applications on it, hoping to make sense of it, but none of my cracking tools worked. I immersed myself in the work and lost all sense of time. Someone brought sandwiches and I nibbled on one without ever knowing what kind it was. My eyes began to burn and I laid my head down to rest them for a minute.\n\nDecember 31\n\nI awoke to Esther's hand shaking my shoulder. I looked at her in confusion, but all she did was point at the clock for Tel Aviv. It read 1:00 p.m., December 31st. In confusion I looked at the other screens and saw that it was 6:00 a.m. here in Washington. Suddenly from one of the TV monitors came the sound of explosions, but when I looked around frantically I saw that they were coming from the feed from New Zealand, not Israel, and they were fireworks, not the sounds of combat.\n\nComprehension slowly came, and I looked at Esther apprehensively. \"It's midnight in Auckland - New Year's Eve has already arrived there. Time is running out.\"\n\nI looked down at the computer monitor, but the code displayed there didn't look any more comprehensible than it had last night. It seemed obvious to me that the virus was written to infect a proprietary operating system, but I knew that there were thousands if not millions of such systems in use around the world. The only person likely to recognize the system code was someone who worked on it regularly. We were going to have to try something different.\n\nI turned to Esther and said, \"Maybe the way to attack this puzzle is to leave the code alone for a while and try to figure out what the bad guys want to achieve. If we can guess their objective, maybe that will give us a clue on how to attack the code.\n\n\"Let's start with the basics. Bad guys often use viruses to steal account numbers, passwords or other confidential data. Stealing a bunch of state secrets might create big problems, but I can't see how that would help ISIS all that much. Besides, from what I've read, that kind of espionage is only really effective if the enemy doesn't know you have penetrated their security.\"\n\nShe nodded in agreement. \"Our people think the same thing. We believe ISIS wants some grand stroke, something on the scale of 9-11.\"\n\n\"Okay, let's say that they were able to knock down the tallest building in Jerusalem or Tel Aviv. How would that help them re-establish the caliphate?\" I asked.\n\n\"If they bombed the Knesset or caused some similar disaster,\" she said, \"it would certainly send shock waves throughout the nation. But that wouldn't do anything to weaken the Israeli military, and ISIS has to know that we'd retaliate with everything we have. Surely those people wouldn't want that.\"\n\n\"I agree,\" I said. \"Another Mideast war would be disruptive, but so far none of them have turned out very well for the Arabs,\" I said. \"If I were them, my goal would be a knock-out blow, something that would take Israel out of the equation completely. Put yourself in their shoes: what could do that?\" \n\nEsther and I played \"what-ifs\" for a few minutes, then her face paled. \"If I were ISIS, I know what my target would be: Dimona.\"\n\n\"The nuclear site in the Negev desert?\" I asked.\n\n\"Exactly,\" she said. \"If they could manage to destroy it they could turn the State of Israel into another Chernobyl.\"\n\nThat scenario was horrifying to me, but Esther seemed to regain her composure. \"I can't tell you the details,\" she said, \"but that place is as heavily defended as any location in Israel and possibly the world. There's no way they could even get near it, much less destroy it.\"\n\nJust then the live feed from Sydney showed fireworks bursting over the iconic opera house as the Earth continued its inevitable march toward a new year. I started to look away, but then I stared again at the scene. The soaring fireworks gave me the answer. \"The Patriots,\" I yelled. \"The virus is targeted at the Patriot missiles!\"\n\nI rushed to the door of our room and found our liaison outside. \"We need someone from whoever manufactures the Patriot missile system,\" I yelled. \"Get them here fast - fly them in if you have to.\"\n\nWhile we waited, Esther got on the phone and called Tel Aviv. Most of her conversation was in Hebrew so I didn't understand what she was saying, but the conversation got pretty heated at times.\n\nAfterwards, I asked her what was going on. \"The damned Israeli Defense Force is convinced that their system hasn't been breached and there's nothing wrong with Yaholom.\"\n\n\"What's Yaholom?\" I asked. \n\n\"That's our name for the Patriot system,\" she said. \"They think we're chasing phantoms.\"\n\nI went online and tried to find information about the Patriot system. As I was scanning various links, the door opened and a young man wearing a jacket with a Raytheon logo came into the room. \"We make the Patriot system,\" he said breezily. \"Whatcha got?\" I quickly explained our hypothesis and showed him to the computer terminal and the virus we had found. He looked at it for a few minutes and the bored expression on his face disappeared. Quickly he pulled a laptop out of his carryall and began checking lines of code. \n\nAfter a few minutes he looked up at us and said, \"Oh, shit.\"\n\n\"What is it?\" Esther demanded.\n\n\"This is bad, real bad,\" he said. He pointed at his laptop. \"This is the operating system for the Patriot's AN/MPQ-65 radar tracking system.\" He pointed at the computer terminal I'd been using. \"That virus you have has been written to alter the intercept data the radar uploads to the missile. It's not a big change, but at the speed and distance needed for an intercept, it will cause the Patriot to completely miss its intended target.\"\n\nI turned to Esther. \"Get back to the IDF and tell them we have confirmation that the virus targets the Patriots. Then get them to check the operating systems again to see if they've been infected.\"\n\nI turned back to the Raytheon tech. \"Don't go anywhere - we're going to need you.\" Then I got on the phone and called the Director's office. They put me straight through. \"Sir, we now have confirmation that the virus attacks the Patriot missile system. We don't know for sure, but we think the target is Israel, possibly the Dimona nuclear site. Yes sir, our next priority is to try to figure out how to stop it.\"\n\nEsther had also been on the phone, and when I hung up she was looking at me with an angry expression. \"That'll teach those idiots to pay attention,\" she said. \"They've already found signs of the Al Andalus virus in one of the Patriot installations and they're checking the others now.\"\n\nThe Raytheon tech piped up, \"Oh, they'll find it for sure. All the systems are designed to talk to one another. That way they create an 'umbrella' of defense. If one of them is infected, you can bet they all are.\"\n\nEsther and I stared at each other. \"So how do we fix it?\" I asked him.\n\n\"Well, I've never heard of one of our systems having a virus, but theoretically it ought to be pretty simple to fix. All you'd have to do is swap out the AN/MPQ on each of the missile batteries with a new one.\"\n\n\"Can't you just install a new operating system?\" I asked.\n\n\"These systems aren't like a Mac or a PC,\" he said. \"The hardware and software are integrated, you've got subsystems running all through the unit, and they all work together. The only way to be sure you've got a clean system is a swap-out.\"\n\n\"Okay, how long does that take?\" I asked.\n\n\"Oh, anywhere from eight to twelve hours.\"\n\n\"That's going to cut it very close,\" Esther said.\n\n\"Of course, that doesn't count delivery time,\" the tech went on. \n\n\"Delivery from where?\" I asked uneasily.\n\n\"From our plant in Andover, Massachusetts,\" he said.\n\nI slumped back into my chair and looked despairingly at Esther. \"That isn't going to work,\" I said. I turned back to the guy from Raytheon. \"You and I are going to have to try to figure out something else,\" I said.\n\nWe worked on the problem for hours. I tried to educate him on how viruses worked and he tried to teach me about the Patriot system. Nothing came of it.\n\nMore software engineers from Raytheon showed up, and I began shuttling among them, trying to come up with a way to extract or nullify the virus. The problem was that their system was proprietary, specific to Patriot unit. None of their programmers had ever encountered a virus aimed at their system and they had no way to attack the problem. The easy, obvious answer for them was to swap out the units. Not only would that take way too long, but the whole system would have to be shut down during the transfer, leaving what they were protecting undefended. In effect, we'd be doing the work of the virus for ISIS.\n\nThe first engineer began to get frustrated. \"Look,\" he said, \"if you're worried about a missile attack, your best bet is to destroy the missiles on the ground before they ever get launched. Wipe out the immediate threat and you can swap out the Patriot tracking system at your leisure.\"\n\nEsther stood up and got in his face. \"In Gulf War 1 back in 1991, the Iraqis fired Scud missiles at Israel to try to draw us into the war and split up the coalition. The coalition air force diverted dozens of planes to Scud-hunting duty, trying to find and destroy the missiles before they could be fired. For the most part they failed because the missiles were on camouflaged trucks well hidden in the desert. That was over 20 years ago, when the missiles were big and bulky. The latest missiles are smaller, harder to find and easier to fire. So quit stalling and get back to work!\"\n\n\"Yes, ma'am,\" he gulped and turned back to his monitor while I tried to hide my smile. The situation was tense, but I couldn't help but be impressed at what a force of nature Esther could be.\n\nJust then she grabbed my arm and pointed at the screen with the live feed from Tel Aviv. \"It's midnight!\" she gasped. Everyone in the room stopped and watched nervously to see what might happen. Esther leaned over and whispered, \"The IDF is on full alert, and I've been told that your military is also in a high state of readiness.\"\n\nBut the scenes from Tel Aviv revealed nothing more than the normal New Year's Eve celebrations. Esther told me with relief that Dimona reported no activity at all. After that, the Raytheon guys wanted to go home but we wouldn't let them leave. \"There's too much at stake,\" Esther said, and the little group reluctantly went back to their work.\n\nAfter awhile, one of them raised his head and asked, \"Does anybody know what's so special about 1.492?\"\n\nI looked at him with a puzzled expression. \"Nothing that I can think of - why do you ask?\"\n\n\"Because that's the deviation the virus adds in to the targeting data to divert the missiles,\" he said. \"It just seems like such a precise number, I wondered if it had any significance.\"\n\nOne of the other techs jumped in. \"1-4-9-2? I know that stands for.\" Then to our surprise he began to sing-song the childhood rhyme: \"In fourteen hundred and ninety-two, Columbus sailed the ocean blue . . .\"\n\nEverybody in the room laughed except for Esther, who got a strange look on her face. Quickly she went to one of the computers and did some quick checking. \"That's it!\" she yelled. We all looked at her in confusion, so she quickly explained. \"Everybody knows that King Ferdinand of Spain and Queen Isabella commissioned Christopher Columbus's expedition in 1492. But most of us in the west have forgotten the other major event in 1492. That was also the year that the last emir surrendered Granada to Queen Isabella, bringing an end to Al Andalus.\"",
        "Then her face paled and she went back to the computer. \"Omigod, look at this,\" she gasped. \"The date the emir surrendered was January second. Thomas, the attack was never planned for New Year's Eve, it's coming the day after. ISIS wants revenge for that disgrace. I'll bet they're planning to launch their campaign to retake Al Andalus on the same date!\"\n\nThe Raytheon guys were looking at her as though she was speaking Hebrew, but it sounded entirely plausible to me. Esther immediately got on the phone to call Tel Aviv, and I got our liaison to take me back up to the Director's office. After I had explained what we'd discovered, he nodded his head thoughtfully. \"From what I know of these people, I think you're right. They never forget old grudges and they would love nothing better than to pull off a coup on the anniversary of that defeat.\"\n\nHe started to pick up his phone but stopped to look at me. \"Now you and your team have to figure out a way to stop them.\"\n\nWhen I got back to our war room, the Raytheon engineers were huddled around one of the terminals. They had managed to establish a secure link between Fort Meade and Andover, and they were now on line with a test version of the Patriot fire-control guidance system. The next few hours were spent trying to find a way to root out the virus. But the system designers had never contemplated having to do surgery on the Patriot's operating system, and they had no way to isolate the affected areas. \"It's like an epidemic,\" one of the techs moaned. \"It's spread throughout the system and it's out of control.\"\n\nJanuary 1\n\nWhile we worked feverishly, New Year's Day in Israel proceeded without incident. Although Esther and I were gratified that her prediction had been right, it just meant we were that much closer to the time we thought the real attack would begin.\n\nFinally, the head of Raytheon's technical team came to me. \"We've been over and over this thing. There are only two things we can do. The first is to shut down all the units that have been infected and wipe their entire software systems completely, including all peripherals. Then we'll load software we know is clean, boot them up and test them. But that's a time-consuming process, and even then we can't be sure that the new load won't get contaminated somewhere along the line.\"\n\nI shook my head and turned to Esther in frustration. \"We can try that, but I don't think we can get the job finished in time before midnight rolls around again in Israel. Besides, we don't want to take the entire Dimona defense system offline that long. What if the attack comes early?\"\n\nShe looked defeated, and I felt like I had failed. I turned back to the Raytheon people. \"Isn't there anything else we can try, some sort of error-checking routine that would recognize the problem and stop the virus?\"\n\nThe poor guy shook his head apologetically. \"When the system was developed, the possibility of a virus was never considered. Now this damn disease has infected the entire system and we just don't have any antibiotic to kill it or vaccine to block it.\"\n\nI started to speak but the words stuck in my throat as an idea from the past came to mind. \"Smallpox!\" I cried. When he looked at me in confusion, I went on. \"The way you fight smallpox is with cowpox, a weaker form of the same disease. We may not be able to kill the virus,\" I said with growing excitement, \"but what if we inoculate the system with another virus?\"\n\nThe group looked at me skeptically. \"Listen,\" I said, \"we have a virus that has infects the Patriot system and causes it to produce faulty target data, data that's off by exactly +1.492 degrees. What if we write a second virus exactly like Al Andalus except that our version would direct the Patriot to adjust its targeting by -1.492 degrees? Wouldn't the two of them cancel each other out?\"\n\nThe software engineers began to argue among themselves, heatedly debating the idea. After twenty minutes the head of the team turned back to me. \"Some of our guys think it might work, but the rest of us are doubtful. How do we know the two viruses won't cause a bigger problem? How do we know they can co-exist at the same time? We don't even know that we can successfully \"infect\" the Patriot system a second time. We won't have time to test it properly.\"\n\n\"Listen, guys,\" I said, \"we already know the original virus is both highly contagious and likely to be very effective. If we create a virus that's identical to the first one except with reciprocal values inserted, it's got to work. Besides, what other option do we have?\"\n\nThere was a lot more discussion, but finally the group grudgingly conceded that creating an Al Andalus \"antivirus\" was the best chance we had. They set about creating the antivirus, carefully checking and rechecking to make sure that everything except the target values was absolutely identical.\n\nWhile they were working, Esther grabbed my arm and looked at me with worried eyes. \"Are you sure this will work, Thomas? If you're wrong . . .\"\n\nI looked at her and suddenly I felt the same emotions I'd had back in high school when those bullies were attacking Ginny. This was what I believed in and I wasn't going to back down. \"This is the right thing to do,\" I said fiercely. \"I'm sure of it.\"\n\nShe looked in my eyes for a moment and then said, \"I believe you.\"\n\nThe next few hours were a blur. Some members of the team checked and double-checked the new antivirus while others made arrangements to transmit the code to technicians on the ground in Israel. Those people, in turn, got set up to \"re-infect\" the Patriot systems and then test them to ensure the antivirus had \"taken.\"\n\nMeanwhile, as the clock moved closer to midnight in Tel Aviv, Esther and I spent the time in seemingly endless meetings with dozens of people, all of whom were highly skeptical of our plan. Finally we wound up back in the Director's office, where, after a long and sometimes heated debate, he looked at his counterparts in other branches of the government and said, \"Unless someone else is prepared to implement another solution in the next hour, let's stop talking and start taking action.\"\n\nIt was obvious that the others weren't satisfied, but they really had no other options. After the meeting broke up, the Director came over to Esther and me and said in a quiet voice, \"I hope you know what you're doing, for all our sakes.\"\n\nThere wasn't anything I could say, so I simply nodded and the Director seemed to accept that. He motioned to us. \"Alright, then, you two have ridden this horse this far, you deserve to see it through to the end. Come with me.\" \n\nWith that he led us to the roof of the building, where a helicopter was waiting with its engines idling. We climbed on board and the bird immediately took off. I'd never ridden in a helicopter before and found it pretty unnerving, but Esther wasn't fazed a bit. That reminded me again how little I knew about her.\n\nAfter a few minutes I looked out the window and spotted the unmistakable shape of our destination: the Pentagon. This was certainly a week full of firsts for me: I'd never been to the Pentagon before either. Soon enough we landed on one of the helipads and were immediately escorted deep into the inner rings of the command center of U.S. military might. An armed guard was waiting beside a non-descript door, and when we approached he opened it and motioned us inside.\n\nThe room we entered was a long rectangle. Most of the center was taken up by a large oval table. The seats were arranged to face a huge flat-screen monitor that filled the wall at the far end of the room. Seated at the table were more generals, admirals and other high-ranking officials than I had ever seen in my life.\n\nEsther and I were shown to one of the chairs that lined the side walls. Across the room I spotted the director who'd ordered me to Oak Ridge. He quickly looked away when he saw me staring at him. After a few minutes the lights were dimmed and everyone turned to face the giant flat-screen. At first the only light came from two time displays on the bottom of the screen. One showed Washington, D.C., the other Tel Aviv. Esther whispered anxiously, \"It's almost midnight in Israel!\"\n\nSuddenly the big screen filled with a gods-eye view of the earth, but I couldn't figure out what I was seeing. Then the screen blinked and suddenly the same view reappeared, this time with a \"normal\" north-south orientation. I could see a line of lights that seemed to outline the shores of an ocean, and there were clusters of lights from other cities as well. Then lines appeared on the screen marking national borders, and circles and names popped up around the major cities. I realized that I was looking down from a satellite at a night-time view of the whole Middle East.\n\nSuddenly the screen zoomed in, then zoomed in further. Now all I could see was what appeared to be the lights of a small town in the desert with a highway running by it. The caption read Dimona. \"Too close,\" a voice spoke up, and then it looked as though we were climbing through the atmosphere. Now I could see the coast of the Mediterranean in the northwest corner of the screen and a dark area toward the east. \"That's the Dead Sea,\" Esther whispered to me, pointing at the picture.\n\n\"A little further, please,\" the voice said, and suddenly we could see the whole of Israel and parts of its neighbors. \"Alright, people, we're approaching zero hour,\" the disembodied voice said, and suddenly Esther was gripping my hand very tightly. The screen might look like some sort of media presentation, but her anxiety reminded me that there were real people down there.\n\n\"Keep your eyes on the north and northeast,\" she whispered again. \"That's where we think the attack will come from.\"\n\n\"Syria and Iraq?\" I asked.\n\nShe only nodded.\n\nThe time display ticked off the seconds, and I noticed there wasn't a sound in the room. Finally, when the clock displayed 24:00, I heard a collective intake of breath. But nothing happened that we could see. The seconds ticked by and I could hear whispered comments. \"I told you so . . .\" I heard someone say, and then Esther's nails bit into my hand. \"There!\" she said, pointing at a tiny orange-red arrow rising from the desert north of Israel. Then another and another blossomed. At first each one appeared almost to stand still, but then they began to arc over and fly south. More arrows lifted off from the northeast.\n\n\"Holy shit,\" someone exclaimed, \"those bastards really did it. There must be over two dozen of them.\"\n\n\"Probably Scud-D's,\" another voice speculated.\n\nNow the flaming arrows were past Jerusalem and coursing over the Dead Sea. Someone had put a marker with a timer on Dimona, and it was evident even to my untrained eye that it was the target. This was like watching a disaster in slow motion: I didn't want to watch yet I was mesmerized, unable to turn away.\n\nSuddenly, new flashes appeared all around Dimona, and then there were new arrows of light rising into the air. Time seemed to a crawl and the oncoming arrows never wavered until I was sure that our antivirus had failed and the Patriots had missed. Then a large yellow blossom appeared in the night sky almost directly over Dimona, and almost immediately the darkness was filled with fiery flowers that glowed and then seemed to flutter away.\n\nThen Esther flung her arms around me and was kissing me wildly. \"You did it! You did it!\" she cried. As I hugged her back I could hear cheering from the people in the room. Then a voice said, \"Situation report from Dimona: one missile got through.\" Esther jerked around and we both stared at the screen. \"Missile was apparently knocked off course and hit south of town; only minor damage is being reported.\" There were more cheers.\n\nSuddenly I gasped for air and I realized I'd been holding my breath throughout the entire attack. But before I could say anything, the display showed a new series of launches, only these originated from within the State of Israel.\n\n\"What's happening?\" I asked in confusion, but when I looked over, Esther was staring intently. \"Patriots are not the only missiles we have,\" she said, never looking away from the screen. \"Those are Delilahs, ground-launched cruise missiles carrying cluster munitions. Our radar will have tracked the path of every Scud and calculated the reciprocal course. Now we return fire.\" She turned to me and her face had a wolfish look. \"You didn't think we would allow them to attack without retribution, did you?\"\n\nEven as I watched, the telltale lights were heading north and east. But this time, I realized, there were no Patriots to defend against the oncoming death. I did look away then.\n\nI sat quietly in my chair and watched the congratulatory hugs and handshakes around the room. Soon afterwards, Esther was called away to take a phone call, and then I really felt like the odd man out. After a while, an MP came looking for me. \"Sir, the NSA Director is going to be here for awhile. He's instructed me to offer you the services of the helicopter to take you and Ms. Freeman wherever you need to go.\"\n\nEsther returned just then, and the two of us followed our escort through the corridors and out to the helipad. I thought she'd be dancing with happiness, but she seemed somewhat subdued. When we climbed up into the helicopter, she leaned over to the pilot and asked, \"Would it be possible for you to take me to Dulles International Airport?\"\n\n\"What's going on?\" I asked in surprise.\n\n\"You know we say 'an eye for an eye and a tooth for a tooth,'\" she said with a grim look. \"The missile counterstrike you saw back there was the 'eye for an eye.' Now I've been called back to be part of 'a tooth for a tooth.' I'm catching the first plane to Tel Aviv tonight.\"\n\n\"Oh,\" I said glumly. \"I thought maybe. . .\"\n\nShe smiled and squeezed my hand. \"I would have liked to celebrate as well, but we don't always get to decide such things.\"\n\nThe helicopter covered the twenty-five miles to Dulles in very little time at all, and then Esther was leaving. She turned to me and took my hands in hers. \"You have surprised me in many ways, Thomas Selfridge. I will never forget you.\" Then she kissed me quickly and was gone before I could think of anything to say.\n\nI was in a strange mood on my way back to College Park. Now that everything was over, the events of the last week seemed unreal, like scenes from a movie that flickered through my memory. The places I'd been, the people I'd met, the things that I'd done - none of it felt quite real. Part of the problem, I knew, was the way my emotions had gone back and forth through the spectrum. It was like I'd been dreaming under anesthesia and was having a hard time shaking off the effects.\n\nBut when I got home, I had to enter through the side door because there was a sheet of plywood nailed over my shattered front door. And the living room was just as disheveled as when I'd been there last. \"I guess it wasn't a dream,\" I told myself wryly.\n\nI managed to find something to eat in the refrigerator and then returned to the living room, where I righted an overturned chair and flopped down. Maybe it was just the adrenaline wearing off, but I began to feel depressed. I glanced at the clock and realized that it was almost midnight. Damn, the Christmas break was over and I had to be at work tomorrow.\n\nI wandered back to the bedroom and turned on the light. Everywhere around me were signs of Ginny: photographs, her clothes, furniture that she'd picked out. I looked at the bed and couldn't help but wonder if she and Ameer had ever . . .\n\nIt was too much. I grabbed a blanket and went back to the living room to try to sleep on the couch.\n\nJanuary 2\n\nThe couch wasn't very comfortable to sleep on and I woke up early. But I really didn't mind because I was eager to see what the Washington Post had to say about the ISIS attack. I didn't expect see name would make the coverage, but I couldn't help but wonder if there would be any mention of the team that had developed the \"antivirus.\"\n\nBut there was nothing on the front page, and when I took the paper inside and went through it carefully I found nothing anywhere. \"How do you keep something like that secret?\" I wondered.\n\nI went on into work at the usual time and everything seemed normal. My co-workers showed no sign of awareness of anything unusual. \"How was your holiday?\" they asked, and I realized they had no way of knowing what had transpired. It was a little deflating.\n\nThen about an hour later I got a summons to see Ben's boss. I was smiling when I entered, expecting congratulations and maybe more, but instead I got a scowl. He held up a document with my signature on it. \"When you joined the NSA, you signed an oath to protect any information you gathered while you work here. Under Section 18 of the U.S. Legal Code, disclosure of any information about codes or ciphers of the U.S. or any foreign government, or any information relating to the acquisition or use of any device, apparatus or appliance involving such code is subject to a fine and/or imprisonment for up to ten years. That particularly applies to the session you witnessed yesterday and all events leading up it. Are we clear on that, Selfridge?\"\n\nWhen I nodded dumbly, he said, \"Good, then you need to get back to work.\"\n\n\"What a come-down!\" I thought as I headed back to my floor, \"I didn't want a medal, but a little gratitude would have been nice.\"\n\nBy now it was clear that somebody had clamped a lid on the whole affair. Not only wouldn't there be any ticker-tape parades in my future, but I was beginning to feel as though I had been in the wrong place at the wrong time. The depression I'd been feeling last night returned, and it was compounded by the fact that I had another unpleasant duty to perform. I went on the Internet and began searching for a divorce attorney.\n\nThings only got worse over the next few weeks. I saw a reference to the FBI, and that reminded me about Agent Henry. I did a Google search on him and found a small news item buried in the Knoxville News Sentinel. It reported that a federal employee named John Henry had died in a traffic accident in Frozen Head State Park. He was 37 years old; there were no other details. That made me sad. Henry was a decent guy who had died trying to protect me. I thought he deserved a lot better than a truncated obituary. I tried to get a little more information from FBI headquarters, but I hit a blank wall.\n\nA few days later, a guy who sits next to me popped his head around the corner. \"Hey, did you hear the news? Our boss's boss is getting a nice promotion. Apparently he pulled off some sort of coup back over the holidays and now he's getting his reward.\"\n\nI didn't say anything, but inwardly I was seething. As far as I knew, the only thing he'd done to stop ISIS was to use me as bait. And now he was being rewarded? \n\nI thought about trying to go to the Director of the NSA about what was going on. But before I could explore that avenue, some kind of brouhaha about Israel came up on Capitol Hill. The IDF had made some sort of incursion into Syria, and many in Congress were up in arms about Israeli aggression. When it came out that the NSA had made certain intercepted communications available to the IDF, there were howls of protest, and the next thing I knew the Director had resigned and the NSA had a new leader. There was even talk about delaying Israel's purchase of additional Patriot missile batteries, but ultimately the deal went through.\n\nAnd just to add insult to injury, my efforts to divorce Ginny were going nowhere. I'd planned to file using \"irreconcilable differences,\" but my attorney informed me that Maryland wasn't a \"no fault\" state. \"Adultery, desertion, conviction of certain crimes, insanity, cruelty, and vicious conduct - those are the grounds for divorce in Maryland,\" he said.",
        "How frustrating! I had legal grounds to divorce Ginny, but I couldn't prove adultery without bringing up classified information, and that would get me into a world of hurt. \"Isn't there any way to get divorced without having to go through all that?\" I asked. \n\n\"Actually, you can get a no-fault divorce in Maryland. But to do that you two have to have been living separately for at least a year,\" he told me blithely. \"In the meantime you can file for a 'limited divorce,' which gets you into the queue for an absolute divorce after a year's separation.\"\n\nSo that's what I did, but it galled me no end to have to wait so long to be free of her. I also wasn't happy about having to pay Ginny temporary spousal support. After what she'd done it didn't seem fair, but my hands were tied.\n\nAs winter turned into spring, my mood did not improve; if anything, it worsened. I found myself increasingly isolated, both at work and at home. My job no longer provided any satisfaction. The one really good thing I'd accomplished had become a secret that nobody could talk about. It quickly became apparent that management was down on me, and my co-workers began avoiding me.\n\nOutside the office it was a similar situation, but for different reasons. All the friends we'd cultivated were couples who were used to socializing in pairs. I was the odd man out. And since no one really knew the story about why Ginny and I had broken up, I think a lot of them thought it was my fault. \n\nThe end result was that I spent a lot of time brooding about my life. It seemed to me that every time I had tried to do the right thing I had been punished. I had tried to protect Ginny and take care of her. I didn't expect her to worship me for that, but a little marital fidelity would have been nice. Likewise I hadn't wanted to be thrown into the middle of a terrorist plot, but when it happened I thought I had responded pretty well. I didn't want the Medal of Honor, but some acknowledgement would have been appreciated. \n\nIncreasingly I began to feel that I had been used. Ginny had certainly done so. All she'd wanted from me was to support her while she got her laser treatments. Well, maybe that was a bit exaggerated - I guess she really had loved me at one time. But that sure did evaporate fast when her birthmark was gone and other men started to notice her. The same thing was true about my work. After humiliating me with the news that Ginny was cheating, my boss had proceeded to use me as bait for terrorists. And now he was the one getting rewarded.\n\nFor that matter, hadn't Esther used me as well? All she really wanted was for me to try to solve the Al Andalus puzzle. When she got what she needed, she jumped on a plane and flew home before I could even say goodbye. I'd never heard a word from her since.\n\nI knew that wasn't entirely fair. After all, Esther had saved my life, and she'd put her own life on the line to do so. Still, she wouldn't have done that if she hadn't thought I could help her. \n\nAll in all, I was tired of being used, tired of being stuck in a marriage with a cheating wife, and tired of holding a job where I wasn't appreciated. I felt a growing urge to get away, to leave it all behind and start over somewhere far away, somewhere no one had any claims on me. And once I got there, I vowed to put myself first for a change. I'd spent way too much of my life trying to do things for other people; now it was time to do some things for myself.\n\nThe old me would have been appalled. \"Don't do anything hasty,\" I would have told myself. \"You have obligations to others,\" I'd have rationalized. Well, screw that! The few times in my life I'd made a big, impulsive decision, things had worked out alright, even if it looked like nobody else would ever know it. Now I was going to make another big decision that felt right for me. If anyone else didn't like it, screw them.\n\nDecember 31, the next year\n\nCheers went up from the other people at the bar as we watched the fireworks explode over the Auckland Harbour Bridge. I smiled to myself: the scene looked exactly like it had on that display in the war room at the NSA a year ago.\n\nI had a lot to celebrate. Basically I had left everything except my computer, a few personal items and a bag of clothing, and I'd bought a one-way ticket to Auckland, New Zealand. I'd chosen Auckland for three reasons: it was as far away as I could get and still speak English, I didn't know a soul there and didn't have any obligations to any one, and, yes, I admit it, I'd been blown away by the scenery in The Lord of the Rings movies.\n\nOnce again, it turned out I had made a very good decision. I discovered that the people in New Zealand were extremely friendly and welcoming, so I didn't feel as lonely as I'd expected. I also managed to find a job very quickly. I had come with enough money to tide me over until I could find work, but I fell into a good situation almost immediately. The ANZ Banking Group had had a cyber-security scare just before I arrived, and my experience with computer viruses and malware made me very desirable to them. After I started work I rented a little two-bedroom flat and set about becoming a Kiwi. \n\nOnce I had made the big decision to leave, it had taken a lot of work to get everything settled in Maryland. It's not easy to untangle yourself from old way of life, but I did it. Once I had quit my job, made arrangements to transfer my Thrift Savings Plan, paid my bills, and taken care of all the things I could do in the short term, I gave my lawyer power of attorney to handle the biggest problem of all: Ginny. I told him she could have the house in lieu of alimony, and left him to handle everything else as he thought best.\n\nThe only problem was that Ginny didn't want to accept the inevitable. She refused to cooperate with the divorce process and dragged her feet every way she could think of to slow things down. I'd told my attorney that under no circumstances was he to tell Ginny where I was or how to reach me. All that meant was that she began to badger him, and he in turn was charging me for all the time he spent dealing with her. After awhile it became obvious that I was going to have talk to her, like it or not.\n\nFinally, I arranged for a Skype session with her. Although she didn't know it, I had to get up way before dawn to have the call. That didn't improve my mood one bit.\n\nNew Zealand is literally the last stop on the Internet, the dead end of the big fiber-optic undersea cables that link the globe together. That means that connections are often bad and interruptions are common. But somehow we got lucky, and when we finally had our \"face-to-face\" our link was rock solid.\n\nWhen the connection went through and her face appeared on my computer screen, it sent a shock through me. She still looked beautiful and her image reminded me of the woman I'd fallen in love with so long. \"This isn't going to be easy,\" I thought.\n\nThe call didn't start off well. She demanded to know where I was, and when I wouldn't tell her she alternated between anger and weeping. \"Why did you run away?\" she sniffled. \"Why won't you tell me where you are?\"\n\nI sighed. \"Honestly, Ginny, you broke my heart and I couldn't bear to be around all the places and things that reminded me of you. Finally I decided that the only thing I could do was to get as far away from you as possible.\"\n\nTo my surprise, she actually smiled. \"That means you still have feelings for me,\" she said brightly. \"Why don't you stop all this foolishness and come back to me?\"\n\nI tried not to get sarcastic. \"Ginny, you cheated on me. You broke your marriage vows and had an affair with another man. How can I come back to you after that?\"\n\nHer face fell, but then she got a determined look on her face. \"I know, Thomas, and I feel so terrible about that. But I was vulnerable.\"\n\n\"Why?\" I demanded. \"Why were you vulnerable?\"\n\nShe shook her head as though I was dumb not to understand. \"Well of course because I had just had my last laser treatment and I was still getting used to my new look. When he came along and told me I was beautiful, of course I was going to respond.\"\n\nThat really galled me. \"But I told you you were beautiful,\" I said. \"I've always thought so since the first time I saw you.\"\n\n\"Yes, but you told me that before I got my birthmark removed. He had never seen me before, so his compliments meant a lot more to me,\" she said brightly.\n\nI couldn't even find the words to respond to that, but the expression on my face must have made my reaction clear because Ginny's tone suddenly changed and her face clouded up. \"But I don't want to talk about that. I've been so lonely without you,\" she sniffled. \"Literally there hasn't been a day go by that I haven't cried. I know what I did was terrible, and you don't know how many times I've kicked myself for being so stupid and so gullible.\"\n\nShe paused to dab her eyes and then went on. \"But it wasn't really my fault. I had no way of knowing that Ameer was some sort of spy trained at seduction. To me he was just a handsome guy who filled my head with compliments and sweet talk. I got swept away before I even hardly knew it. And the thing was, he wasn't even interested in me! He was just using me to find out about you.\" She blew her nose and added, \"I guess that's why he always wanted to go to our house.\"\n\nI had calmed down, but when I heard that I got angry again. But before I could say anything she hurried on. \"Anyway, I've learned so much about myself from all this, Thomas, and I know I'd be so much better of a wife if you'd only come back. Can't you find it in your heart to forgive me? It would make me so happy. Everything would be back the way it was. What do you think, honey?\"\n\nI'd been watching her as she spoke. Her appearance was exactly as I remembered it and her voice was the same, but now something was different. Then I realized what it was: I know longer loved her.\n\n\"Ginny, I've been listening carefully to everything you've said,\" I told her. \"In all the time you've been talking, there are two things I haven't heard. You've made very clear what you want and how you feel, but you haven't once mentioned me and my feelings,\" I said.\n\n\"Well of course I'm concerned about how you feel,\" she interrupted. \"I know you were very hurt and upset, and you had every right to be. But if we get back together I'll spend all my time making it up to you and . . .\"\n\nI held up my hand and she finally realized that I wasn't through. When she stopped, I went on. \"There was something else I didn't hear either. I heard you say a lot of things, but you never once said, 'I love you.'\"\n\nShe gasped and then blurted out, \"But of course I love you. That's a given. I've always loved you and . . .\"\n\nNow I was the one who interrupted. \"No, Ginny, love is not a given. It's not something you say, it's something you show in your actions. It's not just what you do but also what you don't do. And you don't show your love by cheating with someone else just because he fills your ears with pretty words. I'm sorry, Ginny, but this call has made me even more certain that we aren't ever getting back together. Goodbye, Ginny.\"\n\nI broke the connection, leaving the image of her tear-stained face on the screen. It still hurt to lose someone who had meant so much to me at one time, but after listening to her I knew I had done the right thing.\n\nDecember 31, two years later\n\nI'd been at a party with friends earlier in the evening, but it somehow seemed appropriate to spend the New Year's Eve countdown at the bar I'd found that first year in New Zealand, the one overlooking Auckland Harbour. The other patrons had welcomed me back then, and I felt welcome again as I lifted a pint and stared out at the fireworks display.\n\nThe last two years had been good to me. Ginny had finally bowed to the inevitable and agreed to the divorce. I'd given her the house in lieu of further spousal support, and I was now legally a free man. My career was also doing well. After a year with the bank I'd built enough of a reputation as a cyber-security expert to begin consulting on my own. Once again, luck gave me a boost when the National Cyber Security Centre in Wellington came to me asking for help. That had given me a kind of semi-official stamp of approval, and now my business was booming. It also gave my permanent residency application the push it needed, and I was now officially a Kiwi. And thanks to the money my consulting business was earning, I was able to buy a nice home with a view of the Auckland Harbour. All in all, I was glad I'd made the big move.\n\nThey'd darkened the bar for the fireworks, so at first I had a hard time recognizing the woman behind me. But when she said, \"Happy New Year, Thomas Selfridge,\" her accent was one I'd thought about often over the last three years. I turned and embraced her without hesitation. \"Happy New Year to you too, Esther.\"\n\nAfter a minute we separated and I was able to look at her. The sleeveless black cotton sweater and the skin-tight jeans she was wearing made it clear that she was still as fit as the last time I'd seen her. I could even make out the thin scar on her right shoulder. But this time her dark hair was tucked under a baseball cap with a long brim pulled low. When she raised her head to look at a big explosion over the harbour, I saw the black patch that covered her right eye.\n\nThe bar crowd was cheering and growing rowdier, so I smiled at Esther and leaned near her ear. \"Would you like to go some place quieter so we can catch up?\"\n\nShe smiled. \"I'd like that very much.\"\n\nWe got in my car and I drove her away from the downtown west to Herne Bay. When I pulled into my driveway, she gave a low whistle. \"You must really be doing well, Thomas. I'm happy for you.\"\n\nI poured us another drink and led her out onto the deck. From there we had a view of a different part of the harbour, but we could see the fireworks in the distance. It was still warm despite the sea breeze. Even after three years, it seemed strange for the New Year to arrive in summer.\n\nAfter a few minutes she turned to me and pulled off her cap. \"Well, aren't you going to ask me about my eye?\"\n\nWithout the cap I could see a diagonal scar that started below the patch and ran all the way up through her eyebrow. It had carved a white line deep in her olive-colored skin. \"Tell me what happened,\" I said.\n\nShe put her cap back on and took a seat on one of my deck chairs. \"Actually it was my own damned fault. After I got back to Israel, I managed to find one of the ISIS leaders who had planned the Al Andalus attack. Unfortunately, I didn't find the knife he had hidden before it was too late.\" Then she gave me that wolfish grin of hers. \"But I can promise you that he'll never hatch another plot.\"\n\nI remembered how she'd withstood my fumbling attempt to stitch up her arm, and I could easily believe that she could take such a devastating wound like the one to her eye and still be able to strike a fatal blow at her enemy.\n\n\"Couldn't the doctors . . .?\" I asked, gesturing at the patch.\n\nShe shook her head. \"The wound was too severe, and besides, it was eighteen hours before I was able to get back to my team and be airlifted to a hospital. By then . . .\" She shrugged.\n\nI thought maybe I should change the subject, so I asked, \"Are you still in Mossad?\"\n\nBy the expression on her face I knew immediately that I'd asked the wrong question. \"They kicked me out,\" she said in clipped, bitter tones. \"With this face there was no way I could ever go undercover again. And since I'm right-handed, my marksmanship has gone all to hell. They offered to try to find me a desk job elsewhere in the government, but I wanted no part of that.\"\n\nShe fell silent, but I could still sense her unhappiness.\n\nAfter a few moments she looked up at me again. \"The last three years have been hard in several ways. I had . . . well, I guess you'd call him a lover back in Tel Aviv, and we had talked about something more permanent once I left the service. But when I went home to recuperate from my wound, he couldn't take it. He never said anything, but he would never look at my face. I guess he wasn't the man I thought he was.\"\n\nI could tell that she was trying to pass off what had happened as insignificant, but her expression told me she was still hurting. I pulled up a chair beside her and put my arm around her shoulder. We sat there in silence for a long time, looking out at the city and the harbour below.\n\nFinally I asked the question that had been on my mind the whole time. \"So how did you find me here in New Zealand?\"\n\n\"I pulled a few strings with some old contacts and tracked you down.\" She gave me a little smile. \"You certainly did a good job of getting away.\"\n\nI smiled back. \"At the time I just wanted to put as much distance between me and my old life as I could. But I've built a new life for myself here, and now this is home.\" Then I looked at her carefully. \"You haven't told me why you tracked me down.\"\n\nHer face grew pensive. \"You were such a surprise to me, Thomas. When I first met you I thought you were just a nerd who was clever with computer code. But I kept discovering depths in you that I never expected. I saw you face danger and handle situations that would have made most people falter. I was sorry when I had to leave that I didn't get the chance to learn more about you.\"\n\nShe paused and stared out at the darkness. \"The other reason is that the time we spent together, as crazy and dangerous as it was, was better than any time since.\" She turned around to face me. \"I missed it and I missed being with you.\"\n\nThen her face took on an expression that I didn't recognize at first. \"Besides,\" she said huskily, \"we still have unfinished business. We never got a chance to celebrate.\" Suddenly she pulled my head toward hers and kissed me with so much passion that it was hard for either of us to breathe. I stood up and pulled her body to me, and we clutched each other like we were drowning. After a minute I led her inside and back to my bedroom, both of us panting and aflame with desire. It took us three tries to douse those flames.\n\nWhen I woke up the next morning, dawn was pushing through the windows, casting a reddish light in my bedroom. I felt Esther's body snuggled up to me and I smiled as I remembered our celebration. \n\nCarefully I sat up, trying not to wake her. As I did, I noticed that her eye patch had slipped off her head during the night, and I picked it up curiously. Just then she woke up, and when she saw what I was holding, she cried out, \"Give it back!\" Then she sat up and snatching the black band out of my hand. \"Don't look at me!\" she said desperately as she turned away and tried to get the band around her head and the patch back over her ruined, empty eye socket.\n\nOnce she had it back in place she bent over at the waist and began to sob, holding her hands over her face. I put my arm around her and let her cry. As I felt her shudders, I began to feel emotions that I hadn't remembered in a long, long time. \"This woman saved my life once,\" I thought, \"and now I have the chance to save hers.\" And what was so equally unexpected was my absolute certainty that this was what I really wanted, not just for her sake but for mine as well.\n\nI turned her around to face me and gently pulled her hands away from her face. Then I reached up and lifted her eye patch off again. \"No!\" she whimpered, \"I'm so ugly.\"\n\n\"You're wrong,\" I said gently. \"You look at your face and the only thing you can see is your eye. I look at you and see a beautiful, courageous woman. You see the scar; I see all of you.\"\n\nShe looked at me with doubt that slowly changed into wonder and hope. Then she threw her arms around me and kissed me, and I knew that I had made another very good decision."
    ],
    "authorname": "FrancisMacomber",
    "tags": [
        "adultery",
        "cheating wife",
        "infidelity",
        "mystery",
        "adventure"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/al-andalus"
}