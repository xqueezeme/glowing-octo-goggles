{
    "title": "Mind Games Ch. 05",
    "pages": [
        "The elevator door opened on gold and gilt and blood. I stepped out, shotgun in hand and looked around the corporate section of Virgil station, my lip curling slightly. I wasn't sure what disgusted me more: The gaudy art-deco designs of the walls, with angelic figures holding aloft the ceiling by upthrust palms, like recreations of Atlas...or the bodies. It looked as if a good fifteen people had been caught by the Tesc and flayed against the walls, their bodies spread out, their skin stretched. Nails had been driven through palms and ankles, but their faces were turned away from me, as if ashamed of themselves. \n\nThe floor itself was covered in maroon carpet. I hoped it had started maroon. \n\nBut I doubt it. \n\n\"Testing, testing,\" Jules said, his voice crackling from a speaker mounted above me. It sounded tinny and distant - much less clear than Lucas' pure brogue. I wondered if corporate had worse speakers than the rest of the station. Or maybe being splattered in someone's head blood really fucked up a speaker's sound quality. Either or. \n\n\"I can hear you, Jules,\" I said, walking cautiously past the flayed bodies and through the double doors that led away from the elevator lobby and into the first area of corporate. Since this was where visiting bigwigs came first, it was designed to be just as impressive as the elevator lobby. A curving wood panel desk that had clearly been made to be staffed by concierges, like at a massive hotel, bisected the room, while huge, vaulted windows showed space, and Earth beyond. Except now, the light of the sun had shifted and the clouds had moved, and I could see that the ground wasn't green and brown, as i might have expected. \n\nRather, the planet was wreathed in red. What I had mistaken as a hurricane was in truth a firestorm the size of a continent, sweeping slowly across that hellish landscape. I shook my head slowly and turned away from the windows. The rest of the room lacked the gory decorations of the lobby, but a stranger thing started to nag at me. \n\n\"Where are the statues?\" I muttered. \n\n\"What?\" Jules asked, his voice coming from a nearby speaker. \"We're not getting any of the security footage. Lucas, have you?\" \n\nLucas - his voice pure as an angel - chuckled. \"If I had, laddie, I'd have sung out.\" \n\nI shook my head and walked over to one of the gaping holes in the decoration that had clearly once held one of those art-deco abominations. It didn't look as if the statue had simply torn itself free and marched off (not that impossible, not here.) Rather, I could see a few dozen massive gouges that had been left on the wall, and a series of deep furrows on the ground. I knelt down, tracing parallel lines, trying to do some guessing. I held up my palm, to compare the lines to my fingers. \n\nWhatever had left this track had to be either five buzz-saws moving in perfect unison. \n\nOr, alternatively, it had to be the biggest goddamn Tesc on the station. If they had captured the middle of the station, then spread outwards, Corporate would have been the least well defended areas. The people here were white collar assholes, not security. They'd fall fast. So, the Tesc would have had plenty of time to...work... \n\n\"What do we know about the Tesc...ecology?\" I asked. \"For lack of better word?\" \n\n\"Almost nothing,\" Jules said. \"They don't have the concept of linear time in their dimension. I'm not sure if we could even say they have ecologies. Or evolution. Or any kind of interactions that we could recognize. But, well, I was...under the telepath's control for some time. I made...some observations.\" \n\n\"You don't need to-\" I started, wincing at the pain that roared over that crackly speaker. \n\n\"Lassie, do you want to die?\" Lucas asked, his voice pragmatic. \"Seems ta me that not knowing shite is a great way to end up in some.\" \n\n\"Lucas, you asshole,\" I muttered as I hopped over the counter. Checking behind, I found a few key-rings, each one with a glittering golden key on it. Ostentatious dickheads. I took each key, shoving them into my pack as I crawled along the ground. My knees rasped on the carpet as Jules sighed and started to speak - narrating over me checking drawers, rummaging through cash registers, picking through anything that might be of some use. \n\n\"The Tesc take human bodies and manipulate them,\" he said. \"I don't know how, but that much is obvious. Certain human females are turned into Brood Mothers. They are able to...birth...through some kind of dimensional process the Brood. Broodlings assist them. Likely, the combination of modified human tissue and Broodling structure allows for more complex support 'machinery'. If you can call it that.\" He sounded sick. \"With that support, they can make Worker Brood, which make more complex human hybrids and Warrior Brood. The question is, where do Telepaths and anything more complex come from?\" \n\nI grinned. \"Jackpot.\" \n\n\"What did you find?\" Lucas asked. \n\nI stood from behind the counter, holding up another one of those PDAs - similar to the one I had found back in the Weaponized Tesseract labs. I tapped through it and found that it had a recording as well. The recording crackled on and holographic recreations of two women appeared, standing and sitting at the countertop. One had her rump resting on the countertop, and the other was putting her feet up. The holographic display was fuzzier than the old PDA, making it way harder to tell faces, but their voices were clear enough. \n\n\"Huh, it's recording,\" the girl sitting with her rump on the counter, who I decided to mentally name Rump Down, said. \"Got anything you want to say for posterity?\" She giggled. \n\nFeet Up sighed and rolled her head back so that it hung over the edge of her chair. \"Ugh. I'm so freaking bored.\" \n\nRump Down shrugged. \"Be glad we're not getting more work. I hear that there was another freak out down in cryonics.\" \n\n\"What?\" Feet Up put her feet down, sitting up, and thus ruined her nickname. \"You're kidding. That's the third this week. Do you know what it was?\" \n\n\"Corporate keeps that shit hush hu-\" Rump Down sprang to her feet as a recorded harrumph rang out. She turned around and a vague-half shape appeared at the edge of the projector, clearly at the outer range of its recording capacities. That figure remained at that distance, but despite being a blurry mass of pixels and random geometric images created by the holographic display, it still managed to somehow seem to be disapproving. \n\n\"Miss Murdoch, Miss Loesser,\" the disapproving figure said. \"I want you both to get ready. A new high roller is coming through for the SDP project, and I want her to be impressed.\" \n\nThe vague shape vanished away. \n\n\"Dickless there doesn't remember that the P in SDP stands for project, does he?\" Rump Down whispered - but then the holographic display faded away. As it vanished, I frowned, then thumbed through some of the non-holographic recordings on the PDA. I found the name for the last person that had come into the station. It was, shock of shocks...my name. \n\n### \n\nThe actual offices beyond the main lobby were all well appointed and rife with ancient paperwork. That actually struck me as somewhat odd - in a space station, with nanotechnology and artificial gravity, why the fuck would you use paper. But it became clear the instant I picked one of the papers up. It was written in a strange series of runic letters that ran together quite unintelligibly, not English at all. With that cipher, and the fact that paper was utterly unhackable no matter how good you were at computers, then all the records in all these offices were safe. \n\nBut there were more pressing things to worry about than my own frustration at not finding any hints about my past, present, or future. For instance, the narrow corridors bore scratches and abrasions that spoke of something large and long writhing through them. The carpet was mulched by claw-marks. A few paintings had once hung on the walls, the slightly pale rectangles giving testiment to where the artwork had remained. They had been snatched away, leaving behind tattered wall paper and shattered wood panels. \n\nSomething big had stolen every fucking thing that shone or glittered or gleamed. \n\nI checked my shotgun power supply and summoned a tiny sparkle of lightning along my palm. Both worked. \n\nThe offices gave way to large meeting rooms. These had been just as pillaged as the lobbies, with paintings and statues and even gold gilt scraped away. The first of the meeting rooms had held a large mahogany table, and it had been crushed in half by some errant footstep. The ceiling lamp that hung over the room was knocked askew, but still provided enough illumination for me to spy another one of those holographic recording PDAs. I snatched it up, then tensed. My ears heard nothing but the faint rumble of the air recycling systems - grown slightly louder the further that I moved away from the elevators and the need for a good impression grew less and less important. \n\nThe PDA tapped on and fuzzy figures appeared, several seated at the now destroyed table, their arms resting on nothingness. \n\n\"So, Miss Montenegro,\" a voice - Dickless, I recognized him despite the fact he was no longer a growling collection of geometric shapes and fuzzy pixels. There wasn't enough definition on the recording to show his expression, though I did get a faint sense that he was a slender man, not heavily built or fat. \"That's the basic program.\" \n\n\"I...still cannot quite believe it,\" my own voice came from the figure at the other end of the table. Her hands held up some glowing rectangles. The way they wobbled, I realized they were papers. No, not papers. They were slightly too stiff for the papers I had seen scattered around this place. What were they? My old self put the papers down. \"Immortality...\" she chuckled. \n\n\"And more,\" Dickless said, gesturing to the side. \n\nOne of the other glowing figures held out their hand. A glowing haze of pixels appeared around their palm and the recording device dutifully replayed the resounding crash of a lightning bolt going off. \n\n\"Oh...\" my old self said. \"Oh yes. I can see why you call it...ah...\" \n\n\"An unbeatable deal?\" Dickless said, voice pure sugar. \"If you sign there, there, and there, we can take you right to the SDP Project rooms and we can begin with the work.\" \n\nMy old self bent forward and started to sign. They stood and the holographic recording shut off - but not before I saw that they were heading to the left. My heart sprang into my throat and I hurried towards the doorway, shotgun at the ready. I saw nothing but two curving corridors - one head towards the SDP and the other one headed for the Lounge. From the direction of the Lounge, I could hear that sound. That low, rumbling, grinding sound. My ears perked up and I felt goosebumps slide along my arms. \n\n\"That's...not the air recyclers, isn't it?\" \n\n\"What, lassie?\" Lucas asked. \n\n\"Have either of you gotten the fucking cameras on? And it's Beatrice, Lucas,\" I whispered, aiming my shotgun towards the curving corner leading towards the Lounge. That slow, steady, in and out rumble continued. The sound of breathing. Now that I was attuned to the idea of it, I realized I could feel a moist heat sliding down the corridor. Something moist and hot clung to my face and cheeks and I felt my cheeks turn red with the sticky heat. It was like being breathed on by a lover and a jungle, all at once. That faintly sweet scent - so close to decay and fruit that it made me simultaneously nauseous and hungry - filled my nostrils. Thick. Cloying. I shook my head and backed towards the SDP rooms. \n\n\"Nay, lassie,\" Lucas said. \n\n\"Jules?\" I whispered. \n\nHe didn't respond. \n\nI frowned. I hoped that the Tesc hadn't come on where they had been working. He was just taking a piss. That thought was nice. Comforting. Not that I wanted to have him piss on me or anything. But it was just something normal here, in this timeless hell surrounded by fucking abominations. I felt my own bladder twinge and my cheeks turned red as I realized I hadn't done anything normal in far too long. At least I had gotten a few snatches of a bite to eat while working on the collar. \n\nMy thumb touched the button as my collar buzzed - giving me an idea of how long I had been rummaging around this place. An hour. I nodded and then came to the SDP room. \n\n\"Ah, there you are,\" Jules said, his voice coming from a speaker that hung from the corner of the room. My brow furrowed as I looked around the place, my lips turning down slightly. The SDP room was a fusion of the art-deco of the rest of the Corporate section with a bit of the antiseptic futurism of the technical research levels of the station. There were six large seats, three on one side of the room and three on the other. They looked a bit like the kind of seats you might see at a dentist's office, with a head rest and arm rests. But attached to their backs were gilt and wood paneled domes that were mounted on boom arms. I walked over and took hold of one of the domes, flipping it over - and hissed. \n\nThe inside of the dome, concealed by position, were an array of thick spines and needles that looked as if they were able to pierce through human skin and bone with ease. My thumb accidentally found a small switch on the outer edge of the dome. The needles thrust forward with a loud snick. I jerked away. \n\n\"What the fucking fuck!?\" I snarled. \n\n\"What, what is it?\" Jules asked, voice alarmed - ringing from the speaker. \n\nI looked at it. \"It's a fucking hairdresser's salon with fucking iron maiden helmets!\" \n\n\"What?\" \n\nThat was Tracy's voice. She sounded muffled and far away - and then came closer, a crackling sound filling the speaker, like her thumb was rubbing the microphone. Her voice was focused and hard: \"Bea, there should be a switch on the edge of the helmet. Is there?\" \n\n\"Yeah,\" I said, frowning. \"And it makes the needles stab inwards.\" \n\n\"Fuck. Fuck,\" Tracy hissed. \n\n\"What? What is it?\" I asked. \n\n\"They're Ryan-DeWitt Quantum Induction machines,\" she said. \n\n\"And the fuck are those?\" I hissed, trying to keep my voice from raising into a screech. \n\n\"They...\" Tracy paused. \"They scan memories. Personalities. Souls, I guess. So they can be uploaded onto computers.\" \n\nShe was silent for a moment longer. \n\n\"Or clones.\" \n\nThe low, steady sound of distant breathing was eclipsed in the background of my hearing by a roaring in my ears. Like the sea, crashing on the surface. I shook my head, slowly. My back thumped into the side of the wall and my knees gave way. I sank down, breathing slowly in and out, in and out, in and out. Focus, Beatrice. Focus. Drag in one breath. Let it go. Drag in. Let go. My eyes started to close. I slammed my head into the wall. Slammed it again and again and again, feeling pain surge through me. But pain was better than the alternative. A cry I didn't know I could make escaped from between clenched teeth as I shuddered, convulsively. I wanted to be sick. But I didn't have enough in me to let it out. \n\nIt was a poison, that thought. That horrible realization. \n\nI wasn't Beatrice Montenegro. \n\nI was... \n\nI could see, without the need of holographic display, a hazy half-imagined ghost that sat down on the chair. Except I was seeing it from the perspective of that ghost while also viewing it from the outside, like an alien observer. Bifocal realities. I saw the smiling face of the corporate ghoul looking down at me, and a doctor. The doctor was checking a PDA, tapping off readouts that she was looking at. The ghoul - Dickless - looked at me. \n\n\"Don't worry,\" his echo said. \"You won't feel a thing. And then you don't need to think about it back on the yacht.\" \n\n\"Will I...will it remember this?\" \n\n\"Oh no,\" Dickless said. \"There will only be dreams...\" \n\nThe images fuzzed away and I clenched my jaw. \"Jules,\" I whispered, raggedly. \"What does SDP stand for?\" \n\n\"I don't know!\" He said, his voice tight. \n\nI shoved myself to my feet. \"F-Fuck this. Fuck this fucking station, fuck that fucking bitch!\" I snarled, staggering past the seats, leaving my shotgun behind at the doorway. Discarded. I started to root through the room, searching for the computer I needed. \"I'm getting the computer, then I'm heading right fucking back. There'd need to be a good computer here, right?\" I asked. \n\n\"Well, the scanners are-\" \n\n\"Yes or fucking no, Tracy!\" I shouted - not caring about stealth at the moment. \n\nTracy's subdued voice came from the speaker. \"Yes.\" \n\n\"Lassie-\" Lucas started, whispering quietly in my ear. I hung my head forward, my forehead pressing to the metal surface of the wall above the computer alcove. There was a computer component inside, but I didn't know if it was powerful enough. Lucas started again. \"Beatrice.\" \n\n\"Yeah?\" I asked. \n\n\"You actually could kick Beatrice's ass,' he said. \"The fake on.\" \n\n\"And why do you think she's fake?\" I asked. \n\n\"I like you more,\" Lucas said. \"Wouldn't it feel good to just headbutt her unconscious?\" \n\nI breathed in. I remembered, earlier - what felt like weeks earlier - that I had said that the station might have gone to hell, but I sure wasn't. For a moment, I imagined doing a fuck of a lot more than just headbutting the woman who had gotten me into this mess. Who had created me, for immortality and magical powers. I imagined her mouth, bleeding and toothless, forced to fellate my shotgun. I imagined pulling the trigger, and rather than recoiling from the mental image, I felt my clit harden and my sex moisten. \n\nI grabbed onto the sides of the cabinet, then slammed my head into the wall again. The impact sent a flash of white pain through my eyes and I reeled backwards. I sprawled on the floor, gasping, and felt the pain subside only in a slow, sullen way. \n\n\"Lassie?!\" Lucas asked. \n\n\"Don't...ah...encourage...my...darker...impulses, Lucas...\" I snarled, pushing myself to my feet. \"I'm going to stay myself. I don't know what...that is...but I'm going to stay it.\" I shook my head, then called out. \"Jules. Fuck.\" I winced, my head ringing. \"Jules, is a G65-43-34-2 cybernetic intelligence unit good enough for the portal?\" \n\n\"Two of them would be,\" Jules said. \n\nI closed my eyes. \n\n\"Great.\" \n\n### \n\nI stepped slowly towards the lounge. The breathing became louder and louder. I knew that going slowly would only make the waiting harder and more painful for me - but I couldn't stop myself. I didn't want to see. I didn't want to know what new horror this fucking station had to show me. But the claw marks were more regular here, and I saw that the doorway - the double doorway - into the lounge had been torn off its hinges. The walls had been compressed and hammered outwards, creating a mouth of a cave, not an entrance to a corporate hack's idea of a rest and relaxation room for the megawealthy. Steam hissed out of it and the stink of heat and jungle moistness and sweetness was almost overpowering. Sweat dripped down my face and I forced myself to lean my head around the corner. \n\nAnd saw. \n\nThe lounge had been demolished. Comfortable couches splintered, pool tables upended, their balls sent scattered. But rather than being cleared away, the center of the room - a large pit of an area, with a raised walkway surrounding it - had become heaped with treasure. Golden statues had been crumbled into chunks, while paintings had been set here and there. Some of the statues had been so completely turned to rubble that they simply looked like gold painted rocks and marble. Others remained - an art-deco head looking out into the air, a single arm reaching out from the rubble, reaching for some kind of release. For a moment, I could only see the rubble. ",
        "Then I saw the tail twitch. \n\nAnd the nostrils flare. \n\nMy eyes widened more and more and more as I saw the Tesc that sprawled atop its heaped treasures. It was a long limbed, bony creature - but the bones were the size of small cars. They were light gray, with black highlights, and the spine was decorated by thick protrusions somewhere between curved spurs and slick, grasping fingers. The ribcage was convex, expanding outwards, before rapidly narrowing towards a tight belly, giving the creature the proportions of a greyhound dog in a concentration camp. Leathery wings, spread between fingers of white bone, sprang from the shoulders, and the long neck terminated in a bullet-shaped head, with an eyeless smoothness that bespoke the Brood. Hissing steam came from that creature's mandibles, and looking down its open maw, I could see glistening shapes that seemed more like organs than a proper throat. \n\nIt was a fucking dragon. \n\nAnd nestled there, between its two massive fore-claws and within a stone's throw of its head, was another G65 computer unit. \n\nI slung my shotgun into my backpack. It wouldn't be much help, now, would it? \n\nMy legs refused to move. My arms could grasp and reach, but my arms locked in place and refused to shift. My knees had taken over from my thinking brain, and an ancient instinct - an instinct older than humans walking on their own two feet. That instinct said: No. No. No. No. \n\nI closed my eyes, clenched my jaw, and forced my foot to move. I stepped forward once, then again, and felt the fear ebbing in my body. It was strange, though. You might have thought that learning I was a clone, a copy printed out and filled with half-memories and personality fragments, would mean I should feel less fear. I had less to lose, huh? Except that I didn't and I was realizing that now, as I crept towards the dragon. I had the prickle of my skin and the rasp of air in my lungs. I had the sweetness in my nostrils, the hammer of my heart between my ribs. I had the pulse rushing through my veins, throbbing behind my ears. I had the slick, sweet feeling of Jules entering me, and the cold hatred for the Tesc. \n\nI had all of that and more, buzzing in my head. \n\nSay what you will about being trapped on a nightmare station filled with hideous dimensional abominations, it did help you appreciate your life. And as I got closer and closer to those talons, I knew... \n\nI didn't want to die. \n\nI didn't want to lose this. \n\nMy knees threatened to lock up, but I saw the computer unit. It was almost in my grasp. I stepped onto another bit of carpet, and felt the weight of my body settle. The computer unit was right there. The hot breath of the dragon hissed across my body, streaming from its bony, chitenous nostrils. The sweetness was almost overpowering. It smelled like cherries here. My mouth watered, despite my situation. Another reason to live. I reached out, then closed my slick fingers on the computer unit. It creaked as I picked it up and the breathing from the dragon paused. \n\nI froze. \n\nThen the dragon breathed out again. I turned and fought back the urge to run and run and run. I stepped away and the breathing stopped again. A low hissing rattle of detritus being stirred by an immense tail sent a cracking lightning bolt along my spine. I took another step and then heard those immense arms creaking and the head shifting, and the snoring turned into a loud hiss that washed me over with moistness. I am not ashamed to admit that I pissed myself. The urine was wicked away by my nanotech suit, my body clean as a whistle as I turned, stupefied with fear. I should have sprinted away. I should have ran. \n\nBut my knees were locked again and I watched as the dragon loomed over me. \n\n\"Balls,\" I whispered. \n\nThe ribcage of the dragon crunched. Chitin slid backwards and a biomechanical seam was revealed between those plates. They locked and then the seam hissed open, revealing a mass of hanging fibers and wires and cables. Some were red, but most were black. They connected to a hanging, cruciform figure. It was shrouded in darkness and mist and I heard a series of whip-sharp pops and cracks as the wires detached, hanging free. The figure dropped down onto the carpet before me and suddenly, I was soaked with something...definitely not piss... \n\nThe figure was a Tesc. \n\nTheir head was sleek and swept back, with a series of long dread-locks made of biomechanical cables that tumbled down the back of their jet black, rubbery skin. Exoskeletal ribs were stretched over a sleek, muscular torso, like armor and clothing at once, but they revealed and cupped those hard muscles, accentuating the exotic beauty of his body. He had muscle groups no human would have - not the familiar six pack and pecs of, say, Jules. But the very strangeness of his muscles made me unable to not notice how slick and sleek they were. His hips came to two narrow points, and his arms were slightly longer than a human's would be. His fingers came to fine points. His face had an almost draconic cast to it, though the eyeless forehead was partially covered by the bangs of hisbiomechanical hair, concealing and accentuating his lack of human features. \n\nHis muzzle was twisted in a slightly sardonic smirk, and a pair of sleek, feathered wings were clasped behind his back. \n\nAnd between his legs was a member that put Jules to utter shame. It was sleek and ridged, with a flat, almost horse-like tip. It was rubbery and black and glistened, as his whole body did, as if he had been rubbed down with oil. His legs came to a pair of fine, arched, lizardlike feet. And a whipping tail twtiched from side to side behind him. \n\n\"L- ass...r...un...\" Lucas' voice came through a haze. \n\nI stepped slowly forward. \n\nThe humanoid unit from the dragon reached out. Claws caressed my cheek gently. A sting - as intense and fierce as pleasure - came from the contact points. He slid those claws to my lips and I tasted blood. My eyes half closed as I put my tongue to the tip of one of his claws, and he turned it, just so. I felt the sharpness, but didn't feel it bite. But it could. My nipples ached. My head spun. Softly, he whispered. \n\nIn English. \n\nNot a hybrid. Not a human-Tesc amalgamation. But a pure breed Tesc, unlike anything else I had ever seen... \n\nBut his words were still soft and sibilant and oh so...fucking... \n\n\"You're quite tired, aren't you, Beatrice?\" \n\nI breathed in his scent. His sweet, sweet scent. \n\n\"Lay with me,\" he said, gesturing to his horde. The computer component thumped to the ground, utterly forgotten. I stepped forward, my body burning with need. \n\n\"W-What are you?\" I asked, feeling dazed. A very tiny voice, screaming in the back of my mind, was trying to get my attention. But his beauty was too much. His exotic, hideous, beauty. His clawed hand caressed my back and drew me closer to him. My hip and his touched, and then his sharpness pressed to the nanites, parting them. When he pushed me forward - a gentle, playful push that sent me tumbling into the gold and paintings with a laugh. Somehow, it was softer than a cloud, and I rolled around, watching him as he stepped over to stand above me. \n\n\"Leviathan,\" he whispered. \n\nAnd then he knelt down and kissed me. His lips were hard and yet rubbery. His tongue was long, but it didn't invade like the other Tesc. It came, and it caressed, and it tickled and teased and explored. My eyes closed and I shuddered against him, my hands sliding along his sides. They found his hips, gripping the bony extrusions. My heart raced faster and faster and when Leviathan pulled back, his tongue remained for a few delicious seconds more, before slipping free. I gasped loudly, my eyes hooded. \n\n\"Oh god...\" I breathed. \n\n\"He's not here,\" Leviathan husked. Then his clawed hands slashed out and my clothing fell to the ground, in utter tatters. His clawed fingertips caressed the bottom of my breast, not drawing blood, just making me intensely aware of the fact that he could. My nipple puckered even harder and I looked down at my bared flesh. He regarded my tits with the slow wonder of someone who had never quite appreciated them. \"Mmm, or, maybe, he is...\" \n\nA claw-tip pressed to my nipple, and managed to tease it without cutting. I bit my lip hard enough to turn it sheet white and tried to resist moaning. Leviathan chuckled. \n\n\"Don't bother...\" he hissed. \n\nI let my lip slip from under my lip and groaned, my hands going to the collar, that was already trying to restore the torn and ripped nanites. I unclipped it, tossed it and tossed the attachment that would shock me. I didn't want to stop this moment. I leaned forward and caught Leviathan's lips again. His teeth were bared and sharp and I loved the tingle of them against my tongue. HIs hands grabbed my hips and he loomed over me, wings spreading outwards to cover us, trapping us in his heat, his moistness. I felt the thick, arm length of his cock against me. I moaned in desperation, and broke the kiss. \n\n\"Leviathan...\" I whispered. The voice, screaming at me, managed to get a question out. \"Why, I...you...\" \n\n\"Shh...\" He whispered. \"It will all become clear. I'm merely making a choice...multifaceted.\" That cock ground against me as he rolled his hips back. I should have needed lubrication. I should have needed stretching. I should have needed to be twice as big and a fucking horse, but I didn't care. I wanted that cock to split me in half - so badly that I was willing to beg. The words bubbled out of my mouth as I reached up to cup his sleek, black face. \n\n\"Fuck me, Leviathan. Take me. Make me yours. Pound me, oh god, I want to be ruined...\" I whispered, desperately. Every time I breathed in to speak, I scented more of that humid musk. Yes. Musk. There was more than sweetness to the scent now. There was musk, rich and male. So very male. I spread my thighs wide and felt his bony hands close around my ankles. He spread me further, bent me past what I thought possible. But my body was more flexible and plaint than I had imagined. My cunt spread for him and that flat tipped, ridged dick pressed to my entrance. \n\nLeviathan paused. Despite lacking eyes, I felt that he was looking into mine, deeply into mine. \n\n\"We are running out of time,\" he whispered. \"There is a balance in all things, Beatrice.\" \n\nHis cock plunged into me. \n\nHis voice had been cool and calm for that statement. ALmost logical, even if the logic escaped me. But every moment of that intensely long thrust, that pinning moment that turned me from quivering, needy woman to fucking cockslave, Leviathan was as passionate as any man I could want. His whole body quivered, his alien musculature tightening and flexing under my gaze. His moisture - the slickness that coated his body - dripped onto my face and tasted of machine oil and male sweat. I licked it up desperately, wanting him to fill me in every way as his firm, black balls slapped my ass like a metal paddle. \n\n\"Nnn!\" Leviathan groaned. \n\nShockingly...intensely human. Then, quietly, he laughed - and I felt his tail peeking against my anus. It was slick and sleek and as it caressed me, I heard him whisper. \n\n\"A virgin,\" he murmured. \"And a cheating whore. A curious complexity. Savory. Like sweet wine.\" \n\nBefore I could ask - before I could beg for him to do exactly what he was thinking of doing - that tail spread my anus and thrust into me. I felt it coiling through my insides, and somehow, there was no pain. There was only an exotic pleasure, the pleasure of knowing that there were two points of connection. The thick, thick cock filling me to the brim and the tail, slipping further and further into me. My eyes shuddered shut and I felt a shattering climax rush through me - then another. And another. And another. My back arched and an incoherent gurgle came from my mouth. I was drooling, I knew it. \n\nThen Leviathan thrust. \n\nMy whole body rocked and my head lolled backwards, my eyes rolling upwards. I coldn't see him, couldn't do anything but feel that pleasure. My mouth opened, whimpering, as his tongue caressed my lips, then plunged home. I was utterly airtight, claimed by a single being, bigger than the cosmos and older than time. My body writhed in estatic sensations that went beyond pleasure and into realms I could hardly describe if pressed. I clung to what memories I had... \n\nThrust. \n\nFireworks of golden light, exploding through my mind. Hands cupped my breasts, playing with me as the humanoid avatar of Leviathan slowly, casually thrust into me. He wasn't even trying and my brain was being reduced to a puddle of gurgling bliss. I felt more drool dribble along my cheeks, stinging against the cuts on my skin as my head writhed from side to side. The tentacle in my throat was pressing deep enough to cut off air. My nose flared and breathed only against blockage. The panic and excitement of being strangled set off more fireworks - deep, red hues. \n\nThrust. \n\nI clung...desperately... \n\nMemories. \n\nLucas. Jules. The escape. \n\nThrust. \n\nMy body jiggled and I felt my brain oozing out of my ears. The tentacle slipped from my mouth and I gasped desperately for air - and immediately started mewling. I couldn't help it. \n\n\"Shh,\" Leviathan whispered. \"It's almost done.\" \n\nThrust. \n\nMy back felt like if it bent more, I'd snap my spine. My bones would shatter with the pleasure and I would lay there, bleeding out, my body twitching, my soul escaping my lips with a song, a song of joy. I never needed heaven. I had been there, and hell, and everywhere in between. Slowly, I realized that the pleasure was coming not in thrusts, but in waves now - and I could hear, barely, over the sound of my own heart, the fierce pap pap pap of those rubbery balls slapping my ass, that tail slipping out of my anus, leaving it gaping and wanting more. \n\nLeviathan groaned, deep in his throat. \n\nAgain. \n\nSuch a human noise. \n\nHeat bloomed. \n\nAnd I, finally, blissfully, blacked out - my shattered mind reaching, desperately, for unconsciousness. A way to spare itself. But the pleasure that chased it down was nearly enough to sear out every nerve in my body, and I fell not into sleep...but into a twitching, thoughtless nothingness. \n\nI fell into bliss. \n\nI tumbled into heaven. \n\n### \n\nI woke by bits and pieces. First, my foot ached. Then my left leg was numb - the tingling pressure of blocked bloodflow more than I had expected. Then my fingertips felt the soft, scratchy rasp of the maroon carpet. My cheek pressed against something slick and damp. My eyes were unfocused, drinking in light. I managed, slowly, to blink. The light focused by a single tick. I blinked again. The focusing was more intense - now I could actually see faint blurry shapes that loomed around me. I blinked a third time and now... \n\nNow I saw that I was sprawled on an alleyway. No. Not an alleyway. A corridor. A corridor I knew. \n\nI had been dumped out near the fucking lobby. \n\nI managed to get my arms under my body and shove myself up slightly. My knees wobbled, despite being tucked against the ground, and I felt my head spin. I touched my cheek. Despite expecting my finger to come away coated with gray slime and bits of my fucked-scrambled brains dribbling out of my ear, I only saw drool. \n\n\"-As...ie-\" \n\nI blinked slowly and tried to make words. The sound that came out of my mouth was: \"My-yaph.\" \n\n\"L...assie!\" \n\nThe voice was Lucas, and he was coming clearer and clearer. I closed my eyes, shook my head, and managed to say: \"Lucas.\" My voice came out as if someone had fucked it with sand paper. \"What, where-\" \n\n\"You've been out of contact for three hours, lassie!\" Lucas said. \"What happened?\" \n\nI looked down. My belly was slightly distended. White cum dripped from my thighs, sloshing onto the ground. It felt shamefully good - like I was pissing cum. It dribbled down and splatted onto the ground. I tried to keep a huge, goofy grin off my face as I looked down at the floor before me. Because sitting right there were two computer components. The components that I needed. They looked new and cleaned, as if they had been wiped down and left gleaming. \n\nMore cum dripped along my thighs. \n\n\"I found the components,\" I said, sounding slightly drunk. \"And I need a fucking shower.\" \n\nSomehow, I managed to stagger out to the lobby and to the elevator entrance. There, I saw the flayed corpses. I frowned, looking at them, my head spinning. But pieces were tumbling around in my head and something clicked as I looked at those bodies. The blood had dripped onto the gouged out areas of the wall. The flayed bodies had been put up after...after they had been looted. I frowned. The bodies faced away. \n\nThey faced the rest of corporate. \n\n\"It's a prison,\" I whispered. \n\nMy hand dipped down, pressing to my belly. To my womb. \n\n\"What's getting out?\" I breathed. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "dragon",
        "alien11111",
        "giger",
        "hypnosis",
        "big dick",
        "tailfucking",
        "pregnancy"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mind-games-ch-05"
}