{
    "title": "A Girl Named Mitch Ch. 01",
    "pages": [
        "Hello everyone! As promised, here is Mitch and Cindy's story. It will be published in four parts. Everything is written and edited, and I'll try to submit the next part within a few days of seeing the previous one successfully published. It's a slow burn romance story, so if your looking for a quick hitter you'd do better elsewhere. As always all characters are over 18. Enjoy!\n\n<p align=\"center\">***********</p>\n\n<p align=\"center\">A Girl named Mitch</p>\n\n<p align=\"center\">Chapter 1</p>\n\nStart of fall semester, 2009, UGA, Athens, Georgia.\n\nI was so late.\n\nThe sound of my sneakers hitting the sidewalk echoed in my ears, my backpack bouncing against my shoulders as I ran. It's a good thing I was in shape.\n\nWhy did this place have to be so freaking big? I mean sure, it sounded great. After growing up in a little town and going to a tiny high school, the University of Georgia had seemed like such a grand adventure.\n\nFinally Miller Hall loomed in front of me, four intimidating stories of red brick. This one single building was at least three times the size of my high school, with two more floors.\n\nI pushed open the doors. I needed to find room 207, and quickly. I took the stairs two at a time. It had to be on the second floor, right?\n\nAs I crested the stairs a couple of guys were standing next to a bulletin board. I turned on my smile and tossed my sandy blonde hair. It got the effect it usually did, and I instantly had their attention.\n\n\"Boys, do y'all know where 207 is?\" I let a little Vivian Leigh slide into my normal Georgia drawl.\n\n\"Uh, sure. It's that way.\" The taller one pointed to my left.\n\nOne more brilliant flash of my pearly whites. \"Y'all are so sweet.\" I took off down the hall, knowing their eyes were on me as I did. I giggled to myself as I reached the door. Apparently my charms weren't only good in small towns. They definitely had their uses.\n\nMy small triumph was wiped from my mind as I walked into the huge, amphitheatre style classroom. The thing could seat two hundred and fifty if it could hold a dozen, and it was at least half full. My graduating class had thirty-six kids. There were at least three times that many in this single room.\n\nI took a deep breath and climbed up into the fourth row, locating three empty seats. I took the one in the middle. The differences from what I'd known before didn't end with the size of the room. On my left was a young man of East Asian descent, and on my right was a pretty Muslim girl wearing a head scarf. The sum total of our diversity back at Marin High School had been five African-American students. Before today I'd actually felt very cosmopolitan because one of them had been my good friend Tiwana, who'd played with me on our tennis team. I was quickly realizing I had no idea what true diversity looked like.\n\nAs I sat down I smiled at the girl, and she smiled back. I pulled out the little fold-away desk and opened my notebook as the professor entered the room. Tall and thin faced, he introduced himself in a nasal Eastern European brogue.\n\n\"Welcome to Econ 101; I'm Dr. Kovacevic. We will be starting with a basic review of the laws of supply and demand, which I assume you are familiar with.\"\n\nHe began to write on the board, and I felt my spirit start to rise to the challenge. I wasn't Cindy Spencer, valedictorian and tennis stand-out here. Here I was just student #410137012. For now, at least.\n\n***\n\nI knocked on Coach Holiday's door, my heart tripping along a little faster than normal.\n\n\"Come in!\"\n\nI opened the door and stepped inside the office. \"Hi, Coach. You wanted to see me? Cindy Spencer?\"\n\nThe dark haired woman on the other side of the desk laughed. God, I felt so country around her. \"Cindy, I know who you are. I recruited you, didn't I?\"\n\nI blushed. \"Sorry, I just, I didn't know.\"\n\n\"It's fine. Have a seat.\"\n\nI obeyed, forcing myself to relax.\n\n\"I just wanted to check in, make sure you're adjusting okay. I don't have any questions about your academic ability, of course, but this place can be overwhelming to anyone.\"\n\n\"Well, I think I know where all my classes are now. And I really appreciate you giving me the chance to walk on this spring. I won't let you down.\"\n\n\"Oh, I know.\" She leaned across the desk. \"Look, I've seen you play, you're going to be fine. And the only reason you're 'walking on' is because with your grades and test scores I was able to get you an academic full ride.\" She sighed and shuffled some papers at her desk. \"What can I say? We're not the football team. Our resources are limited.\"\n\nWe talked for a while, and I felt better by the minute. This was the first time I'd actually met the coach in person, although I'd skyped her with her a few times. To be honest I'd been stunned when Georgia had called. I mean, I hadn't lost a competitive match since I was a Freshman, but we were a small school playing other small schools. We'd won the 2A championships two years running, but I'd seen Carrie Mitchell play in the 8A finals, and she was something. I don't know if I was on her level, but I'd love to find out. She'd had multiple division one offers, I'm sure.\n\nCoach closed my folder. \"Thanks for coming by. If you need anything, tutoring, issues with school, just let me know.\"\n\n\"I will. Thanks, Coach.\"\n\n\"Obviously we can't have official practices until next semester, but I do want my incoming freshmen to meet with the strength and conditioning coach now, so we can hit the ground running in January. It'll also give you a chance to meet the other freshmen recruits.\"\n\n\"Sure, just let me know where and when.\"\n\n\"Four o'clock, Thursday at the sports complex. I'll send you an email with everything.\"\n\n***\n\nI was fifteen minutes early to the meeting, but I still wasn't the first one there. I had to pick my jaw up off the floor when I walked in and saw Carrie Mitchell sitting there alone.\n\nShe stood up and smiled, holding out her hand. \"Hi! Carrie Mitchell.\"\n\nI shook her hand, and she did have quite a grip. \"Cindy Spencer. Hello.\"\n\nA look of recognition passed over her face. \"Marin High, right?\"\n\n\"Yeah, how did you...?\"\n\n\"I heard about your unbeaten streak, and I made sure I got to see your match at the finals. You're really good.\"\n\n\"Not as good as you.\"\n\nShe blushed a little. \"Well, I'm glad we're on the same team now.\"\n\nI took a seat. \"So what are you majoring in?\"\n\n\"Honestly I'm not sure yet, but I'm leaning towards Kinesiology. How 'bout you?\"\n\n\"Economics and banking.\"\n\nCarrie grimaced. \"Wow, that sounds like a lot of math.\"\n\n\"Yeah, well, I was always good at math.\"\n\n\"That makes one of us.\"\n\nWe chatted for a few more minutes before anyone else arrived, a tall quiet girl who sat in the corner. She acknowledged us with a nod, but nothing else. I made an 'oh well' face and turned away, and that's when it happened.\n\n\"What's up ladies! We are going to kick some ass this year!\"\n\nI looked up at the door where a girl had just walked in, like right out of a gay rights poster. She was wearing a tight black T-shirt and loose jeans with black sneakers. Her hair was short, parted on the left with the bangs swept up and over.\n\nI've mentioned the lack of diversity in my life, and I was prepared for a lot of things, but for some reason not this. My church had preached love for all peoples. We supported missionaries in Asia, the Middle East, Africa, and other places. All people are made in the image of God. Except for gays, of course. They were vilified, condemned out of hand. As far as I knew there hadn't been a single homosexual in my school. I know now that the chances of getting three-hundred random people in one place and not having some who are LGBTQ+ is next to impossible, so most likely more than a few were hiding. But at that time I was living in a small fantasy world where the bad guys lived far away. But when I did picture them, the female ones at least, they dressed like her.\n\nBut there was something else. She had these piercing blue eyes that took my breath away. And she wasn't ugly. Lesbians were supposed to be, you know, mannish and square jawed. Plain to downright homely. Instead her face was this androgynous combination of handsome femininity with soft lips and high cheekbones. I had to make myself look away.\n\nThe newcomer tossed her bag onto a table and held out a hand. \"Hi. Mitch Kirkpatrick.\" Carrie shook it and introduced herself. Mitch turned to me and held out her hand again, and I took it lightly, wearing that same expression my mother used when she had to greet people she didn't like. Somewhere deep inside me I felt shame in my attitude, but I wasn't able to overcome it on such short notice. But I did notice how warm her hand was, and how that heat seemed to radiate up my arm. As she turned to introduce herself to the other girl in the back I looked quizzically at Carrie, mouthing 'Mitch?!' Carrie just shrugged.\n\nSoon enough the strength and conditioning coach came in and we got down to business. I did my best to focus on what he was saying, but I could feel Mitch's eyes on me from the row behind, and it made me deeply uncomfortable. I was constantly fiddling with the strings on the neck of my halter top, and I was bitterly wishing I'd worn something more concealing.\n\nFinally the coach dismissed us to the locker room to change, and I made sure that I sat far away from Mitch, trying not to glance at her out of the corner of my eye.\n\nWhen I got out into the weight room I hopped onto the bench press, and Mitch immediately jumped in above my head to spot.\n\n\"You ready?\"\n\nI sighed and nodded, looking away from those stupidly blue eyes as I lifted the bar off its rests. I lowered it and pushed up as Mitch counted.\n\n\"One. You don't like me. How come? Everybody likes me. Two.\"\n\nI spoke through my effort. \"I don't know you enough to like you or not.\"\n\nMitch laughed. \"Bullshit. Three. Is it 'cause I'm taller than you? Four.\"\n\nI scowled at her. \"No.\"\n\nHer little smirk made me hate myself, and I felt that I'd given something away. \"Five. Okay. Oh, I know, it's 'cause I've got better hair. Six.\"\n\n\"You do not! You don't have any... ungh... hair to speak of anyway.\"\n\n\"Seven, Ah, now we have it. You don't like girls with short hair. Eight, come on, two more. Don't girls wear their hair short where you come from? Nine. Last one, come on.\"\n\nMy arms were screaming, so I couldn't respond with more than a grunt as I pushed up until the bar was seated back on the rests.\n\n\"Good job, but you didn't answer my question.\"\n\nI sighed and looked down, noticing for the first time that my loose tank top and sports bra weren't hiding the fact that my nipples had hardened from the exertion. I was also wearing red, skin-tight exercise pants. I must be putting on quite a show for her; the thought of which gave me a little shudder. I quickly sat up and bowed my head.\n\n\"No, they don't. Are you a Lesbian?\"\n\nMitch gave a short laugh and tried to look offended. \"Am I that obvious?\"\n\nI shrugged. \"I don't know any gay women. There aren't any in my town.\"\n\nThat got another laugh. \"I'll guarantee you that's not true. So you're not a lesbian?\"\n\nI shot her the dirtiest look I could, trying to put some serious venom in my response. \"No!\"\n\nIf she was annoyed or offended she didn't show it. \"That's a shame. You really are cute when you're not making that face.\"\n\nI spluttered, trying to come up with something witty to say, but she didn't give me a chance, turning and walking away towards the leg machines. I made my own way to the free weights and did some curls, sitting so that my back was to her. Unfortunately the damn mirrors made it so that I could see her from wherever we were. For the rest of the session I'd constantly catch her out of the corner of my eye. There was just something mesmerizing about the way she moved.\n\nWhen we finished I went to sit by my locker while Mitch and Carrie and the other girl got into the shower. I couldn't handle being naked with her. She just got under my skin, if you'll pardon the expression. I couldn't help but notice her, though, when she got out. As she toweled her hair I could see her from behind. Her figure was womanly, with a strong toned behind and long firm legs that emphasized her curves.\n\nI shook my head and turned away, wrapping a towel around my body and slipping past them into the steam filled room. As I let the water wash over my aching muscles, Mitch's eyes climbed back into my consciousness. The way she'd been smirking at me, asking me if I were a, um, god, I couldn't even think of it. Asking if I were like her. I just needed to get a boyfriend. That would shut her up.\n\n***\n\nIt didn't take me too long. It turns out I was right about not being just small town pretty. I went to a few parties, and the guys were perfectly and predictably interested.\n\nUnfortunately they were also college guys, and therefore that interest revolved around two things, beer and sex. You can guess which one they wanted from me. I needed someone who I could actually flaunt a little. Luckily, those weren't that hard to find, if you were patient.\n\nI met Ethan at a frat party, and he was actually dressed in a shirt and tie. He was just under six feet tall, with soft brown eyes and dark hair that was perfectly combed.. And, given the Rolex on his wrist, he came from money. We danced and I teased, but he didn't push the issue. He did walk me to my dorm, to make sure I got back safe, he said. At the entrance he kissed me and wished me goodnight, asking if he could see me again.\n\nWhen he leaned in I was hoping for that thunderbolt that my girlfriends always talked about, but nope. Still, he was gentle, and it wasn't too bad, and I happily agreed to let him take me out next Friday.\n\nThe next day I met up with Carrie and Mitch for what would become our normal Saturday workout. I regaled them both with how amazing the party had been last night and how handsome Ethan was.\n\n\"So, did you get lucky, or rather did he get lucky?\"\n\nI scowled at Mitch. \"No, he did not. He was a gentleman.\" I let my face morph into a superior smile. I'd show her. \"We kissed in the moonlight, though, and it was lovely.\"\n\n\"Made you all tingly and excited?\"\n\nI could feel my cheeks heat. \"That is none of your business.\" I walked away, over to where Carrie was doing leg presses, and sat down on the machine next to her. Something in Mitch's eyes told me she already knew the answer to her question was 'no'. She went over to the free weights, and I lowered my voice so she couldn't hear. \"She's a nightmare.\"\n\nCarrie chuckled. \"No she's not, she just makes you uncomfortable. So you really didn't have any gay students?\"\n\nI shook my head. \"When I was a freshman there was a guy who had rumors going around about him. He was brutalized, got beat up a couple of times, eventually had to leave school. He was only sixteen, and I'm not even sure it was true, that he was gay. Anyone else that way inclined kept it to themselves.\"\n\nCarrie nodded. \"How small a school did you go to?\"\n\n\"Thirty-six in my graduating class.\"\n\n\"Geez. Mine was huge. I was in the Atlanta suburbs. We even had a gay-straight alliance club. There were several people out, of both genders.\"\n\n\"Can I ask an ignorant question?\" Carrie nodded. \"Are all lesbians like her?\" I threw a glance toward Mitch, who was sitting on a bench curling a twenty-five pound weight, her well-defined shoulders and biceps glistening with sweat. I pulled my gaze away and looked back at Carrie, who was laughing.\n\n\"I've met a few butches before, but I think it's safe to say that our Mitch is one of a kind.\" I looked back at Mitch, her toned muscles moving smoothly under her skin as she curled a twenty pound weight. She was so masculine, but at the same time not masculine at all. I'd never seen anything like her, and I was still finding it hard to look away.\n\nWhen we were finished Mitch stretched her back. \"I feel awesome. Lunch, people?\"\n\n\"No thanks.\" I scowled and turned away, immediately hating myself for the way I sounded. I was playing right into the small town redneck rube stereotype. I always thought I was better than that. Luckily Carrie gave me a second chance.\n\n\"Aw, come on. We all have to get along.\"\n\nI stopped walking and hung my head for a second before turning around. \"You're right, I'm sorry.\"\n\n\"Hey, that's better.\" Mitch grinned at me, and my insides did a little lurch. I wasn't sure why, but it wasn't unpleasant.\n\nWe made our way to the cafeteria, where I selected a three-bean salad with grilled chicken and some fruit, along with unsweetened iced tea. I was happy with it, a good amount of protein but healthy. I went and sat down next to Carrie, who'd gotten some chicken and pasta thing. Mitch sat down across from me with a greasy burger and fries, which made my brow crinkle.\n\n\"How can you stay in shape eating stuff like that?\"\n\n\"What? There's vegetables.\" She indicated the lettuce, tomato and pickles on her burger.\n\n\"That does not count and you know it.\"\n\n\"Sure it does. Besides, what's the point in living if all you can eat is rabbit food?\" Mitch jabbed her fork at my salad. \"I have nightmares about being chased by food like that.\"\n\nCarrie was chuckling, and I couldn't help but laugh, too. The grin that spread across Mitch's face when I did made her look almost pretty, and I just shook my head at her.\n\nShe took a big bite from her burger. \"It's really not bad, given it's dorm food. God, I miss having a proper kitchen.\" She swirled a fry through some ketchup. \"These fries suck though.\"\n\nI couldn't fully keep the incredulity out of my voice. \"You cook?\"\n\nShe leaned forward and locked eyes with me. \"I could fix you something that would make you weep.\"\n\nThe intensity of her gaze held me for a second, before her shoulders started to shake in laughter. That made me grin again and shake my head. \"I might just let you do that sometime. In a completely platonic sense of course.\" I added the last part a bit too quickly.\n\n\"I'll hold you to it.\"\n\nCarrie was looking back and forth between us, and I was just starting to feel uncomfortable when Mitch turned toward her and kept going. \"Both of you if I get a chance. Now the food at my High School, that was some god awful swill. I think I ate in the cafeteria there maybe three times in four years. I'd bring my own lunch and share with my friends. I was very popular.\"\n\nCarrie and I both laughed, and Mitch was spurred on to share more stories from her High School. She really was funny, and I found any lingering discomfort I had slipping away.\n\nThis quickly became our Saturday normal. I was also allowing things to progress with Ethan, which gave me something to talk about, especially since I got the distinct impression that me expounding on how amazing my boyfriend was made Mitch uncomfortable. I figured it was payback. Her very presence made me nervous, though I was pretty sure I was getting better at hiding it.\n\nThe thing was, on the rare occasions that Mitch didn't make our workouts, I didn't like it. It felt empty somehow. I missed our verbal sparring. On the other hand, she did seem to take a perverse enjoyment in teasing me, but I got in more than my fair share of jabs.\n\nI let Ethan court me for over a month before I brought him up to my room for the night. I was nervous about it, but I wasn't a virgin. This would be my first time in a bed, instead of a backseat, or once on a couch. I was expecting it to be romantic and for it to last longer. After all, Ethan was twenty and seemed so experienced, I thought he'd be great, instead of the disappointments I'd had before.\n\nAnd he was better. He was gentle and considerate, and he really was trying, but my body just refused to respond. I kept a little bottle of KY Jelly next to my bed that I used to hurry things along when I masturbated, and I had to stop him so I could get it. To make up for it I went down on him until he was good and ready, and then rode him 'til he finished. I did my best to pretend to enjoy it, and I lied to him afterwards when he asked if it had been good.",
        "I told him my roommate would be back a little after midnight, another lie, just to get rid of him. After he left I had a little cry, wondering what the hell was wrong with me. I mean, he was handsome, kind, smart and funny, every girl's dream. I should be melting inside at the thought of his touch.\n\nI wouldn't admit that, though, and I talked up the whole experience to Carrie and Mitch after our workout the next day. Mitch seemed particularly eager to change the subject, so to follow up I invited Ethan to join us for lunch the next Saturday, and I spent the time hanging on him while Mitch fought back scowl after scowl.\n\nI was being petty, I guess, but Mitch had the annoying habit of showing up with stories about her own exploits with some girl she'd met at a party, or in the laundry room, or wherever. I dutifully scowled my way through them, but the things she said would often echo in my mind as I tried to sleep.\n\n\"Why does she have to carry on about it all the time?\" Carrie and I had met for dinner, and I was, in typical fashion, bitching about Mitch.\n\n\"You know why she does it. It gets under your skin.\"\n\n\"No it doesn't. I don't care who she sleeps with.\"\n\n\"Uh-huh.\" Carrie smiled at me strangely. \"You know, for someone you hate, you sure talk about her a lot.\" I didn't have a response to that at the time, although I came up with one a few days later. But as my first semester of college ended, it was certainly true that no one was on my mind as much as one Michelle Kirkpatrick.\n\n***\n\nThe start of spring semester also brought the start of official practices. This made me far more nervous than I tried to let on. I'd been out on the practice courts with Carrie, of course, and I knew she was better than I was, but it was a lot closer than I'd feared. I was just terrified of being an embarrassment.\n\nThe night before our first official meeting I had this nightmare where the coach dismissed me in front of everyone after the first practice. \"Sorry, I was wrong about you. You're just not Lady Bulldog material. Time for you to go.\"\n\nThey didn't let me back on the bus, and I lay there crying as they drove away. Mitch's face was sad as it showed through the back window of the yellow school bus. (Don't ask why it was a school bus. I don't know.) I cried until it was dark, and then something was hunting me as I ran down the road. I woke up sweating through my nightgown, thrashing and breathing heavily. I looked over at my roommate, Lana, who gave an unladylike snort and rolled toward the wall.\n\nI finally calmed down. I wasn't sure if I was happier that I hadn't woken her, or that she hadn't seen me crying.\n\nInevitably the time came, and I was on the court with the rest of the team, the same team that had won the SEC championship last year. Several of the top players from last year had moved on, but that was normal, and they expected to restock and win again.\n\nCoach blew her whistle. \"Okay, great to see everyone ready for another great year. Coach Roberts says everyone here has kept up on their fitness. That's good. Let's see if you've kept up anything else. First day especially, we're just going to have some fun. Pair off and warm up. Freshmen, with me.\"\n\nCarrie, Mitch, and the tall girl from that initial meeting, whom I hadn't seen since, all gathered around the coach, who was looking down at her old fashioned clipboard.\n\n\"Okay, Carrie Mitchell.\"\n\nCarrie stepped forward. \"Ma'am.\"\n\n\"Carrie, I'm going to pair you with Kolokhotsova.\" The tall girl nodded and jogged out to one of the open courts with her bag. Carrie glanced at me and shook her head before following.\n\nI looked back at Coach Holiday, who had lifted her head toward Mitch and I. \"Kirkpatrick, Spencer. Warm up, play a few games. We'll be watching.\"\n\nI nodded, bouncing up and down on my toes, but I didn't move. Mitch let out a whoop and headed to the far side of the court. Coach Holiday noticed my hesitation. \"Problem, Spencer?\"\n\nThe tone of her voice snapped me out of my trance. \"No, Ma'am.\"\n\nWhen I got into position Mitch held up a ball, and I nodded to her. She swatted it over the net, and I stepped to my left and hit it back. The next was hard and low. I got it back, but I could tell from her easy movement that she had a lot more power than she was showing. We rallied for a bit before she surprised me with an up the line shot. My footwork wasn't perfect, so my return caught the net and dropped down.\n\nI swore internally, and I was surprised how pissed off I was that I let her win the point. I pulled out another ball and hit it over, with a little more force this time.\n\n\"There we go! Now we can hit.\" Mitch hit the ball back with full force, and I was immediately on the defensive. Ten minutes later I was convinced of two things. First, Michelle Kirkpatrick was the most talented player I'd ever faced on a tennis court. Second, I could absolutely hit with her. I wasn't outclassed at all.\n\n\"Service!\" Mitch stood at her baseline, ready to serve. I took position a few feet behind my own, twirling my racquet in my hands.\n\nMitch served hard up the T. I knew she was going to do that. One look at her, the way she stood, the set of her shoulders, it was all about aggression. Even knowing it was coming, though, it was hard, and the pace surprised me. Normally when I anticipated a shot like that I could get around the ball and drive it into the open court. This one I was lucky to just get back. I did get it deep, though, and she had to back up to hit her next forehand, and I was able to equalize in the rally. I absorbed her pace, getting each shot back near the baseline. After five or six exchanges I could tell she was getting frustrated. She took a big swing and sailed a forehand long.\n\n\"Love -- Fifteen.\" Mitch was fuming as I called the score and walked to the ad court. She netted her first serve. Her second rifled right up the T and my return wasn't as deep as I wanted it. Mitch stepped left and smacked a cross-court winner that I had no chance at.\n\n\"Oh, yeah! Fifteen all.\" There was no question regarding the challenge in Mitch's voice. A coach of mine had told me about a fencing term he'd heard of once called 'the dominance'. It referred to the person who was controlling the match, the one who decided the touches. I always felt that the concept translated well onto the tennis court. I could feel Mitch reaching for the dominance, her every shot trying to beat me into submission.\n\nI also knew that I didn't need to surrender it. I was more patient, more controlled. I used all the tricks in my bag, drop shots, lobs, short balls inviting her to the net before she wanted to. She came forward a lot already, consistent with her aggressive personality. It was often premature, though, and I repeatedly punished her with passing shots.\n\nThat's not to say I kicked her butt. Her power was a real thing, and when I made the smallest mistake she was merciless in taking advantage. And damn, she just hit the ball hard, always taking my time away. We played for over an hour, splitting a set of ten games. By the end we had the whole team watching, and as we finished we got several appreciative nods from the upper class players.\n\nAfter that we split up and worked on serves, one of the assistant coaches just watching us as we hit and hit. I tried to show off my variety, Ts, wides, kickers. Mitch, I noticed, was just hitting bomb after bomb, trying to impress with velocity. That was so her.\n\nAfter the first week I felt great. I'd held my own with one of the top collegiate tennis teams in the country. I doubted I'd see much if any varsity court time this year, but I knew I'd be able to contribute on the practice courts, and in upcoming years who knows?\n\nI got an email on Friday morning, asking me to stop into Coach Holiday's office before practice. I was only a little nervous, I really didn't think she was going to cut me or anything, but maybe they just didn't see the potential in me.\n\nI knocked on her office door, and she waved me in.\n\n\"Cindy, Hi\"\n\n\"Hey, coach.\" She motioned toward a chair, and I set my bag down and sat.\n\n\"I have to say I've been impressed. You've done some great work out there this week.\"\n\nMy cheeks heated up as they stretched into a smile. \"Thanks. It's been fun.\"\n\n\"Good, good.\" She looked over at her computer. \"So you know in college everyone plays doubles. I realize that wasn't the case in high school.\" I nodded. \"I'd like you to partner with Michelle Kirkpatrick for the time being.\"\n\nMy mouth dropped open, and I stammered for a second.\n\n\"Is there a problem?\"\n\n\"No, ma'am, it's just, um.\"\n\n\"Spit it out, Spencer.\"\n\n\"We just don't always, ah, get along, ma'am.\"\n\n\"I was under the impression that you, Michelle, and Carrie all work out together.\" I nodded as she continued to look at me. \"Cindy, you play harder when you're facing her. I'm hoping that translates into doubles. And you're the best freshman tactician I've seen in years, something Michelle desperately needs to learn.\" She sat back in her chair. \"We'll try it for a bit. I know you'll give it your best. See you at practice.\"\n\nThe tone of her voice said I'd been dismissed, so I grabbed my bag and headed toward the locker room. I'd just pulled my red top on, my finger running once in disbelief over the embroidered G on the front. I still was in awe of what team I was playing for. My reverie ended when someone flopped onto the bench next to me.\n\n\"Hey, partner, so how pissed are you?\" Mitch was grinning widely.\n\n\"I'm not. I'm fine.\"\n\n\"Yeah, sure.\" She stood up and stripped off her T-shirt, revealing the toned abs below her sports bra. I pulled my eyes away to keep from staring, and I knew she was laughing at me inside. Turning her back to me she pushed her jeans down, giving me a good look at her backside. And again I found myself having to force my gaze away.\n\nI jumped to my feet, speaking a little louder than I needed to. \"Ok, I'll see you out there.\"\n\nMitch laughed. \"You're gonna go out like that? Not that I mind, you've got an incredible ass.\"\n\nI looked down and realized I'd never put on my skirt, and I'd nearly run out of the locker room in my undies. My eyes closed while my cheeks tried to match the red color of my top.\n\nI rectified the situation, while Mitch watched me out of the corner of her eye with a self-satisfied grin on her face. I scowled at her as I left, fully dressed this time, which only made her laugh. But I was not incognizant of the fact that her watching me dress made me feel strange inside.\n\nOut on the court I shook off the strange feelings I was having, stretching a bit before hitting a few with one of the upperclassmen. Mitch made it out onto the court at the same time as the coaches gathered us around.\n\n\"Ok, everybody gather round. It's Friday, and you old timers know what that means. Doubles practice. So, Kirkpatrick and Spencer, I want you to work with Kenner and Williamson. Mitchell and Kolokhotsova, I want you...\"\n\nMy mind tuned out the rest. We'd been put up against some of the upper class women. They were already talking together as they made their way out to the court, probably plotting our demise.\n\nMitch came up behind me. \"Hey, we got this, come on.\"\n\nI nodded and jogged out with her, some of the nervous energy draining away as I began to move my body. They served first, and we only got one point during the game. Mitch started the first game for us. She hit a great serve up the T, but Sarah Williamson, our opponent, anticipated and swatted the ball crosscourt into the alley, well out of my reach. When I turned, I saw that Mitch was playing too close to the center, and she didn't have a chance at it either.\n\n\"Love -- Fifteen.\" They called out the score and gave each other a high five while I jogged back to Mitch, who was kicking the ground.\n\n\"Hit this one out wide, huh?\"\n\nMitch scowled. \"I hate serving wide.\" I knew why, wide serves were slower.\n\nI tried to harden my gaze. \"I know, and so does everyone else on the team, so they're playing you up the middle. And take a few steps to the side. It's not singles; you don't want to serve from the middle. It leaves the alley too open.\"\n\nMitch looked for a moment like she wanted to say something, but in the end she just nodded.\n\n\"Ok, I'm going to look to poach if I can.\" I jogged back to the net, getting low and spinning my racquet. I looked back, and saw Mitch stand in the middle again, before thinking a second and taking a couple small steps to her left. I smiled, part of me shocked she'd actually listened. The serve was out wide, and our opponent, who'd been cheating middle, didn't even get a frame on it..\n\n\"Nice!\" I jogged back and gave Mitch five, who was smiling now. \"See? Do it again.\"\n\n\"You sure?\"\n\n\"You need the practice.\"\n\nMitch nodded. This time her wide serve was just barely out. She took a second ball and hit it in the same place, this time good, but not as hard. I'd shown my opponent that I was cheating slightly into the alley, but slid back to the center as soon as Mitch hit the ball. Sarah tried to take her forehand crosscourt, but I was already headed that way, and volleyed the ball away easily.\n\nMitch was pumping her fist slightly. \"That was awesome. You baited her, didn't you?\"\n\n\"Of course.\"\n\n\"Another one out wide?\"\n\n\"Yeah, one more. Then we'll switch it up.\"\n\nMitch ended up holding her serve, and I got to hit some more volleys, something I didn't do a lot of normally. Mitch was like a loaded gun, and it was fast becoming obvious that it was my job to point her in the right direction before she went off. For her part she was always pumping me up. I hate to admit it, but I had fun. She just made me laugh, with her childlike exuberance combined with a relentless optimism. It was very refreshing.\n\nWe actually won our set, breaking serve in the tenth game on an awesome series of volleys at the net by both of us. We each gave a scream of victory and embraced, and I didn't think anything of it until we broke apart. That had, um, felt nice.\n\nAfter practice I was talking to Carrie. \"I think we did well, won our set. How 'bout you guys?\"\n\nCarrie shook her head. \"Not so good.\"\n\n\"What's it like playing with, um, what's her name?\"\n\n\"Lidke, her name is Lidke. She's from the Czech Republic. I think she's shy, doesn't have a lot of confidence in her English yet. She's good, though.\"\n\nMitch plopped down between us. \"Great first week! Which means it's party time!\"\n\nI shook my head. \"I have plans with Ethan.\"\n\n\"Mr. GQ? Bring him along.\"\n\n\"You just want him to come so you can make fun of him.\"\n\nMitch shrugged. \"I'll admit that's part of his charm.\"\n\nCarrie laughed. \"You're terrible. Did you have something in mind, or was it just, y'know, 'party'?\"\n\n\"As a matter of fact, the Beta Delts are having a Winter Fest tonight.\"\n\nCarrie shook her head. \"That's a target rich environment for you\"\n\n\"Maybe. So many curious, so little time. It's a curse, I tell you.\"\n\nI huffed and Mitch fixed her little half smile on me. \"I don't make anyone do anything they don't want to do. I just help them do everything they've always wanted to do.\"\n\n\"Well, I want to go out with my boyfriend, and you can keep your sordid activities to yourself.\" I put as much admonishment in the statement as I could, but I had to turn away before I started laughing at the look of almost girlish glee on Mitch's face.\n\n\"So no sordid activities in store tonight for poor Evan?\"\n\n\"Ethan.\" I scowled at her. \"And if there were I wouldn't tell you.\"\n\n\"Whatever. Enjoy your five minutes of fun!\" She pulled her bag over her shoulder as I turned back to my locker. By the time I realized my boyfriend had just been insulted she'd already started walking away, signing an off color rhyme.\n\nCarrie laughed at my outraged expression. \"You, know if you wouldn't get so discombobulated around her she'd tease you less.\"\n\n\"Sorry,\" I took a breath and groaned in frustration, \"she just pushes my buttons.\"\n\n\"I know, and so does she.\"\n\n\"Why does she do it? Why does she have to be so...\"\n\n\"So Mitch?\" Carrie shook her head. \"My dad always told me that boys only teased the girls they liked. Maybe it's true for butches, too.\"\n\n\"That does not help.\"\n\n***\n\nMitch had been wrong. It'd lasted longer than five minutes, but fortunately not by much. My roommate was gone for the weekend, and I'd taken advantage and practically dragged Ethan back to my room. The sad thing is, I was doing it just to get even with Mitch. Damn it, she wasn't the only one who could have great sex. In theory at least, because I certainly hadn't.\n\nEthan had, apparently, at least judging by his contented snoring. I just lay there, staring up at the ceiling, my mind traitorously wondering what Mitch was doing. I imagined her with a chestnut brunette, dancing slowly to some dreamy ballad, the girl's expression rife with innocent wonder and desire. But try as I might, I could not picture Mitch's countenance as predatory or mean spirited. Those things were so alien to who Mitch was that the thought was inconceivable. Instead she was wearing her normal, enthusiastic, friendly smile.\n\nEthan grunted in his sleep and rolled toward me. The twin bed gave us very little room, and he ended up lying half on top of me, his arm around my middle. I tried to gently push him away. He was still all sweaty, and his body spray stank. Eventually I managed to get him to face the other direction. I really wished he'd just get up and go back to his place. I felt a tear in my eye. This was not how someone was supposed to feel after making love.\n\nThe girl I pictured with Mitch swam up before my consciousness. She was going to be happy and satisfied, her lover would make sure of it. She was so lucky, and with that thought I finally drifted off to sleep.\n\n***\n\nI woke alone in my bed, pulling my covers over my head to push away the morning light. I reached over to my desk and found my phone. It was showing one percent battery, and I just had time to glance at the time and see Ethan had sent me a text before it died.\n\nI finally managed to find my charger, flopping back down on my bed after I plugged it in. I was so glad I'd woken up alone, and my heart was in knots. What the hell was wrong with me? I'd used Ethan last night, just used him, and to do what? To get even with someone I didn't even like, whom I had no reason to even be mad at? I felt dirty. I buried my phone under my pillow and sat up, wrapping my comforter around my shoulders.\n\nI looked at my digital alarm clock, the bright red numbers traitorously showing ten after eight. I was due in the gym in under an hour, where I'd have to face Mitch.\n\nI dragged my miserable carcass to the shower. I could still smell Ethan's body spray on me, as well as stale sex, and I wanted it gone. As the water ran over my shoulders I felt a tear escape my eyes. This was not the person I wanted to be. For crying out loud, I didn't need to compete with Michelle Kirkpatrick. If she wanted to sleep with every coed in the freshman class, that was not my problem.\n\nWhen I made it to the gym, only a couple minutes late, thank you very much, Mitch and Carrie were cracking up over on the mats while stretching.\n\n\"... So he comes back with the drink she didn't want, and it's like 'Vicky, what the hell?' So I was like 'She's moved on to better things, man. Get over it'. So he rounded on me, like he was gonna take a swing. I just stared him down. He backed off.\"\n\n\"Jesus, what if he had taken a swing?\" Carrie was staring up at her with awe. That kind of made me mad, not sure why.\n\nMitch just shrugged. \"He was drunk. I'd've had him singing falsetto and hopping up and down in two seconds.\"\n\nI gave a derisive laugh as I sat down and put the soles of my feet together in front of me, legs in a butterfly position.\n\n\"You don't think so, Spencer?\"",
        "\"I didn't say anything.\" I intentionally looked away, but I could see Mitch shake her head.\n\nCarrie was just grinning. \"So was she very appreciative?\"\n\n\"You could say that. After the jackass left she leaned forward and asked 'What do I owe you for my rescue?' I just said that I'd settle for a dance. She was MORE than happy to oblige.\"\n\nI scowled at her. \"Another notch on your bedpost. You must be so proud.\"\n\n\"She left happy. How was true love with Mr. GQ last night? Did he ring all your bells?\"\n\nMy mouth just hung open, and I felt like I'd been stabbed through the heart. I took a deep breath and stood up. \"That's none of your damn business.\" I turned on my heel and stomped off back toward the locker room, grabbing my bag and wiping a traitorous tear from my eye. I was out the door and down the walk moments later, turning through a quad back towards my dorm.\n\n\"Spencer! Hey, Spencer, wait up.\" It was Mitch, I could hear her running to catch up.\n\n\"Go away, Mitch.\" I tried to walk faster, my arms crossed protectively over my chest.\n\n\"Cindy, please.\" The sound of my first name made me stop, but I couldn't arrest the steady flow of tears. She caught up to me, but I still didn't turn around. \"Cindy, I'm sorry. I wasn't trying to upset you. Really.\"\n\n\"Thank you.\" I made myself look at her, and those lustrous blue eyes were heavy with real concern. I always assumed she didn't like me. So why was she here?\n\n\"Are you okay? Did something happen with Ethan last night?\"\n\nMy lip quivered, and I looked over my shoulder towards the dorm where the whole debacle had taken place.\n\n\"Okay, Okay, never mind. You don't have to tell me. Besides, you didn't hear the end of my story.\"\n\n\"So you didn't sleep with her?\"\n\nNow it was Mitch's turn to look embarrassed. \"No, I did, but when I woke up she was getting dressed. I asked if I could call her, and, well, she said 'no'.\"\n\n\"What?\" I had this idea in my head that once a girl gave in to Mitch's charms, she was probably converted for life, with Mitch being the one doing the leaving. \"Why not?\"\n\n\"She said it was great, but she wasn't a lesbian. Which is odd, given what we'd been doing just a few hours before.\"\n\n\"I'm sorry.\"\n\n\"Yeah, well.\" Mitch shrugged. \"C'mon, how about we go back, pump some iron, and forget all about our problems?\" She stepped beside me and put her arm around my shoulders. \"I promise I won't talk about it any more.\"\n\nI looked up into her beautiful blue eyes. \"Are you capable of talking about anything else?\"\n\nThat made Mitch grin. \"Sure, I could give you a rundown and critique of Professor Lieberman's assorted toupees from this week, or repeat some of the asinine questions that one stupid kid asked in Freshman Comp. Ooh, or I could tell you about how shitty I'm doing in College Algebra this semester. You'd enjoy that.\"\n\nThat made me giggle. \"I thought you took that last semester?\"\n\nMitch looked off into the distance. \"Yeah, I did. And yet....\"\n\nWe started walking back toward the gym. She kept up a string on inane topics, each one making me laugh. She also didn't take her arm from around my shoulders. Strangely enough, it never occurred to me to mind.\n\n***\n\nAs we went through the week, Mitch ratcheted back her teasing, although she did take any opportunity to talk to me, trying to make me laugh. She usually succeeded. I think she was trying to make sure we were Okay. It still flabbergasted me that she cared at all.\n\nOn the court, though, we were quickly becoming a formidable team, and I was starting to really look forward to Friday doubles practice. And I hated to admit it, but playing with Mitch was improving my singles as well. I was an analytical player. Analytics plus execution equaled success in my book. I always strove to hit the best, highest percentage shot available, and I did it well.\n\nMitch, on the other hand, hit whatever shot she damn well felt like whenever she felt like it, and that drove me crazy playing her. I could never predict what she was going to do, which was exceedingly uncomfortable for my ordered, organized brain. Then it hit me, sometimes the best shot in a particular point wasn't the best shot for the match. Sometimes I needed to take chances just to stay unpredictable. Even if I lose that point, it'll pay off down the line.\n\nWhen I started doing that I was greeted with indisputable proof as to how well my teammates had been able to anticipate me, as they were frequently wrong footed when I hit that lower percentage, up the line backhand.\n\nAt the same time, Mitch would ask me questions about what I would have done in certain situations, and I could tell she was starting to think more on the court. Despite her protestations to the contrary, she was not stupid by any stretch. Truth be told, she was far more perceptive about people than I was. She could tell when an opponent was tired, or getting frustrated, or losing faith in one of their shots. And she was nearly always correct.\n\n***\n\nFinally the season was on us, and I was so nervous. Sad, because I wasn't even going to be playing varsity. The team we were facing Saturday was just a smaller, local school, one we should beat easily, but they were bringing four extra girls so we could have a J.V. match, and Coach Holiday wanted Mitch and me both to play. Even if it wasn't going to count for real, I was going to put on a Georgia Lady Bulldogs uniform, step out on a tennis court and represent UGA. Breathe, just keep breathing.\n\nSitting in the locker room before practice on Thursday I was bouncing my leg nervously. Carrie was sitting just a few feet away, already wearing her game face. She was playing number six singles, so her match was for real, and she'd beat out two upperclassmen to earn that spot.\n\nI didn't want to bother her, so I just went back to staring at my locker. I was so lost in my own thoughts I didn't even hear Mitch until she plopped down next to me.\n\nI looked at her. \"You ready for this?\" My brow crinkled, she did not seem her usual self.\n\n\"I guess. Probably be my only chance to play, so might as well enjoy it.\"\n\n\"You OK?\"\n\n\"I'm fine. Let's go.\"\n\nOnce we got on court it was very clear that Mitch was not fine. While we were warming up she missed an easy forehand, whacking it into the net. That wasn't terribly unusual, but her throwing her racquet down afterwards was. She was out of sorts for the whole three hours, stomping around like a saber-tooth tiger with a fang-ache.\n\nI let it go throughout the practice, just pretending that nothing was wrong. She fended off several concerned inquiries from other players and two assistant coaches with a surly dismissive attitude that was very unlike her. But I was still sure she did actually want to talk about whatever it was. And weirdly I got the sense from her escalating bad attitude that she wanted to talk about it with me.\n\nAfter we had showered she was sitting by her locker, so I sat next to her.\n\n\"You gonna tell me what's going on?\"\n\n\"There's nothing going on.\" She stuffed her practice outfit back in her bag with far more violence than it required.\n\n\"Uh-huh. Come on, I'm your partner out there. You can trust me.\"\n\n\"Yeah, you won't have to worry about that much longer. Should be happy about that.\" She grabbed her bag and headed toward the door as I called after her.\n\n\"What the hell is that supposed to mean?\"\n\nShe didn't slow down, banging through the door with vehemence. I chased after her, the situation reversed from a few weeks ago.\n\n\"Mitch!\" She slowed, but kept going. Gosh, this was stupid. I did my best to channel my father, since when he spoke people listened. \"Damn it, Michelle Kirkpatrick, you stop running away right now and get back here and talk to me!\"\n\nAmazingly Mitch stopped and turned. I stood with my hands on my hips, staring her down, meeting her angry physiognomy with a supremely pissed off look of my own. I was also trying to put a hefty dose of 'take no shit' into my face as well.\n\nMitch fumed for a few seconds, before breaking off our staring contest by looking down at her feet. She started to move back towards me, and I took pity on her by meeting her halfway.\n\n\"Mitch, what's going on?\"\n\n\"Nothing. It's not your problem.\"\n\n\"What particular part of 'partners' are you unclear about? If something's affecting your game, it affects me.\" I actually reached out and lifted her chin with my finger, feeling that strange warmth I always did whenever I touched her. \"And I'm your friend. I don't like when my friends are upset.\"\n\nThere were actual tears in her eyes, but she still managed to scoff. \"Since when are we friends? You hate me.\"\n\n\"I do not. You just, um, take a little getting used to.\" She smiled a little half smile, which made me all fuzzy inside. \"And we're friends from right now.\"\n\nThat got a real laugh. \"Spencer, you are something else.\"\n\nI put my hand on her shoulder. \"Ok, rule number one, my friends do not call me by my last name.\" She blushed and nodded. \"Number two, my friends tell me when they have a problem.\"\n\nMitch took a deep breath. \"I flunked my damn algebra test again.\"\n\n\"The class you're retaking?\"\n\n\"Yeah. I did worse on the first exam than I did last semester. If I can't pass this stupid class I won't be eligible next year. I'll lose my scholarship.\" Mitch shook her head in frustration. \"I mean, I knew I was crap at math in high school but I at least got by, y'know? And the grad student they've got teaching my section barely speaks English.\" Mitch sat down heavily on a bench \"I'm a goner.\"\n\nIt was just wrong. Mitch was supposed to be happy and sassy. Seeing her depressed like this, well it just broke me. I sat down next to her and took her hand. \"Hey, look at me. We can fix this.\" Mitch rolled her eyes, but I kept going, raising my volume. \"We CAN, and I can help.\"\n\n\"What are you going to do? Take my tests for me?\"\n\n\"No, but I'm going to tutor you. Now, is there any chance for extra credit, or anything?\"\n\nMitch took a deep breath. \"We can turn in a corrected exam for quarter credit. But even if I do I'll still fail.\"\n\n\"Doesn't matter, it's something. So you wanna hear my plan? Or do you just want to mope around until you flunk out?\"\n\n\"Alright, professor, what do we do?\"\n\n\"Well for starters you're going to put the test away and not think about it for the next two days. Then, we're going to meet up Sunday and go through your exam so you can get the bonus. Then I'm going to tutor you twice a week.\"\n\n\"Seriously? Why would you do that?\"\n\n\"I told you, we're friends.\"\n\nShe gave my hand a squeeze. I'd forgotten I was still holding it. \"Thanks, Cindy, that, um, it means a lot.\"\n\n***\n\nAs I lay in bed that night I stared at my hand. When Mitch had let it go I'd felt a definite feeling of loss. It'd been so weird, seeing her vulnerable like that. I needed to help her. The thought that she might leave, that I'd never see her again, it made me feel sick inside. I remembered the way she'd smiled at the end. It's too bad she insisted on wearing her hair so short and with such masculine clothes. She really could be very pretty, just a little bit of make-up, maybe some lip-gloss. I mean those eyes were incredible, and that smile, damn.\n\nA hand slipped under my top, sliding up and touching the base of my breast. My eyes closed in pleasure, Mitch's face grinning shyly across the bench we'd shared, her hand warm in mine. She was leaning closer, and so was I.\n\nMy eyes snapped open, and I pulled out from under my top. That was weird. Ethan was taking me out after the match, so I tried to focus on that. As I slept, however, it was a pair of perfect blue eyes, rather than Ethan's soft brown ones, that floated through my dreams.\n\n***\n\nI had a devil of a time concentrating on my lessons on Friday, which was a definite tribute to how nervous I was. I'd always prided myself on my ability to concentrate, especially on subjects I didn't like. You didn't become valedictorian by slacking off in class, even at a small school like mine.\n\nBut today it seemed impossible, and by the time my calc recitation let out at three I was ready to sprint all the way to the practice facility. I made myself walk back to my dorm, packing up my bag and sitting on the edge of my bed, legs bouncing with nervous energy.\n\nPractice started in the classroom, where the coaches went over timetables and what to expect on match day. I absorbed everything they said with wide-eyed intensity. Mitch had sat down next to me, and even she was totally engrossed in what was going on. Once we made it out onto the courts the assistant coaches split up with the various varsity starters and spoke with them about what they could expect from their matchup on Saturday.\n\nMy match wasn't important enough for that I guess, so I just kept hitting with Mitch. I glanced over to the next court, and was watching Carrie, who was in deep discussion with one of the coaches. I hesitated, ears straining since I could almost hear what they were saying. I admit a bit of jealousy, as I badly wanted to be playing a varsity match.\n\n\"Spencer!\" I jumped, seeing Coach Holiday, coming up from behind me.\n\n\"Ma'am?\"\n\n\"Just letting you know that we don't really have anything on your opponent. She's a freshman, like you. We did the normal searches, but couldn't get any tape on her. You're such a solid player, I think that's an advantage. If she's been able to find anything on you, I imagine she's having a very uncomfortable night.\" Coach patted me on the shoulder, and I beamed at the compliment.\n\n\"Thanks, Coach.\"\n\n\"You're gonna do great, keep breathing, keep your feet moving.\"\n\nI nodded and bounced a little on my toes.\n\n\"Alright, I'm going to go talk to Kirkpatrick. I'd like you to work on that first serve up the T some, alright?\"\n\n\"You got it, Coach.\"\n\nShe nodded and moved to the other side of the court while I went back to hit some serves. I kept an eye on Mitch, and she was smiling and nodding along with whatever coach was saying. As soon as it was over, she let out a whoop.\n\n\"Alright, let's go! We are gonna kick some ass tomorrow!\"\n\nI smiled wickedly at her. \"Why wait 'til tomorrow? Service!\"\n\nThe mood in the locker room after practice was infectiously enthusiastic, with a bit of singing, a lot of cheering, and an unfortunate amount of dancing. Everybody was super ready for the season to start. The bad thing was that we were under strict orders not to party, no alcohol, but we still managed to have a good time at dinner, Carrie, Mitch, and I.\n\n\"So ladies, what are we going to do tonight?\" Mitch flopped down on the bench next to us.\n\nWe ended up settling for pizza and a movie back at Mitch's. Her roommate was dating a townie, and basically lived in her boyfriend's apartment on the weekends. We decided to watch 'Wimbledon', the most tennis-y movie we had access to.\n\nI smirked at Mitch. \"It's got straight romance in it. You gonna be OK?\"\n\n\"Hell yeah, Kirsten Dunst. That girl is Dee-licious. And a shower scene.\" Carrie and I both laughed. Carrie climbed into Mitch's desk chair and began to divvy up the pizza while Mitch started up the movie. I crawled onto the foot of Mitch's bed, which made me feel a little odd, especially when she bounced over next to me.\n\nWe ate and watched, and I was very aware of Michelle's presence next to me. I mean, it wasn't anything she did, she laughed at the movie and made snarky comments about the unimpressive realism of the tennis scenes. She never tried to touch me, and the closest thing to flirting I noticed was when she asked me if I wanted another soda. Maybe she sat a little closer to me, and maybe she looked over when I spoke, and maybe I did blush some when she glanced at me.\n\nThe movie finished a little after ten, and Carrie and I were walking together back to our dorm.\n\n\"You and Mitch seem to finally be getting along.\"\n\n\"Yeah, playing together's helped. I guess she's not as bad as I thought.\" I hesitated. \"I'm gonna start tutoring her in Math.\"\n\n\"Really?\"\n\n\"Yeah, she flunked an exam. That's why she was in such a temper the other day.\"\n\n\"You nervous about spending that much time alone with a lesbian?\"\n\nI was lucky it was dark, and she couldn't see my cheeks redden. \"No. Why would I? She knows I'm straight.\"\n\n\"Ha, like that's ever stopped her.\"\n\n\"She wouldn't do that.\"\n\nCarrie just kept walking. \"Yeah, you're probably right. Besides, it's not like she'd get anywhere.\"\n\nThat made my breath catch in my throat. Carrie was right. She wouldn't get anywhere. But she wasn't going to try. I wasn't sure how that made me feel.\n\n***\n\nI woke up the next day focused, ready. It was match day. I got to the locker rooms thirty minutes before we'd been told to, jumping onto one of the stationary bikes to warm up. Mitch was there less than five minutes later.\n\n\"You ready, partner?\"\n\nI looked at her, her gorgeous blue eyes filled with icy fire. \"Absolutely. Let's do it.\" Time seemed to accelerate. Minutes later I was getting dressed, looking at myself in the mirror for the first time in a Georgia uniform, a white tank with a big Georgia 'G' on the front and a red skirt. Mitch was wearing the T-shirt and shorts, not surprising.\n\nThen we headed out onto the court. It was the first time I'd been on the stadium courts. We were out on the smaller set of three, but still. It helped that there was virtually no one in the stands. Of course, that no one included Ethan.\n\n\"Where's Mr. GQ?\"\n\nI spun around. \"Mitch, please.\"\n\n\"Yeah, sorry Cindy. C'mon.\"\n\nWe went out onto the court and started to warm up. A few minutes later the other team's girls came out. Mitch's face immediately intensified into something very different.\n\n\"The sheep are here. Time to get out the sheers.\" She spun her racket in her hand, and despite my disappointment I couldn't help but giggle. We made our way onto the court and started to warm up with the other team. I did keep glancing up into the stands as we continued, and it was obvious in the way I was playing.\n\n\"Cindy, I'm not usually the one who has to tell you to focus.\"\n\n\"Right, Mitch, sorry.\"\n\nShe jogged over. \"Hey. We got a job to do. He'll either show or he won't. You can't control it now. You and me now, alright?\"\n\n\"Yeah, okay. Right, I'm okay.\" I nodded vigorously, trying to convince myself mostly. I tried to focus and went back to what I was doing. Eventually we flipped for serve and started the match. Luckily the first service game was Mitch's, so I didn't have to perform like that right off the bat. Instead I got to react to the return, which came right back to me and I was able to put away an easy volley. That helped, a lot.\n\nI jogged back to Mitch, who gave me five and whispered into my ear. \"This time into the body. Soften 'em up some.\"\n\nI arched my eyebrow, which made Mitch give me a wicked grin. \"I know. Strategy from me. You're a bad influence on me, Spencer.\"\n\nI chuckled under my breath as I jogged back to the net. Mitch was as good as her word, curving one into the other returner. She tried to get out of the way, but the serve just ate her up. She tried to get the shot up the alley, but she didn't have anything on it, so I had another very satisfying chance to smack away a winner.\n\nAfter that I was in the groove. Mitch and I dominated our match, winning the set 6-1. I didn't think about Ethan once throughout. I did notice that he still wasn't there until we were preparing for our singles match. Mitch caught me looking up into the stands.\n\n\"Hey, head still in the game, Spencer?\"\n\n\"Yeah, I just,...\" I huffed into the air. \"Why wouldn't he be here?\"\n\n\"Hey, how long have you been dreaming about this?\" She waved her hand around at the stands and the courts. I shrugged my shoulders. \"Seriously, how long have you been wanting to wear this uniform, to play for this school?\"\n\n\"Since I was eight. The first time my aunt and uncle took me to see a match here. I've always wanted to play on these courts.\"",
        "\"That's right. And how long have you cared about one Ethan Johnson?\"\n\n\"Alright, I see your point. I'm good.\" She looked like she didn't believe me, which was probably fair, but I forced myself to concentrate as I went out to warm up for my singles. The girl I was facing was a lefty, which meant everything changed. Shots to a normal player's backhand were to her forehand, and vice versa. Her serve would spin differently, and her angles would not be what I was used to. I spent the warm up recalculating everything in my head and planning what I wanted to do. It was the perfect distraction.\n\nI won the toss and elected to serve, bouncing the ball between the court and my racquet as I walked back to the baseline. I looked down at the 'G' on my top, the red skirt swirling around my legs. I was a Lady Bulldog, a tennis player for the University of Georgia. I would not let down my teammates, my coach, my school. I felt the fire race through as I raised my eyes to the girl who had the audacity to stand across the net from me. She had no chance.\n\n***\n\n\"Hell, yes!\"\n\nThe smile that split my face at Mitch's whoop felt amazing. She gave me a high five, and we embraced as I laughed in victory.\n\n\"Spencer, you were awesome.\"\n\n\"I was, wasn't I?\"\n\n\"Damn right, you were. She's still wondering what hit her.\" I tried not to look too exultant, but it was hard. It had taken a few games to get used to the way her ball spun, but I did, and I was able to be surgical in some up the line rallies, forcing her to stay on her backhand, which was definitely a weaker shot for her. Add to that the fact she didn't like coming to the net, I was able to keep her on a string.\n\nDuring every changeover I was able to watch some of Mitch's match, and she also seemed to have things well in hand, her power simply overwhelming her smaller opponent. Back in the locker room Coach Holiday was very complimentary, and the rest of the girls, who were busily preparing for their far more important matches, each gave us an ovation.\n\nIt wasn't until I'd sat down in front of my locker and taken a few deep breaths that I remembered Ethan had never shown up to my match. I pulled my phone out from my bag.\n\nEthan -- Hey babe. Can't wait to see you play!\n\nThe look I gave my phone could likely have curdled milk.\n\nMe -- You missed it. It's over. It was at ten.\n\nEthan -- What? No, I checked, it's at two, on the website.\n\nMe - That's varsity. I don't play then. I played earlier, like I told you.\n\nThere was a pause for a minute.\n\nEthan - God you're right. I'm sorry. I can still come, we can watch the other matches with you.\n\nMe -- I'm watching them with the rest of the team. I'll text you after.\n\nWith that I stuffed my phone back into my locker with a huff, just as someone sat down next to me.\n\n\"Everything OK?\" Mitch's voice was kinder than I'd expected.\n\n\"Yeah. Ethan's not coming.\" I wiped a tear away. \"Go ahead, make a joke.\"\n\n\"Ok. What do you call a girl standing in the middle of a Tennis Court?\"\n\nI turned to her, a confused look on my face. \"I don't know.\"\n\n\"Annette.\"\n\nI chuckled and smiled in spite of myself.\n\n\"When does Serena Williams go to bed?\"\n\nI shook my head.\n\n\"Tennish.\"\n\n\"Oh my god, stop.\"\n\n\"Where do ghosts play tennis?\"\n\n\"No! I refuse!\" I plugged my ears and ran out of the locker room giggling.\n\nMitch ran after me, laughing. \"C'mon, this is grade-A material!\"\n\nI couldn't help but grin. \"No it isn't. It's horrible and you know it.\"\n\n\"Maybe, but it made you smile. And that's worth it.\" There was real sincerity in her eyes. I was touched.\n\nI cocked my head to the side. \"Thanks, Michelle.\"\n\nSuddenly Mitch looked unsure of herself, and maybe a little embarrassed. It was adorable. I was struck by her genuineness. No, that's not right. Mitch was always genuine, almost to a fault. She, um, well, I think she actually cared about me, and making me smile truly did mean something to her. We really were friends.\n\nWe walked out into the stadium together. Carrie was warming up on the court to our left, so we headed to that section of the stands. We sat down, and Mitch immediately put her hands to her mouth and yelled out.\n\n\"Hey, Mitchell! You suck!\"\n\nCarrie turned and made a face at us while I giggled and waved. She turned back to her opponent, and I leaned toward Mitch and pushed her a little with my shoulder. \"You're terrible.\"\n\n\"Hey, can't have her getting a big head, now. That's my job.\"\n\nI laughed. I couldn't help it. Of course, once the match actually started Mitch was completely supportive of Carrie, in her typically loud and boisterous way. I, conversely, watched mostly in silence, analyzing every point. What can I say? It's just the way I'm wired.\n\nI pointed towards Carrie's opponent, who was preparing to serve. \"See, in the ad court, when she turns her foot out she's serving wide. Every time.\"\n\nMitch shook her head. \"How do you notice stuff like that?\"\n\n\"How do you not? I'm always watching for tells in my opponent's serve.\"\n\n\"So what are mine?\"\n\n\"Yours? Easy.\" I looked back down at the match. \"You know when you throw the ball up in the air?\n\n\"Yeah?\"\n\n\"It means you're serving up the T.\"\n\nMitch's face cracked into a smile and she nudged me with her shoulder. \"Brat.\"\n\nI couldn't help laughing, and we got a dirty look from Coach Holiday down on the court for talking during the point.\n\nMitch shot me an exaggerated grimace. \"We're in trouble now.\"\n\n\"I'm going to go down and see if I can get back in her good graces.\" As Carrie finished holding her serve I snuck down to the edge and signaled for Coach Holiday, who jogged over. I relayed my insight, and Coach's face went from annoyed to thoughtful. \"I'll keep an eye on it. You and Kirkpatrick are going to behave yourselves, yes?\n\n\"Yes, ma'am. Sorry.\"\n\nShe actually smiled. \"It's okay. I was eighteen once, too. You seem to be getting along, at least.\"\n\n\"Yes ma'am.\" I felt my cheeks heat up. Why was I blushing? \"It's been good.\"\n\nCoach nodded. \"You both played well today. Now go on.\"\n\nI headed back up the small stands and sat next to Mitch.\n\n\"So, did she tell you how amazing you are for picking that up?\" Mitch's tone was slightly mocking.\n\n\"Stop it. It was important.\"\n\n\"Hey, Spencer, you got a little something...\" She rubbed her nose.\n\nI stuck my tongue out at her, and we went back to watching the match.\n\nSure enough, Coach called a coaching time-out during the next changeover and Carrie broke her opponent's serve every game but one for the rest of her match by cheating one way or the other on the ad-court.\n\nCarrie won easily, and we were all in a good mood leaving the complex later. Carrie bounced up and down on her toes, the energy of her first collegiate win still coursing through her veins. \"So, what are we doing tonight?\"\n\n\"I don't know about you guys, but I feel like dancing.\" Mitch bit her lower lip and started to move her shoulders to her own personal rhythm, making us both laugh.\n\n\"That sounds good to me. Cindy?\"\n\nCarrie's eyes were eager, but I gave her a non-committal smile. \"I was supposed to text Ethan after the matches.\n\nMitch harrumphed at that idea. \"Y'know, he 'forgot' to come see you play. You could just, I don't know, 'forget' to text him.\" Carrie nodded, enthusiastically supporting Mitch's idea.\n\nI shook my head. \"All right, fine. Where are we going?\"\n\nMitch put her arms around both our shoulders. \"First, we're going for dinner, because I'm starving. Kicking ass is hard work, after all.\"\n\nHalf an hour later we were at one of the local eateries sharing a huge plate of chili cheese fries while they prepared our burgers. I didn't have much money for splurges like this, but I figured this was a special occasion.\n\nCarrie washed down a bite with some soda. \"God, this is amazing. I haven't let myself have anything like this since the season started.\"\n\n\"Can't let yourself go without for too long, girl.\" Mitch smiled knowingly. \"Speaking of letting yourself indulge, how's it going with Johnny? Let him light your fire yet?\"\n\nCarrie grimaced and shook her head. \"No, it's over. Just no spark there. He's already moved on.\"\n\nI tried to make a consoling face. \"I'm sorry Carrie.\"\n\nShe shrugged. \"Maybe I'll meet someone tonight.\"\n\n\"I'll point any eligible girls your way.\" Mitch smirked.\n\nCarrie shook her head. \"Gee, thanks, Mitch, but that's not going to help matters.\"\n\n\"If you're sure...\"\n\n\"She is.\" I interrupted in a huff. \"You're just going to have to accept that we're straight, Michelle. I know it pains you to hear that.\"\n\nMitch gave a resigned sigh. \"It does. I just feel so bad for both of you, having to have sex with men.\" She made a face, like a three-year-old being forced to eat her cauliflower. \"Maybe someday you'll come to your senses.\"\n\nWe headed out to a local club with live music and dancing. After getting our hands stamped as minors we entered and I was a little overwhelmed. I'd been to a few, well, I guess you'd call them country-dances as a kid, but I'd never seen anything like this before. The lights were low, but there was plenty of neon glowing from the ceiling and from people on the dance floor itself.\n\nLuckily it was still relatively early, so we were able to find a table. What really worried me was the possibility of Mitch trying to score booze, as she seemed the type. Sure enough she headed off toward the bar, where she shouldn't be able to get anything stronger than Coca-Cola. I asked for a Sprite, trying to be very clear that I wasn't in the mood for any playful spiking of my drinks.\n\nI tried to relax and take in my surroundings, watching the mass of young bodies dancing on the floor. The girls were wearing impossibly short skirts, bodies glistening with sweat and showing more skin than my admittedly conservative bathing suit did. The guys I saw were wearing looks of naked hunger that sent a shiver down my spine, and not in a good way. I shouldn't have to worry about that. I had a boyfriend. Where the hell was Mitch?\n\nI looked toward the bar where I saw her chatting with a girl in a halter top with long dark hair and a big tattoo on her shoulder. Eventually the bartender slid three glasses next to her. Mitch picked them up and nodded toward our table before standing up. She leaned forward and whispered something in the girl's ear, which made her smile and nod.\n\nWhen Mitch got back to our table she dropped off our drinks. \"Alright ladies, have fun, I've got to get back.\"\n\nI looked at her askance. \"Already? Geez, Mitch. That was fast.\"\n\n\"Spencer, she was eyeing me all the way to the bar. And she just wants to dance. It's why I came, after all. Bye.\"\n\nI watched her swagger back toward the girl, feeling my mood sour as she went. She smiled as Mitch approached, standing and slipping her arm into my friend's as they made their way to the dance floor. They disappeared into the mass of bodies, and I forced myself to look away and take a sip of my Sprite. It tasted normal, so there wasn't anything funny there, at least.\n\nCarrie was moving to the music in her seat, and her gyrations seemed to summon a couple of guys like magic.\n\n\"You want to dance?\" One held his hand out to Carrie, and she took it and disappeared into the maw. His buddy looked at me with a smile that I'm sure he thought was winning, but it just made me sick inside.\n\n\"I'm sorry, I'm just here with my friends.\"\n\n\"They're out dancing.\"\n\n\"No, thanks.\"\n\nHe held up his hands. \"Okay.\" With that he disappeared, leaving me to my bad mood.\n\nAfter fifteen minutes Carrie reappeared. \"Are you still sitting here? Come dance.\"\n\n\"I have a boyfriend. And that is a total meat market out there and you know it.\"\n\n\"Maybe, but a lot of it is Grade A beef.\"\n\nThat made me giggle, and Carrie took my hand. \"C'mon, one dance. I'll keep my hands to myself, I promise.\" I followed her out onto the dance floor and started to move to the music. For a moment I was nervous people would think bad things about the two of us, but we weren't the only girls dancing together without being obviously 'together' by any stretch.\n\nI was just starting to enjoy myself when I saw Mitch. She was dancing with that girl still, and in a very different way than Carrie and I were. Mitch's arms were around her waist, pulling her tight, and their bodies were moving together.\n\nThey were staring into each other's eyes, and Mitch edged forward and kissed her partner. The other girl leaned into the contact, and I crashed into the guy dancing next to me. Luckily the young man was steady on his feet, and he kept both himself and me from falling. The people around us parted slightly to give us space, and I took advantage to stumble off the floor, with Carrie following me.\n\nI made it back to our table blushing furiously. I'm not sure if Mitch had even noticed me, although I'd have been shocked if she hadn't, given the commotion I'd made. Unfortunately, I had the question answered after only a few moments, as Mitch made her way over. I expected her to be laughing at me, but her eyes were just concerned.\n\n\"You okay, Cindy?\"\n\nI tried to laugh it off. \"I'm fine, just a klutz, I guess. I'm not used to all this.\" I waved at the undulating mass of humanity on the dance floor, still pulsing to the ever-present beat of the music. The girl Mitch had been dancing with was standing to the side, a concerned look on her face. Not for me, I didn't think, but she did want my friend's attention back on her. I pushed a smile across my face. \"You should go back to your friend. You looked like you were having fun.\"\n\nMitch's face told me she didn't believe me, but she didn't push the issue. Carrie emerged from the crowd a few moments later, and I had to repeat my assurances to her. Mitch drew away and went back to the girl she'd been dancing with. I watched them until they were out of sight before turning to Carrie, who was looking at me strangely.\n\n\"What?\"\n\nCarrie shook her head. \"Nothing. Come back out and dance?\"\n\nI shook my head. \"I think I twisted my ankle a little. I better sit a few out.\" I was lying, but I didn't want to see Mitch again. So I sat, listening to the music, watching the couples move on the dance floor.\n\n***\n\nI realized the next morning that I hadn't once wished that Ethan had been there so I could have had someone to dance with. I'd had plenty of opportunities, but eventually my standoffish attitude succeeded in that the guys gave up trying.\n\nI slept in the next morning. I hadn't gotten back particularly late, but I'd tossed and turned most of the night. The image of Mitch kissing that girl kept appearing in my head every time I closed my eyes. Why the hell did that bother me so much? I'd been taught from the cradle that homosexuality was wrong, unnatural, and against God's plan, but I also knew that it wasn't that simple.\n\nI couldn't imagine Michelle Kirkpatrick with a man. That would be unnatural. But still it was so difficult to think about anything else. I wondered if she'd gone home with that girl. If she had, they'd likely had a lot more fun last night than I did.\n\nI heard Lana, my roommate, gather up her toiletries and head to the showers a little before ten, and I just lay there, staring at the ceiling until my phone chimed half an hour later.\n\nMitch -- Just wondering if you're still willing to help me w/ algebra. If not I understand. LMK.\n\nI closed my eyes and let my head fall back into the pillow. I'd forgotten all about that. If I went she was going to tell me all the sordid details about that girl last night. My brain wasn't working properly yet, but I knew I didn't want that.\n\nMy phone chimed again.\n\nMitch -- I REALLY need your help, though. She concluded with the brain-exploding emoji, and I couldn't help but laugh. I'd promised, so I texted back that I'd see her in an hour. We met at the Bulldog Caf\u00e9 for lunch, and I followed Mitch's lead by getting a burger and onion rings instead of the healthier options I usually chose.\n\n\"No salad?\" Mitch's eyes were twinkling with laughter.\n\nI blushed and repeated her own words back to her. \"There's lettuce, tomato and onion. Besides, I'm hungry, and if I'm going to try to teach you math I'm going to need my strength.\"\n\n\"True that.\" Mitch took a pull from her soda, and I laughed. I'd been dreading seeing her, but once she was near me I couldn't help relaxing. And she didn't once bring up what had happened with that girl last night. Maybe she was just trying to keep me from running out.\n\nWhen we finished Mitch nodded toward her dorm. \"So, you want to head back to my room to work?\"\n\nI shook my head \"No way, too many distractions. I'm going to introduce you to a special building on campus. It's called the li-bra-ry.\" I said the last word with as much condescension as I could muster.\n\nMitch just made a face at me. \"I know what a library is. Where it is, not so much.\"\n\nFifteen minutes later we were ensconced at a table on the fourth floor of Main Library. You should have seen Mitch's eyes bug out when I started drawing on the walls. She really hadn't been here much, and had no idea they were all huge dry erase boards.\n\nShe'd had the most trouble on her original test in solving quadratic equations, particularly with factoring. After we corrected her test, I quickly made up a few additional problems for her to work in the style of the quadratics she'd missed in order to instill some confidence.\n\n\"See, these just take forever, and I don't know how to start.\"\n\n\"OK, you start with this number.\" I circled the constant on the right of the three terms. \"You need two numbers that multiply to be this number, and add to this number.\" I pointed to the coefficient of the x term. \"Assuming that the x squared coefficient is one, that is. It was on this test, so we'll stick with that. So the constant here is eight. What numbers multiply to get eight?\"\n\n\"Two and four.\"\n\n\"And?\"\n\nMitch shrugged and I tried to keep from looking frustrated. \"You missed the obvious one. It'll always be there.\"\n\n\"Oh, one and eight.\"\n\n\"Right, don't forget that one. Now, is the eight in the equation positive or negative?\" I continued to walk her through the questions to ask as she attempted to factor the quadratic, and I had her solve several additional problems I invented on the spot, forcing her to walk through the steps one at a time. True to her personality, Mitch was not a one at a time sort of girl, and she always wanted to power through and skip to the end.\n\n\"Look, the better you get at these, the more you'll be able to skip steps, but for now,\" I put on my best Mr. Miyagi imitation, \"first learn walk, then learn fly. Nature rule, Mitch-san, not mine.\"\n\nMitch cracked a huge smile, holding back her laugh for only a second. \"You're terrible at that.\"\n\nI laughed too, getting a stare from someone working nearby. I didn't feel too bad, this section was kind of designed for groups. If they wanted quiet there were other places they could go. \"I know, but I'm still right.\"\n\n\"Besides, I never pegged you for a Mr. Miyagi. You're a lot more of a Willow.\"\n\n\"Are you saying I'm weepy?\"\n\nMitch's face screwed up in confusion. \"What?\"\n\n\"Weepy. A weeping willow. You called me a tree.\"\n\nMitch rolled her eyes. \"You're killing me, Smalls. Not the tree, Willow Rosenberg. Alyson Hannigan's character from Buffy.\"\n\nI smiled weakly and shook my head, indicating I didn't know whom she was talking about. Mitch just stared at me incredulously. \"Seriously? You've never seen Buffy the Vampire Slayer?\"\n\n\"I've heard of it. It has, like, demons and witches and things in it, right?\"\n\n\"Um, yeah.\" Mitch sounded like mine was the dumbest statement in the history of mankind.\n\n\"So it wouldn't have been allowed in my house.\"\n\nDisbelief was etched across Michelle's face. \"Okay, we have to fix this. I can't be friends with someone who's never seen Buffy. Do you have any moral objections to witches and demons and stuff?\"",
        "\"No. Not fictional ones, at least.\"\n\n\"Good, let's go.\"\n\n\"Huh? Where?\"\n\n\"We're going back to my room and you're watching the first two episodes of Buffy with me.\"\n\n\"Did you finish correcting your test?\"\n\n\"Oh, right, the test.\" Mitch had the decency to look sheepish.\n\nI glanced at my phone. We'd been going at this for almost an hour, and I didn't want to burn her out. \"Okay, look. Give me another solid thirty minutes, and I'll let you show me your silly T.V. show.\"\n\n\"Deal.\"\n\nIn the end we went for forty-five minutes, and Mitch had a spotless re-work of her exam, so she'd get all possible bonus points. She'd actually really buckled down, and, well, I was proud of her.\n\n\"This is good, right?\" Mitch held it up, a little dumbfounded.\n\n\"Yeah. You said quarter credit, right? So that should take your forty-four to a fifty-eight, only two points off of passing. You do well on your next one, and you'll have a solid grade going.\"\n\nMitch shook her head. \"Yeah, but the second exam is where I bombed out last semester.\"\n\n\"We will get you ready. I promise. But you did well today. When do you have math?\"\n\n\"Tuesday and Thursday at eleven, recitation on Wednesday at nine.\"\n\nWe compared schedules, and came up with Wednesday after lunch as a good time to start. \"Okay, go to class, take notes, and at least give the homework problems they give you an honest try, and we'll go through them.\"\n\n\"Okay. Now, you and me and Buffy.\"\n\nHer face was shining with excitement, and I couldn't help but laugh. \"You are such a dork.\" We left the building, walking back towards her dorm. \"So what about this show is so special?\"\n\n\"Oh my god, what isn't? The writing, actors, how Sarah Michelle Gellar kicks ass while looking super hot.\"\n\n\"She's not gay, is she?\"\n\n\"Depressingly no, although her taste in men is... problematic. She'd be happier as a lesbian. Like most women.\"\n\n\"They would not. I'm happy being straight.\"\n\n\"Spencer, just like with Buffy, you have no idea what you're missing.\" There was just a little naughty husk in her voice, and I could feel my ears burn. I pushed my hair back over my ear and looked down as we walked, not speaking for fear my voice would break.\n\nShe'd apparently got enough of a reaction out of me, and her voice returned to normal as she started talking about the various characters and someone named Joss Whedon, who, in Mitch's opinion, should be nominated for sainthood. (We know now that is decidedly not true, but we didn't at the time.)\n\nAs we entered her dorm, which was coed, there were a number of people in the lobby watching a basketball game.\n\n\"Hey, Mitch, Hawks are on.\" One of the guys from the couch called out to her, his arm around a pretty brunette leaning on his shoulder.\n\n\"That's nice, but I got plans, Jimmy.\"\n\n\"I see that. Do they involve taking that pretty young thing up to your dorm room?\"\n\nI felt my anger spike at his lecherous tone but Mitch spoke up immediately.\n\n\"Get your mind out of the gutter, Jimmy. This is Cindy Spencer, she plays with me on the tennis team, and she's just a friend. Cindy, that's Jimmy, resident asshole.\"\n\n\"Fuck you, Kirkpatrick. HALO in my room tonight if you're interested.\"\n\n\"Okay. Maybe. Later guys.\"\n\nWe headed up the stairs, and I laughed about the whole thing. \"So I take it you guys are friends?\"\n\n\"Sure. Jimmy has no filter, but he's mostly okay. One day I'm going to take that girlfriend away from him though.\"\n\n\"You will not!\"\n\nMitch grinned at me. \"No, probably not. Besides, Ellie is like, for real straight. I don't get a curious vibe off her at all.\"\n\n\"Can you usually tell?\"\n\n\"Yeah, I think so. It's this one.\" She pointed to a door, which had a rainbow flag on the outside. Mitch closed it behind us, and I realized I was suddenly in a room with a lesbian, and that room had beds in it. Shit, Cindy, play it cool. She'd just told everyone you were just friends. She's not going to make a move. And she wouldn't get anywhere if she did, right?.\n\n\"What do they call it? Gaydar? So that's a real thing?\"\n\n\"Depends on who you ask, and it isn't one hundred percent anyway. Still, I'm almost always right.\"\n\nI took a moment to look around Mitch's room. To be honest I'd expected it to be a mess, with clothes thrown around and books and pizza boxes everywhere. But it wasn't. It was reasonably neat and the bed was made. She had pictures on the shelves, several of her in a purple and white tennis outfit, one surrounded by others dressed the same way. There was also one of a middle-aged couple that were obviously her parents, along with a few others. It was kind of strange, seeing that Mitch had family and friends. It made her larger-than-life image more real, somehow.\n\nI sat down in her desk chair. \"Anyone I should watch out for on the team?\"\n\nShe gave me that little half smile of hers. \"Wouldn't you like to know. Let's put it this way. I will bet you dinner at a fancy restaurant that Carrie dates a woman before she turns thirty. Like a serious date, even a relationship.\"\n\n\"You're lying!\"\n\n\"I get that feeling. She wouldn't even consider it now, but she will.\"\n\n\"That's crap and you know it.\" I almost asked her about me, but honestly I didn't think I wanted to hear the answer. I wasn't even sure what I wanted it to be. Mitch threw a bag of popcorn into the microwave, and while it was cooking she pulled out a blue DVD box from her little closet.\n\n\"This, Cindy, this is the good stuff. Well, I mean, the best stuff comes a few seasons later, but this is still good stuff.\" She slipped the disc into the player before pulling the now inflated popcorn bag from the microwave and emptying it's contents into a plastic bowl and flopping down onto her bed with a remote.\n\n\"Do I get any popcorn?\" I made a little pouty face.\n\n\"Come sit by me and you can have as much as you want.\" I had a bad angle at the TV from here anyway, so I complied. I was expecting the same odd warmth I felt anytime I was near Michelle, but somehow, here in her room, it was even stronger. But it wasn't scary.\n\nMitch held out the bowl and I took a handful as I settled in next to her. She pressed play. I saw the episode was called 'Welcome to the Hellmouth' before the title screen dissolved away. \"What's a Hellmouth?\"\n\n\"You'll find out.\"\n\nI don't know if you've ever had someone play a show or a movie that they love for you. You can almost feel their desire for you to like it as much as they do rolling off them. They'll glance at you during the parts that they like, just to watch your reaction, or try to embellish the show with facts or tidbits they've gleaned over the years. And you feel almost obligated to return their enthusiasm for whatever they're sharing with you. It can be really awkward, and to be honest I was kind of dreading it.\n\nHowever, the show was really good, and Mitch's obvious enthusiasm was infectious, just like always. What was it about her that just made me smile? Six hours and one pepperoni and mushroom pizza later we'd binged eight episodes. I didn't want to think about all the work I hadn't gotten done this afternoon, but I'd had so much fun. We'd ended up under a single blanket, and I was leaning against her, her arm around me as we watched the show. She was so warm, and I didn't want to go home.\n\nMitch stood up and disposed of the empty pizza box, and I looked across the room at the other empty bed. \"So your roommate is coming back?\"\n\n\"Not 'til tomorrow. She won't come back from her boyfriend's before class starts Monday.\" She didn't sit back down, instead glancing at the clock. \"It is starting to get late, though, and I've got an eight o'clock tomorrow.\"\n\n\"You kicking me out? I didn't see that coming.\" I gave her a wide smile, trying to put comedy into my voice, but her face was hard to read.\n\n\"C'mon, get real.\"\n\nI cocked my head and tried to keep my voice light. \"What? I'm not pretty enough for you to try to seduce?\"\n\n\"Cindy, you're beautiful, but you know I wouldn't do that, right? We're friends, and I know how you feel about it.\" She plastered on a smile. \"So you, Spencer, are safe from my charms.\"\n\nI laughed, but even I could hear the seriousness in her voice. \"I'd be impervious anyway.\"\n\nShe grinned wickedly. \"So you think.\" The playfulness was back in her voice, and that made me happy.\n\n\"You're right, though, it's getting late.\" I stood up. \"So Wednesday afternoon before practice?\"\n\n\"Yeah. I'll meet you at the library. Since I know where it is now.\"\n\nHow did this girl always keep me laughing? I looked into her eyes, so incredibly blue. I got lost for a second before she broke the silence. \"Thanks, Cindy.\"\n\n\"You're welcome, Michelle.\"\n\nShe opened her arms for a hug, something we'd never really done before, other than quick celebratory ones on the court, of course. But this was different, and I knew it, but I never hesitated, wrapping my arms around her as I went into her embrace. She held me for just a moment, and something inside of me thrilled at the simultaneous strength and gentleness of her arms. I rested my head on her shoulder, and she smelled amazing, although I could never have described her scent.\n\nAfter a moment we separated and I felt a real sense of loss. I nodded to her and headed out into the evening, my heart beating faster than it should have been.\n\n***\n\nI let Ethan take me out to a late movie after practice on Tuesday. It was weird, because when I mentioned that I had plans that evening Mitch didn't tease me about it at all. Maybe she was trying to be good because I was helping her with math. She didn't press for details like Carrie did, but she did get surlier the more I talked about it, so I dropped it. For some reason teasing her with Ethan had lost a lot of its fun.\n\nHe let me choose the movie, but I didn't force him to sit through the biggest chick flick on the roster. We sat near the back and he put his arm around me, and I didn't like it. Mitch had done the same thing on Sunday, and it had felt so good. Why did this feel so different? I mean, it wasn't wrong, he wasn't trying to cop a feel, or anything like that, but I just wished he would stop. I couldn't let him know that, though.\n\nI could barely concentrate on the movie. When it was over I told him that I had a headache, and asked him to take me back to my dorm. He was obviously disappointed, but he did promise to be on time for my match on Saturday, letting me know he was planning on taking me out after. I doubted I'd get out of sex a second time. The thought of it turned my stomach a bit, but I pasted on a smile and let him kiss me goodnight.\n\nMitch and I met up as planned on Wednesday afternoon, and she started right into her algebra problems without any small talk. I'd been mentally preparing to deal with her pointed inquiries all day, and I guess it threw me a little, which Mitch picked up on almost immediately.\n\n\"You okay?\"\n\n\"Yeah, it's nothing. So, the logarithm here has to be separated to one side so you can dig out the variable.\" I pointed her back to the page. Over the next fifteen minutes I made three basic algebra mistakes, the last of which made Mitch put down her pen and sit back in her chair.\n\n\"What is going on with you?\"\n\n\"Sorry. I'm just off today. I don't know why.\"\n\n\"Bullshit. Sorry.\" She grimaced as my cheeks reddened at her French.\n\nI made myself smile. \"It's okay. It doesn't have anything to do with you. Promise.\"\n\n\"I remember someone telling me that anything that affects one partner affects the other, or something like that?\"\n\n\"Only if it affects my game.\"\n\nMitch pointed to my last mistake. \"I'd say it is. And since you're tutoring me...\"\n\nI breathed out. \"It has to do with Ethan. You sure you want to know?\"\n\n\"Did he do something wrong? 'Cause that would give me a happy.\"\n\n\"A happy? Who talks like that?\" I was smiling now. I couldn't help it.\n\n\"I need to show you more Buffy.\"\n\nShe was looking at me, her bright blue eyes sparkling with joy and mischief. They were mesmerizing, and I just wanted to be close to her.\n\n\"Okay. After practice?\"\n\n\"You don't have studying to do?\"\n\n\"Nothing that can't wait until tomorrow.\"\n\n***\n\nFive hours later we were sitting on her bed. I was next to her, and she'd covered us with that big blanket of hers. My head was on her shoulder, and I found myself nodding off. The episode we were watching was called 'Nightmares,' where a little boy in a coma was causing everyone's deepest fears to manifest.\n\nSomehow it made me a little uncomfortable. I wondered what my deepest fears were. I wasn't afraid of spiders or clowns or anything like that, at least not that I knew of. Mostly my nightmares were about being chased, hiding from people who wanted to hurt me, but I never knew why. I hadn't had a bad one since the season started, but something told me one was coming. Maybe it was just the show.\n\nMitch put her arm around me. God, that felt nice. Warm.\n\n\"So, are you going to tell me what happened with Ethan last night?\"\n\n\"You could tell?\"\n\n\"Yeah. I don't like it when my friends are sad.\"\n\n\"I'm not sad.\" I looked down, and Mitch made a noise that told me she didn't believe me. \"It's nothing, I just, I'm not sure it's working.\"\n\n\"So break up with him.\"\n\n\"But it should be working! I don't know why it isn't. I mean he's handsome and sweet. He's really nice to me.\"\n\n\"He forgot your match.\"\n\n\"Yeah, but he was really sorry about that. He took me out for a nice night yesterday.\"\n\n\"How's the sex?\"\n\nMy eyes got wide. \"Mitch!\"\n\n\"What? That's important.\"\n\n\"It's fine.\" For crying out loud, I didn't even believe myself.\n\n\"Just fine? Has he ever, um, what would you southern belles call it, shivered your timbers?\"\n\nI burst out a laugh. \"That is not what I would call it. That'd be like a sailor or something.\" I couldn't help my voice getting smaller. \"And that's none of your business.\"\n\n\"So I'm going to take that as a no, then.\"\n\n\"It's hard for some girls.\" I'd heard that at least.\n\n\"So I understand. They're called 'straight girls'. I've personally never had that problem, coming or going.\"\n\n\"I bet you haven't.\"\n\n***\n\nAs I lay in bed that night I thought about it. Mostly I was avoiding going to sleep, because that episode had freaked me out. I remembered my last bad nightmare. I'd woken screaming, my pajamas and sheets soaked with sweat, and I didn't want it to happen again. So I was thinking about things.\n\nMitch was probably blowing smoke about the orgasm thing. I mean, girls faked it all the time. Somehow, though, I think Mitch could probably tell. But still, I needed to figure out this thing with Ethan. He was handsome, and I was attracted to him. Because if I weren't, what would that mean? No, I had to be. I just needed to try harder.\n\nEthan made it on time to my match Saturday, and he was very supportive, cheering every point. I waved and smiled. No warm fuzzies at the sight of him, but I had to be on point for the match. Mitch mostly ignored him, trying to keep my mind on my game. Funny the reversal of roles there.\n\nThe competition was a definite step up this time, but Mitch and I were able to control our set and win six-two. For my singles match we'd been able to find tape on the girl I was playing, so I felt a lot more prepared than last week. She was a big serve and forehand, and was obviously used to overpowering her opponents. That wasn't going to work with me, though, since she didn't hit as hard as Mitch did. I had her completely frustrated after the first set, and she started over-hitting. Things went downhill for her after that.\n\nUnfortunately, Mitch had the opposite problem. She was playing someone more like me, a tactician. Mitch took the first set six-three on the strength of an early break, but her opponent had adjusted to her power and they were tied five all in the second, with momentum clearly swinging away from my friend.\n\nShe dropped the first point on her serve and let out a howl of frustration. Her opponent was bouncing on the balls of her feet, in far too good a mood.\n\n\"C'mon, Mitch!\" I hollered at her, and she turned towards me with a look that begged me to tell her what to do. I ran over Coach Holiday, who was watching with one of the assistants.\n\n\"Have her break down the forehand.\"\n\nShe wasn't convinced. \"Her opponent's forehand is solid.\"\n\n\"I know, but she's thinking too much, and the other girl's better at that. She needs a place to focus her power.\"\n\nCoach thought for a second before sending in the signal. I moved back to the fence and watched as Mitch started hitting massive, deep forehands crosscourt. Her opponent matched her shot for shot, but Mitch rose to the challenge like I knew she would, holding for six-five\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nDuring the changeover one of the coaches was talking to her, but her eyes sought me out.\n\n\"You've got this.\" I tried to say it with my eyes as much as anything, because I knew she wouldn't be able to hear me, and she nodded, never looking away.\n\nShe ran out to the far court, bouncing on her toes as her opponent prepared to serve. Mitch spun her racquet in her and took a step forward, a snarl forming on her lips. Anyone watching, including her opponent, knew she had seized the dominance, and the first serve sailed wide. Her second serve was not the strength of her game, and Mitch took a huge swing, blasting it past her opponent's reach.\n\nI whooped and clapped as Mitch's confident smile beamed across the net. I was so focused on what was happening on the court that I didn't hear Ethan come up from behind on the other side of the fence.\n\n\"Hey.\"\n\nI was so focused on the match I'd forgotten he was even there, and I jumped when I heard his voice.\n\n\"Oh, hey.\" I leaned over and gave him a hug and let him steal a quick kiss. Mitch immediately sailed a forehand long, and I turned back to her, watching her face morph into a scowl.\n\n\"I'm going to finish watching Mitch's match, then I'll meet you up in the stands after I shower and change, okay?\n\n\"Sure. You played great, by the way.\"\n\nI smiled at him. He really was trying to be supportive. \"Thanks, sweetie. I'll see you in a bit.\"\n\nHe kissed me on the cheek and went to sit down. I turned back to the court where I caught Mitch pulling her eyes away from me. She didn't look happy, and when her opponent called out the thirty -- fifteen score I knew she'd lost that last point as well.\n\n\"C'mon Mitch! You got this!\" I closed my fist and shook it, willing her to fight through. She nodded and twirled her racquet as her opponent served. The ball never knew what hit it. Mitch stepped forward and took the ball early, plastering a forehand up the line that I think left a dent in the fence when it hit. Her opponent was clearly unnerved, and she went for way too much on her next two serves, double-faulting to give Mitch a match point.\n\nThis time her opponent hit a good serve out wide, but Mitch made the return and equalized in the rally. Her power slowly drove the other girl back, and finally the rally shot that came back was too short. Mitch stepped forward and prepped to rip a forehand, but I was screaming drop shot inside my head. Her opponent had moved way back, and the near court was wide open.\n\nSomehow, miraculously, Mitch pulled back, sliding her racquet under the ball and sending just feet beyond the net. Her opponent made a futile effort to run forward, but the ball bounced a second time before she even got close. The team watching gave a whoop, and I ran out onto the court as Mitch finished shaking hands at the net.\n\nShe turned towards me with a big, self-satisfied grin on her face, and I gave her a big hug. \"That was great!\"\n\n\"You like the drop shot at the end? That was for you, y'know.\"\n\n\"I saw it! It was perfect. Proud of you.\" I was still hugging her, and I didn't want to let go, but I had to. I knew Mitch wasn't going to be the first to release. We separated, and I felt my cheeks heat up a bit.",
        "If Mitch noticed my embarrassment she didn't show it, instead just nodding towards the locker rooms. \"Let's hit the showers so we can watch the varsity matches.\"\n\nWe did just that, and once we were dressed we headed back out to the stands. A few of the girls were already gathered, but I pointed to Ethan, who was sitting half way up on the far end. \"I'm going to sit with Ethan. You want to come with me?\"\n\nNow, Mitch isn't good at hiding her emotions, but I'm not the best at picking up on things like that, either. Nevertheless, there was still an obvious discomfort in her face as she wrestled with the decision.\n\n\"No, I think I'll sit with the others. Enjoy Mr. GQ.\" She failed to keep the dislike completely out of her voice, and a part of me really wished I were going to sit with her instead.\n\nStill, we had a good time, I guess. He bought me a soda and a pretzel with a cheese cup, which I love. We struggled in the doubles, actually losing the point going into singles, with Carrie and her partner dropping their set in a tiebreak. One of our other teams got dominated, and Coach Holiday was not happy at all. At least I didn't have to bear the brunt of her displeasure.\n\nThe ladies responded, however, playing like gangbusters in the singles, only one of which was even competitive. Heather looked like she was favoring her elbow, which was taped heavily.\n\nI was far more interested in the matches than I was in my company, unfortunately. I realized I was ignoring Ethan, so I reached out and took his hand. It was good, right? Holding his hand in the cool spring air, sitting close.\n\nI tried to enjoy it, but I kept glancing down at Mitch, who was sitting with the other non-varsity players. She said something that made one of them laugh, and I felt a spike of jealousy. I wished I were down there. No. Stop that. Any girl would want to be on Ethan's arm. I leaned in and gave him a kiss, trying not to pull away from the bare trace of stubble on his cheek.\n\nAfter the match we went out to dinner, where I tried to steer the conversation away from tennis. I just wanted to get away from that whole world for a moment. I encouraged him to talk, and he told me all about the internship that he was going to be doing over the summer with his father's company in Savannah. The food was really good, and I added a piece of tiramisu to my lasagna, all the while trying to psych myself up for what was coming after.\n\nEthan drove me back to his dorm, where he had a single this semester. He leaned over and kissed me. \"Come upstairs?\"\n\nI wanted to say no, but I couldn't. If I was going to be his girlfriend I had to do this. I had to learn to do this. So I went with him.\n\nI'll spare you the details, as I don't like to think about them, but an hour later I was lying in his bed fighting back tears, trying to ignore the soreness between my legs. I'd gotten my lube on the first time, and it wasn't so bad, but Ethan had wanted a second, and it had hurt.\n\nHe was asleep, finally. I felt a tear run down my cheek. It wasn't his fault. He'd tried to cuddle me afterwards, talking about how next year he was going to get his own apartment, and we'd have a bigger bed. He'd told me how beautiful I was, and how much fun he'd had tonight, and I'd smiled at him and lied to his face about my own feelings regarding what we'd just done. It made me sick inside.\n\nI wondered, is this what my mother did? Did she go through life pretending to love my father? I'd never seen them be affectionate towards each other, beyond calling each other 'my dear' or some such thing. But there wasn't any joy in my mother's eyes when she looked at my father, no tender touches when they thought no one was looking. Maybe I was like her. Maybe I was too cerebral, incapable of loving someone.\n\nEthan was a good boyfriend, and I knew he would be a good man someday. He really wanted to make me happy. But I couldn't love him. Maybe, though, if he loved me enough, or if someone did, down the road, I could fake it enough to keep them happy. I could still be blessed with the family I wanted, and have someone to spend my life with. Someone I didn't love. Eventually I managed to cry myself to sleep.\n\n***\n\nI was still an emotional wreck when I met up with Mitch on Sunday. I'd spent all morning trying to hide it, even putting on a little makeup to cover up the redness around my eyes. It had been good enough to fool Ethan this morning, but I should have known it wouldn't work on my friend.\n\n\"Hey, what's the matter?\"\n\n\"Nothing. Look, I want you to try problems ten through fourteen. Let's see how those go.\"\n\nShe started working, but she wasn't going to let it go. \"We both know it's not nothing. Here, is that right?\"\n\nI looked over her first problem, and she'd done it correctly. \"Yeah, it is, keep going.\"\n\n\"Ok.\" She began again. \"I know this has something to do with Ethan. And I can tell you've been crying.\" She took a breath. \"Cindy, does Ethan, I mean, is he, um, mean or violent?\"\n\n\"No! God, no. I wouldn't be with him for a second if that were true.\"\n\n\"Ok. It's just, you seemed scared of him yesterday, or something.\"\n\nFor crying out loud, why did she have to be so bloody perceptive all the damn time? \"It's nothing. Let's get back to this.\" I pointed back to her paper, and we got through the rest of her work.\n\nWe followed our normal pattern of heading back to her dorm room to watch a few episodes of Buffy. We were in the second season now, and I was being introduced to the delicious evil of Spike and Drusilla. The sensuality of the pair was almost palpable through the TV. Why the hell couldn't I ever feel like that?\n\nI heaved a sigh, which I immediately regretted. Mitch reached around me and paused the episode. \"Ok, what is going on with you? You haven't been yourself all day.\"\n\n\"I'm fine.\" My voice cracked as I said it.\n\n\"No, you're not, you're upset. And I don't like it when my friends are upset.\" I was staring down at the mattress, tears threatening to slip free from my eyes. I couldn't speak, but I felt her fingers gently lift my chin. \"Hey, you can talk to me. I promise.\"\n\nI looked up into her striking blue eyes. I'd never seen them like this before. Usually they were sassy, or twinkling with laughter, or sometimes intense with joyful fire. But now they were just kind, and filled with concern for me. She brushed a hair away from my face. Her touch was so gentle, and I broke down crying. She didn't try to shush me or ask again what was wrong. Instead she just pulled me close and let me sob on her shoulder.\n\nShe wrapped her arms around me and I did the same. I didn't for one instant worry that I was letting a lesbian hug me. I just wanted my friend to hold me, because when she did everything felt better, and I let the misery flow out.\n\nMichelle stroked my hair as I wept, and I eventually quieted down. I didn't want to pull away. I just wanted to stay here, where it was warm and safe.\n\n\"Cindy? Tell me what's going on?\"\n\n\"It's Ethan. I, um...\" I searched for the words.\n\n\"You said he didn't do anything, he didn't hurt you. Is that not true?\"\n\n\"Not on purpose. I mean, he took me to dinner, and then, um, he ah, asked me up. Last time I told him no, so I had to this time. God, it sounds so stupid out loud. You're going to laugh at me.\"\n\n\"No I won't, I swear. Hey.\" She turned my face towards hers. \"Look, I know I can be a bit of a goofball, and that probably drives someone so naturally intense insane sometimes, but I can be serious. See?\" She furrowed her brow, narrowed her eyes and thinned her mouth. \"Serious.\"\n\nI laughed in spite of myself, and I couldn't keep smiling.\n\nMitch took a breath, and her face really did get serious. \"So he took you up to his room. You had sex?\"\n\nI nodded miserably, the tears flowing again as I spoke. \"And it hurts, Mitch. It hurts so much, and I hate it. I have to use, um, stuff so that it's even tolerable. And last night he wanted a second time and...\" I broke down again, and she pulled me in close.\n\n\"I'm so sorry, Cindy.\" She held me for a long time until I quieted down, finally whispering in my ear. \"We're going to figure this out, but I need to ask you something, okay? You have to promise to tell me the truth.\" I nodded, and she looked me in the eye and continued. \"Did you say no? Tell him to stop?\"\n\nI'd never seen her so intense, and if my answer had been different, looking back I don't know what she would have done. \"No, I didn't. He didn't rape me, Michelle. I mean, it kinda feels like he did, because I wanted him to stop, but he didn't know. He had no idea. He's not a bad person.\"\n\nMitch's eyes relaxed some. \"Okay. So when you start, you just never get wet for him?\"\n\nI felt my cheeks burn as mortification knifed through all the other emotions I was feeling. \"Mitch?!\"\n\n\"Hey, if you want someone to help, you're going to have to talk about it. When a woman gets aroused, her body produces lubricant. Does that not happen for you?\"\n\nI grimaced and shook my head 'no'. \"I think there's something wrong with me.\"\n\n\"Maybe. Does it happen when you masturbate?\"\n\nI gulped. \"Usually, yeah. If it goes anywhere. I don't do it much.\"\n\n\"What do you think about?\"\n\n\"Nothing. Just the feelings. My hands touching me. God, you're not going to tell me I'm a lesbian, are you?\"\n\nShe got an evil look on her face and popped her eyebrows a couple times.\n\n\"Mitch!\" I tried to look outraged, but I couldn't.\n\n\"Sorry, I'm sorry. Look, Cindy, just because you're not attracted to Ethan does not mean you're a lesbian.\"\n\n\"But I am attracted to him! He's handsome, and kind, any girl would be attracted to him.\"\n\n\"You like him. That's not the same thing. I like Jimmy. Doesn't mean I want to have sex with him.\" Mitch shifted on the bed. \"Look, Cindy, you're only nineteen years old. You don't have to be having sex if you don't want to. You don't ever have to have sex if you don't want to. Ever. Not with anyone, not for any reason.\"\n\n\"But I do want to.\" Or I wanted to want to. I wanted to make him happy.\n\nMitch looked like she didn't believe me, and I didn't blame her with how small my voice had gotten. \"In that case, maybe you should talk to a doctor. And talk to Ethan. If he really cares about you, he'll understand.\"\n\nI nodded. \"Okay.\"\n\nMitch smiled at me and nodded toward the screen. \"Do you want to keep going?\"\n\n\"Yeah. Thanks.\" Mitch pulled me into another hug, and God it felt good. She was so gentle. I didn't pull away, instead just turning in her arms so my back was to her. She didn't say anything, but she pulled a blanket around us before wrapping her arms around my middle as I leaned back against her. I closed my eyes and just felt her warmth. This was so nice, and, as she restarted the show, I knew that everything was going to be okay.\n\n***\n\nThe varsity struggled again the next Saturday, we managed to win, but we lost the doubles for the second week in a row, and Heather had to retire five games into her match. Luckily I didn't have to make excuses that night with Ethan, as Nature was providing her monthly reprieve from male attention. I was still planning on talking with him, though, and I had an appointment at the clinic to speak to a female NP. I was feeling confident that I was going to be able to get past this.\n\nI knocked on Coach Holiday's door after practice.\n\n\"Come in!\"\n\nI entered to see Mitch already sitting down. \"You wanted to see me, Coach?\"\n\n\"Spencer, yes, please.\" She indicated an empty chair. I sat down, and she folded her hands.\n\n\"I just wanted to tell you both how impressed I've been with your progress so far this year, both of you. I'm very proud of each of you. Now, for the reason I asked you here. We're shutting Heather down for the rest of the year. The inflammation in her elbow and shoulder isn't getting any better, and we don't want to jeopardize her career. Which means there's a varsity spot open, and I want you to know that the coaches and I seriously considered both of you. But, this week the number six singles spot is going to be filled by Kirkpatrick. Congratulations.\"\n\n\"Thanks coach.\" Mitch's voice was stunned, her mouth hanging open. I smiled and reached out and grabbed her hand. Of course they'd chosen her, she had more upside, and I knew it. But they were going on the road to Ole Miss, an overnighter, so no JV, and I wouldn't be playing.\n\n\"Well, have a good trip. You'll do great.\" I tried to keep any disappointment out of my voice.\n\nCoach Holiday smiled. \"Oh, no, Spencer, you're not getting off the hook that easy. I still want the two of you playing doubles together. You're coming with as the first alternate, and you'll both be playing number three doubles.\"\n\nI suddenly couldn't breathe. I was going to be playing varsity tennis for the University of Georgia.\n\n\"Now, I understand there's been tension in the past, but I generally assign doubles partners to room together. If that's acceptable?\"\n\nMitch gave me a wicked grin. \"I don't know. Spencer, do you snore?\"\n\nI stuck my tongue out at her. \"Like a freight train.\"\n\nMitch laughed, and so did the coach. \"It's settled then. Congratulations, Cindy. You've earned it.\"\n\nWe left the office, and I leaned up against the wall of the hallway. I was shaking. \"Oh my God, oh my God.\"\n\n\"Hey, you okay?\" Mitch's eyes were dancing with mirth.\n\n\"Yeah, yeah I, but you! You're playing singles! Congratulations!\"\n\n\"Thanks. You're going to help me prep, right?\"\n\n\"Sure, but the coaches'll...\"\n\nMitch shook her head. \"They'll be great, but I want you. I trust you.\"\n\nMy mouth opened slightly in surprise. I was touched. \"Thanks, Mitch. Of course I'll help.\n\n\"Good. But first things first, y'know.\"\n\nI grinned at her, knowing exactly where she was going with this. \"Party?\"\n\n\"Damn straight!\"\n\nWe ended up at Last Resort, along with Carrie and a couple of the other ladies on the team. It included Heather, whose spot Mitch was taking, and she was being very supportive. I ordered a round of fried green tomatoes for everyone. Mitch initially turned her nose up at them, but I eventually got her to try one, and she admitted they were pretty good.\n\nI leaned back at one point and took in where I was, and who I was with. I was sitting with some of the top collegiate players in the country, and I was a member of the team.\n\n\"What are you thinking?\" I looked over at Mitch, who had moved next to me.\n\n\"Just that I'm really on the team. I'm going to be a real player for Georgia.\"\n\nShe reached out and put a hand on my knee. \"You were already part of the team. We all know it.\"\n\nI shook my head. \"Hm-mm. You have to play in an official varsity match to be in the record books.\" I put my hand on hers. \"And you were always going to play. You have too much talent not to.\" I looked up into my friend's kind face. She really was very pretty, especially with those incredible eyes.\n\n\"You were going to play, too.\"\n\nI smiled a half, disbelieving smile. \"Maybe. I was a lot more of a gamble. Coach Holiday only let me walk on because she didn't have to chance a scholarship on me.\"\n\n\"Cindy, when Coach told me we were going to be doubles partners, wanna know what she said? She told me that you were the smartest freshman player she'd ever coached, and if I had the sense God gave a goose I'd pay attention to everything you said and take it as gospel. Everyone here respects you. I know I wouldn't want to play you in a real match.\"\n\nI felt a tear form in my eye at her sincerity. She squeezed my hand, and I smiled at her. I noticed that we were getting looks from the others, especially Carrie, and I felt my cheeks heat up, although I don't know why. We weren't doing anything.\n\nWe made it back to the dorms before ten, which was surprising to me, at least, even though it was a Monday Night. Mitch had called her parents on the way home, and you could hear their excitement and support in the muffled voices on the other end of the line. That was not what I expected from my parents, who tolerated my athletic endeavors rather than celebrated them. My older brother played football and baseball, and my father attended every one of his games. He'd only come to a few of mine.\n\nI made it back to my dorm room, which was empty, and I pressed the icon for my parent's landline.\n\n\"Spencer residence.\"\n\n\"Hi, daddy, it's Cindy.\"\n\n\"Hello, sweetheart. It's late, is something wrong?\"\n\n\"Um, no, daddy. I just had some news. I'll be playing varsity doubles this weekend. It'll probably be live streamed if you want to watch.\"\n\n\"Congratulations. We'll try. Do you want to speak to your mother?\"\n\n\"Sure. Thanks daddy.\" I repeated the information to my mother, who also offered her congratulations before immediately asking about Ethan. I assured her he was well and lied that we were doing well. I got no honest approval until I got to talk to Charlotte, my little sister, who was very excited. She was only ten, so me playing on the big stage was very exciting for her, and that at least made me smile. My older brother Carl was also very supportive and excited when I called him after, and he promised to be watching on Saturday.\n\n***\n\n\"So, were your parents excited?\"\n\n\"Yeah, sure.\" I tried not to think too hard about Carrie's question. My parents would only be excited when I brought home a fianc\u00e9, and then, after being married a suitable time, announcing I was pregnant. Carrie's parents had been over from Atlanta for every match so far. Showing up for one of my matches would be far too close to approval for mine.\n\nI sat back in my seat on the bus. The week had been a whirlwind. Carrie, Mitch and I had to meet with one of the coaches and go through travel protocols and everything, and practice had just felt more intense knowing I was preparing for a real match.\n\n\"Are your parents going to come out for this one?\"\n\nCarrie nodded. \"Yeah, at least one of them, I think. First SEC match and all.\"\n\n\"What's up ladies!\" Mitch bounced onto the bus with her typical enthusiasm, getting high fives as she made her way back to the bus where Carrie and I were sitting. At least she'd spared me from answering the return question. She flopped into the seat across the aisle from us. \"You ready for this, roomie?\"\n\n\"Yeah. No pressure on me. If we lose our set I can blame it on you.\"\n\nMitch shrugged. \"Everybody'd blame me anyway. No biggie.\"\n\nMitch's being there made me calmer. I'm not sure how that was possible, given her endless energy, but it was true.\n\nCoach Holiday finally climbed on board, giving us all one last look over before she sat down. The bus's engine started and suddenly we were on our way. It was a six and a half hour drive to the University of Mississippi, which is a long time to be cooped up with anyone, but somehow Mitch made the miles fly by. The whole bus was in an exuberant, confident mood. Ole Miss was a team we should beat, but every year was a new challenge, and the team was focused\n\nMitch and I had spent several hours reviewing film on her opponent, who was a solid but not spectacular junior. Mitch was licking her chops at the prospect, but I had to remind her that this girl was probably doing the same thing, drawing an unknown freshman as her first conference match of the year.\n\nOn the trip we pulled the tape of Carrie's opponent up on her tablet as well, going through her strengths and weaknesses. She was up against a girl from Europe, who was also listed as a freshman, but she looked older. She was small, maybe a little above five feet, and a completely defensive player, the kind who just ran everything down and made you hit shot after shot. That type of player could be a nightmare for someone like Carrie, who didn't have massive weapons like Mitch.\n\n\"Look, she's behind the baseline again. She plays like five, six feet behind all the time.\" I pointed at the screen. \"I'll guarantee you she grew up on clay.\"\n\nCarrie looked at me. \"So what would you do?\"",
        "\"What did the coaches say?\"\n\nMitch laughed. \"The coaches said ask Spencer.\"\n\nI gave her a feigned dirty look and stuck my tongue out at her. She just grinned at me, and I fluttered inside a little. Why did that happen? I shook it off.\n\nCarrie gave me the real answer. \"The coaches said drop shots, but my drop shot isn't great.\"\n\n\"I think it'll be fine. It won't need to be perfect. I haven't seen her come to net once. I doubt she's comfortable there.\" I thought for a moment, and they were both watching me. \"Also take a little something off your shots.\"\n\n\"What!?\" Both of my friends responded the same way at the same time.\n\n\"No, seriously. Look how fast she is at getting back to the middle. If you take something off and hit some more acute angles, she won't be able to do that. It'll open up the court, and she doesn't have the power to punish you for shorter shots. Be careful though, she'll try to cut that angle.\"\n\nMitch pointed at Carrie's tablet. \"Why wouldn't she just take it up the line?\"\n\nI shook my head. \"Too risky. This girl wants to hit to the big court.\"\n\nWe talked it over for several hours, and I gave her some other pointers, like to be more aggressive on her opponent's second serve, which was already something she was planning on attacking. All in all the time went far faster than I could have imagined.\n\nWe got to the hotel, and one of the assistant coaches paired us off and handed each pair a small white envelope with card keys.\n\n\"Okay ladies, go get settled in. Dinner at seven in conference room one.\"\n\nI handed one of the keys to Mitch and began to wheel my beat up old carry-on sized suitcase toward the elevators while toting my tennis bag over my shoulder, while Mitch followed behind with her bag, an old, beat up army canvas duffel. Something about that just made me laugh.\n\n\"What?\"\n\n\"You, Michelle, are a trip.\"\n\n\"I can't have a fancy bag like that. I have a rep to think of.\" She grinned at me shaking my head. \"It's one of my dad's from when he was in service. It's all part of my butch lesbian mystique.\"\n\n\"Yeah, but I know you're just a big softie.\"\n\n\"You take that to your grave, Cindy Spencer.\"\n\nHer face was so serious, but I knew she was kidding. Funny. I wasn't usually good at reading people, but I was starting to be able to tell with Mitch. We slipped inside and Mitch closed the door behind us. I tossed my bag onto the nearer bed.\n\n\"So, are you planning to try to seduce me tonight?\"\n\nI was expecting some sort of smart aleck quip, but I didn't get one. She just shook her head. \"No.\"\n\nThe sincerity of it surprised me and I looked at her. Was she sad? Unfortunately I didn't get a chance to tell her I was kidding, as Carrie knocked on our door at that moment, checking if we were headed down to dinner.\n\nAfter eating we ended up in one of the upperclassmen's rooms watching a movie. I jumped onto one of the beds, and made room for Mitch to sit next to me, but she didn't, instead taking a chair on the other side of the room.\n\nI was surprised at how hurt I was. When Mitch and I watched shows in her room, which was becoming a regular thing, we always sat together, sometimes under the same blanket. Maybe she didn't want people to know we'd become friends.\n\nAs the movie progressed I got the distinct impression that Mitch was doing her best to not look in my direction. Maybe I was just being overly sensitive. Finally, as lights out approached, we made our way back to our room.\n\n\"Do you want the bathroom first?\"\n\nI nodded. \"Yeah, sure.\" Mitch's voice had been soft, very unlike her. \"You okay?\"\n\n\"I'm fine.\"\n\nI may not have the highest E.Q. in the world, but I knew that wasn't true. \"When I'm done we're going to talk.\" I grabbed my pajamas and headed into the little bathroom. I took my time brushing my teeth and putting my hair back into the braid I usually wore to bed. By the time I came back out Mitch was already changed and under her covers, facing the other way.\n\n\"I'm out, if you need it.\"\n\n\"I'm okay. Goodnight.\"\n\n\"Michelle?\" I couldn't keep the hurt out of my voice. \"Are you mad at me?\"\n\nShe rolled over and looked at me. \"I'd never do that to you. We're friends.\"\n\nThe thing I'd said when we'd first gotten to our room came back to me. \"Mitch, I was kidding about the seducing thing. Is that why you didn't sit with me during the movie?\"\n\n\"I thought it might make you uncomfortable, with everyone around. I know me being gay bothers you.\" Her voice was unusually quiet.\n\nMy jaw dropped open. \"It does not!\" Mitch just looked at me. \"I mean, it doesn't anymore.\" I sat down on the edge of my bed. \"You realize you're the first gay person I've ever known, right?\"\n\n\"I doubt that.\"\n\n\"I mean, that I knew was gay, that lived out. And now you're my best friend. I'd say that's growth.\"\n\nShe smirked at me, playfulness returning to her eyes. \"I'm your best friend?\"\n\n\"I spend more time with you than anyone else, even Ethan. And I look forward to hanging out with you. So yeah, I think so.\"\n\n\"Damn it, Spencer, I'm touched.\"\n\nMy face turned stern. \"What did I tell you about calling me by my last name?\"\n\nMitch laughed. \"Sorry, Cindy.\"\n\n\"I forgive you, Michelle.\"\n\nI climbed into bed, lying on my side facing my friend. \"Can I ask you a question?\"\n\n\"Shoot?\"\n\n\"Why Mitch? I mean, your parents did not call you Mitch when you were little.\"\n\nThat got a laugh. \"No, they most decidedly did not.\" She shrugged. \"When I was a kid I spent a lot of time outside with the neighborhood gang, playing ball, riding my bike, mostly with the boys. I was better than them at most sports, faster than all of them, and they always wanted me on their teams. I also kicked the ass of the ones who made fun of me for being a girl. One of them, Billy Stephens, had an old fashioned, honest-to-god tree house with a ladder and a 'No Girls Allowed' sign. So they decided to make me an honorary boy. But a boy couldn't have a name like Michelle, so they decided on \"Mitch.'\n\n\"They kept calling me that, even at school. It started to stick with the other kids. I got teased a lot about being more of a boy than a girl anyway, so I just kind of went with it. Names lose their punch if you're not embarrassed by them. And here I am.\"\n\n\"Did you, I mean, have you ever wanted to be a boy?\"\n\n\"Maybe a little when I was a kid, and I couldn't join certain teams, or got teased. Or when my aunts and uncles bought me dolls. But I'm good now. And I like having lady parts. They're a lot more fun. And it's easier to have kids.\"\n\nThat made me grin at her in disbelief. \"You want kids?\"\n\n\"Sure. Why wouldn't I?\"\n\n\"I just figured you were planning on playing the field for the rest of your life. So many curious, so little time, remember?\"\n\nHer eyes and voice got thoughtful. \"My parents met their first day of high school. Dad says he walked into his English class and there she was. He said she was glowing. He managed to work up the nerve to ask her to Homecoming, and they've been together ever since. They're so deeply in love it's scary.\"\n\n\"And you want that?\"\n\nMitch nodded. \"I don't know if it's even possible for most people. My dad always told me I'd know the one when I met her, but I'm not so sure.\"\n\nI felt a tear sting my eye at the longing in Mitch's voice. I'd never even considered she could feel that way, and that wasn't the first time I'd sold her short. I needed to stop doing that. \"C'mon, you're only nineteen. You'll find her. I know you will. You're going to make someone so happy someday.\"\n\n\"Thanks, Cindy.\" There was a note of pain in her voice, which made me sad.\n\nWe smiled at each other, but the moment was interrupted by a knock on the door. \"You ladies in there?\"\n\nWe answered in unison. \"Yeah, Coach.\"\n\n\"Okay. Lights out, get some sleep.\"\n\nWe heard footsteps move away, and Mitch climbed out of bed. \"I probably should use the bathroom.\" She did, turning out the lights when she finished. She was wearing a tank top and boxer shorts, her long legs and powerful shoulders bare. She was incredible.\n\nShe climbed onto her mattress, pulling the covers around herself. \"G'night, Cindy.\"\n\n\"Goodnight, Michelle.\"\n\nEND CHAPTER ONE\n\n**********\n\nThanks for reading rating and commenting! Also, a big thanks to Ash_legend and Rileyworks for helping edit. I always feel honored when you take time to comment, and they keep me going. And if you have any questions or more direct comments, please send me feedback."
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "romance",
        "college",
        "young",
        "teen",
        "attraction",
        "lesbian romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-girl-named-mitch-ch-01"
}