{
    "title": "Back to You Ch. 07",
    "pages": [
        "Hey Guys! Here's the seventh chapter of Back to You. Apologies for the delay as I was on vacation for most of this month. The story is winding down, so big thanks to everyone who's stuck around. Hope you guys like it. Please let me know what you think- I really appreciate it. \n\nChapter 7: Let's stay like this\n\nMatt woke up to the sound of Arrested Development playing in the background. It was one of his favorites, and only further proved the point that he and Ollie had all the same tastes. Stretching his arms out, he eased back into the couch, realizing he fell asleep sometime after getting thoroughly fucked. The mess of scattered clothes and rearranged furniture were like bread crumbs that could lead any sensible person to the scene of their crime. He called out, \"Ollie?\"\n\nOliver came down the stairs, answering, \"Right here, babe.\" Matty beamed when he saw his boy coming down the stairs, as naked as the day he was born. He bit down on his lip, watching Ollie's cock flailing about with every step. He grabbed at Matt's outstretched legs and lifted them up, making space for him to cozy up next to him. Leaning in to kiss his boy, Ollie continued, \"I didn't wanna wake you, so I went upstairs real quick to order us a pizza.\"\n\nTracing circles around Oliver's chest, Matt replied, \"My bad, I guess I was pretty spent after you fucked me.\" Ollie snickered, still not used to their new vocabulary. Matt offered, \"We can still go out and eat somewhere if you're up for it, I'm sure it's not too late to cancel your order.\"\n\nOliver reached over and ran a finger on Matt's soft nipple, \"And risk running into another...\" He looked left and then right, \"Girl?\"\n\nMatt smiled, \"Well we can't have that, can we?\"\n\nOllie squeezed down, pinching the boy's soft flesh leaving Matt squirming beneath him, \"Nope. We can't have you ripping off the heads of every girl who shows interest in me.\" He winked at the boy, \"The cops will get suspicious.\" \n\nMatt propped himself up as he flicked Oliver's nipples, \"You're a fucking ass, you know that?\", he said in between laughs.\n\nOliver pinned Matty down in one try, pushing his palms against the boy's shoulder blades until he sunk into the couch with only his handsome face peeking through the cushions. Matt let out a gasp as he fell onto the leather, forgetting that Oliver was clearly the stronger of the two. Ollie reached down and grabbed Matty's cock in his fist, knowing full well that he'd find it hard and throbbing. \"What's that about fucking ass?\" he asked, running his fingers down the boy's shaft. \n\nA fleet of moans escaped Matt's mouth as he felt Oliver close his grip on his cock. If he let himself go, he would certainly cum within seconds. Oliver had that much power over him. He looked into those warm blue eyes feeling a cold run over him, that sweet boy could be his undoing. He could feel himself break down like putty in his hands. Oliver worked his fist up towards the head and rubbed his thumb along the slit, brushing it with fresh pre-cum. His eyes zeroed in on the wet tip as he called out, \"Hard for me already?\"\n\nMatt thrust his hips into the air, forcing Oliver's hand to stroke him. He eased back into the cushions, unsatisfied, \"Excruciatingly.\" \n\nOliver raised an eyebrow, \"Such big words coming from a big boy.\" \n\nMatty shot back, \"Keep touching me like that and I'll say whatever words you want me to say.\" \n\nMatt immediately felt a wave of self-consciousness, taking his words to heart. Truth was, he'd been harboring feelings for Oliver for nearly half of his life and those three little words could come slipping out if he wasn't careful. Some of those feelings were juvenile and ill-conceived, but after being with him for what felt like months, he found certainty. He loved him: more than two best friends could love each other; more than anyone can love someone they've only been dating for a week. But he did. And he wasn't about to confess all of that here, in the middle of a hand job with a mess of blankets and pillows, waiting for a pizza on a Saturday night. He wanted it to be special. \n\nTaking the boy's jaw in his hands, Oliver leaned in and kissed him deep. He slipped his tongue against Matt's, demanding entry as he grazed his stubbled face. There was something so invigorating about the hair Matt was growing out, telling him that he was with a real man. Oliver didn't like guys, he liked Matt and only Matt. \n\nThe boys found themselves wrestling on the couch as they pressed their naked bodies together like pieces of flint rubbing against each other to start a fire. Soon, their legs and arms pushed into the crevices of the couch, looking for some sort of traction as they pushed against each other with strength muscle and determination. Oliver's hands found Matt's, intertwining their fingers like the zipper of his favorite jacket. He pushed down with his palms, feeling Matt try and keep his place, but he closed in, mere seconds of pinning the boy down. \n\nThe doorbell rang, causing Ollie to lose his grip and turn his back towards the front door. Matt saw and opportunity and he took it, pushing Oliver over to the other side of the couch and pinning him down by his shoulder blades. Oliver groaned, \"Cheap shot, Stevens.\"\n\nMatt laughed as he eased up on the boy's body. Ollie sat upright, collecting the scattered clothes on the living room floor. A t-shirt and gym shorts were all he needed to look decent enough to answer the door. He looked over to see Matt pouting like a child as he got dressed, clearly disappointed they couldn't exist in their nakedness longer. He slipped on the loose green shirt that had spent more time on the floor than it did on Oliver. Matt did the same, pulling on enough clothes to not make it obvious that they'd just fucked, and wrestled, and played. \n\n***\n\n\"You sure you don't wanna at least try it?\", Oliver asked as he pushed a slice of pizza towards Matt. The boy looked down on the comical array of pineapple, ham, jalapenos and olives, resisting the urge to gag. \n\n\"No thanks, I'm perfectly fine with my normal half of the pizza.\", he said with an upturned grin as he pushed the plate back. \n\nOliver happily picked up the slice, offering, \"You know, for a guy who seduced me into being gay, you should be more willing to try new things.\" \n\nMatt shot back, \"I'd say this whole weekend was full of new things. I mean we both did lose our virginities.\" Shrugging his shoulders, Matt met Oliver's hand in a high five. The boys intertwined their fingers as Matty asked, \"Not tired of me yet, Morrison?\"\n\nOliver shot back, \"Not a chance, Stevens.\" Pulling his boy into a deep kiss, he admitted, \"Besides, we now have less than 24 hours of alone time and I've been itching to get fucked since this afternoon.\"\n\nMatty shook his head, \"I don't think I'll ever get used to hearing you talk like that.\" \n\nThe boys turned off all of the lights and made their way upstairs, knowing that once their hard bodies hit the refuge of Oliver's bed, they would never leave it. Matty led the way, feeling his bare feet press into the hardwood lined hallway, swearing he could hear every creek as he shifted his weight in his steps. Soon the hardness turned soft as he stepped into Oliver's bedroom, feeling a slight tremble in his body as he felt the lush carpet beneath him. There was something so intimate about Oliver's bedroom that just made sex there all the more passionate and alluring. The room had hosted many memories for the two boys and it was like adding a spire to the top of the tallest skyscraper in the world, just for good measure. \n\nOliver leaped onto the bed with enough excitement to cut the sexual passion that burned within Matt's body. He eased into the mattress and grabbed ahold of his cock, swinging the glistening head about as it shined through the dim bedside lamp. Matt bit down on his lips, loving the show his daydream was putting on. But this wasn't a dream. This was real, Ollie was real, and he wanted him bad. \n\nMatt arched down and got on all fours as he crawled up to meet his boy. Oliver watched in anticipation as the boy ran his forearms through the comforter, swaying his ass left and right. It looked so damn good that he was almost tempted to fuck the boy then and there. But he resisted, succumbing to the twitches of his own hole, telling him he wanted to get fucked. His thoughts washed away as he felt Matty's tongue sweep across his swollen head, flicking the tip underneath his skin and wetting the crevice between the head and foreskin. \n\n\"Get that tongue in there babe, you know how much I love that.\" \n\nMatty flashed a smile as he continued to work the head. He pulled back on Oliver's foreskin, allowing himself more surface area of the flared pink tip. Leaning in, he gently nibbled on the skin with his front teeth, leaving Ollie writhing in the sheets. Matt grinned as Oliver shouted out every expletive known to man. Taking a step back, he released his teeth and instead, offered his plump lips, kissing the tip gently along the slit. Ollie relaxed and reached over to hold Matt's scruffed jaw in his palm. \n\nNeeding more, Matt sunk down on the boy's length, wrapping his lips against his teeth until he felt his throat close. Once the tip hit the back of his mouth, he swallowed, giving just enough room for the entirety of Ollie's length to slip past his throat. \n\nOliver whimpered as he felt himself bottom out in Matt's mouth. He moaned, \"Matty\", in a strained voice as the boy's beautiful lips closed in on his pubes. He searched for Matt's eyes and eventually found them when he broke concentration and saw Oliver watching him with intent. He winked as he tried to take more in, causing Ollie to lose it. \n\nFeeling his muscles tense in anticipation, he pulled Matty off his cock just in time to prevent that all too familiar sensation. Matt's eyes darted, \"Dude! I wanted you to cum in my mouth! I could tell you were close!\"\n\nOllie found his breath, \"As good as that mouth is.\" He paused for good measure, \"And it's really damn good, I wanna make this last, lover boy.\" Oliver pulled Matty up by the shoulders until he rested his chest against his. Easing into the pillows, he surrendered himself to Matt, letting him take control as he worked his lips onto his. He could feel Matt's cock rubbing against his thigh as the boy's tongue fought for control. Finding space in his mouth, Ollie used his hands to feel around Matt's body, re-familiarizing himself with every inch as if they hadn't spent the past hours joined at the hip. He dug his palms into the small of Matt's back, pushing his body down as he spread his legs apart. \n\nMatt knew exactly what his boy wanted, but he needed to hear it. Slipping out of Ollie's mouth, he pressed against the flesh beneath his ear, grazing the lobe with his nose as he pecked at the skin. Oliver's motions didn't waver, instead he continued to spread his legs until they were aimed at both corners of the bed. Feeling that hot breath against his skin, he moaned hard as he grabbed at Matt's hips. Knowing he was worked up enough, Matt instructed, \"Tell me what you want baby.\" \n\nBy then it was all clear, but Matt needed to hear those words release from his boy's succulent lips. He had wanted Oliver for years, so he relished every moment he could make the boy admit how badly he wanted him.\n\nDigging his hands so hard, he could practically feel bone, Oliver moaned out, \"I want you to fuck me, Matty.\" There was a tinge of anger in his voice, almost as If he had been held out for hours on end and was nearly done with waiting. \n\nMatty pulled off the boy's neck and pressed a quick kiss against the boy's lips. With a smile, he responded, \"Only cause you asked so nicely.\" \n\nOliver rolled his eyes, knowing that Matt had taken a page from his own tricks. He almost met the boy's taunting with a snarky comment, until he felt Matt's palms wrap around the back of his thighs. Matt pulled Oliver's legs up until his kneecaps practically touched the his chest, and making sure Oliver had given him his undivided attention, dove his face into the boy's pretty pink hole. He watched as Ollie's wrinkled skin slowly opened up for him, with each petal pulling away to give more access. He knew that by now, Oliver was a few short breaths away from bursting his load, so he gripped on the boy's cock hard, pressing his first firmly at the base just above his balls, controlling the boy's orgasm. \n\nAs he licked away, Matt continued to savor the boy's taste, feeling so raunchy and yet so destined to be exactly where he was. He made sure to change up his movements, switching between ravaging at Oliver's pucker then being gentle and soft, undoubtedly keeping him at the edge of cumming. And he loved it that way. He loved that he was able to make Ollie feel so good and that the boy trusted him beyond reason. He knew that he would never do anything to shatter that. So he continued to work Oliver's hole, making it damn clear that he wanted him more than anyone. \n\nAfter some prolonged teasing, Matt was ready to seal the deal. He pulled away from Oliver's hole just long enough to plant his knees at the boy's inner thighs. Then, without hesitation, gripped his cock by the base and slowly inserted himself into Ollie, feeling only a slight resistance as he pushed through. The work he had done on Oliver's hole had the boy feeling no pain as he worked his length in. As he felt his boyfriend bottom out, he finally moaned, wiggling his toes in the process as he savored the fulness of being penetrated. Matt too reveled in that moment, loving the fact that he was an 18 year old guy, able to have sex with his incredibly hot boyfriend whenever he wanted. He leaned down, kissing Oliver as he started to pump away. \n\nMatty moaned out as he cradled the back of Oliver's head, \"Fuck, I'll never get over how good this hole feels around my cock.\" His words had an intensity that matched his thrusts. It was a welcomed change from the first time they had sex. What was once slow and gentle turned intense and rough, leaving Oliver unsure as to which he liked better. \n\nHe caught Matt's glance, \"Then don't. Keep fucking me 'til you cum.\" \n\nMatt nodded as he pushed in further. By then, Oliver had left a trail of light scratches along Matt's backside leaving remnants of his fingernails dug into the boy's tan skin as he got fucked. Matt's body too was feeling the gravity of their lovemaking as beads of sweat dripping down from his forehead and onto Oliver's face. But the boy didn't care, he simply opened his mouth to take in Matt's tongue and continued to work over the boy's body in search of any stretch of skin he had yet to touch. With the light barely shining from the lamp beside them, Oliver could see the profile of Matty's chiseled face adorned with shadows at every crease. Outside, he could hear the cold wind rustling through the redwoods beyond them, but here, in this bed, he felt Matty's burning skin press into his naked body like two objects radiating heat, destined to give off steam. \n\nMatt knew he couldn't last much longer like this. He managed to go this far without erupting, knowing full well that Oliver's touch alone could send him off without so much as a second to think. His cock had grown familiar with Ollie's still very tight hole and he was simply riding through the motions, begging to every god there ever was that he could continue feeling this good for a moment longer. Oliver too was on edge the entire time he was being penetrated. Since discovering his special spot, it became an addiction to feel it pressed and prodded at every given opportunity. By now his cock was nothing more than a leaking faucet, glistening in the dim light as beads of precum oozed out of the slit and collected at the base. \n\nKnowing he was seconds from finishing, Oliver pulled Matt's face to his, resting their foreheads against each other with their noses perfectly nuzzled together and lips just millimeters apart. As their faces touched, so too did their bodies as Matt pushed in deeper, leaving Oliver with no choice but to wrap his thighs and legs around the boy's waist. Those last moments were rough and passionate, with only the sounds from deep within their bodies breaking past each kiss. Soon it would all be over and knowing this, Oliver pressed his lips against Matt's like a firm push that left him free falling over the edge. \n\nMatt came first, yelling out obscenities as his cock erupted deep inside Oliver's willing hole. Unable to even take a breath from his first shots of cum, Oliver followed suit. The sensation of warm cum filling his greedy hole was overbearing as his own cock blasted shot after shot onto his now damp body. Matty swooped down and gathered a bit of cum in his fingers before bringing it up to his mouth, satisfied to have Oliver's sweet juices at the tip of his tongue. \n\nWhen their growls softened to steady breaths, Matt motioned slightly, pulling away to let Oliver rest his tired legs that had been suspended in the air for the better part of an hour. Oliver reached for Matt's wrist, calling out, \"No.\" \n\nConfused, Matt searched his boy's deep brown eyes for answers. In a soft voice, Oliver managed, \"Don't move just yet. Let's just stay like this for as long as we can.\" \n\nMatt smiled and kissed his boyfriend one more time before nuzzling against his neck. Oliver enjoyed the embrace, knowing that tomorrow Matt would have to go back home, leaving their weekend together ingrained in both of their memories. \n\n***\n\nOliver awoke just after nine the next day to find himself curled underneath Matty's arms. Somehow they ended up on their sides with Matt's chest firmly pressed into the curves of Oliver's back. Slightly taller, Matt's chin had rested perfectly against Oliver's shoulder as a warm breath continued to escape out of his mouth, covering Ollie's neck. He turned over, careful not to wake Matty as he faced him. Then, taking the boy's large hands, he intertwined his fingers with Matt's and gave it a slight squeeze. Slowly, he watched as Matt's eyes opened- the bright blue irises shining like the morning sky just out the window. Finally seeing his boy, Matt smiled and pulled Oliver in closer. The boys planted chaste kisses on each other as their arms wrapped around, enjoying the heat their naked bodies gave off as a cool breeze fell over the room. \n\nOllie started tracing figure eights along Matt's furred chest, \"You have to go back home today.\" It was more of a statement than a question. The weekend had been nothing short of amazing and he felt that the bond he had with Matt was stronger than ever. But his mom was coming back tonight and he desperately wished he could have stolen more time. \n\nMatty looked over, \"I wish I could spend every morning like this. With you.\"\n\nA silence fell over the room as the two boys let those words sink in. They'd still have each other, but mornings like this with nothing but their shared embrace and no rush to get out of bed- those would be few and far between. \n\nBreaking the silence, Oliver acknowledged, \"You know tomorrow's going to be different right? I'm sure Abby's told the whole school about us by now.\" Oliver looked to find concern in Matt's eyes, but had no luck.\n\nMatt instead eased into the covers and slipped his fingers into Ollie's, \"I've liked you since we were thirteen. I guess it's about time I acted like it.\"\n\nThe boys leisurely took their time in bed. At quarter 'til 12, feeling they'd burned enough daylight and shared four loads of cum between them, they got dressed. Matt took Oliver's car out to pick up some late breakfast for the two of them as Ollie started scrubbing down every inch of the house, hoping to not leave any remnants of their shared weekend. Finishing up in the living room, he walked over towards the kitchen. He let out a chuckle as he started wiping away at the beloved redwood table, taking special care to ensure that no trace of their morning fuck would be discovered. ",
        "Just as Oliver finished up with the table, Matty came through the door with two large cold brews and everything bagels packed with every topping the coffee shop had. They ate together, playfully rubbing their bare feet against each other's calves and stealing glances that would normally leave both of them naked in seconds. \n\nA couple hours and one spotless house later, they settled into the couch to catch their breaths. Matt proudly took his favorite spot between Oliver's legs, loving the feeling of the boys strong arms wrapped around his frame. Even clothed, they could feel the warmth the other was radiating. Oliver eventually turned on the TV and the two sat there, half paying attention, half engrossed in each other. Matty didn't know what tomorrow would hold, but if it meant more time with the boy with whom he was certain his feelings for, he didn't care what the outcome would be. \n\n***\n\nBy the time Matty made it back home, it was already a little after 9. He quietly made his way through the front door, walking past the darkened living room towards the only light still on downstairs. Just as he stepped into the kitchen, he could see the tall frame of his dad, peeking through the fridge. He called out, not wanting to startle him, \"Hey Dad! You're the only one up?\"\n\nMr. Stevens, closed the door shut, \"Oh hey Matty. Yeah, your mom went up with Katie twenty minutes ago, but I wanted to get some of that mint chocolate chip ice cream before your sister gets her hands on it.\" \n\nMatty sat down at the table, \"Count me in for a bowl. I'll pick up some after school tomorrow before she even notices.\" His dad nodded as divided the pint in two, setting Matt's share in front of him as he sat down. Things had been so crazy since Ollie was back in his life that he couldn't remember a time he was able to sit down with his dad like this. \n\nTaking his first bite, Mr. Stevens asked, \"Did you have a good time over at Ollie's?\"\n\nMatt nodded, barely swallowing before replying, \"It was awesome. I mean it's been nice to just reconnect with him you know, after all these years. Like it was definitely rocky at first, but I think we kinda fell into our old ways in due time.\" He looked over at his dad with certainty in his eyes like for once in his life, he didn't have to pretend that things were okay. They just were.\n\nMr. Stevens savored the sweetness on his tongue, hoping his next words wouldn't leave a bad taste in Matt's mouth, \"You know son, when you stopped talking to Oliver all those years ago, your mother and I were really worried about you. You guys were so inseparable. Hell, Jack Morrison and I always joked that we should buy one of those six bedroom houses just so we could keep you two under one roof!\" He looked as Matt cracked a smile as he continued, \"And then you came out to us, and we saw how all those kids were treating you differently, and it finally made sense. You didn't want to put your best friend through that. It was your way of protecting him.\" \n\nHe could see Matt searching for words to respond with, but he wanted to nail down his point before anything else. \"Your mother and I will support you, no matter what you do\", he affirmed. \"Just make sure that whatever it is makes you happy.\"\n\nMatt sat there for a bit, scraping the edges of the bowl, trying to get every last bit of ice cream onto his spoon. After taking in his dad's words along with the rest of his dessert, he desperately wished there was more to be had. \n\nMr. Stevens, always able to see the trouble that brewed in his son's perplexing mind, reached out once more, \"You love him, don't you?\"\n\nMatty put down the spoon and looked up at his father with a shock, \"What gave me away?\"\n\nSimply shrugging his shoulders, Matt's dad resonated, \"That night when the three of us got back from Monterey and we saw Oliver for the first time in years- that was the first time I'd seen you crack a smile. And not one of those- \"Let me force a smile so no one worries if I'm okay\", this was an actual one, thirty two teeth and all.\" Matt unknowingly flashed the same wide-eyed grin, blushing at the realization that he'd been so obvious. Mr. Stevens continued, \"And we saw how you looked at Oliver. Trust me son, I've caught myself staring at your mother too many times to know what that look means.\"\n\nMatt eased into his seat, feeling the hard wooden slits dig into his back. He confessed, \"I think this time we really have a shot...\" He held onto that last syllable like a diver, suspended in mid-air for what feels like hours, just waiting to crash into the water.\n\nMr. Stevens interjected, \"But?\"\n\n\"But I'm scared that I'm going to hurt him again,\" Matt blurted out. He took a second to catch his breath before weakly continuing, \"I'm scared that something's going to go wrong and I'll have lost the only friend I ever had, twice in one lifetime. I- I just can't lose him again, dad.\"\n\nMr. Stevens stopped for a second, giving his son time to hear those words out loud. That was probably the first time he ever admitted that to someone other than himself, and he wanted him to feel the gravity of that. Changing tones, he began, \"Matty did I ever tell you about the time I took your mother on our first date?\"\n\nMatt sniffled as he quickly tried to blink away the tears that had almost surfaced. He welcomed the change of subject, replying, \"No.\"\n\n\"It was our second year at St. Mary's and I somehow came up with the bright idea to take her ice skating, even though I had never done it before\", Mr. Stevens remembered as he was slowly brought back to that very day. He added, \"Little did I know that she was from this small town in Minnesota where ice skating was a religion.\" \n\nMatt jumped in, \"Yeah, she always talks about how the lake would freeze over every winter, and how she and Uncle Jack would spend hours out there with the wind on their backs.\"\n\nRaising a finger, Mr. Stevens corrected, \"See, but I didn't know that at the time!\" He went on, \"Cause if I did, I would have chosen us doing something else.\" He laughed at the impending memories, \"I spent the first half of the date desperately holding onto that railing for dear life! Then the other half was spent mostly with my ass firmly planted on the ice every time I fell!\" \n\nUnable to hold back, Matt let out a stream of laughter that reverberated through the room until he was able to quiet down, hoping he hadn't woken up his mom and sister. Composing himself, Matt asked, \"And yet she stayed?\"\n\nMr. Stevens affirmed, \"She held my hand through it all, helped me up every time I fell, and even gave me a hand in taking off those godforsaken skates!\"\n\nHe turned to find Matt's eyes, \"The reason why I'm telling you this, which I'm sure you're wondering, is that sometimes you need to let yourself fall. Right now you're so concerned about hurting him that you're preventing yourself from being truly and completely happy.\" He lightened his voice a bit, \"I made a fool of myself that first day and I sure as hell made my share of mistakes, but your mother was there with me through it all.\" He paused, making sure his boy was looking at him, \"If Oliver is everything you say he is, then he'll be with you too.\" \n\nFeeling he had said everything he needed to, Mr. Stevens stood up and placed a soft touch on his son's shoulder, as if capping off their conversation to leave Matty mulling over everything that had been said. He cleared the two bowls from the table and left them in the sink to soak. \n\nBefore he could turn the corner and head upstairs, he heard Matty call out in a soft voice, \"Dad?\" He looked over to see a slight smile forming at the corner of his mouth as he offered, \"Thank you.\" Mr. Stevens only nodded, knowing that would be enough."
    ],
    "authorname": "thealphamale",
    "tags": [
        "gay romance",
        "gay novella",
        "novella",
        "romance",
        "bareback",
        "cum",
        "blowjob",
        "anal",
        "young",
        "muscle"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/back-to-you-ch-07"
}