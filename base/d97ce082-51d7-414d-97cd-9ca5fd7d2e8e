{
    "title": "New Horizons Ch. 39-44",
    "pages": [
        "Author's Note: And we're finally at the end. Thank you, thank you, thank you. For your patience. Your support. And your encouragement. Even when Alex made you mad.\n\n-FFF\n\n \n\nChapter 39\n\nAlex threw down the controller she was holding and didn't even flinch as it clanged against the glass coffee table in front of her and fell to the floor. Usually overly violent and mindless video games helped to take her mind off whatever she was going through at any given moment. But right now, nothing was working to distract her.\n\nDespite that, staring at a screen was better than doing anything else and it kept her from sleeping, which was when things got really bad. Alex couldn't remember the last time she closed her eyes and didn't see the devastated look on Quinn's face right before she turned around and walked away from Alex outside the bar.\n\nAlex had already made up every excuse for herself that she could think of\u2014 she was drunk at the time, Quinn pushed her too hard, that night was about more than them, she didn't care that much anyway\u2014 but ultimately, she knew all her excuses were empty.\n\nThe fact was, she knew she fucked up and probably lost the best thing that had ever happened to her. Quinn leaving an envelope with her front desk, containing the diamond necklace Alex had gotten her, only solidified that thought. Quinn didn't include a note with the envelope and upon receiving it, Alex shut it into a desk drawer that she didn't plan on opening any time soon.\n\nAlex knew she was a coward and should call Quinn, but she didn't know what to say or how to apologize. And mainly, she didn't know how to promise she wouldn't do it again.\n\nQuinn may be angry, but Alex knew it couldn't compare with how she felt about herself. Alex had been on a road of self-loathing for a while, but how she treated Quinn that night made it almost hard to look in the mirror.\n\nInstead of picking up the controller again, Alex leaned her head back and closed her eyes as she contemplated getting herself another drink from her bar. Not that drinking helped either\u2014 but it was better than just sitting there thinking about Quinn.\n\nAlex only had her eyes closed for what felt like a moment when she could hear keys in her door. There was only one person who had access to her apartment like that so she braced herself for the tornado that was about to enter.\n\nBut Courtney didn't enter like a tornado. When Alex opened her eyes, her friend was standing at the end of the couch, staring at her calmly with one, challenging eyebrow raised.\n\n\"What're you doing here?\" Alex asked, sitting up slightly so she could see Courtney better. \"That key is meant for emergencies.\"\n\n\"You've had your phone off for five days. I think that counts. Why haven't you answered anything?\" Courtney asked.\n\n\"My phone is dead,\" Alex replied sullenly.\n\n\"Don't be an ass, Alex,\" Courtney responded and walked over to the couch so she could sit down next to the blonde. \"I heard about the gala. I'm so sorry, babe. I can't imagine how much that kind of betrayal from both of them must have hurt.\"\n\nCourtney gently placed her hand on Alex's leg and the blonde could feel her friend's eyes on her, but it felt easier to just look down at the controller on the floor in front of her. She didn't know what to say about what her father and Janet did. But more than that, she found herself thinking about Quinn far more than whatever happened at Horizon.\n\n\"Have you spoken to anyone from the theater?\" Courtney asked when it was obvious Alex wasn't going to offer anything on the topic.\n\n\"No,\" Alex replied in a quiet voice. \"There's no point. They made their decision and I no longer work for them.\"\n\n\"I talked to Quinn,\" Courtney said next.\n\nUpon hearing Quinn's name, Alex's head finally snapped up to Courtney's face.\n\n\"When?\" she asked.\n\n\"The night of the gala. I called her yesterday too, but she didn't pick up.\"\n\n\"What did she say?\"\n\nAlex could feel her insides tighten in anticipation of hearing anything about Quinn and this was probably the first time she had felt anything other than numbness since the night of the gala.\n\n\"She didn't stay on the phone long. She sounded like she was pretty choked up. But she said you needed to be alone and that it was over.\"\n\nAlex shifted her body away from Courtney so the red head's hand dropped from her leg. She didn't want to be touched when she felt like her heart was being painfully clenched. Alex was the one who had pushed Quinn away, but hearing Quinn's own, final words through Courtney felt like a huge blow.\n\nFor five days Alex had sat on this couch replaying that night, but not allowing herself to really feel the devastation of losing Quinn. But with Courtney here by her side, confirming again that she had indeed fucked everything up, Alex finally let herself feel the pain she had put off for days.\n\nAs the first tear hit her cheek, she could feel her friend's arms come around her and she had no power but to sink into the embrace. Something about it felt so familiar and only moments later she realized that the last time she cried in Courtney's arms like this was when her mom died.\n\n\"Shh. It's ok. You're ok,\" Courtney said as she began rubbing her hands down Alex's back.\n\nAfter a few minutes of crying, Alex didn't have anything left in her and she could feel her breathing finally evening out. As soon as she felt more composed, she pushed off of Courtney and attempted to wipe her wet face with her hands. A wave of embarrassment washed over her as she looked up and saw the pitying expression on her friend's face.\n\n\"Sorry,\" Alex said quickly.\n\n\"For what?\" Courtney asked. \"Showing some real, human emotion? Al, it's ok to cry and to be vulnerable. Especially after what you've been through.\"\n\n\"I'll get us something to drink,\" Alex said and stood up quickly so she could move into her kitchen where she grabbed a napkin and two glasses of wine.\n\nShe already had a bourbon before Courtney arrived, even if it was only mid-morning, but she needed an excuse to leave the room for a moment so she took her time pouring them both a drink and making sure she was more composed than she was a few minutes before.\n\nAlex sat back down on the couch and put Courtney's glass in front of her, but her friend didn't reach for it. Instead, Courtney's eyes were trained on Alex's face as if studying her every expression.\n\n\"What happened with Quinn?\" she finally asked Alex.\n\nAlex took a sip of her drink and shrugged before setting it down next to Courtney's untouched glass. When Alex remained silent once again, Courtney rolled her eyes and looked around the apartment.\n\n\"This is exactly where I thought I'd find you. Sitting in front of a video game with an empty glass of bourbon,\" Courtney said.\n\n\"Apparently, you're right about a lot of things these days,\" Alex replied in the same sullen voice she had used when Courtney first arrived.\n\n\"What does that mean?\" Courtney asked.\n\n\"You told her I'd push her away. You were right. I did.\"\n\nAlex didn't say it with any bite in her tone. She wasn't mad that Courtney had warned Quinn about that because ultimately her friend had been right and probably should have told Quinn to run as fast as she could before it was too late.\n\n\"Tell me what happened,\" Courtney prodded again.\n\nAlex knew her friend wouldn't leave if she didn't tell her, so she reached out and took another sip of wine before leaning back against the couch.\n\n\"What happened is that I'm an idiot. She told me she loved me and I returned her words in a really horrible way. And when she was walking away, I let her.\"\n\n\"She told you she loves you?\" Courtney asked softly.\n\n\"Yes, and then I accused her of badgering me into saying it back.\"\n\nCourtney's face, which up until that moment, had been fairly passive, scrunched up for a moment, as if in pain.\n\n\"Ok, not the best. But Alex, do you love her?\"\n\n\"Yes,\" Alex said instantly. \"I love her.\"\n\nHer feelings about Quinn had never been in question and it wasn't until the night of the gala that she really understood how deep her own intimacy issues went. It was expressing to Quinn how she felt that was hard for her. She didn't know how to get over her fear of saying those words.\n\n\"You were going through a lot that night. Maybe you didn't say the right things, but Alex, she told you that she loves you. That means something.\"\n\n\"No, it meant something. She told you herself. It's over.\"\n\n\"I heard her voice. She sounded heartbroken. This isn't over. You just need to fix it.\"\n\n\"I can't!\" Alex suddenly shouted from her spot on the couch.\n\nShe stood up, not able to keep sitting there anymore, but this time, she didn't walk out of the room. She knew Courtney would just follow her. So instead, she walked over to her window and looked out at the city below so she could steady her breathing.\n\n\"I don't know how to be what she needs me to be,\" Alex finally said while continuing to look out the window. \"I thought I had opened up to her, but it wasn't enough. I don't know how to give her any more than that.\"\n\n\"Bull shit,\" Courtney said from the couch, causing Alex to finally whip around so she could look at her friend. \"That's such bull shit, Alex.\"\n\n\"You can go now,\" Alex snapped back from the window.\n\n\"Oh, believe me, I will soon. This whole apartment reeks of self-pity. But first you're going to listen to me.\" Courtney stood up from the couch but didn't move any closer to Alex. \"You're so fucking scared of everything. You'd rather push her away than break down some of your walls. But I don't get it. You lose her either way.\"\n\n\"How can I not be scared of losing her when the person I loved the most in this world left me?\"\n\nAlex could feel the tears she had just tempered begin to prick her eyes again, but she was too tired to stop them so when she closed her eyes, she let them slowly roll down her face.\n\nWhen she opened her eyes again, Courtney was standing in front of her with a soft expression on her face.\n\n\"She died, babe. She didn't leave you,\" Courtney said. She then pulled her sleeve down over her hand and brought it up so she could wipe away some of the tears coating Alex's face. \"Your mom loved you so much. She wouldn't want her death to do this to you. And we both know it's not just Quinn you've pushed away.\"\n\nAlex looked up at her friend's face again. \"What do you mean?\" she asked.\n\n\"Why did you quit acting, Al?\"\n\nTalking about Quinn was one thing because Alex could easily admit where she messed up. But she wasn't going to go down this road again with Courtney. Performing had nothing to do with any of this. She turned around and moved back to the couch so she could sit down and grab her glass of wine.\n\n\"You know why,\" she said before taking a sip. \"And it has nothing to do with this.\"\n\nCourtney stood her ground and simply crossed her arms in front of her. \"It has everything to do with this. One day you'll need to stop using your father as an excuse.\"\n\n\"How can you say that after what he just pulled?\"\n\n\"He only pulled that because you allowed him to. You stayed at a theater that has never valued you. With a man who has never loved you the way you deserve to be loved. You stayed there, Alex. When you could go do anything. You know how many people would kill for your talent and money?\"\n\nAlex glared up at Courtney in her best effort to intimidate her friend, but she also knew that had never worked. Not with Courtney. The other woman knew Alex too well and wouldn't let this go until she had said everything she came here to say.\n\n\"Quinn and performing are linked,\" Courtney said, ignoring the look from Alex. \"You're so scared of losing the things you love that you don't allow yourself to be happy at all.\"\n\n\"When you've had the kind of rejection I've had, it's hard to trust anything,\" Alex argued.\n\n\"It's not about rejection. You knew Quinn loves you and just couldn't say it back. I tell you that I love you all the time. You never say it back. When's the last time you told anyone that? You're scared of feeling anything that might remind you of who you used to be.\"\n\nBefore Alex could even respond, Courtney left the room and walked down the hall that would take her to Alex's bedroom. Alex was too stunned by the words that had just come out of her friend's mouth to follow or even really think about where Courtney had gone.\n\nA minute later, Courtney was striding back into the room, holding Alex's laptop open. She set it down on the table in front of them and when Alex looked down at the screen, she could see that Courtney had opened YouTube and found their production of A Streetcar Named Desire.\n\n\"Watch it,\" Courtney said, pointing at the screen.\n\n\"Watching that will accomplish nothing. It was years ago,\" Alex replied, refusing to even look at the screen in front of her.\n\n\"Watch it and then read the comments,\" Courtney replied in a gentler voice, sitting back down next to Alex on the couch again. \"Simon Anders' opinion is wrong. You threw a dream away because he said you weren't good enough. See how many people disagree with him. But I think that if you were honest with yourself, you'd realize you threw it away because of your mom too. Because you don't want to lose one more thing. But Al, you're the most talented person I've ever met. Doesn't my opinion matter more than his? Doesn't your mom's? Doesn't Quinn's? He's not a god. He can't control every theater and casting director in this city.\"\n\nAlex was silent for a moment before looking at her friend again. \"I don't know what to do,\" she whispered.\n\n\"Start here,\" Courtney replied, pointing at the laptop. \"Remember who you are. And then decide if you can open your heart up again.\" Courtney moved closer to Alex so she could push some of the blonde's hair behind her ear. \"Not everyone leaves. But before you try to fix things with her, maybe try to fix things with yourself first.\"\n\nAlex lightly grabbed onto Courtney's hand and squeezed. \"When did you get so damn insightful?\" she asked and gave her friend the first smile she had felt in days.\n\n\"Since I found my own reason not to be a fuck-up. Indirectly, you can thank Paige. And these, you don't need,\" Courtney said, picking up the wine glasses on the coffee table and taking them into the kitchen.\n\nWhen she came back out, she leaned the front of her body against the couch but didn't sit back down. \"I'm going to go and let you think. I hope you watch that,\" she said, pointing to the laptop again.\n\n\"Thank you for using your emergency key,\" Alex replied in a small voice. She hadn't even wanted Courtney there at first, but now she felt vulnerable at the idea of being alone again. \"I'm sorry I'm such a mess.\"\n\n\"I get it more than anyone. You know that my mom was never around. But then I met you. And you made me believe that I'm something special. I believe that you are too. Trust the people that love you.\"\n\nBefore Alex could even register what her body was doing, she was crawling over the couch and pulling Courtney into a hug. The arm of the couch was between their bodies, but she pressed in regardless.\n\n\"I don't know what I'd do without you, Court,\" she said into the other woman's shoulder.\n\n\"See, that wasn't so hard to say, was it?\" Courtney said as she hugged Alex back.\n\nAlex laughed before pulling her body back into her own space. \"Actually, it was. But I said it. So... progress?\"\n\n\"I think there's hope for you,\" Courtney replied. There was a beat of silence and it looked like Courtney had something else she wanted to say. \"Her opening night is coming up. Will I see you there?\" she finally asked Alex.\n\nAlex knew exactly who \"her\" meant, but she was glad Courtney didn't use Quinn's name again since hearing that out loud seemed to do things to her body.\n\n\"Do you think she'd even want me there?\" she asked back.\n\n\"There's only one way to find out,\" Courtney replied with a wink.\n\nShe then leaned in and placed a quick kiss on Alex's cheek before moving towards the door.\n\n\"Watch the video, Alex,\" she said a final time before leaving the apartment.\n\nAlex let her body sink back down onto the couch when she heard the door close behind Courtney. She closed her eyes as her mind replayed some of her friend's truth bombs.\n\nThere was so much to process, but the one thing she knew Courtney was right about was that she needed to fix whatever was going on with herself before she could fix anything with Quinn.\n\nWhen she opened her eyes, they landed on the laptop still sitting on her coffee table and she knew what she needed to do. But she wasn't going to do it in her apartment.\n\nIf she was ever going to break down some of her barriers, she needed to face what she hadn't allowed herself to face since her mom died. Without letting herself change her mind, Alex rose from the couch so she could go change and visit a place she hadn't seen in years.\n\nChapter 40\n\nDespite living somewhere as expansive as New York City, Alex found that she rarely left midtown given that's where Horizon and her apartment were located. Every now and then, Courtney would convince her to try out some trendy bar or restaurant in Brooklyn or another area of Manhattan, but her friend knew that Alex had no interest in anything on the Upper East Side.\n\nAs her car continued its way down Madison Avenue, she couldn't even remember the last time she had been in this area. After her mom died, she had gone to their family house a few times for dinners with her father, but those soon fell off, much to the relief of them both.\n\n\"I can get out here,\" Alex said to her driver as he turned on 69<sup>th</sup> street and headed down the block towards 5<sup>th</sup> Avenue. \"I don't know how long I'll be so I'll text you when I'm ready to go.\"\n\nOnce her driver had completely stopped, Alex got out of the car and walked the handful of steps down the street until she came to the place her eyes would always recognize at once\u2014 her childhood home.\n\nAlex had always liked the front of her parents' Manhattan home. From the outside, it almost looked like a normal townhouse where someone would just occupy a floor of the building. It's not until you're inside that you're suddenly hit with obscene opulence.\n\nBecause her parents didn't just own one floor. They owned the entire building, which was six floors and 18 rooms. The few times growing up that Alex had friends over, she was always embarrassed. Her father's taste could only be described as museum-chic and the entire house felt untouchable.\n\nEven her bedroom felt formal. She had always envied the mess she came across in friends' rooms with their toys and stuffed animals scattered about. Alex's room featured a four-poster bed and a vanity set and looked more like the room of a Victorian socialite than a child.\n\nAlex always knew how lucky she was and that ultimately, she couldn't complain\u2014 especially when you walked just a few blocks uptown and saw how other people in Manhattan lived. But it didn't change the fact that she wished she had grown up a little bit more like others she had met in school.\n\nAs she used her key and walked into the giant entryway of the house, she remembered all the ways her father had used money to appease her growing up instead of just telling her he loved her. A simple kind word from him would have gone further than another gift she didn't need.\n\nAnd it suddenly hit her that maybe the diamond necklace she had given to Quinn had made the brunette feel the same way. Alex had meant for it to be a sweet gesture but she could see now how it just appeared to be a substitute for real intimacy.\n\nThe house was dark as she made her way through the entryway and after she passed the long stairway, she took a moment to glance up at the high ceilings that went all the way to the third floor. She could tell by the lack of lights and sound that her father was out, which was what she was hoping for. She knew he was rarely home during the day so figured this was the best time to stop by. Simon Anders was the last person she wanted to see right now.",
        "She had spent enough time in this house that she didn't need lights and she easily found her way down one of the first level hallways. Halfway down the hall, she pushed against the wall and a door swung open letting her into the room. The secret door had been one of the only things she loved about the house as a kid, but it was mainly because of where it led.\n\nAlex wasn't prepared for the instant wave of memories that washed over her as she entered the library, but somehow, it still smelled exactly like her mom. She could never forget her mom's scent and didn't realize it would still be so potent here\u2014 as if her mom had just glided out of the room like she had so many times before.\n\nThroughout her childhood, Alex had spent so much time in this library with her mom. The two-story room was full of books, but Alex knew her parents never touched them. Over time the room just became her mom's private sanctuary. One that she was happy to share with Alex.\n\nAs Alex walked through the space, she could see all the small spaces behind lush couches and cabinets that she used to hide behind before her mom would come into the room. She always knew that Alex was there, but she did a good job pretending to be scared when her daughter jumped out from whatever hiding spot she had been using.\n\nHer father rarely entered the library\u2014 unless he was giving people tours of the house and wanted to impress them. So, the whole room felt like it was her special place to share with her mom.\n\nBut it was in the back of the library that Alex had spent the most time during her childhood and it had been her mom's favorite spot in the whole house. Whenever her mom needed to relax, Alex knew she could find her on the cozy, worn couch in there. Alex knew now that her mom had probably created the space for alone time, but she never seemed to mind Alex's presence.\n\nAlex's eyes were immediately drawn to the blanket her mom had always used. It was just sitting on the couch, not even folded, as if her mom had just stood up and let it fall off her lap. Alex slowly walked over to the couch, sat down and stared at the blanket.\n\nEverything in the room felt like a time capsule and it was obvious her father hadn't touched anything since her mom passed. Maybe that was his way of being sentimental, or maybe he just never bothered to come in here. But something told Alex it was the former\u2014 he may have never shown her much attention, but Alex knew that Simon was very much in love with Peggy.\n\nFor years, Alex had felt like she didn't know how to cry anymore. As if she had spent all the tears she would ever have on her mom's death. But ever since her conversation that morning with Courtney, she felt like she was in a perpetual state of crying or trying not to cry. And when she finally picked up the blanket and pushed it into her face, a whole new flood of tears hit her.\n\nBut for the first time, crying about her mom didn't feel as painful as it usually did. Something about sitting where her mom sat so many times before caused Alex to feel connected to the memory of her and she hadn't thought that would ever happen again. She couldn't remember a time when memories of Peggy elicited anything but complete devastation.\n\nAs the tears began to slow, she looked to the side of the room where her mom had used the bookshelves there to line-up some of her favorite movies. Because that's what she mainly used this little room for\u2014 watching old classics that Simon wanted nothing to do with. Her mom had set-up a small TV in the corner of the alcove and over time, the library became more of a movie room than a reading room.\n\nAlex smiled when she looked over at the movies lining the first shelf, all of which were on VHS. Her mom insisted that buying DVDs was a waste when she had everything already organized. Her favorites films included anything with either Hepburn but Peggy also had a soft spot for Grace Kelley since she always said the actress reminded her of Alex. Alex knew that was a stretch, but she wasn't about to argue with a biased mom.\n\nAlex finally let her eyes move up to the next bookshelf, which held her mom's real pride and joy\u2014 videos of Alex's past performances. She stood up from the couch so she could walk over to the shelf and see what was there. She had always known her mom had kept these videos, but she had never spent much time going through them.\n\nAs she reached the shelf and could read her mom's small, neat handwriting on each tape, she realized that there were two whole shelves dedicated to her theater work. Though \"work\" was probably a strong word considering some of the videos were from elementary school choir performances. Her mom had never missed one of her shows and clearly, she had also kept a video of every single one.\n\nNext to the shelf of videos was a cabinet that Alex had never bothered to open, but something in that moment sparked her curiosity. In a way, she felt like a child again, going through her parent's private things, but she had a feeling her mom wouldn't mind so she opened the drawer.\n\nShe expected to just see more videos sitting in there and when she saw how wrong she was, her mouth opened slightly at the sight. Because the drawer was full, but not with videos.\n\nPiled high were all kinds of items and mementos from Alex's life in the theater. Alex fingered through the pile and found everything from old show posters and programs to torn tickets from performances her mom attended to photos Peggy had taken of Alex backstage or after shows. Halfway down the pile, Alex even found a copy of the poster from A Streetcar Named Desire that she had torn up in her Horizon office after the gala.\n\nShe knew her mom had some of this, but she certainly didn't know her mom had been so meticulous about saving everything from Alex's past. One of the posters was for a show Alex wasn't even in\u2014 she had merely helped out with painting some of the set pieces.\n\nAlex continued to sift through the old posters with a small smile on her face. For so long she had blocked out memories of that time in her life that she was almost surprised how quickly and clearly they came back now.\n\nAfter going through the pile, she forced herself to close the drawer to the cabinet and turn her attention back to the videos on the shelf, which was real reason she came back to this house in the first place. After finding a few of the tapes that featured some of her most recent roles, she set them by the TV. She then sat back down on the couch and pulled out her phone.\n\nBefore watching some of her older performances she decided to go through some of the online videos from A Streetcar Named Desire Courtney had urged her to watch. As she pulled up YouTube, she curled her legs under herself on the couch and pulled her mom's blanket across her lap.\n\nThe videos were easy to find, but once she had them pulled up, she simply looked down at the static image with her thumb hovering over the play button. She closed her eyes for a moment and took a breath. She had decided to come here to watch the videos because somehow, it made her feel closer to her mom, who had always been her biggest fan. But she could still feel the hand holding the phone shaking in anticipation of watching herself on stage again.\n\nShe opened her eyes and shook her head. She knew that facing her fear started here. She needed to stop relying on everyone else's opinion of her\u2014 even her mom's\u2014 and decide for herself what her value was.\n\nShe looked back down at her phone again and pressed play on the first video.\n\n\"Ok, Court. Here I go.\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nAlex leaned back against the couch as the cast of The Importance of Being Earnest made their final bow on the screen in front of her. This was the third show she had watched and it wasn't until she looked down at her phone that she saw that she had been there for hours.\n\nHer father usually went out with friends or women after work, but she couldn't guarantee that so she knew she needed to get moving soon. But she couldn't seem to force her body to get up as she continued to stare at the screen in front of her.\n\nShe didn't even know her mom had a tape of this show, which was from one of the all-female productions she did at NYU with Courtney, and watching it brought back memories she didn't even know she still had. In fact, with every show she watched, Alex began to remember feelings she had suppressed for years. Feelings of passion and fun and an ambition that were so very different than the narrow-minded kind she had held on to since joining Horizon.\n\nAlex could suddenly remember how happy she had been working on shows that sometimes only 50 people saw. Or working on musicals that were terrible, but still offered her the chance to spend time with people who shared her love for theater.\n\nShe was proud of the work she had accomplished at Horizon, despite what had happened at the end. But watching herself on stage reminded her that she could do both. And mostly, she could finally admit to herself that she had the talent to do both.\n\nAlex finally forced herself to get off the couch and put the tapes back on the shelf where she found them. She had a strong feeling she wouldn't be back in this house for a while, if ever again, so as she began to fold her mom's blanket, she made a quick decision and stuffed it into the bag she had with her. Her dad wouldn't miss it but now that she had been reunited with its comfort, she knew that she would.\n\nAs soon as she left the library and made her way back through the entryway, her stomach dropped. Standing just feet away was her father speaking to one of the members of his house staff. The look of surprise that crossed his face when his eyes found Alex indicated he had no idea she was in the house until that moment.\n\n\"Alexandra. I haven't seen you home in quite a while,\" her father said with a fake smile plastered on his face. \"I thought you forgot how to get to the East Side.\"\n\n\"Well, I do try to avoid it as best I can. It's a bit too stuffy for my tastes,\" Alex replied.\n\n\"Ah, yes. You do live in such squalor. How is the view of Bryant Park these days?\" Simon asked in a snarky retort, dropping the smile.\n\nAlex had no interest in entering into another passive aggressive, back and forth with her father and knew she should just walk out of the house. But something about the challenging look he was giving her kept her rooted to the spot and for the first time in years, she didn't feel even the slightest bit intimated by him.\n\n\"Besides, this house has been in my family for generations and one day it will be yours. I wouldn't go criticizing it just yet,\" Simon added.\n\n\"I won't hold my breath. After all, Janet may be looking for a third house at some point,\" Alex said, not able to help herself from mentioning her father's most recent betrayal.\n\n\"Is that why you're here? Did you decide to finally resign to me in person instead of doing it through someone else?\"\n\n\"No, I'm sure you got that message. I came to watch some of mom's old movies. But I'll be going now that you're home.\"\n\nAlex could see something flash across Simon's face that looked like confusion, but just as soon as it came, the man schooled his features into one of neural stoicism\u2014 as he always did upon any mention of Peggy.\n\n\"We should talk about the gala, Alexandra. I understand you're upset, but\u2014\"\n\n\"You don't understand anything,\" Alex snapped back, cutting him off for maybe the first time in her entire life. \"You've never understood. And you don't care to. The only thing that has ever mattered to you is that precious fucking theater. I was just a pawn to help you make it a success. Until I wasn't needed anymore.\"\n\n\"You left me no choice with that article stunt you pulled,\" Simon said, pointing his finger out at Alex. \"That was selfish and stupid.\"\n\n\"I didn't pull anything, dad. Your new shining star did.\"\n\nWhen the same confused look flashed across his face again, Alex let out a low, humorless laugh.\n\n\"You didn't know? That Janet orchestrated the whole thing? I'd keep an eye out for that one if I were you,\" Alex said.\n\n\"As I understand it, that article wasn't too far off the truth. Or are you going to stand there and deny you're in a relationship with Quinn Collins?\"\n\nAlex could tell him that she was no longer with Quinn, but she knew he would look at it the same way. They had been in a relationship and she wasn't about to deny that to this man.\n\n\"Exactly,\" Simon said when Alex didn't respond.\n\n\"I think you wanted me to fall for her. I think you've just been waiting for the next thing you could use against me,\" Alex replied.\n\nSimon sighed as if he were engaging with a toddler and not his adult daughter. \"You always had flair for the dramatic,\" he responded in a bored tone.\n\n\"Cut the crap, dad,\" Alex finally shouted. \"I saw your face at the gala. What kind of a father enjoys watching his daughter's heartbreak? Or skips every single one of his daughter's shows? Or how about the kind that has never once told his daughter he loves her?\"\n\nSimon had an expression on his face that Alex couldn't decipher, mainly because she had never seen it before. He looked like he wanted to say something, but suddenly his eyes were roaming around the entryway as if he wanted to be anywhere else.\n\n\"I saw your shows, Alexandra,\" Simon finally said in a quiet voice, still avoiding her face.\n\nAlex was ready to shout her next retort but his words were so surprising that they stopped her short. She could feel her own brow furrowing in confusion now. She had never once seen her father at any of her shows, even when she was younger, so his statement made no sense.\n\n\"What?\" she finally asked in a much softer voice than she had used before.\n\n\"I don't want to do this with you,\" Simon replied in a stiff voice. \"The past is the past.\"\n\n\"You don't want to do what? Show any kind of genuine emotion? No wonder I don't know how to.\"\n\nWhen Simon didn't respond, Alex pressed her hands against her eyes in frustration. She had no more tears to give\u2014 especially to this man\u2014 but she did deserve an answer from him.\n\n\"Why didn't you ever tell me you saw me perform?\" she finally asked and she hated how small her voice sounded. As if she was a child again asking for validation from her father.\n\n\"Why does that matter now?\" he asked in return.\n\n\"Maybe it would show me you cared, even if just barely.\"\n\nAlex could see some kind of emotion cross her father's face, but just like every other time they had ever gotten close to a real conversation, he schooled his features once again and just looked hard.\n\n\"I'm the Artistic Director of a theater. Of course I wanted to see if my only daughter could cut it.\"\n\nAlex looked at her father and nodded. After the gala, she knew her relationship with her father was over. But for the first time, his cutting words didn't hit her as hard as they once did.\n\n\"Right. And I didn't cut it,\" she responded with little emotion in her voice.\n\n\"Very few people do,\" Simon responded. \"I was helping you avoid a very long and very heartbreaking career choice. I see people's dreams fail every day in this city.\"\n\nEven once she was an adult and understood what kind of person her father was, Alex couldn't deny that he still held an air of regal sophistication. And in many ways, she respected him. But now, as she stood there looking at his hardened face, she could only see a sad, lonely man hiding behind a fancy suit and house.\n\n\"Yes, you are such a kind and considerate father. Thank you so much for that clarity,\" Alex replied sarcastically. \"And on that note, I think I'll go.\"\n\nAlex pushed past her father and started walking to the door before his voice stopped her progress.\n\n\"I never asked to be a father,\" she heard him say.\n\nAlex turned around, but he had his back to her.\n\n\"Don't worry. I relieve you of all further duties,\" she said.\n\nWhen it became clear he was just going to continue staring ahead and wasn't going to add anything else, Alex turned back to the door and opened it.\n\nBefore stepping outside, she took one last look at the entryway. Her mom had loved this house, but her mom wasn't here anymore and as Alex's eyes settled themselves on her father's stiff back, she finally felt free of the hold the place had on her heart.\n\n\"You should know that mom was the only good thing about you,\" she said to his back. \"Now that she's gone, you're just a sad, lonely theater director. You may come home to a mansion each night, but the beds are still all empty. And I'm guessing they always will be.\"\n\nAlex turned back to the door and walked out of it. She knew it was probably the last time she would ever step inside her parents' house and she was at peace with that. It was time to move on from that life, and especially, from the man inside.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nAlex walked quickly down the block, needing to get away from this street as fast as she could. She finally slowed her pace once she was two blocks over and could text her driver what her new location was.\n\nAs she waited for her driver to arrive, she allowed herself to think about the exchange she just had with her father, but she wasn't nearly as upset by it as she would have thought she'd be.\n\nBecause as usual, she knew that Courtney was right about everything. Her mom died because of an unfair illness that took her involuntarily away from Alex. But she had loved her daughter and nothing proved that more to Alex than the display of support she saw in her mom's movie alcove.\n\nSimon never cared to begin with and obviously never grew to love his child. And in time, she could learn to live with that realization instead of waiting around for declarations that would never come from him.\n\nWhat she couldn't live with was letting Quinn go. But she didn't want to be this scrambling, emotional mess for her. She wanted to be someone Quinn deserved.\n\nFor both of them, she needed to find a way to make herself happy that had nothing to do with validation from her father and for once, she actually had an idea for how to do that. She just needed to make one call to a man she knew would help her.\n\nChapter 41\n\n \n\n\"Quinn, where are you today? Miles from here it seems to me,\" Diego shouted from the back of the theater.\n\nWith only one week until her opening night, Quinn was finally able to rehearse her show on Horizon's actual stage, but just like with every other run through she had done so far, she felt detached from the work.\n\nAfter Jenna, she had promised herself she would never let a break-up destroy her like that one did. But ever since she walked away from Alex on the night of the gala, she had vacillated between crying uncontrollably and just feeling numb like she did right now in the theater.\n\nThe creative spark she had felt ever since arriving in New York dissipated that night and she hated that she was again allowing a woman to have that kind of effect on her. But somehow with Alex, it felt different than Jenna. It meant more.\n\nWith more time to reflect on everything that happened that night, Quinn knew deep down that Alex loved her. And she knew how much Alex herself was probably hurting as well. But that didn't change the fact that Quinn valued herself too much to be with someone who was going to run or push her away every time things got tough. She wasn't convinced Alex would ever let herself be as vulnerable as Quinn needed her partner to be.\n\n\"Come, sit,\" Diego said, pointing to one of the seats in the theater.\n\nQuinn made her way over to the seat and plopped down in it with a frown on her face. She couldn't blame Diego's frustration with her. She knew that she hadn't been giving rehearsals her all, but at this point, it was as good as she could do with everything that was constantly running through her head.",
        "Diego stood up from his own seat so he could move down and sit right next to Quinn. He held up her script in his hand.\n\n\"This script is why I'm here. It's why I thought you were here. Do you not believe in it anymore?\" he asked.\n\n\"I do believe in it,\" Quinn replied, not looking at him.\n\nDiego gently put two fingers under Quinn's chin and directed her gaze towards his face. \"Then tell me. Where has the passion gone? And can we get it back, mi dulce?\"\n\nQuinn wasn't about to tell Diego that she was having trouble at work because of a girl so she just nodded.\n\n\"We finish lighting tomorrow. And it will be a very long and very grueling day,\" Diego said, letting his hand finally drop from her face. \"Go home and do something that makes you smile. Come back tomorrow ready to work. Yes?\"\n\n\"Thanks, Diego,\" Quinn replied. \"I'll be ready.\"\n\n\"Good. I've seen you do every one of these scenes to perfection,\" he said, holding the script up again. \"Whatever it was that created that raging heartbeat\u2014 find it again. Honor your work.\"\n\nDiego leaned down and placed a quick kiss on Quinn's head before moving out of the row of seats.\n\n\"Tomorrow! We begin again,\" he shouted as he left the theater.\n\nQuinn sat back in the seat and let out a frustrated sigh. She desperately wanted to be alone but she knew she wasn't going to find that in the busy theater where the production team was still setting lights and working around the stage. So, she picked herself up from the seat and made her way to the front row so she could grab her bag.\n\nBeing in the theater didn't feel as good as it once did anyway and she couldn't lie to herself about why that was. She knew she was imagining it, but the mood in the entire place seemed down since the gala. And for her, the less time spent in the theater meant there was less of a chance that she would run into Janet.\n\nSo far, Simon and Janet had steered clear of her rehearsals, but with her opening coming up soon, she knew she couldn't avoid them forever. They'd at least be at her opening and Mikey already warned her that she wasn't free of them even then. Without a Managing Director at the theater, they would have to have at least one meeting to go through her reviews and final performance schedule.\n\nLuckily, Mikey had taken all the meetings Janet had scheduled so far, which made sense given her rigid rehearsal schedule, but she had never been so grateful for his presence as her manager and not just her friend.\n\nWhen Quinn had gathered her bag and was heading out of the lobby doors to the street, the very person she had just been thinking about was standing at his usual spot at the bottom of the stairs. Quinn was used to Mikey waiting for her post-rehearsal and it seemed most of their business conversations now took place on her walk home from the theater.\n\nEver since the morning after the gala when Mikey had come over and seen the state Quinn was in, he had been more attentive and less pushy on the business side of things. And as she bounded down the steps to meet him, she could see the same wary look on his face that he had been directing at her all week.\n\n\"Are you coming from a meeting, going to a meeting, or just stalking me again?\" Quinn asked as she got close enough for him to hear her.\n\n\"You wish. I think you're going to need to wait until your show opens before you get stalkers,\" he replied and motioned for them to walk down the street in the direction of Quinn's apartment.\n\nThey had done this so many times after her rehearsals that they didn't need to communicate on which streets they'd take to get there.\n\n\"No thanks, I think I'll pass on that,\" she responded.\n\n\"Well, you may not get a choice in that. To answer your question, I was coming from a meeting. With Janet. Apparently, your show has already sold out and has a waiting list. She implied that's quite unusual for a Winter Series production.\"\n\nQuinn scoffed as soon as Mikey quit talking. \"How would Janet even know that? She was a publicist until a week ago.\"\n\nQuinn could see Mikey turn his head to her but she kept her gaze forward. After the gala, Quinn had told Mikey that she didn't even want to do her show at Horizon given everything that had gone down, but he had quickly talked her off that ledge. She knew giving up this opportunity, for any reason, wasn't worth it, but she also didn't want to talk about Janet or even hear the woman's name.\n\n\"How was rehearsal?\" Mikey asked. He knew how sensitive she was around the subject of Horizon and he didn't seem to want to talk about Janet any more than she did.\n\n\"Fine,\" Quinn replied.\n\nMikey must have been able to tell Quinn wasn't in the mood to be pushed on anything, because even though she could feel his eyes on her again, he didn't say anything. For the next several minutes the two of them transitioned into an easy silence as they got closer to Quinn's apartment.\n\n\"There's one more thing,\" Mikey said as they finally got to the steps outside her building. Just like every other time he's walked her home, Quinn moved up a few steps so she could lean on the rail and look down at him.\n\n\"Janet wants to discuss an extension,\" he continued.\n\n\"How can they extend me?\" she asked. \"There's a show right after mine.\"\n\n\"It wouldn't be an official extension. They would bring you back as their Fall show for a full run.\"\n\n\"Simon and Janet haven't even sat in on one of my rehearsals,\" she replied. \"The only person there who's seen any version of it quit. Why would they be talking about a full run?\"\n\n\"I think it has something to do with how fast you sold out and some of the early buzz you've gotten.\"\n\n\"I hope you don't mean the Post article,\" Quinn said with more bite than she meant for Mikey, who was purely the messenger in this.\n\n\"That article may have been intended to hurt Alex, but it's had other effects as well. Namely, everyone in the city seems to be talking about your opening night.\"\n\n\"Not exactly the kind of success I was going for.\"\n\n\"I know that, Q. Once your show opens and people see how amazing it is, none of that will matter.\"\n\n\"What if it's not amazing?\" she asked in a much less combative voice.\n\nMikey moved up a step so he could put his hand on her shoulder. When she brought her eyes up to his, she could see the familiar look of support that had gotten her through so many hard times before.\n\n\"Don't go there again. I know how proud you are of this work. You know how good this show is. Don't let another break-up make you think any different,\" he said. \"We can talk about the extension later. Just something to think about.\"\n\nShe knew Mikey was right. She had let Jenna tear her down so far that she forgot who she was. But she was in New York City for a reason that had nothing to do with a woman.\n\n\"You have people in your corner,\" he said when she just nodded in response to his first statement. \"Go upstairs. One of them is waiting.\"\n\nQuinn's eyes snapped up to Mikey's. \"What do you mean? Who's up there?\" she asked.\n\nMikey squeezed her shoulder and gave her another soft smile. \"Better go find out,\" he said before turning and walking down the steps. \"See you tomorrow.\"\n\nQuinn didn't even say goodbye as she watched him walk down the street and disappear around the block, but her stomach was suddenly a mess at who could be upstairs and her mind was racing too fast to give him a proper farewell.\n\nBefore she could even process her movements, her legs were taking her up the final steps and into her apartment building. She was self-aware enough to admit that part of her hoped Alex was waiting there. Even though she was still so upset with the blonde and didn't know what she would say, she couldn't lie to herself\u2014 she was desperate to see the other woman again.\n\nAs she pushed her door open and rushed in, the person that rose from her couch was a happy sight, but not the one she was hoping for.\n\n\"Claire,\" she said as she looked at her older sister.\n\n\"Hey, Quinney.\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nQuinn felt frozen to the spot for a moment as she stared at her sister. It's not that she wasn't happy to see her, but she was still coming down from the surprise that it wasn't Alex, plus the shock that her sister was even in New York.\n\nClaire didn't seem to notice the conflicting emotions crossing Quinn's face though because she walked quickly over to where her sister stood and pulled her in for a tight hug. The second Quinn felt Claire's arms around her, all the emotions that had been simmering just under the surface all day, came crashing down on her.\n\nAs her tears began to fall, she could feel her body begin to shake in her sister's arms and if Claire wasn't holding her up, she would probably fall into a heap on the ground.\n\n\"This was supposed to be a good surprise. What's going on?\" Claire asked as she continued to hold her sister.\n\n\"It is a good surprise,\" Quinn tried to say through her tears but her words came out garbled. \"It's the best surprise.\"\n\n\"Ok, well that helps my ego a bit,\" Claire said and pushed Quinn off her body so she could look at her sister's face. But the loving look she directed at Quinn only caused the tears to stream down her face even more freely. \"Come here,\" Claire said, guiding Quinn over to the couch so they could both sit down. \"Now tell me why you're crying. I know your happy tears and these aren't them.\"\n\nQuinn leaned forward and pressed her hands into her eyes, trying to stop the flow that didn't seem to want to let up. She wanted to talk to her sister but didn't want to be choking out tears as she did.\n\n\"Is it Alex?\" Claire finally asked when Quinn still hadn't said anything. \"Mikey didn't tell me much, but he implied something happened.\"\n\n\"Is that why you're here?\" Quinn asked, finally able to speak.\n\n\"I'm here for your opening. Will couldn't get the time off work, but he sends his love.\"\n\n\"You came for my opening?\"\n\n\"Of course I did. I would never miss this. And from the looks of things, I'm glad I'm here,\" Claire said, rubbing her hand down Quinn's back. \"Will you tell me what happened?\"\n\nClaire was always gentle in the way she approached things and never pushed Quinn\u2014 something Quinn had always appreciated. She didn't ask anything else and just waited until Quinn spoke again.\n\nQuinn wanted to confide in her sister but as she opened her mouth, she didn't even know how to articulate what happened. She didn't know how to explain the extreme fear she saw in Alex's eyes that night. She didn't know how to explain that she knew Alex would never truly let her in, despite how she might feel about Quinn.\n\n\"She won't allow herself to be vulnerable with me,\" she said in an attempt at an explanation. \"Her father betrayed her in a pretty terrible way and instead of let me in so I could help her the night it happened, she just pushed me away. Her go-to is to shut down and snap at anyone who shows her any kind of love. And I don't know how to move forward with someone like that.\"\n\nClaire continued to rub Quinn's back as she listened to her. For a moment she didn't say anything but Quinn could see her nodding her head thoughtfully out of the corner of her eye.\n\n\"Does she know you're in love with her?\" Claire finally asked.\n\n\"Yes, she knows. I told her that same night.\"\n\n\"Do you think she loves you?\"\n\n\"I know she does. She told me she does. But you should have heard the way she said it to me. She basically shouted it in anger. All because I was asking her to open up to me.\"\n\n\"All this happened the same night her father betrayed her?\" Claire asked next.\n\nQuinn shifted on the couch. She had thought about the timing of everything over and over again since that night. She knew she had pushed Alex on a night the blonde was struggling with something pretty significant, but it doesn't change the result. Alex would always shut down when pushed and Quinn didn't want to be with someone who ran.\n\n\"Yes. I found her drinking at a bar and we got into a fight shortly after,\" she replied, knowing already what her sister would probably say.\n\nBut Claire didn't say anything. Instead, she got up and moved to the kitchen. When she came back, she was holding two beers and walked back to the couch so she could hand one to Quinn and sit back down.\n\n\"You know, Will broke up with me the first time I ever told him I loved him,\" Claire said right before taking a long sip of her beer.\n\n\"Will is obsessed with you. I don't believe it.\"\n\nClaire laughed and gave the signature smile that always crossed her face when she was thinking about her husband.\n\n\"He is, but god, when I met him, he was an out of touch frat boy who was almost flunking out of college.\"\n\n\"How did I not know this?\" Quinn asked, sitting up.\n\n\"Because I didn't want you, mom and dad to hate my new boyfriend. I knew we'd probably get back together.\"\n\n\"What happened?\"\n\n\"We did get back together. And then it happened again. But I believed in him. I knew who he was deep down. Back then, Will was a product of his environment. Nobody had ever told him that he could succeed at anything. You know how his parents are.\"\n\n\"When did things change?\"\n\n\"Well, after a few useless break-ups, he started to trust that I wasn't going anywhere. And I learned the kind of communication that worked best with him. Soon all that fell away and we were just Will and Claire. But it wasn't always easy. Our parents aren't perfect, but we always knew we were loved. Will didn't have that.\"\n\nQuinn took another sip of her beer as she listened to Claire. She couldn't help but think about Simon and some of the things Alex had told her about their relationship.\n\n\"I'm not saying it's your job to teach Alex how to be in a relationship,\" Claire continued. \"I'm just saying that everyone is different in how they deal with their emotions. And not everyone wears their heart on their sleeve like you do. I love that about you, but I could see it being scary to someone who isn't like that naturally. Sometimes it takes time to break out of what we know. Do you still love her?\"\n\n\"I can't just turn that off because she broke my heart,\" Quinn responded.\n\n\"Then your heart is still open to her. Maybe give it some time.\"\n\nQuinn looked over at her sister and was suddenly so grateful she had her there. The next few days would be beyond stressful with her final rehearsals and then opening night and it would be nice to have someone who knew her so well by her side for it all.\n\n\"I'm really glad you're here,\" she said to Claire, causing her sister to smile widely.\n\n\"Me too. Mikey told me Horizon wants to produce a full run of your show. How do you feel about that?\"\n\n\"I just found out so I haven't processed it really. I know I don't want to work in a theater with those people. But I also don't feel like I can turn something like that down.\"\n\n\"You have a lot to think about, Quinney.\"\n\n\"What do you think I should do?\"\n\n\"About the possible extension?\"\n\n\"No.\"\n\nQuinn knew her sister would understand the larger meaning behind her simple response. Claire leaned back on the couch and motioned for Quinn to put her head on her shoulder, which she did.\n\n\"Maybe focus on your show. Your just days away from opening. And then figure things out. Maybe break the ice and call her.\"\n\n\"Why should I be the one to break the ice?\" Quinn asked and she knew her tone sounded petulant.\n\n\"We are who we are. If you do decide to give her a chance, you'll need to accept her faults. And how you can work through them. But being stubborn never made anyone happy. It may be that you need to make that first move.\"\n\nClaire always had good advice and she would think about her words, but right now, Quinn was too overwhelmed to make any decisions. And Claire was right\u2014 she had an opening coming up and she needed to focus.\n\n\"Are you hungry?\" she asked, turning her head to Claire.\n\n\"I only came here because you keep raving about the pizza. Please tell me there's somewhere close.\"\n\nQuinn laughed and pushed off the couch so she was sitting up. \"Come on. This is New York. You're never far from a slice.\"\n\nChapter 42\n\nQuinn sat at the mirror in her dressing room and gave her reflection one last look. She could hear the rising pitch of audience members filtering into the theater and knew she needed to get into costume soon. But she just wanted a moment to sit alone in the quiet of her dressing room without Mikey and Claire hovering over her.\n\nNot that she hadn't loved having Claire in town the past few days\u2014she absolutely did. She only got to see her in the morning and late at night when she was done with Diego, but her sister's presence still calmed Quinn and allowed her to focus on what she needed to do. But having someone in her apartment, plus the time Mikey spent with her outside of rehearsal, meant that there was very little time for herself.\n\nThough the lack of alone time she'd had this week was probably good, all things considered. Alex was still constantly on her mind, but Quinn was able to put those thoughts aside as her world barreled towards this one important moment. One that didn't include romantic angst. And Diego seemed to appreciate the difference in what he saw in her performance.\n\nEach rehearsal just improved upon the last and she knew the show was finally ready for audiences. But now, as she sat at the mirror alone, the excitement she should feel about her New York debut was dimmed. All of it felt dimmed without Alex.\n\nShe needed to shake herself out of her melancholy mood before she walked on that stage, so after taking a long breath, she turned around so she could put on her simple costume of jeans and a t-shirt.\n\nAs she walked over to the clothes rack that held her Act One outfit, she thought she could hear the noise from the theater get even louder and she wondered how many people she would even know out there outside of Claire and Mikey. She knew it wouldn't just be audience members in the house tonight either. Reviewers would also be in attendance. Alex had told her weeks ago that because each show in the Winter Series only ran for three weeks, unlike mainstage shows, there were no preview performances for critics to review. They all came on the same night\u2014opening.\n\nShe wished she knew if Alex would be one of the people in that audience. But she hadn't heard from the blonde since the gala two weeks ago and figured she'd be staying as far away from Simon and Horizon as she could. Quinn couldn't help the way her stomach tightened at the thought of doing this show without Alex watching.\n\nQuinn was just about to take her top off when she heard a knock at the door. For a moment she thought it might be Mikey and she actually loved surprising him with her shirt off\u2014mainly because it grossed him out so much\u2014 but something about the light knock gave her pause.\n\n\"Come in,\" she said, putting the shirt back on the rack and turning to the door.\n\nQuinn heard Janet before she saw her. The clanging of the woman's bracelets was as pronounced as ever and soon the woman was moving swiftly into the room as if she owned it, which Quinn guessed she sort of did now.\n\n\"Quinn, dear. I came to tell you to break a leg and congratulations,\" Janet said.\n\nNow that Quinn had seen her true colors, Janet's easy, charming demeanor felt smarmy. Even though she was mad at Alex, Quinn still felt an incredible defensiveness over the woman and suddenly being in Janet's presence made her entire body tense.\n\n\"Thank you,\" Quinn said before turning back to her clothes rack, pretending to sift through it.\n\nShe didn't want Janet to stay, but it also wasn't the best idea to mouth off to the woman who now ran the theater. She hoped just ignoring her presence might get her to leave.\n\n\"I understand you're close with Alex, dear,\" Janet finally said after a few beats of awkward silence. \"But I hope you can understand the opportunity here. And will be able to move forward professionally.\"",
        "Janet's condescending tone instantly grated on Quinn and she pulled the rack aside so she could finally look at the other woman.\n\n\"If I had trouble being professional, I wouldn't be here right now. What you did to Alex wad despicable,\" Quinn spat out.\n\nIf Janet was surprised by Quinn's outburst, she didn't show it on her face. She simply folded her arms into the scarfs hanging from around her neck and gave Quinn a small, patronizing smile.\n\n\"Simon made the decision he made. And I hope you know that we both respect your show greatly. I expect big things from you if you play your cards right here.\"\n\n\"And what exactly does playing my cards right entail?\" Quinn asked, folding her own arms.\n\n\"Simon Anders is one of Broadway's most important investors, as am I, I might add. This show could go far. What can she offer you now, Quinn?\"\n\n\"My relationship with Alex is none of your business.\"\n\n\"Of course not. But you're too young to choose love over success. Take it from someone who once made that mistake.\"\n\nThere was so much more Quinn wanted to hurl at Janet, but as the noise from the theater grew louder by the minute, she was reminded of where she was and what she was about to do. Now wasn't the time to burn a bridge with the Executive Director of Horizon. But she also wasn't going to listen to career advice from a woman who only got to where she was through duplicity.\n\nJanet took one look around the dressing room and dropped her hands so she was in what she must have thought was a less combative stance.\n\n\"Anyway, dear. Let's see how tonight goes and then figure out the future. Horizon Theater Group is going to soar if I have anything to do with it. Alex ran this place like a moody teenager, but I plan to see it finally live up to its legacy.\"\n\nQuinn's anger rose again at hearing Janet's dig at Alex and she didn't even try to hold back the bite in her tone as she responded.\n\n\"Thank you for stopping by,\" she said. \"Now, if you'll excuse me, I need to change. I don't want any photos to end up with your friend at the Post.\"\n\n\"Careful,\" Janet said with a smile that Quinn definitely didn't interpret as friendly. \"I like you. And I think your show could do well long-term. But don't for one moment think that I need you. And don't forget who I am in this city. Someone we both know already made that mistake. Don't follow her lead, Quinn. You're too good for that.\"\n\n\"You mean too good for her,\" Quinn stated.\n\n\"Perhaps both,\" Janet replied with the same smile. \"Break a leg tonight, dear.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nIt felt strange for Alex to be standing so close to the place she had spent so much time, but not actually connected to it anymore. This was the first opening night in as long as she could remember that she wasn't front and center. But right now, as she leaned against the building across the street from Horizon, she was anything but front and center. Tonight, she was just another audience member.\n\nIt felt especially strange not being involved in this particular production considering how instrumental she was in bringing it to the theater. But she was happy Quinn would still get her moment and that whatever Simon and Janet did to Alex, it hadn't affected Quinn's show. She deserved a stage and Alex was thankful she still had one.\n\nAs Alex stood there looking at what had become her second home over the years, she wasn't as upset or sad as she thought she'd be. In fact, ever since the visit to her parents' house, and the events that she orchestrated after, she had felt freer and more determined than she had in all the time she spent at Horizon. For once, she was excited to experience a piece of art as a fan and not as someone who had to count the dollars afterwards. And it wasn't just any piece of art. She was going to get to watch the woman she loved have her New York debut.\n\n\"Not that I'm trying to rush whatever ruminating roller coaster you're on right now, but it's fucking cold out here. Can we please go inside?\" Courtney asked from beside her.\n\nDespite the confidence she felt a second before, the moment Courtney spoke, Alex felt her stomach explode in butterflies. And not just at the prospect of seeing Quinn. Alex knew her presence at the theater was probably unwelcome considering her last conversation with both Janet and her father and the last thing she wanted to do was to make this night about her. She had asked Courtney to wait with her until most of the crowd had already entered the lobby hoping it would decrease her chances of running in to anyone she knew.\n\n\"Ok, let's go,\" Alex finally said and they both pushed off the wall so they could head across the street to the box office.\n\nAs they walked up the theater steps, Alex clutched the small package she held to her chest. She had no idea how Quinn would react to it given how her last attempt at a gift went, but she wasn't scared of trying anymore. She was going to try and try until Quinn gave her another chance. And this wasn't just a gift. She hoped Quinn could see the sincerity behind it.\n\nAs they waited for the sole person in the line in front of them to get his ticket, Alex again reflected at the turn her life had taken recently. While Managing Director, she would often watch the flow of the box office during shows to make sure things were efficient, but it felt surreal to suddenly be a patron, waiting for her own ticket.\n\nAlex knew everyone that worked at the theater so when it was their turn to step up to the counter, she recognized the person working immediately.\n\n\"Hey, Talia,\" she said to the woman behind the glass.\n\n\"Alex! Hey!\" Talia said, but Alex could tell she was surprised to see her there. \"Hey, Courtney. How are you guys?\"\n\n\"Fantastic. There should be two tickets under my name,\" Courtney responded with a smile.\n\n\"Unfortunately, the box office is closed now,\" an icy voice said from behind them. \"We had to release those tickets for some important members of the press. I'm sure you both understand.\"\n\nAlex felt her whole body tense as she heard Janet speak. Her eyes caught Talia's, but the other woman just gave her a quizzical look and a quick shrug.\n\nAlex took a deep breath so she could steady her emotions before she turned around to face the woman. Courtney, however, did not seem to possess the same kind of control.\n\n\"Oh god, Janet. Does Simon have you running the box office now too? The whole bouncer thing would be more intimidating without all the scarfs,\" Courtney spat out, waving her hand at the myriad of flimsy scarfs hanging around Janet's neck.\n\n\"Or I just had a feeling you'd turn up,\" Janet replied, only looking at Alex as she spoke.\n\nAlex looked at the woman she had once trusted. She couldn't even remember a time when Janet wasn't a core part of her life and in some ways, she had always thought of the woman as the antithesis to her father. But now, Janet's easy flamboyance and gentle authority just seemed like a mask for a much more sinister persona. One that was actually so similar to her father's that she couldn't believe she never saw it before.\n\n\"Courtney is a paying customer. You can't bar her entry,\" Alex said to Janet.\n\n\"We'll be sure to refund her tickets and she has our deepest apologies for the inconvenience,\" Janet replied. \"Courtney, we'd be happy to see you at another show,\" she added, finally moving her eyes from Alex to Courtney.\n\n\"And I'd be happy to tell you where you can put that apology,\" Courtney replied.\n\nAlex loved how protective Courtney was of her, but she could feel the tension vibrating off her friend and knew if she wasn't stopped, she'd snap at Janet and this wasn't the time for that. In fact, as Alex looked at Janet again, she didn't feel any of the same rage she had felt the night of the gala. She was done with this place and everything that went with it.\n\nShe put a gentle hand on Courtney's shoulder before stepping slightly in front of her to face Janet.\n\n\"It's ok, Court. She's not worth the energy,\" Alex said.\n\n\"If you care about her, you'll go,\" Janet responded. \"There's an entire room full of critics in there. Don't make tonight about you.\"\n\nShe could argue that Janet was the one who created the original mess with the media, but out of the corner of her eye, Alex could see more people coming up the theater steps and the last thing she was going to do on Quinn's opening night was make a scene.\n\n\"Quinn would want Alex in there,\" Courtney responded from behind Alex.\n\nAlex wished she knew that was true and Quinn actually did want her there tonight. But she wasn't going to throw a tantrum in front of Janet. Not on Quinn's night.\n\n\"Let's go,\" Alex said, turning to Courtney. \"We all know this place can't afford another media scandal.\"\n\n\"Neither can Quinn,\" Janet replied in an icy tone.\n\nJanet's words caused Alex to turn around again and she took one step closer to the woman so she could keep her voice low as she spoke. There were still a few people outside the theater and she didn't want to be overheard. She was highly conscious of Janet's threat that members of the press were around.\n\n\"Quinn is the best thing to ever cross this theater's stage. I'll be interested to see what you do once you're not riding the coattails of the programming I chose or artists like her,\" Alex said in a low voice.\n\n\"That's rich coming from a girl who rode her father's coattails for all these years,\" Janet replied.\n\nAlex nodded her head and returned the woman's cold smile. \"Perhaps I was. But I'm not anymore.\"\n\n\"No, now you're just unemployed,\" Janet said.\n\n\"Not for long. Good luck. You're going to need it here,\" Alex said before turning around and walking back down the theater steps.\n\nShe could vaguely hear Courtney say something to Janet before she followed Alex, but she couldn't bring herself to really care what it was. She had spent the last two weeks shedding herself of all the toxic parts of her life and walking away from Horizon for what may be the last time, felt like the final piece.\n\nAnd while she didn't really wish luck on Janet or her father, she wasn't being sarcastic in what she told the woman. The two of them were going to need all the help they could get. Alex was finally beginning to understand her worth and she knew how influential she had been in the success of that theater. She had no faith that Janet would continue that trend.\n\nBut none of that mattered to her anymore. She had her own future to worry about. The only thing still at Horizon that she cared about was the woman about to take its stage. But Quinn's show would close in three weeks and then they'd both be free of Simon Anders and Janet Jameson. Alex just hoped Quinn would eventually see her.\n\nOnce they were down the block, about to pass the alleyway entrance that would take them to Horizon's stage door, Courtney put her hand on Alex's arm and stopped them.\n\n\"Are you ok?\" she asked.\n\n\"I should have seen that coming,\" Alex replied. \"I probably shouldn't have even tried. Quinn doesn't deserve to have her show monopolized by this drama.\"\n\n\"Quinn would want to know you tried your best to see her show on opening night,\" Courtney said. \"You did the right thing.\"\n\n\"Thank you, Court. I know you get a lot of work out of Horizon and that interaction with Janet probably didn't help.\"\n\nCourtney let out something that sounded like a mix of a snort and a laugh. \"Please. Like I'd ever step foot on their stage again. Now, give me that,\" she said and reached for the package still in Alex's hand.\n\n\"Why?\" Alex asked.\n\n\"This isn't the Pentagon, Al. We were breaking into this theater long before you got the codes. I can get this to her if you want her to have it.\"\n\nAlex looked at her friend's mischievous smile and couldn't help but return it. She desperately wanted to be in the audience when Quinn debuted her show, but not at the expense of the show itself and that's what her presence would do if Janet had her way. She wasn't going to give that gift to Janet. She would go another night\u2014 after all, Janet couldn't be at every show and she highly doubted they'd hire security to watch out for her.\n\n\"I was planning on giving it to her after the show,\" she said to Courtney.\n\n\"What's the difference?\"\n\nAlex looked at her watch. \"She goes on in ten minutes. Janet was right about one thing. Tonight is about Quinn and I don't want to do anything that will mess that up.\"\n\n\"Then I'll sneak in once she's on stage and I'll put it in her dressing room.\"\n\n\"You look entirely too excited about this,\" Alex said when she looked at Courtney and the red head was practically bouncing on her feet.\n\n\"I feel like a spy. I should have worn all black,\" Courtney replied, looking down the alley like she was on a mission.\n\n\"I think it's the hair that's the giveaway more than anything else,\" Alex replied.\n\n\"True. Ok, I'm off. If you don't hear from me again, tell Paige I went out bravely.\"\n\n\"Just please don't get arrested for trespassing.\"\n\n\"Why? That would make a good story. And my best friend can afford my bail.\"\n\n\"Not anymore. Don't forget that I've spent my money. Now I'm just a starving artist like you.\"\n\n\"And I've never been prouder,\" Courtney said, but there was no sarcasm in her tone. She was looking at Alex softly and Alex could tell she meant what she said. \"Where will you go now?\" Courtney asked next.\n\nFor years it seemed as if the only answer Alex ever had for that question was her apartment, a bar or Horizon. But the realization that she had somewhere new and exciting to go caused her to smile widely at her friend.\n\n\"Back to work.\"\n\nChapter 43\n\nQuinn tried to shake off her interaction with Janet, but now that she had her make-up fully done and her costume on, she had nothing in her dressing room to distract her from her rising anger.\n\nJanet had only ever shown an interest in Quinn because of her name and since joining the theater, she hadn't shown one ounce of interest in her show. The fact that neither Simon nor Janet cared to attend a rehearsal showcased to Quinn just how much they really supported her. Perhaps they wanted to extend her show, but it wasn't because they believed in it. They believed in what it could do for their theater.\n\nShe stopped pacing when she heard another knock on the door. She closed her eyes for a moment and made a silent prayer that it wasn't Simon behind it. She didn't think she could take both Horizon leaders in such quick succession.\n\nBut when Courtney was suddenly peering around the door, Quinn let out the breath she was holding.\n\n\"Can I come in really quick?\" Courtney asked.\n\n\"Yes,\" Quinn replied and watched the red head move into the room and close the door behind her.\n\nShe looked a little flustered, but Courtney often had that kind of energy so Quinn didn't read too much into it. Mainly she felt bad as she was suddenly faced with the woman whose texts and calls she had ignored for the past two weeks.\n\n\"I'm sorry I haven't gotten back to you,\" she said before Courtney spoke.\n\nCourtney waved a hand in front of her. \"We don't have time for that. Besides, it's totally fine. I get it. I'm the best friend,\" she said, pointing to herself. \"And that's actually why I'm here.\"\n\nQuinn's stomach did a flip when she realized Courtney was talking about Alex.\n\n\"Is she here?\" Quinn heard herself asking before she could stop herself.\n\n\"No, she's not. But she tried,\" Courtney replied.\n\n\"What do you mean?\"\n\n\"Janet wouldn't let either of us into the theater. But Alex was here and she really wanted to see your opening. But once Janet made it clear we were barred, Alex didn't want to make a scene that drew attention away from you.\"\n\nQuinn leaned against the make-up counter as Courtney spoke, not feeling like she could really hold herself up. The anger she had felt right before Courtney entered the room only grew as she listened to what the red head told her.\n\n\"Janet...she sent Alex away?\" Quinn asked in a whisper even though she had heard Courtney clearly. \"But she came? She was here?\"\n\nCourtney took the few steps over to where Quinn was leaning and put her free hand on one of the brunette's shoulders.\n\n\"I know you've been upset with her. And you have every right. She's been a total idiot. But she came. And I have a feeling this isn't the last time she'll try.\"\n\n\"Try to see my show?\"\n\n\"Not just that,\" Courtney said softly. \"Just try.\"\n\n\"What's that?\" Quinn said, looking down at the package in Courtney's hand.\n\n\"Oh! That's the reason I came. Alex was going to get this to you after the show, but now she can't. And I had explicit instructions not to disturb you with this before your show, but I never listen to Alex Anders. And I guess if you're anything like me, I'd want to know that the woman I love was thinking about me. It's never good to go on stage sad.\" Courtney reached around Quinn and set the package down on the counter behind her. \"Now I need to go before NYPD finds me lurking back here.\"\n\n\"Did Janet call the police?\" Quinn asked, looking horrified.\n\n\"No, but this whole breaking and entering thing makes me feel more bad ass if I think that she did,\" Courtney replied.\n\nQuinn gave Courtney a smile in response, but her head was still spinning from the revelation of what Janet did. At this point she didn't know if the butterflies in her stomach were from the impending debut of her show or the fact that she now knew that Alex had at least tried to come.\n\n\"Anyway, I'll get out of your dressing room now,\" Courtney said. She looked at Quinn tentatively before she pulled her in for a sudden hug. \"I'm sorry we can't be there tonight. I assume Mikey's in the audience?\"\n\n\"Yes, and my sister flew in from Seattle to see it,\" Quinn replied, attempting to control the shakiness she suddenly felt in her voice.\n\n\"Good,\" Courtney said as she moved over to the door. When she was about to leave, she turned back to Quinn.\n\n\"Alex told Janet tonight that your show is the best thing to ever cross Horizon's stage. I know it's killing her that she can't be here. I hope you'll give her another chance.\"\n\nCourtney stood there for a moment and Quinn thought she looked like she was trying to decide on something.\n\n\"She'll be at 22 Thomas Street later if you want to find her. Break a leg, kid,\" Courtney finally said before giving Quinn a wink and leaving the dressing room.\n\nQuinn continued leaning against the counter, looking at the door for a moment. Her breathing felt erratic and she knew she needed to steady herself before she went on stage. But she was livid. It was her show and Janet had no right deciding who could and couldn't attend it.\n\nQuinn finally turned her head so she could look down at the package Courtney dropped off. She knew she should focus on controlling her heated emotions before going out on stage, but all she wanted to do was open whatever it was that Alex sent.\n\nShe sat down in the same chair she used to put on her make-up and unwrapped the brown paper. Sitting inside was an envelope on top of something else that was wrapped. But unlike the brown paper on the outside, this wrapping paper had little rainbow fish all over it. She couldn't help but smile slightly at the thought of stoic Alex Anders searching through a store for fish wrapping paper.\n\nQuinn could feel her hands shaking as she began to open the envelope. She unfolded the single piece of paper that was inside and read a handwritten letter from Alex.\n\nQuinn,\n\n \n\nI hope I get to say all this in person and this note becomes redundant. But in the chance that I don't get to see you tonight, please read this\u2014\n\n \n\nCongratulations on your New York debut. This isn't how I pictured saying that on your opening night, but I know I've made a mess of things. \n\n \n\nSeeing you on stage for the first time changed me. The rawness of your stories mixed with your beautiful delivery caused something to stir in me that I still haven't let go of and I now know I never want to.",
        " \n\nAs I read your script all over again this week, it's your bravery that calls out to me most. Your bravery shines through every page and it goes well beyond your writing. Every moment I've spent with you has shown me a woman unafraid of being herself.\n\n \n\nI'm sorry I didn't show you the same kind of bravery. Until very recently, I didn't know where to find it.\n\n \n\nI will never forgive myself for letting you walk away from me that night. Or the things I said to you. Every day that has passed since then has only proven to me how much I want you in my life. \n\n \n\nIf you'll let me, I know I can be brave for you. And I'm going to keep trying to show you that until you believe me. \n\n \n\nThere's so much more I need to say. I hope in time, you'll hear me. \n\n \n\nTo many more openings.\n\n \n\nAlways yours,\n\nAlex\n\nQuinn set the letter down on the counter and she could feel her heart hammering against her chest. Alex's words reverberated through her head as her shaking fingers held the unopened package. She blinked rapidly a few times to keep the threatening tears at bay, which would probably only increase once she opened whatever it was Alex gave her. But she couldn't wait until after the show. Not after reading Alex's letter.\n\nQuinn tore through the fish paper and looked down at the two-paneled frame now sitting in her lap. On one side, Alex had framed the first page of her script that had the title and her name on it and on the other side was a page from one of the final scenes. Most of the page consisted of stage directions but halfway down, there was a paragraph that Alex had put a small dash by. She read the familiar words.\n\n \n\nWe're taught as children not to lie. But what that really means, is don't lie to each other. I had been lying to myself for years. Because it was so much easier to believe I was happy than to face the broken person I had become. The part of me I thought of as the logical part had her arguments\u2014 people didn't leave a successful modeling career. People didn't give up that kind of money or glamour. But one day I woke up and realized that it wasn't logic. It was fear. Because when you spend your life as one thing, it's hard to remember all the other things you can be. All I knew that morning was that I was going to find out what those things were.\n\n \n\nQuinn stared down at the section of script Alex had decided to frame. It was from one of the last pages, when she started to explain her decision to quit modeling. She knew those words like the back of her hand, but suddenly reading them through Alex's eyes was like reading her own writing for the first time.\n\nAfter doing this scene over and over again like she had the past few weeks, the meaning had lost significance. Her departure from modeling felt like so long ago that it was hard to put herself back there. But as she read her words again through a new context, she could remember the debilitating fear she had felt all those years ago. And she knew it must be similar to what Alex felt the night of the gala.\n\nShe set the frame down and picked up Alex's letter again, reading her words another time. She was in the exact spot she was supposed to be\u2014 backstage waiting to debut her show to Manhattan. She had been waiting for this moment for over a year now. But as she looked up from the letter and stared at the dressing room around her, she felt empty without the one person there she needed.\n\nShe didn't want her show for Janet or Simon. Getting through tonight was one thing, but how could she come in here night after night after what they'd done? The beauty and mystique Horizon held when she first arrived in the city was gone. Alex was Horizon for Quinn and Alex was no longer there.\n\nSomeone knocked on Quinn's door, but this person didn't wait for an answer and a moment later Mikey was stepping into the room.\n\n\"I saw Leah coming down the hall so I told her I'd give you the five-minute call. So, five minutes,\" he said, but when his eyes met Quinn's, his brow furrowed slightly. \"What's up?\"\n\n\"Janet wouldn't allow Alex in to see the show,\" Quinn replied.\n\nMikey nodded, but didn't seem surprised by the news. \"I was wondering when I didn't see Alex anywhere. Janet's turned into a real piece of work.\"\n\n\"I can't do this show here, Mikey,\" she said shakily, looking up at him.\n\nMikey didn't say anything and instead pulled one of the chairs from a different make-up counter over to where Quinn was sitting. He sat down so their knees were touching and in a very un-Mikey like move, pulled her hands into his lap.\n\n\"Tell me what you want to do. It's your choice, Quinn.\"\n\n\"It's not just my choice. This affects you too. I don't want to make a mess of things all over again for you.\"\n\nMikey squeezed her hands and waited until Quinn was looking at him again. \"You've never made a mess for me. And despite the fact that talking all mushy like this makes me feel like my skin is crawling, you should know that I'd go anywhere with you. So, make the call and we'll figure it out. Like we always do.\"\n\n\"There are critics out there tonight.\"\n\n\"There are.\"\n\n\"Pulling out won't make the theater look good. But it also wouldn't make me look good.\"\n\nQuinn knew she only had minutes to make a decision, but for once Mikey just waited and didn't rush her. But before she could say anything, there was another knock on her door.\n\n\"Places, Quinn. It's time,\" her stage manager said as she popped her head into the room.\n\n\"Thanks, Leah. Coming,\" Quinn said.\n\nLeah gave her a quick thumbs-up and left the room again.\n\n\"What do you want to do, Q?\" Mikey asked, standing up.\n\nQuinn stayed seated for just one moment longer as she looked up at her friend. She knew what she wanted to do. And slowly, a mischievous smile broke out on her face.\n\n\"I want to fuck this place up.\"\n\nChapter 44\n\nQuinn watched the city pass her by as the cab she was in zipped downtown toward the Tribeca address Courtney had given her. Now that she was finally alone, she tried to catch her breath, but the inside of the cab felt dry and suffocating so she rolled down the window so she could suck in some of the cold night air.\n\nAfter a few moments of letting the cold air hit her face, she looked down at her phone to see if Mikey had texted again, but the last message on the screen was the one he sent a few minutes after Quinn left the theater. She knew it wasn't fair to leave Mikey to deal with the mess she just left at Horizon, but she needed to get to Alex and she didn't care to hear what Janet had to say at this point.\n\nQuinn didn't regret her decision, but the adrenaline from it and her subsequent departure from the theater had her body buzzing with energy. She hadn't felt like this since the day she quit modeling\u2014 and maybe that was the best indicator of them all that she had made the right decision. She had already spent too much time in an industry that used and manipulated her and Janet had proved that she didn't deserve any of Quinn's success. Even if it meant she would never work in New York again, Quinn was proud of the decision she made tonight.\n\nQuinn didn't have much more time to dwell on her opening night though. When she felt the cab begin to slow down, her mind instantly transitioned from her show to thoughts about the woman who was somewhere on this street. When Courtney had given her the address earlier, she had committed it to memory even if in that moment she hadn't known for sure that she would use it.\n\nWhen the cab finally came to a full stop, Quinn got out and looked up at the tall brick building standing in front of her. It didn't have a sign out front, but she could see a small metal number on the side of a worn-down door and knew this was the right place.\n\nNow that she was here, she realized she probably wasn't going to be able to just walk into an unknown building, but as she pushed against the large door out front, she found that it opened easily.\n\nThe immediate entryway was dark, but when she pushed through some plastic paper that acted as a doorway, she was in a bright, large room. It took her eyes a moment to adjust to the stark contrast, but as they did, the first thing they landed on was Alex sitting at a table in the middle of the room with her back to the door. The blonde was wearing a pair of charcoal slacks and a black button-up shirt and it was obvious she had been dressed to go somewhere nice, but right now, she had her shirt untucked with the sleeves rolled up.\n\nAlex hadn't heard Quinn come in, probably due to the music blasting from her laptop, but she also seemed focused on something in front of her. While Alex was still faced away from her, Quinn's eyes took the moment to roam the rest of the room, but all it looked like was some kind of warehouse under construction.\n\nThe table was the only piece of furniture in the room with the exception of two stools that were around it and a ladder that was leaning against a wall. Along the other wall there looked to be some diagrams and drawings, but beyond that, the room was empty.\n\n\"Alex,\" Quinn said loudly so she was heard over the music.\n\nAlex whipped around with wide eyes. \"Quinn,\" she said and turned quickly back to her laptop so she could turn off the music. \"What are you doing here?\" she asked when it was finally quiet in the room.\n\n\"Courtney gave me the address. What is this place?\" Quinn asked, ignoring Alex's question so she could feed her overriding curiosity.\n\n\"It was owned by a wholesale clothing distributor, but they've moved to Brooklyn. It's been sitting here empty for a couple of years. And well, I bought it,\" Alex replied.\n\n\"You bought it?\" Quinn asked, her eyes widening as she did. \"For what?\"\n\nAlex looked around the room for a moment before walking over closer to Quinn.\n\n\"I'll show you,\" she said tentatively before turning back into the room. \"This is the lobby,\" she said, holding her arms up. She then pointed down to a long piece of tape that went along the ground. \"This tape marks where the lobby ends.\"\n\nAlex walked along the tape until she was at the other side of the room. She motioned for Quinn to follow.\n\n\"Lobby for what, Alex?\" Quinn asked, but Alex's obvious excitement caused something in her stomach to stir and she followed the other woman without getting an immediate answer.\n\nThey walked through a doorway at the far end of the \"lobby\" and were suddenly in what was obviously the main part of the warehouse.\n\n\"There will be glass doors here instead of a solid one\" Alex said as they walked through. \"Once you're through those doors, you can either go to the left or the right. Each side will have a staircase that will lead people to the top of the seats.\"\n\nAlex almost skipped along as she guided them further back into the space and Quinn knew she had never seen the blonde seem so young and excited.\n\n\"I won't have a balcony, but I still want an incline that goes down to a thrust stage,\" Alex continued talking. \"The stage will be about here.\" Alex stopped walking once she got to another piece of long tape. \"And then the back of the space will obviously hold the green room and dressing rooms.\"\n\nWhen she was done waving her arms to the back of the warehouse, Alex turned around to Quinn with what looked like an expectant expression, but Quinn felt like her head was spinning.\n\n\"You bought a theater?\" Quinn finally asked.\n\n\"Kind of. I bought the space. Now I need to build the theater.\"\n\nQuinn could feel her mouth open and close before anything actually came out.\n\n\"I know you have money but do you have that much money?\" she asked the blonde, looking around the empty space. She had to assume building something from scratch would take hundreds of thousands of dollars.\n\n\"I'm not doing it alone. Larry Weston is my partner in this.\"\n\nQuinn's eyes snapped back to Alex at the mention of Larry. \"How does Rick feel about his husband opening a theater with you?\"\n\n\"Larry assures me it will be fine and I try not to get into the affairs of gay men. He said that if he can get over the 19070s, Rick can get over this. But I have no idea what that means,\" Alex replied with a soft smile on her face.\n\n\"I just can't believe you bought a theater,\" Quinn said, still trying to wrap her head around where she was. \"What made you do it?\"\n\nAlex walked over to a bench that was set against the far wall of the warehouse and sat down. \"Will you come sit with me?\" she asked Quinn.\n\nQuinn walked over to the bench and sat down, but she made sure their legs weren't touching. She needed a clear mind while they spoke and touching Alex had the opposite effect on her.\n\n\"You were right about so many things that night, Quinn,\" Alex said. \"But one of the things you were most right about is that there's more to life than Horizon. My father giving that job to Janet was one of the best things that could have happened to me. I just wish I had figured that out sooner. Because I pushed away the actual best thing that ever happened to me.\"\n\n\"Alex\u2014\" Quinn started to say, but Alex put her hand on Quinn's leg before she could continue.\n\n\"Wait. Please, let me. I need to say this to you,\" she said. She continued to hold on to Quinn's leg and now that they were touching, the brunette didn't want to stop so she let Alex's hand stay there.\n\n\"I love you, Quinn,\" Alex said. \"I'm so desperately in love with you. And I'm sorry for the way I told you last time. I haven't said those words since my mom died and it's not an excuse, but for so long it seemed easier to just let myself be scared. But I don't want to keep pushing the good things in my life away. I did that with the two things I love most\u2014 performing and you. I'm just hoping it's not too late to fix either.\" Alex looked behind her at the empty room before bringing her eyes back to Quinn's. \"That's what this place is. A mix of what I loved from Horizon and my own stage to create whatever I want to create. Well, actually, I was hoping it could be whatever we want to create.\"\n\n\"You built yourself a stage,\" Quinn whispered, looking around the room in disbelief.\n\n\"Do you think I'm crazy?\" Alex asked.\n\n\"I think it's wonderful, Alex. But it doesn't erase how much you hurt me. I need to understand what got you to this point. How do I know you won't just run again?\"\n\n\"You got me here,\" Alex responded immediately and grabbed hold of Quinn's hands. \"Your show did. The love and support you've shown me did. Courtney did. My mom did. And for once, I stopped hiding behind the excuse of others and did it for myself.\"\n\nQuinn could feel the first tear begin to roll down her face but she didn't want to move her hands so she just let it fall. Alex saw it though and reached one hand up so she could gently wipe it away.\n\n\"I don't want to just be the person who teaches you how to be in a relationship,\" Quinn said. \"I need more than that. Who's to say you won't snap at me next time I try to dig a little deeper? Or that someone new won't come along who will suddenly be able to teach you something else about yourself?\"\n\n\"It wasn't because you pushed me to open-up. It's because of who you are, Quinn. Nobody else could have done that because nobody else is as perfect for me as you. And it's my fault that you don't know all the reasons I love you. Because I've been an idiot and I haven't told you.\"\n\nAlex suddenly moved off the bench and slid down to the ground so she was on her knees in front of Quinn and could grab hold of her hands again.\n\n\"I love you,\" she began. \"I love how unabashedly you laugh when you find something funny. And how effortlessly it bubbles out of you. I love your soft smile that seems reserved just for me. I love how random and silly you are and how you make me sillier. I love how excited you get over snacks or pajamas and your weird obsession with fish. I love your sounds\u2014 the way you hum when you eat or the cute little sounds you make when you're waking up. I love how you find something positive in everything even when I can't. I love the way you always find my hand when we're in bed falling asleep. I love how sweet you are to everyone you come across. I love the way you kiss. I love the way you taste.\" Alex moved higher on her knees so she could see Quinn's face better.\n\n\"Everything I learn about you just makes me fall more and more in love with you,\" she continued. \"And I should have told you that the second I felt it. Because I've felt it for so long, Quinn. I think my mom would finally be proud of me. Because I won't run from this. Any of this. I will never run from you.\"\n\nQuinn was full out crying now and as she looked down at Alex's face, which looked so soft and open, she could feel the last remnants of her anger float away. She pulled on Alex's hands so she could interlace their fingers.\n\n\"I love you too,\" Quinn whispered, not able to stop the additional tears from falling down her face. \"I was so heartbroken. But I couldn't just stop loving you.\"\n\n\"I will never hurt you like that again. I can be everything you need me to be. And then I'll add some more on top of that.\"\n\nAlex opened her mouth apparently to say something else, but Quinn wouldn't let her and simply cupped the blonde's face so she could lean down and bring their lips together. She had heard enough and at this point, needed to connect with the woman in a different way.\n\nIt had only been two weeks since their last kiss, but somehow it felt as if their mouths had never touched before. Their lips started out tentatively pushing against each other as Alex's hands moved to Quin's waist. When Quinn could feel Alex's tongue lightly pushing against her lips, she opened her mouth and allowed its entry.\n\nAs soon as their tongues met each other again, all newness evaporated and their mouths began a familiar dance. Quinn wanted to feel more of Alex against her so she opened her legs and pulled the blonde in between them. Alex responded immediately and brought her hands up so she could thread them through Quinn's hair.\n\nBefore she was even close to being ready to have the kiss end, Alex was pulling her mouth away from Quinn's. The only satisfaction Quinn got from it ending was the sight of Alex's flushed face and heavy breathing.\n\n\"I never want to go that long without kissing you again,\" Alex panted out.\n\n\"Stop talking,\" Quinn replied and pulled Alex back for another searing kiss.\n\nShe could feel Alex laugh into her lips, but just as soon, she slipped her tongue back into Quinn's mouth and was suddenly directing their kiss. Her hands were back in Quinn's hair and when their tongues began to flick against each other, she couldn't help but moan into the blonde's mouth.\n\nAlex kept her mouth on Quinn's as she moved off the floor and put her legs on either side of the brunette so she was straddling her. They continued kissing for what felt like minutes on end until Alex finally pulled her lips from Quinn's again.\n\n\"Wait,\" Alex said, breathing even more heavily than she was the last time she had stopped their kissing.\n\nQuinn let out a frustrated sigh at the abrupt stop. \"For someone who said that they love the way I taste, you seem very chatty,\" she said to the blonde.\n\nAlex let out a sexy, low laugh and Quinn could feel the sound vibrate through her body.\n\n\"Believe me, sweetheart. I plan on getting you home as soon as I can. But\u2014\" Alex paused so she could look at her watch. \"Shouldn't you be at your opening night party?\"\n\nQuinn had been so caught up in the moment that she had completely forgotten to tell Alex the other important news. She laced their fingers together and looked up so she could see the blonde's face better.\n\n\"There is no party. There is no show. Janet posted a closing notice. I'm sure the reviews in tomorrow's paper will be colorful.\"",
        "Alex's face, which only a moment before looked relaxed and more content than Quinn had ever seen it suddenly morphed into one of simmering rage.\n\n\"She did what?\" Alex whispered. \"She can't do that. Why would she do that?\"\n\nQuinn could feel Alex try to get off her lap, but she didn't want to lose the feeling of her there so she just pulled the blonde back down.\n\n\"Stay. It's ok. I expected her to do something like that after what I did.\"\n\n\"What did you do?\"\n\n\"As you know, the final scene of the show ends with me discussing my decision to leave modeling. I guess I decided it was time for a new ending scene,\" Quinn said, attempting to make her face look innocent.\n\nShe could see realization hit Alex's face as she looked down at her. \"And what was the new scene about?\" Alex asked.\n\n\"My new life in New York and everything that has happened. You, the Post, the gala, Janet...your father. I told our story. I can't say it was my most eloquent writing, but I think it had its desired effect.\"\n\nQuinn could remember the shocked look that crossed Alex's face after Simon gave Rick's role to Janet, but that was nothing compared to the look of pure disbelief that was currently frozen there.\n\n\"What happened after? Did you see Janet or my father?\" Alex asked.\n\n\"I left the moment I got backstage. I texted Mikey and told him I was leaving to find you. He's the one who texted me that Janet posted the closing notice. I guess she was pretty pissed. No word on how your dad reacted yet.\"\n\n\"You know all the critics were there tonight and likely saw that, right?\"\n\nQuinn nodded and gave Alex another smile. \"And so does Janet.\"\n\nThere was a moment of silence as Alex continued to look at her with her mouth hanging open. But then, unexpectedly, the blonde threw her head back and let out a loud laugh. \"I can't believe you did that.\"\n\n\"You're not upset? I kind of outed us in a big way.\"\n\nAlex put one hand on Quinn's cheek and leaned in closer. \"We don't need to hide anymore, Quinn. I will never hide you again. The only thing I'm upset about is that I didn't get to see Janet's face when you did it.\"\n\n\"I guess I kind of screwed up my New York debut though,\" Quinn said.\n\n\"One of the things I've realized is that New York is a big city with a lot of theater. Come with me,\" Alex replied.\n\nAlex moved off Quinn's body, stood up and put her hand out. Quinn felt cold at the sudden loss of Alex's body heat, but the smile Alex directed at her as she waited for Quinn to take her hand was like one she had never seen on the blonde's face. The shadow she had seen in the blonde's blue eyes so many times before was gone, replaced by a youthful glimmer.\n\nWhen she put her hand into Alex's, the blonde pulled her gently back over to where the stage was meant to be and stood behind her so their bodies were just barely touching.\n\n\"You know, when I was first talking to your team about your show, there were a handful of other theaters in the mix. You won't have trouble finding a new home in this city,\" Alex said before placing her hands on Quinn's shoulders. \"But I was hoping I could throw my hat into the mix. I know it won't be as big and fancy as Horizon, but I promise there would be other benefits.\"\n\n\"What are you saying?\" Quinn asked softly.\n\n\"Close your eyes for me,\" Alex said and when Quinn complied, she put her hand under the brunette's elbow and gently guided her forward. \"You'll walk out as the lights are off and stop here. Center stage. Take a breath. You can feel the audience in front of you, even if you can't see them yet. Everything feels intimate and real. You own their anticipation. And their excitement. Then, the lights slowly come up and it's just you everyone can see. And you're free, Quinn. Free to create whatever you want, night after night. This stage is yours. A canvas for whatever you want to put on it. Now, open your eyes.\"\n\nQuinn took in a deep breath when she could feel Alex press the front of her body against her back again and when the blonde's lips grazed her ear lobe, she sucked in a sharp breath. After a moment, she opened her eyes.\n\n\"I'll be there,\" the blonde said next, pointing in front of them. \"Center section. Front row seat. Every night.\"\n\nQuinn loved the feeling of Alex's arms around her, but she also wanted to be able to see the blonde's face so she turned around in her arms.\n\n\"You want to do my show here?\" Quinn asked, still not fully grasping Alex's meaning.\n\n\"I would be honored if you would. But I also know how many offers you're about to get so I won't be offended if you want to go with an established theater. I don't even have a name for mine yet.\"\n\n\"Alex, you don't have to give me a stage just because I got fired from Horizon. You should choose shows that\u2014\"\n\nQuinn was forced to stop talking when Alex put a finger on her lips.\n\n\"You don't need to finish that sentence. I fell in love with your work before I ever fell in love with you. Now I get both. I was going to make you the offer anyway. Your show deserves a full run. And I can do that here. Maybe not for another 6 months, but Quinn\u2014 I can't think of anything more I'd rather have than a new theater with your show as the opener.\"\n\nQuinn could feel a smile breaking across her face but schooled her features quickly. \"Well, I guess I'll have to consider your proposal then,\" she replied, doing her best to sound serious. \"If the competition is as steep as you say it will be, how will you differentiate yourself, Ms. Anders? You mentioned something about additional benefits?\"\n\nAlex directed a playful smile Quinn's way and raised one eyebrow. \"Oh, yes. There are many benefits that I'd be happy to outline for you.\"\n\n\"A sample might be good so I know what we're working with.\"\n\nAlex leaned down, but this time, she didn't kiss Quinn. Beginning at the brunette's color bone, she brought her lips up the length of her neck, making sure to kiss and lick every exposed spot. She then swiped her tongue over Quinn's ear before bringing her mouth back down so she could sensually swipe her tongue across Quinn's lips. When the brunette tried to flick it with her own tongue, Alex pulled her head back with a smug smile.\n\n\"Just a sample,\" she whispered to a now dazed Quinn.\n\n\"I can't imagine another theater beating that,\" Quinn replied in a thick voice. \"The show is yours.\"\n\n\"That was a much easier sell than I was expecting.\"\n\n\"It helps that the artist in question in desperately in love with you.\"\n\n\"That certainly helps. And I love you too,\" Alex said before placing a soft, much more chaste kiss against Quinn's cheek. \"Does this mean you'll stay in New York?\" she asked.\n\n\"As long as my fish are invited, New York is my home,\" Quinn replied. \"You're my home.\"\n\nQuinn could see Alex take in a long breath at Quinn's words and as she let it out, one single tear fell down the blonde's face. And now that Quinn wasn't mad, she could see just how beautiful Alex was when she cried.\n\n\"I would never exclude those ninjas,\" Alex whispered as more tears joined the first.\n\n\"You're not scared about being a fish mom?\"\n\n\"I told you. I'm not running. Not even at the prospect of raising some aquatic teenagers.\"\n\n\"Good,\" Quinn said with a smile. \"Now take me to get pizza and then take me home.\"\n\nAlex brought her hands up to Quinn's face and leaned back in for another kiss. Kissing Alex always felt passionate but now more than ever, it also felt safe. Because now she knew there were so many more moments like this to come. As they opened their mouths to take each other in, she could taste the slight salt from Alex's tears and she brought her arms up around the blonde so she might feel as safe as Quinn did.\n\nBut when Alex's fingers left Quinn's face and grazed down her sides, barely touching her tits, she didn't want steady or safe anymore.\n\nShe broke her mouth away from Alex's and she could see the same fire she felt inside reflected back on the blonde's face.\n\n\"Actually, how about home and then pizza?\" Quinn asked in a breathy voice.\n\n\"Anything you want, sweetheart.\"\n\nThe End\n\n \n\nEpilogue\n\n10 months later\n\n \n\nQuinn tried to be as quiet as possible as she attempted to cradle two coffee cups in one hand while she grabbed the breakfast tray she had gotten ready with the other. Alex was a light sleeper and Quinn had learned it was hard sneaking around without waking her.\n\nBut as she came into the bedroom, she saw that her attempt at being quiet was pointless since Alex was wide awake in bed already looking as sexy as ever with the sheets wrapped around her disheveled hair.\n\n\"Babe, you're supposed to be sleeping. I was going to surprise you,\" Quinn said in a pouty voice as she came into the room holding the tray.\n\n\"You're not nearly as quiet as you think you are. It sounded like there was a parade in the kitchen,\" Alex said, directing a sleepy smile at Quinn. \"Did you cook me breakfast?\"\n\n\"If you count coffee and bagels cooking, then yes,\" Quinn replied.\n\n\"And I do. Set it down though and come here. I miss you already.\"\n\nQuinn walked the short distance to the dresser, set the tray down and then crawled back onto the bed. She moved over so she could sit cross legged next to Alex and play with her fingers.\n\n\"You look beautiful this morning,\" Alex said and moved her body up the bed so she could lean back against the headboard.\n\n\"I brushed my hair,\" Quinn responded.\n\n\"That must be it.\"\n\n\"How are you feeling this morning?\" Quinn asked as she pushed some of Alex's hair out of her face.\n\n\"A hot model just brought me breakfast in bed while wearing nothing but a t-shirt. I'm doing amazing. How are you?\"\n\nQuinn playfully hit Alex's arm. \"Stop. You know what I mean. Are you feeling nervous?\"\n\n\"Mainly I'm just excited.\"\n\n\"I was going to open a bottle of champagne to celebrate, but I figured you wouldn't want to be hungover for your opening night.\"\n\n\"Yeah, let's hold that for the second weekend of performances,\" Alex said before she began lightly kissing the tips of Quinn's fingers.\n\n\"What time do you have to be at the theater?\" Quinn asked, smiling softly at Alex's sweet behavior.\n\n\"I told the team I wouldn't be in. Today, I'm just the talent\" Alex replied. \"So not until my call time.\"\n\n\"Your call time. Your call time,\" Quinn repeated when Alex just stared up at her. \"How are you just laying back in bed so calm?\"\n\n\"We've just done a week of preview performances. I don't know. I guess I'm just ready. The scary parts are done.\"\n\n\"And what were the scary parts?\"\n\n\"Opening the theater. Deciding to be in a show. The first rehearsal. Getting you back. At this point, I feel like I've already won.\"\n\n\"Very smooth,\" Quinn replied.\n\n\"It's true. Besides the critics came to the previews already. So really, I'm just trying to impress you tonight.\"\n\n\"You've already impressed me, babe. What you've done this year has been amazing. Do you get that?\"\n\nAlex gave Quinn a long look before she answered. \"Sometimes it's hard to believe all this has happened. The past few months have been the best of my life. And it's all because of you.\"\n\n\"It's not just me, Alex. You've done all this yourself. I didn't put you back on stage. I didn't open a damn theater. You did that.\"\n\n\"I did. But you inspired me. I've watched you take this city by storm, Quinn. You've been here for a year and already have two successful shows.\"\n\n\"One show and one workshop,\" Quinn corrected her.\n\nAlex rolled her eyes at Quinn's blatant modesty. \"A workshop for a play that already has a bidding war around it.\"\n\n\"Well, you've been an inspiration for me too.\"\n\n\"I have?\" Alex asked and Quinn's heart clenched at how earnest she sounded.\n\nQuinn moved, bringing her legs under her body so she could lean down and look directly into Alex's eyes. Alex may not want to admit how significant the day was, but Quinn was determined to acknowledge just how amazing she thought the other woman was for what she was about to do.\n\n\"When I first found out I was coming to New York to do my show, I had no idea what to expect,\" she said as she laced her fingers with Alex's again. \"The fact is, I let Mikey handle so much back then that I just blindly walked into it. Then the night before our first meeting, I watched all those videos of your show. And after watching you perform, I felt instantly safe in your hands. You are so talented, babe. I used to think that I'd never be able understand what went on in that head of yours. But I've learned who you are and everything I learn just makes me love you more. I understand you. And I know how much you care.\"\n\nQuinn could tell that her words hit Alex deeply. For a moment she watched the blonde breathe in through her nose a few times, which was usually a clear indication that she was holding back tears.\n\n\"I hope I live up to your expectations,\" Alex finally replied in a thick voice.\n\n\"That's what I'm saying. You already have,\" Quinn said, cupping Alex's cheek with her hand.\n\n\"As long as you're there, I'm happy.\"\n\n\"Oh, I'll be there. With the gay wonder boys.\"\n\n\"Do Mikey and Tim know you call them that?\"\n\n\"Yes, and Tim doesn't seem to mind.\"\n\n\"And Mikey?\"\n\n\"Not a huge fan. But I think he prefers it to when I call him Mickey.\"\n\n\"Poor Mikey, Alex laughed. \"What are your plans before meeting up with them? Care to join me for lunch somewhere?\"\n\n\"I had big plans of helping you with your pre-show nerves using a very specific kind of method. But if you're not feeling nervous, lunch sounds fun too,\" Quinn replied in an innocent voice as she slowly pulled the long t-shirt she was wearing up her thighs, exposing some of her leg.\n\nThe smile Alex had on her face only a moment before dropped as her eyes darted down to watch Quinn's movements and Quinn couldn't help but smile when she saw Alex's lips part slightly.\n\n\"It's strange but I can suddenly feel nerves kicking in,\" Alex said in a low voice.\n\n\"Aw, baby, you can?\" Quinn asked in the same innocent voice.\n\nThis time she reached up and pulled her hair out of the band it was in and let it cascade down her back. \"That must feel scary for you.\"\n\n\"So scary. I don't even know if I'll go on tonight. That's how nervous I am.\"\n\n\"You poor thing. Is there anything I can do to help?\" Quinn asked, this time, reaching down for the hem of her shirt and quickly lifting it off her body.\n\nAlex's eyes made their way from Quinn's legs up to her bare tits and the look alone caused Quinn to feel a sudden shot of arousal to hit her center. She didn't think she could ever get tired of the hungry look Alex got on her face every time she looked at Quinn's body and right now, Alex looked like she wanted to devour the brunette.\n\n\"You're already helping,\" Alex said and reached one hand up so she could cup Quinn's left breast.\n\nQuinn had to suck in a quick breath when she felt Alex's finger graze over her nipple, which hardened in less than a second under the other woman's touch.\n\n\"I can help more,\" Quinn replied in a breathy voice as she grabbed Alex's other hand and placed it on her right tit.\n\nQuinn allowed her head to fall back and her eyes to close as Alex began to gently massage her tits. They just had sex last night, but it still only took this for her to feel turned on all over again with an insatiable need for the woman next to her.\n\nWhen Alex began pulling gently on her nipples, she let out a low moan.\n\n\"Does that feel good, sweetheart?\" Alex asked, causing Quinn to open her eyes again and look down at the blonde.\n\nThis wasn't supposed to be about her pleasure despite how good Alex's hands felt so she lifted her own hands so she could put them on top of Alex's and still their motion.\n\n\"Very. But I'm supposed to be making you feel good. Not the other way around.\"\n\n\"Oh, believe me, this is making me feel good,\" Alex said before leaning up and capturing one of Quinn's nipples in her mouth.\n\nAs Alex swirled her tongue around Quinn's nipple, she brought a hand back to the other tit so she could begin pulling on the nipple again.\n\n\"Fuck that feels good, babe,\" Quinn panted out. \"One of these days you're going to make me come from just that.\"\n\nQuinn could feel a vibration hit her tit as Alex let out a low laugh against her nipple.\n\n\"Today could be that day,\" Alex said when she brought her lips off Quinn's tit so she could go lavish the same attention on the other one.\n\n\"Nope. I have other plans for you,\" Quinn responded and pushed Alex gently off her, which elicited a groan of frustration form the blonde. \"I know. So hard. But you're overdressed. Take your top off.\"\n\nAlex sat up straighter and did as Quinn asked, throwing her shirt down to the ground as soon as it was off her body.\n\n\"Better?\" she asked Quinn.\n\n\"Much. Now lay down.\"\n\nAlex narrowed her eyes slightly at Quinn's demand. \"Are you topping me, sweetheart?\"\n\n\"Is that even possible?\"\n\n\"I guess we'll see.\"\n\nAlex didn't say anything else as she laid back down, but she did direct a smile at Quinn that looked like a challenge.\n\n\"Oh, you don't think I can top you, my love?\" Quinn asked.\n\nAlex quickly morphed her face into a serious expression. \"Of course I do. You are so obviously a natural top.\"\n\n\"Ok, Chatty Cathy. Lay down and put your hands above your head.\"\n\nAlex gave her another playful smile before she obliged. \"And now? What would you like me to do?\"\n\n\"First, I want to look at my beautiful girlfriend.\"\n\nFor a moment Quinn allowed her eyes the time to roam down Alex's naked body and once again she was in awe of the other woman. The blonde's eyes looked small with sleep, but the way her blonde hair was splayed across the pillow and her hands were draped so casually above her head made her look so incredibly sexy that Quinn couldn't even decide what to do first. But it was the hard nipples that seemed to be screaming for Quinn's touch that called out to her most.\n\n\"Live-in girlfriend,\" Alex said as she watched Quinn's eyes travel down her body.\n\nQuinn slid down so she was propped up on one elbow, but otherwise pushed against Alex's body. She lightly trailed her fingers over the blonde's left tit before bringing it to her right, eliciting a quick gasp from Alex.\n\n\"You love saying that,\" Quinn whispered, as she kissed her way from Alex's jawbone down her neck.\n\n\"I love you,\" Alex replied in a breathy voice and as if not able to hold back any longer, she moved her hands from above her head and leaned into Quinn so she could capture the brunette's mouth with her own.\n\nQuinn's plan this morning had been to lay Alex back and worship every inch of her body. But by this point in their relationship, she also understood the many facets of Alex's desire and right now, she knew the blonde wanted to take control.\n\nWhen Quinn didn't protest, Alex pushed herself up further and brought her body over Quinn's so she could pin the brunette to the bed. And for a moment they did what they did best\u2014 they kissed.\n\nAlex's hands were firmly in Quinn's hair and she savored the feeling of being held in place as Alex's tongue dominated her own.\n\nWhen they both needed to breathe, Alex finally let go of Quinn's mouth, but she didn't move her body. She kept her hands in the brunette's hair as she looked down at her with an expression Quinn had come to recognize. Alex's eyes were always blue, but right now they were as dark as they ever got, and as she looked down at Quinn with her chest heaving, Quinn could so clearly see how aroused the other woman was.\n\nThe two of them often paused during sex to stare at each other, but Quinn never minded. The fact that Alex was now so effusive with the way she felt about Quinn only made everything they did so much hotter.\n\nFinally, Alex shifted her body to the side so she could bring her right hand down Quinn's body while her left hand remained gripping the woman's hair. Quinn felt her body jerk and her eyes slammed shut as Alex's hand met her tit and took a moment to stay there so she could play with both nipples. But soon, that same hand was moving south and she only stopped when it was just above Quinn's pussy.",
        "Alex gripped Quinn's hair again and gently pulled her head up, causing the brunette to open her eyes and look back into Alex's once again. Even if Quinn's pussy was dripping by this point and even if her chest was heaving with short breaths, she knew Alex wouldn't go further without her explicit consent so she tried to steady her squirming body as the blonde looked down at her.\n\n\"Are you wet for me, sweetheart?\" Alex asked in a voice that couldn't hide her own arousal.\n\nQuinn didn't trust her own voice not to sound like a strangled mess so she just nodded up at the blonde.\n\n\"May I?\" Alex asked next, her hand still resting just above Quinn's pussy.\n\n\"Please, baby. Please feel me,\" Quinn finally begged in a voice that sounded as strangled as she thought it would.\n\nQuinn knew that Alex liked to draw things out by teasing her. But she also knew exactly what to say to get the woman to expedite things, and the look Alex gave her in response only confirmed that it had worked.\n\nWithout saying anything else, Alex slipped one finger into Quinn's folds and she must have thought it felt good because her forehead dropped onto Quinn's as she let out a low groan.\n\n\"God, you are so wet,\" she said as she began circling two fingers lightly around Quinn's clit.\n\nQuinn let out a loud moan, the end of which was swallowed as Alex brought her mouth back down onto her own. Alex continued to circle Quinn's clit lightly, as she erotically slid her tongue in and out of the brunette's mouth.\n\nWhen Quinn pushed her hips up to get more pressure, Alex broke her mouth away from Quinn's and let out another sexy laugh.\n\n\"Ask for it, sweetheart,\" she said and Quinn couldn't understand how the other woman could seem so calm and composed, when Quinn herself felt like she might explode with need at any moment.\n\n\"Please fuck me, babe,\" Quinn said quicky, desperate at this point for more of Alex.\n\nThat seemed to be enough for Alex because she quickly transitioned her fingers so she could push two inside of Quinn and this time, she didn't tease the brunette. She quickly pulled her fingers out almost all the way so she could drive them back in with more force.\n\n\"Fuck! Yes, babe. Just like that,\" Quinn shouted out.\n\nAlex's face fell into Quinn's shoulder as her fingers picked up speed and began thrusting in and out of Quinn and soon, they're heavy breathing seemed to join together.\n\n\"I need more. Harder. Alex, more. Please,\" Quinn panted out.\n\nIn response and without removing her fingers, Alex pushed herself up from beside Quinn and moved her body down the bed so she was between the other woman's legs. As soon as she had changed positions, Quinn could feel Alex add another finger so she was fucking her with three.\n\nAlex used her new position to push in and out of Quinn so much harder than before that Quinn's whole body felt like it was being fucked.\n\n\"Yes, yes, babe. Just like that. Fuck,\" Quinn shouted out as Alex continued to fuck her.\n\nBut as she started to feel the familiar sensation of her walls tightening around Alex's fingers, the blonde began to slow her pace.\n\n\"Babe, please don't stop,\" Quinn begged, not even worrying how desperate she sounded at this point.\n\n\"I don't want you to come yet,\" Alex said above her. \"I need to taste you.\"\n\n\"Then you better get down there fast,\" Quinn panted out.\n\nAlex moved her body down the bed so she was between Quinn's legs and she didn't waste any time swiping her tongue all the way up the length of the brunette's pussy while her fingers continued to drive in and out. When Alex suddenly let out a long moan against her pussy, the vibrations caused an entirely new batch of juices to rush out.\n\n\"God, sweetheart. You're my favorite thing to taste first thing in the morning,\" Alex said, allowing her lips to hit against Quinn's folds as she spoke.\n\nThe two of them had learned so much about each other's desire over the past few months. They knew what areas were sensitive, where the other enjoyed being kissed first, how fast or slow they should go, and what would eventually make the other come. But more than anything, Quinn knew that Alex craved words\u2014 both dirty and sensual and she was more than happy to provide that for her girlfriend.\n\n\"I love your tongue on me. Please. More. I'm so close.\"\n\nAlex pushed her three fingers all the way inside Quinn's pussy and continued to thrust in as deep as she could while her tongue began an unrelenting flicking motion across the brunette's clit.\n\n\"Come for me, love,\" Alex panted against her pussy and as Quinn felt the vibration from the blonde's mouth again, she easily obliged with the request.\n\nQuinn let out a loud moan as she felt her walls clench tightly around Alex's fingers.\n\n\"Fuck, I'm coming. I'm coming,\" Quinn shouted and thread her fingers through Alex's hair as the woman continued to lick up her flowing juices.\n\nWhen Alex could seemingly feel Quinn coming down from her orgasm, she lifted her mouth from the brunette's pussy, but didn't stop the movements of her hand. In fact, she pushed in harder and began to curl her fingers upwards.\n\n\"Another,\" Alex commanded in a low voice.\n\nQuinn was about to tell her that she couldn't possibly come after the intensity of her first orgasm, but soon she could feel the familiar beginnings of her climax begin to rise again. Alex moved her body up so she was above Quinn again and could press down on her as she continued to thrust in.\n\n\"Keep going. I'm close again,\" Quinn breathed out.\n\nThe closer she got, the more of a frenzy she felt like she was in and she couldn't help but scrape her fingernails up and down Alex's back, which only seemed to spur the blonde on more.\n\n\"I love fucking you. I'm so fucking hot for you right now,\" Alex panted out as she let her head fall down against Quinn's neck.\n\nAt this point, they were both slightly sweaty and Quinn could tell that her second orgasm was barreling towards the surface fast. As Alex's lips latched onto her neck in a sloppy mess of licks and bites, Quinn pushed her hips up and instantly felt a second orgasm hit her.\n\nWhile her first orgasm made her feel like she was slowly falling over a precipice, this second one hit her like a powerful whip and she couldn't even form words as she let out a series of noises and groans.\n\nQuinn's eyes were still closed and she didn't think she could form any coherent sentences yet, so when her pussy felt too sensitive to continue, she brought her hand down so she could still Alex's. Alex seemed to understand because she slowed her fingers and gently removed them from Quinn's pussy.\n\nAlex positioned her body so she was laying next to Quinn's and when the brunette finally opened her eyes, she could see the blonde looking down at her with a cocky smile on her face. Her hair was disheveled and her face was red, but she still looked entirely too pleased with herself.\n\n\"Did you enjoy that?\" she asked Quinn.\n\n\"Do you really need to ask that?\" Quinn replied, still trying to get her breathing under control.\n\n\"Hey, if we don't process sex afterwards, then can we really call ourselves lesbians?\"\n\nQuinn laughed and rolled over so she could prop herself up on her elbow and face Alex in a mirrored position.\n\n\"True. In that case, I have something for you to process. You're a terrible bottom.\"\n\n\"Good thing you're so good at it then.\"\n\nQuinn laughed again and pushed Alex's shoulder playfully.\n\n\"If you really want to top me, I'll try to control my tendencies,\" Alex said. \"I mean, you might need to use ties and a gag, but I can try.\"\n\n\"Ties and a gag sounds intriguing,\" Quinn said with the sexiest smile she could muster. \"But I might prefer those used on me.\"\n\n\"See? A natural.\"\n\n\"I like when you take control in the bedroom. I like when you tell me what to do,\" Quinn said as she grazed one finger down Alex's bare side.\n\nAlex's skin immediately broke out into little goose bumps and Quinn could see her physically shudder. Quinn allowed the same finger to make its journey back the other way and smiled as Alex's eyes fluttered close.\n\n\"You do?\" Alex whispered with her eyes still closed.\n\n\"What would you like me to do?\" Quinn asked as she brought her finger down so she could now graze it over Alex's hardened nipples.\n\nAs soon as her hand made contact, Alex's eyes shot open again and she pinned Quinn with a heated look.\n\n\"Get on your knees,\" Alex replied and even though she had just had two pretty intense orgasms, Quinn could already feel her insides burning up again.\n\nAfter this much time with Alex, she knew exactly what the blonde wanted so she moved from her position on the bed, picked up one of the pillows, and got off. This was one of Alex's favorite positions when she wanted to feel in control and Quinn loved pleasing her this way.\n\nQuinn set the pillow on the floor, kneeled down on it and looked up at Alex, who was watching her every move. Once she was situated, Alex scooted towards the edge of the bed so Quinn was situated on the pillow between her legs.\n\nIt wasn't just the wetness coating Alex's inner thighs that showed Quinn just how turned on the blonde was\u2014 Quinn could even smell the other woman's arousal and she could instantly feel her mouth water in anticipation of tasting her.\n\n\"Are you ready for me, sweetheart?\" Alex asked from above Quinn.\n\nWhen Quinn nodded in response, Alex wrapped both legs around the brunette's neck and shoulders so she was in her preferred position and could use her hips to drive her own pleasure.\n\nQuinn could see a slight rise and fall to Alex's chest and knew that the blonde needed relief so she didn't waste any more time and leaned her head in so she could place a soft kiss on Alex's pussy lips.\n\nAs soon as her lips made contact, she could hear Alex suck in a sharp breath. The blonde leaned back on one hand while she placed her other on top of Quinn's head.\n\nQuinn could tell by how hard Alex's clit was that she wasn't going to last long, which was usually the case after Alex fucked Quinn hard like that. So instead of teasing her with more light kisses, she slid her tongue up the length of Alex's pussy and began to circle her clit.\n\n\"That feels so good, keep going,\" Alex panted. \"Add a finger.\"\n\nQuinn quickened the speed of her work on Alex's clit while bringing one finger inside her and the blonde was so wet that she decided to add another just so she could get more friction. Alex didn't seem to mind the on-the-spot decision because she lifted her hips at the same time that Quinn's fingers began to press inside.\n\nAlex must have been close because she was no longer speaking. Instead, she was letting out a rapid succession of moans and grunts that only spurred Quinn on. Not able to get enough of Alex in her mouth as she wanted, Quinn reached up so she could grab onto Alex's legs and pushed her body fully against the bed.\n\nQuinn could barely breathe as Alex pushed her hips up again, but she didn't mind. All she wanted was to feel Alex all over her tongue. She leaned down further so she could lick the outside of Alex's opening as her fingers continued to slide in and out and the messiness of it felt so erotic that she let out a moan against the other woman.\n\nWhen she finally brought her mouth back up so she could flick her tongue against Alex's clit in fast progressions, Alex let the hand on Quinn's head drop back and her legs loosened as she let out a low moan.\n\nWhile incredibly verbal when fucking Quinn, Alex was always more visceral in her own climax. Quinn recognized the sound at once though and knew Alex had reached her orgasm. After a few moments, Alex finally let her legs fall from Quinn's shoulders as her body flopped backwards onto the bed.\n\nQuinn leaned back on her legs for a moment as she caught her breath, but soon she could hear Alex talking in a slurred voice.\n\n\"Come here,\" she finally made out from the blonde's garbled words.\n\nAlex pushed herself back onto the pillows and lifted her arm so Quinn could slide into the side of her body, which she did with no complaint. Alex was always so warm and sweet after sex and it was probably her favorite version of the woman.\n\n\"That was amazing,\" Alex said, nuzzling her nose into Quinn's hair. \"If I feel nervous again in an hour, can we do that some more?\"\n\n\"What about your big plans for lunch?\" Quinn teased and reached down so she could pull the sheet back over their bodies before resuming her position in Alex's arms.\n\n\"Fuck lunch. I've had it before,\" Alex replied. \"Let's stay in bed until I have to leave. Maybe take a shower together.\"\n\n\"That's perfectly fine with me,\" Quinn said and allowed her hand to roam down Alex's body, stopping at her ass to squeeze it gently.\n\nQuinn was instantly grateful for Alex's desire to stay in bed because her body was obviously not done with the blonde yet.\n\n\"Besides, I think you mentioned bagels before we got distracted,\" Alex said as she quickly repositioned their bodies so Quinn was under her again.\n\nAs she slid her leg in between Quinn's, it became obvious that bagels weren't really on the blonde's mind. Quinn leaned her head up so she could feel Alex's lips on hers again and as they kissed, Alex smoothly took both of Quinn's hands and raised them so she could pin them above the brunette's head.\n\nAfter what felt like minutes of kissing, Alex finally broke her mouth away from Quinn's and looked down at her with red lips and messy hair.\n\n\"I think the coffee is cold by now,\" Quinn finally whispered.\n\n\"That's ok, sweetheart. You make terrible coffee,\" Alex replied before leaning back down and capturing Quinn's mouth in another kiss.\n\nQuinn would normally protest, but her mouth was now busy with Alex's and she didn't have any plans of using it for anything else any time soon.\n\n \n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"Tonight, all eyes are on The Olander, the hot new theater taking Tribeca by storm,\" Courtney said as she barged into Alex's dressing room without knocking and read off a newspaper in front of her. \"The Olander came onto the scene earlier this year with their smashing debut of Quinn Collins' 'Model Behavior' and tonight, the theater celebrates the opening of the much anticipated, gender-bending version of 'A Streetcar Named Desire'. Founded by Larry Weston, known for his legendary work as the Chief Curator at the Guggenheim Museum for more than thirty years, and Alexandra Anders, formerly the Managing Director of Horizon Theater Group, The Olander blah, blah, blah.\"\n\n\"Courtney\u2014\" Alex began to say, but the red head cut her off before she could get anything else out.\n\n\"Wait, let's skip to the good part,\" Courtney said, waving Alex off before she turned her eyes back to the page in front of her. \"Ms. Anders got her start working at Horizon Theater Group\u2014 a company owned by her father, well-known theater investor, Simon Anders. But with her departure from Horizon, plus two sold-out runs under her belt for The Olander, Ms. Anders has proven that parents don't always know best.\" Courtney looked up and smiled at Alex before looking back down. \"Oh, and this part is good too,\" she said. \"For a theater that started with such a dramatic beginning, Ms. Anders has proven that she's the real deal. Tonight, she's taking her own turn across the stage and will be starring as Stanley Kowalski in the theater's production of 'Streetcar'. Perhaps her father over at the struggling Horizon Theater Group should take some notes. The Olander is here to stay.\"\n\n \n\n\"I read it already,\" Alex said when Courtney finally set the newspaper down next to her, but she couldn't even attempt to hide the smile that was on her face.\n\n\"You know who else probably read it?\" Courtney said with a mischievous smile on her own face as she plopped down on the couch set against the wall of the dressing room.\n\n\"Maybe. But after the year they've had, I wouldn't be surprised if my father canceled his subscription to the Times.\"\n\n\"That's their own doing. With a little help from Quinn. And whoever recorded her opening night and put it on YouTube.\"\n\n\"For the record, I told them not to do that god-awful David Coe play. I'm just glad I got out before I had to deal with the press from that one.\"\n\n\"But then we wouldn't have gotten to read the Times review that claimed your father's theater was an affront to feminism. That was a really fun day.\"\n\nAlex agreed, but she wasn't about to vocalize it so she just smiled and turned back to the mirror she was using to apply her make-up. Tonight wasn't about the failings of her father and Janet. The article Courtney just read from meant more to her than accomplishing some vendetta. She was so proud of what she had created at this theater and for once in her life she felt validated outside of anything that had to do with Horizon.\n\nAlex reached out for the hat she had sitting on the counter and put it on, carefully pinning some of her hair under it so it didn't look long.\n\n\"What do you think?\" Alex asked as she turned around so Courtney could look at her. \"Manly enough?\"\n\n\"The best I'll give you is slightly butch. You can't get around that face. But I'm sure you'll have all the ladies swooning.\"\n\n\"All I care is that one of them does.\"\n\n\"Yeah, yeah,\" Courtney replied with an eye roll.\n\nThey were both in the habit of teasing each other about their respective relationships, but ultimately, Alex couldn't be happier that Courtney and Paige were going so strong. And she knew Courtney felt the same about Quinn.\n\nAs if on cue, Paige popped her head into the dressing room. \"Fifteen minutes, ladies,\" she said and then looked down at Courtney with a raised eyebrow. \"Alex, you know you can kick her out if you need to focus.\"\n\nCourtney let out an exaggerated scoff from her place on the couch. \"Why do you assume she needs to focus and I don't?\" she asked her girlfriend.\n\nPaige walked over to Courtney and leaned down so she could place a quick kiss on her head. \"Because, my love, you're in her dressing room. If you wanted to focus, you'd go to your own.\"\n\n\"I share my dressing room with two other women. Alex gets her own,\" Courtney argued and at the same time pulled Paige down to her lap in a heap.\n\nPaige let out a laugh before positioning herself so she could hop off Courtney's lap and move back towards the door.\n\n\"Perks of owning the theater,\" Alex said from her chair. \"But don't worry, Paige. I'm used to Courtney annoying me in my dressing room.\"\n\n\"You only wanted a private one so you could fuck your girlfriend in it. The least you could do is let us borrow it,\" Courtney pouted.\n\n\"I'm on the clock, babe. There will be no fucking,\" Paige replied in the stern voice she did so well. \"And you need to go put on the rest of your costume. We're now\u2014\" Paige looked down at her watch, \"\u2014thirteen minutes until curtain.\"\n\n\"Fine, fine. I'll go. But just know that I'll be thinking about you with that sexy, stage manager stopwatch around your neck,\" Courtney said to her girlfriend with a wink.\n\nPaige rolled her eyes. \"I'm going to check on the rest of the cast. Behave, babe.\"\n\nAs soon as Paige was out of the room, Courtney moved over to the make-up counter Alex was sitting at and began looking at her own reflection.\n\n\"God, Paige is such a tease when she's in work mode. I can't handle that tight little bun with the pencil through it. How am I supposed to perform Tennessee Williams with that strutting around backstage?\"\n\n\"Well, she's the best stage manager I've ever met. I'd fire you before I'd fire her. So, I guess you'll need to deal with it.\"\n\n\"I see how easily you flip sides. But that's fine. I prefer Quinn to you.\"\n\nAlex could feel a small smile cross her lips as soon as Quinn's name came up, something that happened a lot. \"I can't blame you for that,\" she said.",
        "\"Speaking of which, I have to assume she's the reason there's now a fish tank in the lobby of the theater?\" Courtney asked.\n\n\"She is. She said life always brightens up a room.\"\n\n\"Or makes it look like a dentist's office.\"\n\n\"Sometimes you make concessions for love, my friend.\"\n\n\"Whoever you are, will you just make sure that Alex Anders is getting fed and watered?\"\n\n\"I'm mere minutes away from going out on stage again. The Alex Anders you're referring to is a distant memory.\"\n\nAlex suddenly felt Courtney's hand on her own, causing her to lower the mascara she was about to apply.\n\n\"I'm so proud of you,\" Courtney said in a much more serious voice. \"I know this is a big deal and you're pretending like it isn't. But I've been rehearsing with you for weeks now. This is where you belong.\"\n\n\"It feels good to be back on stage with you, Court. And it's only slightly annoying that your Blanche DuBois is better than mine ever was.\"\n\n\"Yeah, well nobody can pull off Stanley's white t-shirt look like you,\" Courtney responded. \"Your mom would be proud too.\"\n\n\"You think?\"\n\n\"I mean, I still think you should have called this place The Lesbian Sexytime Group, but I'm sure it would have meant a lot to your her that you used her family name.\"\n\n\"Thanks, babe,\" Alex said, smiling at her friend. \"Now, get your damn costume on so we can go out on that stage and yell at each other all night.\"\n\n\"Is that why I'm playing Blanche this time?\"\n\n\"You were born to play Blanche. Plus, Quinn likes the white t-shirt look on me too,\" Alex replied with a wink.\n\n\"Is there anything Quinn doesn't like you in?\"\n\n\"Nothing I can think of,\" a voice suddenly said from the doorway and when Alex whipped her head around, she could see Quinn standing there looking like a vision in red.\n\nFor a moment the two of them just stared at each other as Alex took in just how beautiful Quinn looked. She almost forgot Courtney was sitting there until she heard her friend's voice again.\n\n\"Well, I have a costume to get to and apparently you two have a staring contest to conduct, so I'll be out,\" Courtney said, getting up and moving towards the door Quinn was standing in.\n\nThat seemed to shake Quinn out of the moment because she broke eye contact with Alex to look over at the red head.\n\n\"Can't wait to see you on stage again, Court,\" she said with a warm smile.\n\n\"Thank you,\" Courtney replied, leaning in to place a quick kiss on Quinn's cheek. \"And you look hot. Alex would probably say the same thing, but I'm not sure she's capable of language anymore.\"\n\nAlex would have rolled her eyes at her friend, but she was busy staring at Quinn's red, strapless dress and heels. Quinn was holding something in her hands, but she was too distracted by the sleek dress to pay it much attention.\n\n\"I'll make sure she gets on stage with her verbal faculties intact,\" Quinn said.\n\n\"I know you will. See you on stage, Al,\" Courtney said before finally leaving the dressing room.\n\nQuinn smiled at the retreating form of Courtney before turning back into the room and closing the door.\n\n\"Hey, you,\" she said to Alex, her eyes roaming up the blonde's body in the same way Alex knew her own eyes were roaming Quinn's.\n\n\"You look unbelievable, Quinn. You're so beautiful.\"\n\nAlex stood up from the chair she was in so she could step closer to her girlfriend. But Quinn looked so stunning tonight that she almost looked untouchable.\n\n\"You just like me in red,\" Quinn replied.\n\n\"I like you in anything,\" Alex said and when her eyes caught the necklace around Quinn's neck, she moved closer so she could lightly touch the stone resting there. \"You're wearing the diamond.\"\n\n\"It's mine, isn't it?\" Quinn asked with a playful smile.\n\n\"It is. I'm glad you're wearing it.\"\n\n\"I know you don't have much time and your girlfriend coming backstage beforehand is probably bad luck, but I just wanted to see you.\"\n\n\"You're always welcome back here, Quinn. Seeing you could never be bad luck.\"\n\nAlex leaned in for a quick kiss, but she didn't want to ruin her stage make-up so she pulled back before either of them could deepen it.\n\n\"Well, things will be a little chaotic after the show. Especially with all your adoring fans clamoring for attention. So, I thought I'd stop by before you went on stage for a little opening night gift,\" Quinn replied.\n\n\"I don't think we have time for that kind of gift, sweetheart,\" Alex said with a raised eyebrow, even though she knew Quinn was referring to whatever package was in her hand.\n\n\"No, that not. At least until after the show. I wanted to give you this.\"\n\nQuinn held up the package and Alex took it in her hands. She couldn't remember the last time someone had given her a gift.\n\n\"Open it,\" Quinn said with a small laugh when Alex just continued to stare down at the paper.\n\nAlex looked at the package for a moment longer before she slowly started to unwrap it.\n\n\"My god woman, you go on stage soon,\" Quinn said in an exasperated tone and grabbed the package out of Alex's hands so she could rip the paper off herself. \"Here.\"\n\nQuinn handed Alex a black box and because she didn't want to get scolded again for taking too long, she quickly moved to the make-up counter so she could set the thin box down and lift the lid.\n\nShe recognized what was in the box immediately and her fingers reached out to touch the beautiful wood inside.\n\n\"A chess set,\" she said, lifting the board out of the box.\n\n\"I still can't believe you don't have your own set already. The computer version is just sad. I thought you could use one.\"\n\n\"This is beautiful,\" Alex said as she inspected the pieces that were in the box with the board. Each piece looked hand carved and so unbelievably detailed. \"Where did you get it?\"\n\n\"I had it made for you. Look at the back.\"\n\nAlex turned the board over and saw that there was an inscription in gold cursive.\n\n\"In the flush of love's light, we dare be brave. And suddenly we see that love costs all we are and will ever be. Yet it is only love which sets us free,\" she read out loud.\n\n\"It's from one of my favorite Maya Angelou poems. It just felt fitting for you,\" Quinn said with a shy smile. \"I mean, it felt fitting for us.\"\n\n\"It's perfect,\" Alex said, swallowing down the intense emotion she felt looking at the woman in front of her. \"You're perfect. Thank you so much.\"\n\nAlex gently put the board back in the box and then walked closer to Quinn so she could grab hold of her girlfriend's hands.\n\n\"Does this mean you'll play me at strip chess after the show?\" she asked Quinn.\n\n\"We have a party to go to after the show.\"\n\n\"How about an after-party then?\"\n\n\"Always. Though, it will be a very short game. There's not much to take off me tonight,\" Quinn replied with a suggestive expression on her face.\n\nAlex eyes snapped down Quinn's body as if she would be able to see what was under her dress.\n\n\"Meaning?\" she asked Quinn.\n\n\"Meaning panty and bra lines just didn't go with the dress.\"\n\nAlex's eyes traveled down her girlfriend's body and she let out a frustrated groan as she thought about all the things she'd like to do to it in that moment.\n\n\"Do I really need to go on stage right now?\" she asked.\n\n\"Yes, you do,\" Quinn said, putting a finger under Alex's chin and bringing her eyes up to a safer area.\n\n\"I should have cast an understudy for myself.\"\n\n\"You'll have me tonight. And tomorrow night. And all the nights.\"\n\n\"And apparently some mornings,\" Alex replied with a small smile.\n\n\"Those too,\" Quinn said, returning Alex's smile.\n\nAlex knew she only had a moment before Quinn would need to head back out to the theater so she leaned back in for another soft kiss. Quinn reached out and rested her hands lightly on Alex's waist as their lips pressed together lightly. But when Paige's voice suddenly came over the backstage intercom, she pushed the blonde back slightly.\n\n\"Places, everyone. This is places. Have a great show tonight. Once again, we're at places,\" Paige said over the intercom.\n\n\"I better go grab my seat,\" Quinn said. \"I don't want to miss Stanley's entrance.\"\n\n\"Thank you for coming to see me,\" Alex said.\n\nQuinn gave her another smile and then walked back to the door so she could open it. In the hallway, Alex could see a few of her other cast members heading to the wings and green room, but Alex's eyes were still on Quinn, who had turned around again.\n\n\"Break a leg, Alex,\" she said softly. \"I love you.\"\n\nAlex would need to school her features very soon since the huge smile on her face didn't exactly fit with her character. But as she looked at the woman who got her here, she felt overwhelmed with happiness and a small, unexpected laugh bubbled out of her mouth.\n\n\"What's funny?\" Quinn asked.\n\n\"Nothing. Those are just the best six words I've ever heard.\"\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "drama",
        "girl on girl",
        "lesbian drama",
        "lesbian novella",
        "lesbian sex",
        "lgbt",
        "new york",
        "theater"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/new-horizons-ch-39-44"
}