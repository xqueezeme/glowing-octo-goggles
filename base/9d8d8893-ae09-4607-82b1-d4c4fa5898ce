{
    "title": "Felicity Ch. 48",
    "pages": [
        "Chapter 48: The Intruder\n\nI was now forty years old and single. My wife and I had divorced six years before but we had remained friends even after she remarried. I had dated and gotten laid often enough but the women soon saw me as a potential high income husband and began to demand my undivided attention. I had no intention of getting married again. \n\nMonths between fucks became the norm followed by three months of frantic bouts of passion followed by months of celibacy as I tried to break a relationship. My fascination with a woman ebbed quickly after about three months. Each woman had often heard my mantra of never getting married again but most had decided it didn't apply to them. I rarely got a clean friendly break from a relationship.\n\nEventually the resentment of my former lovers got to me and after I walked my daughter down the aisle I moved to the city. I bought a nice patio home in the suburbs and concentrated on my job. I am a dermatologist.\n\nMy new home had two bedrooms and two baths. The second, smaller bedroom became my office but had a comfortable futon for surprise guests.\n\nIt was just a few weeks later when I began to feel my new home was haunted. I did not believe in ghosts and there were no manifestations but I felt that someone had been there when I was at work. I had a dog, a yellow lab named Patty and she did not seem to be upset so I chalked it up to my imagination. But the feeling persisted.\n\nI changed the locks on the doors and made sure my windows were locked but that did not help. I was convinced someone was coming in.\n\nI spent a weekend installing cameras throughout the house then on Monday I tapped into them from work. \n\nThere was a woman in the house petting my dog. \n\nShe looked like she was exhausted and was soon on my sofa sound asleep with my dog by her side. She was a small woman, with short red hair hair, in her late thirties maybe, a bit skinny. She was dressed normally although I could tell she wore no bra. She appeared to have nice tits.\n\nI decided not to call the police, after all nothing had been missing and my dog did not view her as a threat. Plus she obviously needed the sleep.\n\nI checked on her periodically and watched her sleep for about five and a half hours before she got up and went to the second bathroom. I had not put a camera in there so I did not know what she did but my dog followed her. \n\nIt took more than half an hour for her to re-emerge and when she did she was carrying her clothes, she was nude. She was the first nude woman in my new house. She looked nice.\n\nMy dog was still with her and followed her to the kitchen. I lost sight of her there, my camera was aimed towards the refrigerator, but when she re-appeared she was dressed except for her jeans. She gave my dog a treat, which she must have brought; I was out of treats and had been for a few days. The intruder put what appeared to be a cup of ramen soup into the microwave then sat on the floor to pet the dog. It was clear to me they liked each other.\n\nShe stood and ate her soup while standing then disappeared off camera. I panned to the other cameras but there was no one there. After about thirty minutes I saw my dog asleep on the couch where she had slept. The woman was apparently gone. She had made herself at home in my house for almost seven hours.\n\nWhen I got home there were no signs anyone had intruded but now I knew someone had. I saw her in my house everyday that week but never saw how she got in or left. I needed more cameras. \n\nThat weekend I installed four more, another in the kitchen, one on the patio, and one in each bathroom.\n\nThe following Monday she was again in the house before I got to my desk at work and was asleep on the couch soon after. This time when she went into the bathroom I had a camera to follow her and saw her get nude and go into the shower. She was definitely skinny.\n\nShe definitely had fine tits.\n\nShe emerged and used paper towels to dry herself and the shower walls; the roll was under the sink. I wondered if I was missing one or if she had brought it.\n\nIn the kitchen I saw a backpack by the washer/drier I had not seen from the other camera. She stuffed her dirty clothes in my washer and ran it without detergent. She then pulled out panties and a t-shirt from the backpack and put those on. She pet my dog then pulled out her cup of ramen soup and put it in the microwave.\n\nHer clothes had been in the washer only about five minutes when she moved them to the drier and put her jeans in with them. She again ate standing up then she and the dog went out to the patio. They played. My dog adored her. She adored my dog.\n\nTwenty minutes later she got her clothes out of the dryer, stuffed them into her backpack then locked the back door with the dead bolt. My new patio camera showed her and the dog going out through the doggy door. It was a tighter fit for the dog.\n\nAfter petting the dog one more time she went out through the yard gate to the front of house.\n\nBy the end of the week I was watching her only when she got in and out of the shower. I worried about the fact that she seemed to be undernourished. I worried about where she was on weekends. I worried about how much I really wanted her tits. \n\nThe following Monday I left her two towels in the bathroom with a note asking her to please give the dog a bath too.\n\nShe was panic-stricken at first and ran out of the bathroom but soon calmed and began to search for cameras. She found the first four I set up, they were in plain sight behind little domes on the ceiling; she had not noticed them until then. She realized I had been watching her for a while. \n\nShe did not see the last four as I had hidden them. She did look for one in the bathroom but that one was behind what was now a two-way mirror.\n\nI saw her give me a small smile from the camera in the living room then walk to the bathroom with the dog. I had bought shampoo and conditioner for her hair, nice smelling soap, and a toothbrush. The dog shampoo was also in the bathroom.\n\nLabs love water and mine was very pleased when she was allowed into the shower. When they emerged they were both very happy. After drying herself and the dog she hung both towels on the hooks behind the door and dressed in the bathroom. She likely knew I had seen her walk around naked and decided to be modest. I was very glad for the camera in the bathroom.\n\nThe scene in the kitchen was as usual except she threw her empty soup cup in my trash.\n\nShe was definitely skinny.\n\nThe next morning when she got in she found a box of cereal on the counter, a bowl with a spoon, a carton of milk next to a glass, and a bottle of women's multi-vitamins next to it. I left her a note that said her lunch was any frozen dinner in the freezer. \n\nShe looked up to the camera in the kitchen and gave me a very nice smile. That afternoon I found a cup of ramen soup on the counter, unopened. In the trash I found the box to a fried chicken dinner.\n\nThe following day I had a note for her on the couch that told her I had a comfortable futon in the office that had enough room for her and the dog. She had a gorgeous smile.\n\nThings stayed that way for about eight weeks. I saw her gain weight and become more radiant. I saw her load and run the dishwasher, vacuum and dust; I was not a good housekeeper. \n\nI saw her look through a photo album I had on the coffee table that my daughter had given me. It had photos of the two of us from the day she was born through the day she married. It was my most prized possession but I knew it was safe in her hands; her smile was brilliant as she looked through it. I thought I saw her eyes moisten. I had already decided I liked her.\n\nThe intruder walked through my house wearing just a t-shirt when she wanted to wash her jeans too. She would put all her clothes in the washer when she came in and in the drier after her sleep.\n\nApparently she had decided I had already seen her nude and it didn't matter or had decided to thank me for my hospitality. She undressed in the kitchen. Then I reminded myself she did not know I could now see that end of the kitchen, she likely just though she was out of my sight.\n\nShe signed for FedEx packages and got the mail for me. Had I had any neighbors at home at that time they would have assumed she lived there. It was then that I realized that she indeed lived there.\n\nI seldom left notes for her over those weeks and the intruder had never left notes for me until my dog Patty got sick. She left me a note describing the symptoms, (vomiting and confusion), and asked me to keep an eye on her that evening but she was sure whatever caused it was out of her system. She had rinsed her mouth with the hose and had left her with plenty of water to drink.\n\nShe ended the note by saying, \"Thanks for everything. Hanna.\"\n\nI now had a name for the intruder. I liked the name Hanna.\n\nThat evening I saw no signs of vomit in the house or patio but my dog seemed to be a bit frazzled and drank a lot of water. I checked around my patio and saw that a neighbor's oleander had stuck a small branch between the slats of the fence. I decided that must have been the problem and shoved the branch back through. Then I saw the dead chewed up toad.\n\nThe mouth hose rinse Hanna had done to my dog possibly saved her life.\n\nI had begun to suspect she was a homeless prostitute. Twice during those weeks she had come in with a black eye, once she had cried herself to sleep. I had not asked but suggested in a note that after rough nights she could use the tub in my bathroom.\n\nMy bathroom had a separate tub and shower but I seldom used the tub even though it had water jets. She used it the next time she had cried herself to sleep. I saw an angry welt just under a breast.\n\nThat drew a surprising amount of ire from me; I wanted to kill the bastard that would punch a woman that hard. It took three weeks for the bruise to fade.\n\nThree months after I had discovered her in my home I left work early one Wednesday afternoon and waited for her to leave my house. I followed her to a bus stop and followed the bus into town. She got off near the Greyhound bus station and I saw her put her backpack in a station locker. She then walked to an area full of bars and go into the first one. That bar advertised it provided free appetizers. It was dark by then. \n\nForty minutes later she walked to the next block and went into another bar then came out with a guy and followed him behind a dumpster. Their movements told me she was giving him a blowjob.\n\nShe was putting a bill in her jeans when they emerged but she stayed by the dumpster. A different guy came out and found her, both went behind the dumpster and she gave another blowjob.\n\nShe moved down the street past the next two bars and went into the third. A blowjob later she continued down the street.\n\nShe gave seven blowjobs that evening before returning to the bus station and resting around three AM. She dozed intermittently but she got less than an hours sleep.\n\nThe guy that appeared to be the station chief ushered her into his office when he came in at about six. She was back out after five minutes and went straight to the ladies room. When she emerged about twenty minutes later, she got her backpack, got a coke out of a vending machine and walked two blocks to the bus stop. It was nearly seven AM when I watched her get on the bus to my neighborhood.\n\nI got home first and was waiting for her in my kitchen when she came in.\n\nI said, \"I have been following you all night and I am as wrung out as you are. Eat your breakfast then get some sleep. We will talk after your shower.\"\n\nI kissed her cheek and went to bed. When I woke up I wondered if she was still in the house but found her sound asleep on the futon with my dog. \n\nI stopped myself from kissing her and walked away then realized I had already kissed her so I turned around and kissed her cheek again. \n\nI took a shower then went to the kitchen and cooked a late lunch for us.\n\nShe sat with me and we ate in silence.\n\nAs soon as we finished she said, \"I will not come back here. I am sorry.\"\n\n\"Why would you stop coming here? You would be homeless otherwise.\"\n\n\"I though that was what the talk was all about.\"\n\n\"Oh, no. Sorry. It's just that I saw you make a hundred and forty dollars last night and you likely make more on weekends. You make enough for a cheap apartment of your own and a much better diet. Where is the money going? Drugs?\"\n\n\"No. To Mom and my daughter. My daughter has a condition and her medicine is expensive. What I make barely covers the prescriptions. I also made the mistake of stealing from work and I am paying that back too. I can't get a decent job.\"\n\n\"Do you enjoy giving blowjobs?\"\n\n\"It's a living,\" she answered with a rueful smile.\n\nI waited for her to continue and she added, \"Yes, I like sucking off a clean, gentle man. I really like the two that kiss me before and after the blowjob. Both of those men are gay. They like me. Unfortunately I rarely see those men. Most nights are like the one you saw, I was just happy everyone paid and none hit me.\n\nI did see you as I walked from the third bar to the next. It took me a while to realize it was you since you stayed at the opposite side of the street. I continued my rounds so you would understand what I was.\"\n\n\"You stayed at the first bar for a while. Where you busy?\"\n\n\"No, I eat the appetizers there then drink a glass of coconut rum over ice to help me get started. I don't do business there.\"\n\n\"Do you fuck any of them?\"\n\n\"No. Never have, and in fact I have never been asked. I don't seem to appeal to men that way. Most do want to see my tits but just as you saw I always wear jeans.\"\n\n\"You do have fine tits,\" I said as I poured coffee for us.\n\n\"Thank you.\"\n\n\"Where do you go on weekends?\"\n\n\"The bus station mostly. Sometimes I spend the day riding different busses. I have a pass. That's how I found your house and this worthless watchdog.\"\n\nShe was softly petting my dog that I suspected preferred her to me. It had been my daughter's dog in the first place.\n\n\"How much do you need to send home each week?\"\n\n\"Five hundred.\"\n\n\"I will pay you five hundred a week for you to be my live in maid, cook, and dog sitter.\"\n\n\"What? Wait, you want me to stay here?\"\n\n\"Yes, and give up cruising for blowjobs. That will eventually get you really hurt and or arrested.\"\n\n\"Deal,\" she said as she jumped into my arms and gave me a ferocious hug.\n\nI had surprised myself when I made the offer. I had been thinking about her safety and truly did not want her to get hurt. Her reaction told me she really wanted to escape that life. It told me my rash decision had been the right one.\n\n\"Lets go shopping,\" I said.\n\nI took her hand and led her to my car and took us to a large merchant cube. She bought panties, shorts, blouses, make-up, hairbrush and fingernail polish. No bras. We bought chicken, steak, pork chops, and big bags of frozen mixed vegetables. She got dog treats. I had my house key duplicated and bought her a key chain to put it on. She gave me another ferocious hug.\n\nIt was our first day of personal contact but we felt we had known each other for a while. She was amazed I liked her.\n\nWhen we returned home we to put everything away then she cooked us a very nice dinner even though she kept apologizing that she had not cooked anywhere in nearly five months.\n\nAfter dinner I went to my bedroom and changed clothes putting on gym shorts and a t-shirt. After she cleaned the kitchen she joined me in the living room wearing the large t-shirt she slept in. I knew she wore nothing underneath.\n\nWe were watching the news that evening when she wondered out loud if any of her customers missed her.\n\n\"I am sure all of them do,\" I said.\n\nShe smiled and crawled from the sofa to me on my recliner. Her hand went up into my shorts and she pulled out my cock.\n\n\"You do not need to do this at all. I am not paying you for this.\"\n\n\"This and all of the rest you are getting are free, gifts to the finest gentleman I have ever met.\"\n\nMy cock was erect by then and quickly in her mouth. She made love to it and stopped me from cumming twice. Twice I interrupted her with a kiss and she moaned before resuming the blowjob. Many minutes had passed before she deep-throated my cock and I exploded down into her stomach. She kept on sucking my cock until it went into a deep sleep.\n\nThat was far and away the best blowjob I had ever experienced. I also suspected none of her customers had ever received that level of a gift except perhaps the gay men.\n\nShe began to stand but I pulled her onto my lap and was soon fingerfucking her. I was right; the only thing she wore was the shirt. She was very wet and very horny so she began her orgasms quickly and they continued for a while. Eventually she pushed my hand away. Then she kissed me. It was a lover's kiss.\n\nWe spent the next twenty minutes with her on my lap just caressing each other and kissing as we watched the late show.\n\n\"You need to go to bed so you can go to work tomorrow.\"\n\n\"Right, Will you be able to sleep? Your hours are reversed.\"\n\n\"Yes, soon. Will it bother you if I run the washer and dryer?\"\n\n\"No. I usually start the dishwasher before going to bed.\"\n\n\"Thanks, I always wash my new clothes before wearing them. I will run the dishwasher too, I already loaded it. Good night.\"\n\nWe kissed and I went to bed.\n\nThe following morning I found her sound asleep on the futon. Patty was curled around her. I had lost my dog.\n\nThat afternoon when I checked my home video I saw a sign on the couch that said, \"Call me,\" and had a number. I did and she told me she needed to go to a bank and send a money order home so she was leaving the house for a while.\n\n\"Where is home?\" I asked.\n\n\"Down the coast about eighty miles.\"\n\n\"Call your Mom and tell her you will be visiting her in the morning. We can give her the money directly.\"\n\n\"You sure?\"\n\nI could hear the surprise and elation in her voice.\n\n\"Yes, tell her we are taking them out to lunch.\"\n\n\"I'll call right now. Bye\"\n\nApparently I had not been completely sure her story about her kid was true. Apparently it was. I was happy. I wondered about her cell phone.\n\nThat night I got a fine dinner and a fine blowjob. I took her to several orgasms with what she called my magic finger.\n\nThe following morning we drove to her hometown of Felicity and her mother's house. On the way I suggested she call and tell them we were on our way. She said her phone didn't work outside the city; it was a monthly plan with a company that only served large cities. On Monday I put her on my plan and she was stunned to see that the package she had signed for the following week was addressed to her.\n\nThat Saturday her Mom and her daughter welcomed me warmly. Hanna introduced me as her boss.\n\nHer daughter had Turner's syndrome. She was small for her age, I had assumed she was seven or eight but she was closer to twelve. There were short stretches of time in which she seemed to tune the rest of the world out. Hanna looked at me and whispered, \"No, she is not autistic. The doctor said she is just a weird kid.\"\n\nI like weird kids,\" I said to her daughter, Paris. She giggled.\n\nIt was obvious Hanna adored her daughter and her mother. It was obvious they adored her.\n\nWe went to their favorite Italian restaurant and Hanna urged me to order the shrimp linguini like she had. Hanna's mother Amy ordered ravioli. Paris had just the linguini in pink sauce and a very thick milk shake. \n\n\"Paris seldom chews her food, Hanna said. Her sauce is made just for her; it has pureed spinach, carrots, garlic and tomatoes to add nutrition to her food. All that and the olive oil is why it's pink. Of course since it's pink Paris will eat all of it.\"\n\nHanna and I sometimes slurped the linguini; which was Paris' way of eating them. We made her giggle. I found it to be fun.",
        "I concluded that no one knew what Hanna did for a living and apparently did not know she had been fired for stealing at work.\n\nEveryone seemed to know them and they were kissed often. One lady, a mirror image of Hanna, ran out of a car, picked up some bags of food then noticed Hanna at our table. The woman screamed her way over, kissed all three of us wildly then ran out to a waiting car driven by a neatly dressed guy.\n\n\"That was my cousin Audrey and her husband Jack. They are on the way to the city to a function. I will introduce you to them if they ever slow down.\"\n\nParis wanted to go see the beach so we went to the resort and had soft drinks on their balcony. Paris just stared out to the sea as Hanna's mom gently quizzed me. It was obvious she had no idea what Hanna's source of income had been either.\n\nI told Amy that Hanna had been my head of household for a while but she had stolen my dog.\n\n\"What?\"\n\n\"Yeah. She now sleeps with Hanna and not me.\"\n\nParis laughed at that and asked Hanna, \"Name?\"\n\n\"Patty.\"\n\n\"Good name,\" then went back to staring at the sea.\n\nHanna handed her mother her cash and I took it away and gave it back to Hanna. I then gave her mother a check for a thousand dollars.\n\n\"That should cover your expenses for a while but when we return to your house show me what Paris' prescriptions are. I will also need the name of her doctors. My father is a retired doctor, an endocrinologist, and apparently knows everybody. He will know who to talk to. He will be able to see if she is doing OK or if there is something else you could try.\"\n\nAmy sobbed. Hanna kissed my cheek. Paris hummed to herself. I felt I needed to tell them not to get their hopes up.\n\nWhen we got back late that afternoon I called Dad and he said his retired doctor buddies were coming to his house for poker that night. He had referred a patient with Turner's to one of them. He would call me the next day.\n\nI faxed all the information to him as he requested then joined Hanna in the living room. I got another fine blowjob but Hanna stopped me from masturbating her. \n\n\"Maybe this time next week,\" she said with a smile. I understood and we just kissed for a while. I did notice she was wearing panties.\n\nI declined blowjobs for that week. It took until Wednesday for Hanna to be convinced I was not mad at her. I got a lot of wild kisses after that.\n\nDad gave me a rundown on what was discussed but they needed to see Paris. They could see her at her grandma's house on Saturday around noon before they went deep-sea fishing.\n\nHanna and I went to Felicity Friday night and she stayed at home while I stayed at the resort. That Saturday Hanna and I watched as all the retired doctors played with Paris and all agreed she was just a weird kid. Like me they adored weird kids. \n\nParis did not flinch or complain over all the vials of blood taken from her nor of the somewhat invasive physical exam she had to endure. Dad praised her bravery and asked her to call him grandpa. Then all of them asked her to call them grandpa. Paris giggled.\n\nI went fishing with Dad, our first such outing in over twenty years, and he told me he loved Hanna and her family. \"If you decide to fire her send her to my house,\" he quipped.\n\nI decided not to tell him the story.\n\nHanna stayed at home until Sunday afternoon when I picked her up to return to my home. \n\nPatty apparently resented being put in a kennel with dogs. Hanna insisted that when we returned to her house Patty would come with us. \"Mom has a real yard and Paris will talk her to death.\" she said.\n\nThe next Monday Dad called me and said all agreed that her growth would stop on the arrival of her first period and there was urgency for a growth hormone. One called a friend in Colorado and had a shipment of something sent to him after promising to return complete notes on the results.\n\nAnother called someone in Minnesota and was being sent a supplement for her milk shakes. I caught enough about the composition to understand it had near steroids in it, which they hoped that along with increasing her strength would slow the arrival of estrus.\n\nOne suggested that she take dance lessons.\n\n\"Costs?\" I asked.\n\n\"Nothing yet and probably none, she is now a test subject,\" Dad said.\n\nIt was a hectic week and Hanna apparently had a difficult menstrual period. She said her birth control pills delayed her periods for months but when she had one it was intense. I still got my minimum daily requirement of wild kisses.\n\nThat next Sunday night Hanna came to my bed naked, sucked my cock lovingly then slid it into her pussy. The fuck was done in slow motion, she wanted to make sure I enjoyed it but she ended up having three orgasms herself before I filled her pussy with my cum.\n\n\"That was the best, most loving fuck I had ever had in my life,\" I said to her. \n\nHanna said the same thing to me as she sighed. \"Thanks for waiting for me, and waiting for me, and waiting for me. You have the best control ever. I was surprised to learn my pussy was still open for business. I did not expect an orgasm much less three.\"\n\n\"How long has it been for you?\" I asked.\n\n\"Three years. My husband and I fucked on the day he went back to the Middle East. He did not come back alive.\"\n\n\"Sorry. Your last few years have been very stressful.\"\n\n\"Yes, but that ended a few weeks ago,\" she said with a big smile.\n\nShe kissed me as if I was the most important man in her life. We cuddled until she began to get up to go to her room.\n\n\"Wait, we have not finished,\" I said and slid down to her pussy and kissed and licked her to another orgasm then kissed my way to her tits and at last had a chance to adore them. She seemed to be purring while I rubbed my face on her breasts.\n\nI eventually made my way up to her lips and as I kissed her my rejuvenated cock slid back into her pussy. A deep groan escaped her body and I began my own slow but deep fuck. Her orgasm was magnificent, loud, and very intense. I was proud of myself until I felt her sobbing.\n\nI decided not to ask what was wrong and instead showered her with kisses as my cock slowly diminished although I had not cum. She fell asleep murmuring to herself. I covered us up and went to sleep.\n\nThe next morning I got up to go to work and left her asleep in my bed. Patty had taken my place as soon as I left Hanna's side.\n\nNeither of us talked about the previous night but each night she slept in my bed. We made love, we fucked, and we played. I ate her pussy then she sucked my cock and then we fucked. We repeated portions of that cycle randomly each night but her third or fourth cums were always my first except on weekends. I managed two or three cums then. She had at least ten. \n\nShe apparently loved the way I made love to her. I loved making love to her. Both of us expected we would eventually return to separate beds but had not after three weeks.\n\nParis' medications had arrived and it was the day of her first treatment with the experimental stuff. Dad and two of his buddies drove down to administer the drugs and take measurements. They stayed to watch Paris in her dance class.\n\nDad went down every Thursday and took Amy and Paris to dinner after dance lessons. Hanna and I began to suspect Dad's trips were for more than just monitoring Paris. He had begun to stay the weekends.\n\nOn one of our bi-weekly trips to her town I learned that Hanna had not been fired from her job for stealing. She had not been fired at all. She had been caught but was not even asked to pay back the money. \n\nHer boss at a CPA's office understood the pressure she was under but Hanna was too ashamed to stay and left town. She had been paying them back something each week.\n\nHowever she had never been under arrest, no charges were ever filed. She had never been asked to do anything other than come back to work.\n\nOn our next trip back to the town I coerced her to introduce me to her former boss and he happily smiled at Hanna as soon as he saw her. She burst into tears. He hugged her.\n\nI asked him how much she still owed him.\n\n\"Nothing, she just paid me back. You have a good woman, cherish her.\"\n\nAdrian became my best friend in town that day. We had dinner with him and his wife Martina on each trip down. \n\nMartina once asked Hanna why she had quit the agency.\n\n\"Temporary insanity,\" she had answered.\n\nAdrian apparently had never told anyone, including his wife.\n\nTo make ends meet Hanna had sold her house and moved in with her mother. She had military widows benefits but that money was paying her mother's house. Paris also had some medical coverage but the deductible on prescriptions was high. By the third year Hanna did not have the money to cover it and began to steal from her job. She was an accountant.\n\nI began to understand her much better; she was not a prostitute.\n\nHanna spent the nights with me at a bed and breakfast on each of our later trips to Felicity. We had reservations for two nights in the same room every two weeks unless otherwise advised.\n\nAlmost a year had passed since we slept together the first time. We had not spent a night apart since our second trip to her town. We never talked about it. \n\nI had not noticed when the third month went by. Nor the sixth nor the ninth month, Hanna had made note of when a year had passed since she discovered I knew she was there. I took her for an elegant dinner, a concert, and presented her with two dozen roses. She cried.\n\nI had gotten her a car so she could run errands and go shopping. She had made it a point to bring me lunch on Mondays. She made friends with the girls at my practice.\n\nAfter a year of living together Hanna became my part time receptionist; my actual receptionist was very pregnant. Hanna then became the full time receptionist after the baby was born. She was very happy to see her name on a real paycheck.\n\nThe receptionist wanted to stay with her baby for as long as she could and it was six months later before she asked if I had a job available. Hanna gave the job back to her and returned to her housekeeper job. Or her housewife job. Whatever.\n\nHanna eventually became the accountant Adrian assigned to me when I hired his firm. She worked from home. Hanna was on cloud nine for weeks. She also saved me a lot of money.\n\nTwo years later we were still sleeping in the same bed and made love often. We also kissed a lot but that now happened everywhere and in front of witnesses.\n\nWe joined Paris on her twelfth birthday party and her thirteenth birthday party. Then we went down to celebrate her first period two weeks later. She was now the same size as her Mother and Grandmother, normal, (for them). All medical procedures stopped that day.\n\nAbout ten weeks after my first visit Paris suddenly began to sit on my lap when I was at Amy's house. Hanna and Amy were very pleased and I loved it. Paris acted like she always had done so and that it was her right.\n\nHanna and I went on dates and continued to spend every other weekend in her hometown. We held hands as we walked.\n\nEven though my cock was in her mouth often she had not given me a blowjob in a long time. We both much preferred our fucks. We still had not talked about our arrangement or decided anything but we were a couple. \n\nOne of her hundreds of cousins asked her when we were getting married and we both said we were never getting married again. Over the next week we finally did talk about our relationship and it did occur to us that we were in fact already married. By then we had slept in the same bed for over three years.\n\nShe asked me if I loved her. I said, \"Yes. Definitely yes.\" I asked her if she loved me.\n\n\"It's a hell of a lot more than that,\" she said.\n\nA week later she was flashing an engagement ring from a shop in her hometown. \n\nIt seemed to me half the town was in the chapel on our wedding day. There were a lot of short redheads and tall blondes as her bridesmaids.\n\nWe had endured a food fight during our rehearsal dinner the night before. Actually Hanna and her girlfriends were the ones in the food war, Adrian had hustled me out as it started. We met all the other men at the bar and listened to the squeals and giggles emanating from the banquet room.\n\nI had realized before the food war that my new family and our friends were special but that skirmish made it very clear they were also a lot of fun. My daughter and my ex had a stunned look on their faces until cr\u00e8me pies landed on them then they began to return fire with gusto. All of the women giggled for hours after all the ammunition was spent. That evening I licked off the pie Hanna had covering her tits and pussy.\n\nAdrian was my best man; my Dad had declined the offer. \"I have to keep the mother of the bride from crying herself to death,\" he said.\n\nMy daughter and her husband were there as was her mother. Her new husband was not. My daughter told me they had separated.\n\nMy ex told me she was surprised to see that my bride was not a tall blonde. She and most of my subsequent lovers were tall blondes.\n\n\"Now that you mention it I am surprised too,\" I said.\n\nShe and Hanna became friends.\n\nThe doctors had suggested we leave Paris at her grandmother's house until she graduated. Hanna wanted her to live with us and I told her I was all for that. Paris made the decision to stay until she graduated then come live with us.\n\n\"The teachers and the school here know how I am, I would have to educate everyone if I moved to a different school,\" she said.\n\nHanna and I had to agree with her.\n\nBy then I understood that Paris was very intelligent. She was also very direct and truthful without being purposely mean. Everyone around her knew not to ask her opinion on anything unless they wanted to hear the truth.\n\nAfter my fiftieth birthday party and after our daughters, their husbands, and our friends had left Hanna asked me how I felt.\n\n\"Comfortable, happy, at peace with me and the world. I thank you for that.\"\n\nShe smiled and said, \"I am so happy you did not call the cops when you discovered me in your house. I am happier still to know you love me. I adore you. You are the best thing to ever happen to me. Happy Birthday.\"\n\nShe reached behind the couch and brought up a yellow lab puppy. \n\nI am afraid I cried just as I had when Patty died two years before.\n\nLike all labs the puppy was happy to show her love to everyone.\n\n\"Are you going to steal this one from me too?\"\n\n\"Yes, probably. Her name is Trish by the way, short for Patricia. It will be months before she sleeps with us so you have a fifty-fifty chance with her. What we don't want is for her to sleep between us. That could get her hurt.\"\n\n\"Best birthday present since I was six.\"\n\n\"What was that present?\"\n\n\"A black lab puppy.\"\n\n\"I love you. I love being your wife.\"\n\n\"I love you. I love you being my wife. I have a present for you too by the way.\"\n\n\"Oh, show me.\"\n\n\"I can't.\"\n\n\"Why?\"\n\n\"There will be nothing for you to see for a couple of months. I sold my practice and will start a new one in Felicity. All our friends live there. We were always very happy when we are there. Trish will have a yard twenty times bigger than my patio. I will have a fifteen-foot pond dug out for her.\"\n\nHanna just collapsed into my arms in tears. We kissed. A small weight she had apparently been carrying left her.\n\nDad and Amy now lived in a patio home walking distance from our house. They had been together for eight years by then. Paris and her husband Andy lived within bike riding distance away, although to be honest every place in town was just a bike ride away. \n\nWithin a year my daughter and her husband had moved into town to teach in our schools, so had her mother. My ex had returned to eating pussy and noted the town had more available to her than any other.\n\nI loved my life and thanked the intruder often. She thanked me for allowing her to take advantage of me.\n\n\"Always,\" I had replied.\n\nEven after our town moved we led happy lives."
    ],
    "authorname": "jjcolejr",
    "tags": [
        "love story",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-48"
}