{
    "title": "What The Cat Dragged In Ch. 09",
    "pages": [
        "All of your wonderful comments and all the faves makes my day. Thank you so much, and I hope you continue to enjoy!\n\npsyche b\n\n9. Little Things You Hide\n\nIt had taken the frail less than eighteen hours to go from terrified to pissed off. He'd expected the shift would happen, he just hadn't expected that it would happen so fucking fast. At breakfast, he could tell that her posture was different. She hadn't said a word about the night before either. In fact, she didn't say a damn thing that was any different from any other morning. It was fucking weird. \n\nHe was supposed to be the one who shook things off. Frails were supposed to cry and cower and do all the shit she had done last night. Maybe she got it out of her system, but he doubted that. It wasn't like he'd shredded some article of clothing she liked; she saw very clearly that her life was threatened. Now she was asking him how he wanted his fucking eggs. There was definitely something going on in that head of hers. So he waited, smelling her anxiety growing with each passing minute.\n\nIt took until she was cleaning up the breakfast dishes for her to say it. \"Are you going into town tonight?\" \n\nThat wasn't what he was expecting. It put him on edge immediately. \"Why?\" \n\nShe fussed over the dishes, keeping her back to him. \"I want to go with you.\"\n\nWhere the fuck was she headed with this? \"I ain't taking you into the bar I go to, so you can just get that out of your head.\" Being with the frail had gotten more comfortable, but that didn't mean he was going to give up all of his other bitter comforts.\n\nShe took a deep breath. He watched the force of it make her shoulders rise and fall. \"I don't want to go to the bar with you. I want to go into town with you. There's a knitting group that meets at the yarn store. I thought it would be fun to join them.\"\n\nHe stared at her back while what she just said sunk in. \"Well you've just got great fucking timing haven't you? Last night you were ready to crawl under a rock. Today you want to go running around town alone?\"\n\nShe turned and looked at him. \"You're half right.\" The note of sarcasm in her voice came through clearly, and it pissed him off.\n\nHe was across the spacious room more quickly than she could react. He turned her back to him and in the process twisted her arm up behind her back. The smell of her tears and the pained squeak filled the room. He felt her knees start to buckle, so he wrapped his arm around her waist. He might just break her fucking arm; it'd be a good lesson to her. He wasn't going to let her do it before he was ready. \"You were saying, frail?\" He growled close to her ear. \n\nShe trembled. \"Victor please-\"\n\n\"Please? Now you remember your fuckin' manners?\" He pushed just a centimeter further. Her cry was sharper this time.\n\nShe took a several quick, shallow breaths. \"I didn't mean it the way it sounded.\" She spoke through clenched teeth.\n\nHe'd expected apologies and reassurances that she wouldn't do it again to come spilling out in a terrified jangle of noise, she was still fighting to keep herself in control. It set her apart from so many others he'd put in this position. \"Then you better tell me how you meant it. Real fucking clear. Real fucking quick. Got it?\"\n\n\"Yes.\" Her voice quivered. \n\nThe potent mixture of pained sounds and frightened smells was as close to intoxication as he could get, and he was enjoying every delicious, heady second. \"Start talking, and if you piss me off again, I ain't gonna hesitate.\"\n\nShe took a trembling breath. \"You're right, the timing is bad. But if I hide that means Stan gets what he wants in a way. I've fought so hard to never give in to what he wants; I don't want to start now that I'm not even under his roof anymore.\" She whimpered again. \"Victor please, let go.\" \n\nHe tightened his grip on her wrist, but he didn't push her arm any further. \"So you thought you could get away with being a smart ass to me?\" His voice was quieter.\n\n\"I'm sorry.\" She went limp against him. \"That's not how I meant it. I just...I was nervous and wasn't thinking of how it sounded. Please, let go. I can't feel my fingers.\" \n\nHe moved her arm down carefully, his arm still around her waist. He waited until she seemed stable on her feet again. \"Finish up.\"\n\nHe walked away, a half smile touching his lips as soon as his back was turned. Fucking frail had brass ones, he had to give her that.\n\n*~*~*~*~*~*\n\nIt took her longer than usual. The strain he'd placed on her arm made it weak and achy. Her hand trembled. Pain shot through her overstressed shoulder. She took more time with anything breakable. She didn't want to give him another reason to be angry with her. \n\nAs soon as it was out of her mouth she'd known it was the wrong thing to say, but she'd been too wrapped up in working up her nerve to ask to go into town. The idea of being around other people at all made her nervous because she'd been so isolated for so long. The idea that anyone might have seen that broadcast only added to that discomfort. While it was true that the Wednesday night group at The Village Knitiot wasn't exactly ordinary, they were still all strangers. That alone made them dangerous. She looked a lot different, but probably not so different that an observant person wouldn't notice the similarities. Being around other people without Victor was a completely terrifying. Scared as she was, she knew hiding wasn't the answer.\n\nKelly lingered in the kitchen, straightening things and brushing at imaginary crumbs. She knew that if it wasn't over, he would have finished it then and there. That didn't mean she felt entirely comfortable about approaching him after she'd upset him. In such a big house, there had to be something else that needed rearranging or polishing. She should be able to keep herself busy until at least lunchtime. After that, she would figure something else out if she needed to.\n\n*~*~*~*~*~*\n\nLawton, Maine had tried to develop a tourist trade, but the location was never right for it and neither was the attitude of most of the locals. It had never caught on, but there were vestiges of the attempt still left in town. The Olde Towne Tavern was one of those places. Creed knew that when it was first built it had probably been designed with that stupid rustic distressed look that people seemed to love. Over the years, the illusion of distress had settled into a dilapidated reality. Not someplace he'd bring the frail, but she was down the street at her knitting group at the yarn shop. \n\nHe hadn't liked the idea at first, and he sure as hell hadn't like her approach but he'd appreciated the reasoning behind it. He knew the shop owner was a mutant, though not a terribly powerful one. Her Wednesday group was for mutants and those with mutant mates or children. It made him feel a little better about leaving the frail there alone. \n\nBetter. Not comfortable. That first week he'd lingered outside the building, listening, watching exists. Looking for any sign that she was in danger. Sure she was only a frail, but she was his and no one took something of his without a fight. Surprisingly, she'd seemed to be less comfortable than he was. He'd been certain she wouldn't want to go again, but the second week she'd been waiting by the door with her bag. Goddamn determined little thing.\n\nShe wasn't as apprehensive as she'd been that first week, and this time he had business to take care of. As soon as she was inside, he'd gotten himself a bottle of good whiskey and a glass at the bar, then took over a dim booth in the back of the Tavern. He poured himself a drink and checked his watch. He fucking hated waiting. \n\nIn the beginning, he'd planned to leave her alone while he was gone. The house was built on a promontory. The fence cut it off from the rest of the surrounding area. The array of motion sensors and alarms on the edge of the cliff and on the fence itself were enough to keep most things out. When he was there alone, someone would have to be pretty fucking stupid to try and get in anyway. He'd figured that and the security features on the house itself would be enough to keep her safe, like they had during his brief trips into town. \n\nThen Stan had to go fuck up everything. If someone was determined, she'd be an easy target, no matter what kind of fence he kept her behind. That meant he had to trust someone else to keep her safe while he was gone. The idea alone pissed him off, but he wasn't about to let asshole Stan have the upper hand. \n\nHe'd thought about having someone simply watch, without having any contact with her. Knowing her, that would last all of three days - if that - then she'd call him in a panic and he'd have to figure out something else from a distance. Leaving her alone with someone else was the option he liked least, but it was probably the most rational under the circumstances. \n\nIronically, the first person he'd thought of was Jimmy. That was just plain stupid and he knew it. The only reason he'd thought of the runt at all was because she was just the kind who brought out that pain in the ass noble side of his. He'd take one look at the frail and see the bruises and scratches, that too-small frame and those striking eyes and completely miss the steel and fearlessness that she managed to carefully hide from damn near everyone. Jimmy'd go into 'rescue' mode as soon as he saw her, keeping her away from anyone and anything he perceived to be a threat. That also meant that he'd try and get her away from his 'monster' of a brother. Even if he were speaking terms with the runt, he would have rejected the idea for that reason alone. \n\nCreed checked his watch, and poured himself another drink. The only advantage of having the frail so close was that if this little meeting went bad, he could grab her and be heading out of town in five minutes or less. Fucking frail. She was one big complication wrapped up in soft skin, sweet scents and delicate touches. He drained the glass in one, burning swallow.\n\n*~*~*~*~*~*\n\nKelly sat in one of the mismatched armchairs at the back of The Village Knitiot. She kept her eyes on the sock she was working on and let the conversation and laughter flow around her. The first week, she'd been suspicious of the others in the group. She hadn't wanted to be, but suspicion had become so much a part of the fabric of her daily life that it was reflexive. This week, she just didn't know what to say. She wasn't a part of the world in the same way these women were. Maybe in a few more months she would be, and she might be better off to stay away from groups until then.\n\n\"Kelly?\"\n\nShe lifted her head to see the six women staring at her. She managed an embarrassed smile. \"I'm sorry. I guess I was a million miles away.\"\n\nThe older members of the group went back to their conversation. Sarah, the one other knitter under thirty, smiled a little. \"It's okay. It looked like you were counting. I just asked if you got that yarn here.\"\n\nThe sock weight hand-painted merino wool blend was something she never would have been able to afford before. The blend of blues, purples and pinks had caught her eye immediately. She'd reached out, hesitant to touch it. Victor had stood back and watched her return to that shelf three times before he'd gotten tired of watching her indecision. He'd took two of the larger hanks and tossed them in her shopping basket.\n\n\"I don't think I need-\"\n\n\"You got it. Get creative.\" He'd said, a little twitch of a smile on his lips. If she hadn't gotten used to his tiny flickers of expression, she would have missed it.\n\nKelly used the memory he help her manage a more genuine smile. \"Yeah, a couple of weeks ago, maybe.\"\n\n\"I must have totally missed it the other day. Can you show me where you got it?\"\n\nKelly recognized a ploy when she heard one. \"Sure, it was just over with the rest of the sock yarn.\" She got up, and walked with Sarah to the other end of the store, avoiding the large front window as much as she could. \"I don't see that particular color, but there are some with greens.\" \n\nSarah was looking at her, not the yarn. Kelly slid one hand into her sweater pocket, feeling the small scissors she kept with her knitting.\n\n\"You were CoH.\" Her voice was soft. \n\nKelly took a step back. She couldn't keep the fear from registering on her face.\n\n\"No, I-\"\n\n\"So was I.\" Sarah backed away and sat on one of a pair of wooden chair that was being used to display sweaters.\n\n\"You were?\" Either Sarah was a very good liar, or she was telling the truth.\n\n\"From the time I was six until I ran away at seventeen.\" The pain around Sarah's eyes broke down the last doubts that Kelly had.\n\n\"How did you know I was?\" Kelly perched on the edge of the other chair.\n\nSarah shrugged a little. \"You reminded me of myself when I first got out. Like you've been on the outside for so long, you don't know how to get back in.\"\n\nKelly tried an insincere smile. \"I was hoping people would just think I was shy.\"\n\n\"They do.\" She stopped and thought about that. \"Well, I guess they do. Raylene doesn't really notice too much about anyone unless the person in question is male. I bet she knows every detail of the guy who came in here with you.\"\n\nKelly blushed. \"Victor does tend to make an impression.\"\n\n\"I'll say.\" Sarah grinned. \"Anyway, Mavis thinks that because you're new in town you must be a land developer-\"\n\n\"A land developer?\" Kelly almost laughed.\n\nSarah giggled a little and waved her hand dismissively. \"She's obsessed; no one seems to know why. Don't take it personally. Janet and Ideal are the Grandma Mafia. Each one is so into proving to the other that her grandkids are the best, you could have walked in here naked and spinning fire batons and they would have each had stories about their grandkids doing the same thing. Karla's generally quiet, but even if she wasn't I think she'd just want to keep all of her customers coming back.\"\n\nThis time, Kelly did laugh. \"Meaning I look more normal than I think I do.\"\n\n\"Exactly.\"\n\n\"You two find that yarn yet?\" Someone called.\n\n\"Sure did Mavis.\" Sarah called back. She got up and picked up some of the same yarn in green.\n\n\"Then what're you doing over there?\"\n\n\"Conspiring.\" Sarah answered. \n\n*~*~*~*~*~*\n\nCreed knew something was wrong, even before he opened his eyes. Something was missing. He sat up quickly, his mind instantly awake and his senses attuned to any tiny shift in the atmosphere, any indication of gathering threat. All he found was that he was alone in bed in the silent, expansive room.\n\nThe frail should have been there. He sniffed the air, taking in the scent of sex from earlier, the scent of fresh tears on her pillow, and the fresh, sharp stink of her fear. Probably had another fucking dream. For awhile, she hadn't had any, or at least none that he knew about. As it got closer to him leaving, he'd noticed the dreams had started up again. Usually, she went into the bathroom to calm herself down, but he couldn't see any light leaking out from under the door.\n\nWhat the fuck? He laid down again. She wouldn't want him stumbling into whatever she was going through. He turned on his side and hit the wide pillow with his fist, plumping it.\n\nBesides, the only thing he knew about nightmares was how to fucking cause them. He'd never been able to get a handle on his own. There was no way in hell he was going to be able to help her get a handle on hers. She'd probably resent the offer anyway.\n\nHe turned the other way and flipped the pillow over, searching for a cooler spot.\n\nShe was so goddamn secretive sometimes. Like he didn't already have a pretty good idea of hell Stan put her through. Even though she tried to hide it, she still flinched when he walked into the kitchen and saw her eating something. Cold as it had gotten, there were days he'd find her sitting out by the cliffside, shivering and staring at the unsettled gray ocean. She'd always have some excuse, but he could see the ghosts moving behind her eyes.\n\nHe switched sides of the bed and threw off the blankets. He'd been sleeping as well as he could sleep until she'd gotten up. Fucking frail.\n\nShe'd have to figure it out for herself. He wasn't anybody's fucking savior. He'd just happened upon a half-frozen opportunity and he took it. Didn't mean it was up to him to fix everything that was wrong with her. Besides, no one could say he hadn't been careful with her. She was still walking, still able to go out in public without drawing attention and when she did go out she seemed glad to get back again. Almost like she fucking liked him or something.\n\nHe sat up again. The scent of vanilla sugar was teasing him from her pillow. He was going to get her ass back in bed where it belonged if he had to drag her by her hair.\n\n*~*~*~*~*~*\n\nKelly's fingers trembled a little as she peeled the fifth apple. It wasn't from the chill of the house; the sweats she was wearing cut that to a tolerable level. All the lights in the large kitchen were on, giving the space the feel of an operating room. It was what she needed at the moment.\n\nShe'd had the dream just about every night, though some nights it wasn't as bad. It was always the same. Somehow she'd lose her footing on the landscape of her dreams and end up falling downward into the tiny, dark space she'd spent so much time in. Stan called it the meditation room, but she tended to think of it as Hell. \n\nLogically, she knew the tiny, basement room had probably been used for some kind of storage. The cement closet wasn't equipped for a washer and dryer, there were no shelves for storing preserves or other kinds of food. One would hardly need a door and a lock on a pantry anyway. She could remember Stan bringing them all down on the day they moved in. He'd gone on about being closer to God meant shutting out all distractions and whole bunch of other stuff she knew was bullshit. The room was a solitary confinement cell in a lovely house on a picturesque suburban street.\n\nShe had always been terrified of the dark, so for weeks she tried to do everything he said, no matter how difficult it was. Even then she knew that couldn't last. The first time he'd taken her down there was when she'd broken a plate. It wasn't intentional, but she'd gotten the impression that Stan had just been waiting for any excuse. He'd handed her a single thin blanket to wrap up in and a bucket to use if she had to go to the bathroom and he'd left her alone in the dark. \n\nShe'd beat her hands on the locked door until they were raw. She'd screamed until her throat hurt. Then she'd learned how to shut down. She knew someone had brought her water and a little food, but until Stan let her out she never had any idea how long she was down there. She had no clock, no window to look out of, no way to tell if an hour had passed or a day. That first time, she spent four days 'meditating' on her sins.\n\nAs time went on, her stays in the cell grew longer. She began to uncover its secrets, like the duct that let her hear what was going on in Stan's den. That kept her mind focused and gave her some sense of time. When she stopped hearing him, she would repeat the last home-school lessons her mother had taught her. She would make up stories and poems, anything to keep her mind focused on something. The desperate grab at sanity had worked, but it didn't keep the dreams away.\n\nMost nights when she woke up, Victor's presence was enough to remind her that she was safe. Tonight, even after she awoke the dream had clutched at her, trying to drag her back into the past. \n\nShe finished peeling the last apple and started searching through the drawer for a corer.\n\n\"What the fuck are you doing?\" \n\nThe voice from the doorway startled Kelly and she dropped the set of measuring spoons in her hand. They clattered to the hardwood floor.\n\n\"I...\" she searched for words. \"I was making applesauce. There were some apples that were going to turn-\"",
        "\"At two-thirty in the goddamn morning?\" He sounded annoyed and confused.\n\nShe shrugged a little and pushed at the sleeves of her sweatshirt, unable to meet his eyes. \"I couldn't sleep, so-\"\n\nHe rolled his eyes. \"You're a bad liar, frail.\"\n\nShe felt herself getting flustered. \"I was sleeping, but I woke up. I had to do something with the apples-\"\n\nHe dumped all of them into the trash. \"There. I did something with 'em. You wanna try telling me the truth now?\"\n\nKelly trembled a little, her eyes on the empty sink. She rubbed her arms with her hands, trying to hide the goosebumps that were forming there. \"It was nothing, just a dream.\"\n\n\"Bullshit. If it was just a dream you would still be in bed and I wouldn't be down here-\"\n\n\"You want to hear that he won?\" She turned to face him, her anger pounding in her ears, her fingernails digging into the palms of her hands. \"Fine. Tonight Stan wins! You can go tell the whole damn world or you can go back to bed.\" She pushed past him and got her boots out of the hall closet. \n\n\"Where are you-\"\n\n\"For a walk.\" She pulled viciously at the laces.\n\n\"Like hell you are!\" He picked her up and slammed her back against the wall hard enough to make her head spin. Her feet dangled inches above the floor, his fingers dug painfully into her upper arms. For a few eternal seconds, she was sure that he was going to make good on all of his threats. \"Told you before, running away ain't smart.\"\n\nKelly looked away. She started to tremble a little.\n\n\"What was the longest?\" There was an angry growl in his voice, but his grip had loosened a little.\n\n\"I don't know what-\"\n\n\"He kept you in the fuckin' dark. He made sure you got a little bit of shitty food, and a little water. Just enough to keep you alive, nothing more and not on any kind of schedule so you wouldn't have a sense of time. Sleep was an escape, but when you woke up you didn't know whether or not you were alive or dead.\" \n\nKelly went limp in his grasp. He lowered her to her feet.  \n\n\"You gonna tell me or you need me to go on?\"\n\nKelly couldn't look at him; her voice came out in a barely audible whisper. \"Three months, one week, four days, ten hours and thirteen minutes.\" \n\nSilence bloomed between them, lingering for what seemed like ages. She could feel the trembling starting and she crossed her arms over her chest, grabbing the newly-bruised places on her arms. The flash of pain would keep her focused. He bumped his head against hers, Kelly arched into him.\n\n\"I hate that I let him make me so...weak.\" Her voice cracked with emotion.\n\n\"Seen men a whole lot bigger than you go batshit crazy after a week of that. Didn't make you weak. Made you a fucking pain in the ass when I gotta go chasing after you in the middle of the goddamn night, but that's all.\"\n\nKelly smiled a little, her forehead resting against his chest. She didn't want to know where he had seen it before, but even through the storm of her emotions she knew there was a lot more to it than he was telling her. One large hand cupped the back of her head awkwardly, as if he wasn't sure what to do next.\n\n\"I'm sorry.\" She whispered. \"I tried not to wake you.\"\n\nHe growled softly. \"You think as soon as I leave he's gonna get to you somehow.\"\n\nShe shrugged. \"I'll be alone here. I don't know much, but I know that when you're gone I'll be a sitting duck, no matter how many alarms there are.\"\n\n\"You ain't gonna be alone.\"\n\nShe looked up at him. \"What?\"\n\n\"I said I'm leaving, but you ain't gonna be alone.\" He sounded annoyed.\n\n\"Who-\"\n\n\"You'll meet him when we go to dinner tonight. Course you'll look like ten miles of bad road because you been running around all goddamn night, but that ain't my problem.\" His hand tightened in her hair. \"C'mon. I'm sick of standing around.\" \n\nHe pulled and she followed, her gait made awkward by the one boot she was still wearing.\n\n*~*~*~*~*~*\n\nThree and half fucking months. She should have been talking to imaginary space aliens and finger-painting with her own shit. Instead she was undressed again and curled up against his chest. From the way she felt against him, she was relaxed again too. Not sleeping. He hadn't really expected her to. At least she could not sleep where she damn well belonged.\n\nHis fingertips drifted over the smooth skin of her shoulders. He wanted to know how the fuck she'd done it. He guessed it didn't much matter. Just proved that he was right when he figured there was more to her than what he could see. Made all the other emotional bullshit almost tolerable. \n\nShe turned her head and nuzzled against the crook of his neck. He nipped her ear gently, and felt her smile against him. His thumb caressed the back of her shoulder. Something bothered him about the texture of her skin. The wounds had healed without any further infection, but he'd cut her deep enough the second time that she should have had scars there. \n\nHis eyebrows drew together and his fingers drifted over the meat of her shoulder. He felt scabs from healing wounds. He felt her flinch when he pressed on a place that was still painfully bruised, but he felt no patches of raised scar tissue. He'd been careful, but he hadn't been that fucking careful in the beginning.\n\nWithout thinking about disturbing her, he sat up and turned the light on. She groaned and moved away from him. He twisted his hand in her hair, turning her onto her stomach. Her anxiety spiked.\n\n\"What-\" \n\n\"You don't have any scars.\" He turned her head away, trying to get a better look at her neck. Pink, healthy skin covered the places where scar tissue should have formed.\n\n\"I know, I haven't since I was a little kid.\" He could hear the confusion in her voice. \"Can you let go of my hair? Please?\"\n\nHe loosened his grip, but kept her face pressed against the bed. She took a deep breath. \"Ever?\"\n\nShe shrugged a little. \"When I was seven I had my appendix out. There's a scar from that, but nothing since. I never really thought about it before though.\"\n\nHe let go of her hair and turned the light off again. \"You never wondered about it?\"\n\nShe let him get comfortable, then settled against him again. \"No. I just figured I had good genes. Does it bother you?\"\n\nHe gave a little snort. \"Just means I gotta work harder to keep you marked. Now shut up and go to sleep.\"\n\nIf she read his curiosity, she was smart enough not to say anything."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "scars",
        "dreams",
        "defiance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-09"
}