{
    "title": "Becoming Her Wife Ch. 09",
    "pages": [
        "When the alarm sounded my eyes open in a flash to stare at it. It  was nine thirty in the morning. I had to get up for my diving lessons.  I tried to move my hand to silence the alarm, but they were still  chained behind my back. I still had the penis gag in and my cock was  still being restrained by the chastity belt. On top of all this I had  to pee really bad. \n\n\"Honey get the alarm it's closer to you.\" Josie said still half  asleep. \n\nI tried to tell her I couldn't move but it came out a garbled  mess. Luckily sometime during the night Josie cock had come out of me.  It was lucky because she jumped quickly straddling my waist to shut off  the alarm.\" \n\n\"Oh my god did I leave you like this all night?\" She asked  sounding concerned. \n\nI wanted to say something funny like. No I did it before the  alarm went off, but the pressure of her weight on my over filled  bladder drove all sarcasm out of me. Besides I was still gagged, what  could I say. \n\n\"Stay right there and I'll find the key. \" She told me like I had  an option. I guess I could have stood up but then what? \n\nJosie rummaged around on the bed for a second before coming up  with the key. First she unlocked the collar and then the chinstrap so  she could pull out the penis gag. She immediately started kissing my  mouth telling me how sorry she was.\n\n\"It's ok honey it was an accident now please undo the rest of the  restraints.\" I told her \n\nShe rolled me over onto my stomach and undid the handcuffs. Next  she undid the chastity belt and released my cock. I rolled over on to  my back and brought my hands around in front of me to rub my wrist. The  pain I felt doing this was worse then when she beat my ass last night.  When I rolled over, my cock popped up in front of me still wearing the  restraint device. Josie took off the restraint and then started kissing  and licking my cock. When she took it in her mouth the urge to pee was  almost irresistible. I quickly grabbed her head pulled it off me and  said.\n\n\"Josie if you don't stop that you're going to wind up with a  mouth full of pee.\" \n\nJosie gave me a grimace before going down and unlocking the chain  on my feet. Once that was off I jumped out of bed still wearing the  heels and made a dash for the bathroom. Seeing I was still wearing  stockings heels and the corset I sat down to pee. My bottom was still  sore from the paddling, but it wasn't unbearable. After I emptied  myself I brushed my teeth and then called Josie to give me my enema.\n\nShe came in tentatively as if I was going to yell at her. She  started to apologize again when I stopped her by putting my thumb over  her sweet mouth. She kissed my thumb and I said, \n\n\"There is nothing you can do to me to get me mad at you. Now  please stop saying your sorry. I enjoyed everything we did last night  and leaving me tied up all night didn't hurt me. Okay, just let it go.\"  Josie kissed my thumb again then smiled her wonderful smile. \n\nAfter I was properly cleaned out she removed the corset seeing it  only had lacing in the back that I couldn't reach. Then she emptied her  bowels and allowed me to give her an enema. This was the first time in  our relationship I was ever allowed to do this. We took a shower  together and after we were both clean she gave me a wonderful blowjob.  I came so hard she had to swallow three times before I was done cuming.  We shared what she didn't swallow.  \n\nAfter we had breakfast together with Jill and Jim, Josie and Jill  drove me to where I would take my diving classes. Josie and Jill would  then go shopping while Jim, went to check on the boat. The class wasn't  that hard and seeing I was the only student it went rather quickly  though it still took over four hours. I was told that Josie had set up  the qualifying dive the next day and she would be diving with us. \n\nThe four of us went out to dinner before going back to the house.  We had dinner in a nice French restaurant then walked along the beach  for an hour or so. I think we all were tired from the late night at the  club and getting up early. We also had to be at the boat at seven in  the morning. It was only seven o'clock when we arrived home for the  evening. \n\nJosie and I went into the bedroom to change into something more  comfortable for the evening. When we walked in I saw that the bed was  covered in cloths that she had just bought. Some were men's cloths,  mostly shorts and tee shirts the rest were women's. \n\n\"I felt guilty for what I did to you last night so I bought you  some cloths. You can't get mad at me for that?\" Josie told me.\n\n\"Josie I'm not mad at you. Not now and certainly not about last  night. Now please stop trying to make it up to me.\" \n\n\"Okay I'll stop but I'm certainly not going to take these clothes  back so you just going to have to wear them or throw them out.\" She  told me with authority. \n\nI agreed to keep them so she started to show me what she had  bought. The men's cloths were nothing special, but the women's were.  Several were tight short shorts that would look great on Josie. On me  they would look silly especially in the crotch area. I told this to  her. \n\n\"Nikki complained about not being able to wear causal cloth  around the house so I got her some. As far as you're obvious problem I  think I found a way to hide that too.\" She told me then handed me what  looked like a pair of skin colored rubber panties. \"The girl at the  store said they're for girls that want to hide the fact their not what  they appear to be.\" \n\n\"What kind of store was that?\" I asked \n\n\"You have to remember this is French territory. There are stores  for everything that has to do with sex. Why don't you try it on and  we'll see if it works.\" \n\nAfter I removed the clothes I was wearing I slid them up my legs.  Josie told me that my cock was supposed to go into the sheath. After a  lot of pulling and stretching I was finally able to get my cock all the  way into it. When I finally did get the panties all the way up they  seemed to be a size or two too small, but Josie said they were suppose  to be skin tight. The color was not right as it was too dark for my  skin, but as far as holding me in they did the job beautifully. They  even had what looked like vaginal lips where a girl would have them.  The head of my dick stuck out of the sheath in back between my legs so  I wouldn't have to take them off to pee. \n\nJosie looked me over and even ran her hand over the fake lips  before saying. \"Not bad the colors not quite right, but when you're  wearing shorts no one would ever notice.\" \n\n She then handed me a pair of French cut panties and pair of  shorts. I put those on then a matching bra and a pink tee shirt that  said girl power on it. I put on my make up, nails and did my hair in a  ponytail.  I but on some earrings and Nikki's wedding and engagement  ring. I then asked Josie what she thought.\n\n\"I like you better in a dress, but you look pretty hot dressed  like that.\" She told me then she tossed me a pair of high-heeled  sandals and said. \"You can wear the shorts as long as you wear heels  with them. Also you have to wear dresses most of the time. I don't want  to see you in shorts all the time.\" \n\nI put on the heels and said. \"If you don't want me to wear the  shorts I won't.\" \n\n\"I know you wouldn't love. I just think you look more feminine in  a dress. I'm sorry I feel that way, but you look more like Nick in  those then Nikki.\" She said sadly \n\nAs she started to put the clothes away I found what is known as a  skort or culottes that would go with the tee shirt and quickly put it  on. When Josie saw me in it a smile came to her face. She came to me  and we kissed before she said \n\n\"I said you could wear the shorts.\" \n\n\"I know you did but you didn't seem that happy about it and these  look a lot more like a skirt. Call it a compromise.\" I told her   \n\n\"Thank you I love you for that, but I promised Jill I would let  her see you in the gaffe and the shorts. She's thinking about buying  one for Jim. So put the shorts back on and I be ok with it.\" \n\nI put the shorts back on then helped put away the rest of the  cloths. Josie and I went out on to the pool deck to watch the sun go  down. Jill and Jamie were already waiting for us. \n\n\"Come here and let me see.\" Jill said as soon as she saw me. I  stepped up to Jill so she could get a closer look and she immediately  ran her hands down the front of my shorts and then between my legs.  \"Nice it feels like you have a real pussy and I don't feel any sign of  you cock and balls. Maybe I'll get Jamie one. With that and her real  tits she could go to any beach and pass easily. What do you think  Josie.\"  \n\n\"You know me I'd prefer she was wearing a dress, but as far as  the gaffe is concerned I think it does the trick.\" Josie told her as  she sat down. Everyone knew how she felt so the subject was dropped  after that. \n\nJosie and I held hands while we sat and watched the sun sink into  the blue Pacific. Once it was gone we kissed like we did when we first  met. When we realized that we weren't alone Josie asked \n\n\"Jamie how many did you do last night? You were going pretty hot  and heavy when we saw you.\" \n\n\"I think it was around twenty though I'm not really sure. I know  there was a few that had me twice.\" He told us \n\n\"How about you Jill?\" Josie asked \n\n\"I didn't have sex with any one last night, unless you count  Jamie and all she did was eat me out. She still hasn't cum. I did beat  a few slaves last night. I really laid into the one you saw me with,  the nerve of him forgetting his wife and Mistress's birthday. How about  you two do anything interesting?\" \n\n\"Well Nikki jerked off a guy on the dance floor. The ass hole  will pay for that.\" Josie told her and I could see her anger was coming  back. \n\n\"Who Nikki?\" Jill asked confused \n\n\"No Brian Helmet, the owner and president of Lancing Corp. He  threatened Nikki if she didn't bring him off. Nobody threatens my girl  and gets away with it.\" \n\n\"Oh, I guess I'll get out of the tech stocks for a while.\" Jill  told her \n\n\"I wouldn't, I'm going after his personal portfolio. When I get  done with him he won't be able to feed his dog.\" Josie told her then  she seemed to calm down considerably and said, \"I did paddle Nikki  pretty well at the club. Not because of what happen on the dance for,  but because I had an urge and Nikki let me satisfy it. Isn't she  sweet?\"\n\n\"That was nice of her. So Nikki did you cum while you where being  paddled?\" Jill asked \n\n\"No, I was real close twice then something came over me and the  urge to cum went away.\" I told them. Jill looked at Jamie and then she  leaned in real close to me and asked \n\n\"What do you mean something came over you?\" \n\n\"Well it was kind of a feeling like being submersed in very warm  water. Then my whole body starts tingling then the urge to cum just  goes away. It's really quite nice when it happens I don't miss not  cuming at all.\" I told them. Jill and Jamie gave me knowing smiles then  Jill said. \n\n\"You're very lucky, most girls like you never experience that and  you had two in one night. You're very lucky indeed. \" \n\n\"I'm jealous, I only felt it three times my whole life never mind  twice in one night.\" Jamie told me. \n\n\"Maybe there is something wrong with me, after Josie and I went  to bed last night I felt it several more times.\" I told them they both  looked at me with shocked expressions till Jill asked\n\n\"How often have you felt it?\" \n\n\"There was the night Josie and I were married and the two times  at the club. Then there was three or four times in bed last night, but  I can't be sure the last one lasted real long and it seemed to come in  waves.\" I told then, they both looked on in shock till Jill asked  Josie. \n\n\"What in god's name did you do to this girl?\"  \n\n\"Nothing you haven't done to Jamie a thousand times. What are you  three talking about?\" Josie asked defensively. \n\n\"Were taking about you giving Nikki an internal orgasm. Or as it  more comely know a feminine orgasm. It's nothing to be ashamed of most  women that love their mates would love to give their husbands this kind  of orgasm while we're fucking them. That is what you were doing last  night in the bedroom weren't you.\" \n\n\"Well yea but I wasn't doing it in the club.\" \n\n\"That must have had something to do with the chastity belt you  used. The butt plug must have been rubbing on her prostate.\" Jill told  Josie, then to me she asked. \"Have you cum since this all happen?\" I  nodded my head. \"I'll bet it was one hell of a load,\" She added \n\n \"You're telling me, I didn't think she would ever stop cuming. I  had to swallow three times to make room for more.\" \n\n\"That's because when a she-male cum's internally the load is  stored and when she cums normally it all comes out at once.\" Jill  explained. Then she asked, \"What kind of strap-on do you use on her?\"   \n\n\"It's a special one I had made. Its probable the best one I've  ever seen.\" Josie told her. \n\n\"Maybe you should try it on Jamie to see if it works the same  magic on her?\" Jill asked\n\n\"I would, but I promised Nikki I would use it only on her and  that's a promise I'm going to keep.\" Josie told her confidently\n\n\"Well can I at least see it?\" Jill asked Josie told her she could  and they both left for the bedroom. \n\n\"What was Jill and Josie talking about when you first came out?\"  Jamie asked when she came and sat next to me.\n\n\"Do you mean the gaffe. It's kind of like a pair of panties that  hold you in real tight.\" I told her as I stood and lowered my shorts so  she could see it. With the low light levels Jamie had a problem seeing  what I was wearing so she used her hands. \n\n\"Where is everything?\" She asked \n\n\"My cock is in sheath that pushes it between my legs and my balls  are pushed up real tight to my body, in fact their almost inside of me.  At first it felt really strange having them pushed up so high, but now  that I got use to it, it doesn't feel bad at all. When I used to cross  my legs at the knee it kind of hurt now it doesn't hurt at all.\" I told  her \n\n\"I know what you mean, That's why I hardly ever cross my legs.  When I sit I just keep my legs together with my feet to the side. It  was the hardest thing to learn how to do. Jill would sit across from  me, if she ever seen my panties I'd get a paddling.\" \n\n\"Josie never had to do that it came second nature to me. She has  only paddled me twice. Once when we first met because I said she  wouldn't and last night. Do you like being paddled?\" I asked Jamie  nodded her head and said \n\n\"Sometimes I would show Jill my panties on purpose so she would  paddle me. She would paddle me if I asked but she enjoys it more if  there's a reason for it. She paddles a lot hard then too.\" Jamie told  me with a giggle I giggled with her. \n\nWhen Josie and Jill came back out Jill took Jamie by the hand and  pulled her to her feet and said, \"Come on girl if we're going diving  with Josie and Nikki tomorrow we better get to bed.\" \n\n\"I'm not really tired yet honey, can't we stay up a little  longer.\" Jamie said in a whine voice. \n\n\"Listen girly I didn't say anything about sleeping I said it was  time for bed. I just ordered myself a new dick on the Internet and I  want to give my old one a proper send off. Now unless you want me to go  out and find someone else I suggest you get your ass in the bedroom.\"  Jill told her with authority. \n\nJamie smiled broadly and said good night to Josie and I and left  for the bedroom. Jill wasn't far behind after saying her good nights.  Josie came and sat on my lap and said. \n\n\"What about you, ready for bed?\" \n\n\"Let's talk for a minute before we go to bed.\" I told her  seriously. Josie heard the seriousness of my voice. She got off my lap  and sat beside me. Taking my hand in hers she asked what I wanted to  talk about.\n\n\"I wanted to talk about me getting breast implants like Jim has.\"  I told her \n\n\"Honey I never thought about doing that to you. I told you when  we first started dating. I would never do anything to you that could  change who you are. Even now all you have to do is but on your male  cloths and you're the same person I met in that bar. I haven't changed  you at all.\" She told me. I just about laughed before saying\n\n\"Josie whether you want to admit it or not you changed me.\" \n\n\"I did not, you are the same person I met six months ago.\" She  told me indignity. \n\n\"Honey be serious, The person you met could have been the poster  boy for the young republicans. You showed me things I never would have  learned on my own. I never would have put on a dress or make up. I  certainly never would have had sex with another man.\" I told her \n\n\"That's all superficial you can stop having sex with men and you  can stop putting on dresses.\" \n\n\"Do you really believe it would be that easy to just stop what  I'm doing?\" \n\n\"If you wanted to change back you could.\" She said with out  conviction. \n\n\"I don't want to change I like being the way I am now. I like the  pretty cloths I wear and the make up. I like sucking cock and having  you fuck my ass. I like you paddling my ass like you did last night. I  like wearing all those restraints knowing I was at your mercy to do  with as you pleased.\" \n\n\"I won't lie to you I did think about you having breasts like Jim  has. I won't say I never thought about how nice it would be to be able  to suck on your tits while I'm making love to you. I do it now but  there isn't much there to suck on. Do you realize that you could never  go with out a shirt as Nick again? You could never go to the beach  where there might be others around?\" \n\n\"Josie when was the last time you and I had been to a beach. When  was the last time I went with out a shirt? The only time we sunbathe is  in the nude on your own private beach in the Bahamas or out on the deck  at home where no one can see.\" I told her. She thought for a minute  then said \n\n\"There's nothing we can do about it now. If we were to have it  done it would be after we spend a month with my family in the Bahamas.  So lets think about it for a while then next month we'll decide what to  do. Besides I not sure what the swingers club would think if one of  their new members had tits and a really nice dick.\"\n\nSo we decided to think about it, my mind was already made up.  Seeing that Josie wanted to think about it, told me that she wanted it  too, but wasn't sure of the ramifications. I knew she would talk to her  mother before deciding what we would do. I decided not to mention it  for the next three weeks and then only bring it up in passing. \n\nJosie and I tried to make love on the pool deck till we started  to remove our cloths. That was when the gaffe became a nuisance. It was  too hard to pull off romantically. With all the struggling to get my  cock free of it Josie wasn't too happy with it. We finally went into  the bedroom where I removed it before climbing into bed. \n\nWe made love like we always did with her on top. After the  frantic sex of the night before it was a pleasure to just make love the  way we use to. Once we were spent and we had cleaned each other we set  the alarm and went to sleep.\n\nThree thirty came very early and the alarm clock once more blared  in my ear. This time I was able to silence it quickly before being told  to by Josie. As soon as the alarm sounded Josie was up and in the  bathroom. This was surprising seeing she would normally moan and groan  about not wanting to get up. Today though she was chastising me about  dragging my butt. Once we were clean inside and out and dressed Josie  was pushing me to go and start coffee. \n\nI had never seen her like this. I know it wasn't because we had  an appointment. It couldn't take us that long to get from the house to  the boat and we still had almost two hours. I went in to the kitchen to  find that Jim was already making the coffee. ",
        "Jim was wearing shorts and a tee shirt with sandals much like I  was wearing. His shorts were on the tight side, which showed off the  bulge of his cock. This was the first time I've seen Jim as Jim since I  sucked his cock two days ago, surprisingly my mouth started to water at  the thought of it.\n\nI pulled my eyes from his crotch to his face and saw that he had  been watching me. I quickly turned my face as it redden with  embarrassment at being caught starring at his crotch. \n\n\"You're up kind of early?\" I said \n\n\"Not yet but if you keep starring at it I will be very shortly.\"  Jim said then laughed. I laughed with him then he said, \"I'm sorry I  just couldn't help saying that.\" He handed me a cup of coffee and said,  \"Jill knows Josie want to get started early even though Josie knows  Bill won't be at the boat till six thirty. That's the way Josie is when  it comes to diving. If it were up to her we would have left last night  so we could hit the water at first light.\" \n\n\"She does seem excited about going. Is she always like this?\" I  asked. \n\n\"If it was up to her she'd stay in the water. You've never seen  someone as bitchy as she is when its time to come back in.\" Jim told me  as he started to butter toast. \n\nI too started to make a breakfast plate for Josie and I. Once  breakfast was ready Jim and I took it in to the dinning room where Jill  and Josie were waiting. I sat down next to Josie with Jim next to me.  Josie took her coffee and drank it with out touching her food. I could  see her hands shake with what I took for excitement. \n\nAfter she took a couple of drinks of her coffee she said, \"Jim  are you sure the boat's ready?\" \n\n\"Yes every thing is ready. All four-fuel tanks are filled. All  the dive tanks are filled and certified. All the equipment is ready and  there is enough food on board to feed a small nation. The fresh water  tanks are full. Is there something I have forgotten?\" \n\n\"No of cause not but you know how I am, I just had to ask.\" Josie  told him \n\n\"I know you did, just like you asked three times yesterday.\" He  told her with a slight laugh. \"You know Bill's going to want to come  back in right after the first dive?\" \n\n\"I know. But we'll be ready to go again tomorrow except for  topping off the fuel tanks and refilling the air tanks we use today.\"  Josie told him as she stood to leave.  \n\n\"I just don't want you getting into an argument with him like you  did the time he took out Michael.\" Jim told her. \n\n\"Then he shouldn't have tried to tell me how to drive my boat.  That's what started the argument in the first place.\" She told him\n\n\"Just remember that boat's not your Porsche.\" Jim told her. Josie  was about to say something then she realized that Jim was giving her a  hard time. She stomped her foot then turned and left the room dragging  me with her. Once we were out of hearing I asked what that was all  about. \n\n\"Bill is a male chauvinist pig. He thinks I shouldn't be driving  a boat as big as mine is and he was quite upset that I drove and not  Michael. Speaking of that I want you at the controls while he's aboard.  I couldn't care less what he thinks about women drivers but I don't  want him thinking that you are some pansy that lets his wife walk all  over him.\"  \n\n\"Josie I don't care what he think or anyone else for that  matter.\" I told her \n\n\"I know you don't. It will make everything easier if we put on a  front that shows us as a happy couple and I do as my husband tells me.\"  She told me and I could see she was serious. \n\nThe boat that Josie owned was sixty feet long and twenty feet  wide. It was a cabin cruiser that had three separate bedrooms or  staterooms. The main stateroom took up a third of the front of the boat  and was quite luxurious. It had a queen-size bed and it's own bathroom  or as Josie called it a head. There was also a shower, though it was as  small as the one on the plane was. \n\nJosie then showed me the other two staterooms before moving to  the main salon. This room was where you would sit while the boat was  moving unless you were outside or in the pilothouse. The room was  beautifully done in rich wood and marble. \n\nThe outside main deck had several chairs and along both sides and  the back stood dive tanks like soldiers waiting to be used. The  forecastle was covered with a thick mat that we would use to sunbathe  on when we weren't diving. \n\nJosie and I moved to the pilothouse and she explained the  operation of the boat. She told me where the four fuel tanks were and  how I was suppose to empty them so I didn't cause the boat to list. She  explained the electronics so I knew where we were at all times. \n\nAt six thirty we got underway much to Josie's displeasure. Bill  and her agreed that we would be leaving at six, She got more upset as  the minutes went by. When he did finally arrived, Jim and Jill handled  the mooring lines and I eased the boat away from the dock. \n\nGoing though the harbor was not an easy task, as the boat didn't  respond the way a car would. You had to anticipate your turns well in  advance. Once we were in the channel I did little more then to keep the  boat going in a straight line behind a French man of war. \n\nOn board the French destroyer there were several men standing on  the fantail. Soon that number grew to about twenty and all were yelling  and waving their hands. Josie started to look around to see if there  was a problem with the boat till she looked down at the forecastle.\n\n\"Jill you are such a slut.\" Josie said more to herself then to  anyone in particular. When I asked what the problem was she said, \"Jill  down on forecastle with her shirt off showing everyone her tits.\"\n\nWhen we reached open sea the destroyer went north while we went  south. Josie told me what course to hold while she went down and put on  her wet suit. She came back wearing a black rubber wet suit with bright  yellow side. It looked more like a bathing suit then a full wet suit.  Her legs as well as her arms were bare and the zipper was undone down  below her breasts. Giving me a view of the sides of her breasts. She  gave me a knowing smile then looked at the GPS \n\n\"You better go and get yours on, we'll be anchoring soon and I  want you up here so I can show you how to anchor.\" She told me with a  playful slap on my bottom. \n\nIt didn't take me long to put on the wet suit as I had tried it  on several times before and even swam around the pool at home so I  could get use to it. It was basically a pair of tight fitting shorts  with the top attached. There were no sleeves and the zipper went from  my crotch to my throat. \n\nAs I made my way back to the pilothouse I heard the twin diesel  engines slow to an idle. When I got back to the pilothouse Josie show  me how to check the bottom for obstructions. Once she was sure there  was nothing we could harm she showed me how to drop and set the anchor.  When the anchor was set we shut down the engines and hoisted the diver  down flag before going down to the main deck. \n\nWe reached the main deck just as Jim and Jill went into the  water. I helped Josie on with her tanks and Bill helped me on with  mine. Bill then explained what we were going to do. Basically he wanted  to make sure I was comfortable in the water and I kept my eye on my  gauges so I had enough air to decompress on the way up. \n\nWe went into the water together Josie and I held hands as we  descended and Bill stayed right at my side all the way. We worked our  way down to the bottom and then swam along the bottom till I saw that  my air supply was half used up. I got Josie's attention and pointed at  the surface. She looked at her gauges and then at mine before nodded  her head. I let Bill also know I was going up. He looked at my gauges  and then at his before nodding. \n\nWe made our way back to the surface. This was the worst part of  the whole dive. I enjoyed the decent, there was anticipation as you  went down and there was the beauty of the bottom. The assent was boring  and I couldn't wait to get it over with, which made it seem even  longer. \n\n\"Well what did you think did you like it?\" Josie asked once we  were back on the surface. \n\n\"It was great I just wish it lasted longer I could have spent the  next week down there!\" I told her excitedly \n\n\"Next time we'll take two tanks each so we can stay longer. You  need to control your breathing a little better. I only used half the  air you did.\" Josie told me and Bill agreed with her. \n\nWe got out of the water and saw that Jill and Jim were already  back aboard. Josie and I dried off and went back to the pilothouse  after stopping in the salon for something to drink. We would have  celebrated my first dive but Bill was in a hurry to get back. So we  decided to wait and celebrate tonight.\n\n\"Did you really like diving or are you just saying that because  you know I like it so much?\" Josie asked once we were back in the  pilothouse. \n\n\"I loved it, I can't wait to go again.\" I told her \n\n\"Really good. We'll take Bill back and then we'll go out again  tonight. We'll anchor off an island tonight, so we can go diving first  thing in the morning. If it's ok with you and everyone else we'll stay  out till Sunday.\" She told me, which was just fine with me.  \n\nWe raised the anchor and started back. Once we were underway  again Josie went to go get changed. When she came back she said. \"Jill  want's to go to that store were I bought the gaffe for you. Is that  okay with you?\" \n\n\"Sure I don't see any reason it shouldn't.\" I told her \n\n\"You have to remember that I bought it there for you and the  owner will know it was for you. I guess you can wait in the car while  Jill and I went in.\" She told \n\n\"How did the owner react when you bought it?\" I asked \n\n\"It did bother her in the least. In fact she wanted me to bring  you in so she could see how it fits.\" \n\n\"I don't see any problem in going except I don't have it with  me.\" I told her. Josie smiled and said \n\n\"I packed it this morning. Just in case we stayed out and I  wanted Nikki to sun bath with.\"  \n\n\"Well where is it? I'll put it on so she can see it\" I told her.  She came to me and hugged me real tight and said \n\n\"I can't tell you how much I love you. It's in the top draw of  the right hand dresser. Put on the lavender panties too.\" Then she  kissed me.  \n\nI went down to the stateroom and took a quick shower. I found the  panties and the gaffe and put them on. I put on the same shorts as I  wore this morning and a clean polo shirt. I then made my way to the  salon for something to drink. Bill gave me my divers certification and  I thanked him before making my way back to the pilothouse. Josie and I  held each other as we let the autopilot take us back to Tahiti. \n\nJosie brought the boat along side the refueling pier to top off  the fuel and water tanks as well as refill the air tanks. Bill was off  the boat before we had it tied up. Jim talked to the attendant on the  pier to let them know what needed to be done. The four of us then went  out for lunch before going to the shop.\n\nWhen we got to the shop there was no mistaking what was sold  inside. The store's front window was fill with all kinds of sexual  paraphernalia. From whips to restraints and I even saw a few dildoes.  Jill Josie and Jim walked right in as if they were walking into a  restaurant, I on the other hand felt embarrassed to be seen walking in.  Josie saw my embarrassment and my hesitation she wrapped her arm around  mine and guided me in to the store \n\n\"Bon jour, bon jour mademoiselle and monsieur.\" The owner said as  we walked in to the shop. Then she started talking in French with Josie  and Jill. After Josie explained that I didn't speak French she turned  to me and said in a very strong French accent. \"Pardon Monsieur I did  know you could not speak French. Welcome to my shop, my name is  Antoinette and I'll be glad to help you any way I can.\" \n\nI thanked her and excused myself for not being able to speak  French. She was quite pretty in her red leather jump suit and very high  heels. Her hair was short in a bob fashion. Her skin color was dark and  her eyes had an almond shape to them. Even though her heels were at  least five if not six inches long she still was only as tall as Josie  was in her sandals. \n\n After we gave each other the once over she turned to Josie and  asked, \"Mademoiselle, the gaffe did it fit properly?\" \n\n\"I believe so I was hopping that you would look and see if it was  too tight.\" Josie told her \n\n\"Of cause Madam I would be very glad to see if it fits properly.  This way please.\"  She told Josie and started walking to the back of  the shop. \"Please Monsieur remove your cloths and stand on the  platform.\" She told me once we reached a dressing room. The platform  was about a foot higher then the floor. \n\nI removed my cloths as quickly as I could to hide my  embarrassment, but even so it showed on my face. Once I my cloths were  off and I was standing on the platform Antoinette ran her hand over the  gaffe and even tried to slid a finger down between the gaffe and the my  skin.\n\n\"I think it is too tight maybe the next size larger.\" She told  Josie after her inspection. \n\nShe left and returned with another gaffe that was slightly larger and a  lighter shade. As she and Josie watched I removed the gaffe and put on  the other one. This one was much looser though it still was skintight.  It was much easier to put on and to get my cock into the sheath.  \n\n\"Better oui?\" She asked once the gaffe was in place\n\n\"Yes much better.\" I told her. \n\n\"And the color is better, no? With breasts no one would know the  difference between you and a real girl.\" Then she said to Josie \"I  can't take the other back, but I'll give you a discount on this one.\"  Josie told her she understood. \"Will there be anything else Madam?\" \n\n\"We'll look around but my friend was also looking for a gaffe for  her husband.\" Josie told her\n\nJosie and I looked around while Jill and Jim went into the  dressing room with Antoinette. When she saw what Jim had between his  legs you could hear her gasp across the store. She went hustling past  us as she said. \n\n\"Monsieur is big, but this one.\" She said pointing to the  dressing room. \"This one is very big. He must make Jill very happy.\"  This caused Josie and I both to laugh. \n\nWhile we waited Josie found several skirts and blouses for  herself and a few for me as well. \"I like taking you shopping with me.  At least I know everything I buy you will fit.\" Josie told me  \n\nWhen we were done shopping we went back to the boat. Jim and I  emptied the trunk of several bags and three suitcases. With in a half- hour we were once more sailing out of the harbor. It was just passed  three thirty when we stared sailing west. Josie and Jill were both on  the forecastle sunbathing nude. Jim was down in the galley preparing  dinner while I was in the pilothouse. \n\nRight around six I saw what looked to be an island just ahead of  us. At the same time Josie came back in to the pilothouse. Her skin was  slick looking from the tanning oil she used and she smelled of coconut  oil. She was still naked and her nipples were hard little pebbles. \n\n\"That is an uninhabited island. We'll anchor in small bay and  spend the night. There is some excellent diving just to the north of  the bay. Go down and change I left out your bikini to wear.  Oh take  off the gaffe it would be to obvious with the bikini bottoms\" She told  me.\n\nI did as I was told and returned to the pilothouse just as the  boat was pulling into the bay.  When Josie had the boat anchored where  she wanted it we went down to the main deck. Jim had set up a table on  the outside deck and he and Jill were sitting enjoying a glass of wine.   Jill was also naked and Jim had on a tee shirt and a Speedo, which  showed off his cock to perfection. Josie had me sit on a chair and then  she sat on my lap as we share a glass of wine. \n\nI could tell Josie was sexually excited as I felt her juices drip  out of her and on to my leg. It didn't take long before we started  kissing. The kissing lead to caressing as my hands roamed over her oil  slick body. \n\nJosie hands were busy as well, as she pinched and twisted my  nipples. Before I knew it my top was off and my breast forms were  lying on the floor. Her mouth moved down to my chest and she tried to suck my nipples. \n\nI looked over to where Jill and Jim were. Jim was now on his  knees with his face between Jill's spread legs. Jill was sitting with  her knees on the arms of her chair as she held Jim's head tightly to  her. \n\nJosie, having seen that my attention had shifted took the nipple  ring in her mouth and pulled on it hard, which brought my attention  back to her. Then she pulled my cock out of my bikini bottoms and  started to slowly stroke it as she continued to pull on the ring. \n\nShe kept this up for a minute or two, then in one move she stood  straddled my legs and sat back down taking my cock deep inside her. We  both sighed with the pleasure of that move. Her hips then started a  light up and down motion as her nipples rubbed up against my pierced  ones.\n\nIt didn't take her long before she was cuming. Her whole body  shook and tiny whimpering noises were coming out of her throat. Her  body shook even harder and a high pitched squeal came out of her mouth  before she collapsed onto me. Her lips kissed my neck as I held her  close.\n\nAt first I was disappointed that I wasn't allowed to cum as well,  but I also knew that before this night was over I would be completely  sexually satisfied. I knew she had a plan and before this night was  over I would experience something new or different. \n\n\"Thank you I really needed that.\" She told me after she had  calmed down and was able to speak. She looked to Jim and said, \"I don't  know about anyone else but I starving.\" \n\nJim was now sitting on the deck between Jill's legs facing away  from Jill. Jill was sitting with her legs on Jim's shoulders as she  slowly ran her hands though Jim's hair. \n\n\"I guess we can eat now, it's all ready.\" Jim said as he got up  off the floor. \n\nI told him I would help but Josie stopped me saying, \"Let Jim get  it tonight you can do dinner tomorrow.\" I didn't think she wanted to  get off my cock, which was still hard inside her. Since having her hot  wet pussy surrounding my cock was quite pleasurable I didn't put up an  argument. \n\n\"What are we doing tonight?\" Jill asked \n\n\"There isn't much to do out here at night except for screwing. I  think we should do that.\" Josie told her. \n\n\"Sounds like a good idea to me. Are we all going to gang up one  person or are we going to split up into couples?\" Jill asked \n\n\"Tell me, has Jim had an orgasm since before the club?\" Josie  asked \n\n\"No the poor dear. I thought he was going to break a blood vessel  last night trying to stop from cuming.\" She told Josie then to me she  said, \"He just loves being denied an orgasm. It really makes him feel  like he's being used. I never let him go more then two or three days  without an orgasm. It's not good to keep him backed up for to long.\" \n\n\"Since he's gone two days already I think he should be allowed to  cum tonight. I think he should be the first person with a real cock to  fuck Nikki.\" I couldn't help it. Just the thought of having my ass filled  by such a big cock caused my cock to jump and swell inside of Josie.  \"Ooo obviously Nikki thinks its a good idea too. How about you Jill?\" \n\n\"I have no problem with that as long as he has something left for  me. In payment I think one of you should eat my pussy after dinner.\"  Jill told us. \n\nJosie told her that one of us would and left it at that. Josie  then got off my lap and had me tuck my cock back between legs and to  put on my top. She then told me to go get robes for us to wear during  dinner. It's not proper to eat while naked was her thinking. ",
        "We started dinner with shrimp cocktail, which Josie said, was  fitting for the occasion. This had everyone laughing except for Jim,  seeing he didn't know what was going to happen. The main course was  saut\u00e9ed sirloin tips in onions and mushroom with green beans. For  desert we had chocolate eclairs filled with custard, this too had Jill  and Josie laughing historically.  \n\nAfter dinner Josie said to me, so I was the only one that could  hear her. \"You can help Jim with the dishes. While you're doing that I  want you to flirt with him. You're not allowed to touch his cock or his  bottom, but you can kiss and touch anywhere else. Also you can't tell  him what's going to happen tonight. Don't throw yourself at him, act  more like you interested and willing, but not sluty. Mean while I'll  take care of our payment to Jill.\" \n\nI told her I understood though I didn't know how I was going to  do it. I started picking up the remaining dishes.  When Jim came back  out for another load she said. \"Jill and I going to my bedroom when you  two are done with the dishes you can join us there.\" Josie took Jill's  hand and left Jim and I alone. \n\n  \"I don't know what those two have cooked up, but somehow it  spells trouble for the two of us.\" Jim told me once we were alone.\n\n\"I don't think its anything bad, I'm sure we will both like it.\"  I told him. \n\n\"I didn't say I wouldn't like it I just know those two.\" He told  me as we walked back to the kitchen.  \n\nIn the kitchen which was a galley kitchen I volunteered to wash  the dishes seeing that there was no dishwasher. At first I didn't know  what I was suppose to do as far as flirting with him was concerned. I  finally just started to make sure I touched him as often as possible.  Mostly it was just touching his hands when I past a clean dish to him.  Before I knew it our hands touched longer till at one point we just  held each other's hand and stared into each other eyes. \n\nI was the first to break that stare, as I looked away  embarrassed. Jim cleared his throat and continued to dry the dish. Jim  could see my uneasiness with the situation and started to crack jokes.  Some were at my expense and others were at his or Josie and Jill's.  When they were at my expense I would flick soap bubbles at him, but I  still laughed. \n\nI had taken my robe off before I started washing dishes so as not  to get it wet. Jim had done the same and was now standing naked from  the waist up. His cute little breasts with their little rings seem to  call to me. Whenever I looked at him, my eyes would stray to his  nipples. I was caught several times staring at them. \n\nSeveral times while Jim was putting away a dish in the cabinet  that was to the left of me, he would brush his cock along my backside.  As I was washing the last of the dishes Jim went behind me to put one  away, this time he put his hand on my hip for balance and the next  instant I felt his lips on my neck. \n\nAt first I went to move away till I realized that this was what I  was suppose to do. I held myself still as he continued to nibble at my  neck. It felt wonderful as his lips and tongue moved from on spot to  another. His hands came around my waist and pulled me close to him. I  instantly felt the bulge of his cock in the cleft of my ass it felt  enormous. \n\nHe kissed my neck for a minute then I felt him try to slide my  bikini bottoms off. I knew this was going to far so I said \"Maybe we  should stop now I don't know how far I can go with out Josie's  permission.\" Jim groaned in frustration before saying\n\n\"Maybe you're right we don't want to get into trouble.\" I turned  around and kissed him on the mouth before returning to the pans that  needed washing. \n\nWhen we finally had the galley spotless I turned and Jim took me  in his arms. We kissed for a minute as our hands roved over each  other's body. His hands found their way down to my bottom and he took a  cheek in each hand. As he played with my ass I could feel my cock come  to life between my legs. I could feel Jim's cock come to life as well.  I could feel it harden against my pelvis as we continued to kiss like  two lovers. \n\nWhen the urge to drop to my knees and suck his cock became  unbearable I pulled my mouth from his and said. \"I think we had better  go, before they come looking for us.\" Jim agreed that it was time to go  so we put on our robes and left the galley. \n\nWhen we walked into Josie's stateroom we found both girls lying  on the bed kissing. Jill's legs were spread wide and you could see that  her pussy lips were red and swollen. Most likely from the work out that  Josie's mouth had just given her.\n\n\"Well it's about time you two got here, Jill and I were wondering  if you two had forgotten about us. I thought you had taken advantage on  my sweet Nikki, Jim.\" \n\n\"I'd never do that Josie.\" Jim told her. \n\n\"I know you wouldn't love I was just teasing you. Why don't you  two entertain yourselves while Jill and I go get something to drink.\"  Josie told us then she pulled me out into the hall and said. \"I watched  you in the galley you were perfect. Now I want you to do what ever you  want with Jim. The only limits I'm going to put on you is he can only  cum in you pussy and he can only cum once.\" \n\nI wanted to ask her how she saw us but she didn't give me a  chance. She kissed me hard and then said, \"I left you something to wear  in the bathroom and you should make sure you're clean. Oh one more  thing you can't cum, at least the way you normally do. I want you to  save that for me. Now go, your man is waiting for you.\" \n\nJosie turned and walked away. I wanted to ask her how she saw us  but I knew she would tell me eventually. So I turned to go back in to  the bedroom at the same time as Jill was walking out. She took my  shoulders in her hands and said.\n\n\"You be good to my husband, but not too good. Save a little for  me.\" She then kissed my cheek and ran after Josie. \n\nAfter I entered the bedroom Jim took me in his arms and kissed me  hard on the mouth. His tongue pushed its way into my mouth as his hand  moved over me. At the same time I felt his cock harden and push into my  tummy just above my pelvis. I subconsciously pushed my pelvis back,  which caused him to moan. \n\nHe pulled his mouth from mine and said, \"I told you they had  something up their sleeves.\"  \n\n\"You don't mind do you?\" I asked \n\n\"No I was hoping we could do this at least once. I wasn't sure  how Josie felt about sharing you with me.\" He said, then he kissed me  again. \n\nWhen I felt him trying to push me back toward the bed I pulled my  lips from him and said. \"Let me go freshen up first. I promise it won't  take me very long.\"  \"Okay I'll wait right here.\" He told me, and then we kissed once  more before I ducked into the bathroom. \n\nI quickly found the enema bag and filled it with warm soapy  water. I knew I had not gone to the bathroom since my last cleansing,  but I wanted to make doubly sure I was as clean and fresh as could be.  So I gave myself a second enema for good measure. When I fill the bag  the second time I found the honey scent that Josie used and added that  to the water. \n\nOnce I was properly cleaned inside I jumped into the shower and  took a very quick shower. After I was dried off I made up my face and  sprayed on some perfume. I found the cloths that Josie had left for me.  There was a red bustier and matching red thong. Silk stockings with  wide lace tops that were held up by the garters on the Bustier. Then  five-inch fuck me pumps and a red silk robe. \n\nOnce I was dressed and my cock was safely tucked between my legs  I walked out of the bathroom. I tried to enter the bedroom as  seductively as possible. It must have worked Jim's face lit up like the  Las Vegas strip. He was lying on the bed half cover with the top sheet.  His top half was exposed for me to see and even though I could see his  tiny breast it still didn't take away from his masculinity. \n\n\"Wow you look absolutely beautiful. \" He told me. \n\nHis words and the way his eyes seem to devour me had my cock  filling with blood. I thanked him and took off my robe then bent over  to remove my shoes. \"No leave them on, they look too good on you to  take them off.\" He told me,\n\nI slid into bed and Jim took me in his arms. We kissed and  caressed each other for a long time. My hand eventually moved down and  took possession of his hard cock. For some reason it felt thicker and  longer then it did a few days ago. \n\nAfter a few minutes of me stroking his hard shaft I pulled the  top sheet back and slid down the bed. Remembering how much pleasure my  mouth gave his cock I slowly started to lick the head. His precum was  flowing freely from his pee slit and it had coated the head of his  cock. I licked his shaft working my way to his heavy balls. When I  had his sack completely wet with my saliva I took one of his egg shaped  balls into my mouth. \n\n\"Oh baby you give such wonderful head I really like it the way  you mouth my balls.\" He told me. What's a girl to do, I took the other  ball in my mouth and did the same thing to it. \"That's really good  Nikki now let me feel your mouth on my cock.\" \n\nI let his ball slip out of my mouth and ran my tongue up his  shaft. When I reached the head I flicked at the cleft of the head with  my tongue, Jim moaned at this. Then I slid my tongue down the side  and up the other side. I did this twice more then I took the head of  his dick into my mouth and sucked hard. \n\n\"Oh yea that's it Nikki suck my cock.\" He moaned \n\nMy mouth slid down his cock taking in as much man meat as I could  till it hit my throat. I slid my mouth up and down those five inches  till I got use to his size again then I took him into my throat. Once  more I felt that sudden panic when my body realizes that I can't  breath, but it past quickly as I took in more of his hard fat cock. \n\n\"Oh fuck Nikki you are one fantastic cock sucker.\" He told me as  I pulled my mouth back up his cock. \n\nThe pride I felt when he said this spurred me on to try harder.  My mouth flew up and down his cock and I took it all in every time I  went down on it. Jim was moaning constantly as I kept the pressure on  his shaft with my lips. My mind was in a fog as I though of nothing  except that cock and how it felt having him tell how good I was. \n\nI felt his cock twitch in my mouth and he said. \"I'm going to cum  Nikki. I'm going to cum in your mouth.\" \n\nThat got my attention quickly. As I would love nothing more then  to taste his sweet creamy cum once more. I knew that Josie told me I  could only let him cum in my pussy. No matter how much I wanted Jim to  cum in my mouth I would not disobey Josie. I pulled my mouth off his  slick shaft sucking as I went. When I pulled my mouth clear of his cock  Jim groaned in frustration. \n\nI crawled up his body kissed his lips and said. \"I want you to cum  inside me, but I was hopping you would put it some where different this  time.\"\n\nJim groaned deeply as his arms wrapped around me. He pulled me to  him in a tight embrace. An instant later I was on my back with Jim  lying on top of me. His mouth touched every inch of exposed skin he  could find as if he wanted to devour me. He even nibbled at my satin  covered skin as he moved on down to settle between my legs. \n\nWhen he was between my legs he raised my legs doubling me over  in two. My knees were pressed against my chest and my red five-inch  heels were just above my head. Jim went after my ass like a man  possessed. He attacked my ass like his life depended on it. \n\nHis tongue shot up my crack, only to be stopped from entering me  by the thong of my panties. When he pull the thong out of the way he  did it with such force I thought he was going to ripe my panties right  off me. But the silk material held together as he moved it out of the  way. \n\nIn a flash his tongue was up inside me wiggling around, God that  felt wonderful. Where Josie does it soft and tenderly, Jim's tongue  drilled into me like he was searching for oil. I would never want to  make a choice on which I would prefer. \n\nWhen his tongue grew tired he would lick and suck on the tip of  my cock that stuck out from between my tightly closed leg, as if it was  a clit. Jim switched from my cock to my asshole so often I was  wondering if he would every put his meat in me.\n\nHaving had enough I cried out, \"Please Jim honey, Please fuck me.  Come on honey put that big fat cock in me! \n\n\"All you had to do is ask baby,\" He said as he got into a  kneeling position.\n\nI watched him grab a bottle off the nightstand then I felt liquid  being dribbled on to my backside. When he slid his finger into me I  thought it was his cock till I realized that it was too small. \n\nJim finger fucked me first with one then two fingers for a minute  or two then he slid in a third followed by a forth. He finger fucked me  for a few minutes to loosen me up then I felt his cock at my hole. It  felt impossibly large, but I was determined to have him in me. \n\n\"Come on baby stop teasing me and give me your cock. Let me feel  you inside of me.\" I told him to let him know I was ready and willing. \n\n\"Let's take it slow, the last thing I want to do is hurt you.\" He  told me as I felt the head of his cock start to open my hole. \n\nJim slid his cock into me slowly, almost too slowly. Once he had  four or so inches in me he started fucking me with it. He would slide  out till just the head was left in me. Then he would slide back in  giving me all he took out plus an inch more. \n\nHow foreign this felt only a few days ago when Josie first put  that butt plug into me just after we had been married. Now, not only  did I think it wasn't strange instead I thought being filled like this  was very satisfying. \n\nJim's thrust started to pick speed and depth as he saw that I was  quite comfortable with him in me. He pulled my legs down on to his  shoulders and used my hips for some where to gripe as he started into  pound his cock into me. \n\n\"Are you okay Nikki I'm not hurting you am I?\" He asked with  concern on his face, but he still did not slow his thrusts. \n\n\"God no honey I love your cock, fuck me harder please.\" I  squealed. \n\nJim picked up the speed and was now fucking me with everything he  had. I felt his hips crash into my ass on each stroke. I was even  pushing back to meet his thrust to try and get more cock into me. \n\nI did noticed when I tilled my bottom a certain way I would feel  sparks of pleasure all over me. I tried to maintain that position but  it was difficult as he pushed on my hips when he pulled out. When he  pushed into me I would tilt my ass and Jim's cock would rub me just  right till he was all the way in. Each time that spot was rubbed I felt  like I was being hit with a jolt of electricity. \n\nThe more I tried to tilt my bottom to feel that wonderful feeling  the stronger it seem to hit me. Each time Jim would push in I would  moan or squeal with delight. Each time he pulled out, my hole would  clamp down on his cock to hold him in me. \n\nBy this time poor Jim was soaked in sweat and he was gasping for  breath. His face looked like he was in pain as he tried to concentrate  on holding his orgasm at bay. \n\nI was worried that I wouldn't or couldn't hold my orgasm as Josie  wanted. I had been so close so often, but each time that wonderful  feeling would once more engulf me, my normal orgasm would subside. If  these really were internal orgasm I hoped I would never stop having  them. \n\n\"That's it Nikki I going to cum I sorry I can't stop it any  longer. Jim shouted to me. \n\n\"Do it, cum in me let me feel you cock flood my insides.\" I told  him.\n\n\"Here I go baby arrgh fuck.\" He shouted and instantly I felt his  cock swell larger and then a burning feeling filled my whole rectum. \n\nThis triggered my own orgasm as wave after wave of orgasmic bliss  engulfed me. It was such an amazing feeling that I squealed like a girl  and my whole body seem to convulse in almost a seizure. \n\nJim was still trying to drive his spurting cock in and out of me,  but you could see that his orgasm had sapped his energy. I dropped my  legs to his side and reached up and pulled him down on to me. We lay  there panting for breath as our hearts returned to normal.\n\nI lay under Jim, his cock still in my ass thinking that I had  just experienced something wonderful when it hit me. I had done the one  thing that Josie said I couldn't do, I had cum against her wishes. My  eyes were instantly filled with tears, Not because I fear her scorn but  because I feared she would be displeased with me. \n\nJim noticed my tears and asked. \"What's wrong did I hurt you?\" \n\n\"No you were wonderful it's what I did.\" I told him and the tears  came harder.\" \n\n\"What did you do? You were great. You were the best she-male I  ever fucked.\" His word filled me with pride but it didn't stop the  tears. \n\n\"Josie told me I couldn't cum, I had to save it for her. Now she  going to be displeased with me because I couldn't control myself.\" \n\n\"She told you, you couldn't cum at all?\" He asked \n\n\"She said I couldn't cum the way I normally would do it, You  know, though my clit.\" Jim knelt up and looked between us and said \n\n\"Sweetheart you didn't cum that way.\" \n\n\"Are you sure I felt like I did.\" I asked \n\n\"Your clit has been cover by you panties the whole time. If you  came that way you panties would be soaked. They're not exactly dry but  there is no cum in them.\" The relief I felt was unbelievable I almost  jumped for joy. Jim took me in his arms and turned over so I was now  lying on top of him. We lay there and cuddled for a few minutes. Jim's  cock was still in me, but he was slowly coming out. I tried my best to  keep him in me but it was a losing battle. \n\n\"Why don't you turn around so I can clean you.\" He told me \n\n\"Can't I just leave it in there, It feels so good.\" I asked with  a pout \n\n\"I don't think so. I think Jill will want it back.\" He said with  a laugh. \n\nI knew he was right so I sat up and his cock slipped out of me. I  could feel a glob of cum trying to slip out so I held my hole as tight  as I could and quickly turned around and lowered my ass onto Jim face.  I felt his mouth seal itself to my hole and his tongue shot up in side  me. This caused me to relax my sphincter and allow his cum to drain  from me. At that point I think I knew why Josie like to have me clean  her out. It's amazing how much power you can feel by that simple act. \n\nWhile Jim was cleaning me I leaned over and started to clean his  cum covered cock. First I cleaned around his cock then sucked his  flaccid member into my mouth and sucked off all the yummy cum I could  find. His cum tasted as good as it did two days ago with the exception  of the slight taste of the lubricant he had used. \n\nI was amazed and delighted as his cock started to swell in my  mouth. The more I sucked the harder his cock became. The harder he  became the harder he worked at cleaning my hole. It wasn't long till  his cock was as hard as it had been before he fucked me. I was soon  deep throating him and he was moaning into my ass. I knew I couldn't  bring him off again but I didn't want to stop just yet. Till I heard  Jill say. \n\n\"I think he's as clean as he's going to get. Would you please  leave some for me.\" I pulled my mouth off his cock and smiled. I knew I  should have, but I could help myself \n\n\"I was just getting him primed for you.\" I told her to cover  myself. \n\n\"You're not a very good liar. I'll take over from here.\" She told  me she tried to act mad, but there was no malice in her voice. \n\nJill was stranding in the door way with Josie right next to her.  The look on Josie's face was unreadable. There was no smile or even a  grin. There was no indication if she was pleased with me or upset. Her  eyes seem not to focus on anything in particular. ",
        "I didn't know what to do or say. I got off Jim face and knelt on  the bed with my eyes lowered to the bed. Jim saw that Jill and Josie  were now in the room. He sat up and look at his wife.\n\nJill held out her hand and said, \"Come on stud I think its time  for you to remember who you're married too.\" Jim rose from the bed took  Jill's hand and they both left the room with out another word. \n\nI looked over to Josie, she still stood to the side of the  doorway where she was standing when I first realized the she and Jill  were there. I didn't know what else to do so I started to tell her I  was sorry, for what I didn't know. I had done only what she wanted me  to do.  \n\nJosie came over to me and put her hand on my mouth to stop me  from speaking. With a push on my shoulders I was forced on to my back.  Josie then reached down and pulled my panties down and flipped my cock  out from between my legs. Once my cock was free Josie straddled my legs  and sat down on my cock. \n\nHer pussy was wetter then I had ever felt it before. The heat  that radiated inside her was hotter then I ever felt. When Josie  bottomed out on me I saw her shutter and a gush of fluid came out of  her. Her sigh was the first sound she had uttered since coming into the  room.  \n\nJosie started to ride up and down on my cock as her pussy  squeezed me in a very tight grip. Her eyes took on a vacant look as if  she was thinking about something else or being somewhere else. \n\nShe rode me as if she was on autopilot. Her hips moved up and  down at a frantic pace. Her pussy squeezed and released my cock rapidly  as if trying to milk me. She would shutter and a gush of fluid would  drain out of her as she came several times. \n\nI just lay there, letting her do as she wished. I was afraid to  speak I was also afraid to touch her. I just lay there relishing in the  feel of what her pussy was doing to my cock. I can't say I wasn't  enjoying what we were doing. I was maybe enjoying it too much. I always  enjoyed when she used me for her pleasure, but now it was like I wasn't  even there like I was a dildo for her to get off on.  \n\nJosie kept this up for a long time as she came almost  continuously. When I thought I couldn't hold out much longer Josie  reached down and took my nipple rings in her hands and said \"Cum for  me. Cum now.\" \n\nShe pulled my rings out from my body. A flash of excruciating  pain started at my nipples and moved down to my cock. The pain mixed  with the pleasure of cuming made this one of my most memorable orgasm.  My cock pumped load after hot load of cum deep into Josie's pussy. She  in turned squealed with her own orgasm as her pussy clamped down on my  cock milking every last drop of cum from my balls. Then she collapsed  on top of me and immediately passed out.\n\nI lay there with my heart racing a mile a minute, my brain going  just as fast. My mind when over the things I had done that day. I knew  that most of it was orchestrated by my Josie. The sex on the deck  before dinner was to get me horny so I would be more agreeable to have  sex with Jim. Not that I needed much encouragement on that subject. \n\nI've learned that have my ass hole filled by a cock or a dildo  was something I loved. I had to thank Josie for that. If it wasn't for  Josie I wouldn't have known how great it feels to be fucked. If it  weren't for Josie I wouldn't have known that a lot of things that I  once thought as painful or degrading would give me so much pleasure.  And things that I thought were disgusting like licking her pussy after  I had cum inside her, now was a loving experience. \n\nMy cock was slowly starting to soften. I knew that when it did  the cum I had deposited into Josie would pour out and leave a puddle on  the bed. I knew she would not chastise me for letting it leak out of  her seeing she was already asleep, but I knew I would feel guilty for  allowing it to happen. So I rolled over taking Josie with me. When I  had her head on a pillow I eased my cock out of her and quickly got  down between her lovely thighs.\n\nI got there just as the first glob of cum appeared. I quickly  licked that up so it didn't oozed down between her butt cheeks. When I  stuck my tongue into her hole it was coated with thick warm cum. I  sucked hard and was rewarded with a thick rich flow of cum and Josie's  pussy juice. I heard Josie moan in her sleep at this, so I sucked in  some more. \n\nWhen the flow had slowed to a trickle I busied myself by licking  her clit and down to her ass hole. This caused Josie to squeeze her  cunt so as to push out more cum. I thought this was done while she  slept, till I heard her say.\n\n\"Would you like it if I turned over and sit on your face?\" \n\n\"Sorry I didn't mean to wake you. I didn't want you to have to  sleep in a puddle tonight. I know how you dislike that.\" \n\n\"Your such a wonderful considerate lover.\" She told me as she  rolled over and sat on my face. \n\nWhat had not already leaked out of her now came out in a flood.  I had a hell of a time keeping up with the flow as it poured out of her  and into my mouth. At first I just sealed my lips to her pussy and  swallowed every time my mouth was filled. When it slowed I sucked and  shoved my tongue up inside her to coax more. When no more came out  Josie rolled over and lay down on the bed then patted the bed next to  her for me to join her. \n\n\"Did you like what you did with Jim?\" Josie asked once I was  lying along side her.\n\n\"It was great. Thank you for letting me do that.\" I told her. \n\n\"Your not just saying that because you think that's want I to  hear it?\" She asked \n\n\"No I loved it. If it's okay with you I'd like to do it again.\" \n\n\"Of cause I let you do it again. Seeing how much you enjoyed it I  hope you don't turn gay on me and leave me for some stud like Jim.\" She  told me, and then she laughed letting me know she was joking.  \"Truthfully you looked so beautiful while you and Jim were fucking. I  came twice while watching it. When you cried when you thought you came  after I told you not too. That broke my heart. I wanted to come and  tell you it was all right, but Jill stopped me telling me you didn't  cum.\" \n\n\"You watched us? How, did you watch us from the door?\" I asked  dumfounded \n\nJosie laughed and said \"No silly I watched you from Jill's room.\" \n\n\"How could you?\" I asked. I was upset that she watched me in such  an intimate and wanton moment. \n\n\"How could I not. You know how much I love watching two men  having sex together. You know how much it turns me on. I've dreamed of  watch you with another man, for the first time since the night you  proposed to me. How could you expect me not to watch? At least I wasn't  sitting here watching you. I didn't tell you I was watching so you  could be at ease and enjoy it too.\" Josie told me and I could see she  was upset that I had questioned her. \n\nI realized that I was being an ass about this whole thing. Of  cause she would want to watch me. \"I'm sorry I questioned you, it was a  knee jerk response. Did you really enjoy watching me make love to  another man? \n\n\"I enjoyed watching my husband dressed as a beautiful women  having sex with a handsome man. I hope you didn't make love with him.\"  Josie asked \n\n\"Well isn't it the same thing?\" I asked naively\n\n\"No my love its not. Just because two people have sex together  doesn't mean there making love. Do you love Jim? Was that why you had  sex with him or did you have sex because you were turned on by him?\" \n\n\"I was turned on by the thought of have sex with a man for the  first time. I loved what we did together, but I'm not in love with  him.\" I told her truthfully. \n\n\"You also have to remember that, though I love you very, very  much, every time we have sex doesn't mean were making love together.  What we just did wasn't making love it was just pure sex. What we did  on deck that again was sex. What we did last night in the bedroom and  by the pool that was making love. What we did on our wedding night, to  me at least was making love. And the next night I hoped was making  love, it was to me and I know I felt love coming from you.\" \n\n\"I was making love to you that night and I felt your love on our  wedding night. It felt stronger then any other time we made love.\" I  told her   \"I never loved you as much as I did that night.\" She told me \n\n\"Now tell me how did you watch Jim and I from Jill's room?\" I  asked \n\n\"It was very simple. It was the same way I watched you two in the  galley. You were quite the tease in there. I don't know how Jim  controlled himself.\" Josie told me as she reached for a remote control  that was on the nightstand.\n\nJosie pushed the power button on the remote and a panel opened on  the ceiling. When the panel was open a plasma screen monitor unfolded  from the compartment. When the screen came on I saw Josie and I lying  on the bed. She pushed another button and the scene on the TV switched  to a different view of the bed. \n\nShe showed me three other views before she switched to the  galley. After that she showed me there were cameras on the main deck in  the salon as well as each of the other bedrooms. When she switched to  the bedroom that Jill and Jim were in we saw Jill was sitting on Jim's  face. Jill was grinding feverishly on to Jim's mouth. \n\nJosie turned off the TV and said, \"I normally don't use this to  watch other people having sex unless they tell me I can. Also when I  want to see something special like what you did tonight with Jim.\" \n\n\"Did you like watching Jim and I?\" I asked. I was sure she did  but I had to hear her say it. \n\n\"You two were wonderful, better than any porn movie I ever saw.  In fact I'm going to download the tape to my laptop and make it into a  DVD so I can keep it forever. Any time I get horny and you're not  around I'm going to watch it.\" \n\nJosie and I took separate showers then went to sleep. The next  morning we went diving for a few hours before lying out on the main  deck to sun ourselves. Each day was the same, we would dive and sun  ourselves then move the boat to another island. Each night we would  make love before going to sleep.\n\nPoor Jim paid dearly for his night of pleasure with me. Jill kept  him constantly aroused for the next four day's. She would make him give  oral sex to each of us every day. On the fourth day she had him suck  each of us off then she allowed me to fuck him in the ass before taking  him into the bedroom where she fucked him till he couldn't hold back  any longer. When he did finally cum you could hear him all over the  boat. \n\n Please continue to the next part "
    ],
    "authorname": "Scribler",
    "tags": [
        "jim arms",
        "night josie",
        "till realized",
        "bedroom jill",
        "josie reached",
        "josie held",
        "stop cuming",
        "cum save",
        "heels wear",
        "coffee jim"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/becoming-her-wife-ch-09"
}