{
    "title": "Male Sorting",
    "pages": [
        "In college I earned free room and board by working the front desk of my dorm. It was an easy job that consisted of answering the phone, buzzing in visitors, and using the master key when residents got locked out of their rooms. Since I usually worked the afternoon shift, I also sorted the mail. Mostly I just occupied myself by reading for class.\n\nThe dorm was a high-rise with eight floors and about 400 residents. A lot of people moved off campus after their freshman year, but I decided to stay. The opportunity to live for free was a big part of it, but I also liked the dorm's location and amenities, which included an attached cafeteria, a fitness center and weight room, and even a swimming pool. For an extra fee single rooms were available - a freebie for Resident Advisers and desk staff.\n\nBut what I liked most of all were the residents. The building was loaded with hot guys. ROTC cadets were required to live there. They were hot and fit and looked great in their uniforms. The wrestling team also had to live there since it was close to their practice facility and because their coach feared the distractions of off-campus apartments. Those guys, no matter what weight class, were total studs. Another big constituency was fraternity guys. The dorm was pretty much surrounded by frat houses, few of which had enough rooms for all the brothers, so we were the next best option. Add it all up, and the dorm was about two-thirds male. There was never any shortage of eye candy.\n\nWhile I could look, I couldn't really touch. It was the early '90s. I wasn't \"out.\" Being gay seemed to guarantee pariah status. For the most part I played it straight.\n\nMy only real release was porn, and before the internet, you had to acquire porn the old fashioned way. Every once in a while I'd summon the courage to go to the video store the next town over. They had an adult section that included some gay videos, so when I was really horny I'd rent a couple of movies and bring them back to my single room. Only once did I go to the local newsstand. I grabbed copies of Playgirl as well as gay magazines such as Inches and Mandate. When the old dude behind the counter handed me my change, he said \"Have a fairy nice day.\" I was mortified.\n\nThat didn't stop me from enjoying the magazines back in my room, edging myself toward an epic orgasm as I paged through the photos and read the erotic stories. I came into my cupped hand and then sampled my cum. I had to admit, I really liked the taste and texture. Even the distinctive smell of it-just a little bit like bleach-turned me on. \n\nWhile I lacked the guts to subscribe to Playgirl or (better yet) Inches, Mandate, Honcho, or Freshmen, the fact that I frequently ended up sorting my dorm's mail gave me the confidence to settle on a middle course. I signed up to receive the International Male and Undergear catalogs and I subscribed to a fitness magazine called \"Exercise: For Men Only.\" All three had photos of hot, nearly-nude guys, and not a single one of the three was explicitly gay. (I have to say that over time it dawned on me that all were at least implicitly aimed at gay guys. Not many straight guys wore the sort of revealing underwear for sale in those catalogs-and none of them would want to see what it revealed about the muscular, well-endowed models. I'm pretty sure even the exercise magazine was targeted at gay dudes. The emphasis was less on the exercises and more on the photos of shirtless guys exercising. All these studs were really ripped and also really attractive.) The fact that these publications weren't overtly gay, plus the fact that I nearly always sorted the mail and deposited it in the residents' mailboxes, gave me the confidence to subscribe. I'd have no problem flying under the radar.\n\nOr so I thought. \n\nOne September afternoon during my sophomore year, the mailman arrived really late-about 15 minutes before the end of my afternoon shift. I knew that my Undergear and International Male catalogs were set to arrive any day, so I started digging through the bag of mail, starting first with magazines and catalogs, which I quickly inserted into the dorm's residents' mailboxes. When finally I found my International Male catalog, I checked to see that no one was looking and stuffed it into my backpack. Glancing at the clock, I started to claw through the bag of mail looking for my copy of Undergear. My shift would be up soon! Just as I grabbed it and spun around to reach for my backpack, I saw Rich Spangler, the guy scheduled for the next shift, getting settled at the front desk. I saw his eyes dart down to the cover of my catalog, then glance back up to meet my startled stare. As I stuffed the R-rated semi-porn into my bag, he smiled. \"Looks like your relief has arrived,\" he said.\n\nThere were two possible ways to interpret his comment. Given the situation, it made sense to presume innocence. There was approximately zero percent chance that Rich-one of the hottest studs residing in the dorm-would know anything about the hot dudes in the International Male catalog and the relief they'd bring to my raging hard-on. There was no way he even knew that the catalog contained photos of hot, shirtless guys in underwear, swimsuits, and jock straps. And there was absolutely no way that he was also into guys. Not Rich.\n\nHe was a senior, two years older than me. His was tall, with a tight, muscular body. His pecs and shoulders were broad and well-defined. He was all-man. A future Army officer, he was ROTC. A Kappa Sig brother, he always struck me as a good old boy. The strong but silent type. He hunted. He fished. He drove a beat-up F-150. The back pocket of his jeans had a faded circle revealing the customary location of his Copenhagen can. (And yes, I liked to stare at his tight ass!) It's true he had a sensitive side. He was a journalism major, a writer for the college paper. But he had southern manners and a southern drawl (\"yes, ma'am\") and a crew cut to match. We had to wear dress shirts and ties while on shift, but instead of the all-cotton Oxfords and silk ties I preferred he always showed up wearing polyester ties and 60/40 short sleeve white \"dress\" shirts that highlighted not only his hairy, muscular forearms but also, given the almost translucent quality of the thin shirt fabric, the sleeveless, ribbed wifebeater shirts he always wore underneath. No matter the time of day he always seemed to have a five o'clock shadow, and I'd seen him often enough in unbuttoned polo shirts to notice that he also had a hairy chest. His hair was dirty blond, maybe a little bit on the reddish side. His chest hair was more brownish, however: a shade or two darker than the hair on his head. It looked so sexy swirling up over his collar bones, lush and thick as it reached toward his adam's apple.\n\nHe stared back at me as I absentmindedly stared at him, suddenly self-conscious that my cock, inspired by him as well as the catalogs, was throbbing in my khakis.\n\nI could feel the sweat gathering on my forehead. Meanwhile, he seemed cool and collected. He smirked and raised his left eyebrow. I smiled back, thanked him for taking over, and hurried off to my room.\n\nAs soon as I locked the door behind me, I got down to business. With one hand I unbuckled and unzipped while the other reached into my backpack. I pulled out the Undergear catalog. Damn, the guys were hot. I flipped through, admiring the models' bulges and asses and abs and pits and pecs. Each guy was attractive in his own special way. Each guy was a fantasy fulfilled. As I reached the end I zeroed in on the photo of a guy in a plain, white jockstrap. He had arms raised up, flexing his muscles. He was very hot, but in an unassuming, dude-next-door sort of way. He had hair fanning over his pecs and a light treasure trail descending toward the waistband that supported his jock's overstuffed pouch. He was perfect. He was my focus. He was going to make me cum.\n\nMy hips thrust forward, fucking a spit-lubed fist made almost blurry by its frantic jacking. I felt my balls tighten. I felt my nipples harden. My cock, leaking precum, throbbed at full stiffness. I felt myself cresting the wave, convulsing as maximum tension crossed into peak release. My dick contracted once, then twice, then again. I was spewing cum all over the place. Streams of semen landed on the floor, on the edge of my desk, on my chest, and on the last page of the catalog. I paused for a second, catching my breath. I reached for a tissue and did my best to wipe my spooge from the catalog. I then flipped to the back cover.\n\nMy eyes focused on the address label, where I expected to see my name. I didn't. Instead I saw another name. I didn't believe it at first, so I read it a second time. There it was, plain as day and in all caps: RICHARD SPANGLER.\n\nIt took me a moment, but then the thought sank in. Rich also received the Undergear catalog. I had grabbed his copy by mistake-a fact he almost certainly understood since, by now, he had finished sorting the mail.\n\nAt that moment my brain sped up. All sorts of thoughts and questions flashed through my head. \n\nIf Rich was on the Undergear mailing list, it proved that not everyone who received the catalog was gay. And since he wasn't gay, Rich wouldn't suspect that I was. But what if he was? What if Rich were gay? Was it even possible? Or what if he wasn't but also understood that Undergear had a predominantly gay clientele? Would he figure me out? Would he tell anyone? Would he tell everyone?\n\nIt occurred to me to wonder about my International Male catalog. I reached into my backpack and pulled it out, examining the address label. Sure enough, it was addressed to Rich. I got a sinking feeling in my stomach as it dawned on me that he'd discover that I received not one but both of these catalogs featuring shirtless dudes and their bulges. But then it hit me that I knew the same about him. Did he really subscribe just to buy the sorts of clothes these catalogs sold? I couldn't be sure, but, other than his ROTC uniforms, I'd never seen him in anything but stuff that looked like it had been purchased at Walmart and J.C. Penny.\n\nThen my thoughts turned to a more pressing question: What to do? I had seen his eyes focus on the cover of Undergear as I stuffed it into my backpack. Rich knew I took his copies of the catalogs because, when putting out the mail, he must have discovered that I hadn't taken my copies. It occurred to me that I should probably wait and see what his next move would be. Since they were identical anyway, maybe he'd just grab my catalogs for himself and not say another word. But what if he put the copies addressed to me in my mailbox? What then? Would I have to give back the copies addressed to him? I felt relieved when I realized that it would be easy enough to do this. Next time I worked the desk, I could just slide the catalogs addressed to him into his mailbox. The feeling of relief vanished, however, when I remembered how some of my cum had landed on the catalog. I reached down for his copy of Undergear and picked it up. The last two pages were stuck together. How would I ever explain that?\n\nNot wanting to miss dinner, I summoned the courage to pass the front desk on my way to the cafeteria. Much to my relief, Rich was busy talking to two sorority girls. I felt a weird pang of jealousy. They were obviously flirting with him.\n\nAs I turned the corner to head toward the cafeteria, I decided to check my mail. I opened the combination lock to my mail box, which contained nothing but my phone bill. He must have just taken my copies of International Male and Undergear. In the cafeteria I sat down with some friends from my floor, ate a burger, and finally felt relaxed. It was one of those long dinners with lots of laughs and a conversation that just kept going. The cafeteria workers were flipping chairs onto tables by the time we left. As I passed the reception desk I glanced over my shoulder. Rich wasn't there. His shift had ended. Instead, behind the desk sat Michelle, who had replaced him. \n\nI took the elevator up to my floor. When I opened my door I looked down to see a manilla file folder that someone had slid through the crack. I picked it up and discovered it contained my copies of International Male and Undergear, which had a Post-It note on the cover: \"These are yours, so I guess you have mine? Bring them by my room. I'll be up late! - Rich\"\n\nSometimes, when I'm in a stressful situation, my mind just flips a switch and I go into autopilot. In hindsight, I should have realized that he viewed these catalogs as best kept on the down-low. Why else place them in a file folder? But I didn't think about it: I just took out the catalogs addressed to me and replaced them in the file folder with the ones addressed to him. I walked to the end of my hallway and took the stairs one flight down to his room. I knocked on his door. \n\nHe opened it.\n\nHe smiled when he saw me. I smiled back.\n\n\"Come in,\" he said. \n\nI quickly sized up his room. His fraternity pledge paddle hung from the wall at the head of his bed. Over his desk was a poster featuring military helicopters. Overall it looked like Rich kept things pretty basic. The room was more neat than clean. It wasn't musty but just a little bit musky. His closet door was open, displaying his pressed ROTC dress uniforms and camouflage fatigues. Beneath them was a laundry basket nearly overflowing with clothes. My nostrils took in the very faint but very attractive scent of his sweat-soaked gym gear. His room smelled like a hot ROTC fraternity jock lived there, and indeed one did.\n\nI directed my gaze at Rich. Damn, what a stud. Gone were the tie and short-sleeve dress shirt he had on before. He'd also changed out of his khakis. He stood before me, smiling in his Army PT shorts and wifebeater undershirt. He was both more hairy and more muscular than I'd imagined. The ribbed cotton on his sleeveless shirt literally clung to his pronounced pecs, accentuating his wide lats and narrow waistline. The deep scoop exposed his thick tangle of chest hair, which thinned and softened as it reached up to cascade over the muscles of his boulder shoulders. \n\nA lot of guys aren't into body hair, but I'm not one of them. Rich, in my eyes, was masculine perfection. I noticed the dense reddish-brown stubble sprouting from his square jaw. I admired how the cleft of his chin pointed down toward his adam's apple and thick neck, bristling with stubble and chorded with muscles. I could see the damp, dark hair of his armpits peeking out between his muscular shoulders and pecs. \n\nMy eyes darted down below his waistline to the slightly tented front of his nylon shorts. I didn't allow my attention to linger on the big, broad head of his cock, clearly visible through the sheer fabric. Instead, I kept glancing lower, marveling at the thickness of his thighs and how all their muscles seemed to come together at his knees. His calves were long and strong and, like his upper legs, covered with a soft golden fuzz perfectly silhouetted by the bright light of the lamp on his desk. \n\nThen there were his feet. They were huge. They seemed much too big for his six-foot frame, and while some guys had pretty feet it was pretty clear that his, instead, were utilitarian. They were muscular - ripped, even - with big veins traversing across their tops and light tufts of hair punctuating the knuckles of his toes. I'm not sure that anyone would hire him to model flip flops, but his feet were perfect for military ruck marches.\n\nIt occurred to me that Rich was just about my physical opposite. He was big and hairy, handsome and masculine. At 5' 9\" and 140 lbs. I was shorter and less substantial. My chest was hairless. My features were delicate. The word girls always used to describe me was \"cute.\" \n\nI looked up as he cleared his throat. He patted his mattress as he sat on his bed. \"Have a seat,\" he said.\n\nI sat down next to him. I could just barely feel the heat of his body. He was only about two feet away.\n\n\"So,\" he said, \"you have the catalogs.\"\n\nHe gestured toward the file folder I'd been clutching in my hand. I passed it to him, worried that he'd see the growing erection it had been concealing.\n\nHe started to slowly turn the pages. \"You ever buy anything from here?\" he asked.\n\n\"No,\" I admitted, \"not yet.\" Then I turned the question back at him: \"Have you?\"\n\nHe laughed. \"Hell,\" he said, \"I don't even wear underwear unless I absolutely have to.\"\n\nThat was a hot little fact worth tucking away in my brain. It also explained why I had been able to see so clearly the head of his cock beneath his shorts. But it also begged a question.\n\n\"So why do you get these catalogs?\" I asked. \n\nHe didn't flinch or hem and haw. \"I like looking at the guys in the photos,\" he admitted. Then he clarified, sort of. \"They're, um, inspiring.\"\n\nMaybe he was saying that the models were inspiring because they inspired him to work out and further develop his body. Then again, when he said \"inspiring\" he sort of changed the tone of his voice, as if to put quotes around the word to signify that the guys inspired him to do something else - like beat off.\n\nI decided to have some fun with the conversation. \"Which guy's body inspires you the most?\"\n\nHe thoughtfully flipped through the pages, stopping at a photo of a cute guy in bikini briefs. \"I'll go with him,\" Rich said, pointing. \"He's blond, good body but not overly muscled, long legs, swimmer's build. He reminds me a little bit of you.\"\n\nI could feel myself blush. \"Thanks,\" I said.\n\nThen Rich asked: \"Which guy inspires you the most?\"\n\nI paused for a second, then decided to go for broke. \"Actually,\" I said, \"the guy on the inside back cover inspired me a bit too much.\"\n\nRich flipped to the back of the catalog, discovering the pages that had been stuck together. This caused him to smile broadly as he carefully, almost playfully peeled apart the pages to reveal the photo that had caused me to cum. It was the one of the hairy guy flexing his muscles and wearing a jockstrap.\n\nI turned my head to face Rich. \"He kind of reminds me of you.\"\n\nHe looked up, smiling, and stared into my eyes for a long second. He exhaled, reaching behind me to place his big hand on the back of my head. He pulled me gently toward him while he leaned in and kissed me.\n\nI froze. I didn't flinch and thank God I didn't pull away. But for a moment I was unmoving, stunned that this was happening. I couldn't believe that this hot stud - RICH SPANGLER, the ROTC frat boy and long-time object of my desire - was kissing me!\n\nBut he was. His lips were pressing and puckering against my own. His big hand, groping my scalp, urged me toward his mouth. I could smell his breath and feel the heat of his face so close to my skin. I could feel his whiskers bristling against my cheeks and chin. Everything was positively electric.\n\nSuddenly I started to respond. I started to kiss him back. It wasn't a decision so much as an involuntary reflex. It was just so natural, so primal, so necessary. I needed this. I needed him.\n\nRich grew more aggressive. His lips parted and he extended his tongue. I opened my mouth, welcoming him inside me, pressing my tongue against his, holding contact, then letting his tongue slide against mine to disengage only briefly before reconnecting. I pressed my tongue forward, passing through my lips and then his to enter his mouth. We established a sort of rhythm: His tongue in my mouth, then my tongue in his. Always, though, our tongues were touching, swirling and pressing and sliding. Meanwhile, Rich and I were practically panting.\n\nI felt my cock surging upward to full erection inside my shorts. I grabbed the back of his head and let my fingers caress his bristly dark blond crew cut. I extended my other hand to grab the back of his wide, muscular neck. Everything about him was warm, big, and thick.",
        "And then I reached downward, allowing my fingertips to linger in his chest hair before tracing down the ribbed cotton of his wifebeater as I made my way toward his crotch. I tentatively touched his dick. He broke contact with my lips, sighing into my ear as I felt his cock through the nylon of his Army PT shorts. Talk about warm and big and thick. I could feel it throbbing and twitching. The thing felt huge.\n\nRich started kissing my neck. Soon he was sucking on it, breaking contact only to nibble my ears. His hand reciprocated the movements of my own and went one step further. He reached up the leg of my shorts and into my boxers. He encircled my dick and gently caressed the head, which by this point was leaking a steady stream of pre-cum. Pulling on my shaft, he coaxed some onto the palm of his hand, which he withdrew from my shorts and raised toward his lips. He licked the small puddle and smiled. \"Tastes amazing,\" he drawled. \"Sweet on the outside AND the inside.\"\n\nI reached beneath his arms to pull him in for a hug, thanking him for his compliment with a kiss. He was right. I could taste subtle traces of my sweetness on his tongue. I raked my hands over his broad back. I could feel his muscles, especially his powerful lats, through the textured fabric of his tank top. \n\nMeanwhile, Rich's long fingers walked down my back, pressing, one after another, as they descended toward the bottom of my t-shirt. The mini-massage ended as his palms slid underneath the fabric, sweeping up my back while simultaneously pushing my shirt up and over and then off my torso. I raised my arms as he popped it over my head. He grabbed my biceps to keep them aloft, my forearms still trapped within the bunched-up cotton of my t-shirt. \n\nHe kissed me intensely and then surprised me by pressing his face into my left armpit. I felt him inhale deeply and then start to kiss and lick the small tuft of hair. Then he moved to my right pit. It tickled a little, but mostly it turned me on. It felt good, in fact, but there was something more. As he moved to my nipples, sucking them, circling and flicking his tongue, and then taking the hardened points between his teeth, biting and pulling ever so gently, I felt overwhelmed by the knowledge that Rich was INTO me! He wanted me. He was craving my body. And he had the confidence not to censor his passion. He followed his desires. He didn't hold back.\n\nSo I wouldn't, either. I knew what I wanted. I had denied it to myself for far too long. I wasn't going to wait any longer.\n\nI pulled his face from my nipple, stared for a moment into his hazel eyes, kissed him deeply, and then pushed him back on the bed.\n\nI scooted down between his legs. He lifted his hips as I hooked my fingers around the waistband of his Army gym shorts. \n\nI savored the moment so deeply that, in hindsight, I can see it all unfolding in slow motion. With his tank top pushed up above his navel, I admired the thick trail of brownish hair that divided his well-defined abdominal muscles and pointed toward the waistband of his tented shorts. I let my hand skim over the fabric concealing his erection and closed my first around his shaft. I slowly jacked up and down and then up again. I released his dick so that I could grab the top of his shorts. With his hips raised it wasn't difficult to work them down, but nonetheless I did so in stages. \n\nAt first I just pulled the waistband downward; I didn't lift it. I didn't want to release his cock - not yet. Instead, I wanted tease him a bit - and also I wanted to allow myself to focus on his pubes. As I've mentioned, I'm a fan of body hair, and Rich didn't disappoint either above or below the waist. His happy trail flowed uninterrupted below his belt line, where the hair fanned out into thatch that was thick, dense, and lush. If he trimmed his pubes it had been several weeks. I pressed my nose into the softness of his bush. Just slightly damp with sweat, when I breathed in through my nostrils I'm not sure how to describe his scent. Rich smelled musky, but good. Manly. His pheromones sent my cock into overdrive. I was throbbing and leaking into my shorts, hovering over the abyss of orgasm even though I wasn't touching myself or being touched.\n\nI lowered his shorts another inch, revealing just the broad base of his shaft. I noted the thick vein as I worked his shorts even lower. This exposed a good four or five inches of his dick, straining the fabric that kept it pressed down between his thighs. Slowly, I pulled the nylon away from his body. \n\nI'm not sure if Rich noticed, but for a long second my hands were trembling. It's not that I was nervous. It's that I was excited. I recognized the momentousness of what was happening. For the first time in my life, I was going to fulfill a longstanding fantasy - and I was going to get to do it with Rich, just about the hottest guy in the dorm. I was going to suck his cock. \n\nSuddenly, his hard dick escaped his shorts, springing upwards and backwards to smack into his pubes with a barely-audible \"thump.\"\n\nAt first, all I could do was stare. I felt excited but also reverent. It wasn't some random cock; instead, it was Rich's. And it wasn't just Rich's; it was even more perfect than I would have imagined. It was not only long but also thick. I didn't know for sure at the time, but later I'd measure it to be about an inch longer than a dollar bill, which is 6 and a quarter inches. The shaft was also pretty wide, and the head was easily two-thirds the width of the dollar.\n\nRich cleared his throat. I looked up to see him smiling. \"Are you gonna just stare at it all day?\"\n\nI smiled back at him. \"No,\" I said, \"but I could.\"\n\nMy eyes focused on the tip of his cock, which was leaking pre-cum. I wanted to taste it.\n\nExtending my tongue, I lightly traced a path up his shaft toward the broad helmet of his cock. I lingered at the extra-sensitive spot where the shaft and head came together, just below his piss slit, first flicking and then lapping with my tongue. I wrapped my hand around his shaft and raised it upward, aiming it at my mouth. My tongue tasted the pre-cum that was my reward. I made eye contact with Rich. \"I'm not the only guy who's sweet,\" I said.\n\nI gave him a wink, licked my lips, and pulled them over my teeth.\n\nThat's when I took him into my mouth. Not his whole dick. Not at first, at least. At first, I just opened wide and stretched my lips around the wide head. I engulfed it with my mouth, allowing the flare of his helmet to define my outer limits. I gently sucked while lapping my tongue from the base of his cock head to the tip. \n\nI heard Rich sigh. I looked up to see him raise his arms to lace his fingers together behind his head. This elevated his head to give him a better view of the action. It improved my view, as well. I could now not only enjoy the blissful expression on his face but also his hairy armpits and bulging biceps.\n\nI encircled the base of his shaft with my thumb and index finger. I could feel his pulse beneath the heat of his skin. As I raked my other fingers through his pubic hair I started to slowly bob up and down while swirling my tongue in circles around the head of his dick. \"Holy shit,\" I heard Rich gasp. \"That's amazing.\"\n\nEncouraged, I went beyond his cock head, gradually descending his shaft. I knew I had to go slow. His dick was big, but I wanted it all. With less than half of him in my mouth I was already fighting off the urge to gag. I decided to change my angle of approach, using my free hand to brace myself against his mattress while raising my upper body. This cleared the path a bit, and soon I was two-thirds of the way down his shaft. \n\nIt had only been five minutes since I first had Rich in my mouth, but I had already discovered a truth that I'd never again attempt to deny: I loved sucking cock. It drove all my senses into overdrive. I could see Rich in nearly all his glory, a big, blond, hairy, muscular ROTC cadet still wearing the tight wifebeater that revealed much but teased even more. I could hear the plaintive gratitude of his sighs and soft moans. I could inhale his manly scent, I could taste the saltiness of his skin and the sweetness of his pre-cum, and I could feel on my lips and my tongue and in my throat his heat, his hardness, and his throbbing through the supple texture of his skin. I loved everything about it, and if I needed any more convincing there was the undeniability of my own leaking erection, straining against my shorts.\n\nBut there was something more. It wasn't merely physical. It was emotional. Sucking Rich's cock was just so intimate. I was opening myself to him - literally. And also he was revealing himself, exposing himself, and entrusting himself to me. He was allowing me to consume and imbibe him. And all of this was done in the service of one of the most secret and forbidden of pleasures. Yet with Rich there were no secrets and there was no shame. Never in my life had I felt more connected to someone.\n\nI decided to go for broke. I wanted all of him. My throat had gotten used to his size, and now the entirety of his shaft was dripping with my spit. I couldn't wait any longer. I plunged my face into his crotch, swallowing every inch and exalting as his slightly musky pubic hair tickled my nostrils. I was deep-throating him. Our connection was complete.\n\nI heard Rich moan as I felt a tear emerge from my eye and stream down my cheek. The eyes, nose, and throat share their own secret connections, and I had just discovered a new one. But I'm not 100 percent certain it was a purely physical reaction. The heart is connected, too, and I'll admit that I was overwhelmed with emotion.\n\nI felt his big hands grab my head. \"Stop,\" he panted, \"I want to make this last.\"\n\nAs I raised my mouth from his crotch my face came into view. He saw the tears. \"Are you okay?\" he asked. There was genuine concern in his voice.\n\n\"Yes,\" I said, gasping for air. \"Either your dick so far down your throat is making my eyes water, or they're tears of joy.\"\n\nHis smile was so big and so broad that my heart almost melted. He leaned forward and kissed me, deeply, tongue to tongue. He stood up beside the bed, kicking his shorts from his ankles. He pulled me up into a standing position, grabbed my shorts, and yanked them down. Next thing I knew he was on his knees, staring straight at my dick.\n\nHe didn't hesitate. He went for it. Against the engorged flesh of my dick I felt his lips and his mouth and his tongue and his teeth.\n\n\"Shit!\" I hissed. \"Your teeth!\" \n\nIt was an involuntary reaction. I didn't mean to complain and instantly regretted having said anything. The last thing I was feeling was ingratitude. I tried to reassure him. \"You just startled me,\" I said. \"No big deal. Just try to cover your teeth with your lips.\" He nodded, accepting the scolding I never intended to give. He opened his mouth, covered his teeth with his lips, and started to suck me. \n\nThe sensation was electric. As the warmth, wetness, and insistent suction of his mouth worked its magic, I took in the view of his body. My eyes focused on Rich's crew cut, through which I laced my fingers. I noted his big, muscular shoulders, over which swirled a light coating of hair that swept up from his collar bone. For a moment I wondered if Rich, already hairy at 21, was getting even hairier. I smiled when I looked down at his ass, which seemed to answer my question. His tight butt cheeks were covered with the same dark blond fuzz that coated his legs, but his crack promised even more. I could see the space between his cheeks. The hair was denser and darker. For a moment I experienced a pang of guilt for craving his ass. I knew that, if I followed my curiosity, it would lead me there eventually. But then I started to feel guilty for feeling guilty. There was nothing wrong with appreciating Rich's body. I'd always taught that we should be grateful for God's gifts. Plus Rich deserved some of the credit, as well. His military training, combined with fraternity intramurals and lots of hours in the dorm's weight room, had earned him a physique deserving of his pride and my admiration.\n\nNotwithstanding the rookie mistake of not covering his teeth, Rich was a natural born cocksucker. Maybe it was my more modest proportions, but he was swallowing me, all of me, with enthusiasm. I felt like I was floating. The feelings were pure bliss. I don't think I'd ever felt so turned on. Even my nipples were hard. His mouth was engulfing my cock and his hand was caressing my balls, gently fondling them while pulling downward on my sac. Meanwhile, my nuts were contracting, raising up toward my body as they always do right before I cum.\n\n\"Oh wow, oh wow,\" I gasped. \"Oh shit, oh shit! I'm almost there!\"\n\nHis mouth released my cock as he rose up before me. No longer on his knees, he held me in his arms. He leaned down to kiss me while my hands cupped the firmness of his naked, hairy ass. Our erections rubbed together as we both pressed forward, humping each other and leaking. I reached up to slide my hands beneath his wifebeater shirt and up his back. It was big and broad and warm and wet with perspiration. When our lips lost contact I nuzzled his shoulder, kissing and licking his muscular, hairy flesh. \n\nI was on the edge. So was Rich. But at the same time we came to the same conclusion: We didn't want to cum like this. Not this time. We wanted more.\n\nWe both backed away, withdrawing our cocks. \"I want you in my mouth,\" I panted, still clutching his shoulders. \"I want to taste you.\"\n\n\"That's exactly what I want,\" Rich said. \"Let's get on the bed.\"\n\nI reclined on my side while he shuffled onto the mattress. He positioned himself opposite me. We were going to sixty-nine. His cock, engorged and erect, bobbed in front of my face. I swallowed it while my hand tugged his pendulous balls. I could feel them lifting upwards. He was at the point of no return, and so was I. I inhaled deeply as I pressed my nose into his pubic hair. I wanted all of him.\n\nHe wanted all of me. His mouth felt like magic. I can't describe the sensations. He caressed my balls as I crested the wave of pleasure. I was about to cum, and so was he!\n\nMy own efforts sped up. I was sucking him greedily, almost desperately, as if his was the only cock in the world and I needed it to survive. His hips started thrusting as he grabbed the back of my head. He was fucking my face.\n\nMeanwhile, his other hand released my balls and reached behind them. I felt his big finger trace its way down the crack of my ass. He hooked his finger on the opening of my hole, pressing but not penetrating. It was as if he was pulling my trigger.\n\nI started to cum. I shot one, then two, then three, then four volleys into his mouth. I felt him swallow at the same exact moment I felt his cock erupt. Suddenly his semen, thick and hot and viscous, washed over my tongue. He tasted so good, so rich and heady - so Rich. I tried not to swallow; I wanted to savor him. But my mouth couldn't contain it all and I felt his cum leaking down the side of my face.\n\nAs his cock withdrew from my lips the pang of disappointment was soon surmounted by the warmth of Rich's kiss. He had spun around to share in the afterglow. As my tongue entered his mouth I could taste my cum mixing with his. We were both panting. I felt exhausted, but also more satisfied than ever before in my life.\n\nI woke up, startled to be in someone else's room. Then I remembered last night. I could feel Rich spooning me. His arm was wrapped across my chest and I could feel him breathing slowly. Although he was still asleep, his cock was wide awake. Hot and hard, it was wedged between his stomach and the trench dividing my butt cheeks. It felt good there, in part because it helped confirm that last night wasn't just a dream.\n\nI also had morning wood. Unfortunately, my dick had nothing to keep it company except my hand. I gently fondled myself while savoring the warmth of Rich's body, the sensation of his breath tickling the little hairs on the back of my neck, and the scratch of his pubes against the bottom of my ass. And then there was the soft hair of his muscular forearm, glinting in the sunlight that streamed through his window. Some of the strands on his arm were golden, like the hair on his head. Others were brown while others were reddish. All looked sexy dancing across his skin. \n\nI wish I could have stayed there forever. I couldn't. I needed to piss and take a dump. I repositioned Rich's arm and slid out of his bed. One of the benefits of this dorm is that each room has its own private bathroom. Rich's was just like all the others except that it was his. Dangling from the inside door knob was a damp jock strap rinsed out by hand and left to dry. Like a good ROTC cadet, his sink counter was clean and his medicine cabinet was neat and organized. He had left it hanging open, as if it were ready for inspection. There wasn't much in there: Speed Stick, Gillette shaving cream, a Bic razor, a toothbrush, Colgate, and a bottle of Scope. On top of the toilet bowl was a stack of magazines. At the top was a publication called Aviation Week & Space Technology, which I guess made sense given Rich's poster of Army helicopters. Beneath it was a recent issue of Newsweek. On the cover was O.J. Simpson, who'd recently been charged with the murder of his wife. Yet these magazines served as mere fig leaves for the treasure trove beneath: a small stack of International Male and Undergear catalogs. Realizing that Rich sat here and beat off did nothing to calm my erection. I sat down to take care of business, doing my best to aim my dick downward and piss through my hard-on. I flushed the toilet and grabbed his mouthwash to freshen up.\n\nMy breath was now fresh but my cock was still throbbing. When I emerged from the bathroom and saw Rich sprawled out on the bed, my dick got even harder. It's really difficult to capture in words just how gorgeous Rich looked, at least to me. He'd shifted onto his back. He still was wearing that wifebeater. Otherwise he was naked. I quietly approached the side of the bed. I wanted to really look at him, to appreciate his body in detail.\n\nI forced my eyes to start at his feet. Large and muscular, I could see the prominent veins beneath the light coating of hair on the tops of his feet. His legs, covered with golden fuzz, were a study in contrasts. His calves were lean and well-defined but above his knees his quads were massive. Rich could strangle me with those thighs. I could think of worse ways to die, especially because in my final moments I'd enjoy an up close and personal view of his cock and balls. I had barely noticed Rich's nuts last night - when I first started sucking him, they were still concealed by his shorts - but now they were on full display. They were true low hangers, sprawling between his thighs in a sac dusted with silken hair not all that different from what feathered around his forearms.\n\nAnd then there was Rich's cock. Fully erect, it pointed north and laid flat against its nest of brown pubic hair. I know I already commented on its size. Rich would later let me hold it up against a dollar bill. If you have one in your pocket, pull it out. At full mast, Rich's dick is about and inch longer. In terms of girth, his shaft is about two-thirds the width of the dollar. Now roll the dollar into a tube, allowing the ends to overlap by about an inch. This is its circumference, and keep in mind that his helmet is even bigger. No wonder it brought tears to my eyes.\n\nThe crown of his cock landed on the ribbed fabric of his tank top. I was eager to see him fully naked, but I have to admit that the tank was really hot. It revealed a lot while allowing just a little bit of mystery. I still hadn't seen him shirtless, but I could appreciate the muscles of his torso, which stretched the tank to full capacity. His waist was narrow, but the fabric flared outward to accommodate his wide lats and pecs. Against the tight cotton I could see the ridges of his abs, the definition of his chest, and even the nubs of his nipples.",
        "The shirt exposed the top part of his chest with its thicket of hair. It was dense but not curly. Instead, the hairs were long and straight and they sort of cascaded upward, feathering over his collarbones toward his thick neck and brawny shoulders. He hadn't shaven in a full day. There was an impressive amount of stubble on his neck and face. The bristly hair accentuated his strong, square jaw, and especially the dimple dividing his chin. His eyebrows were thick, calling attention to his low forehead and the pronounced ridge above his eyes. The effect, very masculine, was softened only by the length of his eyelashes. \n\nSince his left arm was extended across the bed I could also see his armpit, where all his muscles seemed to come together in a gloriously deep and hairy hollow. My own pits were fairly neat and tidy. Beneath each arm I had small tufts of straight hair. About two-thirds pointed up while, beneath the fold of my arm, a smaller tuft pointed down. The hair in Rich's pit was both more widespread and more disorderly. It was longer and more wavy. To my eyes it was sexy.\n\nI wanted to see it up close. To be honest, I also wanted to smell it. I know it's not exactly normal to want to sniff another guy's armpit, but with Rich I couldn't resist. I quietly crawled back into bed, gently laying my head on his bicep. I enjoyed the view and inhaled deeply. I liked the smell. It wasn't rank or anything. Instead, I enjoyed a vague mixture of Speed Stick and muskiness. I liked it.\n\nI reached for Rich's cock, gently grasping it with my left hand. That's when he stirred. His eyes squinted open. He looked at me, smiled, and pulled my face toward his. He kissed me softly. \"Thank you,\" he whispered.\n\n\"For what?\" I whispered back.\n\n\"Thanks for taking my mail,\" he smiled. He lifted his wrist to glance at his watch. \"Do you have class this morning?\" \n\n\"Not until 11,\" I responded.\n\n\"Same here,\" he said. \"We have plenty of time to enjoy ourselves. But first I have to use the john.\" He pecked me on the lips as he rose out of bed. \"Don't move an inch.\"\n\nI stared at his ceiling as I listened to him try to piss through his erection. There was a splash in his toilet bowl and then silence. Another splash and then silence. And so on. Finally, he flushed. Then I heard him gargling. He emerged from the bathroom with his cock pointing toward me. He was also flashing his pearly whites. \"Now we're both minty fresh,\" he said.\n\n\"But only one of us is fully naked,\" I complained. \n\nRich glanced down and took note of his tank top. He grabbed the bottom of its fabric and pulled it over his head. The image of him with his muscular torso exposed and arms raised reminded me of a photo I'd looked at when I first started beating off. It was a Soloflex advertisement in Rolling Stone. But Rich was even hotter than the \"Body by Soloflex\" model. The guy in the ad was fairly smooth, like me. Rich, on the other hand, was over-the-top masculine.\n\nI shifted toward the wall to make room on the bed. I leaned in to kiss him while reaching for his chest. The hair there was soft and warm. I rolled on top of him as we embraced. I could feel his heat and hardness beneath me. I lowered my face to kiss his stubbly chin and then his neck and his shoulders. Emboldened by his performance the night before, I planted my face in his armpit, smelling him and then tasting him with my tongue. I moved to his other pit and then traced my tongue across his chest. I loved the feel of his hair. His skin was slightly salty. The nubs of his nipples were hard. Rich was sighing, gasping, and whispering \"wow\" over and over again. \n\nFrom his sternum I traced a path down his treasure trail toward his dick. Slowly, tentatively, I teased his cock with my tongue by licking lightly up his shaft to the little ridge beneath his piss slit. Lingering at the extra-sensitive spot, I flicked my tongue in rapidly. Then I licked my lips, opened wide, and swallowed his cock. All of it. I was new to this, and Rich is big, but I wanted him badly. I remembered what I'd learned last night about controlling my breathing and gag reflex, and I took my time, slow but sure. Rich moaned when my nose pressed into his pubes.\n\nI started to raise and lower my head. As I eased into a sucking rhythm, my hand massaged Rich's balls. I could taste his pre-cum and smell the musk of his crotch. He laced his fingers through my hair and held the top of my head. He didn't attempt to fuck my face or guide my movements. Instead, his big hand started to caress my scalp, thanking me for the feelings I was giving him. Everything about Rich was such a turn-on. I glanced up to see him smiling at me, intently watching the action. I had to kiss him.\n\nI pulled off his cock, leaving it wet with my saliva, and raised myself over his body. As I pressed my lips to his I also lowered my cock so that it aligned with his erection. We made out hungrily as our dicks dueled below. We started to grind together, thrusting our hips and pressing forward. Our cocks, lubricated by spit and pre-cum, were enjoying the friction of flesh against flesh. I could feel his rod throbbing against mine while his lush nest of pubic hair sent little jolts of electricity through my balls to my brain. \n\nOur tongues were also pressing and thrusting. We panted into each others mouths as we stared into each other's eyes. I was enveloped in Rich's strong arms as his big hands clutched my back. The heat of our bodies, inflamed by passion and the now almost frantic thrusts, caused each of us to sweat. Rich felt so amazing against me. He almost felt like he was part of me. What we were doing was so wanton, so unreserved, so unrestrained, so goddam primal yet somehow so intimate.\n\nI could feel his cock thickening and throbbing. Rich started grunting into my mouth. His cock spasmed, firing volley after volley of 98.6-degree cum between our bodies. His heat and his wetness pushed me over the edge. I felt my nipples harden and my balls contract. As Rich clutched my ass and my face contorted in ecstasy, I started to cum. I could feel our semen mixing between our heaving bodies.\n\nWe were still for a minute, enjoying the afterglow. I felt almost dazed. The only sound was our heavy breathing. Rich's kiss broke my trance.\n\n\"That was amazing,\" he said. \n\n\"Incredible,\" I agreed. \n\nFeeling the sticky wetness against my crotch and abs, I gathered the strength to lift up and lower myself back down his torso, lapping up our loads and I cleaned his fur and his skin. Wanting nothing to go to waste, I took his softening cock into my mouth, too. This, I told myself, will never be a chore. \n\nI felt Rich's hand on my shoulder as he slowly pulled me back onto the bed. He had a devilish grin on his face. \"I want to taste us, too,\" he announced. His tongue felt wonderful on my abs and around my crotch. He returned the favor and cleaned my cock. For good measure, he also engulfed my balls.\n\nAs thorough as we'd been, we decided it also made sense to wash each other off in the shower. We not only scrubbed each other under the hot spray but also got playful. Rich had me laughing as he kept repeatedly - and intentionally - dropping the soap. \n\nAll too soon, it was time to get dressed. I'd need to return to my room in what I was wearing last night. He had ROTC class, so I got to watch him put on his \"BDU\" camouflage fatigues. He looked really handsome in that uniform.\n\nAs we got ready to leave the room, he pulled me in for one last kiss. \"Want to get dinner tonight? Maybe somewhere off campus?\"\n\n\"Sure,\" I agreed.\n\n\"Good,\" he said, \"we need to talk.\"\n\nEver since he kissed me goodbye, Rich's words echoed in my head: \"We need to talk.\"\n\nWhat did he mean? Was there a problem I needed to know about? Was he having second thoughts? But if he was, then why did he kiss me and invite me to have dinner with him? \n\nThese were the questions running through my head as I was finishing my afternoon desk shift. Of course, I was also savoring the memories of all that had transpired. These had my cock throbbing in my khakis. Our time together had almost overwhelmed my senses. The sight of his masculine, muscular body. The sound of his voice, panting in desire and moaning in pleasure. The taste of his sweat and cum. The musky smell of his pubes. The feel of his soft, wet lips surrounding my dick and the feel of his thick, hard, supple cock stretching my lips and filling my throat. It was all so hot and yet also so right. Everything about my time with him clicked together just perfectly to confirm in my mind what for years I'd known, even if I wasn't always able to admit it to myself. I was gay. \n\nAs it turned out, so, apparently, was Rich. And he seemed to feel as attracted to me as I was to him. I couldn't believe my luck. It seemed too good to be true.\n\nAs I finished sorting and depositing the mail Michelle showed up to relieve me at the front desk. Just as I was leaving Rich walked into the lobby. \n\n\"Hey,\" he greeted me, smiling.\n\n\"Hey,\" I replied, smiling back. My eyes quickly surveyed him. He looked really handsome in his Army BDU camouflage fatigues.\n\n\"I've been thinking about you all day,\" he whispered.\n\n\"Me too,\" I responded. \n\nWe walked to the elevator. After the doors opened, he pressed the button for his floor. \"Come to my room and let me change,\" he said. \"Then we'll head out for dinner.\"\n\nAs he followed me into his room and pulled the door shut, I turned to face him. We just stood there for an awkward second before I leaned forward to kiss him. His big arms wrapped around me and we started to make out. There was nothing tentative about our kissing. It was passionate; we were hungry for each other. I reached behind him to grab his ass and pull his crotch forward to press against my own. I could feel my cock hardening as our tongues did battle. Things were escalating quickly. That's when he broke the kiss and pulled back.\n\n\"If we don't stop,\" he said, \"we'll never get to the restaurant.\"\n\nRelenting, I stepped aside so that he could change. I watched as he unbuttoned his BDU jacket. (He'd later joke with me about how officially this garment was a BDU \"blouse.\" It was the least feminine thing imaginable, but the Army loved to screw with the English language.) The olive t-shirt underneath clung nicely to his muscular torso. The thin cotton fabric revealed the points of his nipples as well as the fact that he'd been sweating. I could see the dark circles of perspiration around his armpits as his raised his arms to pull off the shirt and toss it on the floor of his opened closet. Now naked from the waist up, I could admire his muscular, hairy body. My instinct was to look away-to give him privacy and act as if I had no interest. But we both knew better, so I fought the impulse to avert my eyes.\n\nI stared as he began to unbutton the fly of his camouflage pants. He was going commando. His pants hit the floor to reveal a half-hard cock surrounded by an untamed thicket of brown hair. I could feel my mouth water.\n\n\"Can't I just drop to my knees now?\" I asked him, only half joking. \n\nHe chuckled. \"Let's have dinner first.\"\n\nHe reached into his closet to grab a pair of Wranglers. Soon his chest was covered by a wifebeater and a red- and black-checked flannel shirt. It would be a major understatement to say that he looked handsome. He looked molten hot.\n\n\"You ready?\" Rich asked, flashing his pearly whites. \n\n\"I'm feeling a little bit overdressed,\" I admitted. I was still wearing a tie from my desk shift. \"Maybe I should go to my room and change.\" He smiled at me broadly, staring into my eyes as he grabbed my tie and used it to pull me in for quick kiss. Our eyes still locked, my cock stiffened as I felt his big hands undoing my tie knot and then releasing the top button of my shirt. The whole process was somehow very intimate.\n\nHe stepped back, still smiling. \"Now you look perfect,\" he said, folding my tie and tossing it on his desk. \"Let's go.\"\n\nAs I climbed into the passenger seat of his truck I asked the obvious question: \"Where are we going?\"\n\n\"A really good barbecue restaurant,\" he said, turning the key in the ignition. Throwing the engine into reverse, he extended his right arm behind my headrest to turn and look backwards. This brought his face closer to mine. He looked into my eyes. \"It's actually a good 45-minute drive. But I figured it would be good to get out of town. Plus, it gives us time to talk.\"\n\n\"You've had me worried all day,\" I admitted as we rolled toward the edge of campus.\n\n\"What about?\" he asked.\n\n\"About what it is you want to discuss. Everything's okay, right?\"\n\nRich reached down to rest his hand on my thigh. \"Everything's great,\" he said. \"Better than great. I finally found someone with whom I can be myself. A guy who understands me. A guy who's not afraid to be true to himself.\"\n\nI was beaming. I couldn't control how broadly I was smiling. And then, just when I thought that I couldn't be happier, Rich cleared his throat.\n\n\"And then there are two other things,\" he continued. \"The first is that I think we share the same values. The second,\" he said, leering at me and tightening his grip on my thigh, \"is that you have the tightest, hottest body, and your cock tastes amazing.\" \n\nI laughed out loud. Rich had great comic timing. But he also knew how to say exactly what I wanted to hear.\n\n\"You know I'm not joking,\" he said, laughing with me.\n\n\"I know,\" I replied. \"And it makes me really happy. I can't believe it, almost. You're just about the hottest guy I've ever known.\"\n\n\"Just about?\" he asked, teasing me. \n\n\"Correction,\" I said, \"you're definitely the hottest guy I've ever known.\"\n\n\"I'm glad you think that,\" he said. \"Really glad. And I'm not going to tell you otherwise. But don't think I'm not counting my blessings you've got a thing for hairy, sweaty Neanderthals.\"\n\nOur conversation flowed freely as Rich steered his truck along the two-lane county roads that led to the restaurant. We talked about everything. I was telling him things that days earlier I wouldn't even admit to myself: when I first knew I was gay, what I thought about when I beat off, how I faked being straight to my family and friends.\n\n\"You've never hooked up with a guy before?\" Rich asked. \n\n\"Never,\" I admitted. \"You?\"\n\n\"Nope. No guys until you. You're my one and only.\" I liked the way that sounded. \n\n\"What about girls?\" I asked.\n\n\"A few,\" Rich admitted. \"It never felt right. I dated a cheerleader in high school. She was a good friend, mostly.\"\n\n\"Did you fuck?\" I blurted out. As soon as I asked, I kind of regretted it. The question seemed crass. \"Sorry,\" I apologized. \"None of my business.\"\n\n\"What are you saying? Where my dick has been is 100% your business.\" He paused for a long second. \"We were both virgins until the night of the senior prom. I wanted to prove to myself that I was straight. I was able to do it, but not without thinking about half of my teammates naked in the locker room. I made an excuse to break up soon after.\"\n\n\"But there were others?\"\n\n\"Just two, but not even.\" he responded. \"This is when I was pledging my fraternity. We'd get pretty drunk. The first one I fucked still trying to prove to myself that I could be straight. It was a one-night thing, and not very good. The second,\" he paused, chuckling a bit, \"was the night of the Tri Delt formal. I was trashed and basically got date-raped. She wouldn't take 'no' for an answer. When I couldn't keep it up for her, we blamed the alcohol.\"\n\n\"Keep it up?\" I asked. In hindsight I feel so dense about needing a clarification. \n\n\"My dick,\" Rich replied. \"She sucked me and got me hard enough to penetrate her, but pretty soon I went limp.\"\n\n\"Sorry,\" I said. \n\n\"Don't be,\" Rich responded. \"It made things more clear to me. From that point forward I found excuses not to hook up. My frat brothers started calling me the choir boy.'\"\n\n\"That's kind of mean,\" I said, feeling defensive for Rich. I didn't like the idea of anyone calling him names.\n\n\"Mean, maybe, but also true. I'm in the choir at our church. I see you there every Sunday morning.\"\n\n\"I had no idea you were in the choir,\" I admitted. \"You guys are really good.\"\n\n\"Thanks,\" he said, smiling. \"The best part, though, is being way up high in the back of the church and being able to watch that tight butt of yours as you kneel and stand.\" He started to laugh. \"I especially like it when you're kneeling.\"\n\nI felt myself blush. Ever since I was a kid I had the lazy habit of not lowering my knees all the way to the padded kneeler that flips down from the base of the pew in front of me. Instead, I kind of slide forward, turning my ass upwards on the edge of the pew. \n\n\"I think I'm embarrassed,\" I confessed.\n\n\"You shouldn't be,\" Rich countered. \"You should be proud.\"\n\nDinner was great. We split a full rack of ribs and enjoyed sides of mac-n-cheese and cole slaw. Being far from the college, the place didn't card, so I even got served. Since he was 21 but I was still 20, at most restaurants I'd be out of luck. It was nice to be able to drink a beer with Rich. Mostly, it was just nice to be with him. It was great, in fact.\n\nHe looked really handsome sitting across from me. He'd rolled up the sleeves of his flannel shirt, exposing his hairy, muscular forearms. He had the top two buttons of his shirt undone as well, treating me to glimpses of his hairy chest. The stubble on his jaw was beginning to reemerge. It was looking especially bristly at the cleft of his chin, where it must have been difficult for him to get a close shave. And then there were his hazel eyes. I know it sounds like bullshit from some romance novel, but I found myself getting lost in them. They had darker flecks of color and a depth and complexity that isn't easy to explain.\n\nAll of this had my cock throbbing, but what made it start to leak was when he took his big feet and clasped them on either side of my right foot. I loved the physical contact. It made me feel so wanted and desired.\n\nAs we finished our meal, Rich laid out an agenda. \"There are two stops I want to make on the way back to the dorm,\" he said.\n\nMy eyes opened wider.\n\n\"The first is the drug store on the edge of town,\" he explained. \"I hope I'm not being presumptuous, but I'm thinking it might be a good idea to buy some lube.\"\n\nI smiled, flattered that Rich, so soon, was willing to move things forward. \"I've already waited too long,\" I said. \"I'm ready when you are.\"\n\nHe leaned forward and whispered: \"Is it okay if we don't get condoms?\"\n\nThe truth was I hadn't even thought of using them. But for a second I was having second thoughts. AIDS was a big deal in the early 90s. Even straight guys like Magic Johnson could get it.\n\n\"I think so,\" I said, lowering my eyes and verbalizing my thoughts. \"I know I'm okay, and I know you're okay. You didn't get anything from a virgin cheerleader and a couple of sorority girls...\"\n\n\"I know I didn't,\" he interrupted. \"I know we're both okay. It's just that it's kind of a big commitment.\" He went to grasp my hand but, realizing we were in a public place, pulled his hand away. Instead, his feet squeezed more tightly around my shoe.\n\n\"The way I see it,\" he explained, \"there's only one time you don't have to worry. It's when it's your first time without condoms and also his first time without them. And if you stay monogamous, you're good. That's us right now. I'm not going to think into the future for me-you're the only guy I can ever imagine wanting-but if we're going to preserve the options for you, then maybe we should buy them.\"\n\nI let what he said sink in. After too long of a pause, I responded: \"Rich, you're the only one for me. I don't want anything between us.\"\n\nHe exhaled, smiled, and waived to the waitress for the bill. We didn't say much on the way home. It's not that there was silence between us. It's that there was small talk. I asked Rich about his truck. He told me what it was like being in the ROTC and his plans to fly helicopters for the Army. We compared experiences swimming (me) and playing football (him) in high school.",
        "He pulled into a CVS drugstore on the edge of town. \"Wait here,\" he said, before heading in by himself and then returning with a small bag. He handed it to me. I peeked inside and saw the box containing the tube of KY Jelly. Suddenly what we were about to do got extra real. \n\n\"What's the second stop?\" I asked.\n\n\"St. Barnabas,\" he said. Our church.\n\n\"It's open?\" I asked. It was nearly 8:30. \n\n\"They don't lock the doors until 9:00,\" he said.\n\n\"Why are we going to St. Barnabas?\"\n\nRich paused for a couple of long seconds.\n\n\"Because I want us to pray together,\" he finally said. \"I hope you're okay with it. I want to pray in church. I know it's not where we actually met, but it's where I first noticed you, before we met. And please don't think I want us to ask for forgiveness. God made us, so God loves us. As we are. I just want to ask for His blessing.\"\n\nAs we left the church and hopped back into Rich's truck, I reached over to rest my hand on the back of his neck. He turned to face me. \"Thanks for doing that,\" I said.\n\n\"For doing what?\" he asked.\n\n\"For suggesting we stop by the church. It clears my conscience a little bit,\" I chuckled.\n\n\"Your conscience,\" he replied, \"shouldn't need clearing.\" \n\n\"You're right,\" I agreed. A smile washed over my face. \"But going into church and praying next to you does make tonight extra special.\"\n\n\"I'm glad,\" he said, leaning in to kiss me. It wasn't a soft peck on the lips. It was passionate and needy. His tongue quickly found its way into my mouth as the fingers of my left hand felt the bristle of his crew cut and my right hand caressed the stubble of his jaw. When he pivoted to kiss me he had turned and braced himself by pressing his left hand onto my thigh. My cock lengthened as he moved his hand upward toward my crotch. I was throbbing by the time he touched me through the fabric of my khakis. His thumb pressed down on the head while his big, meaty paw gripped the shaft. \n\nI broke the kiss, tracing my tongue over his stubble before tasting the inside of his ear. \"I can't believe it,\" I panted. \"I feel like the luckiest guy on the planet.\"\n\nHis hand released my crotch and moved up to cradle the side of my head. \"Believe this,\" he commanded, staring into my eyes. \"I'm the lucky one. You're just so darn incredible.\" I could feel the warmth of his breath wash across my face. \"And,\" he added, \"perfect for me.\" He sealed his statement with another kiss and then pulled away to start the engine of his truck. \n\nAs we drove back to the dorm, eager to know everything about the man who had swept me off my feet - the guy who was going to take my virginity - I peppered Rich with questions. Why did he choose our college? Why ROTC? What caused him to pledge Kappa Sig? All of his answers revealed that there was so much depth to this guy, so much heart and character. What he said about his fraternity just about summed him up. \n\n\"I liked all the brothers in the house,\" he said, \"and I really admired the fraternity's principles.\"\n\n\"What are they?\" I asked.\n\nRich leaned forward a bit, smiling, and started to recite what, as a pledge, he had to commit to memory:\n\n\"The Star and Crescent of Kappa Sigma shall not be worn by every man, but only him who is worthy to wear it.\n\nHe must be a gentleman...\n\na man of honor and courage...\n\na man of zeal, yet humble...\n\nan intelligent man...\n\na man of truth...\n\none who tempers action with wisdom and, above all else, one who walks in the light of God.\"\n\nRich nodded slightly and then leaned back in his seat, pleased with himself for remembering it all.\n\n\"I don't know about the rest of your fraternity brothers,\" I said, \"but that sums you up pretty perfectly.\"\n\nRich reached toward me in the passenger seat and placed his hand over mine. \"Thanks,\" he said, giving my hand a squeeze.\n\n\"The only thing it left out,\" I quipped, \"was your amazing body and your majestic cock!\"\n\nWe both broke out laughing - and we kept laughing. What I had said was funny, but not enough enough to merit so much laughter for so long. In hindsight, I think we were both probably releasing the tension we felt. We were both excited about what was going to happen - incredibly excited. But also we were probably kind of nervous.\n\n\"It's your body that's amazing,\" Rich said. \"Dang it, you're hot, your muscles are so tight and,\" he paused for dramatic effect, \"that ass!\"\n\n\"Oh come on,\" I insisted, \"you are bigger and taller and strong-\"\n\n\"You're amazing!\" Rich interrupted. He really seemed to mean it.\n\n\"Your majesty!\" I replied, referring to his cock - and then we both started laughing again. \n\nThus was born our secret nicknames for each other. If people weren't around, like the next afternoon when I was sitting at the dorm's front desk, Rich would sneak up behind me, clasp his hands to my shoulders, let his hot breath wash across my ear, and say \"Hey, Amazing.\" So \"Amazing\" was his pet name for me. But mine for him was even better. I'd call him \"Your Majesty,\" but what made this nickname even better was that sometimes, given the context, it was clear that I was referring to his dick. For example, he'd say \"How's my amazing loyal subject?\" I'd answer, \"Eager to please your majesty.\" \n\nBy this point he was parking his truck outside our dorm. The next few minutes were sort of a blur. It was as if nothing mattered other than me, him, and getting inside his room. I couldn't focus my eyes on anything else. The two of us made a bee-line through the lobby to the elevator, not even glancing at the front desk and whoever was working it. \n\nThe next thing I knew we were inside Rich's room. The door shut behind us as he pushed me back against it with one hand and locked it with the other. \n\nOur lips pressed together as we embraced. His tongue was in my mouth and mine was in his. I raked my fingers from his broad shoulders to his narrow waist. My hands cupped his firm ass as his body thrust forward, trapping me between the cold, hard door and the heat of his own evident hardness. My hands slid up his sides to his armpits. Through the flannel of his shirt I could feel the dampness of his sweat. \n\nSuddenly the stubble of his chin grazed my ear. A million little lightning bolts coursed through my body, giving me goose bumps. \"I'm so hot for you,\" he panted. I responded by tightening my grasp on him and tracing my tongue along the length of his neck. \n\nThat's when I felt his hands on my ass. As he lifted me off the floor my legs spread and wrapped around his waist. The next thing I knew I was on my back in his bed.\n\nHe pressed down on top of me, enveloping me with his warmth and his weight. We were kissing again, and even though we remained fully clothed, I could feel his hardness thrust against my own throbbing desire. I bucked against him while I stared into the kaleidoscopic beauty of his hazel eyes. He pawed at the buttons of my shirt, pushing it open to reveal my flesh. His lips descended down my neck and over my collarbone. Then his mouth consumed my nipple, sucking it, while his tongue flicked back and forth over the nub.\n\nThis caused my cock, already impossibly hard, to start oozing pre-cum, a fact confirmed when I turned the tables by wiggling out from beneath Rich and flipping him onto his back. I looked down at my khakis to confirm that my juices were soaking through, leaving a small but noticeable wet spot a few inches to the right of my fly. \n\nIt wasn't fair that I was the only one shirtless. Fortunately, Rich's western-style flannel shirt had snaps instead of buttons. I ripped it open all at once so that only his wifebeater stood between me and his muscular, hairy torso. As Rich helped me push the flannel shirt up and over his biceps I was treated to a close-up view of his armpits, each featuring a wild tangle of hair. I pressed my face into his left pit, inhaling the scent of his fresh sweat, and then moved up to his handsome face for what, up to that point, was the most wanton, open-mouthed, tongue-swirling kiss of my life. \"Damn,\" I panted, \"you're amazing.\"\n\n\"That's you,\" he smiled, lifting his head to peck me on the lips.\n\nIt doesn't take much to stoke my confidence - or, at least when Rich is involved, to melt away my inhibitions. His muscular torso looked so sexy in that wifebeater. It would look even sexier without it. I grabbed the fabric of his undershirt with both hands and yanked in opposite directions. His eyes widened and his jaw dropped as he heard the fabric rip, exposing his hairy chest and abs. \n\nI leaned down to taste his flesh, kissing, licking, sucking everything from his collarbones to his nipples to the ridge beneath his pecs, to his treasure trail, abs, and navel. And then, just below the waist of his jeans, I pressed my face into his crotch and inhaled. I traced my tongue along the outline of his hard cock, clearly evident beneath the well-worn fabric. I reached for the button and pulled down the zipper to reveal first Rich's forest of pubic hair and then his thick, engorged cock. He lifted his hips so I could slide off his jeans. Now he was totally naked.\n\nI bowed down between his legs and began to worship his cock. With just the tip of my tongue I gently traced it's length. Rich sighed as it twitched in response. I flicked the tip of my tongue against his frenulum - that ultra-sensitive spot just beneath his piss slit, which started to glisten with his transparent pre-cum. I dipped my tongue into his nectar, tasting the sweetness. I licked my lips and slowly enveloped his dickhead, sucking while swirling my tongue around his helmet. \n\n\"Damn!\" Rich exclaimed, clasping my head. I released his cock from my mouth. \n\n\"Did I do something wrong?\"\n\n\"Hell no,\" he panted. \"It's just so, so right.\"\n\nThis spurred me on. Covering my teeth with my lips, I went down on him. My descent was gradual, enjoyable, and unstoppable. I took it slow - and damn he felt and tasted good - and yes, my throat was hungry. My gag reflex was gone. All I wanted was to consume him. As my throat embraced his meat, my nostrils relished the heady scent of his pubes.\n\nI bowed down between Rich's legs and began to worship his cock. With just the tip of my tongue I gently traced its length. He sighed as it twitched in response. I flicked the tip of my tongue against his frenulum - that ultra-sensitive spot just beneath his piss slit, which started to glisten with his transparent pre-cum. I dipped my tongue into the nectar, tasting his sweetness. I licked my lips and slowly enveloped his dickhead, sucking while swirling my tongue around his helmet. \n\n\"Damn!\" Rich exclaimed, clasping my head. I released his cock from my mouth. \n\n\"Did I do something wrong?\"\n\n\"Hell no,\" he panted, a big smile on his face. \"It feels so, so right.\"\n\nThis spurred me on. Using broad tongue strokes, I painted his shaft with my saliva until his rod glistened. Covering my teeth with my lips, I then went down on him. My descent was gradual, enjoyable, and unstoppable. I took it slow - and damn he felt and tasted good - but yes, my throat was hungry. My gag reflex was gone. All I wanted was to consume him. As my throat embraced his meat, my nostrils relished the heady scent of his pubes.\n\nAs my lips slowly ascended his pole, my hands rapidly undid my belt and unzipped my fly. All at once I pressed down my khakis and my boxers, freeing my turgid cock. Bracing my hands on the mattress alongside Rich's hips, I shimmied my pants off my legs. Now both of us were totally naked. \n\nHaving regained full freedom of movement, I hunkered down over Rich's crotch. As my mouth bobbed up and down my tongue swirled in little circles. I intentionally varied my rhythm, going slow at first but then faster. Rich, meanwhile, went from sighing and clasping the bed sheets to moaning and clawing my head. Sensing he was nearing the brink, I decided to dial the pleasure back a notch. I loved the taste of his cum, but tonight I had no intention of having Rich deposit it in my mouth. I went all the way down, pressed my nose into the forest of his crotch, inhaled deeply, and held steady for a good 30 seconds. Finally, when my throat started to protest, I quickly released his cock. As it swayed before me covered in a sheen of saliva, I turned my attention to Rich's pendulous balls. First, I licked them, wetting down the fine, soft hairs. Then I took his left nut between my lips, swallowed it into my mouth, and gently pulled. \n\n\"Fuck!\" Rich exclaimed. My eyes darted past his cock and up his muscular torso to see the look on his face. First I saw his mouth, wide open but silent as if the sensations he was feeling overwhelmed his ability to speak. Then we locked eyes. His were squinted but not shut. His expression seemed almost plaintive. My lips released his nut.\n\n\"Am I hurting you?\" I asked with genuine concern. \n\n\"Hell no,\" he gasped. \"The opposite. It feels really good.\"\n\nMy confidence regained, I took his right ball into my mouth and bestowed on it the same treatment I'd given its counterpart. Rich softly moaned and panted as his fingers massaged my scalp. His nuts tasted slightly salty; his sac had contracted to give the skin a more crinkly texture. The testicle that rolled inside seemed like a large scallop in terms of its size and somehow simultaneous firmness and softness. In a word, Rich's balls were succulent. They were at once intensely masculine - the symbol and source of his virility - yet also a true delicacy. It wasn't easy to get both his balls in my mouth, but when I did his grip tightened. I could feel his fingernails pressing through my hair. As if he were fearful of hurting me, his hands grabbed beneath his knees, pulling them back as he steadied himself. This elevated his hips and caused to blossom before me a whole new world.\n\nRich's ass looked amazing. Majestic, actually. Up until that point I had never really had much interest in asses, but up until that point I had never been treated to an up close and very personal view of Rich's posterior. The light of his desk lamp caused the dark blonde fuzz on his ass cheeks to shimmer. It also cast a shadow over the denser and darker hair that lined Rich's trench. \n\nI didn't think. I couldn't think. Passion had reduced me to instinct and impulse. Releasing his balls from my mouth, I extended and flattened my tongue. My hands joined Rich's behind his knees to press them further back. I buried my face in his ass.\n\n\"Yessssss!\" he hissed, as I licked up and over his asshole. I repeated the action, over and over, wetting down the hair of his crack with a generous supply of saliva. Only a few days earlier I had neither the interest nor the inclination to press my tongue into another man's ass crack. Even now, years later, the appeal of such an action isn't easy for me to intellectualize or even describe. But at that moment I discovered a ravenous hunger I never suspected I possessed. Everything about his ass was such a goddamn turn-on: the indescribable taste, the heady aroma, the gentle scrape of his hair against my tongue, the yielding softness of his ass lips, Rich's whimpers of gratitude, and - maybe most important of all - the absolute and utter intimacy of it all. Dicks are on display in locker rooms and dorm showers from sea to shining sea. A man's asshole, however, is his truly private part.\n\nAnd Rich was offering his to me. As I continued to press back behind his knees, his hands slid out from under mine. He reached down to grab his ass cheeks, pulling them farther open, spreading himself before me. I softly kissed his left cheek and then his right one. Then I extended my tongue and aimed straight for his hole. At first I just traced circles around his lips while Rich panted in pleasure. When I rolled my tongue into a tube and started to press into his opening, his panting evolved into grateful moaning. \"Amazing,\" he whispered - which of course caused me to smile. \n\nI lifted up from the bed so that I could use my left forearm to push back on both his legs. This freed my right hand. I moistened my middle finger in my mouth. Rich gasped as I started to slowly sink my finger into his incredibly tight ass. \n\n\"Is this okay?\" I whispered. His wordless response was to hand me the tube of KY Jelly. \n\nI slowly withdrew my finger, coated it with the lube, and then gently pressed back into Rich's hole. His ass offered a bit less resistance this time, in part because of the lube, no doubt, but also in part because my finger had already stretched him just a bit. At first I just sort of let my digit fill him. Then I slowly turned my hand left then right, coating his insides. When he seemed ready for some slow finger-fucking, I took note of his dick, still hard and leaking, and lowered my head to allow my tongue to trace the length of its underside. I tasted the sweetness of his pre-cum as I took him back into my mouth. As I slowly withdrew my finger from his hole I felt his cock twitch at the same time my fingertip grazed a little lump inside him. That, I told myself, has got to be his prostate, the male pleasure spot. I pushed back in, trying to synchronize the rhythms of my finger and my mouth. When my finger was all the way in I was deep-throating him. When my finger was retreating my lips were ascending his shaft. When my finger was circling his prostate my tongue was circling his helmet and savoring all the nectar leaking from his piss slit.\n\nAll of this was just so incredibly erotic for me and, given Rich's moans and sighs and how tightly his hands were now gripping my shoulders, incredibly pleasurable for him. But rather than satisfying our passion, my sucking and finger-fucking only seemed to inflame it. \n\n\"I need you inside me,\" Rich panted. \"I want you to make love to me.\"\n\nI honestly didn't expect I'd be fucking Rich tonight. He's bigger and stronger and more masculine - I just assumed I'd be on the receiving end of things. But now, somehow, the tables had turned. I couldn't wait to get my cock inside him. I couldn't wait to satisfy his need.\n\nReleasing his meat from my mouth and easing my finger from his ass, I lifted up on my knees and applied lube to my dick. \"How do you want it?\" I asked.\n\nHis eyes betrayed his confusion, so I clarified: \"What position do you want to be in?\"\n\n\"Like this,\" he said, \"on my back. I want to see your face.\"\n\nI smiled. That's what I wanted, too. And I also wanted to be able to kiss him. It had been too long since our lips had connected. But then I remembered where my mouth had been. \"Can I kiss you?\" I asked. He answered by raising his torso off the bed, wrapping his muscular arms around me, and pulling me in for an wanton, panting, open-mouthed kiss allowing each of us to express the depth of our desire. After our lips disconnected, Rich leaned his head on my shoulder for a long second, resting it there while he dragged his fingertips over the muscles of my back. \n\nThen he released me, fell back on the bed, and hooked his ankles over my shoulders.\n\n\"I'm all yours,\" he smiled. \n\n\"You're mine,\" I replied. \"I love you.\"\n\nHis face was just beaming with joy. So was mine. I leaned down to kiss him again. Our tongues danced like it was their wedding night. Then, he said it: \"I love you, too.\"\n\nMy cock was already aligned with the entrance to his hole. I raised up on my arms for better leverage and pressed forward. He pressed back. As just the head of my dick entered him his mouth fell open and his eyes rolled back. I leaned down to plant a kiss on his hairy chest. Regaining eye contact, I asked, \"Are you okay?\" \n\n\"Yeah,\" he panted. \"But you feel really big. Go slow, okay?\"\n\nI nodded my head and then looked down toward his ass. I saw my raging erection, glistening with lube, piercing Rich's hair-fringed hole. As I pressed forward and saw another inch disappear inside him, I heard him inhale sharply and glanced back up to see his hands, which had been hooked under his thighs, land on his chest to pinch his nipples. I nodded at him again. He nodded back. I redirected my gaze at my cock. I pulled out just a bit and saw the hair around his hole cling to my shaft. Then I sank back in, just a little bit deeper than before. I closed my eyes for a second to revel in his heat and tightness. Rich's ass felt incredible. When I opened them I saw Rich's cock, hard and leaking pre-cum that was pooling in his belly button. I looked back at Rich's face. Beads of sweat dotted his forehead. \"Ready?\" I asked. He nodded.",
        "I looked down and watched myself sink all the way in. \n\nI bent forward to kiss him. His hands landed on my back as our lips made contact. \n\n\"I love you, Rich,\" I said. \"I love you, too,\" he whispered, thrusting his tongue into my mouth. I pressed my body against his torso. I could feel the heat of his muscular flesh, the dampness of his sweat, the hairs of his chest and treasure trail brushing against my own smooth skin. I lowered my abs to press down upon the throbbing intensity of his erection, the head of his cock wet with pre-cum. \n\nThat's when I felt his ass relax just a bit. He'd been positively clenching me, as if to keep me out. Now, ever so tentatively, he was beginning to welcome me in.\n\nWanting to give Rich's ass time to adjust, I held still inside him. Meanwhile, my lips moved to the side of his neck. I planted wet kisses and then started sucking and tonguing his salty skin. \"Ummm,\" Rich said, \"that's such a turn-on.\" What turned me on was Rich's body hair. He was just so goddamn masculine. I started kissing and then tonguing the hair that feathered across his muscular shoulder. As if he could read my mind, he then tucked his arm behind his head, exposing his armpit. I loved how this caused his bicep to bulge; I loved how so many of Rich's muscles intersected in his damp, hairy hollow. I pressed my nose against his pit and inhaled as Rich's free hand palmed the back of my head in encouragement. His pit wasn't funky; instead his sweat was fresh, clean, and apparently bursting with pheromones that sent my libido into overdrive. I extended my tongue to taste him and received the triple reward of a deep baritone moan, the clench of Rich's ass, and the tightening of his hairy calves around my back.\n\nI swiveled my hips in order to move my cock in little circles inside him, stretching the walls of his rectum. I looked into Rich's eyes. They seemed almost glazed over from what I hope was pleasure. \"Ready?\" I asked. His eyes regained focus and he nodded. \n\nLifting myself up off his torso, I slowly withdrew my cock until his sphincter grasped my helmet. Then, just as slowly, I sank back in. Rich gasped as I bottomed out but then smiled and nodded his head to give me permission to continue. I withdrew and sank back in. Another gasp. I noticed that Rich was playing with his nipples. I deep-dicked him again, a little bit faster this time. Then again. And again. And again. The look on his face was pure ecstasy. \n\nWanting more leverage, I turned Rich's body 90 degrees so that his ass was facing the side of the bed. This allowed me to stand over him, my feet firmly planted on the floor. I took advantage of the break in the action to trace my tongue up the shaft of his cock, drink from the pool of pre-cum that matted down the hair around his navel, and then slowly swallow his pole. I only allowed myself a few seconds to inhale the fragrance of his pubes. I didn't want to make him cum - not yet, and not like this. I withdrew from his dick and then licked a path up his treasure trail toward his chest. As I sucked on his left nipple something caused me to reach toward Rich's mouth with my right hand and place my fingertips on his lips. He immediately grabbed my wrist and sucked my fingers into his mouth. There was something really hot and really wanton about that moment. Nipples, fingers, whatever the body part - Rich and I couldn't fight the urge to basically consume each other. As his tongue danced around my digits I licked a path through his chest hair to his right nipple, the nub of which was already erect.\n\nBut so was my cock - almost painfully so. It was time to fuck. After withdrawing my fingers from Rich's mouth and briefly replacing them with my tongue, I raised up off of him and stood at the side of the bed. I threw his legs back, looked him in the eye, and sank back into his ass. \n\nRich's mouth hung open as I started to piston in and out of him. I grabbed his shoulders for greater leverage. My dick felt like it was on fire inside of him. He ass was tight, wet, and hot, and it felt like he was gripping my shaft, milking it, working it with his rectal muscles. When Rich's hand reached down to grip his own shaft I pulled his hand away, pinning it down on the mattress. His eyes flashed a look of disappointment - or maybe it was just desperation. We were both so close. My body was dripping with sweat. I looked down and saw a droplet of perspiration clinging to my nipple splash down onto his torso. I felt my balls tighten and my nipples contract. Rich's heels dug into my ass cheeks, keeping rhythm with my thrusts to turbocharge my fucking. \n\nThen, suddenly, it happened. My body tingled with goose bumps, broke out in a cold sweat, and convulsed as I shot one, two, three, four, five volleys of cum into Rich's ass. I had never felt pleasure so intense. I collapsed onto Rich. As we made out I felt his muscular arms envelop my torso. I felt the scratch of his jaw against my neck. I felt my cock, softening only slightly, marinating in the molten load I'd just injected into his ass. And then, still throbbing between our bodies, I felt the heat and hardness of Rich's cock. \n\nI grabbed for the tube of K-Y. I winced just slightly as I inserted a lube-slicked finger into my ass. I broke our kiss to apply the lubricant to Rich's erection. Then, on pure instinct, I felt myself start to slowly fuck the hot, hairy, muscular, ROTC cadet whose ass still engulfed my greedy cock. For a moment I considered a change of plans, but then I willed myself to withdraw.\n\nStanding on the side of the bed, dragging my forearm across my forehead to wipe away the sweat, I looked down at the stud who was not only my lover but also, I felt certain, my love. \"You've given yourself to me,\" I whispered. \"Now I want to give myself to you.\"\n\nRich raised up on his elbows as a smile washed across his handsome face. \"You're sure?\" he asked. \n\nFor only a half second I hesitated. \"Absolutely,\" I then said, although in truth I wondered if I'd be man enough to take him. His dick, remember, was not only longer than mine but thicker. Of course I was a little bit nervous.\n\nSuddenly Rich rose up off of the bed. He wrapped his arms around me, then cupped his hand beneath my chin to tilt my head upwards. He looked me in the eye. It was as if he had read my mind. \"You're sure you're sure?\" he whispered. \"It's okay to feel nervous,\" he reassured me.\n\nI practically floated upward into his lips. This time I kissed him not as a result of passion so much as a show of gratitude for his empathy. I did want him. I wanted to make love to him. I wanted him inside of me. And while I still felt anxious about my ability to please him, at that moment any doubt about my desire to please him was wiped away. When I felt the tickle of his pubes against the head of my upturned cock, my desire intensified.\n\n\"I'm gonna coach you through it,\" Rich purred as his lips grazed my ear. \"I learned some things just now that should help you. It will probably hurt a little at first, but if I'm half the swordsman you are, a little bit of pain will earn you a whole lot of pleasure. Lay back,\" he said, so I did. \n\nI couldn't help but notice that the sheets were damp with Rich's sweat. This turned me on. So did the sight of him above me: his earnest, almost goofy smile; his bulging muscles; his hirsute frame glistening with perspiration; his erection, jutting out proudly from the thatch of his pubes, bobbing in excitement and glistening with lube.\n\nSpeaking of which, he reached for the K-Y, coated his middle finger, and slowly pressed into my ass. It was probably smart to augment the lube I'd already applied, plus this gave Rich an opportunity to share something he'd figured out. \"One of the reasons it hurt at first was that my body's natural reaction was to clamp down when you entered me,\" he explained. \"But then, almost by accident, I used my ass muscles to push out, and it opened me up to you.\" He moved his finger in and out of me. \"Feel how tight you are?\" I nodded. \"Now, push out like you're taking a dump.\" I did. This time his finger met with less resistance. \n\nAs he withdrew his digit, his fingertip dragged over my prostate. I gasped in pleasure. Rich smiled. \"I think you're going to learn to really like this,\" he said.\n\n\"Me too,\" I panted. \n\nHe leaned down, quickly flicked his tongue against the underside of the tip of my dick, and then traced a trail from my belly button over my abs and up to my sternum. A second later his mouth engulfed my left nipple, then my right one. Finally his lips met mine. As our tongues danced together I pulled back my thighs. \n\nI could feel the head of Rich's cock just tickling the entrance of my ass. I looked up into his eyes, which were locked on my own. His pupils were dilated in the dimness of the light, compressing his irises so that they resembled halos of hazel. I reached under his arms to grip from behind his muscular shoulders. His erection was now pressing against me. \"Take a few deep breaths,\" he instructed, \"and push out.\" I opened my mouth as his lips returned to mine. I felt his tongue enter my mouth as I bore down to open my sphincter. I threw my head back as his helmet parted my asslips. Everything got a little blurry for a second. \"Keep pushing, keep breathing,\" Rich whispered, the heat and moisture of his breath washing over my ear. \n\nI gasped in pain as the big head of his cock stretched my ring. But then, as he pushed ever so slightly deeper, the pain diminished since his shaft, while plenty thick, is still not quite as broad as his helmet. \"Keep pushing out,\" Rich said. I obeyed. Meanwhile, he nudged forward. At first, there's no denying that my ass was on fire. The pain scorched me. Rich could see it in my eyes. \"You can do this,\" he reassured me. As I surveyed his body - chorded muscles gleaming with perspiration and matted with hair - I resolved that yes, I could. \n\nThe next thing I knew, the scratch of Rich's dense pubes discovered the itch of the smooth skin that surrounded my hole. He was in me - all the way. He leaned down to kiss me. I clutched the back of his head, running my fingers through the silky bristle of his crew cut. My other hand clutched his broad, muscular back, steadying myself as I learned to accommodate the enormity of his manhood. The pain eased a bit when I remembered to push down against his rod, dilating my ass muscles. He rotated his hips, gently stirring inside me. I felt the line of hair dividing his six-pack abs tease the underside of my own erection. The pain was being drowned out by a more neutral sensation of fullness. Then the feeling of fullness was augmented by the triumphal realization that I'd done it. I had taken him to the hilt. Rich was in me! We were joined as one.\n\nI looked up to see his eyes smiling down on me. He kissed me again - just a peck on the lips - and nuzzled my neck. The stubble of his jaw sent little jolts of electricity through my body. His tongue extended to lick my earlobe, introducing me to a previously unknown erogenous zone. I pressed up against his abdomen to maximize the pressure on the underside of my cock. I could feel myself leaking pre-cum. My cock felt almost impossibly hard. So did Rich's, sheathed inside me. He slowly withdrew, almost all the way, and then sank back into me. Suddenly, I was on the brink of ecstasy. The thing that made the moment so delicious was the mind-blowing sensation of connection. It wasn't that he was in me; it felt like he had become a part of me - and me a part of him. His cock felt like it was the internal root of my own erection. My dick felt like the external manifestation of his rod at its root. I hope this makes sense. It was an experience that was difficult to comprehend, let alone explain. \n\nBut that wasn't the best of it. As Rich began to slowly inch back and forth within me the ecstasy intensified. He was stirring within me a hunger, a wanton desire, an aggressive need I only then realized I possessed. I started to buck back against his cock. I gritted my teeth and lowered my hands to pull against the cheeks of Rich's ass. \"Harder!\" I commanded. \"Fuck me!\"\n\nA model ROTC cadet, Rich had no problem following orders. He started thrusting in and out. He dicked me long, deep, fast, slow, shallow, then deep again. He raised up on his arms for leverage, panting and grunting. Meanwhile, I was moaning in pleasure. Thank God the cinderblock walls of our dorm building provided good sound insulation; otherwise, the entire floor would have heard us. I tilted my head forward and let my tongue trace a path through the hair that feathered over Rich's collarbones. He scooted upwards. I lapped up the rivulets of perspiration that flowed down his chest. He hunched higher above me, pounding into my ass as my lips encircled and sucked his nipple. \n\n\"I'm so fucking close,\" he panted. So was I. I needed him so bad. I'd never felt such intense desire. \n\n\"On your back!\" I ordered as I shifted his weight and rolled on top of him. Rather than breaking our connection this move cemented it. I was above him now. He was thrusting up and I was using my thighs to piston my ass up and down. My dick was waving over him, achingly hard and sprinkling droplets of pre-cum across his midsection. That's when time stood still. There was so much tension, so much pleasure. I hung by my fingernails on the edge of the abyss. I'm not sure if it lasted seconds or several minutes, but, unfortunately, it couldn't last forever. \n\nWhen I saw Rich's meaty paw encircle my rod and felt him squeeze, I knew this ride had reached its climax. I opened my mouth, breathless and silent as I felt my balls convulse. Long ropes of cum erupted from my cock, painting lines across Rich's chest. Each burst caused my ass to clamp down on his hot iron rod - now not only thrusting but also throbbing as he delivered deep within me his molten load. I could feel him surging inside of me, filling me with his warmth and wetness. It's a moment I'll never forget.\n\nExhausted, I collapsed down on top of him. His dick still firmly lodged in my rectum, as we embraced and made out I could feel his cum start to ooze over my asslips. This caused my own half-hard dick to twitch in the hairy, semen-soaked swamp of Rich's abs. As I nuzzled his neck I closed my eyes to say a silent prayer of thanks. I had never before felt so connected to someone. I had never felt such passion. I had never felt such love.\n\nI also, apparently, had never felt so tired. The next thing I knew it was morning. I heard the shower running, then stop. I could hear Rich pull open the shower curtain and reach for a towel. I turned to face the half-open door to his bathroom. A long second later, Rich emerged with a funny grin on his face. His was wearing the jockstrap that had been hanging on the inside doorknob. He stood before me, planted his feet a good eighteen inches apart, and lifted his arms to flex. There he was, in all his hairy, muscular, goofy, and utterly majestic glory - imitating the pose of the stud featured on the inside back cover of the Undergear catalog. \n\nRich and I made lots of memories during the rest of that school year, but now, more than 25 years later, when I think of him I picture him at that very moment, big and beautiful and bulging before me.\n\nHe was my first love but not my last. It was painful to see him graduate and head off to his Officer Basic Course, leaving me behind to finish college. We continued as a couple for a while, but distance takes its toll. We parted ways, still on good terms, while he was in flight school. He made the decision. He cried when he told me. He said it killed him to break up with me, but it was in my best interest. He was an Army officer. There would be deployments and frequent moves. And it was still the '90s, the era of Clinton's Don't Ask/Don't Tell. There was no way we could be open about our relationship.\n\nWe've kept in touch over the years. He's remained a good friend. He coached me through several subsequent relationships, including an unsuccessful one with my now ex-husband. Rich is still single after a successful Army career that took him from commanding Apache helicopters to serving as an Army chaplain and ordained Episcopal minister. With the Army behind him and my ex-husband out of the picture, we're both starting over. \n\nThat's why I'm excited that he's agreed to come for a long visit. If the timing and circumstances of life worked against us back then, then maybe things can be different now. That, at least, is my hope. I never wanted to admit it to myself during my marriage, but now I'm ready to face facts. I've sorted through lots of relationships with lots of different men, but not a single one has even come close to Rich. He's my one true love.\n\n*****\n\nI hope you've enjoyed this story. It was a pleasure for me to write - mixing fact and fantasy to make things turn out exactly as I would have wished. What parts did you enjoy the most? How well did I bring the reality of me and my friend to life? Please share your comments and feedback!"
    ],
    "authorname": "HairyJacques",
    "tags": [
        "gay college",
        "gay first time",
        "gay hairy",
        "gay male",
        "gay military",
        "gay oral",
        "gay sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/male-sorting"
}