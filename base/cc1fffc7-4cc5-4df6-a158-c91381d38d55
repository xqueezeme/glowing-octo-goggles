{
    "title": "That's What Friends Are For",
    "pages": [
        "Author's Note: Welcome to a story that is full of firsts for me. Not only is this my first time entering the Earth Day contest, but it's my first time in the first time category! Now if this is the first time you've read one of my stories, here is my usual disclaimer. I believe a good story is like foreplay, a way to build the heat and make the finale all that much stronger so be warned I take my time, but like to think it's worth it in the end. One more note, A big thank you to Ladyver for editing the story you're about to read. Hope you enjoy it. Lovecraft68\n\n*\n\n\"Jeez, people are pigs!\" Sam said from behind me.\n\n\"You can say that again,\" I replied, looking at a dirty diaper that was stuck in a bush. \"Christ, I'm glad I'm wearing gloves!\"\n\nGingerly pulling the diaper from between the branches, I dropped it in one of the two large green trash bags I was dragging along with me. The first was for cans and bottles, the second for any other garbage I found.\n\n\"What was it?\" Sam asked. \"Was it grosser than the nasty sandwich I found that almost made me puke?\"\n\n\"It was a diaper.\" Turning to her, I grinned. \"With nasty clumps of shit, so I think I'm ahead in the gross competition.\"\n\nSam straightened up from the bush she was behind and shrugged. \"Okay, I'll give you that one, but only because we're not done yet and I have a feeling I'll find worse.\"\n\n\"We'll see.\" I pointed. \"Remember, winner pays for the next horror movie we check out.\"\n\n\"Then save your money. There's a new crappy-looking zombie thing out next week.\" Sam laughed. \"And this time I want a large popcorn, no cheaping out, Justin.\"\n\n\"If that's the case, I won't go easy on you. I want a slushy and a box of duds.\"\n\n\"You're dating a dud, why would you want a box of them?\" Sam grinned, waiting for me to take the bait.\n\nUnable to help it, I said, \"At least I'm dating someone. When was your last date?\"\n\n\"I'd rather be alone than with a bitch,\" she replied, removing her Red Sox cap and wiping the sweat from her forehead.\n\n\"Jen's not a bitch. Why do you always call her that?\"\n\n\"Because she is. Maybe you'd see it of you'd stop thinking about her tits.\"\n\n\"What can I say?\" I laughed. \"She has nice tits.\"\n\n\"I know. In fact, everyone knows. It's not like she doesn't flaunt them.\"\n\n\"If you had them, you'd flaunt them.\" I smirked, knowing it was a touchy subject.\n\n\"I have tits!\" Sam snapped, biting on my joke. \"I just don't strut around showing them off.\"\n\n\"I know,\" I said, pointing to the pink Red Sox T-shirt she was wearing. \"Is that your brother's? It looks too big.\"\n\n\"I dress comfortable, okay?\" She walked around the bush, dragging her trash bag behind her along with the backpack she'd brought. \"I don't need to show what I have.\" She gave her head a toss, sending her long brown braid whipping around. \"If a guy wants to go out with me, I want it to be because he likes me, not because he likes my ass.\"\n\n\"You have an ass in those jeans? I could have sworn you left it at home.\"\n\nSam looked at the back of the baggy black jeans she was wearing.\n\nI laughed. \"What are you doing, looking for it?\"\n\n\"Why are you being a dick to me today?\" she asked, her dark brown eyes flashing. \"I'm spending my Saturday helping you score brownie points for that little snot, and you're making fun of me!\"\n\n\"Whoa!\" I put my hands up defensively. \"Hey, Sam, I'm only busting your chops. Since when did you get so sensitive?\"\n\n\"I am not defensive.\" She stopped in front of me and dropped the bag \"But I get a little tired of the jokes sometimes, and not just from you.\" She sighed. \"At least you don't call me a dyke.\"\n\n\"I'd never say that,\" I told her, coming around the bush. \"Who said that about you?\"\n\n\"Those idiots, Joe and Dave.\" Sam waved her hand. \"I should just look at the source and let it go.\"\n\n\"I work with Dave. Next time I see him, I'll tell him to cut the shit or I'll kick his scrawny ass.\"\n\n\"I don't need you sticking up for me,\" she told me. \"Those two idiots are like Beavis and Butthead. They don't matter.\"\n\n\"Matters if you're mad.\"\n\n\"I'm just in a mood, I guess, but what matters is you'd stick up for me.\" She rolled her eyes. \"God knows my brother wouldn't.\"\n\n\"Hey, that's what friends are for, right?\"\n\n\"Right.\" Sam looked around the stand of trees in Carson's Park I had volunteered to clean as part of Jen's Earth Day weekend. \"And I guess they're for helping to pick up bottles and skeezy trash, too.\"\n\n\"Yeah.\" Removing my sunglasses, I pulled my shirt up and wiped my face. \"I appreciate it, Sam. Tell you what, I'll treat next movie.\"\n\nShe raised her eyebrows. \"Large popcorn?\"\n\n\"Large popcorn, and I'll even splurge for two drinks instead of two straws.\"\n\n\"Ohhh, treat me like that and this girl will get spoiled!\" Batting her long lashes at me, she widened her big brown eyes. \"Thank you for my own personal soda, Justin! Can I have snowcaps, too?\"\n\n\"Now you're pushing it.\"\n\n\"Please?\" She pushed her lips out in a pout.\n\n\"That's not fair,\" I told her.\n\n\"Please, oh, please?\" She then made her lower lip tremble, and I sighed dramatically.\n\n\"Yes, you can have snowcaps, but we share those.\"\n\n\"Deal!\" She clapped her gloved hands and jumped up and down like a little kid.\n\nI laughed. \"You're too cute.\"\n\n\"Really?\"\n\n\"Yeah, you remind me of my little cousin when you do that.\"\n\n\"Oh.\" She frowned. \"I guess there's worse things.\"\n\n\"Well\"\u2014I put my hand up, knowing I'd made a mistake\u2014\"you're cute in other ways, too. You're pretty.\"\n\n\"Think so?\" She looked at me dubiously.\n\n\"Oh, yeah. You're real cute. You know, like girl-next-door cute.\"\n\n\"I'll take that.\" She smiled.\n\n\"Yeah, and a lot of guys like that\u2014not hot, but cute.\"\n\n\"You need to learn when to shut up, Justin.\"\n\n\"Sorry, I meant\u2014\"\n\n\"Want to take a break?\" interrupting me. \"We're about halfway through. The playground will be a lot quicker, so how about lunch and we finish up in one shot from here?\"\n\nI slapped my forehead. \"Lunch? Shit, I didn't think of that! You want to take a run down to the\u2014\"\n\n\"I figured you would.\" Walking past me, Sam sat underneath a large tree and unzipped the backpack, pulling out a yellow can and tossing it to me. \"Yoo-hoo?\"\n\n\"My favorite!\" I caught the can and popped the top as I sat facing Sam under the tree.\n\n\"I know,\" she said, producing a plastic container with two sandwiches in it. \"Just like I know Pastrami and cheese is your favorite.\"\n\n\"Spicy mustard?\" My mouth watered as I took the container.\n\n\"But of course!\"\n\nAs Sam pulled out a bottle of Mountain Dew and a banana, I removed my work gloves and chugged half the Yoo-hoo.\n\n\"Wow, these go down too easy,\" I said.\n\n\"Kind of like Jen,\" Sam replied, kicking her sneakers off and stretching her long legs out in front of me. \"And go ahead and finish it. I brought you two.\"\n\n\"Jen's not a slut, Sam. I told you we've been dating six months and we haven't done anything but make out.\"\n\n\"Didn't say she went down on you,\" Sam said, just loud enough for me to catch it.\n\n\"Really, Sam?\"\n\n\"Really, Justin.\" She paused, peeled the banana, and shoved it in her mouth, bobbing her head up and down as if she were blowing it. Then she winked. \"Just like that to anyone that pays attention to her.\"\n\nI didn't answer right away. The sight of Sam easily slipping most of the banana down her throat had caught me by surprise. Not that it should have. Sam not only dressed like a guy, but also had a dirtier mouth and mind then most of the ones I knew. She ruined the image by biting the tip off.\n\nCollecting myself, I went on the defensive. \"Look, Jen's like me. She was raised to take sex seriously and that's why we haven't done anything yet. She thinks you should only have sex once you really care about the other person.\"\n\n\"She's a very caring person.\"\n\n\"Knock it off, Samantha!\" She was pissing me off at this point.\n\n\"Samantha?\" She grinned. \"You never call me that. Truth hurt?\"\n\n\"Why do you care? You've done nothing but rag on Jen since I started going out with her. You say she's stuck up and slutty and you barely know her. What's your problem?\"\n\n\"That I care about you and think you're getting used.\" Sam took the last bite of the banana and tossed the peel into her backpack. \"Look at today. She's this big green freak and says Earth Day is such a big deal, but you're here and where is she?\"\n\n\"She's in Jamestown cleaning up the cove. She doesn't have a lot of people helping, so she spread us out.\"\n\n\"Yeah, she's spreading all right. My sister says her ex-boyfriend is part of the cleanup. I think he's ...\" She snapped her fingers. \"At the beach. You can think what you want, but there's no way in hell she isn't fucking Rob and who knows who else. She's using you, Justin, but I guess you'll have to find that out yourself.\"\n\nI stared at her and frowned. I had heard Jen's ex, Rob, was sniffing around, but whenever I mentioned it she got mad and said I was acting jealous and shouldn't worry. When I'd pushed, Jen had brought up Sam and how much time I spent with her and how she wasn't jealous. \n\nWatching Sam unwrap a peanut butter and jelly sandwich and begin eating, I recalled how I had told Jen that Sam and I had been best friends since middle school, and that we'd never been more.\n\nJen had insisted that was because that's how I saw it, claiming Sam had a thing for me, that I was too na\u00efve to see it. Just like Sam was telling me I was na\u00efve thinking Jen was waiting for the right time with me.\n\nI was well aware I tended to take people at face value and was a little too trusting; but in these cases I was right. Sam was a good friend and had zero interest in being anything but, just as I had no interest in her as a girl.\n\nI was also sure Jen wasn't fucking around. Unlike me, Jen had been with someone before, and most likely more than just Ron. Then again, I was the only person my age I knew who hadn't been with anyone. \n\nBut after my mother had discovered my asshole father had been fucking anything in sight for years, she raised me to believe that sex should be special the first time, with someone who meant something. \n\nI not only agreed with her, but swore to her that I would be a better man than my father and would wait until I met someone special. Not that it had been easy. Although I'd never met anyone who I had a serious interest in until Jen, there had been a few girls who'd made it more than clear we could have some fun.\n\nSometimes I wondered if I wasn't being an idiot waiting, passing up on some chances for a good time. But my mother was thrilled with my promise to make my first time meaningful and that had pretty much trapped me into keeping my word. There were times I thought I could just fool around and she would never know, but that would make me a lying dog no better than my father.\n\nHow many women you screwed didn't make you a man; keeping your word to someone you loved did. And I swore to keep my vow and not be a dog in heat. I did, however, know enough not to tell anyone. That didn't mean I had to advertise the fact I was a virgin, though. Any girl who had been interested in just a good time, I made up the excuse I was dating someone. And I was way too smart to tell any of the guys. \n\nSam knew because Sam pretty much knew everything about me, just as I knew more about her than her own brother and sister. We'd met in fifth grade when we'd been put together as lab partners and had immediately become good friends. We both enjoyed the same books, movies, and video games, and had the same laid-back personalities. Where we were different was when it came to what people thought about us.\n\nSam pretty much marched to the beat of her own drummer dressing like a tomboy and watching football and bad horror movies while spending more time around me and my friends than the other girls. \n\nI, on the other hand, wore brand name clothes and took a lot of care with my appearance. Enough for Sam, along with my mother, to teasingly refer to me as a 'pretty boy' who generally tried to put myself out there as cool.\n\nI looked down at Sam's legs stretched out in front of me. Her feet were bare, and my eyes lingered on the butterfly tattoo on the top of her left foot. I let my gaze wander up her long legs, which I had to assume were under the baggy jeans. While she looked to her left watching the kids who were running around the small playground, I focused on her chest. \n\nThere was nothing visible in the loose shirt. Not for the first time, I wondered what she had under there. I wasn't interested in the sense that I wanted her, but in the years I'd known her I'd never seen Sam wear anything tight or even slightly revealing. \n\nShe never attended any school dances and even when we went swimming a few times she wore shorts and a T-shirt. That was pretty much the only time I'd seen her legs, which although on the slender side, looked pretty good.\n\nI went back to looking at the tattoo. It was colorful and in what I considered a sexy spot, yet she rarely even wore sandals to show it off. Her toenails were painted black, and I noticed a silver ring around her middle toe.\n\nSam had once commented she had a boyfriend who liked her feet. I idly wondered if that was why she had gotten the tattoo and wore the ring. Not wanting to look like I was staring, I glanced up.\n\nSam had finished eating and was resting her head against the tree with her eyes closed. I'd meant what I said; she was cute. Sam never wore makeup but didn't seem to need to. Her skin was smooth and her cheeks had a natural color to them, and she had the longest eyelashes I'd ever seen. \n\nThose lashes, along with her huge brown eyes, she used to good effect on me, as well as her older siblings and her father. Her mother had the same eyes and would always tell Sam to knock it off, that she had created that look and was immune to it.\n\nThe use of her big eyes was usually coupled with her pushing her lips into a little-girl pout. Sam's lips were full, and I'd once overheard a couple of guys saying she had blow-job lips. I flashed back to a couple of minutes ago when she made a show of blowing the banana and how her lips had looked wrapped around it. I shook my head.\n\nTaking a bite of the sandwich, I looked back down at her foot, wondering what the hell a guy would do with her feet. I moved away from that image, thinking things were getting bad when I was starting to think about Sam's sexual escapades.\n\nBut all that would change, and soon. A smile crossed my face at the thought of what I had planned for tomorrow night. Mom and her boyfriend Bill were leaving this afternoon to go visit friends in New Hampshire and wouldn't be home until Monday. \n\nJen had been hinting that she was getting comfortable enough to want to sleep together, and when I mentioned my mom would be away for the weekend, she asked if I wanted company.\n\nJen, who was pretty much Sam's opposite was blonde with baby-blue eyes. Whereas Sam was tall and a little on the skinny side, Jen was short with a pair of huge tits that, as Sam had said, she did flaunt. Her ass was damn fine too and she wasn't shy about showing it off. \n\nI couldn't wait to get a look at those tits, to feel them, suck on them, and maybe even get my cock between them like in the dirty movies I got off to every night.\n\nWell, tomorrow night I'd be getting off with the real thing. The idea of having Jen naked in my bed caused my cock to swell. At the same time, a twinge of nerves fluttered though my stomach. Jen didn't know it was my first time.\n\nI supposed I should have mentioned it, but she had experience and I didn't want to look like an idiot. But now that it seemed the time had finally arrived, I was going to be nervous with only porn videos to go by and with a girl who'd done it before. What if I went off quick or didn't get her off quick enough? What if\u2014\n\n\"Why are you staring at my foot?\"\n\nI looked up. \"Huh?\"\n\n\"You keep looking at my feet.\" Sam wiggled her toes. \"Something wrong with them?\"\n\n\"No, they look fine.\"\n\n\"You think my feet are fine?\" She laughed. \"You have a foot fetish?\"\n\n\"Of course not!\" Not wanting to be teased, I turned the conversation in another direction. \"So why do you do that?\"\n\n\"What?\" She frowned, looking at her feet. \"The tattoo?\"\n\n\"Yeah, that and the nails and the ring. You hardly ever wear sandals, even when it's hot, so what's the point?\"\n\n\"The point is I know it's there and I like how the ring looks.\" Sam shrugged. \"I do it for me, not anyone else.\"\n\nI grinned at her. \"What about foot boy?\"\n\n\"I didn't get the tattoo for him. I had just gotten it when I met him.\" She winked. \"But he said it made a hell of a bull's-eye.\"\n\n\"Eww!\" I scrunched my face up. \"TMI!\"\n\nSam giggled. \"But anyway, it's about what's on the inside, Justin\u2014not the outside.\"\n\n\"I get that with feelings and stuff, but why does it matter with looks?\"\n\n\"Because vain people are shallow people.\" Sam reached out and put her hand on my leg. \"But you're different, though. You dress like the cool jerk, but you're a great guy.\"\n\n\"I don't dress like\u2014\"\n\n\"Bullshit!\" She pointed at my sunglasses. \"How much were those things?\"\n\n\"A hundred, but they're Foster\u2014\"\n\n\"Mine came from the dollar store and they do the trick.\" She pulled on my shorts. \"What brand are these?\"\n\n\"They're\u2014\" I started, but she continued.\n\n\"And that's an Abercrombie and Fitch T-shirt you're wiping your sweaty face on. What was that, thirty dollars? And you're wearing it to clean up a park.\" Pointing at her shirt, she said, \"This shirt was ten dollars and the jeans were the same on sale. My whole outfit with my sneakers is less than your damn shorts.\"\n\n\"It shows.\" I smirked.\n\nThe look on Sam's face told me I'd made a mistake, and she quickly made me pay for it. \"You would never have made that crack before you started going with Jen.\"\n\n\"Oh, come on! I'm just busting your chops.\"\n\n\"Oh, that's all? Okay, how about this one? I dress like a poor tomboy and you're mister GQ, pretty boy, but which one of us is still a virgin?\"\n\n\"What the hell kind of crack is that?\" I put the sandwich down. \"What's that got to do with anything?\"\n\n\"Well, you think I'm so plain and dress so crappy, but I've had a couple of guys who had no problem wanting to get to know me better.\"\n\n\"So what? I've had chances, but I promised my mother I'd try to do it the right way. You decided to spread your legs when you had the chance.\"\n\n\"Are you saying I'm a slut?\"\n\n\"Of course not! You know better than that. But you know that's a touchy subject with me.\"\n\n\"But you never think anything bothers me.\" Sam waved her hand disgustedly at me. \"You really do treat me like a guy.\"\n\n\"I ... I treat you like a friend. Since when do I need to treat you all girly?\"\n\n\"You don't, but then again you've never treated a girly have you?\" She raised her eyebrows after that one, as if daring me to top it.\n\n\"Guess you got me on that one,\" I said with a casual shrug. \"But tell you what, how about you ask me again after this weekend?\"\n\nSam's eyes narrowed. \"What's that supposed to mean?\" \n\n\"It means, I just might...\"\n\nMy phone went off and I couldn't help smiling when \"You don't know You're Beautiful\" blared from it. It was Jen. The timing couldn't have been better.\n\n\"Like she doesn't think she's beautiful.\" Sam muttered\n\n\"Hey, sweetie.\" I bit my lip not to laugh at the disgusted look on her face.\n\n\"Hey, hot stuff!\" Jen chirped in my ear. \"How goes park detail?\"\n\n\"Halfway,\" I told her. \"It'll be done in a couple hours.\"\n\n\"Wow! That was quick!\"\n\nHopefully she wouldn't be saying that in my ear in bed, I thought, but said, \"I have some help.\"\n\n\"That's great! More the merrier! I'm surprised you could rope any of your friends into getting up on Saturday morning.\"\n\n\"They didn't. Sam's helping me out.\" Even as I said it, I wondered why I brought her up.",
        "\"Sam?\" Jen laughed. \"I can see that. She doesn't look like the kind of girl who minds getting her hands dirty. Probably didn't even have to worry about what clothes to wear. She looks like that every\"\n\n\"Jen.\" I turned around, putting my back to Sam and speaking lower. \"I've told you about that. Why do you always pick on her?\"\n\n\"Why do you always defend her?\"\n\n\"Because she's my best friend.\"\n\n\"Men and women can't be best friends. One of them always ends up wanting it to be more.\"\n\n\"Wise for your eighteen years,\" I told her.\n\n\"It's true.\" She sighed. \"You hang with her because she's like a guy, but without the attitude, and she hangs with you because she ... well, she proves my point.\"\n\n\"That again? Come on, Jen. I've told you Sam's just a buddy.\"\n\n\"You see it that way. But anyway, thank you so much for helping me with this, Justin! Earth Day's in the middle of the week, so this Saturday is really the best chance we had to get a lot done.\"\n\n\"No problem.\" Sensing movement, I looked over my shoulder to see Sam slipping her sneakers back on. \"So, what are you doing tonight? My mom is leaving in a few hours.\"\n\nSam got up and putting her Red Sox cap on backwards she grabbed her trash bag and headed for another clump of bushes leaving the backpack behind.\n\n\"Well, seeing it's going to take a good part of the day up here, we thought we would make the most of it and throw a little party, make a fire, hang out, have some fun.\"\n\n\"Really?\" Recalling Rob was there, I felt more than a twinge of unease. \"How about I come up?\"\n\n\"Well ...\" Jen paused, and the twinge grew into a twisting sensation in my stomach.\n\n\"Well, what?\"\n\n\"Look, Justin, sometimes I just want to hang out with friends and, you know, not always be with someone.\"\n\n\"What's that supposed to mean?\" I said, raising my voice and glancing over at Sam to see if she had noticed, but she was on her knees pulling beer bottles out from underneath the bushes.\n\n\"Hey, don't get mad, baby,\" Jen purred. \"I just want to chill with some people I haven't seen in a while, okay?\"\n\n\"I just figured\u2014\"\n\n\"Now, tomorrow, on the other hand,\" she said, giggling, \"rumor has it my hot boyfriend is going to have his place all to himself until the next day. Hmmm.\"\n\nMy jealousy was quickly replaced by another twinge, but this one lower than my stomach.\n\n\"You know, Justin, you've been so sweet about waiting for me, I think it's time you and I got a lot closer.\"\n\n\"You do?\" It wasn't exactly smooth, but I couldn't think about anything but Jen in my bed looking up at me with those big blue eyes, her naked body moving against mine.\n\n\"I do, baby. I have some things to do in the morning, but how about I come over around three?\"\n\n\"Yeah, that sounds great.\"\n\n\"I'll see you then, baby.\" Jen released a sweet sigh into the phone that caused my cock to throb and added, \"I'm going to so make it worth you waiting.\"\n\nJen had no idea how long I had really waited. Grinning like an idiot, I said, \"I'm sure you'll more than make it up to me.\"\n\n\"Oh, I will, and I have to thank you for your help today, too, so I'll have to find something fun to wear, and come up with a proper way to show my appreciation.\"\n\nI was hard as a rock from just her talking about coming over and had to adjust my shorts around my aching dick.\n\n\"Justin, speaking of your help ... You know there's a little competition going on at school for which team can do the most clean-up this weekend?\"\n\n\"Yeah.\"\n\n\"Well, seeing you're going to get done so early, would you mind doing that little playground over on Smith Street?\"\n\n\"Um, well, I was thinking of\u2014\" I started.\n\n\"Please, baby? I'll be ever so grateful.\"\n\n\"Well, maybe\u2014\"\n\n\"I'll give you a special treat.\" She gave that cock-stirring giggle again.\n\n\"Treat?\" I repeated. Please mean what I think you mean!\n\n\"Sure, I figure if you're going to clean for me I should get all dirty for you.\" She sighed. \"I've been thinking about giving you a nice blow job for awhile now, would that be a good reward?\"\n\n\"I\u2014hell, yeah!\" I exclaimed, not caring if I sounded like an excited little kid.\n\n\"Yeah, baby, you want to feel these lips before those lips?\" Jen laughed. \"I do like to suck cock. Hopefully you'll return the favor, you know, a kiss for a kiss.\"\n\n\"That would only be fair,\" I said, trying to sound more casual.\n\n\"I'm all about fair, Justin. But I just called to say hi and see how you were making out. I'll see you tomorrow.\"\n\n\"I look forward to it,\" I replied. But she had already ended the call.\n\n\"Goddamn.\" I put the phone back on the clip at my hip and forced myself to stand up.\n\nKeeping my back to Sam, I adjusted the bulge in my shorts and turning, I picked up the container covering the remaining sandwich and slipped it into the backpack. \n\nI slung it over my shoulder and I tried not to let my mind run wild with thoughts of what tomorrow would bring. A blow job before sex would get me off the hook for being quick. I wondered if Jen would swallow or spit, or maybe jack me off on her amazing tits.\n\nI took a deep breath, pushing thoughts of Jen from my mind. I needed to start helping Sam before she started bitching, and do it without an obvious hard-on. My mind already on oral sex, I thought of what Sam had done with the banana and caught myself wondering if she swallowed? The thing about Sam was that if I asked, she would probably answer me, and fairly crudely.\n\nSam got upset when she was considered one of the guys, but she brought it on herself with the way she dressed and her language. Some of my friends and I had debated whether she was a freak or all talk. Personally, my feeling was she would be a wild ride, but not with just anyone. Sam had been with two guys that I knew of and had dated both for months before putting out.\n\n\"Hey! Helping is one thing, but I'm not doing this shit by myself,\" she called out.\n\n\"That what you told your last boyfriend?\" I joked. A quick check showed my cock was under control. I turned around in time for her retort.\n\n\"Coming from the king of doing it himself?\"\n\n\"Laugh it up, Sam. You won't be able to make those jokes after tomorrow.\"\n\n\"What do you mean?\" She stood up from the bush she was in front of and wiped the dirt from her jeans.\n\n\"That was Jen. She's coming over tomorrow afternoon, and she's ready.\"\n\n\"She's always ready,\" Sam quipped, but she didn't smile. Instead, she turned serious. \"You sure she's not messing with you? She promised you last month, too, remember? Then all of a sudden she needed to do something with her parents.\"\n\n\"That was different. She told me after that she was just nervous. Nope, tomorrow is the day, Sam.\"\n\n\"Are you sure you want to with her, Justin? I don't think she's really into you.\"\n\n\"All that matters is I'll be into her.\" I laughed, walked over to the tree on my right and removed a beer bottle that was stuck in a small hole.\n\n\"Cute, that's just the attitude your mother doesn't want you to have.\"\n\n\"Don't give me that crap!\" She was getting on my nerves again. \"I've been with Jen for six months. She does care and she does want to.\"\n\n\"I'm sure she wants to, Justin. You're a good-looking guy who treats her better than she deserves. But I don't think she cares.\"\n\n\"Of course you don't. You don't like her.\"\n\n\"I don't think you care that much about her either.\"\n\n\"What?\"\n\n\"You like her, but do you love her? Every time you talk about her, it's about how hot she is, not about how sweet or nice she is. I think you're just getting horny and don't want to wait anymore.\"\n\n\"I care about Jen.\" I didn't say it with as much force as I should have.\n\nI did like Jen. I really liked her, but did I love her? Did I know what love was? Hell, I was eighteen. 'Really like' was close enough, and I'd been good long enough. Besides, maybe once we slept together it would take us to that next level.\n\n\"I don't believe you.\" Sam picked up a can and tossed it in the bag. Sighing, she walked over to me. \"Justin, I know you're tired of me teasing you, and I'm sorry.\"\n\n\"It's okay, Sam.\" I shrugged. \"That's what friends are for. We tease each other, you make virgin cracks, and I make tomboy jokes.\"\n\n\"Yeah, but the thing is I admire you for it. I really do.\"\n\n\"You do?\" I raised my eyebrows waiting for the punch line.\n\n\"I do. Not so much about the sex, but the fact you made a promise to be a certain type of man, and you are.\" She put her hand on my forearm. \"Forget about tomorrow. She's not the one.\"\n\n\"Oh, come on!\" I rolled my eyes. \"You know what, Sam? Maybe you're right that I'm not madly in love, but I do like her and we have been together a while and ... Maybe this will bring us closer.\"\n\n\"You should love the person first.\"\n\n\"Did you?\" I turned it around on her, \"Were you in love with that dink, Jack? Were you in love with Derek?\"\n\n\"No, but I never promised I would wait and ...\" She shook her head. \"I ... settled, for both.\"\n\n\"What do you mean?\" I asked.\n\n\"If we're going to talk, I'm getting in the shade.\"\n\nSam sat down under the tree I had pulled the bottle from and I joined her, sitting in front of her.\n\n\"Don't get me wrong, Justin. There was something there. Jack and Derek were both nice to me, but it wasn't love. But, well, I figured both times, what am I waiting for? A Family Channel romance? Some perfect guy? So I decided to just have some fun. I guess that's what it was because neither worked out.\"\n\n\"So you knew you didn't love them?\"\n\n\"Right.\"\n\n\"Then what the hell is your problem with me and Jen?\" I said, putting my hands out. \"You're being a damn hypocrite.\"\n\n\"I ... I guess you're right, but I never planned on it being that special, and at least those guys were serious with me. Jen is using you. It's a game to her. Why tomorrow? What's she doing tonight?\"\n\n\"She's ... going to stay up at the beach and hang with\u2014\"\n\n\"Rob. Justin, Jen's fucking around with him.\"\n\n\"You\u2014\"\n\n\"And I'm sure she will come over tomorrow and fuck you because she does want to, but that's all it would be and your first time will be sloppy seconds and\u2014\"\n\n\"Why the hell do you care so much?\" I yelled at her. \"Jesus Christ, Sam, give it a fucking break and just be happy I'm happy!\"\n\n\"I care because you're too good for that, Justin, and there's better than her out there. If nothing else, girls like Jen are a dime a dozen down the line, but you wanted the first time to be special.\"\n\n\"It will be.\"\n\n\"Then why not wait a little longer? Dump that bitch and\u2014\"\n\n\"I'm not waiting! Why the hell do you think I can do so much better? Never mind. I'm not starting over and wondering how long it would be with someone else.\"\n\n\"You can do better because you deserve better.\" Sam looked down at the ground and looked as if she were trying to decide what to say next. A first for her.\n\nRaising her head, she said softly, \"Justin, on the outside, you're a hell of a good-looking guy, especially like this.\" She tousled my thick black hair. \"I like your hair like this, not the way you put all that goop in it most of the time. And how many girls tell you how gorgeous those green eyes are?\"\n\nI grinned. \"Quite a few.\"\n\n\"And you played baseball and football.\" She put her hand on my arm and squeezed. \"You were a skinny little geek when we first met. Now look at you.\"\n\nI laughed and made a show of flexing my arm. \"I do work out.\"\n\n\"And it's pretty obvious, but\u2014\"\n\n\"You checking me out?\"\n\nI meant it as a joke, but Sam blurted out, \"Of course not! I ... I don't look at you like that. I was just trying to ... make a point.\"\n\nShe looked away, but not before I noticed she was blushing, which was definitely a first.\n\n\"Are you blushing?\"\n\n\"No! I'm hot!\" She removed her hat and wiped her forehead.\n\n\"Nah, just cute, remember?\" I joked.\n\n\"Trust me, Justin, I know I'm not hot.\" She sounded irritable.\n\n\"Hey! I was kidding!\"\n\n\"But Jen is, and for what it's worth? I never thought you'd be the kind of guy to go for just that.\"\n\n\"I like her for other reasons.\"\n\n\"Yeah, the two big ones hanging out of her shirt. You're different around her, Justin. When you're with me and Jim and the rest of our friends, you're you, and when you're with her, you're ... a conceited jerk.\"\n\n\"I am not!\"\n\n\"Whatever.\" Sam stood up. \"The point I was getting at was even though you're good-looking and popular, you're a sweet guy, and that's pretty rare at our age. That's the best part about you, and that's why you deserve better. Jen is just a shallow bitch.\"\n\n\"You're more than that and deserve more. Now, I've told you how I feel and you don't really care, but at least I said it. Hope you have fun tomorrow.\" She grabbed the bag and turned away from me, ending the conversation.\n\nI thought about defending myself, but why bother? Once Sam dug in, nothing changed her mind. She'd made a good point about how I really cared about Jen, but I wasn't about to cancel tomorrow. By her own admission Sam hadn't been gung-ho over the guys she had been with. She was fine with it. Why shouldn't I be?\n\nFor the next half hour, we moved about the bushes and trees in silence except for the sounds of bottles and cans clinking together. I felt like an ass. Sam was helping me out and I had treated her like crap. Granted, she had been badgering me, but what else was new?\n\nIn my mind, I heard my mother's voice and one of her famous overused lines, 'If it bothers you, it's because the truth hurts.' Mentally telling my mother to shut up, I glanced up from the bushes, relieved to see we had almost reached the end of the small stand of trees that bordered one side of the playground.\n\n\"Hey,\" Sam called out, \"looks like I earned that movie after all.\"\n\n\"I told you I was treating for you helping,\" I told her, glad she had spoken and still wanting to keep up our movie tradition.\n\n\"Doesn't matter, I'd win the gross-out anyway.\"\n\nTurning around, I watched her pick up a stick and poke at something in the grass.\n\n\"What is it, something dead?\"\n\n\"No, but not only pretty gross, but very fitting. Here!\"\n\nSam flicked the stick towards me and something landed at my feet. I looked down to see a condom, an obviously used condom.\n\n\"That is nasty! Why is it ironic? Because I'll need some for tomorrow?\"\n\n\"No, because it's just like you, used.\"\n\n\"Real nice, Sam.\" I forced myself to not raise my voice. \"Why do you keep saying that?\"\n\n\"Because it's obvious, Justin, and I can see what's right in front of me.\"\n\nBefore I could respond, she released a long sigh. \"Too bad you can't see what's right in front of you.\"\n\n* * * * *\n\nI lay on the couch dozing on and off while the Sox were getting their asses handed to them by the Blue Jays. It was only eight thirty, but after spending hours in the sun cleaning the parks, I was exhausted.\n\nWhen Sam and I finished Carson's, she had asked where I was off to. Knowing I was going to hear about it, I told her Jen had asked me to clean up the other playground. Sam gave me a 'what a sap' look, but to my surprise offered to help.\n\nThe park was pretty small. Because it was in the middle of a neighborhood, it wasn't the drinking, partying hangout Carson's was and only took us an hour. After that, I treated Sam to a sundae at Dairy Queen and then dropped her off at her house.\n\nHer mother was on the porch and invited me in, but I told her I needed to go home and shower. Fact was, in addition to being hot and tired, Sam's older sister Brenda was there, and she rode me about Jen even harder than Sam did. In fact, since I'd been with Jen, Brenda, whom I'd always gotten along well with, had been downright rude to me most of the time.\n\nI got home just before Bill picked Mom up and was happy to see how excited she was to be going away. She asked for the hundredth time if I was comfortable with her being with Bill and I told her I was thrilled for her. \n\nThat was no lie. My father was an asshole who my mother wasted way too many years with, and I was sure a lot of that time was for my sake. Bill was a good guy who seemed to go out of his way to do all the little things for Mom that Dad never did. For the most part he was the opposite of my prick father, which made him okay in my book.\n\nIn the span of the half hour we were home together, Mom asked several times if I was seeing Jen. I was pretty sure she suspected I was glad she was going away for reasons other than her happiness. That suspicion was confirmed when Mom hugged me goodbye and said, \n\n\"I'm proud of you, Justin. You're only eighteen but more of a man than your father ever was. He was already a dog in heat by your age. I don't know what I was thinking when I married him. But you're not like him, and I'm sure Jen sees that and knows how special you are.\" She paused and with a sly smile added, \"I think you've proved yourself a good man. Maybe it's time you were rewarded for it.\"\n\nAfter she left, I did a few things around the house she'd asked me to do to get them out of the way, showered, and threw on a pair of shorts and a T-shirt. I figured I would just chill tonight and watch some TV. Lying there, I replayed Mom's words and couldn't help smiling.\n\nI had no doubt that was Mom's green light to go for it, without being awkward about it. Her words had put me in a better mood. Because of my father's bullshit, I had promised Mom that I would be better and hold to values he never had, but she had officially let me off the hook.\n\nNot that I wouldn't have had Jen over tomorrow anyway, but Mom giving me her blessing removed any feelings that I wasn't doing the right thing.\n\nShe was right. I had earned it, sitting home whacking off while all my friends had already been getting laid and having fun. Even Sam, the indifferent tomboy who didn't give a rat's ass what she looked like or what people thought of her, had found guys to mess around with.\n\nI frowned at that last thought. It wasn't a good one, especially seeing how good a friend Sam was. I'd never once thought I was better than her or anyone else, but that was what it felt like. It also sounded like something Jen would say when making fun of other people, which she did frequently.\n\nSam had made that remark today, that I was different around\u2014\n\nI jumped when my cell rang from the coffee table in front of me. Grabbing it, I saw it was Jim, who after Sam was pretty much my closest friend.\n\n\"Hey, what's up?\" I answered. \"You got nothing better to do on a Saturday night besides calling a guy?\"\n\n\"Hey, Justin.\" He didn't sound happy. \"Hey, man, I need to talk to you.\"\n\n\"What about? I\u2014\" I stopped when I heard several people laughing and yelling in the background. \"Where are you?\"\n\n\"I'm at Mackerel Cove in Jamestown.\"\n\n\"Mackerel Cove? Hey, Jen was up there today.\"\n\n\"She still is. That's why I called you.\"\n\n\"What's going on?\" I sat up on the couch.\n\n\"Look, Justin, this really sucks for me because you know you're my bud, but I'd be an asshole if I didn't say anything.\"\n\n\"About what?\" I felt my stomach tighten. \"What's going on?\"\n\n\"Me and Josh ran into Jen and her friends up here when they were cleaning. She said if we helped out we could hang out with them at her uncle's house on the beach, and party. So that's where we are now and ... Justin, you know Rob is up here, right?\"\n\n\"I ...\" I took a deep breath. \"Jim, get to the point.\"\n\n\"Point is, Jen was drinking from the time we got to the house at five and she was out of control. Hanging on all the guys, dancing around. Shit, she took her top off at one point.\"\n\n\"Jim, are you fucking with me?\" Even though I was pretty sure I knew the answer, I had to ask.\n\n\"Justin, we've been friends since fourth grade. You think I'd joke about this?\"\n\n\"No, I ...\" I swallowed hard. \"What about Rob?\"\n\n\"Well, after she pretty much cock teased most of the guys there with some bumping and grinding. She pretty much gave him a damn lap dance, then grabbed a bottle of Captain someone brought, and the two of them went into the house.\"",
        "I closed my eyes and rubbed my throbbing temple. Jim was right; there was no way I would think he would lie to me about this.\n\n\"Hey, you there?\"\n\n\"Yeah,\" I said softly. \"She knows you and I are friends and she did it anyway.\"\n\n\"I said something to her and she said for me not to be a bitch and say anything.\"\n\n\"I can't believe this.\"\n\n\"Yeah, well, believe it, because then she told me if I was a good boy and didn't tell you, she'd hook up with me next weekend up here and she'd make it worth my while.\"\n\n\"She ... what?\"\n\n\"She was drunk, so maybe she didn't mean it, but you should have seen her, Justin. You never wanted to hear it, but I knew she was a little wild\u2014but man, there was a point I thought she was looking for a damn gang bang.\"\n\n\"Did you tell her you were calling me?\"\n\n\"No. I didn't want to get her going, but she made a couple of cracks earlier that she was going to be staying at your house tomorrow night. According to her, you've been good and she figured she would throw you a bone.\"\n\n\"Throw ... me ... a ...\" My temple was throbbing harder, my shock having turned to anger.\n\n\"I feel like a dick doing this over the phone, but I'm stuck up here with Josh and we're hanging at his cousin's tomorrow. I wanted you to know before she saw you tomorrow.\"\n\n\"I ... I don't know if I can say thanks,\" I said in disgust.\n\n\"I get it. But we're tight, Justin, and this is bullshit. Dude, I don't care how hot she is, I wouldn't fuck that slut with someone else's dick. Who the hell knows where she's been?\"\n\n\"I know where she won't be,\" I told him. As bad as I wanted to finally get laid, there was no way in hell I would get used like this.\n\n\"Good, and if she asks, you can tell her I told you.\"\n\n\"She'll figure it out. I'll call her tomorrow. I don't even want her coming here.\"\n\n\"Don't blame you.\" Jim sighed. \"Not for nothing, but a couple of us told you she was stringing you.\"\n\n\"I'm glad you told me, Jim, but I don't need I told you so right now, okay?\"\n\n\"That's cool man. I won't bring it up again.\" He laughed.\n\n\"What the hell is so funny?\"\n\n\"I was just thinking I won't have to say I told you so, and neither will anyone else. Fucking Sam will be telling you that for the next six months. She had that bitch pegged from day one.\"\n\n\"Thanks for giving me that to look forward to,\" I told him dryly. \"Thanks again, Jim. Now go try to have some fun.\"\n\n\"Yeah, I will. You be cool, bro, okay? She's not worth anything stupid and there are plenty of girls who have a thing for you. Hey! Justin, you should give Cindy a call! She's told you point-blank she wants to fuck around with you.\"\n\n\"Cindy's ... kind of slutty.\"\n\n\"So what? She wants to fuck, then go ahead and do it. Get yourself over this bitch and have some fun. You got her number, call her! You got the house to yourself. Imagine waking up to her in the morning!\" He whistled into the phone. \"I think she's home tonight, too, so give her a call.\"\n\nI pictured Cindy with her long red hair, perfect little ass, and perky tits, and recalled her telling me, \"Screw Jen, Justin. I'm a hell of a lot more fun than that stuck-up bitch.\"\n\n\"You know, maybe I will.\"\n\nI ended the call without saying goodbye and sat back against the couch. I couldn't believe Jen had done this to me. I wasn't sold on the idea that she and I would be in it for the long haul, but I hadn't thought I was going to be part of a rotation. \n\nI felt like a fucking loser. She was probably fucking Rob's brains out right now and planning on showing up here tomorrow like nothing had happened.\n\nI briefly considered letting Jen come by and fucking her anyway. I had been so close to my first time. At this point I would know it didn't mean anything, but it would still be sex.\n\nNo, I wouldn't let her laugh at me like that. Jim was right. Cindy had been flirting with me since tenth grade. One phone call and she would be on her way. Again, it would mean nothing. Cindy was a big-time party girl who just liked to screw around. But unlike Jen, Cindy would point-blank say all she wanted was fun, so it wasn't as if I'd be using her or getting used.\n\nUsed. How many times had Sam said that to me just today, never mind over the last six months? She'd been absolutely right. Now I felt even worse. I'd been shitty with her earlier. I rubbed my eyes. To my dismay, I felt tears. I could act mad all I wanted to, but I was hurting. I should have fucking known not to trust Jen. She was nothing like me or the rest of my friends.\n\nIn a way, I had been like my father, thinking with my cock\u2014not my head\u2014and acting like a jerk just to be with her, in the hope of eventually getting some. I'd have gotten some all right. Some of Rob. Some of whoever she had been with last night.\n\nI wiped my eyes again and realized I wasn't hurt as much as I was frustrated. I'd made good on my promise to my mother, and in all honesty I was proud that I had tried to do it the right way by finding someone I could say I loved, someone to make it special with.\n\nFor all the good it did me.\n\nI'd made the mistake of waiting for a girl who was only waiting to 'throw me a bone' while sucking everyone else's. Now I was back at square one.The thought of meeting someone, dating them for a while, and seeing if they were the one was out of the question. I was done with that shit. Time to do what Jim and all my other friends had been doing for the last couple of years. Get fucking laid.\n\nI scrolled through my contacts looking for Cindy's number, when I thought about Sam. Even though I was not in the mood to hear her tell me how right she was, I owed her an apology and wanted to get it over with.\n\nFact was, Sam was usually the first person I called when I was pissed off or upset about anything, and I was the one she always came to when she was in the same boat. I hated to dump stuff on her. But like she always said, that's what friends were for.\n\nShe answered on the second ring. \"Hey, lover boy, what's up?\"\n\n\"Listen, Sam, I\u2014\"\n\n\"You need help cleaning another park tonight to make sure you get your piece tomorrow?\"\n\n\"Thanks, Sam.\" I said, \"That's not what I needed to hear right now.\"\n\n\"Sorry, did I say that out loud?\"\n\n\"You say everything out loud,\" I said softly. \"But don't worry; I didn't call to ask you for anything.\"\n\n\"Hey, everything okay?\" she asked. \"You don't sound good.\"\n\n\"I'm not. I just got some bad news.\"\n\n\"Oh, shit! I'm sorry, Justin! I feel like a jerk! What happened, are you okay?\"\n\nThe sincere concern in her voice made me feel even worse. Not just for earlier today, but for doubting that she had been looking out for me all along with Jen.\n\n\"I guess. I mean it's nothing that serious, I guess.\"\n\n\"What is it?\"\n\n\"Jim called me. He's at a beach party in Jamestown. The same one where Jen is and ...\"\n\n\"And what?\"\n\n\"Sam, you were right. Jim said Jen was slutting around cock teasing all the guys and that her and Rob went into her uncle's house to fuck around.\"\n\n\"Holy shit! And right in front of him? \" \"Yeah. She ... she was even telling people she was going to do me tomorrow. She said she figured she would throw me a bone.\"\n\n\"Oh, wow. That's crappy, Justin. I'm really sorry.\"\n\n\"Are you? You called it all along.\"\n\n\"I ... I guess I'm not sorry in one way because this would have been worse if you found out after you slept with her, but I'm sorry for you.\"\n\n\"I'm sorry too, Sam. I'm sorry I was an ass today, and I ... I've been one since I met her.\"\n\n\"Don't be sorry. I know you were caught up with her. I think you were more focused on just trying to have the first time and getting to where you were thinking more about the act than the girl. But you don't owe me an apology.\"\n\n\"Yeah, I do. I guess I wasn't sold either and whenever you brought it up, I was a jerk and took it out on you.\"\n\n\"Hey, that's what friends are for. Besides, I rode you a lot about it.\" She paused. \"Justin, are you okay?\"\n\n\"I\u2014no, Sam, I'm not. I'm pissed off and I'm fucking humiliated! She's up there fucking around and telling people I'm next. Are you kidding?\"\n\n\"That's pretty low. I didn't think she was that bad.\"\n\n\"Jim said she was drinking and these are her friends, so who knows? But I\u2014\"\n\n\"It hurts,\" Sam finished. \"I don't blame you.\"\n\n\"And I'm fucking frustrated!\" I snapped. \"I've been good, Sam, I really have, and tomorrow was supposed to be the day!\"\n\n\"I know, but would you have wanted it to be with her and then you find that shit out?\"\n\n\"I ... you know what? Maybe I would have.\"\n\n\"What?\"\n\n\"Yeah, damn straight!\" I was letting the anger get the better of me. \"At least if I found out later I would have gotten laid!\"\n\n\"Yeah, but\u2014\"\n\n\"And I made a promise about the first time. Once I do it I don't have to think about that stupid promise anymore! I can just go have some real fun like I should have been doing!\"\n\n\"Justin, that promise is one of the things that make you such a good guy! You're a lot different than\u2014\"\n\n\"I don't want to be!\" I yelled. \"I don't want to be an asshole like my dad, but Christ, Sam, there's nothing wrong with having sex! I've missed out on a lot of fun, but know what? No more! I had my heart set on this weekend and I'm getting it!\"\n\n\"Whoa! Justin, you're not going to still let Jen come over, are you?\"\n\n\"Fuck her!\" I laughed humorlessly. \"No\u2014wait\u2014she's fucking everyone else! No, not her.\"\n\n\"Good, but then what do you mean you're still going to?\"\n\n\"I'm going to call Cindy and\u2014\"\n\n\"Cindy Reed?\" Sam gasped. \"Come on, Justin! She'll fuck anyone. May as well as be with Jen.\"\n\n\"She will fuck anyone. That's the point. And she's not like Jen because she doesn't pretend she wants anything except to get laid! She's all but jumped me before. I'm going to call her when I hang up with you and\u2014\"\n\n\"Justin, don't do that!\"\n\n\"Why the hell not? I'll get what I want. Cindy will get what she wants. What's the problem?\"\n\n\"Your first time shouldn't be that meaningless, not after how long you tried to make it a certain way.\"\n\n\"Fuck that! I tried the right way. I blew off girls who would have because I didn't think they would be serious, and then I get this close and it falls through. I waited long enough to keep my stupid promise to my mother.\"\n\n\"That promise was sweet, not stupid.\"\n\n\"Fine\u2014stupid, sweet\u2014pick what you want. My mother even made a crack that she knows I'm going to while she's away. I will. It just won't be with who she thinks it will be.\"\n\n\"You'll lie to her?\"\n\n\"I don't think she'll actually ask, Sam. Mom doesn't want to know the details. I'll tell her next week Jen was screwing around on me, then I'll move on and she won't care if I start dating around.\"\n\n\"Is that what you want to do, Justin? Go from girl to girl like your father?\"\n\n\"Don't pull that shit with me, Sam! I'm not my father! He used women. I won't be using anyone. I'll just hook up with girls just looking to hook up.\"\n\n\"Justin, please think about it first. The summer's coming and you'll be at the beach a lot, and we start PC in September. You'll meet a lot of new girls and\u2014\"\n\n\"I am not waiting!\" I shouted. \"I'm not waiting to meet someone, then dating until I see how I feel about them. That could take months! Fuck that!\"\n\n\"Justin, please calm down. You don't have to yell at me.\"\n\n\"I ... I'm sorry, Sam. I'm not mad at you, but I am mad, and worse, I feel like an idiot, and there's no reason to deny myself having some fun. Sorry if it disappoints you and what you want for me.\"\n\n\"I ... I'm not disappointed about Jen,\" she said quietly. \"And I'm not disappointed in you that you waited. I'm proud of you. Honestly, Justin, I'm upset with myself for not waiting for the right guy.\"\n\n\"And you could still be waiting. At least you had fun and know what it's like. Besides, you used to sit there sometimes and tell me how good Derek was to the point I would tell you to knock it off because you were aggravating me.\"\n\n\"Well, all the guys talked about their girlfriends. Why shouldn't I?\" Then she asked, \"Why did it bother you?\"\n\n\"Because I wasn't getting any! You acted like you never cared and you never even tried to impress a guy and you were doing it! Anyway, I called to say I was sorry and to let you know what happened and that you were right. Now I'm going to call Cindy and see\u2014\"\n\n\"Justin, please don't! Please?\"\n\nShe sounded more upset than I was, and with a sigh I asked, \"Sam, why the hell do you care? You cared about it being Jen and now I see why, but Cindy isn't going to break my heart. I know what I'll be getting, and that's laid.\"\n\n\"Justin, we're friends, right?\"\n\n\"You're my best friend, Sam. You know that. That's why I called. I ... I needed to vent and tell someone what happened.\"\n\n\"I'm glad you did. Now I am going to ask you a favor.\"\n\n\"I'm not waiting, Sam!\" I shook my head as if she could see me. \"No way.\"\n\n\"Justin, you're mad, hurt, and frustrated. You don't want to do it like this.\"\n\n\"I\u2014\"\n\n\"Let me finish. It's only nine o'clock and it's Saturday night. Neither of us have to work tomorrow, so how about I come over and hang out for a while?\"\n\n\"Sam, no offense, but you're not the girl I'm looking to spend tonight with.\"\n\n\"I ... I know that. You've made it clear I'm not that girl.\" She sounded put off, but kept going. \"Like I said, tonight you're angry, and you should at least calm down. So how about this? I'll come over and on the way I'll stop and grab some popcorn and a couple of cheesy horror movies. We'll just hang out and have some laughs.\"\n\n\"Sam\u2014\"\n\n\"I promise no 'I told you so,' no 'you should have known better,' and I promise I won't try to talk you out of Cindy.\"\n\n\"You won't? Not sure I believe that.\"\n\n\"I promise. If you want to talk about it, we will. If not, just you and me eating popcorn and making up dialogue for the crappy movies. Just like we used to do before you started dating Jen.\"\n\n\"Yeah, but\u2014\"\n\n\"And tomorrow, once you've calmed down, if you still want to call Cindy, then go ahead. But I'm asking you to at least take one night to think about it, and I'll keep you company so you're not stewing over it. How's that?\"\n\n\"I ... I don't know, Sam.\"\n\n\"Please, Justin? Consider it a favor to me.\"\n\nI closed my eyes and thought about it.\n\nShe had a point that right now I was pissed. If I did have Cindy over, it might not be as much fun as it should be. I'd waited this long. One more night wouldn't make a difference. After brushing her off for Jen so much in the last six months, I did owe Sam something.\n\n\"Okay. You're right. I'm probably better off with a friend than a slut right now.\" I laughed. \"Too bad I couldn't find a friendly slut!\"\n\n\"Yeah, too bad. Guess you'll just have to settle for me.\"\n\n\"I'm not settling,\" I told her, feeling much calmer. \"I'd rather spend time with you right now anyway, Sam. You've never let me down and I appreciate you coming over.\"\n\n\"That ... that means a lot, Justin. More than you know. You've helped me as much as I've helped you, you know.\"\n\n\"That's what friends are for, right?\" I laughed.\n\n\"That's right, Justin. Good friends will do anything for each other. I'll be there in an hour.\"\n\n* * * * *\n\nI looked up when I heard Sam's car pull up and getting off the couch walked over to let her in. When I opened the door, I was surprised to see Sam wearing the long black leather coat she had gotten for Christmas. \n\nGranted, it was April and it had cooled down quite a bit, but it wasn't that cold. The second thing that caught my attention was that her long brown hair, which was usually in a braid or a ponytail, was down.\n\n\"Hey, Justin!\" She held up a bag. \"I grabbed a couple of oldie, but not so goodies. I got the Alien Dead and Ghost House. I figured they would be good for some laughs. Got popcorn, too!\"\n\n\"Um, okay,\" I said as she pushed past me.\n\nI was surprised when I smelled perfume. I wasn't sure what brand it was, but it smelled pretty damn good.\n\nSam walked into the living room. At the sound of something clicking on the floor. I looked down. \"Wow, what's with those shoes?\" I asked, staring at the red heels she was wearing. They were high enough that I wondered how she could walk in them, and had straps that wrapped around her ankles.\n\nAs I stared at the shoes, it dawned on me I could see her calves. \"Are you wearing a dress?\"\n\n\"Maybe I felt like dressing up.\" She turned to face me. \"It is Saturday night, after all.\"\n\n\"But you're hanging out with me,\" I said, closing the door behind me and approaching her. \"Usually, you're dressed in\u2014\" I stopped and stared at her face, taking in her deep red lips.\n\n\"What's the matter?\"\n\n\"You're wearing make-up!\" In addition to her lipstick, Sam's eyelashes looked longer and thicker than usual, she was wearing eye shadow, and her cheeks had more color to them.\n\n\"So?\"\n\n\"Sam, were you going out tonight? Because if you were, you don't have to hang with me.\"\n\n\"Maybe I dressed up for you.\" She unzipped the top of the jacket, then slipped it off.\n\n\"Wow!\"\n\nSam was wearing a red dress that was not only low-cut enough to show cleavage, but calling the skirt short would be doing it a favor. The hem barely reached her mid-thigh. I wondered what she would do if she dropped something and had to bend over.\n\nThe dress featured black buttons in the shape of hearts that went down to her waist and staring at the top button, I couldn't help notice how tight the dress was, hugging her small breasts and pushing them up.\n\n\"Is that a good 'wow'?\" She gave me a big smile.\n\n\"I ... yeah, you look great.\" I told her and wasn't kidding.\n\nSam's smile widened. When she reached up and pushed her hair back over her shoulder, I noticed that her fingernails were painted the same shade of red as the dress.\n\n\"Thank you.\"\n\n\"Why are you wearing that?\"\n\n\"Oh, I don't know. \" She shrugged. \"Maybe I'm tired of your tomboy jokes and wanted to show you I can be a woman when I need to be.\"\n\n\"A woman?\" I laughed. \"You're eighteen.\"\n\nShe rolled her eyes. \"Justin, you are one step forward, two steps back, sometimes. You give me a compliment, then you say something stupid.\"\n\n\"Sorry.\" I pointed at the bag she had tossed on the couch. \"You want to give me the popcorn and I'll heat it up while you put the movie in?\"\n\n\"Not yet. I want to talk to you.\"\n\n\"I thought you said if I didn't want to talk we didn't\u2014\"\n\nWithout waiting for me to finish, Sam turned her back on me and walked out of the living room and down the hall towards my bedroom.\n\n\"Okay,\" I muttered.\n\nI followed her down the hallway, my eyes glued to the backs of her long legs, which although a little on the thin side had a nice shape to them. Not just her legs; the tight dress was clinging to what I had to admit was a pretty nice ass and she had a sway to her hips I'd never noticed before when she walked.\n\nSam opened the door to my room. When I entered, she was standing in front of my bed, staring down at the nightstand.\n\n\"Oh, candles!\" she said, picking up the lighter. \"I love candles.\"\n\nShe lit the two small candles and walked around to the other side of the bed to light the pair on my desk. \"You always have candles?\"\n\n\"Tonight was supposed to be, well, you know ...\" I sighed. \"I thought it would be a nice touch.\"\n\n\"They are.\" She pointed behind me. \"Shut the light off.\"\n\n\"Why?\"\n\n\"Because I like candlelight.\" She rolled her eyes. \"Why do you always ask questions about everything?\"\n\n\"I don't know.\" I hit the switch and turned back to see her standing in the dimly lit room.\n\n\"That's better.\" She nodded. \"Nice soft light. Very romantic, very intimate.\"\n\n\"Intimate?\" That was an odd word.\n\n\"Justin, come sit down. I want to ask you something.\"\n\nI walked over to the bed and sat on the edge of it expecting Sam to sit next to me. Instead, she stepped up to me so she was standing directly in front of me between my knees, looking down at me.",
        "\"What's up?\" I asked, trying to keep my eyes on her face and not her tits, which were right in front of me and more than a little distracting, especially with the scent of her perfume wafting from her chest.\n\n\"Okay, look. This problem you have. On one hand, I believe you should stick to your principles and your promise and wait and make it special.\"\n\n\"Here we go.\" I rolled my eyes.\n\n\"But I understand your point. You're frustrated and horny and tired of waiting.\"\n\n\"Exactly.\"\n\n\"So I have a question for you. If you had a choice, would you want it to be with someone who cares about you who'll make it special, or just get a piece of tail to say you got some?\"\n\n\"I don't have a choice. I\u2014\"\n\n\"Just answer the damn question!\" She put her hands out. \"Stop being a dink and just give me a yes or no. Which would you prefer if you had the choice?\"\n\n\"Okay.\" I shrugged. \"If I had the chance, I would rather it be with someone who\u2014\" I stopped.\n\n\"Who what?\"\n\n\"Fine. I'll sound like an idiot. Someone I have feelings for who cares about me.\"\n\n\"That's not being an idiot at all. That's just being\u2014\"\n\n\"A fool. And that question was stupid because I don't have that person, so there is no choice. I was a fucking asshole for waiting, and I am not going to\u2014\"\n\n\"Hey!\" Sam put her hands on my shoulders. \"That was not being an asshole. Justin, never be upset at yourself for being sweet. Never.\"\n\n\"Sweet?\" I rolled my eyes again.\n\n\"My sister is three years older than me and has dated a lot of guys. My friends have been dating as long as I have. Thing is, most guys are jerks who think with their dicks. Nice guys are hard to find, Justin, and you're one of them. Never be sorry for that. It's one of the things I love about you!\"\n\n\"Then, if I'm so great, why am I alone?\"\n\n\"Because you were never serious with anyone, and when you decided to be, it was with the wrong girls. Jen isn't the first popular little snot you've chased.\"\n\n\"Maybe you're right. Next time I'll look for more than looks and popular, but for now?\" I grinned. \"Easy is what I'm looking for.\"\n\n\"You said you would rather be with someone who cares.\"\n\n\"And I said there isn't anyone who cares and\u2014\"\n\n\"Justin, I'll be your first.\"\n\n\"So, I'm going to\u2014\" I stopped and blinked. \"Wait, what ... what did you just say?\"\n\n\"I said I'll be your first.\" Sam put her hand on my cheek. \"You know I care about you.\"\n\n\"You\u2014you're my friend.\"\n\n\"I'm also a young woman. I also know how important this is for you and don't want to see you ruin it with some slut after waiting this long.\"\n\n\"I\u2014you're fucking with me!\" I pushed her hands away from me. \"Is that why you dressed like that?\"\n\n\"Yes. I wanted you to see me as a girl, not your friend.\"\n\n\"You're screwing with me! I can't believe you would do this to me! What are you trying to do, get me to say I want you, then laugh at me or something?\"\n\n\"I would never hurt you, Justin.\" She said softly. \"You want your first time, and you want it with someone who cares. I care.\" She smiled. \"And when we've talked about it, you've admitted you're worried the girl would have done it and you haven't and you'd look bad. I've fooled around before and know you haven't. We'll take our time, and you would never have to worry about me making fun of you.\"\n\n\"Sam, you\u2014\" It dawned on me she was completely serious.\n\nMy mind raced.\n\nSam had been my best friend for years. Although I did think she was pretty and once in a while had a dirty thought about her, I had never really thought of her like that.\n\nOn the other hand, I'd never seen her dressed like this. She looked damn good and I knew she cared about me. I wouldn't have to worry about experience and\u2014\n\n\"I won't tell anyone,\" she added. \"No one needs to know, and after, if you want to go slut around, go ahead, but at least the first time will be the right way.\"\n\n\"Sam, I\u2014\" I closed my eyes and took a deep breath. \"I can't do this with you. I appreciate it, but ... we're best friends. I don't want to\u2014\"\n\nI opened my eyes to see Sam unbuttoning her dress. \"What are you doing?\"\n\n\"I'm going to help you stop thinking of me as a friend.\"\n\nSam reached the last button just above her waist and opened the dress to reveal she wasn't wearing a bra.\n\n\"Holy shit,\" I whispered at the sight of her bare breasts.\n\nSam wasn't big on top, but they her breasts were perky, perfectly round, and her pink nipples were erect and less than a foot from my face.\n\nSam let the dress drop to the floor.\n\nMy jaw fell with it.\n\nSam was now standing in front of me in just a red thong that consisted of red string and a patch of lace between her thighs. Speechless, my eyes roamed up and down her body. Sam was breathing fast, her small tits rising and falling with each breath.\n\nHer stomach was smooth and flat, and her hips flared out just enough to give her slender figure a nice shape. I looked at her soft inner thighs and with a start realized I was hard.\n\n\"Do you like them?\" Sam cupped her tits.\n\n\"I\u2014\"\n\n\"I know they're not that big.\" Sam's thumbs caressed her nipples. \"But they're all yours.\"\n\n\"They're ...\" I swallowed nervously. \"They're beautiful.\" Looking up at her, I said, \"You're beautiful.\"\n\n\"Really?\" To my surprise she blushed. \"You think so?\"\n\n\"Yes.\" My fingers trembling, I reached out and placed my hands on her hips. \"Damn, you look good.\"\n\n\"Don't look like your best friend now, do I?\"\n\n\"No, that's for sure.\" I stared at her nipples. \"Wow, they look good.\"\n\n\"So what do you say, Justin? You ready for your first time?\n\n\"I\u2014\" I looked down between her thighs, imagining what was beneath the thong. Sam was really offering herself to me.\n\nMy mind filled with images. Sam on her back, her legs spread, and me lying between them; her on her knees between my legs, her beneath me, her legs wrapped around me. My cock was now throbbing and I was starting to sweat.\n\nSam was still holding her and reaching for them, I whispered, \"Yes.\"\n\n\"Hold on.\" Sam caught my wrists, holding my hands inches from her tits. \"Just because we're doing this doesn't mean I want to feel cheap about it. You can have anything you want from me, but you're going to be good to me.\"\n\n\"Of course I will.\"\n\n\"And before you touch anything, you're going to kiss me.\" Sam tugged my hands up.\n\nGetting her meaning, I stood up. In the heels she was just about my height. As she wrapped her arms around my shoulders, she cocked her head, closed her eyes, and parted her lips.\n\nI hesitated for a moment, looking at her, thinking I hadn't just been saying it. She really was beautiful.\n\nSliding my arms around her waist, I pulled her close to me and kissed her. Sam moaned softly as our lips pressed together, and her hand slid up through my hair. She worked her lips gently across mine and as I returned the kiss, a feeling of unreality came over me. Was I really standing here making out with Sam? A topless, all but naked, Sam? \n\nI came back to reality when Sam's tongue flicked across my lips.\n\nSurprise caused me to pause and her fingers tightened in my hair as her tongue pushed against my lips again.\n\nI moaned when her soft pink tongue darted into my mouth and across my tongue. Sam was rocking back and forth, grinding her hips into me and I was acutely aware of her hard nipples pressing into my shirt.\n\nSam teased my lips with her tongue. When I went to kiss her, she pulled back, emitting a sexy little giggle that sent a shiver through me. I squeezed her tighter to prevent her from moving and kissed her again, but much harder than before and this time it was my eager tongue pushing between her lips.\n\nUnlike me, Sam didn't hesitate to open wide. As my tongue probed her mouth, she closed her lips around it and sucked gently.\n\nHer arms sliding down my back and pulled my T-shirt out of my shorts. I raised my arms over my head and Sam broke our kiss. She tugged the shirt over my head, and tossed it to the floor. Rubbing her hands up and down my chest and stomach, she sighed, \"Damn Justin, you feel good.\"\n\n\"So do you. Wow, Sam you can kiss! I\u2014\"\n\n\"Samantha,\" she said, putting her arms back around my neck. \"Call me Samantha tonight.\" When she hugged me, her bare tits pushed into my chest and I whispered, \"You feel good, Samantha.\"\n\n\"So do you,\" she purred, nibbling at my ear and running her hands up and down my back. \"So do you.\"\n\nSam's lips slid along my neck as her hands caressed my arms and shoulders. I decided to let my hands wander and ran my palms along the soft smooth skin of her back. When I reached her waist, I paused before sliding further south and grabbing her ass. \n\nSam giggled in my ear, then moaned when I gave her cheeks a hard squeeze. Sam's ass was small enough that her cheeks fit easily in my hands. I was surprised at how tight and firm it was. Of course, it wasn't as if I'd really groped too many girls, but damn, she felt good.\n\nSam's lips stopped exploring my neck and once again found my lips. This time . I eagerly accepted both her kiss and her tongue. Sam eased back slightly and grabbed my wrists. I let her guide my hands to her sides and when I used just my fingertips to caress her from her hips to the sides of her tits, she moaned.\n\nI wanted to fondle them, but when I reached them, felt my stomach flutter. \n\nSam was pretty much naked and we were making out hot and heavy, but for some reason part of me still thought this could stop. Did I really want to cross that ...\n\nThe decision was taken from me when Sam pressed my hands to her breasts. I gasped at how soft and firm they were.\n\nSam moaned in my ear when my palms rubbed across her hard nipples. \"Yes,\" she groaned. \"Play with them.\" When I caught her nipples between my fingers, she sighed, saying, \"Hmm, just like that.\"\n\nHer hot breath in my ear and the sexy purr of her voice spurred me on. Cupping her tits, I fondled them while stroking her swollen flesh with my thumbs. Sam kissed me again and this time all but devoured my lips as I caressed her nipples. Her tongue plunged into my mouth and swirled around dancing across mine and tickling the roof of my mouth.\n\nI slipped my tongue across hers and it occurred to me that there was a better place my tongue could be.\n\nSliding my lips from hers, I planned on targeting her nipple. Instead, as my lips worked down her throat, Sam let her head fall back and seeing the smooth skin of her neck, I kissed her. Sam sighed softly while I sucked on the soft skin just under her ear, and ran her hands over my chest, arms, shoulders as well as my back.\n\nShe was touching me with a lot more enthusiasm than someone just trying to help out a friend.\n\nI was struck by the thought\u2014one that now should have seemed obvious\u2014that Sam had thought about this long before tonight. Working my lips down her neck, and I began kissing the top of her chest.\n\nSam responded by grabbing my hair and pushing my head down. \"Don't tease me! Suck on my tits!\"\n\nThat was Sam. As crude as any guy when it came to talking about sex and just as impatient.\n\nAs my lips grazed the top of her soft breast, her fingers tightened in my hair and she released a whimper that caused my cock to jump. My mouth worked across her breast. Flicking my tongue out, I caught her nipple.\n\nSam gasped and pushed my head down, arching her back and shoving her tit in my face.\n\nI opened wide and eagerly sucked not just her nipple, but also half her tit into my mouth.\n\n\"Oh, yes!\" Sam cried out as my lips fastened around her nipple and my tongue teased it.\n\nShe was grinding harder into me and still cupping her tits. I went from one perfect nipple to the other, sucking and licking one while stroking the other. Sam was moaning and making that hot little whimpering sound, and I was aware of my own sounds of pleasure as I sucked and fondled her tits. \n\nThis was what I had waited so long for. Sam may not have been the girl I had envisioned it with, but damned if underneath those jeans and T-shirts she wasn't as hot as any girl I'd lusted after.\n\n\"Oh, that feels so good!\" she purred. \"Looks good, too!\"\n\n\"Damn straight, they look good,\" I said around her nipple, causing her to giggle again.\n\nSam's hands trailed down my chest and I gasped when she grabbed my shorts and unsnapped them. My tongue slowed on her tit and my hands trembled in anticipation as I heard my zipper being pulled down. Sam's fingers worked their way into my underwear and I moaned when they wrapped around my aching dick.\n\n\"Oh!' she exclaimed, \"wow, you're hard!\" She started stroking me and added, \"And big!\"\n\n\"I ... oh!\" I groaned when her hand worked its way down my shorts and she released my cock to cup my swollen balls.\n\nSam rubbed them for a moment before once again wrapping her fingers around my cock. When she began slowly pumping it was my turn to whimper. I focused on her tits, sucking and licking as she stroked me. My legs were trembling and in the back of my mind, I started to worry about how fast I was going to cum when we did it.\n\n\"Damn, you have a nice cock,\" she cooed. \"I love that you're hard for me!\"\n\n\"I ... how could I not be?\" I kissed her nipple and grabbed her ass again. \"Christ, you're hot, Samantha.\"\n\n\"I like hearing you call me that.\" She tugged gently on my hair. When I looked up from her tits, she lifted my face by my chin and kissed me softly. \"Don't worry. I'll take care of you first.\"\n\n\"W-what do you mean?\" I managed to say around the moans she was inducing by rubbing her finger over the sensitive head of my cock.\n\n\"You told me you were worried you'd be quick.\"\n\n\"Oh.\" I could feel myself blushing.\n\n\"Don't be.\" She gave me a sultry smile that made my cock twitch in her hand. \"I know just what to do.\" She stepped back and gave me a playful push. \"Sit on the bed.\"\n\nCaught off guard, I had no choice but to fall into a sitting position on the side of the bed.\n\nSam stepped up to me and pushed her nipple into my face, moaning softly as I quickly took it into my mouth.\n\n\"Hmm, that is nice.\" She sighed. \"But I think it's only fair that I be nice to you, no?\"\n\nMy eyes widened when Sam slowly sank to her knees between my legs. Grabbing my shorts and underwear, she pulled on them and said, \"Lift up.\"\n\nI obeyed and watched my cock spring free when she tugged my shorts over my hips and pushed them down my legs and to the floor.\n\n\"Oh, look at this.\" Sam took my cock in her hand and pumped it, licking her red lips. \"I think I'm going to enjoy this.\"\n\nShe gave the head of my cock a kiss and pulled her head back, taking a thin trail of sticky pre-cum with it.\n\nOne thought raced through my mind. Blow job!\n\nSam pumped my cock in her fist, and I groaned when she rubbed her other hand across the head, smearing my pre-cum around it. The next time her hand reached the top, she pulled it down the length of my shaft, making it slick.\n\nI moaned as she continued to slowly stroke my now glistening cock. Leaning forward, she ran her tongue along the length of my shaft. My hips jerked and I moaned, \"Damn.\"\n\n\"Like that?\"\n\n\"You ... you don't have to,\" I said, hoping to hell she wouldn't pay attention to my words.\n\n\"I don't have to.\" She winked. \"I want to. I love giving head.\"\n\n\"You\u2014oh shit!\" I cried out like an idiot when Sam opened her mouth and engulfed the head of my cock.\n\nShe sucked hard, and I groaned at the feeling of more sticky fluid being drawn from my cock. Sam moaned and her brown eyes rolled back as she removed my cock and licked her lips.\n\n\"I've thought about this for a long time,\" she whispered, rubbing the head of my cock against her cheek. \"I knew you'd have a nice dick. You have a nice everything.\"\n\nSam's cheek was now sticky from my cock, and she rubbed it on her other cheek.\n\nThe sight of my cock against her face looked amazing, and again I had the thought that I had to be dreaming. There was no way that Sam the tomboy I'd been hanging around watching horror movies with for years was between my legs ready to suck my cock.\n\nSam proved it a reality by parting her lips and slowly taking my cock deep into her warm, wet mouth. She sighed, stopping more than halfway down my shaft and bobbing her head slowly.\n\n\"Oh fuck,\" I moaned as she worked my cock with her mouth.\n\nHer lips were wrapped tightly around my shaft, her wet tongue pressing against me, caressing my hard flesh as she took me in and out of her mouth, leaving red lipstick smears on my dick. Sam's eyes were staring directly into mine.\n\n\"That feels so fucking good,\" I groaned.\n\n\"Hmm,\" Sam agreed, moving her head faster.\n\nMy hips started rocking, pushing my cock deeper into her mouth, but she didn't seem to mind.\n\nLooking past the incredible show of Sam's lips wrapped around my cock, my eyes wandered down. Her long brown hair fanned out across my thighs and down her back and her ass moved back and forth while she blew me. Sam's nipples pressed into my thighs, and all I could think about was that this was even better than I had imagined.\n\nSam made it even better. Slipping my cock from her mouth, she ran her tongue down my shaft, and shocked me by licking my balls. She sucked them into her mouth and stroked my cock as she worked them with her tongue.\n\n\"Damn,\" I moaned. \"You're ... you're really good at this.\"\n\nIt sounded stupid, but Sam giggled. \"I told you I like it. I watch a lot of porn, and blow jobs are my favorite!\"\n\n\"Mine too.\" I sighed as she swirled her tongue across my balls once more, then teased it up and down my shaft before taking me back into her amazing mouth.\n\nSam opened her mouth wider and took me deeper. She paused before bobbing her head much faster. Moaning loudly, I lowered my hand to her head. She didn't seem to mind and I let it rest there, feeling her head moving beneath it. Sam made loud, wet slurping sounds as she sucked harder than before, and my legs trembled as she worked her lips along my shaft.\n\nEach time Sam took me deep, she moaned, her eyes closing as she enthusiastically devoured my cock.\n\n\"Oh, God.\" My balls tightened and my cock twitched. \"Oh, don't stop. Sam ... Samantha, please don't stop!\"\n\nI was now moaning continuously, my hips thrusting my cock into her mouth. Sam slipped her hand between my legs and rubbed my balls as she took me deep into her mouth again.\n\n\"Oh fuck!\" I yelled when my cock exploded and for the first time in my life I came from something other than my hand.\n\nSam made a loud gurgling noise and squealed around my cock as it erupted in her mouth. She continued to suck, and I whimpered as each suck caused a long spurt of cum to squirt into her mouth. Sam was moaning and sucking even faster as if she loved it, and I gasped when she sucked harder, milking every drop from my spurting dick.\n\n\"Goddamn!\" I gasped, leaning back on my elbows on the bed, fighting to catch my breath. \" Sam that was ... wow!\"\n\n\"Hmmm.\" Sam removed my cock from her mouth and surprised me yet again by opening wide and showing me her cum-coated tongue. She closed her mouth and after making a show of swallowing, smacked her lips. \"A lot better than a banana,\" she said with a wink.\n\n\"Holy shit,\" I said, grinning at her. \"I can't believe you just did that.\"\n\n\"Hey!\" She laughed. \"That's what friends are for.\" She kissed the tip of my cock. \"Did I do a good job? Did you like your first blow job?\"\n\n\"I ... I don't think I'll ever forget it.\"\n\n\"I hope not.\" She looked serious for a moment but then smiled. Walking over to the top of the bed, she sat down and swung her long legs onto it.\n\nI watched as she slowly spread her legs and grabbed the thong, sliding it to the side just enough for me to see the edge of her smooth pink skin.\n\n\"Want to see mine?\"\n\n\"Hell, yeah,\" I said, kicking my shorts from around my ankles, getting onto the bed on my hands and knees, and crawling up between her legs.\n\n\"Oh, that looks good!\" she told me. \"God, you're sexy!\"",
        "\"Thank you. You're\"\u2014I laughed\u2014\"damn, Samantha, where have you been hiding this?\"\n\n\"It's been right in front of you for a long time, you were too busy looking at everyone else.\"\n\nI wasn't sure how to reply to that, but Sam didn't seem to be waiting for an answer. Lifting her leg, she asked, \"Want my shoes on or off?\"\n\nI looked at the hot red stilettos and thought of her keeping them on, but I caught sight of her toes which were now painted red. The thought of having her completely naked outweighed how sexy the shoes were and I smiled. \"Off.\"\n\n\"Do the honors,\" Sam said, placing her heel on my thigh.\n\nI grabbed her ankle and lifted her leg, my eyes fixed on the red patch between her thighs that showed a dark spot in the middle where her pussy was soaking through. Goddamn, she was into this!\n\nForcing myself to pay attention, I unsnapped the strap around her ankle and slowly slid the shoe off. I stared at the butterfly tattoo and on a whim kissed it.\n\n\"Do that again.\"\n\nI kissed the top of her foot again, and she whispered, \"Kiss my toes.\"\n\nI shrugged. Hell, she had just sucked my cock. The least I could do was kiss her toes.\n\nI gave each of her toes a soft kiss, and she sighed. \"I like that.\"\n\n\"You do?\"\n\n\"Yeah.\" Wiggling her toes against my lips, she laughed. \"I lied when I said I had a boyfriend into feet. I'm the one who likes it.\"\n\n\"Oh.\" Lifting her other leg, I removed that shoe, this time running my tongue playfully along her toes.\n\nSam giggled, causing me to smile and suck two of her toes into my mouth.\n\n\"Ohh, that's nice!\" she purred. \"The other guys looked at me like I was nuts.\"\n\n\"Every part of you is sexy,\" I told her, lifting her leg higher and kissing the sole of her foot.\n\n\"Say that again,\" she said softly.\n\n\"Samantha\"\u2014I kissed the top of her foot\u2014\"you look amazing.\"\n\n\"So do you, but I've always thought that about you.\"\n\n\"Really?\"\n\n\"Oh, yeah.\" She reached between her legs and rubbed the wet spot on her thong. \"Can't you tell?\" She then placed her feet on my thighs and pulled her thong over her hips. \"I think I did something very nice for you, and it's time for you to repay the favor.\"\n\nSam lifted her legs straight up and. I watched with my mouth watering and my cock dripping as she peeled the thong from her pussy and slid it up her legs.\n\nSam's pussy was as pink as her nipples and not only smooth, but glistening from how wet she was. Sam bent her legs, pushed the thong down to her feet playfully, and kicked it off. It landed on my chest. Grabbing it, I brought it to my nose and inhaled. \"Damn,\" I whispered at the scent of her pussy.\n\n\"Why settle for that, when the real thing's right here.\"\n\nMy eyes widened as she slowly opened her legs until they were completely spread. Sam lowered her legs so that her knees were over my hips. As I knelt there, she reached down and spread her pussy open.\n\n\"Come give your Samantha a kiss,\" she whispered.\n\nMy Samantha? She had said it in that sexy purr she'd been using since we started. As I stretched out on the bed so that I was propped up on my elbows between her thighs, I said, \"I like how that sounds.\"\n\n\"So do I.\" She tapped her red nail on her clit. \"Now, how about you show me what you've learned from all that porn you watch.\"\n\nI placed my hands on her soft thighs and stared at her swollen pink button. Leaning in, I took a deep breath, inhaling the intoxicating scent of her pussy.\n\nI then blew lightly on her clit, and she moaned, \"Don't be a tease!\"\n\nI licked my lips and then flicked my tongue out, licking hers. I ran my tongue up through her wet flesh, savoring the taste of the sticky fluid gathering in my mouth. When I reached her clit, I circled it and then gave it a soft kiss.\n\nSam moaned and jerked her hips, pushing her warm, wet flesh into my face. I worked back down the length of her pussy, enjoying the way her thighs trembled beneath my hands and the soft moans coming from her as I swirled my tongue through her wet lips.\n\nI forced myself to not attack her pussy the way I wanted to and took my time exploring her with my tongue. Sam was whimpering softly, but not telling me to go faster. I pushed my tongue against her and slid down the length of her pussy, shoving it inside her.\n\n\"Oh shit!\" she groaned as I wiggled my tongue.\n\nI moved my hands between her legs, gently spread her lips, and moved my tongue in and out of her, getting another mouthful of her delicious juices.\n\n\"Oh, God, that feels good!\" she moaned, causing my cock to again stir. \"Please lick my clit! I need to come so bad!\"\n\nI eagerly slipped my tongue from inside her and slid it back to the top of her pussy, sucking her clit into my mouth.\n\n\"Oh, right there! Hmm just like that, honey,\" she cooed.\n\nHoney? Again, the way she said it made it just fine with me, and I gently sucked her clit. Sam draped her legs over my shoulders and began sliding her soft feet across my back. \n\nI traced her clit with my tongue in slow circles and she sighed in pleasure, her feet resting on my shoulders. I took turns first licking then sucking her hard pink nub, and Sam moaned and whimpered as I pleasured her.\n\n\"You look damn good between my legs, green eyes,\" she told me. \"Damn good.\"\n\n\"It's a damn good place to be,\" I said around her clit.\n\n\"Slip your fingers inside me.\"\n\nI moved my hand down and gently pushed two fingers inside as she had asked.\n\n\"Oh yeah ... Now in and out, nice and easy.\"\n\nI moaned into her at the sensation of having my fingers inside her. Sam's pussy wasn't just tight, but hot and wet, and the thought that it would be more than my fingers inside her soon had my cock fully hard and pushing into the mattress. Sam moved her hips, rocking them in time with my fingers.\n\nSam released a long moan as she played with her nipples. Eyes closed and lips parted, she sighed softly each time my fingers pushed into her. Her red nails teasing her nipples had my hips grinding into the bed as I continued to work her clit with my lips and tongue.\n\n\"Oh, honey,\" she purred, \"right there, just like that!\" She gasped and her hips moved faster, thrusting hard into my fingers. \"Suck on it!\"\n\nAs soon as I started sucking Sam's clit, she began pumping her hips and making sharp little yelping sounds.\n\n\"Right there! Oh god, Justin, a little more! Oh, just a little more!\" She emitted a loud squeal and moaned, \"Oh, please keep sucking! Please don't stop, baby! Please, please\u2014oh, please!\"\n\nThat last 'please' turned into a long, loud squeal that caused my cock to jump. As I continued to suck on her clit, Sam bucked her hips wildly, releasing one squeal after another. Her already tight pussy contracted around my thrusting fingers, and as she ground her pussy into my face, she clamped my head with her thighs, pinning me to her quivering flesh.\n\nI sure as hell wasn't complaining. In fact, my cock was throbbing at the sound of her cumming and at the way her pussy was not only squeezing my fingers but also sucking them in as I continued to thrust them into her.\n\nSam arched her back, pushing her pussy even harder into my face, and cried out so loudly I smiled at the thought the neighbors would probably hear it. Her pussy tightened around my fingers once more. With a soft whimper, Sam's body relaxed and her legs slipped from my shoulders and onto the bed.\n\n\"Oh, god, I needed that, Justin. That was so good!\"\n\nSmiling, I gave her clit another kiss and reluctantly lifted my face from her sopping pussy. \"You really liked it? I did okay?\"\n\n\"Can't you tell?\" She laughed. \"You really think I would fake it?\"\n\n\"No,\" I said, feeling pretty proud of myself.\n\n\"Justin?\"\n\n\"What?\"\n\n\"Are you hard again?\"\n\n\"After that? How could I not be?\" I sat up on my knees, exposing my cock standing at attention between my legs.\n\n\"Damn, that looks good.\" Sam propped herself up on the pillows and beckoned me with her finger. \"How about you come up here and let me feel you inside me?\"\n\n\"I ... I really can?\"\n\nSam rolled her eyes. \"Nah, I sucked you off and let you suck me off. Now I'm going to just get up and leave. For someone who wanted it so bad...\"\n\n\"I do want you!\" I exclaimed, crawling up between her legs, placing my hands on either side of her shoulders, and looking down at her.\n\nSam smiled up at me, placing her hands on my shoulders. \"Then what are you waiting for, Justin? Make love to me.\"\n\nMake love to her. I always thought of it as sex, but hearing it that way did sound pretty good. The fact it came from a beautiful girl lying naked beneath me added to the thrill. I grabbed my cock and we both moaned as I rubbed it up and down the length of her soaking pussy.\n\n\"You're teasing again. Inside, Justin, please? I want you so bad.\"\n\nDamn! I pushed the head of my cock through her pussy. When I reached her entrance and started to push inside, I stopped.\n\n\"Shit.\"\n\n\"What?\" For the first time, Sam looked nervous. \"Shit, what? What's the matter? You don't want to?\"\n\n\"I do!\" I told her, \"but I need to, you know\"\u2014I reached across the bed to my nightstand drawer\u2014\"wear something.\"\n\n\"Screw it,\" Sam said, reaching down between us and grabbing my cock. \"I haven't been with anyone is months and I always used something and you haven't been with anyone. I'm on the pill and I ... I want to feel you. Nothing between us, just you inside me. Please?\"\n\n\"I ... Oh, my god!\" I cried out, when pushing my cock against her, Sam thrust her hips. The head of my cock sank into her hot, wet flesh and I moaned at how incredible it felt.\n\n\"All the way!\" Sam moaned. \"All the way inside!\"\n\nSo far, I'd been trying to go as slow as I could and not act like what I was: an excited virgin. But at the feeling of her hot pussy around the sensitive head of my cock, I lost control and with a thrust of my hips pushed myself deep inside her.\n\n\"Oh, Justin!\" Sam called out, wrapping her arms around my shoulders as I sank into her warm, welcoming flesh.\n\nI gasped and remained above her, taking in the incredible sensation of being completely inside her. Sam's hot pussy surrounded my cock and I couldn't believe how good it felt. I moved my hips back, and then pushed forward, again sliding myself into the wet heat of her body.\n\n\"Easy,\" Sam said, her eyes wide. \"You're ... you're pretty damn big. Just go nice and slow, okay?\"\n\nI forced myself to do as she asked and moved my hips slowly back and forth, sliding my cock halfway out before pushing back into her. We both moaned each time I thrust forward. Pulling me down to her, Sam found my lips with hers and moved her hips in time with mine. I relaxed and sighed into her mouth at the feeling of her small breasts pressing against me as I moved within her.\n\nSam's lips left mine. Holding the back of my head, she pressed my face into her neck. I kissed her softly and began to move more confidently, sliding more of my cock from inside her and plunging it back in. Sam moaned each time I penetrated her warm depths, her hips moving harder into mine, pushing me deeper.\n\n\"How do I feel?\" she whispered in my ear. \"Do I feel good?\"\n\n\"You ... feel ... amazing,\" I answered in between the sounds of pleasure I couldn't help releasing each time our hips thrust into each other.\n\n\"So do you,\" she breathed in my ear. \"I knew you would.\"\n\n\"You ... you thought about this?\"\n\n\"Can't you tell?\" She released a sharp yelp when I drove my hips harder into her. \"I've wanted you, Justin. I've wanted you for a long time and ... after you called, I told myself I wasn't going to let you go with anyone else. I wanted to be your first.\"\n\n\"You ... you are,\" I moaned. \"I ... I'm glad you are.\"\n\n\"You mean it?\" She kissed my neck, and this time it was Sam who shoved her hips hard into me. \"You're happy to be with me?\"\n\n\"Very happy,\" I said. \"You were right. This is so much better with someone who's special to me.\"\n\n\"You're very special to me.\" Sam pushed on my shoulders\n\nStraightening my arms, I looked down at her.\n\nMy eyes fastened on her perfect tits, which were now covered with a light sheen of sweat. Her thighs were pressed against mine and her fingers were digging into my shoulders.\n\nSam's hips were moving in perfect rhythm with mine, and as good as it felt, I couldn't help thinking about what it would feel like to do it in other positions. I had waited so long for this and wanted to enjoy it in every way I could.\n\n\"Justin, I\u2014\"\n\n\"Can we move?\" I asked her.\n\n\"M-move?\"\n\n\"Yeah. Can we, you know\"\u2014I gave her a wink\u2014\"try a different way?\"\n\nSam frowned. For a moment she looked upset and I thought I'd somehow screwed up, but she quickly smiled and said, \"Anything you want, Justin. I want you to remember this.\"\n\n\"I\u2014\"\n\n\"So we can move, but I want to finish like this. Is that okay?\"\n\n\"Sure.\" I lowered my head and sucked her nipple into my mouth, causing her to moan. \"Can we\u2014?\"\n\n\"I know what you want.\" She winked. \"Sit up.\"\n\nI forced myself to slide from inside her and sat back on my knees, watching as Sam drew her legs up and rolled over onto her hands and knees.\n\n\"Goddamn,\" I breathed as I took in the sight of Sam from behind.\n\nHer firm little ass looked even better pushed up in the air and her slick pink pussy was winking at me from between her soft thighs. Kneeling behind her, I grabbed her hips and placed my cock on the cheek of her ass, admiring how good it looked there.\n\nSam tossed her head, sending her long brown hair across the smooth skin of her back. \"You going to take me or just look at me?\"\n\nTake her. The way she said that caused me to push my cock down between her legs and enter her with one long thrust.\n\n\"Oh fuck!\" Sam cried out. \"Damn, that's deep!\"\n\n\"Sorry.\" I began to pull out, when she managed to surprise me yet again.\n\n\"I didn't say stop! Just said you were deep. Now go ahead and give it to me.\"\n\nJesus, she was hot! As I slammed my hard cock into her and listened to her cry out, it hit me that I finally had the answer to my question of whether or not Sam would be a freak.\n\nHolding her hips, I started fucking her with long, hard strokes. Each one ended with her releasing a high-pitched yelp and me moaning softly at how good her pussy felt squeezing my cock, fucking her. That thought stuck in my mind, and I smiled as I continued pumping my hips and slamming my cock into her.\n\nThis was even better than I had hoped it would be. Not just sex, but with a girl who sure as hell wasn't shy about it and who was not only damn sexy, but the only person I completely trusted. Sam sounded as if she were enjoying it as well. That opinion was driven home when she started rocking back and forth, shoving her pretty little ass back into my driving cock.\n\n\"Oh, fuck, this feels good!\" Sam moaned. \"Damn, I've dreamed of this for months.\"\n\nI'd been dreaming of it for longer than that, but had anyone told me it would be Sam I would be doing it to I would have laughed. I wasn't laughing now, however. Right now, I was moaning like an idiot, but enjoying every minute of it. I slowed my thrusts, savoring how every inch of my cock felt sliding into her hot pussy.\n\n\"Stop.\"\n\n\"I ... am I doing something wrong?\"\n\n\"Hell, no!\" She laughed. \"But I want my favorite. Lay on your back.\"\n\nSam hadn't steered me wrong so far\n\nAnd withdrawing my glistening cock from her, I lay on my back. Sam swung her leg over my hips and straddled me. Reaching back, she guided my cock to her pussy and let her weight go. We both moaned as she impaled herself on my cock and started rocking her hips back and forth.\n\nSam braced her hands on my chest and leaned over, sliding her tits back and forth, her nipples grazing my lips. I stuck my tongue out and Sam sighed as it flicked across her nipples. She stopped moving and placed her nipple in my mouth, lowering herself so I could suck on it.\n\nSam moaned and then switched, allowing me to tend to her other nipple. She stopped sliding back and forth and worked my cock in and out of her pussy.\n\nMoving faster and harder, Sam slammed herself up and down, and it was my turn to start making whimpering sounds while she rode me like a porn star. She yelped each time my cock buried itself inside her, but she continued to buck wildly on top of me. I was breathing hard and my legs were trembling beneath her as she moved even faster.\n\n\"Oh shit,\" I moaned, \"Sam, I\u2014\"\n\n\"Not yet,\" she said, immediately slowing down.\n\nI whimpered in frustration as the feeling I was going to come faded, but Sam made up for it. Rocking her hips gently across me, she sat straight up and lifted her arms over her head, making a show of slowly and sensually riding me.\n\n\"Look at you,\" I whispered, staring at her gorgeous tits and slender body as she teased herself across my cock. \"Jesus, you look hot.\"\n\n\"Glad you think so,\" she purred as she cupped her tits and stroked her nipples. \"I told you, I'm going to make tonight something you'll never forget.\"\n\nI put my hands on her hips and began to push and pull, guiding her along my cock. In this position, she was teasing, but I didn't mind. The longer this lasted the better. At this point I was struck with how good she looked as much as with how damn good she felt.\n\nSam was sweating and her face was flushed and her nipples looked as hard as I felt. Her pink clit was swollen and peeking out from between her lips and her soft sighs were music to my ears.\n\nSam smiled down at me and said, \"How about we go back to where we started?\"\n\nShe rolled off me. No sooner was she on her back, than I was back between her legs and sinking slowly into her.\n\n\"Hmm, that's nice\" she said as I slowly moved inside her. \"Come down here.\"\n\nI slid my arms under hers so our bodies were pressed together. As her lips found mine, Sam wrapped her long legs around my waist, pulling me deeper into her warm embrace. I began moving a little faster but was still taking my time, finding that I was enjoying it as much as I had going harder when she was on her knees.\n\nAs Sam's tongue entered my mouth, I thought it couldn't get any better than this. Our entwined bodies were moving in perfect harmony and Sam's soft lips and tongue were teasing and caressing my own. Her nipples were poking into my chest and her arms and legs were wrapped tightly around me.\n\n\"Oh, Justin,\" she moaned, pulling her lips from mine, \"you feel so good. Please don't go any faster. Just keep doing it like this.\"\n\nI had no problem listening to her. I couldn't believe how good this felt, and not just the sex. Having Sam this close to me, her sweaty body wrapped around mine and her warm flesh sucking me into her, was amazing. She was moaning and purring in my ear as our bodies moved as one.\n\nLooking down at her, I smiled at the sight of her perfect lips slightly parted and her face flushed with passion. Her long hair was fanned across my pillows and her eyes were closed as we made love in the soft glow of the candles.\n\nSam had mentioned making love when we started. I wasn't sure if that's what we were doing at this point, but right now there was no doubt we were making love. I'd never thought of my first time really being anything but sex and getting off, but this was even better.\n\nSam opened her eyes and stared up at me, her lips curling into a soft smile.\n\nI said, \"Samantha, you're so beautiful.\"\n\n\"You ... you're not just saying that because we're\u2014\"\n\n\"No, I mean it.\" I paused and moaned as I felt my body tensing. \"You're absolutely beautiful.\"\n\n\"I\u2014oh!\" Her legs tightened around me and her hips moved faster. \"Please don't stop, Justin! Please keep going! I ... I want to cum with you inside me.\"\n\nHer words sent a thrill though me. Even as I felt my own orgasm building, I fought to not move any faster. I was using long, slow strokes, and I felt Sam's back arch and her hips push into me. She was whimpering in my ear and her thighs were trembling against my sides. I was shaking as well with the effort to hold back as long as possible.",
        "\"Yes,\" she moaned. \"I ... ohhhh.\"\n\nSam squealed in my ear, and I gasped as her pussy tightened around me, her hips grinding into mine. As she released a series of soft yelps in my ear, Sam's arms and legs tightened around me. Her lips to my ear, she whispered, \"I ... I love you, Justin.\"\n\n\"You\u2014\"\n\n\"I ... I'm so in love you!\" she said, and then cried out in my ear as her hips thrust harder into mine. She started to speak again, but all that came out was a long, high-pitched squeal as her pussy convulsed around me.\n\nWith a loud cry of my own, my body lost its battle to hold back and exploded inside her.\n\n\"Oh, yes!\" she cried as I my hips pumped faster, each thrust ending in another spurt of cum deep inside her.\n\nSam squealed in delight and I whimpered at the sensation of her pussy contracting around me, milking my still squirting cock.\n\n\"God that feels so good!\" she moaned. \"I've never felt that before. It\u2014ohh, yes.\" She sighed as my cock released another long, hot stream inside her.\n\n\"Oh, damn,\" I groaned as my spent cock gave up its last few drops.\n\n\"Hmm, that's it,\" she cooed as she stroked my hair, \"give it all to me.\"\n\nI slumped against her. Kissing my neck, she rubbed my back and spoke softly in my ear. \"There you go, honey, just relax. Stay right here and let me hold you.\"\n\nI closed my eyes and sighed at the feeling of my cock softening inside her. Sam lay beneath me stroking my hair and breathing heavy in my ear.\n\nReleasing a deep breath, I rolled over onto my back and stared at the ceiling. \"Oh, my god, I can't believe we just did that.\"\n\n\"Are you sorry you did?\" she asked.\n\n\"Sam, I mean Samantha, that was ... beautiful.\"\n\n\"I like that.\" She giggled.\n\nRolling over onto her side, she slid up against me and put her arm across my waist.\n\nMy breathing slowing down, I put my arm around her shoulders and said, \"Damn, I'm tired.\"\n\n\"So close your eyes and rest.\" She kissed my cheek and then resting her head on my shoulder, she asked, \"Do you mind?\"\n\n\"Not at all. You feel good close to me.\"\n\n\"So do you.\"\n\nI closed my eyes and smiled. I couldn't ever remember being this relaxed. I lightly ran my fingers along Sam's shoulder and she cooed softly, nuzzling her face into my neck. I pulled her closer to me and kissed the top of her head, letting my head fall back on the pillow, my mind drifting.\n\n* * * * *\n\nI opened my eyes and turned my head to look at the nightstand. It was just after one. A couple of the candles had burned out.\n\nTaking a deep breath, I smiled at the sweet scent of Sam. My smiled widened at the sensation of her warm, soft body next to mine. She had draped her leg across my thigh and the heat of her pussy pressed into me. Her breasts were pushing against my side and she was breathing deeply into my neck.\n\nI lay there amazed at how good this felt. Actually sleeping with someone was something that had never crossed my mind. It felt far better than I would have imagined. I tightened my arm around Sam's shoulders and she whimpered into my neck. I kissed the top of her head.\n\nA moment later she lifted her face from my neck, sighed, and said, \"Wow, its late.\"\n\n\"Or early.\" I kissed her cheek. \"Sam, that was incredible. I ... thank you.\" I felt stupid saying it but really had no idea what else to say.\n\n\"Hey, that's what friends are for,\" she said in a subdued tone.\n\n\"You okay?\" I asked.\n\n\"Yeah.\" She moved her leg from over mine and sat up.\n\nThe sight of her perfect tits caused my cock to respond all over again to the sight of her naked body. Reaching out, I ran my hand down the smooth skin of her back.\n\n\"Come here,\" I said, pulling gently on her arm for her to lie back down with me.\n\nSam pulled away from my touch. \"No, I have to get going.\"\n\n\"You're leaving?\" I sat up next to her. \"You're not going to spend the night?\"\n\n\"I can't.\" Sam slid over to the edge of the bed, swinging her legs over the side.\n\n\"Call your mom and tell her you're staying over at a friend's house and\u2014\"\n\n\"It's not about my mother. I told her I might not be coming home tonight.\"\n\n\"Then why are you?\" I asked, confused.\n\n\"Justin, I\"\u2014Sam took a deep breath, and when she looked at me I was surprised to see that her eyes were wet\u2014\"I said something to you tonight and you ... you didn't answer me.\"\n\nAs soon as she spoke, I heard her plain as day telling me she loved me. I'd started to say something, but I'd cum and we'd fallen asleep. I'd been surprised she'd said it and hadn't been sure how I had felt, but after having her next to me and\u2014\n\n\"And that's okay,\" she continued. \"You didn't have to if you didn't feel it.\"\n\n\"Sam\u2014Samantha ...\" I started, but she went on speaking.\n\n\"But I had to say it. I've been in love with you for a while now, Justin. I ... I thought maybe you would notice or maybe say you felt the same way, but you just kept chasing girls like Jen. You were obsessed with her, and I figured there was no chance.\"\n\n\"You should have said\u2014\"\n\n\"When you called and said she cheated on you, I told myself tonight was the night. No more waiting for you to come around. I was going to not only tell you, but show you.\" She sighed. \"I guess in a way I used you, took advantage of how bad you wanted sex, and used that to be with you. I figured if nothing else I could say I know what you feel like and maybe, just maybe, you would see me as more than a friend.\"\n\n\"Sam, trust me, I ... I see you very differently now.\"\n\n\"I'm sure you do. You've seen me as a woman and not just a tomboy who likes all the same things you do, but I was hoping for more.\"\n\n\"Well, I ... I wasn't expecting this and\u2014\"\n\n\"Just let me finish,\" she said, wiping her eyes. \"Tonight was amazing. You felt even better than I thought you would. I ... I would love to spend the night, but we'd end up having sex again and then again in the morning and ... it's one thing to say I had sex with you so you would have a special first time.\"\n\n\"That I could tell myself was just sex, but if I spend the night it ... it would hurt too much if I sleep with you. I'll feel even worse, and I don't want to be a fuck buddy or a friend with benefits.\"\n\n\"Samantha, you're more than that. You're my\u2014\"\n\n\"Best friend, and I know that's all I am. I tried and it didn't work out for me, but at least I won't go to bed thinking about you and wondering anymore.\" She paused and then picked her dress up from the floor. \"I'm going to ask that you don't tell anyone we were together. I ... I don't need to hear about it from anyone.\"\n\n\"I'd never tell people anything like that. Unless of course it was because\u2014\"\n\n\"My sister knows how I feel. She pushed me to come to you. She told me that even though guys try to play it off they never forget their first girl, so at least I know that no matter what happens as we get older you'll always remember me for something.\"\n\nShe started to stand, but I caught her arm. \"Hey, hold on,\" I told her. \"You did a lot of talking and didn't let me say anything just now.\"\n\n\"You don't have to. It's what you didn't say. That was enough.\"\n\n\"Sam, you caught me by surprise! I ... I never knew you felt that way.\"\n\n\"Don't worry, Justin. I'm not mad at you. I guess I should be mad at me.\"\n\n\"Sam, you're right. I will always remember tonight.\"\n\n\"I'm glad.\" She started to pull away, but I held onto her arm.\n\n\"Know what I'll remember?\"\n\n\"That I give good head?\" She rolled her eyes.\n\n\"You really are like a guy sometimes.\" I laughed but quickly turned serious when she didn't smile.\n\n\"What I'll remember is being amazed at how beautiful you really are. I'll remember how much I meant to you that you would be with me even if that's all it was. But mostly? I'll remember how good you felt when we were done. How good you felt lying here in my arms and falling asleep with me.\"\n\n\"You\u2014really?\"\n\n\"Really, Samantha.\" Sliding over to her, I put my arms around her shoulders. \"And there's one more thing I'll remember.\"\n\n\"What's that?\"\n\n\"What a fucking stupid asshole I was for never seeing you as more than a friend. That it never hit me how much you care and how you've always been there for me.\"\n\n\"You have for me, too.\"\n\n\"No.\" I snapped my fingers. \"There's one more thing about tonight.\"\n\n\"I ... I'd really like to go, Justin. I'll call you tomorrow and\u2014\"\n\n\"I'll never forget that the night we slept together for the first time was the first time I told you that\"\u2014placing my lips to her ear, I finished softly\u2014\"that I love you, too.\"\n\n\"You don't have to say that.\"\n\n\"I mean it. And it has nothing to do with the sex. It was lying here with you and how perfect you felt in my arms.\" I cupped her chin and turned her face to mine and kissed her. \"I do love you, Samantha.\"\n\n\"Please don't be messing with me, Justin. I\u2014\"\n\nI stopped her with a long, deep kiss. Leaning back against the headboard, I pulled her back onto the bed with me. Sam resisted for second and then dropped the dress and slid up next to me. As she had before, she wrapped her arm around my waist and put her head on my shoulder.\n\n\"I love you, Justin..\" She said, \"I want this to be the start of something for us, not a one-time thing.\"\n\n\"Then don't leave.\" I put my arm around her shoulders. \"And we don't have to have sex again. You can just spend the night and\u2014\"\n\n\"Well, let's not get crazy.\" She giggled. \"If I stay, we're fucking again.\"\n\n\"Fucking?\" I laughed. \"That's the Sam I know and love!\"\n\n\"I don't want to be Sam to you anymore.\"\n\n\"Okay, but Samantha just isn't you.\" I snapped my fingers. \"How about Sammi?\"\n\n\"Sammi?\" She kissed my neck. \"I like that!\"\n\n\"Sammi it is.\" I hugged her closer. \"And I'll have no problem telling people we're together.\"\n\n\"Good. I'll be your dirty girl, but not your dirty secret.\"\n\n\"Dirty girl?\" My cock stirred at her words.\n\n\"Hmm-mm\" she said, laughing. \"Making love was nice, and I'm sure we'll do that again. But for the most part, this girl wants to get fucked.\"\n\n\"I ... I think I can handle that.\"\n\n\"Good, and as much as I loved you cumming inside me the first time, I'll let you, you know, cum on me if you want.\"\n\n\"On you?\" I smiled as my mind filled with sexy images. \"Like on your tits?\"\n\n\"Tits? I was thinking on my face, but sure, you can cum on my tits.\"\n\n\"You'd let me cum on your face?\" My cock hardened, and I moaned when Sam noticed and reached down and took it in her hand.\n\n\"Why not?\" she asked as she stroked me. \"That's what friends are for.\" She giggled.\n\n\"No, Sammi,\" I told her, turning my head and kissing her, \"that's what girlfriends are for.\"\n\n*\n\nAuthor's Note: So there you have it, my First Time debut. I hope you had as much fun reading it as I did writing it as it was a break from my last contest story which was pretty dark. As I always say Lit is a free site and the only payment we receive is in the form of votes and comments. This is also a contest entry to please take the time and vote! As always, thank you for reading and supporting my work. Its readers like you that keep me writing! Lovecraft68 "
    ],
    "authorname": "lovecraft68",
    "tags": [
        "virgin",
        "first time sex",
        "romance",
        "first love",
        "best friend seduction",
        "oral sex",
        "brunette"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/thats-what-friends-are-for-13"
}