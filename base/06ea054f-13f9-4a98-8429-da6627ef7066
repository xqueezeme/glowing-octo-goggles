{
    "title": "A Maid's Tail Ch. 07: Saturday",
    "pages": [
        "7: Saturday \n\nKim bounded up the steps just before eight AM, her bell choker playfully announcing her presence with its jingle. She did a quick once over of her uniform to make sure everything was in place; cuffs at her wrists, waist apron tied snugly to accent her curves and, above all, the velvet uniform snug against her generous breasts, putting maybe just a tad too much cleavage on display. \n\nThat didn't bother Kim. Not at all. Mister- no, Master McKenna seemed to enjoy when she wore her uniform tucked in a little bit. She might not have been as confident in it as he thought she should be, but she couldn't deny the looks he gave her when he thought she wasn't paying attention. . . \n\nShe practiced her smile as she knocked on the door. \n\nWhen Elliot came to the door he had a box tucked under his arm and a cup of coffee in his hand. His tall, proud frame occupied just enough of the doorway to make seeing inside impossible, but the smell of dust and musty books told her he'd been moving things around. \"Hey, you. . .\" He smiled. \"Got a special project today, if you're interested?\" \n\n\"If it's your wish, master McKenna,\" Kim tried for a modest but professional tone. \n\n\"Mmm, it just might be. Come in, go ahead and get started on the ground floor, I'm working on the upstairs-\" \n\n\"You don't have to do that, I can-\" \n\n\"Let me finish.\" He said with a surprising sharpness. Kim drew back, clasped her hands in front of herself, lowering her head in apology. \"I'm going to have to get some supplies from the attic and the study is being changed a bit- I decided to turn half of it into a home office. Once I have it put together, It's going to need cleaning.\" \n\nKim actually paused for a second, not sure if she should speak. When she was sure he was finished she nodded. \"Would you like me to help you move things around?\" \n\nIf there was one thing that could be said about Elliot- aside from how his strong jaw gave him a dignified air- it was that he wasn't shy about what he thought about something. With one long sweep of his deep brown eyes, his gaze roamed Kim and her tighter fighting uniform. He met her eyes with perfect calm- unnervingly confident in his place. \n\nShe earned a little smirk of approval. A good start to the last day of the week, she decided and smiled back at him. \"Is this more to your liking, master McKenna?\" \n\nHe looked her over again, smirking. \"Yes and no.\" \n\n\"Hm?\" \n\n\"You don't need the help. . . I think it's beneath you to try that tactic.\" She pointed his cup at her in playful accusation. \"But I approve all the same.\" \n\n\"Ah, if it bothers you-\" \n\n\"I didn't say that.. . .\" Another sip, his gaze met hers and held it firmly. \"I don't want you resorting to tricks. I like you the way you are.\" \n\nKim felt her cheeks warm. \"I- um. You do?\" \n\n\"I do.\" \n\n\"Ah, well, if- if I may, I had some ideas? About the uniform?\" \n\n\"We'll talk about that later. Tonight, maybe.\" \n\n\"T- Tonight it is.\" Kim smiled. \n\nAs Elliot headed upstairs, she turned her attention to the living room and began her daily routine- with a familiarity born from practice and a desire to please her employers, she wiped everything down with near mechanical precision and ease. By the time Elliot had come back down she was already half way done with the kitchen and moving into the dining room. \n\nShe could feel Elliot's gaze on her when she started to lean over to wipe the table as if it was a physical thing. Knowing better than to disappoint, she leaned just that much further over, straining to reach a spot and its invisible dirt. She'd been wearing her horizontal striped panties again which earned her a soft 'mrm' from the entry to the living room. \n\nKim looked back over her shoulder at Elliot with a coy expression and about as much false innocence as she could muster. It wasn't even remotely convincing, not even to her. He just tipped his cup back and took a drink, unashamedly watching while she cleaned. \n\nIn that position, half bent over with her bare thighs and a good portion of her ass on display to her master, Kim became acutely aware of just how heavy the table under her was. It could have supported her weight, maybe more if it had to. She placed a hand on it to brace herself and gave a push forward to try and jostle it- it didn't give. \n\nElliot scoffed and turned to the study. \n\n\"You idiot. . .\" Kim kicked herself mentally. She was supposed to be behaving, not trying to seduce her employer! Though, despite this, she didn't feel ashamed as maybe she should have. Hell, she hadn't felt ashamed when she'd been 'forced' to serve her mistress. . . \n\nToo much, too fast. He was the one who set the pace- maybe he didn't even want anything to do with her. Maybe she was going to be Sylvia's toy maid. Kim frowned at that thought; maybe she'd just offended her master. \n\nKim quickly finished cleaning the table and dusted off the rest of the dining room and living room, paying special attention to the window sills which always seemed to attract a lot of dust. By the time she was done, the entire place was spotless and ready for the broom. She was improving, even to her own eyes. For some reason, it made her feel better; as though the act of cleaning and the knowledge she'd become a better maid for the McKennas had some psychological impact on her. Maybe it did. \n\nAfter all, it'd been a long time since anyone had validated her. Yeah, it felt good. It felt right. \n\nKim took this attitude to the study with her head held slightly higher and a very slight smile on her lips. \"Ah, Elliot. . .\" \n\n\"Hm?\" He said, hefting a box of books to add to a growing stack. \"What's up?\" \n\n\"I. . .\" How was she going to do this? She exhaled. \"I think I might owe you an apology. I may have offended you and, uh. . .\" \n\n\"Maybe you did.\" He said calmly as he set the box down. \"Maybe you assumed when you shouldn't have.\" He looked at her thoughtfully, a little smile creeping over his features. When she didn't jump to apologize, he stepped into her space, towering over her. His body absolutely radiated calm power, as if nothing could have stirred him. \n\nKim had a choice to make and neither option that crossed her mind seemed like the right way to go. Meekly, she lowered her gaze and whispered, \"I'm sorry, Master McKenna.\" \n\n\"Are you?\" His breath was soft and smelled of toothpaste. He touched her cheek, daring her to look up. His thick, powerful finger trailed along her jaw, down her neck and he cupped her shoulder. \"How sorry?\" \n\n\"M-\" Was she really going to? \"Master?\" \n\nShe was, it seemed. \n\nElliot squeezed her shoulder but he didn't push her to her knees- he didn't even invite or demand her to. Even if she wanted him to. She wanted to know she was doing what he wanted, she needed to feel validated. . . She turned her gaze up, eying him through her bangs. \"M- Mew?\" \n\n\"Mmm. . .\" He leaned in to whisper. \"I appreciate the inattentive,\" slowly his hand trailed down her arm. He stood watching her with calm, gentle eyes that never seemed to waver. He took in a deep pull of her scent and sighed it out across her ear, sending shivers down her spine and causing her skin to bristle with goosebumps. Before she even had a chance to speak he was drawing back and callously, he turned back to the study. \n\nKim whimpered to his back. She only realized what she was doing after she had done it and covered her mouth. Elliot cast a brief glance back at her- he knew damn well the effect he'd had on her, though. There was no way he couldn't have. \n\nGod when had she turned into such a kid? She was older than her employers and yet. . . \n\nAnd yet she knew her place among them. She lowered her head, clasped her hands in front of her waist and swallowed. \"I'm sorry, master.\" \n\n\"I know,\" was all he said. \n\nNot sure what she was supposed to make of that response, Kim wandered back into the living room and looked around for a moment. The man was an enigma; too cool to be read easily and too warm to be a hard ass. He was frustrating. Kim sighed, grabbing her feather duster from the hidden cubby behind the couch. En-route back to the hall way, she started by intently wiping down the furniture and between the posts of the staircase. All the while she couldn't shake that feeling she was being watched, that naughty itch in the back of her mind that told her she owed her employer more of an apology. \n\nIt was stupid, but it made her tingle nervously. If she went too fast, if she tried too hard, she risked upsetting her master- god, she had a master now?- and possibly loosing her job. Kim dutifully cleaned the hall way and the bathroom with her growing efficiency, trying to put Elliot's 'advance' out of her mind. It wasn't going well. \n\nShe emerged from the bathroom with her cleaning rag in hand to find Elliot walking by right at the same time with a stack of boxes in hand. She bounded up the steps, keenly aware of how her cleavage jiggled against her uniform. Elliot seemed to notice, too; he turned on her and handed her a small box which she took without comment. \n\nNot a word passed between them as they shuffled the boxes upstairs and emptied out the study, leaving a huge swath of room in the corner for his home office and plenty of dirt lining the wall and base boards. \"Well, ahm, should I start cleaning?\"  \n\n\"Not yet,\" Elliot said firmly as he stepped around her. That's when she saw the box in the opposite corner; one of those cheap press board computer desks that needed to be assembled. Kim wanted to say something about how it, but it wasn't really her place to speak up, was it? \n\n\"M- Master?\" \n\nElliot glanced up at her. \n\n\"Would you like something to eat? You've been working hard. . .\" \n\nA brief smile crossed his face. \"After I finish the desk.\" \n\n\"As you wish. . .\" \n\nHe looked over at her as he squatted down beside the box and smirked a lopsided grin. \"You don't really have a bad angle do you?\" \n\n\"Huh?\" After a second, it clicked and she blushed deeply, fidgeting under his gaze. She lowered her gaze. \"T- Thank you, master.\" \n\n\"Are you done down here?\" \n\n\"Y- Yes.\" \n\n\"You sure?\" \n\n\"Uh- Oh, the painting room! Ah, no, I need to finish that.\" \n\n\"Lying to me, Kimberly?\" He tsked. \"Turn around.\" \n\nKim blinked. \"Uh. . .\" Her blush spread out over her face like hot water. \"M- I'm sorry, it-\" \n\n\"Shh.\" He said firmly. \"Turn around.\" The younger man stood up slowly with a light smirk pulling at his lips. He stepped into her space with a predatory strut, closing the distance between them with calm grace. Elliot's demanding heat made Kim tremble and unconsciously shrink back against the wall. There was nowhere she could go, though; she was trapped. \"I said turn around.\" \n\nKim whimpered, trembling in the wake of his powerful presence. He didn't even have to try to make her weak and he knew it. She threw her hands out against the wall to brace herself, looking back up at her master. \"Mew. . .?\" \n\nElliot pressed his chest into her back and began to speak in a low, husky voice. \"I don't like being lied to, Kimberly.\" \n\n\"I- I- I-\" \n\n\"You. . .? What, kitten. Speak up.\" \n\nA full body shudder rippled through her. \"I'msorrymaster. I made a mistake.\" \n\nHis breath was hot against her neck, his body pressing her against the wall but he never touched her with his hands. He knew she wasn't going to resist him, but he wasn't trying to assert himself. Why? Had she been so bad that she wasn't worthy of his touch? This thought made her mewl out pathetically by way of apology. He had to know she wasn't intentionally trying to disappoint him. He had to know! \"I'm sorry!\" \n\n\"Shhh.\" He whispered. \"I don't want to hear it, Kimberly. . . I asked for something simple, you're not new to this, are you?\" \n\nWas she supposed to speak? Of course she was, she'd been asked a question. She opened her mouth. \n\n\"Shh.\" Elliot touched her lips with his finger. \"I said no.\" \n\nShe whimpered, looking up to him over her shoulder. Submissively, she nodded and turned her gaze down. \n\n\"Good.\" He shifted some of his weight to her, causing her to arch her back. \"She's trained you well, hasn't she?\" \n\nKim nodded. \n\n\"Not well enough, apparently.\" \n\nThose words bit into Kim. Deeply. She'd tried to be a good maid for them, she'd tried hard to be a good girl, she'd worked hard and to loose all that because she'd forgotten something simple? Kim whined softly, mewling out a pathetic apology. \n\n\"Maybe I should leave you like this while I work. . . Don't you think you should be corrected?\" \n\nKim hung her head between her arms and sighed. \"Yes master. . .\" \n\nA finger trailed down between her shoulders, following the ridges of her spine to her lower back- Elliot eased up on her and soon the finger was replaced by his full hand stroking down her back to cup her thick, grippable ass. He gripped her- he held what was his- and said, with utter finality: \"I want you to stay here. Like this.\" \n\nKim arched her back deeper, sliding her hands up the wall so they were touching- she knew the effect it would have to put her curvy butt on display. With a little effort she managed to draw her knees together to flatter what her master wanted to see. When she felt his touch draw back and his heat ease back from her, she tensed her thighs for his benefit. \n\nShe might have failed him, but she could make it up. He deserved it. \"I'm sorry, master.\" \n\n\"It's all right.\" He said as he wandered over to his project and started unpacking the desk. \"You've had a long week, haven't you?\" Wood clattered along with some tools, Elliot muttered something, completely indifferent to his maid's posture. \"I think you're enjoying this, though. I know how hard it is for someone like you to find a job you can get into. . .\" \n\n\"Or a job that gets into me. . .\" Kim whispered. \n\nElliot continued sorting through his desk project for a while and once he had everything in place he paused. \"Kimberly.\" \n\n\"Y- Master?\" \n\n\"Do you dance?\" \n\n\"I- not usually. . .\" \n\n\"Shame.\" He went about putting together his new desk. \"Sylvia might teach you, but you have to be good to earn that privilege, don't you think?\" \n\nKim swallowed. \"Y- Yes, of course. I. . . I'll try to be better.\" \n\n\"I know you will.\" Elliot said absently as he assembled the desk. \"Tell you what, in the meantime, why don't you start cleaning upstairs. Start with the back rooms and leave my bedroom alone for now, I have to move something later and I don't want you cleaning it twice.\" \n\n\"I-. . . Am I allowed to get up?\" \n\n\"That's what I said, wasn't it?\" \n\n\"I. . . Thought you wanted to. . .\" \n\n\"To what, kitten?\" \n\nKim shifted uneasily, glancing away not sure whether she should be ashamed or not. \"I thought you wanted to look at me. . .\" \n\nHe smirked as he grabbed a screw driver. \"Let's not worry about that. How about you start lunch in an hour, then we'll see if you've learned your lesson. . .\" \n\nKim stood up shakily. \"Y- Yes, master McKenna.\" She obediently filed out of the room feeling more confused than ever where she stood with the McKennas. Kim did as she was told, though, trotting upstairs and ensuring every thing was cleaned up and the rooms were straightened out meticulously. Surely she was going to earn back some of the good will she'd been building up. \n\nAfter she finished, Kim headed downstairs and snuck around the railing. She peeked to see if Elliot was paying attention and waited until his back was turned to duck into the painting room- it was stupid, maybe, but she still felt the need to sneak around to 'make up' for her slip. \n\nAs it so happened, she'd also managed to get her cleaning done within the hour which gave her time to start lunch; a warm ham sandwich and a glass of iced tea that she finished off with a lemon wedge. It was cheesy, for sure, but it felt right to at least make the attempt. She was supposed to serve, by god she could do it right. \n\n\"Lunch, mister McKenna.\" Kim said as she slithered into the new office, her heels clicking sharply on the floorboards as she made her way to the newly assembled corner desk. Elliot was busy cleaning off a plush executive's chair and seeming so engrossed in it, he barely gave her a moment's glance. After a moment Kim flicked her choker bell to make it jingle. \n\n\"Huh? Oh, right. Thanks. . .\" \n\nKim clasped her hands demurely \"Would you like anything else?\" \n\n\"Hm. . .\" The large framed man turned the chair around, rolled it forward. \"Join me?\" \n\n\"Ah. . .\" \n\nHe tapped a clean spot of flooring near his chair, his eyes meeting hers evenly. There was no question where she was going to be sitting. As Kim sank down to her knees, a thrill raced through her; the possibility so close she could smell it. \n\n\"So, I've been thinking. . .\" Elliot picked up his sandwich and casually spread his legs slightly, enough that Kim's chin was right against his knee. \"What ideas did you have?\" \n\n\"Ideas? Oh, for the uniform?\" \n\n\"For your uniform.\" He nodded, taking a bite. \n\n\"Well. . .\" Kim paused. \"I'd been thinking about the uh,\" \n\n\"Hang on.\" Elliot set his sandwich on the desk and looked at her. Before she could open her mouth again, he leaned forward. \"You have a lovely voice, I want to hear it. . .\" \n\n\"Oh- uh-\" \n\n\"Speak up.\" \n\nKim cleared her throat, suddenly very aware of the distance between them and the heat of his presence withering her feeble defenses. \"M- Ma-\" He silenced her with a finger to her lips. \n\n\"Speak.\" \n\nShe swallowed. \"Master McKenna. If it would please you.\" She stopped and started breathlessly under his firm gaze. \"I'd like to get some contact lenses. . .\" \n\n\"Go on.\" \n\n\"S- Som-\" Again he put his finger to her lips. She whimpered softly and lowered her gaze. \n\n\"Stop that, you're a grown woman- you're our maid.\" \n\nKim swallowed. \"I'm sorry, master. . .\" \n\nThat earned her a brief smile. \"Try again.\" \n\nA deep breath and Kim looked up at her employer, \"I'd like to be everything you both want, master.\" \n\n\"Is that right, kitten?\" This time when he reached forward his finger traced her jaw, he delicately cupped her cheek and held her with that firm, unforgiving hand. \"How would you like to do that?\" \n\nKim turned her head to nuzzle into the touch while keeping him in her view, murmuring the words softly. \"I can get contact lenses, I can find a longer tail. . . I can paint my body for you, master.\" \n\nElliot actually seemed to stop breathing for a moment as he cupped her cheek. After a brief flash of amusement, he slid his hand down her neckline. The caress set Kim's body trembling as she looked up at him with a will not entirely her own. \"I like you the way you are-\" \n\n\"Bu-\" \n\n\"Shh.\" He gently patted her cheek. \"Don't interrupt. Are you saying you want to keep the job then?\" \n\n\"M-\" \n\n\"What did I say about this?\" \n\n\"Mew.\" Kim looked him in the eye. \"Meoowww. . .\" With a shaking hand she leaned forward into his space and placed her hand on his chest. He took the hint and leaned back, giving the older maid room to move; she slunk up Elliot's thighs, rubbing her cheek against the material of his jeans while watching his reaction out of the corner of her eye. With her position, she also gave him a flawless view of her curvy butt, now almost peeking out from under the frill of her uniform. \n\nAs she worked her way up her master's body, spreading her scent across him and drinking in his, her uniform slid up just that little bit more to reveal her thick flanks. Elliot's heart was beating hard, even through his jeans she could feel it pulsing through his legs. \n\nThat was before she found a particularly thick, hot part of something hardening under his pants. She was learning it seemed. Kim turned her head up and smiled a soft, proud smile. \"If my employers are for want of something, I've not done my job. . .\" She dared a glance down to find his belt, then looked up. \"If you want a cat girl, master. . .\" ",
        "Elliot leaned back in the chair a little more, adjusted his weight forward. Practically inviting her. Kim's breath caught and she dampened her lips. Instead of answering the silent question of whether she should continue, he stroked her hair back. Once. Twice. Then he rested his hand on the back of her head. In a husky voice he whispered. \"Show me.\" \n\n\"Mmrrrrrrrr. . .\" Kim purred, nuzzling against his arm as she reached for his belt. In no time she had his pants undone and open, looking up at him for confirmation- He wasn't about to give it to her, he stroked her hair back and petted her playfully as she sucked in a breath and reached for his cock. \"Wow.\" She breathed when she found it under his boxers. Elliot was casual, cool through the entire affair, but the moment she tried to wrap her hand around his girth he let out a warm sigh. \n\nHe was thick- definitely the kind of thick that made it hard to entirely wrap her hand around. While Kim liberated it from his pants, she only had one thought running through her mind- how was she going to take care of him? It had been a year or more! \n\nFocus and breathe. She told herself. By the time she finally managed to get his dick free, she was panting, panting right into the head of a thick, good sized penis that would've been more than enough to satisfy a horse, she was sure. Everything was perspective, but in that moment, Kim blushed at the prospect of it. She looked up at Elliot and mewled. \"Master. . .\" \n\n\"Yes, kitten?\" \n\n\"Y- Your sandwich is going to get cold.\" \n\n\"So it is,\" Elliot said absently, reaching for it without letting go of the back of her head. Kim continued to nuzzle him softly, even going as far as to kiss his wrist and purr as best she could. \"You're so thoughtful, thank you.\" \n\nKim exhaled a long, hot breath. \"My pleasure.\" She purred, leaning forward to press her plush lips against the side of his shaft. It was so warm! The older woman closed her eyes and inhaled the long forgotten scent of a real man, savoring it for a moment. She looked up to see him looking at her with a faint grin. \n\nNever one to start something and leave it unfinished, especially not with a client, Kim laid her hands on Elliot's thighs and kissed his cock. Starting at the base, another a couple of inches up, another near the tip, she looked up at him- at her master- and opened her mouth around the swollen head. A soft moan of satisfaction rippled through her client's body as she turned her head and sucked the air from her mouth, easing herself down on the younger man's cock so his foreskin slid back. \n\nInch after inch, she teased down and lathered him with her tongue. She had missed this, she had missed that hot, semi-salty taste of a real man. Kim moaned her own little groan and started working herself down as Elliot combed through her hair. \"God. . . She never does this. . .\" \n\nKim whimpered, spurred on by the tiniest of encouragements to test her limits. She slid down until the head was filling the back of her mouth- she wanted to gag, to cough- but a good maid could handle all of her employer, couldn't she? \n\nWith a held breath, the slightly older woman turned her head down and tried to work herself down even more. Her gag reflex balked at the idea of trying to stuff so much into her throat and almost immediately she sputtered and coughed to the side. Kim tried her best to stifle the reaction, but there was no hiding the mess of spittle she was making. \n\n\"Careful . . .\" Elliot sighed, stroking her hair back. \n\nCareful indeed. Kim eased up and switched her approach. She stroked his thighs gently with her hands as she started to bob up and down slowly, taking a few inches and letting it go. One stroke after another and she was getting into a familiar rhythm. Years of practice had honed her skills and they were swiftly coming back, reminding Kim what it meant to really take care of someone. The older maid turned her head left and right, working her tongue into the bottom of Elliot's rock hard cock. \n\nUp and down, the maid in the catgirl outfit worked her head with great care to serve her master. Her little bell jingled in time as she worked. Faster and faster. Soon it was jingling non-stop like a Salvation Army bell and Kim had found her rhythm to her master's blissful appreciation. She massaged Elliot's powerful thighs while she worked, loosing herself in the motion. \n\nIt went on for several minutes before Elliot let out a low groan and gripped Kim's skull, balling up a hand full of her hair. He pulled her head back mid stroke so she was looking up at him with her lips pouted around his thick cock. They looked at one another. He was breathing hard. Kim whimpered. Had she done something wrong? \n\n\"Stop.\" He commanded. \n\nKim obediently opened her mouth and pulled back- a string of saliva connected them and they both eyed it- him with appreciation and her with apprehension. \"Master?\" \n\nElliot huffed. \"Go clean our room.\" \n\n\"B- but-\" \n\n\"Shh. Just. . . Just go. I need a second-\" \n\n\"Did I do something wrong?\" \n\n\"No. No. . . No.\" He smirked. \"Just go upstairs, I'm not going to finish my lunch like this. \n\nKim leaned in and nuzzled his neck, murring. \"You can finish both, master. . .\" \n\nElliot laid his hand on her shoulder. \"Go.\" \n\n\"Mas-\" Kim squeaked when Elliot swatted her cheek. It didn't hurt, but it sent a clear message. Obey. She nodded meekly and turned away, cleaning her mouth, unsure if she should be ashamed or not. Her knees trembled as she marched up the steps to the McKennas' bedroom with her cleaning rag in hand and her shoulders slumped. \n\nMaybe she'd overstepped the unspoken boundaries they'd established, maybe she was wrong to want to do so, but after Sylvia. . . How could she not at least try? \n\nKim muttered to herself as she started by remaking the bed and cleaning off the shelves, the nicknacks and the stupid dresser. God, why was she so dense!? He'd just wanted a damn sandwich- she was supposed to be the quiet, submissive maid, not the- \n\nKim practically tripped when she rounded the corner of the bed. She flung her hand out to catch herself and practically tore the comforter off on her way to the ground. What a day. \"Oh, great.\" Kim recovered herself, dusted down and started to remake the bed, mumbling obscenities all the while. \n\n\"Hey-\" Elliot's voice cut off her musings just as she was tucking the corner under the mattress. She looked up at him. He smirked. When she started to dismount the bed he held up a hand. They looked at one another for a moment and he closed the distance between them, cupping her cheek softly. \"What's wrong, Kim?\" \n\n\"I- I. . .\" She sighed. \"I don't think I can be what you want. I- I'm not good at it, and I'm terrible at figuring out what you want.\" \n\n\"Shh.\" He slid his finger to her lips and though he was addressing her, she could see his gaze was roaming her figure rather than meeting her eyes. That slow, lascivious prowl over her bare thighs that made her squirm. With an unerring touch he stroked her hair back between her cat ears. Unconsciously she found herself turning into his powerful yet gentle touch. \"Tell me again what you want to do with your uniform. . .\" \n\nKim swallowed, risked a look up at him. He was still eying her body as he stroked her hair. \"A\u2014 I think feline contacts?\" \n\n\"Mhm?\" \n\n\"A longer tail- Sylvia- Mistress likes it. . . Maybe paint? Stockings? Something for my legs. Maybe my back, too?\" At those words Elliot's fingers trailed back through her blonde locks across her exposed back. \"Mmmrrrm. . . If- If you'd like?\" \n\nThe younger man gave her a long critical look, perhaps envisioning her changes. Finally, he said: \"I think I would.\" Then and only then did he deem her worthy of a look. \"I think spots would suit you, don't you?\" \n\n\"L- like a leopard?\" \n\nThat earned her a smile. \"Mhm. Fit your nature, don't you think?\" Gently, he traced his finger along her jaw to her lips. Kim opened her mouth to take the tip, looking up at him. \"Yes, our little leopardess. Would our kitten like anything else?\" \n\nKim lapped at his finger, arching her back to bring her heavy breasts between her forearms and give him a full view of her rather generous cleavage. \"Mmmew?\" \n\nElliot smiled knowingly, \"You've been such a good girl for us, Kim. . .\" \n\nShe purred softly. \n\n\"I think. . .\" He took a long, deep breath. \"You may.\" \n\n\"Mew?\" \n\n\"I think my wife and I have both agreed you're almost exactly what we hoped to find.\" Elliot withdrew his finger and stroked her hair back a couple of times. \"Don't move.\" \n\nKim stayed perfectly still on all fours, looking up at him vaguely uncertain of what would be expected of her. Secretly she knew what she wanted him to want, but she didn't dare express it. Not even as he sat down beside her and ran his hand down her spine, following the arch of her back to her flank. His hand splayed out to cup her butt and he gave her a firm squeeze. \n\n\"Has anyone ever told you how beautiful you are?\" He said softly, leaning towards her. He pointed to the mirror in front of them. Kim gazed at her reflection dubiously. Even as her employer traced her thigh down. Then back up. He pinched her tail and gave a soft tug. \n\n\"Ah! M- Master. . .\" \n\n\"Shh.\" Elliot let her tail go, his fingertips 'accidentally' crashing into her swollen nether lips. \"When I first saw you, I didn't think we were that lucky- surely no one as sultry as you would want the job. Let alone to handle both of us. . .\" \n\n\"Kitty l- likes to please-\" \n\n\"I see that.\" Fingers brushed forward against Kim's nethers, cupping her firmly. Next thing she knew Elliot's thumb was pressing on her tail plug. She arched her back even more deeply with a long purr. \"Mmmm. . .\" \n\nKim closed her eyes. Her heart hammered against her ribs as she tried to catch her breath, already knowing there was no point. He owned her. She wanted to be owned. \"I'm a good kitty. . .\" \n\n\"You are.\" He cooed reassuringly. \"I think. . .\" He pressed himself against her so his lips were against her ear. \"I think I want to put a collar on you. . . Just for today.\" \n\n\"Y-\" Kim leaned back into his fingers when he pressed against her. She was soaking her panties by now, no doubt about it. \"Please. . .\" \n\n\"That's a good girl. Say it again.\" \n\n\"Please.\" Kim looked to him weakly. \"Please, master.\" \n\nA little smile crept across his lips and he rose slowly, deliberately drawing his fingers across her side. To her mouth. She took them to his palm looking up at him with wide, vibrant eyes. \"P'ease?\" She accented her request by licking the bottom of his fingers. \n\n\"Tsk, tsk.\" Elliot pulled back and playfully dotted the tip of her nose with a finger. \"You'll wear it tonight until you leave. If you're good to us next week, you can wear it in the evenings after I come home. . .\" \n\nKim whimpered and nodded meekly. \n\n\"If you're an exceptionally good girl, you can wear it during the day. . .\" He continued as he dipped into the dresser and pulled out a thick leather collar that read \"Kitty\" with a leash hook up on the back of it. Then he pulled out the leash and looked at her with a patient little smirk. When he was near the bed again he knelt down and met her gaze evenly. \"I put this leash on you,\" he explained calmly. \"You belong to us.\" \n\nKim swallowed and nodded. \n\n\"I mean belong to us. Kimberly.\" He raised the collar between them, eying her. \"You're not going to be Kim ever again in this. . . Do you understand? As long as you're here, when you have this on. . .\" \n\nKim leaned forward and nuzzled against his cheek. \"If it makes you happy, I want to be the maid you want.\" \n\n\"Mmm,\" Elliot gently undid her choker bell and opened the collar for her. Kim swallowed and placed her neck in it, closing her eyes as he gently affixed it, slid two fingers in to make sure it wasn't too snug and then slowly stood up. \"Look at me, Kitten.\" \n\nKim-kitty looked up at her master. He put a finger to her lips firmly, ensuring she understood before he stroked her hair back. She purred and nuzzled into him, gaze turned up playfully to meet his eyes. \"Mrrr. . .\" \n\nHe smiled a little, stroked her hair back some. \"If you're a good girl, I'll let you wear the leash. . . But you'd started something.\" \n\n\"Mrr?\" \n\n\"Turn around. . .\" \n\nKim-kitty lowered her gaze and slowly, gracefully prowled around the bed in a full circle. She was careful to accent her stride with a pendulous sway of her generous butt which only added to the fluid movements of her body, even her breasts swayed in the tight uniform as she curled around. When she got closer to Elliot, she rubbed herself along his stomach and arched her back for full effect, earning a few generous strokes along her back in the process. \"Mmmrrrrrr.\" She purred her appreciation. \n\n\"My, my, someone's an eager girl, aren't they?\" \n\n\"Mrrow.\" After a few seconds she rolled over on her back and tucked into a little bit of a ball, drawing her hands up near her chest and looking up at Elliot with a mischievous expression. \"Mew?\" \n\n\"Messing up the bed you just made, hm?\" He tsked. \"Bad kitten. . .\" A wry smirk crossed his lips. \"C'mere.\" \n\nKim-kitty rolled over to her master and made a curious mewling sound. Before she was on all fours again, though, the younger man was putting his hand on her collar, tugging softly. She followed his commands unerringly and haunched down where he'd indicated. \"Mmmr?\" \n\nElliot ran his hand down her flank, over her tail plug and nether lips, pressing more firmly with every moment. He massaged her clit through her underwear without a moment's hesitation- without question or thought. She was his kitten, he didn't have to ask permission. Kim mewed softly as she arched her back, pressing her chest to the bed and urging him on to further explorations. He worked little circles into her lips as he cooed softly. \"I enjoyed what my maid did for me. . .\" \n\n\"M- ah,\" Kim sighed deeply, sinking down with her ass up in the air in an imitation of a cat stretch- she arched her back into it even further when Elliot started to move the horizontal striped underwear aside and- for the first time- slicked his fingers with her moisture. \"Ahmmm...\" God was she really going to let him do this? \"Mrrrrowwww. . .\" \n\n\"So I think. . . I'm going to pass on the favor. Sort of.\" Elliot paused with his finger touching her opening. His other hand was already working her panties off. \"Would you like that?\" \n\n\"Y-\" Kim mewled. \"Mrrr!\" She sighed and rolled her hips back into his hand. His finger wasn't thick, but she could feel it pressing against her insides; he was almost too big for her.. She sighed deeply, relishing the sensation. \"Mmmm.. . .\" \n\n\"Is that right?\" He whispered softly, sliding his finger even deeper. Then he pushed upward towards her lower back, massaging around as if looking for something. Kim was about to say something when she remembered she wasn't allowed to speak. He chuckled to himself and drew his finger out before he leaned forward onto the bed. His hands gripped her ass cheeks, down her flanks. Possessively he clutched her hips. \"Mmm. . .\" \n\nKim-kitty whined and rolled back against him while his hands wrapped around her waist firmly. \"Mrrrrrroowww...\" Master. . . Fuck me. . . \"mew. . .?\" A hand grabbed her pony tail and Elliot pulled her head back. The other clamped down between her shoulders. He pressed down on her firmly, crawling up behind her. \n\nHis thick, hot cock, barely sheathed by his jeans now pressed up against her wet pussy. Obediently, longingly, Kim rolled her hips back into his, slathering her moisture over the rough material of his jeans. He was so warm, so tense. His powerful hand clamped down on the back of Kim's neck, tightened. He was leaning into her, right against her ear. \"Are you as soft as your body, little kitten?\" \n\nKim whimpered loudly. \n\nHe drank in her scent. \"Show me how much of a good girl you are.\" \n\nAnother whimper parted her lips as she reached back awkwardly; he held her firmly in place even as Kim managed to undo the thick clasp. Afterwards she pushed his pants down, freeing his thick meat from its bindings. Absently Kim wondered if Sylvia would have done this for him, too. \n\nThe answer was pretty obvious; she was too strong and powerful in her own right to bend. They wanted someone like Kim. They needed Kim-kitty. That thought sent a thrill through her. She mewled it out and rocked back against her master. His cock throbbed against her and he pushed upward to rub against her tail. The plug inside her bobbed, sending a lurid shiver up her spine. \n\nKim's breath came in shorter and shorter sips while Elliot's cock rubbed against her nether lips. Her timid little whimpers echoed through the room, knees quivering more and more with each passing moment. Elliot, by comparison was calm; powerful in his superiority as he leaned over her, sliding his hands up over hers and sighing right in her ear. \"Our little kitten is so beautiful. . .\" \n\nThe compliment, undeserved and unexpected, made Kim suddenly very self conscious; she could feel the velvety fabric of her maid's uniform slide up her curvy thighs and over her rump while Elliot- her master- slid forward over her. \n\n\"So gorgeous in her outfit.\" He cooed in her ear. \"So eager to be our good girl, so very fulfilling. . .\" As if to accent his point, he eased the tip of his cock into her. He barely missed her opening the first time and Kim sighed. She opened her mouth to beg him to stop teasing. But then the tip found her opening. \n\n\"H- ho-\" Kim stuttered as he parted her flower into full bloom- so thick and warm, Kim's voice died on her lips while he pushed into her, inch after inch split her open, stretching her more than she had been opened up in her entire life. The sensation was incredible, dizzying- \"Holyshit,\" she mewled into the comforter. \"Ah!\" \n\n\"You okay?\" Elliot whispered with sudden concern. \n\n\"M- mew-\" Kim clenched down on the massive invader with a weak smile. \"M- Master needs a shoehorn. . .\" \n\nHe snorted at that and gave her another slow thrust, feeding her more of his meat, leaning his weight into her back more and more as his obedient catgirl maid dug her toes into the comforter. Elliot groaned a deep, contented sigh the further he sunk into her. It never seemed to end and before she knew it, she could feel his cock rubbing against the tip of the plug. \n\nSurely he felt it, too. He leaned down so his meat was aiming towards her spine. With a final, deep thrust, he pumped his entire length into the soft catgirl maid. His power was overwhelming- he drove into her with an incredible thrust that slammed his hips into her meaty ass. They moaned together, his breathing hot in Kim's ear. She panted and whimpered as he thrust again. God, he was so big- \n\n\"You're a naughty kitty.\" Elliot breathed between slow thrusts. \n\n\"M- ah- ah- Ma-\" \n\n\"Shh.\" Elliot's hands slid up her arms to her shoulders. He clamped down on her with her body arched back for him and him alone. She looked up at her master to find him smiling to himself as he looked her over. Their gazes met. His manner cooled and he smiled a private little grin. \"Enticing me? Flaunting this body of yours thinking I'd just give in to you?\" He tsked. \n\nKim opened her mouth, stopped when Elliot slapped her ass hard. \"Ah!\" \n\nSLAP. \n\n\"Ah! G-\" \n\n\"I didn't say you could talk.\" Slowly his hand slid over and balled up a fist full of her hair. He backed up and plowed in Kim-kitty's soft ass, shoving her into the mattress. He wrenched her head back so she was looking up at him when he leaned forward. \"I'm not sure if I should punish you or reward you.\" He thrust into her again, spasmed, his face a mix of bliss and lust. \"You've been trying so hard. . . But you've been a naughty girl. . .\" ",
        "Kim-kitty whimpered and arched back obediently, mouth hanging open. \n\nElliot plowed into her again and again, holding her just like that while he used his mewling kitten. He deserved it, they both did. Kim tightened herself around him, struggling to breathe through the moan. \"Ohmygod-\" \n\n\"I said.\" He slamed into her hard enough to make her shudder. \"No. Talking.\" \n\nKim whined into a heap, face down, ass up. Her master deserved it. She held her muscles tight around his thick heat, offering. Begging. When Elliot leaned over her, she buried her face deeper in the comforter. He couldn't hear her begging. \"Please fuck me. . .\" \n\n\"Kimmy. . .\" Elliot cooed teasingly. \"You're not following directions. . .\" He grabbed a hand full of her hair and pulled her head up. They looked at one another. His eyes were firm, tollerent like a father scolding a child. He thrust into her up to the hilt. \"Disobey me and this ends.\" \n\n\"N- n-\" Kim whimpered pathetically as she tried to roll back against him, sinking her teeth into her lower lip. For every inch she took, she could feel the plug in her ass trying to force itself out to make room for her master. It wouldn't, of course. She clamped down on them both and pushed up on shaky arms no longer able to support her own weight. \"Nomaster- M- Mewwww!\" \n\nAnother powerful thrust and Elliot was pounding into her again- Kim lost herself in his demand for her body- she was beautiful to him and he wasn't ashamed to make it clear to her. His hands traveled her entire form, cupping, squeezing, pulling. Demanding. Kim hadn't felt this wanted in years. . . Did she deserve it? Elliot's quickly increasing tempo told her she might have in his eyes. \n\nSo that was exactly what she did; she gave in to him more so- she was theirs to do with as they pleased. Kim trembled as she tried to push herself back, rolling her hips in a tight circle which had the added effect of batting the tail plug with Elliot's cock every time she moved. \n\nBeing overstuffed made her dizzy with lust, fearful of what might come- did she dare ask her master to pull out? Did she even want him to? Kim-kitty didn't. Kim-kitty wanted her master to be happy. As she rolled her hips back into Elliot's, she felt him grab a hand full of her hair. \n\nBefore she realized what was happening they were tumbling on to their sides. Elliot grabbed her around her waist and slammed his meaty cock into her, mashing the plug right into it. She cried out, throwing her head back as the overwhelming power of his desire and her lust burned through her core. He didn't stop, though. He pounded her again and again, faster and harder, driving his demand home. He grabbed her collar next, panting into her ear, yanking her back. \n\nIt was too much. She was a puppet in the hands of a god; bright plumes of pleasure exploded across her vision and he let out a moan that echoed through the empty house. The tingling sensation of her building orgasm came hard, hit fast, broke the thick maid in two. She spasmed and jerked, clawing at the mattress now while Elliot pounded her relentlessly. The quivering catgirl mewled out blindly, trying to beg for a minute. Her master wasn't going to give it to her, though and as she came, she struggled in his arms to get away. She pushed against him. Her entire body tensed and spasmed and she continued silently begging even as she lost all sense of who she was. \n\nThere was only Kitty. There had only ever been Kitty. Kitty obeyed. \n\nHer master slammed into her again and again. Panting harsh demands in her ear. Growling. Holding her protectively. He wasn't done. She couldn't respond; couldn't even think. \n\nFinally, when she felt like she was going to black out, Kitty's master stopped his assault on her pussy and graciously allowed her to ride out her orgasm- tears streaked Kitty's cheeks as her body shuddered and convulsed in her master's arms. What felt like an eternity passed before it finally subsided enough that she could breathe. Kitty mewled out between pants of her master's name, whimpering it like a mantra. \"Master-\" she'd pant. \"Mew. . .\" \n\n\"Shh.\" Her master said firmly in her ear, stroking back her hair. \"Shhh. Don't speak.\" \n\nThey were both slicked with sweat, but it was only Kitty who seemed to feel cold; she shivered against the man and struggled for his warmth. That earned her a thrust- a deep, powerful one that rubbed both of her openings and made her whimper all the more. \n\n\"I've decided you're going to get a reward for all you've done for us. . . Would you like that?\" \n\n\"M- mew. . .\" \n\n\"That right?\" Fingers laced into her collar and pulled her back. Another thrust. A soft moan. Something throbbing inside her. Master panted softly. \"Say it. . .\" \n\nKitty swallowed, arching back against his chest. In a barely audible mewl, she whispered: \"Cum in me, master. . .\" \n\n\"You deserve it.\" \n\n\"I deserve it. . . G- Good kitty.\" She had been a good kitty. She'd been a good maid, too. She was so wanted and desired- she was going to please her masters whatever it took to stay a good girl. \"Cum in me, master.\" \n\nElliot growled softly in her ear, his hand prowled down to her hip. Gripped her. He owned her. She wanted him to own her. She wanted to feel needed- this was her right, this was right. \"What if I decide you haven't earned it?\" \n\nKim whined. \"Please.\" \n\n\"Please what?\" He pulled on her collar lightly. \n\n\"Please cum in your kitten!\" \n\nSomething inside her tensed; Elliot's cock throbbed and seemed to get harder. She tightened her entire body, ready to accept her reward. She tightened so much, her master groaned in her ear. \"Make me.\" He demanded. \n\nKim started to roll her body but Elliot stopped her and tightened his grip on her collar. Picking up his subtle hint, she tightened her muscles and pushed off with her ass cheeks only to be slammed back against her master's powerful thighs. She repeated this several times, a servant even in bed- as she knew they both wanted. Kim cried out and pounded back against him. Again and again. Faster. Harder. \n\nEvery movement sent his breath coming in sharper and harder. He groaned into her ear. Abruptly he pulled on her hip, burying his massive dick up to the hilt. When she tried to go forward again he held her there. A demanding thrust and his hard muscles tightened. Sprung. He shoved into her even harder and yanked back on the collar. \"AGH- AGGGRRHHHH.\" Elliot snarled in her ear. \n\nHeat. Throbbing, Powerful heat swelled in Kim's pussy. Elliot thrust into her again and jerked forward. A thick wave of cum erupted deep inside the curvy maid. One after another, Elliot pumped powerful blasts of spunk into his willing kitten, thrusting every time even as his cum splashed into her. She didn't even have time to breathe as he used her. \n\nAll she could do was feel her master's satisfaction while another wave of his spunk was pumped into her. It was so much! No one had ever done that before- even if she'd let them cum in her, which she never did. Kim panted her weak approval as Elliot pumped into her again, emptying every last drop into her. When he finally stopped, she clamped down against him and rolled her body a little to tease out anything he'd missed. Even then, she'd never felt so full as when she had him in her and when he emptied into her, she almost felt too full. It was blinding and incredible. How could she have gone so long without this? \n\nFor his part in it, the younger man held her firmly, never one letting up control. Elliot's position was unquestionable even in the throes of a powerful orgasm. When he finally subsided, he leaned against her and growled in her ear. \"I'm going to do this to you every. Single. Time.\" \n\nKim's heart punched into her throat. \"Y- Yes master McKenna. . .\" \n\n\"Goooood girl. . .\" He slapped her ass. He was still panting when he wrapped his arm around her tummy and thrust for good measure. \"Good god, where did you learn how to do that?\" \n\n\"Practice?\" It felt absurd to take a casual tone covered and filled with so many fluids, but Kim still managed to keep straight as she continued. \"A maid should know how to please her employers, shouldn't she?\" \n\n\"I suppose so. . .\" \n\nKim dared a glance back. \"Every time?\" \n\n\"Every. Time.\" \n\nShe bushed deeply. Elliot slowly withdrew leaving her empty and hollow, cum dribbling down the side of her ass cheek. He exhaled against her ear. \"Every time. . .\" \n\nIt wasn't right to feel this aroused. She should have been deeply ashamed. She wasn't supposed to have done this. She really wasn't supposed to let him do that. Yet. . . God, it felt so right. How could she have denied him if she wanted to? \n\n\"Get some dinner for us, would you?\" His calm tone snapped her back to reality. \n\n\"H- huh? Oh. . . Y- Yes, of course. J- just let me get cleaned up.\" \n\nElliot was already off the bed and recovering his jeans. \"Panties stay off.\" \n\nKim blinked at that and, dumbfounded, whispered her acknowledgment. \n\n# \n\nKim wobbled on shaky knees as she traversed the kitchen in the course of making dinner. Images of what they'd just done swirled around her mind like snapshots of someone else's life. Kim wasn't the one who did things like that, surely it couldn't have been her who'd done those things. . . \n\nShe had the soreness to remind her of her master's demands, though. She had the massive load she was still having to clean off her inner thigh occasionally. She had broken into entirely new territory and she loved it. \n\nWas she really that simple? Of course not. She was human. . . \n\nA shiver ran up her spine while she finished up making dinner and laid the plates out. Elliot was down a few minutes later, all showered and wearing new clothes which struck Kim as horribly unfair, considering she still smelled of sex and him. \n\nMaybe it wasn't all bad. \n\nWithout a word, he strolled into the kitchen and grabbed a bottle of wine and a pair of glasses, setting them up with the dishes. Trepidation grew in Kim as she finished the meal and laid it out. With every movement she could feel his eyes on her, but he was stoic throughout the entire thing. \n\nKim ventured a quiet murmur. \"Will Mistress McKenna be joining us?\" \n\n\"Not to my knowledge. . . Why don't you have a seat.\" \n\n\"Uh- sure. If I can even sit.\" \n\nHe smirked at that. \"You'll get used to it.\" \n\nKim swallowed, bushing as she eased into the chair. Unconsciously, she clenched her thighs together as if trying to force herself back together. She was still riding the buzz of post-orgasm bliss, but couldn't help but eye Elliot. He'd opened her up and now without him between her thighs, she felt weak and empty. \n\n\"So,\" he said casually. \"Tell me about these changes you want to make. . . To your uniform.\" \n\n\"Oh- uh. . . I'd been thinking about body paint. Or temporary tattoos. . . Like I mentioned. Maybe contact lenses?\" \n\n\"Mmhm?\" \n\n\"Stockings, maybe. Sheer black ones.\" Kim added uneasily, \"W- whatever else you'd like, too?\" \n\nThe younger man looked her over with a thoughtful smirk. \"I guess we could let you do that. I suspect you'll want us to pay for it. . .\" He poked the air with a fork. \"Right?\" \n\n\"Um. . .\" \n\n\"Speak up.\" \n\n\"I- If you would?\" \n\nElliot took a big bite and leaned back, chewing on it as he watched her. \"Do you think you're worth it?\" \n\n\"Uh- d- do you?\" \n\n\"I asked you first.\" \n\nShe swallowed. \"I do. . .\" \n\n\"Why?\" \n\n\"B-\" Kim fidgeted. \n\n\"This is negotiation, Kim. Try to keep your cards close to your chest.\" He gave her a wry smile. \"Why're you worth it?\" \n\nIn spite of everything, that threw her for a loop. Kim stared at the space between them for a moment. Was there a right answer? Was there even a good answer? What could she give them that no one else could- or would? \n\nShe was about to say something when she felt her leather collar rub against the raw spot it'd left on her skin. That was it; the simplest answer was usually the right one. Slowly, carefully, she eased down on her hands and knees and crawled over to Elliot's feet. She squatted down in front of him, looking up. \"Meow.\" \n\nWhen that didn't move him, she braced her hands on his thighs and, putting plenty of cleavage on display, she looked up at him with her best innocent expression and arched her back to emphasize her curves. \"If I was able to, I'd be more the catgirl you want so badly. . .\" \n\nElliot looked down at her, stroked her hair back and smiled. \"We tend to get what we want. . .\" He leaned back in the chair and spread his legs. \"Do you?\" \n\n\"Only when my master is happy. . .\" She nuzzled against his inner thigh. \n\n\"Mmm. . . That right? So tell me, how much do you expect to make this week?\" \n\nKim started to back up but Elliot held her there. \"Whatever you decide to pay me. . .\" \n\n\"What if I didn't want to? What then, hm? Give me an answer, Kim.\" \n\n\"Ah. . . Tw- Twelve hundred?\" \n\nElliot scoffed. \n\n\"Too much?\" \n\n\"Let me tell you something, Kimberly. . .\" He said firmly. \"Value is in the hands of those receiving services. Do you understand?\" \n\n\"I do, yeah. . .\" \n\nHe swatted her softly. \"You do, yes.\" \n\n\"I do, master.\" \n\n\"Good.\" Elliot stood up slowly and withdrew an envelope from his back pocket. \"I expect to see you Tuesday, kitten. . . Don't disappoint me.\" \n\nKimberly reached for the envelope- it was as thick and heavy as his dick had seemed. She blinked, looking at him with uncertain eyes. \"A- are you sure? This feels like a lot. . .\" \n\n\"Positive. . . Get those things you want and give me the receipts. We'll approve or disapprove of it next week, okay?\" \n\n\"Y- Yes! Uh- T- Thank you, Master McKenna.\" \n\nHe smiled at that and gently ran his hand through her hair. \"Kim. . .\" \n\n\"Hmm?\" \n\n\"I'm glad I was right about you. . .\" \n\nShe never would admit it, but secretly, she was too. She smiled up at her master and nuzzled his inner thigh, comfortable in the thought of his strength and warmth. This was the job she'd been born for. These were the people she was going to serve. \n\nThis was Kimberly William's new life; that of a fetish maid. \n\n***** \n\n[PLEASE REMEMBER:] \n\nThis is a draft version I've been struggling like hell to get out. I've been incredibly depressed lately and have had a hard time getting stuff together- everything from this to the Dragon Slayer stuff. But I promised I'd deliver, so here we are. \n\nI'm going to be busting my ass to get a revised version. Just trying to get in somewhere because homelessness sucks. Getting there, though! \n\nWarmest regards, \n\nTammy Silverwolf"
    ],
    "authorname": "T_Silverwolf",
    "tags": [
        "maid",
        "fetish maid",
        "catgirl",
        "pet play",
        "male",
        "female",
        "straight",
        "creampie",
        "alpha male",
        "thick"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-maids-tail-ch-07-saturday"
}