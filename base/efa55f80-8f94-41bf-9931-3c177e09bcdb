{
    "title": "Secret Smiles and Three Little Words Pt. 09",
    "pages": [
        "Alex awoke in the night, she was sandwiched between Gavin and Elizabeth in the bed. Gavin had bathed them as he always did. She could see he was exhausted but he wouldn't shirk his duty. She told him it was unnecessary which brought a scoff.\n\n\"I'm the Dom, little one, don't fucking make me prove it,\" he hissed taking her by the hair and pulling it tightly.\n\n\"Yes, Sir,\" was all she could gasp as she felt his dominance over her. The mere way he took her hair and hissed at her made her wet. Fuck the switch shit she thought at the time. I have no problem bowing before Gavin!\n\nShe looked up to his face and found him peacefully asleep. She touched his face gently and he awoke with a start.\n\n\"I'm sorry,\" she whispered as to not wake Elizabeth.\n\n\"Are you ok?\" he asked immediately. Touching her face.\n\n\"How could I not be?\" she smiled, kissing his lips to push the worry from him. \"I'm wrapped in your arms, my pussy aches, satisfied. I've tasted your cum twice today. I have a goddess at my back...gently snoring.\" She laughed as Elizabeth snorted slightly. \"But nothing compares to waking up next to you feeling your hard cock against me!\"\n\n\"You are going to kill me!\" Gavin grinned. She took hold of him. She pushed him to his back and guided him into her which made her wince as he filled her. He took hold of her face, cupping it on either side with his strong hands, as she continued to press through her pain.\n\n\"Green,\" she smiled. \"Very much green!\" He smiled at her as she began a slow grind. \"I just can't get enough of your cock!\"\n\n\"You are going to wear it down to a nub!\" he smiled as she dropped her lips to his. \n\nShe kissed his lips, nibbling on the bottom before moving to his ear and nibbling there. Her breathing rushed into his ear as she whimpered with a pleasure filled gasp as she rode him.\n\n\"If I'm hurting you,\" Gavin warned her, but she silenced him with her lips.\n\n\"In the most pleasurable way possible!\" she said never leaving his lips. Her pussy felt afire. It burned from use but she couldn't stop the hunger from overwhelming her. Pain be damned, she only had four days and it was coming to an end in mere hours now. She had to have his cock as much as she could physically take, just in case the worst happens!\n\nHe took hold of her hair as she bit her lip and clinched her eyes shut as her orgasm caused her body to stiffen. He pushed up into her driving her beyond it and down on top of him she flopped exhaustedly.\n\n\"Enough little one,\" he whispered as she lay there gasping.\n\n\"Never enough,\" she whispered back, taking his lip in her mouth and pulling gently as she sat up driving him deeper into her. She leaned back as he sat up and held onto her hips as she arched her back grinding onto his cock. She broke his rule and took him by the head as she came up but he didn't chastise her for touching him. She was beyond that and he could tell. His own orgasm was ushered from him. She bucked on him when she saw it in his face.\n\n\"Cum for me, Sir,\" she begged softly into the night. \"Please...fill me!\"\n\n\"Oh little one,\" he shook his head as she grinned at her pet name. She pressed her lips to his and rode him into his orgasm as he gasped his pleasure into her mouth as he filled her with what his body had left.\n\nHe pulled her back to the mattress with him and she laid her head next to his. Stroking his face contently as she felt him ooze out of her. She tried to move so she wouldn't leak onto him and get him messy but he gripped her ass with both hands not letting her move. They fell asleep like that. Her atop of him. He inside of her, stroking her buttocks with his fingers.\n\nShe woke up alone the next morning. Her smile instant as she moved and her sex complained about its overuse.\n\n\"Suffer, bitch,\" she whispered. \"You haven't been used nearly enough the past couple of years...time to catch up you underused goddess!\"\n\nShe listened to the argument in the next room. It sounded as if Elizabeth was having a tantrum. Alex laid there listening. She shook her head. Enough. Gavin was tired she could hear it in his voice even if Elizabeth didn't care. She did!\n\nWalking out she scowled at Elizabeth before turning her eyes to Gavin and smiled.\n\n\"You weren't there,\" Alex complained as he came to her and kissed her forehead in apology.\n\n\"I needed to get some things straightened out,\" he smiled.\n\n\"Just once, I want to wake up with you next to me!\"\n\nChapter 11\n\nSunday had come way too fast for Alex. Although Gavin had claimed her, she was still going to hold to the original agreement as she felt Madelyn forced his hand by Royce's action. She wanted to make sure that Gavin truly wanted her the way she wanted him to want her. Before she got too involved and wound up getting hurt.\n\nWhen Alex told Elizabeth what had happened with Kelly, she was neither shocked nor appalled. She knew Royce and the mere mention of his name caused her to slip a small grin. Alex didn't know why she was perturbed by the smirk, but she was.\n\nAlex thought back to Gavin's words on the way up. That Elizabeth wanted more than he was willing to give. The way Elizabeth acted after being told the story made Alex think Elizabeth wanted a Royce. Why Alex did not know. Royce was a dangerous, selfish man. His only thought was of his own pleasure. If someone got hurt he didn't care. As long as he received his desire, he was fine with whatever outcome came.\n\n\"Elizabeth,\" Alex cautioned with a shake of her head. \"He's dangerous.\"\n\n\"No,\" Elizabeth smiled. \"He just needs a sub that knows how to take care of herself. One with experience.\"\n\n\"No,\" Alex said firmly. \"He's an animal only concerned with himself. He didn't care about Kelly or whether she lived or died.\"\n\n\"Oh, Alexandria,\" Elizabeth laughed, rolling her eyes, making Alex's skin crawl. \"You have a lot to learn!\"\n\n\"Some things just come naturally,\" Alex said coolly. \"Like spotting an asshole from a mile off.\"\n\n\"Royce is from a very influential family,\" Elizabeth smiled. \"He is going to be somebody. Perhaps a Senator or even...President!\"\n\n\"No,\" Alex shook her head. \"He is going to wind up with a prison number on his back. Probably somebody's sub for a pack of smokes.\"\n\n\"Oh the dramatics!\" Elizabeth giggled. Alex shrugged but turned away, her face burned in anger at being laughed at.\n\n\"Royce's dad is a U.S. Congressman,\" Elizabeth said realizing her words angered the new girl. \"There is no way he is going to prison while Daddy has some power.\"\n\n\"I don't care who his daddy is,\" Alex said firmly. \"He kills somebody, he is going to jail!\"\n\nElizabeth shrugged. Alex shook her head. Gavin was right. Her leaving was a foregone conclusion and it seemed she had already picked a new Dom. The worst kind in Alex's limited knowledge.\n\nDinner was quiet as they ate. Alex wanted Gavin to say something but it seemed that his argument with Elizabeth wasn't over. Perhaps she should have let them argue it out and get it over with before she came out.\n\nGavin seemed lost in his thoughts. Anytime Alex caught his eye he would give her a wink but she could tell he was mulling something over. When Elizabeth excused herself to go to the restroom, Alex took the moment to break the silence at the table.\n\n\"Sir,\" Alex began softly. Her mind told her she needed to do this. Her heart screamed at her not to.\n\n\"Alexandria?\" Gavin smiled. It wasn't the same smile he had when they were alone.\n\n\"I want you to know,\" Alex began slowly, sorting the words in her head. \"I'm not going to hold you to the vow you gave in the room with Kelly and Royce. I know you were doing it to protect me. I don't want your forced ownership.\"\n\nGavin sat back and studied her.\n\n\"You think I don't want you?\" Gavin asked her as he furrowed his brow and studied her.\n\n\"I think you do,\" Alex said nodding. \"And know that I want you...desperately. But I want you willingly. I don't want a promise made in the heat of the moment. I know you are violating your absolute.\"\n\n\"I am,\" Gavin nodded as he frowned and looked to the table.\n\n\"Sir,\" Alex continued. \"I don't want another Dom. Madelyn said you were the best and I don't doubt that. I liked the way the other kittens were jealous of me. I like the way they looked at me with a healthy hatred. But most of all, I like the way you look at me.\"\n\n\"Alexandria,\" Gavin began slowly. \"I don't know what to say.\" He looked to the ceiling. \"You are correct in your observation of why I claimed you. I wanted to protect you. And coming to the hotel yesterday I hoped you would be gone. Gone from me and out of my control.\"\n\nAlex lowered her head. She was disappointed. She wanted him to say, 'No you are my sub, I've claimed you and you can't leave! You can leave when I'm done with you!'. But he broke her heart by not saying it. Now he was letting her go. Either she wasn't good enough or his absolutes won out. He was monogamous.\n\n\"How do I put this?\" Gavin said through a deep exhale. \"I wanted you to be gone, not because I don't want you...quite the opposite! I want you too much! I...,\" Alex's smile came out as the words were making her tingle. \"Make no mistake. I have cared for every one of my subs. I have been fond of them all, but you...you are making me feel something...more.\"\n\nAlex looked up at him. He shrugged.\n\n\"I have no words, measure or unmeasured, to describe the way I feel about you,\" Gavin said folding his hands under his chin as he evaluated her. \"I've never been...,\"\n\n\"Been what?\" Alex asked him when he stopped and shook his head.\n\n\"Afraid,\" Gavin sighed.\n\n\"Afraid?\" Alex asked shocked. He nodded.\n\n\"I'm having thoughts that I shouldn't,\" Gavin explained right before Elizabeth returned and Gavin said nothing more. Alex knew nothing more needed to be said. The conversation she had been dreading floored her unexpectedly. Did this man just admit he might be in over his head with her?\n\n\"Alexandria,\" Gavin said sternly, going back to his Dom. \"You need to make a decision.\"\n\n\"She has made it!\" Elizabeth scoffed, the surprise coating her face with a tinge of anger in her eyes.\n\n\"Elizabeth, don't interrupt,\" Gavin warned forcefully. He turned to Alex again.\n\n\"I want you to make a decision,\" Gavin began again. \"You are to take a cooling off period. Take the week. Think about what you want, and who you want. This is nothing to rush into.\"\n\n\"What if I don't need the week?\" Alex asked him looking into his eyes.\n\n\"I need the week,\" Gavin said softly.\n\n\"You've both committed!\" Elizabeth gasped. Alex could tell she wanted this to happen too desperately. It probably meant this was her out, once Gavin had a new sub she would leave. She wouldn't just up and leave Gavin with nothing.\n\n\"I am committed,\" Alex nodded softly, looking Gavin in the eyes the entire time. \"But Gavin's promise was one he made in the heat of a moment. I don't want that. I want the promise under the right circumstances.\"\n\nElizabeth sat back with a huff. Alex stared at Gavin and she could tell in his eyes he was thankful that she understood.\n\nThe ride from Chicago was unbearably long. Alex sat in the front with Gavin but he didn't touch her the way he did on the way up. No soft hand on the inside of her thigh to make her tingle. No conversation either. Elizabeth sat in the back staring out the window. There was anger radiating from the backseat. A mixture of sorrow and regret from the front. The cabin of the expensive car seemed to press in on her making it hard to breathe.\n\nPulling up to her car in the parking lot of the coffee shop where this all began, Alex fiddled with her fingers silently as Gavin walked slowly around the car to open her door. Walking with him to her car, Alex left her head down. She hoped she was wrong, but this felt an awful lot like goodbye.\n\nAs Alex leaned against her car she heard a slamming of a car door and she looked to see Elizabeth storm around the car to get into the passenger side. Alex realized Gavin didn't open Elizabeth's door as he had hers.\n\n\"Ignore her temper tantrum,\" Gavin warned. \"That's an argument to have at home.\"\n\n\"Gavin,\" Alex began slowly. \"I don't need a week. When you decide, I'll be waiting.\" Gavin cupped her chin and tilted it up.\n\n\"I said take the week,\" Gavin said firmly.\n\n\"You don't own me yet,\" Alex reminded. \"Until then...,\" he cut off her insolence with a kiss that made her sigh.\n\n\"That wonderful little mouth of yours!\" Gavin whispered.\n\n\"Just say yes, and it will be yours,\" Alex whispered back lifting her heavy lashes up.\n\n\"So eager,\" Gavin smiled as he shook his head with a grin and ran his thumb across her lips. His face went from enjoyment to seriousness and Alex held her breath for what he was about to say to her.\n\n\"I want you to really think about this. This world I live in can be really wondrous, but it can also be a nightmare. I've seen both sides. I've always tried to make sure I did things the right way, but I know, all Doms don't do what I do.\" \n\n\"I want you to think about it seriously. I know you think you know what you want, but I seriously doubt after just a few days you can know. You think you do, but only because it's been exciting and new. It isn't always like this weekend.\"\n\n\"I understand,\" Alex frowned. \"And I trust you to be right about the other Doms. Which is why it is so important that I have you.\" \n\nHe was right. She was rushing because she enjoyed him and she hadn't had many men to compare with him. She doubted any man could be like this man, but this was all so new to her. Overwhelming. Sometimes it felt like she was treading water in an angry ocean of desire.\n\n\"I promise to think about what you have shown me, and I know there is a lot I don't know. But let me put this to you...how am I going to learn if I'm on the outside?\" Her question made him twist his mouth in contemplation. She could see the thoughts running through his head as he calculated what she said.\n\nGavin looked to the night sky for answers. She was right.\n\n\"Perhaps a trial basis could be arranged,\" Gavin frowned. \"I will think on it as well. It's sort of a violation of my absolutes, but then again, I've never had a complete novice before either...so perhaps an accommodation can be made.\" \n\nShe smiled.\n\n\"No you haven't won,\" he warned her firmly. \"I'm still monogamous, but it is something to consider. It seems you are testing me in ways I never thought I would be tested.\"\n\n\"Is that a good thing, or a bad thing?\" she asked him getting lost in his chocolate brown eyes.\n\n\"That remains to be seen,\" he told her. \"Alexandria, you are a quandary.\" She nodded. She had been called worse and the sparkle of approval in his eyes told her that he meant it as a compliment.\n\nHe opened her door and she shook her head. She didn't want to get into her car. He had exposed her to too much now. There was no going back. How does one go back to the vanilla world as he called it? You can't. How does she convince him to claim her fully? \n\nShe took the long way home to clear her head. She needed to come to grips with returning to the other world. The vanilla world. Could she? She felt so alive now. Like a child seeing Christmas for the first time. It was all so overwhelming and left her mind scrambling to catch up. She never felt over her head as she had Gavin by her side to guide her. \n\nIf the worst happened and Gavin's absolutes won out. Could she continue on without him? Would she want to? Gavin said he would introduce her to a Dom to her liking, but if you have been with the best can you ever settle for a lesser product? Could she ever be fulfilled with something good but not as good as Gavin? \n\nMadelyn who had been in the life for a long time said he was the best she had seen or heard about. How do you take something less now? After test driving a Mercedes can you ever go down to a bargain basement Chevy? Both are good cars but one has all the bells and whistles the other just reliable?\n\n\"Hey!\" came Lena's voice from the living room after she closed her front door.\n\n\"Hey,\" Alex called back somberly.\n\n\"See? The apartment still stands!\" Lena joked as Alex turned the corner.\n\nAlex grinned as she plopped down next to her roomie on the couch with a disappointed sigh.\n\n\"Uh-oh,\" Lena frowned surveying her roommate, fearing the worst.\n\n\"No,\" Alex shook her head, reading it easily. \"I'm in a holding pattern.\"\n\n\"I thought it was going so well?\" Lena asked pulling Alex into a comforting hug. Something she had done on multiple occasions throughout Alex's less than stellar love life.\n\n\"It was,\" Alex agreed. \"He just wants me to make sure this is what I want.\"\n\n\"Ok,\" Lena rocked her. \"Is this what you want?\"\n\n\"More than anything,\" Alex smiled.\n\n\"Then what's the deal?\" Lena asked.\n\n\"You wouldn't believe me if I told you,\" Alex laughed a soft laugh. She tried to come up with the vocabulary to tell Lena all she had been privy to this weekend. The shows, the sex. The emotions he evoked from her. Everything. She found she felt she didn't have the words.\n\n\"Try me,\" \n\n\"Gavin is a Dom,\" Alex told her bluntly with a half shrug of her shoulders.\n\n\"A Dom?\"\n\n\"A Dominant. BDSM,\" Alex clarified.\n\n\"Holy shit!\" Lena gasped with a shocked smile. \"You kinky little bitch!\" Alex giggled at her stunned response. \"You are into that?\"\n\n\"I didn't know I was until this week,\" Alex shrugged.\n\n\"Like whips and chains?\" \n\n\"No,\" Alex shook her head. \"And yes.\"\n\n\"Are you trying to be confusing?\" Lena asked.\n\n\"The BDSM world I thought of, isn't what I thought it was,\" Alex exhaled. \"Yes there are parts of it that involve those things, but it's not always about those things...or so I'm learning.\"\n\n\"Give me an example,\" Lena demanded.\n\n\"Have you ever had a guy get you off thirteen times?\" Alex looked to her quizzically and reveled in the dropped jaw look her friend was giving her. \"And never get undressed?\"\n\n\"Bullshit!\" Lena drew out. Alex shrugged but her eyes spoke the truth and Lena knew it.\n\n\"He took me to a party this weekend,\" Alex smiled as she laid her head on Lena's lap. It reminded her of the fantastic sex she had with Gavin before falling asleep on him. \"I saw things I can't describe! I felt like...well I can't describe that either. It's a world filled with things that will leave your mind scrambling to believe.\"\n\n\"So what happened?\" Lena asked as she stroked her hair.\n\n\"I picked a Dom who is monogamous,\" Alex frowned unhappily. \"It's one of his absolutes.\"\n\n\"Absolutes?\" Lena asked gently running her fingers through her roommate's hair, coaxing her into a soft sigh of pleasure.\n\n\"A rule that can't be broken,\" Alex sighed as she closed her eyes regretfully.\n\n\"You like him?\" \n\n\"Yes,\" Alex whispered.\n\n\"Does he like you?\" \n\n\"Yes,\" she whispered again. \"Maybe too much he said.\"\n\n\"So he's scared?\"\n\n\"It is so unlike him to be scared,\" Alex laughed without an ounce of humor. \"But he said he was.\"\n\n\"Why?\"\n\n\"Because he likes me too much,\" Alex wrinkled her nose up as she said it.\n\n\"Jesus,\" \n\n\"I know,\" Alex agreed matching her frown.\n\nAlex spent her days in the coffee shop in the hopes he would come in. He never did. Neither did Elizabeth. Alex was beginning to lose hope. Each day she felt like the odds of him coming to her faded. \n\nShe hoped he would check in on her, but he never did. She wanted to text him, but knew that might anger him as he wanted her to take the whole week. She didn't need a week. She didn't need a day. She didn't need a second! Why on earth was she so foolish to allow him to back out? Why couldn't she hold him to his honor? She could have held him to his promise. He was a man of honor, she could then convince him having her was a good thing!\n\nLate on the fourth night of her forced sabbatical, the only sounds in the apartment were that of the refrigerator kicking on and off. She sat staring at the ceiling, her art scattered about the room as she tried to sketch all the things she witnessed over the weekend. ",
        "Madelyn made her drawings, Horse Cock and his ridiculous head. The picture of the woman in shackles made her run her fingers over it, reliving the first show. The room in which Madelyn guided her before the shows. She drew the other subs, their collars included. She even had done Candy, with the jealousy in her eyes. All were engrained in her memory.\n\nShe rubbed the collar she wore to bed, the collar that Gavin had given her. She only wore it now at night. When she was alone.\n\nShe thought about Gavin. His eyes. His body. His hands. Oh his hands! She refused to draw him because it hurt just to think of him. She put on the dress he bought her and did a drawing of herself in the dress. She put a whirlwind around her, her auburn hair flying wildly about her, symbolizing the world she was swept up in.\n\nGavin kept encroaching her thoughts with the way he fucked her. She let her fingers saunter into her panties. Touching her lips she could feel the rawness was still there even after four days. She smiled. She pulled her panties off and let her fingers play. Softly trying to imitate Gavin's touch as she thought about the way he looked at her while he manipulated her soft folds.\n\nHer finger found her clit and caused her body to jump. Her eyes closed and she slowly massaged her bud. Moving a little lower, she slid her middle finger into her warmth and gasped softly in the dark. \n\nSliding it slowly in and out of her, she pretended it was Gavin. Her fingers softly pushing her folds to the side. She moved a second finger into her and this caused her to bite her lip as her hips began to rise to meet her hand. \n\nThe sound of her wet sex filled her ears and the scent of her, filled her nose. She turned her head into the pillow and bit into the down feathers as her body began to tense under her manipulations. Her fingers causing a sopping sound as her body showed its approval of her intimate touch. \n\nHer body lifted off the mattress of the bed as she thrust her fingers into herself madly pushing herself to the limit. She smiled wickedly when she stopped just as her orgasm was about to explode.\n\n\"Alexandria,\" she whispered in the dark with a wicked smile, reliving the first night in the hotel where Gavin took her finally. \"What am I doing to you?\" She released the pillow from her teeth as she fluttered her eyes open. \"Edging.\" She sighed. She waited a few moments before slowly beginning her manipulations. Slowly she gyrated her hips up into her fingers as they transformed into her lover.\n\n\"Please,\" she whispered. \"Fuck me.\" Her fingers responded. Slowly at first, then faster and faster until she was grunting under the force in which she was working herself. Coming to the brink she was torn on whether to continue to her orgasm, one that begged to be released, or drive herself mad. \n\nMadness won out as she forced her fingers from her and she whimpered at her own denial. She let her body calm as she pulled on her nipples to bring out their tautness. Slowly she snaked her fingers back down and eased them into her.\n\nWith the palm of her hand rubbing her clit, the bud pressed to her hand as her fingers plunged into her depths she tossed her head back and forth on the pillow tossing her soft auburn hair around. Lifting her hips off the mattress in an attempt to delve deeper into her sexual recesses, she had all her weight on her feet and her shoulders as her cum washed out of her with a soft yelp of pleasurable release from her lips as she allowed herself to cum.\n\nCrashing to the bed she panted as her fingers slowly pulled out of her. She lifted her hand in the moonlight and saw the soft glistening of her fingers showing her cum. She smiled. She slowly brought her fingers to her mouth and placed them in. For the first time in her life, she masturbated herself to orgasm and tasted her own cum.\n\nShe then frowned. She wanted to prolong the sexual pleasure but she couldn't stop herself from causing her orgasm. She wasn't the Dom Gavin was. Gavin would have kept her on edge for a lot longer. How did he stay so calm during all of what they did? How did ensure multiple orgasms from her without going mad with lust and satisfying himself?\n\n\"That's why he is a fantastic Dom,\" she told herself aloud. \"He has discipline!\"\n\nShe thought about it all, slowly. From beginning to end. From Elizabeth in the coffee shop to riding Gavin in the middle of the night while another women laid in bed asleep. Every moment was relived. \n\nShe forced herself to relive the horror of Kelly. Because Gavin would want her to, to understand the ugly part of his world. The angry words spoken from Gavin's mouth as he protected her from Royce. \n\nThere was a lot to like about the world Gavin was a part of. A world she ultimately decided she wanted. The question went from whether she wanted it or not, to one of, does she want it if Gavin isn't a part of it? She shook her head as she looked out the window from her bed. \n\n\"One problem at a time, girl,\" she whispered to herself. \"First we need to find out if Gavin can overcome his absolute.\" She turned over onto her side and felt the wetness between her thighs. This made her smile as she drifted off to sleep.\n\nDropping her art bag on the floor she shifted through the mail. Junk mail mostly. A bill or two.\n\n\"Hey!\" came Lena's happy voice.\n\n\"Hey,\" Alex said as she shuffled her feet.\n\n\"No!\" Lena laughed.\n\n\"Turn it,\" the male voice caused her heart to skip a beat and her body to freeze.\n\n\"I can't! She'll kill me for sure!\" Lena protested.\n\n\"I've already seen it!\" he laughed. \"Turn it!\" Alex forced her feet to move and gawked at him from the doorway, her secret smile eased out from the edges of her mouth.\n\n\"Oh my!\" Gavin laughed. \"Really?\" He looked up at her and the smile she had couldn't be contained. \"A skunk?\"\n\n\"What are you showing him?\" Alex suddenly gasped as she realized what they were looking at.\n\n\"Pictures,\" Lena smile deviously.\n\n\"NO!\" Alex barked.\n\n\"Yes,\" Gavin giggled.\n\n\"What happened to the week?\" Alex asked, her feet frozen to the floor beneath her. She wanted to run to him and kneel at his feet but she couldn't move.\n\n\"I don't need a week,\" he smiled as he stood up and made his way over to her. \n\n\"Maybe I do,\" Alex said back firmly with a cock of her head.\n\n\"Switching on me?\" Gavin asked, his secret smile out as he touched her gently near her ear.\n\n\"Perhaps,\" Alex told him as her breath caught in her throat.\n\n\"Maybe I won't let you come to your senses,\" Gavin whispered as Lena slipped by her, squeezing her arm in a congratulatory hug.\n\n\"I don't know what to say,\" Alex smiled, her heart beating in her chest wildly.\n\n\"It has been the longest five days of my life,\" Gavin admitted walking around her, admiring her. Reliving the time with her, like he had done for five days. \"I can't sleep, I can't eat. I can't think straight. I want you.\"\n\n\"You want me?\" Alex nearly danced out of her shoes right there.\n\n\"No,\" Gavin shook his head. \"I need you. You have awakened something in me that I wish to never go to sleep again.\"\n\nShe led him to her bedroom but before he could even close the door she was on him. Pressing him into it as she kissed him passionately.\n\n\"I have wanted to taste you for so long!\" she whispered against his lips as he pulled her shirt off. \"You have me addicted to you!\"\n\n\"Oh, little one,\" Gavin gasped in between her kisses. \"You knew you had me!\" She was pulling his clothes off him as fast as he was pulling hers off.\n\n\"I had a doubt,\" she smiled against his lips as she took his cock firmly in her hand causing him to gasp. \"I thought your absolutes had won out!\"\n\nHe shook his head at her. His words running through his head as he stared at her.\n\n\"May I have him?\" she asked with a tilt of her head to his cock that now resided in her hand.\n\n\"It appears you already have him,\" he grinned. \"If you were going to ask for permission, it should have been acquired before you pulled him from my pants!\"\n\n\"Sometimes, it's better to ask for forgiveness than permission!\" she laughed as he bit into her neck.\n\n\"Suck my cock,\" he whispered in her ear. She needed no other encouragement as she dropped to her knees and took him wholly in her mouth. She didn't get him all the way in her throat and she was upset by it.\n\n\"Not again!\" he warned her, the temper tantrum in her eyes that she failed. \"That will come with time! Something you have plenty of now, so just please me!\" She drug her teeth on his cock causing him to hiss as they caught on his head.\n\n\"Yes, Sir,\" she smiled as she never let him go from her mouth. She worked his cock, her hand pumping his shaft as she watched his face tighten in bliss.\n\nHe stopped her head and she glared at him. Erupting in her mouth was what she wanted but he stopped her and pulled his cock out. He could see her anger so he took her by the hair and pulled her head back sharply.\n\n\"Make no mistake, little one,\" he growled at her. \"You are my sub, not the other way around. You need to learn that, or this relationship will be very difficult for you!\"\n\n\"Yes Sir,\" she whispered at his conviction.\n\n\"From this point forward, any disobedience, will be met with correction,\" he warned her. \"From this point forward, you need to beg for my cum.\"\n\n\"Yes, Sir,\" she said again, swallowing hard.\n\n\"Your body,\" he said as he bit her lip. \"Is my playground. I choose what to play with. I choose what to eat. I choose what to fuck!\" \n\n\"Yes, Sir,\" she whispered with what breath she could gather.\n\n\"Crawl to the bed,\" he ordered. She hesitated. \"I now owe you twenty.\" She nodded and began to crawl towards the bed.\n\n\"Slowly,\" he said leaning against the door. She slowed. She looked to the mirror that covered the back of her closet door and saw herself on all fours. She surprised herself with how erotic it looked. \n\nHer ass in the air slightly. Her muscles flexing in both her legs and her buttocks as she moved them as she went. She realized he was staring at her ass intently. She could see the storm raging. He wanted it. She wanted him to take it. Pain be damned. She wanted him satisfied, and was willing to suffer with the pain for him.\n\nShe waited by the bed for her next command. He came and sat behind her, his fingers dancing on the hot skin of her buttocks.\n\n\"Put your face on the floor,\" he commanded. She obeyed. Her breathing coming in short passionate gasps. \"Reach your hands out above your head.\" She obeyed. She felt herself open completely, like a flower to the sun. He let his skilled fingers slide down the crack of her wanted ass. Pausing to circle the hole he wished to have. It was taking all his will power to keep from fucking it. \n\nHe moved on to the space separating her two holes of pleasure. She gasped.\n\n\"Under no circumstances are you to move from this position,\" he warned her.\n\n\"Yes, Sir,\" she whispered. Alex thought of what Lena would say if she walked in and found her like this. Then she laughed inwardly. It wouldn't be the strangest thing either of them had walked in on!\n\n\"If Lena walks in, I don't care,\" Gavin read her, causing her to shake her head. Fucking Jedi master! Her Master now. That made her smile. \n\nHe began to massage her pussy lips, even though it had been five days since he fucked them, they still weren't completely right. But they were right enough! She moaned under his manipulations. He slowly pushed his thumb in her causing her to gasp in reverence.\n\nHe thrust it repeatedly in her. Her body began to rock with his insertions. Part because of her, but mostly because of the force he was using on her. Her fingers dug into the carpet on the floor.\n\n\"Going to cum for me little one?\" he asked her softly.\n\n\"If it would please you, Sir,\" she gasped.\n\n\"Immensely!\" he responded. She came. Hard! The slurp of her juices told her so. The rest of her body was locked in a numbing convulsion. Her muscles tightened in the ecstasy of her passion. Her face twisted in an opened mouth, silent scream of passion.\n\nWhen she finally reacquired control of her muscles she almost moved from her position she was told to remain in. Her body becoming limp.\n\n\"Good girl,\" he complimented with a smile.\n\n\"Thank you, Sir,\" she said in between deep breaths. The tingling of his praise made her sigh.\n\nGavin rubbed her ass with his fingers, again moving to her anus.\n\n\"That is yours,\" she told him from the vulnerable position she was in. Hoping to tempt him into a pleasure she wanted him to take.\n\n\"I don't need your permission,\" Gavin warned her.\n\n\"I'm sorry,\" she whispered.\n\nGavin laid on her bed.\n\n\"Stand,\" he ordered. She did so immediately but her legs wobbled. He smiled at her awkwardness.\n\nShe could not believe the Adonis that was in her bed right now. Never had it been graced by dream or reality by something as splendid as what she had there now.\n\n\"I want you to sit on my face,\" he told her bluntly. \"I want to taste you.\"\n\nShe nodded.\n\n\"I didn't fucking hear you,\" he barked.\n\n\"Yes, Sir,\" she quickly answered.\n\nShe moved over to him and carefully put her knees on either side of his head. She looked down at him and almost came at the picture her eyes were looking at. This was so fucking hot!\n\n\"Put your hands behind your back,\" he told her and she did without hesitation. \"Now you are getting it!\" She smiled as he took hold of her hands in the powerful grip of one of his. \"I know what will happen if I don't have them secured and I don't have any rope with me at the moment.\" \n\nHer head dropped back as he began to lap at her, her breath leaving her in a long deep exhale. She began to slowly grind her crotch to his face. She felt his fingers on her nipples and she looked down at them as they began to squeeze. Gently at first, then harder. They tightened under his pinch. First one, then the other getting them to respond.\n\nShe locked up her body as her cum rushed from her, the moan was stifled but she didn't mean it to be. He pulled her to orgasm two more times before spinning her flat on her stomach as he laid his body on top of hers.\n\nShe felt him reach between them and guide his manhood into her. He pulled her hair tight to the side so he could watch her face as he invaded her. It was a look he reveled in. Her blissful acceptance.\n\nHe nuzzled her ear as she gripped the sheets to keep from touching him. Something that made him smile. She was learning.\n\n\"Oh, my God, Sir,\" she whispered under his thrusts. \"Fuck me! Please! Fuck me!\"\n\nHe growled as he tightened his grip in her hair and increased his hip's speed to slam into her, causing her to grunt under his force. The smile was all he needed to see to know she was getting what she wanted.\n\nHer smiled left as her face reddened, her muscles in her face matched the rest of her body as they stretched moving his powerful frame up as she pressed into him trying to pull him deeper within her. \n\nShe collapsed on the bed, her legs jelly. He didn't stop his onslaught and she was very happy about that! He hooked his left hand under her shoulder as she faced that way. His fingers slowly wrapping around her throat as he pounded his skin against hers. \n\nHer eyes fluttered open and saw his eyes, they were calm even though he was violently pushing in and out of her with a force that caused the sound of the fucking to fill the room. He was carefully gaging her reaction to his hand around her throat.\n\n\"Green,\" she gasped. He nodded as he let his fingers tighten. Holy fuck! She screamed in her head as the fantasy was coming to fruition. He was fucking her with his hands around her throat! \n\nHe squeezed ever so gently. Never a threat to cut off her air. Just pressure to let her know he was there. Not too much. Not too little. Enough. Her orgasm squirted out of her and all over the bed and her thighs as he straddled the outside of her thighs with his knees. He was impossibly deep within her and she wanted nothing more than to pull him deeper.\n\nWith a growl and a tightened hand she watched him cum into her, his lips biting hers and she reveled in the feel of his cock beginning to buck deep within her. Coating a part of her insides that had never been approached before. Chalk up another first to her Dom!\n\nGavin pulled her tight to him as they interwove their bodies with one another. He pulled a blanket over them. He started to pull out of her but she stopped him by pressing back into him.\n\n\"Please, Sir,\" she begged. \"Don't remove him!\"\n\n\"As you wish,\" Gavin smiled as he kissed the back of her neck. She nestled deeply within his embrace as she slowly inhaled his scent. She was in heaven, of that there was no doubt! She felt him nuzzle his nose into her mussed hair and inhale. That's what they both wanted most of all, their scent in each other's noses.\n\nAs they lay there, her mind cascading off a waterfall of bliss. She kissed his hands as they held hers tucked under her chin. She was deep in the cocoon of his embrace and she never felt so safe.\n\nAfter listening to their heartbeats slow with one another. Alex let the scene run back through her mind. From the passionate way they tore off one another's clothes, to his hands around her throat, completing that fantasy.\n\n\"I'm sorry,\" she whispered as her mind locked on it.\n\n\"For what?\" \n\n\"I used a safe word,\" she gasped. \"I know you said we weren't to use them once it became official.\"\n\n\"No,\" he whispered after some thought. \"I want you to continue to use them.\" She looked back at him confused. He exhaled deeply.\n\n\"Look,\" he semi-smiled. \"You bring something out of me that I thought I had beaten. And you do it so easily!\" She saw the pain in his eyes. \"It is both a great thing,\" he kissed her nose and she smiled. \"It is also a worry for me,\" he stressed.\n\n\"Please explain,\" she asked him adjusting to look at him fully.\n\n\"I left not one, but two unintended marks on you,\" he said with an embarrassed shake of his head.\n\n\"Marks that I am proud of!\" she reminded.\n\n\"Yes,\" he frowned. \"So you said, but it reminded me that perhaps I need the words from you to keep you safe from my inner animal. I thought that would never be a problem, to have someone bring out my dark self to a point that I lost control. But I want to make sure now, more than ever, that you are completely safe. Use the words.\"\n\n\"I don't need them as I trust you with everything,\" she said kissing his lips. \"But I can see it is troubling you, so for your peace of mind...I will utilize them.\"\n\n\"Thank you,\" he smiled at her.\n\n\"You are perfect,\" she whispered against his lips.\n\n\"You bring it out of me,\" he whispered back.\n\nAlex fell asleep. She knew she hadn't slept much in five days but she didn't know how exhausted she was until she was asleep. She awoke to find him sitting in the chair in her room behind her drawing table. She watched him for a few moments. Happy he wasn't a dream.\n\n\"Just once,\" she whispered drawing his eyes up. \"I want to wake up from a peaceful slumber and find you next to me!\"\n\nGavin held up a couple of her drawings. One of Madelyn, one of a scene of the federal judge getting a spanking.\n\n\"You are quite talented!\" he praised showing her what he was looking at. \"This one of Madelyn is fantastic. I want it.\"\n\n\"It's yours,\" she smiled, as she tucked her head on her arms and looked at him.\n\n\"I mean I want to buy it,\" he clarified.\n\n\"Nothing I have is for sale to you,\" she said firmly. \"So either take it, or leave it. Like me, it already belongs to you and you don't need permission to take it!\"\n\n\"God damn switch,\" he exhaled. She laughed.\n\n\"And that's something you really like about me!\" she pointed out.\n\n\"Yeah?\"\n\n\"Yeah,\" she nodded. \"It's both a challenge and a blessing. Something you revel in.\"\n\n\"Have you ever had a showing?\" Gavin asked her as he came to the bed and slid in next to her. She put her head on his stomach and he gently stroked her back.",
        "\"No,\" she shook her head. \"I sell them from time to time at art fairs, and town flea markets. But if you are talking about a gallery showing, no nothing like that!\"\n\n\"Do you only draw?\" he asked her.\n\n\"No,\" she smiled. \"I love to paint as well, but the supplies are very expensive!\"\n\n\"Well,\" Gavin smiled. \"I know some people in the art world, perhaps I could get you going.\"\n\n\"No,\" she shook her head. \"It's not that big of a deal.\"\n\n\"It is to me,\" he sighed. The tone was enough. No more arguing.\n\n\"I'm not ready to do something like that!\" she said thinking of how exciting that would be.\n\n\"What do you need?\"\n\n\"I need supplies,\" she shrugged. \"Frames, brushes, pallets, paints! I need it all!\"\n\n\"You haven't painted anything?\" he asked her tilting her head up.\n\n\"Yeah,\" she nodded to the closet. He started to get up but she hooked his hips. \"Ok, I get the hint.\"\n\n\"Like you said,\" she smiled as she adjusted her head on him. \"We have all the time we need!\"\n\nThree hours later she allowed him to get up. Stepping out into the hallway headed for the shower she ran into Lena who smiled at her. Alex's face flushed as she knew her roomie had heard their lovemaking.\n\n\"It's not even close to the number of times I heard you,\" Alex warned as she made for bathroom.\n\n\"I thought you were going to break my record in just one session!\" Lena teased on the number of orgasms she heard.\n\n\"Shut it,\" Alex warned closing the door.\n\n\"Just a little jealous that's all!\" Lena teased causing Alex to smile happily. \n\nComing into the bedroom Gavin had pulled her paintings out of the closet and had them spread out around the room.\n\n\"This is magnificent!\" he gushed as he held it up. \"At first I thought it was a photograph! Then I realized you painted it!\"\n\nAlex brushed her hair as he marveled over it.\n\n\"Absolutely breathtaking!\" he gasped. She looked up to see him looking at her. \"The painting is pretty awesome too!\" he smiled.\n\n\"You like it?\" she laughed.\n\n\"Let me show this to a friend of mine,\" Gavin said to her.\n\n\"No gallery is going to take an unknown artist!\" Alex warned him.\n\n\"No, you're right, but with the right influence,\" Gavin shrugged. \"You become known.\"\n\nShe was about to argue but his phone went off. He looked to it and frowned.\n\n\"Well, at least it didn't interrupt our sex,\" Alex smiled letting him know she understood he had to leave.\n\n\"Then they would have had to wait!\" he smiled as he kissed her lips.\n\n\"I'm taking you out tomorrow,\" he said to her. \"Nine?\"\n\n\"AM or PM?\" she smiled wickedly. \"Because I want to be with you as much as I can!\"\n\n\"AM works for me,\" he smiled kissing her lips. \"We need to set up some ground rules.\"\n\n\"So your absolutes did win out,\" she frowned.\n\n\"If my absolutes had won out, I wouldn't be standing here,\" he said firmly taking her by the chin and looking into her eyes. \"I have adjusted it somewhat but there are things we must cover before continuing.\"\n\n\"Yes, Sir,\" she gasped as she trembled with excitement with the way he was looking at her lips.\n\n\"See you then,\" he kissed her, and she felt her knees weaken. He walked out with the picture in his hands.\n\nAlex leaned against the door and closed her eyes in satisfaction. She was owned. Sorta. She was sure he had a list of things to discuss. He was very thorough but she had a Dom. She wouldn't have to find another. She listened to Gavin talk to Lena briefly before leaving."
    ],
    "authorname": "CJT",
    "tags": [
        "maturbation",
        "edging",
        "choking"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-09"
}