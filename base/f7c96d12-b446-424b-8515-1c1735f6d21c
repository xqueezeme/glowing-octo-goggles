{
    "title": "My Irish Virgin",
    "pages": [
        "I staggered down the beach. I was wearing shorts, no shirt and was sweating profusely; for a moment it was touch and go whether I would see last night's dinner for the second time.\n\nIt was the first day of my summer exercise regime\u2014three miles of early morning running in the sand and then two miles of walking it out. I had my starting point that morning and ran one and a half miles up the beach, and then completed the round trip. I was just starting my one mile walk the other way, and then would return again to the starting point.\n\nI was second string on my college soccer team, but since it came with a full scholarship, I had to pay the price to stay in shape. The rest of the day I would be working construction, which would also help in the muscle department. \n\nI had walked two hundred feet or so and I knew that if I hadn't seen my dinner by then, I was safe until tomorrow. Some athletes claim they love this part of the sport; that is absolute bullshit\u2014it is pure torture raised to a high level.\n\nMy feelings of self-pity were interrupted by the sight of a solitary person sitting on a towel ahead of me. Even from the distance I could tell it was a female in a one-piece swimming suit looking at the ocean. As I approached this unknown female I kept collecting physical impressions of the mystery person on an early morning deserted beach. She had a nice figure with slim legs, a flat stomach, and more than adequate breasts. Her hair was brown and cut short.\n\nI was twenty feet from her and she had yet to acknowledge my approach\u2014there was a chance she had not seen me. At ten feet I said, \"Good morning.\"\n\nHer head turned and I saw the most serious brown eyes of my life. She stared at me, but said nothing. I confirmed the fact that her figure was great and her breasts even better, but she remained silent. I walked by her confused.\n\nOn my return trip, she watched me approach. At ten feet I said, \"I hope you have a great day!\"\n\nAgain, other than looking at me with those serious brown eyes, she said nothing.\n\nThe pattern repeated itself for three more days. I ran; I escaped embarrassing myself by not upchucking my dinner from the previous evening, and then I passed the mystery female with a hearty \"Good morning,\" going out and \"I hope you have a great day,\" coming back.\n\nOn the fifth day there was a very slight change to the pattern. This day her head had turned when I was two hundred feet away and watched me approach. At ten feet I said, \"Good morning.\"\n\nMy mystery friend said with a serious look, \"And good morning to you.\"\n\nI kept walking as my brain tried to put everything together. She had talked to me! She did not smile, but she had at least talked. And more surprising, she was not an American because the voice that wished me a good morning had a lilt that no American would have\u2014her voice had that unmistakable sound of Ireland. My mystery friend was Irish! I thought, \"And she sounds as if she just came over on the boat.\"\n\nThe next day was Saturday. I ran, and for the first time I knew that the initiation to my summer routine had passed\u2014I completed the run and did not have to bend over and put my head between my knees when I finished. I eagerly started my walk hoping that my mystery Irish girl would be there. I quickly saw that she was.\n\n\"Good morning.\" \n\n\"And good morning to you,\" she responded.\n\nOn my return she was watching me. I said, \"I hope you have a great day.\"\n\nShe said nothing, and seemed surprised when I stopped in front of her. I said, \"My name is Danny Johnson. I play soccer in college and that is why you see me torturing myself every morning to stay in shape for next season. This beach is always deserted this early in the morning so I guess we can say it is 'our beach' for the rest of the summer.\"\n\nShe stared at me with those brown eyes. The pause became a long pause. I was bewildered and flustered and turned to walk away. I walked ten feet and heard her say with her Irish lilt, \"My name is Nora O'Donnell and I hope you have a great day also.\"\n\nThe next five days were identical. I said, \"Good morning Nora.\"\n\nShe would reply softly, \"Good morning Danny.\"\n\nOn return I would say, \"Have a great day Nora.\"\n\nAnd she would answer, \"Have a great day yourself Danny.\"\n\nThe next day I surprised her when I said, \"Good morning Nora. Would you like to walk with me for some exercise?\"\n\nShe was startled and replied, \"Good morning Danny. I don't think so.\"\n\nThe next day I said, \"Good morning Nora. Would you like to walk with me?\"\n\nNora answered, \"Yes, I think that would be nice.\"\n\nShe stood up and for the first time I could see she was about five-foot six-inches tall. We walked without talking for a while until I finally said, \"Nora, I have a wild guess that maybe you aren't from the next town over?\"\n\nNora answered in her serious voice, \"You are right Danny\u2014I'm Irish. I come from a small seaside village five miles from a big town called Ballybunion in County Kerry. I came to the United States to be a nanny for Mr. and Mrs. Thomas. They are both doctors and have a four-year old boy that needs watching during the day.\n\n\"They are very nice people with a beautiful home. I was given the choice of living in the main house or in the pool house, which has a television area, kitchen and a bedroom with a private bath. I chose the pool house so that I wouldn't be in the way.\n\n\"They love their little boy, so my job is very easy. Until they leave for the hospital, they spend all of the time with the boy. As soon as either one comes home, my job is done for the day. My weekends are free unless they go out of town.\n\n\"It is a perfect job working for very nice people.\"\n\nI asked, \"Then you will return to Ireland at the end of the summer?\"\n\n\"I hope not. I've applied for an international scholarship at the women's college not too far from here. If I'm given the scholarship, and I can work part time during the year, I will stay here for the next four years.\"\n\nGrinning I said, \"Well since my school is only one hundred miles from your school, you can come to our weekend parties.\"\n\nNora was flustered and stopped walking. She looked at me and said, \"Danny, there are two kinds of Irish women. The first is the red headed beauty that is always smiling, laughing and dancing to the late hours with all the boys chasing her. And then there are the women of old Ireland where it seems as if the troubles of the world are always on their shoulders. I am cursed to be one of those. So I would not be very good at your parties.\"\n\nWe started walking again as I said, \"Nora, people can change. Maybe that should be our special summer project?\"\n\nNora did not reply and was silent the rest of the walk.\n\nOur walks continued for another week. It was pleasant to walk with her and on many topics she was interesting to talk to, but the discussion was never about her. Another source of disappointment was that I had known Nora for three weeks now, and yet, I had never touched her.\n\nOne day on our walk I asked, \"Since you are free on the weekends, you must get a lot of shopping done at the shopping mall in town?\"\n\nNora answered, \"Mrs. Thomas takes me to the mall at times, but since I don't drive I haven't been there often.\"\n\nI said somewhat surprised, \"Nora, everyone here drives. You've got to get your driver's license.\"\n\nNora looked at me and said, \"I don't know the first thing about how to get a driver's license or how to drive.\"\n\nI answered, \"It's easy. First we will get you a permit, then you will learn to drive, and finally you will receive your driver's license.\"\n\n\"Danny, I need all the money I'm making for school. I can't afford to take driving lessons.\"\n\n\"I will teach you with my car, and it won't be expensive at all.\"\n\n\"How much do you charge Danny?\"\n\nI looked at the serious look on her face as her eyes stared into mine. In retrospect I don't know how the words ever came out, but it must have been building in me from the previous three weeks with this Irish woman. I said, \"My price is one kiss for every fifteen minutes of driving instruction.\"\n\nNora stared at me for what seemed to be a lifetime, but what was probably actually only twenty seconds or so when she asked in her most serious voice, \"Is your price negotiable?\"\n\n\"I'm sorry Nora, but that is the discounted summer rate for driving lessons. In the high season the price would be much higher.\"\n\nAnother staring contest until she said, \"Your terms are acceptable Danny.\"\n\nMy heart jumped and I felt a stirring down below as I thought, \"I have yet to touch her and I'm half hard already. Could this girl be getting to me?\" The answer was obvious.\n\nThe next day I drove to the Department of Motor Vehicles and picked up an application for a learner's permit and the rules of the road booklet. Nora would have to pass the written test to get her learner's permit, and then pass her driving test to receive her driver's license.\n\nI gave the application and booklet to Nora. She said, \"Thank you Danny. I will study this all week and when I'm ready, would you take me for the written test?\"\n\n\"Of course Nora,\" I replied.\n\nThe next day I was starting my cool down walk towards Nora when I spotted a significant change to my normal view\u2014Nora was wearing a white bikini. It was conservatively cut, but it still showed a lot of skin. Her stomach was flat but pasty white since the sun had yet to start her tan. Her top emphasized those wonderful breasts, and her bottom showed her slim legs going into her bare hips before disappearing behind her suit.\n\nHer serious eyes watched me as I approached. I said, \"Good morning Nora. I really like your swimming suit.\"\n\nShe blushed and said; \"Mrs. Thomas told me it was silly to be wearing a one piece swimming suit all summer especially since I am out by the pool with their boy during the day and on the beach at other times. She took me to the mall and we picked the suit out together.\n\n\"Am I too naked?\" she asked.\n\n\"Of course not,\" I replied. \"It is perfect for you. You look beautiful in it.\"\n\nAs we walked I could see she was still a little embarrassed to be wearing a bikini, but she said nothing for a long time and then finally said, \"Can I ask you a serious question Danny?\"\n\n\"Of course,\" \n\nNora paused and then softly said, \"What do you think of my breasts in this suit Danny?\"\n\nI replied, \"They are an 'A plus' for sure Nora.\"\n\nHer voice became angry as she stammered, \"My breasts are bigger than that.\"\n\nShe had stopped walking and was staring angrily at me. I was confused for a moment and then understood. \"Nora, I was giving you a grade. In the United States there is no higher grade than an 'A.' and I gave you an 'A plus.' But to answer you I would now say a 'C.' \"\n\nNora was almost in tears as she said, \"And now because I got mad at you my grade went to a 'C.'\n\nI was losing control of the situation and I stammered, \"No Nora, I was answering your first question and I said your breasts were a 'C' size and because of that they were 'A plus' with me.\"\n\n\"Really?\" she asked.\n\n\"Really,\" I answered.\n\nShe blushed and responded, \"Danny I'm sorry I got mad and confused. You Americans say things different than what I expect. You have been very nice to me; I would have been lonesome if you didn't start to talk to me on the beach four weeks ago.\"\n\nI replied, \"Nora, you've done nothing wrong and your company each morning has been wonderful. Can I ask you for one little favor?\"\n\n\"What?\" \n\nI grinned and said, \"This beach is so big; I might get lost, so will you let me hold your hand so that you can keep me from straying?\" \n\nHer serious brown eyes stared into mine, and then for a split second I thought I saw, but couldn't be sure, Nora's first smile. She said nothing and then her hand reached out to mine. We finished the walk hand in hand.\n\nOne week later Nora came out of the Motor Vehicle's testing center with a small smile on her face. She walked up to me and said, \"I passed; I now have my learner's permit.\"\n\nI grinned and said, \"Then you're ready for your first lesson.\"\n\nShe nodded yes. I drove to the nearby mall and took her to the farthest parking lot, which had no cars in the area. I stopped the car and shut off the motor and told Nora to come and sit in the driver's seat. We both got out of the car and I waited for her to walk around to the driver's side. \n\nShe looked at me and said, \"Do you expect payment in advance?\"\n\nI nodded yes.\n\nShe put her hands on my waist and stood on her toes as I bent over. Our lips met for the first time. After two or three seconds Nora pulled back and asked, \"Was that an acceptable payment?\"\n\n\"More than acceptable for at least fifteen minutes,\" I replied.\n\nI started to go over the car's operation with Nora. Fifteen minutes later we were ready to start the car. Nora looked at me and said, \"I think I owe you another payment.\" Her kiss was even better this time.\n\nFor the next three hours I taught Nora how to drive, and every fifteen minutes I received her kiss in payment. Finally the lesson was over and I drove her back to her house.\n\n\"Would you like to see where I live?\" she asked.\n\n\"I'd love to.\" \n\nWe went in the back gate and walked around a very large swimming pool. On the far end of the pool was a small outbuilding. There was an outside shower and a little child's play area with a swing and a slide.\n\nI heard a child's voice scream \"Nor,\" and a little boy came running over to her with arms raised wanting to be lifted.\n\nNora grinned and lifted him as she turned to me and said, \"This is Bobby; he's the little boy I take care of during the week.\"\n\nI heard a woman's voice say loudly, \"Bobby, come back here and quit bothering Nora.\"\n\nI turned and saw a woman in a deck chair. She was a very pretty with a great body; I know about the figure since she was wearing the smallest bikini I'd seen in a long time.\n\nNora and I walked over to her and Nora said, \"Danny, I would like to introduce you to Dr. Carol Thomas; I work for her and Dr. Thomas.\"\n\nThe woman said, \"Nora, how many times do I have to tell you to call me Carol and my husband is Hank? Danny, are you the friend on the beach that Nora talks about every now and then?\"\n\n\"Yes Dr. Thomas, I'm the ...\n\n\"Danny, she interrupted, \"it's Carol for you too.\"\n\n\"I answered innocently, \"Yes Carol, I'm the guy she watches on the beach so he doesn't get lost.\"\n\nCarol laughed as the Bobby started yelling, \"Swing Nor, swing.\"\n\n\"No Bobby,\" said Carol, \"I'll swing you in a little while.\"\n\nNora said, \"I don't mind Dr....Carol. I'll play with him for a few minutes.\"\n\nNora and Bobby walked to the little playground and Bobby climbed the slide ladder.\n\nCarol said, \"Sit down a minute and talk.\"\n\nJust then Nora shouted a happy scream as she caught Bobby coming down the slide. She and Bobby were both laughing.\n\nAlmost thinking to myself, although I must have said it aloud, \"I've never seen Nora laugh before.\"\n\nCarol said, \"She's had a tough life Danny, and except with children, Hank and I never see her laugh either. Her father died when she was young and her mother died when she was sixteen. She finished high school living with relatives and took a job in a store in Ballybunion where we met her. It took a lot of effort and government paperwork to get her to the United States to work for us, but I'm glad we did.\n\n\"I don't know whether I consider her a very young sister or an older daughter. Whichever it is, she is very special to Hank and me, and Bobby loves her dearly.\n\n\"I take it you and she are friends?\" Carol asked looking at me closely.\n\nI blushed a little and answered, \"Friends for sure and I hope some day it will be more than that.\"\n\nCarol was quiet for a second and then said, \"Danny, You are much more than just a friend to her. She talks about you constantly. The problem is that she has a hard time just letting loose and saying what she feels.\n\n\"When I finally insisted she buy the bikini, all she asked was whether I thought you would like it or not. \n\n\"I told her with the figure that she had you'd like it a lot more if she got a tinier one like the one I'm wearing, but she chickened out.\n\n\"Can I ask you for two favors Danny?\"\n\n\"Sure,\" I replied wondering what I could do for her.\n\n\"The first favor,\" Carol continued, \"is don't hurt her. She is very fragile emotionally in a strange country with few friends and no family.\"\n\n\"I'd never hurt her, \"I interrupted.\n\nCarol ignored my interruption and continued, \"And the second favor I'm asking is for you to show her the fun side of life. Make her laugh with you as she's laughing with Bobby.\"\n\nI asked, \"Do you mean...\"\n\n\"I mean,\" Carol said looking at me closely, \"show her what normal nineteen year old kids do to have fun as they grow up.\"\n\nBefore I could reply she stood up and reached for her towel. Her breasts came close to me as she bent over and I could see some freckles on her chest and obviously hard nipples outlined underneath her top. She caught me looking, but only gave me an impish grin as she said, \"I'm going to relieve Nora so she can show you around.\"\n\nNora came back to me and said, \"Let me show you the rest of my place.\"\n\nShe led me to the pool house and we walked inside. There was a medium size room with a sitting area to watch television, a small open kitchen, and a second room that was Nora's bedroom with her private bathroom.\n\n\"It's very nice, but a little small,\" I said.\n\nNora replied, \"It is the nicest place I have lived during my entire life.\"\n\nA little while later I had to leave and as I said good-bye to Nora she looked at me and said, \"Thank you for your driving lesson. I know I will need many more to pass the test to get my real license. You've been very nice to me. Will you accept an advance payment?\"\n\n\"Of course,\" I replied.\n\nThis time the kiss lasted longer.\n\nTwo weeks went by. Our daily walks continued and two or three nights a week I gave Nora driving lessons in my car. Her payments were always on time and were improving.\n\nOne day we were walking and I said, \"Tonight I would like to take you to a birthday party. Will you go?\"\n\nNora hesitated and said, \"Danny I won't know anyone. I don't think I would be good company for you.\"\n\nI grinned and said, \"Well it's my birthday party and the only one I have invited so far is you. I will take you to a nice restaurant and we'll have my birthday dinner there by ourselves. Now will you go?\"\n\n\"I accept,\" said Nora.\n\nThat night I walked up to the door of Nora's place and before I could knock it opened--Nora had been waiting for me. She wore a black dress that left most of her chest bare other than the spaghetti straps holding it up. Her shoulders were broad and the early curves of her breasts were visible. She was wearing light make up for the first time, and it turned what was a pretty face to one of beauty. She stood silently watching for me reaction.\n\n\"Wow!\" I blurted, \"Is this beautiful woman really you?\"\n\nShe blushed but also beamed with the compliment. \"Carol took me shopping for the dress, and she helped me with the make up since I don't know what to do.\"\n\n\"You can tell Carol that I really appreciate her fixing me up with a princess.\"\n\nNora shyly grinned again and said, \"Danny, I'm embarrassed, but we ran out of time so I don't have a birthday present for you.\"\n\n\"But you do Nora,\" I replied thinking quickly. \"Your present to me is that you have to give me five kisses during the night and after each kiss you have to smile. That would be a wonderful present.\"\n\nNora looked at me and said, \"Could I give you the first one now?\"\n\n\"Of course,\" I answered.\n\nWith her hands on my waist she stood on her toes while we kissed. The kiss ended and she stepped back and briefly smiled.\n\n\"How was that for your first present?\" she asked.\n\n\"I give the kiss a 'B,' which is fully acceptable, but the smile was only a 'C;' if you're enjoying yourself and are happy, the smile has to last much longer.\"",
        "We arrived at the restaurant and as we got out of the car Nora said, \"May I give you your second present?\" Without waiting for an answer she put her hands on my shoulders and we kissed for at least ten seconds. She stepped back and gave me a full smile, and with a twinkle in her eye asked, \"And how was that Danny?\"\n\nI answered, \"The kiss is approaching an 'A' and the smile is now around a 'B.' You're a very quick learner Nora.\"\n\nWe were driving home after a wonderful dinner. Nora had moved to the center of the seat. We had gone through kisses three and four outside the restaurant after dinner and each time I had raised Nora's kissing grade higher. She had asked me how she could get to 'A plus,' but I refused to answer and only grinned at her.\n\nWe arrived at Nora's place and I walked her to the door. She looked at me and said, \"It's time for your last present.\"\n\nShe placed her hands on my shoulders and then changed her mind and put her arms around my neck and pulled me into her. For the first time her breasts pushed into me and when we kissed I felt her tongue pressure my lips. I opened my mouth and her tongue touched mine. As our tongues played, my arms that were around her back pulled her even harder into me. I was instantly hard and I knew she could feel my erection, but she didn't flinch. The kiss ended and she stepped back and gave me the biggest smile that Nora had ever given me. She said \"Happy birthday Danny.\"\n\nI answered, \"I had a wonderful time and you should be proud that your last present was an 'A plus'\u2014both the kiss and your smile. Thank you for such a nice birthday present!\"\n\nShe grinned again and was gone.\n\nWe were walking and holding hands the next day on the beach. There was a pause in our talking and finally Nora said in a serious voice, \"Danny, if you guessed that I'm a virgin and I know nothing about how to have sex, then you're right. No one ever taught me how to kiss until you made me practice. I feel like a little girl.\"\n\nI replied, \"I have kissed girls before Nora and maybe touched their breasts through their clothes a few times, but I am a virgin also. I never found the right girl and had the right opportunity to see what it was like.\n\n\"They taught us sex education in school, but the class really wasn't that much help.\"\n\nI hesitated and then said, \"But my older brother gave me an educational video tape that shows people all about sex in real life.\"\n\nNora said nothing as we completed our walk and said good-bye.\n\nThe next day Nora asked, \"Would you show me the video tape so I can learn?\"\n\n\"Of course; I'll bring it here tomorrow.\"\n\nNora said, \"I would feel better if you watched it with me. I know I will be embarrassed, but with you in the room it seems a better way to learn about sex. As a favor, will you be with me?\"\n\nIt was the following weekend and I was sitting in the pool house with Nora. She had invited me to dinner and had prepared Shepard's pie and a salad. Carol had given her a bottle of red wine, and she served it with the meal. When the meal was over and the dishes were washed, Nora sat on the couch facing the television and said, \"Danny, I don't want you laughing at me. I am going to blush and be very embarrassed, but it's important that I learn about sex. So just sit with me and watch.\"\n\nI started the tape and sat next to Nora. The video started and Nora gasped. The very first scene had a very nice looking couple standing facing the camera. They were completely nude. For the next fifteen minutes the narrator went over all parts of the male and female body. When appropriate, they actors sat down and spread their legs to better show their private parts. The voice was unemotional, but instructive. As the camera went to a close up of the female vulva area, I peeked at Nora. Her face was absolutely red and sweat was on her forehead.\n\nAfter the examination of the human body was completed, the couple began to show the various elements of foreplay. They emphasized that the sensitive areas for one person may not be the same for another. One example was that some women can have an orgasm with oral stimulation of their breasts, where many other women cannot reach that stage unless other areas are teased.\n\nBoth cunnilingus and fellatio were demonstrated in detail. I glanced at Nora. She was staring at the screen, and not saying a word.\n\nFinally the basic positions of intercourse were demonstrated and the video ended with the couple simultaneously coming to climax. The tape ended with an advertisement for the second tape of the series titled 'Advanced Sexual Techniques.'\n\nThe room was silent. I was trying to hide my erection and was hoping that my pre-cum had not penetrated my shorts. The silence continued and I joked and said, \"Well Nora, now you are an expert on sex.\"\n\nNora replied nervously, \"I never thought the video would be so graphic\u2014I could see everything. How could those people ever let themselves be photographed that way?\"\n\nI replied, \"There is an entire industry of porn films and thousands of people do the same thing on film and many other things much worse than what you saw. This film really was educational without the porn element in it.\"\n\nShe finally looked at me when I talked and then giggled and pointed at my erection. She asked, \"Can watching something like that really get you excited?\"\n\n\"Nora, an 'A plus' kiss from you puts me in the same condition. I can't help it.\"\n\nI looked down and saw a moist circle coming through my shorts and I continued, \"And the moisture you see coming through my pants is called pre-cum. It happens when a person gets aroused.\"\n\nNora looked nervous and finally stammered, \"Is it wrong that I'm wet down there too?\"\n\n\"Nora, it's almost impossible for us to watch something like that and not be aroused a little. So it's not wrong at all.\"\n\nShe was quiet for a while and finally said, \"When I play with myself I get wet down there and then I have an orgasm. The movie said that some women climax just by having their breasts touched. Would you do that for me?\"\n\n\"Are you sure?\" I asked somewhat nervously.\n\n\"Yes Danny I am\u2014I want to learn,\" she answered.\n\nI was a little timid at such a frank approach, but was excited. \"Nora,\" I said, \"Why don't you sit on my lap facing me with your legs on either side of me?\"\n\nShe quickly straddled me sitting on my erection. Her breasts were even with my face. I pulled her head down and kissed her\u2014first softly and then with more pressure. I forced my tongue into her mouth and it was accepted by her tongue. We held the kiss for a long time and then I ended it. She was looking at me; her face was flush from the kiss, but her eyes remained serious.\n\n\"Should I keep going?\" I asked quietly.\n\nShe nodded yes.\n\nI said, \"Take off my shirt.\"\n\nShe tugged at my shirt as I raised my hands until it came off leaving the upper part of me naked. I reached for the buttons on her blouse and released each one. When the blouse was free I tugged the ends of it from her shorts and pulled the blouse from her shoulders. Her breasts were concealed by a conservative white bra. I reached behind her and fumbled but eventually undid the clasp and pulled the bra from her; for the first time I saw her breasts.\n\nI was overwhelmed. They were full with large areolas and nipples that were semi-hard. The skin was very white which contrasted against her deeply tanned shoulders and stomach. I whispered, \"You have beautiful breasts Nora.\"\n\nMy hands gently cupped each breast and squeezed them gently. My thumbs lightly rubbed each nipple and they became instantly hard. I heard Nora take a sharp breath and then a quiet sigh. I could smell Nora's feminine scent and gazed at the perfect complexion of her breasts. I leaned forward and my tongue licked a path from the bottom of her breast to the top barely touching her areola, and avoiding her nipple. She groaned and pulled my head harder into her breasts, put I softly pushed her back so that I could explore her. \n\nThe tiny bumps on her areolas beckoned my tongue and I teased each one with little licks as my hands caressed her back and then the sides of her breasts. Nora's breathing was becoming more rapid and she would sigh or quietly groan as I teased her.\n\nFinally I licked each nipple with my tongue and heard Nora gasp with pleasure. I sucked each one lightly and then gently closed my teeth around a nipple and pulled back until it pulled from my teeth.\n\nNora gasped, \"Danny that feels so good; please don't stop.\"\n\nI continued to caress and tease Nora's breasts and suddenly felt her pelvis starting to rub into me. After about a minute she gave a groan of frustration as her position wasn't putting enough friction on her clit. She suddenly shifted herself so that she was straddling only one of my legs. That seemed to help her. She pushed harder into my leg as her motion became faster and faster and suddenly she gasped and pushed my head back and kissed me hard as her orgasm erupted. Moments later she pulled my head to her breasts and remained still trying to catch her breath. \n\nHer breathing slowed down almost to normal; she began to cry.\n\n\"Danny,\" she wailed, \"I'm so embarrassed. I lost control of my body because of the pleasure you were given me. I never meant to do that.\"\n\n\"Nora,\" I replied, \"What happened was fine; it was perfectly...\"\n\n\"I'm so ashamed...please go,\" Nora interrupted, \"I want to be by myself.\"\n\nI tried to talk to her, but she kept crying and asking me to leave; so I kissed her on the cheek, found my shirt and left. I was confused, but knew it wasn't me, but rather it was a fragile girl experiencing something new and frightening. I felt bad for Nora, but didn't know what to do.\n\nThe next day was a work day, but the soccer coach had called a meeting of the team and on the same day the college allowed athletes to pre-register their courses so that their classes wouldn't interfere with their sports activity. The construction boss gave me the day off and I drove to my college early the next morning.\n\nAs I drove out of town I remembered that I forgot to tell Nora I wouldn't be on the beach that morning. In the excitement of our sexual exploration and Nora's reaction it had slipped my mind.\n\nI returned home just before dinner resolved to call Nora as soon as we were finished eating. After dinner I went to my room to call, but the phone started to ring. I thought, \"Maybe it's Nora?\"\n\n\"Hello,\" I said.\n\n\"Danny, this is Carol. Can I talk to you?\"\n\n\"Sure,\" I replied, \"Is Nora okay?\"\n\n\"Nora is fine,\" answered Carol, \"She doesn't know I'm calling you. \n\n\"But she is afraid that you are mad at her and when you didn't meet her at the beach, she really became upset. When I came home she was crying and I made her tell me everything.\"\n\n\"I had to go to college for a meeting and pre-registration. I just forgot to tell Nora.\"\n\n\"Danny,\" Carol continued, \"You did nothing wrong. If anything I encouraged Nora to explore her sexuality. I didn't anticipate how emotional it would be for her, so it's pretty much my fault that things went like they did.\n\n\"We talked for hours and now she is worried that you don't like her any more, and she is ashamed that she was so embarrassed when you two were experimenting.\"\n\n\"Nora is really special to me,\" I said. \"I would never hurt her on purpose. Can I talk to her?\"\n\n\"I think you should wait until tomorrow. She was exhausted and went to sleep early. I just left her. Talk to her tomorrow morning on the beach.\n\n\"And, maybe it would be better if you didn't tell her I called you. I just wanted to be sure you still liked Nora, and now that I know that you do, I think you two should work it out without someone like me getting in the middle.\"\n\n\"Have you figured it out yet?\" I asked.\n\n\"Figured what out?\" \n\n\"Whether your mom or an older sister.\"\n\nCarol giggled, \"No, but whichever it is, she is as much a part of the family as Bobby is.\"\n\nWe ended the phone call and eventually I went to sleep.\n\nI went to the beach the next morning, but skipped my running for the second day in a row. Instead I walked to where Nora always waited for me. When I came around a sand dune I could see her in the distance standing and looking in my direction. She spotted me and immediately started running towards me. \n\nI ran to her. She threw herself into my arms and said, \"I'm sorry Danny, I'm really sorry for being such a silly girl. You were so nice to me and I threw you out. I feel like a fool. I talked to Carol who helped me understand myself a little better, and then when you didn't show up yesterday I just knew you were mad...\"\n\n\"Nora,\" I said, \"I wasn't mad at you. I had to go to my college for meetings yesterday and I forgot to tell you.\" You're my first real girlfriend. Why would I be mad at you?\"\n\nShe searched my face hoping to see that I was telling the truth. She said, \"You aroused me so much when you touched my breasts that I had to do something, and I was so embarrassed that I just did it. When I came using your leg I realized how foolish I was and...\"\n\nI kissed her hard. She paused for a second and then returned the kiss pulling my body into hers so that her breasts pushed into my chest. After the kiss I said, \"No more apologies and no more embarrassment. Okay?\"\n\nShe nodded.\n\n\"And if, I continued, \"you want to slow down with our sex playing, I can wait.\"\n\n\"Danny,\" she replied looking directly at me, \"I don't want to slow down; I want to do more. I can't be this silly little girl any more.\"\n\n\"Are you sure?\"\n\n\"Danny, listen to me. I want you to touch me and do those things we saw in the video tape. I want to know what it's like, and you're the only person in my life I would trust to do those things to me. \n\n\"On my second day in America Carol took me to the hospital where I was given a complete medical exam. I resisted, but Carol insisted that I should start birth control pills because one day I would find the right person to make me a woman. Carol was right; I've found that person in you.\"\n\nI was amazed at her aggressiveness\u2014she was not the shy Irish girl of two months ago. We parted with the promise that I would take her out to dinner and a movie the following day, which was a Saturday.\n\nSaturday afternoon I answered the phone and it was Nora. She was obviously excited and said, \"Can you come over this afternoon. I have wonderful news and I can't wait to tell you. The Thomas' are going away with Bobby overnight to see his grandmother, so I have the place to myself. Bring your suit so we can swim before dinner.\" \n\nI told her I would come over at three.\n\nAt three o'clock I pushed through the wooden gate that led to the pool. Nora was sitting on a chair waiting for me. She was wearing a light terrycloth robe cover up and quickly came over to hug me.\n\n\"Danny,\" she blurted, \"I've been accepted to my college with a full scholarship! When Carol and Hank heard my good news they told me that they would pay any expenses not covered by the scholarship, and they told me that they were buying a new car and would give me Carol's old car! I'm so happy\u2014they are my second family.\n\n\"I'm excited; I just had to tell you right away.\"\n\nShe shyly said, \"And I can drive to your school to visit you whenever I want. That is, if you want to see me?\"\n\n\"I always want to see you.\"\n\n\"Well then,\" she impishly grinned, \"Another surprise that Carol put me up to.\"\n\nShe untied the cover up and let it drop to her feet. I was instantly hard. She was wearing the same risqu\u00e9 bikini that Carol wore the first time that I met her. The triangular cloth barely covered her full breasts and each breast was now outlined with white skin, which showed where the conservative suit had covered and the new bikini revealed. Her pelvis similarly had a white stretch of skin outlining her mound.\n\n\"I love your swimming suit,\" I blurted. \"It shows how hot your body is.\"\n\nShe beamed with the compliment and pulled me towards the pool. We played in the pool for thirty minutes or so. Every few minutes we kissed; her almost naked body touching mine kept me in a constant state of erection. Finally we got out of the pool and lay on the lounge chairs.\n\nI asked, \"Have you put on sun screen.\"\n\n\"No.\"\n\n\"Can I put some on you?\"\n\n\"Of course Danny.\"\n\nShe was lying on her stomach on the lounge chair. I reached for the tube of cream and started at her neck and worked my way down to her broad shoulders. She sighed in pleasure as I massaged her back. There was a single string across her back from the bikini. I asked, \"Do you trust me?\"\n\nThere was a pause and then she answered, \"If not you, who can I trust?\"\n\nI untied the string of her bikini and rubbed the sun screen over her naked back down to her ass. \"Spread your legs Nora so I can cover what the new swimming suit shows.\"\n\nShe spread her legs and I continued to rub lotion down her cheeks and legs making sure I coated her inner thighs. Her ass puckered as I stroked her thighs, but she said nothing.\n\nWe stayed in that position for twenty minutes or so and then I said, \"I think that's enough Nora. Turn over.\"\n\nI almost felt guilty. It was my test and I watched to see what would happen. Nora remained motionless for almost a minute and then she turned over leaving her breasts exposed to me. They flattened against her chest, but I saw immediately that her nipples were hard.\n\n\"You need more sun screen,\" I said.\n\n\"If you say so Danny.\"\n\nI took the tube of sun screen and loaded both hands with it. I started with her shoulders but quickly went to her breasts and nipples, which I teased as I covered them with the sun screen. When I touched her nipples she gasped and then sighed as I gently stroked her breasts. I continued down her stomach and when I reached her pelvis my hands went under her bikini bottom and I rubbed where her legs joined her pelvis. Then I rubbed her inner thighs with my coated hands. Without asking, she opened her legs to my hands.\n\nWe were in the hot sun for another forty-five minutes when I finally said, \"It's a little hot for me Nora. Can we go inside?\"\n\nShe grabbed my hand and we walked together into her pool house. I said, \"I'm grubby with sweat and the sun screen. Can I use your shower?\"\n\n\"Of course. I'll put a towel out for you.\"\n\nI pretended innocence and said over my shoulder as I entered the bathroom, \"I hope I can get rid of all the dirt off my back.\"\n\nI had just washed my hair when the shower door opened and Nora stepped into the stall. She impishly grinned, \"Maybe I can wash your back.\"\n\nShe had removed the bottom of her suit. Her pussy hair was trimmed so that only a small band of hair outlined her slit. She saw me looking, but made no effort to conceal herself.\n\nWhat followed was the most sensual shower that I could ever imagine. My back leaned into her breasts. She lathered her hands with soap and washed me from head to cock to toe. Her light stokes and her breasts pushing against me were erotic. She at first ignored my cock and balls, but I took her hands and forced them to touch me. That was all it took as she then fondled me and explored this new sexual territory.\n\nWhen it was my turn I lathered two wash clothes and covered every inch of her body. She gasped as I washed her vagina and lightly touched her clitoris. She tensed up when my fingers slipped between the cheeks of her ass and briefly touched her opening.\n\nThe shower ended and we dried each other\u2014each of us teasing the erotic parts of our bodies. It was obvious that both of us were now highly aroused. \n\nNora pulled me into her bedroom and made me sit on the edge of her bed. She said, \"Carol said that for the first time you need to come first so that you can last when I come.\"\n\nShe took my penis into her hands and then started to lick my shaft; the entire length in slow, subtle strokes. She finally took me into her mouth and started to suck it gently; her tongue teased the underside of me until I thought I would burst.",
        "\"I'm coming Nora, I gasped.\n\nShe pulled me from her mouth just as I came with spurts of semen covering her chest and breasts. She giggled, \"I was afraid to swallow the first time, but I'm gong to practice to be better.\" \n\nI went to the bathroom and got a warm, wet cloth to clean Nora's chest. She lay on the bed watching me. I knew that it was important that Nora receive as much pleasure as possible for her first time and resolved that I would put her enjoyment ahead of mine.\n\nMy head moved to her lips and we kissed\u2014softly at first and then harder as our naked bodies aroused each other. My lips went to her neck and then shoulders. I kissed, licked and touched her intimately. As I licked the upper part of her breast I heard her first sigh of pleasure as she trembled slightly in my arms. I could smell the delicate fragrance of her body; it was like an aphrodisiac to me. Her nipples, already hard, rose to my mouth inviting me to kiss and suck. My teeth gently closed on a nipple and stretched it from her breast and finally pulled free from my teeth. She gasped with pleasure as the teasing bites continued on her nipples.\n\nI continued my sexual teasing for more than thirty minutes. Nora's groans of pleasure were more frequent now and when my finger first went to her wet vagina and traced her slit, she screamed with surprise and happiness. My tongue teased her inner lips as she spread her legs farther apart inviting me to penetrate her farther. When my tongue touched her clit, she immediately came; her mound pushing into my face with quick shudders of movement.\n\nI knelt between her legs and continued to lick her thighs and calves as she recovered from her first orgasm. I knew she wanted me in her\u2014to get past this barrier of virginity so that she could be a woman\u2014but I also knew that she had to become even more aroused to overcome any pain that I might bring her. \n\nI continued the sexual teasing and once more my tongue was exploring Nora's vaginal. \"Danny, don't let me wait any longer,\" she begged.\n\nI ignored her plea.\n\nMoments later, \"Please...I'm begging you.\"\n\nI glanced at her face and saw it flush with sexual arousal. Her eyes were tightly closed and she was swinging her head back and forth in frustration. My hands went under her knees and I pushed them back so that her thighs were almost touching her chest. Her body was open to me\u2014her clit pushing past the hood, sexual moisture soaking her vagina, even her asshole was visible as I knelt close to her.\n\nI lowered my cock to her opening and slowly pushed into her until I met an obstruction. My fingers went to her nipples and clutched each hardened point. I squeezed each nipple hard and thrust into her. She gasped in both pain and pleasure as I penetrated her completely.\n\nMy cock was surrounded and clutched by her warm vagina walls. I whispered, \"Are you okay?\"\n\nHer eyes opened and I saw them tearing. \"Just make love to me Danny.\" \n\nI withdrew a little and then pushed forward again looking for signs of pain. Nora's eyes were shut again, but her tongue was licking her lips with excitement and she was smiling. \n\nI continued the motion of love\u2014slow withdrawal and then quick, full penetration. Her pelvis started to come into rhythm with me. Suddenly she gasped, \"Faster.\"\n\nSeven or eight more thrusts and she screamed \"Danny,\" and started to come. When I was sure she had started to climax, I emptied myself into her with convulsive thrusts that would not stop. \n\nAfter my body was finished its frantic thrusting, I lay next to her and pulled her head to me. My lips met hers and I whispered, \"Thank you.\"\n\nShe hugged me and returned the kiss. Her body rolled over so that she was laying on top of me\u2014our thighs, groins, and chests all touching as if we were one. The naked sensual touching, the smells of her fragrance, sweat, and musky sexual odors overwhelmed my senses. All I could do is return her kiss even harder.\n\nWe lay facing each other later. She smiled and asked, \"Am I your girlfriend now?\"\n\n\"You are much more than my girlfriend Nora.\"\n\n\"As your girlfriend, I give myself to you.\" \n\nShe took my hand and brought my fingers to her lips and then to her nipples, and finally between her legs.\n\n\"I want you to always touch me anywhere at anytime. Whatever you want to do with my body, I will try to please you.\"\n\nHer obvious sincerity and open ended sensual gift of her body to me was overwhelming. Her hand went to my face to wipe a single tear they had appeared when she had surrendered to me. I became hard again, which Nora immediately noticed. She reached for me.\n\nOur second lovemaking was harder and rougher and Nora came much more violently as she again screamed my name when her body released to sexual pleasure.\n\nWe lay again looking at each other. I teased, \"What happened to my shy Irish virgin?\"\n\nShe smiled gently and answered, \"She became addicted to sex because of an American man who refused to give up on a silly Irish girl, and now he is responsible for her...I hope for the rest of her life.\n\n\"Danny, can we take a small nap, make love again, take a shower together, and then I will cook for you.\"\n\n\"Of course.\"\n\nShe rolled over so her back was to me. We cuddled and my hand rested on her breast.\n\nJust as I closed my eyes and my world went black I heard her say firmly and with a happy lilt, \"I love you Danny.\" "
    ],
    "authorname": "Cat5",
    "tags": [
        "virgin",
        "first time",
        "bikini"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/my-irish-virgin"
}