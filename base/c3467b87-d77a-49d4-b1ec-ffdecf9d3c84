{
    "title": "The Loft Game: Hula Girl",
    "pages": [
        "This is the fourth in the series about Chips and her adventures. I'm assuming you've read at least the first one, The Loft Game: Kermit. If not, it might be a good idea in order to get an idea of the characters and what the Loft Game is about. In between that first and this one:\n\nKermit was followed by The Loft Game: Barney, where Chips got an invitation to join the more advanced (read: higher stakes than stripping) main game for the next semester. That was followed by The Loft Game: Elf on a Shelf, which covered her adventures over Christmas break, including a party game that left her owing a very specific \"favor\" to an old friend and meeting a new friend's younger brother in a rather non-platonic way.\n\nNow, she's returned to college for the optional winterim session before the spring semester, and she's about to dive into the main game.\n\nSo, nothing deep or heavy, just a bit of E/V-type fun, and since it's a series, the stories don't rush. If that sounds interesting, I hope you enjoy it.\n\n\u2014C\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\n\"Yay! You didn't get scared off,\" Carrie called to me as I stepped out of the cold into the loft for the green game.\n\n\"Told y'all,\" Hannah said, pushing in behind me. \"No quit in the byotch.\"\n\nThat turn of phrase reminded me of Josh. I knew I probably had an uncomfortable conversation with him coming up, but he wasn't here yet. No Em either; she wasn't taking a winterim course and would be back the next week. I looked around the faces: Carrie, Owen, Mike, Megan&nbsp;... \n\n\"I don't know you,\" I said to the tall girl sitting on the couch. \"I'm Charl, but call me Chips.\"\n\n\"I'm Sara.\" She had a nice smile, warm and welcoming. \"I didn't play in the fall 'cause of an internship, but I've heard about you.\"\n\n\"Wait until she meets Victoria!\" Carrie said.\n\nI raised my eyebrows in a question to the group. The laughter redoubled. \n\n\"Let's just say Victoria has an interesting personality,\" Megan said.\n\n\"Let's just say Victoria loves being a cast-iron bitch,\" Mike amended.\n\n\"I just said that, honey. Pay attention.\"\n\nI heard the door open. I turned and smiled at Gwen. \"Hey, frosh.\"\n\n\"Hey, frosh,\" she echoed. Once again, I got the impression she was glad she wasn't the only freshman here, and doubly that I was a girl. \n\nOthers piled in, bringing a wintry blast.\n\n\"Fuck, there's a lot of you,\" Owen said, looking around the crowded room. \"Welcome to our two new regulars. You guys rocked it in that game before break, and we're glad you're here.\" He counted heads. \"We're one girl extra.\"\n\n\"I'll sit out,\" Brey said and stood to leave.\n\n\"Nah. Anyone object?\" I remembered the same question when Carter had shown unexpectedly and unbalanced things toward boys.\n\n\"Hey, more girls are fine with me,\" Nick said. \"More chances they lose.\"\n\nOwen looked at Gwen. He was obviously presuming the veterans' responses. I couldn't deny the tickle at being numbered in that group. She hesitantly nodded agreement when no other girl spoke up.\n\nHannah snagged two bowls from the shelf, one blue, one pink, and counted poker chips into them. \"Pink's boys, blue's girls.\" \n\nI drew from the blue bowl and read the letter written in Sharpie on it: K for Kermit. I found myself with Brey, Thomas, and Nick, along with the familiar green figurine. When I commented on the bowls, which were new to me, Thomas said, \"Fall semester we were really short on guys because of sports, internships, and stuff. Rather than have two really light tables, it was easier to have some people stay home. Though&nbsp;...\" His eyes crinkled with humor as he shot a sly glance at Brey. \"Not everyone actually sat it out.\"\n\nShe stuck out her tongue. \"So we had some unofficial games in the apartment? Sue me. I noticed you showed up once.\"\n\n\"And watched you get butt naked and streak the quad wearing only sneaks and a mask.\"\n\nHer tongue was joined by a pair of middle fingers. The image of streaking a quad that was almost certainly not empty of people she knew gave my libido a little pump.\n\nAn hour later, I wondered what was different. You're certainly not bored ...\n\nAll three tables had finished. I had done well, losing only my socks and shirt.\n\n\"God damn it, Chips!\" Owen had shouted across the room. \"I thought I asked you to give us something new!\"\n\nI glanced down at the purple bra. It was a nice-looking one, so I tended to wear it. \"I forgot,\" I yelled back. \"Next time I'll show you the one I got for Christmas if you agree to briefs or trunks instead of boxers. I want at least a hint of what's under there. Thong's okay, too.\" Everyone who had been there laughed at the memory of my side bet with Hannah months ago.\n\nThomas had gotten far too confident on three jacks at our table, and Brey cut him off at the knees. I enjoyed the scenery. \"Somebody got a manscaper for Christmas,\" I called, earning a high-five from Hannah as he reacted.\n\nOut of the corner of my eye, I saw Gwen glance quickly as his boxers came down, check around at some of the other girls, then go back to looking when she saw none were being bashful. \n\nIt was almost more interesting to watch her. I mean, I liked looking at naked guys, fantasies of naughtiness playing along the edges of my mind. I have ever since my parents let me have my first smartphone. I certainly let my eyes roam along Thomas's body. I felt the pulse of heat as his eyes averted. That surprised me a little\u2014that he still felt self-conscious, not that I reacted to it. The last three months had taught me something new about myself, something I sorta accepted and was also unnerved by.\n\nBut Gwen's stare was avid, and it was exciting to speculate on what was going on behind those eyes. Was she imagining him hard? Was she imagining being the one who got him that way? Was she picturing them in bed? Something.\n\nThen Sara at another table gave a soft cry of frustration and stood. She drew off the layered tank she'd opted for instead of a bra because she was small up top. Then she reached for the lacy pair of French knickers, and I realized she'd lost two pieces, a bad beat.\n\nShe slid them down slender legs that looked as long as I was tall given how lean she was. Every move was silky smooth. Something about the balance and poise and the ripple of muscle in that taut ass made me wonder if she was a dancer.\n\nFuck! I wish I had a booty like that. Christmas break had put a little more curve in the derri\u00e8re that I wanted to get rid of.\n\nThe gaze of every guy was riveted. Sara was bare down below and that graceful reveal left nothing to the imagination. The quarter turn, the legs straight as she leaned over in a display of flexibility that I envied, the slow slide of gray silk down over skin so pale it couldn't hide the faint color\u2014excitement, I was sure, not bashfulness. It screamed, \"Want this, boys?\"\n\nAre bears Catholic? \n\nShe did her required pirouette in fluid slow motion and headed for downstairs. The rest of us settled in to watch the last table. It was clear another guy was taking the fall unless one of the girls had a horrible run of luck.\n\n\"Better you than me, dude,\" Mike said to his table mate as Hunter stood. \"I had shit cards, so you and Sara must be rusty. Remind me not to take a semester off.\" He glanced over at his friend on the couch. \"Thomas, of course, lost because he's an idiot.\" That earned him an empty water bottle hurled in his general direction amidst laughter.\n\nBrey whispered to me, \"Hunter wasn't around in the fall because he's on the football team and away a lot of Fridays.\"\n\nOne of those guys in front of the quarterback, I guessed, a lineman or whatever they're called. He stood several inches over six feet and I bet broke three hundred on the scale easily. Bulk over muscle. Lots of muscle. Biceps like Sara's thighs. My eyes dropped.\n\n\"Is he proportional when he's turned on?\" I whispered to Brey with a dirty grin.\n\nShe choked down the giggle. \"Ask Sara. They're a thing.\"\n\nI looked at Brey in astonishment. She nodded, eyes glistening with amusement. I looked back at the giant, then over at the slim form sitting naked with legs primly crossed. I pictured him on top of her.\n\n\"So, she's a regular at the emergency room?\" \n\nBrey choked with laughter. She smothered it with her hand and shook her head when everyone looked over to let them know that no, she was not laughing at Hunter's nudity.\n\nThe three losses had been fun, no doubt about it. One man's self-consciousness tugged at that part of my brain. Another's naked body was fuel for a deliciously wicked size fantasy. Sara's deliberate tease gave me a thrill, despite being straight. The aura of \"turned on\" that permeated the room pushed at my own desires. But I wasn't feeling it with the same visceral punch of last semester.\n\nGetting jaded already, Charl?\n\nHard on the heels of asking myself that, I knew the answer. \n\nNo, not jaded. \n\nAny other night and I'd have been totally into this. I'd have whooped and perved just like before. But tonight, I was distracted. One of a few things was going to happen in about two hours or so. \n\nThe first possibility made me shiver: a blowjob for a guy I barely knew. All the while knowing that ten or a dozen people outside the door were picturing exactly what I was doing. That they had teased me and would tease me more when I emerged. \n\nThe other possibility was the payoff: the dark-red butterflies of arousal, of being one of those voyeurs sitting outside the room, watching the perp walk, picturing what was happening behind that door after it closed, listening intently. Emily had confided that none of the girls, no matter how blas\u00e9 about nudity, had gotten blas\u00e9 about that walk.\n\n\"It doesn't happen enough to any one person to get like a porn star heading for just another day at work,\" she'd said. \n\n\"How many times have you lost?\"\n\n\"Twice.\"\n\nI'd pictured it. Her knowing eyes knew, but she didn't complain. \n\nThat&nbsp;... or ten jillion times better than a girl making that walk: watching a guy's solo act at the front of the room under the carefully directed track lights. Because he had to. Those words from that first time in the library, when I'd eavesdropped and unwittingly started on an electrifying new part of my life, were about to become a possibility: \"...&nbsp;watching some dude turn all red 'cause he's gotta do himself is seriously hot.\" \n\nOh my God, yes!\n\nOf course, there was another option, but it was too much to contemplate. My mind refused to go there, to acknowledge the possibility.\n\nBesides, surely the guy would want to try out the new girl's skills if she lost, right?\n\nBeing unable to stay in the moment right now had nothing to do with the green game not being exciting. It was exciting like foreplay was exciting. But I was a virgin at what was coming next, and just like when I was a real virgin contemplating that post-prom bed in the shore house, my mind could only stay focused on what was coming.\n\nWhen Hunter returned from Kim and Andrew's, people gathered up and started leaving, including some who'd be back. \n\n\"Half an hour after the first game ends, that's when we meet again,\" Hannah told me earlier. \"Most of us make coffee or munchie runs and claim we have stuff to do if any of the green-gamers suggest hanging.\"\n\nLooking at the doorway, I saw Josh hovering, waiting for me. I steeled myself and went over to join him.\n\n\"Hey,\" I said as we got down to the driveway. \"I\u2014\"\n\nHe pulled out a quarter. \"Heads or tails?\" His face was alight with excitement.\n\n\"I don't think I want to anymore.\"\n\nHis face fell. \"What? Why?\" He stepped closer so he could see my expression in the dim illumination from the lights that lined the drive. \"Come on! Yeah, you lost last time, but it wasn't that big a deal. You knew you'd probably lose sometime, and it's not like you haven't done it before.\" \n\nI didn't react to that casual assumption about my sexual history because it was pretty much undeniable even if it was a crass thing to say. \n\n\"And\"\u2014his voice took on a virtuous tone\u2014\"I did offer to make it a two-way street last time. That offer still stands.\"\n\nI stifled my reaction, the one that would have gone something like, \"Puleeze! You only offered because you wanted more that night.\"\n\n\"Starbucks, Chips?\" The voice came from the stairs behind us. Hannah was halfway down, her eyes on the pair of us. \n\nI ignored the flash of irritation on Josh's face at the interruption. \"I need a few minutes here. You go,\" I told her.\n\n\"Okay. Meet you at my room later. I'll get you through that problem set.\" Offering me an easy way out if I wanted it. The group had heard me moan more than once about how calculus wasn't sinking in as quickly as I liked, and Hannah was an engineering major who had easily aced her way through it.\n\n\"K.\" I turned back to Josh. \"I don't think\u2014\" No. Make this definite. \"I'm not going to bet anymore. We each had some fun. Let's leave it at that.\"\n\n\"Come on! Don't be a chicken.\" My eyebrows went skyward. He held up a hand. \"Sorry.\" I watched him wrestle with what to say. I saw the petulance appear, and I knew even before he opened his mouth where this was going. \"You know, it's not fair. You got twice. I only got once.\"\n\nOkay, now you've pissed me off.\n\nI bit my tongue. What I wanted to say was, \"That's exactly why I'm done. You're a sore loser. Because, dickface, I didn't get twice. I won twice, fair and square, in bets you were just as eager to make as I was.\" \n\nBut I didn't want this escalating. He and I were going to be around each other in vulnerable situations, and I didn't need the aggro. So, I tempered it. \"Josh, look. What makes this whole thing we're doing\"\u2014I waved vaguely up at the loft\u2014\"fun is the uncertainty and unpredictability. If we fall into a routine, it becomes just boyfriend&ndash;girlfriend stuff, and that's not what I want. It's not what the game is.\" \n\nBefore he could counter, I added, \"And if I did have a boyfriend, trust me, there'd be no way he'd be allowed to be here. Boyfriend means exclusive to me. And you still want to play, right?\"\n\nI didn't give him time to think because there were holes you could drive a truck through in that logic. I pressed. \"I've heard there's, like, ten or so girls in this group. Keep changing it up. It'll be more exciting. Now I gotta go. There's a calc test next week.\" \n\n<center>\u2022 \u2022 \u2022</center>\n\nI was waylaid on the outside steps despite the freezing temperature. At least my latte was still warm. Hannah was right behind me up the driveway.\n\n\"Chips, this is Victoria,\" Hannah said.\n\n\"Hannah tells me you asked about faking it.\" Victoria's expression was as grim as her curt non-greeting. \n\nI looked back at Hannah in reproach. I thought you were my friend. \n\nShe shook her head, denying that she'd stuck a knife in my back. \"I told her everything about you joining, yes,\" she said. \"She's played the longest and has a right to know. But I also told her that I'd vouch for you one thousand percent and no way that would happen.\"\n\nI'd looked at her open expression and friendly eyes and believed her.\n\n\"I hope that isn't a game plan, new girl,\" Victoria went on. \"Not on my watch. No guy gets to claim that the women can't suck it up as much as they do ... no pun intended. You lose and the guy wants a show, you give him a show.\" Her tone was infinitely fiercer than Emily's when she said those same words to Logan long ago in the library. \n\n\"We'll be there for you.\" The continued aggressive air belied the words. \"Especially your first time. Even the guys will be okay\u2014into it, for sure, and they'll say things, but they won't mock you. It's not like when you have to suck a dick. But if you end up bitching out, just get the fuck out of the room, and we'll clean up your shit. And if you're already thinking that's a possibility, save us the drama, and walk back down that driveway right fucking now.\"\n\nShe turned and went up the stairs as if nothing more needed to be said. More than slightly rattled, I followed. Hannah gave me a little hip-bump as we got to the landing at the top and a warm smile.\n\n\"Don't freak. She's just being Vic,\" she whispered.\n\nI plastered on a cheery face and stepped into the room. I returned the welcomes and laughing teases of those I'd met only at the last game when they'd hazed me in.\n\nTo my surprise, twelve of us squeezed around the big table. \n\n\"Umm,\" I said. \"How&nbsp;...?\"\n\nA few minutes of confusion and a contrite \"Oops!\" from Hannah later, I found out we weren't playing Five Card Draw. I got a quick primer on the rules of Texas Hold 'em.\n\nI don't know anything about this game. Will my first game end in&nbsp;...? I had a moment of panic. I peeked at the two cards dealt to me. King-king. \n\nPlease let that be an omen!\n\n<center>\u2022 \u2022 \u2022</center>\n\nOh my God! That's all my brain could come up with. Oh my God, I'm addicted! This isn't even as good as it gets, and I'm addicted already.\n\nI watched Logan stand, her face tipped downward so that her long hair partially hid her face. She was one of the first two I'd \"met\" in this game. Not really met. Looking back, I realized that the conversation I'd eavesdropped on must have been after her first game. I'd listened as Emily gave her a much softer version of the speech Victoria had just given me, while assuring her that everyone won at some point. \n\nIt was Emily's description of what happened when a girl won, what she could ask the loser to do, that had ignited a fire in my gut that still hadn't gone out.\n\nNow, all I wanted to do was shove my hand down inside the pants I wasn't wearing. \n\nNo, all I wanted to do was whisper in Carter's ear, \"Wanna play?\" and have him spend the rest of the evening turning me limp from orgasms that would be ridiculously easy to wrest from my charged body.\n\nBut really, all I wanted to do was be right here.\n\nI mean, for a couple of seconds, I felt weird. I was straight. Yet here I was, reveling in the fact that another girl had lost both her clothes and the game. She was heading back to pay up and it turned me on something fierce. It wasn't the naked body\u2014I was far more interested in the five naked guys around me. So much so that my eyes hadn't stopped traveling from one to another until Zach slapped down that straight and knocked Hannah out. It was that Logan was going to make Zach a happy camper and she was so clearly unnerved doing it.\n\nWhat kind of person gets turned on by someone's embarrassment?\n\nI didn't feel like a bitch. And \"you can quit at any time.\" Nothing was nonconsensual here, even the stuff where someone was reluctant. I pushed the thought away and let in the burn of hungry lust as I pictured Zach's normal outgoing expression turning inward as her warm mouth worked its magic.\n\nI didn't care that I was stark naked too. So was everyone else in the darkened room. I didn't care about the pointed conversation that had been my introduction to Victoria. Nothing she had said was unfair, no matter how extra she had been.\n\nI didn't care that I hadn't managed to tease because a potent, carnal wave had completely overwhelmed me the instant Zachary said, \"Come on, Logan.\" I'd barely heard what the others called out because I was too focused on the actors' faces. Hers, full of chagrin and embarrassment and nervousness. His, the excitement of winning yielding to the darker excitement of lust as he watched the naked woman walk toward him to satisfy it.\n\nI didn't care that Carter maybe wasn't available because Carrie had whispered something in his ear and he'd nodded. \n\nOkay, maybe I do care about that one. I sighed silently. Maybe I'll have to find out if the gift Emily gave me for Christmas really does have \"5 unique patterns and 5 intensities.\" ",
        "But no, even wondering about how to cope with later didn't change now, which was envisioning what was going on in that room: Logan's mortification fading away as she knelt to her task; the sprawled male figure; that first descent of an open mouth; his gasp\u2014Zach would, I was sure\u2014the slow bob; breaths getting faster and heavier; quiet outcries I hoped would become loud enough to hear through the door. \n\nThe finish&nbsp;... \"You have to let them finish,\" Hannah had told me when she'd explained the rules of what went on here. What would Logan do? \n\n\"I hear this is your first loss,\" Victoria had said. \"Sooo, Logan&nbsp;... what do you do at the big moment?\" It elicited only more blush and a slight stumble toward the door with downcast eyes. \n\n\"I hope it's not gag,\" Victoria called after her with a snarky little smirk.\n\n\"Zach doesn't keep secrets, so we'll know soon enough,\" Owen contributed as the door slammed. He also laughed, but his tone had none of the edge in hers. He glanced over at me. \"Hey, you'll be the only mystery. What about it, Chips? Care to tell us in advance?\"\n\n\"Well&nbsp;... not spit,\" I said mildly. It was fake, a fa\u00e7ade of bravado over a sudden rush of adrenaline. Unbidden, my mind pictured doing what Logan had just done: standing and walking to the back room under the watchful eyes of a roomful of people. People who, friends or still just acquaintances, would feel the same quiver of excitement at my embarrassment that I felt at Logan's, and who would have no hesitation about indulging it at my expense. I had no doubt I'd be as red as she had been.\n\nI saw every one of those eyes on me for a second: girls' in pure humor, guys' mixing in speculative eagerness.\n\n\"That'll be you someday,\" Luis promised, the dark thrill he got from teasing me evident.\n\nWe all feel that. We're sitting here, aren't we?\n\nEvery nerve tingled. There was dread. But at the same time, it made my enjoyment of this moment so much more intense. It was the Kingda Ka roller coaster at Great Adventure or the bungee jump Julia had talked me into one insane day last summer. \n\nThe risk makes the thrill. Adrenaline junkie.\n\nThere was a sound, a tenor \"mmm\" instead of the gasp I'd predicted. There were chuckles out by us, but a shiver rippled through the room nonetheless.\n\nOh my God. I'm so hooked on this!\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"That is sooo like her,\" Emily said. She was in my dorm room, impatient for the scoop on my first main game. \n\nI started with meeting Victoria. \"I was scared of her.\"\n\nShe leaned up against my arm and put her head on my shoulder. \"Don't sweat Victoria. My first main game she cornered me and said, 'Don't be that bitch who fucks this up or I'll fucking kill you.' I was scared too even though I'd spent an entire semester in the green game with her. But you'll see; she's not always that way.\"\n\n\"She's pretty intense.\"\n\n\"About that. She\u2014\" She glanced away for a second, thinking. \"Talk to her sometime about the game.\" As I started to shake my head in refusal, she pushed. \"She won't take your head off; I promise. You should do it.\"\n\nFat chance. \"Do girls bail often?\"\n\n\"I don't know about often. One a year maybe? That's not a lot when you consider.\"\n\nJill yourself off in front of a crowd of voyeurs? No, it's certainly not a lot.\n\n\"Have you been there when someone quit?\" I asked. \"What does everyone do?\"\n\nShe got quiet again. \"Once. It wasn't major drama. The guy didn't feel cheated.\"\n\nI digested that. Someone took the loser's place, I interpreted.\n\n\"She just plays green now sometimes,\" Emily said.\n\n\"Who?\" I saw her frown. \"Oh! Never mind. None of my business.\" But just because I recognized that there were some things private if you weren't there when it happened, didn't mean I didn't speculate inside. I couldn't figure it out. Everyone was either in the game, didn't know about the game, or seemed too ballsy to be that girl. I haven't met everyone.\n\n\"Have you ever&nbsp;... you know?\" I asked.\n\n\"No. I'm dreading it.\"\n\n\"Me too.\"\n\nShe pulled back off my shoulder so she could look at me. \"You won't bail, will you? Please say you won't.\"\n\n\"No. I'm not a welcher.\" As I said that, I remembered my debt to Anthony from New Year's. He didn't remember it, but I did&nbsp;... and I wasn't a welcher.\n\nFuck, it's going to be embarrassing to remind him! Talk about sounding like a ho. \"Hi, Anthony. Not for nothing, but would you like a blowjob?\"\n\n\"So, your first game? I know you didn't lose because Logan texted me all, like, OMG about Zach popped her main-game cherry. She said she nearly died.\" Emily laughed. \"So, how 'bout you?\"\n\n\"You owe me big time!\"\n\n\"What'd I do?\"\n\n\"You didn't tell me that it was Texas Hold 'em instead of Draw. I could've used the heads-up to read about strategy before.\"\n\n\"Hannah was supposed to tell you when she invited you.\"\n\n\"Well, she failed. She owes me too. But you're my friend and shoulda warned me. I was freakin' lucky I got good cards.\"\n\nShe winced. \"Sorry. We like it all one table instead of having to split things, but Hannah was sup\u2014\"\n\n\"Nope! Epic fail by both of you, and you both owe me,\" I repeated. \"Hey, want to go to Daytona Beach with me at spring break?\"\n\n\"Oh, I can't.\" She looked distressed, like maybe she felt she owed me a little too. \"I already have tickets to Cabo with my friend from high school. We planned it before I even met you. Hey, maybe you could come with. There'll be a couch.\"\n\n\"I'm already committed to Daytona.\"\n\n\"Maybe we could do something in the summer? Or next year.\"\n\n\"Don't freak out. It's okay.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nIt happened. Of course it did. There's no way it wasn't going to, sooner or later. It just happened to be sooner.\n\nWas it blind luck? Of course not. Luck of the draw is luck of the draw, but players can stalk someone nonetheless, and the guys were stalking the new girl. The girls helped too&nbsp;... some of them. Not Em. I don't think Hannah. But Victoria and Brey had, taking delight in really initiating someone, popping a main game cherry, as Em put it.\n\nPlease. Please, God. I'm begging you.\n\nThe pregnant silence stretched until it was almost unbearable.\n\nPLEASE!\n\n\"Let's go in the back,\" Owen said. The sparkle in his eye told me he'd known exactly what was going through my mind.\n\nI stood and moved out of the dim light that surrounded the table. It wasn't like the green game where we had normal lighting all around the room. That was good for seeing the clothes come off and watching the loser trudge away to visit Andrew and Kim. The main game had a different agenda.\n\nLast week, Owen had called, \"Lights,\" as Carrie came in from outside, and she'd moved to the set of dimmer switches I'd never paid attention to. The lights over the door to the little room flared. I hadn't realized they were only half strength before. The recessed spots directly over the center of the table that shone tight cones of illumination down on the playing surface remained on. Every other light went out. Once my eyes adjusted, I could still see as people stood to strip in the indirect light. In some way ways, the demi-lit forms were even more alluring.\n\nBut the step from the table toward the back room was like stepping out of an anonymous audience onto a spotlit stage. Every bit of mortification was on view. My skin, which had felt warm a half hour ago, felt like it was on fire now. I had no mirror, but I'm sure what had been pink was now fiery crimson.\n\nIt was not\u2014specifically, I mean\u2014that everyone in the room knew what I was about to do. There'd been a lot of times when Julia had dropped me off at my house, and Christian had said, \"I'll get out too.\" Julia had known damn well we were headed for the camper and what was going to happen in it. And in December, Hannah had known what was going on in Carter's room just as I'd known what was going on between her and Owen one wall away.\n\nIt was that my forthcoming actions had been turned into a spectacle.\n\nAnd that was the point. That was the whole voyeur-vibe that was the heart of the Loft Game. That was why, even though I had no doubt that Logan had given more than one blowjob in her life, I had felt the burn of excitement watching her stand and stumble to give one to Zach. Not because she was horny and he was cute, nor because she loved him and wanted to make him feel good.\n\nBecause she had to. You gambled, you lost, and now get on your knees. No one said that, but it was the subtext. That was the meaning of that pat on her naked ass as she preceded him through the door. \n\n\"Technically, they're not supposed to until the door closes, but some of the guys push it just a bit. Remember me talking about being a good sport back on your first day?\" Hannah had advised me&nbsp;... warned me&nbsp;... earlier about hands. One more thing for people to ogle.\n\nThat was the vibe, and every one of us had felt the kink in our psyches lurch in response as that scene unfolded and turned us on.\n\nNow I was that person. The one whose reluctance was fuel for fire in people's bellies.\n\nIt started, the \"helpful\" suggestions about technique. Reminders that there was a pillow on the bed if the rug wasn't enough padding and \"Kleenex in the drawer.\" Jokes about gag reflexes and pearl necklaces. \n\n\"Don't worry,\" Brey taunted, \"they say it's good for the skin.\"\n\n\"I read that's not proven,\" Carrie said. \"Hey, Chips, you could be a case study.\"\n\nWas I about to get a facial? \n\nI wouldn't have tolerated it from a boyfriend. But can you impose boundaries like that? I didn't know the protocols. That's deliberate, I bet. They want your first time to be jumping in the deep end.\n\nThe inevitable question from someone who hadn't played last week, my response repeated in gleeful shouts from those who had heard my answer.\n\n\"Look at those headlights! Oh my God. New girl's TOTALLY turned on doing this.\"\n\nI refused to give Victoria the satisfaction of letting her know she got to me by covering my breasts with my arm. It was nerves-tension, not arousal. I wasn't turned on. I wanted to die.\n\n\"Open wiiiiide,\" Hannah called.\n\nIs she warning me or just jerking my chain? You'll know in a minute, Charl.\n\nI focused on Owen's eyes to avoid theirs or staring at my feet like I was cowed; I was tougher than Logan. His, at least, were hooded with lust, leaving room for only a faint bit of humor. They roamed my body boldly, from traitorous breasts to the trimmed triangle between my legs. I could see the hint of fullness in his jeans. I knew he didn't care that anyone saw. There was no polite veneer in the Loft Game: he was the victor, and he would claim his prize, and everyone knew it.\n\nMy knees felt weak. I remembered Logan's slight stumble and hoped they didn't tremble as I moved forward.\n\n\"Shaky knees, Chips. Don't worry, you'll have them on stable ground soon enough.\"\n\nI shot Emily a glance of pure hatred for that comment. I got back a simpering sweet smile in return. I stepped through the door after Owen and shut it behind me. \n\nI immediately felt better. I didn't love giving BJs; that's a known fact. I wasn't turned on right now; that was also a fact. But it was just a thing to get through, a few minutes of effort and a minor moment of \"bleh.\" Taunting though, I was really having stage fright over that&nbsp;... way more than I thought I would.\n\nThis part is easier.\n\nThat trace of humor was gone from Owen's eyes. For the last hour, he'd watched six women get progressively naked. When Brey had called my final \"all in\" and flipped over her aces to my ace&ndash;king, he'd known which girl it was going to be if he could pull off the win. Everyone had. Every person, particularly every guy, had turned to me with smirks.\n\nAnd the girls hadn't done well tonight. Barring a miracle, I'd known I was toast half an hour ago, that Luis was naked but that was all it was gonna be for him.\n\nI'd held hope that the winner would be Carter simply because at least familiar territory. But he'd followed Luis into nudity, and I knew I'd be with someone new. I hadn't even enjoyed the visuals of five guys going full Monty as I watched fate approach.\n\nNow, that hour of visual foreplay, that stimulation of knowing he'd be the one when Chips became a true veteran of the Loft Game, had stripped everything but the desire in his eyes. I knew that later he'd take Hannah into his room, and they'd fuck until every bit of built-up lust had been spent. \"But first,\" those eyes said, \"first, I'm going to have you&nbsp;... right here, right now.\" \n\nI let him kiss me, accepted the tongue and palms cupping my ass cheeks and pulling me tight so that my breasts mashed against him. I'd known that was coming. \n\n\"You can kiss a loser guy in the back room and grope a teensy, tiny bit if you want,\" I'd been told. \"Especially if you like the visual of a woody when they go down on you. Not too much, though. You can't edge the poor sucker. That wouldn't be fair. Just a cheap thrill and then on to the real stuff.\"\n\nAnd of course, I knew it went both ways even without it being said. So, I accepted being felt up for a moment and then stepped back.\n\n\"Umm. Is there some&nbsp;... I don't know&nbsp;... some usual&nbsp;...\" I trailed off. Saying \"way to do this\" was stupid. Of course I knew how to do what I was going to do. But he understood what I meant.\n\n\"If you ever bring a guy back here, it'll be pretty much any way you want it that isn't being a total bitch. Same goes for me now.\" A flicker of humor burned through his lust. \"Don't worry, there's an unwritten rule: nothing in the hair.\"\n\nHe paused to see if I'd object. Objection didn't even occur to me. I was too busy with the unanticipated intrusion of an image: Owen on the floor, his head tipped back on that bed, while I knelt over him and chose my moment for that first touch of lips and tongue. Suddenly, I wasn't not-turned-on. I'd have him\u2014 \n\nHis next words jerked me out of my raunchy reverie.\n\n\"I want it with me standing, and not a lot of teasing around with kissing and licking, just enthusiastic. I want eye contact, and I'd like you to do all the work.\"\n\nHim standing over me, my eyes looking upward, dick-in-mouth while going for it\u2014that painted a mental picture that I comprehended. \n\nHe wants it to seem submissive. \n\nA split instant of rebellion disappeared when confronted with a memory of my own fantasy just moments before. The jolt of recognition brought acceptance.\n\nHe's not being an asshole. If that's his thing, I can do it.\n\nI nodded, and his face lost its searching look, the look that said, \"Have you got what it takes, newbie?\" I watched the hunger flood back and his expression turn remote as I transitioned temporarily from Charl-Friend to objectified Charl-Prize.\n\nHe stood there with an expectant look. It took me a second, but I got the hint. Face still hot but shakes disappearing now that the moment was here and it was one-on-one, I stepped close to him and knelt on the rug. \n\nHe'd lost his shirt, so I gently tugged the tongue of his belt free of the buckle. He kept his hands at his side, not helping me. I pushed the ends apart and popped the button on his jeans. I drew the zipper down and felt the hard length underneath my knuckles as I did. \n\nNot gonna be tiny.\n\nI worked the denim down far enough, reached for his boxers, then heard his negative \"Uh-uh.\"\n\nHe wants to be fully naked.\n\nI pulled the pants free as he laid a hand lightly on my head for balance and stepped out each leg in turn. I grasped the elastic of his boxers and drew them down, exposing his cock to\u2014\n\nOh!\n\nHannah hadn't been jerking my chain, not totally. It was average length, at least in my experience. I was glad of that, the jokes about \"gag reflex\" and \"anyway I want it\" had made me anxious. \n\nBut its girth was like an old-style Red Bull can now that he was turned on, thick and meaty&nbsp;... and getting more ready by the second.\n\n\"A little hand is okay, but mostly mouth.\"\n\nGot it. No jacking you off. One no-hands BJ coming up.\n\nI took a moment to run my eyes up and down his lean body. I didn't have to fake appreciation, but I made sure I showed it. I let my eyes linger on his cock for a bit longer, ran my tongue over my lips to wet them. Then I tipped forward and took him into my mouth. The last of my nerves fled as I focused on the task at hand. The same determination that I'd felt with Josh took hold. \n\nI don't want to be just okay. \n\nI reached around and grasped the cheeks of his ass with my hands. I made my mouth as soft and wet as I could and hollowed my cheeks from suction. Not a race to the finish, but not slow either&nbsp;... enthusiastic.\n\nI scooted my knees even closer, right in between his spread feet, so that craning my neck wasn't as hard. I made eye contact and held it. I could tell by the little movements of his eyes that he was alternating watching my eyes and watching my tits. I could feel the gentle tug of their weight as they swayed in time with my motion. I took encouragement from the excitement in his expression.\n\nHe was a solid rod now, and I felt the tiny strain of something larger than I'd experienced before. I consciously relaxed my jaw muscles and let the act consume my attention. His breathing got heavy and deep.\n\nChannel his fantasy, I told myself. Do not have him say you were just okay.\n\nI let him bump the back of my mouth gently, not enough to make me retch for real, and made a \"gnk\" to let him know. I saw the silent catch of breath.\n\nI pulled off fully. Before he could protest, I did something I'd never done before. I ducked and leaned in farther to take his balls, first one then the other, ever so gently into my mouth. With exquisite care not to hurt him, I let my tongue stroke over his scrotum, using his ass to pin him so that no sudden move caused disaster. Inches from my eyes, I could see the precum I'd tasted before leak from the tip and the twitch along his length with every stroke of my tongue.\n\nI bet this feels dangerous to a guy, trapped between teeth. Danger is exciting.\n\nThen I released him with a little \"hmm\" of pleasure. It was feigned, but I was turning necessity into pleasure&nbsp;... the pleasure of exciting someone, of being thought good&nbsp;... and I hadn't met a guy yet who didn't like vocal encouragement.\n\nIn that vein&nbsp;...\n\nI took him in halfway, then backed off. I swallowed saliva, letting him see me do it. \"It's larger than I'm used to,\" I murmured and reapplied myself.\n\nOh yes, I thought, feeling his sharp reaction, that worked.\n\nI made maximum contact: as deep as I could, lips a perfect, firm seal around his shaft, and my tongue velvet pressure against the underside as the head of his cock rasped across my palate.\n\nI felt the tiny tremors in his legs start.\n\nCan he keep his balance when he comes?\n\nI cupped his ass firmly with my palms and pushed my forearms into the sides of his thighs. I couldn't hold his weight, but I could steady shaky knees.\n\nThe first spurt took me almost by surprise. He closed his eyes at the last moment, and that gave me a half second of warning before his hips pushed forward and the warm, salty taste flooded my mouth. I didn't pause. I increased the pace, making each stroke long and full so that it tripped up over the ridgeline where the head started, where so many nerves were. He groaned loudly.\n\nThey'll hear that, I thought with vague alarm. I turned my mind away from that fear and concentrated. I let him spill into me, the cum running down my throat as the spurts came, quick swallows one after the other without breaking stride. When they seemed almost done, I pressed myself tightly and lost eye contact as my lips and nose buried in his pubic hair, unmoving as he gasped out the last moments of his orgasm.",
        "Slowly his hand, which had found the top of my head toward the end, relaxed. I looked up to meet a flushed, gratified face staring back down. I swallowed what tiny bit remained in my mouth&nbsp;... not ostentatiously like a porn star, but I didn't try to hide it. The avid look as he watched made it worthwhile. We remained there, unmoving, for what seemed an eternity but was probably only seconds.\n\n\"What now?\" I asked. \"I'm new to this.\"\n\nThat got me a chuckle, the first break in desire.\n\n\"Now I get dressed and then we go back out there. You endure some more teasing, and then it's over and done with.\"\n\nI nodded and looked away, embarrassed again, both in front of him and even more for going out there. \"Was it&nbsp;...?\" I asked, suddenly feeling immensely insecure.\n\n\"Good? Yeah, Chips. Definitely welcome to the Loft Game.\"\n\n\"Ready?\" he asked a few seconds later. At my nod, he opened the door and we walked out. The hoots started immediately, and my stage fright flooded back.\n\n\"Umm, you've got some&nbsp;... you know&nbsp;... right here,\" Hannah said, gesturing toward the corner of her mouth.\n\nHorrified, I scrubbed my mouth but felt nothing.\n\n\"Psych!\" she shrieked. I hated her, truly I did, for a second.\n\n\"On a scale of one to ten, Owen?\" My nerves turned to ice at Kevin's question.\n\nCarrie had warned me on our girls' night out. \"You have to be prepared for Kevin.\" I'd seen the faces of those in earshot at the table, Brey and Logan, tighten. \"He&nbsp;... umm&nbsp;... well, he walks the line.\"\n\n\"He crosses it,\" Brey had snapped.\n\nCarrie had shaken her head. \"He doesn't break the rule; he never comments about someone's body.\"\n\nThe rejoinder had been fierce. \"The spirit of that rule is that we might embarrass people until they want to crawl into a hole and die, but we never&nbsp;... you know&nbsp;... never try to make them feel bad about themselves! He's an asshole.\"\n\nCarrie's expression had said she didn't disagree with Brey. \"At least the other guys don't.\"\n\nBack then, I had wondered why nobody kicked him out, but I had been too new and too timid and too overwrought by what I had just gone through to ask. Now, I understood what Brey meant. I knew from the hot flash inside that I turned red again, almost unwilling to hear the answer. Not just unwilling, dreading. For some reason, Hannah making me check for cum on my face didn't bother me half as much as being judged.\n\nOwen's eyes tightened momentarily. \"Oh, I don't know. Let's say eight and a half.\" I hated him too, for a second, answering that question right in front of me.\n\n\"Woot!\"\n\nI mean, the girls are probably all a bunch of BJ-queens given the practice.\n\nI pushed that flash of meanness away. It was pure defensiveness on my part, and the girls' reactions were only playing the game the way it was meant to be played. The irritation at Owen too&nbsp;... his attitude said he hadn't welcomed the question.\n\nKevin's an asshole, yeah, but be a good loser, Charl. I forced a deep breath. And eight and half's pretty good. I allowed myself that minor swagger to regain my balance. \n\n\"What's your number, Charl?\" I half-noted that I wasn't \"new girl\" to Victoria this time.\n\n\"What?\"\n\n\"Your number? How many have you&nbsp;...?\" She mimed a circle of fingers against her mouth, the tongue pressing out against her cheek. \n\nOh my effing God. I almost ignored her, but I saw her eyes sharpen as she wondered if she'd found a vulnerable point. \n\nDon't back down.\n\n\"Seven. But I'm sure it'll get higher over the next three and a half years playing.\"\n\nThe sharp gaze softened a smidgen with humor, and she gave me a small nod, almost like acknowledgement. \"Yep.\"\n\nFully clothed for the first time in what felt like hours, I pulled on my coat.\n\n\"Go out for a beer?\" Emily asked.\n\n\"I so hate you right now.\"\n\n\"Oh, come on!\" She didn't look the slightest bit repentant. \"The whole point of this game is to have fun with that shit. Am I not allowed to just 'cause I'm your friend? Besides, you're totally going to do the same if I'm ever the one in the barrel.\"\n\n\"When, not if.\"\n\n\"True,\" she admitted with a shrug. \"Beer at the Grotto?\"\n\n\"It's pricey, and we're underage, and I hear they never believe fake IDs.\"\n\n\"Trust me. Come on. I'm sorry I teased you.\"\n\n\"Liar!\"\n\n\"True. But come anyway.\"\n\nI let myself be dragged off, enduring a few giggled goodbyes from girls and \"can't wait\" comments from guys. The latter got a middle finger, which everyone thought was hilarious. I was still rattled, but beer sounded good.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Nice to meet you too, Charl.\"\n\nI stared at the slice of hunkitude across the bar counter. \n\n\"Ryan's the bartender here Friday nights. I told you to trust me,\" Emily said. \"A couple of IPAs for me and my totally legal girlfriend.\" Emily had plopped us down at two stools right by the kitchen, and there was no one nearby. Ryan rolled his eyes and moved off.\n\n\"So?\" she said as soon as he was out of earshot.\n\n\"Cute. When you said you hooked up with him on Fridays, it didn't sink in that he was, like, a real adult.\"\n\n\"Thirty-six in June.\" Her eyes turned serious. \"I told you.\"\n\nShe'd said, \"I have a thing for older men,\" while we gave ourselves a pedicure in my bedroom. I deliberately didn't think about the preceding part, where she'd listed my father in the \"fuck\" category of \"Fuck, Marry, Kill.\"\n\nI put on my no-judgment hat. \"He's cute. Like, extremely. And those forearms!\" It was the right thing to say.\n\n\"Yeah!\" She giggled. \"Which is good because we don't have a damn thing in common other than liking beer and what happens after he clocks out. He's, like, all into rock-climbing, and the only way to get him not to bore me with an inch-by-inch of the latest cliff or describing some new equipment is if I take a piece of somebody's clothes off.\"\n\nRyan came back with our beers and then moved off in answer to someone wanting a refill. It was a Friday-night crowd, so I didn't have to fear a bartender with time on his hands and lots of rock-climbing stories.\n\n\"How'd you meet him?\"\n\n\"He was bartending at a party where I temped as a waitress for a few bucks. He kinda hit on me some. A week later, I left the game after a really good show\"\u2014that word had new meaning for me now\u2014\"and I&nbsp;... umm&nbsp;... well, I just made a booty call.\"\n\nShe looked over at me, uncertain.\n\n\"Hey, no judgment. Go for it, girl.\" Again, the right thing for me to say.\n\n\"Maybe he has a friend?\"\n\nI thought about that. I could use some of that right now. But&nbsp;... \"My type's a little different, you know? Maybe a little younger?\"\n\nThe instant I said it, our minds went to the same place. I saw her bite back the first words that came to her lips. She took a sip, and I didn't meet her eyes. I wasn't sure how things had percolated in the last few weeks. \n\n\"Hey,\" she said. \"No judgment here either. Really. I'm getting over it.\"\n\nEthan. Her younger brother. Barely legal. Long, lean, nerdy. The guy who'd been a virgin until a month ago and now wasn't, courtesy of Charlene Maguire.\n\nBut Ethan was a zillion miles away, and then he was off to a different college. And I wasn't sure what to do about Friday after Friday getting this worked up. Not that there was a chance in hell I was going to avoid it by quitting the game. Nothing that had happened tonight, no matter how uncomfortable, had made me consider that even for a second.\n\nI sighed and took a couple of deep swallows of the IPA.\n\n\"You're staying here, right?\" It wasn't a question, and I didn't wait for the answer. \"I'm going back to the dorm. What's the tab?\" I reached for my wallet.\n\n\"It's on him. Night, Chips. I'll be thinking about you. It sounded like someone had fun in the back room.\"\n\nOh my God. They did hear. I was glad the Grotto's bar was dark. \n\n\"Hate you,\" I muttered to her laughter and took my leave, flustered again.\n\nA long session with Buzz RightHere was almost enough.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI wasn't good at calculus. But that was calculus, not math in general. I googled Texas Hold 'em and sucked down pages of stuff on blinds, and check-raises, and limping-in. I memorized odds&nbsp;... not in detail, but enough to know when and how much to bet to drive someone out or lure them in, as needed. \n\nI adjusted my thinking, not only for Texas Hold 'em, but also for the fact that we played with twenty-five hundred chips instead of twenty five, five hundred per article of clothing instead of five. It allowed more freedom, and veterans didn't need the simplicity the green game strove for.\n\nI watched YouTube until names like Negreanu, Hellmuth, and Ivey were familiar, and until I actually understood what the commentators were saying. Even if I wouldn't have thought of something myself, I learned enough to understand when it was demonstrated.\n\nIn other words, I completely fucked off on studying for a week. I'd have to bust my ass later to make up for it, but there were no tests, no papers due, and fuck if I wanted to lose again. I would; it was inevitable. But I wanted it to be rare.\n\n<center>\u2022 \u2022 \u2022</center>\n\nFinally, a guy lost. I mean, two whole weeks of disappointed expectation, one of them with me in the hot seat. I'd dreamed about it for a semester. For a moment, I was so afraid Hannah just wanted a guy to make her feel good, an hors d'oeuvre to whet her appetite, and I would just screeeam.\n\n\"Give us a show, Owen,\" she said.\n\nMy breath went out in a long huff. Emily, sitting next to me, gave me a smirk, but I noticed she, too, had eyes glistening with excitement.\n\nWhat happens now? Does he just sit down and start flailing away?\n\nBut no. This group didn't work that way. Victoria moved to the switches, and a sole light over the couch came on&nbsp;... not to bright incandescence like when you walked to the back room, not to a spotlight. More like the warm, yellow light put on a solo singer in some smoky bar. The lights over the table and over the little room door snapped out.\n\nOwen rose slowly. I watched him. The tension was evident in his frame.\n\nHow many times has he done this? Once a semester? Maybe six or seven times ever? Wait, did he join his freshman year? I don't know. Maybe it's even less than that.\n\nThe dimmed light hid any color, but the fixed, inward-directed gaze, the nervous lick of his lips as he stood told me: not enough to be casual about this.\n\nAnd no fluffer, I thought with dark, heady amusement. This might be easier for the guys in some ways, but their progress is oh so much more obvious.\n\nHannah caught his wrist as he wove his way to the couch. She gave a little tug and he paused. An indecipherable look passed between them. He hesitated longer and then nodded. He sat and faced us.\n\nThe other guys stood. They grabbed their chairs and dragged them back away from the couch.\n\nGiving us a clear view. Of course. This isn't exciting for them. Or, well, I dunno. I was pretty sure from watching that they all liked girls. But maybe some like guys too?\n\nHannah also rose and dragged her chair to the front by mine. She gave me an excited smile as she plopped down. It struck me that none of the girls were heckling. I kept my mouth shut.\n\nThere was a moment of poised stillness.\n\nThat one remaining light snapped out, catching me by surprise. I must have started a little because I heard Hannah's soft whisper, \"Just wait.\" The darkness was broken only by the faintest of faint streetlights filtering through the curtains. I heard soft sounds I couldn't identify.\n\nA hand fumbled and closed over my forearm, making me start again. It tugged a little and I leaned toward Hannah. Her hand moved up to my shoulder and pulled me even closer until she could whisper in my ear.\n\n\"Let's make a bet. Pick up a poker chip off the table and drop it on the rug between our chairs.\"\n\nI held my breath, suddenly unable to speak.\n\n\"If the logo is face down, you come back to Owen's room with me after. If the logo is face up, the first time you win the main game, he's yours for the evening.\"\n\nWhat? \n\n\"Come with\u2014\" I fumbled to respond. \"Carter\u2014\" I cut that off too. No, I wasn't really so na\u00efve I thought she was acting as an agent for Owen's roommate. I was just in shock.\n\nThe chuckle was normal volume, though the voice was still the merest whisper. \"No, not Carter. I like to give Owen a little head start with what he has to do up there.\"\n\nBy dangling another woman.\n\nBut what if I said no? Hard on the heels came the answer. He wouldn't know until it's over, and just the thought I might say yes&nbsp;...\n\nYou were so wrong about a fluffer. I wanted to giggle at that last thought, yet the last thing I wanted to do was giggle.\n\nI was caught up in a maelstrom of hormone surges. It was compounded from what Owen was about to do and apprehension over that kind of bet. It built off raging horniness from weeks of tease with no firm relief. Most of all, it was sudden misgivings about what she was suggesting. \"I've never been with\u2014\" I cut myself off, trying to sort out the conflicting tugs and figure out what I really felt.\n\nAgain I heard the chuckle. \"That's okay. The bet is that he\u2014\" She pulled me in even tighter and her whisper went to the barest phantom of sound. \"He gets two different women tonight. Anything beyond that is only what we're both comfortable with, which won't be crazy. I promise.\"\n\nShe released the pressure, then pulled me back.\n\n\"It's about to start, so you don't have to answer. If there's a chip on the floor when the lights come up, I'll know.\"\n\nI sat there in the darkness. The thought of doing something with Hannah&nbsp;... what? Surprised me? Yes. \n\nIntimidated me? Oh my God, absofuckinglutely! \n\nGrossed me out? Umm, not sure. I simply had no context. I hadn't kissed a girl since sixth grade, and Julia and I had been pretty chaste back then.\n\nBut if I'm not into it, I can just say no. That's the deal.\n\nI felt around and found a chip, fumbled it worriedly between my fingers, started to do something with it\u2014I'm not sure which\u2014then drew my hand back to my lap as other implications hit me.\n\nDid she mean that we were both in bed with him at the same time? I mean, she did say anything beyond sex with him was&nbsp;... \n\nI didn't know&nbsp;... but of course I knew. I felt the frisson of stage fright over someone watching me having sex.\n\nHe'd be mine if I won a main game. I would sometime; I was certain of that. I thought about that lean body and pictured the thick rod of cock I'd handled just last week. \n\nThat wouldn't suck. Of course, the way you're feeling right now, anything male wouldn't suck. But no, Owen could definitely float your boat, especially on the buzz that would come from winning.\n\nWhat if I already made plans with some other guy? Carter maybe&nbsp;... because I am sooo planning to see if he will tonight. Do I renege in that case? I pondered. No, bets mean exactly what they say. And if Owen can have two women&nbsp;... \n\nI felt the moist warmth between my legs at the thought, one that my suburban upbringing couldn't see as anything but pure Bad Girl. I didn't know if I wanted it. I didn't know if I could deal with it. But the thought was fuel on a wicked fire.\n\nThere was a brief recollection of a dark night in Toms River, another cock\u2014different but equally delicious\u2014framed by another beautiful, lean body, and a game that included truths and lies about threesomes. I squirmed.\n\nI heard a soft murmur from the front of the room, and the light over the couch barely began to rekindle. I let the poker chip fall before my mind could think anymore.\n\nSteadily, long second by long drawn-out second the light over the couch brightened under Victoria's fingers. Owen was sprawled back into the corner, head back, one leg bent on the cushions, the other draped to the floor.\n\nAs the illumination grew enough, I could see the faint sheen along the length sliding between his fingers, traces of it coating his balls and putting a gleam along his upper thighs. I glanced to the end table, only for the merest fraction of a second, and saw the bottle of baby oil. Then my eyes snapped back to the man.\n\nHis eyes were closed. He didn't want to watch the people watching him. There were six pairs of breasts arrayed in front of him, more than one set of legs not so tightly crossed that they obscured everything, but he was wrapped in some private vision. I had a maybe-guess as to what it was.\n\nBlood flowed in under his touch. I had watched him go from half-aroused to fully erect just seven days ago, but it was different now. Different when you're eight feet away and not eight inches. And because who's in the driver's seat now, Owen? \n\nI didn't intend that question to be mean. I bore zero resentment for last week. It wasn't exactly me in charge, but that didn't matter. A man was exhibiting himself for my pleasure along with that of every other woman in the room.\n\nI chose right then and there to accept that part of me. It was a little corner of my psyche\u2014maybe you'd call it a dark corner if you were the judging kind, but not really. I'd never hurt anyone. \"You can quit at any time.\" I lived by that now.\n\nI settled back in my chair to watch a man bring a thick cock to life under his fingers. My eyes were adjusted now to the dimmer light, and I could see the color that was imperceptible before. I could see it get deeper as his blood pressure rose and hear his breathing become more staccato.\n\nI had no perception of time, just fascination as his balls swelled and precum leaked from the tip to join the baby oil. I refused to glance down at the floor next to my chair to see if that cock would be inside me later.\n\nMy eyes traced the mouth that gradually fell open. I watched the chest rise and fall as breathing changed. Legs that originally were tense from nerves, now were tense for another reason and began to twitch. Tiny beads of perspiration glistened on his forehead. It wasn't quite as quick as I'd expected. \n\nNerves making it harder? Or that's his normal pace? It doesn't matter. It makes it better. I watched the jaw tighten, and I shifted in my chair. Others did the same. \n\nThe sudden groan caused my eyes to leapt downward from his face. I watched avidly as a thick rope of white erupted to arc and splatter against his abdomen, noted the drops that flew farther and hit that lean chest. His and mine weren't the only heavy breathing; I could hear it echoed around the room. Another jet, his hand almost a blur of motion. I couldn't pull my eyes away from the sight nor keep my mind from turning to raunchy imaginings.\n\nWill that be inside your pussy in an hour? Or will it be some day down the road when you claim your winnings and lead him to bed to fuck you the way you want?\n\nOne of the two. I forced myself not to look at the floor by my side.\n\nWith a final gasp and final ooze of semen onto his fingers, he released himself. The meaty sound of his cock falling back against his prone body was a signal, and the room was plunged into darkness again.\n\nOh my God, I've never felt this turned on. No wonder every chair in this room is wood or covered in vinyl.\n\nWe sat there for long moments in darkness, the silence broken only by the sound of movement and then a door closing. The bathroom, I realized. The room's lights gradually brightened again under Victoria's control to show a room full of women with flushed faces and men with carefully neutral expressions.\n\nI turned to Hannah. Before she could lean over the arm of her chair to look, I grabbed her arm and whispered.\n\n\"You said I come home with the two of you if I lose.\" She nodded. \"Okay, but if I win, the bet is not Owen&nbsp;... it's you and Owen&nbsp;... just him or you both as I choose.\"",
        "Her eyes widened in surprise. I shook my head. \"I never have, and I don't know if I want to. Maybe not.\" \n\nI saw the hint of uncertainty and indecision. \n\nSo, maybe she wasn't planning a real threesome with lesbian stuff, I surmised. Maybe it was just that Owen got to fuck two different women, each watching while he did the other. I didn't yield though, caught up in the moment. \n\n\"Only what we're both comfortable with, and you can quit at any time.\" The first time I'd said it in the Loft Game. I had a mental giggle. Hah, a real veteran!\n\nThe group's mantra brought a glint of humor and decision even though the apprehension didn't disappear. She nodded. We both peered down together.\n\nI stood and walked across the room, leaned down, and whispered into an ear.\n\n\"Carter, will you come back to my room with me?\"\n\nHe met my gaze. A little spark broke through his disinterest, whether at breasts hanging inches from his lips or what he saw on my face. Maybe both. Maybe he pictured who would be the beneficiary of all that lust oozing from my pores. \"Dorm walls are pretty thin. Come by me instead.\"\n\nThat lust and wickedness and my newly accepted realizations were driving me, and I gave into it all. I didn't even try to be quiet when Carter made me come, and again. Let Owen and Hannah anticipate somewhen. \n\n<center>\u2022 \u2022 \u2022</center>\n\n\"What the hell?\" I said laughing.\n\n\"My good luck charm,\" Anthony replied. \"I've been stopped three times for speeding and not a single ticket.\" He patted the figure on his dashboard, setting it bouncing.\n\nI leaned over Julia's shoulder to peer at the hula girl. \"She topless,\" I said, my voice neutral.\n\n\"My roomie did that. He said it's the way they danced originally, and we should be historically accurate.\" Everything about Anthony's tone said he knew that was a bullshit reason but found it funny. \"We couldn't find one on the internet that way, so he painted over the coconut bra.\"\n\nWe pulled up outside a somewhat-ramshackle place that screamed \"student shore house\" to my eyes.\n\n\"My palatial abode,\" Anthony said a few minutes later. \"Come up to the second floor.\" He snagged Julia's quarter-ton suitcase while I hiked my backpack onto my shoulders, and we followed him up. The stairs split. He gestured left. \"Two of the rooms are that way.\" He led us right.\n\n\"My room,\" he said as we passed the first open doorway. \"Bathroom.\" It didn't look too gross. \"Aaand\"\u2014he pushed open a door across from his bedroom\u2014\"the guest room.\"\n\n\"Guest room\" was a misnomer. It was actually the bedroom of the fourth housemate. He hadn't come back from spring break. \"Mono,\" Anthony had told us. \"Dunno how long he's out for. But you don't have to use the couches.\"\n\nI'd take a double bed, even shared with Julia, over sleeping in the living room of a house full of guys any day, and Julia and I had crashed together tons of times over the years.\n\nEmbry-Riddle's break had been the previous week, but Anthony had been cool with Julia and I coming down for ours. Daytona was a month-long, twenty-mile beach party, and the two of us had thrown shorts, tees, bathing suits, and fake IDs into bags and caught a plane.\n\nHe held out a key ring to Julia. \"If you wanna go check out the scene. Or, umm, if you're gonna drink, there's a free shuttle that runs the beach. Just look for a red double-decker. I gotta knock out something for Monday class that I totally blew off over break, but once it's done, I'll find some time, okay?\"\n\nShe took the keys, leaned in, and gave him a kiss that landed somewhere on the corner of cheek and lips. \"Thanks for letting us stay.\" I smiled at him.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Sooo,\" I said.\n\nI reached over and gave the hula girl a little poke to set her dancing. She didn't seem able to keep time with the radio for shit.\n\n\"Anything up again with you and Anthony?\"\n\n\"What? No!\"\n\nIt was a touch too forceful. \"It's just, well, you weren't the kiss-on-the-cheek type, or is Syracuse turning you all European?\" I waited for a response, but she didn't say anything. \"Are we not telling each other stuff now?\"\n\nI think she heard the real hurt in my voice. She'd been my best friend since forever.\n\nHer head whipped around. \"Oh, Chips! Don't say that.\" She looked back at the road, Route 1 not being a place to let your attention go, and was silent for a block. \n\n\"Okay, I thought about it. All right? I mean, we didn't end badly. We just didn't want to be, like, a couple. He hit on me a little at Christmas\u2014I didn't do anything!\" She got that out before I could tease. \"But I didn't go out too much at Syracuse, and I kinda thought it's spring break and you're supposed to do crazy shit, and&nbsp;... fuck! Do I sound desperate?\" There was definitely color in her face, and not from the sun.\n\nI grinned at her, hurt feelings flying out the window. \"We always talked out our asses about how wild we'd be when we did this. Well, mostly you talked.\" \n\nShe reached over and punched me in the shoulder. \"It doesn't have to be out our asses.\" She grinned, then sobered. \"Would it be weird for you if I did?\" she asked. \"I mean, I'm not certain. It was just a thou\u2014\"\n\n\"Go for it, babe.\"\n\nShe smiled. \"I haven't made up my mind, but thanks.\" She put on the turn signal. \"Let's go back and drop off the car, then shuttle for something to eat and Mar-gar-rrritas.\" She sang the last word.\n\nWe found a tiki bar that looked cute with a bartender who did also. We sat enjoying the frozen drinks while trying to figure out whether we wanted burgers or fish tacos.\n\n\"Speaking of not telling each other stuff,\" she said, \"don't think I've forgotten 'sandbagged in strip poker.'\"\n\nShe was talking about Em's tease at Christmas. She'd probably have ambushed me about it in Vermont\u2014our norm was \"You'll never guess what happened!\" or \"Give!\"\u2014but our heart-to-hearts had gotten short-circuited that weekend.\n\nA decade ago, she'd whispered that she'd kissed Joey DiGiuseppe out on the playground\u2014a fourth-grade peck that lasted maybe a millisecond, but a big deal back then\u2014and we'd been closer-than-sisters ever since. It hadn't changed a lot when boys became more than just one kiss on a playground. \n\nNow, I felt the jaws of the trap, unintentional though it was, close. \n\nA promise versus my best friend? What the fuck do I do?\n\n\"I, umm, okay. Yeah, there was some craziness.\"\n\nHer eyes lit, and she leaned in more closely.\n\n\"Look, before I say anything, there are a couple of things I promised never to talk about, and a promise is a promise, you know that.\" Before she could react, I hurried on. \"But if I leave out some names and some details&nbsp;...\" Quite a few details!\n\n\"K.\" It was a hair reluctant, and I knew she wanted to demand everything, but she was like me, and our word meant something.\n\n\"So, umm, yeah, I played in a strip poker game.\"\n\n\"I played in a game of strip pong at the Crow house.\"\n\n\"I'm totally surprised.\" My voice dripped with complete and utter not-surprise. \"Did you get naked?\"\n\n\"Boobs out. How 'bout you?\"\n\n\"Well, one game I ended up starkers.\"\n\n\"One game? You played more than once?\"\n\n\"A couple times.\" That felt a little like lying by misdirection, but telling her there was a weekly club was over the line. \"But\u2014\"\n\n\"Did you get laid after?\" she whispered so it didn't get broadcast around the bar. Her eyes were dancing. This was my friend, Jules, in a nutshell. \n\n\"Well&nbsp;...\" As she started to demand I spit it out, I cut in, \"Who's telling this, you or me?\" She stuck out her tongue. \"I mean, if you want just a yes&ndash;no answer instead of juicy, I can\u2014\"\n\n\"Juicy!\" We shared a grin. \n\n\"One night someone suggested a strip poker game, and I was kinda 'Why not?' That time, I ended up in my underwear.\"\n\n\"Which ones? Come on, deets!\"\n\n\"The purple set.\"\n\n\"Excellent! Go on.\"\n\n\"I had a blast watching a guy bare all and take a hike outside\u2014\"\n\n\"Oooh! You had to streak?\"\n\n\"Mm-hmm.\" Close enough to the truth. \"So, when another game got suggested later, I was down. That time, I wasn't so lucky. I ended up topless. I had four horny guys staring while all the other girls teased.\"\n\n\"Get to the juicy part!\"\n\n\"If you keep interrupting, I'll skip the juicy part which is next.\" I dodged the maraschino flicked at me. \"That's all that time, but&nbsp;... sometime later&nbsp;...\"\n\n\"You played again and lost.\" \n\nI didn't really mind the interruptions. I was enjoying how much vicarious fun she was having. \"Yep.\"\n\n\"And you had to streak outside.\"\n\n\"Yep.\"\n\n\"Did anyone see you?\"\n\n\"Yep.\"\n\n\"And then you got laid.\"\n\n\"Nope.\" I waited for the disappointment to begin. \"Then I bet a guy on a coin flip&nbsp;...\" I drew out the pause. \"... a blowjob against him going down.\"\n\n\"Fuck, Chips!\" She didn't keep her voice down. In fact, it was a shriek. She glanced around in embarrassment and dropped her voice again. \"And&nbsp;...?\"\n\n\"He lost.\"\n\n\"Oh my God! Then what?\"\n\n\"I collected and then made him leave.\"\n\n\"You bitch!\" But she was laughing as she said it. \n\nShe leaned back as the harried server came for our order. The bar was filling up quickly with spring breakers, mostly stupid guys, and the noise level was beginning to climb through the roof. \"Order now, ladies, or I have no idea when I'll be able to get back to you.\" We ordered fish tacos and another pair of drinks. \n\n\"I can't believe how much you've changed,\" Julia said.\n\n\"No. I think I'm just a little more confident now. I never balked at any of that shit you wanted to do.\"\n\nShe thought about that. \"True. That's some wicked stuff, Chips.\"\n\n\"Who says I'm done?\" I laughed as her eyes went wide. \"I bet the same guy two more times.\" I ignored the soft exclamation. \"I won the second time, and yes, I sent him on his merry little way after like the bitch I am.\" Shared grins, then a shrug. \"I lost the third time.\"\n\n\"You hate that.\" \n\n\"No, I don't like it, but I don't hate it. It's not the end of the world, and betting was exciting as fuck.\"\n\nSomething occurred to me as she asked, \"Will you again?\"\n\nI shook my head. \"He's history.\" I debated. Honesty won. \n\n\"But speaking of BJs and&nbsp;... umm&nbsp;... what we were talking about earlier, you and Anthony. I kinda owe him one. But if that's a problem with you then let's talk.\" That last came out in a hurried rush. It had never occurred to me that Julia would have plans with him.\n\n\"What the\u2014\" Her face cleared. \"In the camper, the Seven Minutes in Heaven.\" \n\nI nodded, uncertain of my ground.\n\n\"Why?\"\n\n\"He'd had too much to drink to&nbsp;... you know&nbsp;... but he, umm, helped me out.\"\n\n\"And so, you promised him?\"\n\nI nodded again. \"I don't think he remembers, but it was a promise.\"\n\n\"So fucking keep your promise.\" The grin was wicked, friendly but wicked. \"Babe, he's not Mr. Right. I just thought he might be Mr. Right Now for my first spring break.\"\n\n\"He still can be. Oh!\" I'm sure I blushed. \"I don't mean us at the same time. I could\u2014 We could\u2014\"\n\nShe didn't burst into laughter. \"We can figure it out. But about you\"\u2014she veered the conversation back\u2014\"maybe we gotta find you a Mr. Right Now since you didn't get laid.\"\n\nThe DJ had bumped the volume, and the noise level was making talking difficult. Shouting about the two guys I'd slept with in the last four months was just not gonna happen.\n\nSome other time. Well, at least about Carter. Her brother's Ethan's age. Would she judge? Probably not. But Carter's juicy enough.\n\nI'd spent the night with him three times: that first time before Christmas, again after Owen lost, and then when I just couldn't bear it anymore after Ben lost. I had managed to make do by myself over the weeks after Owen's show, but the pressure came to head that night.\n\nMy studying the game had paid off. I didn't win, so I got naked every week, but I didn't lose either. I watched the week Brey rose and took a deep breath at a crook of Luis's finger, and then as Logan flamed bright red again, followed by Zach taking a turn under the soft spotlight. That had been horny-inducing, and I'd taken a long time to get to sleep because images of that boyish face puckered up as he came refused to fade, but I persevered in going home alone. I'd only been half-manipulating Josh when I said, \"routine would be boyfriend&ndash;girlfriend,\" and that wasn't where I was right now.\n\nCarrie had \"cheated\" me the next week when Carter lost. \"In the back, big boy,\" she'd told him to good-natured complaints from every girl. That had been another night of frustration, wondering how she had him to do it. I might have asked for a demo, but she followed him out the door after.\n\nThe next week it boiled over. Nick got down to underwear in the green game, and he still wasn't over his self-consciousness. And Hannah, in a rare green-game topless at that point, had been on fire with the teasing and gotten a definite semi out of her red-faced victim. \n\nThen she'd had some simple bad luck, and I'd heard her sigh, \"The hat doesn't always work.\" She stood, stripped her panties, and made her way slowly around the guys, drawing each of them in for a languorous kiss. She hadn't lied to Josh all those months ago: she did grind a little and press her breasts, and more than one pair of boxers tented just a mite. I went into the main game already buzzing.\n\nAnd Ben lost. Someone I'd seen naked, but now saw erect and oiled. I followed each slow stroke of his hand, inch by inch. By the soft groan and that first spurt arcing up to land high on his chest, buzz had turned to heat and wet. It was all I could do not to touch myself, but I was terrified of leaving a spot. \n\nProbably not the first one to do it if you did, Charl. \n\nBut that was too embarrassing. Instead, I reached back behind me to where I knew Carter was sitting. I grabbed a knee, then slid my hand up a naked thigh what small distance I could reach. \"Hmm?\" I said quietly.\n\n\"Yeah.\"\n\nI was practically drooling by the time I arrived at his apartment and didn't even strip. I shoved two hundred twenty pounds of guy flat onto his back, pulled my panties to the side, and climbed onto his face. After, oblivious of noise and whether anyone could see in, I'd let him lift me effortlessly so my outstretched hands thudded against the windowsill at the head of the bed and my knees spread to accommodate him behind me. I barely registered my skirt flying up and my sodden panties down before he'd shoved himself inside me. I'd squirmed and bucked and cried out in the second of several orgasms that night before he groaned and shot deep inside me.\n\nNow, not wanting to share that with the drunkards at the next table, I shouted at Julia, \"But I did.\" I held up two fingers. \n\n\"Woohoo!\" Then her expression sobered a little. She held up one finger. Then two. Then shook her head and bent a knuckle to show one and a half.\n\n\"What?\"\n\n\"Later.\"\n\nA half an hour later, we pushed back our plates and drained the last of our third drinks. She pushed a couple guys aside and scooted her chair around until it was on my side of the table. \"I like the wild side of you.\"\n\n\"You would.\"\n\nShe giggled. \"And I dare you to enter.\" At my confusion, she pointed at the banner.\n\nWET T-SHIRT CONTEST 7:30\n\n\"Fuck no!\"\n\n\"It's a dare.\"\n\n\"No!\" \n\nShe arched an eyebrow. Chicken? it screamed.\n\n\"Do it!\" That from the guy standing right next to our table who was obviously checking out the two chicks because it was too noisy for him to hear otherwise. I didn't need the peanut-gallery loser sharing his opinion and ignored him.\n\n\"Do it,\" Julia echoed. \n\n\"LADIES AND GENTLEMEN&nbsp;...\" The DJ's voice boomed over the suddenly lower music. \"It's time.\" Cheers erupted, mostly male voices, and I saw a couple of coeds being pushed toward the front by their friends.\n\n\"Get up there, Chips.\"\n\n\"Yeah, go for it!\" Mr. Loser chimed in, still ignored by both of us.\n\n\"Why, Jules?\"\n\n\"Because I wanna see the wild side.\" As I hesitated more, \"I'm daring you.\" The look was pure challenge. \"Have you ever regretted one of my dares? I mean, the bungee jump was fuckin' epic. Just think, if you do, then you can say you did it.\" That made a certain Jules-type of sense.\n\n\"You go up too.\" I waved toward the front.\n\n\"Nope. This is me daring you.\"\n\nI squirmed. \"I'm wearing a black T-shirt.\"\n\n\"Hey, you!\" Julia poked the guy who'd offered his unsolicited opinion. \"Give her your T-shirt.\"\n\n\"Whaa? It's mine.\"\n\n\"I know that, idiot. Hers is black. It'll stay black.\"\n\nTwo brain cells had obviously survived the beer binge and his eyes widened. He stripped the white shirt with garnet \"FSU\" over his head. \n\nReluctantly, I pulled mine off, glad I had a bikini underneath instead of a bra, and pulled his on. Julia held out her hand. \"Top.\"\n\nI slapped away the hand from behind that wanted to \"help\" with the tie at the neck. I undid the two bows and pulled the top out from underneath. I felt my breasts drop and the nipples immediately start to harden. Standing, I stripped off the jean shorts to reveal the bikini bottoms.\n\n\"ONE MORE HERE!\" Julia screamed at the DJ, and I felt myself pushed toward the low stage with the large kiddie pool on it.\n\nThe volume skyrocketed, and the bass turned up to eleven. The other girls jumped into motion. Fuck it! If you're gonna be up here&nbsp;... I started dancing, hips punching out the beat:\n\nAnd I know she'll be the death of me<br>At least we'll both be numb<br>And she'll always get the best of me\n\nI closed my eyes and let the cheers and catcalls flow, knowing I was bouncing all over the place.\n\nThe ice-cold pitcher of water hit my face and upper chest without warning. I gasped and brushed drops from my eyes. I looked down. A dark circle was plainly visible through the giant wet spot on my right front. The noise intensified and more pitchers were flung toward us, targeting us one at a time.\n\nWe fended off against each other in the cramped space, forearms pressing back against shoulders or boobs at random. Again I felt water, a stream this time and only slightly warmer than the icy pitchers, hit me. The T-shirt got heavy, and another glance downward showed me the staff member wielding the hose had great aim: my entire front was sodden, and the now-transparent cotton molded itself over every curve of my breasts and outlined the apex of my legs. \n\n\"SHAKE IT, CHIPS!\" I heard in a girl-pitched shriek from the floor.\n\nI shook it. My hand encountered naked flesh as a girl who had cropped her shirt enough to show underboob gyrated up against me. I doubted I would win this one in my oversized tee. \n\nI didn't. The song ended and the DJ went to each girl in turn, pulling her hand aloft to listen to the cheers from the audience. In a couple of cases, the law got bent just short of breaking\u2014we'd been told \"town ordinance, NO flashing\" and \"seriously, the cops hang outside and check\"\u2014but he was an old hand at this and knew just how high he could lift an arm before something fell out. I got my share of cheering, my breasts are pretty good, but the victory went to someone with a good pair, a ripped crop-top showing both under- and sideboob, and a butt she'd twerked the hell out of.\n\nI stepped back offstage to Julia's screaming \"Oh my God\" and giant hug. It made me aware of the fact that I was soaking wet. \"Umm.\" I gestured for my shirt and bikini top. Five seconds later, I realized how almost impossible it was to put on a bikini under a dripping-wet T-shirt that came to my thighs and clung like a second skin.\n\n\"Fuck it!\" No cop was going to spot me now that I was down off the stage surrounded by people and the goddamn thing was transparent anyway. I whipped the sodden garment off, well aware that the struggle to pull it up over my head put the girls on total display. The boys around me went nuts. I snatched up my dry tee, turned my shoulder to knock away a hand that came out of the crowd with a sharp \"NO!\" and pulled it over my head. I pulled on my jean shorts and stuffed my bikini top into a pocket for later donning. Loser boy reached for his shirt.",
        "\"Uh-uh,\" I said, grabbing it before he could. \"I'm keeping this as a souvenir. You got to see my tits; I get your shirt. Here.\" I gave him the ticket that had been handed to me by a staff member. \"You can have my free drink. Go Seminoles!\" \n\nOf course, that set him and his buddies off, and to the raucous, inebriated chant that erupted, I turned to Julia. \"Let's go.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nShe was still chuckling an hour later as we sat on Anthony's balcony. We'd sent him out for Chinese and were keeping our light buzz going.\n\n\"I want to make sure of the sitch first,\" she answered my question about her sleeping plans.\n\nI nodded understanding.\n\n\"Besides, maybe there's some other little business to take care of first.\" The arch expression and the even archer tone of voice told me exactly what she was referring to.\n\n\"Fuck you. 'Hi, Anthony. Thanks for letting us stay. Can I give you something to pay you back? Like on my knees?' That's too ho for me.\"\n\nShe burst out laughing. \"I doubt he'd object.\"\n\nGrudgingly, I admitted, \"Prolly not.\" I took another sip of my White Claw. \"I'm still feeling a little freaky that, like, I came down here planning to pay off an IOU, and I didn't know you were thinking&nbsp;...\" I left it hanging.\n\n\"Yeah. I didn't know you made that promise. Look, it's not gonna bother me, and he was just an idea I had. I mean, if you're bothered, I'll forget it if\u2014\"\n\n\"No! It's just&nbsp;... I don't know&nbsp;... you're my best friend and everything, and this feels a little sharing a guy with you, and that's, like, 'eww.'\"\n\nI expected her to laugh and repeat \"eww,\" but she didn't. I remembered she hadn't the last time something in the vicinity of the topic got mentioned. What's going on? I was suddenly unsure of what was up. The silence lasted long enough to be awkward. She looked over at me, looked away. Her cheeks were suddenly hot with color. I didn't dare say a word.\n\n\"It's not what you're thinking.\" \n\nSince I wasn't sure what to think, that didn't help.\n\n\"I\u2014 Well, remember when I took the shot instead of answering the question in the game?\"\n\nI did remember. The question had been, What is the kinkiest thing you've done this last semester? \"Yeah. You got upset when I brought it up again in Vermont.\"\n\nI'd backed off immediately when I saw her reaction. My mind had spun all kinds of theories about what she wouldn't tell me, ranging from \"banged my professor\" to \"starred in Girls Gone Wild.\" The trouble was none of the theories sounded like Julia. But we were friends, and we were up there to try snowboarding, not have drama, so I'd backed off.\n\n\"I'm sorry,\" she said. \"I, umm&nbsp;...\" The color got deeper, then a rush of words without breaths erupted. \"I had a threesome, a guy and another woman, and you and I were sharing a bed at the hotel, and I didn't want you to get weirded out that maybe I would, whatever, and it had just happened, and I didn't know exactly how I was feeling about it, and I didn't know how to even talk about it.\"\n\nThat explains the finger dance at the tiki bar.\n\nDespite my astonishment, I grinned. \"Well, I told my stuff, so I want deets in return.\"\n\nShe rallied a little at my friendly expression. Her response was reluctant, but fair's fair and she didn't cop out.\n\n\"I was out with a group. We were having a good time. But this one guy who was kinda eyeing me, I thought he was a little skeevy. I was trying to ditch him on the walk back to the dorms, so I started walking with this girl who lives down the hall. That way I didn't have to pay attention to him, ya know?\"\n\nI understood about trying to shed a guy who couldn't take a hint.\n\n\"So, she and her boyfriend asked me if I wanted to come in when we got back to the dorm. We had a Mike's and were just talking and joking around. And then he brought out a joint and asked me if I got high. I don't very much but, well, it seemed fun right then and&nbsp;... and things went on from there.\"\n\n\"So you were drunk or high? That's not\u2014\"\n\n\"No!\" Her denial was emphatic. \"It wasn't like that. I mean, yes, when it happened, I was feeling the weed, but\u2014\" She was silent for a long moment.\n\n\"The talk&nbsp;... the joking, you know&nbsp;... had been kind of teasing right from the beginning, and then things got a little suggestive. And I was sober at that point. We weren't drinking when we were out with the others, and a couple swallows of hard lemonade don't&nbsp;... I wasn't impaired, Chips.\" She glanced over at me. \n\n\"I had an inkling from the vibe. I could have left, but I didn't. I thought about it and decided I didn't want to. It&nbsp;... I don't know&nbsp;... all I felt was, like, a mix of nerves and excitement.\n\n\"And then, long before he brought out the weed, she&nbsp;... we were sitting on her bed, and she put her hand on my leg and asked me if I needed to get back to my room or could hang a while. I was wearing a skirt; it was on my bare leg. I, umm, I'm not stupid.\"\n\n\"No, you're not.\"\n\nEverything about her screamed uncertainty about my reaction to telling me she'd had sex with two people at the same time, not something that had occurred in our lives to date, and that she'd had sex with a girl, also not something that had occurred in our lives to date.\n\n\"So, deets, babe!\" It was the right thing to say, keeping it light and raunchy. It didn't lessen her blush, but the uncertain smile warmed.\n\n\"You know you're not getting blow by blow.\" \n\nI did. We might talk about our sex lives in general, or in less-general-but-anonymous terms, but we didn't spill super-intimate details about others. Not too much, anyway. \n\n\"Okay, so you blow-by-blow-ed him,\" I joked. That earned me the first real smile.\n\n\"I may have done something of the kind.\"\n\n\"While she&nbsp;...?\"\n\n\"Now who's not letting the other person tell the story?\"\n\nI mimed zipping my mouth.\n\n\"It started with me in the middle. She was&nbsp;... what you can imagine.\" \n\nI so am right now, Jules. \n\n\"It was very nice. Kinda not too different from a guy who knows what he's doing except, I dunno, maybe it was just that I knew it wasn't a guy.\" She got a faraway look in her eye. \"I don't know if him being part of it made it easier or harder. It was super distracting to have to pay attention to what I was doing with him, but maybe that was good 'cause it kept me from feeling too weird, ya know?\"\n\nI nodded.\n\n\"Then, after she got me off\"\u2014she said that totally matter-of-factly but even in the dim light I could see her flush deepen\u2014\"he got in the middle.\"\n\n\"Which end were you at?\"\n\n\"He wanted me to bang him. He was on his back, and she was kneeling over him, facing me, and kissing me and touching. We did that for a while and that was good\"&nbsp;\u2014I read that as \"I came again\"\u2014\"and then she told him it was her turn. I thought that meant she wanted to switch with me and have a little D but&nbsp;...\"\n\nI grinned. \"She wanted you.\"\n\nShe nodded. \"So, I did.\" Now she met my eyes directly. \"Are you freaked out at me?\"\n\n\"Not even a little bit. Keep going. This is exciting.\" Picturing it was.\n\n\"He kinda moved around behind me like he was going to do doggie, but she stopped him. 'You can't come in her,' she said, like she'd already told him that and was reminding him 'cause she didn't know how much longer he could last. \n\n\"I mean, he was wearing a condom, but it was like she was a little jealous watching him with me. I almost got this sense that she liked both boys and girls, and his being there was the price she paid to have that and a boyfriend too, but she wasn't one hundred percent cool with him showing too much interest in another woman.\"\n\n\"I guess I sorta get that. Well, it seems a bit unfair. I don't know. Whatever.\"\n\n\"Yeah. So he kinda watched the two of us. And when we were done, she pulled me up beside her, and they fucked while I kinda made out with her and stroked her breasts and stuff.\"\n\nHoly shit! The thought ripped through my mind when she said, \"they fucked.\"\n\n\"And then we nodded off 'cause the weed and everything, and I woke up in the middle of the night and went back to my room without waking them. And then Christmas break.\"\n\n\"When you go back, will you&nbsp;...?\"\n\nShe shook her head. \"I don't think so. I mean, it was exciting, and I don't regret it, but I don't think it's me, ya know? And I don't think she'd be cool with me and him repeating.\"\n\nWe sat in silence, me digesting the story and fucking loving the hot images my imagination painted. I wasn't sure what she was thinking until she spoke.\n\n\"I did it, and I can't lie and say I didn't enjoy it. And I've been afraid to tell you because I didn't know what you'd think and\u2014\" She rushed out the ending. \"And I didn't want you to be worried about me, especially sharing a room, and things to get weird. I swear it's not on my mind and that you\u2014\"\n\nI burst into laughter. \"Oh fuck, Jules. If you ever get that idea about me in your head, you can tell me. And then\u2014\" I held up my hand to stop her startled interruption. \"Then, I'll say no. Even if I wanted to do it with a girl, I wouldn't risk messing up our friendship.\" \n\nI continued to ignore her interruptions that that was exactly what she was afraid of. \n\n\"And I won't hold it against you because there's nothing wrong with asking, just if you don't respect the answer. And Jules, babe&nbsp;... you're never the kind of person who would do that.\" \n\nI leaned in and kissed her on the lips, shocking her rigid. \"I'm never gonna have sex with you. Ever. But you'll always be my best friend until I get married, and then you'll be my best girl-friend.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nWe'd spent the morning the way we'd spent the one before: sleeping until eleven because we didn't get to bed until two or three. Then we'd wandered to the breakfast place a block down for a breakfast sandwich that was nowhere near as good as the Taylor ham, egg, and cheese that we Jerseyians craved. Then the beaches for prime tanning hours. I had to be careful; the Maguire side of my ancestry gave me my skin. Sometimes I hated Jules and her Condurso complexion. We'd stayed until I felt I was in danger, and then gone back to the house where Julia stretched out in the sun on the balcony, while I tucked myself in the shade. \n\nWith drinks, of course, because even though neither of us were party animals, somehow spring break was passing in a pleasant glow of just-buzzed-enough. Sunday, Anthony had been slaving away on his project and today he was in class until five. It was good to have some catch-up time, just us girls. I'd missed her.\n\n\"Think he'll notice?\" she asked.\n\n\"Yup.\" \n\nAs we'd changed out of sandy suits into fresher ones, I'd said, \"Why don't you put your stuff in his room so he sees it when he gets back?\" I grinned.\n\n\"Oh my God. You think I should?\"\n\n\"Well, it'll certainly give him a hint of your intentions. I mean, he's not seeing anyone, and he did check you out in the bikini, and he definitely liked what he saw.\"\n\n\"He checked out both of us.\"\n\n\"Maybe. But you're the one who's planning to have her wicked way with him.\"\n\nIt had taken me twenty-four hours to establish, without giving the game away, that Anthony didn't have a girlfriend, wasn't currently fuckbuddies with anyone, and hadn't gotten laid during his break. We'd teased him good-naturedly and he'd laughed. That was Anthony. But Sunday night had passed, and Julia hadn't made a move.\n\nSo, I grabbed her suitcase, shoved the underwear and tees hanging out of it more inside so it would zip, and toted it to the foot of his bed. After a second, she snatched up her sleeping shorts and oversized tee and dropped them near the head of the bed. Not that she'd be using those if all went well.\n\nWe heard him come in. \"Let me dump my shit and I'll join you,\" he called. We giggled. We tried to stifle them as we heard returning footsteps. I tried not to be obvious I was watching when his eyes met Julia's in a silent question. \n\nHers answered with a silent, Yeah, that's what it means. You good with it?\n\n\"You know,\" I said, \"it's not like I wasn't the one who carried her suitcase or can't see you two making eyes at each other.\" \n\nBoth of them colored. He flopped in a chair. \"Umm, so how's spring break?\"\n\n\"Good.\"&nbsp;\u2014\"Buzzed.\"\u2014\"Good and buzzed.\"&nbsp;\u2014 \"Crazy!\"\n\n\"Crazy?\"\n\nJulia and I looked at each other and burst out laughing. I started shaking my head: No. No! NO! but she didn't listen.\n\n\"Chips was in a wet T-shirt contest.\"\n\n\"Holy fuck! And you didn't invite me?\"\n\n\"It was Saturday and you had a project. She totally whipped off her shirt at the end.\" Julia was practically cackling.\n\n\"I can't believe I missed that.\"\n\n\"She dared me!\" I protested.\n\n\"Maybe she'll enter another one,\" Julia said. \n\nI gave her the finger, but that just made both of them laugh harder.\n\nThere was a charge in the atmosphere now. Anthony knew he wasn't sleeping alone this week. Julia was looking forward to a week with someone whom she'd always confided, \"totally knows what to do.\" Me? I was plotting. The sun and the drinks and the good times had made me lazy, but I hadn't forgotten I owed my good friend a little payback.\n\n\"Another?\" Anthony asked, waving a can. \n\n\"Let's not get too buzzed.\" Even I felt the little frisson at the why of Julia's statement.\n\n\"Are we going out?\"\n\n\"Dinner, but maybe we chill tonight since we were out late the last two,\" I answered. \"I saw a sign that there's a cover band down at the corner. Maybe I'll check that out for a little if you two are tired.\" I may have been plotting revenge, but I knew how to be a good wingperson to a friend. \n\nI saw their eyes flick to each other and smiled inside. The late-afternoon sun was pushing farther back onto the balcony. I pushed a strap aside to check my color. Not too bad.\n\n\"Be careful, babe,\" Julia said. She made the same move, contemplating the slight difference already apparent with satisfaction. She wasn't flaunting anything; we'd long ago gotten past she tanned without effort, while I could wear anything, especially greens that were her favorite color but made her look sick.\n\nMy plans crystallized.\n\n\"I dare you,\" I said.\n\nTwo faces snapped toward me.\n\n\"I dare you to lose your tan lines this vacation.\"\n\nAnthony didn't breathe a word, though he was certainly breathing. Julia's eyes were alarmed. My eyebrows were up in exactly the same question hers had been on Saturday.\n\nChicken?\n\nIt was a silent battle, and I didn't blink.\n\n\"Are we doing this this week?\" she asked. I knew what she meant by \"this.\"\n\n\"You started it.\"\n\n\"Half the lines. That's fair.\"\n\nI'd only gotten topless in the contest. \"That seems fair here.\"\n\nHer eyes went toward the sliding door. One of Anthony's roommates was home, though not in the living room at the moment. She took a breath. Then she craned up and looked at the neighboring house. Their balcony was about the same level and two guys were out there, but our rails were board-on-board and opaque as long as she was low on the chaise.\n\nWhile Anthony watched with bated breath and I with a smile, she leaned forward and unhooked the strap behind her. I held out my hand the way she had in the tiki bar.\n\n\"I'll keep it until we go to the beach again. Nobody needs to get arrested.\"\n\nYou could cut the atmosphere with a knife, and part of me wanted to go inside and let them have their moment while I cooled off. Most of me had different ideas.\n\nYou're gonna sit right here until his roommate comes out. And then you're gonna sit here until she has to stand up to go inside.\n\nIt was nice to sleep stretched out in a double bed by myself. I chuckled as I remembered the clearly audible \"Fuck!\" as his roommate had come into the living room and looked out onto the balcony; the blush as she decided it was time to go inside but was too proud to duck-waddle inside below railing level\u2014I don't know if the neighbors noticed and played it cool or missed it; the disappointed \"No fuckin' way!\" of the other roommate when he got home after sunset.\n\nI pictured across the hall. I wasn't a cold-hearted bitch, so I'd said, \"See you guys later,\" after dinner and gone to check out the cover band. I'd come back and noticed the firmly closed door, resisted the temptation to put my ear to it. Instead, I contented myself with imagining.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Let's go to the beach.\" I poked Julia from semi-awake to conscious.\n\n\"What's the hurry?\"\n\n\"There's a beach that's supposed to be good but it's, like, twenty or so miles away.\" \n\nShe grumbled and groaned and asked what the hell was wrong with Daytona Beach, but I pushed. Finally, with a Starbucks cup in her hand, a muffin in the other, and me driving, we were on the road. As we passed the sign for Canaveral National Seashore, I said, \"Lot 5. We're looking for Lot 5.\"\n\n\"What the hell, Chips? Just park. Half the lots are empty.\"\n\n\"Nope.\"\n\nFinally, I spotted where I wanted to go, and we parked and gathered our bags. She froze when she saw the sign at the entrance : WARNING &ndash; You May Encounter Nude Sunbathing Within Boardwalk 5.\n\n\"Oh no!\"\n\n\"Oh yes!\"\n\n\"You said\u2014\"\n\nI cut her off. \"I said half the tan lines were okay at the house. And since everywhere says you get in trouble if you do anything on the beaches, not even that there. BUT\u2014\" I practically shouted to drown her renewed protests. \"But you've done nothing but take your top off for a guy who sees you naked every night.\"\n\nShe started to argue about the roommate who'd seen her topless through the sliding door, but I wasn't having it. \"Oh big deal! I bounced my tits all over a stage, plus took my shirt off, never mind almost got felt up, for a ton of horny men I've never met. So shut up and march!\"\n\n\"You're doing it too.\"\n\n\"Nope. Remember what you said when I asked you to join me on stage?\" She did.\n\nI took the \"I so hate you\" in the same spirit I'd delivered it to Em. She stared at me mulishly, then trudged after. \n\nShe was slightly mollified to find that there were others who went for clothing-optional on the beach, but it didn't stop the entire-body blush when it came time for the bathing suit bottom to come off and two thirty-somethings fifty feet away watched.\n\nDisappointed only one of us stripped? I thought at the two.\n\nMy phone dinged. I checked and then texted back.\n\n\"Who's that?\"\n\n\"The boys. They just finished classes and they're on their way.\" For a moment, I thought I'd have rebellion on my hands at best, lose a friend at worst. \"You remember what you said to me before the wet T-shirt contest? You said, 'If you do, then you can say you did it.'\" I saw the Jules-logic get through to her.\n\nIf the blush that had come when she slid the bikini bottoms down before was body-wide, it was epic when we heard, \"Hey, Julia.\" She was on her stomach, only her ass and sideboob visible. \n\nIt took fifteen minutes for her to work up the nerve to roll over under the watchful eyes of three guys&nbsp;... only one of whom had seen her naked before. I don't know if the soft \"Fuck!\" from one of the roommates as a nice pair and a trimmed dark triangle came into view pleased or mortified. Probably both. It took another half an hour before she gave a laugh and said, \"Why the fuck not,\" to a suggestion of a Frisbee game.\n\nIt wasn't the same for me as with Logan or Brey or the Game, but it was fun to watch her accept the dare and then go all-in. I felt like I was sharing a little of my new life with her.\n\nMaybe someday there'll be a way to share more.\n\nWe went out that night, the five of us. \"One and done,\" I said firmly as we walked in. At the puzzled expressions, I pointed to the banner announcing a contest later.\n\n\"Of course. Been there, done that,\" Julia agreed. \n\nFar too easily.",
        "\"I didn't get to see.\" It was a pretend pout; Anthony wasn't a whiner.\n\n\"Maybe there'll be other adventures.\" Her eyes met mine for a millisecond. She and I had a shared wavelength. We knew each other's thoughts better than anyone, better even than my sister whom I'd known all her life. It was eerie sometimes. Now, a message flew. \n\nI will sometime. A promise is a promise. But you two just got together.\n\nThe two roomies wanted to know what the hell we were talking about. Julia explained with immense glee, and I glowered, mostly pretend-glowered. I was over it. It was just a wet T-shirt; I'd done worse in front of an audience.\n\nI turned down the tentative invitation later that night from a housemate. I didn't blame the poor guy. They'd had a topless girl on their balcony the day before, one who got naked at the beach today, heard a story about another girl whipping off her shirt in a crowded bar, and I'm pretty sure they knew their roommate was getting laid down the hall when we finally called it a night.\n\nI felt the desire myself. But the last few months were teaching me to cope, to let it build and make things better later. Neither of his roommates did anything for me, and I was quite content to lie there in the dark, watch the ceiling fan, and let my thoughts roam.\n\n<center>\u2022 \u2022 \u2022 </center>\n\nIt was late in the afternoon of our next-to-last day. We'd gone to the beach early in the morning, had a burger, and now were back on the balcony for the afternoon sun. Jules had shrugged off her top, not even caring that the boys next door now definitely knew&nbsp;... waved at their loud greetings, in fact. \n\nThe bag of chips disappeared. One blender pi\u00f1a colada slid down and then a second. \n\n\"Pizza?\" \n\nThere was a place down at the corner and an order was called in. The sun started to sink into the waves and a chill ran through me. Julia felt it too, I could tell. \"Do you have a couple sweatshirts we could borrow?\" she asked Anthony. He came back with a dark blue one with a gold eagle for her and a pale gray one with our hometown team's name on it for me. His phone dinged. \n\n\"Pizza. I'll go get it,\" he said.\n\n\"No, I will,\" Julia replied. She stood and slid on flip flops, checked that she had her wallet. At the sliding door, she turned back to me.\n\n\"I dare you. Right here. Right now.\"\n\nWithout another word, she turned and left. I sat there, stunned for a second that stretched into an eternity as what she'd meant sank in. \n\nMy eyes rose to the sky, dark blue above, a merest line of fast-disappearing brightness on the horizon\u2014the gloaming, I thought, remembering freshman Lit class and Joan Didion. I looked over next door at tiki torches lit as people laughed and partied.\n\nTorches would blind night vision, right?\n\nI glanced indoors. No sound of roommates yet. Finally, I looked at Anthony.\n\n\"What?\" My balcony-mate was confused.\n\n\"Do you remember we played Inquisition at my party?\"\n\n\"Vaguely. I was pretty hammered.\"\n\n\"My final dare was Seven Minutes in R-Rated Heaven with you. Do you remember that?\"\n\n\"No. All Emily told me was that I'd missed you topless.\" His eyes told me he was thinking about the contest where he'd missed it again, but he didn't complain.\n\n\"You were too drunk to do anything.\" As soon as the words left my mouth, I could see they cut. \n\nSaying that to a guy&nbsp;... what the everlasting fuck, Charl!\n\n\"I said that wrong. You weren't too drunk to do anything. You were perfectly capable of, umm, being good to me when I asked.\" My eyes were well-enough adjusted to the disappearing light that I could see he understood what I meant by that. \"And&nbsp;...\" I took a little mental gulp and said the words. \"In return, I promised you a blowjob whenever you wanted it.\"\n\nHe froze for a second. \"But Julia and I&nbsp;... this week&nbsp;... I mean&nbsp;...\" He stumbled to a halt, off-balance.\n\nI gave him a ton of credit for that. His first thought wasn't, This girl just said&nbsp;... It was, I'm with someone right now.\n\n\"We've talked about it, and you heard her just now. That's what she meant.\" I stood. \"Nothing's changed with where she's sleeping. Or me; I'm still in the other room. But right here, right now&nbsp;... think of it as foreplay.\"\n\nI moved to stand in front of him. He didn't shake his head or say anything. I started to kneel, then thought about how freely he'd offered his time and place even though I knew school was tough. And being drunk the first time I was topless was maybe on him, but the second was us going out without him. Not once had he tried to goad me into entering another contest or giving him a private showing&nbsp;... not even on the nude beach. He was a really nice guy.\n\nI stood a foot in front of him and reached behind, up under the sweatshirt. I unhooked the bikini top and pulled it out from underneath. His eyes widened. Then, praying the tiki torches did blind night sight and that no one next door saw what I was doing, I slid the soft cotton off over my head. The chill of the evening made my nipples jump to attention, the distant flames turning my curves golden orange. I saw him swallow.\n\nI watched the reality sink in. I watched him process what his friend, Charlene, was about to do, and that the friend who'd be in bed with him later, Julia, was okay&nbsp;... no, had made happen, at least in part, by what she'd dared. I placed my hands on his knees and knelt. \n\nHe lifted his hips obligingly as I tugged at the waistband of his sweatpants. Even in the dim light, I could make out his growing excitement&nbsp;... cool night air be damned. \n\nIt'll be warm in a sec, Anthony.\n\nI wrapped my hand around his length, heard the hiss of pleasure with satisfaction, and stroked him&nbsp;... once, twice, a third time, then I leaned forward and wrapped my mouth around his cock.\n\nI took my time. He hadn't been great at Christmas. He'd been too drunk. But he'd tried his best to please me and, in the end, succeeded at his task. Now I did my best as I let the rigid length slide between my lips. I let my breasts graze his thighs as I descended, knowing that the soft, yielding contact thrilled. \n\nNo jeers from next door. I guess they didn't notice. \n\nThen I heard a sound from inside our place. No lights flew on. No male voices yelled, \"Holy shit!\" I knew it was Julia home with the pizza. I let him fall out of my mouth, keeping a firm grip with my hand, sneaking a fast glance to the side. \n\nI couldn't see anything, only the reflection of stars and dancing flames on the glass of the doors. I didn't know&nbsp;... there was no way to know. But she was in there, I believed it, in there carefully making no sound so as not to interrupt, but not moving away to the bedrooms either while I did this.\n\nCan she see? There were no outside lights on this house. Only the light from next door, almost entirely blocked by the wall surrounding our balcony. \n\nIndistinct forms? Movement in deep shadow? How much is visible? I felt the burn of embarrassment, the same I'd felt walking to the back room to do this same thing with Owen. I knew I'd never be able to ask her what she saw.\n\nI forced my mind away from her, took him in my mouth again. Come on, Anthony, I encouraged mentally. I tightened my lips, made sure my tongue was stroking the underside right where guys are so sensitive. I ignored the phantom observer, whether she was there or not.\n\nI felt the twitch against my tongue first, a sensation I was becoming familiar with given the changes that had come into my life. I let my fingers stroke the base and concentrated my tongue and lips on teasing the head. I listened to his breath becoming shorter.\n\nAgain, I pulled free just long enough to say, \"In my mouth is okay.\" I knew, without really understanding why they felt that way, that those were magic words to a guy. They had the power to push things the last bit to the finish line. \n\nThey did. I heard the warning gasp and then felt the convulsive shudder. I held him inside me, letting him finish in the warm, wet confines of my mouth. I sat back, wiped my lips in case some escaped. \n\n\"Don't let this be weird, okay?\" \n\n\"No.\"\n\n\"I'm gonna go clean up.\"\n\n\"Uhh, thanks.\"\n\nI stood, took a deep breath, snagged my top, and slid open the balcony doors, afraid of what I might hear. There was only silence, but as I navigated around the living room furniture, I could see the still figure on the bar stool.\n\n\"You watched.\"\n\n\"It was too dark to see anything.\" That was a kindhearted lie. A glance showed it hadn't been so dark you couldn't see anything. Details were lost, forms were indistinct, but I could see a shadow of Anthony against the faintly lighter shadow of the railing, and the motion of a woman going down on a guy is pretty unmistakable. I felt my cheeks burn. \n\n\"Pizza?\" I asked.\n\n\"Here.\" \n\nMy dark-adjusted eyes saw the rectangle shoved across the counter. I flipped it open and grabbed two slices. I fled to my room.\n\n<center>\u2022 \u2022 \u2022</center>\n\nNobody made it weird the next day. I knew they'd talked about it, knew that Anthony knew Julia had been there. From the way she dragged at breakfast, I knew they hadn't gotten a lot of sleep.\n\nGlad I could oblige with a little porno to get your motors running, I thought sarcastically. \n\nWe went out and partied hard that night. I wondered how much schoolwork was suffering from our presence. As we chugged down glasses of water in the guys' kitchen and popped a couple preventative aspirin, I said to Julia, \"Tan lines gone?\"\n\nShe grinned. \"Not totally, but progress. Nice dare.\"\n\n\"I've done two dares you made.\"\n\n\"Uh-huh.\" She waited, but I didn't go on. \"Are you daring me to do something?\"\n\n\"Nope. Just sayin'.\"\n\nShe grinned again and gave me a big hug. \"I like the new wild side, Chips.\"\n\nI grinned, said nothing, planned.\n\nFriday came, our last day. We were on an early-Saturday flight. Julia and I spent it on the beach again.\n\n\"Are you going to miss Anthony?\"\n\nShe shook her head. \"No. It was just a fling. He feels the same way. We talked last night.\"\n\n\"But one last night tonight, right?\" I said with a dirty leer.\n\n\"Why not?\" she giggled.\n\nWe splurged for an expensive dinner, paying for Anthony's as a thank you. We went back, said our goodnights to the roommates when they came in, and talked until it was late.\n\n\"Early flight tomorrow,\" I said, as we finished a final pi\u00f1a colada. The other two nodded and we trudged upstairs.\n\nI made sure I got into the bathroom first, peed, and brushed my teeth, then sat on my bed with the door just cracked. I waited. One flush and the sound of water running. A door opening and closing and a murmur. Another flush, water running, someone moving from bathroom to bedroom. The door across the hall closed. I rose and opened the door to the room I was staying in. I flipped off the hall lights, both so I could see the light under their door and because I wanted them that way.\n\nTheir light went out. I gave it ten seconds, enough for whoever flipped the switch to make it back to the bed. Then I stole across the hall. I turned the knob and opened the door. I ignored the exclamations, the questions. In the dim light of an electric clock, I could barely make out Julia's startled face, sheet pulled up. I met her eyes.\n\nI pushed the door and let go until it bumped back against the wall.\n\n\"I dare you, Julia Condurso, to leave the door like that.\"\n\nI returned to my room without another word. I left my door standing wide open. I heard the whispers&nbsp;... started, stopped, started again. Nothing I could decipher, but I knew what was being said, the disbelieving questions. Then nothing for the longest time.\n\nThey tried to be quiet. Oh they tried very hard. But my entire being was one giant, straining, listening ear, and the house was quiet. Sounds of traffic and distant revels faded into the background as everything narrowed to focus on a hallway away. Just a wisp of sound at first, then growing to a mere whisper. Murmurs and then more than murmurs.\n\nI had only what nature gave me because no way had I brought something in a carryon that some TSA person might find. Even the idea of a ghostly, but distinctive, shape on an X-ray scanner&nbsp;... wasn't gonna happen. \n\nBut fingers and mind, the biggest and best of the sex organs, they were enough. And the sounds, they were the seed that germinated in that fertile soil. I buried my face in a pillow to stifle my own breathing and any other noise I might make. I knew what Julia looked like naked. I could piece together an Anthony because I'd seen every part at one time or another, and recently even seen it the way it surely was now. And I could put those images, her and him, together into a whole. \n\nI knew she liked doggie and so I pictured them that way: her hands braced forward for balance, her knees wide with him between them. His hands holding her hips ... or maybe they reached around and cupped breasts. \n\nYes, I like that better. \n\nHis hands kneading the fleshy globes as he drove his hips forward, impaling her. Her rocking in time, head down, ass up as she got wetter and closer. I timed my mental screenplay to the rhythm I could hear. \n\nI was prone on my stomach, one hand clutching the pillow, the other hand reaching underneath into my sodden slit, flicking in time to the metronome of a creaking bed. As the pace grew more passionate, I let fingers plunge deeper into my sodden interior, their bent forms dragging delicious friction over my clit. The soft groan from the other room\u2014his or hers, I wasn't quite sure\u2014triggered mine. I bit the pillow and thrashed on the sheets.\n\nThen I forced my breathing to slow. I extended my perception again, became all ears, my world the next room, and waited for it to start anew.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe call came about three in the afternoon two weeks later. I was sitting on my bed, tapping the hula girl I'd bought at the airport to make her dance.\n\n\"Most people come back with a shot glass they ripped off,\" my roomie had told me when she saw it.\n\n\"I'm trying to decide if I should go to Michael's and get some paint to make her historically accurate.\" When I explained, we'd both cracked up in laughter.\n\n\"Hey, Charl, it's Ethan.\" I couldn't stop the reaction. \"Guess what? I got into Carnegie-Mellon.\"\n\n\"Congratulations!\" I meant it. I mean, total nerd school but I liked nerdy. Nerdy could be hot.\n\n\"Umm.\" Suddenly, his voice was less ebullient. \"I was wondering, umm&nbsp;...\"\n\nI waited a beat. \"Yeah?\"\n\n\"I'm gonna drive out and visit campus in a few weeks and probably stop in to see Ems on the way back. Umm, would you like to, umm, see me?\"\n\nI punched the button to change the call to FaceTime. I waited until the long face with the unruly hair and tortoiseshell glasses filled the screen. I suppressed my Yum! at the dark five o'clock shadow and the smile that crinkled his eyes and gave a quirk to his lips.\n\n\"Hi,\" I said.\n\n\"Umm, hey.\" \n\nHis diffidence slid in and hooked a part of me. The little burst of heat in my gut reignited and brought back the worldly girl who'd been his first. Inane questions about how he was doing fell by the wayside.\n\n\"See you as in, like, get coffee? Or see you as in, like, you spend the night?\"\n\n\"Well, umm&nbsp;...\" Once again, I saw resolve overwhelm bashfulness. \"I mean, I could pretend it was the first thing if the truth pisses you off.\"\n\nI burst into laughter, loving the sense of humor that persisted even when he was nervous, and his quirk broke into a full smile. We enjoyed the moment.\n\n\"You know it stresses your sister, right?\" \n\n\"I guess.\" \n\n\"Yeah. I took the heat the first time. Now you need to man up and tell her you're staying in my room while you're here.\"\n\nI saw the almost imperceptible shiver as he heard me make the offer and, I was sure, pictured what would happen. \n\n\"It's a date then, Ethan. Text me when you know specifics. Bye.\" With a warm smile, I hung up before he tried to figure out what to say next so it didn't sound totally like a booty call. \n\nLeave 'em wanting just a little more.\n\nI replayed all the thoughts I'd had that first time, the little fantasies that had rolled around my brain as I seduced him onto the couch. \n\nMaybe he'll be okay with one or two of 'em.\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\nI hope you enjoyed it.\n\nCredit for the lyrics is \"Can't Feel My Face\" by The Weeknd.\n\nThanks to MsCherylTerra for the idea that a hula girl is an excellent icon of spring break, and to her and PeytonMirabelle for suggestions on how to make the story better.\n\n\u2014C"
    ],
    "authorname": "chasten",
    "tags": [
        "stripping",
        "wet t-shirt",
        "masturbation",
        "public nudity",
        "beach",
        "dare",
        "blow job",
        "topless"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-loft-game-hula-girl"
}