{
    "title": "To Walk the Constellations Pt. 12",
    "pages": [
        "BEDS OF SILKEN DREAMS \n\nI opened my eyes and wallowed for a bit in the crinkly softness that completely surrounded me. It was a softly smoothly perfection that felt like it was rubbing up against every single pore of my skinny body and draining out anything like resistance or anger or hurry. My limbs felt like lead and my head faded back into a pillow wider and deeper than anything in the known universe. A black hole of a pillow. I mumbled into it, tossing my head from side to side. \n\nI knew there was a reason to get up. \n\nThe reasons were distant. Foggy, like breathing on a screen. \n\nTaste of ash. \n\nMy tongue darted along my lips and my eyelids, at last, deigned to open. \n\nI was sprawled on a bed of red and dark blacks. Hanging curtains surrounded it, but they were drawn back and pinned up with gold and obsidian pins and hooks. The faint tinkle of chains came to my ears -- echoing from down the corridor -- but the room itself was all stone. Not smoothed, no. It was bits of stone, stacked and stuck together and covered with tapestries that showed scenes from a collapse-past: Armored figures on long legged beasts, carrying spears and sharpened swords, holding up shields against snarling scaled things that belched out smoke and flames and clutched exceptionally pretty men and women in flowing dresses, all swooning and gasping. \n\nFor just a teenist of a second, I liked the mental image. Of being swooned. Or of being the person who found them and... \n\nI shook my head. \n\nFuck this. I had work to do. \n\nOUT OF BED \n\nWhen I emerged from bed, I flushed from head to toes. I was still naked. Of course I was naked. Thale had cut the clothes off my body. The memory of how close his blade had been to my flesh, the thin line of red that had been left on my skin, the feeling of my clothing slipping away, leaving me naked and open to him. I closed my eyes and swore I could smell roses in the air of the castle. I crossed one arm over my chest, then glared at the doorway. It was a wooden door, and there was a great big thing what people put their clothes in. \n\nI put my back up against it and gritted my teeth. My legs strained and the wooden thing scraped along stone and scrunched up the carpet and, finally, put itself between the door and me. Now, I had some sense of security. I took a moment to grumble about how my Djinn could tell me how to fly a fucking dawn aged fighter craft, and let me rip up comptech as if it was nothing but a bunch of wrapping paper and my fingers were clawed, but it didn't know what the big shelfy thing was called. \n\nI puffed a few times, then flung open the shelfy thing. \n\nTill now, I'd thought that maybe I was in a place. I had no idea how long I'd been out, nor how far Thale had brought me. The Chain was long, and any number of worlds had been bombed or plagued or simply decided to turn their backs on modern miracles. Affectation and affliction both got someone in a castle mood, with knights on spotted canids, and stories of the stars dismissed as heresy by some groundling religion. \n\nBut what was in the shelf made it real clear that I was not in a place. \n\nCause the shelfy thing was stacked with my clothes. My old clothes -- the clothes I had had to wear on Stumble, where the wind was plastic and ash, where stepping outside of Junker Port had needed several layers to keep my eyes working and my lungs from scarring up too bad. And there was my staff, snapped in half on the first day I had learned I was a Liminal Knight. Looking fresh and shiny and new. \n\nNext to the impossible clothing, the clothing from almost a year before and nearly two hundred clusters back, there was something even more dreamlike and strange. It looked, at first, like a reddish circlet, but it was sized for my neck, not my wrist. It had a small broach-latch on the front, made of a golden oval with a gemstone the size of my pinkie set into it. I picked up the circlet and my thumb touched the gemstone as I held it out. \n\nThe circlet shivered -- and spun out a dress more shimmery and fine and perfect than I'd ever dream of, back on Stumble. Like a fancy given form, it sang as it brushed along the floor and I dropped the circlet in shock and backed away from it in a damn hurry. \n\nDRESS \n\nI poked the dress with my toe -- but touching it was harder than I thought. The dress fabric flowed to the side, letting my to get through. And when I drew back, it closed up again. I shook my head. \"Smart fabric,\" I whispered to myself. I picked up the dress by the collar and I looked at it again. It had skirts that flared outwards, and a sleeveless cut, with a plunging back that would show off my curve. Not curves, I was too skinny for an S. I bit my lip. \n\nI would look real pretty. \n\nIn so far as I could look pretty. \n\nI shoved the collar and the dress back into the shelf thing and started to tug on my old clothes. \n\nEXPLORE \n\nDressed and dubiously armed, I shoved the shelfy thing out of the way and started to creep down the corridor. I held my staff in my hands and it felt awkward and top heavy, compared to what I was used to fighting with. But I kept it close as I followed the faint sound of clinking, rasping chains. When I peeked around the doorway at the end of the corridor, I saw it looked into a breathtakingly fancy banquet hall. The table was covered, absolutely covered with food. There were thick goblets that had drinks of a dozen different colors, and the food smelled so rich, so delicious, that my mouth started to fill with spittle. \n\nI stepped into the room and looked around. I frowned. \"This isn't food,\" I said, trying to sound brave and forthright. Like a Liminal Knight should. \"And this isn't a castle, and I'm not in my old outfit. Where am I? What is this place?\" \n\nSilence -- save for a distant tick tick tick, and the crackled crickle of a fireplace I hadn't noticed before, tucked up against the far wall. Under it was a painting of two figures, clasped close. One was me. In that dress I'd spurned. The other was Thale, in his Hegemonic uniform, his cape billowing outwards, his head ducked forward. He looked as if he needed my body, my closeness, with a fierce hot need, a need the painter had captured with every crinkle of his face, every line of the grimace on his lips. He didn't have his cat ears, nor his tail. \n\nI scowled. \"Simstim,\" I said. Then I turned and whacked the food as hard as I could with my staff. Goblets went flying. Food splattered, spreading their rich colors over the carpet. \n\nSIMSTIM \n\nI'd heard about simstim, and seen it done on a few worlds. Simulated Stimulation -- direct inducted electronic influence of the brain. Depending on how high off the ground the world in question had climbed, a simstim could require an implant jack slammed into your brain stem with a hydraulic injector, or it could be a sleek mesh-hat you could take on and off as easy as winking. Some of the best simstims, though, were feedback capable. They plucked things from your head, then spun them up and tossed them back at your face. \n\nThe memory of Techne, whispering in my ear, about what the better feedback sims could do still made my cheeks go hot and funny. My nipples hardened and my hands tightened on my staff as I tried to put thought of sex out of my head. \n\nWhen I glanced back at the portrait, Thale was kissing me now. \n\nI ached. Right in my gut. \n\n\"Whose running this?\" I snarled. \"Show yourself.\" \n\n\"You catch on fast...\" \n\nThe voice that crooned to me was deep and rich and dark. It was deeper than Thale -- and it lacked the occasional purring undertone that Thale's voice could have. My brow furrowed and I started to turn in a slow circle, looking to my left, to my right, trying to pin down where the voice was coming from. But each time he spoke, it came from a different place in the room, never form any specific figure. \n\n\"I'd have thought someone from as far down the Chain as you might have never seen a simstim,\" the voice said. \"I can see why my Thale is so impressed with you, even if he's not willing to admit it. But I'm not entirely sure I want to show myself, not while your mind is providing the whole of the experience.\" \n\n\"Oh!\" I said. \"Oh! That's a low trick! I'm not...I have...I've never dreamed of anything as...daft silly as this!\" \n\nThe voice chuckled even deeper. \"It's not really use lying when you're in a feedback simstim. This entire castle, the portrait, even waking up naked in a lover's bed, that's all from your own fantasies and fears. Swift was right, this is quite informative.\" \n\nI scowled. \"Show yourself, you Hegemonic fuck!\" \n\n\"...as you wish...\" \n\nAnd when I turned, someone was there. \n\nOh. Someone. \n\nBEASTLY \n\nThe figure standing behind me was hunched, almost quadrupedal. His body was thick with ropy muscle, concealed beneath short, frizzy fur. His snout was very long, and had several extremely sharp teeth, peeking over the edge of his muzzle, while six glowing eyes transfixed mine, set in a circular pattern that swept to either side of his face. Each eye got bigger the further back they got, and they lacked a pupil or an iris or any color other than that complete blueness. His arms were long and skinny, and his hands were each tipped with sharpened claws. His body had the canid greyhound build -- curving chest, skinny belly, hips that flared outwards. His tail was a long, barbed whip chord. \n\nHe chuckled. \"Is this how you see the Hegemony, Venn?\" \n\nMy throat was dry as he stood up. Taller. Taller. He towered over me. \n\nAnd I felt a frission of confused, crawling sensation buzz along my spine. I was scared. Yes. But... \n\nI'd seen a lot of strange humans during my travel. And this thing was still on that spectrum. Legs. Limbs. Arms. Yeah, even the claws. Those eyes, though. They wouldn't let me look away. That rich-deep voice continued to drip down my ears as he started to pad forward, heavy. Weighted. \n\n\"It's somewhat simplistic, isn't it?\" he asked, cocking his head. \"Have you ever wondered why the Hegemony resorts to the brutality? To invasion?\" He reached out and the backs of his razor sharp claws brushed against my cheek. \"It's more complicated than you might think.\" \n\nI needed to gulp before I could speak. I forced my tongue down, not wanting to lick my dry lips. The confused crawling sensation had become a growing heat between my legs. \"Fuck complicated,\" I said, my voice husky. \"You burn entire planets. You glass them!\" \n\n\"Only when the Hegemony must,\" the beast said, his head ducking forward, his snout almost brushing against my face. His breath smelled fragrant and sickly sweet and a silly part of me wondered how long his tongue was. \n\n\"Never. Never is a must.\" I clung to my anger, glaring up into those eyes. \"You're not Thale. Who are you?\" I paused. \"The Emperor? Some...interrogator? Where is Thale? Did you fucking hurt him?\" A sudden image -- me in some simstim tank, Thale strapped down. Me, shining and knightly, bursting out to cut him free. My hands tightened and I nearly grabbed the beast by his snout. \n\nThe beast chuckled. \"No. We're not even on Eudaimonia -- we're currently each in an acceleration tank on my stealth corvette, burning as hard as we can when we're not jumping between systems. This sim-stim is on an adjusted time scale. The months will pass faster in here.\" \n\nI blinked. \n\n\"Who are you?\" I asked. \n\n\"I'm...Thale's fiance,\" the beast said. And the hurt in his voice jerked my hand up. My palm pressed to where I'd been planning to grab. He felt warm and his short, bristly fur was soft. \n\n\"Oh,\" I whispered. \n\n\"Yes. Oh.\" His eyes met mine and, despite lacking iris and whites, the sadness in them cut me to my bones. I hadn't known. I hadn't. I. I gulped, then looked down at my feet. I felt shorter and squatter and more miserable by the second. Guilt roiled through my guts, where excitement had been bubbling before. So. That was why Thale had been stuck. He had me...and he had someone else. \"My name is Prince Adoran Adams. Normally, I don't look like a monster.\" \n\nMy eyes screwed shut. \n\nAnd he was a fucking Prince. \n\nGood. Fucking. Job. Venn. You. Idiot. \n\nA POSSIBILITY \n\n\"But...I can see why you set his head spinning and his heart racing,\" Adoran said, his voice warm in my ear. He walked past me -- and the heavy thump of his body got my heart racing. I wondered how much or how little overlap there was with the real Adoran. Did Thale love a twig of a prince, like I was a feminine echo of his first heart's home? Or was Thale the small one in their relationship? Did Adoran hold him. Did Adoran pet his head, and let him purr when the weight of the Hegemony got too much? Was Adoran this...towering outside of simstim? \n\n\"Why? C-Cause I'm fucking stupid?\" I muttered, stepping away. But then that clawed hand grabbed onto my arm and he jerked me around. His blue eyes transfixed mine and he chuckled. \n\n\"Stupid? You learned how to be a Liminal Knight in less than a year -- taught using nothing more than the connection you and Thale share. And you fought and bested one of the most dangerous novitiates in the Hegemonic order.\" His hand tightened on my arm. \"Then, you led an attack that disabled and destroyed the Victrix, the one worldkiller built to be as immune to Liminal Knights as it is possible to make a piece of tech.\" He chuckled, and the sight of those teeth made my knees go weak. \"The only thing stupid here is you not being the most conceited woman on the Chain.\" \n\nI grabbed his wrist. He looked skinny, but my fingers didn't even touch my palm. I glared at him. \"I should have...\" \n\n\"Asked?\" he asked. \"You didn't even know who Thale was, did you?\" \n\nI pushed at his wrist. His hand didn't budge. My breath came ragged and shallow. But Adoran noticed the push -- and he let me go, leaving a shallow impression of claws on my pale skin. I trembled and Adoran shook his head. \"Come on. We have several days, subjective, before we reach Eudaimonia. Maybe if you get to know me, then arriving there won't need to hurt.\" \n\nI shook my head. \n\nBut inside, I thought... \n\nMaybe... \n\nMaybe I could reach him too. \n\nMaybe. \n\nBANQUET \n\nAdoran looked near funny, hunched over at the end of the table, spearing food with his long claws. He chewed and smacked his lips as I shoved entire potatoes down my mouth. Simmed or not, it tasted great and it filled my guts. I licked my lips, then said: \"You know, uh, for someone who doesn't normally look like a monster, you adapt fast?\" \n\n\"I've been simmed in a lot of ways,\" Adoran said, casually. \"Part of the upside of growing up a prince.\" He grinned and his eyes sparkled. \"You know, those metal things are there to help you eat.\" \n\nI looked at my greasy fingers, then at the forks and knives. My cheeks heated, then stuck out my tongue. \"You're using claws.\" \n\n\"Touche,\" he rumbled and laughed and I smiled, despite myself. \n\n\"So, how are you a prince?\" I asked, picking up my fork. There some green orbs I'd never seen before. They looked like they should have tasted like candy or plastic. Instead, they exploded in my mouth with juice and clear, delicious tartness. My eyes screwed up and I choked as I swallowed-breathed-laughed with joy all at once. Adoran chuckled, lifting a goblet, his claws sparkling in the air as he used his fingers to grip it. The handle was awkward, but then his tongue thrust into the cup and he began to lap it up. \n\nHis tongue was long. \n\nAnd it looked like it could be tied into knots. \n\nHe noticed me gaping as he set the goblet down, and I could see he noticed it, and I could hear him not calling attention to it, which just meant my brain couldn't help but think about the things that his tongue might be able to do. Instead of mentioning any of those things, he purred: \"Elthas was in chaos when the Hegemony arrived. My ancestors were struggling to maintain it against a hoard of techno-barbarians, led by a Liminal Knight named Lord Primus, who had fused his body with an autophagic cloud of chaotic mana. He supplemented his flesh with the blood of his enemies -- including my great great great great grandparent, while creating new and twisted genotype abominations every month. He'd fuse a human with anything if he thought it might give them an edge.\" \n\nI nodded. \n\n\"But when my family bore their first Liminal Knight, rather than training them their selves, they sent the child to the Hegemony. He returned and, with their training and aid, killed Lord Primus.\" Adoran chuckled, softly, and his whip-tail snapped back and forth. The barbed tip glinted in the firelight and I felt my eyes going out of focus with the languid movement of that tail. Flick. Flick. Flick. \n\n\"From that time on, Elthas has been the right arm of the Hegemony. They helped us rebuild our world, and we've helped them expand. We, also, seek to...moderate their influences,\" he said. \"To try and guide them towards a more noble light.\" \n\nI shook my head. \"Fat lot of good you've done,\" I said. Then, scowling. \"How can you say all that, talk all that good shit, when...when...I...\" I slammed my palms down. The portrait over the fire showed Thale -- helmeted. Masked. Bent forward, as if against a fierce wind. I stuck my hand out, pointing right at it. \"Gloves! They hurt him, Adoran!\" \n\n\"Don't you think I know that?\" He growled. \"Don't you think I hate that-\" \n\n\"If you hate it, you'd have fucking done something about it!\" I shouted over him. Adoran stood -- unfolding to his full height. He glared down at me. \n\n\"Who do you think has been pushing the Emperor for retrovial treatments ever chance he gets?\" he growled. The growling buzzed in my ears and my breath came short and sharp. But it was his words that hit me in the gut. It was like a gulf, beginning to yawn between us. I started to shake my head before I even responded. \n\n\"You want to make him...\" \n\n\"Human, yes,\" Adoran said. \n\nI closed my eyes shut. \"He is human,\" I whispered. Ragged. \n\n\"Not to the Hegemony-\" \n\n\"That doesn't fucking matter!\" I opened my eyes again. \"I don't care if every last fucking person on the Chain and off it said he wasn't. He is! He is! He is!\" \n\nAdoran moved. He didn't skirt the table. There was no time for that, not in this headlong charge. He simply stepped up onto it, knocking over pitchers and sending plates skittering. He walked on his forefeet and his knuckles, his elbows bending, his back undulating. His tail snapped back and forth behind him, until he was swinging his lower half off the table, his rump settling onto the floor before my chair, his long, long arms wrapped around the back of the chair. His muzzle nearly pressed into my chest as he tilted his head forward, planting his gaze right into my eyes. He snarled. \"I can't think like that, you child. It feels good, I know it feels good, to think romantically. If I could, I'd say the same thing and stand on the same hill. But I can't.\" \n\nI breathed in his musk and felt dizzy with terror and arousal both. \n\nAdoran was panting too. His nostrils flared and he breathed in my scent as he whispered. \"Humans aren't solitary creatures. We need each other. I cannot change a thousand years of propaganda, of lies, of hate, of bigotry, by myself. But...I can change Thale. I can keep him safe and beside me, while still keeping my people safe.\" ",
        "I shook my head. \"That's...\" \n\n\"Cowardly?\" he asked. \n\n\"Yes,\" I hissed. \n\n\"Craven?\" His voice dipped lower. His eyes were starting to close -- one by one. \n\n\"Yes...\" I could barely hear myself. \n\n\"I don't care,\" Adoran said. \"All I have to do is think of Thale...and it becomes worth it.\" \n\nCONNECTION \n\nTenderly, my hand reached out. I pressed it to the side of his greyhound ribs. I felt his heart, thundering. It was the same beat pattern, the constant drumbeat, as mine. When I tried to sleep and couldn't, I felt this same tattoo, rumbling under my skinny ribs. This heart loved Thale as much as me. \n\nAnd was willing to do anything for him. \n\n\"Even if it's wrong,\" I whispered. \n\n\"Even,\" he said. \n\nI closed my eyes and leaned in. My face pressed to his snout and felt the warmth, the slight wetness. Adoran tensed and my hands slipped along the sides of his ribcage, to his shoulders. I drew him in. \"You're wrong,\" I murmured. \n\n\"You don't know that,\" he whispered. \n\n\"I'm not,\" I said. \n\n\"You can't know that,\" he said. \n\nI reached up, gripped the base of his muzzle with my whole hand. \"Shut up, Adoran,\" I said. \"If we both love Thale, we can't both be fucking right.\" \n\nAdoran growled. \"Do you talk like this to him in his dreams?\" \n\nI smirked, shyly. \"O-Only when he's being stupid,\" I said. \n\nAdoran's last two eyes closed. He leaned in, and his tongue thrust into my mouth. My lips opened and my eyes rolled back into my head as his tongue began to sweep down my throat. It was so...alien. My toes curled and my back arched as he kissed me and kissed me and kissed me. It was a kiss without lips -- only the blunt tip of his muzzle, and the questing, squirming length of his tongue. It was a kiss that stole my breath and made my back arch. My thighs spread wider and wider as I gripped onto Adoran's shoulders. \n\nThen he drew back. His tongue slurped out of my mouth and I coughed. Gasped. \n\n\"I...I have to go,\" he rumbled. \n\n\"Wait,\" I whispered. \n\nHe turned. He was walking along the table. And between his legs, I could see the firm swell of his balls and the hanging sheath of his member, the gray fur contrasting against the brilliant pinkish red of his half hard cock. As he walked, his cock slipped further and further from his sheath. I gaped after him -- and then he slipped out of the door. He was gone. I sagged in my chair, my knees pressing together. \n\nHe was going to talk to Thale. I knew he was. \n\nWould he be joined by Thale? Next time? \n\nI hoped so. \n\nChrist alive...I hoped so. \n\nSOLITUDE \n\nThe next day was spent alone in the castle. I woke from my restless sleep and found that there was an adjoining and anachronistic shower in my room. My subconscious spoiled me with the luxurious soft fluff-scrubber and the thick goopy soap that turned my skin into glittering porcelain. Then I set to exploring the castle. \n\nEvery step made me feel stupider. Sillier. \n\nBallrooms with gleaming white tile floors, where music flowed soft and sweet out of thin air, like syrup. Where I could imagine twirling and spinning and being held. \n\nTraining rooms -- like the first place where Thale and I had really...done things. The mats were the same softness, and walking barefoot across them made tiny squeaking noises that made my cheeks heat. \n\nLarders. Larders stuffed with more food, more drink, more fruit, more stuff that worked than I could possibly imagine. There were food stores, yes, in vacc-packing and ice boxes, but there were also rivers of mana, flowing rich and heady with anything I could have desired. It was a fantasy of not only not wanting, but of not thinking about wanting. I could lay down on the amount of bread that was baked and packaged and left for me to eat at my own pleasure. \n\nWas this all my brain was? Food and stuff? \n\nWell. \n\nThere were also the darker rooms at the bottom. With the, uh... \n\nStuff. \n\nMoving on. \n\nWhen Adoran did return, a day later, he didn't mention Thale. \n\nA LAZY COURTSHIP \n\nDespite saying he could, Adoran never showed up in anything other than the form I'd dreamed up for him. The Hegemonic monster, as seductive as it was terrifying. He and I would take walks beyond the castle, in the forests that were one part Masque Macabre, one part Gamma World, one part dreams from Stumble's own past. The forests stopped making sense the further we got past the castle as my imagination and the simulation broke down. We walked along stairs of wood past slumbering stars, half buried beneath the earth, where the mud began to break down into a black slurry that reminded me of space. We always headed back before going over the edge of the last step -- where the forest itself began to float away into the inky blackness I imagined beyond. \n\nAdoran and I talked as we walked. \n\nHe told me about growing up on Elthas. About the family politics, his two mothers, their attempts to adjust and change the Hegemony from inside, like a benign cancer. And, when prompted, I told him about scrapping on Stumble. But I never talked about the places I'd been. The places I'd seen. The people I knew, like Techne or Meetra or Mal or Rossk. I could see that Adoran could see that I was holding back. But he didn't push me. \n\nWe were perfect gentlepeople. \n\nBut the tension. The memory of our first dinner, of that languid kiss, buzzed through our awareness. \n\nA PROPOSAL \n\n\"If you join us,\" Adoran said, on the third day of quiet talking and long walks. \"You could be our concubine.\" \n\nWe were walking along the wall that ringed the castle. Stone bits were worked into the edge to make it hard to shoot us with arrows -- but because this was my imagination, the bits were artfully designed and carved with sneering gargoyles and growling exigenic dogs. I nearly pitched over the wall at the word 'concubine.' I spun to look at Adoran, who was walking with his hands clasped behind his back. Since he was on his haunches, he towered over me. This meant I was looking more at his belly than his face. I craned my head back and tried to not feel like I was looking out of a well. \n\n\"I could be your what?\" \n\n\"Concubine,\" he said, grinning. \"It's a place with considerable prestige and-\" \n\n\"And fuckery!\" I said, shoving his chest with my hands. He took not one step backwards. Adoran remained as sturdy and iron hard as ever. I jerked my hands back like he was hot. \"I don't want to be your fuckpet!\" \n\n\"What about Thale's?\" Adoran asked, arching an eyebrow and giving me a toothy little grin. Insolent fuck. Goddamn it. Goddamn it. I crossed my arms over my chest and scowled at him. \n\n\"Fuck you,\" I said. \n\n\"Not a no,\" Adoran murmured, his whip tail lashing. \n\nI tingled. My arms tightened and I glared at him. \"You don't think I'd turn against everything I believe in to-\" \n\n\"No,\" Adoran said, reaching down with one of his large hands. His fingers cupped the back of my head, and the edge of his claws pressed to my neck and shoulder. I trembled, feeling their razor sharpness. My lips were dry. \"No, Venn, I want you to be a part of our family because you could help us change the Hegemony for the better.\" \n\n\"W-While enjoying everything it offers?\" I snarled, clinging to my anger. \"Fiddling on blackened glass.\" \n\nAdoran snarled. \"It's better than dying.\" \n\nI turned my head and bit down on his wrist. His frizzy fur brushed against my gums and my teeth found skin and worried at it. Adoran let out a yipping noise. Almost doglike. He tried to draw his wrist backwards, but I grabbed his arm with both of mine, holding him long enough to bite just a bit harder. His other hand planted on my forehead and pushed me backwards. We both panted -- me with my back against the crenelations. Him, poised on the pads of his feet, his tail snapping at the same tempo as my thundering heart. \n\n\"You can't win,\" he said. \n\n\"Fuck you,\" I whispered. \n\n\"Gladly,\" he snarled back. Like it was a joke. \n\nI reached up, grabbed his muzzle, and dragged him in and forced a kiss from him. His tongue thrust into my mouth and he plundered me. That was the only word I had for that kiss -- that long, aching kiss. My toes curled in my rough shoes and my back arched as his powerful hands gripped my hips, holding me up so that he could stand and kiss at the same time. In this dream, I was like a poof of cotton in his hands, and he could hold me against his chest, kissing me more and more deeply. Then he drew his muzzle back, gasping as his tongue retracted. My legs were spread against his narrow belly, and I felt his heat throbbing through my clothing -- just the heat of his fur was enough to drive me wild. \n\nI knew his hardness was below me. But I refused to look, glaring into his blue eyes. \n\n\"Thale told me you wouldn't listen,\" he murmured. \n\n\"Where is he?\" I asked. I tried to not sound needy. \n\n\"Piloting the ship,\" Adoran said. His tongue slipped along my cheek. It left me moist and trembling. But the words felt like a lie. No. Not a lie. A half-lie, the real truth slipping through my fingers. I put my hands on Adoran's wrists, trying to lever myself up a bit more. I glared into his eyes. \n\n\"Bullshit. I've seen astrogation, if we're just making a straight shot for Eudaimonia, then it's just one program. Why...\" My throat tightened. \"Why isn't he here?\" Adoran tried to look away. I took one hand from his wrist, grabbing one of the bony protrusions of his jaw, then yanked his head back to face me. \"Why? Tell me why.\" \n\n\"He...didn't say...\" \n\nThis time, I bit his neck. Hard. Adoran trembled and growled. \"I'm the monster here!\" His tail lashed, and then reached around. It wrapped around my throat with the dextriousness of a snake, and it tightened. The feeling of choking almost set me over the edge. My eyes rolled back and I clutched at the tail around my throat as Adoran yanked me backwards -- but still held me close. My back arched with the pressure and I made a tiny whimpery noise. The kind of noise I'd want to make in the rooms under the castle. The rooms I didn't want to share with anyone. \n\n\"He didn't say, Venn,\" Adoran said, more firmly this time. With conviction. \n\n\"Bull,\" I hissed around his tail. \"You know him.\" \n\nAdoran looked away. \"Do you want me to say it?\" \n\nAnd... \n\nI broke. \n\n\"No,\" I whispered. Because the words were already ringing in my ears. I could see Thale, sitting in the cockpit chair, glaring ahead of himself. I've chosen my side, Venn. He'd sound ragged and rough. But he wouldn't actually look back at me. He wouldn't break. After all. He had a Prince he needed. \n\nAdoran nodded. \n\n\"Take me to bed,\" I whispered. \n\nAdoran snapped his head to look at me. \n\n\"I...\" I whispered. \"I want to...stop thinking. For a bit.\" \n\nTO BED \n\nAdoran didn't take me to bed. \n\nHe flung me over one shoulder and bounded forward -- the castle blurring past me and him. Until, at last, my back slammed into the silk. The cushions bowed underneath me and the pillow whumped with a whistle, and then those claws hooked on my collar and, with quick, savage jerk, my clothing turned into so many tatters. My back arched and I moaned. My breasts tingled with the after-sensation of his claws. My nipples were hard enough to cut glass. \n\n\"Let me...kiss you...\" Adoran rumbled. Every syllable of the word flashed a different, sharper tooth at me as his muzzle opened and closed. He ducked his head forward as I breathed in and out, each movement of my body letting the ruins of my clothing fall aside. \n\n\"Never stopped you before,\" I whispered. \n\nAdoran leaned forward. \"Not there.\" \n\nHis furred fingers, punctuated by the bony hardness of his claws, cupped my pale thighs and my knees as he pushed me upwards. My body spread for him -- and he spread me even further, pushing me more and more open as he looked down at my sex with his glowing, blue on blue eyes. The two saber-sharp teeth that marked his canines teased against my freckled skin as he pressed his muzzle to the folds of my sex. I whimpered as his mouth opened and slowly, his tongue slid out and out and out. It uncoiled and ground against the folds of my sex with the exhale of his breath -- a contented masculine sigh that mixed with my own mewling sound. \n\nIf I hadn't been soaked before... \n\nAdoran's eyes narrowed to six slits and the tip of his tongue plunged into my cunt. \n\nMy eyes fluttered shut and I moaned. \"Thale!\" \n\nBoth of us froze. \n\nLITTLE DEATH \n\nTo say I wanted to die was an understatement. \n\nI wanted to be ripped apart by wild scrap boars. If Adoran had bit down on my thigh and tugged out my femoral, I'd have breathed a sigh of relief on the way out of my mortal coil. Instead his tongue -- textured just enough to drive me body wild with pleasure -- rippled inside of me, grinding against parts of my body that didn't know they could feel bliss. My hips bucked and I bit down on my wrist hard enough to draw blood, not wanting to scream out Thale's name again. But just thinking of him with Adoran's tongue inside me set me over the edge. My body trembled and my vision blurred and flared to white as my eyes closed tight and my moan, muffled as it was, split the air. \n\nWhen I opened my eyes, my body gleaming with sweat, I saw that Adoran was still holding me up. Still looking down at me, across the flat plane of my belly, through the small valley of my breasts, into my eyes. \n\nHe blinked. \n\nIt wasn't an all-blink either. Rather, it started at the lowermost right eye, then rippled upwards in a circular pattern, like an ancient loading wheel. \n\nIt was the silliest thing. I giggled. I snorted. And then Adoran laughed into me, his tongue drawing back -- his breath hot on my thighs as he laughed against me, my own eyes brimming with tears as the giggles got harder and harder and harder. \n\n\"You owe me for that!\" Adoran laughed. \n\n\"What?\" I asked around giggles. \n\n\"Oh, for moaning the name of my fiance when I'm in the midst of tongue fucking your most excellent pussy?\" Adoran asked. \n\nI squirmed and tried to bat at his head with one of my feet. But Adoran, laughing, pushed me head over heels. I bounced on the bed and ended up on my belly. His hand cupped my neck, and he lifted me up before I could right myself -- and his cock pressed to my mouth. My eyes widened -- then slowly lidded as I took in the exotic shape of him. It was...almost triangular tipped. And...knotted. Thick. Knot. Like a fist. I gulped. \n\n\"Open,\" Adoran murmured. \n\n\"Say please,\" I whispered, barely parting my lips. \n\n\"You're the one who owes me, Venn,\" Adoran growled. \n\nThat growl did it. My mouth parted and my eyes looked up at his six blue eyes and he thrust into my throat. I felt the tightness of my throat around his cock -- and my eyes fluttered shut as he started to fuck my throat. I knew I should have been choking...and...part of me was. There was the noise of a choking. The little gurgling gagging noise I'd have expected. But my brain didn't scream for oxygen and my stomach didn't rebel. In this dreamscape of simstimmed excess, I could feel my throat bulge and my jaw strain -- and love it. \n\nAdoran's breath came short and sharp, panting heavily as his furred balls gently slapped my chin. He thrust faster and faster, and I felt his pleasure building -- and my eyes closed as my hands tightened. And... \n\nGod, I missed his tongue. \n\nI swear. \n\nAdoran was cheating. \n\nSIZE AND FLEXIBILITY \n\nAs Adoran's hips thrust against my face and his cock plunged into my throat, he stretched out his long, limber body. His clawed hands spread my thighs as he leaned forward, and his snout pressed against my sex. He was tall enough that he could keep fucking my throat, twitching his hips to bump his knot against my lips, and still slide his tongue into my sex. My juices spurted along his tongue as I came, moaning -- gurgling really -- around his cock. \n\nAdoran's tongue plunged into me again and again and again -- tongue fucking me with the same roughness he used on my throat. My ability to actually drive him on was eroded, inch by inch. First, I was able to swirl my tongue and suck. Then I was able to suck. But after a few more moments of pleasure, I was left trembled, my eyes rolled back into my head. I wasn't so much cumming as I was just riding crest after impossible crest. \n\nAdoran drew his tongue free and threw his head back. \n\nHis howl split the air and I felt his balls twitching against my chin as he began to pump cum down my throat, into my belly. My eyes closed and I moaned softly -- wriggling and twitching and loving it. \n\nAnd \n\nBLIP \n\nI was floating. Liquid slurped past my nose, my ears. Popping sounds in my ears. Hissing sounds -- glass sliding down after the liquid. Gravity. My knees pressed to the floor and my palms pressed to the floor and I retched. Blue liquid came up and out of my mouth as I drained my lungs and stomach with wracking, coughing gasps. Bits of something unidentifiable floated around the blue -- but it was slurped up by the grated floor. I shivered and trembled and my entire body felt clammy. The shock of what I had been, uh, doing and now was...was... \n\nI looked up. \n\nThale looked down at me. He was clad in his mask, his gloves, his cape. He was actually tugging his glove tighter. His voice was cold and detatched. \"We're here,\" he said. And then, to his left and to his right, were two shocktroopers. One held a pair of handcuffs. \n\nI coughed again. \"Couldn't have waited five minutes...\" I mumbled. \n\n\"No,\" Thale said. \n\nGuilt gnawed at my gut. \n\nAnd then handcuffs snapped around my wrists and I was jerked to my feet. \n\nEUDAIMONIA \n\nI'd heard legends of the Hegemonic homeworld. Walking from the landing port to the pyramid shaped Temple of the Machine gave me plenty of time to look out at it -- and the legends had been tame compared to the sheer splendor of what the Hegemony had wrought on this world. What had once been deserts and warring tribes had become an endless sprawl of immense skyscrapers -- and not the sterile coldness of Masque Macabre. These skyscrapers thrummed with life. Skycars flew in arcing, winding paths between them, threading like arteries through some vast body. People walked and hurried and ran along slidewalks that connected scraper after scraper. \n\nPeople by the millions. \n\nPeople by the billions. \n\nIn that one glance, I swore I saw more people than I think I had in my entire trip along the Chain. \n\nThen the shocktroops started to march me across the bridge that led from the landing port to the Temple. I was dressed, fortunately. But I wasn't dressed well enough for the harsh, biting winds that swept across the unprotected walkway at this altitude. My skin broke out in goosebumps and my ponytail snapped to my left as I walked. When I glanced back, I saw that Thale and Adoran were both following me. I felt a tiny pang of disappointment. In the real world, Adoran was...well, he was handsome enough. \n\nBut he was handsome in Hegemonic lines. Blond. Blue eyed. Broad shouldered. \n\nHe could go maskless. \n\nI looked forward as we walked, my jaw tightening. I didn't know what was waiting for me. But I had a feeling that...I had reached Adoran. And if I had reached Adoran, I had reached Thale. And maybe, just maybe, the Emperor had bitten off more than he could fucking chew. \n\nI did close my eyes once we came to the entrance of the temple -- a broad set of automated doors that slid smoothly open to reveal an empty elevator. As the elevator started to trundle upwards, I prayed. ",
        "Jesus, please...please take care of the Tiamat. Take care of Techne and Rossk and Mal and Meetra and every last rebel. You won't need to waste time on me. I squared my shoulders and tried to an insolent little grin that was for God and for Thale. \n\nI won't need your help here. \n\nTHE RED ROOM \n\nThe elevator doors opened and I was marched into a vast, red room. It was shaped...wrong. Like a pair of crosses pressed in one another, merging and molding together into something that shouldn't have been but...was. The floor looked like it should have been canted at a crazy angle, but walking along it felt entirely flat. The walls were a brooding, stark red, and the floor was a pure obsidian black. But to my senses, to my Liminal awareness, the room felt even more inspiring. The focused power of dozens of gravitic engines was used to sculpt spacetime itself like it was a statue, twisting it into knots. The center of the room was dominated by a throne. \n\nEven from here, the throne felt heavy. It was made of a shimmering purple-black material that flowed in a constant, writhing motion. Like it was more liquid than solid. But the man seated upon it was seated as if it was solid. He looked... \n\nI blinked. \n\nThat was Emperor Daniel Golgotha Rehoboam IV, great great great great grandson of Emperor Daniel Nebuchadnezzar I. This...skinny, hunched, gray skinned figure with a jagged scar that consumed half his jaw and his cheek? That balding, withered man, whose hands twitched against his golden lam\u00e9 robes? That was the Emperor? I wasn't sure who I had expected...but I didn't expect him. And then, from the shadows, came the other Hegemonic Knights. \n\nThey fit the legend. They fit the stories. \n\nOne of them was a massive figure. Armored in black, with a hissing and clicking sound coming with every breath, and digitigrade cybernetic legs. He looked down at me through eyes that had been replaced with insect-optics that whirred and clicked. He felt like he was made more out of machine. Fanning around his body were others. Each had unique armor -- each one had their own twist on a threshold blade. One of them was carrying a heavy buzz-saw at the end of a stick. Another one had a mace that looked similar to the throne, rippling with gravitic fields. One of them was shirtless, covered with scars, and had a narrow cylindrical threshold blade that looked as double bladed as the Knight had I had faced before. \n\nThey walked and paced, and soon, they ringed the room. \n\nThale stepped forward, then held out my threshold blade. \n\nI felt a ping. My blade reached out to me. I had access to it. I focused, giving it a tiny command to begin fabricating the microjet engine in the base. \n\n\"Well, well, well...\" Emperor Rehoboam said. His voice was raspy and his grin was eminently punchable. \"What do we have here.\" He crooked his finger and my threshold blade lifted into the air. I could feel the energies of the gravitic engines, flinging my sword up, then shooting it towards Rehoboam's hand. He caught it from the air, looking it at it with pursed lips. My eyes widened. \n\nHe was a Liminal Knight. \n\nThe Emperor was a Liminal Knight. Great. \n\n\"Do...you know what you've found for me, Lord Drak?\" Rehoboam crooned. \n\n\"No, sire,\" Thale said, his head still ducked forward as he knelt on the ground. \n\n\"This...\" Rehoboam said, looking up at me. His eyes were green. For some reason, I'd expected yellow. \"This is the blade of Wotan Hohmann.\" \n\nMy gut dropped. I had been planning on keeping that bit of information secret. Thale snapped his head around to look right at me. The other Hegemonic Knights did as well. \n\n\"The prophecy is true, then,\" Rehoboam said, grinning ever so slowly. His teeth were small, white nubs. Why did I feel like he was sizing me up to tear out my throat. I glared right at him, my jaw tightening slightly as he continued to speak. \"The prophecy of the orphan child -- bearing Hohmann's blade. Come to strike me down...\" He spread his arms as he stood before his throne. He held my sword in his hand. His eyes met mine and he continued: \"To put an end to the Hegemony. That's what the prophecy says. Are you an orphan child, Venn of Stumble?\" \n\nI glared at him. \n\n\"Yes...you are...\" Rehoboam murmured. \"But did you know there is another claimant?\" \n\nHe set my blade down on his throne. \n\nRehoboam's eyes gleamed as he spoke. \"What many do not know about the famed Wotan Hohmann...is that he had two threshold blade in his life. One, he raised against my ancestor. One, he used in his service.\" He gestured with one hand and Thale stood. Thale's hand was shaking as he drew his blade. \"Yes...\" Rehoboam crooned. \"Yes.\" \n\nThale looked at me. \n\n\"I knew, of course,\" Rehoboam said. \"I knew from the instant I took Lord Drak under my wing.\" \n\nHe sat at the throne. His gloating laugh split the room. \"Why, Lord Vorsoth and I realized the solution. We communed with the Machine together -- and they charted our course. For all prophecies only come true if they come true. When they fail...they become metaphor.\" His teeth flashed. \"And Lord Drak stands before me resolute.\" \n\nAs he spoke, a woman in a red robe emerged from the darkness. She held a small pillow on her palms. Sitting on it was a small ampule, filled with mana. My talent brushed against it and I felt it -- it was medical nano, designed for retroviral injection and DNA re-sequencing. I didn't need to untangle the complexity of its code to know that it was made specifically to 'fix' Thale. To strip away his mutations. \n\nTo leave him blond. \n\nBlue eyed. \n\nHuman. \n\nThe red robed woman knelt beside Thale. Thale took the ampule in his hand, lifting it from the pillow. His hand shook and I could see that his claws were straining against his glove. His tail lashed. Adoran, kneeling, looked at him with wide wide eyes. My throat was dry as a bone. \n\n\"You have everything you dreamed of in your hand, Lord Drak,\" Rehoboam said. \"But the nano will not truly activate until you complete your last rite. Your last...initiation.\" \n\nThale looked at him. Then he looked at me. \n\nHe knew what it was he had to do. \n\nHis mask clicked and whirred as it retracted, forming into a collar around his neck. His face met mine as Rehoboam chuckled. His eyes glittered with pure delight. I snarled. \n\n\"You're insane,\" I said, clenching my hand. \n\n\"Am I?\" Rehoboam asked. \"You're the one who put yourself to the fighting against the only thing that could save humanity from the coming darkness. A darkness you don't even begin to comprehend, that you can't even imagine. A darkness we have struggled to prepare ourselves against for one thousand years.\" He thrust his finger at me. \"That is the dedication of the Gentek Hegemony, Venn of Stumble! That is what drove us -- and what drove Lord Drak. What I taught him! When he wished to cry, to give up, to die, I pushed him with trial after trial, test after test, and through each, he became stronger! More powerful! More dedicated to his task.\" \n\nThale began to walk towards me. \n\n\"Protect...you want to protect humanity?\" I asked. \"From what? Not being blond?\" I snarled. \"You just want to control people.\" \n\n\"People must be controlled for their own good,\" Rehoboam said, settling down. \n\nMy threshold blade pinged. The jet engine was prepped. \n\nCHANCE \n\nI triggered it. The jet engine roared to life, the threshold blade formatting as it shot towards Rehoboam. He didn't even twitch. He simply smirked as something twisted the blade around him -- then sent it skittering off onto the ground. It tumbled and caught up against the big dude's foot. He pressed his foot against it and chuckled. \n\n\"Gravitic shields,\" Rehoboam said, sounding bored. \"Really now, did you think I would fall for that old trick?\" \n\nThale stepped up. His hand grabbed onto my shoulder and he shoved me down. I gasped as my knees hit the floor. Looking up at him, I saw his face set. His jaw tight. \n\nI refused to beg. My lips locked. \n\nRehoboam laughed. \"Please? I can read him, you know.\" His skeletal finger tapped his withered temple. \"To a trained Knight, even the subtlest of human expressions can be seen like an open book. The twitch of the jaw. The tightening of skin across the temples. The flick of those ears.\" He said ears like it was a foul curse. \"A thousand micro-expressions, giving me a single kinesthetic portrait. Lord Drak could no more lie to me at this moment than he could turn air into lead.\" He leaned forward in his throne. \"At this moment...Drak Thale...is readying himself to strike down the woman that he loves...for the man that he loves.\" \n\nThale looked into my eyes. \n\nRehoboam's sneering voice filled my ears. \"Beg, child. See if he spares you.\" \n\nThale's threshold blade roared to life beside my ear. \n\nAnd something zipped past my eye. \n\nThe humming sound of the electromagnetic containment field buzzed in my inner ear. My cybernetic arm tingled. I had almost forgotten I had it. But the knuckle sensors -- more finely attuned than my old ones -- detected an infinitesimal weight on them. \n\nThale and mine eyes met. \n\n\"Do it,\" Rehoboam hissed. \n\nThale nodded to me. \n\nI turned my wrist and closed my fingers around the monomolecular wire that had draped itself across my knuckles. I found the transparent aluminum cap-ring and slid my finger through it. Thale spun and thrust out his palm. I twisted and yanked. The nearly invisible monomolecular wire that Thale had launched from the butt of his threshold blade twisted in the air. The weighted end -- whose impact had been concealed by the sound of Thale's threshold blade triggering -- popped free and looped around Emperor Rehoboam's torso. \n\nThe Emperor's eyes widened. \n\nThale set my blade flying into his palm, triggering it. \n\nI yanked. \n\nBlood misted the air as the weighted end of the monowhip flew towards me, sheeting thick, black-red blood. My palm closed around the weighted tip, drawing the shimmering wire taut between my arms as my back pressed to Thale. \n\nThe Emperor stood. \n\nStumbled. \n\nFell. \n\nHis head and legs struck the ground at different times. \n\nAdoran gaped at us. \n\nWeapons snarled to life. \n\nThe Hegemony Knights charged -- and time seemed to slow. \n\nBattle joined. \n\nVIOLENCE \n\nThe first knight to rush at me had a buzz saw on a stick. He swung it at my head. I ducked, thrusting my arms up, then twisted the monowire around his wrist. His armor flared with a crackling, yellowy light, but I reached into his armor's controllers and twisted, hard. I only needed to disrupt the program for a few seconds for the electromagnetic shield to collapse. I jerked and twisted the monowhip to the side. His arm fell away, the buzzsaw skittering along the floor, sending up a spray of sparks. \n\nI stood and twisted to the side as a the shirtless knight with a pure white blade thrust at me. The blade buzzed along the floor and I scrambled to my feet, jerking backwards. The buzzsaw Knight clutched at his wrist as blood pumped onto the floor. \n\nTo my left, Thale had my sword and his sword in both hands -- the two blades of Wotan Hohmann. He slashed, catching the red sword of one of the other knights, then shoving him backwards as, with his golden sword, he impaled a Hegemonic Knight through the chest. The Hegemonic Knight clutched at Thale's wrist and staggered backwards, yanking Thale's blade from his palms. Thale sprang away from the huge guy with the cybernetics. The huge guy had a green threshold blade that shaped into the form of an ax. He used it with the same brutal, hewing strength. He batted Thale's first parry aside, then nearly cut Thale's arm off -- Thale only saved himself by throwing himself backwards and rolling to his feet. \n\nMeanwhile, I was desperately evading the shirtless fucker and the armless fucker. The armless guy had managed to stop the blood flow -- Christ knows how -- and had grabbed up his buzzsaw with his remaining hand. He swung in curving arcs, driving me towards the shirtless bastard, who slashed his sword at me. I twisted left, then right. Then, desperately, I thrust out my hand, my senses reaching out. I felt not only the gravitic engines. I also felt defensive turrets, concealed behind the walls. \n\nThe armless fucker grinned. \n\nThe turrets came to life. \n\nI snapped my attention to the gravitic engines and adjusted the floor under our feet. The shirtless fucker skidded on his feet between me and the turret. Slugs the size of my fucking fist smashed into his back. Then exploded. The man blew apart in chunks and the armless guy gaped as I sprang forward, grabbed him by the shoulders, then flung him into the wall. The same gravitic engine I had used focused a point of gravitation that was as tiny as it was powerful about five inches away from the armless guy's guts. \n\nTidal forces ripped him into a spray of red and flesh and bone, the screaming sound cutting off far later than it should have. \n\nThale lifted his blade -- my blade -- and the ax-edge of the huge Hegemonic Knight bit into it. It was smashed down to his knees -- and in a daze, I started to stumble forward, looking for a weapon. But then something shot past me. \n\nThale was knocked to his knees as the immense Hegemonic Knight shoved forward. The Knight lifted his threshold ax upwards, then brought it whistling down. It crashed into a blue-white sword. Adoran stood above Thale, his knees locked, his body trembling. He snarled. \"Not today, Lord Vorsoth,\" he growled. \n\n\"Insolent-\" Lord Vorsoth's eyes flashed. He lifted a digitigrade leg and kicked out -- the blow slamming into Adoran's gut. Adoran skidded. \n\nI thrust out my palm. \n\nThe clave turret hammered. \n\nVorsoth lifted his hand and triggered the internal explosives before the massive slugs could strike his armor. Shell casing bounced off his armor and he roared in fury. But Thale got to his feet and ran to Adoran, crying out. \"Adoran!\" The turret ran dry on bullets, or stopped responding to my calls. Either way, Vorsoth lowered his arm and advanced towards me. I held out my hand -- and my sword's jet flared, shooting it towards my palm. \n\nI caught it and rolled tot he side as Vorsoth brought his ax smashing down onto the ground. Sparks flew. Then a gravitic field punched my back, shoving me back to my feet. Vorsoth hewed at my throat with his ax, but I managed to get my sword up in the way. The impact of blade on blade sent me skittering backwards and his free hand grabbed onto my throat. He lifted me up, snarling. \n\n\"You killed the Emperor, you vermin, you-\" \n\nThale leaped onto Vorsoth's back, his threshold blade in his hand. Vorsoth dropped me -- and twisted his arm effortlessly, the joint reversing without a pause. His fist cracked into Thale's arm, and Thale's threshold blade went flying, his glove tattered. Thale cried out, then yelped as Vorsoth grabbed onto his chest and swung him to his front, hefting his threshold ax. \n\n\"You traitor filth,\" Vorsoth growled. \"You had everything! Everything!\" \n\nThale grinned. His eyes flickered. \n\n\"Mutant. Filth.\" \n\nHe slashed up with his claws. The razor sharp tips caught some of the wires connecting Vorsoth's optics to his spine. Sparks flew and Vorsoth dropped Thale with a bellow. Adoran charged into his side, plunging the tip of his threshold blade deep into Vorsoth's gut. Vorsoth remained standing, sparks and oil spraying from his side. I leaped up, landed on Adoran's shoulder, then pushed myself with a gravitic impulse and my own legs, flipping and slashing at the same moment. \n\nI landed. \n\nVorsoth's head thunked to the ground beside me. \n\nHis body remained standing -- still spraying a slow stream of frothing, bubbling oil. The spray slowed. Stopped. Became a silent drip along the left, metallic leg. \n\nSilence hung in the air -- the only sound being the faint click click click click of the emptied turret, still trying to fire its empty magazines into the open air. I stood, panting heavily. Adoran limped. Thale's cheek had a large, bleeding wound slashed across it. \n\nVorsoth's body crashed to the ground. \n\nPROPHECY \n\n\"Wow,\" I said. \n\n\"Yeah,\" Thale's voice was ragged. \n\n\"You're welcome,\" Adoran said, sheathing his blade. \n\nWe both looked at him. \n\nAdoran shook his head. \"I fucking hate prophecies,\" he said. \"They're a lazy storytelling trope and-\" \n\n\"You...you did it?\" Thale whispered. His voice still sounded like his throat had been sandpapered. \n\n\"Huh?\" I asked. \n\nAdoran chuckled. \"When he triggered his blade...I...\" He tapped his hilt. \"Magnetic launch for the monomolecular filament. Weighted tip.\" His lips skinned back as he grinned. \"I hoped that it'd land near enough to Venn to do some good.\" \n\nI looked at Thale. \"W-Were you going to...but you nodded!\" \n\n\"I was going to cut you free and hand you your sword,\" Thale said. His grin was sheepish. \n\n\"What the fuck do we do now?\" Adoran asked. He looked at the throne. At the halves of Emperor Rehoboam. \n\n\"Come with me,\" I said, stepping forward. My heart was racing a mile a minute. I looked at Thale, then at Adoran. \"Come with me, I...we can go. We can join the rebellion. We can-\" \n\n\"No.\" \n\nThe single word cut across my speech like a sledgehammer. My knees felt weak. My shoulders slumped. My heart thudded in my chest as Adoran looked at Thale -- Thale, who had spoke. He was looking at the throne, walking slowly towards it. My guts knotted. No. No. No, no, no, no, no. I wanted to run, to scream at him. But Thale turned back to face the two of us. \n\n\"The Hegemony isn't just an Emperor...\" Thale said, his voice husky. \"There are Praetors and admirals and commanders and...there's an entire command aparatus, and they will just reincarnate the Emperor. He'll lose a week, two, of memories.\" \n\n\"What!?\" I stepped forward. \n\n\"The Emperor has digitized memory stores,\" Adoran said, quietly. \n\nI blinked again. \n\nThale held out his hand. The ampule flew to his palm, thrown his way from where it had been dropped, careless, earlier in the battle. \n\n\"No...\" I whispered. \n\nThale plunged it into his neck with a snarl. It dropped and he wobbled, then turned to look at me. \"Adoran,\" he said. \"We need to give her cover to get to the corvette, to escape. Then...we doctor the records. She killed the Emperor, the High Lords...\" \n\nAdoran nodded. \n\nMy eyes brimmed with tears. \"Thale-\" \n\nHis hand cupped my cheek. His eyes met mine. \"I will see you again, Venn. I will. I will.\" \n\n\"When?\" I whispered. \n\n\"When...\" He leaned in close. \"When the Hegemony has nothing. When there aren't even ashes to be born from.\" \n\nI leaned in. \n\nThe moment we shared was something sweeter and stronger and more fleeting than anything I'd ever felt. I can't even begin to describe it -- it was more than the press of lips, the feeling of a tongue. It was the thundering heartbeat of battle. The sizzling, the crackling of blades. The shadows of this dark, brooding place. His hand gripped my back. Then he drew back -- and his face was slick with sweat. He looked feaverish. He grinned, weakly. \n\nThen the door opened. We all spun. Guilty. Like kids with the hands in the cookie jar. \n\nREUNION \n\n\"...wow...I leave you guys alone for five fucking minutes...honesty!\" \n\nThe voice that cut across our conversation was familiar. \n\nThale's face went slack. \"...Quah?\" \n\n\"Enriquah!?\" Adoran's voice was even louder. He nearly dropped his sword as, through the door, came a red and black skinned woman, flanked by...Techne. And Mal. And Rossk. They hurried into the room, the woman twirling her threshold blade. ",
        "She was the Hegemonic Knight I had killed. \n\nShe beamed at me. \n\n\"Hey!\" she said. \"No hard feelings about the arm, right?\" \n\nI gaped at her. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "action",
        "adventure",
        "sci-fi",
        "fantasy",
        "monster",
        "romance",
        "space opera",
        "twist"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/to-walk-the-constellations-pt-12"
}