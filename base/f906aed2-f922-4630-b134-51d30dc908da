{
    "title": "Ho, Ho, Hoes, Merry Chrissymas",
    "pages": [
        "Editor's note: this story contains scenes of incest or incest content.\n\nThis is my entry in the Winter Holidays 2019 contest, so please vote if you read the story.\n\nThis is the romantic story of two college students, who, not having met each other before, are about to become step-brother &amp; step-sister, yet find themselves too attracted to each other in a short time, and the conflict that causes.\n\nAuthor reserves all rights, other than those ceded to Literotica.\n\n----------------\n\nThe Ford F-250 pickup pulled up in front of the dormitory at the college we both attended. One brake squeaked, in protest. He climbed down, and as he cleared the nose of the tall, four-wheel drive pickup, I was impressed with his nice looks; sort of wavy light brown hair above slightly sharp features, and with warm eyes. Under baggy jeans and a winter jacket, he appeared to have broad shoulders and slim waist, and looked to be close to 6 feet tall.\n\n\"Chrissy?\" he asked, his breath steaming in the cold air.\n\n\"Toby, my hero, I presume?\" I said.\n\n\"Toby, yes. Hero, I doubt.\"\n\n\"Well,\" I replied, \"I...rather we...would not be getting home for Christmas and the wedding without you!\"\n\n\"Without my boss loaning me his pickup, neither would I. Ready to load up?\"\n\n\"Yup...Anyway, it is really nice to meet you,\" I said, as I grabbed my bag and roller case. His voice sounded a bit familiar, but I couldn't think of from where.\n\nHe opened the rear doors of the crew cab and put my bags next to some wrapped presents and his luggage. Then, Toby said, \"Yeah, certainly is nice to meet you, too. We had better get rolling. It is a 5-hour drive with good weather, and we may not have that much longer.\"\n\nI climbed up into the front seat, using the grab handles, and fastened my seatbelt. It was nice and toasty, with the heater going as strong as it was. Toby climbed in the other side, did his seatbelt, and put the truck into drive. He drove out of the school's entrance, and headed west.\n\nWanting to break the few minutes of quietness that followed, I thought I would catch him off guard and learn how he responded, \"Didn't know I was gaining such a cute brother.\"\n\n\"Uh...thanks...I...well...thought you looked rather nice yourself, considering you are wearing a flannel shirt, and that parka.\"\n\n\"This old thing!?\" I giggled, \"I just threw it on.\" I really liked the grin that grew on his face from my humor, as he kept his eyes on the traffic ahead. I also liked his glances, when I took off my winter cap and shook out my hair, which reaches about halfway down my back.\n\n\"So,\" I opened, \"how much of a surprise was it when your mom said she was getting married, and on such short notice?\"\n\n\"Pretty surprising. I mean, I knew she was dating...your dad...while I was in my freshman year. And even this year, I still had not heard her say how serious it was getting, even at Thanksgiving. Then, I got the phone call two weeks ago that they are getting married on Christmas Eve! I wasn't expecting that at all.\"\n\nI shook my head slowly, and added, \"Yeah, me too. Dad had been telling me how happy he was, though he never hinted that he was going to pop the question. But a wedding just two weeks later! What is that about?\" I chuckled, \"You don't think your mom is...well, you know...?\"\n\n\"NO!\" Toby barked, \"Well...I hope not! Suddenly gaining two sisters is strange enough for an only child. A third new sibling, and a baby, would be a real shock.\"\n\n\"Oh, so I am strange, am I?\" I taunted, with a smile.\n\n\"You know what I mean.\"\n\n\"Yeah,\" I chuckled, \"I do. I mean, me, 19 years old, college freshman, and now I am getting a brother...well, brother-to-be at this point. \"To be...Toby\" I said, in thought, \"I think I just got a nickname for my new brother...2B...yeah, 2B!\"\n\n\"Great. Fifteen minutes, and I have a nickname already. Girls!!\"\n\n\"What!?\" I laughed, \"Guys have all kind of nicknames for each other! With your looks, I would think you have had plenty of dates, and would know that women like nicknames, too. Get with it 'bro'!\"\n\n\"Haven't really had too many dates. Been studying a lot, and working, and well...I feel like a klutz when I try to talk to a woman I don't know. Plus, I get turned down, kinda often.\"\n\n\"Wait 'til to you meet my older sister, Tara,\" I snorted, unintentionally, \"She dates a lot...and talks a lot. I bet she can give you a lot better sisterly advice than I can about approaching women. I am the quieter of the two of us, relatively.\"\n\n\"I assume Tara will be there, too?\"\n\n\"Supposed to be,\" I said, \"but with this weather front moving in, who knows. I am glad you could borrow this beast, because my little Toyota would certainly not have made it, if it were caught in a big snowstorm. When the airline cancelled my flight, I wasn't sure what I was going to do, until dad called and told me that they were trying to get my 'new brother' to drive me and him home, after your flight got cancelled, too.\"\n\n\"Yeah, my mom called, and I told her that my car was not up to challenging the weather,\" Toby said, \"I am just lucky that the restaurant owner, Sal, who I work for, is such a great guy and let me use his older truck. And my mom told me that the airlines have cancelled 60% of the flights into here, because of the cascade effect of flights not wanting to get caught out there.\"\n\n\"My dad said that the chance of rebooking and flying out in time for the wedding was near zero,\" I said, \"But, hey, this way I get to meet my new bro, 2B, a day early. This trip could be pretty cool, getting to know each other. On that note, where do you work and live?\"\n\n\"I work at Maria's Italian Ristorante, down at 10<sup>th</sup> Avenue and Milwaukee Street. Sal is Maria's husband, and they are great people. They treat me like they are a second set of parents, and I live in a duplex rental property they have. They let me have it really cheap, as I work for them at the restaurant, as well as maintain the rental property. And I get the garage for my car.\"\n\n\"What kind of car is it?\" I asked, being something of car gal myself.\n\n\"1969 Ford Torino Cobra. I restored it myself in high school.\"\n\n\"Is that the dark green fastback, with the hood scoop, which I have seen around town, and with that rad deep rumble?\" I asked, a bit excitedly.\n\n\"Yeah, that's it. You most likely saw it around the athletic center, as I usually drive it there so that I can leave from swim team practice to go straight to the restaurant.\"\n\nCOOL!\" I exclaimed, and meant it, \"Stick or automatic?\"\n\n\"Stick,\" he said.\n\n\"Really Cool!\" I said, in a bright voice.\n\n\"You like cars, huh?\"\n\n\"Yeah,\" I responded, \"especially those cool muscle cars of 60s &amp; 70s!\"\n\n\"Well, it is a 428 ram air, with a 3.50 ratio limited slip rear axle, and power steering &amp; brakes. Got it from a neighbor who had it stored it for over 20 years.\"\n\n\"I would love to get a ride in it someday!\" I said.\n\n\"You drive stick?\" he asked me.\n\n\"Yup!\" I chirped.\n\n\"Maybe I will let you drive it sometime...when it's dry outside,\" he chuckled.\n\nI bubbled, \"WOW, that'd be rad! I think I am going to like having a brother, more than I thought!\"\n\n\"Well, I already think you are a pretty cool sister-to-be. Does your sister, Tara, look like you?\"\n\n\"More like the swimsuit model version of me,\" I said, slightly dejectedly, \"I am 5-6, and she is two inches taller, all of it in her legs. Big blue eyes, instead of my gray, smaller ones. About ten pounds heavier, and I swear all of it is in her tits. Dirty blond instead of my 'yet-another' brunette. And a smile that doubles as a night light.\"\n\n\"I detect a little jealousy,\" 2B told me, with a chuckle.\n\n\"Yes, but I love her,\" I sighed, \"It is just that I want to put a bag over her head...well, her whole body, really...when I meet a guy that I like, because if she walks up, I know I am going to lose him once he sees her. She doesn't steal them from me, but it is hard to get them to refocus on plain me, once they watch her shimmy and jiggle with every step. I have to do jumping jacks to get a decent bounce out of my tits.\"\n\n\"I am beginning to feel like a brother already, since you are comfortable discussing your tits with me,\" 2B chuckled, \"So, they do they bounce when...?\"\n\nI caught the mischievous implication of the unfinished sentence. Then I said, in a chastising tone, \"Getting a bit personal, with your new 'bro' status, are we?\" After a pause to watch 2B squirm, I added in mock-arrogance, \"And it depends on the guy!\"\n\nToby chuckled, as he replied, \"Anyway, I think women put too much importance on their breast size.\"\n\n\"Oh yeah?!\" I exclaimed, \"You try being a female for 15 minutes in the presence of Tara, Queen of Tits, and watch her suck the attention out of the room. And it most of it doesn't go to her face! Sorry bro, but your gender is a majority of mammary-entranced fools, who are compelled to follow wherever their dicks point them.\"\n\nHe laughed this time, \"Tell me what you really think, sis!\"\n\n\"Sorry,\" I said, and took a deep breath, \"I get a little worked up over men, sometimes. Don't get me wrong, I am no virgin, nor lesbo, and I like to get off on a good dick, like I had...never mind that. Anyway, it is just that there are too many guys that are jerks. They will spend an hour trying to impress you, get you drunk, and get you to leave with them. And, yet they will not even spend five minutes trying to understand who you are, other than that you can control your gag reflex, have melons to grab &amp; squeeze, and that you are willing to let them use that 'fun box' between your legs!\"\n\n\"Uh...so no boyfriend, I assume?,\" he said cautiously, and I realized my ranting had gotten carried away, again, and made him uncomfortable.\n\n\"Sorry for the diatribe,\" I sighed, once more, \"and 'No', no boyfriend. I have already gone through two of those unfaithful beings in my first year at college. The last one was history after Thanksgiving vacation, as that 'turkey' goosed two 'hens' at the same time, while I was back at home for 5 days.\"\n\n\"Want me to beat him up for you?\" Toby offered.\n\n\"You would do that for me, 2B?\" I asked, brightening.\n\n\"No...I am not a fighter,\" he said \"But I thought you needed the support, sis.\"\n\nI chuckled, \"It's the thought that counts, as they say. Enough about my sex life. I won't ask about yours. So, tell me about your mom.\"\n\n\"Hmmm...\" he started, \"Well, I think you will really like her. She is strong, competent, and fair-minded, yet sweet, without being sappy. She is an attractive natural blond, and about Tara's height, I imagine. And she has a great sense of humor, with a ready laugh.\"\n\n\"And your dad?\" I asked.\n\n\"He can take a flying leap, as far as I am concerned,\" 2B said, sharply.\n\n\"Ouch!\" was my immediate reply.\n\n\"He is a traveling sales manager for a large paper products firm. He was gone an awful lot of the time on, supposedly, business travel. Turns out, he played my mom for a sucker, as what he really had was another wife, not legal of course, and 2 young kids, on the other side of the state. Mom finally stumbled across his second cell phone, and all the messages and calls that were on it. She filed for divorce and locked him out while he was 'out of town'. She got nearly everything, here, in the settlement. Bigamy charges are pending for him.\"\n\n\"Sorry, but Go Girl!\" was my only response, given my shock.\n\nAfter a pause, I continued, \"You should really like my dad. He has been there so much, for Tara and me, since we lost mom. Ovarian cancer, caught too late, and which spread too rapidly. Three years ago.\" I dragged my fingers under my eyes, before they overflowed.\n\nWith a slight sniff, I added, \"She was 45 years old. I miss her so much...but please know that I have nothing against your mom marrying my dad, as he really needs the companionship, especially now that we, Tara and I, are both in college now. By the way, Tara is two years older, and a senior.\"\n\n\"I am so sorry about your mom,\" Toby said, quietly, and reached over and squeezed my hand.\n\n\"Thank you, that was nice of you...bro,\" I said quietly, also thinking that his touch seemed somehow familiar. I tapped a few times on my cell phone, and then held it out at arm's length, facing Toby, \"This is the last picture I took of her.\" I held the phone out, until Toby was able to glance at it.\n\n\"Lovely woman. I can see your resemblance.\"\n\n\"Her name was Christine,\" I said, sadly.\n\n\"Are you named after her, Chrissy?\"\n\n\"No. For some odd reason, my name is Chrisilla,\" I responded, \"Although, mom may have been pulling my leg, she said that she &amp; dad were watching '101 Dalmatians' when she was pregnant, and that the name just came to her when she heard the name 'Cruella de Vil'! I just go by Chrissy.\"\n\nHearing him laugh, I demanded, \"What are you laughing at!?\"\n\nHe replied, between deep chuckles, \"I, somehow, just had a vision of your parents holding you as a baby, with that huge head of black &amp; white hair that Cruella has!?\"\n\n\"Okay, wise, guy,\" I chuckled, \"that is funny. And my full name is, Chrisilla Marie Harrison. Yours?\"\n\n\"Tobias Nathaniel Wittendon.\"\n\n\"Sounds a little pretentious,\" I said, \"Sorry, but it does...like it ought to have 'the third', or 'esquire' following it.\"\n\n\"Tell me about it. That is why I am just 'Toby' everywhere, expect on legal documents.\"\n\nAfter a lengthy pause, when we had to slow for rubberneckers which were checking out a flashing police car on the shoulder, I asked, a little coyly, \"So, Tobias, can your randy little sister ask you for a small favor?\"\n\n\"UH...what did you have in mind...randy sister-to-be?\" he asked, and the caution was apparent in his voice, though he had an odd smirk.\n\n\"Hey!\" I said, sharply. \"Clean up your thoughts!\" I laughed. Then feigning shyness, I said, \"Think you can tell me the guy's name on your swim team, who really packs his Speedo? I heard some girls talking about him.\"\n\nToby answered me brusquely, \"Don't know his name...big team...not in my events.\"\n\nI saw his face turning red, and thought maybe he didn't like the guy, or was jealous, so I had better change the subject.\n\n\"What are you studying at college?\" I queried.\n\n\"Statistics\"\n\n\"So, I have a brainy bro?\" I remarked, in an upbeat manner.\n\n\"Me? No! I just like numbers and patterns, and it ought to be a versatile degree to find employment with. What about you?\"\n\n\"Gerontology,\" I replied, waiting for the typical question of \"What is that?\"\n\n\"Is that the study of aging or the elderly?\"\n\n\"Brainy bro gets it right.\" I chirped, \"That is better than most people, who have no clue.\"\n\n\"And what is Tara's field?\"\n\n\"Marketing &amp; Sales. She seems to think her looks and gift of gab will open a lot of doors,\" I scoffed. I pulled out my cell phone, tapped, and then unbuckled my seatbelt. I saw his slightly curious look as I slid over the bench seat, to be next to him. Then I showed him a photo of Tara, in a bikini.\n\nI saw him glance at my phone several times, before he responded, \"Looks like she could be quite successful!\"\n\n\"Too much importance on breast size, huh?\" I chuckled, \"I can see the drool, 2B! You studying her 'statistics'?\"\n\n\"Well...I just want to remember what my other new sister looks like.\"\n\n\"Yeah, right,\" I chided, and then added \"Let me show you a picture of my dad.\"\n\n\"If you want to stay here, please buckle up.\"\n\n\"OH! He cares about his sister, Chrissy. How sweet,\" I said, in a cutesy tone.\n\n\"Just don't want to get a ticket for unbelted passengers, mam\" 2b said, and I recognized the humor of his purposely flat delivery.\n\nI pulled the seat/shoulder belt out of its reel, and searched between us for the receiver buckle. Out of female habit, I glanced at his lap as I clicked the belt into place. I quickly turned my face forward, and then turned towards the passenger side, to hide the blush I felt blooming. My shocked mind screamed, \"Oh My F'n Gawdddddd...He must be thinking of Tara! His man snake is visible, even in those baggy jeans, and it is Halfway To His Knee!! And he is that guy on the swim team!\"\n\nI sat there, quietly trying to rid my mind of the thought, \"2B is carrying around a pussy pleaser of epic proportions!\" I still felt the blush, and stared out the passenger window.\n\n\"Are you going to show me your dad's picture?\" His voice seemed to boom in my ear.\n\n\"Uh...oh, yeah...here it is.\" I had to tap my iPhone twice to wake it back up, as it had gone to sleep while I was stupefied.\n\n\"I can see that my mom would find him attractive,\" he said, and then added with a slightly concerned tone, \"You okay? You seem rather distracted and a little flushed.\"\n\nI cleared my throat, quietly, then answered, \"Sure...fine...Just realized I am a bit tired. Mind if I borrow your shoulder for a little rest?\"\n\n\"It's all yours.\"\n\n\"Okay if I turn on the radio?\" I asked after a moment, already tired of the droning tread noise of the truck's tires.\n\n\"Go right ahead, as long as it is not hip-hop/rap.\"\n\n\"Ugh, no!\" I responded, and turned on the radio, and chose a C&amp;W station.\n\nI leaned against his solid shoulder and closed my eyes. My mind started to drift, as I took in his distinctly musky, yet dusty, scent...rather outdoorsy in character. With a strong male scent in my nose, my thoughts wandered back to last night.\n\n\"That party had gone nothing like what I had expected. The classy hotel room downtown the other five girls from college had rented for their hen party was really nice. I bet a couple of those girls came from money. I am glad they invited me, even as a late addition, when they found out it was my birthday.\"\n\n\"They had said it was just going to be drinking and games, in Christmas costumes. I suppose I should have known better. Then Amanda announced she had hired a stripper. Why had I been so uneasy with that I idea? It would just be a man dancing, and getting down to his skivvies, with sexy gyrations. Why did I think that those internet videos of a stripper with a room full of women, sucking &amp; fucking, had to be staged, and not real. I certainly had believed they were just porn actresses dressed like office workers.\"\n\n\"I remember my relief when Amanda said the stripper's agency had said that they had a conflict, and would probably not be able to find another stripper to fill in. With the loss of entertainment imminent, the drinking got heavier and Regina was the first one to strip off her elfish blouse &amp; sports bra, and make advances toward the two others. Amanda and Cindy had already gone down to the lobby to buy more soda for mixers.\"\n\n\"Michelle &amp; Sharon joined in, going topless, and got involved in kissing and groping each other. Regina got down to those sheer bikini undies. Sure did not look like the first time these three had done this. All their intimate activities and the sexual smells were making me somewhat aroused, when, suddenly, they realized that I was not involved.\"\n\n\"God! I felt so foolish, with my drunken squeals, but I had never done something like that before, and they took everything off me except my mask and elf hat. I liked how envious they were of how big and long my nipples were. Then it was just plain erotically weird when Sharon started sucking my nipples, and Regina started rubbing my pussy. It was so odd to feel turned on, yet so embarrassed.\"\n\n\"I was unsure whether to feel disappointed or relieved when Regina &amp; Sharon's attentions were cut short by the return of Amanda and Cindy. I remember how fast I closed my legs when I saw the Santa that they had brought with them. It was Amanda that squealed, 'Look what I found!' I quickly had to throw my loose clothes over my nudity.\"\n\n\"Though I really had no experience with them, I thought strippers always brought music with them. This one had none, and he looked stunned at the abundance of semi-nude women, or fully nude in my case, with the exception of my mask &amp; hat. When told to dance, he just made weak, little gyrations.\" ",
        "\"But, Geez, that moment when Regina slurred, 'Fuck the dancing, we're here for the meat!' and dropped in front of him and quickly dropped his Santa pants, and all the belly padding. I saw his stunned face, even under the beard, and then heard Regina's exclamation of 'HO-LEEE SHIIITT!! Girls, Santa brought us an early present! LOOK AT IT!'.\"\n\n\"God, when I dropped my eyes to where Regina was pointing, I did not believe it. Stripper Santa was packing a penis with a huge mushroom, and it extended clear out of the leg of his boxer briefs. I watched his monster jump in excitement, and strain at his shorts. I was not the only one who gasped at the sight of it. \n\n\"I wonder why he exclaimed 'WAIT!' But, it didn't matter to Regina, and she worked his boxer briefs over and around that monster dick, as Amanda and Sharon jumped behind Santa to playfully restrain him and to remove his Santa Jacket. I remember Amanda asking, 'How does the beard come off?' and heard Santa say, 'Doesn't, glued'.\" \n\n\"Watching Regina perform a two-handed stroke on him was erotic. Seeing the skin slide back &amp; forth over that thick shaft was bad enough for my urges, but when her mouth went half way down on it and gurgled, I knew what that wetness, and that tingling dance, in my hips was telling me. But I wasn't going to screw a guy in this public of a setting. Or so I thought.\"<br ><br >\"I never knew my pussy could have anxiety pains, from just trying to imagine how something that big could possibly fit in me! But the pains were there when I saw that monster spring free. That slight upward curve, with the end as big as a small child's fist, and at the end of 8-9 inches of rigid shaft. I was beginning to believe that those internet videos were not staged or fake.\"\n\n \"Of course, it was Regina who said 'Okay, who is first to test the fit of Santa's present!' After that, things seemed to get blurry. I can remember the chant of 'Birthday Girl, Birthday Girl' as they grabbed me, took my clothes, and spread my legs open. Santa was being pushed towards me, as the girls slid me to the end of the armless couch, and I stared at his nice, narrow-hipped body and the sight of his monster pointed at me. Regina spit on it and spread her spit over the end, and then I felt it touch me.\"\n\n\"I know I told them 'It won't fit!', and remember the wicked laughter I heard. Stripper Santa pushed a bit, and I felt how Regina's lips had looked, when she had gone down on him, as her lips had been stretched to their seeming limits. I must have grimaced at that huge intrusion, as it felt so uncomfortable and created such an extreme pressures inside of me! Yet, I had to have it...had to know what it would feel like pumping me.\"\n\n\"I heard the chant of 'More! More!' The discomfort and pressure went deeper, and I remember sucking in a huge breath. I knew I made some whines or groans, when he pushed again, and I finally looked down to see him about halfway into me. I will never forget that first stroke he took. The momentary relief, yet disappointment, as he partially withdrew. Then the return of the pressure, yet less discomfort, mixed with more pleasure as he slowly slid back in, slightly deeper.\"\n\n\"It was amazing that every stroke was more good than bad, compared to the previous stroke. When I felt his pubic hairs tickle my shaved lips, I was stunned and looked down to see him buried in me, and realized that nothing had ever made me feel so simply 'Fucked' before. His cock was dominating me in no uncertain terms, and I felt such a need for him to do it!\"\n\n\"It was after he started regular, deep pumps, that I finally paid attention to something beyond myself, and heard his huffing breaths, and shallow groans. I felt him rub my small breasts, and grasp my hard nipples, and then grip my small waist. I looked down and saw his right forearm had small tattoo of a shark, a couple inches above his wrist.\"\n\n\"I was in such bliss! My legs were starting to shake. My moans &amp; whines were regular, and growing. I did not want to orgasm for an audience, but I knew it was inevitable the way his strokes were displacing my insides. I felt dazed, and at the crest of all I could feel, when I felt him expand further, and he grunted, 'Where?!' The chant rang out, 'Stomach, on her stomach' and my whole body clenched in ecstasy, just before he slid out of me. 'Cum, Cum!' they chanted. I was looking, unfocused, at the ceiling, when I felt those multiple warm splats on my shaking body. Oddly, I remember feeling that cool air moving up my vagina.\"\n\n\"All I remember from there was drifting into sleep, while I heard a chorus of \"Me Next, Me, Me! It was at about 2 AM when I awoke, with no Santa in sight, but I found those five naked, snoring girls, a couple with their legs still spread wide, and with creamy strings &amp; drips adorning their naked bodies. What a night, and what a sensation that big cock was! It redefined the term 'fucked' for me. \n\n\"I doubted that Toby's man snake could be that big. No! He will be your brother! Fight that thought Chrissy! He should be off-limits to me! And Tara, too!\"\n\nI continued resting against 2B's shoulder, replaying the sensations of some of last night's sensual moments, when I felt him nudge me.\n\n\"Chrissy\" he whispered, \"Wake up. You are making some funny sounds and twitching.\"\n\nI lowered my face to hide my blush. I wasn't going to tell I had never fallen asleep, but had only been lost in my thoughts.\n\n\"I am seeing a few snowflakes out there,\" 2B said, and I looked up enough to see out the windshield. They were tiny flakes, and I looked at the truck's outside temperature display, which said \"24\u00b0F\", and that confirmed we should be seeing small flakes, not wet, slushy ones.\n\n\"Still looks like pretty light snow,\" I said, \"and thanks for the use of your shoulder.\"\n\n\"Anytime,\" he said, \"That must have been some dream. Care to tell me what it was about?\"\n\n\"Oh...uh...just, sorta, was thinking about my birthday party last night,\" I fumbled.\n\n\"It was your Birthday! Congrats! Too bad I missed the party. I bet I would have enjoyed it.\"\n\n\"Oh, I am sure you would have enjoyed it, 2B,\" I crowed, \"It ended up with six drunk, naked, horny women!\"\n\n\"Really!? I'm sure I could have...did you say six, and it was your birthday?\"\n\n\"Yeah, six, and my birthday, \"I replied, \"Why is that number making you blush?\"\n\n\"Well...uh...just not sure how I would have handled that many drunk, horny women...if I had been there.\"\n\n\"Oh, I am sure you would have been the hit of the party, bro,\" I chuckled, \"as you have that amazing...those amazing big shoulders. Anyway, good that you weren't there, as we did not know each other then, and something might have happened that would have been embarrassing, since we are to be brother and sister, right?\"\n\n\"Right, but as you had only women there, nothing happened, like that, anyway,\" I heard him say, followed by a big sigh.\n\n\"No, no one brought dates, there. Just the stripper that one girl hired.\" I chuckled, once again, \"We had fun with him.\"\n\n\"A stripper?\" Toby asked, seeming anxious again, and turning red.\n\n\"There you go blushing again,\" I teased, \"you have a problem with girls having fun with a stripper...and you don't have a second job as a stripper, do you?\"\n\n\"Uh...no...and I just work for the restaurant. It's my only job.\"\n\n\"So, what did you do last night?\" I asked.\n\n\"I just helped out the restaurant...they were short-handed.\"\n\n\"Well, please thank Sal &amp; Maria for me, for the loan of the truck,\" I said.\n\n\"Sure...I am a little dry. Mind if we stop at the next exit? I think there is a Starbucks.\"\n\n\"Great!\" I chirped.\n\nAs we pulled out of the drive-thru, I was sitting back on the right side again, as we needed the center seat folded down for access to the cup holders. Toby had a big Pike Place coffee, just black, and I sipped on my Caramel Frappuccino.\n\nAfter a couple miles, 2B asked me, \"What do you like to do, besides study and play with strippers?\"\n\nAfter I finished sticking my tongue out at him, I smirked, yet snarled, \"I did not hire the stripper, and that was the first time! Don't be rude.\"\n\n\"Okay, I am sorry...I take it back; you don't have a stripper addiction.\"\n\n\"Damn right,\" I said, \"though I think I would not mind dating the one from last night, as I really liked his moves! The other part of your question is that I play field hockey for the school team, plus I like volleyball and badminton, as well as photography , car shows, and going to the movies. And you?\"\n\n\"With studies, swim team, maintaining the duplex, and working at the restaurant, it doesn't leave me that much time. I also like car shows and movies, plus I like to do some fishing.\"\n\n\"My dad likes to fish, for bass and walleye, and I have gone a few times\" I commented, \"Maybe the three of us can fish together some time?\"\n\n\"Sounds great to me.\"\n\n\"Oh,\" I suddenly remarked, \"did your mother tell you that we are all staying at my place...well Dad's place?\"\n\n\"Yeah, she did mention it. I will have to cross town, at some point, to our place - mom's place that is - and pick up some clothes, and bring them to 'your' place. Sheesh, this is going to take some time to get used to this whole mine/yours/ours thing.\"\n\n\"Sure is,\" I added, \"I keep catching myself when thinking of 'ours', as what is your family's and my family's, will be OUR family's soon. Also, 'MY' dad -- Tyler is his name, in case you haven't heard it - mentioned that he and your mom - yes I know her name is Evelyn - are looking for a new home in town which is big enough for all of us.\"\n\nI continued, \"My dad's home is only three bedrooms, so he told me that the likely plan is that you stay in Tara's room, which has a queen-size mattress, and Tara and I stay in my room, with twin beds...not that that is important to you. There is a Jack &amp; Jill bath between the two rooms, so we will have to work out the schedule for that.\"\n\n\"Let's make a deal,\" he said, \"If we just say 'dad', then that means Tyler. If we just say 'mom', that will mean Evelyn. If we want to refer to Christine, then that can be preceded by 'my or your' mother or will include some other qualifier. My birthfather can just be referred to as 'Asshole'! And, as far as using Tara's room, I'm sure that it will be fine for me, as long as Tara's room is not pink and frilly.\"\n\n\"Deal on the names. And pink &amp; frilly is not Tara's style,\" I chuckled, \"but you may have to put up with a 'Magic Mike' poster or other hard-bodied male images.\"\n\n\"I will try not to be envious.\"\n\nI smirked, \"I bet you can hold your own, swim boy.\"\n\n\"You can forget it! I am not posing for a poster to go in my sister's room!\"\n\n\"Spoil sport!\" I declared, \"And there is a bit of ego in there, I see.\"\n\nI heard his chuckle, before he said, \"I see having you around will not be dull!\"\n\n\"And you haven't met Tara yet,\" I mused, and noted he was blushing again.\n\n\"Enough about my sex appeal.\"\n\n\"Okey dokey!\" I giggled, \"So, now I will ask if your mom works, and if so, where?\"\n\n\"She is the health administrator for the county schools. She has mentioned she just reached the 20-year level with them, and may consider retiring so that she and Tyler -- that is still strange to say -- can travel.\"\n\n\"That would be great for them. How are the roads doing?\" I queried, \"Also, don't we have a rest stop coming up soon?\"\n\n\"Roads are still good. I don't feel the snow sticking yet. And, I think you are right. In fact, I think I see the blue sign for a rest stop coming up. The coffee is getting to me too, so I will pull in.\"\n\n\"Thanks,\" I replied, \"You want to grab something from the vending machines, or stop for a fast food meal in a bit, or what?\"\n\n\"Not very appealing, but I would say the vending machines will get us back on the road the soonest. With the storm, we should buy extras in case the snow slows us down later. I think this rest stop even has packaged sandwiches. What is your choice of meats?\"\n\nI wrinkled my nose, \"Just no ham. Beef, turkey, or egg salad are tolerable in those bland sandwiches.\"\n\n\"Beef or turkey for me. Here is the exit. I guess the state policeman behind us needs a break, too.\" Then Toby suddenly exclaimed, \"DAMN IT! He turned his lights on.\"\n\n\"What did you do?!\" I said, anxiously.\n\n\"Nothing, unless he...make that a she...thinks ten under the speed limit is too much with this weather,\" he said, as he brought the truck to a stop in one of the parking slots for the big rigs.\n\nI watched Toby lower the window as the somewhat attractive, but bulky, blond officer pointed down.\n\n\"License, registration, and insurance documents, please,\" the S.P. officer said, and Toby replied that he had to get the wallet from his hip pocket and get into the glove box.\n\nI watched as he pulled out his wallet, and then handed the license and insurance cards to the officer. He started to reach for the glovebox, but stopped and looked at the officer, to which she nodded. Toby stretched across in front of me, the cuff of his shirt sliding up his right arm from the extension required.\n\nI looked as he popped open the glove box, and then yelped loudly, \"SHIT! It was YOU that Fucked Me Last Night!!\" In shock, I slowly turned to Toby, but the officer's tense face caught my attention, as she had moved back several steps.\n\n\"I'm sorry to scare you officer,\" I said, nearly yelling as a big rig drove past, \"nothing to worry about. It was just a big surprise for me to discover, now!\" I watched the officer slowly step forward, her eyes searching the interior of the truck.\n\n\"Miss, was this...intercourse...consensual?\" the officer asked cautiously, as a beet-red Toby handed her the registration for Sal &amp; Maria's truck.\n\n\"Yes, entirely!\" I exclaimed.\n\n\"Then, may I see your ID miss?\" the officer asked.\n\n\"It is in my bag in the back,\" I replied, \"May I reach for it?\" and saw the officer nod her approval. She watched me carefully as I reached back over the seat, grabbed my bag, withdrew my everyday clutch purse/wallet, and then had Toby hand her my driver's license.\n\n\"Pardon my curiosity, Miss Harrison,\" the officer said, \"but are you saying it was only just a moment ago that you realized Mr. Wittendon was the person that you had engaged in intercourse with, Last Night?\"\n\nI nodded, and saw Toby still trying to hide his red face as brushed the snow off of his left arm, where it had accumulated from the open window.\n\n\"I am not entirely comfortable leaving you two without some clarification,\" the officer announced, \"How is that you can realize...only now...who the man was that was with you last night?\"\n\n\"The shark tattoo on his arm,\" I said, nervously, \"I just saw it when he reached for the glove box.\" I saw a curious expression remained on the officer's face. \"Oh!\" I added, \"Last night, he was dressed as Santa Clause, with a beard that was glued on.\" I saw one of her eyebrows rise up.\n\n\"Is this correct, Mr. Wittendon?\" the officer asked, and I saw Toby nod, sheepishly, in reply. She continued, \"You two seem unusually nervous. Is there a problem with this relationship?\"\n\nToby cleared his throat, \"In two days, we become step sister &amp; brother, to each other.\"\n\nI saw the officer restraining a smirk, \"And who does this vehicle belong to?\"\n\nToby replied, \"My boss, who loaned it to me when the weather cancelled our flights.\"\n\nShaking the snow off the documents she held, the officer examined them again, and then handed them all back to Toby. \"Well, Mr. Wittendon and Miss Harrison, it seems you have enough problems to deal with right now, so I will not give you a ticket with a fine for expired license tags. I will just issue this Demand for Repair notice, which the vehicle's owner must comply with within 30 days to avoid a significant penalty. You two have a safe trip, and stay warm.\"\n\nWith that, the officer let a small smile break free, and added, \"Good Luck!\"\n\nToby closed the window and we both sat there in silence for at least a minute until the officer turned off the flashing lights, and moved forward to park in a space marked for cars, before she headed into the rest room.\n\nToby burst out, in rapid fire speech, \"I'm sorry Chrissy...I didn't know who you were!...I'm not a stripper!...it was all a mistake!...I never would have...\"\n\n\"SHUT UP, 2B!\" I barked, to break his frantic trance, while restraining my own smirk, \"What's done is done. Let's get to our biz here, grab some food, and get back on the road, as we will have plenty of time to talk. Pull into a parking space.\"\n\nI looked at him, still beet-red in color, and saw him holding his breath. Clearly he was holding back a flood of apologies, which he nervously wanted to blurt out, as penance, but he kept them in check, as he moved the truck forward to a parking space.\n\n\"Use the men's room, and meet me at the food machines,\" I dictated, and grabbed the empty Starbucks cups, opened the cab door, and stepped out.\n\nI looked over my shoulder, and saw his posture of shame, as he walked about 10 feet behind. I tossed the empty cups in the trash. At least the snow had let up for a bit, and there was little accumulation yet.\n\nI thought what a mess our relationship could become. I also thought I would like 2B's big dick in me again, and then chastised myself for letting that idea back into my consciousness.\n\nOnce relieved of excess fluids, I met him at the vending machine. Thankfully, the only sold out item was the ham &amp; cheese sandwiches. I looked at him, and he mumbled, \"Two roast beef &amp; cheese...please,\" as he quickly glanced away.\n\nI replied, \"I want two regular Fritos, and the Nature Valley Sweet &amp; Salty bar, please,\" and pointed at a nearby machine. He moved away to it.\n\nI wanted one turkey &amp; cheese, and one egg salad sandwich. I started pushing buttons for the four sandwiches. These new machines were great; they even let you add free packets of mayo/mustard/spicy mustard/Tabasco, allowing two per sandwich purchase. I stuffed the packets and my N.V. bar in my jacket pocket, and grappled with the four triangular packages of sandwiches, as I joined Toby.\n\nI asked, \"When you are done, can we get some sodas? I would like a Diet Coke and a lemonade.\" I watched as Toby nodded, then moved to the soda machine. He gently placed my Fritos, and his potato chips on top of the stack of sandwiches I held, and then purchased four sodas, which he stuffed in various pockets of his jacket. He pulled out his truck keys, and then took the chips bags off the pile of food I held, and nodded towards the truck. I gave his droopy 'bad dog' face a little smile, and nodded my agreement.\n\nHe opened my door for me, and mumbled, \"Sorry.\"\n\nWhen we closed the truck cab, and had set the food &amp; drinks in every available tray and cubbyhole, I said, \"Toby, it is not really incest, now or after the marriage, as we are not related by blood. No harm was done. Aren't we adult enough to handle this? Why do you have such a problem?\"\n\n\"Because you will be my sister, and because last night I was just pleasing six horny girls and myself. Knowing I was enjoying being inside my sister is really confusing. And what my sister must think of me.\"\n\n\"Stop worrying about it,\" I encouraged, \"It was just an enjoyable piece of bad luck in timing. Don't concern yourself with it, okay. Is that all?\" I rolled down the window, and grabbed a plastic shopping bag the wind had wrapped around the rear view mirror on my side. \"Shouldn't we get back on the road? The snow is starting again.\"\n\nToby put the truck in drive, and merged us back onto the highway, without a word.\n\nI waited a few miles, then asked again, \"As I said, 'Is that all'?\"\n\nAfter a moment, Toby shook his head, slowly.\n\n\"Tell me, 2B,\" I urged, \"Let's work this out.\"",
        "Toby kept his eyes on the road, and sighed heavily, and then paused for a bit longer, before he said, rather dejectedly, \"I know this does not make sense, as we never spoke and I never saw your face, but I wanted to see that birthday girl again, and maybe date her. There was just something in the way you felt, the way you responded in delightful little sounds, the way you wiggled, arched, &amp; shook, and the way I seemed to perfectly fit in your wet...love tunnel, that urged me to find out who you were, so I could hopefully do it all again, and better, like I really meant it.\"\n\nI sat there silently, stunned. I looked at the side of his face, and said in a hush, \"Well...I did not see that coming.\"\n\n\"And now it is all gone: All the fantasies I have had since last night about getting to know the birthday girl as a person, and what an erotic partner she could be, are gone. They are lost to being family.\" He continued driving, with a somber look parked on his face.\n\nI sat there for a bit, contemplating, before I spoke, quietly \"Then I suppose it is only fair that I should tell you, and I will be more direct, that you redefined what I thought being fucked was. Despite the initial discomfort I felt, and the soreness today, that ultimate fullness of you inside me, and the simultaneous triggering of so many nerve endings, was something I simply did not know was possible, before last night. I, too, wanted to find out who you were, to know you, to have you fuck me again, and do it when I was sober. Anyway, at least we will have that memory.\"\n\n\"Yeah,\" he said, in a disappointed tone, \"we will have that, at least.\"\n\n\"And you did make my tits bounce!\" I smirked. I was relieved to see a brief grin from him.\n\n\"So,\" I sighed, deeply, \"What do you want first; roast beef &amp; cheese, or roast beef &amp; cheese?\" That finally shook loose a chuckle from his sad mood. \"Mayo &amp; spicy mustard, OK?\" I added.\n\n\"You choose,\" he said, with another chuckle.\n\n\"Two of the same sandwiches, and two of the same drinks, and Dr. Peppers - Yuck! - at least you got two different types of potato chips.\" I chided.\n\n\"That was the last bag of wavy chips they had, so I had to choose another,\" he said to me, and gave a little laugh, with a smile.\n\nI was glad to hear that laugh, and opened his sandwich and chips packaging, and set it on center console, which was the back of the folded center seat. I opened my egg salad sandwich, a Fritos bag, and my lemonade.\n\nInappropriately, I chuckled with my mouth full, and loudly mumbled, \"I think we gave that officer a great story for the locker room!\"\n\nHe covered his chewing mouth, as he slightly choked a laugh, \"I can imagine there will be a number of different scenarios that they can come up with to string those few facts together!\"\n\nSwallowing, I questioned, \"Think we should tell 'our' parents?\" with a deep chuckle.\n\n\"About the state police? I suppose. About your birthday party? Hell, no!\"\n\n\"Just asking\", I tittered, \"I mean, how would I explain that I was pretty drunk at a party, was stripped and fondled by three other girls, fucked by a man I never met, dressed as Santa, and packing the biggest schlong I have ever seen? And I liked it!\"\n\n\"You think at 19 years old, 'our' dad would still try to ground you?\" he chuckled.\n\nI laughed, \"After Tara, I think my...our...dad gave up trying to punish us to get us to avoid sex. I think he would just give you and me a very worried look, and walk off rubbing his temples.\"\n\nLaughing, 2B said, \"How about we tell him we are swearing off fucking relatives for a New Year's resolution!\" The relief of tension was making us silly over stupid humor.\n\nI was laughing pretty hard now, \"I can tell Dad that I want the same thing for Christmas that I got for my birthday!\"\n\n\"Do I have to wear the Santa suit again!?\" Toby laughed strongly, and slapped the steering wheel.\n\nI put down my sandwich, and gripped by ribs, as they were starting to hurt from laughing. Yet, I added, \"We can tell them we were just doing research for their honeymoon!\"\n\nToby weaved on the road a bit, as he laughed so hard. I thought it best to bring it down a bit, for safety sake, \"Okay, okay...enough already!\" I cried.\n\nLaughter slowed to heavy chuckles, which ebbed to sporadic chuckles...the kind that just when you think you are done, another chuckle leaks out.\n\nFinally catching my breath, \"Then it's agreed. It is our secret.\"\n\n\"A big secret!\" he said.\n\n\"You're the 'BIG' part of our secret!\" I chirped, and fought to not start laughing again.\n\nStill chuckling, Toby added, \"So, a man's size is important to you, but Tara's boob size shouldn't be so important to men?\"\n\nI chuckled back, \"Boobs are aesthetics. Big dicks have a functional purpose!\"\n\n\"Well, your big, tall nipples felt great. I am sorry I did not get to taste them. Is that aesthetics, too?\"\n\n\"Hey!\" I proclaimed, \"That is enough of that talk! We agreed we are not doing it again...even if we would like it, too. From here on out, we are family.\"\n\n\"The family that 'blah-blah-blahs' together, 'blah-blah-blahs' together!?\"\n\n\"I am not filling in those 'Blah blanks'!\" I told him, quickly, \"So, stop it. Get your mind off me, and tell me how it is that, if you are not a stripper, that you ended up at that party?!\"\n\n\"It would be less embarrassing to talk about your tits.\"\n\n\"Stop it!!\" I scolded, and then laughed, \"Let's get serious here, and you tell me how you how you went from Italian restaurant employee, to swingin' Santa, and pleasuring -- how many was it anyway -- coeds?\"\n\n\"Hey I am not greedy,\" Toby exclaimed, and then switched to a reserved voice, and quietly said, \"It was four,\" as he pulled out to pass two semi rigs.\n\n\"Which other three?\" I grinned.\n\n\"Okay, it was you first...and the best. Then I think you can guess it was Regina next. That gal is ferocious! But she just stayed prone on the couch afterwards, humming. After a short break, it was Cindy and Sharon -- the bobbed blond, right? -- they handled me, but said that they were not even going to attempt my monster. Then it was Michelle, I think, the tall redhead. She passed out; not sure if that was me or the booze. Amanda was last, with Cindy and Sharon getting her ready with lots of female foreplay. After that, I was spent, in all respects, except that I got $180 in tips!\"\n\n\"And you had never done this sort of thing before?\" I smiled, wondering how this story would play out.\n\n\"Alright, here it is,\" he said, \"At the restaurant, I do all kinds of things, including busing, occasional table service, unload deliveries...well anyway, Sal said that they had a big catering job at the hotel -- your hotel -- and the clients wanted Santa to drop in. Mario, Sal &amp; Maria's son, tripped and fell, and got a gash in his leg from a broken platter, so off to the ER he goes.\"\n\n\"So you stepped in as Santa?\" I said.\n\n\"Sal asked, and I agreed, hesitantly, even though I was not too comfortable with that 'jolly, ho-ho-ho' routine. The food was already in route, so I just needed to show up, play happy, and whatever else the important client wanted.\"\n\n\"I am with you so far,\" I said, \"but then what?\"\n\n\"So, I get to the lobby, check in with Sal by phone, and he tells me that the clients, husband &amp; wife, were having a fight -- over the husbands flirting -- and that jolly Santa wasn't needed any longer. I am turning to leave, when I am grabbed by a lovely blond and a pretty Asian...\"\n\n\"Amanda and Cindy,\" I interjected.\n\n\"Right...So, suddenly I am being told I was late, and to follow them, and hurry. I guessed that they were with the catering deal. But whatever, they were hot in their Santa's helper type outfits, so I thought I would go along, without questions. I never thought I was there for any other reason, until they pushed me through the door, and you know how it went from there.\"\n\n\"Guess you thought you had hit the jackpot!\" I chuckled.\n\n\"I was so stunned at what I saw, and wondering what was going on, that my mind rather froze. I mean, I have only had sex with a woman in private; never in any kind of group.\"\n\n\"Well, when I woke up at 2 AM, it appeared all your 'customers' were quite satisfied!\" I laughed, \"But you were gone.\"\n\n\"I had to return the Santa outfit, and get the truck for the trip today. I got there just as Sal &amp; Maria were finishing closing up.\"\n\n\"My 2B is so versatile,\" I teased, \"Santa, stripper, lover, driver, swimmer...and he finds time for college!\"\n\n\"There will not be a repeat performance! It is college, restaurant, and swimming for me, in that order.\"\n\n\"So, faced with multiple, attractive, naked, horny women again, you will just politely walk away?\" I laughed.\n\n\"I don't want to get a 'reputation', you know.\"\n\n\"Wise, too; what a brother,\" I grinned, \"now, finish your sandwich &amp; chips. We have, what, two hours left, if we are lucky?\"\n\n\"About 120 miles, so two hours, without delays is about right.\"\n\nWe worked on our bland sandwiches. We were both crunching the last of our chips, dug from the corners of the little bags, when we stopped chewing to listen to the weather alert that had interrupted the C&amp;W music. It said heavy snow could be coming in a couple hours.\n\n\"Yipes!\" I proclaimed, and then I did my best, yet poor, imitation of Woody from Toy Story's mechanical voice, \"Ride like the wind, Bullseye!\"\n\nToby sped up, and shouted quietly, \"YEE HAH! Giddy up partner.\"\n\nI grinned, \"So you like Toy Story movies, too?\"\n\nToby was just finishing chewing the last of his sandwich, and looked for some place to put the wrapper. I picked up the rescued grocery bag, and held it open for him. He dropped the wrapper in, and did his Woody imitation, \"You're my favorite deputy!\"\n\nI gave him a big smile, and added the empty soda cans and chip bags to the grocery bag turned trash bag. I released my seat belt and placed the bag in the back, and then folded up the center seat, and slid over next to him, and buckled in.\n\n\"Your deputy has to be by your side,\" I said, ending with a giggle.\n\nHe gave me a quick glance with a big smile, and then answered, \"I love the Toy Story movies. My mom, too. We would watch them together, and mom likes to comment on the toys she remembers, as she and her two older brothers had most of them, some handed down from my grandparents.\"\n\n\"Us, too!\" I exclaimed, \"Tara and I would curl up between Dad and...my mother.\" I paused to compose myself, before I added, \"It was so much fun for us to listen to our parents chatter back and forth about their memories, and to laugh at funny lines that were put in the script. We grew up on those movies.\"\n\nToby's right hand slid off the wheel, and softly landed on my jeans, just above my knee. \"Sorry you miss your mom so much. Under different circumstances, I wish I could have met her.\"\n\n\"I think she would have liked you,\" I said quietly, and rested my left hand on top of his. I slowly stroked my index finger between his index and middle fingers, \"Under different circumstances, we wouldn't be future brother &amp; sister, and we could have...\"\n\n\"I have thought of that, too, more than once,\" he interjected, \"But it is what it is, right?\"\n\n\"Right\" I sighed, heavily. Doing my poor Woody voice, \"This town ain't big enough for the two us!\" I felt his hand squeeze my leg. I sat, watching the snow, which was getting a bit thicker, and thinking the current C&amp;W song of loneliness cut a bit too close to whatever the emotions were that I was feeling.\n\nWe drove on, no words between us for a while. My mind argued that I should move back to the right seat. \"Keep my distance, as it would be easier to be brother and sister that way.\" But there was such a contentedness sitting next to him, thighs sharing our warmth. Knees occasionally knocked as the truck jostled us over scattered ridges of snow. I missed the hand that had needed to return to the steering wheel. I sank my shoulder and head against him.\n\n\"Tired again?\" he asked.\n\nI shook my head in small motions.\n\n\"Maybe, just over an hour to go.\"\n\nI nodded against his shoulder.\n\n\"You okay?\" he finally asked, in a hushed tone.\n\nI straightened up, and mumbled, \"Sure\"\n\n\"You sound sad,\" Toby said, in a concerned tone.\n\nI sat there for a few moments, and then turned to look into his face, as he glanced at me. \"Think we could just pretend we won't be brother and sister, until we get there?\" I asked softly, \"I really would like some quiet memories of us, before.\"\n\n\"You don't think that will make it harder, later?\"\n\n\"Right now, I don't care. I am feeling, unexpectedly, emotional, and I just want to feel close to you,\" I divulged, \"unless you don't want to, as I don't want it to be harder for you, later, either.\"\n\nHis right arm moved from the steering wheel and wrapped over my shoulder, and pulled me against him. I sagged into him, and draped both my arms over his leg. \"Your arm feels wonderful, but it needs to be keeping us safe on these roads,\" I sighed.\n\nI rode that way for a while, sometimes stroking his leg, sometimes his arm, even running my fingers over his hand on the steering wheel. At one point, he lifted his elbow, and I leaned against his chest, which was about as far as I could go with the shoulder harness buckled. I stayed there for a bit and felt him breath, cough, clear his throat, and occasionally could make out his heartbeat between the music and the truck's rumbles. I heard the wipers come on, and later, a change in the pitch of the drivetrain.\n\nMy mind was a mix of emotions. There was the contentment from the closeness to this man that I had quickly come to enjoy, yet that I would soon have to give up, and there were memories of travel, where I had drifted to sleep as I rested against my mother, a loss already a reality. \"Why was loss all that I was suddenly feeling?\" my mind questioned.\n\n\"You want a tissue? They are in the glovebox.\" Toby asked softly, \"My shirt is getting a bit damp.\"\n\n\"Sorry!\" I exclaimed, as I sat up; only now aware of the tears streaking my face. I leaned to the right and got into the glovebox, and pulled out two tissues out of the small packet. One immediately succumbed as is sopped up my tears from under my chin to my eyes. The other tissue died mercifully, assisting me as I blew my nose.\n\n\"About 30 miles to go, and the snow is covering the roads now, so I am down to 40 MPH and in four-wheel drive.\"\n\nI just stared out the windshield for some time, and then I saw a lot of brake lights. We slowed to a halt on the interstate, with brake lights for as far as snow would let us see, and vehicles were only inching forward. \"Uh Oh! What should we do now, captain,\" I said, with a small chuckle.\n\n\"Good to hear that my matey has some cheer! Arrr...How about we break out the grub?\"\n\nI chuckled, despite my still mixed emotions, \"That sounded pretty dumb!\"\n\n\"It wasn't me, it was the parrot!\"\n\nI thumped my shoulder into him, and chided, \"Stop it! I'm already liking you too much. No fair being silly and clever, too!\"\n\n\"Too much?\" he asked, in a more somber tone.\n\n\"Yeah,\" I said, quietly, then adding hopeful to my voice, I queried, \"What about you?\" as the truck inched forward.\n\n\"I...\" Toby started, then paused, \"...have felt like we were friends - good friends - after maybe the first half an hour on the road. We just talked. No 'What do we talk about now?' between us. Sorta like we were catching up after being away from each other for some time. And I give you most of the credit for that.\"\n\nI kept my head down, and ran my fingertip along the top of his thigh, \"Just friends?\"\n\nI heard him sigh deeply, and then he placed his hand over my leg, and slowly slid it up until he stopped with his little finger pressing against my sex, under my jeans. I expect he felt the shiver that ran through me. His voice came out soft and lower than I had heard before and it made my shoulders &amp; neck tingle, \"I've already told you that I wanted to meet the birthday girl. Now I have, and I really like her. And I told you that I wanted to make love to her. But we know we can't because it would mess with the family dynamics. So I think 'friends' is the best option we have.\"\n\nThe traffic suddenly started to move, and slowly accelerate, until it bunched up again as we passed flashing lights surrounding a tractor-trailer rig laying on its side in the median. I wrapped my hands around his forearm as he drove past, and rested my chin on his bicep. I whispered, \"I guess I want what I can't have.\" I had forgotten about the \"grub\" he mentioned, as my mind wandered through envious thoughts of \"What if we were not to be brother and sister?\"\n\nIt was about 10 minutes until he asked, \"Is this the right exit?\" he asked.\n\n\"Yup.\" I responded, \"Get off, go north to Central, and then west for around two miles. I tell you where from there.\"\n\nAs we got off the interstate onto the off ramp, we came down to the stop sign, and slithered to a stop on glazed snow.\n\n\"Looks like the city streets have not been plowed yet,\" he commented, \"We will have to be particularly careful from here, as this snow has gotten heavy.\"\n\nHe followed my route, and after the two miles on Central, I said, \"Turn left at the Kwik Stop.\" Toby turned, and then I said, \"Down to Michener Street, and take a right.\" He turned, and I said, \"Third house on the left, 1712. Dad's Explorer is on the street, so you can pull into the driveway. I see he shoveled it already.\"\n\nThe truck thumped over the transition to the driveway, came to a halt, and the beast gave one exhale and then went quiet when Toby shut it off. He sighed, \"We made it!\"\n\n\"And now we have to be brother and sister for our parents,\" I sighed. It was about 4 pm, the day after the winter solstice, so with the snow coming down, the sky was a lifeless, darkening gray.\n\nWe put on our snow hats, and closed our coats, and slipped on our gloves. As we stepped out of the beast, the front door to the house opened, and out came dad with what appeared to be an attractive blond inside her fur-lined hood. I walked into my dad's outstretched arms, and received a big hug. I heard a sweet voice next to me, \"Tobias Nathaniel! Why didn't you call while you were on the road! We were so worried!\"\n\nMy dad spoke as he released me, \"Evelyn, dear, let's help them unload, and get out of this weather. Then you will have plenty of time for admonitions.\" We all grabbed things from the truck and moved into the house, and set them down.\n\n\"The Christmas decorations are new,\" I commented.\n\n\"Evelyn's handiwork...So why didn't you call either, Chrisilla?\" dad chastised.\n\n\"Because we had a lot to talk about...DAD!\" I said, with that final emphasis.\n\nDad laughed, and said, \"Evelyn, meet your precocious daughter, Chrisilla Marie. If the two were in trouble, Tara started it and Chrissy always knew how to skate the edges and negotiate a reduced penalty. Tara just played 'I am too cute to punish!'\"\n\n\"Great introduction, dad,\" I growled, and returned the hug Evelyn was offering.\n\n\"Tyler, this is Toby, my one and only troublemaker,\" Evelyn offered.\n\nToby chided, \"How much trouble was I, mom?\" and he shook dad's hand.\n\n\"The Wilson's lawn mower, and your favorite Tonka truck?!\" she chuckled.\n\n\"I was only eight then! Give me some credit. Twelve years since and nothing else has caught on fire!\" Toby appealed.\n\nDad chuckled, \"Toby, you are at the end of the hall, upstairs, on the left, in Tara's room. If you two would like to shed some layers, freshen and then come down. We can have drinks, and dinner is around 6 PM.\"\n\n\"Is Tara here?\" I asked.\n\n\"She is on the train and supposed to be here in the morning,\" dad answered.\n\n\"And we are crossing our fingers she will be here in time for the rehearsal at 2 PM!\" Evelyn added.\n\nToby and I hauled our bags up, and went into our rooms. Before he closed his door, I called in, \"You can have the bathroom first.\" I saw a hand give me a 'thumbs up', and I smiled as I went into my room. I changed into sweats and then heard a knock on my bathroom door, followed by a muffled, \"All yours.\"",
        "I used the bathroom, and then went down stairs to find everyone by the fireplace, with Toby in sweats even baggier than mine. I sat next to him on the couch. I did not think his sweats were very flattering, until I remembered what he was hiding with those loose pants. \"Form fitting\" was probably not in Toby's wardrobe, unless he wanted to draw a lot of attention to his manhood...which I doubted.\n\nHot buttered rum was set out for all of us. Evelyn spoke first, \"So how did the trip go. Did you two get to know each other?\"\n\nToby beat me, saying, \"The roads were decent until about an hour. We got a warning from the State Police, as Sal had forgotten to get the license renewed.\"\n\nI took over, saying, \"We found we have a lot in common and really enjoyed the trip together.\"\n\n\"That is wonderful,\" Dad chimed, \"such a great start to a new family.\"\n\n\"Well,\" Evelyn said, \"I hope we did not shock you with this rather sudden marriage, but we are not getting any younger, and we decided why wait? And we can get away from this weather and honeymoon in the Caribbean after Christmas, and after you go back to school.\"\n\nToby asked, \"So, no other urgency to get married?\"\n\n\"Like what?\" dad asked, with a quizzical look.\n\n\"Toby! Really!?\" Evelyn jumped in, giggling, \"Tyler, they want to know if we NEED to get married!\"\n\nDad roared with laughter, and it infected the rest of us in fits of chuckles as we watched him regain his composure. With lingering chuckles, he said, \"We have agreed you three were enough trouble! We do not intend to add to the family count!\"\n\nI bounced my shoulder against Toby, and snickered, \"See, I told you there was nothing to worry about!\"\n\n\"You!?\" Toby barked, \"You were the one that suggested it! AArrrr...\" and that was a far as he went before driving his fingertips into the sides of my ribs, which sent me falling onto my side in fits of giggles as he tickled me. Then he fell over, pinning me down with his weight, and that big cock pressing against my hip, while he said, \"You are right Mr. Harrison. She is a troublemaker!\"\n\nI squealed in hysterics, \"Get your big...get off me swim boy!\" When he let me up, I gave him a little shove, so that he rocked to the other side, before stopping upright. I looked at his grin as my chuckles tapered off, and hooked my arm under his while I fought to contain a big smile. \"My new brother!\" I announced.\n\n\"And you were worried they might not get along, dear,\" Dad chuckled, while Evelyn grinned.\n\n=+=+=+=+=+=\n\nAfter the hot buttered rum earlier, and the wine with the satisfying dinner, I was getting languid. Toby seemed to be in about an equal state, as we both struggled to be decent company for our parents.\n\nDad said, \"Before you fall asleep, I thought you would like your birthday present, Silla,\" and held out a present.\n\n\"Dad, that is my baby name!\" I scolded. Unwrapping the package, I found a new Canon camera with Digital zoom, and with a plethora of other features. I jumped up and trotted to my dad, and hugged his neck. \"Thank you, thank you, it looks fantastic. So much better than that little one I have had for years!\"\n\n\"I am not the only one you should thank,\" my dad whispered in my ear. I tightened my hug for a moment, and then let go of him. I stood and looked at Evelyn, who looked at me with obvious anticipation. I extended my arms, and she smiled and opened her arms. Hugging her neck, I said, quietly, \"It's wonderful. Thank you so much...mom.\" I let go, and saw the tear she quickly swept away.\n\n\"You will forgive me if I am too tired to study all it can do, tonight. I am gonna hit the hay,\" I said.\n\nEvelyn asked, \"You going to stay up Toby, or are you tired, too?\"\n\n\"I am actually bushed,\" Toby said, \"See you in the morning. Goodnight.\"\n\nAs Toby followed me up the stairs, I heard \"mom\" announce, \"So glad you two got here safely, and that you enjoy each other so much!\"\n\n\"Okay!\" we both chimed back to her.\n\nI stepped into my doorway, set my new camera down, turned, and held the door half closed. \"So 2B, you ever used a Jack &amp; Jill bathroom before?\" I saw him shake his head. \"Well, if you want to use it, knock if your door is closed. If it is open, lock the other door, as in my door, so that I can't walk in while you are unleashing that 'fire hose' of yours. Then, PLEASE, remember to unlock my door when you are done.\"\n\n\"Got it. Pleasant dreams, sis.\"\n\n\"You too, 'brother',\" I said, a bit dejectedly, and closed my door as I saw him walk away. I changed into a big night tee shirt and fresh cotton panties, threw the covers back, flopped onto the bed, and slung the covers generally over me. \"My big brother; it's not fair,\" I hissed at no one.\n\nI tossed and turned for a good half an hour before I gave up trying to fall asleep, and decided to take a bath. I got up, turned on the light &amp; fan, locked Toby's bathroom door, and turned on the hot water. I pulled off my night clothes, and clipped my hair on top of my head. I adjusted the temp, and waited for the tub to fill up further. I spent the time looking at myself in the mirror, wishing I had even half the tits Tara had. At least I wasn't flat chested. I had enough for men to know there was something under my tops, assuming they did not think it was padding.\n\nI stepped into the tub and settled in. Out of practiced habit, I started soaping my forearms, working back to my shoulders. Then I went across my chest and over my stomach. As I came back up across my chest, my movements slowed as a flash of memory of my birthday party hardened my nipples. I fought the memory away.\n\nI changed to wash my feet, then my legs. As I soaped my thighs, I knew what was between them would try to trigger the memories again, and I fought those memories as I washed my sex. Still, instinctively, I squeezed my thighs together tightly to fend off the simple desire that radiated within me, even though I kept any specific memory from being associated with that sensation.\n\nI washed my face, scrubbing hard, as if that could take away my frustrations. Then I laid back and soaked, forcing thoughts of Christmas and the wedding to the front, to block the undercurrent of desire that asked to be satisfied. Mostly successful, I found I was getting sleepy, and opened the drain. I stepped out and toweled, putting on my plush robe, twisting the sash to close it, and then unclipping my hair.\n\nI clicked off the light and fan, and then remembered my own instructions and found Toby's door handle in the dark and unlocked it. But then I didn't move. \"Why won't my hand let go of the door handle?\" I tried to step away, but my hand was anchored to this spot. Out of my control, the hand twisted the handle.\n\nThe 'click' that followed signaled the latch's release, and was another moment I knew I should back away. My hand disagreed and pushed the door open a few inches into his darkness. \"You have to be a good daughter and sister!\" the war in me cried. \"Yes, YES, be good!\" another part of me pleaded, and the hand reluctantly conceded, and started to close the door.\n\n\"Chrissy?\" That single word from his voice flushed all the current conflict away. I pushed the door open. \"It's me,\" I answered, now only drawn to the source of his voice. Knowing where Tara's bed should be, I stepped forward into the darkness, fingers ahead, probing. Finding the bed, my fingers searched over the blanket and found his covered legs, well away from the edge. I slowly sat on the bed, my back to him.\n\nI felt his hand search me out, and then slowly stroke my back through the robe, and under my hair. \"You all right?\" were the next words he said, in a soft tone.\n\n\"No\" I whispered. I felt his broad hand change to longer strokes down my back. \"I shouldn't be here!\" I declared, with an uncommitted voice.\n\n\"Why are you're here?\" he said, warmly, and I knew he was asking me to answer the question for myself. I patted the bed and found room for me next to him. I leaned over, with my back still to him, and found his bare arm now under my neck as my head sank to the pillow. I stretched my legs out, and my heels felt the knob of his ankle through the blanket.\n\nI searched through my conflict for something to offer in words. \"I like you too much...and sisters and brothers shouldn't be in bed, feeling what I am feeling...and what my emotions want is to tell this family crap to fuck off, and let me know what I can feel with this man, without restrictions.\"\n\n\"Then,\" I rather whined, \"the sensible voice on my other shoulder says I should be able to find someone else, who isn't family, to 'like too much'. Then the wanton shoulder whispers 'But Mr. Too Much is right here; warm, strong, funny, kind, and sexy.\"\n\n\"Maybe you are just dreaming, so this is just your imagination, and not real?\" his whispered words blew across my ear, \"Maybe you need to sleep on it? Get up, please.\"\n\nI whimpered at having to move, but stood up. I heard the blanket move, then his voice, \"Please come back, now.\"\n\nI climbed back in, in the same position with my back still to him, but with the blanket placed over me. I felt his arm move down, the blanket rise slightly along with his leg, and then he settled, spooning up behind me with his other bare arm draped over my waist. The change of numbers on the digital alarm clock caught my attention, and it now showed \"10:12\".\n\n\"Brothers should not feel this good,\" I said, rather sadly.\n\n\"Sisters should not smell this good,\" he countered.\n\nMy soft giggle felt inappropriate, with the conflict I felt.\n\n\"And, why is it that my butt is free of sensation?\" I asked, with a slightly coy tone, and which I felt guilty for using.\n\n\"Put it behind my legs,\" he answered, \"Your imagination does not need that kind of help right now.\"\n\nI grabbed the wrist of the arm resting on my waist, and shoved it under my robe until I felt his palm covered my bare breast. \"I am just imagining this, too!\" I giggled.\n\nWith a soft pet of my breast, he whispered, \"Go to sleep!\"\n\n=+=+=+=+=+=\n\nI awoke, vaguely remembering that I had just dreamed of Toby &amp; I on a warm beach in Bahamas. It was still totally dark in the room. His exhale across my lips began the realization that I had rolled over in the night, and that my robe had come loose. My left breast was pressed into the center of his chest, and it rose &amp; fell with his breathing. The warmth of his stomach glowed against mine. And I had thrown one leg up onto his naked hip, leaving me wide open, and in direct contact with the flaccid monster that had changed my thoughts of what sex should feel like, on my birthday.\n\nThe conflict in me was immediate. I should never have come into his room, but damn if I could find a muscle that was willing to cooperate in leaving. I stayed completely still, his breaths again crossing my lips. So close to his face, I realized these were lips that I had never kissed. I argued with myself that I could just touch my lips to his, this once, and then quietly and slowly slip away, back to my room. I wanted to believe I could do it.\n\nI slowly raised my head, a couple inches, and softly touched my lips to his. As soon as I touched his lips, I was possessed by them. I pleaded with my body to pull away, but then I froze as his breathing stopped, then started, and his body shifted slightly, gently rubbing his cock across my clit. My lips still on his, I stayed frozen as that sensation echoed through me, and I waited for my urges from it to subside.\n\nThose urges did anything but subside, when his cock started to grow, and slowly crept across my sex lips as it grew longer, thicker, harder. I was almost crying with the unfairness of this test to my resolve. I delicately let my lips slip away, as my own breaths were growing more rapid from the increasingly hard contact between my legs. I knew a man's nighttime erections could be rock hard, and Toby's was proving it. My wetness was pleading for it to, somehow, just slip inside me, like an accident that I could not have been predicted.\n\nI couldn't stop all the tears that leaked from my eyes, demonstrating my conflicted soul. I tried, desperately, to wipe the tears away, before they fell on him. In my urgency, my nails scuffed his cheek, and he awoke. I held my breath, hoping he would not recognize I was here.\n\nHis eyes slowly tried to focus on my desperate face, nearly nose to nose. I started to breath, gently, but then stopped again when his right hand slipped under the edges of my robe, and slowly ran down my naked left side, from my ribs to my knee, sending my nerves into a crisis.\n\n\"Still dreaming?\" he whispered.\n\nI couldn't immediately respond. When I finally assembled my words, I knew my fears were found, and I was lost to emotion, \"This is just my imagination!\" I cried, in a whispering breath. Fallen, I lunged at his lips, driving my tongue against his teeth before he could even open his mouth. I threw my concerns to the wind and rolled on top of him, whimpering at my resignation to lust and companionship.\n\nIf he had any such conflicts remaining, I pummeled them to dust with my sudden release of passion.\n\nHis mouth fell open, his tongue raced past mine, to dance on the roof of my mouth. His arms locked around my back and squeezed so hard that I had to struggle to take in my panting breaths. As he eased up, I got one arm out of my robe, before he dragged the robe down my remaining arm, yanked at where it remained trapped between us, and threw it into the darkness.\n\nI went to clasp his face, but when my arms moved, he grasped me tight against his firm body, and flipped us over, in unison. His kisses rained onto my lips, my cheeks, my neck, and then disappeared, only to reappear on my breasts. I openly wept as his wet lips surrounded my nipple, and then sucked it upward. With a last brush of his teeth, his tongue slid across my breasts, to the other nipple, which he rolled his tongue around, repeatedly.\n\nMy stomach heaved against his in spontaneous response, as my pleasure was announced with a stifled cry. Nothing in my life had ever been this intense, this urgent; pleading for never-ending pleasure, yet anxious for the release that had to be ahead.\n\nHis kisses traveled down me, my mind wanting neon arrows aimed at the ultimate prize. When he found it, my fingers grasped in desperation for everything within my reach, settling for two pillows crushed over my face to muffle the blessed agony his mouth brought to my sensitive folds.\n\nMy legs knew their place, and folded upwards, as I screamed my intensity into those considerate pillows. Then I felt him slide upwards, and my eyes urgently peered between the two pillows to watch his face move above mine. My mind celebrated what had to come next.\n\nI gasped at that first contact, as his hips searched for the perfect position to enter me. I was violently quivering as he found it. That first pressure, that opened me wide to his size, blew out my circuits, as I uncontrollably clenched around him in an unnecessary attempt to keep the giant intruder within me. My back pushed up, crushing my stomach against his, held there until my breathing returned. When my first breath was sucked in, an agonizing groan impaled the pillow on my exhale.\n\nI lay there, panting like an overheated dog, and stunned at the sensations my body was capable of producing. Just as I thought I might be able to form coherent thoughts, my mind leapt into overdrive, as Toby slithered his mass slowly into my depths. My mind reeled at the contrast to my birthday; that was a big, hot fuck; this was passionate sex at a level I would not have believed existed.\n\nInside me, I experienced a sensation of penetrating displacement that clouded all other thought. I was about to be lost to its depth, when I remembered an important issue, and my shaky voice gasped, \"Birth control, don't stop!\" Then I let myself fall, to sensation upon sensation of pressure at unbelievable depths within me, followed by anxious moments of emptiness, before it returned to dominate me again, and again.\n\nI barely noticed his fast, deep breaths, as my legs shook their signal of uncontrolled nerve firings. My head thrashed between my tolerant pillows, just as I felt him, impossibly, swell further. That was the last signal my body needed to push my cresting agony to the edge of consciousness, stars dancing under my eyelids. Everything that could clench, did. My mouth gasped for air like a fish long out of water. I had no air left to make any sounds with.\n\nA new warmth travelled inside me, as his deep moans penetrated what few senses I had left. My retracted knees slowly descended under their own weight. I wasn't just limp; no muscles would even respond to any request. They were either deaf or obstinate. An overwhelming contentment made my whole body glow. It felt like I should be lighting up the room.\n\nI finally felt his softness ooze out of me, before he rolled to my side. He whispered between huffs, \"Remember, you just dreamed this.\"\n\nWith ragged breaths, I cooed weakly, \"Must be my imagination. Nothing that amazing could be real!\"\n\n\"It is 3 Am. I will set the alarm for 5 AM, so that you can go back to your room. Okay?\"\n\nI sighed out all the air that I held, saying, \"Set it for never. I am not moving.\" I think I remember a kiss on my cheek.\n\n=+=+=+=+=+=+=\n\nI was startled awake by the alarm. \"No!\" I said, \"It is too early for never.\"\n\n\"Be the good daughter, and let them find you in your own bed. Don't forget your robe.\"\n\nThe floor seemed a lot farther away as my feet searched for it. Finally wobbling upright, I felt my robe as my toe hit it and I reached down and then dragged it behind, like a child's security blanket. I hung it up in the bathroom.\n\nI unrolled some toilet paper and wiped at my inner thighs. \"How many times did you cum!?\" I grumbled, as I unrolled even more toilet paper.\n\n\"Quiet!\" came a hushed shout from the darkened room, \"Just once!\"\n\nI fumbled into my night T-shirt, and panties. I started to stagger to my bed, when I turned, flipped on the bathroom light, and then returned to the doorway to Tara's room. I waited, and then a loud whisper emanated, \"You were amazing, gorgeous!\"\n\nI looked wistfully into the darkness, and whispered back, \"Toby, fuck the whole world, that can't be the last time!\" I switched off the light, and wandered into my bed.\n\n=+=+=+=+=+=+=\n\nI awoke for the second time that morning. This time it was because of the sun coming in the window. \"Guess the snow is over.\" I turned to get out of bed, and the soreness between my legs made my mind glow with the reminder of the utter happiness I had felt in the early hours of this morning. As I walked past my door, I heard voices downstairs. Entering the bathroom, I saw that Tara's door was open, and her bedroom was empty, at least of 3-dimensional men. The 2-dimensional ones on the walls still smoldered in their buff sexuality.\n\nI brushed out the explosion that had gone off in my hair, buzzed my teeth with the ultra-sonic toothbrush, and then noticed I smelled rather like sex. So I took a quick washcloth bath and added more appropriate fragrances to my body. In the same sweat outfit as yesterday, I thumped down the stairs to the smell of freshly ground coffee. I loved the smell of it when my mom had made it each morning. Now I could associate it with Evelyn, who seemed awfully nice, and perfect for dad.\n\n\"Look who is finally up! You must have slept like a log!\" Evelyn chirped, in too cheerful a voice for my bleary mind. \"Snow stopped?\" I asked.\n\n\"Sure did,\" dad said, \"And Toby is outside digging out my Explorer from where the snow plow pushed all that snow against it. Looks like we had nearly a foot of snow.\" I walked to the front window, and pulled the curtains apart. I saw a wad of snow fly over the Explorer. A hat and jacket rose up, then bent down, and another wad flew over the SUV.",
        "\"I need coffee!\" I announced, as a blatant request, while I walked back to the kitchen. \"Here you go,\" Evelyn said. \"Thanks...mom,\" I stumbled in reply. Toby came in through the garage entrance, shedding his bulky jacket, and hat &amp; boots in the mud room. \"Coffee?\" Evelyn asked. Toby nodded.\n\nHe walked up to me, and looked down, \"Morning...sis, how did you sleep?\" I saw that extra curl at the corner of his smile.\n\n\"Wonderfully...bro,\" I said, as I smiled back at him. Catching myself with my look staying fixed on his face too long, I glanced away and saw Dad &amp; Evelyn looking at us. I quickly sat at the breakfast table.\n\n\"What's the plan today?\" I asked.\n\nDad replied, \"Toby wants to drop by his house and pick up some clothes this morning. Tara's train is running a bit late with the storm, and it should be here just before noon. We could all grab lunch after we pick her up, and then the rehearsal is at 2 PM, at St. Julian's. Rehearsal dinner is at 6 PM at the Showdown Corral Steakhouse.\"\n\nEvelyn set down a wonderful smelling breakfast of eggs, bacon, and Danish pastries. She added, \"Better eat up, Toby. We need to leave for the train station at 11:40.\" \"Sure mom,\" he replied.\n\n\"Can I go with you, 2B?\" I asked.\n\n\"Sure\"\n\n\"2B?\" dad asked.\n\n\"Brother-to-be...2B...Toby...See?!\" I smiled.\n\nDad &amp; Evelyn both said, \"AAAaaaaah!\" and I could see their behavior was already getting synchronized.\n\nWe finished our breakfasts, and Toby said, \"Mount up!\"\n\n\"Hey, let me change clothes, pushy!\" I complained.\n\n\"Give you five minutes, then the beast rolls,\" he chuckled.\n\nI bolted from the table, and ran up the stairs, giggling. I did not even close my door, as I threw off my sweats, and grabbed underwear, and a flannel shirt and jeans. I stopped for a moment when I heard Evelyn say, from down below, \"You really like her, don't you son?\" Toby's response was, \"I sure do...as a sister, of course!\" I smiled to myself, and hurried to get dressed.\n\nWe got in the beast, and it grumbled its complaint at being started, and took its time producing any heat. As we backed out over crunching snow, and then drove away, I spoke up, and my frozen breath almost blocked his vision for a moment. \"I think our parents are getting a clue about us!\"\n\n\"It must be your imagination. And there isn't supposed to be an 'US'!\"\n\n\"You liked my imagination last night!\" I quipped.\n\n\"You were a firecracker!\"\n\n\"I can already imagine tonight!\" I sighed.\n\n\"Come on Chrissy. We gotta straighten up and fly right, especially if mom &amp; dad are suspicious. And Tara will be in your room, too. What are you going to do, say 'Excuse me sis, but I have to step out for a half hour so our new brother can pound me into the bed?'!\"\n\nI chuckled, \"Oh, you pound, do you?\"\n\n\"Get serious, Chrissy. I want you too, but that 'Fuck the world...' comment last night is not going to stand up well if we blow up our parents' new marriage with step-incest! You want them on their honeymoon arguing 'What are we going to do with those two? Well, it's your daughter. Yeah, well it's your son! Then they send you to a different college!'?\"\n\n\"Okay, okay, ok...,\" I pouted, \"I will stay in my own room tonight, and you in yours.\"\n\n\"That's better.\"\n\n\"When they leave on the honeymoon, we fuck like bunnies!\" I blurted, and then bit my lip to not laugh.\n\nStifling his chuckles, Toby responded, \"Is my sister always going to be this much trouble?!\"\n\n\"You still haven't met Tara. I may seem a lot better after you meet her.\" I said, mischief written on my face.\n\n\"Okay, here we are. I need to grab some clothes for school, plus dressier stuff for the dinner and wedding.\"\n\nWe went into the house, and the house looked right for Evelyn. In his bedroom. Toby was sliding hangers left and right, trying to decide what to pick, and tossing some on his bed.\n\nBehind him, I swayed and sang, \"TWwwwoooo.....BEEeeeeee.\"\n\nHe turned and groaned, as his eyes went to the ceiling, \"Chrissy, please stop! I am only human! Put those pretty titties away, and button your shirt! We can't, and we don't have time to, even if we could! Damn it, girl!\"\n\nI did my pout to his backside as he worked. He turned to drop a shirt and pants on the bed and saw my pout. He turned towards me, and stepped in front of me. I couldn't read his eyes.\n\nHe grabbed my waist, pressed us together, and drove our lips together like a train wreck. In shock, I absolutely melted on his lips. Then he abruptly released me, and I fell back onto his chosen clothes. I am sure my face registered the shock of that kiss.\n\n\"You're special to me, alright!!?\" he said quickly, \"Now can we get to work, here?\"\n\nI picked up an armful of clothes, \"Yes sir, captain,\" and walked out to the truck, with a silly grin glued on my face. Toby brought out a big armful, dropped some shoes, and then laid the clothes on the back seat, opposite the one's I had carried out. Putting the shoes in, he said, \"That's it. Let's get back and change.\"\n\nI behaved and sat in the right side seat, a proper sister distance away.\n\nWe got back to dad's house, and I helped unload. I was intentionally aloof to Toby, to put a point on being just a sister, in front of Dad &amp; Evelyn. We changed, even sharing the mirror and sink in the bathroom, and came out of our bedrooms at the same time. I looked at Toby, and his eyes suddenly went big, \"DAMN...sis...you clean up nice!\"\n\nI mimicked a curtsy, and as my eyes came up, I saw that his pants were not baggy, and anybody that paid more than passing notice was going to know he was \"packing\". All I said was, \"You look pretty sharp yourself, bro.\" He followed me down the stairs.\n\n\"Lovely,\" Evelyn said, \"You two will look good for any family photos we get today! Get your coats, and we will leave in few minutes.\"\n\nWe all loaded into the Explorer, and headed for the Amtrak station. We got there about 8 minutes before noon, and as we looked out the station windows, the train arrived. \"Must be a lot of people had the same idea,\" dad said, \"that train is packed.\" We stepped outside, looking for Tara.\n\nToby asked, \"Is that her cleavage coming this way, in the gold coat?...OW! Mom!\" Despite his humorous, but inappropriate, remark, he was correct. And in typical Tara fashion, she showed cleavage, even in freezing weather, and her flouncing breasts would have made Jello envious.\n\n\"Daddy!\" Tara exclaimed, and wrapped her gloved hands around his neck and gave him a quick kiss on the lips. \"And this is the lovely Evelyn! Welcome, welcome to the Harrison family. And this...\" she paused as she looked at Toby from shoes to eyes, \"must be Tobias! Well, well! Welcome brother,\" and she grasped Toby in full body hug, and gave him a slightly longer kiss.\n\nMy fists clenched in my pockets, and I growled, half playfully, \"Behave, sis.\" Dad tipped the porter, and grabbed Tara's bags and we headed off to the parking lot. \"Didn't mean to ignore my favorite sister!\" Tara said, and wrapped an arm around me.\n\nI elbowed her ribs, lightly, muttering, \"And your only sister, QT.\"\n\n\"Still my favorite!\" Tara quipped, \"And nobody has called me QT since I last saw you!\"\n\n\"And that is a surprise?\" I said, as I shook my head.\n\nGetting into the Explorer, Tara, Toby, and I were in the second row, with me in the middle. As we headed to lunch, Tara and Evelyn were chatting, though I caught Tara looking across at Toby's lap, and I knew exactly why. Then Toby leaned into me, whispering, \"What does 'QT' stand for?\"\n\nI whispered back, \"Remember in the truck? 'Queen of Tits'!\"\n\n\"And she expects other people to use that nickname?\" he whispered again.\n\n\"That's Tara...and she has been checking out how you fill your pants. Still think I am trouble?\" I grinned.\n\n\"Yes!\" he snickered, \"But I see she may give you a run for the title.\"\n\nWe unloaded at the Red Lobster, and Tara grabbed Toby's bicep and squashed her breast against it, cooing, \"Come sit by me, BIG brother, so I can learn all about you!\" I ended up at the other side and end of the table in the booth, sitting next to Evelyn, and listened to Tara's chatter about college, the wedding, and her life. I growled, inside, every time she talked to Toby, as her voice added lilting, sultry tones when talking to him.\n\nToby wasn't immune to her chest, but seemed to be \"keeping his distance\", verbally and smiled at me every so often, while looking a bit bored at Tara's domination of the conversation.\n\n=+=+=+=+=+=+=\n\nHaving finished the rehearsal, and the rehearsal dinner, and meeting lots of new relatives-to-be, we dragged ourselves back to Dad's house at nearly 9 PM. Everyone was tired and agreed to head to bed, and I helped Tara with her luggage. When we got into my room, Tara closed the door quickly, grabbed my hand, and sat us both on the bed I was using. \"So, tell me!\" she squeaked.\n\n\"Huh...what?\" I responded, and I was sure I looked as confused as I sounded.\n\n\"You have been glowing all day!\" Tara exclaimed, \"You have a new boyfriend in town or did you just party last night, and got some guy to put his 'glow stick' in you? And he did it good, from the look of you!\"\n\n\"NO!\" I barked, blushing like a stop light, judging by the sudden heat in my face.\n\n\"Which? No boyfriend or no party? Tell your sis!!\" Tara pleaded.\n\n\"Neither!\" I said, not realizing the conclusion she would draw next.\n\n\"Neither?\" she repeated, \"Then....NO! Not your almost brother. I felt and saw the load he was carrying down there! Was that temptation too much?!\"\n\n\"No!\" I lied, wishing I had been more emphatic with that reply. Scrambling for a way out, I said, \"It was my birthday. Some girls back at college threw me a party and hired a stripper.\"\n\n\"You did the deed with a stripper! That's my sister! He must have got you good to put a glow on you two days later! Wow, I would like to have met that one! All right, I have got the juicy part now, so do you want me in the other bed?\"\n\nI nodded, trying to hide my relief that the questions had stopped.\n\n\"Dibs on the bathroom!\" Tara chirped.\n\n\"Don't forget that Toby is on the other side,\" I advised.\n\n\"Hard to forget,\" Tara said, with a bit of a purr in her voice, and closed the door.\n\nI changed and climbed into bed, but left the light on the nightstand lit. Tara came out, dug in one suitcase, and pulled out a red night shirt with white snowflakes. She slipped it on and, of course, it was short, with a neckline that exposed significant cleavage. She turned out the light, and said, \"Night, horny sis.\"\n\n\"Geez, night QT,\" I replied. I was soon asleep.\n\n=+=+=+=+=+=+=\n\nI was annoyed when I woke up close to midnight, needing to use the bathroom. I should have used it after Tara, and before I went to sleep. I quietly went to the bathroom and turned on the light. As I went to close the door, enough light shown that I saw Tara's bed in my room was empty. Thinking maybe she had gone for a midnight snack, something she often used to do, I went to lock Toby's door. As I reached out, I heard voices in Toby's room. Trembling, I carefully moved to listen.\n\nMy insides clutched, as I heard, \"We can't...come on, we are not related until tomorrow...it's not right...don't you like these titties?...they're great, but this won't turn out well...come on bro, show your sister some of that the big love between your legs...\"\n\nI flung the door open, and my stomach twisted as I saw Toby's stunned face, with Tara's surprised smirk, as her nude body straddled the blanket over Toby's hips. With an irrevocable tension building in me, that equaled in strength that of last night's orgasm, I finally blew.\n\n\"He's Not Your Brother! HE'S MINE!!\" I shrieked. Stunned at my own confusing, illogical outburst, I whimpered, \"He is mine!\" and backed away. Turning, I fled to my bed, flying to land on my stomach, sobbing into my pillow, \"...mine...\"\n\nTime being meaningless then, I can only say it was not immediately that Tara sat next me, stroking my back gently, and asking, \"What is it, sis?\"\n\n\"I want him!\" I sobbed.\n\n\"If you want his big cock first, please take him now. I'll wait.\"\n\n\"QT!\" I barked, \"I like him. I really like him...and too much for him to be my brother!!\"\n\n\"Wha...?\" Tara started, then switched to, \"OOooohhhh!\"\n\nA couple knocks on the door, were followed by dad's voice \"You girls okay in there?\" Tara replied, \"Yes, dad. We're okay.\" He countered, \"You sure?\" Composing myself long enough to utter four words calmly, I replied \"Yes dad, thank you.\" His final response was, \"Okay, girls. Good night.\"\n\nI rolled over, and glared at Tara. Startled, she stated, \"I will leave Toby alone. He's all yours!\"\n\n\"But I can't have him!\" I started to sob again, \"He will be my...our...brother, and it could mess with Dad's marriage and happiness, if I can't let him go!\"\n\nTara shook her head, \"All this from one day in a truck? That must have been some trip!\"\n\nOne giggle escaped my sorrow, and Tara looked at me, puzzled. \"It was bit more than the trip,\" I offered, \"Toby was helping his boss by dressing as Santa, and two girls at my party mistook him for the stripper. I was wearing a mask, and his beard was glued on, and we didn't know each other, and ...\"\n\nThe light suddenly went on in Tara's brain, \"OMG! Your soon-to-be brother fucked his soon-to-be sister, unknowingly!!\" A smile grew on Tara's face, \"And you are glowing! You LIKED it!\"\n\nI nodded, sheepishly, \"I didn't think he would fit in me. He is huge. But I was drunk, and when he buried it all the way in me, WOW.\"\n\n\"So, love at first fuck?\" Tara grinned.\n\n\"NO!...well, I do love the sex...but he is funny, strong, kind, sweet, gentle...and I lied to you. We were together last night, too, even though I was fighting myself not to. I failed dad.\"\n\n\"So\" Tara reviewed, \"The guy that is just what you want, and you may be falling for, is off limits to you...and me...due to him getting sucked into being in our family, via the wedding tomorrow? And you are in crisis mode?\"\n\nI blew my nose, and nodded, resigned. Tara said, \"You stay. I am going to talk to him.\" She stood and started to move. I squawked, \"Tara...clothes!\" She looked down at her nude body, and then said, \"Nope. For what I have to talk about, this is better.\"\n\nI waited, impatiently, as those 10 minutes felt like hours. Tara returned, with a big smile, and her red night shirt slung over her shoulder. She sat back down with me. \"That poor boy is head over heels for you, Chrissy!\"\n\nI asked, \"He said that?...Wha...\" Tara cut me off with a wave of her manicured hand, saying, \"He doesn't know it, yet. Ten minutes, and all he talked about was you, and he never stared at my tits. You have him hook, line, and sinker, girl!\"\n\nMy smile grew big, but then faded away. \"Maybe that is worse, if we can't be together anyway.\"\n\nTara stoked my arm, and said, \"Let's all get some sleep and try to be a little patient. We have to get through the wedding tomorrow and Christmas day.\" She put on her nightshirt, and then reached and turned out the light. Thoughts roiled in my brain, but I finally fell asleep.\n\n=+=+=+=+=+=+=\n\nThe next day, Christmas Eve, was mainly a blur, with Tara, Toby, and I helping with last minute preparations for the wedding. I often had to remind myself to put on a happy face, as I saw Toby looking my way, or worked beside him. I so wanted to just hug him tight, to hold his hand, or to drag him off to a closet for another of those surprisingly, melting kisses. I did none of those, satisfying myself with the small smiles he gave me.\n\nThe wedding went without a hitch, and was lovely, and dad looked so happy. He had a right to be. But I didn't, as 2B was no longer a \"To-Be\", but a full-fledged step brother. That finality weighed so heavily on me.\n\nAt the reception, I got to dance with Toby several times, grabbing hugs when nobody was looking. I almost kept the tears off of his suit. I let myself enjoy a chuckle when he whispered, \"You're my favorite deputy!\"\n\nWhen we got home, dad &amp; mom, understandably, went to bed early. They could celebrate the union that I could never, with Toby anyway. Toby, Tara, and I all sat on the couch, with the fireplace flickering through its glass. I thought of its heat, much of it blocked by that nearly invisible barrier. Tara smiled, and winked, then said she was turning in, too, and left us alone.\n\nI gently leaned my shoulder against Toby, \"It's done. We are legally related.\"\n\n\"Yup\" was his quiet reply.\n\n\"What do we do now?\" I sniffed.\n\n\"What we are supposed to do. Be a happy family for our parents. They deserve that.\"\n\n\"So, we just go back to college, and throw out the obligatory 'Hi Sis, Hi Bro' as we pass on campus?\" I stated, like a self-answering question.\n\n\"Suppose\" he mumbled.\n\n\"Nobody on campus knows we are related!\" I pleaded, \"We could be together there, and then just family when we are back here.\"\n\n\"Are you that good of an actress, to fool them when we are here? To never let anything slip when you call home? To have our parents find out we are known as the brother and sister that are fucking their brains out?\"\n\nI moved my forearm under his, and intertwined my fingers into his, with a little chuckle, \"Could we, would we, fuck our brains out? Then we wouldn't care what anyone thought.\"\n\n\"We could get lost at sea, and stranded on an island, I suppose, and then disappear from the world.\"\n\n\"Making love in the sun forever, in trade for my dad's sorrow?\" I sighed, \"Even as much as want you, I cannot do that to him...or...mom.\"\n\n\"No, me neither. But, I just wish it could be that simple to be with you.\"\n\n\"Yeah\" I said, dejectedly. \"We have to get up early, and play all happy family for Christmas, so...\" I sighed, not wanting to complete the thought out loud, but yielding to reality, \"we should go to bed...separate beds.\" I turned my face up, offering my lips.\n\nToby turned towards my lips, then veered and kissed my forehead, \"Better get used to avoiding temptation.\" We stood, and slowly advanced up the stairs, each step slower than the last. Then I stopped at my doorway, and Toby slowly moved towards his door, our entwined fingers slowly slipping from their entanglement.\n\n\"There is always hope,\" he said, softly.\n\n\"Is there?\" I replied, wistfully, \"Well, I suppose that is what hope is for; to believe the impossible is possible. 'To Infinity and Beyond!'\" I chuckled sadly, and let his hand slip away. I backed through my door, and slowly closed it, dreading that final click, as if it signaled the end to a happy future.\n\nThe table lamp came on, and Tara asked, in a clearly concerned tone, \"You okay?\"\n\n\"I guess I will have to be,\" I sighed deeply, \"I don't have much choice.\"\n\n\"If you want to talk,\" Tara said, \"Wake me up, anytime,\" and she turned out the light.\n\nI climbed into bed, and stared at the motion-sensing night light until it went out; another ending to remind me of my life now.\n\n=+=+=+=+=+=+=\n\n\"Merry Christmas, sleepy head,\" dad said, as he gently shook me awake. My dry mouth slurred, \"Wha' time...\" \"Nearly 9:30\" he interjected, \"Everyone else is downstairs, waiting on you.\"\n\n\"Sorry,\" I said, and wrapped my arms around his neck, \"Merry Christmas, dad.\" \"Did 'mom' already give you the present you wanted?\" I whispered, as I let my arms loose.\n\n\"Get up, you naughty girl!\" dad chuckled, and then yanked the pillow from under my head, and stuffed it in my face, muffling my childish giggles. When I moved the pillow, dad was gone.\n\nI quickly made myself presentable, put on my bath robe, and trotted down the stairs, only to be met with embarrassing applause. \"Food is in the kitchen. Grab something for yourself and bring it over,\" mom requested. I did, and sat in the chair next to the couch. Tara and Toby were on the couch, and dad &amp; mom were on the love seat.\n\n\"Santa Harrison, please proceed,\" mom said. Dad smiled, and stood, and selected presents from under the tree, including one of the ones that I had brought in my luggage. It was the one I had bought before I left college, for the brother I had yet to meet. Dad handed out all the presents he had selected. We all waited, poised, for the command. Apparently Toby and mom had been clued in on the Harrison tradition.",
        "\"GO!\" dad barked, and we all ripped into our presents, which resulted in overlapping squeals, chuckles, and sighs. Toby smiled at me, and thanked me for the quality pen/stylus combo I had picked out for him. Everyone else loved their gifts, too.\n\n\"Misses Santa, your turn,\" dad said, and Evelyn looking amused at her new role. She selected presents, and handed them out. We each started unwrapping them as we received them. This time, it was a round of \"Oohs &amp; Aahs\", and then everyone chuckled and thanked the giver.\n\n\"Tara, the oldest, is next,\" dad said. Tara chose, passed them out, and the sounds of tearing paper, approval, and thanks were repeated.\n\n\"Toby, your turn,\" Dad advised. Toby distributed his selection, handing me a somewhat large box. The tag said it was from Toby, and its decorations were something I had not remembered seeing in the truck when we had loaded at college.\n\nWe all started to unwrap our presents. As soon as I opened one end of mine, I knew what it was, and my smile gleamed at Toby. Before I unwrapped it further, I said, \"How?\"\n\n\"Santa's elves,\" said Toby, with a grin. I glanced around, and saw the little smile on mom's face. I took the rest of the wrapping off of the Toy Story Woody doll, and showed it to everybody. Reaching through the hole in the back of the box, I pulled the ring. \"You're my favorite deputy!\" I chuckled happily, but then my face started to sag, fighting tears.\n\n\"Excuse me!\" I exclaimed, as I trotted off to the guest bathroom for tissues. I came back shortly, with extra tissues in my hand, which I then stuffed in my robe pocket. No one said anything, and I looked at dad &amp; mom, and was surprised not to see concerned faces. \"My turn\" I sniffed, and grabbed a round of presents.\n\nFinishing that round, there were a few leftovers, which dad handed out. Having finished with all the wrapped presents, Tara and I started collecting the scattered, torn wrapping paper from everyone. I wadded one into a ball, and showed it to Tara, to which she laughed and nodded at the remembrance of the paper ball fights we had after Christmases, years ago.\n\nWhen we had cleaned up, dad said, \"Tara and Chrissy, would you please sit, but exchange places?\" Curious at that request, I sat near Toby, who looked back at me with an equal curiosity. \"Please scoot together,\" mom requested. I responded slowly, my mind busy trying to solve this puzzle.\n\nHip to hip with Toby, we both watched dad get up and walk to the back of the Christmas tree, while mom stayed watching Toby and me. Dad retrieved an envelope, which he then handed to me. The envelope simply said, \"Chrissy &amp; Toby\". I looked at Toby. He clearly had no clue. I looked at Tara, and she winked. I looked at dad &amp; mom, who were holding hands, with a rather tight, anxious grip.\n\nDad said, in a level, quiet tone, \"Evelyn and I talked about this at length, and Evelyn composed it for the two of us.\" Then he gestured that we look at it.\n\nI opened the envelope, and unfolded the single sheet of paper. I read it aloud, both for Toby, and to confirm to myself that words existed on this paper.\n\n\"To our children: We have each raised you to be kind, thoughtful, caring individuals, and believe we have succeeded. It is our desire, and wish, that you be independent of us in thought and deed, each to choose the path in life which best suits your talents and desires, irrelevant of what our hopes for you as children may have contained. None of our efforts were designed to have you suffer for our needs.\"\n\n\"It is clear that you two are attracted to each other. Even though it has only been a short time since you met, your strong bond seems clear to all those around you. It is not our wish that you suffer the common restraints of society about brothers &amp; sisters, just because your separate parents chose to marry.\"\n\nI had to reach for a tissue and dab at my eyes, before I continued, choking slightly.\n\n\"You are adults now, and you both have our blessings to discover all that your relationship may be. In the unlikely case that the relationship should dissolve unhappily, we accept that risk willingly, and we will deal with whatever consequences there may be.\"\n\n\"But IF, as we suspect (and again, we put no pressure on you to fulfill our expectations), your relationship flourishes, and you two should choose to make Chrisilla Marie a member of the Wittendons, we would be most honored and proud if...\"\n\nI had to stop reading at that point, and grab the tissues from my pocket, as my tears were wetting the paper. With my sobbing unabated, I handed the letter to Toby to complete, as I desperately sought to catch the flood my eyes were producing.\n\nHe continued, smiling happily, \"...most honored and proud if you would use Chrissy's mother's (Christine's) rings to signify your bond to each other. We wish you, both, all the love, joy, and happiness this world can offer. Merry Christmas.\"\n\nI looked at Toby, and handed him my last dry tissue, as I saw his eyes welling up, too. I sobbed to dad &amp; mom, \"How did you know!?\"\n\n\"Chrisilla, dear,\" Evelyn said, \"that first night he tickled you on this couch, the sparkle in your giggles &amp; laughter, and in your eyes, warned us this would not be the family we had predicted.\" I couldn't help but giggle, wetly, at that memory.\n\nDad added, \"The way you two even glance at each other, the way you badly acted like there was a distance between you, the way you snuck those hugs in as you danced...you are much more transparent than you realize.\"\n\n\"And there were those sounds from Tara's room that first night,\" dad smirked and looked in his new wife's eyes. I looked at Toby's face, to see if it was a red as mine felt. I looked at Tara, and saw her full-wattage smile.\n\nWhen I looked at Toby, a funny grin was growing on his face. Then he slid off of the couch, and dropped to one knee. My gasp was the loudest of everyones.\n\n\"Chrisilla Marie Harrison, will you...\"\n\n\"NO!\" I shouted, \"I mean you can't...yet! I haven't even had a chance to tell you that I love you...yet...and...\" I went silent with the realization of what I had just revealed, even to myself.\n\n\"And do you?\" He asked, with a huge smile. I looked at dad &amp; mom's smiles, and nodded, as I slowly turned to face him.\n\n\"Then Chrisilla Marie...will you be my roommate...well, duplex mate really, when we get back to college?\" With the roomed filled with happy laughter, I screamed, \"YOU BRAT!\" before I lunged and knocked him flat on the floor, lying on top of him with my residual tears wetting his face. I kissed all those tears on him, kissing him all over his face, \"YES!\" (kiss), \"Yes!\" (kiss), \"yes!\" (kiss), \"yes, yes, yes\" (kiss, kiss, kiss). Then I planted a kiss square on his lips and ravished them, sharing with him the overflowing joy and relief that I felt.\n\nAbove me, I heard my new parent's chuckling, \"We had better give Toby Christine's rings before they leave tomorrow!\" "
    ],
    "authorname": "GoneGray",
    "tags": [
        "brother",
        "female voice",
        "incest romance",
        "romantic",
        "sister",
        "younger man",
        "younger woman"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/ho-ho-hoes-merry-chrissymas"
}