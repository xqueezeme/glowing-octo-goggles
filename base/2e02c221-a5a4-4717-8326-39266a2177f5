{
    "title": "Possessing Bella Ch. 20",
    "pages": [
        "Authors Note: Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. I apologise for the longer than usual waiting time between chapters. Thank you very much to Aisielynn who continues to my second set of eyes, she is a great friend to help me out so much. Thank you also to Margret who also looked over this chapter for me. I hope you enjoy it. ~ellie\n\n*****\n\nPossessing Bella Ch. 20\n\nDuring the week following Bella's return to the city, she had done little but work and sleep. While she had accomplished a great deal at the company, she had begun to feel isolated at home in her apartment. She had been understandably exhausted upon her return and though they were a constant presence, the men in her life made no demands on her time in the evenings after dinner. The coming weekend would be different though and in a small way she was grateful for the time she had been given to rest after returning from the ranch.\n\n\"Bella,\" Andrew interrupted her daydreaming, bringing her back to the matter at hand. \"You haven't said a word.\" He indicated the resumes he had just summarised for her.\n\n\"Oh I'm sorry,\" she said, bringing herself back to the task. \"Tell me the truth,\" she locked eyes with him. \"Is there any deal with Rob or Kurt like there was when you interviewed?\"\n\n\"Possibly, but if there is I don't know about it. HR sent me a list of applicants, and I have shortlisted those for you,\" he explained again. \"I get to choose a girl from the temp pool, but you're a senior executive, you need an experienced personal assistant, not a secretary.\"\n\n\"Okay,\" she sighed, knowing that to put it off any longer just stopped Andrew from doing more important things. \"Could you run through them one more time? Then we can start the interviews.\"\n\nSeveral hours later, the final interview left her office, and she sat back looking at Andrew thoughtfully. If she was honest with herself, he had done most of the groundwork for the company over the last six months as she had taken a lot of leave to attend the training program. She chewed her lip as she considered what she wanted to say and how she wanted to phrase it.\n\n\"Say it, Bella. You don't have to be so careful with me. I am your associate now, we are officially a team,\" he grinned and leaned back in his chair.\n\n\"We were always a team,\" she returned his grin with one of her own. \"We will still be working on the same project together, and I know I can't expect you to do all the menial work anymore. I am wondering if we need two extra people on our team. I mean couldn't we share an assistant or do you want... I mean...,\" she blushed, remembering her time as Mel's assistant and knew that almost all of the executives were involved in some way with their assistants. She floundered for the right words and hung her head, giving up.\n\n\"If I want to what? Fuck my assistant stupid on my new desk?\" Andrew chuckled. \"As I understand it, less of that sort of thing happens in this building than you think. It's the loyalty and trust most of the men enjoy with their assistants.\"\n\n\"We managed to build that sort of relationship, didn't we?\" Bella looked up, her cheeks still rosy.\n\n\"We did, and you didn't fuck me once,\" he said with an exaggerated pout, making her blush brighter.\n\n\"What I was trying to say,\" she shook her head, willing the heat from her face. \"We could open up space in front of our offices and have one large desk and just start with one assistant, and if the work gets too much for her or him, another can come from the temp pool.\"\n\n\"That could work, especially as the renovations on the suite next door are due to start next week, it wouldn't take much to add in the extra area. We'll still need someone as soon as possible so we can move on the plans we have made this week.\" He indicated the pile of resumes sitting in a neat pile at the side of her desk. \n\n\"We do,\" she agreed. \"So let's discuss who WE would like to hire.\"\n\n\"It's a no-brainer for me,\" Andrew took a file from the pile and pushed it at her. Bella looked at it suspiciously. This had all gone so smoothly, no negotiating or worrying, Andrew just seemed to be able to take everything that she proposed and make it work for them both. She had to remind herself that he was a dominant outside of this office, and it shouldn't surprise her that he was perfectly willing to take control of any given situation that she allowed him to. Looking down at the file she was a little surprised and looked back at Andrew with a raised eyebrow.\n\n\"I am just as happy to get a blow job from a man as a woman,\" Andrew shrugged, restraining the smile that threatened the corners of his mouth at her surprise at his candid response to her unspoken question. She blinked at him and, unable to help herself, burst out laughing.\n\nFrom the moment, she and Kurt had promoted Andrew from personal assistant to associate their relationship had begun to change. He now worked with her rather than strictly for her and was able to pursue other small projects with Rhys Muldoon, who had been mentoring Bella and her project. In her frequent absences, Andrew had been able to take full advantage of this facet of the business. The promotion had opened even more doors for Andrew both professionally and privately, and he was more than grateful to the woman sitting across the desk from him. He worried about the position she may be put in by hiring another unknown who could take advantage of her submissive nature. Choosing a gay man was a no brainer for him and, being bisexual himself, the words he had spoken to hide his protective tendencies were true.\n\n\"I suppose his background in security and technical had no bearing on your decision,\" she said after her giggle subsided. \"I already have enough watchers to make me paranoid.\"\n\n\"Well that helps, but they all have some training that would be advantageous to your guardians. This one though has a great smile,\" he waggled his eyebrows.\n\n\"Stop that,\" Bella said with another giggle. She shuffled through the other four applicants that had been shortlisted and had to admit that what he had said was true.\n\n\"Ask yourself this,\" he said seriously, \"If there was a rumour circulating and Dianne wasn't here, who would you ask?\"\n\n\"Patrick,\" she said automatically. A moment later realisation dawned. \"This guy doesn't seem to have Patrick's friendly personality.\" Bella was sceptical.\n\n\"Put it down to nerves, he is handsome and non-threatening to the men here. He could get into interesting places without even raising an eyebrow. I'm sure Patrick would be more than happy to take him under his wing and help him out like he did for me. More so probably, I imagine his attitude will be better than mine,\" again he flashed his wide grin. \n\n\"What's wrong with your attitude?\" Bella was honestly confused by the statement.\n\n\"Bella you are so oblivious to your power at times. For me you have always been 'She who must be obeyed' while I worked for you,\" he paused to check her understanding and seeing the confusion lingering in her expression, continued. \"I was not always so obliging with the other assistants,\" he admitted without any regret. \"I don't deal well with excuses or bullshit lines and went over their heads more often than not if I needed something done. Having you for a boss trumps every assistant in this company, except Dianne. Though I do believe I could come up with an argument to debate that point.\"\n\n\"I see,\" Bella didn't like the revelation that he had been trading on her position and power here to force his personal agenda, if that was what was happening.. \"And you believe this Jaxon can wield that much power responsibly?\" Bella was shaking her head as she played along with what she now believed had to be a joke.\n\n\"I think three months' probation should be long enough to find out. If nothing else, the thought of getting his own assistant to boss around if the workload increases after the renovations are done would possibly be enough motivation to help him understand his worth and exactly where his loyalties need to lie.\"\n\n\"Loyalties?\" Bella cocked her head. This whole conversation was bewildering to her, and she was glad she was seeing Dorothea tonight for dinner. She had become very uncomfortable about the amount of power she had allowed him to wield within the company with each new revelation.\n\n\"Of course,\" he said, and then explained further. \"Rumours and gossip spread like wildfire in this place. We don't want anything getting out that we don't want to,\" he laughed loudly then. \"When you were on that island with Hunter, and Kurt and Dianne left suddenly, I told everyone you had been taken by pirates that had raided the island.\"\n\n\"You what?\" Bella clapped a hand to her mouth in stunned surprise.\n\n\"Yeah they learned not to pump me for information after that,\" he continued to chuckle. \"Which is a shame, because I had a whole man from Snowy River wild mustang story to tell them during your last trip.\"\n\n\"You did not,\" Bella laughed uneasily. The change in their relationship since his promotion had been imperceptible until this conversation.\n\n\"Oh you have no idea,\" he said, suddenly becoming serious. \"Look, Bella, I know you don't understand who you are without Mel or the power you could wield if you just decided one day to take control of everything Mel left to you,\" he paused as if deciding how much to say. \"You are beautiful, wealthy and desirable on many levels. You need people around you who are loyal and have your best interests at heart. Kurt and Rob do well to ensure that, now I am here to help you too. Hire this guy. I have a good feeling that, like me, he will protect you from those that would seek to cash in or take advantage of your position here.\"\n\n\"Oh I was just thinking,\" she said, equally seriously. \"It seems opportune that I am getting a new assistant as you seem to have lost the ability to read my mind,\" she joked awkwardly, looking down at the file he had given her.\n\n\"Well, what my mind is thinking is that you call this guy and let him know he needs to show up at work on Monday morning. Then he can call these others and gleefully inform them that they did not get the job,\" Andrew said happily.\n\n\"I do believe you have an evil streak,\" Bella said, shaking her head.\n\n\"Only a little one,\" he smiled, believing she was still joking. \"Now make that phone call, and we can call it a day,\" Andrew chuckled, knowing he was overstepping the mark but sure in the fact that Bella would follow his lead. \"I'll start cleaning out my desk and get those drawings revised to include the opened foyer.\"\n\nWhile she had been perfectly willing to admit that everything he said up until that point made sense, his last comment rankled her. It was as if their whole relationship had been turned on its head this week and she had only just realised. She watched him walk to the door of the office suite and ran back through the conversation in her head. \n\n\"Andrew,\" she called as he reached the door. \"I might just run these past Dorothea tonight before making a final decision. Can you rank them regarding your preference for me?\" She saw the brief look of chagrin on his face before he returned to her desk.\n\n\"That's a good idea, she helped you choose me after all,\" he said, quickly regaining his composure and swiftly ranked the files, leaving them in a pile before her. His smile seemed forced at that stage, and Bella smiled as she normally would. Inwardly though, she replayed his words about his attitude and acknowledged it could use some adjustment where she was concerned. He could call himself a loyal friend and protector as well as colleague, but she didn't like being used, even if only in name. \n\nWaiting for him to level the room again, she wondered at the change in their relationship and if she had acted too swiftly when she had returned. He had been so good in all of her absences and been by her side when she had returned. She had given little thought to his training with Stephen and what that would mean for her, if anything at all.\n\n*****.\n\n\"You're exactly right,\" Dorothea reassured Bella. \"This is exactly the right candidate, but just to drive your point home I would make Andrew oversee the training for at least a month and purposefully leave him out of strategic meetings for a while so that he realises you have a little bit of backbone. All the time he was warning you of others taking advantage, he has been doing that himself.\"\n\n\"I was absent as often as I was there,\" Bella admitted, \"and I leaned on him a lot during that time. Maybe it's just that he is taking what is due to him.\"\n\n\"Pish you were already giving what was due to him, he is taking more,\" Dorothea said crossly. \"Stupid newbie probably doesn't even realise what he has done. You have given him the keys to the kingdom just by hiring him six months ago. He has had access to the best mentors in the lifestyle and the company. He has been the golden child because you chose him.\" Dorothea seemed to consider her words. \"We chose him!\" She exclaimed in a eureka moment.\n\n\"Oh sweet girl as much as I should let you deal with this on your own, please let me,\" she gave a wicked smile and pressed her hands together as if in prayer. Bella burst into fits of giggles and nodded. Dorothea looked at her watch and picked up Bella's phone.\n\n\"Andrew? It's Dorothea,\" she paused for a moment and winked at Bella.\n\n\"Bella's been telling me about your conversation this afternoon, and it's so good of you to be protecting her from those that would take advantage of her.\" Again she paused. \"I know that she agreed with your choice, but I think that Chelsea would be a much better option.\"\n\n\"Yes, I can see that Jaxon would be a much better option if it were only for you but it's not. Bella is willing to share her personal assistant with you but if you would rather have a girl from the temp pool...\" Dorothea grinned at Bella as her voice steadily continued the conversation.\n\n\"I'm glad we see eye to eye on this. I would have hated to think I underestimated your commitment to Bella's business, or that you underestimated that sweet, trusting girl.\" Bella groaned inwardly as she listened to Dorothea press her point.\n\n\"Ah yes, I agree, she is very trusting of everybody, but she is wise enough to seek more than one opinion if she is not sure of a decision that she has to make.\" She paused for a moment as Andrew obviously spoke again. \n\n\"Oh I am feeling just fine, thank you. I thought I might come in to see everyone sometime next week. I am keen to see the plans for your new office,\" Dorothea said. \"Thank you for asking. I'm sorry, I have to go, but I will catch up with you next week and see how the new assistant is settling in.\" She closed the phone and placed it on the table.\n\n\"That was fun, next let's call Stephen and tell him about his shoddy job of mentoring that one,\" Dorothea cackled and a moment later there was a knock on the door, startling them both and making them jump like children caught being naughty.\n\n\"Actually, I think Sir Stephen has done a perfect job. I think it's Rhys I need to speak to when it comes to work,\" Bella said quickly before opening the door.\n\n\"Hello little brat,\" Rob swept her up in his arms and held her close as he advanced into the apartment. \"What are you two mischief makers up to then?\"\n\n\"Creating mayhem and leaving chaos in our wake as usual, but have no fear there was only a little bit of bloodshed this time,\" Dorothea cackled and moved to embrace Rob as he placed Bella on her feet. \"To what do we owe the pleasure of this visit?\"\n\n\"Delicious desserts, of course,\" he smiled widely. \"Charles has called to invite you both to dine with him. He is a difficult man to say no to at the best of times, and he was quite adamant about it, so I accepted on your behalf.\"\n\n\"I see,\" Dorothea said and gave him a shrewd look, taking in the unspoken meaning in his words. \"Then we best get ready.\" Seeing the disappointment in Bella's expressive face, Dorothea took her arm and led her to the bedroom. \"We'll just be a few moments,\" she called over her shoulder to Rob.\n\n\"I was looking forward to tonight,\" Bella said, trying to keep the disappointment out of her voice. \"There is so much I wanted to talk to you about.\"\n\n\"I know sweet girl but there will be other occasions, and I think this is something we must do. Charles doesn't rouse himself to come out this late, especially just for dessert if it isn't important. And it would seem Rob couldn't put him off,\" she turned to look at the empty doorway as if expecting to see Rob standing there. \"Now let's find you something adorable to wear.\" Dorothea's explanation made sense to Bella, and she quickly changed while her mind worried at why he would need to see her tonight rather than waiting until tomorrow.\n\n\"Do you think you could stay tonight? The spare room is all made up, and I can drive you home in the morning after breakfast,\" Bella asked hopefully as she clipped a plain but obvious collar around her neck. \n\n\"I have learned that being your friend means being prepared for any eventuality,\" Dorothea grinned and linked her arm with Bella's, walking back out to where Rob waited for them.\n\n\"The beauty of experience and the sweetness of youth, I will be the envy of all walking into the club with both of you on my arm,\" Rob opened the door and led the way downstairs.\n\n\"Such a charming man,\" Dorothea patted his cheek and smiled. \"That's the nicest way anyone has called me old in some time.\" She chortled and pressed the button to summon the elevator. Bella listened to Rob and Dorothea's banter about age and experience as they made their way down and into the club. They were led to a booth at the rear of the restaurant and, sitting beside Charles, she was surprised to find that Sara was not with him.\n\n\"Hello little one,\" Charles gave her a one armed hug and leaned down so she could kiss his cheek. \"Jake is our chef tonight, so I have asked him to surprise us with something wonderful.\"\n\n\"That sounds fabulous,\" Bella grinned up at him, always feeling like a little girl around Charles.\n\n\"At the last stakeholders meeting, Rob and Stephen informed us that you were hoping to end the training with just the original five Masters that Mel had set out for you,\" Charles said abruptly, launching into his reason for summoning her here. \"Not including Kurt and Dianne.\"\n\n\"That's true, Master Charles,\" Bella said softly. \"It is what I wanted.\"\n\n\"Have you changed your mind on that matter?\" he enquired. \n\n\"No, not exactly,\" she began to chew her lip, and she looked up at Rob. \"I'm just a little confused about things, and I was going to talk a few things out with Dorothea tonight,\" she blushed slightly. \"She has a way of making the scattered thoughts in my head come together and make sense without saying much of anything. She just lets me talk it all out of my head, then lets me pick up the better bits again.\"\n\nCharles scratched at his stubbled cheek and looked at her thoughtfully for a moment. \"When you came to me many months ago and asked for my help in setting up the training agreement with the stakeholders, I put myself in a position akin to your guardians. A protective overseer of sorts,\" he said slowly. \"I have kept a keen eye on your progress and have received reports from each Master after your stay with them. It was I who placed an embargo on you for two weeks following your return, so that you would not be besieged by offers to spend time with the same men again or others who have shown an interest in collaring you.\" \n\nBella looked surprised and swallowed loudly. Her mind worked over what he had said and, aside of Stephen, had not contemplated that anyone else may offer her a collar.\n\n\"Oh those big green eyes make my heart soar, were I a younger man I would want my collar around that pretty throat,\" he chuckled. \"Now I must leave it to younger men who can offer you a more fulfilling life than I could, which brings me to the reason for this impromptu meeting. The stakeholders meeting is Monday, and I have had conversations with some of the members who would like you to give a definite answer as to whether you will continue with the training or end it.\"",
        "\"I have learned so much, and I am so very grateful to everyone who went out of their way to help me, but my career and friendships have suffered in my absence. I need to put some time into the people closest to me, spend a weekend with my parents...\" her voice trailed off as she realised she was rambling, and her parents were currently in Italy on vacation. \"I would like to end it, please, Master Charles.\"\n\n\"Have you begged a collar?\" He looked into her eyes as he asked the question, noting the surprise there. \n\n\"Not during the training,\" she answered honestly and then furtively looked toward Rob and blushed, remembering how she had emotionally begged him to take her as his own when she had returned to the city. \n\n\"You have changed your mind about Stephen's intentions? You have intimated that you would take his collar at one point,\" Charles pressed.\n\n\"I think that with the holidays and starting a new year,\" she paused to collect her thoughts. \"Well, I have realised that it has only been a year since I graduated and went to work for Mel. Not even a year since he introduced me to, to all this. The lifestyle and the people who are now such a big part of my life. I've been sad and mad and confused, so very confused since his death. I am not sure I am truly able to give all of me to someone else yet. I am worried that if I begged a collar now it wouldn't be right.\"\n\n\"Ah little one,\" Charles turned in the seat and wrapped his arms around her. \"It is easy for us to forget the trauma you went through in Italy before you were returned to us.\" He looked across at Rob and Dorothea and saw the sadness in their eyes also. \"Yours was a short but intense love, and that is not so easy to recover from.\"\n\n\"Each of us has lost a loved one,\" Dorothea said quietly. \"It is difficult for those who haven't to understand the depth of pain that comes with the severing of those bonds. I marvel every day at the great strides Bella has made through her grief.\"\n\nBella sat back up as Charles released her from the fierce embrace and smiled up at Jake as he brought the desserts to their table himself. He placed what looked like a spherical red apple on the table before each of them and then to their astonishment poured hot chocolate fudge sauce onto the place it sat on. The heat caused the skin of the apple to peel down in leaves, revealing an ice cream center. \n\n\"I call it Eden's apple, too tempting not to take a bite, right\" Jake grinned.\n\n\"It looks amazing,\" Bella gasped and picked up her spoon to try it. She took a scoop of the ice cream and ran the spoon through the fudge before filling her mouth with appreciative murmurs.\n\n\"I have to get back to the kitchen, but I was thinking now that the training thing is over you might be open to a date? Somewhere other than here,\" he laughed. \"We could both use the change of scenery, and I know this great little seafood place on the river.\"\n\n\"A date?\" Bella was startled.\n\n\"Yes a date, you remember dating. The guy picks up the girl, they go out and do something fun, and if the mood's right they come back home and do something funner,\" he joked with her, unsure of her reaction.\n\n\"That sounds as tempting as this dessert,\" she smiled, not committing herself.\n\n\"Best to wait until after Monday and see what she decides about the training,\" Rob cut into the conversation.\n\n\"Just trying to jump the queue,\" Jake laughed. \"Don't forget I asked first.\" He winked at Bella and strolled back to the kitchen.\n\n\"We might need to look at that list again, Bella. You may need a social secretary as well,\" Dorothea laughed. Bella shook her head, laughing softly at the joke. She didn't believe that there would be more than a handful of curious people who might ask her out.\n\n\"That's not a bad idea,\" Charles chimed in. \"If you end the training and do not beg a collar straight away, you may find your social calendar offer-flowing with offers.\"\n\n\"I could do it to start with,\" Dorothea volunteered, \"Weed out the riff raff, make some discreet inquiries. I have some very good connections within the club and the company. I am not sure either Rob or Kurt has the time or inclination to vet them all themselves. There aren't too many other people I'd trust to do it properly.\"\n\n\"I don't know,\" Rob said frowning. \"It would be difficult to keep her safe if she was gallivanting off with random people to who knows where.\" \n\n\"I wouldn't want to go anywhere other than here with someone I didn't know,\" Bella said. \"Despite what you think, I have learned from all those little mistakes, Master.\" There was sadness mixed with the frustration in her voice as she worried that he would restrict her movements again. \n\n\"There is time to discuss these things. Let's just all relax and have a think about the things we have discussed. The point of my being here was to find out what you wanted little one, not what everyone wants for you,\" Charles said. \"I would prefer it if you were settled with a good and loving Master, but as always, it is your choice, and no one can force you to it before you are ready.\"\n\n\"Thank you, Master Charles, I hadn't considered that everyone would be so concerned about what I did after the training had ended,\" Bella admitted. \"I'm sorry about that, and I will think about everything you have said.\"\n\n\"Good girl,\" Charles smiled. \"Now eat your dessert before it melts entirely.\"\n\n*****\n\nBella now knew why Stephen was had been aloof and distant since her return from the ranch. She spent some time considering how he must be feeling having been told to give her space to think after their last night together. In truth, she was grateful that she had another week of the embargo Charles had placed on her. But she knew she needed to speak to Stephen, honestly, about how she was feeling.\n\n\"The thing is,\" Bella said as Dorothea stretched out on the couch, the evening now growing late. \"I do love Stephen, and I believe he loves me, it's just that,\" she took a deep breath, \"It just that he has a jealous streak, and I worry about the consequences of that, for me. I mean what if he tries to limit my access to you or Rob, I couldn't bear that. We argued about that at the ranch, and he all but ignored me afterwards.\"\n\n\"Oh sweetheart, I can guarantee you, he did the exact opposite of ignoring you. He just watched over you from a distance, but he knew every move you made,\" Dorothea laughed softly.\n\n\"You didn't see him, he was so angry with me, when I hesitated...\" she blushed deeply. \"I was wearing someone else's collar, and I had committed to everything that went along with it,\" she hedged, hoping Dorothea would understand her meaning without having to admit to the scene that happened.\n\n\"You know Mel also did some things he wouldn't have done before setting his sights on you. Love does strange things to men like them. They have this ideal submissive in their mind's eye and when they find the one who fits that picture, they will bend the rules to their needs.\" Dorothea smiled softly, \"His reaction scared you?\"\n\n\"Maybe a little but I was more disappointed, I think,\" she admitted. \"It wasn't the only time he reacted badly to seeing me with another Master, but he was very angry at me when I was trying to do the right thing, for everyone. It just added to my confusion.\"\n\n\"I would guess that his anger was at himself, not you,\" Dorothea said, trying to reassure her. \"Still you need to take the time to deal with your confusion. You also need to put Mel to rest properly, and you shouldn't move on until you can give all of yourself. That was a very wise and brave thing you admitted to Charles, and it will bear weight with the other shareholders too. They need to be reminded of your trauma. That you were in that dreadful scene with Mel when he was shot and that it has not been that long since he was laid to rest. Not only him, but his son, Vince.\"\n\n\"What if I am never ready? What if I don't want to date? What if I just want to concentrate on work?\" Bella chewed her lip as the questions tumbled out of her mouth. \"I didn't know Jake would ask me on a date. I hadn't even really thought about it, as all my partners to various charity things all seemed to just be there at the time I needed an escort.\"\n\n\"When you are ready to date,\" Dorothea emphasised the when in her sentence, \"I think you will have many offers to choose from. Some you will know, some you won't. You are young and rich and famous within our social circles, but you also have an almost impenetrable wall of friends and family around you to protect you from people who would want to take advantage of that.\" She chuckled then, making Bella look at her curiously.\n\n\"Poor Andrew,\" she grinned, \"He underestimated you. If you date, there will be a few like that. Good men who are still learning how to be good Masters.\"\n\n\"I don't want to be dating everyone and anyone,\" Bella shook her head. \"I just want to live a normal life for a little while.\"\n\n\"What is normal for you?\" Dorothea asked gently. \"Your life has been far from what you knew as normal a year ago. You can't go back to that life anymore, even if you wanted to. Your circumstances have changed in a very profound way.\"\n\n\"I know,\" Bella sighed. \"I just want to be able to wake up and go to work and build the business I wanted. I want to be able to see and have fun with my friends and the people I love. I want to learn new things and discover new places, but I want to do that with the people I care about. I just want some time to not feel pressured or obligated to make decisions I am not ready to make.\"\n\n\"So let them all huff and puff and tell you what they think. In the end, the choice is yours as to what you do next. Charles came tonight to ask you directly, which shows the depth of his fondness for you. Rob adores you more than you probably realise and will stand up to any of them if you needed him to; I dare say Kurt feels similarly. You know how Stephen feels.\"\n\n\"Yes I do, but I need to tell him what I am feeling at the moment,\" Bella said softly and gnawed on her lip. \n\n\"I think you need to tell a few others too,\" Dorothea smiled. \"I know it is not in your nature to stand up to these men, but you are stronger than anyone thinks, including yourself.\"\n\n\"I wish I could go home this weekend,\" Bella sighed. \"It isn't that they tell me what to do or even know the full extent of my life here in the city, but it's nice to just be loved and looked after without any expectation. They just appreciate having me home and make me feel that everything will always work out for the best.\"\n\n\"You could Skype them, the time difference isn't so bad,\" she suggested. \"You can call them in the morning and set up a time. I am sure they would like that as much as you would.\"\n\n\"I would like that. It's about as close as I can get to being with them,\" Bella agreed.\n\n\"Have you given any thought to going back to Italy? It might help you to make some decisions,\" Dorothea asked gently, seeing the opening she had been waiting for to broach the subject. \"You could maybe join your parents for the end of their trip and explore some of those glass suppliers Andrew found when he was there last year.\"\n\n\"Last year makes it seem so long ago, and we have hardly moved forward at all since then,\" Bella lamented. The accident was such a blur to her; even at the time, it made no sense and what she remembered she couldn't be sure if it were real or what she had been told by doctors and friends during her recovery. She wasn't sure if she ever wanted to return there and she became melancholy as she considered the prospect. \"It's something to think about,\" she responded without emotion.\n\n\"It's not something you have to decide straight away, but I am sure they would love to have you there with them,\" Dorothea spoke softly, seeing the change in Bella's body language and tone.\n\n\"I'll need to get up early to call Mum and Dad,\" Bella gave a weak smile. \"I'll make breakfast for us myself. I so rarely get to cook here, it will be fun.\" She tried to sound jovial, but the sentiment didn't carry to her voice. \"I better get to bed, though, or I will never get up in time.\"\n\nDorothea stood with Bella and took her in a fierce hug, \"I am sorry if I upset you. I wouldn't hurt you for all the world. You are such an important part of my life, and I adore you, Bella.\"\n\n\"I love you,\" Bella replied simply, returning the hug. \"I am just tired. I will see you in the morning.\" Bella walked to her room. She had thought she was over the numbness that plagued her after Mel's death. She could talk about him now without feeling tears prickle her eyes. She had packed up his belongings and moved his furniture from the apartment, almost eradicating him from her immediate world. She could never do that in truth; he was everywhere. He was here in this apartment; he was a looming figure in the company and the club and a very real part of her circle of friends, who had all come together in some way through him and his partner Rob.\n\nDespite all this, the numbness seemed to have been kept at bay until she thought about returning to Italy and the scene of the crime. It wasn't an accident as it was often referred to. It was cold blooded murder. A crime so heinous the perpetrator was in jail for a lifetime and, considering his age, it would be the entirety of his lifetime. In her mind, she saw the road, the fallen tree and then darkness; her memory only sensed the weight of his body, his smell and the warm wetness of the blood that seeped from his body taking away his life and in turn her life as she knew it.\n\nHer stomach tightened as she relived those feeling again, it had been so long, yet not long enough and she felt the numbness of not wanting to feel any of those things overtake her again. Stripping and flopping naked onto the bed, she lay looking at the ceiling. How could she ever belong to another when just the mention of returning to Italy can reduce her to mess all over again? Was she wrong to stay? Should she have cut her losses and left the world Mel opened up to her? Should she have left her friends and the company she now owned part of? Kurt would have looked after her interests. She certainly had the money now to make a go of the business on her own if she wanted to. Should she leave? Would they let her?\n\nEverybody kept telling her that it was her choice. It being everything she realised with sudden clarity. If she truly wanted to leave, they couldn't stop her. She had given them that power over her life. She listened to their commands and suggestions and chose to do as they asked. What would happen, she wondered, if she suddenly stopped? It was a ludicrous thought of course. She loved her friends and her work. She was excited about building a business of her own. She had so many ideas that were on the verge of becoming a reality that she knew she couldn't walk away.\n\nShe could be stronger, though, more out-spoken. She could have handled Andrew this afternoon rather than running to Dorothea to confirm her feeling that he was beginning to dominate their work relationship with his new promotion. She needed to try harder to speak what was on her mind, instead of second guessing herself all the time and worrying about looking silly in front of the very people she believed loved her. \n\nHer thoughts moved to the business and company, and she fell asleep with the spectre of Mel's death fading back into the dark corners of her mind again.\n\n*****\n\n\"Good morning,\" Bella said cheerily from the kitchen as she slipped two eggs into the boiling water to poach them. \"Did you sleep well?\"\n\n\"I did indeed,\" Dorothea said happily. \"You look like you got some sleep too. Did you call your parents?\"\n\n\"I did, indeed,\" Bella giggled, borrowing Dorothea's words. \"They were so happy about the idea of Skype that my cousin set it up straight away for them on her laptop.\"\n\n\"That's wonderful. Are they enjoying their trip?\" she asked, buoyed by Bella's good mood after the way they had left the conversation the night before.\n\n\"Mum's having the time of her life. Dad could barely get a word in,\" Bella laughed. \"She broke into speaking Italian so often I am still not sure of all the details.\" Putting the finishing touches on the plates of eggs benedict, Bella sat at the bench across of Dorothea, \"Bon Appetite.\"\n\n\"This looks lovely,\" Dorothea praised her efforts easily. \"So what's on the agenda for the rest of the day?\"\n\n\"I was thinking about everything that happened last night. I had wondered why Stephen had suddenly gotten too busy to spend an evening with me and, while I am grateful, it wasn't very fair to either of us,\" Bella admitted. \"I have missed his constant presence, not that I am ready to commit to him but neither am I ready to not have him in my life, and I have to tell him that. I need him to understand how I am feeling and if he can't then maybe it wasn't meant to be.\" She said it with conviction, knowing under Stephen's gaze that strength that she felt right now may very well ebb away.\n\n\"Men like Stephen are not used to waiting patiently for a girl to make up her mind. In fact, I would hazard a guess that he is used to women begging him for his collar on a weekly basis if not more often. Even Rob, who is stand-offish at best, still has girls approach him intending to wear his collar,\" Dorothea said conversationally, thinking that Bella would hear the warning without any tone attached to the words.\n\n\"I understand it's a risk, but it is what is right for me,\" Bella sighed and chewed her lip. \"Mel is still here,\" she touched a finger to her forehead, \"and here,\" she placed a hand over her heart. \"I can't belong to another completely, give up my power totally to them, when part of it is still wrapped up in what was lost. Nobody wants to live in that shadow, and I do not wish them to.\"\n\n\"That man cast a large shadow in life and an even larger one in death. In asking his friends to be a part of your collaring and training, he gave them all a sense of entitlement when it came to you. While he entrusted Rob and Kurt to oversee your personal and professional welfare, they all feel some responsibility to ensure a good match is made for you, especially after you asked for their input into your training to continue.\" Dorothea spoke candidly instead of in the usual riddles that made Bella find the answers to her dilemmas on her own.\n\n\"I can see that now that you have pointed it out,\" Bella nodded. \"At the time though, I knew it was what I needed and I asked for it. I think it finally sunk in last night that no one commands or controls me now. They suggest, strongly at times but still, it's my choice to heed their suggestions and submit to their desires. In the same way, though, if I want something they do not wish to give, it is their choice, and I cannot sway that.\"\n\n\"Oh, I think you can do quite a lot of swaying when you put your mind to it,\" Dorothea chuckled. \"There isn't much that those men would deny you should you have the mind to ask. Including their collars, though then you would be sharing a master rather than having him all to yourself if you chose one who already had a girl of their own, and somehow I don't think you would be happy with that sort of an arrangement.\"\n\n\"Not at all,\" Bella shook her head and laughed, thinking Dorothea was teasing her. \"Do you think if I asked Stephen if we could drive to the cove tomorrow so we could talk before Monday night's meeting, he would be able to without feeling like he as breaking this embargo thing?\"\n\n\"I am sure that if you asked and he didn't invite you himself it would be quite fine, maybe just run it past Rob or Charles to be on the safe side. I'm sure Rob will want to know you are going out for the day anyway.\"\n\n\"Okay well after breakfast I will see if any of them are still awake and have a chat,\" Bella said, making the decision. \"Then the rest of the day is ours, would you like to go shopping? We would have to take Lincoln because I promised, but he is sweet and tries to give me some personal space while still being at hand if I need him.\"",
        "\"Actually, I have found this great little boutique that deals with all the retro stuff you like. There is the sweetest flapper dress with a handkerchief skirt I just know will look perfect on you,\" Dorothea said enthusiastically. \n\n\"Great I can't wait to see it,\" Bella swirled the last piece of English muffin around in the hollandaise before popping it into her mouth. Picking up her phone that she had been toying with earlier, she called Rob.\n\n\"Gosh, you answered that fast,\" Bella squeaked in surprise. \"No nothing is wrong. I was just wondering if I could come over and see you before you went to sleep. Yes Master,\" she said with a smile and hung up. \"Well here we go,\" she laughed nervously, \"Leave the dishes... I will do them when I get back... I will just be a few minutes.\"\n\n\"Oh don't worry about me, sweet girl. This will give me a chance to have a nice long bath and relax a little more this morning,\" Dorothea said happily. \"I will be fully restored and able to shop til we drop later then.\"\n\n\"I'm looking forward to it. I won't be long,\" she padded barefoot out of her doorway and across the elevator to the other side of the floor where Rob resided. The door was ajar, and she pushed it open slightly, peeking inside. Rob sat as usual dressed only in his boxer shorts, nursing a steaming cup of coffee.\n\n\"What took you so long,\" he beckoned her into the room.\n\n\"I was just making sure Dorothea was occupied with something aside of cleaning before I left,\" she laughed.\n\n\"That's a pretty excuse, little brat but an excuse none-the-less,\" Rob grinned and drew her onto his lap, wrapping his free arm around her. \"To what do I owe this early morning visit?\"\n\nBella began to talk about her plans for the weekend and touched a little on her revelations after speaking with Charles about not being ready to make choices and the need she had to explain that to Stephen before Monday, so he wasn't blindsided.\n\n\"As always you are thinking of others.\" Rob hugged her tightly. \"I agree with the reasons and don't have a problem with you seeing Stephen tomorrow at all, in fact, I think it might well be a necessity. He has been more prickly than usual this last week, and I think it will do you both some good to discuss putting things on hold for a little while.\"\n\n\"Not on hold exactly. It's just that I am not ready just yet for that final commitment, not when Mel still is such a presence in my life.\" Bella dropped her eyes. \"I mean he will always be present but,\" she shrugged, \"It's hard to explain, but I just couldn't give all of me to anyone yet.\"\n\n\"Its okay little one you don't have to explain to me of all people. It was different for me, the uncertainty of Kitty's death covered me in a mire of gloomy what if's and why for's. It has only been in the last year that I have finally put her in the past, and I believe that now I could love that deeply again. I know something of what you are feeling,\" he put his cup down and held her close. It was as close as he had come to declaring his feelings for her. He knew that Monday would be difficult, despite Charles intervening on her behalf, and did not want to add any further pressure or confusion to her world.\n\n\"Thank you, Master,\" Bella whispered as she snuggled into his chest. \"I've been so busy for months that I feel like I just need to slow down and process everything that happened last year.\" \n\n\"You are such a little smarty,\" Rob grinned. \"You make being your guardian easy. Now tell me about this shopping trip?\"\n\n\"Dorothea has found a new retro fashion boutique, and I wanted to get a few new blouses for work. Mel's taste in office wear was fine for a secretary, but it's hard to be taken seriously by our suppliers when I have my underwear on show to the world,\" Bella explained tentatively.\n\n\"I don't think wearing underwear was on Mel's list of priorities for office wear,\" Rob chuckled, \"So just don't wear any. If for no other reason than to distract your suppliers and get a better price.\" He laughed harder as Bella seemed to consider the idea before rolling her eyes at him. \n\n\"You're right about Mel's preferences, but it's different now,\" she blushed.\n\n\"If you were mine it wouldn't be different, that stuff just gets in the way of all the fun bit,\" he tickled her then, making her giggle before she could react to what he had just said. He was tired and not thinking, and he was glad she seemed not to react once he let her catch her breath. \"Let's have dinner tonight at your place, and you can give me a fashion show, maybe I will change my mind about the underwear thing if I see it on the right model.\"\n\n\"Won't the club be busy, I mean its Saturday night?\" Bella was surprised by the flirtatious tone the conversation had taken. She was usually the one teasing him as he failed to react; now she could feel his reaction beneath her ass as well as in his voice. It unsettled her.\n\n\"The club will survive a few hours without me down there schmoozing the members,\" he tilted his head. \"Do you have plans already?\"\n\n\"No, not at all and I love to cook, so it's a date,\" she said, quickly covering her surprise.\n\n\"Let's say seven,\" he asked tentatively, unsure of her reaction.\n\n\"That sounds good and will give me plenty of time to prepare something wonderful,\" Bella hugged him tightly and unfurled from his lap. \"I better get back and make the other calls I need to do before we go. \n\n\"Have you got enough cash?\" Rob asked, standing and patting the sides of his boxers as if he had forgotten that he had taken his pants off.\n\n\"Yeah I have a bit of money tucked away for a rainy day,\" she giggled. In reality, she had several credit cards now and always carried a small amount of cash for emergencies. She knew with certainty that her father had managed her money so that she wold never have to worry about her personal finances again.\n\n\"You're so sassy this morning,\" he chuckled and smacked her ass hard enough to make it sting but not leave a mark. He was pleased with her answering squeal of surprise and walked her to the elevator. Rob watched her cross over to her side of the building before returning to his apartment and some needed sleep.\n\nBella gnawed at her lip as she entered the apartment. The twists and turns of her conversation with Rob making her feel like she wasn't quite sure what had happened there. She was glad she would be spending the day with Dorothea and hoped they would have the opportunity to talk some more about what she should or could do, now that the training was over.\n\nThe kitchen had been cleaned, and Bella shook her head, it wasn't necessary as this was a fully serviced apartment. She didn't even have to shop for groceries; she just left a list of anything extra she needed on the counter top before going to work. Admittedly, she had asked that they don't come in on the weekends but she knew if she went out, they would come in anyway. \n\nSitting back up at the bench with a fresh glass of juice, she picked up her phone again and called Stephen.\n\n\"Hello,\" there was concern in Stephens' voice as he answered quickly.\n\n\"Good morning, Master. I hope I didn't wake you,\" Bella said in a pleasant voice.\n\n\"Bella, is something wrong?\" His voice sounded as if he couldn't quite understand why she had called him.\n\n\"No nothing is wrong. I was just wondering if you could spare some time tomorrow to maybe go for a drive. I have been feeling a little claustrophobic this week after all the fresh air on the farm.\"\n\n\"I have all the time in the world for you Bella, you know that. Did you want to go somewhere in particular?\" Stephen asked.\n\n\"I was wondering if that beautiful garden Arek was designing for you was finished,\" Bella said thoughtfully. She had wanted this conversation to be light, and she would say what need to be said when they were face to face.\n\n\"It's a nice drive down to the cove,\" he agreed easily. \"I will come and get you early. How does seven sound?\"\n\n\"That would be great thank you, Master,\" Bella smiled into the phone, letting her pleasure carry in her voice. \"I will see you tomorrow, sleep well.\"\n\n\"Thank you, see you then,\" Stephen hung up, and Bella put down her phone with a deep breath. She could now concentrate on today and remembering suddenly that she had yet to call Lincoln and organise him to accompany them. She picked up her phone again.\n\n*****\n\nBella arrived back in her apartment with her arms loaded with parcels and Lincoln following behind her with an equal amount of shopping. She had gone overboard, but it had been such a fun day that she hadn't been able to help herself. She felt more like her old self than she had in the last year and she had truly enjoyed the small sense of freedom that shopping for herself had given her. \n\nHer current wardrobe consisted of clothes her mother had brought for her and clothes Mel had bought her to replace the clothes her mother had given her. These parcels contained items she liked, things that were more her style and she hoped that they would meet with the approval of the men who guided her life in so many ways.\n\n\"Thanks so much Lincoln. I can't believe I bought so much!\" She looked around at all the bags they had placed on the living room couches. \"You're free now. I won't need you again until Monday morning,\" she said with a small smile.\n\n\"I don't mind at all, it was good to see you and Dorothea having so much fun,\" Lincoln returned her smile. \"I will see you Monday,\" he nodded his head and left her to unpack all her purchases.\n\nBella searched for the bags from Adam's. The continental delicatessen had been a trip out of their way, but it was so worth it to get the best produce. She knew that in reality she didn't have the time to shop for all the everyday items, but she had enjoyed today so much she had thought she should make it a more regular event to just go and shop for the little things she needed rather than relying on others to provide the brand she liked. She had liked finding new things to taste and try along the way. Something she rarely got from her service.\n\nShe smiled, walking to the kitchen; she liked how cosy it felt since the renovations. It wasn't as comfortable as her mother's kitchen, but it was becoming her place to create as she began to cook more often for friends who visited. Putting all the items away and ensuring she did have the extra staples she thought she did in the refrigerator, she returned to the large pile of bags still sitting in the living room.\n\nThe time flew past quickly as Bella took a shower and redid her makeup using some of her purchases. She dressed in a sweet polka dot dress that had a tight bodice and full skirt of the era she loved. Then went back to the kitchen and poured herself a cool glass of water to sip on while she prepared the simple dinner.\n\nShe was still putting together the small platters when Rob arrived, knocking politely on her door. Bella opened it with a smile and took the bottle of wine he was holding. \"Thank you very much, Master, it's one of my favourites,\" she hummed in a pleasurable way.\n\n\"Oh really? Fancy that.\" Rob grinned and followed her into the apartment. He took a seat at the kitchen bench as she gathered two glasses for the wine.\n\n\"How did you know?\" Bella asked, placing the bottle before him to pour the wine. \n\n\"The same way I knew that you would make something with an Italian flavour for dinner. I pay attention, little one, and I have gotten to know you very well,\" Rob winked at her and filled the glasses. Bella blinked and tilted her head curiously. \n\n\"Mel had the opportunity of observing you from childhood, the rest of us are on catch up,\" he chuckled, \"I do try to take note of your likes and dislikes; I think I can guess your preferences in most situations. Aside of the salmon that I had thought you enjoyed. That is the nature of the submissive though, at times they will endure small discomforts to please others.\" His grin was wide, and there was a mischievous twinkle in his eye as he added, \"or endure great pain for others.\"\n\nBella giggled self-consciously and blushed. While she and Rob had never engaged in sexual play, they had always flirted. Mel had named Rob his second when she had taken his collar and at the time he had made no secret of the fact that he could and would use her as was his right, but he never had pressed that claim any further than innuendo and being in physical contact. Recently though, she felt he was pushing that further and Bella chewed her lip as it occurred to her that he took note of these little things, and she knew so little about his likes and dislikes. She couldn't even say for sure that his flirtatious attitude toward her had changed.\n\n\"I'm just going to wash my hands before I am tempted to touch this wonderful spread you have here,\" he took a gulp of his wine and wandered away from her.\n\nBella watched him go. He was as handsome as always in his scruffy way. The first they had met she remembered the feeling of lust that had risen in her. Tall and dark in his biker leathers and heavy boots, his long hair tied back and his too blue eyes twinkling as they did now. She'd had a crush on him from that first moment and, while she understood his reasons, she once again wondered how her life would have been if he had taken pity on her and said yes when she begged for his collar.\n\nHe returned and went to her side of the bench and picked her up, kissing her. Then holding her close, he walked back to the other side and placed her on the stool beside him. \"That's better, now I can see all of you. I had been looking forward to the new underwear though rather than a dress that covers more of you than usual.\" He flipped up the skirt to show her legs and smiled, \"There that's at least a little better.\"\n\n\"I needed some things for public engagements as well,\" she blushed and laughed softly, \"I can hardly visit a children's hospital wearing a gossamer silk blouse that leaves little to the imagination.\"\n\n\"I guess,\" he conceded, \"It is very pretty, if you like that sort of thing.\"\n\n\"Duly noted that it is not your sort of thing,\" Bella laughed and picked at the fruit and cheese platter. \n\n\"Tell me about your day shopping? Did you get anything that might be my sort of thing,\" he waggled his eyebrows, making her laugh.\n\n\"I might have,\" she smiled, her cheeks blooming with colour. \"I spent a small fortune today on makeup and pampering packs for the bathroom. A few books and a couple of old movies, as well as a few dresses and some key pieces of lingerie.\"\n\n\"That's more like it,\" Rob said. \"Now tell me more about the day that had made you look so happy while we finish our glass of wine and eat, and then you can give me the full fashion show. Start at the beginning.\"\n\nBella laughed and began to recount her day. Starting with the retro shop that Dorothea had discovered and where she had bought her polka dot dress that she now wore and a second dress that was reminiscent of a flapper style with a long waist and handkerchief skirt. It would need some alterations, so they had left it in the store to be made to fit perfectly. Rob stopped her every so often in her story and made her backtrack over certain details, but eventually she got to their last minute trip to Adam's to buy some little extras for this evening.\n\n\"So,\" Rob said, finishing off his second glass of wine and pouring the last of the bottle for them. \"By my reckoning, you owe me a fashion show consisting of five outfits including lingerie plus an extra set of lingerie,\" he nodded with satisfaction. \"Let's have a look, shall we,\" he picked up his wine and held his hand out to her as he stood. She laughed and took his hand, letting him lead her into the bedroom. \n\n\"This is the first one, as you know,\" she reached around and unzipped her dress, letting the small sleeves fall forward from her shoulders, she shimmied and slowly revealed the first piece of new lingerie. It was a white teddy made up of translucent material with small lace accents. \n\n\"Very nice,\" Rob nodded and kicked off his shoes before settling himself on her bed, propped up by the abundance of pillows and cushions.\n\nBella moved to the walk-in wardrobe and teasingly looked back over her shoulder at him as she dropped the straps of her teddy from her shoulders.\n\n\"No fair!\" Rob called after her with a chuckle but waited patiently as she once again dressed for him. \n\nThis time, she appeared in a pencil straight navy skirt made from a thick material that was elasticated just enough to allow her to walk but maintain its figure hugging shape. The blouse though made from a translucent fabric held cut outs near the neck that dropped into lace inserts and ribbons of embroidered geometric pattern so as to give her some form of modesty. It wasn't until she turned that Rob appreciated the skirt, seeing the wide white zip that ran from hem to waist giving the voyeur a tantalising fantasy of opening it for all to see. \n\n\"This is the more corporate look I was going for work, sort of sexy corporate maybe?\" she chewed her lip as if expecting him not to agree with her idea of what sexy corporate was.\n\n\"Very sexy corporate,\" Rob nodded, \"No bra with that one I see, so I approve whole-heartedly.\"\n\n\"Well not exactly a bra,\" she began to remove the blouse revealing stickies, \"Some people call these chicken fillets, but the sales girl called them stickies, they support and lift but no bra lines,\" She explained. \n\n\"Interesting,\" Rob said non-committally, \"But you have great tits, you don't need them you know.\"\n\n\"It's a confidence thing, knowing that I am not high beaming everyone,\" she said quietly.\n\n\"High beaming!\" Rob roared with laughter, and Bella turned back to the wardrobe with Rob continuing to chuckle behind her.\n\n\"Wait! I didn't get to see the panties are they stickies too?\" he roared again. \n\n\"I wasn't wearing any,\" she said softly, poking her head out teasingly before disappearing again. Bella modelled two other similar corporate looks before slipping into the ball gown she had chosen for an upcoming event.\n\nThe dress shimmered in a pale green hue as she stepped from the wardrobe, taking Rob's breath away. He listened as she spoke about having the right hair and makeup, using both hands to pull her hair to the top of her head accentuating her figure even more. \n\n\"Are you okay?\" she asked suddenly. \"You haven't made the usual quips and jokes about the design or what I am wearing under it,\" Bella frowned, trying to work out what he was thinking. \n\nRob came to his feet and descended upon her, bending to her height and kissing her gently, \"You look beautiful, little one, truly breath-taking.\" He let his hands wander down her body, feeling the delicate embroidered flowers that lined together in chains to swirl about her body. It was a sexy revealing dress but was done in such a feminine, delicate way it did not seem as revealing as it was. \n\nUp close like this, he could pick out the slight pink tones that softened the green and he was reminded once again of a fairy, the Tinkerbelle persona that Mel had always given her when he spoke about her. It was fitting and suited her perfectly. When he broke the second soft kiss, he saw the confusion in her eyes. His kisses were never full of passion before this moment. His were always the friendly teasing flirtatious kind that stopped short of true intimacy. Realising what he had just done and seeing the look in her eyes, he knew it was time to lay his cards on the table or at least try.\n\nHe had hoped to postpone this moment until after Monday's meeting as he did not want to confuse her anymore, but the wine and the atmosphere had made him more careless than he had been in a long time. Bella tried to pull away slightly, so she could look into his face properly. She wasn't sure what was happening and as always when confused, she turned her thoughts inward and silently studied him. ",
        "\"I'm impressed,\" Rob said lightly. \"I have not seen anything like it, and you wear it so well. You look almost magical, like a fairy or a pixie,\" his voice dropped. \"You are so very beautiful.\" He released his hold a little, allowing her the room she needed without letting her go completely.\n\nHer mind swirled with questions and images and memories. She couldn't find the words she needed to ask the right questions, so she remained silent looking up at him with wide eyes.\n\n\"I am sorry little one,\" Rob said softly, helping her take off the beautiful dress, \"You have learned so much in the last year, especially the last six months. I am a bit slower to learn things about myself and the depth of my love for you.\" He took the dress and hung it over the high-backed chair in the corner of her room. Sweeping her into his arms, he pulled her to the bed; part of his mind was very pleased that she was now nude as his hands caressed her soft skin. \n\n\"When you returned as suddenly as you did and asked for all the things you wanted, I wasn't prepared, I am not sure I had even considered some of your requests. At first I wasn't ready to acknowledge that I wanted or needed a girl in my life, I worried that we were both too broken to fix. I have watched you, though, and you are far from broken. You have taught me more about living than anyone ever could have. You have helped me heal and opened my eyes to how it feels to love someone so much you want only the best for them. I had resigned myself to the fact that Stephen may be the best man for you.\" Rob began to explain, knowing he was making little sense as he continued to talk through her silence.\n\n\"If you still choose Stephen as your future Master, know that I will support and love you just the same as I always have. But you should know that you have another choice, most probably several other choices,\" he lifted her chin to tilt her face up toward him. \"I hadn't planned to tell you this now, like this,\" Rob said softly.\n\nBella was stunned. She adored this man, loved him and relied on him heavily to support and guide her in this world. \"You should have told me sooner,\" Bella said softly. \"I had believed this whole time that it was an impossibility after you denied me your collar when I returned.\"\n\n\"I am sorry, little one,\" Rob repeated. \n\n\"I am not ready now to beg another collar,\" Bella whispered, \"This doesn't change that fact, but I am glad I know.\" She took a breath, \"I have so many questions fighting in my head, I want to say so many things right now that nothing is coming out.\"\n\n\"Dorothea probably knows. She tends to know everything before it even eventuates,\" he chuckled. \"It is nobody's business but yours, so I have not discussed it with anyone until now.\" \n\n\"Master,\" Bella said tentatively. \"I think I would like to explore this more.\" Rob looked down at her and furrowed his brow. \"The thing about the training,\" her voice was very soft, and she flushed deeply, \"Is that I knew we were compatible. They knew the kind of kinks and limits I had, and I knew what to expect to a degree. I was thinking earlier tonight when you were talking about the wine that I didn't know any of your likes or dislikes.\"\n\n\"You would like to know whether I am good in bed?\" Rob chuckled. \"If I can rock your world?\" His laughter became more raucous. \"Of all the things I expected to hear from you little brat that was not one of them!\" He held her against him tightly as he shook with laughter. \"Oh how I adore you!\"\n\nHe had expected confusion, surprise, even anger for his earlier rejection; he had not expected this immediate acceptance of his words and he wondered at it and decided not to press his advantage in that immediate acceptance too far.\n\nRolling her onto her back, Rob pinned her to the bed, holding her hands above her head and gazed down into her eyes. \"I assure you, little brat, I am quite capable of making the earth move for you.\" He dipped his head and kissed her, catching her lip between his teeth and nibbling on it. \"Not tonight, though. Tonight I can show you a glimpse of what might be if you take a few days, to think about what it is you want right now. There is no rush... I will not go anywhere, but neither will I throw away our current relationship by rushing into something before we are both ready.\" Taking both of her wrists in one of his big hands, he let the other drift down to her breast.\n\n\"I will give you a fairly large clue about exploring life with me,\" he smiled and pinched her nipple between thumb and forefinger. \"Do you trust me?\"\n\n\"Yes Master,\" she breathed heavily, feeling her nipple throb as he released his grip. \n\n\"Good girl,\" he stood from the bed and beckoned her to him. \"Come with me.\"\n\nBella stood beside him and took his hand. Feeling confident because of her reaction, he led her out of the apartment and across the elevator to his side of the floor and, rather than into his apartment, he led her to the door at the end of the hallway. When he opened the door, just because it was in a similar location, she halfway expected to see the mirror image of Mel's playroom. Instead, there was a wide expanse of space. He turned on a few dim lights, and she shivered at the tangles of rope and leather straps hanging down from the ceiling like broken spiders' webs above a jumble of large dark furniture.\n\n\"Mel and I had many things in common, but enough differences to always make our encounters with each other interesting. We built the club downstairs based mostly on our own desires and needs. It has expanded over time but at the heart of everything is Bondage. Metaphorically and physically. My inner pleasure is driven by a sadistic bastard who will take pleasure in your pain and tears. My heart, however, longs to be everything to another being again. To know that I am loved so much that a girl will strive to please in everything she does.\"\n\n\"I would treat you as I always have at the club with our friends or at the company amongst professionals, but here at home, there would be rules, strict rules and the sadistic bastard I am will mete out punishments as I see fit.\n\nThis was a side of Rob she had only once glimpsed briefly, and it might have frightened her a little on some level, but when she looked at the expression on his face as he spoke, it excited her more than she could admit to at that moment. She shivered at the thought of what it would be like to belong to him and imagine him as having the affection and caring of Billy in that paternal way, but also all the control and strict, unwavering demands of Mel and Stephen, if not more so. \n\nHe led her out and closed the door abruptly. \"It is not good for either of us to dwell here before our time. I want you to think about all I have said, and all that Stephen will say to you tomorrow. I want you to arrive at that meeting on Monday as strong and level-headed as you have been over the last week. I want you to make the choices you make on Monday on your own. Then if there is the opportunity, we will return to this spot again.\" He found it difficult to be here with her so close and not voice the demands he needed and wanted to make of her, but once that door was open he was unsure if he could close it again so easily. Taking her hand, he walked her back to her apartment and helped her to bed.\n\n\"Will you stay with me until I fall asleep, please Master?\" Bella asked quietly.\n\n\"Always,\" Rob said gently and climbed onto the bed, pulling her into his arms. He kissed her then, and watched her as she closed her eyes, and her breathing evened out to the slow rhythms of sleep.\n\n*****\n\nBella woke alone. Rob had left a note on her pillow, and she smiled as she read, \"Have fun with Stephen today, but not too much fun. R\"\n\nLying back in bed, she considered the twist and turns of her life. Up until Friday evening she had considered Stephen as the only prospect for a relationship like she needed; now she knew she had choices. Rob had told her of his feelings. Jake had asked her on a date. She knew from Charles that Mistress Josie still wished to see her. It was exciting to think about what her life could be like and the fun she could have. The question was... is that what she wanted? She knew she wanted another relationship like that she had with Mel, but she didn't feel that overwhelming desire to please anyone as she did with him.\n\nShe considered Rob again. She had always felt the desire to please him but not in an overwhelming way, more out of respect and love. She had always obeyed Stephen because she must and, while that softened and was enhanced by her feelings for him, she knew it wasn't quite like what she felt with Mel. Maybe she was chasing a unicorn and that sort of desire and the pleasure of pleasing Mel that accompanied it was something that came in time. She tried to remember that first week of her training and the demands Mel made of her. The hint of blackmail she felt by the sheer fact he was her parents friend and could tell them what a bad girl she was. \n\nIt was only when he withdrew from her after the party that she realised how much she wanted to please him, even needed to please him. To see him smile and praise her was such a special gift from Mel and something she already received from the men in her life without displaying that type of devotion. Mel was a hard man for any other to follow. No one knew her as well as he had before that training. He knew how to get inside her head, long before she was even aware of her submissive nature.\n\nBella got up and showered, the thoughts still rolling around in her head. She needed to talk to Stephen. The vision of the tall darkly handsome Master swum into her mind and she smiled. He loved her. She was sure of it, but she wasn't as sure of her feelings, and she wouldn't take his collar unless she cold commit totally to his collar and give all of herself and her world to him. She loved him on many levels, she admitted to herself, just as she loved Rob and Kurt in different ways. \n\nHer mind continued to tumble the thoughts around as she dressed and had a bowl of cereal. She was looking forward to seeing him, the embargo had meant he was strangely absent from her life over the last week, and she had missed him. At seven precisely there was a knock on her door, and she smiled. He was so reliable. She picked up her bag and went to the door.\n\n\"Hello, little one,\" Stephen said cheerfully and pulled her into his arms to kiss her. \n\n\"Good morning, Master,\" Bella smiled. \"I'm ready to go if you wanted to beat the traffic.\"\n\n\"Good idea but I have the Alpha today, so you may need a scarf for your head,\" he suggested. \n\n\"Sure, I won't be a moment,\" she scurried off to her room to retrieve a scarf, leaving Stephen to wander after her into the apartment. Stephen followed the hum of a machine and saw she had started the dishwasher. He also noted the two wine glasses that were sitting to drain on the bench beside the sink. \n\n\"You had company last night,\" Stephen noted. \n\n\"Master Rob came for dinner,\" she answered honestly.\n\n\"I'm glad you haven't been dining alone this week, but I would have thought one of the girls might have come instead,\" he commented with a slightly acidic tone, surprising Bella and making her look up at him with concern.\n\n\"I went shopping with Dorothea yesterday, Rob came to see what I bought,\" she felt she needed to explain.\n\n\"I'm looking forward to today, shall we go?\" Stephen changed the subject abruptly and walked toward the door. Following him out, Bella felt the familiar large hand rest on the back of her neck.\n\n\"I spoke with Charles on Friday night,\" she said softly. \"I understand abut the restrictions he placed on the Masters who trained me.\"\n\n\"I saw you with him in the club,\" he said without emotion.\n\n\"Oh, I didn't see you,\" Bella chewed her lip, wondering why he hadn't come to speak with her if he saw her there. She had missed his presence and thought he would have felt the same. The elevator ride was silent as Bella worried at Stephen's dour mood, and he seemed reticent to break the silence. He helped her into the car and took his seat, bringing the Alpha to life and accelerated out of the carpark. With the roof down, Bella sat back and let her thoughts roll around in her head, knowing there would be no opportunity to speak with ease until they arrived.\n\nIt gave her time to think about her night with Rob, and she found it hard not to make comparisons with the man sitting beside her. They were so different in their approaches to her. Stephen was so like Mel, always stern and in control, his smiles and praise a rare gift that made her heart sing that she was the cause of his pleasure. Rob, on the other hand, was generous with his praise and affection, and she had no doubt about his moods or if he was disappointed in her. \n\nStephen had just needed to get out of the city and the restriction he felt there with Bella. He wasn't happy with Charles's restrictions and, while he would not have approached her himself, he was more than pleased that she had finally approached him. Her suggestion of the cove had suited him perfectly, very few people were there at present, his brother and the managers of the estate were currently overseas, so the main house would be empty. They would be able to discuss their future in the proper manner without being concerned about the interruption.\n\nBella noticed that the further they drove, the more Stephen seemed to relax. About halfway into the trip, he reached over and placed his hand on her thigh, stroking it lightly, making her look up at him and smile. She loved him and all that he gave her, it should be an easy decision to just say yes to him. She knew him better than she knew any other Master, including Rob, and yet she hesitated. Her thoughts turned inward again, and she barely noticed the castle come into view as she was so lost in her thoughts. It took her by surprise when the car stopped, and he shut off the engine. She looked up at the looming stone castle-like building and smiled.\n\nHis mood lifted by being home, Stephen helped her from the car and pulled her into his arms, kissing her deeply. He then picked her up and carried her inside. With a sense of urgency, he kicked the door closed and strode through the house. He went through the door to his tower and surprising her, he turned to a new door. It had been created to look old with its weathered timber and wrought iron embellishments, but she knew it hadn't looked as it did when she was last here. Her memory tickled at the last time she had visited when the garden was being made and, remembering the stairs on the outside of the tower, she assumed they were entering the garden from this side. She was wrong.\n\n\"Don't speak,\" Stephen commanded as they descended into the darkness. One dim light lit the gloom of the medieval-style dungeon. Stephen placed her on her feet beside a marble pedestal on which sat a black lacquered chest, studded with metal. He worked swiftly, unzipping and pushing her dress from her shoulders to pool at her feet. His hands stroked over her body as he cuffed her wrists and ankles and pressed a ball gag into her mouth when she had made no attempt to protest what was quite obviously occurring. \n\n\"I need you, like this, here in this place,\" Stephen said gruffly, grazing his lips along her jawline and down her throat to bite at the indent where her neck met her shoulder.\n\nBella nodded her understanding and consent then allowed him to move her to the centre of the room where her hands were pulled above her head and attached to a chain there. He then went and lit several candles to further light the darkness and show the extent of the room and the equipment it housed. He opened several cabinets along his way, leaving them wide for Bella to see the tools of pleasure and pain at his disposal before choosing one and returning to circle her closely again, his lips grazing over her neck again briefly.\n\nThe soft suede flogger caressed her skin with lightly stinging blows, making her dance on her toes as he circled her. Her body warmed quickly, turning pink and as the temperature in the dungeon rose he stripped off his shirt, revealing his muscled torso and a chest liberally sprinkled with dark curly hair. His muscles bunch and once again he circled her liberally, raining blows across her pale skin, watching the increasing pink shades turn ruddy in the candle light. Her muffled whimpers were almost musical, but he needed more, so he stopped and pulled the gag from her mouth, leaving it to hang about her neck as he kissed her deeply, his need to possess her evident in his passion.\n\nReleasing her, he stepped back and considered her, \"You are such a beautiful slut,\" he growled. \"It is difficult to know you were with another Master, but knowing that you enjoy the punishment of being such a slut as much as I enjoy giving it makes me almost understand Mel's desire to share you and watch others enjoy you.\"\n\nBella had been focused solely on the pain and pleasure he gave her. The way the rippling muscles in his chest and back played as he swung the flogger. The mention of Mel made her brain snap back to the reality of the present and the power of what he was saying. It was true Mel enjoyed showing off not only her body but the power he had over it by offering her to his employees. Images flashed before her eyes of John, Tony and even Jake, though no opportunity had arisen for him to take Mel up on the promise of her thanking him appropriately for his help when he had moved her into his apartment.\n\nHer thoughts of Mel scattered again as the biting blow of a thin flexible cane landed across the soft underside of her breasts. She cried out, and the tears that had been welling in her eyes finally fell on her cheeks. The cane then landed on her ass. In quick succession, two more blows rain on both her breasts and ass, leaving livid red welts and her face tear stained. Her whimpers of pleasure had turned to panting sobs as the heat and pain lanced into her brain.\n\n\"Of course you were collared to him then, he could afford to be generous, knowing that you belonged to him, and another couldn't win you away,\" Stephen's voice softened slightly as he admitted his fear. Bella said nothing, her breathing ragged and breaking the silence with small whimpering sobs. She realised that Stephen could not have known the extent of the public humiliations Mel had rained on her in the week before she had taken his collar and met the big man properly.\n\nWith sudden clarity, she realised that this is what Mel used to do. He would expose the depth of his feelings, his want and his need as he spanked her to orgasm in those early days. It was as if he needed to be in the dominant position to be able to verbalise what he was truly feeling and she looked up at the expression of determination on Stephen's face. \n\n\"Did you enjoy being his whore?\" He grabbed her by the hair as he asked the question, making her tilt her head back and look directly into his face as it hovered over her.\n\n\"I loved him for exactly who and what he was. I would have done anything he asked of me, submitted to anyone he asked me to, even you Master,\" she cried both from the physical pain and the heartbreaking memory. \"You are wrong about one thing, though, he did those things before I took his collar and he had the same concerns about my choice that you do, even though I was a na\u00efve unknown at the time.\" He bent and kissed her to stop her words, words that surprised him.\n\nStephen was shocked by her answer. If Mel had ever doubted his Mastery of her, he had never shown it in public. Mel seemed happiest when others were eagerly groping and playing with his prized slave. It was a source of pride to him that others found her so desirable. For Stephen, at the time, she was merely a curiosity. Such a small delicate looking girl seemed a strange choice for a man he knew to be a sadist. He knew better than that now, and his free hand sought out her breast mauling it roughly before pinching and twisting the nipple hard, just to hear her cry and swallow that cry with his kisses.",
        "Breaking the kiss, he looked down into her tear streaked face and twisted the imprisoned nipple again. \"That didn't answer my question,\" he growled, and Bella frowned trying to remember exactly what the question was. \"You liked being his whore, didn't you? You liked having him watch you perform for him with other men.\"\n\n\"It was what he wanted. It pleased him very much, and that made me happy. Yes, I enjoyed it,\" Bella admitted breathlessly.\n\n\"When you take my collar,\" he said confidently, \"Will you strive to please me so willingly?\"\n\n\"When I beg a collar, I will give myself completely and utterly to my Master, as I did with Mel,\" Bella said softly. He heard the hesitation in her non-committal answer and assumed her talk with Charles had stipulated that she could not commit to anything until the training was officially over. The reassurance he required from her was not going to be forthcoming today, he realised. Her obvious affection for Samuel during her time on the ranch had sown the seeds of doubt he could not shake, even after she had reached out to him and asked him to bring her here today.\n\n\"Fuck,\" he growled in frustration and picked up the flogger, circling her again, watching her squirm and twist, listening to the music of her suffering. Stripping off his pants, he stepped before her and lifted her, wrapping her legs around his hips and pounding up into her savagely. She cried out as he impaled her and swung unsteadily from the chain holding her as he fucked her hard and fast for several long minutes before releasing her and loosening the chain so she could drop her arms.\n\nBending her forward to balance on the chains, he used her own lubricant to open her ass with his fingers before slowly easing his cock into her. He revelled in the tightness of her and the deep whimpers of painful pleasure that issued from her as he slowly forced his enraged cock into her ass. Reaching forward, he grabbed a fistful of her hair and rode her like the pony she had been for Samuel, slamming into her hard to make her cry out her need.\n\nHis hand curled around her waist and slapped lightly at her wide open cunt, grazing his fingers over her clit, listening to her cries change in pitch and volume. He was close to cumming when he felt her legs begin to shake, and she lifted her head to beg for release.\n\n\"Please. Master. Please. May. I ... come,\" the words were staccato as he pounded into her ass hard, fast.\n\n\"Come, little slut. Come,\" he growled deeply as he felt his balls tighten and his cum begin to spurt into her. Their cumming was loud and full of emotion until he eased out of her, releasing the chains to let her relax back onto her knees, leaving her head resting on the bench he had pulled forward. He lifted her head, sat before her on the small bench, resting her head back into his lap.\n\nKnowing what he expected, she began to swipe at his cock with long lazy strokes of her tongue as he petted her hair. She could feel him becoming aroused again as she continued to clean his hefty cock, but he stopped her, pulling her head up gently by her hair.\n\n\"You have left a big mess,\" he pointed to the floor between her knees. \"Clean that up... pet, and we will go and see the garden.\"\n\nThe use of the word pet was not lost on Bella, and she turned bending down to the smooth new tiles and began to lap at the small puddle of their mixed cum while Stephen pulled on his jeans and waited by the outside door. Once the puddle was gone, she crawled to his feet and was rewarded by his smile and petting of her hair before he helped her to her feet and opened the door to climb the stairs with her, slapping her ass so as to make her lead the way.\n\nThe garden was beautiful, and she stopped as she cleared the stairs to look around. It reminded her of the secret garden from a favourite childhood movie of the same name. Stephen rested his hand on the nape of her neck and propelled her to a small stone bench beside a pond filled with lilies and koi fish. Taking a seat, he indicated that she should kneel on the soft green grass before him.\n\n\"You will not be begging my collar at the meeting tomorrow, will you?\" Stephen challenged in his deep bass, but his tone was soft and surprisingly accepting of this knowledge.\n\n\"No Master,\" she said honestly biting her lip. \"It is not because I have chosen another nor is it because I do not love you, I do,\" Bella added, wanting him to understand how she felt and desperately trying to remember all the words she had planned to use.\n\n\"Then why not take it? It is yours if you would only ask,\" Stephen's voice was steady despite his disappointment and frustration that bordered on anger.\n\n\"I can't give myself to anyone else completely yet,\" Bella said softly, looking down. \"Your question in there, the dungeon,\" she looked back over her shoulder. \"It was like you knew what was in my mind. Mel possessed me so completely. I would have done anything he asked, I think, without any thought of my welfare because I trusted him that much to make sure I was kept from any real harm.\" She tried to explain using the examples he had used earlier. \"He pushed into my mind so far he is still there, I still compare everyone to him, and I try not to because it's not fair.\"\n\n\"You will always have a little of Mel with you. That is understandable. You have been making a lot of progress to move on with your life, though,\" Stephen said, his voice still soft and understanding.\n\n\"It was just a year ago that I came into this lifestyle and took his collar. It's less than a year since I lost him,\" she said sadly. \"So much happened to me in just one year and I am trying very hard just to find out who I am now without him, but I am not really without him. His name comes up in almost every conversation, at the club and the company, even here,\" she looked back over her shoulder toward the dungeon.\n\nStephen nodded, accepting the blame for his part in her dilemma. \"I did not realise,\" he said shortly.\n\n\"It is difficult to compete with a ghost who has left such a legacy,\" Bella said. \"I need to find out who I am without him, not as someone else's girl but as me, Bella. When I beg for a collar, I want to be able to give myself completely, without reservation, without making comparisons and without judgements,\" she sighed. \"Most of all... without people forcing the expectation of being Mel's slave onto me. He never had one before me. I get that, but everyone seems to believe I am some super submissive, and I think in all honesty, I will never live up to the reputation that came with wearing his collar.\"\n\n\"You are wrong,\" Stephen tilted her chin up to look at him. \"Every day you prove your worthiness of that reputation and his love. Many slaves are beautiful and obedient, even more are willing to submit to sadistic sexual exploits. Few consider the ramifications of their actions as deeply as you do. Few would be strong enough to live through the trauma that beset you, let alone submit to the army of dominants Mel left to watch over you. It is a difficult thing to try and make everyone happy while trying to stay true to yourself.\"\n\n\"That's just it... who am I now?\" Bella asked. \"I can't ever go back to the na\u00efve girl that came to work for Mel. Now I am known as Mel's girl. I'm the girl made rich after the death of a playboy millionaire. I'm the submissive executive and part owner of a male dominated sex club. Before Mel, I was just Bella Biancotti, a business major who was sexually curious. Now I'm just a girl trying to come to terms with everyone else's expectations and never being sure about my expectations for my life anymore. All I have that is one hundred present mine is my family and my silly little business plan that has been amended so much I am not even sure it's mine anymore.\"\n\n\"It is true that I have my own agenda and expectations,\" Stephen admitted. \"I am sure there are a few others who feel the same way. What I want you to understand though is that I will always love you and watch over you, even if it is not my collar you choose. I am not saying I would be happy, but I would be accepting and respectful of your choice. I think I can speak for most of the men in your life when I say, we want you to live up to your potential and to be happy. If time is what you need, then I will support that decision,\" he said with a note of disappointment in his voice.\n\n\"Thank you, Master,\" Bella said softly. \"I know that this is not what you wanted.\"\n\n\"No, it is not,\" he agreed. \"But while you are here in my home, you will serve me as if you wear my collar and belong to me. I have plans to make use of the precious time we have together today as I fear there will be much less opportunity for us in the foreseeable future.\""
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant/submissive",
        "master",
        "dungeon",
        "collar",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/possessing-bella-ch-20"
}