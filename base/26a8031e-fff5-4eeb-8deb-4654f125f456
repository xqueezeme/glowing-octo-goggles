{
    "title": "What The Cat Dragged In Ch. 15",
    "pages": [
        "Hi Everyone!\n\nFirst of all, a huge THANK YOU to all of you who have commented, and to those who have been following it. Reading what you have to say always makes my day, and lets me know that I'm doing an okay job with this story.\n\nI hope you continue to enjoy and continue to let me know!\n\npsyche b.\n\n15. Bruises\n\nDawn was starting to creep into the single room, making the solid shapes of furniture gray and hazy. The frail had finally fallen asleep half an hour before; his hand was tangled in her hair, her head resting on his chest. He knew she wasn't deeply asleep yet, so he stayed still. Her arm was draped over him. Even in the near-dark, he could tell that her shoulder was swollen and he could just about make out the slight shadow of a deep bruise under the skin. There was a much darker, much more prominent mark in the shape of his hand just above her wrist.\n\nFor once, he didn't have to wonder what Jimmy or Wilson would have said or done. Wilson would have come back in with overly sincere apologies and promises never to do it again. It would have been complete bullshit and she would have seen right through it. Jimmy would have run. Not a goodbye, not a thanks for all the good fucking, nothing. Either way, the frail would have walked away and never looked back. \n\nWhatever he'd said, or hadn't said, or implied or whatever seemed to be enough for her anyway. He'd never apologized for anything in his life, so he didn't know how that little speech was supposed to go. He couldn't say he knew what guilt felt like, though if he had to venture a guess about that one he might have named the tight pain in his chest. That wasn't something he was going to tell her about though. He couldn't even say he'd never do it again because they both knew that he would. What the fuck did that leave? 'It ain't like I did it in front of people.' 'I could've broken it when you told me to, be glad I didn't.' 'You can still use it.' She hadn't seemed to need more and he didn't really feel like trying to come up with something they both knew was bullshit.\n\nShe struggled a little, tugging at blankets awkwardly. He stopped her hand and pulled the covers up around her shoulders. She murmured something and settled again. Half of him thought she was fucking stupid for trusting him at all...but only half of him.\n\n*~*~*~*~*~*\n\nKelly woke slowly. She was on her side; the hair on his chest was tickling her nose. His heavy arm was resting around her waist. She moved her head slightly, but kept the rest of her body still. Even though she was far less skilled at telling the time by the quality of light in the room, she could tell it was later than usual. Kelly bit her lower lip and moved her arm slightly; her eyes squeezed shut against the pain that shot out from her shoulder. For a moment, she bit her lip to hold back the little cry of pain. After the sharpness of it abated to a pounding ache, she started to squirm out from under his arm.\n\nHis low growl was accompanied by his claws digging into her bottom. She smiled and kissed the middle of his chest softly. \"Bathroom.\" She murmured.\n\n\"Come back.\" The growl was still in his voice. He hadn't eased the pressure on her skin.\n\n\"It's late.\"\n\n\"Fuck what time it is. You'll come back or I ain't lettin' you go to start with.\" His claws bit just a little deeper. Any further and he'd draw blood. The sensation got Kelly's heart beating faster in a good way.\n\nShe smiled. \"Where else would I go?\" She moved to kiss him and he nipped her lower lip.\n\nHe pushed her away. \"Hurry up.\"\n\nShe wrapped his shirt around herself again and trotted across the room. Every movement jostled her arm and that made each step painful. At least behind the closed door of the bathroom she could banish some of the painful stiffness without trying to hide her pained expression from Victor. Without a doubt, he knew she was in pain, broadcasting it felt like an accusation and a sign of weakness.\n\nBy the time she came back out again, she was able to move more freely. As soon as the Ibuprofen kicked in she would be able to manage pretty much like nothing had happened at all. In a few days, she wouldn't need as many pills. After a week or so it would be like nothing had happened. At least, if this was like the last time, that's what would happen.\n\nShe took off the shirt before getting into bed again. As soon as she moved close, Kelly could feel his erection pressing into her tummy.\n\n\"No wonder you wanted me to come back.\" She smiled and let her fingers trail over the familiar contours of his thickly muscled stomach.\n\n\"Whatcha think you're doin'?\" He bumped his head against hers. Something that might have been a growl or a purr vibrated through his chest.\n\n\"Thought it was kind of obvious.\" She pushed back against his forehead.\n\n\"Obvious you forgot your fucking manners.\" He nipped her ear.\n\nKelly arched against him, his hardness rubbing against her tummy. \"But you're so tempting.\"\n\nHe gave a short laugh. \"People've called me a lot of different things, but never tempting.\" \n\n\"So? Does that mean it's not true?\" Her thumb stroked the front of his hip, her lips teased his.\n\nA low growl. The tip of claws poked into the soft tissue of her breast sending little jolts of pleasure chasing down over her tummy to the place between her legs. \"So you gonna tease me all fuckin' morning?\"\n\nShe smiled and drew her fingertips over the underside of his shaft, tracing the thick veins. It pulsed under her light touch. Kelly moaned and wrapped her hand around it, stroking slowly. For a long moment they moved together in a slow dance of advance and retreat. He growled and bent his head back, his fangs bared. She leaned forward and let her nose stroke down the front of his throat, her lips not making contact with his skin until they were below his collarbone. \n\nHis hand dug into her hair. Kelly read the signal and presented her throat. She had no illusions about the potentially deadly outcome of such complete trust. Logic never mattered in those moments. Her grip around his shaft tightened when he nipped at the exposed, tender flesh. He growled and his fangs pressed in just a little more. Anxiety shot through her, but it was the kind of anxiety that warmed her and generated pleasant dreams. Her hips arched toward his.\n\nHe chuckled. \"Something you want, frail?\" The rough surface of his tongue soothed the indentations in her skin.\n\n\"You-\" Her phone started to ring. \n\nThis time his growl was clearly angry. \"Let it ring.\"\n\n\"It's probably Granna.\" She reached toward the nightstand, but he grabbed her hand.\n\n\"So what? She can't wait awhile?\" He bit her nipple hard enough to bring a yelp of pained surprise.\n\n\"It's late. If I don't answer-\" She moaned when his tongue swept over the tender bud. Her back arched. \"If I don't answer she'll just keep on calling.\"\n\n\"Make it quick.\" He let go of her hand.\n\nShe checked the number. \"Hello, Granna.\"\n\nHe pulled the covers off of her, leaving her completely exposed. She blushed crimson.\n\n\"Where are you?\" Her grandmother asked.\n\n\"What do you mean? We're at the cabin, where else would we be?\" His tongue started teasing over her right nipple. Kelly bit down on her lower lip to stifle the moan.\n\n\"It's nearly ten.\" The old woman said, as if that explained everything. Victor placed a line of sharp nips down over her stomach. Kelly flinched and trembled with each one.\n\nStop, Kelly mouthed silently. \"I know that. We were up late last night and we slept in a little this morning.\" \n\nHe grinned up at her and stroked one claw down her thigh. She shook her head and pressed her legs together. He clucked his tongue and pushed her knees apart, holding them wide and taking great care to study her most intimate places.\n\n\"What kept you up so late? You're not sick are you?\"\n\nKelly's fingers dug into the bed and her back arched when his tongue swept along her slick slit. She looked at him pleadingly.\n\n\"No, I'm fine. We'll be there after lunch.\" There were tears in her eyes from holding back.\n\nHe opened her wider, his tongue finding the little bundle of nerve endings. The soft surface and rough surface flickered against it alternately.\n\n\"Are you sure? It sounds like your voice is trembling.\"\n\nShe could see the grin in his eyes. That talented tongue pushed her further.\n\n\"It must be the connection. I'll see you in a little while.\"\n\n\"But-\" Kelly ended the call before her grandmother could ask anything else.\n\n\"Oh God that was not fair.\" She pressed against his mouth, hungry for the release he'd silently promised.\n\n\"Got you off the phone, didn't it?\" He grinned at her, his lips and tongue playing over her inner thighs.\n\n\"Well don't stop now.\"\n\n\"Givin' me orders, frail?\"\n\n\"Please don't stop now.\"\n\n\"What're you gonna do for me?\" A tongue flickered over her opening. It was almost enough and thoroughly unbearable all at the same time. \n\nShe whimpered, tears streamed down her cheeks. \"Anything, you know that.\"\n\nHis chuckle slid over her like warm honey. \"Sometime I'm gonna have to teach you just how much 'anything' is.\" He teased her with a knuckle. \"Sometime when I ain't itching to fuck you.\"\n\nHe was inside her quickly, her legs wrapped around his waist, drawing him in deeper while her hands wandered over his chest.\n\nHe grasped her uninjured wrist and wrapped her hand around one of the polished spindles of the headboard. Kelly tried, but the pain of raising her injured arm eclipsed the pleasure of having him inside her. As always, he read her reaction. He laced his fingers with hers and held it next to her at a comfortable angle. The claws on his other hand traced bright red scratches down over her breasts and ribs while his hips moved in a forceful rhythm. \n\nThe combination of stinging pain and intense pleasure drove her quickly into her release. Her hips met his, her cries mixed with his growls, her grip on the headboard was all that kept her connected to the world outside her own body. By the time his roar rattled the windows in the small cabin, Kelly's pleasure had crested twice. She reached for him when he pulled away. \n\nHe laughed and nipped the heel of her hand. \"Still hungry for my cock?\"\n\nKelly's head spun when he turned her on her side. She yelped when he pushed inside her again. \n\n*~*~*~*~*~*\n\nThe frail wasn't sleeping, but she was quiet and relaxed, her back against his chest. Her fingers were laced with his. He swept his tongue over a scratch on her shoulder. It was the only one that was still oozing. Most of the bright red lines had faded to pink trails. \n\nShe squirmed. \"'S only a scratch.\"\n\n\"Still bleeding.\" He'd grown to appreciate tenderness, but he still loved the taste of her blood just as much as he loved the taste of her pussy. \n\n\"'Cause you're picking at it.\" He could hear a smile in her voice, but the scent of pain teased his sensitive nose.\n\n\"Goddamn you have the unparalleled capacity to be a pain in my ass.\" He held her still, but applied more careful pressure. She trembled, but stopped struggling.\n\nFor a few minutes she was still, her body molded to his. If anyone had asked, he would have said he was keeping her close so he could fuck her without having to chase her down. In the beginning that was the only part of it that made any sense to him. There had always been more to it though. She turned and snuggled into his chest, his arms tightened around her. It still amazed him how such a small gesture could make him feel so fucking powerful, but it did. He could terrify just about anyone into doing pretty much anything that he wanted, and that had been enough for decades. \n\nUntil he didn't have to terrify her into doing what he wanted. Not just in bed, though he still loved fucking her. It was all the little shit she did that he pretended not to notice. All the times she smiled at him, even after she knew what he was. All the times he'd hurt her, and, after the storm of his anger had passed, she'd settled down next to him like always. The way she didn't flinch away from him, even when his dark moods made hiding safer. The way he could see trust in her eyes, even when he could smell anxiety on her skin. None of those things could be commanded or forced. He hadn't known he'd want any of them. Not until they fell into his lap in a bruised and bloody package that still managed to be full of piss and vinegar.\n\nDidn't change how he felt about the rest of the world. He still loved the feeling of digging his claws into soft flesh, feeling warm blood sliding down his skin in thick rivulets. He loved the sound of a begging victim. Whether it was for mercy, for life or for death, it all had the same chords of desperation, agony and terror. The scents added texture and depth to the rest. Blood, fear, anger and everything that made up a living being coalesced into a heady perfume of passionate agony. To a cold bastard like him, it was symphonically orgasmic. The feeling of power was different \u2013 more fleeting \u2013 but it completed the feeling she gave him. Or she completed it, he had no fucking idea which way that went but he guessed it didn't matter much either.\n\nShe was sleeping now, a little smile on her lips. Much as he wanted to spend the day in bed with her curled up against him, he had shit to get ready. He tugged on her hair carefully, tilting her head so that his lips could reach hers. She sighed and parted her lips, her tongue stroking his. It was almost as good as fucking her. When he broke the contact she smiled at him.\n\n\"My Prince Charming waking me with a kiss?\"\n\nHe smirked. \"More like your Feral Godfather telling you to get your ass up because he's hungry.\"\n\nShe laughed and brushed her lips over his collarbone. \"I'll get you some lunch and take a shower.\"\n\n\"Nah. We'll eat on the way through town.\" He gave her a shove, being careful of her shoulder.\n\nKelly got up and pulled his shirt around herself, she glanced over her shoulder. \"We're leaving soon, aren't we?\"\n\n\"Tomorrow night. You gonna bawl?\"\n\nShe smiled a little. \"Probably, at least for a few minutes. I think Granna and I probably get along better from a distance, though.\" She got up and started toward the bathroom.\n\n*~*~*~*~*~*\n\n\"Why'd you do it?\" Joe asked. He and Creed were sitting in the kitchen while the frail and her grandmother were in the living room. Occasional laughter drifted out to them, broken by the murmur of conversation.\n\nCreed looked at him through narrowed eyes. \"The fuck're you talking about?\"\n\n\"Her arm. She's too proud to let it show, but I can tell she's in pain. If it'd been an accident, she would've said something.\"\n\nHe could smell the old man's anger. \"She didn't tell you all the other shit that was going on either.\"\n\n\"No.\" Joe watched Creed warily.\n\n\"Stan's been working overtime to be a pain in the ass.\" Creed told the story, using only the details that the frail already knew.\n\nJoe watched him. Creed could smell the anger spiking again, though he figured it was for different reasons.\n\n\"When are you getting her out of here?\"\n\nCreed gave a half-smile, just enough to bare one fang. \"What makes you think I ain't gonna leave her here with you?\"\n\n\"'Cause I've seen how you look at her.\" Joe slowly turned the brown beer bottle in front of him. His eyes were still on Creed's though. \"For an old man, I have a damn good memory. Last time I saw you, you looked at everybody like prey. Some were closer to the top of that list than others, but everybody was on the list someplace. That hasn't changed for the most part. When you look at her,\" He shook his head a little, looking for the right words. \"She's not on that list. I am. So is Anna, but I tell myself that we're lower down because of Kelly. You'd rather cut off your own balls than leave her here.\"\n\nA low chuckle rumbled through Creed's chest. \"You don't miss a fucking thing either.\"\n\nHe smiled a little. \"Where do you think Carl and Kelly got it from?\"\n\n\"Tomorrow night. I have to finish up some arrangements first.\"\n\n\"Where-\"\n\n\"I'm not telling you. I haven't told her either.\"\n\nHe nodded. \"Probably better that way. I'll start getting Anna used to the idea, hopefully she won't make too much of a scene.\"\n\n\"You're still pissed off.\" Creed drained the last quarter of the beer in one long swallow.\n\n\"You're goddamn right I am. I spent years worrying about her, knowing she was being hurt. She's supposed to be safe now.\"\n\nThe statement brought back the confusion and anger from the night before. He pushed it aside and gave a bored shrug. \"She look scared to you?\"\n\nJoe looked away. \"No.\"\n\n\"She is safe.\" He stated firmly. Without another word, he got up and walked out into the cold yard and scented the air. He was tempted to hunt again, but he didn't catch the scent of anything big enough to really put up a fight. Anything too small would only serve to piss him off more. The whole thing with the frail was fucking complicated and he didn't have time to try and figure it out now. He checked his phone and saw that Conlon had called about an hour before.\n\nHe dialed the number. It gave him something solid to do with his hands and mind. \n\n\"Conlon.\"\n\n\"Creed.\"\n\n\"I figured out why Stan is sending the dumbass brigade after you.\"\n\n\"This I gotta hear.\" His curiosity was immediately piqued.\n\n\"Stan's been traveling in some pretty shady circles.\"\n\n\"Shady how?\" Creed stood watching the house. He could see the frail and her grandmother moving around in the kitchen.\n\n\"Shady like the kind of characters that hire us.\"\n\nHe growled. \"This bastard's got more layers than a fucking onion.\" \n\n\"It's not as solid as I'd like it to be, but it's about as good as I'm going to get. Your girl knows something and whatever that something is; Wilton doesn't want anyone else to know that she knows.\"\n\n\"Think I heard Abbot and Costello do this routine.\"\n\n\"I admit, it sounds crazy. It's the only thing that makes any sense. He's being so damn secretive that he's screwing his objective, he's using fifth-rate talent-\"\n\nCreed gave a derisive snort.\n\n\"What? I'm being too generous?\"\n\n\"Goddamn right. You got everything there is to get?\"\n\n\"Yeah, and thank you for reminding me how little it takes to bribe some people.\"\n\n\"Get the first flight out.\" He went on to give Conlon instructions for the rest of his part in his plan. The other mutant might figure the rest out, he might not. It didn't matter to Creed; Conlon didn't need to know the rest.\n\n\"Got it. Anything else?\"\n\n\"Hypnocyn.\"\n\nThere was a pause on the line. \"The drug?\"\n\nCreed rolled his eyes. \"No, the fuckin' racehorse.\"\n\n\"Never heard of you bothering to drug anybody, that's all.\"\n\nHe growled. \"At my age you get bored with the same old shit.\"\n\n\"Hypnocyn it is.\"\n\nCreed could see from the body language that the old woman was trying to pick a fight and the frail was doing her best to ignore it. \"Good. Lemme know when you land.\" He ended the call. The old man might be right about the list and his place on it, but the old bitch was pushing her way higher by the minute.\n\n*~*~*~*~*~*\n\nHer grandmother had started as soon as she and Victor walked in the door the following morning, drifting between tears and anger. Kelly worked hard at not letting any of it get to her. Leaving would be hard enough, if she accepted even a tenth of the guilt that her grandmother was trying to heap on her, it would be impossible. \n\nShe wanted to be with Victor. She knew she belonged with him and she knew that Victor wasn't about to let her go. None of that made it easier to manage the storm of emotions that swirled through her head and her heart. Victor's fits of temper were always frightening, frequently violent and usually resulted in the death of some helpless animal. Once it was over though, it was over. Even if she was the one who had upset him in the first place, once his initial anger was discharged, that was the end of it. Her very existence seemed to offend Stan's sensibilities, but he never made a secret of that and Kelly had never invested any emotional energy into caring what he felt. Her mother had never been one for assigning guilt; she was far more versed in martyrdom.",
        "Difficult as things were between Kelly and her grandmother, it was a relationship that Kelly ached for. Her grandparents were the only family she had and the only connection she had to her father. She was so afraid that she was going to screw it up somehow. Maybe Victor wasn't the only one who was bad with all the sentimental bullshit.\n\n\"You still haven't explained why you're so set on this.\" Her grandmother jabbed the knitting needle into the next stitch. The gesture was filled with obvious anger.\n\nKelly sighed. The thought of having a pleasant final day had evaporated already. She saw her new goal of tolerable slipping away as well. \"What more can I say?\"\n\n\"You can start with something that makes some sense for a change.\"\n\n\"I've been making perfect sense, Granna. You just don't want to hear anything I have to say.\"\n\nAnger made the old woman's lips nearly vanish. \"It isn't right.\"\n\n\"In your opinion-\"\n\n\"Not just my opinion.\"\n\n\"You've taken a poll?\"\n\n\"I don't need to.\"\n\n\"Of course not.\" Kelly started packing her knitting back into her bag.\n\n\"What are you doing?\"\n\n\"Getting ready to leave.\" It took every ounce of strength she had in her to keep from crying. \"I have some things to do before we go.\" She got up and started for the door.\n\n\"You're as stubborn as your father.\" Her voice cracked. \"Have you even stopped to consider what he would think about you living with....with someone like Victor?\"\n\nKelly stopped. \"Someone like Victor?\" She looked at her grandmother, the old woman looked away. \"Tell me that doesn't mean what I think it means.\"\n\nThe old woman was on her feet. \"Kelly-\"\n\n\"I can't believe what I'm hearing.\" Kelly was stunned.\n\n\"You didn't give me a chance to explain.\"\n\n\"After where I've spent the last few years, do you really think I need you to explain?\" The anger and hurt made her head spin.\n\n\"It's not the same.\" Her grandmother was speaking quickly. \"I'm grateful to Victor for helping you and I certainly don't hold his...nature against him-\"\n\n\"As long as he remembers his place?\" Anger was quickly overtaking hurt.\n\nHer grandmother searched for the right words. \"In my day people stayed with their own kind. That doesn't mean there was anything wrong with any of them. They just didn't mix.\"\n\nKelly took a deep breath. \"Things change, Granna. It amazes me every day that Victor is willing to put up with how physically fragile I am compared to him, not to mention all the trouble I've caused because of Stan and Dawes and everything that went on before that whole mess. In spite of that though, he never makes me feel like I'm damaged goods. Like none of what came before matters.\" She shrugged. \"I don't pretend to know why he can be that generous, I just count my blessings every day that he is. It's your choice whether you accept that or not, but you're going to have to find a way to live with it.\" She started toward the door.\n\n\"The last time I saw you, you were still sleeping with a teddy bear.\" \n\nThe statement made Kelly turn to look at her grandmother. The older woman had tears streaming down her cheeks.\n\n\"The last day you spent with us, you scared me half to death my climbing that big maple tree in the back yard. You just looked at me and said 'I got up here okay, I'll get down okay'.\"\n\nKelly smiled a little. \"You made Grampa come up and get me.\"\n\n\"And you were so mad at me.\" She laughed a little. \"At least until I asked you to help me bake those peanut butter chocolate chip cookies you used to love. Then you forgave me.\"\n\nKelly laughed a little. \"I'm still just as stubborn.\"\n\n\"I know, but I missed everything else. When I see you in my head, you're still that little girl because I don't have any memories of you going to high school, or going on your first date, or your prom. Then you show up on the doorstep and you're a young woman and you've been through so much that I can't even bring myself to think about. I don't know how to reconcile it.\"\n\nKelly sat down again. \"I don't know either, Granna. I know that I can't go back though.\"\n\nHer grandmother nodded and wiped at her eyes. \"Don't go yet. You said you weren't going to leave until six, we still have an hour.\"\n\nShe swiped at her eyes. There was too much emotional tension gathered in the room, and neither she nor her grandmother could do anything more to really resolve it at that moment. Kelly smiled a little. \"You said you were going to teach me how to knit cables. Is an hour enough time?\"\n\nThe older woman gave a quivering little smile. \"I think so.\" "
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "hand job",
        "oral sex",
        "straight sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-15"
}