{
    "title": "Good Girl Revenge",
    "pages": [
        "Bluette arrived at Maeve's cottage at seven-fifteen, under a riotous Los Angeles sky filled with color. The brush fires in the mountains had lent the sunset a particularly vivid glow, which almost made up for the dense layer of smog worsened by the smoke. \n\nCottage. There was no other word for it. Like something a Disney princess might live in while hiding from her evil stepmother and awaiting the handsome prince who was going to make everything just peachy. \n\n\"Guess that makes me the fairy godmother,\" Bluette snickered to herself as she parked at the curb and eyed the long, steep flight of steps that climbed the slope, to where the cottage nestled in a cluster of trees and flowering shrubs. \n\nThe contrast between that whimsical setting and herself was apparent even to her, and if any of the neighbors had seen her, they would have goggled or fallen dead on the spot. The neighbors \u2013 the Three Bears, the Seven Dwarves, the Three Little Pigs, Hansel and Gretel... it had to be, because every other house Bluette could see was just as cute as the one in front of her. \n\nShe looked around, expecting to see a host of friendly woodland animals doing yard work. Closest she got was someone's dog, but in this fairytale neighborhood even the mutt scrounging around the trash cans was wearing a bright pink bandanna, and cocked its head so adorably at her that she wouldn't have been surprised if it started to talk. Or sing. \n\nIn such a place as this, one did not expect to see a busty blonde bombshell in a black vinyl microskirt, boots, an unzipped denim jacket tattered artfully into long strips from the shoulders to the waistband, and a halter top of electric-blue that mimicked the Survivor logo (not that it was readable, the lettering strained and squashed as it alternately rose and dove over the hills and vales of Bluette's cleavage). Her hair was teased until it begged for mercy, large silver hoops depended from her ears, and her make-up was sultry without being cheap \u2013 for the price, it had damn well better not look cheap! \n\nAs she began the long trudge up the steps, Bluette wondered if sometimes she dressed a little extreme even for a rock star... \n\nShe reached the porch at long last, small muscles in her thighs and calves twitching from the exertion \u2013 it wouldn't have been so bad in athletic shoes, but in five-inch heels, her legs were crying for mercy. The porch was lined with \u2013 heaven help us! \u2013 gnomes. Seven of them, and could she guess their names? What do you think? There were also windchimes shaped like fairies and unicorns. \n\nMaeve opened the door before she could ring the bell. \"I don't think I can do this,\" she said by way of greeting. \n\n\"It's going to be fine.\" \n\nBluette stepped inside, and Maeve's entire face turned into an exclamation point as she got a good look at the outfit. Maeve herself, following Bluette's instructions to 'dress like a bad girl,' wore black suede pants that looked like the sort of thing a highwayman or 18th century poet might wear, and a shiny gold tank top with \u2013 gasp! \u2013 no bra. She was clearly unhappy about it too, crossing her arms over her perky but small breasts. Her only other token nod to bad-girldom was lipstick of fire-engine red. \n\n\"I called as soon as the message came in,\" Maeve said, averting, with effort, her eyes from Bluette and gesturing to welcome her into Fantasy- land. Every available space was crowded with prints and paintings and sculptures and carvings that continued the same theme begun outside. Amid all the knickknacks and novelties, the few electronics and appliances seemed weirdly out of place. \"It went just like you said. I didn't answer when it rang, just listened to him.\" \n\nA red light was blinking on the answering machine. Maeve pushed a button, and after the beep, D.J. Mack's voice filled the room. \"Hey, Maeve. Okay, okay, I'll come by tonight and get my CDs and stuff. Don't know why you couldn't send them over. I guess you want to yell at me. Suit yourself. I'll be there around eight.\" \n\nAfter that, a click and then nothing. Maeve fiddled with the machine, so that the light began to flash again, giving the impression that she hadn't checked her messages at all. \n\n\"I don't know if I can do this,\" she said again. \n\n\"Sure you can.\" \n\n\"But...\" \n\n\"You want to pay him back, right?\" \n\nShe nodded, that strawberry hair a paler echo of the sunset. \n\n\"Relax, would you?\" Bluette set a companionable hand on her arm and felt Maeve thrumming like a high-tension wire. \"We're just going to order some pizza and have a good time.\" \n\n\"Are you sure this is the right idea? To make him think I'm... I'm...\" \n\n\"He was pissed at you because he thought you were a stuck-up Miss Priss prudy-girl, right? So the absolute worst thing you can do to him is make him realize you had some secrets of your own, make him want to drop dead in agony at the very idea of what he'd been missing.\" \n\n\"What if he tells?\" \n\nBluette tossed her head, earrings jangling, and laughed. \"Who'd believe him? Sour grapes because you broke up with him \u2013 don't even say it; as far as the rest of the world needs to know, you did the dumping. With your reputation, it's the last thing anyone would ever expect.\" \n\n\"Just so,\" said Maeve. \"It's ludicrous. No one would believe it. Not even D.J. How could I ever hope to convince him that...?\" \n\n\"He's not going to need much convincing. Every guy is ready and willing to believe that about any gal. The magazines they read and the videos they watch will have done all the groundwork ahead of time. The problem's in making sure it looks natural.\" \n\n\"Exactly! How can something like that ever be natural?\" \n\n\"We can debate that one another time. The important thing is, Maeve, that you come across as relaxed and enjoying yourself. That's the impression you want to give. Relaxed. Enjoying.\" \n\n\"I don't know if I can.\" \n\n\"That's why I'm here to help. Come on. We've got a while before the pizza gets here.\" \n\nBluette led the pliant and unresisting Maeve through the cottage, to the single bedroom at the back of the house. It was primarily in shades of cream and pink, and Bluette saw right away that while the chair by the window would work fine, the twin-sized daybed simply wasn't going to do. The carpet, however, a plush expanse of dove-grey with roses, was deep and soft. \n\nMaeve, in her bad-girl outfit of black and gold, stood in the middle of her own bedroom looking as though she felt as out of place as a nun at a strip club. She would have felt far more comfortable and at home wearing some frilly white nightie. And slippers. With bunnies on them. \n\n\"What do we need to do?\" she asked. \n\n\"Make it look genuine.\" Bluette nonchalantly began to undress. Jacket, boots, and she was reaching for the zip in the back of her skirt when she caught Maeve's goggle-eyed stare. \"What? Never been around another naked woman before? Nothing I've got that you don't have too. Only diff is, I've got the economy-sized, Costco packaging on some items.\" \n\nA red tide washed over Maeve's face, but she giggled all the same, and even if it was a shrill and nervous one, it was a noise Bluette was glad to hear. \"That's certainly true. And I have. Seen other women, I mean. I went to an all-girls boarding school in Boston. But you... you're... they're...\" \n\n\"Real.\" The zipper undone, she began wiggling her skirt down past her hips. Beneath were high-cut panties in a snakeskin pattern, but of a metallic blue that Mother Nature had never envisioned. A tattoo, a butterfly in bright hues, graced one inner thigh, and this in particular caught Maeve's glance like a magnet. \"Though sometimes they even doctor the pictures, can you believe it? Like they needed to. So tell me more about this girls' school.\" \n\n\"There isn't much to tell.\" \n\n\"No after-hours playtime with your roommates?\" \n\nThe red tide turned to scarlet. \"I don't know what you mean!\" \n\n\"Oh, yeah?\" \n\nStammering and fixing her gaze on the floor, Maeve confessed, \"Well, there was one time... one of the older girls... she snuck into my room one night and got into bed with me. She wanted me to touch her, wanted to touch me too.\" \n\n\"Did you let her?\" \n\n\"A... a little. She was insistent, and I didn't know any better. But I made her leave.\" \n\n\"Why?\" Bluette could tell that the recollection was having an effect on Maeve; against the thin fabric of that gold tank-top poked two little points. \n\n\"I... I was afraid.\" \n\n\"Because it felt good?\" \n\nMutely, Maeve nodded. \n\n\"There's nothing wrong with that. It's supposed to feel good.\" Bluette moved closer and pitched her voice low. \"Did you come?\" \n\n\"No!\" \n\n\"But you almost did. And that's what scared you, that's why you told her to scram. But it's okay, Maeve. You touch yourself, don't you? No harm in that, is there? So there's no harm in touching someone else. Or having someone else...\" here she stroked Maeve's hair, \"touch you.\" \n\nMaeve shivered. Her gaze darted up to Bluette's, then dropped to the floor again, but she didn't draw away. \n\n\"If we're going to make this look good,\" Bluette whispered, \"we've got to relax and trust each other. I'm not going to hurt you, and I know you're not going to hurt me. Go ahead.\" \n\nSlowly, shakily, Maeve touched Bluette's wrist. Her fingers crept, timid and mouselike, up to the elbow. \n\n\"See?\" said Bluette. \"I don't burn, and I don't bite.\" Her breath wanted to quicken at the fun of this seduction, but she controlled it and kept it calm. That strawberry hair was as lush and silken as it looked, and she could hardly wait to see it spread out across the carpet as the perfect and only backdrop for Maeve's nude body. \n\n\"I don't know what to do,\" Maeve said. \n\n\"Try this.\" Bluette leaned in and brushed her with a light, brief kiss. She felt the other girl's intake of breath in a gasp. There was a sweet taste to her mouth, a pink taste, and maybe it was the association with the hair but Bluette's first thought was of strawberries again. \n\nGrasping her shoulders gently, Bluette pulled Maeve against the cushiony pillows of her breasts and kissed her again. A firmer kiss this time, and as she flicked her tongue swiftly over Maeve's lips, she caught that taste again and placed it \u2013 not the fruit but the flavor, pink Quik powder stirred into milk. \n\nMaeve sighed and put her arms around Bluette, palms against the bare-skinned curve of her back. A subtle change went through her body, the tension seeping away. It wasn't quite relaxation, but it was bordering on acceptance. \n\nSo Bluette took full advantage of the moment and turned the testing kiss into a full-blown frenchie that left Maeve breathless and more than a bit starry-eyed; Bluette had never personally kissed D.J. Mack, but she knew people who had, and was fairly sure that she could outdo him with one lip tied behind her back. \n\nAfter that, it didn't take much coaxing for Maeve to agree to let Bluette lift her tank-top over her head, revealing no tan lines on skin that might have never been hit by direct sunlight, pale and beautiful. Her breasts were just as small and perky as envisioned, but tipped with nipples of delicate pink, the very shade of strawberries just ripening to succulence. \n\nMaeve glanced from herself to Bluette and a shadow of doubt began to come back, a shadow of inadequacy, as she measured her own against the Famous Two. Before that doubt could find a foothold, Bluette cupped one in each hand and murmured the old adage about more being wasted, and all objections seemed to melt away like frost. \n\nEmboldened now, Maeve tried to fit her hands around Bluette's, confined as they were by the electric-blue spandex. She caressed them diffidently and unsurely, but she did caress them, and when Bluette tugged the bandeau down to her waist to let them spring free in all their proud glory, Maeve didn't make so much as a murmur of protest. \n\nNor did she when somehow the two embracing women got lowered to the carpet, nor when Bluette couldn't resist any longer from finding out if those nipples tasted as strawberry as they looked. Maeve uttered a small soft cry of mingled pleasure and disbelief as Bluette's skillful mouth went to work, neglecting neither side. \n\nOnce she had indulged for a while, she leaned back and wordlessly invited Maeve to reciprocate, and only the barest flicker of hesitation preceded Maeve bending her head to first kiss, then lick at, a rigid, coral-red peak. A luxurious torrent of silky hair fell over Bluette's bare torso. She curled her hand around the back of Maeve's head to urge her to greater diligence, none-too-subtly encouraging her to alternate teasing fluttery licks with the hard, deep suckling that she liked so much. \n\nThey were writhing on the floor in slow languor and Bluette had just decided it was time to move below the waistband of Maeve's black suede pants when the doorbell chimed \u2013 it was one of those musical jobbies and it didn't surprise Bluette in the least when the tune it played was a snippet of 'Over the Rainbow.' \n\nMaeve sat up, startled and blushing as if caught doing something nasty \u2013 which, let's be honest, they were from the perspective of most of the uptight country. \"It's him! It's D.J.! I can't let him see me like this!\" \n\n\"That's the whole idea,\" Bluette said. \"But settle down. It's just the pizza guy. I'll go let him in.\" \n\n\"The what? Let him in?\" \n\n\"All part of the plan.\" \n\n\"But... but...\" \n\n\"Trust me. I know him. Not all pizza guys are scrawny pimply dweebs or burning-eyed psychopaths.\" She sprang up, shucking the bandeau that had been relocated to service as a belt, and pranced through the cottage in just her metallic snakeskin panties. \n\nOpening the door, she smiled brilliantly at the man on the other side. He was wearing a red uniform with a white and blue Pizza X-Press patch on the pocket, a nametag that read \"Lance,\" and white high-top sneakers. A steaming cardboard box was balanced on one hand, the tantalizing scents of cheese and crust and spices following the breeze into the house. \n\nBluette looked past him, down the long flight of stairs, to where a nondescript hatchback was parked behind her car. It had a plastic lighted sign mounted on the roof \u2013 Pizza X-Press, Hot and Ready in 30 Minutes or It's Free. \n\n\"Are you?\" she asked with a sly smile. \n\nLance, who was six-foot-heaven of muscles and bronze all overtopped with a tumble of chocolate-brown hair, grinned. \"Aren't I always?\" \n\n\"Where'd you get the car? Nice touch.\" \n\n\"Couldn't drive my Beemer.\" \n\n\"No, guess you couldn't.\" She stepped back and beckoned him in, leaving the door slightly ajar. \n\nLance's lip curled as he took in the setting. \"Kinky. So what's the deal? Debbie Does Wonderland?\" \n\n\"Damn near.\" She took the pizza box and led him toward the back of the house, refreshing him on his role. \n\nMaeve was still sitting in the middle of the floor, her discarded tank-top clutched to her chest, eyes eating up her face. \"Bluette... Bluette, what's going on?\" \n\n\"Don't worry. Lance is just here to watch.\" \n\n\"What?\" Her face went dead white. \"Watch us?\" \n\n\"Take it easy,\" he said warmly. \"I swear, it won't do a thing for me.\" \n\n\"Lance is an actor. And gay. I know him from way back, and asked him to do us this little favor.\" \n\nAs Maeve tried to assimilate this knew information, Lance stripped out of his red jumpsuit as casually as Bluette had shed her own clothes. He had on skimpy black briefs underneath, which bulged with an impressive package. \n\nBluette watched him with a sort of wistful appreciation, thinking ironically to herself what a shame it was that one of the few guys she could actually tolerate was one she couldn't ride like a carousel pony. Or maybe that was why she could tolerate him. He was one of the limited selection of the male population who could actually carry on a coherent conversation with her, and not just stammer and drool and never raise his eyeballs above her collarbones. \n\nLance situated himself in the chair, legs stretched out. \"Whenever you're ready, ladies.\" \n\n\"I don't understand?\" quavered Maeve. \n\n\"It's okay.\" Bluette rejoined her on the floor. \"Let's just pick up where we left off.\" \n\n\"But...\" \n\nBluette silenced her with a kiss, and soon overcame Maeve's concerns. Part of it was her own skillful strokings and nuzzlings, part of it was Maeve's increasing confidence as Lance merely sat there and watched with all the interest of someone dragged by a blind date to a movie he had no particular interest in seeing. Soon, thanks to Bluette's ministrations, Maeve was beyond caring, or even remembering, that they had an audience. \n\nSeeing her distraction, and seeing by the nightstand clock that it was five minutes until eight, Bluette gave Lance a signaling wink. He nodded in return and closed his eyes, drumming up some private fantasy of his own. It didn't take long until he was primed and ready \u2013 hot and ready in 30 seconds, or it's free, Bluette thought, and laughed. \n\nBluette peeled those suede pants off of Maeve and found white stretch-lace panties with clusters of little sateen roses and ribbons at the hips. She had never realized before what fantastic legs Maeve had... long and lithe and shapely, and what a darlingly sleek little rear end. \n\nLance brought out a finely-shaped instrument and began to play, his fist curled loosely around it as he worked it up and down. \n\nMaeve didn't notice. Her eyes were dreamily closed, her hair fanned out just like in Bluette's imaginings. She had initially mustered enough modesty to press her thighs together as Bluette's hand slid between them, but as Bluette persisted, gradually Maeve's legs relaxed. It was an easy task after that to persuade her to let Bluette roll those panties down. The thatch of hair beneath was downy and kitten-soft, and a red-gold a shade or two darker than that on Maeve's head. \n\nThe girl was quivering, in anticipation rather than fear. Her eyes stayed shut, rapid breaths slipping in and out of her parted lips. She mewled faintly as Bluette nudged her knees apart and took position between them. Watching Maeve, taking both pride and delight in the way every new touch brought rapturous expressions, Bluette gently petted and fingered until Maeve was moaning in abandon. \n\nFrom the front of the house came a perfunctory knock. The door, ajar, would be swinging open... he would be frowning, stepping inside. Having seen the pizza car outside, he'd be smelling the aroma of it on the air. Seeing the light blinking on the answering machine, hadn't she gotten his message? Didn't she know he was coming over to get his stuff? Where...? \n\nBluette 'psst'-ed a warning to Lance, who was lost in a world of his own \u2013 a world no doubt populated by more hardbodies and hunks than a double-sized International Male catalog. He opened his eyes and pretended to be absorbed in the spectacle before him as his hand continued to pump, faster and slick. \n\nParting Maeve wide, opening those tender strawberry-pink folds, Bluette put her agile, knowing tongue to work. The first contact made Maeve's back arch off the floor, and a surprised, ecstatic cry burst from her. She sank her hands into Bluette's tousled blond hair and held on as Bluette lapped and circled and probed. \n\nOut of the corner of her eye she saw the bedroom door swing the rest of the way open. D.J. Mack got a full step into the room before the scene hit him, and stopped dead in his tracks. Bluette spared him a single glance, a single smoldering glance straight off of the most recent cover of a Blade Ballet album, making sure he recognized her. \n\nAbsolute thunderstruck astonishment rooted D.J. to the spot. Bluette experienced a sudden weird transference and saw what this must look like from his perspective, exactly as she'd planned it to look. There in front of his bulging amazed eyes, his prim-and-proper ex-girlfriend was thrashing and crying out, on the verge of an unbelievable orgasm. And one of the most desired women in America (in nothing but snakeskin- pattern undies and a smile), was about to give it to her. While some guy, some incredibly lucky stud of a pizza guy, pleasured himself eagerly while looking on. That same lucky guy who would, in all probability, join the pair of minxes for the second course! ",
        "A senseless gabble of sound came from D.J. Mack. Bluette, with a haughty sniff at the Flirty Boy, bent again to her delicious task and applied herself with vigor. Maeve came like the Fourth of July, one dazzling series of explosions after another, wailing a long and drawn-out \"Oh, God!\" in that clear, unmistakable voice. \n\nLance, whose timing excelled and who was ever the showman, went off at that moment too, grunting like a lion and spouting like a whale. \n\n\"Oh, God,\" Maeve said, this time in a strengthless gasp. Still with eyes tightly shut, she half-rolled onto her side and draped one thigh over the other, shuddering in reaction. \n\nBluette rocked back on her heels, licking her pouty lips and purring and in all ways acting the cat who'd just been at the cream. She pretended to be ignoring D.J., but actually kept a close eye on him as the shellshocked look on his face gave way to one of slow but incredulously dawning awareness. \n\n\"Hey, what the hell?!\" he said. \n\nAt that, Maeve jumped and looked around, and saw him standing there, gape-mouthed. \"D.J.!\" \n\n\"What the hell? What the holy fucking hell?\" he elaborated. \n\n\"Who's the guy?\" Lance demanded. \n\n\"Who's that guy?\" D.J. countered. \n\n\"Is that the shithead that dumped you?\" Bluette asked. \n\nMaeve scrambled to her feet, that gorgeous hair flying around her, stark naked and beautiful, high color in her cheeks and sparks snapping from the blued-steel of her eyes. \"What the fuck are you doing here?\" She delivered the line, F-word and all, with brilliant anger and purpose. Bluette could have applauded. \n\n\"What are you doing?\" D.J. shot back. \n\nAn insane but brief urge to yell \"Wazzuuuuup!\" seized Bluette. She resisted, keen to see if her coaching had paid off. \n\nIt had. Maeve glared at D.J. as if she could fry him to a grease-spot with the power of her fury. \"Get the hell out, you son-of-a-bitch!\" \n\n\"But... no, hey...\" D.J. looked from her to Bluette \u2013 idly stroking her own breasts just to rattle him \u2013 back to Maeve. A greedy piggish glint had come into his eyes. \"Hey... I'm cool... I'm not mad.\" \n\n\"You dumped me, or did you forget?\" \n\n\"That was... hey, that was before I knew... I thought you were --\" \n\n\"I know what you thought I was,\" hissed Maeve. \"You thought I was a nice girl. I thought you were a nice boy. Looks like we both had our secrets!\" \n\n\"I guess he didn't know you very well,\" Bluette said. \"What a dumbass.\" \n\n\"Maeve, honey, listen to me. We... um... why don't I just...\" He kind of flapped his hand at his shirt buttons. \"We can work it out. I know we can. I made a mistake.\" \n\n\"I'll say!\" Maeve said. \"Get out.\" \n\n\"No, don't be like that... you want to have fun with other girls, hey, believe me, that's A-OK with me!\" He probably didn't realize how pleading, how desperate, he sounded. \n\n\"You want to stay.\" Her voice dripped contempt. \"That's what you're thinking?\" \n\nD.J. swallowed with an audible click, rasped his tongue across his lips, gorged on Bluette and Maeve with his gaze, and bobbed his head like one of those tacky spring-necked dogs found in the rear windows of cars. \n\n\"Yeah, right,\" sneered Bluette. \n\n\"Hey, aren't you one of the Flirty Boys?\" asked Lance, as if he hadn't known, though of course Bluette had given him the whole story beforehand when she'd set all of this up. \n\n\"You want to stay,\" Maeve said again. \"You really want to stay. You like the idea of two women going at it, is that it?\" \n\nBobbing, faster, that rear-window dog in a car going over train-tracks at high speed. \n\nBluette suddenly knew where Maeve was headed with this and held back, with effort, a hard-edged grin of admiration. Hadn't taken much to bring out her inner bad girl, after all! Lance picked up on it too and looked at Bluette with a tilt of the head as if to ask if he was really hearing that. She nodded slyly. \n\n\"You think,\" Maeve went on, \"that we'd want you to join in.\" \n\n\"Sure,\" said D.J. \"Girl-girl, that's only the warm-up act.\" \n\nMaeve planted her fists on her hips, jutting her perky little breasts arrogantly at him. \"Well, I tell you what. I've always wondered about watching two men together. Why don't you and Lance there do a warm-up act of your own, and then we'll see if we want to join in?\" She glanced to Bluette for support, and Bluette gave it in the form of an enthusiastic nod. \n\n\"Fine by me,\" said Lance, and evidently it was, because although he'd just shot jets all over the upholstery, he was rising to attention again just at the idea of having one of the Flirty Boys get down on his knees and wrap some hot lip-synching lips around his unit. \n\nD.J. couldn't have frozen faster if he'd been dunked in liquid nitrogen. If his eyes had bulged before, they bugged out now like they were going to yo-yo out of their sockets. \"Huh?\" \n\n\"You heard her, stud-boy,\" Bluette said. \"You wanna play? Those are the terms.\" \n\n\"I'm no goddam fag!\" D.J. proclaimed, staggering back a pace, as if he thought Lance might just leap out of the chair, drag him down, and slide in the back door before he knew what was happening. \n\n\"I do believe that is a double standard,\" Maeve said. \"I guess you'd better go.\" \n\n\"Yeah,\" said Bluette, standing and coiling an arm around Maeve. \"We have some... unfinished business to attend to.\" \n\n\"That's right.\" And, magnificently, just as if she'd done this sort of thing a million times before, Maeve turned to Bluette and soul-kissed her. \n\nA whine of sheer agony burst from D.J. When they parted, he tried again. \"You don't need this guy! Send him away, and I'll take care of you both, you never had it better!\" \n\nBluette laughed, not her patented girlish Betty-Boop giggle but a full, throaty, mocking laugh. \"Oh, sure!\" \n\n\"You want to stay, you heard the conditions,\" Maeve said, daring him with her eyes, though underneath the dare, Bluette sensed a tremor of apprehension \u2013 what if D.J. took her up on it, and then she had to follow through? \n\nD.J. risked a look in Lance's direction, quick and scared as if he thought Medusa might be sitting over there and one glimpse would petrify him. Lance, idly rubbing himself, dropped an inviting wink, and D.J. almost leapt out of his skin. \n\n\"Huh-uh, no way, not gonna happen!\" he announced in a shrill squeak. \"This is crazy! This is totally crazy shit!\" \n\nMaeve shrugged. \"Your stuff is in a grocery bag on the kitchen table.\" \n\n\"Don't let the door hit you in the ass on the way out,\" added Bluette. \n\n\"But... but...\" \n\n\"Sorry,\" she amended. \"Don't let the door hit you in the butt on the way out.\" \n\nWith a final look of utter wounded disbelief, D.J. backed out of the room on stiltlike legs. Maeve followed to throw him the bag of his belongings; it smacked into his chest and he only caught it by reflex. Bluette, lounging in the bedroom doorway, smirked at him as he tried one last time to beg his ex to reconsider, and Maeve cut him dead with a look. \n\nShe slammed the door behind him hard enough to make two fairy dragons and a sculpture of Cinderella's castle leap to their ceramic dooms from a shelf, and watched through the curtains as D.J. presumably tottered down the stairs to his car. \n\n\"Fantastic!\" Bluette cheered. \"Did you see that sorry piece of crap? You were wonderful, Maeve!\" \n\n\"I can't believe it. I can't believe that really happened!\" \n\n\"Damn,\" said Lance. \"I was hoping he'd go for it.\" He had retrieved his clothes and dressed as gracefully as a Chippendales dancer in reverse. \"I better get going too. You owe me twelve bucks for the pizza, Bluette. Plus tip.\" \n\nBluette rolled her eyes at Maeve. \"Most guys would tip us for getting to see what he just got to see.\" She fished a twenty from her purse and told him to keep the change. \n\nWith Lance gone, it abruptly struck Maeve that she was naked. On the heels of that, the rest of the realization of what she'd done loomed over her, poised to topple like a pre-earthquake-code building. She sank against the edge of the kitchen table, blinking. \n\n\"Oh, God,\" she murmured, but there was no orgasmic joy in it this time, only a numbed, stunned shock. \"I... you...\" \n\n\"Mmm-hmm,\" said Bluette. \"And how.\" \n\n\"Was it... convincing?\" \n\n\"More than convincing.\" She smiled her most sultry smile. \"I'd call it genuine.\" \n\nMaeve nodded, almost against her will. \n\n\"So,\" Bluette said, \"what now?\" \n\n\"Well...\" Maeve blushed and looked shyly at her. \"You did say we had unfinished business...\" \n\nBluette grinned and held out her hand. Maeve took it, and they returned to the bedroom together."
    ],
    "authorname": "Sabledrake",
    "tags": [
        "suede pants",
        "maeve back",
        "door hit",
        "relaxed enjoying",
        "light blinking",
        "maeve",
        "black suede",
        "hot ready",
        "unfinished business",
        "pizza guy"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/good-girl-revenge"
}