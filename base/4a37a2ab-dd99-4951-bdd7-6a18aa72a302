{
    "title": "Andy",
    "pages": [
        "Everyone should have a hobby. As a matter of fact, I have several, but the one that I always fall back on is good old fashion girl watching. That's just what I was doing after I sat down on a bench in one of the city's larger parks.\n\nIt was an unusually hot spring afternoon. The weatherman finally hit one right, as the temperature was almost eighty-five. A few stubborn clumps of snow hung on with great tenacity as they hid behind the trees. I decided to get a run in before the weather changed back to rain and storms. It appeared quite a few people had the same idea as the place was packed. I can't blame them, as Compton Hill Reservoir Park had to be one of the nicest parks in St. Louis.\n\nI took a well-deserved break on a park bench. Besides, the view was great. There were scores of young women out and about trying to tan up those white legs from the dark winter months. As I caught my breath, I watched a pair of early robins searching frantically for small twigs and other nest building material. Love was in the air, at least for the robins. Me, I didn't have plans for love. No, there were just too many lovely girls to pick from. As a matter of fact, the more I thought about being tied down with a snotty nosed kid and a wife caused a chill down my back.\n\nThere were dozens of kids out and about, and I'm sure their mothers were glad since they've been cooped up all winter long. There was a small pond for lack of a better description in this park. Water just draws kids to it; always has. A handful of kids were playing around the water's edge that day. It was also where a dozen geese call home.\n\nI sat about thirty feet from the water and watched this little blond haired kid play with the geese. He had several slices of bread clutched in his hands and would run out into the geese. They would come from everywhere trying to pull the treat from his little fingers. He'd giggle, chase the birds back, only to retreat again to a picnic table to fetch another slice. He was quite a towhead with perfect snow-white hair, cut with bangs above his eyes. From the scraps and cuts on his knees, I bet he was quite a handful.\n\nThere were several young women that had gathered around the entrance to the pond. Some were sitting on park benches, other standing and talking to each other. Every now and then, one or two of them would glance over at the group of kids playing; keeping an eye out like moms are supposed to do. I tried to figure out which one was his as there were quite a few blond haired women in the group. Some were just plain drop dead gorgeous.\n\nI turned my head for an instant to follow a pair of shapely legs as a pretty girl walked by. That's when I heard a scream so blood curdling it damn near stopped my own heart. I looked up and saw this mop of white hair bobbing in the water. That's when everything just clicked together. At light speed I found myself in chest high ice-cold water fishing for a tuff of hair. Lucky for me, the water was still mostly clear, the summer pond scum had yet to grow, and I yanked him out by his belt.\n\nOnce out of the water I notice his lips were blue, yet I could feel his little heart beating. I flipped him over on his back and a half-a-cup of water came pouring out of his mouth. I pinched off his nose and puffed in a few quick breaths and lo and behold I had one screaming scared kid on my hands. He pinked right up.\n\nI stood at the water's edge when his mother ran up; the cold wet mud oozed between her toes.\n\n\"I just turned my head for a second! Just a second!\" she said in a panic.\n\nThe kid was really yelling out a storm and she took his wet body from me.\n\n\"S'okay... S'okay,\" she said while she rocked him in her arms.\n\n\"That's good. Let him cry. It will help get his blood oxygenated again,\" I said to her.\n\n\"Are you a doctor?\"\n\n\"Naw, thought about it. I do read a lot\u2014a hobby of mine.\" I told her trying to break some of the tension.\n\nI guess it helped some as she flashed me a quick smile. Apparently someone phoned in the accident as I could hear a siren off in the distance. I could pick out the ambulance's bubble gum light atop its roof as it sent out its rays of red and blue light. It seemed that within seconds the ambulance pulled up.\n\nSomeone handed me a blanket, I was shivering from the cold water, and I noticed the kid and his mom getting into the ambulance. An ambulance attendant was trying to take his blood pressure, and the kid was just screaming his lungs out. Seizing the opportunity I fished my wallet out from my back pocket letting the water drain from it and I pulled out a soggy business card.\n\n\"Here,\" I said as I handed the soaked card to her, \"give me a call. He's going to be just fine but I'd like to know how you both make out anyway.\"\n\nShe flashed me another quick smile. \"Thanks for saving his life. I'm Ellen, and this is Andy,\" she said as she leaned out the rear door of the ambulance.\n\n\"Not a problem, Ellen, glad I was here to help. I'm Jacob Peters by the way. My friends call me Jake.\"\n\nI looked up at the small boy, \"Well, Andy, I guess you'll have a story to tell your dad when he sees you.\"\n\nEllen's face suddenly took on a cold hostile look. The look of fear on her face evaporated as quickly as a snowflake on a hot spring rock replaced by something sinister. \"Andy doesn't have a father.\"\n\nI rubbed the top of his wet head. \"You can tell your friends your story then, Andy.\"\n\nI handed the blanket back to one of the guys from the squad as the sun was quickly warming me up.\n\n\"You okay, sir?\" someone asked.\n\n\"Just fine. I've got a bit of adrenaline to burn off, but I'm just fine.\"\n\nI turned and watched the doors close on the ambulance. I waved at the kid and strangely enough, I saw him wave back. I started down the running path and as I ran, I started thinking why in the world was Ellen so pissed about Andy not having a dad; especially in this day and age.\n\nI was thinking of Ellen and Andy when two young beauties passed me by. \"Oh shit,\" I said probably to loud. As I watched the derrieres of the two girls bounce up and down as they jogged down the path, a gorgeous woman in short shorts ran past me going the opposite direction. I've always been an ass and leg man so I wasn't going to past that up. Literally. I did what any red-blood man would do after being cooped up all winter long surrounded with women wearing long skirts and flared jeans\u2014I made a quick U-turn and started to run behind her. Everyone should have a hobby; I happen to like watching girls.\n\n****\n\nThe days piled up and it seems that the teaser Mother Nature gave us was just that. The rest of the week reverted back to the gray, dull days of late April. I didn't give much thought about Ellen and her son. Ellen was not drop dead gorgeous. She was no Playboy bunny. Call her cute. Attractive. You know the kind; pretty in a girl next door way. Yet I wouldn't mind getting to know her better. I was just about ready to call it a day when my phone rang and I saw line two light up.\n\nI was surprised when it turned out to be Ellen. We had a brief conversation. Andy was just fine. A few tests were conducted and he wasn't even in the emergency room for an hour. I felt bold and on a whim, I asked Ellen out for a dinner date at Rolando's. I was somewhat surprised that she agreed so quickly. I was to pick her up around seven this coming Saturday evening.\n\nThe rest of the week seemed to fly by. I was anxious as hell about the date I had arranged with Ellen. After all, I wouldn't mine wrinkling the sheets with her. Before I knew it, Saturday night arrived and I pulled into the parking lot of her apartment. The place seemed to be quite nice, no holes in the yard and no cars up on blocks. I walked up on the porch and pushed the doorbell button. The door's hinges creaked just a bit and there standing before me was Ellen.\n\n\"Wow!\" I said almost startled.\n\n\"I've never been to Rolando's before. I wasn't sure what to wear.\"\n\nI didn't want to stare. But I wondered to myself what happened to the young girl with the muddy feet I watched leaving in the ambulance and whom this beautiful young woman was that stood before me. Perhaps I was a bit too hasty in my assumption about Ellen's appearance.\n\nI thought she had changed something. I remembered her hair; long, straight and parted in the middle. Just like all the other women wore their hair. I looked at her and her hair was shagged. Layered in softness that surrounded her round face. Her skin, slightly ivory, seemed to glow under her pink blush. Under straight brows her blue-green eyes were filled with the golden light of the fading sun.\n\nShe wore a deep burgundy wrap dress with coffee colored hose. Her square heeled shoes were only a couple of inches high. I tried not to stand there and eye her up one side and the other, but I couldn't help myself.\n\n\"From what I can see, you hit it right on the head.\"\n\nI watched her blush. \"Thanks...\"\n\n******\n\nWe arrived at Rolando's and soon entered that awkward phase of a first date. Each of us would toss those little quick questions back and forth at each other trying to dig up a bit more information. I could tell Ellen was up tight so I ordered a sweet red wine. A glass and a half later, Ellen seemed to open up.\n\n\"So, how's Andy?\"\n\n\"It's one day at a time with him. He's so darn accident-prone.\"\n\n\"He's just a little stinker. How old is he?\"\n\n\"He just turned three several months ago, and he's been non-stop ever since.\"\n\n\"He'll outgrow it. I did. He's just a boy.\" I tipped my glass to my lips and drained it. \"Say, I don't want to pry, but you mentioned at the park that Andy didn't have a father. You're divorced?\"\n\nEllen didn't look at me but instead swirled the red liquid around the bottom of her glass. \"No...not divorced. I never married.\"\n\n\"Oh, I see.\" I watched her stare into her glass with such intensity I thought the glass would break. \"A lot of women are having kids now and aren't getting married.\"\n\n\"He died.\"\n\n\"I'm sorry.\" Now I felt like a pile of shit. \"Perhaps this isn't the time.\"\n\n\"Naw, it's okay.\" She placed her glass down on the table with exaggerated care.\n\nI poured a bit more wine into her glass. Ellie stared down into it and I thought for a second or two that she was going to tear up and cry. Instead, she pushed herself back into her chair and smiled at me. Then she brushed a few stray hairs out from her eyes and leaned over.\n\n\"He was on leave from the Army,\" she began, \"We knew each other for years, went to the same high school, partied when we could. Had a lot of good times, him and me.\" Ellen let out a long, smooth breath then continued. \"He gave me that old line. You know, the one about going back to the war and we may never see each other again. So we ended up in bed. Russell, that was his name, went back and three weeks later he was killed in action. He never knew he had a son.\"\n\n\"Oh shit, Ellen, I didn't want to drudge up bad memories. I guess you must have loved him an awful lot?\"\n\nEllen fidgeted with the silverware as I watched a corner of her mouth turned up and a small smile snuck out. Then, just as quickly, it was gone.\n\n\"I loved him enough...\" Ellen voice faded into the din of the restaurant.\n\nI tried to change the direction of the conversation. \"I spent two years in the Army, too. They needed medics, so I became one. But, you know, I wrote a short article for Stars and Strips and it got noticed. Next thing I knew they set me up in front of a typewriter and I became a journalist. Guess they didn't need that many medics after all.\"\n\n\"You're a writer?\" Ellen asked as she played with the silverware.\n\n\"Apparently a better writer than a medic. Oh, city desk editor for the newspaper downtown.\" I could see Ellen's confused look.\n\n\"I work with other reporters and edit it all together. City desk reports on the political workings of the city, county, and state. I love my politics. Politicians are experts at lying, stretching the truth and hiding facts. I love watching them squirm when I catch 'em in a lie,\" I said. I think I may have pushed my chest out a bit and Ellen giggled.\n\n\"I work in a law office,\" Ellen said. \"By the way, my friends call me Ellie.\"\n\n\"Ellie. I like that.\"\n\nI watched her blush and then I just said it without thinking. \"Ellie, you're quite attractive.\"\n\nEllie opened her mouth as though to speak then shut it again. Her gaze was making me nervous. Something in her eyes had changed. I wasn't sure just what it was. Without knowing why, her body arched for several seconds. She squirmed slightly in her chair and her eyes darted about. A single finger moved around the rim of her glass.\n\n\"I didn't mean to come on to you like that,\" I said.\n\nShe reached over and touched my hand. Her fingers were so smooth and I felt goose bumps pop up on my arm.\n\n\"I'm flattered,\" she said. \"It's been a long while since a guy told me that.\"\n\nAs though on cue, our food arrived. Before I knew what happened, we were standing in front of Ellie's apartment. Our evening together was over. And now the awkwardness of a first date coming to the end begins. I entertained the idea of a good night kiss but somehow I felt Ellie wasn't going to do that. We stood together, her hand on the doorknob to her apartment for what seemed like forever.\n\n\"I had a great time tonight, Ellie.\" She just nodded her head. I reached out with my hand figuring a handshake was all I'd get when suddenly Ellie rose up in her heels and placed a quick kiss on my right cheek.\n\n\"Thank you for saving my son.\"\n\nShe smiled at me for a second, and then lowered her eyes to the ground. Then suddenly she rose up again and placed a long, wet kiss on my lips. \"I haven't been told I'm pretty in a long while.\" I heard the door open and she stepped in. Just before the door closed I said, \"You're welcome, Ellie.\"\n\n*********\n\nIt was back to the grind. Two weeks passed. We talked a few times on the phone and met for lunch now and then. Ellie always seemed to be on my mind.\n\nThe staff and I were busy with the latest news and most of the reporters and photographers were out in the field. Just my friend Mick and I were in the office. Mick had just finished an article about the city council and dropped it into the out box sitting on his desk. He pushed a plug of tobacco into his pipe and brought it to life with the snap of his lighter. Out of the corner of my eye, I saw him turn his head. \"Damn, who's the new girl?\"\n\nI heard the distinct tap-tap of a woman's heels as they struck the floor. I watched as Mick straightened his tie. I was looking for an article and I had just turned my back to the door.\n\n<br> \"Hi. They told me in the other office Jake Peters was in here.\"\n\nI knew that voice. \"Ellie? What're doing here in this den of iniquity?\" I asked as I turned around.\n\n\"I was thinking 'bout you and had some free time. I just wanted to stop in and say hi.\"\n\nI introduced Ellie to Mick and then Ellie sat on the edge of my desk swinging her left leg back and forth. We chatted for no more than fifteen minutes. It seemed no sooner than she sat down, when she stood. \"I've got to get back to work.\" Ellie caught me by surprise when she slipped her hand around my neck and placed a kiss right on my lips. \"I been thinking of doing that all morning.\" Ellie smiled at Mick and me and then walked out of the office.\n\nI looked over at my friend. \"I wonder what the hell that was all about?\"\n\n\"She has feelings for you,\" Mick said.\n\n\"Now don't you go starting things.\"\n\n\"Well,\" Mick said as he drew a long draw from his pipe, \"she walked at least four blocks, maybe more to get here.\"\n\n\"How would you possibly know that?\"\n\nMick pulled the pipe from his lips and touched his big schnozzola with the tip of his finger. \"I've been sniffing out news and facts while you were still shitting in your diapers. The nose knows.\"\n\nI laughed at him. \"Now, Mick, how would you know she walked that far? She drove her car I bet.\"\n\n\"Elementary, my dear Watson. Elementary.\"\n\nI rolled my eyes. \"Okay, Sherlock, you're up, how'd you know?\"\n\nHe pulled the pipe from his mouth, took the bowl in his hand and pointed the stem at my desk. \"Ellie is a fine looking woman. She's got nice legs. I noticed she wore tan nylons, pantyhose most likely given her age. I saw several sandy gray splotches on the back of her right calf. They were caught in her hose.\"\n\n\"Granted, Ellie has attractive legs, so what's your point?\"\n\n\"It hasn't rained for the past five days so they're not mud.\"\n\n\"So?\" I prompted.\n\n\"But there is construction downtown and they were pouring cement in front of the Howard building yesterday and today. So, the splotches on the back of Ellie hose must be cement that got splashed up as she walked along the sidewalk. The Howard building is two blocks from here. Therefore she walked at least from that building to here and back. At least four blocks round trip.\" He touched his nose. \"The nose knows.\"\n\nI shook my head. \"Damn, you never cease to amaze me.\"\n\nI heard the bottom of Mick's desk drawer open and the clink of a pair of glasses. \"Here,\" he said, \"we need to talk.\" He poured a half an inch of Kessler's into each glass.\n\n\"You know, that young woman that was just in her has feelings for you. Don't you think perhaps there's more between the two of you that you're letting on? \"\n\n\"How do you know what she feels?\"\n\n\"I don't. But look, it's simple. She walked over here\u2014in heels\u2014just for a short chat about nothing-in particular and a quick kiss. Now what do you think?\"\n\nI spun the caramel colored liquid in the bottom of my glass then tipped my head back and swallowed half the booze in one long gulp. It burnt my throat going down.\n\n\"She's certainly not hard on the eyes,\" I said.\n\n\"No argument there.\"\n\nMick sat on the edge of his desk, his left hand resting on a notebook. Cupping the bowl of his pipe in his right hand, he moved it 'round in the air as he talked. When he'd stop, small rings of white smoke would escape out the stem. Then he put the pipe back into his mouth and the bowl would turn orange as he pulled a long smooth draw. \"Tell me, Jake, what did you notice about Ellie?\"\n\nI kind of shrugged my shoulders. \"She's pretty. Dresses nice. Nothing much else.\"\n\n\"You didn't notice how the yellow blouse she wore matched her honey brown hair?\"\n\n\"No, not really.\"\n\n\"I see.\" Mick tapped his pipe into the ashtray. \"What about the silver ankle bracelet on her right foot? And the shoes she wore? Black pumps with a heel just high enough to bend her ankle and round out her calves. Ellie wore better hose than most women her age, as they didn't bunch up at her ankles. Her black skirt was short enough to call attention to her figure, yet still professional. It suggests to me that her position where she works is a bit higher up the ladder than most women her age would have. \"\n\n\"You're speculating,\" I said.\n\n\"Jake, you look with your eyes, but you never see.\" His pipe glowed orange. \"Did you notice the heart shaped necklace around her neck? There were Emeralds all along the edge and in the middle a blood-red Garnet.\"\n\n\"I was looking elsewhere.\"\n\nMick snapped open his lighter and brought his pipe back to life. \"Thinking with your dick again, huh,\" he said. \"You told me last week you got her something on her birthday. Emeralds are the birthstones for May, and I'd bet the Garnet in the middle is for her son. Garnet is the birthstone for January.\"\n\nI thought for a few moments. \"When I pulled Andy out of the pond, she said he just turned three several months before. Yeah.\"\n\nI watched Mick smile. \"A heart shaped necklace... Emeralds circling a Garnet. A mother's love surrounding her child. Jake, you look but you don't see.\"\n\nIt seemed as though a horse kicked me in the chest. Damn him anyway. I reached out for the phone when I felt Mick's hand on it. \"She walked over wearing heels.\"",
        "Mick just put his glass to his lips when that little twerp of a wannabe reporter and half-assed photographer, Terry, just so happened to walk by. He popped his head into our office.\n\n\"You know, you can get fired for drinking on the job.\"\n\n\"Terry, fuck off,\" I said.\n\n\"You can't talk to me like that! Besides you know you not suppose to drink alcohol while at work.\"\n\n\"Come here,\" Mick said.<br>\n\nTerry took a few tentative steps into our office. \"I don't see any one drinking in here. Do you see anyone drinking in here, Jake?\"\n\n\"Of course not,\" I said. \"That's against the rules.\"\n\nMick reached into the outbox on his desk. \"Here, on your way down to report us, give these to Joyce in production.\"\n\nTerry took the papers from his hand and walked out of the office in a huff. \"You know, that guy must have photos of someone's wife,\" Mick said.\n\n\"Or photos of someone doing someone's wife.\"\n\nMick smiled and poured us a bit more booze into each of our glasses. \"You've got a lot of potential inside you, Jake. Have you ever thought about settling down? You're a brilliant writer. I know if you follow your passion, your passion for words, there're great things inside you.\"\n\n\"Settle down as in getting married? I don't want a wife, let alone a kid or two. Passion? I don't know.\"\n\n\"Perhaps you just haven't let it bubble to the top, yet. Jake, one of these days, you're going to wake up and you're going to be fifty-seven years old. You'll look over your shoulder and lying beside you will be an old, worn-out whiskey whore. She'll have tits that look like a street map of St. Louis; riddled with blue and red veins. Then when you get up to take that first piss of the morning, you'll yell out in pain 'cause you picked up something from another woman a week earlier.\"\n\n\"Damn, Mick, you don't know that.\"\n\n\"Jake, I know you've bedded every single women that works for the paper. You've got a reputation. Let me ask you this. Have you put a notch on your belt with Ellie's name beside it?\"\n\nI sipped my drink. \"No, I haven't.\"\n\n\"And why not?\"\n\n\"For the life of me, I don't know, Mick.\"\n\n\"Perhaps, just perhaps, you know there's something more between you two than a casual rumble between the sheets. Jake, can't you feel it just a little bit?\"\n\nI handed Mick my glass and reached for my jacket.\n\n\"Where are you off to?\"\n\n\"It's a nice day. I think I'll go for a walk.\"\n\nMick sat in his chair and then rolled another sheet of paper into his IBM Selectric as a puff of smoked escaped from his pipe. \"Watch out for the wet cement in front of the Howard building.\" He smiled and then touched the side of his nose with two of his fingers.\n\n********\n\nEllie and I made a date; one of several over the next few weeks. Mick was right. I did have feelings for her. And I hated to admit it, but I enjoyed her son Andy, too\u2014snotty nose and all. But Ellie had a boyfriend. Or so it seemed. She never talked about him too much. I only knew he worked construction and his name was Matt. They shared an apartment together, but somehow I felt Ellie was the breadwinner. Matt never seemed to work much.\n\nI have this unwritten rule I live by. I won't fuck a married woman or a woman that's in a relationship with someone. Ellie was hands off.\n\nThe weather was getting hotter as was the politics. City council members were up in arms about a shift in direction they felt the mayor shouldn't have done. It was feeding time in city politics and I was getting fat. Then there was the break-in of a hotel in DC that was flooding the AP wire services. Mick and I were busy as we pounded the keys on our typewriters churning out editorials about politics.\n\nIt was early morning. Just a few inches remained in the first pot of coffee. Neither one of us saw her coming but when she knocked on the doorjamb we both looked up. There in blue flared pants and short platform shoes, stood Ellie.\"\n\n\"I need to talk,\" she said. Her voice was ragged and sharp.\n\n\"Sure.\" I pulled out a chair. I could see something was wrong. Really wrong. I knew she wasn't allowed to wear pants in her office, so she hadn't been to work yet. Ellie kept favoring her left side of her face keeping her right side always turned away.\n\nShe sat in the chair. I saw her hands shake. I moved one of the empty chairs over and sat beside her.\n\n\"What's wrong?\" She didn't answer me. I make my living by reading the faces of people. The way they stand and how they carry themselves. The words they use and the way their eyes move. I knew there was something terrible wrong. I just didn't know what.\n\n\"Ellie, you came here for something, what's wrong?\"\n\n\"I don't know what to do.\" Her words came pouring out. She turned her right cheek away from me. By this time Mick stopped typing and came over.\n\nI reached out and as gently as I could I turned her face toward me. \"Oh Jesus.\" Ellie tried in vain to cover a bruise by her right eye with makeup. \"Look, Mick.\"\n\n\"Ooh, that's going to be one hell of a shiner,\" Mick said as he touched her cheek. \"Who hit you?\"\n\nEllie didn't say anything at first, then blurted out, \"He tried to hurt Andy. I went to stop him and he hit me. I grabbed Andy and I ran out. Jake, he hit Andy!\"\n\n\"Matt?\"\n\nEllie nodded. \"You said you knew all sorts of people in the city. I can't go back. We can't go back. We need a place to stay. It'll be just for a few weeks, maybe a month 'till I get some money saved up for an apartment. I don't have a dime right now. Jake, he hit Andy! I can't go back.\"\n\n\"I don't know anyone off hand. I can make some calls.\" I looked over at Mick. He placed a finger to the side of his nose and tapped it a few times. I knew what he meant. I did know someone that had plenty of space for the both of them. Mick did do. It was me.\n\nEllie's hands were flying about. \"If we have to sleep in my car...\"\n\n\"I know someone, Ellie, that has room for the both of you.\"\n\n\"You do?\"\n\n\"Yeah, I sure do.\"\n\n\"I won't be able to pay them anything for at least two weeks 'till I get paid again.\"\n\n\"That's not going to be a problem,\" I said as reassuring as I could. \"You and Andy will be staying with me.\"\n\nHer hands stopped. \"I-I-I,\" Ellie stammered. \"I'll sleep with you in exchange for room and board,\" she said without a thought.\n\n\"That won't be necessary.\" I almost caught myself laughing at her quick offer of sex. Her face turned bright fire engine red. Ellie knew what she said wasn't what she wanted to say.\n\n\"We won't be a bother. Just 'till I get things together.\"\n\n\"We'll talk about it later, okay? Now, first things first. I don't have much in the way of food at home, I'm a terrible cook.\"\n\nI reached for my wallet. I gave Ellie four-twenty dollar bills. \"Get some groceries for you and Andy.\"\n\nJust as I handed Ellie the money, I looked up and there I saw Terry leaning on the door. \"Oh, I see you're bringing your whores into the office now.\"\n\nI exploded. I jumped over a chair, and I grabbed him by his collar and lifted him off the floor then smashed him into the wall. \"If I ever hear you call her that again, I'll break every bone in your face. Do you understand me you little fuck head of a man?\"\n\nTerry nodded. He was too scared to talk. I felt Mick's hand on my shoulder. \"Better put him down before you kill him, Jake. The paper work would be a bitch.\"\n\nI let go and he fell to the ground. I looked over at Ellie still sitting at the desk. \"You better apologize to her.\"\n\n\"I'm sorry, miss.\" Terry damn near ran out of the office.\n\nI turned to Mick. \"You know, I bet that little weasel was standing there all that time listening and when Ellie blurted out\u2014\"\n\n\"One of these days, that guy is going to get his ass handed to him on a platter,\" Mick said.\n\n\"Get me a platter, Mick,\" I said as I pushed my shirtsleeve up.\n\n\"Just cool your jets. He's not worth getting fired over.\"\n\nI heard the sound of Mick's drawer open. He picked up a glass and wiped the rim with a paper towel. He sat in front of Ellie. \"Here you go, Ellie, it will calm you down.\" Mick poured some Kessler's into her glass. \"Go ahead, Ellie. We won't even turn you in for drinking on company time.\"\n\nEllie sipped at the liquor. \"Did you call the cops?\" Mick asked.\n\n\"No, it won't do any good; it's his word against mine. We can't stay there.\" Ellie turned around in the chair and looked at me. \"I didn't really. I mean it just came out. But if you want me to, I guess I did say it.\"\n\n\"I've known this man for quite a few years, Ellie,\" Mick interrupted. \"He's not the kind that would take advantage of you. Don't worry about what you said.\" Mick poured a bit more Kessler's in her glass.\n\n\"I've never had a guy stick up for me like that, Jake. I hope you don't get into trouble.\"\n\n\"It'll pass,\" I said. \"It wasn't any problem. No one should call you that.\" Mick and I talked to Ellie for a while till she calmed down. I rooted around in my desk and found the spare house key I kept. I gave it to Ellie and I kissed her on the lips and told her I'd see her and Andy when I got home.\n\n********\n\nEllie didn't have much and we got it all into one of the newspaper's delivery vans. I have to admit it took a while to adjust to having a small boy running around; especially one like Andy. I swear he managed to run into every table corner, he fell down the steps, he tried to fly by jumping off the porch railing, and the list went on and on. But, you know, after a while I kind of liked seeing the little guy. He'd meet me at the door every night. He'd hand me a drawing or something he made. One night, I came home and gave him a green plastic Godzilla. Oh, you should have seen his eyes light up when I handed it to him. It instantly became his most prized possession. When he'd wrap his tiny hands around my fingers it just filled my heart with light. Yeah, snotty nose and all, Andy quickly became my best buddy.\n\nI found out that Ellie is quite a cook, so my days of luke-warm Chinese takeout dinners came to an abrupt halt. And Ellie wasn't bad on the eyes, either. One morning, she was in the kitchen wearing a suede miniskirt with fringes along the bottom with matching boots. Ellie fixed Andy and me breakfast and I let my eyes roam over her body like an invisible hand.\n\nOne morning, just before we both headed to work, Ellie was busy packing my lunch when I reached over her head for something in the top cabinet. My hand came down onto her shoulder and moved down the curve of her back. I cupped her butt in my hand and I could feel her panties under her skirt. My fingers slowly traced along their outline. Ellie stopped wrapping sandwiches and stood there with her eyes closed. She swayed slightly in her heels. Ellie's perfume filled my head with the earthy fragrance of jasmine mingled with a spring rain. The back of my other hand brushed back and forth across her right breast. I lowered my lips and she rose on tiptoes to meet me. We kissed. Our lips burned with desire. I squeezed her butt and palmed her breast. Suddenly Andy bounced into the kitchen and we stood apart. Andy crawled into his chair and ate his breakfast.\n\n\"I'm sorry,\" I said. But Ellie didn't say a word.\n\nEllie never spoke to me about that morning in the kitchen. We weren't lovers. We never slept together. We didn't mess around with each other. I found her sexually attractive, I mean what red-blooded guy wouldn't, but I respected her immensely, too. I didn't want Ellie to be nothing but a casual fuck. She deserves more than that. Ellie simply wasn't going to end up as another notch on my belt. That was the part of our relationship that I couldn't quite put my finger on.\n\nEllie called me one late afternoon, she'd been asked to work over, and the money was enough to sway her to stay. I picked up Andy at daycare and fixed him his usual dinner. It was going on eight and Andy was in bed when I heard the door slowly creak open. In walked Ellie and I could tell by the way she moved that it was long hard day.\n\nI know I'm not much of a cook, but I managed to put together something that I knew wasn't about to kill either one of us. She kicked her heels off. \"Hi.\"\n\nI grinned back. I was proud of myself and I had everything laid out. Two candles, wine glasses, a white tablecloth and my best silver wear. It wasn't Rolando's, but it was damn nice. Ellie was beat as I could see it in her eyes. We ate quietly and halfway through I noticed she had her fingers moving back and forth across mine. I know it's a clich\u00e9 to say it, but there was some kind of electricity when we touched. Her fingers moved along the back of my hand while her stockinged toes wiggled underneath my pant leg. I leaned over and with the lightest of touches, I kissed her lips. Ellie's eyes sparked in the candlelight but it was a lackluster sparkle. She so was tired and it showed.\n\n\"Hey, why don't you go upstairs and get ready for bed? I'll clean up here and then when I'm done, I'll give you a nice smoothing back rub. What do you say?\"\n\n\"That would be nice.\" Ellie pushed herself away from the table and drugged herself up the stairs.\n\nI finished up in the kitchen and by the time I walked into her room, she was already under the sheets, almost half asleep. I sat beside her with a bottle of wintergreen rubbing alcohol in my hand. \"Roll over,\" I said.\n\nEllie had on just the tops of her PJs and I pushed them up to her shoulders. \"Would it be better if I took this off?\" Ellie asked.\n\n\"It would be.\" I turned my head while Ellie pulled her top over her head. When I turned back she was on her belly, Ellie's bare back exposed to my fingers. I poured a bit of the green liquid into my hands and started working it into her skin. Ellie jumped when the cold liquid hit her skin.\n\n\"Ooh, Jake, ooh, that's so nice.\"\n\n\"Rough day?\"\n\n\"Ooh, was it ever...down a little bit to the left. Ooh, yeah, right there...\"\n\nI massaged her back, then up her shoulders and down her arms. I guess it wasn't ten minutes later than Ellie was out. I mean she was dead to the world. I grew bold. I wiggled her panties down and softly massaged her tight derri\u00e8re then my fingers moved up her lower back to her shoulders. I stopped for a minute and just admired her figure. Oh god, it was so tempting to roll her over on her back and explore her treasures. Had this been any other woman lying on my bed asleep, that's exactly what I'd have done, but I didn't with Ellie. I reached down and kissed the back of her ears, then down her neck and across her shoulder. I pulled a sheet across her body and walked to the doorway. Looking back, I pondered why Ellie held me at bay the way she did.\n\nWas Mick right? There was a knot burning in my gut. I felt my head move side-to-side. Is this the way love begins?\n\nThe next morning it was back to work. I let Ellie sleep in a bit longer while I packed lunches and got Andy ready for day care. I had a few minutes free so I was enjoying a cup of coffee. Soon, I heard the familiar tap-tap of Ellie's heels as she walked down the steps. \"I have everyone's lunch packed,\" I called out.\n\nEllie slowly walked over and pulled out a chair. When she sat her knees touched mine.\n\n\"How'd you sleep?\" I asked.\n\n\"I was pooped.\"\n\n\"I could tell, you were gone in just a few minutes into your back rub,\" I said.\n\n\"I need to ask,\" Ellie began, \"did you feel me up while I was sleeping?\"\n\n\"What?\"\n\n\"Did you?\"\n\nI'm no George Washington, as I've been known to tell a lie now and then. But I wasn't going to lie to Ellie. I looked down away from her eyes. \"I may have given your rear a few rubs, but nothing else.\"\n\nEllie took my hands and placed them on her knees then pushed them under her dress till the hem of it was across my wrists. We sat there like that for a while. Neither one of us said a word. My hands were only inches away from her treasures.\n\n\"Why didn't you?\" Ellie asked. Her voice was soft and low.\n\nI sat there for the longest time. I didn't have an answer. I watched her eyes as they watched mine. I went to pull my hands out from under her dress when she stopped me.\n\n\"Why didn't you?\"\n\n\"It wouldn't have been the right thing to do.\"\n\nA smile filled her face and Ellie put her hand onto my cheek. \"Jake, I need to tell you something. Jake, I\u2014\"\n\n\"Mommie!\" Andy called as he ran into the kitchen.\n\n**********\n\nEllie only asked to stay a few weeks. However those few weeks turned into several months. I didn't want to be the chauvinist pig Gloria Steinem preached about, but damn it was great having Ellie as a live in guest. We talked about the arrangement we had and agreed that as long as things were going so smoothly, we'd continue as was.\n\nEllie was throwing me mixed signals. At times I just wanted to sweep her off her feet and carry her upstairs ripping her clothing off as I went.\n\nBut I had other plans for a special girl I knew this coming weekend\u2014Sue Ling.\n\nI met her long before Ellie. A reporter from a local television station, I became instantly smitten by her. She was an absolute beauty; a stunning oriental that just oozed sex. Only about five foot three tall, her long black hair, parted in the middle, flowed down her back to stop just at her waist. Sue Ling had perfect breasts that seemed to deify gravity and legs...oh did she have legs.\n\nShe'd walk into a room and those dark black irises of her eyes would catch the light reflecting it back into your own eyes. With a toss of her head, her hair would billow about her face. Her gait, long and slow, she'd move across the room like a sleek black Siamese cat looking for trouble\u2014and I suspect usually finding it.\n\nI made her my personal project. 'Cause if there was one thing in my life I wanted, it was to slide her pantyhose down those luscious legs of hers and off her delicate toes. Then I'd lift her bra up over those perky tits I knew she had to have, and then watch her wriggle and squirm as I slipped her panties down to her thighs. Oh yeah. Sue Ling was going to be mine. She just didn't know it yet. I've been after her for over six months, and at last she agreed to a date with me. It was my opportunity to score big. I wasn't going to toss it away.\n\n******\n\nFriday had arrived and my date with Sue Ling was only hours away. I was as nervous as a small kid at a spelling bee. I came down stairs, it was going on seven, and my date with Sue Ling was at nine. I looped the tie around my neck and fidgeted with it as I stood in front of the hallway mirror. I noticed Ellie as she slowly walked up from behind.\n\n\"I wish you wouldn't go,\" she said rather softly.\n\n\"I've been planning on this for a long time now, Ellie.\"\n\nI watched as Ellie wet her lips. \"Why her?\"\n\nThere was no answer that I thought Ellie would understand. How could I tell her that I hoped to have Sue Ling naked with my manhood inside her?\n\n\"Is it just sex you're after?\" Ellie asked.\n\n\"It's just a date.\"\n\nI turned and placed my hands on her shoulders. She worked on my tie. \"If I tell you something, you won't laugh?\"\n\nShe nodded.\n\n\"I like women in dresses. Sue Ling told me she brought one special just for our date. I like the soft silky things that are hidden under a dress.\"\n\n\"I wear dresses.\"\n\n\"I know you do.\"\n\n\"And with silky things underneath, too.\" She worked in my tie, pulling it tighter around my neck. Her fingers stopped. \"Please don't go.\"\n\n\"Why?\"\n\nShe didn't answer me but instead pulled my tie out. \"This one is wrinkled. I'll get you a better one.\"\n\nEllie abruptly turned and left. I walked into the kitchen when I felt a tug on my pant leg. It was Andy. I lifted him up and sat him on the edge of the countertop. \"What's up, little man?\"\n\n\"I'm hungry.\"\n\n\"Okay, bet you want more some apple slices?\" For some strange reason, Andy just loved apples, bananas and lima beans; not all at the same time of course.\n\n\"Yup!\" He nodded his head. \"Where's mommie?\"\n\n\"Upstairs, getting me a tie. I'm going out for while.\"",
        "\"Why?\" Andy asked as he crunched on the apple slices I cut for him.\n\n\"Just something I want to do.\"\n\n\"Mommie cries when you go.\"\n\nI scooped the apple core up and tossed it into the trash. \"Mommie cries?\"\n\n\"Yup.\" Andy put his hands together then he moved his arms apart as wide as he could. \"Mommie love you this much.\"\n\n\"How do you know that?\" My breath seemed to stick in my throat.\n\nAndy stretched his head up as far as he could and I leaned down so he could whisper in my ear. \"Mommie told me. It's a secret.\" Andy wrapped his arms around my neck and pulled me as tight as he could. \"Andy loves daddy.\" He put his hands together and opened his arms. \"Me and Mommie love you whole bunches.\" He bit down into another slice of apple. I picked him up and put him onto the floor. He scrambled out into the living room.\n\nMy head was swimming. 'Daddy,' he called me daddy. Just then Ellie walked into the kitchen with a new tie in her hand. \"Here, I can't let you go out looking the way you did.\" Ellie looped end over end as she worked the tie together. I knew it didn't take as long as she took to get me a tie. I watched her face. Her eyes were red and I could see tracks of dried tears on her cheek. Ellie had been crying upstairs.\n\n\"If you were to ask...\"\n\n\"Ask you what, Ellie?\"\n\n\"Ask me to wear a dress, I would. I wear soft silky things under my dresses, too. I wouldn't put up any resistance if you wanted to see how soft my things are under my dress.\"\n\nI didn't know what to say. I didn't see that one coming and Ellie caught me completely off guard. I just stood there while she worked on my tie. Ellie finished tying my tie and I felt her hands moved down my arms till her fingertips were resting on my hands. \"Just ask me... Jake, please don't go. I don't want you to go out with her.\"\n\nMy eyes caught the clock on the stove. \"We'll talk about this later.\" I moved toward the door and when I turned the doorknob, I looked over my shoulder at Ellie standing in short PJ bottoms and a sweatshirt. I thought of Sue Ling. Mommies cries. \"We'll talk when I get back.\" I opened the door and left.\n\n******\n\nI let the storm door slam shut angrily behind me. My mind felt like a convoluted mangle of nerves. Of wants. Of needs. My car moved down the highway. My mind conjured images of Sue Ling standing before me in a short sweater dress. My thoughts dwelled, obsessed on the possibility that somehow I was making a mistake. But which one is the mistake? Go to meet Sue Ling? Maybe score with her. Or go back to Ellie? I didn't know. I turned the steering wheel. I needed to think\u2014to realign my thoughts. I pulled into a bar I knew. Taking a seat in the rear, I quickly ordered a drink. My fingers wrapped around the glass and I stared down into the reflection of a hollow, empty man. What will be the price if these forces boiling within me are not allowed to escape? I can't have both. The storm of doubt grew inside me. Do I want Sue Ling or do I need Ellie?\n\nMommie cries. Those words burnt in my mind as though someone had driven a rusty nail deep into my brain. I recall all those times Ellie made subtle, flirtatious gestures. A touch of her hair, a fix of a strap on her shoe. A quick flash of her thigh when she'd turn. Those surges of light now cut through the darkness. I had been so blind.\n\nSue Ling was waiting on me. Those lovely, long legs of hers were waiting on me. I wanted to caress them, feel them with my fingers. Taste her with my lips. Mommie cries. I bit my lips and the booze burnt them when I placed the glass to my lips. What is love? Have I fallen in love with Ellie? I'm a writer searching for words that I can't say. Do I love Ellie?\n\nI allow images of Ellie to float up in the pool of my memory. Marvelous things. I feel in my hand the softness of Ellie's butt when I accidentally touched her months ago. She didn't push me away. My heart and my brain compete with each other. Which way? What does my future hold?\n\nWill it be a new and glorious level of being, an unequivocal paradise on earth, or my own private living hell? Sue Ling is beautiful. Questions. Questions. I tip my head back and drain my glass. Questions. More questions. They eat at me like some invisible parasite gnawing away slowly from the inside out. Answers? 'Just ask me.' Ellie said. What if I was wrong? Another drink. I glanced at the clock over the bar's mirror. Mommie cries.\n\nI leave most of my second drink on the table. I slid the loose change into the palm of my hand and walked to the payphone. With the cling of a dropping dime, I set my future in motion.\n\n******\n\nI push my key into the lock. The room is still. I hear the TV playing low in the other room. I tossed my keys onto the counter just as Ellie emerged from the other room. She stopped and looked at me. My heartbeat increased when I looked at her. Yes, I had made the right decision.\n\nWhen I didn't speak, she started, \"You're home early. What happened?\"\n\n\"I went to a bar,\" I said numbly, looking into her eyes. My heart was racing.\n\n\"Why did you do that?\" Ellie asked confused.\n\n\"I needed to think things over in my mind.\" I answered.\n\n\"About what?\"\n\n\"I didn't see Sue Ling.\" Tears seemed to fill my eyes. \"Ellie, I love you.\"\n\nEllie bolted across the room and leaped into my arms wrapping her legs around my waist. Ellie covered my face with kisses. I reached under her sweatshirt and my hands moved up and down her warm bare back. Ellie was real. She was warm and she was in my arms. Sue Ling was a fantasy. A Kodachrome image projected onto a vinyl sheet of glass beads without substance.\n\nEllie pulled me tight and she leaned her head down by my neck. \"I love you, Jake. Oh, god I fell in love with you and I didn't think you felt the same way.\"\n\nEllie began kissing me gently around the perimeters of my lips, and then she brushed her mouth across my cheeks before moving down and nibbling at my jaw line. My body seemed to quiver. My face flushed. Ellie's fingers quickly moved across my chest, slipping button from hole as her fingers moved down my shirt. She opened my shirt and kissed my chest lowering her lips to my abdomen. Her kisses so wet, so sensual, my knees appeared unable to hold me upright. My fingers ran through her hair, down her shoulders and back again.\n\nEllie pushed against me, keeping me at bay, unable to see her treasures. She pulled her sweatshirt over her arms. I reached up to cradle her breasts in my hands, but she pulled them down. Ellie's fingers worked on my belt. I heard my zipper being pulled down and her fingers pressed the front of my slacks apart. Her hand glided over my cock, hot, hard, and ready.\n\nShe palmed my cock in her hand still hiding inside my briefs. Moving her hand slowly up and down my manhood, I rose up on tiptoes.\n\n\"I want this in me,\" Ellie cooed. Her voice seemed desperate, wanting.\n\nSuddenly, she pulled my shirt from my body and pressed her breasts hard into my chest. Her nipples hot and hard pushed deep into my flesh. I closed my eyes for a second and when I open them, Ellie had my shirt on. My eyes caught a glimpse of her bare breasts as they played hide and seek behind the open shirt. She moved. Her right breast became uncovered. My breath seemed to stick in my lungs. My hands moved up, but then stopped. My eyes filled with her.\n\nEllie took a few steps back and for the first time since we're been together, I saw the lovely, sexual woman that she is. Her eyes locked onto mine and with one slow continuous movement, she lowered her PJ bottoms to the floor. There she stood. Her breasts slipping in and out of the fabric of my shirt, teasing me with alluring promises yet to come. The smallest white lace panties I've ever seen hugged her hips.\n\nEllie's fingertip traced the outline of my lips, brushing over them with the lightest touch.\n\nI don't know what she was thinking. But from the smile on her face, it had to be good. My pants were open, my cock pushed out against my briefs and I was ready to explode. Even the hairs on my chest tingled.\n\nEllie draped her arms around my neck and I look down and saw the most perfect breasts I've ever seen. She whispered, \"Follow me.\" I took her hand and I followed her like a small child into the living room.\n\nIt seemed that Ellie had made Andy a small fort out of the sofa, a few chairs, and some blankets. There was a small entrance and I crawled in with Ellie right behind me. No sooner than we were inside when I noticed Ellie working on my shoes. She slid them off along with my socks. On her knees she moved seductively like a cat stalking its prey. Her hair hung down, her breasts moved side-to-side and I could see her nipples. Ellie tugged and pulled at my pants, and it seemed so awkward that I wasn't the one in control. On my back, my body seemed frozen as she pulled my slacks away from my feet.\n\nHer hair moved across my bare legs. My cock struggled for its freedom from my briefs. Ellie lowered her face down against my struggling manhood and placed a kiss just below my belly button. My body arched and when it did, she slipped her fingers under my butt and yanked the back of my briefs down. I watched her. Her tongue moved down to the waistband of my briefs and then traced along the elastic band. With a growl from her throat, Ellie pulled them down with her teeth releasing my desperate cock from its prison.\n\nI was embarrassed. I was on display. My cock hard and stiff stood proud and upright from my body. It was Ellie that controlled the action. I was the sex object. Ellie held my cock in her hand and placed a single kiss on its head. My body shivered. Ellie cradled my balls in her hand. Her fingers moved down to the root of my cock and she held me tight. She kissed along the shaft. Knowing I was wound up, she released me.\n\nHer hands moved up and down my legs feeling my hard, tight muscles. She'd allowed her hair to rain down on my swollen cock. Her fingers slid into my short hairs pulling at them gently. Then her fingers started delving into my most private parts of my body. I writhed against her questing fingers. The air seemed to rush from my lungs. This was too much. Way too much. I grabbed her hands.\n\n\"I'm going to cum!\"\n\nShe let go of me and lowered her body down against mine. \"Not yet,\" she whispered.\n\nI moved my hands to her shoulders and slipped the shirt from her body. I rolled her over onto her back. At last, Ellie was in front of me. My eyes followed the contours of her body. The color of her hair. My hands held her breasts for the first time. Ellie was so soft. Her breasts full and perfect. Her nipples were hot and pointed. My fingers moved down to her panties and I wiggled one side down her hip then the other. I felt my face fill with a smile as a patch of honey brown fur was exposed. Ellie was at last naked and she was mine.\n\nI lowered my face to her breasts, taking one then the other into my mouth. My fingers moved through the short curly hairs between her legs. Lingering there for a few moments, my fingertip dipped into her velvet wetness. I found her small lips, pushed them apart and teased the soft delicate flesh of her rosebud. Ellie's back arched and she dug her fingers into the carpet. Just the very tips of my fingers glided across the stiffness of her clit. I could feel it quivering against my fingertips as her wetness flooded my hand. My thumb brushed over her pussy.\n\nEllie grabbed my arm. \"I need you inside me,\" she said desperately. Ellie moved her head side-to-side.\n\nI spread her legs apart and slowly made my way on top of her. Ellie's fingers were on my swollen, red-hot cock and she guided it into her hot, wet tunnel. My cock felt as hard as steel and as hot a molten metal. I was against her entrance and I could feel her pulse against the head of my cock. I felt her resistance and pushed slightly. Ellie moaned just a bit and I pushed deeper into her body. She spread her legs more to accommodate me. I was so desperate. Our legs rubbed together, Ellie's were so soft and smooth. The scent of her perfume, the color of her skin. My senses were being overloaded. I could drown in her essents.\n\nEllie lifted her hips and I went into her agonizingly slowly so Ellie could feel every inch of me as I filled her. Her muscles tighten and tugged at my cock. Ellie's eyes locked onto mine. We shared each other's soul. We had no more secrets. There would be no hiding what our hearts felt. What our bodies demanded. Our lips touched and they fought for dominance as we pour kisses on each other.\n\nThe movements of our bodies grew more urgent. I could feel myself swell inside her, stretching her. The look in her eyes. The heat of her body rose up and mingled with mine. The room seemed so hot I thought we'd catch on fire.\n\nThat hot building of a climax in my gut filled me. I kissed Ellie and she wrapped her legs around my waist. Her head rolled back and she caught her screams as she dug her nails into my back. Ellie exploded under me. Her body arched then she clutched at my back, she pulled my hair as she gasped out my name. She came with a terrifying glorious orgasm of such intensity I was frightened. Seconds later I felt myself building hot and deep. I claimed her mouth once again as I squeezed Ellie and I flooded her sex with my seed with such ferocity I clawed down onto her shoulders with my hands. My body surged, jerked and bucked as I drained myself deep into her. As the last few surges passed, I caught myself with my hands, hovering over Ellie. I stole one more kiss.\n\nOur union was complete.\n\nEllie wrapped her legs around mine. We found each other's hands and we held them tight while our breaths mingled. I rolled over on my side leaving a long wet trail from between Ellie's legs. On my back, I tired to catch my breath. I glanced over at Ellie and I noticed one hand teasing a nipple while the other one stroked in and out of her curly hairs. Neither one of us moved for several minutes. I was trying to find my words and Ellie was just smiling.\n\nWe propped ourselves up against the back of the couch. Ellie's hand found mine and she squeezed it gently. \"Wow. That was something,\" Ellie said then she smiled at me.\n\nWe cuddled inside our little fort for almost half an hour. The TV, with the volume set low, played in the background.\n\nEllie moved her leg back and forth across mine. Her arm went around my shoulder and she pulled me over to her. \"If you were to ask me.\"\n\n\"Ask you what?\"\n\nHer voice seemed low and cautious. \"Ask me to wear a dress.\"\n\nI looked at her and could see how serious she was. I squeezed her fingers in mine. \"Is it because what I said about Sue Ling?\"\n\n\"Maybe a little bit,\" Ellie said then she bit down on her lips. Her fingers moved over my bare chest touching my skin with the softest touch. \"I was hoping you'd do that to me,\" Ellie said.\n\n\"What do you mean?\"\n\nEllie looked over at me. It was like she just handed me an obscure key to a very obscure lock; the lock that she carried around her heart. The lock that only she could see; the one that only she could feel.\n\nEllie turned to me and grabbed my hands. \"Every guy I've ever been with has been so rough. I would like to know what it's like.\"\n\n\"Ellie, it would be a bit strange after we just had sex, that's all.\"\n\nEllie looked about in our tiny love nest. \"Rules don't exist in our world right now.\"\n\nFor a few moments I sat with my back against the couch and thought about it. It wasn't like she asked me to stab my hand with a fork. I certainly was interested after all I did plan on romancing Sue Ling out of her clothing. I touched Ellie's hand.\n\n\"Would you put a dress on for me?\"\n\n\"I'll be quick.\" Ellie patted her eyes dry and crawled out from under our fort.\n\nI didn't set a timer so I don't know if she was gone for three minutes or thirty minutes. I heard the tap-tap of her heels as Ellie walked down the stairs. I noticed a tingle between my legs and cock seemed hot.\n\nEllie stood in front of the TV, the flickering light from it set her in silhouette. She wore dark brown shoes with a delicate strap that wound around each ankle. Ellie pulled the coffee table over and lifted her foot onto it. She placed her hands on her ankle then ever so slowly Ellie drew her hand up her leg. Ellie pushed the hem of her dress up 'till her hands toyed with the waistband of her hose. Jesus, I thought. I couldn't believe what my eyes were telling me. I pushed my back up against the couch, taking in the show. The dress opened slightly when she changed position, exposing more of her leg. I wet my lips. Damn, did she ever look good.\n\nHer hands moved up her sides and then cupped her breasts. Hardness returned to my manhood. Ellie got down on all fours and moved toward me. Her eyes glowed a deep indigo blue. She crawled up beside me and placed her arm around my shoulder. Ellie lowered her legs across mine and slowly moved one back and forth across my lap. Her thigh rubbed against my swollen cock.\n\nWhat an odd sight we must have been. Me naked as the day I was born and Ellie, curled up beside me looking like she was ready to walk into a board meeting at her office.\n\n\"This is different,\" I said. Ellie looked at me and tilted her head to one side. \"Normally, I've got all my clothing on and the girl is losing hers.\"\n\n\"Whatever you'd like to do to me,\" Ellie said quietly. \"Just be sure you do it slowly.\"\n\nThe smooth nylon of her pantyhose tingled my hand when I rubbed it, letting the slippery fibers slide under my fingers. I moved my hand a bit faster, a little harder as I slowly opened her dress. I watched as Ellie closed her eyes and a smile filled her face. I pushed her legs apart and my hands cupped her crotch, still moist from our lovemaking. My fingertip stroked back and forth across her hose and panties. Ellie's face blushed red and her lips made an 'o' as I touched her. Ellie's pussy flooded and my fingers were quickly drenched by her wetness.\n\nShe pushed her crotch into my hand, submersing my fingers in the wetness that oozed out from her panties and hose. Ellie sucked in several quick abbreviated breaths and let them out as short bird like chirps. \"Ooh. Ooh. Ooh. Ooh.\" she called out. I watched as her faced blushed and her hips began to move side-to-side, gyrating slowly then her tempo increased. Ellie snapped her legs closed and she held my hand captive.\n\nI placed my free hand on her cheek and brushed her eyebrow with my fingers. \"Ellie, you're lovely.\"\n\n\"Ooh. Ooh. Ooh. Ooh!\"\n\nEllie's eyes rolled back and she shuddered and moaned softly.\n\nI dipped my head down till our foreheads touched. \"You stinker. You were holding back, weren't you?\"\n\n\"Oh, Jake that felt so good.\"\n\nMy hand left her crotch and moved between her breasts spreading the front of her dress open. I slipped my hand inside. My hand filled with her and I smiled like a small boy holding onto his bag of trick or treat candy. \"You have no idea how many times I wanted to do this.\" My thumb circled her nipple hidden under a blanket of nylon.\n\nEllie seemed to push her breasts deeper into my hands. \"You have no idea how many times I wanted you to,\" she said.\n\nI reached behind her and pulled on the bow that held her dress together, and I spread her dress across her shoulders. My fingers moved across her champagne goblet breasts hidden behind her bra and a silky nylon camisole. I slipped my arm around her shoulder and then I pulled in a deep long breath and slowly let it out.\n\n\"Is this what you like?\" she asked as she bought her knee up against my hard cock. \"Am I soft enough for you?\"\n\n\"More than I could've ever imagined.\" I reached down, released the strap from her shoe and lifted her heel out from them leaving her shoe still on her foot. \"Leave it like this.\"\n\nI fished the straps of her bra out from her shoulders and with one quick pinch released it from her body, and I pulled it down and out from under her camisole. The sensation of nylon against her bare breasts and my hand was simply intoxicating. I slipped her dress from her shoulders and gently pulled it away from her body. Ellie's light blue camisole came down just to her belly button, her bra was a crumpled pile on the floor. She was down to just her panties and her pantyhose, one shoe, and her camisole.",
        "\"Is this how you thought it would be like?\" I asked Ellie.\n\n\"I was better than what I could have imagined.\"\n\nI watched her face and studied her eyes. \"Ellie, I wouldn't trade this moment for all the Sue Lings in the world.\" Ellie leaned her head on my shoulder. The TV flashed a kaleidoscope of colors into out little nest.\n\n\"Andy called me daddy tonight.\"\n\n\"Did he?\"\n\n\"Would you like to fill me in on it?\"\n\n\"A few weeks ago when I picked him up at daycare, he was crying and fussy. When I asked his teachers why, they told me that he didn't want to draw pictures for his dad 'cause he didn't have a dad to give it to.\"\n\n\"I see...\"\n\n\"So I kind of told him that you were his dad. I didn't think you'd care.\"\n\n\"I never thought I'd hear those words.\" I thought for few seconds. \"But it's okay. Yeah, it's better than just okay.\"\n\n\"You're more of a father to him than any man I've ever known,\" Ellie said as she wiggled closer.\n\nThe curve of Ellie's hip filled my hand. I leaned my head onto her shoulder and closed my eyes. I don't know what Ellie was thinking, but from the way her breathing had slowed and the glow on her face, I'd venture to say the lock had fallen from her heart.\n\n\"Ooh, this is so nice,\" Ellie said.\n\nThe fragrance of the perfume she wore filled my head. The flowery hint of shampoo still lingered in her hair. The softness of her breasts filled my hand. I kissed the makeup from her eyes.\n\nMy arms slipped around her and I pulled Ellie against my chest. \"I hold you and I feel the crispness of a cool walk in an autumn woods. The warmth of a fire on Christmas Eve. The way the air smells right after a thunderstorm. The sound of a gentle spring rain on a metal roof. I hold you.\"\n\nI traced the outline of her lips with a single fingertip then I cupped her head in my hands and I kissed Ellie with the softest of kisses.\n\nEllie's arms moved around my neck and pulled me closer. \"All this time, you've been putting on an act. Jake, you've been looking for love.\"\n\n\"I found it, haven't I?\"\n\n\"Yeah, you have, Jake.\"\n\nI don't know how long we sat inside our little fort. I do know the late night TV shows were over and the screen filled with a test pattern. I undressed Ellie out of her remaining clothing as slowly as I could. I don't know who enjoyed it more, her or me, but I'm glad she put that dress on. Ellie was right. I didn't know I was on a quest but I found what I've been searching for. I had made the right decision.\n\n*******\n\n\"Grrrrr.\"\n\nI slowly opened one eye and then the other. My eyes focused on a small green Godzilla that was biting my nose. \"Grrrrr,\" I said back. It was Andy. I moved my arm from under the sheets and scooped him up from the floor and onto the bed. I tickled him till he giggled.\n\n\"Daddy, we're hungry,\" Andy squealed.\n\n\"Okay. Apple slices for you and what 'bout Mr. Godzilla?\"\n\n\"He wants a banana.\"\n\n\"I see. Well you get your butt downstairs and when I get my pants on, I'll be down to feed you two.\"\n\n\"Grrrrr,\" Andy growled and scurried out the room.\n\nSaturday morning is cartoon time in our house, so I sliced an apple and a banana and let him watch the TV. I went back upstairs and sat on the edge of the bed by Ellie. She was still asleep, and exhausted from last night's romp on the living room floor.\n\nThe Saturday sun was trying like mad to work its way into the bedroom. I opened the drapes allowing the warm rays to enter. I sat down beside Ellie. She seemed to be asleep. I touched her face with the back of my hand, and then I pulled the sheet she had used to cover herself, exposing her bare breasts. I folded my hands on my lap and just looked at her lying there. Her hair flowed around her face, framing it in its yellow glow. I tugged the sheet down to her toes. With the back of my knuckle, I caressed the short brown curly hairs between her legs.\n\nIn the sunlight, her body seemed to glow. Last night, the flicking light from the TV was dim and I wasn't able to fully appreciate her female form. I recalled from last night, the mole on her right breast, the small birthmark by her waist. My fingers slid across the smooth skin of her legs. A smile grew on my face.\n\nMy fingers touched her breasts, so full and ripe, soft, and smooth. I lowered my lips to her ears. \"I love you.\" I flicked a few stray hairs from her face. I saw a smile break across her face. I knew she was faking being asleep.\n\nEllie opened one eye. I caught her. She filled my hand with hers, and then she pushed herself up resting on her elbows.\n\nEllie took my hand and placed it on her breast. Just like last night, the curve of her breast fit my hand just like she was made especially for me. Ellie slipped her hand behind my neck and lowered my lips to hers. She bit down on her lips. \"This is our bedroom now?\"\n\n\"Yup, sure is from now on.\" I kissed her just where the small of the neck meets her collarbone. I felt her body flash with heat. \"Ooh, as much as I'd like to, we'd better get up.\"\n\n\"I suppose so,\" Ellie said somewhat reluctantly.\n\nI stood and walked over to one of the dressers. I opened the top and then the next drawer down. I found what I was looking for; her bras.\n\nEllie had slid her legs out from the covers and was sitting on the edge of the bed. I moved beside her. \"Turnaround,\" I said.\n\nEllie turned slightly and I threaded her arms into her bra working the straps across her shoulders. Gently, I wiggled her breasts into the cups. Satisfied I hooked the clasp together.\n\nEllie looked over her shoulder at me. \"You know, I'm twenty-five. I'd had my share of men in my life, but this is the first time that a guy ever put my clothing on.\"\n\n\"I like silky things on a beautiful woman.\"\n\n\"Am I beautiful?\" Ellie turned toward me. \"As beautiful as Sue Ling?\"\n\nI reached up to the dresser and snatched a pair of panties. Lifting both of her feet, I snaked them up her legs to her waist.\n\n\"Jake?\"\n\nI moved my hand across her back. My fingers traced along the straps of her bra. \"You're the most beautiful woman I've ever known. And, Ellie, not just on the outside, but inside, too.\"\n\nEllie spun around on the edge of the bed, her knees now pressed against mine. \"I don't want to sound greedy, but, Jake, I don't want to share you with other women. Will you, right now, tell me that I'm yours?\"\n\nI folded her hands together and held them in mine. \"From this moment on, I'll never hold another hand but yours.\" I leaned down and we kissed. Then we both heard the sounds of little feet as they came up the stairs. Ellie pulled the sheet up to her shoulders just as Andy climbed into the bed. He scooted over by Ellie and I wrapped my arms around them both. \"Daddy loves you two whole bunches.\"\n\n*********\n\nLife seemed to hand us nothing but good things. It was so hard for me to believe, but it's been over a year since Ellie and I met. Andy turned four and he was quite a talker. A real chatterbox. It was June and robins that call Compton Hill Reservoir Park their home were raising their young. This decision was easier.\n\nEllie looked so sexy in her miniskirt and yellow shirt. We sat on a bench. The very same bench I sat on when I pulled Andy out of the duck pond. Our knees touched. I placed my arm around Ellie's shoulder. \"I'm getting tired of introducing you as my girlfriend.\"\n\nEllie turned toward me, surprised. \"What else would you call me?\"\n\n\"Oh, I don't know, there're a couple of names we could use I guess.\"\n\n\"Like what?\"\n\n\"I like Mr. and Mrs. Or husband and... Wife.\n\nI fished a ring out of my pant's pocket and I dropped down on one knee. I shook like an old rusty Pinto. I heard Ellie gasp. \"Ooh, Jake are you?\"\n\n\"Ellie, it's not the biggest ring in the world, but it's big enough to hold all the memories you and I will make together. Ellie, will you marry me?\" I slipped the ring onto her finger.\n\nThis time I caught Ellie off guard. She just stared at the ring I placed on her finger. Then she jumped and wrapped her arms around my neck.\n\n\"Oh God yes. Yes! Yes! I love the sound of husband and wife together. Ooh, god yes!\"\n\nEllie cried and I tried my best to dry her tears with my fingers. Holding her hands in mine, I watched the tears pool in the corners of her eyes and trickle down her face.\n\n\"I love you, Jake.\"\n\nWhen we got back home, and after the babysitter left, we told Andy. I don't know if his mind wrapped around the idea of me marrying his mother, but he seem happy. The wheels of life began to move around us. We talked of the future. Of maybe giving Andy a brother or sister.\n\nSince my days of girl watching had come to an end, I decided I needed a new hobby. So Ellie and I began to work on turning the house into a home for her, Andy and me. Andy was my helper. He held my tools. Andy was my best buddy.\n\nI found that home is where you grow tomatoes, string up a hammock between two trees, and welcome the daylilies in the early summer. It's a place where your toes are welcomed on a green carpet of lawn. Home was a place where Andy could chase fireflies on a summer night.\n\nWe'd camped in the back yard. Just Andy, Ellie and me. We'd listen to the crickets at dusk, and watch the moon as it rose in the evening sky. We'd toast marshmallows in the fire and I'd tell him a scary story while the grass turned wet from the dew. Ellie and I would sit by the fire; my arm around her, our hands wove together. It truly was the best of times and I'd give anything to keep those memories, those nights, if I only could by dipping them into drops of amber locking them away forever.\n\n*******\n\nI was unusually busy, after all it was an election year and the politicians were as slick as snot on a polished doorknob. It was great hunting season for a journalist like me. The former president gave the country a used Ford, and editorials were flying like UFOs over a Nevada desert. When I got back to the office, a note was sitting on my desk. I was to go immediately to Andy's doctor's office. I dropped my briefcase on my chair and took off. I wondered what it could be this time. I hoped he didn't try jumping off the back porch railings trying to fly again.\n\nThe doctor's office is in midtown. It's not too far from my office, and it seemed I was there within fifteen minutes. I didn't see Ellie or Andy in the waiting room so I knocked on the sliding glass window.\n\n\"Oh, Mr. Peters. Yes,\" a nurse said. I've been here so many times, I was practically on a first name basis with the staff.\n\nSeconds later the side door opened. \"What did he do this time?\"\n\nThe nurse smiled, like they always to, but instead of taking me back to one of the examination rooms, I was led to the doctor's private office. My gut tightened when I saw Ellie, a tissue in her hands, the doctor at his desk.\n\n\"Andy? What's wrong with Andy?\"\n\n\"Perhaps you should sit down, Mr. Peters.\"\n\nI melted down into the chair. This wasn't one of Andy's usual scrapes and cuts. I could tell. This was more. Way more. I felt Ellie's hand on mine.\n\n\"He complained of a headache today. He could hardly talk. It just came out all jumbled,\" Ellen began, \"It hurt so much I couldn't get him to stop crying. Jake, he can't stand up.\"\n\n\"What?\"\n\n\"Mr. Peters, we don't know yet, but we're taking X-rays now of his head. They won't give us a very clear picture, but if there is something\u2014\"\n\n\"Something? Something as in what kind of something?\"\n\n\"Mr. Peters. I'm not saying anything right now. But\u2014\"\n\n\"A tumor?\"\n\n\"I suspect so.\"\n\nEllie started to cry. \"No...\"\n\n\"Are we talking cancer?\" I asked sheepishly.\n\n\"We're running some tests now as we speak.\"\n\nJust then a nurse walked into the room, several large X-rays under her arm. The doctor slipped the first one into the light box. I couldn't tell a thing. After all, I was just a medic and obviously not a very good one. He took it out and placed another one in. Then the third. He flipped the light out.\n\n\"I'm going to refer you two to a Oncologist.\"\n\nI looked at him with the most sincere look I could muster. \"What do you suspect?\"\n\n\"Without exploratory surgery, X-rays are our only tool. They're shadows of light and darkness. I thought, as you probably did, that Andy was just a rumpus little boy that seemed to have more accidents than a dog has fleas. I wonder now if his sense of balance was being affected. With his history of falling and loss of balance and his recent problems with his speech...\"\n\n\"Doctor?\"\n\n\"Given his history and the shadows I see on the X-rays, I suspect Andy sufferers from a glioma.\n\n\"What the hell is that?\" I asked.\n\n\"In laymen terms. A brain tumor.\"\n\nThere, he said it. I looked over at Ellie and she turned as white as could be. \"Oh, no, not my son. Not Andy. Oh God, Jake. Not Andy.\"\n\nI held Ellie in my arms as tightly as I could, trying with all my strength to hold us both together.\n\n*****\n\nTime was not our friend. I knew a lot of people in the city government and I called in some favors. When I told them our story, they pushed Andy's adoption through. Weeks later Andy was legally ours. I had a son.\n\nWith a borrowed wedding dress, a rented tux, family and friends, nurses and doctors, Ellie and I were married in Andy's hospital room. Mick was my best man. Ellie's sister drove in from LA to be her bridesmaid. I promised her a second wedding right down to the white church in the country, but she said she'd never been as happy seeing Andy's face as we said our vows to each other. We had become a family.\n\nTest affirmed that Andy had glioblastoma multiforme. It's an aggressive cancer, and Andy's doctors wasted no time in staring treatment. If you call being zapped by a radiation machine treatment. Then there were the drugs. Even a full grown adult would have been knocked to their knees. But Andy, always the trooper, hung in there.\n\nThe radiation treatments cause him to lose his hair. The medication made Andy weak, so Ellie was there every day to help feed him. I was, too. But somehow, my task was to keep him in good spirits. I became the comedy relief guy by telling him goofy stories. I'd come into his room wearing a wide brimmed hat, telling him I was back from safari trying to catch dinosaurs.\n\nWe quickly found out that having a child with cancer required a paradigm shift in our way of life. The hospital's routine soon became our routine.\n\nBut no matter what we did. Or what the hospital's nurses and doctors did. Andy's cancer didn't respond. The doctors unleashed a barrage of every weapon they had. But the tumor remained. Defiant as ever.\n\n******\n\nThe weeks seemed to drag. The endless trips to the hospital. Never any good news. We fell into a deep rut lined with self-doubt and second guessing. Sometimes at night, I'd hold Ellie in my arms as we lay in our bed. She cried endless tears. So did I.\n\nEllie always kept a bag packed and ready by the front door. It had two complete changes of clothing for her and me, a roll of dimes for the phone, and a few coloring books and some toys. It was our 'go kit', because as soon as the phone rang, we'd be ready to go. We used our kit a few times when the hospital would call late at night.\n\nWhen you're a parent with a sick child in the hospital, you sleep with one eye open. For some reason, tonight, I slept with both eyes wide open. I had a gut feeling. Around a quarter to four in the morning, the phone rang. We grabbed our bags.\n\nI somehow believed that I could let go of the steering wheel of the car and it would just drive to the hospital, as if it knew how to get there by itself. We arrived just a few minutes after four in the morning and quickly made our way up elevators and down corroders to Andy's room. As we approached, we noticed a young doctor was waiting just outside his room. He made the call to us. Ellie talked to the doctor, I stood guard. I didn't want to hear the soft shadowy words that he spoke.\n\n\"Noooo...\" I heard Ellie moan, as she turned stone white.\n\nI felt the doctor's hand on my shoulder. He held Ellie's hand. \"Be with him. I'm sorry.\" The doctor took a few steps back then disappeared down a long corroder. We both knew what he meant. We knew this day was coming; and it had arrived. Then Ellie and I did what every parent with a dying child does before entering their room\u2014we became actor and actress. We painted our faces with the makeup of calm, of reassuring, of hope.\n\nEllie entered the room first. I felt her melt beside me. Andy had curled up in his bed. I couldn't look at first, so I turned my head to the brightly painted Walt Disney characters on the walls. But somehow even they knew, as it seemed even Mickey Mouse had a tear in his eye.\n\nLike stucco falling from an old rotting building the fa\u00e7ade we had painted on our faces just seconds earlier broke off in large chunks, hitting the floor as moans of loss. We stood there, our emotions bare. Raw. \"Oh shit.\" I said.\n\nEllie kicked her shoes off and while I lifted Andy from his bed, Ellie got in and I lowered Andy down into her arms. \"Hey, doc said you weren't feeling so good so dad and I came here to help you sleep,\" Ellie said as reassuring as she could.\n\nEllie gently rocked Andy and I smiled a weak smile and walked to the door of his room. I needed some air. I turned back into his room and Ellie looked at me. \"He wants you.\"\n\nThere was a large leather chair that appeared to be older than Ellie and I combined. It was well worn and two people could almost fit in it. I picked Andy up and carried him over to the chair. Ellie gathered pillows and we stuffed them into the sides and under Andy's head. I held my son in my arms. His snow white hair was gone, just a few long rebellious strands remained. He seemed so small. So light. He was awake, yet he'd close his eyes every now and then.\n\n<br> \"How you doin'?\"\n\nThere was a long pause. \"I'm going to die, aren't I?\"\n\nThis time I paused. I swallowed hard.\n\n\"We talked about this before, Andy.\" My words came out like dust that blew away without form or meaning. I looked up at Ellie standing in front of us. She had a knuckle in her mouth and she was biting down hard on it.\n\nI pulled everything I had together and I pushed those few long hairs away from his face. \"Yes...\"\n\n\"I'll go to heaven?\"\n\n\"Yes, you will.\"\n\n\"What's it like, daddy?\"\n\n\"I don't know, Andy. I do know there are no needles or IVs or silly nurses that wake you up and ask if you're sleeping okay.\" He smiled just ever so slightly.\n\n\"Will you and mom be there?\"\n\n\"Yup, we'll be there in a flash.\" Ellie lowered herself down on her knees rubbing Andy's small hand in hers. Andy closed his eyes and then quickly opened them up. \"It's okay, you can sleep.\"\n\nAndy moved this head side-to-side slightly. \"No...if I close my eyes I won't see you anymore.\"\n\nMy thumb stroked his cheek. \"Sure you will.\"\n\nRivers of tears started to run down my cheeks unabated when I felt Andy's small fingers touch my chin.\n\n<br> \"Daddy, you're crying?\"\n\nI cradled him and dip my lips to his ears. \"Oh, Andy, I'm going to miss you so much. I love you, Andy. I'll be here for you...always. Always.\"\n\nEllie and I traded places off and on all night long holding Andy in our arms while we sat in that old leather chair. It's funny how your subconscious keeps track of time. I noticed the hustle as the night shift finished and the day shift began. The rattle of the food service carts. The mechanical hum of a floor scrubber; the sound of broom and dustpan of the cleaning staff. A nurse came in around six and removed the IV stint in his hand. Ellie comforted Andy as much as she could. Andy stopped talking.\n\nThe sun was shining, a new day was beginning, yet in our world, the drapes remained closed as we tried in vain not to allow death to find Andy. Noon arrived without fanfare, and a young nurse came in and gave Andy a shot of something. I didn't ask. It would've had made any difference. Ellie held Andy. The room was so very quiet. Even the busyness of the nurse's station didn't dare to enter the room.",
        "We could tell the end was near and Ellie stayed with Andy in the chair. She was the one that held him in her arms when he was born, and now, she held him in her arms as Andy awaited death. Ellie quietly sung a lullaby to her son. Her voice so soft and soothing, it comforted me as well.\n\nIt wasn't quite three in the afternoon when her song faded into stillness. Ellie looked up at me, her face wet with tears. \"He's gone...\"\n\nI turned my head away for a few seconds then looked back at Ellie holding Andy's body. I nodded in confirmation. I walked just outside his room. I caught the eye of a nurse standing by a desk. No words were spoken. She knew.\n\nTwo nurses entered the room and pulled the door closed. I leaned up against the wall. I closed my eyes and tried with all my might to prevent the tears I felt building in my eyes from breaking free. I heard Ellie call out. A long mournful cry of despair filled the tiny room. I bit down on my lips\u2014hard. I clinched my fists. Then I felt my legs melt turning into liquid. My back slid down the smooth teal green walls 'till my head rested between my knees. My mind exploded into a kaleidoscope of images that flashed before my eyes. I thought of Andy and I wept.\n\n******\n\nThey say that the older you get the faster time seems to go by. I guess that's so. Weeks now seem to go by like days and I noticed I'm tearing the pages from the calendar more often. Although time seems to go by quicker, we've both slowed down.\n\nAndy's death damn near ripped us apart. Ellie fell into a deep depression. I thought for a while she and I just weren't going to make together. I thought about having an affair but I kept my promise to Ellie. I've never held another hand but hers. Slowly, Ellie got better. Our bond became even stronger.\n\nI don't recall when it was, perhaps five, maybe eight years after Andy died that Mick passed away. Mick was right, as he always was. I had found my passion; my wife, my children and my love of writing. In the ensuring years, I've written twenty some books, many of them on the New York Times bestseller list.\n\nThat little ass wipe of a photographer, Terry, got fired from the paper. He designs women's clothing in New York. He's worth millions. And Sue Ling? I wonder about her now and then, especially late at night while Ellie is lying beside me asleep. I heard she gave one of the guys she dated in the pressroom a nasty dose of syphilis. Ten years ago I was told she was dying from AIDS related complications. I'm sure she gone by now.\n\nAs for Ellie and me, she bore us four children in our marriage; each one precious and unique. We're grandparents now. We have a good life together. There's plenty of life to live and Ellie and I aren't done yet. We plan on sticking 'round long enough to hold our first great-grandchild in our arms. Life has been good to Ellie and me.\n\nI turned my collar to the cold and damp when I felt the familiar warmth of Ellie's hand on mine. The day wasn't as warm now as it was back then. We placed a single white rose on Andy's head stone; just as we have done every year for the past thirty-nine years.\n\nFor you see, when Andy died, we agreed we wouldn't remember the day of his passing. But instead, we'd remember him on a different day. We chose that extraordinarily warm spring day, April 29, 1972, the day I pulled a little blonde haired boy out of a fridge duck pond. The same little boy that captured my heart and opened my eyes to love..."
    ],
    "authorname": "rwsteward",
    "tags": [
        "mini skirt",
        "mom",
        "short skirt",
        "high heels",
        "panties",
        "love"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/andy-4"
}