{
    "title": "Touch Pt. 04",
    "pages": [
        "The previous few days had been pretty hectic so I decided, as I rode to my flat, I'd relax for a few days before going away with Sara. I did need to sort some form of transport back as, once I \"died,\" I wouldn't be seeing Sara again. So that was on my list but shouldn't be a major issue. I also needed to collect my passport and bank cards when they arrived. The other thing was to pay for my boat which was to be my home for the foreseeable future and to arrange some other land based transport too. I also needed to check my emails for any information on the investigation I'd \"requested\" from the interviewing police inspector. Reviewing all this mentally I realised I might not be as relaxed as I thought.\n\nI arrived back at Jane's and put the bike on its centre stand on the drive out of the way of their cars and went in to my flat. I removed my helmet and outer gear as I went into the warm hallway. As a result of my late afternoon and early evening activities with Helen and Alison it was now getting late so I decided to make a late supper and flop in front of some crap on tv. Drinking my tea and eating a sandwich I sent a message to Jane. \"Home now, what was that about pictures?\" Whilst waiting for her reply I made sure I transferred copies of contacts to my new smart phone from my burner brick phone then, opening the laptop, started the setup procedure and then pairing the phone and laptop. \n\nChecking my emails I found a email from the police containing some huge attachments which I rightly assumed were the investigation files. I have to say they were dull beyond belief with interviews all transcribed fully in dry official police language. There were also numerous documents relating to the farm I'd had my incident. The files amounted to a massive piece of work but effectively meant the authorities knew nothing for definite and certainly had no proof of who was behind the laboratory. The main interest was a list of the personnel who I'd found dead at the lab and their addresses. Some I discounted as they came from various places around the world and the police could find no home addresses in the UK. However the ones in the UK who had partners, husbands and wives deserved closer inspection. The police had interviewed them and got nothing other than knowledge that they'd received large insurance payments and knew nothing of what their significant others were working on. The police had \"followed the money\" but come to a dead end with various countries restrictive financial laws concerning who owned and paid for the insurance. They had suspicions around a few high end biotech companies but everything had been paid for via cut outs so they had precisely nothing. I decided some follow up with the relatives may be useful in combination with my ability. \n\nMy phone buzzed then with a message from Jane. \"Phil and I out this evening, I'll show you later.\" I decided that could wait and sent a brief acknowledgment and headed to bed. Sleep didn't take long and I woke up quite early but feeling refreshed and warmer than I'd have expected. Moving slightly I realised someone was in bed with me. Turning to look I found Jane lying beside me in a shear black nightie that exposed more than covered. Definitely not something to wear on a camping trip. \n\nShe was still asleep and must have gotten into bed with me during the night. I was surprised I hadn't woken up but she was petite and probably hadn't made the bed move much. Looking at her still sleeping form with her body visible through the thin material I felt my cock stir and became instantly erect. I rejected the idea of just taking her as that wouldn't be fair so slipped under the duvet and being careful not to disturb her lifted the fine material above her hips. Kissing my way from her hip bone inwards I moved over her smooth, bare pubic mound and to the slit below. Gently moving my tongue between her labia to access her clitoris I licked slowly but insistently feeling her hips rise to meet my tongue. I felt her labia open and pressing my tongue deep as I could into her opening pussy felt her sweet wetness on my lips. A barely audible moan came from above and within seconds she was thrashing and shivering as her orgasm ripped through her. It had taken barely 45 seconds since my tongue had first touched her clit. I continued to lap at her pussy through her orgasm as her moans became louder till eventually she pushed my face away gasping \"No more!\"\n\nI moved up the bed sliding over her till my aching cock was at her pussy and stroked the her up and down her well lubricated pussy lips coating myself. I was on my hands leaning above her looking down at her as I slid in and watched her face as her mouth opened and she gasped in appreciation. She was as tight as I remembered but so well lubricated that I slipped in with one thrust. I pulled out slowly and then thrust hard into her as she pushed her hips up to meet me and gasped loudly. She then pulled herself up to my chest with her arms round my back and her thighs around my waist. I continued to thrust slowly into her grinding my pelvis into hers. She dropped back onto the bed so I moved her legs from waist to over my shoulders so that I could thrust deeper into her. After several minutes of this I was rewarded by her increasing breathing and moaning and then she was there. Her pussy clamping around my cock as she came for a second time or possibly third it went on for so long. As she started to come down I felt my balls tighten and staring into her eyes I groaned and shot my cum deep inside her in several spurts. Cumming far more than I'd thought possible before.\n\nI slowly lowered myself on top of her resting my weight on my elbows as I came down from my intense orgasm. Jane looked up at me and smiling said, \"Now that's how to wake up.\" She then lifted her head and kissed me deeply. I was still getting my breath from the morning sex so I was almost incapable of coherent speech. So I just nodded and smiled. \"Phil's going to be so pleased I've been fucked again.\" She said brightly with a beaming smile and I was a little surprised at her language but added it to her list of possible turn on's. She carried on \"Since you fucked me in front of him he's been really attentive.\" As she spoke she continued to push up against me and I could feel her pussy clenching on my cock which stiffened again with her attention. She moved her legs from my shoulders but holding my buttocks made it clear she wanted me in her pussy still and wrapped her legs around mine with her heels over my calf's. \"He took me out last night and we had a lovely time, he's leaving the band and giving up gambling and I'm going to have lots of lovely sex for him.\" She moaned a little and I could tell she was turning herself on again. Her hips ground against me in a circular motion and she gasped. \"He sent me here after we got back and picked the nightie for me.\" Her face flushed as she gasped again as her hips moved quicker. \"He wants me to come back to bed after we've fucked so he can lick me clean again.\" Her thighs pulled me deeper and she gasped out, \"He wants me to tell him how good your big cock feels in his wife!\" And with that she moaned and came again hard shivering and gasping then exclaimed \"Oh fuck Simon!\" All of this pushed me over the edge again and I came adding a second load to her already full pussy. \n\nAfter a few minutes I was able to think and talk again and rolled off Jane my cock slipping out of her very full pussy. \"So are you off back to bed now with Phil?\" I asked\n\nShe nodded and replied, \"Yep, can't leave him frustrated much longer.\" She smiled at me and rolled carefully off the bed. \"He's not allowed to cum till he's cleaned me and made me cum again. So as we've got to get ready for work soon I'll have to go.\" She explained brightly. \"Will you mind if I join you later?\" \n\nI considered for a second and said \"If I'm in that's fine, I'm going away for the weekend Friday though.\"\n\nShe nodded and replied. \"Ok, I might see you later.\" Smiling she headed out of my bedroom to head back to her bed. \n\nI decided to get up and headed for the shower. A few minutes later I was back in my bedroom clean and shaved. I stripped and remade the bed with clean bedding then dressed. I'm hardly a follower of fashion so I just dressed in my normal jeans and t shirt. As I grabbed my jacket I heard a loud wail from Janes house and decided she must have been thoroughly cleaned by her husbands tongue. I did wonder what I had unleashed. \n\nI headed out and decided to head to town for some breakfast and a cash collection. I phoned my drug dealing contact and instructed him I'd completed another unspecified task for him and to deliver me another bag with at least \u00a3250k in it to me at the cafe I was going to have breakfast in. Pleasingly I was just finishing my last slice of toast and thinking about another coffee when he walked in, nodded to me and dropped the bag on the chair beside me. He then walked over to the counter and ordered a coffee to go and left shortly after. I picked up the bag and did the same. \n\nNow I had some plans to organise for the weekend and they involved some shopping. I was hoping I could do all of it in one shop on the outskirts of town. First I made sure Sara was at home and instructed her to stay in till I told her she could go out. Walking into the huge warehouse structure I was somewhat overwhelmed by the size of the building and diversity of its range. Because of the size I hoped to be just an anonymous customer that nobody would be able to remember. I found what I was looking for in a suitcase sized bag and the rest of my purchases I put in a large canvas bag I bought at the same time. Paying for it all in cash I pushed my trolley outside the store where I then called a taxi firm. They arrived shortly and picked up my purchases to deliver them to Sara ready for the weekend, as the taxi left I texted Sara to expect the delivery then allowed her to carry on with her day thereafter.\n\nThis done I rode round to my mailbox service to check for any deliveries. I was semi apprehensive to note two official looking envelopes in my box. So putting them in my jackets inner pocket I left and headed to the hotel for my room and privacy. \n\nI dumped my bag of cash on the floor of the wardrobe, and got out the envelopes and my laptop and phone. The first turned out to be my new passport and I was now officially Simon Barnes. It did mean I'd need to pass my driving and bike tests again as soon as I could but that was something I could put on my to do list. This was expanding with no signs of ever decreasing. The next proved to be my bank and credit cards with instructions on activation and how to access my accounts. Melanie had obviously expedited my application! Following the instructions in the letters on my laptop I was shortly a solvent member of society with a credit balance in my current account and a \u00a315k credit limit on the credit card. Using my passport number and the official government website I was able to acquire a national insurance number and I was pretty much set as a new citizen. On the same site I was able to apply for a provisional driving licence so did that too. \n\nI checked out the card that Melanie, my personal \"banker\" had given me and found her email address. I quickly sent her a email to thank her for her prompt service and explain that I had another deposit to make into my account. Asking when I could get an appointment to make my deposit I sent the email. \n\nMy next task was to look at the list of significant others from the police investigation into the laboratory and decide which ones to visit to conduct my own investigation. Looking at the list I came to the conclusion I hadn't a clue who it would be best to see first. As I only had one day before I was due to go away with Sara I decided on the simple approach of visiting the closest first and seeing what happened. Entering the addresses into mapping software I determined the easiest person to get to first. \n\nThis turned out to be a young lady called Audrey Henderson who was only 10 miles away out of the city. The police notes revealed she was 31 years old, was a qualified solicitor, had been married to her husband, a molecular biologist for 6 years and had no children. Other than some further details about education and family background there was little else. She'd stated she had no knowledge or understanding of the project her husband was working on and hadn't known he'd left his previous employer. She thought he'd been moved within the university to work on a special project. Other than this I had a picture of her from her passport and another which looked like someone had accessed holiday pictures from Facebook unless she'd given them pictures of her on a yacht. She was pleasantly pretty with short, dark hair in the pictures and had a nice smile. So effectively I knew nothing but with my abilities I might be able to discover more than the police. Obviously assuming I could find her. I intended to start by calling her work number to see if she was there then try at her home address if not. \n\nRinging her office I established that she was still on indefinite leave but would be returning at some time in the future. Also that the firm could help me with my legal issues now should I choose not to wait for her return. I declined the offer and hung up. From the police files I had her home and mobile numbers but not wanting to leave a trail to me I wondered how to phone her home address to see if she was in. Before the mobile phone revolution I could have wandered to virtually any street corner and used a call box but they were few and far between. So the only way to find out without leaving a digital trail was to go round. Before I shut down the laptop I checked my email and found that Melanie was in her office and would be available to accept my deposit for the next hour. Putting my laptop away quickly in my bag I headed out to my bike and set off. I decided to abandon the bike that my drug dealing \"friend\" had \"loaned\" me before I went away for the weekend and let him know where to collect it later.\n\nI rode over to the bank offices and this time I didn't need any of my abilities to get in as Melanie had left a pass behind the reception desk for me. I headed to the lift and went quickly to her office and was immediately let in by her secretary. Melanie was sat behind her desk in a business jacket and white blouse until the door closed then she was out of the chair and out from the desk and almost jumped on me. Her small breasts were pressed hard into my chest and her arms around my neck. Her lips were on mine and her tongue in my mouth. Obviously she had some happy memories of our last meeting. \n\nI pulled back and looked down at her smiling at me. \"I'm glad you emailed, I was hoping to help with your banking needs again...\" She smiled playfully. \"Unfortunately I have to go to a meeting and I can't get out of it, sorry. Is that the money for your deposit?\" She pointed at the bag. \n\n\"Yes, can it be placed in the same account?\" I asked. \n\n\"That's no problem, I'll get a cashier.\" So saying she reached for her telephone and rang out and requested her secretary to arrange someone to attend to collect my payment. She turned to look at me. \"Your last visit gave me a problem I need to talk to you about.\" At that moment there was a light knock on the door and a cashier appeared. I kept my concern in check as Melanie arranged the deposit and the cashier departed. \n\n\"What's wrong?\" I asked urgently thinking about all the ways my new identity could be compromised.\n\nShe smiled at my concern and said, \"I need you to make me cum again soon, that's my problem.\"\n\nI smiled back and said with relief, \"That won't be an issue, can I ask you to a meeting outside of work?\"\n\nShe rushed to her desk and came back and presented me with a new card, \"This is my personal mobile and email, you can contact me on those anytime.\" The cashier returned with my paying in slip at the same time as my smartphone buzzed with a text from the bank telling me my account had been credited with \u00a3245k giving me a balance of well over \u00a3300k.\n\n\"Thank you.\" I said to both the cashier and Melanie and meant it. After the cashier had gone I stepped towards Melanie and put my hands on her pert backside feeling her muscles clench under my hands and pulled her into me. \"I'll send you a text later with some possible dates ok? But I want you to send me some pictures later to remind me what I'm missing now.\" I leant down and kissed her hard and she responded eagerly. \n\nShe broke off after a few seconds and checked her watch. \"Bugger, I've got to go, I'll wait for your text.\" So saying she took my hand and led me to the door. Dropping my hand she walked me to the lift and shortly I was back in the lobby whilst she attended her meeting. Whilst dropping off my temporary security pass I asked if I could have a A4 envelope and some blank paper and when handed them I thanked the receptionist profusely and put them in my bag. \n\nI was a bit frustrated as I'd been hoping for a really private banking session but I knew she'd been in contact for a meeting soon. I sent her a text, \"Remember to let me know when you have free time and we'll sort a date.\" I headed for my bike and decided to see if I could meet Audrey to interview her regarding her dead husband. \n\nIt didn't take long to get there despite the traffic. The joys of a motorbike versus a car. I turned onto her road and discovered a neat tree lined street with houses set back from the road behind long narrow gardens. Obviously Audrey and her deceased husband had been doing quite well. Her house was part of a terraced row of townhouses and not somewhere I could just hang around checking out the neighbourhood. So I just had to go for it and ring the doorbell and hope that I'd find her in. \n\nI parked the bike at the end of the road and walked back to her house. I brought out a A4 envelope stuffed with blank paper and a clipboard from my bag and strode to Audreys house as though I was there to deliver something.It was a well maintained terraced house with a pathway through a neat garden. Obviously it had to be like this otherwise the neighbours would have been posting letters through your door and muttering about your lack of care and attention to each other. The door was a deep black with brass fittings and I easily located the doorbell. I heard the bell chime and listened to see if there was any movement from inside the house. Shortly after tinging the bell I heard a door opening and then footsteps. The door was opened and Audrey stood looking at me. She had had her hair cut into a new style but it was much the same short bob. This ended my hairdressing knowledge. She wore limited makeup, some small ear studs and was dressed casually in ripped jeans and baggy jumper. \n\nI lifted my clipboard and showed her the envelope that I'd padded with the blank paper and said, \"Hello, I have a packet for Mrs Henderson at this address. Can you sign for it please?\" I smiled in what I hoped was a winning fashion and held out my pen. Fumbling I managed to touch her hand as she reached for the clipboard and was rewarded with the warmth in my hand and a brief second of puzzlement on her face. She scrawled a signature where I had indicated and took the envelope. \n\nShe looked at me and said \"Thank you.\" She then started back into the house with the envelope and was about to close the door.\n\nI stopped her saying \"Wait, you need to invite me in to the hallway.\" \n\nShe looked at me for a moment then said, \"What are you waiting for come in, it's bloody cold out there.\"\n\nGratefully I walked through the door into her hallway noted the tasteful decoration and tiled floor. Very much the homes and gardens interior design fashion plate. She looked at me expectantly obviously having rationalised her invite to me as requiring more information about the delivery I'd just made. I smiled pleasantly and said, \"I need to to give me full and honest answers to all my questions, you will not be embarrassed or hold anything back. You're going to be very happy to help me, you'll feel very comfortable with me at all times and can't see any problems with answering me. Ok?\"",
        "Audrey looked at me and replied after a second, \"Ok, I can do that.\" She smiled and said, \"Would you like to come to the kitchen, I was just making some coffee?\" She started down the hallway expecting me to follow.\n\n\"Wait!\" I said urgently in a low tone. She stopped and turned to face me. \"Is there anyone else here or are you expecting anyone?\"\n\nShe turned her head to the side as she considered the questions and replied, \"No I'm alone here and nobody's coming round today that I'm expecting, still want that coffee?\"\n\nI smiled. \"Yes please, that'd be fantastic.\"\n\nAs she walked she asked over her shoulder, \"milk and sugar?\" She then entered the kitchen at the back of the house. \n\n\"Black please.\" I replied then looked at my surroundings. Obviously an extension with a sloping roof with several skylights and large French doors to the garden. Very light and modern with stools arranged round a central island. Very high end fittings so I sat on one of the stools taking off my bike jacket and putting it on a spare chair as she prepared the coffee with the help of a large machine not out of place in a coffee shop. Placing a steaming mug of coffee in front of me she sat on a stool opposite. We both put our hands round our mugs, I was warming my hands after the cold ride and feeling gradually returned. \n\nLooking quite relaxed in her surroundings and with me she smiled and asked, \"So what is it you want to know?\"\n\n\"Unfortunately I have a bit of a list I'm afraid.\" I started, \"I need some information about what your husband was working on before he died and who he was working for?\" \n\nShe looked up and smiled wryly then looked down at her hands on the coffee mug, \"I thought it might be that, the police and some people who aren't police but carry warrant cards have asked the same.\" She sighed and continued, \"I told them I didn't even know he wasn't working for the university.\" She looked up and her face was serious. \"But I was lying, Tom had told me about his new job but after he left the university he told me not to tell anyone. After a few months I could tell he was worrying about something and he confessed he was worried about the research he was carrying out.\" She stopped and took a sip of her coffee and I smiled encouragingly. \"He also said that he'd met the people who were behind the research and they scared him.\" She looked at me and said, \"He wanted to leave but he said it had been made clear he couldn't, they were threatening him.\" She then stood up and put her coffee down on the kitchen island and said \"Come with me.\"\n\nI stood and followed her as she left the kitchen and headed for the stairs. I wasn't sure why she wanted to leave the kitchen but I figured she had something that she needed to show me. \"It sounds like Tom was in too deep then?\" I asked as we went up the stairs. \n\nAs we reached the landing she looked over her shoulder and said, \"I think he was terrified by the research and by the people paying for it. In fact they've terrified me too.\"\n\n\"What, you've met them?\" I said in surprise.\n\nShe walked through the door into a bedroom and then into a en-suite bathroom. Standing in the large walk through shower that could fit half a dozen fully grown adults she started fiddling with a tile at about head height. Turning to me she almost spat, \"Yes, well I met their representatives who made it clear I was to say nothing about anything I knew about Tom's work and if I did I'd be having an accident.\" \n\n\"So they're not above violence to get what they need then.\" \n\nShe continued to fiddle with the tile. It made a click and a drawer slid out. She lifted a lid in the drawer and removed a few items then closed the lid. They were a collection of usb sticks. Turning to me she said, \"Tom loved DIY and spy films. He put in this concealed compartment in the shower and hid a safe box in it. Unless you know it's there it's pretty much impossible to find. They didn't.\" She handed me the usb sticks. \"That's Tom's research and a load of files from his lab. I think it's got details of who was running the project or at least a way to find out who was.\" \n\nI took the usb sticks and putting them in my trouser pocket I said gratefully \"Thank you, I'll make sure that any information on them won't be traced to you.\" She smiled again and turned to close the secret compartment, as she slid it shut I looked and she was right. I doubt I'd even find the right tile knowing where it was. As I moved away I felt a sharp pain on my upper arm and then I was soaked. I'd caught my arm on the shower controls and set several overhead waterfall jets of at once. I looked at Audrey and she was soaked through too and spluttering with laughter.\n\nShe reached behind me and found the controls and turned them off. She continued to laugh and said, \"Well that happened when Tom showed me it first time too, sorry for laughing but you just looked so shocked.\"\n\nI smiled back, \"It was just the surprise of it, can I borrow a towel?\" I asked. \n\nShe continued to giggle and said, \"I'll get us both towels come on.\" As she walked out of the shower she pulled off her jumper and vest top and standing in front of me in her plain white but now see through bra started to undo her jeans. She looked up at me staring and said, \"Come on, strip off and I can chuck your clothes in the tumble drier and they'll be ok in 20 minutes or so.\" She stood there pulling her jeans down revealing equally soaked white panties that were just as see through as her bra. She had a lovely body that was more revealed than concealed by her underwear. Her breasts were probably a c cup and looked to have dark small nipples. She was probably around a uk size 10 and with her smooth skin and smile looked magnificent. As I peeled my t-shirt off I realised my instruction to be comfortable around me had worked as she stood there without a hint of shyness. \n\nShe watched me reveal my now slim waisted, muscled torso and starting on my jeans I figured why bother being shy and pulled my boxers off at the same time. Emptying my jeans pockets I handed her my clothes which she took and handed me a large towel. She took a last glance at me then ran out of the room in bra and pants carrying my clothes and said \"I'll put these in the drier, back in a sec.\"\n\nI continued to dry myself on the soft fluffy towel and true to her word Audrey came back as I heard the noise of a tumble drier in the background. Still in her bra and pants she walked into her bedroom and picked up another towel. \"Ok that's done, shouldn't be too long before they're dry for you.\" She took another long look at my body lingering on my cock hanging between thighs. My cock was behaving itself but that wasn't going to last long especially when she reached behind herself a undid her bra. Pulling it off caused her breasts to drop a little and gave them a nice sway. She then leant forward and pulled off her pants revealing her pussy that was lightly covered in almost black trimmed hair. My cock gave in to the inevitable and started to rise. She stood there naked towelling herself her eyes glued on my cock as it lengthened and thickened and became erect rising to my flat abdomen. \n\n\"Well you seem to like the view.\" She smiled and walked over to me. I sat back on her bed so my face was level with her lovely breasts. Her hand reached out and grasped the head of my cock and squeezing gently started to stroke it. I leant forward and took a nipple in my mouth as her free hand reached the back of my head and pulled me hard into her. She moaned deeply as I raised one hand to her free breast and lifted the weight of it and placed the other on her bum and gently pressed both at the same time. \n\nI moved my head away from her breast and replied \"Obviously so do you.\" I smiled at her and her mouth came down to meet mine our tongues entwined as we kissed. She broke off after a moment and knelt down between my thighs. Looking up at me never breaking eye contact she opened her mouth and took the head of my cock in. Licking around the head she sucked gently and slowly ever so slowly sucked me deeply into her mouth. This wasn't down her throat but by god it was good. She moved up and down her hands moving in time and just as I was thinking she's not going to stop till I cum she released me from her mouth. \n\nLooking at me still she pushed me back on the bed and said, \"I can't wait any longer.\" Audrey then knelt over me with her hand round my cock and rubbing the head over her clit and wet labia till I was well lubricated slipped me inside her and slowly pushed herself down on my cock. She grabbed one of my hands and brought it to her breasts and showed me how she wanted me to touch them. Her free hand entwined with mine and she proceeded to grind her clit on my pelvis. She was tight and I felt every stroke as she moved back and forth on my hips. Her face was contorted with pleasure but her eyes remained open all the time. She was silent throughout but for gentle moans and gasps and I watched her face flush and she was there. She thrust her pelvis hard against mine as her pussy clenched and relaxed as she orgasmed. Her abdominal muscles visibly rippling and her breasts shaking. \n\nFinally she closed her eyes and collapsed forward onto my onto my chest and was still. A muffled \"Thank you,\" was gasped out as she came down from her orgasm. I shuffled back on the bed keeping her impaled on my rigid cock as I did so we both lying on the bed with our heads on the pillows. Holding her backside I began to gently stroke in and out of her soaked pussy feeling her muscles relax but still gripping me. It was working as she gasped and moaned as I started to take my pleasure with her. Kissing her neck and shoulders I kept one hand on her bum and one stroking her back. She moaned into the pillow beside me \"Oh god, again!\" She then took a more active role clenching her buttocks and thrusting her hips. Eventually she drew her knees up to push me deeper into her but her face never left my neck. Suddenly my cock was being massaged by the rhythmic muscle contractions of her pussy as she came again. She was biting and sucking my neck with guttural noises from het throat as she came again. This tipped me over the edge and I felt my balls tighten and then I was there, shooting cum deep into her pussy.\n\nIt took me a minute to come down and I realised Audrey was still buried in my neck and shoulder gasping soft unintelligible sounds. Occasionally I heard a \"Oh fuck, oh god.\" She repeated this several times then her breathing eased and I realised she'd drifted to sleep impaled on my cock. \n\nI decided just to lie there beneath the attractive young woman and just enjoy the simple pleasure of her naked body lying on mine. However as my cock softened it gradually slipped out of her and the sensation must have disturbed her as she started and pushed herself up on me. She smiled and said \"Give me a minute.\" Then rolling off me and the bed she walked sexily to the bathroom. After a few moments she returned the noise of a toilet flushing behind her holding a towel and a cloth. She proceeded to clean my cock and balls then dry them. Dropping the towel she got back on the bed and cuddled up. She then surprised me by pulling the duvet over both of us and continued to snuggle in. \"Can you just hold me for a bit, I need to feel close and warm.\"\n\nWell I couldn't say no to that so put my arms around her and felt her breathing slow drowsily as she said half sleeping, \"This is what I miss, the cuddles. Don't get me wrong the sex was great but after I need to be held.\" She paused and said, \"You must think me a complete slut.\"\n\nThat startled me from my drowsiness and I hopefully gallantly replied, \"Of course not. I think you're great and just needed to be held.\" I hoped that reassured her but after Jane's revelations I added \"Unless of course you want to be a complete slut?\"\n\nShe giggled and said, \"We'll it does have its attractions.\" She trailed off and then continued. \"Before we were married I got up to a lot.\" She didn't elaborate and I thought that might worth exploring if we met again. Suddenly she jerked fully awake and sat up looking down at me, her breasts swinging distractingly in front of me. Her face a mask of surprise and horror she said \"I don't know your name! I've just fucked a man and I don't know who you are!\" She then smiled at me, held out her hand and said, \"Hi I'm Audrey, pleased to meet you.\"\n\nI smiled back and took her hand and replied, \"I'm Simon, I'm pleased to meet you too. That was way better than a handshake.\"\n\nShe looked back at me and nodded solemnly at me and said \"I agree, I may need to try it again one day.\" Then her face lit up and she giggled and cuddled back up to me. \"I may snore, I haven't slept well in months...\" her breathing slowed again the she muttered \"If I'd know I was going to be well fucked I'd have tidied myself up.\" This I supposed was a reference to the pubic fuzz but may not have been. She stopped talking and her breathing became slow and even. Yes she did snore.\n\nI woke 30 minutes later with Audrey still curled against me sleeping deeply. Slowly extricating myself from her arms I got up and tucked the duvet around her. I walked to the table I'd left the usb sticks on and retrieving them I headed downstairs to get my clothes. Dressing in the kitchen in my very warm but most importantly dry clothes I looked around for a pen and paper. Finding some I left Audrey a brief note and my new mobile number. I explained that I'd had to go but if she'd like another 'handshake' or needed anything to send me a message. I also explained I'd be in contact with anything I'd found out about the people her husband had worked for. I wasn't sure who had access to her house and if say her mother walked in and read the note things could get awkward for Audrey the grieving widow. So I crept back upstairs and left the note on her pillow beside her. She was breathing gently and it was all I could do not to get into bed with her again but quelling my demanding cock I turned and left. As I went through the hallway picking up my jacket and helmet I looked in the mirror. After I'd noted how good I looked, my age seemed to have settled around late twenties to very early thirties which I felt a very good age. I smiled as that was 25 years younger than I was, then frowned slightly as I noted the bite marks to my neck left by Audrey. I'd just have to wear my collar up, who knew 31 year old solicitors behaved like teenagers in bed. \n\nAs I'd missed lunch I headed the bike towards a sandwich bar and sat by the river eating a bacon sarnie and drinking a mug of tea. My next plan was to review the data on the usb sticks although if it's was scientific I had no chance of understanding more than 1 or 2% of it. If hopefully it came with an idiots guide/executive summary then I might have a chance. The other thing I needed to do was make sure Sara would play the grieving widow properly. I wanted to chose any photos that may be used of me after I went to emphasise how I looked before the accident. Anything that made me look closer to 70 would be useful. Not having a Facebook account helped as no pictures for any news sites to harvest and use indiscriminately. Admittedly I was rather hoping my 'death' would fly under the radar but I wanted to be prepared. \n\nSo I headed to my old house and following the same process parked the bike out of sight in the woods behind my house. I entered through the back door and locked it behind me. I headed to the computer sitting in an alcove and looking through the files found some truly horrible pictures of me from before the accident. They successfully looked like me but could be anyone between 50 and 65 so they were ideal. I saved these in a file on the desktop and left a note for Sara.\n\nI looked at my new phone and noted I had a quite few messages. Opening up the app I had messages from Helen and Alison as well as from Audrey. The ones from Helen and Alison were to say what a fantastic time they'd had but their course had ended and they were on their way back home. It included their addresses and a note that they were looking for a place together as well as a picture taken in the hotel mirror of them both nude cuddling. One to save to the memory there. I replied saying I'd also had a great time and if I was in the area I would come round. \n\nAudrey's message was longer and asked me to come round again soon and explained she now felt the most relaxed she had felt since becoming a widow. She only asked that I message her to arrange times for privacy. I replied and asked how she felt about boats. \n\nI also had a message from James to say the boat would be ready to be handed over the next morning and I sorted a time with him. This rather decided what I'd be doing tomorrow so now I would need to go back to the flat at Janes and pack up tonight. \n\nMy next task was to look at the usb sticks. So I opened up my laptop and turned it on. Whilst I was waiting for it to fire up I popped to the kitchen and made a cup of tea. On my return it was fully functional so sipping some tea I put in the first of 5 usb sticks. As I suspected, without many years of study, I had no chance of understanding any of the science. However it did contain some simplified memo's to \"management\" but no details of who they were. The project, they explained, was on track and producing results, in grossly simplified terms they explained their use of a viral vector to implant DNA repair tools in cells. They went onto say they would begin animal trials soon and thus ended the project...\n\nThe next two usb sticks were much the same but also had some video of various procedures. Again nothing I could understand without many years of detailed study. The fourth however contained video's that Tom had recorded to camera over the months he'd been working on the project and he explained his horror at what he was involved with. The trials in cells hadn't gone well and if the DNA tools hadn't killed the cells then the viral vector did. They'd had one line of success and this was what was going to animal trials but it was immensely unstable. The animal trials went equally well producing large volumes of dead animals but they did have some limited success and this was where they were concentrating their efforts. Tom gave an explanation of what they were trying to achieve and how they were trying to stop ageing with this DNA modification. He also recorded his concerns at where the money was coming from and detailed the organisation involved. He related how anyone who voiced disquiet was silenced. Also that at least one colleague had died in a hit and run incident after saying he was leaving.\n\nTom's last video explained that the trials were focused on a successful line of research where there viral vector had passed the DNA into a animals cells. He was concerned about the possibility of viral replication and thought there was some evidence of symbiosis between the host and the virus. He was unsure what was happening but once it did the host died horribly. This must have been what happened at the lab and when I turned up I got infected with a weakened virus. It had still caused me to arrest but having multiple drugs in my system and a almost full transfusion had allowed the symbiosis to occur successfully. \n\nSo now I knew very roughly what had happened to me and possibly who was behind it. Now I needed to decide what to do with the information. Would it be better to fade away after my death this coming weekend or search out the people behind this series of experiments and do what? This would be something to think about when I'd sorted my situation out. \n\nAs I packed everything away ready to head back to the flat my phone vibrated with a message from Audrey. \"I love boats, do you have one?\"\n\nI replied \"Yes, a narrow boat by the marina in town, feel like helping with some interior design tomorrow? No painting or heavy lifting.\"",
        "Almost immediately I received a reply asking for a time and location which I rapidly sent back. As I went through the back door locking everything behind me another message arrived from Melanie. \"I have a cancellation this afternoon and early evening and I have some investment opportunities to discuss with you. Free?\"\n\nAs I walked back to the bike I typed out a reply expressing my interest and giving her the name and room number of my hotel. It was with a pleasant anticipation I rode back to the hotel room. I figured this could work out well as I could check out later after clearing the room of anything I'd left. The bike I'd need to leave somewhere tomorrow or tonight and leave a message for my drug dealing contact to collect it. Then I had a decision to make regarding informing the police about his activities which I decided to make after the weekend. \n\nArriving at the hotel I waved at the receptionist and headed to my room. It was a shame Helen and Alison had already left as they may have found the investment advice useful too. Stripping off as the door locked behind me I stepped into the shower and realised I hadn't shaved in several days but my face was smooth. Another point to be grateful for as I hate shaving but equally wasn't keen on facial hair. Drying off and checking my much younger body and face in the mirror I saw that the love bites to my neck had gone so at the very least bruises heal almost instantly. I wasn't about to chop off a finger to see how that went, I'm not that keen to explore the limits of my ability.\n\nA knock came from the door and I grabbed a towel to answer it. Wrapping it around my waist I opened the door and was pleased to see Melanie standing there. I took in the dark well cut business jacket covering her white blouse. She had on a matching skirt that finished at her knees and possibly stockings on her legs. Her almost black hair was held back in a complicated French plait and she had limited make up but bright red lipstick. I continued to stare at this sexy apparition until she said politely, \"Why not invite me in then you can stare properly in comfort?\"\n\nI stuttered an apology and waved her in. As the door shut behind her she grabbed my head and pulled me down to her and kissed me tenderly. Her tongue probed my mouth and I could feel my cock making a tent in the towel. Her hand playfully stroked the head of my cock through the towel and I started to move to the bed. She stopped me with a hand on my chest and lifted her briefcase. I was pleased to see she'd got a slight blush to her cheeks and her breathing had speeded up but she said, \"Not yet, business first, I've booked this as a client development meeting so I need something to show my bosses and a picture of me sucking your cock won't do.\"\n\n\"That's a shame,\" I said disappointedly, \"it'd certainly cheer up some of the presentations I used to sit through.\"\n\n\"True, but those pictures are for my personal consumption, anyway most of my bosses would have heart attacks if I did slip some porn into my presentations.\" She smiled wickedly. \"It would be a way to speed up promotion though, dead men's shoes and all that.\"\n\nBowing to the inevitable I asked \"So what business is it we need to discuss that won't kill your bosses?\"\n\nShe opened her briefcase and took out some documents, \"Well you have just over \u00a3300,000 sitting in a current account and I was wondering if you have any plans to put in more or what to do with the cash?\"\n\nThinking about it I did wonder about meeting some other local drug suppliers and relieving them of their cash reserves and putting it to use so I said, \"Well I may have some more large deposits to make but I have got a large amount to take out tomorrow. But I'll probably replace it with a load more later.\"\n\n\"Ok, that's good, what I want to do is act as your investment manager, as you put more in I can invest say 80-90% of your money and then give you a good return would that be interesting?\" As she said this she took off her jacket then continued, \"I have the papers here for you to sign and I can have everything sorted in the morning, full accounting and tax compliance assured.\"\n\nI stared at her as her thin shirt meant I could see she wasn't wearing a bra or vest beneath it. Her dark nipples were clearly visible and every movement sent them on a slight swaying motion that was very distracting to me. Obviously not the best way to conduct a business meeting but who was I kidding, I'd sign anything she put in front of me. \n\nAs I stared at her chest she started to unbutton her shirt. Keeping her eyes on me at all times she said, \"If you can put large deposits in I can route it through your off-shore account and invest from there.\" Getting to the last button she maintained eye contact and started unbuttoning her cuffs. \"I would be able to keep you as a personal client if you agree.\" She shrugged her shirt off and she was naked from the waist up. I noticed she hadn't got any indented skin marks from a bra which meant she certainly hadn't been wearing one in the last few hours. \n\n\"So you want to have me as a client then?\" This was a stupid question but when you have a beautiful young woman undressing in front of you your brain isn't firing on all cylinders.\n\n\"Definitely.\" So saying she slipped her shoes off and walked over to me. She put her arms around me and pressed herself against me and I could feel her hard nipples pressed into my chest. \"I need to be able to see you and this way I can.\" Her hands went to my waist and released my towel as she stepped back she put two delicate hands around my stiff cock. \"After our last meeting I've had to masturbate so much my boyfriend complained.\" She stepped back letting go of my cock and continued, \"But it did make him fuck me and he let me talk.\" She pointed to the bed and indicted I should get on it. \"I know it'll only be occasional meetings but that's enough.\"\n\nI stepped over to the bed and lay down with my head on the pillows so I could continue to watch. My cock was aching for touch so as she watched I held it and stoked up and down a few times. She licked her lips as she watched me stroke then dragging her eyes up to mine, put her hands on her skirt. She undid the skirt at the back and let it slide over her hips to the floor. This was my next surprise, no panties. She'd come from work to this hotel without them. Maybe she'd also spent all day at work without them too I mused. Her stockings were the shear black hold up type and set off her now naked body to perfection. \"Wow.\" I wasn't feeling very articulate so decided to leave it at that. \n\n\"You like?\" She said and judging by my cock I could only assume this was a rhetorical question. I nodded and lay back to see what she had in mind. My control of her several days ago had started this but had apparently only released her inner. \"I hope you like my new nude look.\" She indicated her nude pubic mound. \"I'd thought about it anyway but after we'd had sex in my office my hair disappeared in the shower, it's very smooth.\" She ran the fingers of one hand over to emphasise this and gave a tiny moan. \"I really like it now and I see you're a fan so it can stay.\" I didn't say anything but I didn't think it would ever grow back unless I allowed it to and no way was I doing that. \n\nShe lifted her hand from her pubic mound and licked her fingers, \"God I'm wet.\" She slowly walked forward to the edge of the bed and again keeping eye contact put her hands on the bed then slowly on hands and knees crawled up the bed. Her small breasts with their tight nipples moved side to side as she crawled up. I always liked smaller breasts and hers were lovely soft white globes, firm and pert. \"I see you like the view.\" She sat up onto her heels. \"I've always liked my breasts, soft and pliable and really really sensitive.\" She massaged them both letting out a small gasp as she displayed what she liked. I went to sit up so I could join in but she shook her head and said, \"I've only got 45 minutes so let me play and I'll make sure it's worth it.\"\n\n\"Ok.\" I said letting her have her way and lay back down.\n\n\"Good, now here comes the good bit.\" So saying her hand grasped the base of my cock and raised it to a 90 degree angle. Giving it one brief stroke she smiled and then I watched her head descending, her lips parted and the tip of her tongue visible as she reached the head of my cock. Her tongue flickered out quickly licking pre cum from my cock and then her lips were parted and sliding down my shaft. The warmth and sensation were incredible but didn't last long as she came up slowly and took her mouth away. Looking at me again she said, \"When I was at school we used to giggle about the lipstick game.\" She broke off and plunged my cock in her mouth again. After a few teasing strokes she lifted off and continued, \"you were meant to leave a ring of lipstick around your boyfriends cock to show how deep you could get it.\" She smiled and took me again. I was gasping and thrusting upwards but she stopped again and smiled at me and showed me a lipstick ring halfway down my cock. \"The girls used to say only a real slut could get more than half in,\" she paused and smiled, \"but I practiced and I'm happy to say I'm a real fucking slut!\" She held my balls with one hand and I watched amazed as she slowly took my cock into her mouth going beyond her lipstick mark and I felt a tighter pressure on the head of my cock and then her nose was resting on my pubic bone. She moved up and down giving me deep throat for another few seconds before coming up for air. \n\n\"See.\" She smiled triumphantly. \n\n\"Oh god, that was fantastic.\" I gasped \"come up here so I can lick your pussy.\"\n\nShe grinned and crawled up the bed till I could grasp her hips. I pulled her up quickly so her thighs straddled my face and she rested her arms on the headboard. I was within inches of her pussy and could see the smooth hairless lips had separated allowing access to her clit between them. I held her tight bottom and pulled her forward onto my tongue and licked from her tight small entrance to her clit. She moaned and moved her pelvis thrusting herself onto my probing tongue. \n\n\"Oh god like that, I love it.\" She moaned again and said, \"I wish Henry would do that.\" With one hand I manoeuvred my thumb to her vaginal entrance and pushed in hard as I licked. \"Fuck, yes!\" She was obviously nearly there as I could feel her muscles tighten so I moved a finger to her tight muscled anus and pressed. She tensed and said \"What are you doing?\" As I penetrated her with my finger. \"Oh god, you're fucking my arse. Oh fuck!\" She tightened and relaxed her muscles as that put her over the edge and she came on my fingers and tongue. Her thighs clamped around my head as she gasped and moaned loudly and repeatedly. She slowly came down and as I slid my fingers out she flopped to one side on the bed. \n\nShe looked at me smiling weakly and said \"You can do that again any day you like.\" \n\n\"I'll make sure I do next time.\" I assured her. \n\nShe then sat up and said to my cock, \"I've been neglecting you.\" Moving her head forward she took my entire cock into her mouth and throat in one movement and stroked up and down. This caused me to drop my head to the pillow and groan with satisfaction and be completely unaware of my surroundings for the next few minutes. After some time had passed She lifted her head off my cock and scrambling around sat astride my thighs holding my cock. \"This big boy's going to get his reward now.\" She raised herself over my cock and pushed the head into her wet and ready pussy. Leaning back slightly so I could see myself being engulfed she said, \"oh I like that, you're big and thick, I love it.\" I was too, her tight muscles around my cock were grasping me and after the deep throat I knew I was near. \n\nI decided to take a more active role and in a quick movement I turned her onto her side then her back as I remained in her. Leaning my weight on my arms I thrust into her hard and was rewarded with a deep gasp and loud moan. Her thighs came up to my waist and her thrusts met mine. \"You're making me cum again,\" she gasped staring up at me. \"Please cum in me. Please do it! Now!\" So saying her head went back and she screamed as her entire body went rigid and her pussy spasmed on my cock. The pressure in my balls was unbearable and with a great grunt I thrust hard and came. Pulling back slightly I thrust again spurting more cum deep within her. I watched her face as we both came seeing the effects of her orgasm make her open her eyes wide as the shock of it hit her. She gradually relaxed and grinned up at me, \"I'm going to waddle when I see Henry later but it's worth it.\"\n\nI smiled back and rolled off her and onto my back staring at the ceiling as I came down from my release. Melanie cuddled into me affectionately lifting one thigh across mine, \"I need a shower, I've only got a few minutes to get ready so do you mind if I have it alone?\" She leant up over me and looked down at me then carried on, \"It's just if I have a shower with you I'll be late as I'd have to have you in me again.\"\n\n\"That's ok, have your shower and we can organise a longer meeting in the future.\" I replied. Anyway I wanted to watch her naked to add to my memory of her. She got up and I watched her taut fit body as she moved to the bathroom. A few seconds later I heard the shower start and was surprised as she ran to the bed and took my now soft cock in her mouth. She licked and sucked it all over starting a new erection then pulled away and my cock flopped onto my stomach. \n\nShe grinned at me again and said wickedly \"I always like to make sure I clean up after.\" She skipped away and headed back to the bathroom and disappeared inside locking the door behind her as I ran to join her.\n\n\"Fuck.\" I said gently with a grin and lay back on the bed. She was a tease but worth it. I realised I needed to sign her papers so got them from the table they and read through them. It was exactly as she'd said, in fact better than I thought so I signed on the dotted line. If her estimates were correct she could invest any cash in my accounts and make me more money than the inflation rate. Plus she had herself down as the only member of bank staff I would deal with. \n\nI was reclining on the bed resting when I heard the shower go off. A minute or two later Melanie walked back through into the bedroom naked. My cock immediately stiffened and she smiled contentedly at my obvious appreciation. \"Maybe a cold shower?\" she suggested as I grinned lecherously at her. \n\n\"A shower is necessary,\" I agreed as I watched her pull underwear from her bag and dressed in black panties and bra that revealed more than concealed. She pulled a black dress from the bag next which she slipped on ending the floor show. A few light touches of make up and she was ready to go out for the evening. I walked up behind her and ensured my erection didn't hit her dress cuddled her. \n\nShe turned and kissed me regretfully and said, \"Shame I can't stay but you'll be in touch?\" \n\n\"I will,\" I reassured her as she packed her other clothes and documents away then she headed for the door. I held it open for her and she kissed me as she walked by. I watched her walk down the corridor until I remembered I was naked with an erection and anyone could appear so rapidly went into the room closing the door behind me. A brief shower later I was more respectable and ready to face the world. Checking my phone I had a message from Jane asking if I'd be in later. I replied quickly that I would be, possibly in about an hour. I then headed to the hotel reception to drop in my key.\n\nI popped into a take away on my way back to Jane's and strapping the pizza box securely to the bike I rode there. A few minutes of sitting in front of the tv and eating my pizza was all that I had before Jane sent a message to ask if I was free. I replied quickly to say I was and she could come round if she wanted to. It wasn't long after that that she came through the door into my flat and sat beside me on the sofa. I'd made her a cup of tea and handed it to her. \n\nShe was dressed in a loose t shirt and trousers and looked a bit frazzled. \"You ok?\" I asked concerned about her appearance. \n\nShe looked up and smiled tiredly, \"I'm ok,\" she said then continued, \"I've just had a busy day at work and I haven't had as much sleep as usual.\" She took a sip of her tea, \"I'm not complaining though!\" She smiled broadly obviously remembering some of the highlights of the last few days. \n\n\"So if you're tired are planning on an early night?\"\n\nShe smiled mischievously and said \"Definitely, you're going away tomorrow so I thought we could get some time in bed early.\"\n\n\"So do you mean now?\" I asked with a smile.\n\n\"I do.\" She said, then continued \"Can we go next door though?\"\n\nI presumed that she wanted to excite Phil further so I agreed by nodding. She started to get up so I stopped her with a hand on her arm. \"I need to tell you something, you can never tell anyone else, understand?\"\n\nShe looked seriously at me and said \"Ok, whatever it is I can't tell anyone.\"\n\nI was pleased that my ability had a apparently permanent effect at this point. \"I'm moving out in the morning, you can never tell anyone I was here. You'll hear soon that I've had an accident and died. I won't have. I'll be in contact after the weekend but you cannot tell anyone, do you understand?\"\n\nShe looked solemnly at me then repeated my instructions back to me. As she looked concerned by all of this I said, \"Don't worry about me, that's an order.\" As I said it her face cleared and she was back to normal. \"We'll have to say the same to Phil as well.\" She nodded and smiled in agreement. \"Now the next order of business is for you to strip to your underwear.\" \n\nShe almost leapt up at that and pulled off her t-shirt and trousers leaving her in matching black, almost sheer, bra and pants. As she span to give me a good look at the full effect I realised it was a thong which gave amazing definition to her bottom. \"You like?\" She said teasingly. \"Phil's taken hundreds of pictures of me in my underwear and out of it that he wants to share with you.\"\n\n\"What about you, do you want to share them? I asked interested.\n\n\"With, you? Definitely. On the internet? Maybe, but I can't have my face shown.\" She said and walked towards her house. We went inside to find Phil in the kitchen and he nearly spat his tea out when we came in. I rapidly ran through the same restrictions that I had with Jane with him and also arranged that he'd take my limited worldly possessions to the marina for me in the morning. I also implanted the desire to exercise and eat healthily to ensure he was around to watch his wife have sex with others for a long time. \n\nBeckoning to Jane I took her hands and pulled her towards me. I cuddled up to her a swept my hands down to the round soft globes of her bottom. I kept my eyes open and looked at Phil as I kissed his almost naked wife and fondled her backside in front of him in his house. He was swallowing hard and I could see he was getting excited by us. Jane was too and her small hands were running over my chest. So that he got the best view of his wife's excitement I turned her round to face him and held her from behind. My hands running over her small body feeling her excitement build as I kissed her neck. I ran one hand into one cup of her bra to caress the breast and nipple in there then slowly, taking my time ran the other over her abdomen and under her thong and onto her bald pussy. I exaggerated the movements of my fingers so he could see the fabric move as I fingered her pussy. She pushed her pelvis forward and back in time with my touch. She moaned loudly and looking at her I realised she was keeping eye contact with Phil as she was played with. She chose that moment to say, \"You love this don't you Phil, watching your wife behaving like a slut.\" She moaned again for emphasis. I thought she might come then standing in the kitchen she had such a hair trigger but we were disturbed by a knock at the door.",
        "Phil exclaimed \"Bugger!\" Then looked embarrassed, \"I forgot Mark and Jenny are coming round to collect some sound equipment.\"\n\nI looked him and asked, \"Will they expect to come in and see Jane? Or will you be able to give them the kit and then they leave?\"\n\nI asked Phil but Jane answered with my finger still deep in her pussy, \"They usually come round and have a drink and a chat, they'll expect to see me too unfortunately. I'll go and get dressed.\" She said disappointedly. \n\n\"No, don't,\" I ordered, \"Phil, you answer the door and I'll come with you and we'll sort this out, just introduce me as a mate who's going to give a hand moving the kit. Jane you stay here.\" She looked at me as I gently withdrew my finger from her wet pussy, took hold of my hand and placed it on her lips to lick it clean. Phil almost choked as he saw this as he headed out of the kitchen. I rapidly followed as I intended to use my ability to get rid of Mark and Jenny as quickly as possible. Phil opened the door and greeted the people on the doorstep and invited them in. \n\nI stood almost blocking the hallway by the living room door so that I could greet them as they came in. As they reached me I smiled and Phil said, \"This is Simon, he's just popped in. He's a friend of Jane's at work. This is Mark, Jenny and their daughter Lucy.\" As he introduced us I made sure to shake their hands and was happy to feel the warm sensation in my hand as I did. The usual brief blank expression occurred too. I said hello to them all and we walked into the front room. \n\n\"So where's this equipment?\"I asked, \"and is it fairly heavy because I can give you a hand?\" \n\nPhil replied slightly nervously as he was well aware of his almost nude wife standing in the kitchen, \"It's all next door,\" he moved his head to indicate the other downstairs room. \"It's not heavy, just bulky and delicate.\"\n\nMark said \"Yeah, the car's outside so we can just load it in the boot.\"\n\nThis brief chat allowed me to have a look at the visitors, Mark was in his 40's and looked fairly fit either through his work or gym visits. Jenny, who I assumed was his wife from the wedding rings on both their fingers, was in her late thirties or early forties and about 5ft 6ish. She had blonde shoulder length hair and a nice slim figure and was pretty in a understated way, she'd taken her coat off to sit down and I could see was wearing a knee length blue dress. She had sat on the sofa next to her very pretty daughter who was about 19 with long red hair worn loose. Lucy was a few inches shorter than her mother and was wearing dark leggings and a smock type top. Again very loose clothes but she looked to have bigger boobs than her mother. No discernible make up to hide her light scattering of freckles on her face. \n\nI decided that they may need to stay for a while if possible. \"Shall we go and get this equipment loaded?\" I suggested and Mark, Phil and I headed next door. The sound equipment was pretty meaningless to me having never played music but looked complicated as does any equipment you're not familiar with. \"Ok so what's first?\" I asked and Phil indicated a black box with wires coming from it. I walked over to it and Mark came too, as we reached it I said to Mark, \"I need you to answer me fully and follow my instructions, understand?\" \n\nHe looked at me blankly and said \"Ok\"\n\n\"Are any of you expected anywhere after picking up this equipment?\" I asked. \n\nHe thought for a second and said \"No, we thought we might stay and have a glass of wine after picking up the gear like usual.\"\n\n\"Good\" I replied. \"You're going to see Jane undressed but you won't comment at anything she does. You'll do anything I or Jane asks and behave normally although you can respond to Jane. Ok?\"\n\nHe smiled and said \"yep, no problem.\" He turned and picked up the equipment with Phil. I left them to it and headed back to Jenny and Lucy in the front room. \n\nI walked in and they both looked up, \"Hi there, I've got some instructions for you. You will not notice anything odd about Jane or whatever she does and you will not be embarrassed by anything that happens. You'll answer all my questions fully and without concern. You'll obey any instructions I give you as well. Do you understand?\" They both looked at me and nodded so I knew I was prepared. \"Would you like a drink?\" I asked, \"Jane's in the kitchen just sorting something out.\"\n\nThey both smiled and Jenny looked at her daughter as she nodded she replied, \"Yes please, tell Jane can we have the usual.\"\n\n\"I'll let her know, I presume she knows what the usual is?\" I enquired\n\nBoth Jenny and Lucy nodded and Lucy said, \"definitely.\"\n\nSo I went to the kitchen to prepare the drinks with Jane. She was stood still in her black bra and thong but looked nervous. I rather liked that. \"It's ok all sorted, Phil and Mark are loading the kit so that won't take long, Jenny and Lucy are in the front room and they'd like 'the usual' whatever that is.\" \n\nShe looked at me aghast, \"They're staying, and you want me to get drinks like this?\" She swept her hands indicating her near nudity.\n\n\"Yep, that's what I want. Incidentally have any of your fantasies involved Mark?\" I figured I'd find out whether her inner life had used her friends as imaginative material. She nodded and smiled shyly in response.\n\nShe was walking around the kitchen, face bright red with the embarrassment of not being dressed in front of her friends but was preparing some drinks which looked like white wine spritzers and a few bottles of beer. Looking at me she said \"Would you prefer wine or beer?\"\n\n\"Beer please.\" I replied and took the proffered bottle from Jane. She gathered the prepared drinks and put them on a tray and headed to the door. I followed sipping my beer as we walked into the front room. As ordered the two women didn't react to how Jane was dressed although her facial blush remained prominent throughout. I sat on the arm of a chair and indicated that Jane should sit on the seat beside me. \n\nJenny and Lucy thanked Jane for their drinks and she sat on the chair beside me. They chatted about various people I'd never met and so I tuned out a little. I was waiting for Phil and Mark to return. Mark came through first and took a seat opposite Jane and when Phil walked in he sat beside him on the two seater sofa. He picked up his beer from the table as he walked through. As he turned to sit he saw Jane sitting in her underwear beside me and nearly choked on his mouthful of beer. \n\nMark slapped him on the back and laughed as Phil wiped his face and sat back into the chair. He could see his wife almost nude sitting in the room but no one else seemed to be bothered. Jenny asked, \"Are you ok Phil?\"\n\nPhil turned to look at her and replied coughing as he did so, \"Just went down the wrong way, I'm ok.\" He looked at me then Jane in puzzlement. I smiled back as at least I knew what was going on. However I rather suspected he'd be getting excited at what might be happening. Jane then realised she hadn't given Mark his drink and stood up and walked over, picked up his beer and handed it to him.\n\nJenny then surprised me utterly by looking over at Jane and asking, \"I love that bra, where did you get it from?\" After a second I decided it must be because I'd told her to behave as usual and she'd normally compliment Jane on her clothes, or in this case, lack of them.\n\nJane looked back, appearing far more confident now and said, \"I think it was an online shop, I'm not sure where though. I could find out for you though.\" \n\nIn a spirit of helpfulness I looked over at Jane's bra and noticed a label. \"Jane, there's a label on the back, I think there's a name on it, can you read it?\" I said to Mark.\n\nHe sat forward and looked for the label and it was fairly obvious he had an erection tenting his trousers as he did so. Jane noticed too and reaching behind herself unclipped the bra and handed it to him. \"Have a look and see if it's on there.\" She sat down on the arm of the chair with her breasts free almost in his eye-line.\n\n\"I can't find a name.\" He choked out turning the flimsy garment over in his hands and staring at Jane's boobs straight in front of him.\n\nJane then said \"isn't that one there?\" Leaning forward and touching her bra on his lap coincidentally brushing a boob over his face as she did. He jerked in surprise but didn't move. She leant in close and I could hear whispers but not what she said, then he was sucking her nipple closest to him with obvious relish as Jane's hand in his lap massaged his cock through his trousers. Phil was sitting there, a blissful expression on his face as he watched his wife's wanton behaviour. I figured I could leave her to it now so stood and walked to Jenny and Lucy.\n\n\"Come next door with me.\" I noticed Jenny seemed fascinated by her husband and Jane's foreplay so asked \"Unless you want to stay and watch for a minute?\" As I said that I noticed Jane had moved onto her knees between Marks thighs with her mouth descending to his cock. She'd been busy undoing his trousers whilst stroking him then.\n\nJenny looked at me and said \"It's ok, I just wanted to see that. She's not bad, I really never expected Jane to give blowjobs.\" \n\nI looked at her and said \"You'd be surprised what she does, is it turning you on?\" She had a lightly flushed face and was breathing faster than someone who'd just been sat on a chair should so I was certain of the response.\n\n\"God yes, watching Jane in that sheer bra and thong was doing it for me.\"\n\nI looked at Lucy who was standing quietly beside me and said \"And you?\"\n\nShe smiled shyly back and said \"It is, can we go somewhere else?\"\n\nI nodded and taking both their hands led them to my flat. Once inside we walked to the bedroom and I turned to Lucy and pulled her gently towards me. She looked up me expectantly as I leant forward to put one arm around her resting my hand on what felt a very pert, tight bum. I kissed her and she responded pushing her tongue in my mouth and holding her arms around my neck. With my free arm I beckoned Jenny over and held her around the waist. She whispered to Lucy, \"Better leave some of him for me.\" She put her hand on my head and turned my face to hers and kissed me hard. \n\nBoth of them wrapped a leg around me and I was in danger of falling over. I looked at Jenny and said, \"Sit on the bed a minute.\" She pouted but did as she was asked and sat on the edge of the bed looking at her daughter running her hands over me and kissing my neck. I grasped Lucy's top by its hem and lifted it up over her head and tossed it on a chair. Kissing my way down from her neck I pushed my face between her large lace covered breasts. She moaned as I brought one hand up to squeeze lightly one fabric covered breast and the other behind to start undoing the bra clasp. A second of fiddling with the catch and her bra was free. Moving back from her I watched as she slipped the straps from her shoulders and released her breasts. They were larger than I prefer but naked breasts are naked breasts, I certainly wasn't complaining. They rested on her chest and I stared at her small pink nipples. Her nipples were such a light pink in colour it was difficult to see where they started but the centre nub was bright pink and hard with arousal. \n\nI pulled her into me as she lifted my t shirt up to push her bare breasts onto my chest. My t shirt came off and I moved my head down to suck her nipples as my hands went into her leggings pushing them down over her hips. She moved back to continue removing her leggings leaving her standing in a pair of white lace shorts. I stood admiring the view which had my cock rigid and uncomfortable in my trousers. Her breathing was coming in short gasps of arousal and she took the opportunity to say, \"Don't stop, please\" \n\nI looked at her and said, \"I won't, don't worry but your mother needs some attention now, sit down a moment.\" It was her turn to pout at me but she sat on the edge of the bed. Her skin smooth and unblemished with her youth. She sat and leaned back, smiling wickedly at me she made sure my attention was on her as she slowly opened her legs wide exposing her lace shorts to my view. It was my turn to gasp and I could feel my heart rate rise and my cock twitch. \n\nJenny attracted my gaze by the simple expedient of grasping my prominent erection through my trousers and clenching her hand around it. Her other hand undid the buttons at my waist and pulled down the zip, all the time kissing the back of my neck and shoulders. She only released my cock when she needed both hands to push my jeans down. I kicked them off my legs leaving me standing in my shorts. I could feel her breasts pressed into my back as her arm returned to my shorts and slipped under the waistband. Her hand grasped the shaft of my cock and I felt her groan and thrust her hips into me as she stroked me slowly. \"God that feels good and thick,\" she grunted into my ear as she stroked me. \n\nLucy watched with her mouth open as her mother stroked my cock eventually having to speak, \"Mum, let him undress you so we can get going properly!\"\n\n\"I will Lucy, I will,\" Jenny said \"but this is my first new cock in over 20 years and I want to savour it\" so saying she pulled down my shorts and got on her knees in front of me. She put one hand on the base of my cock and pointed it at her face. Licking her lips she moved forward and her hot mouth was wrapped around my cock. Her tongue lapping around the head of my cock as I slowly slipped in her mouth. She lifted her other hand and cupped my balls and I was in heaven. I made sure I kept control of myself as I groaned my pleasure. I looked at Lucy and indicated she should join in so she got to her knees beside her mother and moved her hand to my cock too.\n\nI moved my hips back slipping out of Jenny's mouth and Lucy immediately wrapped her lips around my cock sighing as she did so. I took Jenny's hands and pulled her to her feet. Looking at her I said \"Don't worry, you'll both be satisfied soon,\" and kissed her. I unzipped the back of her dress and she moved away pulling the dress off. She stepped out of it revealing a slim upper body only slightly thicker at the waist than her daughters. Her dark coloured bras rapidly joined her dress on the floor and she pulled her tights and pants off in one. \n\nStanding up she put her hands on her hips and striking a pose said \"Not bad for 41!\" I could only nod in agreement as her daughter continued to suck hard on my cock. With a slight moan of disappointment I pulled Lucy off and stood her up so that I could walk to the bed. Looking back I could see Lucy had the bigger boobs but Jenny's weren't bad at all with only a slight sag. I could see Jenny had a neatly trimmed pussy with fine dark hair that emphasised her pussy lips. \n\n\"Come over here\" I said to them both and they lay either side of me and cuddled in both of them putting hand round my cock. I kissed both of them hard with my hands on their backsides. Pushing down Lucy's pants I revealed a completely naked pussy. Jenny looked over and said, \"I didn't know you did that, looks nice on you.\"\n\n\"I agree, come up here so I can have a closer look.\" I told Lucy and she obliged by shuffling up the bed into a semi sitting position resting on the head board. Turning on to my elbows I kissed my way from her hip into the soft skin of her groin and thence pushing my tongue between her pussy lips. She gasped loudly and moaned pushing her wet pussy into my face. \n\n\"Oh my christ,\" she mumbled and moaned more as my tongue licked and stroked her clit moving a hand I separated her lips and penetrated her sopping wet pussy with one finger. I suddenly grunted into her pussy as I felt her mother start sucking my cock again as I licked her daughter. It was almost too intense but I was determined to make both of them cum before I did. I slid another finger into her tight pussy and licked her clit alternating between swirling it around and gently sucking timing it to her groans and pelvic thrusts. It only took a minute of licking before I heard her groan loudly then buck her hips forward gasping incoherently as her pussy clamped hard and rhythmically on my fingers. As she came down from her orgasm I pulled my face away from her open pussy lips and reached for Jenny. I turned myself remaining in her mouth all the time till I came to face her lightly trimmed pussy. I could she her clit prominently as her lips had already separated with her arousal. Her thighs glistened with her lubrications so I wasted no time in getting my tongue on her clit. I was rewarded with a loud moan that I felt through my cock rather than heard. I was able to slide three fingers deep in her pussy as I licked hard at her clit. Reaching with a free hand I gently squeezed a breast and tweaked her nipple and suddenly she was there. My cock came free of her mouth as she screamed into the bed and thrashed on my tongue. Strong muscular contractions were visible to her stomach as she orgasmed hard. I continued to lick and push my fingers in deeply as she shuddered until eventually she was still. \n\nLifting my head I saw her daughter watching and noticing my gaze she just said \"wow\" and shook her head in admiration. I smiled and leaving her mother to recover I kissed my way up Lucy's body, sucking on her nipples and making her gasp as I did. Eventually I reached her mouth and kissed her deeply. She slid down underneath me till my cock was touching her wet pussy. Looking up at me she said quietly , \"You're much bigger than I'm used to, please take it slow.\" She reached down between us and took hold of my cock running it up and down her wet slit lubricating me further. Looking up at me she placed the head of my cock at her entrance and pulled me forward. She was right it was a tight fit so I pressed slowly forward and my cock head slid in. As it did her mouth opened and she gasped \"Oh!\" Then moaned, her eyes widened and she stared at me as I slid in half way. She moaned \"oh yes! Oh yes!\" and closed her eyes. Taking that as a request I pulled back and then slid in further. \"Oh god, you're not all in yet are you?\" She half moaned. I shook my head and pulled back again. \"Fuck that's big but good, much better than my boyfriend's.\" She then gasped and moaned as I pushed all the way in her tight pussy and was incoherent after I started to stroke deeply into her. I knew I wouldn't be long after all the stimulation I'd had so I gave it all I had as her legs wrapped my waist and my balls slapped her backside.\n\nSuddenly I was there and I felt my balls contract and I groaned loudly above her. Her eyes snapped open and she stared at me and she grinned, said \"fuck I'm making you cum!\" Then she wailed as her own orgasm took her. Her muscular pussy gripping me tightly almost sucking my cum deep into her. I felt like I'd never cum again as I rested above her my cock bathed in her juices and my cum. It seemed to take forever for her to recover but her eyes gradually opened and she kissed me hard on the mouth. Dropping back on the bed away from me she said \"You can do that again anytime.\"\n\n\"Not now he can't\" I heard Jenny say from beside us and I turned and smiled at her. \n\n\"Your turn now is it?\" I asked. \n\n\"Well it will be when you're ready but I think my daughter may have ruined you for a while.\" She said in a wistful tone. \n\n\"You may be surprised then\" I said rolling off Lucy with my cock still rigid and flagpole like. \n\n\"Oh my god, if that's some new viagra you're on can you slip Mark some?\" She asked reaching her hand out to my cock. She moved till she was sat astride me and had my cock pressed underneath her open pussy. She rocked herself up and down the length of my cock adding her vaginal lubrication to my already well lubricated cock. As I reached up to play with her soft c cup sized breasts with delicate pink nipples like her daughter she raised herself up and, placing my cock head at the entrance to her pussy slid down in one movement. Grunting in satisfaction as our pelvises met. She obviously wasn't as tight as her daughter and had had at least one child but she was still gripping my cock firmly with her vaginal muscles. Her face which had been slightly tense as she pushed onto to me relaxed and her eyes opened. \"Oh that's very very nice, I can really feel you in me.\" She smiled and said \"Now I'm going to cum on your lovely cock.\" ",
        "So saying she leaned forward and grasped both of my hands. Holding them tightly slightly above my head she started rocking backwards and forwards grinding her pelvis on my giving her clit the maximum sensation. There wasn't much thrusting but my cock was being massaged by her pussy so I wasn't complaining. She was breathing in short gasps and moans and said breathily \"Oh god you're the perfect fit,\" then a few breaths later \"I won't last long.\" Her eyes were closed and her breathing was ragged with frequent moans. \n\nI was amazed to discover her rocking motion and gasps of appreciation were having the same effect on my cock. She was bringing me close to orgasm again in just a few minutes after my last one. She stared down and me and moaned and spasmed on my cock as she came. Her pussy clamped tight around me and this extra sensation pushed me over the edge again. I started to pump cum deep into her pussy and it seemed to go on forever. She collapsed down onto my chest as the orgasm shook her and moaned into my neck. I lay beneath her and gave a couple of final thrusts before I was still. \n\nFrom beside us came movement as Lucy raised herself on her elbow and looked at us both. \"You look like you're the cat whose had the cream mum.\" She smiled and flopped back onto the bed. \"Mind you I've had the cream too so I can hardly talk.\"\n\nJenny rolled off me and curled up to me \"I think that's me done for the night, I better find Mark and drag him home.\" She raised herself up and looked around the bedroom for her clothes. \"Come on Lucy,\" she said encouragingly, \"we need to get home soon as Neil will be coming round after work.\"\n\nLucy groaned in denial, \"Bugger, I'd forgotten he was coming round.\" She looked at her watch and said \"I've enough time for a shower at home but I might walk funny.\" Rising quickly she searched for her clothes dressing quickly. Both she and her mother were soon dressed and standing at the end of the bed. They looked at each other then got onto the bed and both kissed me. Lucy said, \"I'm sorry I have to go but please give me a call.\" She then jumped up and headed to the door waving cheerily as she left. \n\nI turned to Jenny and she said, \"That goes for me too by the way.\" She kissed me hard and headed for the door. With that I was alone and well satisfied with my day. As I drifted off I reflected on my my plans for the weekend. I would be leaving in the morning and not returning but I did have some ideas for future fun meetings."
    ],
    "authorname": "Podimore",
    "tags": [
        "mind control",
        "threesome",
        "group sex",
        "threeway",
        "group"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/touch-pt-04"
}