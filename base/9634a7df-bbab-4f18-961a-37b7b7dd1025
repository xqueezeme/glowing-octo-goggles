{
    "title": "A Tale of Twin Tails Ch. 05",
    "pages": [
        "*** We pick up the morning after Chapter 4 ends. ***\n\nBrent woke up feeling well rested. Even better, he had absolutely no regrets about last night. His first time kissing Katie had been so incredible. Not to mention that he had made her cum twice without even putting his dick in her. He admitted to himself that the whirring vibrator in her pussy had played some role, but he was still pleased with how far he had gotten so quickly with his formerly innocent daughter. Plus the little vibrating egg had been his idea. He rolled out of bed feeling like a kid again. His morning wood still at full attention as memories of Becky's tight pussy wrapping around his dick also played through his head. His own daughters letting him do whatever he wanted was so dirty and kinky that he thought he would stay hard for days just thinking about it. Brent marveled at how incredible his daughters were, each so sexy in their own way. While he brushed his teeth, he decided that he would not be waiting for Kat to leave town to fuck Katie or to have Becky again. He might even just pull them out of class one day if that was what it took to get them alone. \n\nIn the privacy of his bathroom, Brent checked his burner. It looked like Becky had texted him late last night. He kept the phone locked and on silent whenever practical which is why the texts hadn't awakened him. So far, Kat had not noticed the extra phone. He had intentionally picked a burner that looked pretty close to his work cell and he had put it in a matching case. As long as she didn't see all three at the same time, she probably wouldn't ever notice. \n\nBrent smiled as he read through the series of new messages:\n\n- OMG dad! Can't stop thinking about you.\n\n- Long talk with sis after you guys were asleep. \n\n- Give you details later, but she loved what you were doing. Sad that she woke mom up. She wants that D.\n\n- BTW she really wants to FUCK, not make love. I still liked my \"punishment\" though. (You know she still doesn't know U and I have fucked. Kinda want to tell her I had you first.)\n\n- Told her I was jealous and want a turn. She said twins share everything!\n\n- I will kiss you in front of her when I get a chance. See how she reacts.\n\n- She's so horny from our talk. Wanted me to fuck her, but told her she had to go to bed wet for waking mom.\n\n- GN \n\nBrent forced his raging boner down as he finished in the bathroom. When he walked into the kitchen, everyone else was already in there chatting away. Kat and the girls had all decided to go for a jog together on this bright Sunday morning. They were all dressed in t-shirts and stretchy yoga pants. Kat was sipping come coffee and the girls were sharing a banana before they headed out. Kat turned to pour a cup for Brent. Once her back was turned, Becky slid the rest of the banana into her mouth and gave it a brief blow job before pulling it out and biting a chunk out of it. Brent smiled and did a mock wince while Katie giggled.\n\nKat handed Brent his mug and said, \"What's so funny?\" \n\nBrent answered for the girls, \"Your daughters have a case of the sillies this morning. How long will you guys be gone?\"\n\n\"About an hour tops,\" Kat said.\n\n\"Cool. I was going to make a big breakfast, but we'll call it brunch instead. I'll have it ready by the time you get back. Have fun getting sweaty together ladies.\" \n\nBrent walked into the living room to watch some news. Right away he caught the scent of old sex lingering in the air, mainly coming from his easy chair. He heard the girls talking and laughing together while he finished his coffee to the drone of the morning anchorman. When they left a few minutes later, Brent grabbed some paper towels, cleanser, and air freshener. He wiped down his cushy leather chair and the couch. He scrubbed the spot on the carpet where the rabbit vibrator had landed. Lastly, he gave the room a good spritz of air freshener. \n\nBrent gave the room another once over before calling the job complete. He bent down to sniff his chair cushion, resting his hand on the floor. It smelled fine. His fingers brushed against some paper and plastic under the chair. He pulled the debris out. It was a pair of his wife's tanning bed eye covers, an ink pen, a wadded up tissue, and a scrap of some kind of wrapper. Brent grabbed it all and tossed it on the coffee table. He left the pen and eye protection and gathered the garbage to throw it away in the kitchen.\n\nBrent lifted the lid of the kitchen trash can and tossed the tissue in. He glanced at the wrapper fragment trying to figure out what it was. He wasn't suspicious, just naturally curious about the odds and ends that found their way into the corners of people's lives. The wrapper looked like the top portion of something that would have been flat and square. It was blue plastic wrap with lettering on it. He squinted at the tiny letters. \"TROJ HER PLEA\". The word fragments were torn off, but he instantly knew what he was looking at: the top chunk of a condom wrapper. Brent's heart started doing double time in his chest. \n\n\"Don't jump to conclusions,\" he said to himself. He and his wife had not used condoms in years since she preferred the natural feel of his cock. She used birth control pills. It was possible Becky had a lover over, or even Katie, who had said she and Tiny Tommy had made love a time or two. A hint of jealousy rose up inside of Brent at the thought of his daughters fucking anyone but him. He knew it was silly. They would have to grow up and move out, having lives of their own at some point. Wouldn't they? \n\nBrent shook his head, bringing his mind back to the matter at hand. He realized that he didn't need to speculate about the condom. None of the stuff he had pulled out from under the chair had been dusty or old feeling. Plus, he or one of the girls vacuumed every week, usually moving everything except the big heavy couch in the process. If this stuff had been dropped recently, his cameras should have caught it. \n\nUsing his laptop in his office, Brent pulled up the footage of the living room from his private server. He began playing the footage in reverse at ten times speed. Too angry to be distracted, he skipped over last night's lap dancing entirely. The video flashed to black every once in a while as the cameras went dark whenever there was no one in the room. Luckily for him, that was most of the previous week's footage. He and Kat would have been at work and the girls at school all day. The room was totally empty all night. So that left just a few hours of footage each day to go over at high speed. Flickers of movement as people zipped in and out of frame danced before his eyes between the black pauses. \n\nFinally he saw something from about three days ago that caught his attention. Kat zipped into the screen in reverse, paused at his chair for a flash, dropped down and back up again, before zipping back out of frame. Brent played the scene at regular speed. Kat was simply walking through the room in a hurry and dropped her purse. She bent down and brushed what had fallen out back into it. Apparently in her rush, she just scooped it up and walked out of the house without double checking. \n\nBrent imagined the scenario playing out in his mind. His wife was fucking someone and insisted they use a condom. Wherever they were when they did the deed, either a chunk of wrapper fell into her purse when they tore it open, or she saved the wrapper in her purse to throw away later but the top part had gotten left behind unnoticed. Whatever the circumstances, the fact was that his wife had a used condom wrapper in her purse. My wife is FUCKING CHEATING, his mind screamed at him. \n\n\"FUCK!\" Brent finally yelled aloud at his screen. \n\nHer coldness in bed now made perfect sense. Somebody was feeding her their dick. The question was who. His wife was a pharmaceutical rep, so she had a lot of face time with doctors, nurses, and other professional pill pushers. No one in particular came to mind, but all of her trips out of town were starting to make more sense. Fuming, Brent picked up his phone and called a private eye friend that he used from time to time when his own resources weren't enough to track down leads from his security business. \n\n\"Hey Rob. It's Brent Johnson. Sorry to call you on a Sunday, but I have a case I need someone to jump on.\"\n\n\"No problem Brent. I'm always glad for some business. What's up?\"\n\n\"Can you hook me up with one of your P.I.s? I need someone who is good at surveillance of a live target mostly. Could be some phone record digging and whatnot. There might be travel involved, but you know I'll cover the charges. I need someone discreet and who can get on the case in the next day or so.\"\n\n\"Can do pal. I'll get Steve Richards to give you a call, tomorrow at the latest.\"\n\nBrent sighed, \"Thanks Rob. You're a lifesaver. Don't bill my business account. I'll get up with you to settle up at the end if that's cool.\"\n\n\"I know you're good for it. Later.\" \n\nBrent ended the call and went to the kitchen to get started on brunch. He was pissed off, but tempered his anger with the knowledge that he had been cheating too. He got angrier again when the other side of his brain reminded him that he was only cheating because she had shut him down sexually for so long. He furiously whipped a bowl of eggs while mumbling \"fuck\" over and over again. He let out a deep breath as his darker side reminded him: Don't get mad. Just get even.\n\nBrent laid a bunch of bacon in the pan. \"Well, I have been pretty lucky with blackmail lately,\" he said to the sizzling meat. It spit and popped unnoticed beneath his gaze while he ran through several scenarios, each dirtier than the last. Finally, coming back to reality, Brent said, \"Yeah. Yeah, maybe there is a silver lining after all.\"\n\nBrent had brunch ready when the girls walked in. His demeanor was that of a man without a care in the world. In truth, his mood had brightened significantly. The more he thought about blackmailing his wife, the more he liked it. He wouldn't be doing any actual blackmailing himself, but it would be right up Becky's alley. Becky was a natural deviant, so if she couldn't manipulate Kat, no one could. Brent pictured it in his mind: Daughter catches mom cheating on dad. Daughter takes control of mommy. Mommy either submits or is exposed and gets the fuck out. Wonderful, Brent thought as he remembered what Becky had done to Kat last night. Kat had never shown any lesbian tendencies whatsoever, so Becky's ministrations to her mom were going to be especially fun to watch. Brent munched his bacon and smiled affectionately at his wife, thinking that she would be wide awake for it this time. \n\nKatie broke into his thoughts by asking, \"Daddy, can Becky and I borrow the car to go shopping later?\"\n\nBrent smiled at his daughters and said, \"Sure girls, as soon as you get all of your homework done.\"\n\n\"Mine's been done dad, but Becky hasn't finished hers.\"\n\n\"Well, I guess you better help her then or you two will be trapped here with me all day. What do you have left to do Becky?\"\n\nKatie pouted at having to help Becky yet again, while Becky thought for a moment and then grinned suspiciously at her dad. \"Oh I just have some math, but Katie and I have to practice for a presentation we have to give soon.\"\n\nKatie started to say, \"What presentation?\", but after a subtle kick from Becky, she said, \"Oh yeah, I forgot.\" \n\nBy the way she looked though, it was obvious that Katie had no idea what Becky was talking about. Becky reached across the table for some salt and discretely cupped Katie's breast at the same time. An oblivious Kat never looked up from her phone while she absentmindedly forked food into her mouth.\n\n\"Oh yeah,\" Katie said again a little more softly. \n\n...\n\nAfter everyone had eaten and then showered, the Johnsons did their own thing. The girls went to their room to study while Kat lounged around in the bedroom playing on her phone and watching TV. Brent mainly puttered around on his office. Becky was texting him throughout the day with suggestive texts, and dirty jokes. She texted him a few pics she had taken from last night including a particularly great shot of Katie straddling him, locked in a deep kiss, while Brent squeezed her ass. A little while later, she followed up:\n\n- So, I made Katie do my math with the rabbit in her pussy. She didn't complain.\n\n- Be nice to your sister.\n\n- Oh it was very nice. We've been working on our presentation for you since then.\n\n- Oh yeah? What is it?\n\n- It has been tough for Katie but she is a quick learner. Much progress. You will love it.\n\n- Hint?\n\n- Well, it will keep her quiet when we need her to be...\n\nBrent's phone lit up with a picture text from Becky. The shot was from Becky's POV looking down at her own crotch. She was wearing her strap-on, standing in the girls' bathroom. Katie was kneeling on the tile floor at Becky's feet with her face upturned to the camera. There were tears in her eyes, but Katie did not look sad. Brent guessed that the tears were probably from the strain. Katie's jaw was wide open. Her lips were wrapped tightly around Becky's dildo, which was stuffed almost to the base down Katie's throat. \n\n\"Holy shit,\" Brent muttered from behind his desk. Katie had to have at least seven inches of rubber dick in her mouth. How in the hell had Becky taught Katie to deep throat in just a couple of hours? My daughter is a miracle worker, thought Brent. Another text came in:\n\n- Who's hornier than two teenage girls who have been making out all day?\n\n- Who?\n\n- Their daddy! ;) How blue are those balls getting big guy? Too bad there's nothing you can do about it right now.\n\n- You're going to get it you know.\n\n- Like I got it last night? Counting on it!\n\nBrent's work cell rang, drawing him away from sexting his daughter. He walked around his desk and closed his office door. While he settled back down, he decided he would have to get Katie a burner now too and maybe even clue her in to at least some of what he and Becky had been up to. Becky was dying to make Katie jealous and Brent didn't mind playing one against the other to get his dick deeper into both of them. Business before pleasure he thought, and thumbed open the connection on the phone.\n\n\"High and Tight Security. This is Brent.\"\n\n\"Hey Brent. This is Steve Richards. Rob told me you might have some work to send our way.\"\n\n\"Yes indeed. Can you meet me in the morning to go over it about nine?\"\n\n\"Sure, but if you want to give me some details, I can get started on the preliminaries right now. I'm pretty wide open at the moment.\"\n\n\"OK. I assume all of this is confidential from this point on?\"\n\n\"You know us. We pride ourselves on discretion and confidentiality. Consider yourself on the clock.\"\n\nBrent lowered his voice to almost a whisper, \"Fine. The target is my wife, Katrina Johnson and I think she's fucking around.\"\n\nBrent quietly filled Steve in on everything he knew so far, which wasn't much. He provided Kat's cell numbers, rough schedule, and vehicle description before hanging up. \n\nBrent followed up on a few other things from work while he sat at his desk, really just killing time for no good reason. Becky had stopped texting him after their last exchange. He was about to pull up the video of their room, when he heard Kat yelling something to the girls from the other side of the house followed by the clatter of her pumps coming through the kitchen toward his office. She came in without knocking.\n\n\"Hey Brent, I'm heading out to the store for a little bit. Need anything?\"\n\nKat was dressed in a black knee length skirt, button up pale yellow sleeveless blouse, and matching yellow pumps. She had the infamous condom purse clutched under her arm. Brent wondered if there was a fresh one in there. \n\nInstead he said, \"You're dressed a little nice for groceries aren't you?\"\n\n\"Well, I was going to meet a couple of the girls for a drink first if that's OK. I won't be too long. Home before dinner. I can pick something up if you want?\"\n\n\"Groceries and take out? My we're decadent.\" Brent smiled, even though he was now questioning and loathing every suggestion his wife made just on principle.\n\n\"Either way Brent. I don't care. I was just trying to be nice.\"\n\n\"It's fine honey. Go have fun, and you pick dinner. I don't need anything from the store except enough stuff for lunch this week. Just the usual.\" Then he decided to test the waters. \"I can come with you if you like. Who we having drinks with?\"\n\n\"Oh no big boy. This is ladies only. Just some girls from one of the offices I visited last week. I'm trying to close a deal.\"\n\nSure you are, Brent thought. To his wife he said, \"Have fun. Me and the girls will keep busy. They were telling me about some presentation they've been practicing all day. Maybe I'll have them run through it with me.\"\n\n\"Whatever babe. Later.\"\n\nWhile they spoke, Brent texted Becky to get her mom's attention before she left and to keep her busy for a couple of minutes. Luckily Becky must have had her phone handy because she responded right away with a thumbs up emoji. Brent heard her yelling for her mom almost immediately.\n\nBrent called Steve back as he hustled through the house and out the front door. \n\n\"Steve, it's Brent. My wife is heading out unexpectedly and is dressed up a bit. Little suspicious. Any chance you can try to tail her like right now?\"\n\n\"Sure, but I'm not anywhere close to you. Be real tough to pick her up,\" Steve responded.\n\n\"Listen. I gotta hang up but I'll call you back on a different line in five. We'll use my phone to track her.\"\n\n\"Good idea. OK call me back. I'm rolling out as soon as I load some gear.\"\n\nBrent ended the call and then set his work phone to silent. He turned on his phone's GPS, opened his wife's car door, and stuffed the phone under the back seat, making sure it wouldn't slide around. He closed the door and ran back inside. He pretended to be walking into the kitchen for a snack as his wife walked past him out the door without another word.\n\nBrent heard the girls giggling quietly from down the hall before he turned back the other way to his office. He fired up his laptop and ran the \"Find My Phone\" application. Once he saw his phone's location on the screen, he called Steve back on his personal cell. Brent updated the app every few minutes while Steve ran an intercept course to get himself close to her position. After about ten minutes, Katie appeared at his door.\n\n\"Daddy? Will you come to my room and help me with my homework?\" \n\nKatie's question sounded innocent enough, but she stepped through the door wearing a tight fitting white button up shirt with the top three buttons undone. Her breasts were pushed together, creating a perfect cleavage line that peaked out of the open top. She wore a black pleated skirt that only went down to mid thigh. It was tight at her slim waist, but flowed loosely around her toned thighs. Her legs were otherwise bare except for a pair of white ankle socks.\n\nBrent felt his jaw click shut once he realized it had sagged open. He partially covered the phone with one hand and said in his most professional voice, \"Katie, I'm on a business call. I will be back to help you as soon as I get done.\"\n\nKatie pouted her lower lip. \"OK Daddy, but hurry up. Becky needs help too.\"\n\nShe turned to walk away, then paused. Looking back over her shoulder, she brought a finger to her lip before letting it trail down her body to her hip. \n\n\"Daddy, we need to be done before mommy gets home. She'll be mad if she catches us still...doing it.\" Her hand grasped her skirt and lifted it slightly as she spoke her last words. She let the material fall back into place before anything was revealed and walked away. \n\nBack to the phone Brent said, \"Hey Steve, can I just give you my log in information and you pick up the trail from there. My daughters are hounding me to help them with some homework.\"",
        "\"Yeah, not a problem. Text it to me. I'm driving now, but I'll get pulled over and pull it up. I have my full set up in the car.\" Steve sighed into the phone. \"Hey Brent. It sounds like you're a great dad. I'm sorry that your wife is doing this to you. Maybe there's nothing wrong though. Sometimes these things are just a misunderstanding. Go take care of your daughters and I'll get back to you if I find anything.\"\n\n\"Oh I'll take care of them,\" Brent said after he hung up.\n\nHe texted his log in details to Steve. He would change his password as soon as he dug his phone back out of his wife's car. He tucked his personal cellphone and burner into his already bulging pants and locked the front door on his way to his daughters' bedroom. \n\n...\n\nBrent knocked on his girls' door and pushed it open as he stepped in. Katie was dressed as he had seen her a few moments ago. She was lying on her stomach across her bed with her head facing toward the door. She swished her feet back and forth in the air while she looked at something on her phone. Her cleavage beckoned Brent to come closer. \n\nBecky was seated beside her sister, dressed as a much sluttier version of her twin. She had braided her hair into two equal strands which hung loosely behind her head. Her shirt, identical to her sister's, was entirely unbuttoned and only loosely tied at her waist to hold it closed. There was no sign of a bra underneath. She wore a tight fitting miniskirt that barely covered her ass. Her bare pussy lips were faintly visible between her creamy thighs. Sheer nylon stockings ended a few inches above her knees. \n\nBecky was leaning over Katie's back, looking at the phone with her. Becky pointed at something on the phone and both girls nodded studiously. Becky's other hand rested on Katie's back. In it, she was holding a wooden 12 inch ruler. Becky casually slid the ruler up and down Katie's bottom and thighs. Becky looked up in mock surprise as Brent walked in.\n\n\"Oh hi daddy. Is mom gone?\" Becky asked as she stood up and walked toward Brent. \n\n\"Yes, she went to get groceries. Might be gone a while.\" His voice was a little thick when he spoke.\n\n\"Good. We were just studying together,\" said Becky, while wrapping her arms around Brent's neck. She stood on her tiptoes and planted a deep french kiss on and in Brent's mouth. She turned their bodies together to give Katie a good look of their profile.\n\n\"Wow, I needed that daddy,\" Becky breathed when she broke their kiss and turned to walk back to the bed. She studied Kate's face, seeing a hint of jealousy there, but mainly just naked desire. She resumed her place next to her sister. Brent had followed her to the bed and now stood in front of his daughters as they peered up at him. \n\n\"Did you guys need help studying? You both look lovely by the way.\" \n\nBecky and Katie looked back down at Katie's phone. Katie was scrolling through something and then Becky reached over and clicked on the screen, saying to Katie, \"Take a look at that one for a minute. Do you think you're ready to try that?\" \n\nKatie nodded her head. Becky tapped her sister's bottom a few times with her ruler.\n\n\"Good girl.\" \n\nTo Brent she said, \"Well dad, after last night you obviously know that Katie has been wanting to, uh, get romantic with you, I guess you could say.\" She rubbed Katie's ass with the ruler as she continued, \"And to be honest, I told Katie that you had mentioned to me that you have been interested in her in that same way...and that you wanted me too.\"\n\n\"What do you think about that Katie?\" Brent asked.\n\nShe looked up at him with her big doe eyes. \"Oh daddy. I don't exactly think it's right, but I don't want to stop either. I kind of like that it's so dirty. I, um, really wanted to do it all the way last night. I'm really sorry I couldn't keep quiet.\" \n\n\"It's OK baby. This is all pretty new for you. I remember what it was like when I was just learning what to do. Being with you last night made me feel like I was a teenager again myself. It was really incredible.\"\n\n\"Thank you daddy. I really liked it too. Plus Becky has been helping me learn to keep quiet today.\"\n\nBecky said, \"Yeah. She stayed so quiet that I almost let her cum once, but decided she needed to wait for you daddy.\"\n\nBrent reached down and caressed Katie's cheek and said, \"Well, that was nice of her, but there's no one in the house right now except us.\" \n\n\"Oh,\" Katie said with a lustful sigh.\n\nBrent realized that Katie probably didn't know that he had seen her and Becky fucking each other, so he said, \"Katie, you said Becky was helping you today. What were you guys doing?\"\n\nKatie looked slightly embarrassed. Blushing lightly, she said, \"We uh...we have uh..\"\n\nBecky's ruler snapped against Katie's ass, making her jump. \"Tell him Katie. Tell him what we have been doing over the last few days.\" \n\n\"We have been kissing and stuff daddy,\" she said shyly.\n\nSNAP. Another clap of the ruler made Katie yelp. \"Katie, tell him what stuff.\"\n\n\"Daddy...Becky and I have been practicing with each other, pretending one of us is you mostly.\" Katie looked over at Becky who nodded for her to continue and added a light tap of her ruler. \"Becky has been, um. She has a dildo and some other stuff, and she has, um, been fucking me, like every chance she gets...and I really like it. Is that OK daddy?\" \n\nBrent smiled and nodded. \"Of course it is pumpkin. In fact the thought of you two kissing and fucking really turns me on. I hope you let me watch you guys sometime.\" He paused and then added, \"Like I said, there's nobody home right now.\"\n\nBecky reached over with the hand that wasn't tapping the ruler against Katie's ass and took Brent's hand in her own. She drew his gaze by shifting slightly forward on the bed, her knee touching his.\n\nStill holding his eyes on hers, she said, \"Oh I think we can handle that but first, Katie needs your help dad. Besides practicing on each other, we have been watching some videos to learn some new things. I have tried to teach her with some visual aids, but we really need the real thing.\" \n\nBecky let go of his hand and rested it on Brent's bulging crotch. She gently smacked Katie's ass with her ruler. In response, Katie dipped her phone to let Brent see that she had been watching a video of a girl deep throating a man's cock. The volume was muted. Kate looked up at her dad before speaking.\n\n\"Yeah daddy, I don't have any experience and I just want you to like what I do. I want to do a good job for you daddy. I want you to love it. To love me.\" She looked over at her twin sister. \"To love us,\" she added.\n\nBrent knelt down on the floor, bringing his face even with Kate's. \"I do love you pumpkin. I love both you so much.\" He took the phone from Kate's hand and set it on her pillow, the girl in the video still slurping away. He leaned forward and planted a long deep kiss on Katie's soft lips. Katie opened her mouth to let her dad's tongue glide inside to mingle with her own. She cooed into his mouth while Brent caressed her face and neck.\n\n\"My turn,\" Becky said as she grabbed a handful of Katie's hair and pulled her from her dad's mouth. Brent stood up, expecting to receive a kiss from Becky. Instead, Becky had pulled Katie up to a kneeling position beside her. Becky still clenched the ruler in her hand and she twisted a fistful of Katie's hair with it. She pulled her backwards by the hair until Katie's back was arched. Her face looked up into her sister's while her tits heaved forward. Katie's blouse was almost bursting from her boobs pressing tightly against the thin material. \n\nBecky pecked her sister's lips and said, \"Daddy wants to see us kiss sis. Do you want to make out with me in front of your daddy?\"\n\nKatie nodded her head enthusiastically. Becky dropped her mouth onto her sister's and shoved her tongue deep into Katie's hungry throat. Becky used her free hand to grope her sister's tits while they made out in front of their father to the sound of Katie's muffled moans. \n\nBrent was speechless and just gawked at the lurid incestual display before him. Becky was quickly undoing the last few buttons of Katie's shirt one handed. Katie appeared helpless, head back, her back arched, arms dangling loosely at her sides. Her mouth was locked onto Becky's, while Becky tore her sister's shirt open. The bra beneath was a simple teenage girl's cotton bra, but it barely contained Katie's tits which heaved inside of their cups. Katie sighed into her sister's mouth when Becky slid her hand inside to pinch one of her sister's tiny nipples. \n\nBecky pulled her hand back out long enough to slide Katie's shirt and bra strap from her shoulder in one quick motion. She peeled them down her arm until one of Katie's breasts surged free. Becky's hand went straight back to the nipple. Becky pinched it firmly between her thumb and middle finger, then pulled it and held it under tension. All the while the girls' tongues and mouths twisted and smacked in one long unending kiss.\n\nBrent finally snapped out of his voyeuristic trance. He reached forward and untied the loose knot holding Becky's shirt together. He could see her lips stretch in a smile even though they never parted from her sister's mouth. He spread the front of the shirt to let Becky's breasts come into view. They were spectacular. Full handfuls of creamy, flawless flesh heaved before him. Becky's tiny nipples matched her sister's. Next, Brent reached over and slid the shirt and bra strap from Katie's other shoulder. Her shirt slid from her arms and crumpled at her knees. The bra remained, held in place by the tight fitting strap, but now both of Katie's tits, just as perfect as Becky's, were on full display. \n\nBrent cupped one of each of his daughter's breasts in his hands and kneaded them firmly while the girls kept making out with each other. He bent forward and kissed Becky's neck and then did the same to Katie. He moved up to her ear, planting kisses all the way. Katie cooed into her sister's mouth while her daddy panted in her ear, \"You're being so quiet baby, but since there's nobody home but us...\" Brent pinched Katie's other nipple to match Becky's hold and continued, \"I'm going to make you cum so hard you scream pumpkin.\"\n\nBecky heard what Brent said and broke the kiss with a wicked smile. \"Do you still have enough for both of us daddy? You came in me pretty hard last night.\"\n\n\"I think I can manage it.\"\n\nKatie gasped, \"What Becky?\"\n\nBecky jerked on her sister's hair. She snarled in her sister's ear, \"When you couldn't keep your mouth shut last night, daddy didn't get to cum. I took care of him though and he filled my pussy right up.\" \n\nKatie opened her mouth to speak again, but Becky clamped hers back onto Katie's in another long kiss. Brent let Katie's nipple go and went back to cupping her breast. He grabbed Becky's hair and pulled her face away from Katie's with his other hand. He planted his own deep kiss on Katie's puffy red lips. \n\nSpeaking more gently, Becky said, \"Don't be jealous. Now he's going to fill yours up too Katie, but not until you swallow his cock.\" \n\nWith that she pushed Brent back, breaking their kiss and making space between their bodies. Becky pushed Katie back down onto her stomach, finally releasing the fistful of her sister's hair. While Katie reached for Brent's fly, Becky undid Katie's bra strap, then grabbed her sister's skirt and pushed it up to reveal her perfect ass. Katie was wearing no panties, just like her sister. Becky gave her sister's ass a quick slap with her ruler, leaving a faint red mark on top of the ones already there.\n\n\"Let's get a look at that cock sis,\" Becky said. She traced the flat surface of her ruler across Katie's creamy smooth ass cheeks. \"Do a good job and I won't have to spank you anymore.\"\n\nBrent felt his pants being unbuttoned, followed by the buzz of his zipper sliding down. He let his eyes roam from Katie's perfect ass down to his crotch. Katie had his fly fully open and was working his pants down over his hips. She stared at his bulging underwear with a look nothing short of hunger. Brent heard the stinging slap of the ruler on his daughter's now bare ass.\n\n\"Get up on your hands and knees Katie. Kiss those bulging boxers.\"\n\nAt her sister's command, Katie obediently rose up from her stomach to a crouching position on her hands and knees. This put her head almost even with Brent's swollen groin. Brent stepped out of his pants and moved forward until his bulge was right in front of his daughter's upturned face. Katie placed a gentle kiss on the cotton separating her face from her dad's cock. A wet spot of pre-cum had formed a darker patch near the crown of his bulge. Katie kissed that too and then licked the salty, slick fluid from her lips.\n\n\"Good sis,\" Becky whispered. \"Now pull it out and let's have a look at that monster.\" She added a light rap of her ruler to Katie's ass to get her moving.\n\nResting on her knees, Katie put both hands onto Brent's underwear and slid them down. Brent's cock bent painfully down with the fabric, then sprung free as his shorts fell to the floor. Brent's hard dick rose skyward, thick, pink, and bulging in all the right ways. His mushroom shaped knob was almost purple from being so engorged. A drop of pre-cum was pooling at the tip of Brent's dong which throbbed ever so slightly in time with his quickened pulse. Brent's big balls hung freely in their tight leathery sack, dropping down just below Katie's eye level, while his dick rose slightly above her.\n\n\"Oh shit, that's a big dick daddy,\" Becky marveled. \n\nShe dropped her ruler on the bed and climbed on top of Katie. Becky sank her pussy against Katie's ass. Becky's miniskirt slid up to reveal her naked mound as she straddled her sister. Becky pulled it all the way up, leaving her skirt as just a ring of material around her hips. She leaned forward, letting her tits press into Katie's bare back. Now both of Brent's daughters' faces were cheek to cheek just inches from his throbbing cock. \n\nBecky reached out and took Brent's dick in her soft hand. She slid her fingers from his base all the way to the tip, milking the pre-cum from his shaft. The drop that had pooled there now overflowed and dripped down onto Katie's cheek. Becky turned her head slightly and licked the slippery drop from Katie's skin. She kissed her sister's cheek, then worked her way to Katie's mouth. The girls kissed passionately while Becky slowly stroked her dad's rock hard shaft just inches from their faces.\n\nBecky broke the kiss and pulled gently down on Brent's cock to bring the head down to Katie's mouth. Brent took the hint and crouched slightly to get himself lined up. He felt his daughters' hot breath cascading over the sensitive skin of his knob. Becky gave Brent's cock head a quick kiss before moving it to Katie's parted lips.\n\nKatie looked up at her father and said, \"I love you daddy.\" \n\nThen she opened her mouth and took the entire head bulbous head of Brent's cock into her mouth in one go. At the same time, Becky leaned in and wrapped her lips around the side of Brent's shaft. Katie sucked gently on Brent's head while Becky slid her wet mouth up and down the length of her dad's dick. Brent felt Katie push her head forward slightly. She rocked her face and mouth in a slow, steady rhythm, wetting Brent's head with copious amounts of slobber. Becky slid her mouth up to meet her sister's. She pushed Katie's mouth off of Brent's knob and sucked it into hers. \n\n\"Oh shit girls. That feels so good,\" Brent panted.\n\nAfter a few sucking strokes, Becky pulled her mouth from Brent's knob with a wet plop. Without prompting, Katie hungrily took her dad's cock back into her mouth. Becky sat up and reached under one of Katie's pillows, coming out with her original eight inch dildo in hand. She turned around and knelt astride her sister. Becky's face was now just above Katie's ass, while Becky's butt was pointed right at Brent from just above Katie's shoulders. He had been wanting to grab Katie's head and shove it down onto his shaft, instead he reached for Becky's ass and gripped a cheek in each hand. Becky moaned approvingly. Brent's hips instinctively began rocking, pushing his dick a little deeper into his daughter's mouth. Katie's slobbery attention started making steadily louder glurping sounds as she took him a little deeper.\n\nBecky spit on her dildo to wet it down and placed the head at the entrance to Katie's dripping gash. She worked it in with a few gentle strokes until the head and first few inches were snugly inside of Katie's tightly stretched snatch. Katie wiggled beneath Becky once she started fucking her sister's pussy with the rubber dick. Katie moaned around her dad's cock, which sent a shock wave of pleasure through Brent.\n\n\"Oh my god Katie,\" Brent rasped, and then sank a little more cock into his daughter's mouth.\n\nBrent kept a firm grip on Becky's ass with one hand and slid the two middle fingers of his other down along her slit. He slid them back and forth until they were wet with her ample juices. He switched to his thumb and did the same until it too was sopping wet. He let his thumb glide back one more time until he found Becky's dripping entrance. Brent's pressed his thumb in as deep as he could get it and let his two middle finger continue to slip and slide along her cleft. Brent began finger fucking his daughter in time with Katie's head strokes on his cock, his fingers caressing Becky's clit while his thumb burrowed in and out of her pussy hole. Becky was \"ooh\"-ing so steadily now from her dad's attention that she almost sounded like an owl in heat.\n\nEven though she was in near bliss herself, Becky had remained focused enough to work the entire dildo into Katie's hungry cunt and was fucking her with steady strokes. Brent's thumb was pistoning into Becky's pussy with similar gusto, while both girls moaned and writhed on the bed. Katie was holding Brent's hips and began taking more and more of Brent's dick into her mouth with each bob of her head. \n\nBecky looked over her shoulder at her her sister's nodding head. \"Do it Katie. Oh fuck...ooh..ooh...take that cock bitch! Let me watch you suck it.\" \n\nBecky shoved the dildo as deep into Katie's pussy as she could get it and left it there. She reluctantly pulled herself off of Brent's thick, meaty fingers and pivoted around. Becky straddled her sister and ground her pussy down onto Katie's ass, covering it in her flowing pussy juices. Becky wiggled until her pussy lips parted against one of Katie's cheeks. Her swollen clit was now firmly pressed against the soft skin of her sister's ass. \n\nBecky started fucking herself against Katie's butt and wedged one of her knees up against the dildo's base between Katie's legs to keep it inside of her sister. At the same time, she put her hands on Brent's hips over top of Katie's, locking them in place. Then she pulled Brent forward. Brent felt Katie take a deep breath through her nose just as his dick slid deep into his daughter's throat.\n\n\"Oh fuck Katie. Let's see you deep throat dad's dick. Oh god, I'm going to cum this is so hot,\" Becky moaned into her sister's ear. She pulled on Brent's hips relentlessly and watched in fascination as her dad's cock disappeared into her sister's gaping mouth.\n\nBecky quickened the pace of her hips, grinding her pussy into her sister's ass at alarming speed. Still, she pulled Brent forward until almost all of his dick had sunk into Katie's throat. His thick cock pulsed and spasmed with pleasure, wrapped in the wet heat of his daughter's pulsing throat. Katie looked panicked but didn't struggle, quietly gagging and suffocating on her dad's dick while her sister moaned and panted her orgasm into Katie's ear. \n\n\"Oh shit. Ooh...ooh...ooh. Ah. Ahhh...AHHHH Katie! Yeessss! Choke on that dick bitch! OOOHHHHH Fuuuck!\" \n\nSpent, Becky dropped her hands from Katie's and collapsed against her sister. Katie pushed Brent backwards and pulled her mouth free of Brent's cock. She sucked in a ragged breath and blinked back tears as the world slowly came back into focus. Brent's raging hard dick sprung upward and bounced in front of his daughters' faces, splashing them with ropes of Katie's thick spit. Katie panted and huffed, trying to catch her breath. Still, between breaths, she managed to say, \"Fuck me daddy... Now...before mommy...gets home.\"",
        "Brent circled the bed like a predator circling its prey. His daughters lay atop one another, each still catching their breath. From the other side of the bed, Brent was now looking at his daughters' asses and pussies, with Becky still collapsed atop her sister. Brent crawled onto the bed and kissed whatever leg he could get his mouth on as he moved. Some kisses landed on Becky, others on Katie while he worked his way up their calves and thighs. Brent kissed the firm mound of Becky's ass cheek, inhaling the scent of his daughters' pussies while he worked his way up. \n\nThe girls felt their dad kissing their feet, their calves, and their thighs. His wet lips and slick tongue smacking and licking their sweaty skin. While Brent worked his way up, Becky turned her face to Katie's and kissed her gently on the cheeks where her tears had left trails. She kissed each tear away, tasting the salt and relishing in Katie's submission to her. Not only had Katie deep throated their father, she had barely put up a struggle, even when Becky had almost choked her unconscious on their dad's dick. Katie trusted her completely, no matter what Becky made her do. \n\nBecky felt her pussy catch fire at the thought of how much control she had over her sister. She planted a hard kiss on Katie's lips, sending her tongue deep into Katie's mouth. Brent was putting a hickey on Becky's ass at the same time, making her moan into her sister's throat. Without breaking their kiss, Becky slid off of her sister and lay beside her so that Brent could get to Katie's ass if he wanted it. Brent took the hint and slathered his tongue across Katie's ass. He tasted the copious amounts of pussy juice that Becky had left there. He marked his other daughter's ass with a hickey of her own while he pushed the fat dildo back and forth in Katie's pussy. \n\nKatie pulled her mouth from Becky's and said, \"Oh daddy, don't make me cum. I want your cock in me when I cum. Ooh I'm so close daddy. Stop.\"\n\n\"Oh Katie. You're with a real man now. Besides, I know you can cum more than once. Now be a good girl and roll over for me.\"\n\n\"Yes daddy,\" Katie said and quickly rolled onto her back.\n\nWithout warning, Brent's dropped his face straight down to Katie's pussy and latched his mouth onto her hard little clit. He started sucking on it and flicked his tongue while he slid the thick dildo in and out of Katie's cunt with long steady strokes. Katie gasped and tried to say something, but Becky had already locked her lips back onto Katie's so that all Brent heard was a muffled \"hhhmmfff\". He could barely hear anything anyway over the wet smacking sounds his lips made on Kaite's cunt combined with the thick sloshing sound the dildo was making in her pussy. \n\nBrent pushed one of Katie's legs up to let him get the dildo even deeper into her pussy. He hummed onto Katie's clit as he lapped up her sweet juices. Katie's toes pointed straight out and then curled tightly as her orgasm approached. Becky groped Katie's tits and slid down to suck a nipple into her mouth. As soon as Katie's mouth was freed, she let out a litany of wailing moans as her orgasm rocked her body. \n\n\"Ooohhh shit!. Fuck me with your tongue daddy. Uhh...Uhh... Ahh...uhh..hahh. Ooh..god... oh god, oh god, I'm cumming! Oohh shhiiittt!\" Katie screamed in release. Becky savaged Katie's tits with her hands and mouth while Katie cried out, her body quivering from head to toe.\n\nFeeling Katie's orgasm subside, Becky licked Katie's tits and let her tongue trail up Katie's body, across her neck, up her jaw, and across her lips. She sunk her tongue back into her sister's mouth, purposefully not letting Katie catch her breath. Katie's chest was heaving while they kissed. Brent looked on from below and almost casually continued fucking her with the dildo. He decided to leave it in place and climbed up Katie's body. He cupped both of her breasts in his strong hands. He latched his lips onto one of her nipples and suckled on his daughter's tit. Her chest was rising and falling so rapidly, it was hard for Brent to hold steady. Finally, unable to take it any longer, Katie pushed Becky up to break their kiss. \n\nPanting, she begged, \"Please Becky...please...let me... catch my...breath.\"\n\nBecky smiled, and rolled away from her sister. \"OK sis. I want to watch you take dad's dick anyway. You've still never had a real cock. Tiny Tommy's doesn't count.\" \n\nBecky walked over to her nightstand while Brent switched to Katie's other nipple and twirled the tip of his tongue around it. Becky picked up her burner and came back to bed, filming the whole way.\n\n\"Fuck her daddy. Shove that dick in her and let her know what a real man feels like.\"\n\nBecky knelt on the bed beside her sister, sitting back on her heels. She started to rub her clit while she watched Brent slowly pull the rubber cock from Katie's pussy. It came free with a wet plop, followed by a steady ooze of creamy pussy juice. Brent set the dildo on the bed with the tip pointing skyward.\n\nTo Becky he said, \"Get on.\"\n\nBecky whimpered, \"Oh yes daddy.\"\n\nBecky rose up enough to let Brent reposition the dildo beneath her. She adjusted the head and sat back down on it. The dildo was slathered in Katie's juices, which mixed with Becky's own when the head and shaft filled her tight canal. Becky eased herself down until the base of the cock was pressed tightly against her stretched opening.\n\n\"Mmm. Thank you daddy,\" Becky cooed. She thrust her hips and returned her finger to her clit while she filmed the scene before her.\n\nBrent sat up and brought his hips closer to Katie's, he let his cock and balls rest against Katie's bare pussy lips.\n\n\"Now it's your turn baby doll. That dildo has loosened you up, by my cock is still bigger. I'll go slow until you're ready for it,\" Brent said lovingly while he caressed Katie's thighs.\n\n\"Oh your dick feels so hot down there. I'm ready for it now daddy.\"\n\nBrent grabbed the shaft of his dick and rocked his hips backward until he had enough room. Katie spread her legs and looked down at the massive dick that was now sliding up and down between her dripping pussy lips. Brent cock teased his daughter with gliding strokes along her gash, slathering his shaft with her juices. Becky was moaning quietly from beside him, rocking her hips and fingering herself, but trying to hold the phone steady. She leaned in closer to focus on Brent's dick when he placed the head at Katie's entrance. \n\n\"Oh my god dad. This is the hottest thing I have ever seen,\" whispered Becky. \n\nBrent grabbed Katie's hip with one hand and lifted her butt slightly. He pushed the tip of his cock into Katie's sopping pussy hole. Her ring stretched tightly around his bulbous head as he steadily worked it in a little at a time. When the ring of his crown pushed into Katie, her inner lips collapsed snugly around his shaft. \n\n\"Mmmmm,\" Katie moaned as soon as the head of Brent's cock disappeared into his daughter's hot canal. \n\nThe room was otherwise oddly silent while they all intently focused on the massive cock being fed into Katie's snatch. Brent eased back every so often before pushing his shaft in a little further. Each time he did, Katie would moan as her pussy was stretched further than ever before. Becky leaned in even closer, marveling at how distended her sister's pussy lips were around the thick shaft of her dad's dick. She imagined that her own pussy had looked the same when Brent took her from behind. She panned her camera up to Katie's face, which displayed a mix of pleasure, pain, and lust as she watched her dad's dick slide further and further into her already tightly stretched cunt.\n\n\"How does it feel sis?\" Becky asked.\n\n\"I can't believe how big it is. I feel so full down there. Oh daddy, it's so big.\"\n\nBecky panned back down to her sister's pussy. \"Put it all the way in dad.\"\n\nBrent slid an inch back out of Katie and pressed forward, pushing the last three inches of his fat cock into his little girl's wet gash all at once. He pressed his tightly trimmed pubes up against Katie's bald cunt. He paused, relishing the incredibly tight feel of the wettest pussy he had ever been in. It was like shoving his dick into a tube of some exotic, incredibly thick, hot oil. His hands roamed up and down Katie's thighs while he stared deeply into his daughter's eyes. Before he even started fucking her, Brent knew there was no way he would be able to pull out of something that felt this incredible inside of a woman this beautiful. \n\nBrent smiled wickedly down at his daughter and said, \"I'm going to fuck you now Katie. I'm going to fuck you harder than you ever been fucked. Do you think you can take daddy's cock like that pumpkin?\"\n\nKatie grabbed two handfuls of the bed sheets, sucked on her lower lip, and nodded her head.\n\n\"Fuck her, dad.\" Becky whispered from beside him. \"I want to hear her scream for your dick.\"\n\nBrent felt the bed starting to shimmy from the heightened pace of Becky's hips. She was wriggling on the dildo that was buried in her cunt and starting to bounce her ass up and down on her heels. Becky was entranced at the sight of Brent's dick in her sister and was clearly on the verge of cumming already. Brent leaned over, grabbed Becky's neck and pulled her to him in deep kiss. Becky moaned into his mouth.\n\nBrent broke the kiss and whispered into Becky's ear, \"Don't cum yet. I want you to ride your sister's face as soon as I make her cum.\"\n\n\"Oh god daddy. You are so nasty,\" moaned Becky.\n\nBrent returned his gaze to Katie's face and grabbed her around the waist with both hands. Brent slid his dick out a few inches and pushed it back in to an appreciative moan from Katie. He did it again to the same result. After a few more tentative strokes, satisfied that he wasn't injuring his daughter, Brent set to fucking her hard. \n\nHe pulled his dick further and further out along her shaft and drove it home with a firm thrust of his hips. Each time he did, the shock wave shook Katie's tits and rocked the bed. He picked up speed and started giving her strokes along with the full length of his cock. Wet slaps were steadily coming from Katie's snatch as their bodies collided. As he picked up even more speed, his balls started clapping against her bucking ass to add to the noises of their fucking.\n\nKatie's upper body was straining, her fists pulling handfuls of the sheets upward, her neck muscles standing out while her body rocked the bed against the wall. She was moaning frantically as Brent's long strokes filled and emptied her cunt over and over. Brent shifted his hands back to Katie's thighs. He lifted and squeezed them together in front of him. He now had Katie's ass lifted off of the bed, her legs clamped together in front of him. His deep strokes drilled her straining pussy through her tightly squeezed thighs. The extra pressure increased the already incredible tightness on Brent's cock and sent waves of pleasure into Katie's pussy. Katie's toes curled in ecstasy as her orgasm approached. Brent slammed his dick into his daughter's cunt in a series of short rapid clapping strokes that pushed her over the edge.\n\n\"Oh daddy...oh...fuck me daddy! Fuck me! Oh fuck me!! I'm cumming daddy! I'M CUMMING!!\" Katie's screams echoed through the house. Her words became incoherent babble while Brent's dick pounded her pussy relentlessly.\n\nBrent dropped Katie's legs and leaned forward. He grabbed her tits and pumped more long strokes into her cunt. He looked over at Becky who had held off her own orgasm but was still grinding on her dildo. Brent caught her eye and nodded at Katie's face. Becky rose up, pulled the dildo from her pussy with a wet slosh, and all but jumped around to her sister's head.\n\nKatie, still panting and moaning, opened her eyes just in time to see Becky's cunt dropping onto her face. Becky straddled Katie's head and lowered herself until her pussy lips were kissing her sister's mouth.\n\n\"Eat my cunt bitch. Eat my cunt while daddy cums inside you!\"\n\nObediently, Katie's mouth opened to accept the dripping wet lips that were pressed against them. Becky sawed her hips on her sister's face while Brent shortened his rapid strokes, his orgasm fast approaching. Brent pulled Becky forward and locked her in a deep kiss. He settled his thumb on Katie's clit and jiggled it across her pussy. All three of the Johnsons were panting and moaning together while the bed slapped the wall and danced back and forth on the floor. Brent felt Katie's body spasm. With her sister's pussy filling her mouth, she writhed almost silently beneath him as another orgasm shot through her body. Brent felt his balls contracting at the same time.\n\nBe broke the kiss with Becky and groaned, \"Oh Katie, I'm cumming! Ahhh. Oh shit your pussy's so tight. I'm cumming inside you baby. AHHHHH!\"\n\nBecky moaned in a husky voice, \"Oh yesss! Fill her up dad. Oh my god! Oh my ga...Uhhh.. Ahhh.\"\n\nBecky's own orgasm hit her when she looked down to see Brent's spunk overflowing from her sister's pussy, his dick still pushing in and out of her while the last blasts of cum shot deep into Katie's cunt. Still panting, Brent pulled his dick out of Katie, grabbed Becky's head, and pushed her down to Katie's oozing gash.\n\n\"Lick it up,\" he rasped, pushing Becky's head all the way down. \n\nBrent felt Becky's head obediently start to bob and heard the satisfying wet slurps and she licked and sucked his seed and her sister's juices from Katie's pussy. He grabbed Becky's phone from where she had dropped it on the bed and filmed his two daughters eating each other's pussies with their hungry mouths. Katie had a fourth orgasm right away and screamed into her sister's cunt before collapsing in exhaustion. Becky leaned back onto her sister's face and gyrated against Katie's now relaxed lips. She felt Katie's nose brushing against her asshole. The thought of how dirty that was pushed her over the edge.\n\n\"Oh shit, oh shit, oh fuck fuck fuckfuckfuck!\" Becky moaned while she fucked her sister's face to another orgasm. Pussy juice rained down on Katie's nose and mouth.\n\nSatisfied at last, Becky rolled off of Katie and collapsed. Brent picked her up, gently cradling her by the neck and under her knees. He spun Becky around and laid her back down beside Katie so that their sweaty, pussy juice soaked faces were next to each other. He climbed on the bed between them and pulled them close in a tight hug. \n\n\"I love you both so much,\" he sighed and kissed the top of each of their heads. \n\nThey lay together that way for several minutes until the girls' breathing had returned to normal. Then Brent peeled off his t-shirt and lovingly wiped down the girls' faces, followed by his dick. Tossing the shirt aside, he rolled over and fished his personal phone from his pants where they lay crumpled on the floor. He texted Steve while his daughters dozed on either side of him.\n\n- You find her?\n\n- Yeah. Quick thinking with your phone. You should work for us.\n\n- No way. I'll get the details later, but anything going on?\n\n- Short answer. YES. Sorry bro. I can call?\n\n- No. Not shocked. Spending time with the kids. Just text when she starts heading my way.\n\n- You're a good dad. Copy that.\n\nBrent made sure his volume was up so he would hear the text and tossed his phone back to the floor. He rolled to his side and faced Katie. Propping his head on his hand, he trailed is other hand over her body while making little circles on her skin with his finger. Katie's nipples hardened and goose bumps arose everywhere he touched. \n\n\"That feels good dad,\" she murmured.\n\n\"So, from your screams, I take it that you liked having a man sized cock instead of that little boy's?\"\n\n\"Oh yeah. Tommy is so dumped.\"\n\nBecky looked over her dad's shoulder at Katie, who still had her eyes closed. \"Katie, you haven't dumped him yet?\"\n\n\"I haven't had time with you and dad trying to get in my pants all week.\"\n\n\"Trying?\" Brent asked. \"More like succeeding.\"\n\nBecky's arm draped over Brent's waist and sought out his limp dick. Once she found it, she held it in her soft hand and began stroking. After milking a few drops of lingering cum from his tip, she worked it along her fingers to slick up her grip.\n\n\"Daddy,\" she said, \"you promised you would be man enough for both of us. I didn't get any dick.\" \n\nBrent grabbed Katie's hand and slid it over to join her sister's on his cock. He moved her hand up and down until he felt her pick up the motion herself. He took his hand away once his dick began to swell in response to their attention. \n\n\"Oh, I'll give you some dick. Just be patient,\" Brent said.\n\nBecky rested her cheek against Brent's ear. Still softly stroking his half hard dick, she said, \"Katie, I don't think you really want to dump Tommy. That's OK though. You keep Tommy and I'll take dad.\" She whispered into Brent's ear, but loud enough for Katie to hear, \"Do you want me to be your girlfriend daddy?\"\n\n\"Mm hmm,\" Brent nodded. His cock throbbed at her suggestion. \n\nKatie looked over, mildly upset. \"I am dumping Tommy. He's mean to me anyway.\"\n\n\"Well sis, why don't you call him right now and dump him?\"\n\n\"Now? Aren't we a little busy?\" Katie asked.\n\nBecky sat up and pulled on Brent's shoulder to get him to lie flat on his back. Katie's hand fell away as he moved, but Becky took a firmer grip with her own. She started jacking him off and latched her mouth onto one of Brent's nipples. His dick was hard as a rock in a matter of seconds. Becky straddled her dad and slid her wet slit up and down his shaft while she pinched his nipples.\n\nStill gliding her hips astride her father, Becky looked over at Katie and said in a voice thick with lust, \"I'll tell you what sis. I'll share dad with you, but only if you have dumped Tommy before I cum. Better hurry. I'm already really close.\"\n\n\"Wha...?\" Katie was dumbfounded.\n\nWith that Becky rose up on her knees and positioned Brent's dick at her entrance. She let out a series of \"oohs\" as she worked his thick, hard dick into her cunt as fast as she could take it. Her pussy lips stretched tightly around the base of Brent's fat cock. Becky had settled her ass down against his thighs. She felt even fuller than she had last night. The tip of her dad's cock was easily pressing against her cervix, creating an intensely pleasurable feeling.\n\n\"Oh daddy. You feel so good inside me. I can't believe mommy doesn't jump your dick every day,\" Becky cooed and started shifting back and forth.\n\nBrent cupped Becky's full breasts and flexed his hips up into his daughter. Becky gasped at the extra pressure inside her and picked up her gyrations.\n\n\"Oooh Katie, you better hurry up. Mmm. Mmm. Or don't. I want this dick. I want this dick. Oh god.\" Becky started bouncing on Brent's shaft as she spoke.\n\nKatie broke from her trance and dialed Tommy's number. The phone rang but he didn't answer.\n\n\"It's going to voicemail. I'll just leave him a message. That counts.\"\n\n\"Mmm. No it doesn't, sis,\" Becky growled, never breaking her stride. \"Try again. Oh fuck.\"\n\nKatie frantically redialed, got voicemail, and dialed again.\n\n\"Daddy, this isn't fair. I'll dump him for you. I'll be your girlfriend. I swear. He's just not answering.\"\n\nBecky grinned maliciously at her sister and said, \"OK text him..mmm...a message that says your pregnant. That will get him to call back. Oh fuck daddy.\"\n\n\"OK. OK.\" Katie's fingers flew across her phone. She held it up to show Becky. \n\n\"Good sis. Now ride daddy's face while you wait.\"\n\nBrent knew that Katie's cunt was still full of his semen. Becky was trying to get him to eat his own spunk. When Katie started crawling toward him, he almost yelled, \"No Katie!\"\n\nKatie misunderstood his reasoning and pouted, almost crying at her dad's harsh refusal. \"But daddy, I'm yours. I promise. Please.\"\n\nBrent took a steadying breath and pulled Katie over into a soft but lusty kiss.",
        "\"Shh, Katie. Becky is just being mean. I've got an idea,\" he whispered to her. More loudly he said, \"Stand up Katie. Hold onto your sister's hair for balance.\"\n\nKatie stood up and put one foot on each side of Brent's waist. She grabbed one of Becky's braids in each hand to steady herself on the rocking bed. Brent placed a hand on each of her butt cheeks for extra support. He let his palms spread her cheeks slightly. His thumbs rested close to where her outer pussy lips merged together near her asshole. \n\n\"Becky, why don't you eat Katie's pussy again. I know you liked eating my jizz out of it and there's plenty still in there.\"\n\n\"Daddy? I wasn't trying to...\"\n\n\"I said eat that cunt slut!\", Brent growled harshly. \"Pull her hair Katie. Pull that slut's face onto your perfect little pussy.\"\n\nBecky whimpered, \"Oh daddy I...mmmmpphhh.\" \n\nHer words were cut off when Katie tugged her face forward by her braids and thrust her cunt into Becky's mouth. Brent looked up between Katie's thighs to see Becky's mouth hungrily french kissing Katie's pussy. Her tongue darted into Katie's cunt, slurping up the ample fluids steadily leaking from it. Brent felt Katie's hips start to rock and her ass to jiggle in his hands.\n\nBecky was sawing her pussy up and down on Brent's thick shaft while she ate cunt. She savored the thickness spreading her wide. Each time his probing member stabbed at the top of her cunt, she moaned into her sister's pussy lips. Katie had wrapped Becky's braids around her fists and ground her cunt as hard as she could against Becky's soft lips.\n\nThey all froze when Katie's phone rang. Becky, the only one with a free hand, groped for it and brought it up to eye level. Smiling into her sister's snatch, Becky opened the connection to Tommy's call and handed the phone up to Katie.\n\n\"Ints Tmmmy,\" she mumbled while waving the phone in her sister's face.\n\n\"Tell him what's up Katie,\" Brent commanded.\n\nKatie released Becky's hair with one hand and took the phone. She took a few steadying breaths and said hello. Brent could hear someone on the line but couldn't make out the words. Becky stared up at her sister. As soon as she started talking, Becky dove back in to Katie's cunt. This time she focused her tongue on Katie's clit.\n\n\"Noo Ohhh! No Tommy. I'm not... uhh... pregnant.\" \n\nKatie pulled the phone from her mouth and panted, still grinding her cunt against Becky's mouth. Becky was pistoning her hips back and forth on Brent's cock while she licked and hummed on Katie's clit. Katie moaned quietly, then took a deep breath and put the phone back to her ear. She spoke as fast as she could, determined to end the call before she creamed her sister's face.\n\n\"Tommy I'm not pregnant. Ihateyouandneverwanttoseeyouagain. G'bye.\"\n\nKatie killed the connection and tossed the phone down. She coiled her fist back around Becky's hair and vigorously humped Becky's face.\n\n\"Oh fuck! Fuck my cunt Becky.\"\n\nBrent was panting beneath his daughters. He felt Katie rocking herself forcefully into her sister's mouth. \"Yeah, Katie. Fuck that slut's mouth. Tell her to eat my jizz from your cunt.\" Brent started upthrusting into Becky as he spoke.\n\nKatie was growling now when she spoke, \"Oh Becky yesss. Eat daddy's cum. Ohh. Mmm. Eat his cum from my cunt you...you...slut!\"\n\nBecky's mouth was making wet farting sounds while she moaned and licked and slurped her sister's sloppy cunt. She bounced on her knees and thighs, loving Brent's slamming upthrusts that were beating her pussy mercilessly from below. \n\nBrent felt his balls tightening. He gripped Katie's ass tighter and spread her cheeks further. Pussy juice was dripping steadily onto his stomach. His girls were moaning unintelligibly. He felt Katie begin to orgasm and let his thumb slide over to her tight little asshole. He pressed it firmly against her wet, puckered ring while she bucked and shimmied above him.\n\n\"Oh fuck. Eatme. Eatme. Eatme. Fuuuuuuck!\" Katie screeched in ecstasy.\n\nOnce Katie was spent, she sat down hard on the bed beside Brent. Now that he had more freedom to move, Brent braced his feet up closer to his butt and lifted his hips off the bed entirely. He wrapped his hands around Becky's waist to lift her up slightly. She leaned forward and grabbed handfuls of his wiry chest muscles while rode his cock with sweeping thrusts of her hips. Brent stabbed his dick into his daughter with long rapid strokes, forcing her to start to cum after just a few seconds of jack hammering her pussy from below. \n\nBecky's entire body tensed. She threw her head back and drew in a deep breath to let out a scream of ecstasy, but the feeling was so intense that no sound escaped her. With her breath caught in her throat, Becky writhed silently atop her dad's cock and clamped her vaginal muscles down tight onto his shaft. Still banging his cock into Becky's pussy from below, Brent slid his thumb down to her clit and rubbed her little nub as fast as he could. The wave of Becky's orgasm finally cascaded across her body. In her release, she found her voice.\n\n\"Ggaaahhh! Oh fuck daddy! Fuck me, I'm cumming so hard. Fucking tear me apart daddy! Break this fucking pussy on your big fat dick! Oh my gaaahhhh!\" \n\n\"Oh you're a fucking slut!\" Brent growled back at her, while his balls dumped and his cock filled his daughter with his cream. \"Ahh. Oh god. Ahhh. You dirty slut,\" he panted, buying his dick deep into his daughter's pussy with one last stoke. Finally spent, he pulled Becky down into a tight hug.\n\nBrent rolled them over as one and lay on top her sweaty little body. He softly but firmly pulled Katie by her hair back over to Becky and made them kiss each other again. He pulled Katie into their hug and held them all in a tight embrace. They stayed that way for a long time. Eventually, Brent's phone chimed, letting them know that Kat was on her way home."
    ],
    "authorname": "Iamnotstevebuscemi",
    "tags": [
        "daddy",
        "dildo",
        "incest",
        "lesbian",
        "pussy eating",
        "sisters",
        "threeway",
        "twins"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-tale-of-twin-tails-ch-05"
}