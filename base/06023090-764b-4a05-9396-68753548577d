{
    "title": "From Friendship Comes Love Pt. 01",
    "pages": [
        "Author's Note:\n\nThis is a work of pure fantasy.\n\nThe story contains sexual activities and situations between a man and a transgendered woman that are to be read only by readers above the legal age of consent. All characters are above the age of 18.\n\nAs you can guess from the title, this is a love story between the two main characters. That's means if you're looking for story that goes, \"They met, they had wild sex, the end\" I would advise reading something else. This is a three part story and fairly long. I tried to make it shorter, but once I started writing, one thing led to another and it became long no matter how I tried to shorten it.\n\nThis is only my second story, so I still consider myself an amateur writer, so please take that into consideration when you read it. I write for my enjoyment and for the people that like it. And remember, this is pure fiction and fantasy.\n\nIf you don't like how and what I write, oh well. Don't read it. \n\nFor those of you that do, I hope you enjoy reading it as much as I did writing it. \n\nI stopped this part of the story at a place that seemed right when I was splitting it up. As soon as I get the next part cleaned up, maybe a week or so, I'll post that part.\n\nFYI\n\nI need to apologize for my first story I posted (A Fantasy Fulfilled), I had a hard time uploading it for some reason and finally, I just cut and pasted it in. Unfortunately, I mistakenly cut and pasted a draft copy and not the final one. So you got it with all the mistakes. Not an excuse, just wanted to explain what happened. Thanks to all that still liked it, mistakes and all.\n\n65Rebel\n\n*****\n\nFrom Friendship Comes Love (Part 1)\n\nMy name is Jason, I'm 32 years old, just about 5'10\", with light brown hair and eyes, and I weight just about 170 lbs. I'm ex-military, I spent 8 years in the Navy and when I got out, I went to work for a company that makes, installs, maintains and repairs generator sets. They're used on oil rigs, hospitals and such. I've been doing this for about 6 years now and this is where the story starts.\n\nI've been with this company for about 6 years and I'm one of the senior technical reps for them. I travel all over the country for this, I enjoy the work and getting to go all over the place and getting out of the office keeps me from getting bored. The only slightly bad aspect is that when we get in a new junior engineer, my boss always sticks them with me to learn the ropes. He thinks, and rightly so personally, that if they don't know the nuts and bolts, they can't make good engineering decisions. Normally I don't mind it, but sometimes I'll get one that thinks he or she knows everything. They always seem to think things will act and run like the books say and how they learned in school. However, I haven't seen one yet that ever read the book. They're more like cats, they do what they want, when they want too.\n\nI was sitting at my desk going over a project I was working on when my boss comes up to my cube and says, \"Hey Jay, got a minute?\"\n\n\"Sure boss,\" I answered while turning around in my chair, \"What you need?\"\n\n\"I'd like to introduce you to a new engineer I just hired,\" He said. \"I need you to show her around and start teaching her about the job.\" \"She'll be working with you and helping with your projects.\" He continued. \n\n\"Oh, an try not to break this one, okay?\" He laughed, \"From her resume, I think she'll work out as long as you train her.\" \n\nStill chuckling, he turning to her said, \"I'm only joking, he's not that bad, Jason just hates most people in general, so don't take it personal.\"\n\n\"OK boss, I promise I won't try to break her or drive her off.\" I replied back laughing myself. \"Oh, and I don't hate people, contrary to popular opinion, I just like it better if they're not around.\"\n\n\"Great\" He replied. \"Well then, Jason this is Simone, Simone, Jason. He'll tell you about the place, where everything is, and what we do. Take my advice and listen to him, if he don't know it, it's not that important.\" \n\n\"Oh, one other thing,\" He continued. \"If he gets out of line, just smack him on the nose with a rolled up magazine.\" \n\n\"Boss, don't you have someplace else to be?\" I asked him. \"Like a meeting or something?\"\n\n\"Just let those of us that really know what's going on, do our job, then let us take care of it and make you look good for the upper levels.\" I added.\n\n\"Okay, Okay, I'm going.\" He replied waving over his shoulder as he walked away.\n\nI turned back to her and offered her my hand saying, \"Simone, it's nice to meet you.\"\n\nShe was about 5'6\", maybe 120 lbs. with short reddish-brown hair somewhat just a bit longer than a, pixie cut I think they call it, and she had hazel eyes. She had a nice build, sort of a classic hourglass shape, and it looked like she worked out. She was a cute, good looking girl, not super model beautiful, but cute as hell. She reached out to take my hand and smiled as she did. \n\nWhen she smiled at me, a change came over her. I said she was cute, but when she smiled, she was absolutely gorgeous, her smile just lit up the place. As she took my hand she said, \"It's a pleasure to meet you too. I hope we can work well together.\"\n\n\"Oh, and by the way, I don't break easy.\" She laughed easily as she said it.\n\nShe had a beautiful throaty voice and it reminded me of a young Lauren Bacall. Like she was in the movie, \"To have and have not.\" That was one of my favorite movies, I love Lauren Bacall.\n\n\"Good\" I laughed back, \"That's really good to hear. Come on, let's go in the conference room and talk.\"\n\nI opened my desk and pulled a folder out with a bunch of information handouts I made up since the boss was always having me to this.\n\nWe grabbed a couple of coffees from the pot on my desk and walked over to the conference room. I handed her the folder and said to her, \"Here's a bunch of info sheets for the place. It also has some forms you'll need to fill out, you can start on that when we finish up here.\"\n\n\"So, tell me about yourself.\" I said picking up my coffee.\n\n\"Well, let's see.\" She started after taking a sip of her coffee, \"I'm 28 and single, I went to school at MIT, and I've been working as an mechanical engineer for the last 5 years. Mainly entry level things, nothing to specific. Just trying to learn different things and find a home if you know what I mean.\"\n\nShe took another drink of coffee and said, \"Wow, that's good coffee. I'm going to like it here with coffee this good.\"\n\n\"Well,\" I replied. \"Don't get to excited, it's not from the community pot, it's out of mine. The stuff they have for the masses don't come near as good.\" \n\n\"Actually, you could probably use it for oil in one of our engines.\" I continued laughing.\n\n\"Well then,\" She asked, \"What do I need to do to keep up a steady supply of the good stuff?\" \"I'm sort of a coffee snob.\" She said laughing.\n\nJust smile at me again, I thought to myself, but said aloud, \"Not a problem, your more than welcome to dip into my stash until you get set up.\"\n\n\"And I can understand the snob bit totally, I am myself.\" I told her laughing a little.\n\nI don't know what it was, but I was finding myself liking this woman more and more than any other of the ones I had meet that started here. And that's something that almost never happens to me. My boss wasn't too far off the mark when he said I hated people.\n\nOh, don't get me wrong, I've gotten to like others that came through here, but I never had it happen this fast. I don't know if it was the voice, the smile, or just her overall attitude. All I know was that I wanted to know more about her.\n\nI took another drink and asked her, \"Are you all settled with a place to live? I know it's sometimes hard to find a place around here that's affordable.\"\n\nShe smiled ruefully and said, \"Yeah, I found that out when I started looking, but I did find an apartment just north of here.\n\n\"Okay, good, at least that's one thing you won't have to worry about.\" I replied. \"Where abouts?\"\n\nShe told me the name of the town and it was up near where I brought my place, maybe 6 miles or so from my house.\n\n\"I know where you mean.\" I replied, \"You're not too far from me.\" \"If you need to know where anything is or the best places to go shopping, I can tell you.\" I continued.\n\n\"Great,\" She said, \"I'd like that, it sure would make it easier not having to try and find out by myself.\"\n\nWe continued to talk about the company, the job and how things operated around here for the rest of the morning. Then after lunch I took her around an introduced her to the others and gave her the nickel tour of the place. She seemed to have a good handle on most everything by quitting time.\n\nAs we were walking out the door to the parking lot, I turned to her and said, \"Well, I guess I'll see you in the morning, you have my cell number if you need anything. Have a good night.\" I said waving to her.\n\n\"Thanks for everything today Jay,\" She replied. Then she smiled at me and continued, \"I'm really looking forward to working with you.\"\n\nHave I mention just how much her smile and voice affected me? \n\n\"I'm looking forward to it myself.\" I stammered a bit, almost tripping over my own feet. What the hell was the matter with me? \n\nI don't know if she saw me almost trip and do a face-plant, but she waved and walked to her car.\n\nFor the next couple of weeks we saw and worked with each other every day, working on different projects and jobs. By the end of those two weeks we had become fairly close friends. In all the years that I've been around, I've never gotten to be friends with someone as quick as I did with Simone. She was smart, had a great disposition, nothing seem to get her riled up. Have I also mentioned her smile and voice? She was a pleasure to be around and work with.\n\nFriday came around and as we were leaving for the day, I asked her how she had liked her first two weeks.\n\nShe smiled at me and said, \"Jay, it's been great, I think I've finally found a place to call home. And it's all because of you, you've made it easy.\" \n\nShe put her hand lightly on my arm and kissed me on the cheek. \"Thank you for everything.\" She said, \"I'll see you later.\"\n\nWith that, she turned and walked to her car. My arm felt warm were she touched me and my cheek was on fire from where she kissed me. I wanted to say something back to her, but I couldn't seem to get a word out like I was some kind of mental defective.\n\nAs I walked to my car I asked myself once again what the hell was going on. It isn't like I've never been kissed before, or that some woman had paid me complement. I shook my head to clear it and went home.\n\nOnce I got home, I cleaned up and started dinner. I was in the mood for Italian and so I made some Bolognese sauce. Since it had to simmer for a while, I decided to take a shower while I was waiting on it to be done.\n\nAs I was in the shower, I started thinking about the kiss Simone had gave me and as I was thinking about it, my cock had gotten hard. When I wrapped my soapy hand around it too wash myself, I found that I was completely stiff and hard, I also notice it was beginning to ooze out precum and that is usually present only when I am in a high state of arousal. I realized then that Simone affected me like no other person ever had and I never made a move on her, nor her on me outside of that one kiss on the cheek. I was getting the urge more and more to stroke my cock and pump my ass off. I just wanted to shoot cum all over the inside of my shower while thinking of her. Well, I was hard, my hand was all soapy and on my cock, so I figured, what the hell, it's mine and I can clean it as long and as slow or fast as I wanted.\n\nI leaned against the wall and shuddered when my hand started stroking my cock. As I stroked my cock with one hand, I reached down with my other hand and began massaging my balls. I kept stroking and massaging my cock and balls, first slowly and then faster, then slowly again as I feel my orgasm getting closer. I finally couldn't take it anymore and my hand started to move more quickly up and down my cock as I felt the cum building in my balls as I got closer. \n\nThen with no warning what so ever, I started to cum, hard. I could feel the cum going up the inside of my cock like liquid fire and then shooting out the tip to splash against the shower wall. In my mind's eye, I can see Simone's smile and feel her kiss on my cheek as I shot out another spurt of cum, then another. I continued to stroke my cock and I shuddered as I stroked slower and slower. I continued to stroke my cock, the last of my cum oozing over my hand as I massaged my balls working the last bit out of me.\n\nI lean against the shower wall panting for breath, my cock still in my hand. I can't believe how hard I came from just that one smile and kiss.\n\nOnce I caught my breath, I rinsed off and got out to dry myself, then I dressed in my normal attire while at home, a pair of cut-off jeans and T-shirt. I walked into the kitchen and checked on the sauce giving it a quick stir, grabbed a beer out of the fridge and went into the living room to turn on the TV checking to see what was on. I was in luck, one of my favorite movies was on, \"To have, and have not\". There was nothing better than a Bogart and Bacall movie, especially this one, I think I mentioned how much I love Lauren Bacall. Just the sound her voice turns me on like crazy.\n\nI sat back in the recliner relaxing and drinking my beer while watching the movie when my cell started ringing. I muted the TV and picked up the phone and saw that it was Simone, I quickly answered it and said; \"Hi Simone, what's up? Everything okay?\"\n\n\"Hi Jay, everything's good.\" She replied. \"I was just wondering if you'd like to join me for dinner?\" \"You've been so nice and helpful this past couple weeks, I just wanted to pay you back a bit.\" She continued.\n\nI sat there a bit trying to get something that actually sounded like a normal language to come out of my mouth. \n\n\"That sounds good to me,\" I said finally, stammering a bit, \"However, I've already got dinner ready here. Look, how about you come over and help me eat what I've got. I promise I won't poison you,\" I said chuckling a little.\n\n\"Well, okay,\" She answered. \"I wanted to take you out to thank you for how nice you've been.\" \"But if you already have something there, there's no sense wasting it.\" She finished.\n\n\"Great, how soon can you be here?\" I asked.\n\n\"Oh, say maybe about 15 minutes or so, I'm in the neighborhood.\" She answered.\n\n\"All right, I'll see you in a bit then.\" I answered back.\n\nI shut off the phone and drained the rest of my beer walking back into the kitchen. I checked the sauce one last time and quickly threw together a salad. Thank the Gods for bagged salad mix. \n\nHaving made the salad, I sliced up some Italian bread and set the table. I looked at the clock and noticed that 15 minutes had past and I started wondering where she was like some teenager waiting on his first date. I decided that I should change out of my cut-offs, so I went in to put on a pair of jeans.\n\nAs I was finishing up, the doorbell rang. I walked over and opened the door and there Simone stood, a grin on her face and holding two bottles of wine, one red and one white.\n\n\"Sorry I'm a little late,\" She said smiling, \"I stopped to pick up some wine.\" \"As you didn't say what we were having, I picked up one of each.\"\n\nStill grinning, she asked, \"Which one should I open?\"\n\nI smiled back at her and said, \"The red, we're doing Italian. And great timing really, dinner will be ready in a few minutes, I was waiting to do the pasta until you got here.\"\n\nWe walked into the kitchen and Simone got a big grin on her face. \"Oh man, that smells fantastic,\" She said turning to me. \"What kind of sauce is that and where did you get it?\"\n\n\"Bolognese, and I didn't get it from anywhere, I made it.\" I said, trying not to break my arm patting myself on the back.\n\nShe got a stunned look on her face, then smiled and said,\" Not only is he a great mechanic, but he can cook too.\" \n\nI tried not to look to happy with the compliment and said; \"Well, I hope you like it. Just let me toss the pasta in the water and then we can eat in a few.\"\n\nShe opened the wine and poured two glasses. Handing one to me, we then walked into the living room. I grabbed the remote and turned the sound back up. Simone looked at what was on and smiled, then said; \"Oh, I love this movie.\"\n\n\"So do I,\" I told her. \"It's actually my favorite of all the Bogart movies.\"\n\nSo we sat down and watched the movie while the pasta was boiling waiting for it to be done.\n\nOnce the timer went off, we went into the kitchen and I strained the pasta, mixing it with sauce in a big bowl. I turned to Simone and said; \"Could you please grab the salad out of the fridge while I serve this up?\"\n\n\"OK,\" She replied, then went to grab the salad and the dressing while I plated up the pasta.\n\nI put the plates on the table, got the bread and put that on the table also. Then I held out her chair and waved her into it grinning and saying, \"Ma'am, your table is ready.\" \n\nStill grinning, I continued, \"Sorry, but the red and white checkered table cloth is in the laundry so you'll have to make due as is.\" \n\nShe set down the two glasses of wine she had refilled and said; \"Well, since I didn't have a reservation, I'll just have to make due.\" She sat down as I pushed he chair in.\n\nI sat down, took a drink of the wine and said; \"Not to worry, madam always has a standing reservation here. Just because she's so nice and beautiful.\"\n\nShe reddened a bit and took a drink of wine, then replied grinning, \"Ha, I think the waiter is just looking for a bigger tip.\"\n\nGrinning back at her I replied; \"Not so, I've already got the best tip around just by you being here.\"\n\nNow she was in full blush as she reddened even more. Then she took a fork full of pasta and gasped out, \"Oh my God, this is fantastic. I can't believe you made this, it tastes like a professional chef made it.\"\n\nI blushed a bit myself, but tried to play down the compliment while it still made me very happy and a bit proud that she liked it so much.\n\nShe wiped her mouth with her napkin and took a drink of wine. She smiled and asked me; \"Tell me, is there anything you can't do?\"\n\nI reddened even more and replied, \"Thanks for that Simone, but there's plenty I can't do. I'm just glad you like it.\"\n\n\"I love it, it's fantastic, I can't remember the last time I had anything this good.\" She replied back.\n\nWe continued with dinner, just talking about little things. Once finished, I told her to go into the living room and find something else to watch if she wanted to while I cleaned up. I loaded up the dishwasher and cleaned up a bit and went to join her.\n\nFor all the short time we've known each other, all we really talked about was work. But now, we talked about anything but work. She told me about growing up and school, then we talked about my time in the Navy and all the places I've been and things I've done. Basically we just talk about anything that came up, books, movies, whatever. I was having the time of my life.\n\nFinally, she finished the wine in her glass and asked me, \"Ah, what about girlfriends? You seeing anyone?\" \n\nI threw back the wine left in my glass and said, \"Nothing permanent or long term, if you know what I mean. There's a couple of girls I date on and off, but I never found one that I would date on a serious basis. It just seems to be too much of an effort and way too much drama.\" \n\n\"If you know what I mean.\" I said shrugging.\n\nSimone looked at me and nodded, \"Oh yeah.\" She snorted, \"Believe me, I know what you mean about the drama. It does tend to get old.\"\n\nShe looked at her watch, sighed, and said, \"Well, I guess I should head back, it's late.\"\n\nShe smiled at me and continued, \"Thanks so much for tonight Jason, I can't remember the last time I had this much fun.\"",
        "I smiled back and replied, \"Me to, sure much better than the usual.\"\n\nWe both got up and I walked her to the front door. I opened the door for her and then she turned to give me a hug and kissed me on the cheek saying, \"Again, thanks for the great time.\"\n\nI kissed her back and replied, \"The pleasure was all mine, it was nice to not to have to act like I was enjoying myself, when I wasn't.\"\n\nSimone looked at me and then caught her bottom lip between her teeth then smiled and said,\n\n\"You know you don't have to act with me, Steve. You don't have to say anything, and you don't have to do anything. Not a thing. Oh, maybe just whistle. You know how to whistle, don't you, Steve? You just put your lips together and... blow.\"\n\nI looked at her stunned a minute, she had said this in a 100% convincing Lauren Bacall imitation. She kissed me again and walked out the door, leaving me with a stupid look on my face. I watched her as she walked to her car, get in and drive off.\n\nI walked around the place cleaning up a little, turned the lights out, then went up to my bedroom. I laid down on my bed staring up at the ceiling going over everything that had happened tonight. As I fell asleep, the last thing I remembered was her face, the feel of her body against mine when she hugged me, the feel of her lips burning my cheek, and the massive erection I now had.\n\nFor the next 4 weeks I tried to impart as much knowledge to her as I could. As I said, she was very quick to pick up the work. During that time, we went out to lunch together quite a bit and had dinner a bunch of times either at my place, hers, or at a local diner. We were getting to be closer as time went by and I loved the time we spent together, I looked forward to seeing her every day. She had become a very close friend, the only problem was that after seeing her I usually ended having to take long showers to get rid of the effect she had on me. I could never figure out why I never asked her out. It crossed my mind a couple of times, but since we actually spent so much time together, I never asked.\n\nThe next week we were setting up to go out on her first install. The normal things, planning, shipping out equipment, tools, and parts. As this was Simone's first install, I tried to let her set everything up, letting her find her own way. She did a good job, made a couple of goofs, nothing major or anything that couldn't be fixed easily with a little advice. \n\nWe did the install and it went pretty much like clockwork. Simone had a good handle on all of it, and she listened when I showed her how to do things different to make it go easier next time. And the best thing was, she learned. She was gonna be a big help and I hope we could do a lot more of these trips together.\n\nThe last day of the install we got everything we were sending back together and ready to go, then made sure everything was running correctly. Once we were done with that, we went to the room we set up as an office/ workshop to use just as a place to store stuff, relax and get changed into working clothes. Simone went in first to get changed while I cleaned up some paperwork. I kinda lost track of time, but I was tired and just wanted to be done. So without thinking, forgetting Simone was still in the room getting cleaned up, I walked in and she was standing at a slight angle to me. She was naked from the waist up and her panties were partially pulled down. It appeared that she was wiping herself down before changing into street clothes as we had no shower facilities. I stopped stunned, knowing I should walk back out before she realized I was there, but I couldn't take my eyes off her. \n\nOh man, I thought to myself. She's got nice tits and a really cute ass. As I was thinking this she turned towards me to reach for something, but instead of the pussy I was expecting to see, what do I see but a 7\" cock and Simone is looking at me with scared look on her face.\n\nI stammered, \"I'm sorry, I thought you were done.\" I turned around and quickly went out the door.\n\nAfter a few minutes the door opened and Simone came out dressed. She was slightly red in the face and I felt bad because I had embarrassed her. As I walked past her to go get changed myself, I apologized again. I changed quickly and we drove back to the hotel. \n\nNormally we would be chatting back and forth about anything and everything. But today, there was nothing but silence in the car. We got back to the hotel and we took the elevator up to our rooms. Then I asked her if she wanted to go out to eat later.\n\nShe looked at me and said, \"I'm not sure, I'll give you a call later and let you know.\" And she went down to her room. I stood by my door and watched as she stopped by hers and she turned to look back at me, then she quickly went in as I looked away and went in mine.\n\nEntering the room, I tossed my backpack on the bed and got a beer out of the room fridge. I cracked it open and sucked down half of the bottle in one gulp, thinking of what had happened and what I saw. I flopped down in the chair and sucked down more beer, thinking about what I had found out.\n\nFirst off, I didn't give a rats ass that Simone was transgendered, I've known other girls that were and if it's what makes them happy and feel normal, who was I to judge. I think the main reason I was so freaked out was that I could have never imagine that she would be. She looked like any other woman out there. No, that's not true, she looked finer than a lot of women I've known and seen. I just could never imagine that she had a cock and was not a genetic woman.\n\nAs I said, I've known couple of other transgender women, but I could tell for the most part that they were originally men if you got close. With Simone, I couldn't. I just hope she wasn't mad at me for finding out. \n\nSimone's POV\n\nMan I'm tired and I'm glad this is done. She thought to herself as she was getting cleaned up and changed. As she peeled off her sweaty clothes, she wrinkled her nose at the smell coming off her clothes and herself. I can't wait to get back to the hotel and get cleaned up properly.\n\nShe cleaned herself off the best she could using some wet naps under her arms and breasts and then pulled down her panties part way so she could wipe around her cock.\n\nYes, cock. Simone was born male but realized in her early teens that she wasn't male, but should have really been female. When she realized this, she went to her parents about all of it, being very confused. Her parents were a little freaked out, but not upset, they loved her and so they tried to figure it all out together. They helped her become the women she is today, supporting her all they could when they realized that she was right, she should have been born a woman. Of course there was some problems along the way, but nothing that couldn't be handled.\n\nAs she turned and reached for another wet nap, she saw Jason standing there with his mouth open and a look of disbelief on his face. She heard him say, \"I'm sorry, I thought you were done.\" and he turned around and went out the door, quickly.\n\nSimone was mortified that he had saw her like that and finding out that she was transgendered. She had tears in her eyes as she finished dressing and wondering what she was going to do or say to him. By the look on his face he'll never want to be around me again she thought to herself. She really like him a lot and considered him her best friend. He had never really showed any romantic interest in her, as much as she wished he would, but treated her like an equal and friend.\n\nShe wiped the tears from her eyes and walked out to see him standing there waiting for her. There was a confused look on his face, at least that was how she read it, but he didn't say anything except to apologized again and walked past her to go get changed. He was out in a few minutes and ask her, \"Ready to go?\" She nodded yes and they headed for the car. The trip back to the hotel was quiet as she tried to think of a way to start a conversation but nothing came to mind.\n\nAs she went into her room, she looked over and saw Jason standing there in front of his door watching her walk to her room and as he saw her looking at him, he quickly opened the door and went in.\n\nHer eyes tearing again, she went into her room and threw her backpack across the room saying to the room and life in general, \"Damn, damn, damn, what am I going to do now?\" She sat down on the edge of her bed and took her boots off. \n\nShe quickly stripped and went in to take a shower. Once she stepped into the shower and started to wash herself, she thought of all the time she had spent with Jason since she had started working there. She remembered the first time they had dinner together and the feel of him as she hugged and kissed him when she left. She also remembered feeling his hard-on against her leg when she hugged him after she said the line from the movie they had watched. She was secretly pleased that she had that effect on him \n\nAs she remembered this, she started to stroke her cock, feeling it get harder and longer until it reached its full 7 inches. She leaned against the shower wall and continued to stroke herself faster and faster. And then, all of sudden, she started to come, hard. She continued to pump her cock, her legs going weak and her whole body shaking. She sprayed cum all over the shower wall wishing it was Jason pumping her cock instead of herself. She caught her breath, getting the feeling back in her legs as she slowly squeezed the last drops of cum out of her cock.\n\nHaving took the edge off, she completed showering and got out to dry off. Once finished, she dressed in a pair of jeans and a pullover shirt, both of which accented her body and finished drying her hair. A bit of perfume completed the task and she sat down to think about what to do.\n\n\"Should I say anything to him? Maybe just explain it all to him?\" She thought to herself.\n\nAs she thought about what to do, she looked around the room for some inspiration. As she looked, she spotted the bottle of wine she had brought and said aloud to herself. \"I might as well go and try to talk to him, that is if he'll listen.\"\n\nShe grabbed the wine and two glasses, then headed out the door walking down to his room. Once there, she lightly knocked on the door and waited for him to answer it.\n\nJason opened the door, saw Simone standing there and he blushed again. \"Hi, what's up?\" He stammered, not knowing what else to say.\n\nSimone held up the wine and asked in a soft voice, \"Can we talk?\"\n\n\"Ah, sure, come on in.\" Jason said, \"Excuse the mess, I haven't had a chance to clean anything up yet.\"\n\nShe sat down the glasses on the table and poured them both full. She handed him one and took the other one, then sat on the couch. After taking a long drink, she said with a little hesitation, \"Look Jay, I know you saw me this afternoon and I'd like to explain if you'd let me.\"\n\nShe took another drink and continued, her eyes tearing up a bit, \"I know you must be upset and I can understand if you want to work with someone else when we get back. I saw the shocked look on your face when you saw me and walked out.\"\n\nShe finished the glass of wine and slowly sat it on the table and finished with, \"I just hope we can still be friends and still work around each other with no problems.\" She wiped her eyes and looked at Jason and noticed he still had a stunned look on his face.\n\n\"That's it, he's going to tell me to get out.\" She thought to herself. She was about ready to burst into tears and run out of the room when Jason quickly stood and came over to her and knelt down in front of her where she was sitting and he gently took her hands.\n\nHe shook his head and said, \"No, no Simone, I don't want to stop being friends, and I don't want to stop working with you.\"\n\n\"Buttt\", she stammered, \"You looked so upset and stunned, I thought you were freaked out.\"\n\n\"No, I wasn't freaked, or at least not for the reason I think you mean.\" He said with some feeling, \"I was stunned because I couldn't believe a girl like you was transgendered. I'd never would have thought it in a million years, your so feminine and beautiful. I just couldn't believe that you were male a one time.\"\n\nHe smiled up at her still holding her hand and continued, \"And I was upset because I embarrassed you, not because I was mad or anything.\"\n\n\"Your my best friend, my only real friend if the truth be told.\" He said squeezing her hands, \"I don't know what I'd do without you.\" He stood up a little and kissed her lightly on the cheek before joining her on the couch.\n\nSimone sat there trying to absorb what she just heard. She looked at Jason and her tears just started flowing. She stood up and stammered out in shock, \"You're not upset?\"\n\nJason slowly shook his head no.\n\n\"You're not mad?\" She asked.\n\nJason slowly shook his head no again.\n\n\"I'm your best friend?\" She stammered even worse.\n\nJason slowly nodded, then stood saying, \"Yes, and actually when get right down to it, you're my only \"friend\", everyone else is just... someone I know.\"\n\nSimone ran over to him and wrapped her arms round him putting her head on his chest crying her eyes out.\n\nJason held her tightly to him while stroking her hair, quietly saying, \"Please Simone, please don't cry, I can't stand to see you so upset.\"\n\n\"I'm sorry,\" She cried \"I just can't stop.\" \"I was just so sure you where freaked out and wouldn't want to be around me anymore.\"\n\n\"Please Simone, just take deep breaths, and try to calm down.\" He said softly to her.\n\n\"Look,\" He continued while wiping the tears off her face, \"Just relax and we can talk about it when you ready.\" \n\nHe smiled at her and said, \"I really would like to know, if it makes you feel better.\" \n\nShe sniffed a bit and replied, \"Yeah, that sounds good to me, I really do want to tell you about it. I have wanted to for a while now, but I didn't know how.\"\n\nJason laughed saying, \"I can understand that, it's not something that would normally come up in a casual conversation.\" \"I mean, look what are you gonna say, \"Oh, by the way, I know we've only known each other for a little while, but hey, I've got a dick. You got any problems with that?\"\n\nShe looked at him stunned, she giggled and then started to really laugh. \"No, it's not something that normally comes up.\" \n\nJason handed her a glass of wine and sat down beside her saying, \"Well, the floor is yours, I'm all ears.\"\n\nSimone took a drink of wine and said; \"I guess the place to start was when I was back in middle school. Both my parents are professional types, my dad is an engineer and my mom worked as an, oh, freelance I guess would be the best way to describe it, draftsman. She worked from home while my dad worked for a local engineering company. I was homeschooled through high school.\"\n\nShe took another drink and looked at Jason seeing the look of interest he had, she sat the wine back down and continued. \"Starting in middle school, I just never felt right about myself. Like I said, I was homeschooled and there wasn't that many kids in neighborhood, just a couple of sisters my age that lived near to us who I used to play with. I enjoyed playing with them and one time they were playing dress up and they asked if I wanted to try too. Not really thinking about it, I said sure why not.\"\n\nShe took another drink and continued, \"When we had finished, we were looking in a mirror at the results and the reflection just showed three young girls. My one friend turned to me and said, \"You sure look like a cute girl.\" \n\n\"As I looked at my reflection,\" I said to myself, \"You know she's right, I do.\"\n\n\"Is that when you started thinking of yourself more like a girl than a guy?\" Jason asked.\n\n\"Oh, more or less I guess,\" She answered. \"After that, I can remember looking into a mirror in my room and thinking to myself saying, \"You really don't look like a boy.\" I wasn't the least bit manly looking, I thought I looked more like girl. Now granted, I was still young, but it just seemed right when I thought of myself as a girl.\"\n\n\"When I was alone in my room,\" She continued, \"I tried to make myself look more like a girl to see what I'd look like. I'd roll up a pair of socks and put them under my shirt to see what I'd look like with breast's. Then I'd borrow some of my mom's make-up when she was down in her office and see if I could make myself up.\"\n\nShe laughed, finished her glass of wine and refilled it. \"Kinda silly now, but it was the only way I could try to see what I'd look like.\"\n\n\"So after a time, I figured I really needed to sort this all out.\" She went on. \"Being homeschooled and since my mom worked form home, she was always around when I had questions or problems and needed help trying to figure something out. So finally I went to her and asked her if we could talk. She asked me what the problem was, and hemming and hawing a bit, I asked her, \"Mom, do you think maybe that I'm really supposed to be a girl?\"\n\nShe looked at me with a confused look on her face and asked me, \"What do you mean?\" \n\n\"What I mean is, I don't think I'm a really a boy, I look and feel like a girl. And I don't know what it means or what to do.\" I told her.\n\nShe took another drink of wine and said to Jason; \"I can still remember getting tears in my eyes when I said this, I was just so frustrated and confused.\" \n\nJason looked at her and took her hand in his. He said to her, \"You don't have to finish if it's upsetting you, I'd like to know but I don't have to if you don't want to continue.\"\n\nShe looked at me and smiled while squeezing my hand and said; \"No, I'll finish, I'd like to tell you all of it.\"\n\nJason smiled at her and said simply, \"Thank you.\"\n\nShe got a confused look on her face and asked, \"Thank you?\"\n\n\"Yes, thank you.\" I replied, \"One for thinking that much of me and two, for trusting me enough to tell me. That means a lot to me.\" Simone got a strange look on her face and just leaned over and kissed him, then continued on with the story.\n\nShe took a deep breath and continued, \"Well, remember I said that my parents were professionals, and I was taught by my father, an engineer, that there is an answer to everything, as long as you look long enough, and my mother, being a draftsman, taught me attention to details.\"\n\n\"So my mother looked at me a little confused and asked, \"What do you mean? What makes you think you're a girl?\"\n\n\"Mom,\" I sighed, \"For the longest time, when I look into the mirror, I don't see a boy, I see a girl. I'm not interested in anything for the most part that boys are normally interested in or doing. And I just don't feel like a boy.\"\n\nShe looked at me and said, \"Look honey, I think you'll have to be a little more specific than that. Tell me all about it and give me the reasons you feel this way.\"\n\nSimone drank off some more of her wine and said to me, \"See what I mean? It was so typical of her, be specific, lay it out, explain as best you can. So I laid it all out for her, telling her everything I just told you, expanding on details where I could.\" \n\nFinally she said to me, \"Well, I see that you have put a lot of thought into this, and I can understand how your feeling, but I don't see why you think you look like a girl. You look like a boy to me.\"\n\nI looked at her and said, \"That's because I'm acting and dressed like a boy.\"\n\nShe looked closely at me, shook her head and asked, \"Acting, dressed like a boy? I'm sorry hon, I'm afraid I still don't get your meaning.\"\n\nI was getting a bit frustrated that I couldn't get my point across, then I had an idea and said to her, \"Just wait a minute, I'll be right back and then I can tell you.\"\n\nMom smiled and said, \"OK honey, just come back when you're ready, I'll be here waiting.\"\n\n\"So,\" She continued to me, \"The easiest way I could figure out to prove it to her, was to show her.\"\n\n\"I went back up to my room and put on a pair of real short cut-off jeans and a tight T-shirt, then stuffed my socks in my shirt so I had breasts. I looked in the mirror and sorta messed my hair up a little so it looked different and then since all I had in the room was some lip gloss that I hadn't had a chance to put back yet, I put that on and looked in the mirror again. Then, since I didn't have any more make-up, I pinched my cheeks a little like I saw a girl do in a movie once to add some more color to my face.\"",
        "She took another drink, looked at me, and laughed a bit, and said, \"I know, a little silly now, but at that time I was only twelve and it was the best I could come up with.\"\n\nJason smiled back at her and told her, \"Well, sometimes the only way to prove something is to do it. I find that it usually works though. So, what happen next?\"\n\n\"Satisfied that it was the best I could come up with on short notice,\" She went on, \"I went back to my mother's office and stepped into the doorway. She was turned to her computer working on something and I said softly, \"Mom, I think I figured out a way to explain it to you.\"\n\n\"Good,\" She said saving the file she was working on, \"I glad you figured out how.\" She picked up a bottle of water and took a drink as she swiveled her chair around to face me.\n\nAs she saw me standing in the doorway, she stood and the bottle dropped from her hand. With an incredulous look on her face, sputtered out, \"Holy Crap.\" She just looked at me trying to say something, anything, but nothing came out. She sat back down, stunned.\n\n\"Well, what do you think now?\" I asked her in the most girlish voice I could, \"Does this explain it to you?\"\n\nI walked over to her and picked up the water bottle she dropped and handed it back to her. She finished off what was left in the bottle after dropping it, set the bottle back on her desk.\n\nShe looked at me and took my hand gently in hers pulling me to her. She kissed my forehead and said shaking her head chuckling a little, \"I don't know if it explains everything hon, but it certainly makes your point.\"\n\n\"I really don't know what to say or do about this.\" She continued, \"This is hardly my area of expertise. I think we'll have to wait until your father comes home tonight and talk it over together.\" \n\nThat made me a little nervous and I asked, \"What do you think he'll say? Is he going to be mad, or go crazy over this?\"\n\n\"I really don't have a clue hon.\" She answered me honestly shaking her head, \"I guess we'll just have to see what happens after we talk.\" \n\n\"But, don't be afraid.\" She continued quickly, \"I'll be there and you know your father is fairly open minded about most things. However, I have a feeling he'll just be as clueless as I am right now.\"\n\n\"I think the best thing is for you to stay upstairs until I talked to him.\" She said slowly thinking on it a bit. \"Then, since it worked so well to explain it to me, you come down dressed like you are now. However, I think it would be better if you let me help you some to fine tune your appearance.\"\n\n\"What does that mean?\" I asked with tears forming in my eyes, \"Do I look that bad?\"\n\nMom took hold of both my hands and said, \"No baby, you don't look bad. You did the best you could with what you had.\" She smiled at me, \"I however, have more resources and experience in dressing up than you do.\" \n\n\"So no, you don't look bad,\" She laughed, \"But with my help, you'll look even better.\"\n\nShe stood up, smiled at me again and took my hand, \"Come upstairs with me and let me give you some girl 101 lessons.\"\n\nMom took me upstairs and started to finesse what I had already done. She looked at me and asked, \"What did you use for these?\" She asked pointing to her breasts.\n\nI lifted my shirt up to show her and the socks fell out. \"Oops.\" I said as they fell to the floor. \"Rolled up socks.\"\n\nMom laughed and said, \"I think we can do a little better than that.\"\n\nMy mom wasn't that big of a woman, so she was able to find a bra that sort of fit me, loosely, but it would do for this. I put it on and filled the cups with my socks and put my shirt back on.\n\nThen she took hold of my chin and she moved my face back and forth looking at me. She them applied a little make-up, just eye-shadow, mascara and some more lip gloss to match. As she applied the make-up, she talked to me about everything I was feeling and going through so she was ready when she talked to my dad. Them using a brush and some gel, she fixed my hair up. She backed up a little to survey her work and with a look disbelief, she turned me around so I could see myself in her mirror to see what she had done. \n\nSimone took another drink, finishing up the wine in her glass and smiled at me as she said.\n\n\"Jason, when I looked in the mirror I was stunned, all I saw was a girl staring back at me. I had tried with my attempts to look more like the girl I thought I was, but my mom really did it. I couldn't have been more shocked. No matter what, I knew then that I was supposed to be a girl. I couldn't see a thing of the boy I was.\"\n\n\"My mom was behind me and she put a hand on my shoulder saying, \"There, perfect, just the right amount for a young girl. I certainly wouldn't want my son to look like a tramp.\"\n\nSimone started laughing as she looked at Jason, \"My mom got this stunned look on her face as she realized what she said. Then she started laughing sitting back down on her bed, repeating, \"My son looking like a tramp.\" \n\nShe finally got a hold of herself and hugged me to her saying, \"I love you baby, your beautiful and don't worry, we'll figure this all out.\" \n\nAs she said this, we heard the front door close and my dad shout, \"I'm home.\" Mom told me to stay upstairs until she called for me, she kissed me and went downstairs. I stood at the top of the stairs so I could hear what was going on.\"\n\nMy mom went downstairs and saw my dad going through the mail he had brought in with him.\n\nShe kissed him and said, \"Hi hon, I missed you. How was your day?\"\n\nHe hugged her, kissing her back, \"I missed you too, I sure would have rather been here than at work that's for sure.\"\n\n\"That bad again?\" She asked.\n\n\"No, not really I guess,\" He answered smiling. \"At least there wasn't a body count and you didn't get a call to bail me out.\"\n\nShe patted him on the cheek and laughed while saying, \"Oh, my poor baby. Let me try to make it better.\"\n\nShe went into the kitchen and got a couple of beers out the fridge, opened them and brought them back out.\n\n\"Here,\" She said handing him a beer, \"Try this.\"\n\nHe drank down about a third of the bottle, sighed and said, \"Thanks babe, that really tastes good.\" He smiled at her knowing her all too well and asked, \"Okay, what's up with this?\"\n\nAs he took another drink she said, \"Ah look, we need to talk about something.\"\n\nHe smiled and asked, \"Do we need to talk?\" \"Or,\" He asked, making his voice go lower, \"Do we need to talk?\"\n\nShe took a drink of her own beer, sighed a little and said, \"Well, it's a bit of both maybe, say like seventy to thirty.\"\n\n\"Ok,\" He answered, \"Why don't you just tell me and then we'll go from there.\"\n\nShe took another drink and said, \"Okay, Uh... I had an interesting conversation with our son today, I was working down in the office and he asked me if we could talk about something. I said sure and then he asked me, \"Mom, do you think I should have really been a girl?\"\n\nHer husband looked a little stunned as she took another drink and proceeded to tell him everything they talked about. Then she asked him, \"Well, what do you think about this?' \"I told him this wasn't exactly my area of expertise and that we'd talk when you got home.\"\n\nHe sat there a minute, then drank down the rest of the beer and asked her, \"You want another, I know I do.\" \n\nShe shook her head no and he said, \"Ok, wait one.\" He went back to the kitchen and got another beer and came back out. He stood there staring at nothing for a bit, took a drink and asked her, \"All right, since you talked to him, do you think he's right?\"  \n\n\"It's not my area either you know,\" He continued. \"I really don't know anything more about it other then what I've read here and there in magazines and the papers or saw on TV.\" \n\nShe looked at him and answered, \"Yeah, I think maybe he's right.\" \n\nShe continued, \"Look, I talked to him a while about it, you know what an intelligent kid he is and that he normally doesn't talk about something until he has it down in his mind. I asked him to explain it to me and he tried, then he asked if he could have a few minutes before he could finish. I said okay, he went out and when he came back, he more or less convinced me about it enough that I think we just have to look into it farther and get a professional opinion on it.\"\n\nHe look at her and asked, \"Well, what did he say to convince you?\"\n\nShe finished off her beer and said, \"I think it would be better if he came down and told you himself. It's how and what convinced me.\"\n\n\"Ok,\" He nodded agreeing, \"That's sound reasonable to me.\"\n\nI heard my mom call to me, so I looked at myself in the mirror real quick making sure everything was alright and walked slowly downstairs.\n\nAs I got to the bottom, I saw my dad talking to my mom and his back was to me. I took a deep breath and said in soft girlish voice, \"Daddy?\"\n\nMy dad was taking a drink of beer as he turned around and seeing me dressed as a girl said, \"Holy Fuck!\" \n\nSince he was swallowing at the same time he said it, he start choking and coughing. I ran over to him worried and asked him if he was alright.\n\nSimone look at me and said, \"Now I was really worried, I had never heard my father say anything like that before.\" \n\nShe smiled at me and giggled, \"I'm sure he did, it's just he never had around me.\" She took another drink of wine and continued her story.\n\nOnce he cleared his throat, he stood back to see me better. He pointed at me, still not saying anything, and motioned for me to turn around so he could see all of me. Then he slowly came up to me and then reached out and gripped both of my shoulders tightly shaking his head.\n\nNow I was worried, I thought he was going to freak out on me or something, but as he was holding me he turned his head to my mother and said, \"I can see how he convinced you.\"\n\nHe pulled me into a hug, kissed me on the top of my head and said, \"I love you kid, we'll figure this out one way or another.\" I hugged him back and I knew everything was going to be okay.\n\nHe looked at my mom again asking, \"Is this all him? Or did you help?\"\n\nMy mom smiled and said, \"Mostly him, I just helped him a little to show how it was done. A little girl 101 if you know what I mean.\"\n\nMy dad laughed at that and replied, \"Yeah, well if anyone knows girl 101 it would be you.\" He look at me again, then said to her, \"I'm glad he had some help and didn't end up looking like a tramp.\"\n\nHe thought about what he said and grimaced, then chuckled. Then he asked what my mom and me what we were laughing about.\n\nHe let go of me, flopped down on the couch and drained off the rest of his beer in one long drink.\n\nHe looked closely at me again and frowned, shaking his head said. \"Damn it all, now I got to worry about this too.\"\n\nMy mom looked concerned and I was scared again thinking something was going to happen.\n\nShe asked him, \"What's the matter?\"\n\nMy dad looked at me, then my mom and said, \"What's the matter? Look at him. Look how cute he is! You know what's going to happen when he goes completely girl? Now I'm going to have put up with all the boy's that are going to be sniffing around once he gets older. Daughters are what the Gods give to fathers to punish them for when they were younger. I have to live in fear she'll hook up with someone like me when I was her age.\"\n\nBoth my mother and me looked at each other and then mom said, \"Get him.\" We both jumped him on the couch tickling him until he begged us to stop.\n\nSimone finished the wine in her glass and set it down and looked at me and said, \"So to make a long story short, that's pretty much it. Mom and dad did some research and found out what to do and who to see. They were informed that, yes I had a gender identity disorder and when I was able, I started taking hormones. After that, I had some work done on my breast's, just before I went to college. And as you saw, I still have my penis because I wasn't too crazy to have the reassignment surgery after I read about it.\" \n\nShe smiled and me and continued, \"Maybe someday, but right now I happy with what I am and how I look, so I don't worry about it.\"\n\nI looked at her and said. \"Thank you Simone, I'm really happy you told it to me. Can I assume everything went alright at home then after that?\" I split up the remaining wine between our glasses and asked her, \"You know, when you did, I don't know the right term,\" I laughed, shrugged and said, \"Go girl.\"\n\nShe smiled at him, \"Once we found out everything, I started dressing and acting as a girl. The basic idea was, \"If you're sure, you might as well do it now.\" \"As I was homeschooled, there wasn't any problems on a day to day basis. At home, there wasn't any problems at all really, my mom got a daughter to do girl things with.\" \n\n\"I thought originally my dad was somewhat disappointed.\" She continued, \"You know, he didn't have a son anymore to do \"guy\" things with.\" She laughed and went on, \"But that wasn't really a big problem as my dad was always into cars, bikes, and stuff, so as I still liked that, we got along and still did things together.\"\n\nShe looked thoughtful for a second and continued, \"I guess that's why I went into engineering, I was surrounded by it by both my mom and dad, it was just natural.\"\n\nI smiled at her, \"Well, that's good, you're a natural at it, you understand the complicated things, but to my mind, what's better is that you also understand the practical side of it.\"\n\nShe smiled at me and asked, \"The practical side, what's do you mean?\"\n\nI smiled back at her, replying, \"What I mean is that you understand that you have to learn the nuts and bolts aspect first, before you can start doing the engineering side. I've always been of the mind that how can you design or upgrade anything if you don't know how it works and that no matter what the \"book\" says, it don't ever seem to work that way.\"\n\n\"As I've told people time and time again, I've read the book to the engines and you know what? They've never learned it.\" \n\nSimone started to laugh and stood up saying, \"Well my story is over and the wine is gone, what do we do now?\"\n\nI looked at my watch and said, \"Well, if can give me a little bit to take a shower and get dressed, I think we should go to diner before all this wine eats my stomach up.\"\n\nShe nodded yes while saying, \"Sounds like a plan to me, how's about a half an hour sound?\" \n\nShe got a shit eating grin on her face and continued, \"Would that give you enough time to make yourself beautiful?\"\n\nI laughed and without thinking, answered back, \"I guess, not as gorgeous as you, but I think I can manage at least above sub-human.\"\n\nShe got a amazed look on her face and the next thing I know, she's hugging me, then she kissed me, this time on the lips. Then said in a low voice, \"Thank you for listening to my story Jay, you're the best.\" \"I'll see you in 30.\"\n\nBefore I knew it, she was out the door and stood there with my lips burning were she kissed me. All I could think about was how she looked when I came in on her dressing and the feel of her breasts against me when she just hugged me. As I remembered what she looked like semi-dressed, my cock started to harden. \n\nI shook my head to clear it, then went in to take my shower and take care of my hard-on, asking myself once again just what the hell I was feeling about her.\n\nOver the next few months we worked a few more jobs together and became closer friends and still the thoughts I had about her where confusing me more and more. \n\nDuring that time I dated a couple of girls I knew off and on, but every time we had sex, the thoughts of how it would be if it was Simone instead of the girl I with at the time intruded in on my thoughts. It was getting so bad that I almost called one of the girls I was with by Simone's name when I orgasmed.\n\nIt finally came to a head one day as I was getting ready for a date with a girl named Tracy I had met in one of the bars we both frequented. We had gone out a few times and had a good time, both during the date and after. There was some problems, as she was the jealous type and she asked me why I was with Simone all the time. I explained that we were just close friends and partners in work so I didn't give it much more thought.\n\nAfter I got dressed, I was in the living room surfing through the TV channels just pass the time waiting on Tracy to get here. The doorbell rang and I looked at the clock. \"I guess she's early.\" I thought to myself as I got up to answer the door.\n\nAs I opened the door, there was Simone standing there with a roll of blueprints. \n\n\"Hey Simone,\" I said smiling, greeting her, \"What's happening and what's with the long face?\"\n\n\"Hi Jason.\" She replied. \"I was going over the prints for the next job and I got stuck on one the specs, it just doesn't make any sense. I was wondering if you could take a quick look and see if you understand it. If something is wrong, it may delay the job.\"\n\nBefore I could answer her, she looked at me seeing how I was dressed and asked, \"I'm not holding you up with anything, am I? I can come back later.\"\n\nI smiled at her and replied, \"No, I've got time. I've got a date but she's not due for half hour or so. We might not get everything settled, but we can see if there's a real problem first and then figure out what to do. Let's see the prints and show me what the problem is.\" \n\nShe unrolled the print on the kitchen table and pointed to a section that showed how two sections would merge on the fuel system for the generator.\n\n\"See this here? It doesn't look right to me. I can't figure out if it's supposed to be like that or it's something wrong with the print. It's not at all like the other ones we've done.\"\n\nI took a look at the print and saw what see was talking about. It wasn't wrong for the type of install we were doing, but I could see where she would be slightly confused about it. The print wasn't real clear, I knew what it meant as I've done it before, but someone who hadn't would get confused. I had brought this up before, but they never fixed the drawing.\n\nI smiled at her and said, \"No, there's no problem, it supposed to be that way on this type of fuel system. The problem is that the drawing isn't clear and I've told them they need to fix it, but I guess they still haven't. We don't do this type all that often and since this is your first time, it can be confusing.\"\n\nShe smiled and sighed in relief, then said, \"I glad there isn't a problem. Do you have the time just to give me the highlights?\" \n\n\"I know you've got a date,\" She continued with what sounded like disappointment in the tone of her voice, \"I don't want to hold you up.\"\n\n\"No, I've got time, not a lot, but enough to hit the high points.\" I told her. \"We can go over it more completely in work.\"\n\nAs we sat at the table, I explained the differences and why there were there. Soon the doorbell rang again and I saw it was Tracy. \n\n\"Don't roll up the print just yet.\" I told her, \"I want to show you one more thing before I have to go.\"\n\nI opened the door and Tracy came in, she stopped as she saw Simone and with some heat said, \"I thought we had a date?\" \"What's she doing here?\" She asked with jealously in her voice.\n\nI answered her with some heat, \"Yes we have a date, and we were just going over some problems with a job we'll be doing in a few weeks.\" \"Look, let's talk for a few minutes in the other room.\" \n\nI turned to Simone and to her, \"Don't roll up the prints yet, I'll be right back.\"\n\nI took Tracy by the elbow and lead her into the living room. Once we got there, I started before she could. \n\n\"Look Tracy, this jealously crap needs to stop.\" I told her with some heat. \"It's getting old.\" \"We were going over some stuff while I had a few minutes waiting for you. And if you noticed, before you started in on me, we were just about done.\"\n\n\"It's getting old?\" She shot back to me. \"Well it's getting old with me also, every time I see you, you're with her. Even when we're supposed to be going out. Like tonight.\"",
        "\"Are you sleeping with her too?\" She asked sarcastically.\n\nI looked at her thinking to myself, \"Enough of this bullshit\" and said, \"Fine, I got a solution to the problem. The door is right in the other room, don't let it hit you in the ass on the way out.\"\n\n\"Simone is my best friend and partner. And no, I'm not sleeping with her. Not that would be a bad thing or any of your business if I was.\" I continued with scorn in my voice.\n\nI lead her back to the door and as she opened it, half in and half out of it, she yelled at me, \"Well, I hope you two will be happy together.\" \n\nThen she turned to Simone, looked at her scathingly and said, \"Your welcome to him. Bitch.\" She slammed the door closed, rattling the glass.\n\nI turned to apologize to her, \"Simone, I'm sorry about that. I really don't know what to say. I never wanted you to get in the middle of this.\"\n\nAs looked at her I could see she was really upset, there was tears running down her cheeks.\n\nI went quickly over to her, put a hand on her shoulder and wiped the tears off her cheek with my other hand, repeating how sorry I was. She looked up at me silently shaking her head then said, \"No Jason, I'm the one that's sorry, if I wasn't over here when she showed up, none of this would happen.\"\n\n\"Now look.\" I told her. \"This is not your fault, it was that asshole of a women that was jealous of any and every one she saw me around.\" \n\n\"To tell you the truth,\" I continued smiling, \"I'm glad it happened, I was over her bullshit anyhow. \"Your my friend and if had to choose between you and anyone else it would be you.\" I hugged her to me and she rested her head on my shoulder sobbing gently. \n\n\"Hey,\" I said, \"None of that crying. But, since you ruined my date,\" I continued with mock anger, \"I figure you can at least let me take you out to dinner to make up for it. Since I'm dressed and all.\"\n\nI could feel her start to laugh, her body shaking against mine. More importantly I could feel her breast's moving against my chest as she laughed. As her breasts pushed against me, I wonder just how they would feel if we were naked and as I thought, my dick started to harden. I quickly released her and held her away from me so she couldn't feel my hard-on.\n\nI smiled at her and asked, \"Well, how about it?\"\n\nSimone smiled back at me and said, \"Yes, on one condition, you let me pay. No matter what happened, it was my being here that made this all happen.\"\n\nI agreed and we went to a local diner we both liked and after we finished, I drove her back to my place. Once there I asked her if she would like to come in for a glass of wine or two and a movie. She agreed and we went in. \n\nI was in the mood for Bogie and Bacall, so I put in \"To Have And Have Not\". I think I've mentioned how much I love this movie, especially Lauren Bacall. I've always have had a thing for her, especially in her younger days. I loved her voice and how she acts. I think I've also mentioned how much Simone reminded me of her.\n\nAs the movie started, Simone started to laugh while saying, \"This one again? How many copies of this have you worn out?\"\n\nI laughed with her and replied, \"I never wore any one out, but I did upgrade it to Blu-ray.\"\n\nWe watched the movie and drank the wine, then after the movie was over she looked at her watch and said, \"I had a wonderful time tonight Jay, thank you.\"\n\nWe stood up and I walked her to the door. Once we reach it, she turned and hugged me like she normally did and I was waiting for the kiss on the cheek that normally followed. However this time, instead of a kiss on the cheek, she took head in both hands and kissed me on the lips. Then she said quietly, \"You are the best man I know and I'm glad you're my friend. I'll see you later\"\n\nI stammered back to her, \"Ah sure, I'll see you then.\"\n\nShe smiled gently at me and stoked my cheek softly with one hand, then with a grin she quoted from the movie again, \"You know you don't have to act with me, Steve. You don't have to say anything, and you don't have to do anything. Not a thing. Oh, maybe just whistle. You know how to whistle, don't you, Steve? You just put your lips together and... blow.\" \n\nThe next thing I knew she was gone.\n\nI stood there for a minute and went into the kitchen to clean up. Just to describe how fucked up I was from all this, I ended up putting the leftover wine in the sink and the dirty glasses in the fridge.\n\nAs I realized what I did, I corrected that and went to bed thinking about her and everything that happened.\n\nThe next morning I woke up and wandered into the kitchen to make coffee. While waiting for it to be done, I thought on all that happened last night, trying to figure out my feelings about Simone and the situation in general. I thought about the things we've done together and how much we enjoyed each other's company no matter what we were doing.\n\nThen I thought about how her slightest touch or when she kissed me affected me. I couldn't remember the last time a woman affected me like that. Oh, I don't mean getting a hard-on, hell, just about any women that good looking would do that. No, I mean the feelings that went along with it.\n\nI poured a cup of coffee and stood there sipping on it. Suddenly the doorbell rang and as I walked to the door, I could see it was Simone. I opened the door and she stood there dressed in a tight shirt that showed all kind of skin and cleavage. She was also wearing a skimpy pair of cut-off jean shorts that showed the bulge of her cock.\n\nDamn, she looked fine like that, it was making me immediately hard. Which was kind of hard to hide since I was still wearing the cut-off sweat pants I normally sleep in. My cock was tenting the shorts like crazy.\n\n\"Morning Simone, I said, \"What's up?\"\n\n\"Morning Jay,\" She said in a low husky Lauren Bacall voice. \"What's up? Apparently you are.\" she continued as she reached down to stroke my cock through my shorts.\n\n\"I kind of thought I still owed you for last night,\" She added with a sultry smile, \"And I thought I'd pay up.\"\n\nShe took the coffee from me and set in on the table, then put both hands on my chest proceeded to make me back up into the living room. Once we reached the couch, she grabbed the waist band of my shorts and pulled them down and pushed me back to sit on the couch.\n\nShe stood there and peeled off her top, her tits bouncing a bit and proceeded to work her shorts off exposing her own hard-on to me. I stared in wonder at how beautiful she was from her tits down to her hard cock.\n\nWith a grin she knelt between my legs and started to stroke my cock a few times, then taking my cock in her mouth. She first took in just the head and gave it a good long suck, then the entire length making my cock all sloppy wet. While working her mouth up and down my cock, her other hand was around my balls massaging them. \n\nShe stopped massaging my balls to slip her hand under me and started lightly stroking my asshole with one finger, while the other hand held my cock as she sucked me. She was driving me crazy with the want of her, I never wanted her to stop touching me and I would do anything as long as she kept doing what she was doing.\n\nShe stroked the sensitive spot behind my balls, and then wetting her finger, she went back to playing with my ass and then she slowly pushed her finger in me. She continue to suck on my cock and finger fuck me till I couldn't control myself anymore.\n\nShe stopped sucking on me for a moment, and looked up at me smiling and asked, \"You like that, don't you baby? You want me to keep it up don't you?\" \n\n\"Yesss..\" I said breathlessly.\n\n\"What will you do if I keep going?\" She asked while stroking a finger lightly up my cock.\n\n\"Anything, I'll do anything you ask\" I groaned in reply.\n\n\"Then please be in love with me.\" She pled and then went back to my cock. \n\nI watched as she lowered her mouth back to the head of my cock and I felt her hot breath on it as she licked the precum that was leaking out of me, then took the entire length of my hard-on down her throat.\n\n\"Oh God...Simone...I'm...so fucking close. I can't hold back...please, yes...please...don't stop...,\"\n\nAs she sensed I was close to cuming, she increased the speed of the blowjob, and when she felt my cock start to swell in preparation, she buried her finger in my ass and sucked my cock all the way down.\n\nI couldn't hold back anymore, my cum flooded her mouth, with some dripping onto her chin. She swallowed, massaging my cock to get every drop.\n\n\"My God Simone,\" I gasped, \"I do love you. And always will.\"\n\nShe reached out her tongue and washed the head of my dick clean. She then smiled at me as she started kissing her way up to my face. Her cock was dragging across my body burning a path along it as her face came closer to mine.\n\nI suddenly woke up, wondering what the fuck had just happen and discovering a massive load of cum in my shorts. I was shocked as I couldn't remember the last time I had a wet dream or one of that intensity.\n\nI jumped into the shower to get rid of the residue of the dream, going over it in my mind, wondering just what this all meant. Then it dawned on me, I loved her. I loved Simone. It didn't matter to me she had a cock, hell it didn't matter if she was two headed. I loved her and I wouldn't know what I'd do without her in my life.\n\nI shook my head in disbelief, laughing at myself and said to the room, \"You know, if I was any fucking dumber they'd have to get me a keeper.\"\n\nNow I just had to figure out what to do about it. Did or would she love me also? I felt there was something there, but love? \n\nI got dressed and went into the kitchen to make my coffee and when I poured myself a cup, I glanced at the door, remembering the dream. My cock got hard instantly.\n\nA couple of weeks later we had a long weekend coming up and at quitting time, Simone and myself walked out to our cars together like normal and we talked about what we were going to do over the weekend. We said goodbye to each other and we headed home.\n\nI got up in the morning and just laid there in bed thinking about the dream I had about Simone, again. I needed to find something to do about that, it seemed that all I did was dream about her. I knew I felt something for her. Was it love? Or was it just lust? I asked myself. Or was it just that I enjoyed being with her that much? After all, we spent so much time together, hell I see her more than if we were dating. I was getting to the point that maybe I should find that keeper. Why couldn't I figure this out and what to do about it.\n\nI had some things to do that day, the typical upkeep kind of things, like laundry, grocery shopping, etc. The normal stuff I did on a Saturday. I got everything done fairly fast and relaxed the rest of the day.\n\nI had finished diner and was watching TV when my phone started ringing. I picked it up and I saw that it was Simone. By the tone in her voice I could tell she was upset about something and asked her what was wrong.\n\n\"Jason I'm over at the pub,\" She said, \"And I've got a problem.\" \"I was there with a couple of friends and was talking with a guy I met there. He asked me to dance and I told him okay, but once we were dancing, he was a bit buzzed and got a little handsy and before I could stop him, he reached down found that I had a penis and started freaking out.\"\n\n\"He started calling me all kinds of names, cursing me out.\" She continued with a catch in her voice. \"I got away from there and I'm outside right now but I'm scared of what might happen if he finds me again.\"\n\n\"Could you come and get me? Please?\" She begged with a sob, \"I'm really scared.\"\n\nI could tell by the tone of her voice that she was really scared, so I told her, \"Yeah, sure hon. Look, just stay outside or better yet, see if my friend Steve, the bouncer, is working tonight. Tell him that I'm coming for you. I'll be there soon, just calm down and try to think. I'll take care of it.\"\n\n\"Oh Jason,\" She sobbed, \"Thank you, thank you. Please hurry, I'm really scared.\" she repeated. \n\n\"Hold on babe,\" I told her, \"I'll be there soon.\"\n\nI put on my boots and got into my SUV, burning rubber as I took off. I thought back on some of the things I had read when I was trying to learn more about her. I remembered some of the horror stories I had read about which made me push the accelerator harder.\n\nI had just turned into the parking lot and saw Simone standing there with some guy walking towards her yelling at her. She was backing up as I screeched to a stop and jumped out of the car and ran over to her.\n\nAs I neared her, the asshole swung back like going to hit her. I grabbed the guy and spun him around saying, \"Hey, asshole, why don't you try that on me?\" I proceeded to throw him away from her and put myself between us. \n\nThe guy looked at me and slurred drunkenly, \"Who are you? You the faggots boyfriend?\" He sneered. He looked around me at Simone and yelled at her, \"Well freak? Is he?\"\n\nHe started for me, but I grabbed him when he neared me and twisted his arm up behind his back. Then I proceeded to put pressure on a nerve point that really hurts when pressed, a martial artist friend of mine from my Navy days taught me, and slammed his face into the building.\n\nI was really pissed now and said to him, \"Enough asshole, apologize to the lady and they won't find you under a fucking car in the morning.\" I put more pressure on the nerve, he groaned, and started to curse me out. However, in the position I had him, there was very little he could do but mouth off. \n\nThe door to the bar opened and my friend Steve walked out, he surveyed the situation, apparently someone had told him what was going on, and he asked me grinning' \"Yo man, everything under control?\"\n\n\"Yeah dude,\" I replied grinning back, \"Just giving an asshole a lesson in civility.\" \n\nHe laughed and said, \"Sounds good to me, but do me a favor and try not to break this one, OK? I hate the paperwork.\"\n\n\"Sure, no problem.\" I laughed back. I turned back and I repeated my order to asshole to apologize to Simone. \n\nHe told me gasping, \"Fuck you faggot lover.\"\n\nI put more pressure to the point and twisted his arm higher making him groan again. Then smiling to him, \"I utterly despise bad manners. Do you know what that means? Then let me teach you.\" I twisted his arm up as far as it could go and told him, \"I'm going to rip your fucking arm off and beat you with the bloody end.\"\n\nSteve snorted out a laugh and said to the jerkoff I was trying to teach manners to, \"Dude, I'd do what he's telling you,\" He laughed and continued, \"That is unless you do want him to rip your arm off before he beats you with it.\"\n\nI bounced the guy off the wall once more and yelled this time, \"Apologize to her, RIGHT FUCKING NOW.\"\n\nThe guy groaned and said, \"I'm sorry.\" \n\n\"I can't fucking hear you.\" I told him. I pulled his arm up higher and turned him around, then said, \"Now say it again to her and loud enough so she can hear you.\"\n\nHe groaned again and said louder, \"I'm sorry.\" \n\nI twisted his arm one more time and said so only he could hear me, \"If I ever see you around here again, or hear you being discourteous to someone, let alone raising your hand to them, no matter who they are, I will rip out your fucking throat and piss in the hole. Do you fucking understand me?\" He groaned out a \"yes sir\" and I let the guy loose and pushed him away as he dropped to the ground holding his shoulder.\n\nI went quickly over to Simone and took her in my arms holding her close to me. I could still feel her shaking as I said to her, \"It's over now, your safe.\" I stroked her head trying to calm her down as I held her and continued, \"Don't worry, I'll never let anyone hurt you.\" I kissed the top of her head and told her to get in the SUV and I'd take her home.\n\nShe looked up at me and asked, \"Jay, could I stay at your place tonight? I'm really too scared right now to be alone.\"\n\n\"Sure.\" I agreed, \"No problem what so ever, \"Mi Casa, Su Casa'\" as they say. I've got some stuff you can wear for bed that should fit you, shorts and T-shirt. Nothing fancy, but comfortable.\" I laughed.\n\nShe grinned at me with relief and said, \"Thank you, you're the best. I don't know what I'd do without you.\"\n\n\"Well, I hope we never have to find out. I don't know what I'd do without you in my life.\" I replied as we got into the car.\n\nShe looked at me stunned, then grabbed me and kissed me. This kiss wasn't like any of the other times she kissed me, this kiss was full of passion and tongue.\n\nWe got back to the house and I let her in. I told her that she could use the spare room to get cleaned up and changed so she was comfortable. \"There's towels and stuff in the linen closet in the bathroom and a spare tooth brush and other stuff if you want to use it in the cabinet.\"\n\n\"Just make yourself at home.\" I told her. \"I'll get us some wine and munchies while you're getting sorted out and we can relax.\"\n\nShe kissed me again and said, \"Thanks again, I'll be right out.\"\n\nI went into my bedroom to get cleaned up myself and once I finished, I made my way to the kitchen for the wine and snacks. As I passed the spare room I could hear the shower running so I knew I some time to get things done.\n\nAs I got the stuff ready, cutting up some cheese and pepperoni, throwing some crackers on the plate and opened the wine. I thought back on what happened and started getting myself wound up all over again. \n\n\"The balls on that bastard.\" I said to myself, \"He was lucky I didn't rip his arm off and shove it up his ass.\" I needed to calm down before I really worked myself up again, so I poured two glasses of wine and got a tray to put everything on. \n\nAs I was putting everything on the tray, I said to myself, \"Who did that asshole think he was insulting and cursing out my Simone.\" Or at least I thought I said it to myself, I had really said it out loud.\n\nSimone had finished her shower, changed into the shorts and tee, then walked into the kitchen just in time to hear me say it. She stopped, stunned at what I said and the tone in which I said it, then she came up behind me and wrapped her arms around me her hands flat of my chest as she laid her head against my back and hugged me to her.\n\nAs I felt her against me, her tits mashed against my back and her hands on my chest, my cock started to grow as I remembered the dream from other night.\n\nShe turned me around, looked into my eyes and asked, \"Your Simone?\"\n\nI looked deep into her eyes and replied, \"Yes, your my friend and I don't let people hurt my friends.\" \n\nThere was what I thought maybe slight bit of disappointment in her eyes as I said this, like maybe I was going to say something else. But, it disappeared as fast as it had showed up.\n\nThis was what I told her, but in my mind I was screaming that I loved her and wanted her to be with me, now and forever. But as I wasn't sure how she take it if I told her, I just kept my mouth shut, again. \n\nYes, I'll be looking for a keeper, because I have to be the most stupidest guy on the face of the earth not to say something to her or realize that she wanted me to.\n\nWe went into the living room and I set down the tray telling her to pick out a movie. She picked out a comedy saying to me, \"I really need something funny right now.\"\n\nI laughed and agreed that was a good idea. So we sat on the couch, drinking the wine and eating the snacks. \n\nHalf way through the movie, she moved closer against me and laid her head on my shoulder. She sat that way for a bit and finally said, \"Jay, I just wanted to thank you again for getting me out of trouble tonight. I was scared to death of what was going to happen.\"\n\nShe paused for a moment and continued, \"I've known some girls like me that were beat up badly in similar situations, including a close friend of mine. It's something that happens more often than most people realize.\" ",
        "I took hold of her hand where she had it sitting on me leg and brought it to my lips and kissed it. Then said, \"I know it does, I've read about it myself. I have never understood why people have to such assholes to other people just cause they're different.\"\n\nBy now I was totally relaxed, both from the wine and coming down from the adrenaline rush from the altercation. \n\nSimone smiled at me saying, \"Well, I just wanted to say thank you again. You say it was no big deal, but it was to me.\"\n\nLike I said, I was relaxed, so what I said next came out without thinking about it. \"It's okay Simone, it's just one of those things you do when you love someone.\"\n\nI could feel her stiffen beside me as I realized what I had said and thinking to myself, \"What do I do now?\"\n\nShe pulled her hand from mine and lightly took my chin to turn it towards her and asked me in scared little girl voice, \"You love me?\" \n\n\"You mean you really love me?\" She stammered out.\n\nI was taken aback for a second, I hadn't meant to say that to her. But by the tone of her voice, I knew I had to come right out and tell her how I really felt about her. I didn't want to be without her another day.\n\nI turned to her and brought her to me cradling her in my arms, \"Yes Simone, I love you, I really do. I love you so much it scares me a little. I thought I did after the thing with my ex, but I didn't know what to do or say to you. I wasn't sure how you'd take it. But, after tonight, when I saw that guy come after you, something in me snapped and I knew I had to protect you no matter what because I did love you more than I've ever felt about anyone before.\"\n\nI hugged her to me tightly as I continued, \"I want you in my life, no, I need you in my life now and always. I realized tonight, finally, I didn't know what I do if you were gone.\"\n\nWith tears in her eyes she pulled back from me and stood up in front of me. She looked at me for a few seconds, then with shaking hands, proceeded to strip, first taking off her top, then the shorts. Then she stood there fully revealed to me. She was more beautiful than any other women I've ever known from her eyes to her gorgeous cock.\n\nShe looked at me and said, \"Jason, look at me. This is who and what I am. If you do love me, you'll have to take me just like this. I really hope you can, because I feel the same way about you, I fell in love with you from almost the first time we met. But I didn't know if you could be or want to be with a girl like me.\"\n\nI stood up and took her my arms and kissed her. I could feel her cock harden against me and I found I loved the feel of it. As I held her, my cock also hardened, I stopped kissing her and back away a bit and took her hand and laid it against my hard-on. I asked her, \"Does this feel like I can accept you?\"\n\nShe looked into my eyes, smiled and nodded yes.\n\nThen knowing what I needed to do next, I dropped to my knees and gently took her cock in my hand. I kissed the head of it and swiped my tongue over it tasting the drop of pre-cum that was there. I took her in my mouth and bobbed up and down on her cock a couple of times. I looked up at her, smiled, and asked, \"Does that feel like I accept you just like this, and with all that goes along with it?\"\n\nShe looked at me with both tears and love in her eyes and sobbed out, \"Yes, Yes it does.\" \"Jason, I love you so much and I want to be with you now and always too.\"\n\n\"Well, that's good,\" I replied, \"I'm glad I just have to take you just like this. I don't know if I could take it if you were any more beautiful.\"\n\nShe looked at me her mouth slightly opened, then laughed at me. She pulled me up and hugged me hard, then backed off and with a shit eating grin said, \"You know Steve, you're not very hard to figure, only at times. Sometimes I know exactly what you're going to say. Most of the time. The other times... the other times, you're just a stinker.\" Then she kissed me long and hard, her tongue swirling around in my mouth.\n\nShe again sounded just like Lauren Bacall when she said the same line from the movie. \n\nShe stopped kissing me and we just held each other a moment, then to my amazement, just as my dream the other day, she put both hands on my chest pushed me back onto the couch. She grabbed the waist band of my shorts and pulled them off me then she pulled my shirt off.\n\nShe smiled at me and said, \"Hey you saw me naked, it's only fair that see what I'm getting out this deal.\"\n\nAs I stared in wonder at how beautiful she was, she sat down next to me and laid her head on my shoulder and gently took hold of my cock, squeezing and stroking it. As she slid her hand up, a big drop of pre-cum oozed out the tip and she rubbed it with her thumb spreading it around my cock head. Then she brought her thumb up and sucked on it to taste my pre-cum.\n\nShe turned to me and breathed into my ear, \"Umm, you taste good.\" Then she licked my ear and said, \"I love you so much.\"\n\nI turned my head and kissed her and said, \"I love you too.\" I slowly ran my hand down from her tits to her hip. Then continued, \"You are so beautiful. I can't believe how lucky I am to have you in my life.\"\n\nShe then laid across my lap and cuddled up me and began to kiss and lick me starting at my chest and working her way down. When she reached my cock, she took in just the head of it and giving it a good long suck, then suddenly she slid down the entire length making my cock all sloppy wet. She then slowly started working her mouth up and down my cock while her other hand was squeezing my balls, massaging them. \n\nShe looked up at me, her mouth grinning around my cock, then as she had in my dream, she stopped massaging my balls and slipped her hand under me and started lightly stroking the sensitive spot behind my balls and then she started lightly stroking her finger between my asshole and balls, when she reach my asshole and slowly rubbed around my asshole. \n\nI couldn't understand how this happening almost exactly like my dream, but right now, I just did not fucking care one bit as long as she kept it up. She was driving me crazy, and I never wanted her to stop touching me and I would do anything as long as she kept doing what she was doing.\n\nShe stopped sucking on me for a moment, and looked up at me and smiled and as if she could read my mind she asked, \"You like that, don't you? You want me to keep it up don't you?\" \n\n\"Yesss..\" I said breathlessly. \"Oh Gods,\" I thought to myself, \"Please, please don't let this be a dream again.\"\n\n\"What will you do if I keep going?\" She asked.\n\n\"Anything, I'll do anything you ask\" I groaned in reply.\n\nShe smiled, kissed the head of my cock and said, \"Good, I'll remember you said that.\"\n\nI watched as she lowered her mouth back on my cock and I felt her hot breath on it as she licked the pre-cum that was leaking out of me, then took the entire length of my hard-on down her throat, and proceeded to give me the best blowjob I had ever had or heard about.\n\nAs Simone sucked on me, I gently grasped the one breast I could reach, and slowly caressed it, massaging her nipple. I stopped, licked my thumb to wet it a proceeded to circle her nipple, which drew and low \"Ummmm\" form her.\n\nAs she was laying there with her head in my lap, I let my hand slip slowly down her stomach and then gently took hold off her cock, stroking it from base to tip. I could feel her shudder as I stoked her, so I stopped for a second to lick my palm to give it some lube, and went back to jerking her off. \n\nAs I had never done this before, other than to my own, I figured I would just do to her what I liked done. From the results I got from her I guess I made the right decision. As I stroked her up and down, I started to twist my hand back and forth, this was something that always drove me right up a wall and was sure to make me cum in no time flat.\n\nHer moans started to be a little more frequent as I continued stroking her and from what she was doing to me, I knew I wasn't going to last much longer myself.\n\n\"Oh God...Simone...I'm...so fucking close. I can't hold back much longer...please, yes...please...don't stop...,\"\n\nShe stopped for a second to say to me. \"Good baby, I don't want you to hold back, I want your cum, all of it.\" Then she sucked on her finger to wet it and looked up at me and asked, \"Okay?\" \n\nI nodded yes knowing what she wanted to do, other girls had did it and I found that I did enjoy it. She reached under me lightly stoking my asshole then slowly pushed her finger. As soon as she realized I really was alright with it, she slowly stroked her finger in and out of my ass as she increased the speed of the blowjob. \n\nI started stroking her faster as I wanted her to cum with me. As I felt my cock start to swell in preparation I exclaimed to her \"I'm just about there baby, I'm going to pop. Please Simone, cum with me.\"\n\nI felt her bury her finger in my ass and start to massage my prostate. I just couldn't hold back anymore and with a deep moan, I started to cum. As my cum flooded her mouth, I felt her start to shake and her cock grew harder and hotter as the first rope of her cum spurted out of the end. I continued to stroke her, filling my hand with her cum.\n\nAs I looked down at her I could see some of my cum was leaking onto her chin. I watched as she swallowed, massaging my cock to get every drop. As she came off my cock and looked up at me she smiled and slowly pulled her finger from my ass. As she smiled at me, I opened my hand so she could see the handful of her cum, then, to her surprise, I looked at my hand and licked her cum up off it cleaning my hand.\n\nShe looked at me with surprise as I brought her up to kiss her, our tongues tasting each other's cum in our mouths.\n\nShe broke our kiss to say, \"That was so hot watching you lick up my cum that way, no one has ever done that with me before.\"\n\nI smiled back at her and replied, \"Well, I've never done it before, but as I love you, and you swallowed mine, it seemed the thing to do.\" I grinned and continued, \"Besides, you were delicious, only next time, I like to get it from the source instead of second hand as it were.\"\n\nShe looked at me stunned as what I said dawned on her, the said in a low sultry voice, \"You were delicious also, you tasted so good I doubt I ever get tired of it.\" She leered at me saying, \"And you can get mine directly any time you want.\" \n\nShe sat up next to me again and I split the last of the wine between our glasses. We sat there drinking the wine with her leaned up against me, both of us just savoring the moment.\n\nAs I held her to me, I started caressing her wherever I could reach, her side, breast, leg, feeling her shiver as I stroked her. She then started doing the same with too me. \n\nI reached down and slowly started to massage her cock and balls, a little precum oozed out of the tip and I used that as a bit of lube to swirl my thumb around her head. She laid her head back and moaned, then she reached down to do the same to my cock.\n\nAs we sat there massaging each other's cocks, she said, \"Jason?\n\n\"Yeah babe.\" I replied.\n\n\"Do you remember what you promised?\" She asked. \"I believe you said \"Anything, I'll do anything you ask\"\n\n\"Yes, I remember saying that.\" I replied with a smile. \"What do you want?\"\n\nShe got up from the couch and sat in my lap, moving back and forth so my cock slipped between her ass cheeks. My cock got automatically hard the minute she ground her ass against my cock. She put both hands on the back of the couch and bent down and kissed me, then whispered in my ear, \"I want you to take me to bed and make love to me.\" She kissed and licked my ear, making me shudder as she sat back looking at me her lower lip caught between her teeth in a little girl look.\n\nBeing the smart ass I am, I frowned a little, and said, \"Oh is that all, I thought you were going to want me to move a couch or something for you.\"\n\nShe looked at me stunned for a second, then started to laugh. She hugged me to her and said, \"God, your such a smart ass, you suck so bad.\" \"You're lucky I love you so much.\"\n\nI kissed her back and said, \"Yes, I'll make love to you, anytime or anyplace and as many times as you want.\"\n\nShe looked at me, then said with lust and want in her voice, \"Jason, please take me to bed and make love to me, now. I want you to make me yours and I want to make you mine.\"\n\nStill holding her, I stood up holding her to me and carried her to my, now our, bedroom.\n\nI laid her on the bed, then got in to lay next to her facing each other. We both started to stroke and kiss each other. I then had her lay back as I laid between her legs. I started kissing and licking the curve of her neck, breasts, stomach, slowly making my way to her perfect, sweet cock. My fingertips followed my kisses down her neck, over her breasts and stomach and then pausing just over her cock to kiss the head and then started down both of her legs to her toes kissing and licking them also.\n\nI start to lick my way back up to her cock as I held her legs apart, laying between them to kiss and nibble on any part of her I can reach. Everyplace but her cock, except to just brush it softly with my lips or tongue tip. A soft moan escaped her parted lips as I continue licking and kissing. She spread her legs wider, giving me complete access to her. \n\nThis time as I got back up to her cock, instead of just kissing it, I hold it in my hand and start to wetly lick her cock head. I looked up to see her head laid back and said to her, \"I love you.\"\n\nShe had a pretty, cute cock, this is the only way I could describe it, I never thought about how one looked, after all this is the closest I've ever been to one. It was about 6 or 7 inches long from balls to tip, maybe a little over an inch or so wide, she was circumcised and her cock and balls were totally hairless except for a little patch of bush above it.\n\nI started licking her cock like a stick of candy, then took her cock fully in my mouth. As her cock wasn't that big, it didn't cause me to have any problems taking it all. As my lips slid down to the base of her cock, Simone moaned and reared back pushing her cock deep in my mouth.\n\nAs when I was jerking her off, since I had never done this before either, I just did what I liked to have done to me. I started to slowly bob up and down on her cock, sucking the head as I got to it. She grabbed the back of my head and I heard her whispered gasp, \"That's it baby\" as my head bobbed up and down. I kept at his for a little while longer, just so I could hear her moan my name, then as I came up to her head I slipped off her cock and started to lick and suck her balls, first sucking on one then the other.\n\n\"Oh my God, yes, yes, that feels so fucking good.\" She gasped out. \"I love to have my balls sucked and played with.\"\n\nAfter giving her balls one more good lick, I went back to sucking her cock. Only this time, I held her shaft with my thumb and forefinger wrapped around it and as I to sucked her cock, I stroked her with my hand as I sucked her. Then I started massaging her balls gently with my other hand. She had thrown her legs wider as I felt her cock twitch and jerk in my mouth, and she was oozing out pre-cum like crazy. But before I would let her cum there was a couple of more things I wanted to try. As I slipped off her cock this time, I licked down and around her balls and then taking her legs in both hands spread them wider and started to lick her ass, working my way to her asshole. Her asshole, like the rest of her was hairless also, just a cute pink pucker, I started to circle it with my tongue making smaller circles until I pushed the tip of my tongue in her hole, fucking it.\n\nThe minute my tongue made contact with it, Simone let out a gasp of pleasure and moaned, \"Yes baby tongue fuck my ass, please it feels so fucking hot, please don't stop.\" \n\nI continued to lick and tongue her ass as I reach up and started to stroke her cock again. Once I had it good and wet, I traded off my tongue for my finger. Using all the saliva from tonguing and sucking her, I slowly started to work my finger over and in her hole, just putting in the tip of it to loosen her up. I finally started to put my finger in deeper with each stroke till had it in up to the knuckle. \n\nSimone was gasping and shaking now, very close to coming, but I wasn't done yet. With my finger half-way in her ass, I went back to sucking her cock. I then started to stroke my finger in and out of her in time with my mouth going up and down on her cock. When I went all the way down her cock, I pushed my finger in, and when I came up to suck on her head, I pulled my finger almost all the way out. Moaning, she tells me how close she is to shooting her load and how bad she wants to shoot down my throat.\n\nSo, since she wants it that bad, I start speeding up taking her into my mouth entirely, the head of her cock tickling the back of my throat. I feel her stiffen and her cock swelling so I knew she was going to cum any second. So I speed up sucking her and buried my finger in her ass fully until I found her prostate, I pressed and firmly massaged it. As I massaged her prostate, I buried her cock in my throat as far as it would go once again. \n\nHer hands tighten on my head, holding me in place as she screamed out my name and tells me she cuming. The entire block could probably hear her. \n\n\"Oh Jason ... My God... Jason... I'm cuming so fucking hard... Damn, I didn't know it could be like this!!\" She groaned. \"It's never been like this with anyone else. I love you so much.\"\n\nShe pushed her hips up as she started cumming, fucking my face. I could feel the hot, thick spurts of her cum shooting in my mouth and down my throat. After the last spurt, I pulled up so just the tip was in my mouth and gently stroked her cock and massaged her balls to get every last drop of her delicious cum.\n\nSimone was still shaking as I moved from between her legs, giving her cock, then tits one last kiss before I laid beside her, gathering her in my arms to hold and stroke her to calm her down.\n\nAs I held her I told her how much I loved her and how much she meant to me. Once she calmed down enough, she kissed me and said, \"Now Jason, please, make love to me baby, make me yours.\"\n\nI reached over to the night stand, l opened the drawer and got out a small tube of lube I had there. \n\nSimone had laid back, legs spread wide saying, \"I want you make love to me this way so I can see you.\"\n\nThat was fine by me and I squirted some of the lube on my fingertips. I started to massage the lube into her tight little asshole. First one finger, then two of them, stopping only to add a little more lube. Once done, I applied a healthy amount of lube on my own throbbing dick which was now like a steel rod in anticipation of what was to come. \n\nShe laid back, spread her legs a little wider, looked at me with lust all over her face and pleaded, \"Now Jason, please I want your cock in me, make me yours, I want you in me so fucking bad.\"\n\nI knelt between her legs and started to rub my cock around her pucker, pushing against the opening a little each time. Once I thought she was relaxed enough, I put my head at her hole and slowly pushed into her. As she was totally lubed up and I'm not some circus freak with a horse sized cock, I slipped into her slowly and steadily while she pushed down on me as I pushed in.\n\nWe met when I was buried in her completely, staying that way to let her get used to it. With a nod from her I started stroking in and out, going balls deep with every stroke. It was the most incredible feeling I ever felt, she was so warm and very tight. I carefully pumped in and out of her with a steady pace. I wrap my arms around her and brought her up to me to hold her as she wrapped her arms and legs around me. In the height of my joy I whispered, \"I love you,\" in her ear. ",
        "Having finally joined our bodies together, my cock fully in her, It was causing me to lose control. Between what we had just did and now this, I tried to fight it off but the feeling in my balls told me I wasn't going last long. \"Simone your making me want to cum so badly, I don't think I can hold on much longer.\" I whispered to her. \n\n\"Please baby, do it. I have been wanting this for so long. Cum inside of me, make me yours.\" She responded. \n\nWhen I came, it felt like the world had stopped spinning for a split second. I came so hard and much that I thought I was going to pass out as I felt myself emptying out my thick load of cum inside her.\n\nAs I continued to pump in and out of her, she suddenly shuddered and wrapped her legs around me tighter, pulling me close. As she tightened her legs around me she groaned and I could feel her cumming once again, feeling it between us bathing both our stomachs. \n\nOnce we both had stopped shaking, we laid in each other's arms. I leaned over and said in her ear, \"I love you now, I'll love you thousand years from now, as long as your with me I don't care what happens. As long as your with me, my life is perfect. Your my soul-mate and we belong together always.\"\n\nSimone looked at me with tears in her eyes, took my head in both hands, kissed me deeply and said, \"I don't ever want to leave you, I want to wake up with you every morning and be happy. Because this is the first time I my life I've been this happy. Your my soul-mate and we do belong together.\"\n\nWe laid in each other's arms talking and laughing for an while until we fell asleep.\n\nThe sun shining through the window woke me up the next morning, I turned my head to see Simone laying against me, one leg and her arm laying over me. As I looked at her, I wondered once again about my luck to have this amazing women in love with me and me with her. I can't remember the last time I felt this good or happy. As I watched her sleep, I thought on what had happen last night and was amazed how willing I was to do something I had never considered before. The more I thought about what we had done, the more I realized just how much I loved sucking her cock and eating her cum. It felt so right, I don't think I would have done it if she was a guy. She looked like a woman, felt like one, smelled like one, and acted like one. The only difference between her and some other women is that she had cock and balls. But, I was happy and it just seemed so normal. I laughed to myself thinking, I guess I found my \"Keeper\" in more ways than one.\n\nAs I laid there watching her, she moved slightly turning so that she was uncovered exposing herself to me. One of her breasts was visible, as was her cock and it was as hard and as cute as it was last night. Smiling slightly, I decided that it was time for her to wake up. I gently moved the sheet off her all the way exposing her the rest of the way to me. I smiled as she was revealed to me, she was just so beautiful, so I slowly moved down until I could reach her cock. Once there I slowly took her cock in my mouth to suck on it. \n\nI slowly sucked her all the way down as Simone stirred, moaning a little in her sleep and I proceeded to start bobbing my head slowly up and down her shaft. I watched as her eyes flickered open with just a moments confusion, then she saw what was happening and she smiled. As she smiled at me, I swirled my tongue around the head of her cock, smiling back at her around her cock. I stopped sucking her for a second to say, \"Good morning beautiful.\" And went back to sucking her and reached down to massage her balls.\n\nShe groaned again as I started massaging her and gasped out, \"Morning lover.\" Then she laid back to enjoy what I was doing.\n\nI continued sucking her and massaging her balls until I could feel her cock swell and she said, \"Baby, I'm gonna cum.\"\n\nI slip my lips up until just her head was in my mouth and started sucking while jacking her with my other hand. \n\nSimone groaned, arching her back and started shooting her cum into my mouth. I tried to keep up with her, but some leaked out from my lips. I slowly squeezed the base of her cock and slid my hand up to milk her cock into my mouth so I wouldn't miss any. \n\nShe slowly laid back on the bed with a small satisfied grin on her face. I crawled up to her and as I got up level with her, she reached out to wipe some cum off my cheek. She stuck her finger in her mouth to suck it clean and said, \"Good morning again lover.\"\n\nI kissed her and said \"Morning angel, sleep alright?\" \n\n\"Ummmmm.. Yes I did.\" She replied, \"Though the waking up was better than the dream I had.\"\n\nShe snuggled up next to me and hugged me again. She reached down, and lightly stroked my cock, and said,\" Looks like you could use a little help here though.\" And she started to stroke my cock. \n\nI leaned back against the head board and moaned out, \"I guess you're right, after all, you're the engineer and I'm just the high priced mechanic so you probably know more than I do.\"\n\nShe smiled at me and said back, \"Just remember that you said that. And since you're so honest about things this morning about who's smarter, you get a bonus.\"\n\nShe moved down until her head was in my lap and started to suck me, well. She bobbed her head up and down in a slow and steady pace. He stopped for a minute, licked her finger and then went back to sucking me and slipped her hand under me and started lightly stroking my asshole with one finger.\n\nI've always loved it when a women played with ass, it feels so good. So good that when I used to jack-off, I'd play with my own ass. It was good, but not as good as this.\n\n\"Oh Gods.. please... yes, please..\" I moaned.\n\n\"What baby? \"Do you like my finger at your asshole while I suck your cock?\" she said softly. What do you want?...Say it.\"\n\n\"Yes... please...\" I moaned.\n\n\"Please what?\" she asked. \"Please finger fuck your asshole while I suck you?\" \"Just ask me nice,\" She continued, \"and I will.\"\n\n\"Yes...please finger fuck my ass while you suck me...Oh Gods please don't stop, that feels so damn good..\" I told her, trying not to sound like I was begging her. \n\nBut that's a lie. I was begging her like my life depended it. I didn't want her to stop, I wanted her mouth on my cock and her finger deep in my ass.\n\nShe started to rub her finger around my asshole, working it in and around the hole, just putting the tip of her finger in my ass. By now I'm shuddering and squirming as she played with my asshole.\n\nShe lowered her head back on my cock and sucked me deep, still rubbing her finger around and in me, her lips sliding up and down my cock. Finally, as her lips reached the base of my cock, she slowly pushed her finger into my ass until it was in as far as her finger could reach. Then she started stroking her finger in and out of me in time with her lips going up and down on my cock. \n\nAs she stroked her finger in and out of me, every time she'd push in I would try to push myself farther on her hand, to get her finger deeper in my ass. As she slid it deep into me, I could feel her finger hit my prostate and I didn't know how much more I could take before I shot a load in her mouth. I wanted it to last, but it just felt so damn good. \n\nBy the way I was squirming and gasping every time she fingered me, she could tell that he couldn't take much more. She took her mouth off my cock and pushed her finger deep in my ass one more time. Then with just the tip of her finger lightly pressing on it, she started massaging my prostate while stroking my cock faster and faster. Pre-cum was running out of my cock slicking up both me and her hand as she stroked me.\n\nI could feel my cock swell and jerk and know I am going to cum. I grit my teeth, trying to hold back as her hand slides up and down one last time.. Moaning, I tell her how close I am to shooting. She looked up at me, smiling and she takes me into her mouth entirely, sucking deep, and massaging my prostate. I started to cum hard as I felt her lips around my cock, filling her mouth and throat with my cum. She swallowed again and again, pumping my cock and massaging my prostate milking my cock for every last drop of cum.\n\nI drop back to the bed, shaking and shivering as she pumps my cock, and she fingers my ass one last time. She wiped the glob of cum off the tip of my cock she forced out of me and sucked her finger dry.\n\nShe laid down on top of me and kissed me deeply saying, \"Morning to you to lover.\"\n\nI can taste myself on her lips as I kiss her. I hug her to me and ask her, \"Well now, since we've had our morning exercise, I think we deserve a good meal\" \"How does waffles and bacon sound to you?\" I believe I have all the stuff to make them.\" \"Or, we can just go out if you want, your decision.\"\n\nShe got a thoughtful look on her face and said, \"Why don't we take a quick shower, then we can just go out to the diner.\" She smiled and continued, \"That way I show off my new boyfriend.\"\n\n\"Sounds like a plan to me.\" I agreed, \"I'd like to show off my beautiful girlfriend also.\"\n\nAs we got out of bed and stood, she said \"Ohh, aren't you sweet, but, I'm not that beautiful.\"\n\nI looked at her, smiled and said. \"Well, that's it, I'm gonna be friggin rich, I figured out the thing men have trying to figure out since beginning of time.\" \n\nShe looked at me confused, and asked \"Huh? What are you talking about??\"\n\nI looked her straight in the eye, and replied, \"Every woman I've ever meet, couldn't take a simple compliment. It has long been thought by men it was many things that could cause it, but the general consensus is that it's the pussy. But, I've finally figured it out, it's tits. Since that's the thing both you and other women have in common, it has to be tits.\"\n\nI stood there naked with my arms crossed, with a shit-eating grin, nodding my head that I was right.\n\nSimone looked at me like I was a few beers short of a six-pack and started laughing. Trying to get it out, she said' \"You are the craziest man I ever meet, you know that?\"\n\nShe came up to me and put her arms around me holding her body close to mine. \"But, I guess I can put up with it since I love you so much.\"\n\nI smiled at her and said, \"I love you too. I figure as long as I can make you laugh, you'll never get that mad at me if I do something lunatic.\"\n\n\"Ok mister funny man,\" She said, \"You go get the shower started while I use the other bathroom for a minute.\"\n\n\"Yes dear,\" I replied humbly, \"Anything you say dear.\" And as I turned to walk into the bathroom, she swatted me on the ass.\n\nAs I turned to look at her and say something, she had already turned and went to the other bathroom muttering to herself.\n\nShe came back and we jump into the shower. As the water cascaded down on us I said, \"Let me.\"\n\nI reached for the shampoo and gently washed her hair, then I rinsed her off and grabbed the soap and start to wash her. I don't know why, but I've always loved doing this. She was standing in front of me with her back to me, my cock was hard and laying between her gorgeous ass cheeks as I started to wash her back and then, reaching around I washed her front, running my hands up to cup and wash her breasts, my fingers letting her soapy nipples slid between them. She has such beautiful breasts, they are just the right size and I love the way her nipples harden up when I stroke them. \n\nShe turned around in my arms and rub herself up and down me, getting me all soapy and said, \"My turn.\" and she reached for the shampoo. She washed my hair, massaging my scalp, and then rinsed me off and grabbed the soap. She start to wash me, rubbing her hands all over my body, she then put her arms around me and start rubbing my shoulders and neck with her soapy hands. \n\nShe start working her way down, her hands sliding all over me, and as she reached my ass, she ran her hands between my cheeks, with one soapy finger she circled my asshole and push it in and out, smiling at me and saying, \"Need for everything to be clean, don't we?\"\n\nI laughed and said, \"Sure, wash it as much as you want, or anything else you want.\"\n\nShe start washing the front of me, starting on my chest, her hands lingered on my nipples, rubbing and tweaking them like I did to her, which drove me up the wall, I don't know why, but it does. She continue down, washing my cock and balls with her soapy hands, pulling and stroking them. She felt my cock throb in her hands and she said \"Not yet lover boy, breakfast first.\n\nThen smiling she worked her way down my legs and then back up to my cock. As her hands lingered on me, just barely touching me as she stroked me, making me even harder, and playing with the hair around my cock and balls. She looked thoughtful, then she said, \"You know, I shave, maybe you should for me too, I love the feel of your skin against mine.\" Then she laughed and said, \"And I won't get stray hairs between my teeth.\"\n\nI did normally trim the hair back some when I took a shower, I did have a lot of hair and it wouldn't bother me to get rid of it if it made her happy, but the thought of me using a razor on myself made me a little apprehensive, I mean hell, I normally cut myself shaving, I don't know if I trust myself to do this without causing serious damage. I mean, with my luck, I'd end up slipping and cutting some off, I don't have all that much to begin with and I don't want to make it any shorter. But, the idea is appealing and if it made her happy, what the hell. So I say to her, \"Ok, but I don't trust myself with the razor, can you do it for me?\" \n\nShe smiled a wicked little smile and asked if I had a new razor. I said, \"Yes, in the cabinet.\" \n\nShe got out of the shower and got the razor. She stroked my cock to get it all soapy, and she started to shave me, getting all the hair off the shaft, then started on my balls. When she was finished, we rinse each other off and got out of the shower. We dried each other and got dressed to go out.\n\nWe went out to my SUV and I opened the door for her and took her hand to help her in. She smiled at me, touched my face and said, \"I see chivalry isn't dead.\"\n\n\"Well, on life support I guess,\" I answer back smiling, \"But I only do this for the people I love. Also it gives another chance to touch you. Call it a perk.\"\n\nShe laughed and said, \"Aren't you ever going to grow up?\n\n\"Never, ever,\" I replied back, \"I tell you what though, if you ever catch acting my real age, you have my permission to whap me upside the head.\"\n\nI got in and we started driving to the diner. As we were driving we chatted about mostly little things, more to pass the time and to enjoy each other's company. Once we got there, I got out and opened her door for her and took her hand. She grinned at me and intertwined her fingers with mine as we walked to the door. \n\nAs it was just after ten, the place wasn't real crowded yet and the waitress told us to sit anywhere, so we took a booth.\n\nWe ordered and as we waited for our food, we talked to pass the time planning the rest of the day. The night I already had planned and Simone reddened slightly when I said that leering just bit.\n\n\"Your incorrigible.\" She said. Then lowering her voice said, \"However, I am looking forward to it.\" She licked her lips, with the tip of her tongue and then bit her lower lip, leering back at me.\n\nNow, I don't know why, but anytime a girl does that, I melt. I reached out to put my hand over hers and grinned a her, then said, \"Me too.\"\n\nShe laughed again saying, \"We better stop before I jump you right here. It would probably break a half dozen or so health laws.\"\n\nOur food came and we ate not saying much more until we were finished. As we sat afterwards, we talked for a while and I asked her she had anything planned for next weekend.\n\nShe put her hand to her mouth and said, \"Oh man, with all that's happen this weekend, I forgot. My parents are coming down next weekend to visit.\"\n\n\"That's great,' I said back, \"I seem to remember you saying that you haven't seen them since you started here.\"\n\nShe got a wistful look and replied, \" Yeah, and I little bit more than that. I'm looking forward to seeing them.\"\n\n\"Well then,\" I continued, \"I've got an idea.\" \"The reason I was asking is that there's a car and bike show not too far from here and I was going to ask you if you wanted to go. Since you said your dad was all into that, why don't you asked them if they'd like to come with us.\"\n\nSimone looked thoughtful and asked, \"Are you sure you wouldn't mind them being with us?\"\n\n\"Not a bit.\" I told her, \"From all you've told me about them, they seem like wonderful people and I think I'd get along with your dad fine from all you told me about him.\"\n\nThen he added nervously, \"Uh, that is if you think they'll be alright with me being with you. I really would like to meet them though, if it's alright with you. I plan to be with you for long, long time.\"\n\nShe looked at me with some wonder on her face, then shook her head and said, \"Jason, your too perfect to be real you know that? No other guy I was ever with ever wanted to meet them. It was like they felt we had something to hide.\"\n\nI looked into her beautiful eyes and told her, \"That's because they meant nothing, as I told you last night, I know your my soul-mate, I love you and I want to be in every part of your life, no matter what.\"\n\nShe smiled, then continued, \"Then yes, I think all that's a great idea. I know my dad would love it and so would I. Also, I think my parents will love you as much as I do.\"\n\nWe pulled up to the house, parked and as we got out and starting walking up to house, Simone smacked me on the back of my head. I looked at her stunned and said, \"What's that for??\"\n\nWith the shit-eating grin she gets when she's up to something, she said laughing, \"Just doing what I was told. You said if you ever started acting like a grown up, I should smack you. You were, so I did.\" She continued to walk into the house, though she was walking a little faster.\n\nI laughed and then I chased after her to pick her up in my arms and kissed her. We spent the rest of the day relaxing, watching TV and talking about a million little things. \n\nInstead of going out, I made dinner and we ate in. Then, we went into the living room and I asked her if she wanted some wine, or maybe a beer.\n\nShe asked for wine and I told her to find something to watch as I got it. I opened a bottle of wine and got a glass for her and a beer for me. Once back in the living room, I handed her the wine and sat down next her as she curled up leaning next to me. She had picked out a chick-flic and it was one I had seen it before and it wasn't too bad. Nothing blew up, but there was a car chase and it was funny, so I could put up with it.\n\nThe movie over, I stood up and picked up her wine glass and asked, \"Another babe?\n\nShe said yes and I walked into the kitchen to fill her glass and get myself another beer. I noticed that I would have to go shopping tomorrow for some more wine, beer and some other things. Now that we were together, I'd have to make sure I stocked more wine than I usually did. I came back and sat down handing her the wine. \n\n\"We'll have to run out and stock up on some more food and wine tomorrow,\" I said, \"I'm almost out.\" \"It's a good thing we got tomorrow off, it gives us another day to enjoy ourselves.\"\n\nShe nodded and said, \"OK, that's good, I need to stop by my place and get a change of clothes. Or I'll have to sit around here naked all day.\" she laughed. \n\n\"You say that like it's a bad thing,\" I joked, \"It would make me really happy.\"\n\nShe laughed with me and shot back, \"Yeah, I guess it would at that.\" She leaned over and kissed me.\n\nWe talked about our plans for tomorrow and for next weekend when her parents came down.\n\n\"What time will your parents be here?\" I asked.\n\nShe thought for a second and said, \"Well, my mom didn't say the exact time, just early Saturday morning. But, knowing my dad, and he's like you, early means early. I figure sometime between 7:00 or 7:30.\"",
        "\"That will work out good, the show starts at noon and it takes maybe 45 minutes to get there.\" I said. \"This way, you can spend some time with them before I come over to pick you all up.\"\n\n\"OK, sounds like a plan to me.\" She said smiling. \n\nI finished my beer and bent over to kiss her saying, \"I need a shower, wanna join me?\"\n\nGrinning, she replied, \"Oh yes, definitely, you'll never get your back and stuff clean if I wasn't there to help.\" She continued, grinning evilly again, \"After the last one we took, I noticed you liked playing more than cleaning, so you need my help.\"\n\nI looked at her and said with every ounce of feeling I could put into it, \"I love you so much.\" \n\nI pulled her up to me and kissed her. Then I picked her up and carried her into the master suite.\n\nAs I carried her, she leaned her head on my shoulder to kiss and lick my ear. Then she started whispering what she was going to do to me once she had me clean and naked. My cock was being bent in my pants from swelling, but since I had my arms full of Simone, I would just had to wait.\n\nWe got into the master bedroom and we started stripping each other, slowly removing each piece of the others clothing one piece at a time. As I pulled each piece away from her body, I watched her soft skin shudder as it was exposed to the air. We kissed, slowly enjoying the taste of each other, our tongues moving together. I then kissed her neck and nibbled her ears before running my tongue along her throat and back to her lips. \n\nWe went into the bathroom and the water was nice and warm as we got in the shower together. My hands itched to touch her, but since she complained that I play more than wash I restrained myself. We cleaned each other till we're both squeaky clean, though I can't help but playing a little, after all we're wet, naked, and she turns me on so bad I can't help it. I hope she won't complain too much. However, now that we're clean, I can play to my heart's content.\n\nI spread more soap over her, she was facing away from me, my cock was laying between her beautiful ass-cheeks. I slowly begin to soap her chest softly kneading and rubbing her breasts. Her nipples liked what they felt as they hardened and slipped between my fingers as I play with them. I watch as the soap suds traveled down from her breasts to her stomach and finally between her legs to her cock. As I moved and rubbed, my cock was sliding up and down her butt crack making it rock-hard. I groaned in pleasure and massaged along the sides of her chest up to her shoulders, leaving her breasts and nipples alone for now. She looked back over her shoulder and grinned that evil little grin she does when she's in a playful mood.\n\nI slid my hands forward and as my hands are cupping her breasts again, she turned around in my arms and then her hands closed around my cock and balls, she pulled me closer to her. We kissed long and hard my hands going to her ass as we did. She gently stroked her hand up and down the length of my cock, getting me hotter and harder as I stoked my hands up and down her back and ass. She broke the kiss and looked at me with lust in her eyes while she licked her lips.\n\n\"And what do you want?\" I teased and she tightened her grip on my cock. \n\n\"Mmmmmmm, maybe this...\" She says. She continued to stroke and rub my cock and balls making everything nice and clean. She then stop massaging my balls and used that hand to play with my nipples. I start to shudder and got weak in the legs as I put my hands on her shoulders to support me. She refused to release her teasing grip on me, going back to fondling my balls between my legs then to my ass. \n\n\"Ah, baby,\" I moaned, as she slid a soapy finger up and down the crack of my ass from front to back. As she ran her finger over my asshole, she would lightly push the tip of it in to tease me. Each time she did it she pushed her finger in little deeper. She put her mouth near my ear as I held on the her for support, and she said softly, \"I know how much you like that, that's why I'm doing it. I love to make you shudder and shake so I you have to lean on me to support you.\" \n\n\"Besides,\" She giggled, \"That needs to be clean also.\" She kissed me on the ear, pushing her tongue in it. She then went back to fingering my ass.\n\nI shudder some more as she pushed her finger all the way into me and gasped to her, \"OH, God baby, that feels so good. But what happened to the \"Getting clean part and not playing\" I asked.\n\nShe got that evil grin again and replied, \"That my dear sir, only applies to you.\" She squeezed my cock and stroked her finger in and out of me once more, then continued, \"However, it doesn't apply to me.\"\n\nI groaned out, \"Oh thank the Gods.\" And I tried to hold myself up to enjoy it.\n\nShe then started to stroke my cock faster and finger fuck me like she meant it instead teasing me. I felt that I had lost every bone in my body as I tried to stay upright. \"Lean against the wall.\" she said. And she squatted down to be face level with my cock. She grabbed me tight around the base of my cock and pushed her finger deeply into me, crooking it so she could massage my prostate, but good.\n\nThe feeling was better than I had ever felt before and the suddenly, with no warning like I normally get, I could feel myself starting to cum. \n\nI looked down at her and I could barely get out \"Simone, I'm cuming.\" But she could tell as she pointed my cock at face and slowly stroked me up to the tip of my cock. As she did that, she pressed hard on my prostate which really blew the top of my head off. \n\nI felt the cum rushing up the inside of my cock as it burst out spraying her face and tits, once, twice, three times I shot my load. As I looked down at her, she was grinning, her face and tits covered with my cum. I watched her run her tongue over her lips to taste my cum. She stood up and wrapped her arms around me pulling me in close as I watch the cum run down between us. She kissed me and said, \"Ummm, You taste so good.\" I kissed her back and helped her by licking up some of my own cum from her face, then I then leaned over and took one of her cum coated nipples in my mouth to clean it off, also tasting the tang of the soap on her skin. The taste of the cum was okay, but the taste of the soap, Yuck. Yes...time to rinse. I reach to remove the shower head from the wall so we could rinse off.\n\nWe get out of the shower and dried each other off, I have to admit I did spend more time drying off the parts of her I really like. She kissed my neck and then worked her way down my body, licking, sucking, and nibbling on my nipples before working her way further down, my body shaking with the touch of her mouth against my skin as she licked and dried me at the same time.\n\nI took Simone's hand in mine and we walked out on shaking legs to make our way to the bed.\n\nWe got into bed lying next to each other kissing and stroking whatever parts we could reach. Both of us were hard and even though she had just made me cum, I was still hard as a rock.\n\nAn evil little thought went through my mind and I rolled on top of her, just keeping enough of my weight on her so she couldn't move yet. I started kissing her forehead, then planted a kiss on each eye and worked down to kiss her lips, our tongues playing with each other. I then moved down to her neck kissing and licking as I went, working my way down to her breasts, I began licking and sucking her nipples till they stuck out as far as they could. She moaned as I sucked on her tits and I started working my way down her chest and stomach, pausing to use my tongue on and in her belly button. As I did that, she shook a little, I'd have to remember that, and worked my way down to her hips, licking, nipping and kissing as I went. As I reached her cock, I teased her by lightly licking the head, her shaft and down to her balls, then continued on down her legs, licking behind her knees, which made her squirm also, then down to her feet.\n\nWhen I reached her feet, I took hold of her ankle and held it while I sucked on each of her toes, licking between them and then on to the sole of her foot. I then switched to the other foot. By now she was squirming all over the bed, but as I was holding her ankle and foot, she couldn't get away.\n\nI slowly spread her legs and laid between them starting to lick and kiss my way back up to her cock. I kissed and licked all around it, but never came close to touching it, she was moaning my name now, begging me to suck her.\n\nAs I laid there kissing her, I stroked my fingers lightly on her stomach, then moved up just a bit more so I could reach everything between her legs and put my weight down on her legs so she could barely move them.\n\nI wrapped my hand around her cock and lightly licked her head slowly getting it wet. She was bucking her hips up now trying to push her cock into my mouth. I called her name softly and she looked down to see me holding her cock, then I said to her,\" I love you, but,\" I licked her head, \"Payback,\" I licked again, \"Is\", Once my tongue swiped the head of her cock, \"A\", I ran my tongue from the tip to the base and then back to the tip, \"Bitch.\" I sucked her cock down as far as I could, feeling the head of it hit the back of my throat.\n\nI locked my lips around her cock and started to work my mouth up and down her shaft. I varied the speed of my sucking, sometimes agonizingly slow, to as fast as I could, stopping every now and then to swirl my tongue around the head. \n\nI then wrapped my hand around her cock and started to suck and lick her balls, I then pushed her legs wider and up so I could access her cute little pucker, I gave her balls one last lick, then licked and kissed my way between her balls and ass. I reached her asshole and licked around it in circles till I pushed my tongue into the hole as far as I could I get it and started fucking it with my tongue.\n\nWhile all this was happening, she was calling out my name, moaning, and telling how much she like what I was doing and to not stop. When I thought I had it wet enough, I swapped out my tongue for my finger. I circled her cute little hole until I slowly pushed it into her as far as it would reach. \n\nFiguring I had made her wait enough and I got back at her for what she did to me, I pushed my finger all the way in her ass and took her into my mouth. Playtime being over, I wanted to make my lover cum like she never had before. I started slowly finger fucking her ass while I sucked her cock for all I was worth. I tried to remember all the things other women had done to me and everything I had seen being down of some web sites. I started bobbing my head on her cock faster and faster while I pushed my finger all the way back in her and gently but firmly massaged her prostate . \n\nSuddenly she let out a loud moan, almost a cry, and she called out my name telling me not to stop. I felt her cock swell and throb in my mouth, I pressed down on her prostate and I felt a small stream and taste of her pre-cum on my tongue. I pulled up so just the tip of her cock was in my mouth as she orgasmed hard and long. She shot a rope of cum in my mouth followed by another, then another. I lost track of how many times she shot as I tried to swallow it all down not wanting to lose a drop.\n\nI could feel her shaking and squirming under me and as I felt her subside I took her cock out of my mouth and just held it, milking as much cum out of it as I could. I pulled my finger out her ass and firmly massaged her balls as the cum slowly flowed out the tip instead of shooting. I cleaned off the cum from her cock, licking it clean. She tasted so sweet to me.\n\nI slowly made my way up to lay beside her, lightly running my hand against her soft skin. I took her in my arms and said simply, \"I love you so much and I just love the way you taste.\"\n\nShe slowly came back to life and started breathing normally. Then reached up and kissed me saying, \"I love you too honey. You are, without a doubt, the best lover in the world. I have never in my entire life ever cum that hard and long.\" She panted out.\n\n\"But, you do realize,\" she said grinning evilly, \"That I'll have to get even with you for that don't you?\"\n\nI leaned up on one elbow and replied grinning, \"Oh, No, Please, Don't, Stop.\" I kissed her. \"I guess I got something to look forward to then. Be sure to warn me so I can prepare for it.\"\n\nShe looked at me grinning more evilly than ever and said, \"Consider this your warning, just let me catch my breath first.\" \n\nI pulled her to me holding her close just loving the feeling of her in my arms. We laid there like that until she had caught her breath. She then started kissing me, on the lips, around my neck and ears, working her way down my chest. She licked my nipples and then sucked on them making them hard, then continuing down and as she reached my waist, she reached down and lightly ran her nails along the underside of my balls pulling a groan of pleasure from my throat. As I leant my head back to enjoy the sensation, she took my cock in her mouth. Then, grabbing my ass, she pulled me all the way into her mouth burying my cock in her throat. I reared up a bit when I felt that but she pushed me back against the bed. I laid back and she continued to alternately stroke my cock up and down, then sucking it as if she couldn't get enough. \n\nShe kissed me once more then reached over to the night stand and got the lube we had there in easy reach. She opened the top and said to me, \"Here, help me lube up.\" She squeezed some on my fingers and turned around so I could apply the lube to her ass. I rubbed the lube over her pucker and slowly worked the lube into her. I caressed her balls lightly and gave her a kiss on the ass then turned her around and kissed her saying, \"Just about all done, just let put some on my cock.\"\n\n\"No,\" she said kissing me, \"That's my job.\" She moved down some, squirted lube on her hand and massage my cock with it.\n\nShe give my cock a last stroke and worked her way up me so she was laying on top of me. She kissed and sucked on my nipples again and then she slid back down slowly, her hot, slick asshole sliding along my cock. She raised up to straddled me, then reached back grabbing my cock and rubbing the head of it against her hole and finally she guided me into her. \n\nAt first, she let the just let the head slide in, but she stopped for a moment, her hands resting on my chest. Then she smiled that evil grin again and ever so slowly and gently, eased herself down the length of my cock until it was buried it deep in her ass. I gasped as I felt her ass slide down my cock, she was so fucking tight and hot.\n\nShe stayed there for a few seconds and then started to move, just rocking herself a little, back and forth, side to side. She stopped and then she raised herself up slowly, her ass sliding up my cock, until she got to point where just the head was still in, then she lower herself slowly down on me again. She continue this, but with each raising and lowering she started to move faster and faster. She pulled up again until she was almost off me, then she paused, and squeeze her ass muscles to make sure I knew where I was. Then she lower herself, pausing and starting, pausing and starting massaging my cock with her ass. \n\nI groaned and tried to thrust up in her...but she would go up with me, not allowing me what I now wanted most - to be buried in her. She bent down, kissed me and said, \"I warned you, It's my turn for payback now.\" She punctuated each word with a squeeze of her ass around my cock.\n\nShe started bouncing up and down on my cock going faster and faster as I reached up to caress her tits. She pushed herself against my hands as she rode my cock. I then licked my hand to wet it and reached down to take hold of her cock to caress and stroke it. I tried to match her speed jacking her off. \n\nI was very close to cumming again myself even though I had already cum just before. I loved the feel of her wrapped around me. With one hand on her cock stroking it and one hand on her hip I told her, \"Oh God baby, I'm so close, you're going to make me cum again. Please cum with me.\"\n\nShe nodded her head and holding herself with her hands on my chest started slamming her ass up and down on my cock. When she started that, I began to stroke her faster. I was going to cum any second, I could feel it building in my balls and my cock was swelling in her ass. I moaned out that I was going to cum and hearing this, she slammed herself down on me hard and sat up throwing her head back, I felt her cock swell in my hand as she groaned that she gonna cum also. Then she reached back behind her to squeezed and stroke my balls. This was all it took to send me over. \"Simone, oh fuck baby I'm cuming.\" I groaned. \n\nAs I orgasm, her ass grips around me squeezing my cock, it feels like my balls are on fire, and that the cum is starting in my toes. I can feel my cum shooting up through my cock as I thrust up into her burying my cock in as far as I can and shoot deep within her, both of us gasp. \n\nI reach up and caressed her breast, rubbing and tweaking her hard nipple as I stroked her cock. She started shaking and then she shot her cum all over my chest and face. She collapsed on top of me and just held me.\n\nBoth of us are shuddering so much you would think that it was freezing in the bedroom instead of being so hot. As we finally calm down enough we kissed each other over and over again as we lay there with my cock still buried in her ass. I felt her heartbeat as she lay on me and I marvel all over again what I did to deserve her, I've come to the conclusion that I don't care what I did, as I must have done it right and my life is complete as long as she is with me. \n\nShe finally raised herself slowly off me making us both shudder again as her ass slid along my cock. As she comes off, she collapsed on top of me and I pulled her tightly to me kissing her on the top of her head.\n\nShe laid the for a moment more, then rolled over and laid down next to me pulling me close. We both looked at each other and with a silly and worn out grin on both our faces we say at the same time, \"Are we even now?\"\n\nWe laughed a little and held each other tight, then she licked and kissed my ear saying; \"Well, I guess we both need another shower now.\"\n\nWe showered again and went back out to the living room. I put another movie in and we sat on the couch once again with Simone curled up next to me. We watched the movie and just relaxed until we were both ready for bed. I picked her up and cradled her in my arms carrying her into the bedroom. We got into bed and I fell asleep with her in my arms.\n\nI woke up the next morning spooned up to Simone holding her to me like I was afraid I was going to lose her. I watched her sleep, her chest rising and failing then decided to get up to make a head call and let her sleep while made some coffee. I gently flipped back the covers and slowly moved away so as not to wake her.\n\nI went in and got the coffee started and cleaned up a bit trying to be quiet so she could sleep.\n\nI got a cup once the coffee was done and started looking around to make a list up of what we needed from the store when we went out later. It wasn't much, more wine for her, she preferred it to beer and I usually only kept a bottle or three around in case anyone stopped over or for dates. Needed some staples, nothing big just the normal stuff you always seem to run out of. I thought maybe I'd better ask Simone if there was anything she wanted to add or needed.\n\nSimone woke up stretching like a cat then laid there a bit wondering where Jason was. After a moment, she heard some noise coming from the kitchen and thought it must be him. She laid there trying to wake all the way up and thought over the past days since everything had happened. Even though some of it was happening fast, she knew in her heart that it was good and right. She hugged herself thinking about the things her and Jason did and smiled as she remembered it all in detail. Thinking about it made her cock thicken and stiffen up. She also remembered what had started this all and shuddered as she remembered that night at the pub and being so scared until Jason had shown up. ",
        "He was her knight in shining armor, a little clich\u00e9, but true none the less. She felt so safe whenever he was around and felt so much love for him. It was true what he said yesterday she realized, we are soul-mates. She had never felt this way about anyone before. Thinking back, she knew that she a had started falling for him almost as soon as she met him. But she had never thought to do anything about it because she didn't know how he would react.\n\nThen she remembered the day he had walked in on her when she was getting cleaned up and he had seen her almost naked. She had been so worried how he was going to react when she told him everything. Then she smiled when she remembered how he had completely accepted her for how she was. She knew then that she loved him, but was still afraid he would reject her thinking that maybe there was something wrong with him if you dated an transgendered girl. \n\nThen she thought of the day that bitch he was dating came to the house while she was there. She seethed a bit as she remembered all the stupid cunt had said. Then she thought to herself, \"You know, that's the day Jason told me he finally figured out he felt something for me.\" She giggled to herself while she thought, \"Hummm, Maybe I ought to send the bitch a thank you card instead of wanting to slap the crap out of her.\" She could see the card in her mind now and how it would read, \"Dear bitch, thank you for walking out when you did, it made him fall in love with me instead.\" \"Oh, PS he's the best lover I've ever meet and he's all mine. Fuck you very much, Simone.\"\n\nShe laughed to herself and thought maybe I'll do just that, she deserves it. She then remembered the night when Jason had rescued her and shivered a bit as she remembered how scared she was. And she was really scared, she had a friend that was transgendered also that didn't have a white knight like she did, and she had ended up in the Emergency Room.\n\nBut she had come out of it safely and lucky because she had found her soul-mate and had never been this happy before. She never thought she would find someone she could love as deeply as they did.\n\nShe laid there thinking about what she had to do today. She needed to call her parents to tell them about going to the car show with her and Jason. Damn she thought, I need to tell about Jason. She knew they would accept him, especially her dad, she was right when she had told Jason that he and her dad were very much alike. I also need to get some clothes to wear tomorrow when we go to work, maybe it might be best to just put together a small bag to keep here. \n\nThen she thought to herself, \"I wonder..., my lease is up on the apartment in like 6 or 8 weeks. I wondered how Jason would feel if I suggested I just move in here when it's up. That would be best all-around she thought, I could save money on rent, we could drive to work together. Or maybe that's rushing it a bit she thought. Oh well, we'll just have to see how it plays out.\n\nShe stretched once again, tossed back the covers to get up and go see Jason, she really needed a hug and kiss to wake up. And coffee she added, she could smell it and it smelled heavenly. She got out of bed and stretched some more to get the kinks out. She had just bent over to touch her toes to stretch out her back and when she looked between her legs as she was bent over, she saw Jason leaning against the door watching her with a small smile on his face. She grinned to herself and decided to give him a small show.\n\nAs she was laying there going over all that happened in her mind, Jason had come up to see if she was up yet and had been watching her as she laid there. She's so beautiful, he thought to himself. Then he watched her get up and then stretch out the morning kinks. When she had bent over to touch her toes, her naked ass was stuck up in the air. She has such a cute ass he thought to himself, as she started to stretch out some more. As he leaned against the door jamb he watch her do some sort of exercises, Yoga he thought to himself? Yeah, must be. It didn't matter to him what it was called, he liked what he saw.\n\nShe decided to do some of the Yoga positions she had learned in a class at college, knowing that it would display herself to him perfectly. She was also getting a hard-on as she stretched knowing he was watching her. She knew it was having the effect she wanted when she had bent to one side before bending completely over again and she caught him moving his dick through his pants to straighten it out because he was getting hard watching her. She decided to stay in this position for a moment because she saw that he had started to walk over to her. As he came up behind her, she stood and turned her head to look over her shoulder and grinned at him with her lower lip caught in her teeth, then asked him, \"Morning Lover, you like my morning exercises?\"\n\nHe came up and wrapped his arms around her and spooned up to her and kissed the back of neck. She then turned in his arms and melted against him kissing him soundly.\n\nBreaking the kiss he replied smiling, \"I sure do and a good morning to you also. I suppose you know just how much that look you give me turns me on when you do it, don't you?\"\n\nShe smiled at him and asked, \"What, this?\" She caught her lower lip in her teeth and stood there, her head cocked to one side. She reached down to caress his cock threw his pants and said, \"Hmmm... I see it does turn you on, I'll have to remember that.\"\n\n\"Is that coffee I smell\" she asked grinning.\n\nHe had shuddered when she caressed him and looked at her as she stood there asking about coffee after the show she had just given him. \n\nHe laughed and said, \"You know that you are some kind of sexy first thing in the morning.\" \"And just because you are so sexy and beautiful,\" He continued, \"Yes there is coffee, but it will cost you to get a cup.\"\n\nShe reached up and caressed his cheek and asked smiling at him, \"And just what would the cost of that cup be?\"\n\nJason stood there with sparkle in his eye saying nothing and pointed to his lips.\n\nSimone grinned and swayed as she walked up to him, (how she moved all those parts at the same time he couldn't figure out, but damn, did she look good) grabbed his head with both hands and planted a kiss on him that made his cock harden even more and his toes curl.\n\nShe broke the kiss and asked him grinning, \"Does that settle the bill?\"\n\nJason nodded his head and tried to say something, but nothing would come out but a squeak. He cleared his throat and was able to get the words out this, \"Ah, yes, I believe it does.\" \"As a matter of fact, that gets you coffee anyway you want it, along with breakfast when you get out there. Oh, and it will also get you lunch, diner, dessert, my car, the house, basically anything you want as long as you promise to always kiss me like that.\"\n\n\"Oh, I suppose I can keep that promise well enough.\" She said trying to keep a serious look on her face. But that look only lasted long enough to get it out, before she caught her lower lip in her teeth and stood there, her head cocked to one side once more. She then put her arms around his neck and kissed him again. She pulled back from the kiss and laid her head against his chest and said softly, \"I love you so much Jason.\"\n\nShe stepped back and said, \"Cream and sugar In the coffee please.\" As she turned to walk into the bathroom, she heard him say, \"I love you too Simone.\" \n\nAs she entered the bathroom turning to turn on the light, she could see him walking out the door, the front of his pants tenting from his hard-on. She smiled to herself and closed the door.\n\nJason walked out to the kitchen, slight bent over because of his hard-on. He stopped and he reached down his pants to straighten out his dick so he could walked normally. He smiled as he did it thinking to himself, \"Damn, that girl turns me on more than anyone I ever meet.\"\n\nHe put some cinnamon rolls in the oven to warm and he made her a cup of coffee, with cream and sugar, then refilled his. He set his down on the table and went to get Simone's. She walked into the room just as he was setting it down and laid a napkin alongside of it. Seeing her walk in, he pulled out the chair, bowed and waved her into the seat saying as he did, \"Madam's coffee is ready, I do so hope it's to her satisfaction.\" He bowed again and stepped back.\n\n\"My, my\" She said grinning, \"I guess you can get good help these days.\"\n\nAs she sat down, he pushed in her chair bending down to kiss the back of her neck, licking it a bit to make it wet. He blew softly on her neck making her shiver then whispered in her ear, \"I sincerely hope madam is very satisfied with the help, we do try hard here to make you satisfied.\"\n\nShe reached up to stroke his face, then kissed him saying, \"Yes, madam is very satisfied with the help.\" \"As a matter of fact, I've never been more satisfied before.\" She continued.\n\nJason smiled and said, \"One is very happy that you are, as madam is very beautiful and sexy, we wouldn't want her ever have to go unsatisfied ever again.\" \n\n\"As a matter of fact,\" He said leering at her, \"I can guaranty that the owner of this establishment will take care of that, personally, just to keep madam happy and as satisfied as possible.\"\n\nShe laughed at the look Jason gave her as he said that and kissed him again, then hugged him saying, \"I love you so much, you really make so happy.\" \n\n\"But,\" She continued, \"I think you can drop the snooty servant speech, It really doesn't suit you.\"\n\nJason smiled and kissed her back saying, \"Good, because I think I almost dislocated my tongue on that last speech. I might need it later.\"\n\nSimone gave him a smoldering look, lightly licked her lips and said, \"I can guaranty that you will.\"\n\nJason sat down across from her, picked up his coffee and took a long drink before saying, \"Now that we have that settled, how about we go to your place first after breakfast, then we can stop at the store for some supplies?\" He got up as the timer dinged on the oven to get the cinnamon rolls out and waited on her to answer him. \n\n\"Ummm.. Those smell good,\" She said, \"And yeah, that sounds like a plan to me.\"\n\nHe set the plate of rolls on the table and got a couple of plates for both of them saying, \"Ok, that's what we'll do then, it shouldn't take long. Is there anything else you want to do today?\"\n\nShe shrugged saying, \"I don't think so, but let's play it by ear and see what happens.\" \"Or maybe we could go see a movie this afternoon after lunch, that'll be fun.\"\n\n\"That sounds good to me,\" He said, \"And after that, we could just take a walk around the mall if you want.\"\n\nShe reached for another roll, and said, \"Umm...these are good and that sounds great to me also.\"\n\nJason got another roll for himself and replied, \"Yeah, they are good, I get them from that little bakery down the street. They're good cold also, but they're even better warmed up.\"\n\nHe wiped his mouth, stood and came around the table to her, and kissed her, licking some of the icing from the side of her lip, saying, \"Ummm... your good with icing too, and even better warmed up.\" He kissed her again and said, \"Let me get dressed and then we can go.\"\n\nHe left to get dressed and Simone finished her coffee, then got up to rinse off the dishes from breakfast and put them into the dish washer. It didn't take long for Jason to get dressed and she only had to wait couple of minutes for him.\n\nHe came back in the room, grabbed his keys and asked, \"Ready?\n\n\"Sure am,\" she replied, \"let's go.\"\n\nThey got into the car and headed to her place. As it wasn't that far, so they got there quickly and they went up to her apartment. She opened the door and she told him to make himself at home while she collected some clothes. Jason sat on the couch and picked up a magazine off the coffee table to pass the time while he waited.\n\nHe leafed through the magazine, then looked around her apartment thinking to himself. \"Hmm, I wonder how she would feel if I asked her to move in with me?\" He looked around again thinking how long she had to go on the lease here, it would be great all around if she would move in with him. We could just drive to work together, she could save the cost of the rent and save some money, and most importantly to him, they would be together. He sat here mulling it over and decided he was going to ask her. We could do it after the next job we had and after her parents visited. He was still worried about that a little, not enough not to do it, but he hoped her parents would accept him as she had.\n\nHe didn't think it was too soon for any of it, after all we've know each other almost a year now, we basically know most of our likes and dislikes since we had worked so closely together. Maybe that's why he waited so long to tell her how he felt, they spent more time together between work and seeing each other for the occasional dinner and just hanging out than most people do who are actually dating. \n\n\"Hell,\" He thought to himself, \"I think we know each other better than some people that were married.\"\n\nWhen he thought \"married\" to himself, he felt a small shiver go through him. \"I wonder,\" He thought, \"I think I love that idea, but he wasn't sure if she would be up for that, or for that fact, could we legally.\"\n\nHe knew that same-sex couples had gotten married in some states, but he wasn't sure about this one. Also, he was unsure if they were actually considered same sex or not. He knew that Simone had legally changed her name and when he saw her clearance paperwork she had filled out for a job they did, she had listed her sex as female. \n\nHe thought to himself nodding his head, \"I'll have to do some research on it.\" Satisfied that he had a plan, he smiled and waited for her.\n\nSimone had went into her bedroom an grabbed a bag from her closet. Then she went through her dresser to pick out some clothes for today and work tomorrow, then thinking just a bit, she added another outfit so she had a spare. She changed into fresh clothes and put the rest in her bag, then looked around for some shoes to take with her. Finding a couple pairs she liked, tossed them in the bag also and thought if she should grab anything else. \n\nShe went into the bathroom and got the little case she had already filled with toiletries for when she went on trips for the job and tossed that in the bag too. She then thought to herself, \"This would so much easier if we just lived together.\" \n\nShe looked around the room to see if she had missed anything and saw the phone. \"Maybe I should call my mom and dad now.\" She looked at her watch, it hadn't taken her that long to change and pack, she decided she would. \n\nShe sat down on the bed and dialed their number. The phone rang a few times and then her mom answered, \"Hello Simone, how are you doing honey?\" She asked.\n\nSimone smiled to herself remembering the last couple of days and said with a very happy voice, \"Hi mom, I'm doing fantastic, how are you and dad?\"\n\nHer mom stared at the phone for a second, wondering what had put such happiness in her daughters voice, she couldn't remember hearing her that happy in a long time. \"Mom,\" she heard, \"You still there?\"\n\nHer mom shook her head and replied, \"Oh, Uh, Yes, I'm still here. I was just a little stunned on how you sounded. I don't think I've ever heard you this happy, what's going on?\"\n\nSimone laughed into the phone, which stunned her mother again, and said to her, \"I'm just in a good mood and I had a couple of things to run by you and dad before you came here next weekend.\" \n\n\"Okay,\" Her mom replied, \"What is it?\"\n\nSimone swallowed, thought a second and said, \"Well, we thought you and dad would like to go to a bike and car show with us while you were down on Saturday.\"\n\nHer mom replied, \"Okay, that sounds good, your dad will certainly be happy with that... Wait a minute,\" she asked stunned, \"What do you mean \"We\"?\n\nSimone laughed into the phone and said, \"We, as in me and my boyfriend.\" \n\nHer mom sat down in a chair, looked at the phone again, then said to her daughter in a happy voice, \"All right young lady, just what is going on here?\" \"Details, now.\"\n\nSimone laughed at the tone in her mother's voice and said, \"My boyfriend, Jason, the man I am so totally, exceedingly in love with that it makes my heart skip a beat every time he looks at or touches me. My boyfriend, the man that loves me as much as I love him, treats me like a queen, accepts me just as I am and would be unhappy if I changed for any reason other than my own, the man who protected me when I was in trouble.\"\n\n\"Mom,\" She continued, \"Jason makes me happier than I ever been in my life, even happier than when you and dad accepted my choice when I chose to be a girl instead of a boy. I love him so much that I could keep going on until I ran out of words, he knows me in all my moods and if I was unhappy, he could make me happy with a single word or deed.\" \n\nHer mom listen to her go on about him. \"Okay\" She laughed, \"I get it, he's perfect.\" \"But on the practical side, who is he?\" She paused for a second and said, \"And does he know about you?\"\n\nTo which Simone replied, \"You may not have heard his name before or maybe you have, I can't remember, if I ever told it to you. This is the guy I've been working with for almost the last year.\"\n\n\"And yes,\" She continued, \"He knows all about me, as a matter of fact, he's know about me for like 8 months or so.\" She explained to her how he found out about her and then the conversation that had taken place later when she had told him the whole story. \n\n\"Mom,\" She sighed and continued, \"That was the night I started to fall for him, but I never thought he would want to be with a girl like me. But, we stayed friends and that was good enough for me.\"\n\n\"He told me that night that I was his best friend and it wasn't just a line or story, he meant every word of it.\" \"Then there was a night I was over asking him a question about a job we had coming up, when his sometime girlfriend showed up and turned into massive jealous bitch calling me all kind of names and cursing me out accusing him of sleeping with me.\"\n\n\"And you know what he did? He threw her out of the house and told her not to let the door hit her in the ass on the way out.\" \"Then,\" she continued, \"He apologized to me for her bullshit.\"\n\nHer mom listen to her telling the story, then said, \"Oh, yes, I remember you telling me about him, but I don't think you ever told me his name.\" \"But, Ok, he sounds great to me to, but what do you mean about him protecting you?\" \"I assume it wasn't just because of what his ex did.\"\n\nSimone took a breath and told her, \"No, it wasn't because of her. Mom, he loves me so much, that when I was scared out of mind and didn't know what to do, I called him and he came to my side to protect me, rescuing me, and that was before we were even together, we were just friends.\" \n\nShe then proceeded to tell her about that night Jason had rescued her from that asshole at the bar, leaving no details out, even to the point of when he made the asshole apologize to her. \n\n\"Mom, he came to my rescue like something you'd see in a movie.\"\n\nHer mom listened to her telling her how much she loved him, and then her heart when into her throat when Simone related to her the story of the night Jason had helped her. That was one thing she was always worried about, she had heard and read of those things happening to girls like Simone.\n\n\"And,\" Her mom asked, \"After he did the \"Knight In Shining Armor\" bit, was that when you became boyfriend and girlfriend?\"\n\n\"Yes, more or less.\" Simone said to her. \"Since I was still so upset, I asked if I could stay at his place for the night, I didn't want to be alone. He agreed and I stayed. We were sitting on the couch watching a movie relaxing and when I had calmed down, I moved over on the couch next to him and hugged his arm and thanked him again for everything he had done for me, telling him about things that have happened to other girls, including my friend.\" ",
        "\"And you know he did? He took hold of my hand and kissed it. Then he said, \"I know, I've read about it myself.\" Then he shook his head and said to me, \"I have never understood why people have to such assholes to other people just cause they're different.\" \n\n\"As he talked to me, I could tell he was relaxed, we had had a few of glasses of wine by then and I said to him, \"Well, I just wanted to say thank you again. You say it was no big deal, but it was to me.\"\n\n\"Like I said, he was relaxed, so I think what came out next, came out without him thinking about it. He tells me, \"It's really okay Simone, it's just one of those things you do when you love someone.\"\n\nHer mom listen to her daughters story and the thought went through her mind, that this sounded like some kind of love story you read about that never happens in real life. But then she realized it was a love story, but one that was real and not some kind of story.\n\nShe heard Simone continue saying, \"We talked for a long while and he told me he had started falling in love with me the night I told him about how I became a girl, but he didn't realize it was love, he just thought it was the fact that I was his best friend. Then the night his ex started her crap, he told me that he kind of figured that he was in love with me, because of how he felt when she started in on me. But he wasn't sure that I would be interested in him, he knew I liked him as a friend, but since I never really made any romantic overtures towards him, he figured it was better to have me as a friend, then be rejected if I said no.\"\n\n\"But,\" She continued, \"He said that the night I called him scared out of my mind, that he knew he loved me. So, we've been together since then and I don't doubt for a minute that we're made for each other.\"\n\nHer mother had tears running down her face she listened to her tell the story, she knew that it was real and the two of them had something most people only dream about. She and her husband loved each other deeply also and they wouldn't be happy unless they were together. Maybe not to the extreme that Simone and Jason had, but close.\n\nShe cleared her throat and said, \"Well honey, I'm so very happy for you and I know your dad will be too when he hears about it. I definitely want to meet him and I think the show is a good idea.\" Then remembering when her husband met her parents, she laughed to herself and asked her. \"But tell me, just how long to take you to convince him to meet us and go to the show?\"\n\nShe heard Simone laugh over the phone and heard her say, \"Not very long at all, as a matter of fact it was his idea. He said he thought you and dad sounded like great people after all I told him and he said he wanted to meet you both.\" \n\n\"Though I think he's a little scared of meeting dad,\" She giggled, \"I think he's kind of worried of the \"Daddy's little girl\" syndrome. That dad is not going like his daughter getting involved with any man. I told him not to worry, that they should get along great, actually dad and him are so much alike it's kind of scary.\" \n\n\"Alike?\" She asked, \"How so?\"\n\n\"Well both of them have that weird sense of humor, they both always a have joke or make fun of any situation they can and both of them can be... how do you put it? Oh, yes, \"Smart-asses\" She laughed.\n\n\"Well then,\" Her mom said, \"I defiantly want to meet him. I'm sure we'll get along fine if he's anything like your dad.\"\n\n\"Oh, speaking of your dad, he's gone to the store, do you want me to tell him all this?\"\n\n\"That sounds good to me mom.\" She said. \"I do have to go, but I wanted to call you to tell you and make sure you were okay with everything.\" \n\n\"Oh, and please, when you tell dad, please tell him to go easy on Jason when they meet, I was serious when I said Jason was scared about dad. I really don't know why, but he is.\"\n\nHer mom laughed and agreed to make her father behave himself. She told her that she loved her and said goodbye, then hung up the phone.\n\nSimone hung up the phone, happy now that she had talked to her mother and that she was alright with everything. She grabbed her bag and went out to get Jason. She came over and kissed him saying, \"OK babe, all ready.\"\n\nJason smiled at her and asked, \"What took you so long?\n\n\"I called my mom.\" She answered. \"I wanted to tell her and dad about next week and make sure it was okay with them.\" She took a breath and continued, \"I also told my mom about us so they wouldn't be surprised.\" \n\n\"And,\" She smiled saying, \"I wanted to let them know how happy we were together and to tell them how much I love you.\"\n\nJason gulped and asked, \"And what did they say about that?\" \n\n\"Well,\" She started, \"Mom was a bit leery at first, her first question was whether you knew about me.\" \"But,\" She continued, \"After I told her all that happened, she realized how deeply in love we were and she was very happy for us and she's looking forward to next weekend.\"\n\nJason sighed in relief, then got a nervous look on his face and asked, \"Uh, what about your dad? Did he say anything?\"\n\nSimone put a frown on her face thinking to tease him a bit and said to him, \"Well, he didn't really say anything.\"\n\nJason covered his eyes with one hand massaging his brow, then said, \"I knew it, he's pissed, I can just imagine what he's going to say to me when we meet next week.\"\n\nHe looked up at her anxiously and asked, \"Did he say anything? Was he mad?\"\n\nSimone had a worried look on her face as she sat down on the couch. She had meant it as a joke, but she could see it was really bothering him for some reason. She just couldn't understand it.\n\nShe hugged him and then took his hand holding it, \"Jason, he didn't say anything because he wasn't there, he was at the store. My mom is going to tell him everything when he gets back.\"\n\nShe kissed him again and asked, \"Why are you so scared about this? Will you please tell me?\" \n\nJason sighed and said, \"Ok, look, when I was younger, like 19 or so, before I went into the Navy, I knew this girl, I thought I was in love with her. But for some reason, her father hated me. I never found out why, but she wanted to continue being together, but I knew it would be wrong to come between them and I never saw her again.\"\n\nAfter a while he continued, \"I realized afterwards that what I felt was probably more lust then love, but you know the old saying about \"First love's\".\n\nPutting his head down said, \"Now, here I am all these years later, and I'm so deeply in love with you after so many years of not having anyone and I'm just really scared it'll happen again.\" He looked up and she could see that his eyes were shiny with tears and said, \"You see all these people that think they're in love and yet there not happy and sooner or later they leave each other and they're alone again.\" \n\n\"I never thought I'd find anybody like you,\" He said continuing, \"Someone who was such a perfect match, someone who loved me for me, with all my faults.\"\n\nHe got a wain smile on his face and said to her, \"But, here you are, your perfect, your smart, beautiful, funny, and wonders of wonders, you love me, I know you do because I can feel it when we touch, kiss, make love. I love you now and I'll love you forever. I'll make you as happy as possibly can, and I'll always protect you, no matter what.\" \n\n\"So, basically,\" He said softly, tears running down his face, \"I guess I'm just so afraid that I will lose you after finally finding you after all these years and it just scares the living shit out of me, but I don't know how to stop it from happening. You know me well enough by now, to know how I am when I can't figure something out.\"\n\nSimone looked at him with tears in her eyes also as she took him gently in her arms holding him to her. She put her head against him and told him that she loved him just as deeply and that nothing, absofuckinglutely nothing would ever make her leave him.\n\nShe pulled back. \"Jason, look at me,\" She commanded, \"You have nothing to worry about. I told my mom about everything that you've done for me, including protecting me from that asshole at the pub.\" \n\nShe laughed a bit and said, \"She even asked me what I had to do to get you to come with us to the show next weekend and she was shocked when I told her that it was your idea and that you were looking forward to meeting them.\" \n\nShe said she wants to meet my \"Knight in Shining Armor\" as she put it.\" She smiled at him and continued, \"Her exact words to me were, \"I'm so very happy for you and I know your dad will be to when he hears about it.\"\n\nJason smiled as she told him this and he kissed her. \n\nSimone looked at him and said, \"Now, I want you to listen to me, closely. You have nothing to worry about from my father. Nothing. As I told my mom, you and him are so much alike it's scary.\" \n\n\"You both have a weird sense of humor, your both extremely smart, you both like cars and bikes, both of you can be a bit of a smart-ass, as my mother puts it about my dad. \n\n\"And the most important thing,\" She said smiling, \"You both love me!\"\n\nShe held him again for a bit, then said, \"Well? You ready to go now?\"\n\nHe looked at her and said, \"Yeah, in a minute, there was something I wanted to ask you first.\"\n\n\"What's that?\" She asked.\n\n\"Well,\" He started, \"While I was sitting here waiting for you, I started thinking. You don't have much longer on the lease her do you?\" He asked.\n\nShe shook her head no, hoping that he was going to ask her to move in with him.\n\n'Well, I was thinking that maybe, if it was good with you, that when your lease was up.\" He stopped for a moment, and then continued with a question in his voice, \"Uh, that maybe we could just move in together?\" \n\nShe sat there trying to get the word yes out, when he said, \"You know, you could save money that way, we could drive into work together.\" \n\nAs he started to say something else, Simone put a finger against his lips to stop him from rambling on and said one simple word, \"Yes.\" She pulled him to her and started kissing him over and over repeating yes every time she kissed him.\n\n\"Ok then\" Jason said grinning at her, \"So I suppose that means you want too?\"\n\n\"Yes,\" she said laughing at him, \"I want to move in with you.\" \"As a matter of fact, I thinking along the same line myself while I was packing my bag.\" \n\n\"I was thinking you might think it may be too soon,\" She continued. \"But since you agree, that sorts takes care of that.\"\n\nJason smiled at her, then said, \"No, I don't think it is. I kind of had the same thought myself, but look at it this way, we've know each other almost a year now, we basically know most of our moods, likes and dislikes and so forth since we worked so closely together.\" \"I think that's why I waited so long to tell you how I felt, we've spent more time together between work and seeing each other for the occasional dinners, lunches, and just hanging out than most people do who are actually dating. \" \n\nHe laughed, \"If you look at it the right way, we've been dating for almost a year, we just didn't know it.\" \n\nSimone laughed with him, knowing that he was right, then said, \"Very logical, convoluted logic, but logic none the less.\"\n\n\"Well then, since we agree,\" He replied, \"How much longer does your lease have to go?\"\n\nShe thought a minute and said, \"I've got maybe 2 months left on it. Damn, I wish we didn't have to wait that long.\"\n\nJason thought for a second and told her, \"Look, even if it was up now, I think you'd want to wait till after next weekend and besides, we do have that job coming up in a few weeks. What you might want to do between then and now is talk to the manager and explain why you're not going to renew the lease.\" \n\n\"Who knows, he may say you can move out early.\" \"Sometimes,\" he continued, \"They need the apartments and don't mind since there is a big turnover here.\" \n\n\"You know,\" She said, \"That's really a good idea.\" Then she got the evil grin and said to him, \"And because it is such a good idea, and just may work, I won't smack you for acting your age this time.\"\n\nHe laughed and picked her up, then kissed her. Then said, \"Are you all ready?\"\n\nShe nodded yes, and they took off to the store. Once there, they walked into the market hand in hand. The shopping didn't take long and since they had time before they went to the mall, they ran back by his place to drop off her bag and the stuff they had picked up.\n\nWhen they finally got to the mall, they checked the time for the movie they were going to see and saw that they had time to walk around a bit and stop at the food court for lunch. They walked along slowly as they were in no rush and just enjoyed each other's company.\n\nAs they walked along they came up to a jewelry store and Simone decided to stop and do a little window shopping. She didn't have much jewelry, she really wasn't into it much. She had some special pieces she always wore depending on the occasion, but normally she didn't wear any. She and Jason looked through the window of the store and they had a display of engagement and wedding rings. She noticed an engagement/ wedding ring set that was simple but very pretty and said to Jason, \"Oh, look at that ring set there over to the right of the display,\" She pointed, \"Isn't it pretty?\" \n\nJason look to where she was pointing and it was very pretty in a subdued way. It wasn't overly showy like some of the ones they had in the display, it fit her to a tee. He turned to her and agreed, \"Yes it is, personally it's the nicest one in there.\"\n\nThey continued walking around to kill time and as they walked, a wild idea crossed his mind. He still had to do research on if they could marry, but there was no reason he couldn't ask and give her that ring she liked so much. The more he thought about it, the more he like the idea. He could stop this week and buy it, then after he talked to her parents to get their permission, he'd ask her after the show when they got back to the house. He knew it was kind of old fashioned, but it felt right to him ask for some reason. He smiled to himself and said \"Yes, I'm going to do it.\" Even if they found out they couldn't marry due to the laws, they could still consider themselves married in their eyes. And who knows, if we can't right now, the laws are changing as it becomes more accepted.\n\nHe felt an elbow to his side and looked over to Simone realizing he had probably ignored her thinking about his plan. \"Huh, what's the matter?\" he asked her. \n\nShe smiled at him as she told him, \"I asked you a question twice, but all you did was keep walking with a little smile on your face.\" \"What were you thinking about so hard?\" She asked with a grin. \"Geez, we're only boyfriend and girlfriend for a few days and already your ignoring me.\" She smiled when she said it to make sure he knew that she was only busting on him.\n\n\"You've been like that since we walked away from the jewelry store.\"\n\nHe decided in a second that he had to steer her away from that thought, he didn't want her to expect anything before he asked her next weekend. \n\n\"Sorry,\" He said smiling. \"But have you ever had something you remembered, that just pops into your thoughts all of a sudden and you end up thinking just about it and nothing else.\"\n\nHe laughed, \"And usually, it's something so small and silly, you wondered why you're thinking so hard about it.\"\n\nSimone laughed nodding her head, then said, \"Oh yes, I know what you mean. It's funny how that happens.\"\n\nShe put her arm though his and said, \"What I was asking, before you ignored me, was where would like to stop for lunch?\"\n\nHe thought about it and said, \"They do have a half-way decent deli here, that sound good to you?\" \n\n\"Sounds great to me.\" She answered. \"Let's go.\"\n\nSo they walked arm in arm to have lunch and then went to see the movie."
    ],
    "authorname": "65rebel",
    "tags": [
        "transgender",
        "tranny",
        "transsexual",
        "trans",
        "love",
        "romance",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/from-friendship-comes-love-pt-01"
}