{
    "title": "Hitting the Bottom Ch. 04",
    "pages": [
        "Author's note:\n\nI have edited this chapter following comments from @chiangku and L.E. - thank you both so much!\n\nAlso this is an opportunity to properly thank and credit my editor and co-creator, the slimmer, even sexier Brit!\n\n~~~~~~~\n\nIn previous chapters: Dan, a cop, attempts suicide after assaulting his ex-wife/sub, ends up with a head trauma at the hospital where he meets nurse Sandra. After his release from the hospital Sandra provides homecare services.\n\nSeriously though, go and read Ch. 01-03. It would make so much more sense. And for more background on Dan's ex-wife Naomi and her POV on the attack check out my other series Whiskey and Rye.\n\nIn this chapter things do heat up between Sandra and Dan... Enjoy! :)\n\n~~~~~~~\n\nThe next few days out of the hospital fall into the same strange routine. Sandra comes to visit me at home twice a day. Her morning visits are kept short, no more than a check-up to make sure I haven't fallen or otherwise hurt myself since the previous evening. Her afternoon visits are longer: She asks me about my dizziness and headaches, checks my vitals and reflexes and neurological responses, verifies I'd taken my meds and redresses the bandages on my head.\n\nShe also has me take a bath, staying out in the living room while I wash myself... and while, unbeknown to her, I masturbate with her in mind. Just like I did that first time I keep the drain open and the water running hoping to mask my groans and grunts as I jerk off fast and furious, images of Sandra naked and pliant and responsive dancing behind my tightly-shut eyelids until I cum all over myself, barely containing my cries of release.\n\nI can't seem to help it. I know it's wrong. Pathetic. But the need is simply too great to resist. And knowing she's there in the other room doesn't deter me; if anything it heightens my excitement by making all those fantasies feel almost real, like maybe...\n\n*\n\nI get better every day. My headaches are milder and further apart and my appetite is back now that the nausea had mostly passed. With every new day the swelling in my lips subsides and I manage more 'real' food along with the fruit shakes and yogurt and eggs until by the end of the week I'm eating pretty much normally again.\n\nI still sleep a lot. And think. I've done all of the planning I could think of for my new business idea; now there's a ton of footwork to do which I won't be able to start on until I'm fully healed. It's frustrating to say the least, but seeing how there's really nothing I can do about it I ignore my own impatience and let myself take this time-off from 'real life' and focus instead internally, letting my thoughts ruminate freely without the pressure of work and other obligations.\n\nI have much to think about.\n\n~~~~~~~~~\n\nI got a call from Dr. Pappas' office early Tuesday morning and had my first appointment that same afternoon. It took some logistics - calling for the cab was the easy part; arranging for help down the stairs and later up again proved a bit more challenging but eventually I made it happen. Having achieved it on my own without Jon or Sandra's help gave me a sharp thrill of satisfaction, followed immediately with a self-mocking snort. Big deal.\n\nBut once there in the clinic, once the conversation started, all those trivialities faded away as I found myself embracing this new experience with surprising ease and even, to my utter astonishment, with real, growing pleasure.\n\nI didn't know what to expect when I first sat in front of Dr. Pappas in what looked and felt for all intents and purposes like a cozy little living room. I had wondered if I'd be lying down on a couch, but when I entered the room Dr. Pappas showed me into a comfortable, cushioned single chair which embraced me warmly as I sank into it. Dr. Pappas sat in a similar chair, separated from mine by a beautiful rug and a low coffee table.\n\n\"So, Dan, tell me about yourself.\"\n\n\"What do you want to know, doc?\"\n\n\"Anything you feel I should know, for starters.\"\n\nHe answered with a kind smile and leaned back in his chair, settling, so it seems, for a long listen. He wasn't taking notes; instead there was a small recording device set on the coffee table between us which Dr. Pappas started after obtaining my permission.\n\nI started talking. It felt strange. Almost like a first date, and I haven't had one of those in about fifteen years. I told him about my parents, the traditional way I'd been raised, being the only child and grandchild in the family. The pride and dread I'd carried around as a kid knowing the future, indeed the very existence of my family was in my hands. How it made me feel omnipotent and scared shitless all at the same time.\n\nDr. Pappas asked a few questions here and there mainly for me to elaborate on my relationship with each one of my parents, how I felt about the things I'd told him at the time they happened, and what I made of them now, in hindsight.\n\nI enjoyed the exchange, though I couldn't see how it would help 'fixing' me. I asked Dr. Pappas the question and he chuckled and answered easily:\n\n\"Well, in order to 'fix' you I need to understand what made you 'break' in the first place. What we're doing here is to start mapping out your operating system, if you will. Uncover the underlying set of rules and assumptions that govern the way you operate as a human being in the world. Then we will look for incidents where the reality of your life came into conflict with those basic beliefs of yours. In my experience, it's these points of friction that have the most devastating potential.\"\n\nI nodded; that made sense to me. But then it didn't quite answer my question.\n\n\"And then what? Say we've found the cause of my breakdown. How do we then fix it? How can we guarantee it won't happen again?\"\n\nDr. Pappas' smile broadened.\n\n\"I like the way you say 'we', Dan. It's important that you know this isn't about me fixing you, but rather about me facilitating your figuring it out for yourself. As for 'how' - I can't know for sure before we identify the cause; but it would probably involve considering new perspectives, new ways of thinking about yourself and your life. Maybe even adjusting some of those underlying beliefs that then dictate the way you interpret what happens in your life.\"\n\nI thought about that for a moment. Did I want my outlook on life to change? My knee-jerk reaction was a resounding NO - I believe what I believe because it's true! And then I frowned to myself. Hearing the indignation inside my head, in the exact intonation as my father would have said it, no less, was proof enough that challenging my own long-held belief system was exactly what I needed.\n\n\"All right. Let's do it then.\" I smiled faintly back at Dr. Pappas as I said it.\n\n\"Good. So, back to your history...\"\n\n*\n\nAnd so I've done nothing but think and sleep ever since I got back home on Tuesday evening. It becomes obvious to me that on my next meeting with Dr. Pappas - which is scheduled for 3pm today, Friday - I will need to start talking about Naomi. Which means I'd have to talk about our relationship - including the D/s aspect which was at the heart of it. And which I suspect was also the root cause of my attack on her.\n\nShit, shit, shit!\n\nFor a moment I panic and consider calling the whole thing off. There's no way Dr. Pappas will understand. He'll think I'm a freak. Fuck, he will know I'm a freak. Will probably have a fancy medical term to describe my specific flavor of deprivation. If I go there and tell him about it he's going to be appalled, disgusted. He won't want to treat me.\n\nShit. He may keep seeing me out of sense of duty, perhaps because he was the one to suggest I continue treatment with him. I couldn't bear it if he did that.Pathetic loser.\n\nI feel my heart beating too fast, throbbing again inside my injured skull, and my palms are cold and clammy. I feel nauseous again. I can't breathe. I need to get out of here. I need to cancel that appointment. I won't humiliate myself in front of Dr. Pappas...\n\nStop!\n\nI squeeze my thighs hard, sinking my fingernails deep into my skin until I wince and hiss at the pain, using it to focus myself on the here and now, to force myself back from the brink of panic. I blow out air through pursed lips to stave off the dread threatening to overtake me, and then consciously inhale through my nose, slow and deep.\n\nAs I manage to get my breathing under control I can finally feel the anxiety subside. I try gulping down but my throat is dry as a desert. I get up and walk unsteadily to the kitchen to drink a glass of water, noticing with a strange sense of detachment that my hands are still shaking bad enough to splash water all around as I bring the glass to my parched lips.\n\nI take care when putting the glass down and walk back to the couch, settling down onto it with a frustrated sigh.\n\nCanceling my appointment with Dr. Pappas won't solve anything; I'd still need treatment and will get into the same exact bind with the next therapist. There's no point trying to avoid this. Instead I will need to trust Dr. Pappas and hope he would be able to put any personal biases aside...\n\nTrust and hope.\n\nCan I do that?\n\n*\n\nBy the time Jon arrives I am fit for a chat again, thank goodness. We share lunch sitting side-by-side on my couch, leaning over the coffee table. Eating the delicious, homemade shepherd's pie feels like heaven. Comfort food got its name for a reason, and I indulge with relish.\n\nThere's another appointment for me to get to this morning: I am scheduled to get my sutures out and hopefully also remove the bandages from my head, as Sandra had told me she thought the bandages have done all the good they could and now it would be best to let the wound 'air' in order to fully heal. I accept Jon's invitation to hitch a ride with him after lunch, and soon we're on our way to the hospital.\n\nThere's barely any wait at the outpatient clinic and the procedure itself is quicker - and less painful - than I expected, and I find myself with over an hour to kill before my shrink appointment. Grimacing to myself thinking of the long wait I'm in for an idea comes to mind that turns my frown into a faint smile. Tonight will be Sandra's last homecare visit. I could give her a pleasant surprise, a small 'thank you' for all the trouble I'd put her through.\n\nYeah, that's what I'm gonna do with my time. Let's go.\n\n*\n\nI leave the cab not a block away from Dr. Pappas' office and walk into the Force's unofficial barber shop. Mr. Sharas stares at me, horrified.\n\n\"Christ almighty, what have you done to yourself, officer?! Come, sit down, let me take care of that mess.\"\n\nI mumble an apologetic response and take my seat. A moment later the old nylon cape is draped around me and Mr. Sharas pumps the pedal raising the chair up to take a closer look at my head. The wrinkles on his face sharpen with his deep frown as his eyes meet mine in the slightly-scratched mirror.\n\n\"That's some serious damage you've done there, officer. They've shaved half your hair off, it seems, and the rest is overgrown by a month or so. What would you like me to do?\"\n\nI shrug. \"You're the expert, Mr. Sharas. Do whatever you think is right. And I'd like to get a shave too if that's all right?\"\n\nThe old-timer's face clears up at once and he beams down at me upon hearing my unusual request. \"Ah! Why didn't you say so? Why of course, of course! Now you let me take good care of you, eh? Just lean back and relax...\"\n\nIt takes the good part of the hour because Mr. Sharas works slowly, mindful of the injuries still visible on my head and face, but as I step down from the chair and take a closer look at myself in the mirror I nod with satisfaction at my reflection. I still look older than my years and too thin for my frame, and the left side of my face still shines with yellow, green and purple. But the too-long, unkempt hair and 2-week-old beard are gone, replaced by a military-style crop on my head and a clean shaven face. I no longer look like a raving lunatic or a miserable homeless down and out. I look... civilized. Kind of.\n\n\"Thank you so much Mr. Sharas. I really appreciate this. How much do I owe you?\"\n\nThe barber quotes his price and I pay, thanking him again before leaving the shop and walking the block over to the psychiatric clinic. The light exercise is good for my nerves, releasing them with each stride. Still, by the time I take my seat in front of the good doctor my heart is pounding again.\n\nTrust and hope.\n\n*\n\n\"So, Dan, how are you today? You look a thousand times better than you did on Tuesday.\"\n\nI feel the light trembling in my hands. I want to run, and at the same time I want to just blurt the whole thing out and be done with it. I settle on answering the truth, which is bound to lead the next line of questions directly to the heart of the matter:\n\n\"Thanks. I'm doing better. Nervous as hell though.\"\n\nDr. Pappas raises his brows. \"Oh?\"\n\nI shrug and explain: \"I figured we'd talk about Naomi today. My ex-wife. There's some... heavy stuff there. I have no idea how you're going to take it.\"\n\nDr. Pappas' mouth quirks upwards. \"Let me promise two things before you do: One, everything you say here is privileged information and will not be shared with anyone. And two, I've heard some crazy shit before and have dealt just fine. Try me.\"\n\nHe continues to hold my gaze evenly, sitting in his chair and leaning slightly forwards towards me with his elbows on the cushioned armrests, his fingers laced loosely. I find myself mimicking his position, except my own fingers are clenched together so tightly the knuckles turn white. I grind my teeth and swallow past the dryness of my throat a couple times to get my voice to function, and then I blurt out:\n\n\"Do you know what a D/s relationship is? Ever heard of BDSM?\"\n\nThe doctor's eyes widen by a tiny fraction but that's the extent of his outward response. He doesn't pull back. Instead he nods slightly.\n\n\"Yes, I've heard of it, of course. Haven't experienced it first-hand, nor have I ever treated a patient who was leading this kind of lifestyle, but I am somewhat familiar with the basics.\"\n\nLeading the lifestyle, he said. Phew. I exhale slowly, trying not to be too obvious about it, as I feel some of the tension leave my shoulders. It doesn't go unnoticed by Dr. Pappas.\n\n\"You seem relieved. Were you expecting a different response?\"\n\nI shift my weight uncomfortably and wave my hands trying to find the right words.\n\n\"I - It's the first time I'd ever... come out, I guess is the closest way to put it. Aside from my best friend and his wife - who actually learned about it just recently from Naomi, not me - I've never told a soul about my... alternative lifestyle. I didn't know what to expect... I kinda thought you being disgusted and kicking me out of here was the most probable outcome.\"\n\nHe actually smirks at me. \"Sorry, you'll need to try much harder than that.\"\n\nI smile back but it washes away quickly as I answer. \"Well you know it gets worse...\"\n\nDr. Pappas sobers up but answers calmly, still looking me straight in the eye. \"Yes. I know. You told me at the hospital that you attacked your ex-wife, remember? And I still offered to be your doctor. You accepted, and here we are. You haven't scared me away, and I don't think you will. The question is: Will you trust me not to freak out on you?\"\n\nHis words startle me; they hit so close to my own thoughts prior to this appointment.\n\n\"I - Yeah. I think I can do that. Trust you, that is.\"\n\n\"Good. So let's go back to your relationship with your ex - tell me more about that. Start at the beginning.\"\n\n*\n\nThe hour-long meeting flies by so fast I am surprised when Dr. Pappas looks at his clock and tells me we will continue on Tuesday. Sitting in the cab on my way home I am deep in thought, processing it in my mind.\n\nWe haven't even got to the divorce yet. The conversation was all about how I met Naomi, how and when we decided to marry, and the evolution of our relationship from the occasional spank in the heat of the moment to a proper Dom-sub exchange, not quite 24/7 but certainly more than the odd play session.\n\nWe spend quite some time on the theory of it - what BDSM is all about; SSC, power exchange - and I can't escape the memory of the very similar conversation I've had just a few weeks ago with Jon and Annie which took place just before my breakdown. It feels as if a lifetime had passed since. As opposed to my friends' very personal reasons for taking an interest in the subject, Dr. Pappas seems interested in an academic sort of way.\n\nWell at least he cares enough to want to understand me.\n\n~~~~~~~~~\n\nBack home I am busy in the kitchen. I was exhausted earlier when I came back from the clinic and crashed for an hour on my couch, but now I feel refreshed and a little agitated. I channel my excess energy into chopping vegetables to make a fresh salad - cucumber, tomato, fresh onion and Kalamata olives. The salty cheese chunks will be added later, as would the olive oil and fresh lemon squeeze.\n\nI'm making dinner in hopes of sharing it with Sandra. I'm not 100% sure she can stay long enough to eat but have decided to take a chance, knowing she had spent all day in nurses' school today and was stopping on her way back home.\n\nShe probably has other plans. It is Friday after all.\n\nI ignore that negative little voice in my head and remind myself to trust and hope.This new-found optimism feels strange, like a new pair of shoes that needs to be walked in for a while. I'll make it fit, goddamit. Now finished with the salad I move over to the fridge, pulling that homemade Lasagna I'd been saving for 'a special occasion' out of the freezer. I have made a fresh Tzatziki earlier and have some nice white wine cooling, too. I hope Sandra likes it.\n\nI pop the frozen dish in the oven to heat and take a quick look at the time - 5:40, I've got about 35 minutes before she gets here. Good. Glancing over to my coffee table I make sure it's set nicely - as nicely as can be considering it's not a real dining table and there's no tablecloth - and with a satisfied nod I head out to the shower. I want to be my best when she arrives.\n\nAs if to prove to myself that I really am okay I forgo the bath and decide to take a shower instead. It's been fucking ages. Stepping into the steaming water without holding on to anything is a small victory, admittedly, but I savor it all the same. I stand there for a minute soaking the heat up before reaching for the blue shower gel... and pause.\n\nShould I? Or should I not?\n\nHell yeah. Fuck it all. Besides, the way I've been going I'd probably embarrass myself if I didn't.\n\nThose now-familiar mental images of Sandra come rushing in, filling my head with vivid colors as my slippery palm wraps around my quickly-swelling dick. Vague memories of Naomi still linger as well following my conversation with Dr. Pappas, and my mind seems to hover there for a moment, conjuring up my ex-wife's compact, athletic body and comparing it to Sandra's rounder, curvier form. While I'd always loved Naomi's petite physique it holds surprising little allure to me now; instead there is nothing I want more right at this very minute than to sink into Sandra's luscious femininity. Sink my fingers into her supple flesh. Sink my tongue into her soft sweetness. Sink my cock into her slippery depths.\n\nMy left palm is flat against the wall to keep me from falling over while my right fist pumps my now achingly-stiff member going as fast as I can. I don't care how pathetic I am. I don't care how messed up it all is. All I care about is the images of Sandra dancing in my head and the pleasure building in my groin.",
        "I keep stroking faster and faster, my movements short and jerky focusing on that most sensitive patch of skin where every nerve ending is firing up begging for more, more, more until that telltale tingling starts at the bottom of my spine and then travels forward to engulf my balls and then rushes up my shaft and explodes from the tip, blowing my load all over the wet shower wall.\n\nFfffhhhhhhuuuuck!\n\nI heave and pant for several long moments, struggling to regain control of my breath while watching the long, thick jets of cum slide slowly down the tiles. The now-familiar post-orgasmic headache and dizziness settle in but aren't as bad as before and I manage to slowly sink down to my knees, holding onto the sides of the bath, and stay there for a couple of minutes longer until I can leave the tub without risking any dumb falls. I hope.\n\n~~~~~~~~~\n\n\"Wow! Look at you... I mean... Wow!\"\n\nSandra is staring at me from the doorway, looking positively shocked. And pleased, if I can go by the twinkle in her eyes and the up-tilt of her voice. I grin self-consciously back at her.\n\n\"So you like?\"\n\nShe laughs. \"Oh yeah, I like all right! Not that I'm averse to the rough-around-the-edges look but I'd admit you took that one to the extreme... you do clean up nicely, Dan. Well done!\"\n\nMy smile widens and I answer with a playful jest - \"Why, thank you, young lady. I aim to please. Please do come in.\"\n\nI step back and hold the door, still watching her face, and my guts clench at the way her eyes widen and her cheeks turn pink at my words. Young lady.\n\nFuck. Should I apologize?\n\nBut Sandra doesn't seem offended. Instead she steps in and then pauses again seeing the coffee table set up for dinner for two and turns back to me, both eyebrows raised with real curiosity, and just a hint of disappointment in her voice.\n\n\"Expecting company tonight?\"\n\nSuddenly I'm nervous. What if she refuses my invitation? It's not exactly appropriate after all, even if I really mean it as a sincere thank-you gesture. I gulp and clear my throat. Fuck propriety. I just hope she doesn't freak out.\n\n\"I - ahm, I actually was hoping you'd let me offer you dinner tonight. You know... to show my gratitude for taking care of me this past week. I...\"\n\nI stop and gauge her expression. Her brow is still a tiny bit furrowed, as if she's considering it. I finish quickly. \"I really do appreciate your help, Sandra. Not only did you take care of the medical stuff but you kept me well-fed and clean and prevented me from pulling any crazy-assed macho stunts... I'd love to do this for you. If you don't have any other plans, that is.\"\n\nDamn. I hate how insecure I sound. I bite the inner side of my cheek to keep from saying anything else and just wait.\n\nShe looks at me a little oddly for another moment before answering lightly - \"I was happy to do it, Dan. It was a good opportunity for me to make a bit of extra cash. And sure, dinner sounds great - I'm actually starving! Is there anything I can do to help?\"\n\nI feel my confidence come back at her enthusiastic acceptance.\n\n\"No, no, you're officially off-duty. No more work for you tonight. As of right now you are my guest. Please have a seat and I'll get the food out.\"\n\n\"Oh - all right, sure. Thank you.\"\n\nSandra gives me another tentative smile as she walks over and settles down on the couch. She's wearing that white button-down uniform dress which does crazy things to my imagination, especially as it pulls up to expose several inches of her lightly-tanned thighs. God she's got great legs. Her hands fidget in her lap and I can see she feels a bit awkward with this sudden change of roles but at the same time she seems to accept it graciously. Good. I turn and walk over to the kitchen, coming back with the chilled white wine.\n\n\"Pour for us while I get the starters, all right?\"\n\nShe nods and reaches for the bottle and I go back to retrieve the tzatziki from the fridge, as well as the salad, a small dipping bowl with olive oil and balsamic vinegar, and a fresh loaf of bread which I've heated up in the oven for a few minutes along with the lasagna. I slice the bread up into thick chunks and then place everything on a tray and carry it to the living room, amazed at how good I feel right now. How alive. How... hopeful?\n\nOnce the appetizers are all set on the table I put the tray away and sit down next to Sandra, accepting the glass of wine she hands me with a smile.\n\n\"To your health, Dan.\" She surprises me with her offer of a toast, but I like the straightforward sincerity in her words.\n\n\"Thank you Sandra. To good health all around, indeed. Yamas!\"\n\nShe smiles and mumbles \"yamas\" as we clink our glasses carefully and take a first sip of the fresh, light wine. I almost choke when her pink tongue comes out to lick her lips, savoring every tangy drop. Gulping fast I clear my throat:\n\n\"It's not exactly gourmet food but I hope you enjoy it. Please dig in. Bon appetite!\"\n\n*\n\nAt the sink in my kitchen I take a few slow, calming breaths while rinsing our plates with absent-minded efficiency. There's a light buzz in my head and another, heavier one, is echoed deep inside my core. Neither one of them has much to do with the wine; I'd barely had a single glass. I know I need to get a grip before returning to the living room.\n\nWe've just finished eating and I made Sandra stay put on the couch and finish her wine while I cleared the table and took care of the few dishes. I desperately needed this moment to myself, to step away from that magic spell that woman weaves around me without even trying; to think with my head rather than with other body parts.\n\nThere was an awkward moment when we'd both reached for the bread at the same time and our fingers touched. Oddly, neither one of us pulled away; at least not immediately. We just sat there, mesmerized by the tiny skin-to-skin sensation, eyes locked together, breaths held, two matching deer-in-the-highlights panicked looks on both our faces... until the silliness of it struck and we both cracked up and pulled back, laughing. I gestured for her to go ahead which she did with a shrug and a smile, and I felt like we'd just passed some kind of a test.\n\nAside from that I've thoroughly enjoyed sharing the meal with Sandra. Even with the constant inner struggle to keep my attraction to her hidden and under control, it was fun. It felt natural to be sitting so close together, eating and talking and appreciating each other's company. And now I'm stalling in the kitchen because I don't want the evening to end; don't want her to leave just yet.\n\nI can't keep her here, either.\n\nWith a heavy sigh I finish the cleanup and wipe my hands dry, and then roll my shoulders before straightening up, my hands balling to fists at my sides.\n\nRight.\n\nWith a conscious effort I unclench my fingers and try to soften the too-tight muscles at my back. You've done well tonight, Dan. Don't fuck it up. Taking another moment to wipe the frustrated scowl off my face I walk back into the living room, finding Sandra standing by the small bookcase at the corner of my living room, checking out the titles there. She turns back to me with a tentative smile.\n\n\"So you're into popular science?\"\n\nShe's in no hurry to leave?\n\nI clear my suddenly-tight throat and try to focus on her words. \"Yeah, I guess so. Never was much of a reader, I gotta admit. But this stuff I like. It's interesting, and I can read it in small chunks without forgetting the plot...\" You're bubbling, Dan. \"How about you? You read a lot?\"\n\nSandra half-smiles and seems a bit embarrassed, but still meets my eyes when she answers. \"I like popular science too, when the mood strikes. But usually I read what you'd call junk - romance novels mostly, and sometimes sci-fi and fantasy.\"\n\n\"Romance novels? Seriously?\" I'm truly surprised. She seems like such a practical woman. I was not expecting that.\n\nThe pink on her cheeks deepens. \"Yeah. And even though most of them are complete rubbish I still enjoy them. They're like fairy tales for grownups. And there's always a happy ending. I love those.\"\n\nI look at her face, all lit up and animated as she defends herself - unnecessarily - from my impending criticism. I can't resist poking a bit more fun at her. \"I tried reading one, once, a long time ago. Gave it up after a chapter or two. How can you stand that stuff?\" I shake my head mockingly, aiming for a slightly condescending tone, but smiling wide to make sure she doesn't mistake the haughty ring in my voice for anything too serious.\n\nHer eyes twinkle mischievously back at me. \"Now that's interesting! You'll need to tell me the story of how you got to be reading that one in the first place!\" And then she shrugs nonchalantly and adds: \"Besides, you must not have gotten to the really naughty parts...\"\n\nShe wiggles her eyebrows comically, but underneath them her baby-blue eyes have grown a shade darker as they lock with mine. I swear I can see desire smoldering in their depth - is it from remembering some of those naughty parts, or something else? - and my heart skips a beat only to kick-start in a shallow, quick pace a moment later when her tongue sneaks out to swipe quickly across her lower lip in a tiny nervous gesture.\n\nI hold myself perfectly still - well, all of me except for my dick, which is swelling so fast it's already uncomfortable inside my jeans - and I try to think of something to say which would not scare her right away. But my mind is blank; or rather it is filled with swirling, tantalizing images of Sandra fully enjoying the naughty partsof some cheesy romance novel...\n\nOn her back in her bed, legs splayed wide and bent, making her little nightie slide back to bunch around her hips... one hand holding the worn paperback up close to her face while the other sneaks down to her dampening panties... stroking lightly over her barely-covered slit, teasing herself, rubbing through an ever-growing wet spot before slipping under the elastic, seeking her hot, slick folds...\n\nI blink rapidly, twice, and suddenly Sandra is standing close, real close, so close that I can smell her sweet skin, and then she steps closer still and the tips of her gorgeous breasts touch and then press against my torso, her hands coming up to rest on my shoulders, her thumbs grazing my convulsing neck. I fist my hands so hard at my sides they are going to have nail marks in them later. I must still be hallucinating. This can't be real.\n\nBut then I feel her nipples, poking like hard erasers through her thin white uniform dress, sliding a few inches up my chest as she pushes herself onto her tiptoes until her mouth is just a tiny dip away from mine and her hands press lightly at my nape, silently communicating her wishes.\n\nFuck... argh, FUCK! I need to taste her. Just a taste... and then I'll stop.\n\nAnd then all thoughts vanish when I let her draw my head down to eliminate the distance between us and I feel her full, soft lips, slightly parted, press warm and gentle against my own in a slow and lingering kiss.\n\nIt takes a moment - and every shred of self-control - to curb my instinctive response. In that uninhibited heartbeat my own lips open and my palms come up to the delicious curve of her waist, my thumbs barely skimming the sensitive sides of her full, heavy breasts. Sandra responds by pressing her whole body into mine, tilting her pelvis forward and rubbing her Venus mound in sweet, tiny motions against the steel rod in my pants. The very tip of her tongue slides past her lips to flick against mine.\n\nOnly then does my long-practiced discipline fully kick in, but even with that it is all I can do to hold myself in tight check while Sandra continues her sweet exploration, her tongue sweeping along my still-too-sensitive lips. Small stings of pain flare and shoot from the scarred tissues, mixing in with the pleasure rising up from my groin, somehow deepening it.\n\nBut then she draws back an inch to look at my injured lips and comes back to place the softest of kisses on the worst of my bruises, and suddenly reality comes back to kick me in the guts.\n\nWhat the fuck am I doing?!\n\nWith a sharp intake of air and a mumbled curse my hands tighten to hold Sandra firmly in place as I take a step backwards, putting some much needed space between our bodies. But no matter what my mind tells me I can't let go of her body under my palms, and she seems just as reluctant to let go of my shoulders. So we stand like that for long, agonizing moments, still in each other's arms, sort of, both breathing hard, staring mutely at each other.\n\n\"Why not?\"\n\nHer voice is raspy but at the same time challenging, demanding the truth. Her question cuts straight to the point and there's nowhere for me to hide.\n\nMy answer comes out as an agonized whisper. \"Because I don't want to hurt you.\"\n\nAt first there's confusion on her face, and then her eyes widen with realization, only to darken a moment later, hurt and humiliation flooding their depths. She tears her hands from me and takes a stumbling step back, balling her palms at her sides.\n\n\"I see.\"\n\nShe swirls around, her eyes frantically searching - for her bag, probably - and my hand shoots out on its own accord to grab at her upper arm, stopping her in her place.\n\n\"I don't think that you do, Sandra.\"\n\nI keep my voice as low and steady as I can, but I think she can still detect the ring of desperation just under the surface. Maybe that's what makes her stop and look at me again. Her eyes are too bright and red-rimmed. Fuck.\n\n\"Don't I?\" She tears her arm from my hand with an impatient jerk and turns to face me squarely, palms on hips, back straight, chin and chest thrust up. Sexy as hell. I can't help but notice.\n\n\"I think I understand perfectly well, Dan. For all your fancy open-minded talk youdo think that I'm a freak because of what I told you at the hospital. But you're one of the good guys, and my kink really doesn't do it for you. You don't want tohurt me. Well, just FYI, that's not what I was looking for just now. And the fact that I sometimes like to be dominated in bed doesn't mean that I can't enjoy good ol'...\"\n\nHer voice trails off when the expression on my face finally registers.\n\n\"Th - that's not what you meant, is it?\" Her words now are only barely above a whisper.\n\nSlowly, I shake my head from side to side. I don't trust myself to speak.\n\n\"Oh lord... just shoot me now.\"\n\nSandra buries her face in her hands, and then walks over to the couch on flops down as if all her energy had just deserted her. She leans back against the cushion, her face still hidden behind her palms. I follow her to the couch and fold myself carefully down beside her. She peeks through her fingers and I try to reassure her with a half-smile as I reach out to take her wrists and gently pry her hands away from her burning cheeks.\n\n\"As I said, I don't want to hurt you... so I'm afraid shooting you is off the table, too.\"\n\nMy lame attempt at humor is rewarded with a small twitch at the corner of Sandra's full lips. I am momentarily distracted by that pink lusciousness, and it blooms in response into a real smile. Caught, I force my gaze to travel up her reddened face to her eyes, and find them looking straight at me, quietly curious.\n\nTime to 'fess up, Dan. Now.\n\nUnconsciously locking her wrists between my fingers and thumbs as I take her small hands in my much larger ones I straighten up to tell her as much of the truth as I dare.\n\n\"What I meant was that I don't trust myself not to hurt you, Sandra.\" She tilts her head as she considers my statement but doesn't seem convinced. I try again.\n\n\"You asked me 'why not' - that's why. I was afraid - am afraid - that I'd lose control. That I'd screw up and hurt you without meaning to -\"\n\nNow Sandra seems downright confused. Sighing deeply I release her wrists to rub both hands over my face before taking another deep breath and facing her again. She sits quietly, her eyes expectant and somewhat wary. Good. She should be.\n\n\"Sandra, I'm - first of all, I have not been completely honest with you at the hospital. While I did tell you that I am not at all disgusted by your kinks, as you put it, I had conveniently - cowardly - failed to mention was that I actually shared some of them. You see, I -\" gulp - \"I'd been dominant in most of my sexual relationships. Including my marriage.\"\n\nSandra's mouth drops open but no words come out. After a moment I continue.\n\n\"You should also know that I'm not one of the good guys. Not by a long shot. I told you that before, too. I've done some things...\" my throat closes painfully and I almost choke. I cough and swallow and start again, forcing myself to look her in the eyes.\n\n\"I hurt my sub - my wife. My ex-wife, actually. Anyways... I'm not even sure how it got to that but - but the bottom line is I hurt her, bad. And I can't risk...\"\n\nSandra shakes her head looking faintly dazed. \"I don't understand, Dan. What do you mean, you hurt her? Hurt her how?\"\n\nI rub my hand over my eyes again feeling immensely tired all of a sudden. When I answer I almost can't recognize my own voice, it sounds so defeated. \"I hurt her, Sandra. I lost my mind and I hurt her. When I heard she had found herself a new Dom... I flew out halfway around the world and tracked her down to her place and there I -\"\n\nI make myself look into her eyes again and continue, quietly determined now.\n\n\"What I did to her... I broke every rule, every agreement we ever had, even if we hadn't been divorced for two whole years. I bound and gagged her without her consent. I slapped her, even though I knew that was a hard limit. I ignored her fucking safe word. I spanked and belted her and I -\"\n\nThe incredulity in Sandra's eyes is too much for me to handle. I break away from them and drop back against the cushions, hands holding my head, staring unseeingly at the white ceiling above me. The horror movie that is the memory of my attack on Naomi comes rushing back to play in my mind again, and I can't help but watch it, the wretched nausea rising and threatening to choke me any second.\n\nI can hear nothing beyond the blood rushing in my ears and my lungs start to burn with too-heavy, too-fast breaths so it takes several long moments for the sensation of soft, warm palms squeezing and shaking my shoulders to penetrate through.\n\n\"Dan, stop. Please. You're hyperventilating. You need to stop, now.\" There's an urgent authority to her voice, much like there was back at the hospital. \"Cup your hands and blow into them, Dan. Here, like this -\"\n\nShe demonstrates quick, hard exhales into her cupped hands covering her mouth and nose, and then grabs mine and pushes them in front of my face, still puffing out like a freakin' doula coaching a woman in labor.\n\nSomehow that does the trick though - I find myself mimicking her motions, letting her hold my hands such as to make me re-breathe the air going out of my lungs in order to counter the effect of hyperventilation. Slowly my head clears and the buzzing in my ears subsides.\n\nMy eyes re-focus and I am suddenly aware of Sandra again - really aware of her - kneeling on the couch right next to me, the hem of her white uniform dress riding up her thighs because of the way her knees are positioned, open wide to keep her balance as she was leaning over me. And she's still holding my hands in both of hers, her eyes again searching my face.\n\n\"Better?\"\n\nI nod once, mutely. Sandra lets go of my hands and slowly gets off the sofa and sits down on the coffee table, facing me.",
        "\"What just happened?\"\n\nHer voice is low and strained. I shake my head to clear the last of the cobwebs away before I answer.\n\n\"According to Dr. Pappas, that would be one of the symptoms associated with my PTSD. Which I'd just recently learned isn't limited exclusively to victims. Apparently we bad guys can get them, too. Poetic justice, huh?\"\n\nSandra doesn't join my ironic, twisted sneer. There's a hint of sadness in her eyes though I get the feeling she's trying to hide it because she knows I'd reject it. Save your pity to those who deserve it, lady. Instead she reaches out to cup my injured left jaw softly in her warm palm. I feel myself clench inside at the gentle, ultra-feminine touch. For all its softness I know the feeling would be branded into my skin.. She seems to sense my discomfort because she draws back, and my jaw clenches at the loss of her touch.\n\n\"What you just told me you did, Dan... I don't know what exactly to make of it just yet. I'll need to think about it.\" I nod my head, not meeting her eyes. She hates me now. I should be thankful; she'd keep a safe distance. But then her fingers wrap around mine, squeezing, making me look at her.\n\n\"But here's what I know so far: I know that facing what you did drove you to attempt suicide. I know you're now in treatment. I know you get panic attacks just thinking of what you did. And I know you stopped us from taking things any further tonight because right here, right now, you're responsible and caring enough to do the right thing; because - as you told me yourself - you don't want to hurt me.\"\n\nShe pauses, her expression softening, a ghost of a smile showing briefly before it disappears again. \"I told you back at the hospital that maybe you're not as bad as you think you are, Dan. I still feel that way. I think maybe that's why it's such a trauma for you.\"\n\nShe gets up and turns away, effectively preventing me from answering her, instead making her words echo in my ears, giving them a fighting chance against me inner demons. She picks up her backpack from behind the single chair and swings it over her shoulder, then turns and looks at me again.\n\n\"I like you, Dan. I really do. I don't know what it was exactly that drew me to you even back at the hospital, but maybe I sensed there was more in common between us than met the eye. And as for you not trusting yourself not to hurt me - I hope that at least you give yourself some major credit points for tonight. I know I do.\"\n\nI just stare at her, not ready to acknowledge her words in any way. Sandra smiles faintly and turns towards the door. I wish there was something I could say to make her stay a little longer. Once she's out that door she'd be gone from my life. The thought slices my gut but I keep my mouth resolutely shut.\n\nAnd then she stops as if remembering something else and turns to look at me, a renewed spark in her eyes.\n\n\"Hey, how about that new business of yours? Have you started on any projects yet?\"\n\n\"I - what? Er, no, no I haven't started anything. Did some more planning but nothing beyond that. W-why?\" Damn but she caught me off-guard again.\n\n\"Well, I actually have quite a long backlog of odd stuff that needs to be taken care of. Would you help me with it?\"\n\nI stare at her for a moment. \"You serious, Sandra?\" Why isn't she running out that door, dammit?\n\nShe turns back to face me fully. \"Yeah, I'm serious. When can you swing by?\"\n\nI grimace, feeling a bit dizzy again, fighting to not sound like I've just got out of an emotional tornado. \"As you can imagine I'm pretty much open these days... Wh - what kind of stuff do you need fixing? I - I need to make sure I've got all the tools I need.\"\n\nSandra ignores my stuttering and gives me a quick list. It's all pretty standard, and listening to her calms my nerves and allows me to gather my wits about me. I nod slowly as I contemplate the logistics.\n\n\"Yeah the workstation setup in your study and hanging the shelves in the bedroom is not a problem. Cleaning the solar panel should probably wait another week or two until I'm completely stable on my feet, and I can check the gutters at the same time if you'd like, too. As for the possible leak in the kitchen I can certainly take a look but if anything major needs doing I'd need to stock up on my plumbing equipment, so depending on the situation you may want to just call a plumber to fix it sooner rather than later.\"\n\nSandra smiles brightly at me. \"Awesome! So, could you swing by tomorrow, say - 1pm or so?\"\n\n\"I -\"\n\nTomorrow?! Panic rises in my chest along with a disproportionate joy at the thought of seeing Sandra again, and so soon. Ignoring both I answer in what I hope is a friendly professional manner.\n\n\"Er, sure, ahm, tomorrow 1pm sounds good. Wanna give me your address?\"\n\nThe unabashed excitement on her face is humbling. \"Sure, I'll text it to you. Thanks Dan, you're a lifesaver! I'll see you tomorrow. Have a great night!\"\n\nShe turns to leave and I scramble up to my feet, realizing belatedly that I should probably walk her to the door, when she stops again and smacks her forehead with her palm. \"Gosh, where are my manners? My mother would be appalled if she ever heard.\" In a couple of strides she's back in front of me and a small smile hovers on her lips. She looks up into my apprehensive face as if measuring me up and then slowly, deliberately, reaches up with her fingers to hold on to my shoulders, their tips grazing the back of my neck. In a motion so reminiscent of earlier in the evening it feels like the craziest d\u00e9j\u00e0 vu she gets up to her tiptoes to place a soft kiss on my good cheek. \"Thank you for a lovely dinner, Dan. I truly enjoyed all of it - the food, the company - everything. Thank you.\"\n\nI smile back down at her, my palms once again resting at the sweet dip of her waist. I'm going to fantasize about this curve tonight. \"It was entirely my pleasure, Sandra. Thank you for sharing it with me. And thank you for not freaking out... and for giving me much more credit that I honestly deserve.\" I should let go but I don't, and neither does Sandra.\n\nWe stand there for a long moment together, her hands resting atop my chest, mine curved around her back. There's low-key tension humming between us and I swear I can look straight into her soul through the wide-open windows of her eyes seeing every emotion shining through: her compassion and her generosity, her need and her courage.\n\nYou mean her naivety and recklessness, for not running as fast and as far as she can from you. Right Dan?\n\n\"Sandra, I -\"\n\n\"Shhh... no. Enough talk for tonight. I'll see you tomorrow, Dan. Thank you again for dinner. Good night.\"\n\nShe turns and walks out the door, closing it quietly behind her shapely back, leaving me staring behind her long after she's gone.\n\nTrust and hope. Is that really such a good mantra to live by?\n\n~~~~~~~~\n\n\"...All right. I think it should be good now. It was just a compression joint that had worked slightly loose and needed tightening. Give it a day or two and then check for any wetness; if everything's still dry under here you're all good.\"\n\nMy voice sounds funny coming out from the cavern under Sandra's kitchen sink. I crawl backwards until my head clears the sink and then straighten slowly, still mindful of too-quick movements. Instead of getting up I sit back on my haunches, wiping my sweaty brow on the sleeve of my once-black T-shirt.\n\nStill looking at the plumbing I can sense movement at the corner of my eye. My gaze shifts to focus on Sandra's bare feet coming to stand close to me, the bright pink nail polish twinkling as it reflects the overhead light. I never thought I had a foot fetish before, but now I am forced to reconsider. Sandra's feet look nimble, soft and feminine just like the rest of her, and those little toes, tipped with that ridiculous shiny hue, have real sass. Little toes with a freakin' attitude. Sexy, cheeky and overwhelmingly tempting. Fuck. Down, boy.\n\nWith effort I pull my gaze up, up the long shapely columns of pale-golden skin, over the edge where her legs disappear into the soft, well-worn cutoff jeans, further up to the V where they meet with her body. Upwards still along the brass zipper to the button that holds the denim waistline, hugging her belly in a way that makes me jealous. My eyes pause and focus for a moment on the tiny, shadowed gap between her top and her midsection, where I know the heat and the scent of her skin would be captured. I want to bury my face there, inhale her essence into my lungs. Rub my cheek against her...\n\nAn uncomfortable twinge inside my own short khakis jerks me out of my daydream and my eyes fly all the way up to clash with Sanrda's amused ones. Her face is flushed - obviously from noticing my very close scrutiny of her gorgeous body - but instead of chiding me she brings her weight forward and bends down over one leg towards me, offering her hand.\n\nWith a self-mocking grimace I accept and grasp her wrist, feeling her fingers close around mine in a solid hold as she leans her weight back. I lift up to kneel on one knee and nod my readiness to her.\n\nSandra leans back just a bit further and I realize she's not really going to pull me up so much as give me that minimal assistance I need to get back on my own two feet. I push myself slowly until I am upright again and she lets me bear my own weight throughout, our firmly grasped hands serving as no more than reassurance that she wouldn't let me fall.\n\n\"Thanks.\"\n\nMy fingers are still wrapped around her wrist and I can clearly feel her pulse fluttering against my palm. Back off, Dan. Reluctantly I release my hold and she does the same, our hands falling to our sides as we face each other in her tiny, brightly-lit kitchen. Sandra takes a small step to lean back against the counter, nodding towards the small table tucked to the wall.\n\n\"Wanna have a seat? I'll make us some coffee. Or maybe lemonade? Crushed-ice and mint-flavored?\"\n\n\"You know, right now that sounds perfect. Yes please, I'd love to have that crushed-iced mint lemonade.\"\n\nThe smoldering heat of the mid-summer afternoon pours through her open kitchen window and it will be a couple of hours before the evening breeze starts. I take my seat and lean back, rolling my neck and shoulders a bit to release the kinks, and watch Sandra getting busy at the countertop. She reaches out to the wide window seal where a large strainer bowl sits, heaped high with fresh fruit. Picking out two plump, juicy-looking lemons she surprises me by starting to peel them.\n\nWhat's she doing?\n\nWhen the lemons are both peeled she puts them down on a wooden cutting board, and then uses her paring knife to quarter them lengthwise and discard all the seeds. When the fruit is ready she drops it into a waiting blender next to the sink.\n\nAhh... I get it. Yum.\n\nShe adds the ice cubes and a handful of mint leaves, hand-picked right in front of my amazed eyes from a small planter sitting next to the strainer on her sunlit window seal. A generous dash of sugar melted in a quarter-cup of boiling hot water completes the list of ingredients.\n\nWithin two minutes, I am slurping away the absolute best freakin' lemonade I've ever had.\n\n\"Hmm. This is really great, Sandra. Just what the doctor ordered in this heat!\"\n\nSandra smiles her pleasure at my enjoyment. \"Glad you like it, Dan. Just be careful not to take too-large gulps, I don't want you getting a brain-freeze.\"\n\nI nod - she's got a point there - and slow down a bit.\n\n\"You know that's not even my best recipe.\" Sandra's smiling wide and I notice a faint dimple on her right cheek. I didn't know I had a thing for dimples, either.\n\nI bite, because she so very obviously wants me to. \"Oh? And what could possibly top this fine, fine iced mint-lemonade?\"\n\nSandra chuckles. \"I could have you guess, but I'll take pity on you. Let me show you instead.\" Getting up from her spot across the small, bare wooden table she opens her fridge and brings out a thick, semi-translucent glass bottle. Closing the fridge door with her naked heel she saunters back to me with an exaggerated swing of her hips and places the bottle on the table in front of me.\n\n\"Everything's better with a drop of Ouzo. And this one is the best.\"\n\nI look at the bottle, then back at Sandra leaning casually back against the wall.\n\n\"I -\" I move uncomfortably in my chair. \"You sure, Sandra? It's not even 4pm...\"Fuck. I sound like an old stuck-up. I half-grin apologetically at her. The truth is I think I can see where this is going. Consciously or not, Sandra wants us both to loosen up, while I, on the other hand, can't trust myself to keep my distance even with a straight head. Drinking would not help bolster my resolve.\n\nSandra tilts her head to the side, looking at me questioningly, and then shrugs and says lightly: \"It's Saturday, Dan. You're done with your work for today and I only need to get to the hospital at 11pm tonight, so I intend to get a few good hours of sleep later this evening. But hey, you do whatever suits you. Me, I like my frozen Ouzo lemonade on a hot Saturday afternoon.\"\n\nWith that she reaches for the bottle again and pours a small shot into her tall glass, swirls it lightly in one hand and re-caps the liquor with the other, and then raises her glass in a tiny gesture. \"Yamas!\" she murmurs and takes a long, deep pull from her straw. Watching her lips wrap and tighten around it and her cheeks hollow as she sucks in the icy drink is a unique kind of torture. I reach for my own, still-virgin drink and take a hasty gulp, almost getting that wicked brain-freeze that she warned me of in the process.\n\nThe icy liquid sliding down my throat does nothing to chill my runaway imagination and I feel heat engulf me inside and out. I bunch the soft cotton of my T-shirt in my fingers and pull it away from my torso, futilely trying to fan myself. It does nothing but stick it even worse to the sweaty patches on my back.\n\n\"It's hot today, isn't it? And you've been working hard, too. Feel free to take off that T-shirt, Dan. I can even wash it for you real quick if you'd like. Quick cycle and air-dry will take no more than 45 minutes in this weather.\"\n\nMan but it's tempting. \"Nah, that's all right. I really should get going, Sandra. Thank you for the lemonade -\"\n\nSandra stops me from rising to my feet by covering my fingers with her own on top of the table.\n\n\"No! I'm - I'm sorry, Dan. I didn't mean to scare you away. Please, stay.\" Her eyes, so clear and light just moments ago, now look deep-blue and troubled. Her small, white teeth worry her full lower lip, the small bite making it redden and swell. Fuck.\n\nWithout fully intending to I find myself holding her fingers in my own, my thumb caressing her knuckles lightly, marveling at the gentle strength in them. I don't get it. Don't get her. It doesn't make any sense at all. Finally I decide to stop second-guessing her and simply ask.\n\n\"Why, Sandra? You know who I am. You know what I am. Why seek out my company?\"\n\nHer chin sticks out in a silent challenge. \"And what exactly are you, Dan?\"\n\nA pathetic loser, that's what I am. My hand leaves hers, balling in my lap instead. \"I'm an abuser, Sandra. I told you what I did.\"\n\n\"Hmm.\" Sandra leans back in her chair as well, arms now crossed in annoyance. \"And you're telling me that once an abuser, always an abuser? That from now on this is how you're going to treat every woman in your life?\"\n\n\"I - what?! No, of course not!\"\n\nShe quirks an eyebrow silently at me.\n\nI stare right back at her, furious at first, then exasperated, and finally with resolved conviction. This one I've been thinking about, long and hard. When I speak again my voice is low, steady and clear. \"I'm never going to hurt a woman again, Sandra. That's exactly why I'm keeping my distance. I'm not going to put myself in a situation where it might happen.\"\n\nSandra is taken aback at first but immediately leans forward, disbelief written all over her pretty face.\n\n\"Let me get this straight. You're telling me you're never going to have sex again? Like... ever? That's...\" Crazy. I can hear her thoughts. But instead she says: \"... quite extreme, don't you think?\"\n\nI answer the only way I can. \"Yeah, it is extreme, but also effective. My other option was suicide... you got other suggestions?\"\n\nShe shakes her head slowly, still not fully accepting my words. \"So you're going to be celibate? That's your plan? I mean, what about your... needs?\"\n\nI lean forward, resting my forearms on the table top, lacing my fingers together to keep from fidgeting. Embarrassing as this may be, it somehow feels right to be talking to Sandra about it. She'd already seen me at my absolute worse. She already knows my darkest secrets. She should hear this, too. I lift my eyes to look into hers.\n\n\"Well, to be honest I was thinking of going online. Keeping it completely anonymous and without any physical contact should be safe enough.\"\n\nSandra's mouth falls open with a gasp; she simply gapes at me in utter shock. A moment later she snaps her mouth shut, swallows hard, and clears her throat before speaking.\n\n\"Well, I - I guess that makes sense in many ways. I just - what about the physical part? In the end of the day it's not all in your head, right?\"\n\nI'm shocked to feel a half-smile twisting my face, even if it's only dry sarcasm. \"To be honest, Sandra, I think it pretty much is... all in my head, that is. Of course a great mind fuck would ultimately culminate with some other body parts involved, but that much I can take care of by myself, you know.\"\n\nI take a quick sip from my lemonade to soothe my desert-dry throat and almost choke on it when I hear her mumbled \"yeah, I know\" just barely audible above her breath.\n\n\"Wh - what did you say?\"\n\nHeat rises in Sandra's cheeks but she meets my gaze squarely and repeats in a stronger, steadier voice: \"I know you can take care of those other body parts by yourself. I heard you doing it every night in the bathtub for the past few days.\"\n\nAll the air leaves my lungs in a big puff and I can't seem to suck in another breath to replace it. Ffffuck! How pathetic she must think I am. The buzzing in my ears makes me almost miss her next words.\n\n\"Truth is, I kinda liked it... I thought it was hot.\"\n\n\"You - wait, what?!\" My tongue feels heavy in my mouth and I can barely get any words out.\n\nSandra slides out of her chair and walks over to me, slipping along the edge of the table to stand right in front of me, her bare legs grazing my thighs, her pelvis inside its enticingly short denim package way too close to my face for me to be able to think of anything.\n\n\"Yeah, I did. I hoped you were thinking of me...\" Sandra wraps her arms lightly around my neck and moves to straddle over me, then slides slowly down until her sweet ass presses between my slightly-parted knees. I keep my own hands flat on the table. I know if I move them even an inch they're going to bury themselves in the silky tresses of her hair and hold her there immobile... No. I cannot do that. My palms fist over that darned table behind Sandra's back, knuckles turning white.\n\nTracing my newly-cut hairline with a feather-light touch Sandra speaks to me in a hesitant voice that bellies her bold moves.\n\n\"What if... what if I did have another suggestion?\"\n\nI stare up at her flushed, nervous face, and I think I've never seen anyone so beautiful in my entire life. I wait.\n\n\"What if we took it one small step at a time?\"\n\nI swallow hard again. \"Wh-what do you mean?\"\n\nI think she can hear my heartbeat pounding in my chest. I know I can see hers, pulsing quickly in that little dip at the center of her collarbone, just above the deep valley peeking from her scooped top. My eyes become glued to a clear drop of sweat that starts rolling southwards into that valley. I wonder if it's caused by the stifling heat or by her nerves. Both, probably. Her fingers shake slightly when they come to rest against my jaw. I lift my eyes to hers again.",
        "\"I mean... kissing me, for example. Is that risky? Are you going to hurt me if you kiss me?\"\n\nShe holds her breath and waits. The tremor in her fingers gets worse with every second that passes without an answer, but she doesn't move away. I admire guts.\n\nFinally, slowly, my hands lift up, leaving clammy handprints on the table top, and slowly sink into the hot, damp tresses at her nape. A barely-there sigh escapes Sandra's lips as she sinks her head back into the cradle of my palms, her eyes still fixed on mine under heavy eyelids.\n\nI'll never hurt you, Sandra. The thought swamps my mind but I know I can't say it out loud. It would be meaningless. Just my wishful thinking. I can't really promise her that. Instead of dwelling on the bleak, uncertain future I focus on the here and now.\n\n\"Just a kiss?\" My voice doesn't even sound like my own.\n\nSandra nods slowly, seriously, the movement rubbing the sensitive skin of her scalp against my fingertips, and then leans forward. My mouth opens to suck in a quick breath and her sweet tongue dips inside as her soft, full lips sweep over mine in a warm, wet caress, draw back for a second, and come down for more.\n\nMuch, much more.\n\nInstinct takes over. One kiss becomes two, and then ten, over and over our mouths meet and mesh together, our tongues tangle and taste each other's need. And at the same time we're both careful - Sandra of my injuries, me of my own natural instincts - keeping my fingers from fisting in her hair; stopping my arms from wrapping too tight around her to hold her fast in place. It's a struggle, but the reward is overwhelmingly worth it. I let my hands slide and skim down her back, feeling her heat under the thin shirt.\n\nSandra lifts her head, her naked need shining in her eyes, honest and vulnerable.\n\n\"I want you.\"\n\nI want you too.\n\nYou can't always have what you want.\n\nI grind my teeth to keep my frustration under check. \"I can't Dom you, Sandra. I won't risk it.\"\n\nShe nods. \"I know. I get it.\" pause, and then - \"but will you fuck me, Dan? Please?\"\n\nFor some reason I feel an achy clench deep inside my chest hearing her words. This woman should have men begging at her feet. She shouldn't be settling for anything less than everything she wants. Certainly not for me.\n\n\"You deserve better, Sandra.\"\n\nI can't read the expression on her face. Her hands move up to cup my face and she leans in for another sweet kiss before whispering into my lips:\n\n\"Please, Dan.\"\n\nGulping around my dry throat my admission comes out raspy and low.\n\n\"I want you too, Sandra. So much that I hurt.\"\n\nA slow smile blossoms on her face. Without saying a word she lifts up and gives me her hand, and once I take it, she leads the way to her bedroom.\n\n*\n\nWe stand facing each other in the darkened room at the foot of the smallish queen-sized bed. Sandra's eyes are hold mine as she brings her hands down to the hem of her shirt and then pulls it swiftly up and over her head, dropping it carelessly to the floor behind her back.\n\nI inhale sharply at the sight of her swollen, heavy, creamy tits encased in half-sheer lace, sneak peeks of darker nipples teasing me through the tiny eyelets. I make no move to touch her. Not yet. Her hands go to her shorts, deftly releasing the button and zip and then her thumbs hook inside the waistband, pushing down while she wiggles her hips from side to side to clear off the widest part.\n\nHer panties, now visible at the open fly of her peeled-back denim, match her bra - pale-lilac sheer material with a pretty lace trim one shade darker and a small satin bow in front. Like a surprise package. I love surprises.\n\nShe lets the cutoffs drop to the floor and steps out of them, walking forward, closer to me. I reach out to touch her shoulders lightly, just enough to halt her from getting any closer. Sandra complies, heeding my silent message. She seems to grow tall as she stands before me with her arms at her sides, her legs slightly parted, chest thrust up, shoulders down, chin tilted towards me.\n\n\"Like what you see?\"\n\nThe tiny tremor in her voice betrays her nerves behind the cheeky challenge. I smile my approval but don't answer. Instead I let me eyes travel down her poised form, appreciating every inch of the abundant beauty before me. My right hand joins the journey, starting at the top tucking a silky strand of hair behind the shell of her ear, then tracing down her throat to her collarbone, the valley between her lush breasts, down to her navel, then out and around to the small of her back, letting the soft lace trim of her panties tickle my fingertips.\n\nSandra sighs softly and and her weight shifts between her legs as she widens her stance by a couple of inches and her hands come up to rest on my chest, but still she doesn't speak. she's waiting for my answer.\n\n\"I love what I see. These undies look so hot on you I think I'm gonna have you leave them on for a while longer.\" And then I add, mostly to myself - \"They're quite the change from those basic cotton ones you usually wear under your uniforms, aren't they?\"\n\nSandra blushes a beautiful pink. \"So you noticed?\"\n\nI chuckle, my fingers still caressing the sloping tops of Sandra's deliciously curvy bottom just above the panty line at her back. \"Of course I noticed. I'm a guy. Not that I'd mind those other ones, honestly. I'd just get you out of them quicker\".\n\nI wink at her and step closer still to fill each one of my palms with a round, firm, soft-skinned globe of flesh. I could swear Sandra sticks out her ass to make it easier for my fingers to capture and squeeze her warm, full cheeks.\n\n\"I wore these for you. I was hoping you'd get to see them at some point.\"\n\nMore blood rushes down to my already-stiff dick, making it swell and push uncomfortably against my fly. Thinking of Sandra carefully choosing this sexy set of lingerie with me in mind is almost too much to handle at this very moment, but I know I'd be re-running that little bit of information in my mind later on.\n\n\"I'm very glad you did.\"\n\nHer smile is too tempting to resist and I bend to taste her lips. Delicious. I feel her arms sneak around my neck and her whole body press up into me. Skin. I need to feel her skin against mine. I break our kiss for just a moment to grab the hem of my T-shirt and almost tear it away from my body in my eagerness to take it off. Sandra's hands slide down to my now-naked chest and her fingers and mouth take turns exploring the newly-discovered territory. She seems fascinated by the mix of sensations created by skin and hair over muscle and bone. My nipples tighten to hard points in response.\n\nI have no intention of interrupting her and settle for letting my own hungry hands run along her back and her sides, alternating long, smooth caresses with deeper rubs and the occasional squeeze. Sandra's body responds to my touch, swells into it, goosebumps flowering one moment while a hot flush spreads in the next. So fucking responsive.\n\nFor long moments we kiss and make out like school kids and all I can focus on is the exhilarating sensation of being surrounded by Sandra's heat and softness, soaking them deep into my skin. My cock is hard as stone and too uncomfortable in my pants to ignore any longer. Breaking our endless kisses I whisper into her ear:\n\n\"Get on the bed, baby.\"\n\nSandra nods in-between shallow breaths and gets onto the bed, crawling her way up on hands and knees. The sight of her juicy ass jiggling from side to side almost makes me cum on the spot, and it is with a huge effort that I stop myself from jumping her from behind. Instead I shuck my pants and boxers all at once and my relieved dick springs up to slap my belly while I bend down to clear the clothes off my feet along with my shoes, one hand holding the bed for support.\n\nShe reaches the top of the bed and flips to lean back against the high pile of pillows, and almost gives me a heart attack when she spreads her legs wide in a slow, deliberate motion, caressing her inner thighs with delicate fingers while she eyes my swollen dick hungrily, teasing both of us at the same time. I groan.\n\nMy head swims, and it has nothing to do with my injury. I'm high on lust for this woman. Naked now, I lean with both hands against the foot of the bed and bend low, staring at the floor, trying to cool some. I need to keep my head. I don't know if I can. A pang of fear jabs at me and I lift my eyes to look back at Sandra. There's desire and longing in her eyes, and, foolish as it may be, trust.Trust and hope.\n\n\"Fuck but you're gorgeous...\"\n\nI say nothing else as I climb onto the bed after her and crawl all the way up until I kneel between her widely-splayed thighs, my knees pushing them wider still, my rigid, swollen cock bobbing just above her lilac-covered pussy. There's a drop of pre-cum clinging to the very tip of my cockhead and we both watch it, mesmerized. Sandra's hands reach out to touch me but I catch them and bring them to my lips to kiss her knuckles before pushing them up and behind her head, guiding her fingers to hold on to the round wooden rails there.\n\n\"Not yet sweetheart... not yet. I promise you'll get to do anything you want to do with me... later.\"\n\nHer eyes widen and turn a stormy blue when she grabs a hold of the thick rails, arching her back to press our torsos together at the same time. I feel the head of my dick gliding over her lower belly, its path slickened by that drop of pre-cum, and a wild shiver runs down my back. I rock my hips lightly back and forth to repeat the excruciatingly pleasurable sensation and then make myself pull back.Not yet. My fingers trail the ultra-soft path along the undersides of Sandra's arms down to her chest where I finally cup and lightly squeeze together the most tempting pair of boobs I'd seen on any woman before.\n\nSandra arches her back up again, trying to push herself harder into my palms. I oblige by kneading her breasts in deeper, fuller strokes, watching her still-untouched nipples stiffen and poke at the delicate, sheer fabric covering them.\n\nFuck but I need to taste them. Now.\n\nI peel back both cups of her bra and tuck them under her breasts to fill my hands again, now with hot, naked woman flesh. I bend down to lick one erect, pinkish-brown nipple with the flat of my tongue, once, twice - fuck, so sweet! -before taking it all in my mouth to suck gently, watching Sandra's face for her reaction.\n\nShe throws her head back and moans deeply. A satisfied grunt escapes my throat as I continue to suckle on the hard, crinkled areola and nipple trapped inside the damp heat of my mouth. Finally I release her erect peak, shining with my saliva, and move to give its twin the same loving treatment. I can't get enough of the sensation of her breasts filling my palms, and my fingers keep rubbing and stroking the creamy sides of her fleshy, delicious orbs while my thumbs draw circles on the swollen, sensitive undersides.\n\nEvery time I bend over my cock brushes and slides against Sandra's abdomen, pre-cum oozing freely now trailing and smearing across her skin, but I find it surprisingly easy to ignore it. My need to learn Sandra's body, to please her, is greater than any other desire for the moment.\n\n\"Please, Dan...\"\n\nSandra's knees fall open further and she's squirming before me. Another rush of need sweeps me and my fingers tighten momentarily on her breasts before I release her and sit back up, rubbing her inner thighs in long, smooth, seemingly-calming strokes, although I suspect I know their impact is anything but soothing. Sandra mewls and squirms some more, clearly desperate for my touch. The feeling of power is intoxicating.\n\n\"What is it that you want baby? Tell me.\" I keep caressing her thighs that quiver under my fingers.\n\n\"Please, please I need more... please...!\"\n\nIf she were my sub I'd make her say the words.\n\nYou can't Dom her, Dan.\n\nWith a growl born of soul-deep frustration I shift backwards, hooking my fingers in the elastic waistband of her panties and pulling them down as I go. Sandra seems oblivious to my inner struggle and a breathy half-sigh, half-giggle escapes her mouth as she lifts her hips and then brings both legs up together to help me take them off. Once the flimsy garment is clear from her feet she opens them wide again as far as they can go, plants her feet back down on the bed and pushes her pelvis up in a breathtakingly uninhibited display and offers her swollen, naked pussy for me to take and do with as I please.\n\nI chuckle my surprised appreciation and grab her ass in my hands, supporting her in her chosen position, pushing her hips upwards still by another inch or two, unable to resist challenging her just a little in that way.\n\n\"You want me to eat your pussy, baby?\"\n\nShe inhales sharply and nods her head, her eyes almost all-pupils. \"Yes, please!\"\n\n\"Hmmm... it's gonna be my pleasure, I'm very sure...\"\n\nKneeling between her thighs and holding her hips up like a bowl of sacred essence I bow low to press a soft kiss on her Venus hill, her downy blond fuzz tickling my lips. I nuzzle my nose in the small patch of hair, thick with the most intoxicating scent of horny female. My tongue sneaks out to take a tiny taste of the smooth outer folds underneath, and my fingers tighten their hold as Sandra responds by pushing herself higher still, trying to grind her clit into my mouth.\n\n\"Not yet baby... I wanna taste all of you first. I promise I'll take care of you, just hold on tight...\"\n\nSandra whimpers but un-clenches her ass, letting me seize control over the pace and depth of my touch. She submits so beautifully. Fuck. Pushing the thought to the back of my mind I focus on the pink, puffy pussy before me, the larger lips pulled back by her spread-out position, the darker-pink, gleaming-wet inner folds peeking between them. I bow lower still and take a long, slow swipe all along her slit, tasting her fully for the first time.\n\nMy taste buds explode when her creamy sweetness swamps my tongue and I moan deep and low, the sound echoed in the guttural groan that rolls from Sandra's exposed, stretched-back throat. God she tastes so fuckin' good. I bend back down for more, my tongue delving deeper between her slick, velvety folds, suffusing itself in Sandra's honeyed nectar. It's been so long.\n\nI spend long, blissful minutes licking, sucking, lapping and nibbling the most delicious pussy I've ever had. Sandra's body quivers and shakes with her need, and she alternates pushing herself up and into my mouth with relaxing back and spreading her knees even farther to give me even more access to every hidden valley, every engorged fold. Her knuckles turn white from holding on so tightly to the head rails and she moans constantly now, writhing in her pleasure and her need, her legs trembling with the effort of keeping her position, of opening herself even more to me.\n\nAnd then it's not enough; I need more. I want to make her explode on my tongue, I want to feel her pussy spasm and weep as she cums. I want her to lose herself to let go completely in my arms, under my touch.\n\nI slide my knees back until I'm flat on my belly, trapping my painfully-erect dick under my own weight. Not yet. I place my forearms on the bed and grab Sandra's hipbones with the tips of my fingers, pulling her hips down to rest between my wrists. A deep sigh from Sandra's slack, open mouth tells me the strain on her back in her previous position was more than she probably bargained for, and I give her a moment to rotate her hips in small circles letting the unwanted soreness ease.\n\nWhen she relaxes back and lifts her head there's a small frown on her sweaty, flushed, beautiful face.\n\n\"Why'd you stop?\"\n\nI smile and kiss the insides of thigh just above her knee before answering. \"Just giving you a chance to catch your breath baby. You ready for more?\"\n\n\"Ohhh yeah, please, please give me more...!\"\n\nI smile in between kisses to her inner thighs, enjoying her building frustration made obvious by her jerky responses to each not-even-remotely-fulfilling kiss.\n\n\"Ahh, baby, you are a delight to pleasure. Relax into it sweetheart. I'm gonna make you feel so good...\"\n\nWith that, I lower my mouth back onto her creamy pussy, finally focusing my attention on her stiff, swollen clit. I circle it over and over with the tip of my tongue, her juice and my saliva making it so slippery there's hardly any friction, only movement as it is rolled and pushes around and around, driving her need ever higher but clearly not enough to push her over the edge.\n\n\"Please, Dan, I need your fingers... Please rub my clit with your fingers... please!\"\n\nFuck yeah. Tell me exactly what you want baby, just like that.\n\nI can't respond in words, but I wrap my left arm further under her and tighten to keep her in place, and to take my weight off my right hand. I suck two fingers into my mouth to wet them and then bring them down to slide up and down Sandra's slit, coating them further in her thick juice, the very tips rubbing lightly up and down on both sides of her straining clit.\n\n\"Ahhhh... Yessss... Right there, please, right there...!\"\n\nFuck but she's amazing.\n\n\"You're such a good girl for telling me what you need, Sandra... such a good fucking girl for me...\"\n\nI don't even notice the words that slip my lips, unchecked. I would only realize them later. But right now, neither one of us cares. My fingers sink deeper, locking Sandra's clit between the tips of my index and middle fingers and I start vibrating my hand, hard and fast. Sandra shrieks and bucks and starts panting hard, breathing incoherent half-sentences between huffs and puffs and choked wails.\n\n\"Oooh, oooh, ooh, yeah... oooh yeah right there ahhhh!... ohmygod ohmygod... ohmygod so close... please... oooh, ooh, ahhhhhhhhhh!!\"\n\nAnd then her breath catches as she starts cumming, a small gush of hot girl cum soaking my fingers as her hips buck sharply up, once, twice, three times, staying frozen up at the pinnacle for endless seconds, absorbing every last vibration from my still-dancing fingers before collapsing down, detaching herself from the source of pleasure that had instantly turned too much, her feet losing their purchase and sliding down the slippery sheets until she is flat on her back, lewdly spread, chest heaving as she tries to regain her breath.\n\nI return my hand to her now-soaked snatch and rub gently up and down her folds, carefully avoiding her too-sensitive clit, and then, watching her face closely, I move my hand lower still to slowly sink two slippery fingers deep, deep into her tight channel.\n\nHer heat engulfs me and I feel her inner muscles spasm and contract around the intruding digits while her eyes, previously closed, fly open to re-focus on my face, gasping.\n\n\"Fuck!\"\n\nI smile, although it feels strange across my face that is taut with arousal. I start moving my hand, fucking her pussy slowly with my fingers. Sandra gasps again and her walls clench hard and suddenly it's too much for me.\n\n\"I need to fuck you, Sandra. Now.\"\n\nNodding as if in a trance Sandra smiles - a tired, dazed, still-lustful smile - and motions with her head to the small table at the side of her bed.\n\n\"Condoms in the bottom drawer.\"\n\nIt takes me less than 30 stumbling, fumbling seconds to get the rubber on, and then I climb back to the bed next to Sandra. The short pause helps clear my head a bit and I release her arms and hands which must have gotten numb from holding on to their position for so long. I reach out and gently pry them loose, bringing them down to rest on her belly and then take each palm in my hands in turn, massaging and rubbing to get the blood flowing. She winces but says nothing, letting me do whatever I deem necessary. I feel the rush sweeping through me again.",
        "Finished, I take both her hands in mine. \"C'mon baby, up you go. I want you to straddle me.\"\n\nSandra lets me help her up to her knees and once I settle back she leans over me, hands on my shoulders, and brings one leg over both of mine to straddling my thighs. Her breasts are still pushed up by the bra tucked under them but that would no longer do - I want them free to bounce and jiggle when she rides me; I want her completely, gloriously naked.\n\nI reach behind Sandra's back to unhook her bra. \"Take it off, baby.\" I say but it isn't necessary as she's already half-way done by the time I make my request. I fill my hands with her beautiful tits again, rubbing over the shallow pink indentations at her sides where the elastic pressed into her skin, wanting to take away any discomfort from her. I want this to be only about pleasure.\n\nFinally I can't wait a second longer. I grab the base of my cock to point it straight up, it's swollen, purple head poised at her entrance. I look into her eyes. She looks straight back, ready, waiting. I nod. She starts sinking down, impaling herself inch by slow inch onto my ice-hard dick. I feel her inner muscles stretch to accommodate me and close my eyes to absorb the unparalleled sensation of being consumed by hot, wet, tight pussy. Sandra keeps descending until I bottom out and her ass is settled tight against my body.\n\nMy eyes open and lock with hers again. Our breaths mingle. Our freakin' minds mesh. My arms wrap tight around her and I grab hold of her ass in one, her neck in the other, while her hands come up to wrap around my shoulders, holding my head in her palms.\n\nNow it's her turn to give me a slight nod, her lips curved up in a knowing grin. I feel my heartbeat pound against my ribs. I smile back a real, predatory, all-male smile.\n\n\"Yeah baby. Let's fuck. Hold on tight.\"\n\nAnd indeed it is all she can do to hold on to my neck and shoulders as I start thrusting into her, the first two or three slow, controlled strokes quickly transforming into sharp, hard thrusts that slam our bodies together, growing ever jerkier, ever more out of control with every passing second.\n\nPleasure grows and coils inside me. Sandra lets me lead her, her body following the crazy pace I set, but every now and then she stops and grinds down hard, rubbing her mound back and forth onto my hard pubis, pleasuring herself against me. Her movements make my swollen, aching balls rub against her cream-soaked perineum while her tunnel milks my shaft, pulsing and tightening all around me. It's heaven and hell all at once. I want it never to stop and I want to cum NOW.\n\nMore fucking, more grinding, more fucking still, building us both higher and higher until suddenly I feel her squeeze me so tight that I am instantly sent flying over the edge of the most powerful orgasm of my life. I feel the cum boiling and rushing up to shoot and spill out in huge, heavy spurts that are just barely contained inside the condom buried deep, deep inside of Sandra's clenching belly.\n\n\"Ahhhhhh ffffffffhhhhhhuuuuuuccckkkk!\"\n\nI shout my release, vaguely aware of Sandra's echoed cries of pleasure, shaking and trembling with the force of my release, my heart pounding so hard it must be heard in the next building over.\n\nI collapse back, slouching down against the headboard and Sandra follows, her forehead pressed to the crook of my neck and her hot, quick puffs of air swirling the hairs on my chest. Her arms are still wrapped around my shoulders and my own hands release their grip of her fine, fine ass and slide up her sweaty back, stroking and rubbing, growing smoother and lighter as we finally catch our breaths.\n\nWe stay in that dream-like state for a while until finally I feel Sandra stir and lift her head. Our gazes meet and hold.\n\n\"You okay baby?\" I don't try to hide the apprehension in my voice. This fuckingmatters.\n\nSandra smiles and leans forward, giving me a slow, sweet kiss, and straightens up again to look back into my eyes.\n\n\"I am a bezillion times better than 'okay'. That was incredible... Thank you, Dan.\"\n\nI shake my head, feeling that tightening in my chest again. She's thanking me for fucking her?\n\n\"Sandra, you are most definitely a bezillion times better than 'okay'. You're one absolutely amazing lady, and that was the best freakin' sex of my life... Vanilla or otherwise.\"\n\nIt's true, too. It would freak me out a bit when I think about it later, but right now I'm not going to pretend she didn't rock my world.\n\nHer smile is so dazzling it could light up the night's sky on a deserted island. And then a twinkle of mischief enters her eyes when she leans in and mumbles into my ear: \"If that was vanilla I may yet be a convert... though I think you may want to reconsider your definitions, Dan.\"\n\nI inhale sharply and shake my head slowly. \"Baby, I feel too good to think about definitions right now.\" I roll her over to her back and come after her for a quick kiss on her amused, knowing lips before rolling away and out of bed and walking on wobbly feet over to the bathroom.\n\n\"I think now may be a good time for your nap before your night shift, baby. I'm gonna take a shower and then come back to join you, all right?\"\n\nHer half-asleep, mumbled reply brings a new smile to my face. I get rid of the used condom in the bin and walk into the shower for a quick, refreshing wash. Stepping out of the spray I dry myself with Sandra's pink-and-purple floral bath towel and then stand naked in front of the large mirror, looking at myself above the sink.\n\n\"If that was vanilla I may yet be a convert...\"\n\nWas that vanilla? Would sticking to this be safe? Could I be a convert? Damned if I know. I guess I have a lot to talk about with Dr. Pappas on our next meeting.\n\nIn the meantime, it is all I can do to trust and hope.\n\nFor the first time in a couple of years, I see a tentative smile spread on my face in the mirror.\n\n~~~~~~~\n\nAuthor's note: Did you like this story? Please tell me. VOTE, FAVORITE and above all - COMMENT!"
    ],
    "authorname": "small_town_girl",
    "tags": [
        "mdom",
        "fsub",
        "domination",
        "submission",
        "mature",
        "romance",
        "nurse",
        "reluctant dom"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/hitting-the-bottom-ch-04"
}