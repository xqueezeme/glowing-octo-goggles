{
    "title": "There and Back Again Ch. 135",
    "pages": [
        "Chapter One Hundred Thirty-Five: *Apparent Anger \n\nThe first thing I noticed, when I could finally feel anything again, was that I'd let go of all the mana I held. Panicked, I scrabbled for it before even opening my eyes...but there wasn't any. I couldn't sense a single mage. \n\nThat startled me enough to make me start noticing other things. I was lying in a bed, for example, not the hard rock and dirt floor I expected, and it was warm -- warmer than I'd been in what felt like a very long time. As I mentally took inventory of my situation, it also became clear, from the lack of itch and general stickiness, that I was blessedly clean. My scalp wasn't prickly, my hair wasn't plastered to my face, and there was no dried darkspawn blood cracking in the creases in my skin. And while I felt gloriously well-rested, I was also stiff and sore, and had to wonder how long I'd been lying there. \n\nI must have twitched, or maybe it was the change in my breathing, but before I had time to think about anything else, I was being picked up and turned, and found myself sprawled across the firm body of my husband, face buried in his neck; he held me tight, whispering comforting nonsense in my ear. I took a deep breath, inhaling his unique scent, pressing myself tighter against him. \n\nI couldn't be sure it wasn't some new hallucination, some misfiring of sleep-deprived neurons or possibly even some ploy by a desire demon who'd managed to make my exhausted, screwed-up mind its home...but at that moment, I didn't care. If I was that deep in a hallucination so vivid, I'd already lost my hold on reality -- never mind the Architect's mana, and he'd had all the opportunity he needed to do whatever he wanted to me. I was as good as dead already. So I might as well enjoy what I can get before I go. \n\nI spread my legs, straddling Alistair's hips awkwardly, the material of the nightgown I was wearing pulling uncomfortably. Before he could say anything, I sat up, eyes still closed, and worked the gown over my head, tossing it in a random direction, leaving me naked. I finally opened my eyes and looked down on the gorgeous man underneath me; his face was slightly flushed, his eyes wide as he seemed to be struggling to keep his gaze on my face, away from my naked flesh. I smirked. \n\n\"Sierra...\" he began, but before he could finish the sentence, I leaned down and captured his lips in a searing kiss. He seemed about to object, so I slipped my tongue into his mouth when it opened, tasting him, devouring him, my fingers sliding into his short, sandy hair to pull him harder to me. He groaned when I rocked my pelvis against him, and I could feel him hardening underneath me. His hands came up to grip my hips, whether to stop me or pull me closer I wasn't sure. \n\nMy brown curls fell around us in waves, curtaining us off from the world; it was like no one else existed, and I had to admit it was possible no one did, being in my hallucination like we probably were. I spent an eternity just kissing Alistair, exploring his mouth with my tongue like it was the first time. He just let me, teasing me with his own tongue, panting softly when I pulled away to breathe, and letting me set the pace. After everything I'd been through, it was heaven. \n\nUntangling my fingers from the hair at the nape of his neck, which was a little longer than I was used to, I stroked my fingers down his ears, relishing the shudder that caused, then down his strong neck. I reached the neck of his shirt and began undoing the laces there with a sniff of irritation. \n\n\"Not a desire demon,\" I muttered to myself, amused that I was so rationally pondering that possibility even within a waking dream. \"Too many damned clothes!\" I thought I heard him chuff out a slight laugh, and I smirked as I hauled his shirt up; he half-sat up to help me peel it off. \n\nAnd then I had my hands and mouth on him. I sucked at the taut cord of muscle in his neck, while I stroked his broad shoulders, his muscular biceps, his washboard abs and bulging pecs. I buried my nose in his sparse chest hair, treasuring his smell and his little gasps of pleasure as I gently pinched and rolled his nipple. I explored the tantalizing recess of his belly button with my tongue while I gripped his waist with desperate strength, afraid he would disappear on me again if I let go. \n\nAnd he responded, moaning and writhing underneath me, arching his back and gasping for breath under my relentless assault. He let me set the pace, take what I needed, even though I could feel his erection pressing against my belly, his hands fisted in the sheets to stop himself from grabbing at me and taking over. I could practically taste his yearning for completion. \n\nWhen I finally tackled his soft sleeping trousers, I heard him mutter praise to the Maker as he scrambled to help me get him naked. I gave the length of him one long, languorous lick and a firm suck, and then I was crouched above him, lining him up with my needy channel, sinking down to take him in with a strangled groan. I was so wet, so desperate, that I took him to the hilt in one smooth slide, both of us crying out at the fulfillment of being joined. \n\nI waited there for a moment, allowing my fluttering sheath to become accustomed to the intrusion, and finally he could take no more. He sat up, pressing his chest to my sensitive breasts, one hand immediately tangling into my curls as he dragged my face to his for a soul-shattering kiss, the other hand squeezing my hip hard enough that I knew he'd leave bruises -- and then he started to move me. \n\nI lifted my hips and slammed down onto him, matching the rhythm he demanded from me, rubbing my pebbled nipples against his chest as he plundered my mouth. I felt taken, possessed, but also so powerful, knowing I could bring this man to such heights of desperation. I had control, if I wanted it. Instead, I surrendered to him as he had to me, and we moved together instinctively, climbing toward our peaks together. I raked my nails across his back, sobbing as I felt the resulting surge of his hips under me, and then I was screaming and falling as my orgasm overtook me. I barely noticed when his rhythm suffered as he spilled inside me, as overwhelmed by white-hot pleasure as I was. \n\nSated, my overtaxed mind finally returning to me, I lay sprawled bonelessly across his chest, his softening length still inside me. I took a deep cleansing breath as he finally slipped out of me, rolling me to one side and wrapping his arms around me protectively. \n\n\"You're real.\" It wasn't really a question; the hallucinations I'd had, while confusing, had lacked the scent, the feel of my husband, and the overwhelming warmth of the taint running through his veins. I'd been too disoriented to notice at first, but it was more than obvious once I had my brain engaged. \n\n\"Last I checked,\" Alistair responded; I could hear the amusement in his voice. \"I am a little bit disturbed by what we just did if you weren't sure.\" I giggled, and he chuckled softly. \"So are you, for the record -- real, I mean, though I wasn't sure for a while either.\" \n\nHis humour gave way to anxiety, and I finally lifted my head out of the comfortable spot it rested in to look at his beautiful face. \"Did I disappear?\" \n\nHe frowned. \"You...flickered. Briefly. Less than a minute, I'd say. Maker's hairy arse, Sierra, what happened to you?\" His tone sounded so frightened, so desperate, I wanted nothing but to hold him until the fear subsided. \n\nI thought over my ordeal, wondering where to even start, when a few of the more horrific details I'd apparently been repressing made themselves known again. \"Avanna,\" I gasped, tears gathering in my eyes. \"Faren!\" The tears began to overflow, and I buried my face back in his neck. \n\n\"Avanna?\" He sounded confused. \"That soldier?\" \n\n\"We have to find her. I swore to myself I'd find her, that I wouldn't leave her like that. I won't let her be a broodmother. I won't!\" \n\n\"Sierra, Avanna's safe. Faren...well, he's here. He's unconscious, but he's alive. We need to talk about that, but it's going to be okay.\" \n\nI couldn't even respond. Avanna, not a Broodmother? Faren, alive? I wriggled, trying to sink further into Alistair, flailing and grabbing at him until he wrapped me in a bone-creaking embrace, holding me close as I finally let loose and wailed, letting go of all the fear, the guilt, the mind-numbing exhaustion and defeat. \n\nHe just held me, allowing me to cling to him and use him as an anchor, my port in the storm. It took a few minutes for the tempest to abate, and when it did, my tears had mingled with the sweat of our recent exertion to leave me feeling distinctly sticky. I didn't care, as long as Alistair held me and didn't let go. \n\nFinally cried out, I told him everything. The fight, Faren's capture, the awkward deal I made with the Architect to keep Faren alive, our presumed rescue once Avanna reached Soldier's Peak. Faren's bloodletting, our dismay at being fed horse meat -- and assuming our rescue was no longer likely. My hallucinations as I desperately tried to stay awake. And finally, I told him about the poison, about attempting to kill Faren in cold blood -- at his request. The tears started again, but Alistair just held me -- as though I wasn't the total monster I felt like I was -- and kissed the tears away one by one. \n\n\"It's not your fault,\" he kept repeating -- which just made me angry, for some reason. \n\nWhen I calmed down again, I finally got to hear his side of the story. \n\n\"Conrad had been patrolling and could feel a large group of darkspawn moving, but couldn't seem to locate them. He sent us a messenger, and we were all out there, trying to track them down. Following them. We realised they must be underground, but couldn't find a way in. We spent two days chasing them from above ground when we ran into Loghain and the others from the Peak. They'd sent us a message, but of course we were out and didn't get it. They'd been looking for you once that soldier -- your bodyguard? -- told them you'd all been attacked.\" \n\n\"How did she get away? They fed us her horse, or at least, I assume so.\" \n\nHe shrugged. \"I don't know the details. We can ask -- she's here, somewhere. Anyway, they had found the ambush site, realised your bodies weren't among the dead, and were following the trail the darkspawn left when they took you. Prince, of course, picked up your scent -- and what I assume were your socks? -- right away. We ended up fighting through dozens of darkspawn -- some of them the talking variety -- before finding that lair.\" \n\n\"Did you kill the Architect?\" \n\n\"He was gone when we got there -- further into the Deep Roads, we think. There wasn't any blood left behind either. Don't know how he knew we were coming.\" \n\n\"He could communicate with Utha without talking -- I'm guessing he's somehow connected to his sentient darkspawn. Like the Archdemon with his generals.\" \n\n\"Lovely. Because telepathic communication is something the darkspawn clearly need to have!\" He sighed. \"When we found you, you stole Anders' mana, and you obviously thought you were hallucinating -- so Solona used a sleep spell on you. Anders tried to heal Faren -- he stabilised but didn't wake -- and we took both of you and brought you here. We considered going to the Peak, but the Vigil was equally close and we have more access to help here.\" \n\n\"How long have I been out?\" I didn't want to think about the frightening state I'd been in when they found me. \n\n\"It took us three days to get you back here on horseback, and it's been another day since.\" \n\n\"Four days!\" I tried to jump up, distraught at how much time we'd lost. \"He could have already made more sentient darkspawn. Or turned the Mother!\" \n\nAlistair held me, resisting my attempts to get up. \"And we will deal with that, but there are things to deal with first.\" He stroked my hair. \"Relax, Sierra. We'll get him.\" \n\nToo agitated to do anything like relaxing, I finally succeeded in pulling away, sitting up beside him. \"I know where they'll end up, more or less. We need to go, before the Mother has enough time to birth an army.\" I ran a hand irritably through my now sweaty, greasy hair with a groan. I climbed to my feet, stretching out stiff muscles. No wonder I'm stiff -- four days! \"I didn't even know sleep spells lasted for four days.\" I started looking around for my armour. \n\nHe flushed slightly. \"They don't. She had to put you back under several times when you started to stir. We wanted to make sure you didn't wake up disoriented or panicked, lashing out at us or the mages. So she put one final spell on you a few hours ago, and the Aedan sent all the mages out on patrol for a while.\" \n\nI looked at him despairingly. \"Patrol! But we need to go.\" When he just looked at me, shocked, I growled. \"Alistair!!\" \n\nHe climbed out of bed, approaching me with his hands up in a calming gesture. \"We will, Sierra. But you're still recovering, Faren's still unconscious, and there were injuries during the fight. We couldn't leave right away if we wanted to.\" He reached out and put his hands on my shoulders, pulling me to him and kissing my forehead. I leaned into his warmth instinctively, unable to even identify the feelings coursing through me, never mind deal with them. \"It's going to be okay,\" he asserted. \n\nI pulled away suddenly, turning my back on him. \"How is it going to be okay? Dozens of soldiers dead. The Architect in possession of the blood he needs to do untold harm. A Broodmother that could be, right this minute, breeding Children to attack us, or Amaranthine. Faren unconscious.\" I reached for my nightgown, roughly trying to turn it right side in again, ripping it accidentally in my haste. \"I tried to kill my friend! How is that ever going to be okay?\" \n\nI couldn't figure out why I was so insanely angry. Alistair and Aedan couldn't have known what was happening until I woke, and I hadn't exactly been in my right mind the last time I'd been awake. They were right to be cautious and keep the mages away from me, had no reason to be gearing up for a battle. Alistair hadn't done anything wrong. \n\nThat didn't stop me from lashing out. \"Just leave me alone!\" I shouted when I felt his hands touch my back. I didn't turn to see his reaction. I stomped into the bathroom, jumping into the tub, scooping up my shower head and proceeding to scrub myself down quickly. I washed my hair, not even taking the time to condition it fully, and then I was drying myself off, stalking back into our bedroom to get dressed. \n\nAlistair sat on the edge of the bed, watching me quietly; I felt awkward for shouting at him, knew I was being patently unfair to the man who'd done nothing but come to my rescue and try to comfort me, but I could feel his gaze like a touch on my skin and it just made me so angry. \n\nWhen it was obvious, with another quick glance around the room, that my armour wasn't there -- probably being cleaned, I realised, though part of me felt sure it was being denied me on purpose -- I pulled the first thing out of my wardrobe that I could find: my old, fake velvet dress from back on Earth. I yanked it on over the first pair of smalls I could locate, yanked a brush through my hair -- finally giving up and tying the whole mess into a hasty pony tail -- and left the room without another word. \n\nRapping on Aedan's door didn't get me anywhere -- no one answered -- so I went in search of my brother. I thought he might be with Faren, and headed towards the Wardens' quarters, assuming that was where they had taken the unconscious dwarf. \n\nAedan wasn't there. Seeing Faren, pale as death and breathing erratically, made me wish I had looked anywhere else. He looked awful. His skin was damp with a sheen of sweat, his usually-impressive musculature almost atrophied already, his complexion slightly grey, his closed eyes sunken. I didn't even notice Oghren sitting by his bedside, so riveted by the body of the man I'd tried to kill. \n\nI gasped and covered my mouth, rushing to Faren's bedside but falling to my knees before I made it onto the edge of the mattress. I grasped his unresisting hand, too horrified to be repulsed by its clamminess. \n\n\"I'm sorry,\" I mumbled, my throat tight with emotion -- anger, and something else I didn't care to think about. \"Please wake up? I'm sorry!\" \n\nI felt a heavy hand rest on my shoulder, and turned instinctively towards it, pressing my forehead against the wrist and trying to stifle a sob. \n\n\"Now don't go getting all maudlin on me, Toots,\" I heard Oghren mutter, in a voice thick with compassion and worry. \n\nI stuttered a brief, surprised chuckle. Oh, Oghren, you always do make me laugh. \"What have they tried?\" \n\nHe knew what I meant without further explanation. \"Regular healing potions, and Sparkle-Fingers tried too. Said he'd lost too much blood, and couldn't be sure if...uh, I mean when he'd recover.\" \n\n\"It's not just the blood loss.\" I growled. \"He's been poisoned. Where is Anders? And are the Legion still here?\" \n\nIt turned out that, while Anders and the other mages were off somewhere, most of the Legion were indeed at the Keep, and so leaving Oghren to watch over Faren, I went to find them. It was afternoon, and the dwarf I wanted to see was sparring in the ring outside with an enthusiastic Sigrun when I finally located him. \n\n\"Gerrin!\" The dwarf who'd made the poison suicide capsules had died underneath Vigil's Keep, but his best friend, a rogue far too interested in poisons in general for it to be healthy, had survived, and was knocked to the ground by a triumphant Warden when he became distracted by my shout. \n\n\"Hah!\" Sigrun crowed. She offered the older dwarf, an intensely hairy fellow who resembled a short Grizzly Adams, a hand, and he took it, grumbling about cheating. Sigrun merely bounced and giggled unrepentantly. \n\n\"Sorry.\" I flushed when he turned his irritated gaze on me. \"Look, can we talk? I need a favour.\" \n\nAedan, Zev, Nate, Varel, Sigrun, Trevian, and Alistair ended up joining us when I managed to convince the surly dwarf to sit down and talk to me. Aedan had wrapped me in a tight hug the moment he saw me, almost refusing to let me go; strangely reticent, I pulled away, trying to ignore the hurt look that briefly flashed across his face. Zev ostentatiously kissed my hand and said something flirty; I rolled my eyes half-heartedly, not even hearing the usual baseless compliment that rolled off his tongue. Alistair stood back, studying the book titles on the shelves in the library we'd invaded for our discussion, and while my heart ached at the distance between us -- a distance I knew damn well was my fault, and no one else's -- I was also still angry, and so was somewhat relieved that he left me alone. Everyone else greeted me warmly, and I nodded back quietly, biting my lip. \n\nIt was horrifying to admit to that group what I'd done. I told them the entire story I'd already explained to Alistair, keeping my tone emotionless and cold as I steeled myself to admit that I'd knowingly poisoned my friend. I almost wanted someone to shout at me, to accuse me of murder, to vilify me, but it didn't happen; the more understanding they all were, the angrier it made me. No one, not one person, is going to hold Faren's attempted murderer -- I stumbled at even mentally using the word in relation to myself -- accountable. They're all just going to let me get away with it. If anything, it just made my dark mood worse \n\nPromising to find the mages and bring them back to the Vigil, Sigrun, Gerrin, and Zevran left to go talk and see what could be done for Faren. They seemed hopeful that knowing what poison he'd been given would help, and were encouraged by the fact that he likely hadn't received a full dose. Once they were gone, Alistair, Aedan, Nate, and Trevian began planning a campaign against the darkspawn that we assumed would begin breeding. ",
        "\"Where did you say this 'Mother' will be, again, Sierra?\" \n\nI shook myself out of my inner brooding. \"Um, she has a nest inside some old ruins inside...Drake's Fall, I think. Assuming nothing has changed.\" \n\nNathaniel paled. \"The Dragonbone Wastes?\" \n\nI nodded. \n\nAedan turned back to a map of the area surrounding Amaranthine that Nate had unrolled from a pile of similar parchments in a trunk in the corner. He pointed at the Dragonbone Wastes in western Amaranthine. \"This was where you told us to stay away from.\" \n\n\"I assumed he'd already freed the Mother, and that there would be an army of Children there. But he didn't have enough Warden blood, apparently...and you tell me no new types of darkspawn have been spotted around here?\" Aedan shook his head. \"Then we have a chance. Now, before she breeds, before she can attack the city or the keep -- we have to destroy her.\" \n\n\"And the Architect, if we have the opportunity,\" Aedan added darkly. \"A being that dangerous, that short-sighted, can't be allowed to live. And no one gets away with hurting my Wardens or my sister.\" \n\nTrevian objected. \"Are you sure? If he wants to end all the Blights, stop the darkspawn from attacking people...\" \n\nI got up and stormed out before they could say anything more. I didn't want to hear it, didn't even want to know what they decided. I was angry -- with Aedan, with Alistair, with everyone -- and already sick of the debate...and it had only just begun. \n\nTo my relief, no one followed me; I decided to go in search of Avanna. I found my bodyguard polishing her armour in the barracks, and I gestured for her to relax when she leapt to her feet at my arrival. \n\n\"I'm glad you escaped,\" I tried to smile warmly, though the strange look on her face told me I'd failed, \"and thank you for bringing the cavalry. Tell me what happened?\" \n\nShe told me that after I sent her away, she rode westwards for several hours, staying off the road to make it harder for the darkspawn to follow her. \"Didn't matter, though,\" she sighed. \"I could hear them behind me, howling and gibbering, you know?\" \n\nI nodded, more than familiar with the eerie noises the darkspawn made. \n\n\"I could tell I wasn't going to make it. I was tired, and they were getting closer. It was also getting darker, and I remember being told they see better in the dark than us. So I did the only thing I could think of -- I sent Sadie one way, smacked her hard to make her panic and thrash, and I went the other. I got lucky -- they followed the horse. It took me longer to get back to Soldier's Peak, but I didn't see any more darkspawn. I hid at night, walked all day, and finally found one of the patrols. Seneschal Dryden sent a messenger to Vigil's Keep, and the rest of the soldiers and Wardens went looking for you.\" \n\nI thanked her, truly relieved that she was safe. The horse meat had been a bit of over-the-top drama, but I could only be grateful that we hadn't ended up tripping over her body or having to put a new Broodmother out of its misery. I don't think I could have taken the guilt. \n\nI confirmed with her that she would be travelling with us when we went to the Dragonbone Wastes; she frankly refused to stay put, and I worried she'd follow along anyway if I didn't bring her. I'm not the only one feeling angry; she feels she has something to prove after leaving me to be captured by darkspawn. I did secure her promise to obey orders from Alistair and Aedan, however. The last thing we needed was someone getting in the way -- or getting tainted -- trying to protect me. \n\nLeaving her, I detoured through the kitchen and liberated a small loaf of bread and a leg from the pheasant the cook had just finished roasting; I wrapped them in a cloth and took them with me out onto the roof of the Vigil. I curled up on the floor of the battlements, watching the clouds blow by as I ate, trying hard not to think -- about anything. After a while I must have fallen asleep; I barely stirred when Alistair found me, lifting me carefully and carrying me to bed. When he put me down and crawled up beside me, I curled into him instinctively, pulling the covers over my head and dropping back to sleep still fully dressed. \n\nI woke some time later from a particularly horrific dream of having to kill Faren's reanimated, decomposing corpse; he came for me with a sick, single-minded purpose, eyes glowing red with malice as I chopped him to pieces one by one. I gasped as my eyes flew open, then scrambled out of bed and into the bathroom before I woke Alistair. Trying to sob quietly, I retched into the toilet until nothing was left, then quickly cleaned myself up. Too disturbed to go back to bed, I changed into clean clothes, braided my hair, and went into my office to try and bury myself in work. I wrote a letter to Cailan letting him know about the condition of Soldier's Peak, and another to Sereda requesting help with finding miners who might want to come work for me. I requested another set of armour from Paider -- and offered him double the coin he normally charged to improve my chances of getting it. I wrote up a job offer for Felsi, hoping after we destroyed the Mother, I could have Oghren deliver it. \n\nI was in the middle of calculating the Peak's monthly operating costs and trying to plan a budget when I looked up to see Alistair standing in the doorway. He had bed hair sticking out strangely, and the linen trousers and tunic he wore as pyjamas were rumpled; he was pouting, his bottom lip sticking out and his brow furrowed, trying to hide the look of genuine hurt that I knew I'd caused. He looked delectable, good enough to eat, but even that wasn't enough to overcome the wave of anger that hit me when I contemplated dragging him back to bed for something other than sleep. \n\n\"Good morning,\" he offered cautiously. \n\n\"Morning,\" I agreed softly. \"Sorry. Couldn't sleep.\" \n\nHe stepped towards me, stopping beside my desk, nodding. \"Nightmares?\" He held his arms in front of him awkwardly as though unsure of himself, and oh, how I wanted to fall into them and let him hold me. \n\n\"The usual,\" I lied, nodding. \"So what's the plan?\" \n\nHe turned away, crossing to the window and peeking out through the shutters. \"Nate has called for a general muster -- he's pulling most of the army from Amaranthine. They should be ready to march by the day after tomorrow. It will take a few days to get there.\" He sighed. \"We're bringing as many people as we can. The soldiers will hold off any darkspawn, and the Wardens will take down the Mother -- and the Architect if we get the opportunity. But Amaranthine will be safe?\" \n\nI shrugged. \"Obviously, everything I think I know is up in the air. But I can't see how she could breed an entire army in a week or two -- not that I know how fast Broodmothers can produce a...litter? And the walls around Amaranthine have been repaired, the secret entrances sealed...I can only assume the city will be fine.\" \n\nHe turned to look at me, his face obscured by shadows. \"We're leaving the Legion here, along with Anders and Sigrun. Some of the soldiers too, just in case there's an attack on the Vigil. I don't suppose you'd agree to stay?\" \n\nI scowled, my ire rising again. He sighed, holding his hands in front of himself in a placating manor. \"Okay. I just...I had to ask. I don't like the idea of you near the Architect again, but it's your call.\" Something in his voice sounded like despair, though I couldn't see his expression to be sure. \"I'm going to go help get everyone organised. Do you need anything?\" \n\nI shook my head, and he nodded. \"Sierra? I'm here if you need me, okay?\" \n\nI said nothing, face flushing as I refused to make eye contact, and he backed out of my office; after a few minutes, I heard the door to our suite close behind him. That's probably the first time we've been in the same place and started the day without at least a kiss. He didn't even touch me -- not that I'd have let him. My lips trembled as I wiped away an angry tear, trying very hard not to wonder whether I'd just done irreparable damage to my marriage."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-135"
}