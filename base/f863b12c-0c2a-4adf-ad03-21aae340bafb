{
    "title": "Jeffery Loves His Cock",
    "pages": [
        "Hi, I'm Jeffery and I am a nineteen-year-old virgin. Besides being really shy around girls, I'm also short, really short at only five foot four. So most girls that catch my eye won't give me the time of day much less a date. So like all the rest of the virgins in the world I'm sure, masturbation is my only release. At least twice a day but usually manage a third time in the bath or shower when no one is banging on the door complaining about me hogging the bathroom.\n\nI am proud of one thing though and that's my cock. I noticed in the showers that even soft I'm bigger than most guys who are a lot taller than me. Even though that advantage has never got me a date, anyway and a guy can always hope right?\n\nI measured myself, as I'm sure most teen boys do and soft my cock is five inches long. My erection stands proudly at eight and a half inches by an inch and three quarter width.\n\nBecause of my lack of height, most school sports have been beyond me. Wrestling and gymnastics were about my only options in school. I enjoyed the gymnastics most though. With practise after school in the gym shared with the girls team always fuelled my fantasies. This season the girls new gym teacher was a real babe, an ex gymnast who insisted on sharing her knowledge with both teams. Having a chance to stare at her right in front of us while she introduced and demonstrated a few yoga positions to our warm up exercises that gave me a hard on instantly. Even though a lot of the guys complained at first we all benefited from the yoga with increased flexibility and for me not just in the gym, as I would find out on a long weekend home alone.\n\nAfter turning 18 my parents started taking advantage of long weekend get aways for a bit of privacy and it was nice to have them trust me to on my own. Usually David from next door would stay with me. We've known each other since forever, started school together and always hung out on weekends together. Both of us were kind of outsiders, me because I was so short and well David was kind of a nerdy kid so we were the only real friends each other had. We'd camp out on the living room floor playing video games and watching movies.\n\nThis particular weekend Dave's family had had plans for Friday so I wouldn't see him until Saturday sometime. It happened to be a Friday when nothing good was on TV and I didn't feel like playing video games by myself. I ended up deciding to spend sometime in a hot tub with my fantasies. Lately my jerk off dreams consisted mostly of Mrs. Garnet, the new girls gym teacher.\n\nI was stretched out with my head resting on the back of the tub, one leg dangling over the side and the bent at the knee leaning against the wall. Eyes closed with the vision of Mrs. Garnet's ass as she walked around playing in my head. I always try and prolong my orgasms by pinching the base of my cock a few times just as I'm about to cum so when I do let it flow it feels so much more intense. I was coming up to my fourth attempted delay and didn't move fast enough and wasn't exactly paying attention to where my cock was pointed. My chin was almost on my chest and my mouth was wide open. The force of my seed shot out directly into my mouth. I choked with surprise and tried to sit up but not before the second volley of cum splashed onto my still slightly parted lips. The rest streaked across my chest and stomach.\n\nIt felt like the most intense orgasm I ever experienced, my whole body shivered as I panted to catch my breath. I felt my seed cooling on my lips and running down my chin as I again laid back once again resting my head on the ridge of the tub. I could taste the bitter sweetness of my semen as the thickness spread across my tongue. I never thought of ever tasting it or even cared about how it would before this moment. I found myself savouring it and rolling it around my mouth mixing with my saliva. I swallowed and realized I liked the taste, licked my lips and looked down at myself at all that was spread across my body. I scooped some up with my fingers and sucked it off. It didn't seem to taste as good as that which shot directly into my mouth though.\n\nAs I pondered that I kind had a feeling of embarrassment or maybe shame wash over me wondering what this meant. Liking the taste of my own semen. I rinsed off quickly and wrapping a towel around my waist went to my laptop to find some answers.\n\nI went to Wikipedia and typed in semen to check out the risk involved in eating it. Luckily I found there wasn't any as long as the male was healthy. I didn't think I was gay, after all I never thought about guys sexually and my fantasies always involved girls. While I was looking over the page I came across a link to \"Fellatio\" and clicked on that. As I scrolled down the page under \"See Also\" was a link Autofellatio just had to check that out and let me tell you it had nothing to do with getting blowjobs in a car.\n\nRight at the top of the page was a picture of a guy bent over with his penis shoved in his own mouth. I felt my own cock stir at that and wondering if I could it. At the bottom of the page was a link to \"Interview with an Autofellator\". I read some of it still not believing that someone really could suck there own cock and saw a link to his web site called \"Solo Suck\" and of course had to check it out.\n\nWell I found not only pictures, but also actual video clips of guys doing the deed to themselves and advice on how too and different positions. After watching a couple of clips I realized that this was real and my growing erection made me decide I just had to try it out.\n\nI was shaking with excitement as I loosened the towel from my waist and let it fall to sides of my chair. My cock stared up at me quivering as if in wait for something good to happen. I slid my ass closer to the front edge of the chair looking down thinking it didn't really look that far away. Straightening my legs out and parting them slightly I reached down to grab the front of the chair and began to pull myself lower, closing in on the tip of my cock. With almost no effort my tongue reached out and managed to touch the tip of the glands right where that single eye watched my approach. \n\nMy cock lurched at the contact pushing up against my tongue and moving closer to my lips. I got a sudden thought and reached for my laptop bringing up the camera program and clicked on record. Aiming it at my crotch I took a deep breath, exhaled and placed a hand on each side of the chair and bent forward.\n\nI noticed a shiny drop of fluid emanating from the tip and licked it up tasting my own precum. It was slightly sweeter than I remembered my cum tasting, but it was just as good. I snaked my tongue all around the head of my cock a few times before using my arms to pull in closer feeling my erection brush against my lips. I felt that lurch through my whole body this time as my penis pushed its way into my mouth for the very first time. Knowing instantly that it would not be the last. I felt so elated and light headed and that feeling went right down to the tip of my toes. \n\nI managed to get about an inch of the shaft between my lips that first time before my back felt the strain of trying to tie myself in a knot. But it was good enough for now. I could hear myself breathing heavier and heavier while the heat of the air escaping my lungs brushed against the skin of my scrotum adding to my excitement.\n\nI swirled my tongue around and sucked on as much of my penis as I could while bobbing up and down the shaft. It seemed like a long time before my excitement built to the boiling point and I could feel my approaching orgasm.\n\nI watched as the skin around my testicles tightened drawing them into position. My cock throbbed, seeming to expand even more going deeper into my mouth. My lips felt the cum speeding up the shaft before exploding from the tip against my tongue and roof of my mouth. Inhaling deeply I felt a contentment at the taste and heat of my semen as it spurted out filling my mouth faster than I could swallow.\n\nI stopped bobbing my head and eased off to a gentle sucking as the flow of sperm began to lessen. Staying bent over in the same position while my penis started to soften and let it slow slip from my lips. I had never felt so satisfied before as I did at that moment. With hands on my knees I slowly sat up stretching and arching to ease the slight discomfort that had grown while I had been folding myself in half.\n\nLooking at the laptop I was amazed that only two minutes had passed since I started the recording and right at that moment I felt like I had just run a marathon. I played it back and although the angle wasn't the best it was easy to tell what was going on. I now had a permanent record of getting my first blowjob, even if it was myself sucking my own cock in the form of an ultimate act of masturbation. I even felt my cock begin to stir once more at that thought.\n\nI saved the file to my desktop until tomorrow when I'd have enough energy to hide it a safer place so not to forget where it was. Then stood to do a bit more stretching before crawling into bed. Before I fell asleep I thought of what the next position I should try and just what the best angle to capture the moment might be. Then with the bittersweet flavour of my own semen still on my tongue and knowing it would be refreshed the first chance I had I fell into a comfortable, peaceful sleep.\n\nI woke up the next morning feeling better than I ever remembered with my usual morning hard on and knowing what I was going to do about it. Couldn't think of a better way to start the day than with a blowjob and a mouthful of my own tasty cum.\n\nScooting down a bit on the mattress so my legs could fit above the headboard and my shoulders I pushed aside my blankets and lifted my legs into a Halasana position. I had to bend me knees a bit to plant my feet flat against the headboard and my cock was already brushing against my lips. My erection was already quivering at the first touch and drooling thick clear precum that I quickly licked it off savouring the sweetness. That didn't take long before my lips parted though and my cock slipped into my mouth for the second time.\n\nI found it much easier this way to engulf more of my penis and decided to see just how much I could get between my lips. Watching as my balls slowly came towards my face I manage almost all but the last two or so inches and the glands met the back of my mouth tickling my throat not quite making me gag but almost. I swallowed and it felt as though my throat was drawing the tip in. I knew right then that soon I would try to engulf my whole cock and maybe even be able to lick my scrotum with more practice. But for right now just this much shaft buried in my mouth was enough.\n\nEasing off a bit I burrowed my toes between the mattress and head board until they curled around the bottom edge to get some grip there and placed a hand on each butt cheek. Between flexing my legs and pulling with my arms I could actually fuck my own face and my shivered with that thought. Starting off slowly I got into a rhythm while my tongue swirled around the tip when on the up strokes and sucking as steadily as I could.\n\nAs my excitement mounted, so did my rhythm and soon enough I could hear the headboard bumping the wall. My breath sawed in and out with my thrusts once again teasing the skin of tightening ball sack while my orgasm approached.\n\nSuddenly my body started to jerk in time with my cock and I felt the first discharge race up the shaft to my waiting mouth. I let my hips rise until just my cock head rested on my tongue with my lips sealed around the shaft. Semen flooded my mouth with its heat quickly and while savouring my flavour once more. As some seed escaped the corners of my lips and I could feel the heat from it while running down my cheeks. I swallowed all that I could to make room for more.\n\nI relaxed slightly letting the shaft slowly intrude past my lips as my breathing slowed and my cock softened. I lingered the in the glow of self satisfaction for a few minutes before unfolding myself to lay stretched out across the bed.\n\nLying sprawled across the bed gentle stroking my penis and enjoying the taste that remained on my tongue. After a few moments I began to once again become erect and thought that I should get up and shower before getting carried away with my newfound enjoyment. Then I remember about one of the video's I had seen last night and knew it would be an opportunity to try it out. Imagine standing under the spray of water while sucking yourself off. Man I was really starting to love my cock."
    ],
    "authorname": "Kary_M",
    "tags": [
        "male masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/jeffery-loves-his-cock"
}