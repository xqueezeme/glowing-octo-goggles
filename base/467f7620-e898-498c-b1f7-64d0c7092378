{
    "title": "The Big Brother Hole Ch. 05",
    "pages": [
        "The closing chapter, kinda long with but all the love-making that was missing in the last chapter...\n\n*****\n\nI arrived at Stowmarket Police Station as the place was coming to life, and my concerns were soon put to rest. Why they couldn't have done that in the corridor when her parents were watching I'll never fucking know...\n\nThey told me what had happened the previous day and where they were in the investigation. Thanks to the video on my phone and their own local knowledge, the police had been able to find the site of the Big Brother Hole quite easily.\n\nThey unlocked the gate, drove in, and locked the gate again, leaving a pair of officers in and unmarked car across the road in a layby. Unmarked the car may have been, but the officers had loaded MP%'s across their laps, just in case the Russians came back to check things.\n\nThe Professor and Sean were locked in their guardroom cells still, the Professor was quite ill through his loss of blood and shock mind you. \n\nViktor was still in the Big Brother Hole suffering from blue hands and feet where I had perhaps over-tightened the cable tie hand cuffs he was wearing. Nasty ol' me, I'm so ashamed of myself...\n\nThe police brought firearms units, I had talked about the Russian mafia after all, but more importantly the assistant chief constable brought an IT team. They seized all of the hard drives and the plans of the hole. This represented freedom for me and some explaining for the hundreds of Brits that had 'paid to view' whose card details were safely recorded for the detectives to unravel and find.\n\nThe Professor lay in a hospital bed not two floors away from where Emma had been sleeping and complained long and loudly about me and how I had crippled him.\n\nSeeing an opportunity for revenge, or mischief at the very least, he told the police officer at his bedside, and anyone that would listen, that the savage that had blasted his hand to bits was part of the whole thing. \n\nThe nurses on his ward had not yet met Emma or me or heard our strange story and had some real, if only temporary, sympathy for the strange chap that had been brought in to accident and emergency with a badly blasted hand. \n\nHe went on to say that the young man, Harry he thought his name was, had been brought in at the last minute and had emailed to the Russians after seeing Emma on the internet. He'd shot the poor Professor, who was a virtual prisoner himself, because he was told he couldn't have sex with the poor young woman who had been so happy in the laboratory. He'd begged the mad man not to shoot him, on his knees and everything...\n\nFortunately for me everything had been filmed. This included me laying back against my seat and falling asleep in my car as the Rohipnol took effect. The police had everything, dated and timed and all studiously recorded in the professor's notebooks to add weight to his research.\n\nThe police kept me in a room while I was interviewed regarding the assault. I had of course gone quietly so wasn't handcuffed as I expected to be and the two detectives chatted to me about my ordeal and our escape during our short drive.\n\nAt the police station I met and shook hands with the detective chief inspector who smiled at me, offered me a seat in the interview room, set the cameras to record the interview and then said he wanted to question me regarding an allegation of assault with an offensive weapon and told me that \n\nI did not have to say anything but that it might harm my defence if I did not mention when questioned something I later relied on in court.\n\nI was handed a mug of coffee and proceeded to explain everything that had happened during my imprisonment. I couldn't tell him about my kidnapping as I had, and still have, no memory of it.\n\nHe asked about my relationship with Emma and I confirmed that we had become close in our prison and yes we had started a relationship down there. I knew what Emma would say but got the feeling that her Dad Tom had real issues with me.\n\n\"OK,\" said the policeman, \"thank you very much Mr Scholes, we have everything we need and I'm terminating this interview at...\" he looked at his watch, \"1330.\" The detective smiled, \"That was great Harry,\" he said, I spent much of this morning watching videos and you have confirmed everything I saw on the playback that I personally downloaded.\" He stood up, \"I'll get you another coffee and ring the Crown prosecutor and get things sorted. \"Here,\" he said, \"watch this.\" He lifted up a laptop and clicked several mouse buttons and turned the screen to face me. There I was, in a rather grainy black and white that faded to colour as the sun came up. \n\nThere was the Professor trying to cajole us back into the hole, his pleading, ranting, right up to his dramatic fall and his triumph as he raised the discarded Taser gun and had pointed it at me.\n\nMy shouted warning was heard and the Professor's sneer and the flexing of his arm all showed wonderfully on the tape.\n\nThe detective sergeant came back and said that following discussion with the Crown Prosecution Service it was decided that I was acting in self-defence, and had displayed much control by just going for the Taser and not centre body mass as my military training would have suggested. In fact the CPS barrister said that he was surprised I hadn't blown the man's head off in payback for what I'd suffered. \n\nThe police officers all treated me very nicely but it was clear that for some of them, my porn star status was evident and some of them had probably watched the videos. There were knowing smiles from them, which I got the feeling I probably shouldn't have known about. \n\nThe Chief Inspector found me before I left. He was very positive and said that there was nothing to link us to the Mafia or them to us; we hadn't upset the mafia as had been suggested, Sean and the Professor had mind you. Sean had turned off the satellite feed and switched over to another recording of us making love a couple of evenings before to hide his attempt at raping Emma, but that clip only lasted forty minutes, and then went on to replay for the rest of the day until the whole thing was disconnected by the Police. He still recommended we kept our heads down for a few days just in case.\n\nI was taken back to Ipswich and dropped at the hospital later that afternoon. It turned out that Emma had regained consciousness and had been released back into the care of her parents and elder sister who'd now arrived, all three of them doctors. \n\nI asked if they had left a number and the nurse looked very apologetic and said she had nothing, but her body language and facial expression spoke volumes. I knew Emma would have wanted to, but that look I kept getting from her father was enough. Through one of the policemen still at the hospital I contacted the chief inspector who confirmed what the nurse had said and that much as he'd like to, he didn't have a number that he was allowed to give me.\n\nI asked him if I could get some of my stuff back from the site. He said that much of it was being checked for forensic evidence and I'd get it back as soon as possible. \n\nI was now a free man, and didn't know what to do. Seeing as I was still technically their patient I used a shower and borrowed a green 'scrubs' shirt to go under my borrowed hunting jacket I was still wearing. I figured I'd have to replace it and the trousers seeing the action they'd had in the last month. \n\nMy blue jeans were filthy and even I could smell them. I'd washed them during our hot week but they had suffered after that time. For some reason I'd kept my wallet and my keys in my jeans - part of my OCD I suppose - and once showered and signed off with some medical advice I begged a lift to the nearest Asda Wallmart and bought myself a new outfit. The checkout girl did look at me a bit old fashioned, and checked my debit card with care.\n\nSeeing how suspicious I looked in one of their mirrors I dug out my driving licence and showed her my picture.\n\n\"It's a very long story honey,\" I said, and she appeared satisfied that I wasn't a tramp that had stolen it, she gave me a carrier bag and I stuffed everything else bar my coat into it after changing in the changing rooms. \n\nI stepped out into the town centre with one desire to get home. I asked for directions to the railway station and was told it was a ten minute walk. I was outrageously tired, more so than I could ever remember, but my under-stimulated brain just soaked up the noise, people and the lights. So it was a slow walk to the railway station and next step home; at least now I didn't look like I was a rough sleeper and my card was accepted more readily.\n\nAt the station I bought my first proper coffee and was so impressed with the expresso I downed almost in one, I got a huge latte for the rest of the trip.\n\nI was woken up by the guard as the train pulled into Liverpool Street just over an hour later, and I hit the underground. From here I operated on autopilot and at a few minutes after nine and let myself in past the pile of mail. I'd bought some fresh milk from the 7-11 and rinsed out the kettle and refilled it. I had the usual pile of junk mail, and a postcard from some mates at work.\n\nI had no mobile phone - Suffolk Police were still downloading evidence from it.\n\nI hadn't bothered to get a phone line installed in my flat, so to get me back in contact with the rest of the world I plugged in my laptop and started to email people starting with my boss at London Ambulance.\n\n\"Dear Dave,\" I started typing, \"You aren't going to quite believe this but...\"\n\nI had a sick note from Ipswich Hospital, and while the Doctor said I had taken surprisingly little harm from my month in the hole, he felt that I would benefit from a fortnight at home to rest and recuperate and put some weight on and slowly rebuild some muscle. \n\nI told my boss when I was due back, and gave him the name of the Chief Inspector at Stowmarket Police station who could corroborate everything I'd said.\n\nI walked to a nearby chip shop as he was closing and bought a huge bag of chips and battered sausages - I figured I didn't want to eat that much fish for a while - and started putting my weight back on straight away. In my large armchair I sat and watched the late night film with a large mug of Earl Grey Tea. My mind went back to that evening I'd done the same thing with my Dad that seemed a whole lifetime ago.\n\nThe trees outside blew around the street light throwing shadows across my living room and I realised that I was back home, safe, warm, well-fed and clean in my first change of clothes in five weeks; but after a couple of hours I would have given it all up just to be back with Emma in my arms, watching our fire burn and stoking it before we pulled the tent flap down and fell asleep holding each-other. \n\nI woke up in my chair with the TV playing to itself at three AM and I felt lonelier than I had since that night Mum left me on my own as an eight year boy to start her new life, knowing that Dad would not be back for the longest and scariest hour of my life.\n\nI woke the next morning, and my email and Facebook page had gone mad. The police had wanted to stay on top of the story so that they might get some of the others involved.\n\nBut with the various police officers, doctors and nurse and the straight fucking weirdness of the story of the imprisoned priest and the medic had got out and had hit the papers. The Police released basic details of what had happened with photos of the Big Brother Hole. They also hinted at the fact that video and pictures of us had sold across the internet. \n\nSome of the more gutter tabloids had spent hours and tens of thousands of pounds to buy some and included some rather grainy pictures of us naked in the pool with our faces blocked out, and there was the website that Emma's family had set up.\n\nIt played a recorded message said that the family were overjoyed to announce that Emma had been returned to them, but the number would be taken down at mid-day because of the number of trolls that had left abusive messages on it. The website was taken down later that day for the same reason. \n\nThere was a photo of her, looking chubbier in the face with a bobbed haircut, just as gorgeous as I'd seen her the last time, as far as I was concerned, but my last link to Emma was cut off.\n\nAfter a few days the press found my address and my door was being repeatedly knocked and eventually a police officer was put there. I emailed Suffolk police and asked if I could have my phone back or could they put it beyond use so I could get a replacement. I ordered another online giving them a credit card number until I could find some way of recovering the cost of it. \n\nI rang my motor insurance company and explained who I was and they very sweetly put me off saying that while this was not my fault, there was no clear line of blame until the court case had taken place. I found my push bike in my nearby garage, and cycled wherever I needed to go.\n\nMy boss and our area chief came round to my house and said that for the time being I should not return to work. They would continue to pay me of course and I was left with a card for the employee helpline the firm had bought into.\n\nMy new mobile phone arrived and I plugged it in to my laptop and downloaded my address book. I came to life and I found the twenty five answer phone messages from the boss and some mates. My email had similar 'where are you' messages from them.\n\nA day or so later I was physically rested but not sleeping well. My clothes fitted me better after my month of starvation but I did not feel that I fitted in my life anymore. \n\nI rang the Detective Chief Inspector again and asked for a contact number for Emma, or for a message to be passed to her. The inspector said he was not able to give me her number but said he would contact her parents and ask that the message was passed on - again.\n\nThe next day I heard nothing, even though the detective assured me that he would contact them straight after putting the phone down with me.\n\nThe following day my new phone rang and I snatched it up.\n\n\"Hello Harry?\" said the male voice.\n\n\"Yes,\" I said, \"Tom?\"\n\n\"Yes mate,\" he said his voice tailing off at the end.\n\n\"Emma,\" I said, \"Is... is she OK?\"\n\n\"Yes,\" he said, \"She's fine, she's here at home, resting.\" He emphasised 'here at home', and I got the feeling that 'home' was special and I didn't have an invitation. How are you Harry?\" he asked.\n\n\"I'm fine, it's all gone a bit mad, and I have journalists camped at my door. You?\"\n\n\"Yes, all pretty much the same, but the village has put the word out and the hacks are getting nothing from anyone around here but requests to move on and slammed doors.\"\n\n\"I don't know that many people round here to be honest,\" I said, \"but the police are guarding me for the time being.\"\n\n\"Excellent,\" he said, \"Well Harry, I must be...\"\n\n\"Emma,\" I said quickly.\n\n\"Yes?\"\n\n\"Could I talk to her?\" Before I'd even finished saying it I knew what his answer was going to be and I knew how lame I must have sounded.\n\n\"Err...\" he said, turning on a 'parent' voice he'd probably never needed to use before, \"Noooo,\" he dragged out the answer, \"Both her mother and I have discussed it and we don't think it will be such a good idea...\" he took a deep breath and steeled himself, \"we don't think that you should talk to Emma for a while. At least until after she gets her head straight again - after this ordeal.\" He coughed as if to bolster his courage, \"and until the police have finished their investigations of course.\"\n\nI bit at that, and probably shouldn't have,\n\n\"I was nothing to do with it Tom,\" I said, \"I've been exoner...\"\n\n\"She's changed Harry, and I... we're not sure if it's for the better. Once we've decided...\" I tried to interrupt but he was obviously into his prepared speech and wasn't going to be stopped, \"No Harry, once we've decided that she's back to normal then we can have this discussion again.\"\n\n\"Will you at least give...\"\n\n\"I said we are waiting until she's fully recovered! Goodbye Harry!\" He disconnected the call.\n\nShit.\n\nThat was that. I had no other form of contact for her short of going to Salisbury and checking every Doctors surgery for two Doctor Rogers and I got the feeling that they would get all legal on me.\n\nI was stuck.\n\nNot only was I stuck, while looking on the internet I read the Daily Mail account of our ordeal and escape, and that Emma was recovering well and looking forward to a long-awaited meeting with her 'old friend' Dr Nathaniel Draycott, Chaplin of Keeble College, Oxford who had been a key part of the group that fought so long to find her and keep up interest with the police to maintain the search. \n\nWhile saying nothing, the suggestion was that now free she was waiting to fall back into the loving Christian arms of her faithful patient beau, and not the 'ambulance driver' she was thrown together with against her will.\n\nWell, that's how I read it.\n\nFuck; Mum and Dad wanted her back in the hands of Reverend Nathaniel, the 'safe-priest-old-friend' and hopefully forget the nasty ex-soldier ambulance man who was probably part of the whole thing anyway.\n\nI was down, way down, and I had no support network around me. No family, not allowed to go to work and talk to my mates there, lots of social media chat with mates from all across my world, but I kind of got the feeling that now I was back in the world I was a bit of a laughing stock because of my porn star status. \n\nMy mate that I was supposed to go shooting with had been told by his employer that I wasn't to come anywhere near the estate for the time being as some of his clients wouldn't want to be associated with 'someone like that'.\n\nThe online trolling had started as well and there were some nasty comments on some of the ex-service websites and groups that said what a lucky bastard I'd been and it was obvious why I'd not been in a rush to get out; I fumed, like I had any fucking option. \n\nOthers, including some on my regiments' Facebook page, had pondered how a God fearing and honourable former member of the regiment like me should have fought my way out or died trying rather than submit to what we did. \n\nThe media was full of comment of course, after all the court case was yet to come and people wrote that we were far too convincing and surely we were part of it. That element didn't stop until everything came out in the trial and the three people that had died already were mentioned and the BBC were allowed to show their video of the Big Brother Hole, the journalist digging at the soft earth sides and the crane and finally the scale of thing was seen for what it was.\n\nI closed my Facebook account for the time being and kept Google for shopping and ordering pizza.\n\nI rang my Grandpa; I hadn't wanted to bother him with all my shit, he was in early seventies but still quite hale and hearty and I didn't want to worry him. I hoped he wouldn't connect me with the story but of course he had. I rang him every three or four months anyway and generally arranged to buy him a pint in his local the following Saturday, but he didn't have my number.\n\n\"So Harry, you get kidnapped, escape, fall in love and you can't even ring your old Gramps and let him know?\"\n\n\"Sorry Gramps, I've been real busy, only just got my phone back and i had to turn my house upside down to find your number, it was on my other phone that the police have still got.\"\n\nI started to tell him what had happened, and he said simply, \n\n\"Tomorrow evenin' boy,\" he said, \"The Marquis of Granby, usual time,\" you can give me the full SP mate\".\n\n\"Night Gramps,\" I said, feeling some kind of comfort for the first time since I'd left the Hole.\n\nThe next evening, followed by a couple of Journo's I got on the underground; the police kept the Journo's back until I was on the tube.",
        "I headed across to his local that we normally met in; he was stood outside waiting for me.\n\n\"We'll do a different pub tonight mate,\" he said, \"At least two people have asked me if I'd seen you since you escaped, let's go somewhere they don't know us.\"\n\nIn the end we did the local Indian restaurant and we shared some curries and some sides while I told him what I could remember.\n\n\"And you've still not heard from your girl?\"\n\n\"No Gramps, it's tearing me up.\"\n\n\"Life is way too fucking short mate, see your Nan right, she has Alzheimer's and I lose a bit more of her every day.\" He picked up a piece of Naan bread that he dipped into the sauce on his plate, \"She ain't never been perfect but I've valued every single day with her, and I do now.\" He picked up his beer bottle and touched mine with it, \"if you've found someone that special you make sure you bloody find her again. You do everything you can,\" I went to interrupt, \"EVERYTHING,\" he said over me, \"You hear? You found the girl you want to spend the rest of your life with?\"\n\n\"Yes Gramps.\"\n\n\"Go start your bloody life then Dickhead,\" he pushed the last of the naan bread into his mouth and grinned, \"two more beers here please,\" he called to the circling waiter.\n\nI sat on my sofa the next night fighting off one of those black mood of desperation and I thought about that 'everything?' my Gramps had thrown at me.\n\nI had to problem solve it, had I really tried everything? I had no phone number, email address or postal... postal address. I knew there would only be one Vicarage in that Village in the Dales she told me so much about, so I should write to there, she was bound to get it or hear about it at the least.\n\nSo I fell back on that oldest and in many ways most reliable modes of communication, and I wrote to Em Rogers, care of her vicarage. Just for belt and braces I sent one to the Detective Chief Inspector asking that it be passed on to the address he couldn't give me.\n\n\"My Darling Em,\n\nI hope this letter finds you well and recovered. I was released from the care of the NHS shortly before you and into the care of Suffolk Police. It turned out that the Mad Professor made a complaint of assault against me I was taken to Stowmarket to be questioned. You'll be pleased to know they let me off!\n\nHave been on my own now for a couple of weeks and I'm going mad without you. The psychiatrist and my GP are telling me I have post-traumatic stress, while I just keep telling them that I fell in love with you. The Psych told me that it's perfectly normal and is actually a bit like Stockholm syndrome and to be expected. Right now the only thing I know is that having spent 34 days with you (the policeman told me) I just can't go 'Emma cold turkey'.\n\nI don't know how everyone just expects me to move on and get over it. It wasn't an 'it', it was 'you'.\n\nI know how hard it has been for you, your sentence was four times what mine was, but after all we've been through this can't be an end to it. I've included my addresses and my phone number because I don't have yours and figured you might be in the same situation. I've sent a copy to your vicarage and to your parents' house via the police - that way I hope one of them gets to you.\n\nI know there's an extremely good chance that you may never want to see my face again and what it reminds you of - but I'm still taken back to that wonderful morning when we both realised that along with a grey plastic sheet and some empty Coke tins all we really had was each other. Now that the panic and the fear is over, I am the scared one, blinded by doubt and scared that I might have lost the one thing that kept me focussed, and made me realise what life is all about. \n\nTruth is I don't want to learn to live without you, I want to do all those things we talked about. I want to have breakfast with you, I want to spend the day with you, I want to go somewhere posh and have dinner with you, I want to curl up on the sofa and watch all those films we haven't seen, I want to sleep with you on a soft bed and hold you all night with a duvet and pillows rather than a mess of coats and a few blankets. I want our holidays in Italy and New England.\n\nIf that's it, I will of course respect your wishes, get myself that Labrador and become a country gent. I know that I'll never forget you or what we did and meant to each other for our time together - to paraphrase Bogart my lovely Em, 'we'll always have Stowmarket'.\n\nMissing you,\n\nLove always\n\nHarry\"\n\nI walked to the post box and posted my letters at three in the morning to avoid the journalists; the was one waiting when I got back and I asked him politely to fuck off and leave me alone - he didn't quote me.\n\nI heard nothing for days and figured that some things were just too painful to revisit and that would be that. I thought I'd contact my boss and ask if I could go back to work somewhere else in London, just to keep me occupied and so I could get back on with my life.\n\nThen after three weeks since our freedom and one after my letter, there was knock on the door. I figured it was another member of the press. I peeked through the glass on my front door and saw a figure. The press had pretty much given up on me and I was just getting used to it, so a journo early evening pissed me off somewhat. \n\nI was just about to shout through the door that I still had absolutely no comment when I recognised the 'L' shaped patch I'd stitched onto the right shoulder of my Barbour!\n\nI pulled the door open, and there she was. \n\nEmma; looking gorgeous, breathless and fantastically beautiful, that red hair I'd run my fingers through had been trimmed and styled, her lovely face made up to perfection.\n\nWe stared at each other for a few moments,\n\n\"I thought you might want you coat back,\" she whispered.\n\n\"Em...\" I stuttered, only for her to jump into my arms, laughing, giggling, her thighs locked around mine holding onto me for grim death.\n\n\"Harry,\" she squealed kissing my face, \"I've missed you!\"\n\n\"And I've missed you!\" I said kissing her back. I stepped back into my hallway and saw an overnight bag on the floor. She put her feet down and bent to retrieve it.\n\n\"You don't think for a second I'm going home tonight do you?\" she purred.\n\nI made her the first cup of real tea, and she slipped off her shoes and curled her legs up on my sofa. She was looking fantastic in a tailored roll neck sweater against the winter chill and a skirt that stopped mid-thigh over thick black tights. I'd never seen anything so wonderful in my life and realised that I'd only ever seen her in trousers before.\n\nI sat next to her putting our tea on the coffee table. We didn't stop beaming at each other as we sat and brought each other up to date with what had happened to us.\n\nShe'd gone home, and had slowly recovered from her stab wound, the police had arrived and taken several statements from her and showed her some pictures and some video and she'd asked about me; Mum and Dad where on hand to say that they were sure that I'd be in touch soon.\n\nMum was smiling and saying what I nice guy I had been. Tom again confirmed that he had not taken to me, especially when I was taken away by the police for questioning. \n\nHe'd again insisted that Emma should get over her physical and emotional trauma before contacting me again. Emma had worn my coat home, and kept it with her. When her mum took it to hang it up, she cried and said that it was her 'security blanket' and it smelled like Harry.\n\nThis prompted her father to contact her old friend from Oxford hoping that seeing him might remove me from her thoughts. \n\nThis didn't happen; she was of course very pleased to see her old friend, but during his train journey to Salisbury he'd done a quick Google search on Emma and read what she'd had to do with me to get food, and had happened on a couple of the photographs on a naughty website. \n\nShown into the conservatory where Em and her sister were relaxing, he was constantly mindful of the glass walls and all of the journalists just the other side of the hedges and walls and their long lenses. He was extremely formal with his old friend and kept his distance hoping that none of the scandal that would soon develop would come anywhere near to him. After all, he had his sights on higher things and was already on a short list for a job at Lambeth Palace.\n\nHis was photographed coming out of the house resplendent in his white collar and made a brief statement that he was delighted to be there to see his old friend and offer any support and spiritual comfort he could to the whole family. \n\nHe was never seen again and there was some Sunday supplement allusion to how sad it was that after his efforts to bring her home their romance was not to be.\n\nThen, after spending a long weekend at Salisbury her Sister Ann had gone home to her Husband and children in Yorkshire, telling Em again that she absolutely had to contact me. \n\nAs Em had laid in her old bed in her old room, she had told her sister about her time in the Big Brother Hole and how awful it had been until I arrived. Then she explained exactly how close we'd become, and Ann had said how impressed she was and although it had been a nightmare for all concerned, at the very least her virgin sister had finally popped her cherry and discovered 'the good life'. \n\nEmma laughed and lashed out at Ann, insisting that it wasn't just sex; she admitted that we'd fallen in love.\n\n\"Well d'uuuh!\" said Ann, \"I got that within ten seconds of you telling me his name! It is strange that he hasn't tried to contact you mind you.\"\n\n\"I guess that he's as stuck for contact details as I am\" said Em. \n\nEm said that the very next day she would contact Suffolk police and ask for my number. She did, but the Chief Inspector was on leave and wouldn't be back until the following Monday. A message was left for as soon as he got back.\n\nThat same day Ann had gone back to her Catterick home and stopped at her sister's vicarage and collected the small bag of mail as she had done for the last four months. She'd been doing this since Emma had gone missing and it was almost without thinking these days.\n\nShe let herself in, made herself a cup of tea and picked through the post; there was a hand addressed letter 'Em' rather than Emma or Reverend Rogers, with a South London postmark. \n\nWith their sisterly discussion of the previous day in mind, she tore open the envelope - Ann's hands were shaking so much she could barely unfold it. \n\nShe read it, and by the time she'd reached the third paragraph she had tears running down her cheeks. Her phone connected automatically to the still running Wi-fi and she emailed me, just to check my bona-fide.\n\nMy phone pinged to tell me I got mail. Most of the time I ignored them but something made me check as I lay on my sofa ignoring daytime TV. \n\nThere was an email from an address I didn't recognise and it was titled, \"Hi Harry, I'm Em's sister - what's my name?\"\n\nMy hand on my phone started to shake - just the tiniest bit.\n\n\"Good afternoon Ann with no 'E'.\" I replied\n\n\"Well done. Just to check you are who you say you are, what stood out about my sister losing her virginity at University?\"\n\n\"The biggest feature about that was that she didn't lose it at Uni' - she lost it to me in the Big Brother Hole,\" I figured I should check who she was, \"what do I do for a living according to the tabloids?\"\n\n\"Why Harry I do believe that you are a Hi-speed, life-saving hero.\"\n\n\"Recognition at last Ann with no E.\" I replied.\n\n\"Still doing well, if you REALLY know my sister you'll know she has a particular reverence for the holy trinity, which is her favourite?\"\n\n\"Star Wars\" was my reply.\n\nMy phone rang seconds later,\n\n\"Hell Harry, what took you so long?\"\n\n\"I'm guessing this is Ann?\" I said.\n\n\"Yes,\" I could hear the emotion in her voice.\n\n\"Your Dad told me not to make contact, I think he was worried that I was a bad influence.\"\n\n\"Harry,\" she sniffed, \"Bad influence or not, my lovely sainted sister has been walking around with her head up her ecumenical arse since she took holy orders 5 years ago. A month spent with you and she's turned from the soulless asexual faith practitioner back into the girly girl I grew up with; she's relaxed, she's wearing hi-cut lacy panties under her tight jeans, hot make-up, she walks with a sexy wiggle again after years of working hard not to and has even started to swear.\" She took a deep breath, \"she talks about you all the time Harry, and that's never happened before.\"\n\n\"But your Dad...\"\n\n\"Oh just you leave my bloody Dad to me. Keep your phone on, I'll call her now, trust me, and Harry?\"\n\n\"Yes?\"\n\n\"Thank you for bringing my sister back to me, my real sister.\"\n\n\"You're welcome,\" I said remembering the same conversation with her father who now wouldn't talk to me.\n\n\"For doing that, I'll bring you back to her, promise.\"\n\nShe did so. She read Em the letter and the fact that one had been sent to her home address via the police. Their anger was temporarily abated as Ann read the words and both squealed with delight. Em was so excited she wrote my address on her dressing table mirror in lipstick even though Ann was going to text it to her. With a 'promise me you'll ring me and let me know how it goes' from Ann, Em spent twenty minutes selecting her hottest clothes, liberally sprayed herself with Chanel No. 5 from her Mum's dressing table and put my coat on.\n\nShe'd had her final stitches removed the previous day and told her parents she was going to London straight away to see me. Her Dad tried to get all parental with his nearly thirty year old daughter but faced with her cross look and the telephone bollocking he'd already taken from Ann for throwing away my letter, he gave in. \n\nShe kissed and hugged her smiling Mother and with my address burned in her brain Emma packed an weekend bag and got the train into London and following two tube journeys and a taxi arrived at my place.\n\nStories done we finished our tea and Em slid across the sofa to me, she smelled wonderful.\n\n\"...And if you don't take me to your big soft bed with duvet and pillows and make love to me like you promised Harry Scholes, so help me I'll...\"\n\nI kissed her, and took her hand leading her to my bedroom. We stripped each other and stroked and caressed bodies we both knew well already. Emma was wearing a black lace string and I almost came there and then just seeing it, and when I slowly dragged it down over her hips I saw she had even shaved her pussy, admitting that she loved the feeling and more than that, the look of it. \n\nShe had filled out the tiniest bit and her boobs looked fantastic, along with the rest of her lovely curvy body.\n\nFinally naked I kissed her from her beautiful face down her body, stopping at her breasts and those nipples I'd loved so much, to gently kiss her just healed scar, until I reached her bare pussy.\n\nI licked, sucked and fingered her to her orgasm and it was just as pleasant only this time we were on a soft mattress in a warm house, happy that some sick fuck wasn't filming us.\n\nI managed to make her come a couple of times and she was crying out with joy and calling my name, gushing her juice over my mattress but right then I couldn't have cared a fuck less.\n\nAfterward the passion, we made love gently and passionately and clung to each other. I kept on thrusting in and out,\n\n\"Em, I'm gonna come baby, should I...\"\n\nShe grabbed my shoulders and held me even tighter,\n\n\"Don't even think of pulling out buster,\" her wonderful smile and the wonderful feeling of togetherness pushed me over the edge, and I came.\n\n\"Wow,\" she said hugging me, both crying and laughing at the same time, \"Now Harry, where's that pizza you promised me.\" Her parents didn't approve of pizza.\n\nWe ate pizza, garlic bread, ice cream, both naked and in my bed.\n\nWe lay down sipping more tea that I'd made while waiting for the pizza. We were back, two together, and I could only stare at her in wonderment.\n\n\"Penny for your thoughts Harry?\"\n\n\"Simple,\" I said, \"I'm just so happy I've got you back.\"\n\n\"So am I,\" she said, \"I was so miserable without you.\"\n\n\"Now I have you back, I'm not minded to let you go again,\" I paused, \"Emma Rogers, I love you...\" I took a breath, \"Will you marry me?\"\n\nShe beamed a huge smile at me and nodded,\n\n\"Yes,\" she said, \"Yes please!\" She threw her arms around my neck and kissed me.\n\nThe very next morning we went into London and I bought her a sapphire engagement ring that matched her lovely blue eyes. We stayed at my place for a few more days and I cooked her the meals we'd talked about and we watched some movies.\n\nWe collected her engagement ring two days later and she took a photo of it on her hand and emailed it to Ann. She phoned straight back and I could hear her screaming down the phone. \n\nI phoned my Gramps and left a message on his answer machine, quite simply, \"thanks for the advice mate, I've found her and she's all mine.\"\n\nThe next day we headed back to Stowmarket police station and her car which had started with a push. Mine was written off because of the damage to the axles, wheels and roof when it was dropped down into the tree line of the Big Brother Hole of course. \n\nShe drove us from Suffolk back to her parish in Yorkshire, she had no pile of post as her verger had been popping in and out of her house to make sure things were OK and leaving them for Ann to collect.\n\nHer verger, a sweet, slightly camp old boy called Ray, had not been told that she was on her way home and was running around the place with a vacuum cleaner and didn't hear her open the front door.\n\n\"Ray!\" she tried to call over the sound of Radio Two and the red 'Henry' vacuum cleaner he was throwing around with such abandon, but to no avail. He turned, saw beaming Emma framed in the doorway, cried out a rather effeminate scream, and fainted. I went into ambulance mode and Emma cooed over him. Not before turning off the vacuum of course.\n\nHe came round,\n\n\"Emma!\" he hissed, \"Darling Emma! How wonderful, no one said you were coming, I would have arranged everything, we were going to have a party and everything once we heard you'd been found!\" He started to weep softly. \"I never gave up on you Emma,\" he hissed sitting up, \"They had a stand-in on Sundays, but I wouldn't let him move in.\" he gulped and controlled himself. \"Emma will be back; I told them, I said just you watch I said. Emma will come back to us.\" He sat up and I helped him, \"I prayed every morning and every night Emma,\" big tears were pouring down his face, \"I knew you weren't dead, and I knew you hadn't given up on us. The Bishop was starting to get cross with me, because I kept fighting your corner.\"\n\nEmma was lost for words, she spoke the words \"Thank you Ray,\" but made no noise. Instead she just hugged him and they rocked side to side, both talking quiet words of comfort to the other.\n\nI left them to it and walked along the corridor until I found the kitchen. There was a kettle and I filled it up and switched it on. I took three mugs from the mug tree, and took three tea bags from the large jar marked 'tea', and put one in each mug.  \n\nEm and Ray appeared at the kitchen door both with huge grins and arms around each other. Ray looked at me 'a bit old fashioned'. I guessed I was on his territory and he stepped into the kitchen with a 'let me'.\n\nHe opened the fridge and found took out a small bottle of milk, and I realised he was disgusted by my profligate waste of three tea bags for three people! He took one of the bags and put it back in the jar and opened the cupboard to retrieve a china tea pot, the first one I'd seen in use outside of a tea shop in years.\n\n\"Harry, let me introduce you to one of my best mates in the world,\" she put a hand on Ray's shoulder, \"This is Ray; Ray, this is the man who saved me and then brought me back,\" Ray's jaw dropped, \"This is my fianc\u00e9 Harry.\"",
        "He stuck out a hand robotically, then stopped and looked at Em.\n\n\"Fian... Fianc\u00e9?\" I thought he would faint again, but then his face broke into a huge laughing smile, \"Oh Emma, how wonderful!\" He shook my hand, only letting go to grab Em and hug her rocking her from side to side. \"Oh I'm so pleased!\" he cried out taking her proffered hand with her bejewelled gold band on it, \"this is just the best day ever! We've been praying for this day too!\"\n\nHe didn't stop hugging Emma, so I checked in the fridge and it was empty but for the milk. I checked some cupboards, and we drank our tea sat at the kitchen table.\n\nI said I would walk across to the shop and get some groceries just for that evening and the next morning. Ray insisted that he should but I insisted he stay with Emma and catch up.\n\n\"But you kept her alive and you brought her back to me,\" he said, as if walking across the road to the village square was below a superhero like me.\n\n\"Yeah, and you kept her alive here,\" I waved a hand around the room we were in and out of the window, \"and more importantly 'here'.\" I tapped his chest, \"you stay here with your best mate, and catch up.\"\n\nIn reality I just fancied a break from the emotion, and a walk after our road trip from Suffolk.\n\nI found the tiny little village shop and picked up a basket. I bought more milk, cornflakes, a sliced loaf and, of course, eggs and bacon. I threw in a jar of marmalade (an absolute requirement after a full English), some olive oil, toilet rolls, kitchen towels and some biscuits. The serious shopping we could do the next day at the one of the large out of town supermarkets.\n\nI paid the cashier with my debit card and she smiled at me. I took my bag and left, seeing in the reflection on the glass door that she was talking to a man and pointing at my back. On the floor by the door were that day's last remaining newspapers and guessed that our fame had preceded us.\n\nI walked back to the vicarage to find them both at the kitchen table holding hands and laughing, my absence had done its magic.\n\nI unloaded the few items I bought into the fridge and the cupboard, and I turned and looked at Em. She beamed a grin at me and shook her head.\n\nIn the hole, she had often referred to her desire to take me back to her vicarage and make me a cup of tea and a bacon and egg sandwich.\n\nRay looked at our unspoken communication and stood up,\n\n\"I'll leave you two to get settled in then.\"\n\nEmma stood, hugged him and kissed his cheek but didn't stop him from leaving mouthing a \"thank you Ray,\" to him.\n\n\"Well Harry,\" she said, \"after all that shagging we did, I suppose I should make up my part of the deal.\"\n\n\"Nah,\" I said, \"let's do that tomorrow, let's unpack have a cup of tea and some biscuits and go to the pub for dinner, I reckon that's the easiest way to let the entire village know you're back; if not, they'll all be banging on the door and you won't get a minutes peace.\"\n\nAnd that was what we did; the vicarage had a large open fireplace and I made it up with kindling and paper to light it when we got back from dinner.\n\nAt a little after seven we walked hand in hand across the village green to 'The Royal Oak' and it was quite full for a Thursday evening. In the manner of English 'locals' we were stared at for not being 'local people'. At least I was.\n\nIt took about a minute and a half for people to stare through the low lights at the dark haired stunner that looked familiar somehow. When she'd gone missing her hair had been neatly straightened and bobbed and hadn't changed in the two years she'd been here. Now it had grown out, was shoulder length, slightly tousled and looked as sexy as hell.\n\nShe said she had lost two and a half stone through her imprisonment, and was now wearing tight blue jeans, boots and a tailored sweater, along with a stylish haircut and perfect make-up. She looked fucking gorgeous.\n\nThe landlord, with a stern countenance, crossed the bar towards the table we'd put our jackets on. I was looking at the board with that night's menu, and fancying a rib eye steak, and noticed him heading towards us. I hoped he wasn't going to make a scene and ask us to leave for not being local.\n\n\"Reverend?\" said the landlord in his strong Yorkshire accent.\n\nEmma turned to him,\n\n\"Brian!\" she said, \"How are you!?\"\n\n\"It is her!\" he shouted across the bar, and there was a universal cheer. He grabbed her into a bear hug and didn't let go until his wife joined him and hugged took her turn hugging the absentee.\n\nThe entire bar descended on us, and that was that. Drinks appeared, I was handed a pint of bitter and Emma was handed her usual OJ and lemonade. Next thing, corks popped and we were handed champagne glasses and toasts were made.\n\nI stepped back to let Emma enjoy her moment, but these wonderful Yorkshire folk wouldn't let me. The papers had praised me as the ex-army paramedic who had bravely fought off three adversaries and exposed the Mad Professor and shot his hand to stop him shooting the priest.\n\nI had a second, then a third pint handed to me, more booze than I had drunk since the last Christmas party I'd gone to. Mobile phones appeared and excited discussions had.\n\n\"Yes! Reverend Emma, She's here! Yes! In't pub, The Bloody Oak you narner! Leave the dishes, come right now!\"\n\nAnd the place filled even more.\n\nThe landlady noticed the gem on Em's finger and screamed - then the hugs and handshakes started all over again and more champagne called for.\n\nWith the beer, I was now famished and escaped to the bar and asked the landlady if there was any chance of a meal as Emma and I hadn't eaten since lunchtime.\n\nShe said that she would send the chef back into the kitchen, and we both had steak and chips. Mind you, the chef did bring out plates and plates of chips and sent them around the bar.\n\nThey left us alone for twenty minutes while we ate, but then descended on us as soon as our plates were cleared. At nine thirty Ray appeared, and he joined the party.\n\nAt a few minutes after midnight we left to walk slightly unsteadily back to her house and the bed that was calling us. Emma had turned on the heating so the place was lovely and warm by the time we got in so I left the fire for another night.\n\nI cleaned my teeth and used the bathroom, sliding into her wonderful bed. The duvet was huge and I pulled it up to my chin, just enjoying that feeling, with my brain back in the hole for just a few moments. Em appeared at the door dressed in a lacy black baby doll nightdress with matching string panties. She'd repaired her make-up and looked sexy, sophisticated and gorgeous and posed in the doorway. \n\n\"Hey Harry,\" she put a hand on her hip and the other on the door frame and fuck didn't she look hot. \n\n\"Hey Em,\" I looked her up and down. She looked outrageously sexy and stalked across the room to slide into bed next to me.\n\n\"I've waited so long for this moment Harry,\" she said, and we descended into passionate kissing. After our great night, and the beer, and the food, I didn't think for a second that I'd want to make love. \n\nBut laying there with my lover, I could think of nothing else and she rolled over on top of me taking a firm grip of my penis. She pumped me quickly, much as she had when we were in the hole, and I rose to the occasion. \n\nI undid the black ribbon holding her baby doll together and she leaned over me making her fantastic tits to rub across my face, moving her nipples across my lips teasing me with the hard nubbins at my mouth. Finally I dragged her panties down her thighs throwing them across the room. \n\nShe smiled, bit her bottom lip and sat across me raising up onto her knees so she could lower herself on my erection. She fed it into her vaginal lips and sat back, exhaling slowly with her eyes closed. \n\nShe lay flat on my chest, her lovely boobs pressing against my chest and she slid up and down me, riding me to perfection. After a while she sat up to get me deeper into her and she made good use of me, and I could see she was heading to her orgasm. I used one hand to caress her breasts and the other to where we were joined at our centre, and flicked her clitoris until she started to gasp and pant.\n\n\"I'm nearly there Harry,\" she gasped, and I flicked harder. She came, and slumped forward, so I took the opportunity to slide her limp body off of me, but pulled her up onto her hands and knees, \"Oh fuck yeah!\" she hissed and I quickly entered her from the rear. \n\nI pounded into her, slapping her backside with my hips and she came again, shortly followed by my own climax and I spilt my seed deep into her. We lay down together and recovered.\n\n\"Wow Harry,\" she said, \"I slept on my own in this big empty bed for almost two years and never once dreamed that I'd ever make love in it, or even in this house.\" She got up to use the bathroom, and then came back to bed. We slept soundly.\n\nI slept so soundly that I knew nothing until the rattle of crockery woke me at eight o'clock and my semi naked waitress, her long hair piled on top of her head held in place by of all things a pencil, wearing my shirt from the night before buttoned just below her bust line giving her the most fantastically sexy looking cleavage; not only was she looking shit hot, she was holding a tray of tea and toasted bacon and egg sandwiches.\n\nParadise. I even asked her to marry me again.\n\nI was still lying exhausted on the bed after Emma and I made love, when Ray rang the vicarage at ten thirty. Emma was still in the shower, and he said that after last night and the pub he'd arranged an impromptu get together in church hall that evening; I promised to pass on the message, but he still asked if I had it - twice; he even suggested I wrote it down. \n\nWe jumped in her car and headed to Catterick and the large supermarket and filled her cupboards, fridge and freezer.\n\nWe got to the church hall for seven thirty and it was another wonderful evening, and I was introduced as Harry, 'her fianc\u00e9'. All of the lovely dales folk started to shake my hand and kiss her cheek and discuss the wedding, over and above anything else that might have gone on.\n\nThe party finished at a little after eleven and we were both banned from hanging back and helping clear the hall. Ray and a collection of little old ladies set to and the whole place was sorted and chairs stacked and bins out before we'd even stopped saying good night to her friends.\n\nAnd so we settled in. On the Saturday, we stayed in and sorted through her clothes, most of which were too big for her now. The next Morning she dressed in her uniform of a vicar, all slightly too big for her now, but Ray was on hand with safety pins and of all things a pair of braces. \n\nHe walked her to the vestry and I took my place at the back of the packed church, including her boss the Bishop who had brought the Archbishop with him. She was welcomed back by storms of applause and a standing ovation from everyone, and she was reduced to tears. Her faithful Ray was next to her in a second with tissues, saving one for himself mind you.\n\nShe turned to the altar and made her own devotions, which I now know were for the three unfortunates that never made it out of the hole and thanking God for sending me. She turned and raised her smiling face.\n\n\"Dearly beloved!\" she called out with raised hands and off she went, delivering a sermon of thanks and restored faith and how you should never give in to doubts. \n\nWe were back into the church hall afterwards and I finally got to meet Ann, who was hugging Em and checking out her sapphire. Next I was introduced to Ann's Royal Army Medical Corps Major Husband David and their two boys. Ann hugged me and admitted to David that we'd spoken on the phone before.\n\n\"Thanks for bring her back mate,\" said David shaking my hand, \"I thought Ann was going to tear the country apart if she didn't turn up.\" \n\nHe was wearing his khaki dress uniform and peaked cap. He was no military slouch himself and wore his medal ribbons much the same as mine had been, with the addition of paratrooper wings on his right sleeve. Next I was introduced to a man I recognised from the TV and was second only to the Archbishop of Canterbury as senior man in the Anglican Church. I smiled, he beamed and thanked me for bringing back his priest. I grinned and said he was welcome, I didn't bother to tell him I wasn't that much of a believer.\n\nWe went back to the vicarage and had a sandwich lunch with Ray, Ann and her family and it was very sweet and something I was wholly unused to. David had to be back at work so everyone said their goodbyes, then it was back to church for a short evensong service and a shorter less emotional version of what had happened that morning.\n\nWe went back to the vicarage and Em went upstairs and got changed while I brewed some coffee, and we sat down to watch movies on her DVD player and we did the holy trinity that I'd brought with me, stopping only to plate up the dinner we'd mostly prepared that morning.\n\nI lit the fire that I'd built two nights before and turned off the lights. Much as I wanted to watch 'the Return of the Jedi' the warm glow and crackle of the logs and her pushing me down so we were both laying spoons fashion on her large leather sofa took precedence.\n\n\"If you so much as think of offering me a peppermint tea Harry, you might not get to do what I really want you to do tonight,\" she giggled turning in my arms so we were body to body and face to face.\n\nShe wrapped her arms around my neck and put I mine around her waist and we just started to kiss each other, our tongues clashing and our hands journeying across our bodies to stroke and caress the other as we had done so many times before. \n\nI'd undone the belt on her jeans and had worked them down her legs until she kicked them off, stopping briefly I looked up to make sure the curtains were closed. My flat was first floor and not overlooked so it wasn't something I'd ever had to think of before.\n\n\"What?\" said Em noticing me peaking over the back of the sofa.\n\n\"Just wanted to make sure none of your parishioners were going to get a shock. Me screwing you on this Anglican sofa that he spent so long polishing would give old Ray a heart attack.\"\n\nShe giggled.\n\n\"I closed the curtains while you got the coffee Harry,\" she said, \"Anyways even the Archbishop of York knows what we got up to and that with this,\" she waved her hand letting the firelight catch the jewels in her engagement ring, \"there's a pretty good chance that we are still doing it.\" She sat up to kneel across me, \"So Mr Scholes, you going to fuck me or what?\"\n\n\"Reckon I'll have to now.\" I said and grabbed her and pulled her down onto me. \n\nWith her discovery of sex Emma had shown a great preference for girl on top and rode me to her own pleasure, and while enjoying her playing cowgirl I loved it when she was on her hands and knees and getting it from behind. \n\nSo our wrestling match started. We kissed and hugged, pushed and pulled, removed items of clothing until she was laying across me in a sixty nine and we feasted on each other. Wow, but it was fantastic and the first time we'd done it since we were in the Big Brother Hole. \n\nAfter she'd come - twice actually - she kissed my rock hard cock and slid around to lay on me. She knew she could ride me just how she wanted, there was no way I could deny her anything. She slid me up insider her, threw her head back and growled as my erect shaft hit all the places she wanted hitting.\n\n\"Oh yes Harry,\" she said, \"Keep going, just like that, fuck me, fuck, awwwwww shit!\"\n\nI don't know why she was encouraging me, all I did was to occasionally tilt my pelvis or push up on the occasional stroke, and this was all her own work and a wonderful view. I alternated my hands from her thighs, to her boobs, to pinch her nipples (one of her favourite things during the act of lovemaking) to cupping or slapping her arse. I could feel my sap rise and started to get into it.\n\n\"Oh nonono Mr Scholes!\" she stopped fucking me, and sat with her arms folded, \"not yet, I still have a special treat for you!\" Without pulling off of me she lay flat on top of me and kissed me. \"Go to the kitchen Harry,\" he she said rolling off of me, \"brown paper bag, cupboard under the sink.\"\n\nShe stood and pulled me by my hand until I was stood up. I dashed to the kitchen, and without turning on the lights (she hadn't closed the blinds here!) I found the package in question and dashed back to the lounge.\n\nShe had turned off the TV, which had been playing to itself for the last hour or so, and was now knelt against the sofa, her top half resting on the cushions with another for us to kneel on, her lovely bottom on display.\n\nShe looked back over her shoulder.\n\n\"While we were in the hole, the night we escaped in fact, we made out that we were... that we were... going to try anal. Well,\" she took a breath, \"well, I've been thinking about it ever since. When I was at home I wanked to that thought, two or three times in fact.\" Even in the firelight I could see her delightful blushes. \n\n\"I told Ann that was how we'd got Sean to come down into the hole, and she asked if we really did do anal. I said we hadn't... and she said we definitely should because it was really nice!\" She grinned, \"So Harry... open the bag.\" \n\nI tore open the brown paper bag and there was a bottle of lube.\n\n\"Help yourself Harry,\" she grinned. She lay her shoulders flat on the sofa and closed her eyes.\n\n\"OK Baby,\" I said and poured some of the lube over my cock.\n\n\"Make sure you use plenty in me Darling,\" said Em with just the faintest wiggle, \"use a couple of fingers to stre... Ooooooooooh yeeeeeah!\" she gasped as I did just that, \"I think you have the general idea.\"\n\nI settled myself behind her and eased my fingers out and slowly pushed my erection in. She gasped and hissed and I slowed down, letting her get used to the intrusion.\n\n\"Oh fuck yeah Harry,\" she gasped, \"fuck me,\" I started to saw in and out of her, \"Oh yeah, fuck me Harry, fuck my arse!\"\n\nIt was so strange, this morning I'd watched my lovely Em dressed in her black clothes for the first time, with a white collar and surplus lead her entire community through a very emotional religious ceremony with much thanksgiving all round including hugs and kisses from the Archbishop and here almost seven hours later she had me screw her lovely arse in the front room of her vicarage and talking like she'd swallowed all three '50 Shades' books with a Karma Sutra just for luck.\n\n\"Come for me Harry,\" she said, \"it's your turn Darling, come for me Harry, come deep in me!\" I put one hand to her hip and another to her shoulder and proceeded to pull back and forth on her, shagging for all I was worth. \"Oh Harry!\" she gasped, \"I'm coming again, please!\" She gasped conscious that she'd just told me to come, \"Please I'm so close!\" I fucked harder, taking the hand from her hip to give her arse cheek a resounding slap, \"Oh Christ, NOW!\" She came with a cry, her head tipped back as her pleasure tore through her for the fourth or was it fifth time.\n\nAnd that was enough; I felt that orgasm start in my boots and what with the initial oral, her riding me and all this amazing intensity I came hard into her pulling her tight to me and falling across her as her spasming arse added more sensation to my already sensitised prick pushed so deep inside.\n\nWe lay there giggling for a few moments.\n\n\"Was that as good as you thought?\" I said.\n\n\"Waaaay better!\" she took a deep breath, \"I looked it up the marriage guidance section on my special library, but shit, that didn't go half the way there.\" She tilted her head to one side and kissed my cheek, \"and I'm so glad you were my first - again!\"\n\n\"Me too!\" I said slowly pulling out from her. \n\nShe crooned.\n\n\"Awwww I was still enjoying that?\"\n\n\"Sorry baby,\" I said, \"come on, let's take a bath and then bedtime.\"",
        "\"You've talked me into it.\" She said and I helped her up.\n\nTwenty minutes later we lay together in her large bathtub, sipping from one of the many bottles of wine we'd been given since our arrival. She lay back against me and we just lay there, cheek to cheek, comfortable and safe in the understanding arms of our chosen lover, now life partner.\n\nShe got out of the bath and cleaned her teeth, I of course took advantage of her situation and rubbed her naked bottom peeking out from under her towel.\n\n\"Oi!\" she said.\n\n\"Still my favourite view of you; pink and fresh from the water in a towel that isn't long enough.\"\n\n\"I did think that when you gave me your towel in the hole.\" She said after spitting and wiping her mouth, \"I guessed that was why you gave it to me in the first place.\"\n\n\"Yeah well, how could I resist, I mean look at you. You're fucking gorgeous.\"\n\n\"Thanks Harry!\" she giggled, still unused to compliments, \"I figured that any shyness and privacy would be the first thing that would have to go as soon as I had to share the Big Brother Hole.\" She turned her bright blue eyes on me. \"Did you have a peek while I was bathing that day?\"\n\n\"Of course I did,\" I said, \"like I said, you're fucking gorgeous; if it's any consolation I did feel terrible about it and tiptoed away.\"\n\n\"I actually hoped that you would.\"\n\n\"You did?\"\n\n\"Of course!\" she giggled moving to push against me but staring down, \"Harry, that first morning I woke up in your arms, from the moment you got close enough to my face that I could see you, I had just the hugest crush on you. You were so kind and so sweet, what chance did I have?\" I leaned in and kissed her. \"And you remember that first morning when I went to bathe naked in the pool and I masturbated so you could check for cameras?\"\n\n\"Yeah?\"\n\n\"When I closed my eyes it was you in my mind watching me, and I started to play with myself; well next thing I looked up and saw your face in all the camouflage - actually living out my fantasy. You made me come for the very first time.\"\n\nI pulled her into my arms and we kissed long, hard and passionately, and I pulled her towel off of her to feel her bare flesh pushing against mine.\n\n\"I love you Emma,\" I whispered.\n\n\"I love you Harry,\" she whispered back. I took her hand and we went to bed.\n\nLying there I thought about what the last woman I'd slept with had done, i.e. taking her daily birth control pill and mentioned to Emma if she felt that she was likely to come on again. \n\nAfter all, she was back on a healthy diet and had been for nearly three weeks now. She wanted to go back to GP and see what if any damage her three months without menstruation had done to her.\n\nShe made an appointment the next morning and went to her Doctor who was really pleased to see her. Em asked when she thought her menstrual cycle might start again. The doctor did various checks and she came out of the Doctors office almost forty five minutes later. It seemed she wouldn't come on for quite a few months yet, seven to be exact.\n\n\"Harry,\" she said looking slightly stunned, \"I'm pregnant...\"\n\nI don't know what she expected but my beaming smile must have given my feelings away as climbed out of her car and walked towards her.\n\n\"You're pregnant!?!\" I let out a roar of a laugh and picked her up and spun her around in my arms, laughing, with her joining in. \"Oh Em, Baby!\" I all but threw her in the air such was my joy. \n\nShe shrieked. I dropped her down to her feet again and we kissed passionately.\n\nWe went to the nearest Costa and had a coffee to recover. Bubbling with the excitement. We figured that it must have been during the Indian summer week we'd had and we'd been at our happiest - in the Big Brother Hole; I didn't think I could get any crazier about Emma but there and then I'd have walked across hell and back for her.\n\nThat was it. I never went back to London Ambulance Service other than to empty my locker and take some of my stuff back. I sold my flat and banked the money, and moved to the Dales not before buying her a couple of different vibrators and having them delivered to my place of course. \n\nShe didn't throw away her special electric toothbrush of course. But besides all of her electronics she still insists that the thing she loves best to stimulate her clitoris is me!\n\nI joined the Yorkshire Ambulance Service and we married two months later in her church in the Dales, her bump barely showing under a wonderful white lace gown that had been her Mum's and her sister Ann's. We had decided not to tell anyone about her pregnancy until after Christmas; her GP, who knew Ann and David of course, told us that it was best to wait until the second trimester before announcing things, so we did.\n\nAll the good that did us; Ann took one look at her during a wedding planning meeting and said,\n\n\"What is it Em?\" She tilted her head to one side and beamed a grin, \"YOU'RE BL...\" she lowered her voice conscious that Ray and some other people were in the house and Mum was on Skyping on the laptop. \"You're pregnant - aren't you!\" It was a statement not a question.\n\n\"Yes,\" said Em, \"only we want to get to three months before we tell anyone.\"\n\n\"Best of luck keeping it from Mum,\" said Ann with a smile. That was that, houseful of GP's, no problem. There was a Rogers Wedding to arrange first.\n\nI contacted Gramps and invited him and Nan to the wedding but he said that she'd taken a bit of a tumble and was in hospital having her hip replaced. He complained that 'Gerry' (my Mum) insisted that she wasn't available to help because she had to work and look after 'your idiot brother' who apparently hadn't stopped crying and bitching since that night nearly fifteen years ago when she sat on our doorstep with him.\n\nI told him that we'd have to come south in the new year for the Mad Professor's trial and I'd bring Emma with me and they could meet and I promised I'd send him pictures.\n\nA couple of nights before the big day her Dad asked me to come with him to walk their golden retriever dog. I figured it was going to be one of those father/son-in-law chats and that I should go. I slipped on my Wellies and Barbour and headed out of the back door and across the road to a large meadow white with frost that at this time of the year was free of the Friesian dairy cows that usually resided there (so Em told me).\n\nMick the dog waited patiently while his lead was unhooked and then proceeded to lose his mind temporarily and dashed around the field like a mad thing, returning to Tom's side once it had regained its sanity.\n\n\"Harry,\" said Tom after an uncomfortable few moments of silence, \"I owe you an apology... and an explanation.\"\n\nI will confess that Tom's appearance had made me just the tiniest bit uncomfortable and I still got the feeling that he wasn't totally happy with my place in Emma's life.\n\n\"You're Em's Dad,\" I said, \"you're going to want the absolute best for her.\"\n\n\"Yes,\" he took a deep breath.\n\nI had no idea what was coming next and didn't think it was going to end well for either of us.\n\n\"Spit it out Tom, after all what's the worst that can happen.\" I smiled to let him know that I had a sense of humour - after all in less than 48 hours I would be marrying his daughter in the church not a hundred yards from where we stood now.\n\nHe smiled.\n\n\"I'm sorry Harry,\" he held out his hand and I took it and we shook, \"I'm sorry I was such a pain in the arse to you, I'm sorry that I kept you and Emma apart for those weeks and I'm sorry if I've come across as the stern Father. It's just...\"\n\nI could in the fading daylight that he was fighting to stay on control of his emotions, so I put my other hand on his arm.\n\n\"Don't worry mate,\" I said, \"you've had a tough time of it and let's face it, I bet you're the only silly bastard that hasn't been offered any counselling to get you through all this.\"\n\nI put my arm around his shoulder and we continued to walk slowly. I could see the tears pouring down his face as he walked and I let him shed them. He was still smiling though.\n\nHe stopped and leant back against a five bar gate that led into the next frozen field and watched as Mick the dog tried in vain to smell every smell that the ten acre field had.\n\n\"I'd convinced myself that I'd never see her again,\" he said wiping a hand down his face, \"I read the papers Harry,\" he said, \"The police start off by telling you there's nothing to worry about and she's bound to turn up, and then before you know it you're recording a video at the press conference asking for anyone with information to come forward.\" He stood up straight, \"every time we hassled Yorkshire Police, the National Missing Persons Bureau, and The Home Office - there's always some hassled, over-worked, underpaid clerk,\" he spat the term 'clerk' giving it the same feeling he would have done to 'SS camp guard', \"that turns round and says 'have you considered she might not WANT to found?\" He snorted and turned around looking into the next field.\n\n\"It's when the press gets bored and 'the plucky family and friends of missing vicar demand action' gets to page seven after the celebrity bust ups and who the latest boy band member is sleeping with, and then finally you only get into the occasional editorial and it becomes 'hopes are fading for the family and friends of missing vicar' and they start to quote missing person statistics and with her disappearing from a service station on one of the longest North/South roads in the country they start to suggest that she could be anywhere - of course what they mean is her body could anywhere.\"\n\nHis voice broke and I stepped closer and put my arm back around him. \n\n\"Go on Tom,\" I said, \"Better out than in mate.\"\n\nHe chuckled at that and got control again.\n\n\"After three months I'd stopped praying for her safe return, and just prayed that whatever had happened to her had been quick and that she hadn't suffered. I knew Emma and that she'd never just drop off of the face of the earth. I'd lost my baby girl Harry, I gave up on her.\" His face creased in misery.\n\n\"Tom,\" I said, \"deep breath mate, she's just in there making coffee,\" I pointed to the illuminated kitchen window just visible through the hedges, \"give yourself a break.\"\n\nHe giggled again, \"I know, it's ridiculous!\" he said, \"I'm crying for the passing of a girl that is alive and well, deliriously happy and carrying my third grandchild not fifty yards that way.\" He wiped the tears from his face again, \n\n\"Everything reminded me of her Harry, every news report seemed to take me straight back to Emma; every car accident, every murderer, every rapist caught had my brain bashing itself to bits.\"\n\n\"You're human Tom,\" I said, \"and whatever you are feeling now, you're coming out the other side of this nightmare. The first person you have to forgive is you.\"\n\nHe looked at me and smiled,\n\n\"They teach therapy to paramedics these days?\"\n\n\"Nah,\" I said with a grin, \"we kind of pick it up as we go along!\"\n\n\"Well you're doing bloody well Harry, wherever you get it from.\" He pushed himself off of the gate and we continued walking. \"Charlotte took the call from the police to say she'd been found alive and reasonably well, and she came into my office beside herself and I didn't know if it was good news or bad. I calmed her down fearing the worse; in my mind I was thinking of identifying the body and finding out what had been done to her. If I hadn't been sat down, I'd have fallen down. \n\nThen she told me that she'd been held prisoner but had escaped with a young man that she was held with and was in Ipswich hospital being prepped for some minor surgery and was expected to make a full recovery. They told us not to come until the next day but I told Charlie to go pack a couple of bags and make some sandwiches as we'd leave as soon as the sun came up.\n\nWe hugged and laughed, and decided what we were going to do next. Charlie went into action of course and was her usual brilliant self. I went into the downstairs toilet and threw up. I haven't hugged a toilet bowl since I was a medical student Harry, but that night I laughed, cried, laughed again. I've never known such relief. Of course we rang Ann straight away and told her and she promised to come down as soon as her shift finished at six the next morning. \n\nCharlie and I waited for as long as we could but just gave up trying to sleep and jumped in the car.\n\nWhen we got to the hospital we met the detectives that had just finished with that bastard Professor and they told us how you'd escaped and that while you were both physically well, you had both had to... how did they put it... perform.\" \n\nHe put his arm around me again, \"I was torn Harry, I didn't know whether to fall at your feet for keeping my baby girl alive and bringing her back to me, or fall on you with a knife for... doing what you'd both obviously had to do. The Police were talking about dealing with any press interest, I knew you and my baby girl were going to be splashed across the paper. You being taken away by the police was the final straw.\"\n\n\"I get that Tom, and to be honest I got it from the start. I...\"\n\n\"I had no right Harry,\" he said not looking me in the face for the first time, \"I jumped to conclusions, completely the wrong ones that I had no right to do that. You'd been through the same as she had, and for what it's worth, I'm so sorry; Friends?\" he stopped walked and extended a hand. I took it and shook again.\n\n\"No worries Tom,\" I said.\n\n\"It's a parent thing Harry,\" he said, and we resumed our walk, \"whether you daughter is 13 or pushing 31, she's still your daughter; I'm not comfortable discussing sex with either of my girls or even having to consider that it happens at all. Now Ann has two kids and being a Doctor I know the stork didn't bring them but... you get my drift.\"\n\nI laughed. \n\n\"Tom, I fell in love with Emma from the moment she smiled at me; believe me, all the other stuff? That just kind of came along, as nature intended like and then we worked out that...\"\n\n\"I get the feeling that you're trying to tell me in the nicest possible way that love came first and the other stuff... well, you only did that when you realised you had to?\"\n\n\"Can't say it was all because we had to but that was pretty much the way it was Tom,\" I grinned.\n\n\"Nah,\" he laughed, \"still not a conversation I want to have with a son-in-law!\" We walked back towards the gate laughing, with me promising to never even suggest that his daughters had any kind of err... happenings, with Tom calling a slightly less energetic but much happier retriever back to him and clipping him back to his lead. \n\n\"Anyway,\" he stopped laughing and looked at me, \"you've made my Emma into a very happy woman, and I've never seen her like it before. It's not often a father in law gets to say this kind of thing, but you are one of the best things that ever happened to her; Ann said that weeks ago and I can only agree with her. Thanks Harry, I really mean that.\"\n\n\"You're welcome Tom, she's the best thing that's ever happened to me, and I promise you that nothing bad will ever happen to her ever again.\"\n\n\"I know you will Harry, I can see that in your face; saw it the first time we met and you spoke of her.\"\n\nWe headed back into the kitchen and removed our Wellingtons, while Mick headed for the front room and the fire. After supper and a glass of port (Emma had confessed herself a convert to the warming fortified wine) we all headed for our beds.\n\n\"What were you and Dad talking about?\" she said, \"he seemed... different somehow when you got back.\"\n\n\"Yeah, we had one of those father/son-in-law chats; he just got some stuff off of his chest that had been building up.\"\n\n\"Is he OK?\" she said sitting up in the bed.\n\n\"Yeah, I think he just needed to talk to someone about stuff, he was still a bit messed up about things but I reckon he's back on the right track now.\"\n\n\"Stuff! What stuff? Harry...\"\n\n\"Shhhh,\" I hissed, \"it was bloke-chat and I signed the Hippocratic Oath. Don't even think about asking him about it.\"\n\nShe hit me quite playfully,\n\n\"No you didn't!\" she said, \"but I'll let you off this time.\" She kissed me.\n\n\"He didn't want to have any kind of discussion about our sex lives,\" I said, \"he was quite happy to think that things like that happen but happier if he didn't have to think about it.\" She folded her arms and looked down at me, \"but he did say that I was the best thing to happen to you in a long time.\" She smiled, biting her bottom lip and took a sharp intake of breath. We kissed again, \"I was keen to point out that you were also the best thing to happen to me.\"\n\n\"And he doesn't even want to think about his daughters have sex?\" I shook my head, \"she pulled off her T-shirt nightie and knelt astride me, \"We'd better be quiet about this one then hadn't we...\"\n\nI pulled her down on to me, and rolled over her. I knew that I had an erection and that she would be ready for me. As we had so many times we came together and as she parted her thighs I slid between them and slid myself into her already wet and waiting pussy. It was a really tender meeting of body and soul and following my conversation with her Dad I made a mental note that I should be way more grateful for what I had. \n\nAs we writhed together I told her I loved her, and she told me she loved me back. We whispered sweet nothings to each other and her approach to her orgasm turned me on so much that I came as she did, another wonderful idiosyncrasy of our lovemaking. \n\nTwo days later I stood in the church waiting with baited breath for my gorgeous bride to appear. The sound of 'Here comes the bride' had us all turning, and there she was, a gorgeous vision in white lace on the arm of her father who looked really proud. Behind her was her two escorting pageboy nephews in and Ann as her Maid of Honour.\n\nThe Bishop took the service and we exchanged rings. I'd known mates that had gotten married who reckoned it to be just another formality, one even suggested he felt more emotional passing his driving test.\n\nFor me, my head was spinning and my gorgeous, breathless bride looked and felt the same way. Within seconds it seemed, we were married and into the vestry hugging everyone and signing Emma's very own register. She had tears in her eyes as Ray blotted the ink on it and the marriage certificate.\n\n\"Congratulation,\" said the Bishop, \"I'm so pleased for you both!\"\n\nThe reception was in the church hall, and all taken care of by the same team of ladies from the village with the bar laid on by the pub. A wonderful time was had by all and seconds before she had a dance with her father I whispered, \"You hug him long and hard, and you remind him how much you love him. You and Ann are his whole world, and he needs to be reminded that you know.\"\n\nShe did, and they danced for ages. \n\nThen it was Ray's turn, and finally mine. It was wonderful and at a little after seven she went back to the house with her sister and her Mum and she got changed out of the dress they'd all worn.\n\nIn the way of all the many romantic marriages we headed for Manchester Airport and flew to Naples to enjoy a week on the divine coast. We took in Naples, Capri, Pompeii and Herculaneum, even getting a day and a night in Rome. It was wonderful and romantic, and as we lay in bed looking out across the bay of Naples after a wonderful lovemaking session, Em felt our baby kick for the first time.\n\nBy the time we got back there was a sobering request that Emma could not turn down. It was from Tina's parents who asked that having given Tina her first funeral could Emma carry out the last one. \n\nSo Em and I found ourselves at Norwich Cathedral and the huge turnout for a poor single Mum who had found herself at the wrong place at the wrong time. Emma wrote some wonderful words and for the second time handed Tina's eternal soul into God's care and asked for all to bless and promise to help and support the heartbreakingly captivating 18 month old Daisy that might soon forget who Mum was;",
        "\"I charge each and every one of you that remember Tina with this one task; simply - you must tell Daisy often what a bright, vibrant, lively and loveable girl her mother was, the girl that loved to dance, that sang often, that always had a smile, the girl that loved her daughter to distraction. That way, while Tina is kept alive in our hearts and in our memories she can never truly die.\" There was a barely withheld sob from everyone in the church for that one.\n\nShe was taken off for a private interment and again Emma was there. Her Mum, still hugging granddaughter Daisy to her, asked if I could say my goodbyes again seeing as I'd pretty much buried her the last time. I agreed, and took a small handful of earth and, struggling for decent last words, settled on something from the bard,\n\n\"Goodnight Tina and God bless; and may flights of angels sing thee to thy rest.\"\n\nThe soil was light and dry and I blew it from my hand, and it seemed a fitting end to the girl I never knew but who, without knowing, told me so much and that all was not well in the Big Brother Hole. \n\nI was glad that we went; everything about the Big Brother Hole was evil and having that poor innocent girl removed from it and buried in the same plot as her grandmother gave us the first sense of closure from that damned place. \n\nWe were home in time for Christmas and it was tough even for a hard faced old agnostic like me not to be picked up and carried along with it all. I hadn't put up Christmas decorations with someone else in years, probably not since the last Christmas my Mum was at home. I didn't have anything other than a small tree with everything attached that I just put up and plugged in each December.\n\nEmma had everything and it was wonderful just being there and helping her hang the various garlands and streamers, and watching as she put up the tree and hung tinsel and lights from it. Then she took out any number of glass baubles and hung them with care, asking my opinion on some of them. Finally she took out a faded and slightly battered fairy and asked me to place her at the top.\n\n\"It's all your hard work Em,\" I said, \"you should.\"\n\n\"Yeah but it's your tree as well now Baby,\" she beamed that wonderful smile at me that I never grew tired of, \"don't forget, this time next year we'll be doing all this with a baby running the place. It's a man of the house thing Harry,\" she said, \"Trust me.\"\n\nI reached up and sat it right in the top most branch, and I did get a bit of a buzz from it.\n\nEmma's parents came to our house for Christmas along with Ann, David and their boys. Since our wedding and I was 'persona grata' with all the Rogers extended clan. \n\nAnn had the same sense of humour as her sister and we clicked straight away, she would shorten my name to just 'H' which made me refer to her as 'Annie'. Likewise with David - when bored we would start to talk in soldier language right up until our wives told us not to - and perhaps a little while afterwards if we wanted to live a little dangerously.\n\nI hadn't called anyone Mum in twenty two years; to my surprise I started to call Charlotte that, and it came really easily. 'Charlotte' was such a long name and Emma had already told me that 'Charlie' was Tom's pet name for her when they got frisky so I just went with Mum.\n\nOn the wonderful first Christmas I played host while my wife, mother-in-law and sister-in-law did all the real work. With two of the women in the kitchen being general practitioners that had both had two children, Emma received very little sympathy for her barely visible bump however much I suggested she play on it.\n\nWe had a huge lunch, and then chilled in front of the roaring fire. I played with my two nephews because we all shared a nerdish love of Lego and 'Uncle Harry' just had to be consulted on any tough construction decision - Em and I had bought them both 'Star Wars' models of course. \n\nHaving built them a swing in the tree in our large garden I became even more popular and we had a snowball fight. I was joined by David and the snowball fight became regimental. At the end of it we were called in for a tea of monumental proportions they'd prepared in our absence.\n\n\"You're going to be a great Dad,\" said Ann, patting me on the shoulder and kissing me on the cheek.\n\nRay arrived for tea, and he played the piano for a while and we sang some songs. It was absolutely the best Christmas I could ever remember. Having my gorgeous red head pregnant wife driving it all along only added to the magic.\n\nThe afternoon of Boxing Day, my phone rang and Em picked it up as I was walking Mick the mad retriever in the adjacent field. It was my Grandpa, and he asked for me by name, Em asked who was calling and he introduced himself. She explained who she was and they chatted on the phone for half an hour or so. I came back from walking the dog and just figured she was talking to one of her friends. \n\nTom and Charlotte were at the kitchen table with the crossword from that day's newspaper and I thought no more of it, and poured more tea. She laughed uproariously and handed the phone across,\n\n\"It's Gramps,\" she said simply and took my half full teacup. She's called him that ever since.\n\n\"Hey Gramps!\" I said down the phone.\n\n\"Just wanted to wish you a Merry Christmas mate,\" he said, \"your wife sounds like a lovely girl, you'll be pleased to know I told her what an obnoxious little shit you were when you were a young man.\"\n\n\"Thanks Gramps,\" I said with a grin and Emma looked across at me grinning behind my tea mug\n\n\"She must have seen some good in you I suppose; anyway give that gorgeous wife of yours a kiss on my behalf and I'll see you soon mate.\"\n\n\"Oh, sod you then,\" I said sounding hurt.\n\n\"No, I've learnt all I need to know from your wife and I've told her what she needs to know about you. Job done mate. You take care now, and take care of your wife and the baby you didn't tell me about. Love you mate.\"\n\n\"Love you Gramps, see you soon.\"\n\nEm came across and told me off for not introducing her to my wonderful Grandfather. She had two grandmothers, both of whom I'd met at the wedding, but my cheery cheeky Gramps was something new and like all women that met him, she was hooked.\n\nTwo months after that, I was called back to the Old Bailey and the Central Criminal Court number one for the trial of the Mad Professor and his various cronies.\n\nThe Mad Professor had decided he was going to defend himself even though he had no legal training. Even the QC said it was because the mad old bastard just wanted to hear the sound of his own voice and somehow justify his own insanity.\n\nIt was a farce; they were charged with two counts of manslaughter, one count of being an accessory to a murder and five counts of kidnapping, four of unlawful imprisonment, then possession of drugs, firearms offences for the Taser plus a small Chinese automatic pistol they found in with Sean's stuff that I was glad I didn't know about and various other shitty things.\n\nSean had pleaded guilty and gave evidence against his mad employer (stopping short of the Russian mafia of course) while the Professor, finally getting his day in court, wanted to drag things out for as long as he could. \n\nThe judge constantly stopped him from grandstanding and trying to propound his concepts of social science and the need for humans to learn more basic skills.\n\nI told the court my story. How we discovered we were being filmed, how we realised the only way to get fed was to 'perform' and how the amount and quality of food improved or reduced depending on what we did. I told them about my small oxygen tank in my medic bag and how I'd used it to find out what was going. \n\nI looked at the Mad Professor; now he had his explanation and mouthed something like 'bloody Sean again' and shook his head. After that he finally got his blow by blow account of how we escaped; I saw the bastard was making notes - he didn't seriously believe that he'd get another chance surely.\n\nFired with a new hatred for the man, I continued and the Professor sat in the dock, sighing and shaking his head whenever the QC made a particularly good point. Then it was my turn to be cross examined. \n\nStraight away he adopted the same superior condescending tone he'd used when we talked for the first time all those months ago.\n\n\"Harry,\" he drawled contemptuously as if I was the man on trial.\n\n\"My friends call me Harry, you can call me Mr Scholes.\" I quickly threw in.\n\n\"Mr Scholes then,\" sighed the Mad Professor, with an edge to his voice and holding the edges of his jacket like some batty version of Rumpole of the Bailey, \"I understand that you and Reverend Rogers are now married?\"\n\n\"What's that got to do with it?\" I said. The prosecution QC had warned me not to let the mad bastard get in my head.\n\n\"Just answer the question please Mr Scholes.\" sighed the Mad Professor as if the answer was keeping him from the gallows.\n\n\"I don't see what it has to do with anything, but I'll answer if the judge tells me to.\" I looked at the judge.\n\n\"I don't see that it's pertinent to the case, Mr Jones.\"\n\n\"Professor Jones...\"\n\n\"Your honour,\" said the QC, \"PROFESSOR Jones is wasting the court's time in his latest vain attempt to either upset the witnesses or stave off the verdict.\"\n\n\"Professor Jones, please keep your questions pertinent to the matter in hand.\" \n\nThe Professor held up his still battered hand with just a thumb and his two smallest fingers.\n\n\"That I will come on to your honour.\"\n\nThere had already been three weeks of fun and games as he argued the validity of all of the witnesses that had been called - from the estate agent that rented the place to him, to the builders, the suppliers of the gas, even the two IT specialists that had come in to work on the cameras and move them around. \n\nBoth had been arrested for being accessories to most of the other offences with an additional couple of 'attempting to pervert the course of justice' thrown in for good measure when it was shown the various defensive options they had built into the control room to hide the servers uploading the video and the electronic locations of the Big Brother Hole. \n\nThen it was the turn of the police officers; and he called every single one of them that had written a statement, in his wasted attempt to cast doubt on their take on the damning evidence he himself had written or recorded as part of his research.\n\nHe said and turned to me, \"Mr Scholes, you and your wife, you made love to each other in the laboratory?\" \n\n\"Yes,\" I said, \"while we kept imprisoned in that big hole we worked out very quickly that we were being filmed and that if we performed we got fed. I suppose it was like lab rats getting their food pellet for a job well done?\"\n\n\"Just answer the question Mr Scholes,\" he sighed. I looked at the QC who just smiled and waved his hand indicating I should do so.\n\n\"Yes,\" I said, \"We made love. And shortly after we first made love, you and Sean gassed us and left us with two dead rabbits. When we made love in the open you left us an entire deer. Thanks.\" I said.\n\nThere was a patter of light laughter across the court. Even the judge smiled at me and shook his head.\n\n\"Happily married Mr Scholes?\"\n\n\"Deliriously so,\" I said, \"except for when one of us has a nightmare and wakes up in a cold sweat thinking we're still down there.\" That was true, but it had only happened to us once or twice and immediately prior to the court hearing.\n\n\"So if I hadn't brought the two of you together, you would never have met, and you and Mrs Scholes would never met, married and have fallen pregnant?\"\n\n\"That's right, if you hadn't dug that big hole and drugged us and imprisoned us, we'd never have met; and three people would still be alive today, Tina would still be alive to raise her daughter and the others would be meeting their life partners and having their families, but they're all dead now.\" There was a snarl from the public gallery as members of the late Mary Connors family, all aggrieved Irish Travellers, let him know they were there.\n\nThe judge called the court back to order,\n\n\"Professor Jones, the court isn't interested in what has happened since the events of September last year and Mr Scholes isn't on trial here,\" Snarled the QC.\n\n\"Well perhaps he should be!\" shouted the Professor. He raised his stump of a hand, \"I have to have someone cut my food, I can no longer play the piano, I can no longer write!\" he screamed.\n\n\"Well perhaps you shouldn't have pointed a gun at me while I was holding one.\"\n\nHe leaned forward from his place in the dock,\n\n\"IT WAS A TASER!\" he grunted, \"and would have done you no more harm than a hospital anaesthetic.\" He held up a sheet of paper he'd already prepared, \"As used by law enforcement agencies the world over including the Home Office.\" He said being very business-like.\n\n\"Yeah but it would have seen us both back into the hole where you would have continued your sick experiments until we died of it.\" He went quiet as if that outcome hadn't even been an option, I stepped up, \"No sorry I forgot, you were going to let us go home at Christmas weren't you. Was that on the understanding we came straight back first week in January?\" He didn't rise to my bait, \"Answer the question Professor...\" \n\nMore laughter.\n\nHe flushed angrily knowing I had him on the ropes, \"I'll remind you that you are being cross-examined Harry.\"\n\nI let the 'Harry' reference go, but looked to the judge for support, \"Your honour?\" the judge grimaced and just shook his head. He took one of his hundreds of deep breaths during that trial,\n\n\"Get on with it Professor Jones, my patience is limited at the best of times and this isn't one of them.\"\n\nThe Mad Professor had one last try,\n\n\"Have you no regrets about that day Mr Scholes?\"\n\n\"Yes,\" I said thinking back to what the crown prosecutor had said all those months ago, \"I'm beginning to regret not aiming at your head.\"\n\nThe QC hid his smile extremely well, the light laughter happened again, and the Professor yelled, \"Objection!\"\n\n\"You aren't in a sixties crime drama Professor Jones!\" said the judge, \"And unless you have any pertinent questions I rather think we should stop wasting Mr Scholes valuable time.\" The Mad Professor made to open his mouth, \"Any more of this nonsense and I will hold you in contempt of this court!\"\n\n\"I certainly have no more questions your honour,\" said the QC.\n\n\"You may step down Mr Scholes,\" said the judge, I did.\n\n\"But...\" mumbled the Mad Professor; the judge stared him down in silence, visions of extra time on which ever sentence he was bound to get.\n\nSo damning was the evidence against him that the prosecuting QC said that he was happy not to call Emma, who was by this stage seven months pregnant and this 'farce' could have a detrimental effect on her mental state and her health and the health of our unborn baby.\n\nThe Mad Professor asked if this was fair,\n\n\"Is this justice your honour?\" he cried out, \"that I should be denied the full process of law just because two wanton people could not keep their hands off of each other and were no better than rutting anima...\"\n\n\"MR JONES\" shouted the judge over the outrage in court, \"I advise you to think extremely carefully about your next words!\"\n\n\"Professor... Jo...\" he mumbled weakly guessing he may have just pushed his luck rather too far this time.\n\nMy lovely Emma was staying with her Mum and Dad in Salisbury just in case she was called and picking up on my body language (I was forbidden to discuss the case with her after all) she wasn't looking forward to her time in witness box. We were both having nightmares.\n\nReading the feeling in the courtroom probably for the first time, he decided that he wasn't going to call her, and after another week of time wasting he got half way through his summing up what he considered to be the gaping holes in the prosecution's case and highlighting the value of his research, when he eventually changed his plea to guilty and was sentenced to life imprisonment with no parole until he had served at least 30 years. \n\nThe judge also castigated him for time wasting and trying to terrorise me during his cross examination.\n\nSean got twenty five years for his trouble, reduced because he pleaded guilty straight away, while Viktor received five for his part in the deal. He could not remember the name of his Russian boss who used to come along to the hole nor did he know anything about a young boy's body found under a pile of old deck chairs in Lowestoft.\n\nOnce the trial was over we met Tina's Mum again; she asked Em to christen young Daisy and again she agreed straight away and we became her God-parents. She occasionally comes and stays with us during summer.\n\nTwo short months later our daughter Grace was born in York Hospital and was a bit of a star once two of the midwives recognised who we were. \n\nFar from the prying and ogling I'd expected, they both just said how pleased they were that we'd escaped and 'those bastards' were getting what they deserved in prison.\n\nOnce home at the vicarage, Em just morphed into the perfect mother; with some support from Mum and Dad and Ann, she leapt out of bed on her second day and just got into the whole thing of being Mum. \n\nAdmittedly, she had been on hand when her second Nephew Nicko was born and the bathing, changing, feeding, burping was old hat. Add to that taking a nap, getting meals for us and getting three loads into the washing machine all just became second nature to her. I took my turn as well I must add here. \n\nGracie helped out by sleeping through the night from six weeks old, and generally being the cutest baby in the world ever. OK perhaps I'm a bit biased here.\n\nThat summer we took Gracie to visit family in the south, which included both of Em's Grandmothers and of course my Gramps. We went to his house and my Nan just about remembered me, while Emma went straight into parish priest mode and it was like my Nan had known her all her life. \n\nAfter a while Nan called her Evelyn and started to talk about a clothes shop but Em just carried on.\n\nGramps took hold of his Great-granddaughter and didn't put her down for the entire visit, and she was just as captivated by him as all the rest of the women that ever met him. My half-brother Paul arrived to babysit Nan so we could all go out for curry. He barely looked at me, and said nothing other than complain that there were no good football games on Gramps' Sky Sports.\n\nAt the end of splendid evening, Gramps congratulated us on our good fortune and he promised to come north for her christening later that year. I still see him two or three times a year - Nan is in full time care now, and he has been up North to visit us several times.\n\nWe received a letter and a parcel from Suffolk Police. The Detective Chief Inspector told us that the Big Brother Hole was in the process of being filled in, and they'd sent us back our two Coke tins with lids made from a third. They still have pride of place in our fire place, a tiny reminder that we should always be grateful for our comfortable life. \n\nThe two London Ambulance Service blankets that the tins were wrapped in now line the basket of our black flat coated retriever Paddy, and I'm now working very hard to train him as a gun dog (yes they also sent me back my shotgun and I got a new one to replace the one that Sean wrecked) while all my girls spoil the hell out of him.\n\nI still drive in a fast car yellow and try to save lives for a living and Emma is still the Vicar to her two parishes in the Dales and has no plans to move; Gracie now has a younger sister called Faith, and they both love their Nanny and Grandpa from Salisbury and Auntie Ann and Uncle Dave and their cousins. They almost worship Great-Gramps.\n\nEverything is perfect; but I regularly asked myself that question that the Mad Professor had thrown at me during the trial. Do I owe him?",
        "I tried to come to terms with my detesting the man with every bone and sinew and hoping that he'd get raped in prison and catch some strange disease that will have long, painful and embarrassing treatments before his eventual excruciating death, to recognising that If he and Sean had never kidnapped us and dropped us down that hole in the first place we'd never have met and wouldn't be the deliriously happy parents that we are today.\n\nI can't even begin to think back to that sad, single, London Paramedic and what his life was about.\n\nI asked my local priest for advice;\n\n\"Oh that old chestnut?\" she said as she reached under the duvet to take hold of my penis prior to our almost nightly loving making, \"Yeah he brought us together, but for all the worst reasons. Do we owe him anything?\" She threw the covers back and bent down and licked the end of my knob. \"Do we fuck,\" she slurped around my bell end and my toes curled as I hardened into her mouth. \"He stole us from our families and friends and imprisoned us against our will with no care for whether we lived or died.\" She held me in her mouth and stopped talking as she wanked me into it, \"We were the one blessing to come out of so much evil, the one light of hope in a dark and terrible hole in the ground. He owes us Harry,\" she said settling herself across me in her all-time favourite cow-girl position, \"He's lucky that you didn't shoot him, lucky that I never stabbed him, lucky that we didn't just drive back here and not report anything for a month by which time all three of those arseholes would have starved or frozen to death. You owe him nothing,\" she pushed down until I was balls deep in her; she looked down at me, rubbing her hands across her wonderful tits, \"you do however owe me everything,\" she started her own favourite pole dance and squeezed her breasts as she rode up and down on me.\n\n\"You got me Em.\"\n\n\"I know,\" she hissed possessively with closed eyes.\n\n\"You deserve the best...\" I said reaching for her breasts and the small nub of her clit.\n\n\"Of course I do...\" She came round from her pleasures and looked down at me. \"Why Harry Scholes I should...\" she attempted to fold her arms across her still pert breasts.\n\nI pulled her down over me laughing, flipped her onto her hands and knees and screwed her through two orgasms, battering into her pussy hard and fast, adding the occasional slap to each of her buttocks. I could feel her hand alternating from her pussy and clit to my testicles and I pushed hard into her for the last time, ejaculating hard.\n\nIt was the finest counselling session I'd ever had.\n\nLife is good.\n\n- : The End : -"
    ],
    "authorname": "Androgynousother",
    "tags": [
        "oral",
        "romance",
        "straight sex",
        "anal",
        "doggie",
        "cowgirl"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-big-brother-hole-ch-05"
}