{
    "title": "There and Back Again Ch. 029-030",
    "pages": [
        "Chapter Twenty-Nine: Love and War\n\nIn the morning I was, unsurprisingly, exhausted. Morrigan and I packed up, just in case, but stayed put. I ended up dozing by the fire, not sleeping deeply enough to repeat the dreams from the night before. I had just shut my eyes, it seemed, when Morrigan was shaking me, one hand clamped over my mouth. I opened my eyes and saw her face, pale with fear. She hissed quietly in my ear.\n\n\"Darkspawn. Scouting party, big one. Need to move.\" \n\nI nodded understanding, sitting up quickly but carefully, climbing to my feet, unsheathing my daggers as I followed the witch into the woods. I tried to step quietly, but it had never been my strong suit. I winced at every snap of branches underfoot. Morrigan led me away from the fire for a bit, then bade me climb a tree. She then changed into a bird and flew back towards our camp. I could hear vague sounds off in the distance, as I clung to the tree I was in. I assumed she must have changed into human form, made enough noise to draw the scouting party off, and then changed again to avoid capture. She flew back to me a few minutes later, landing in the tree nearby. \n\n\"Everything okay?\" I whispered nervously.\n\nBird-Morrigan hopped around a little and cheeped softly.\n\n\"Right. I'm an idiot. I'm going to assume it's a yes, and stop asking dumb questions. Hop around some more or something if I'm assuming incorrectly.\" I could have sworn that bird face was grinning. \n\nAfter a bit she took off and flew away again, I assumed to ensure that they hadn't come any closer. I waited, and waited, and waited. I wondered just how long I would stay stranded in the damn tree before climbing down and going to check on things myself. A long time, if I was honest with myself. I'm no hero.\n\nI was saved from having to contemplate it too much further by crashing noises down below. I peered down and saw, to my vast relief, Alistair hacking his way through some dense underbrush with his sword, the rest of the group following in the path he'd cleared. Morrigan landed in the tree again beside me. \n\n\"Thank you, Morrigan.\" I whispered so the rest of the group wouldn't hear. \n\nI climbed down the tree like it was on fire and threw myself at Aedan, clinging around his neck, voice tight as I tried not to cry. He caught me and hugged me, seeming to understand. \n\n\"Aedan, I swear to God if you ever scare me like that again...\"\n\n\"I know, I know. I knew when we camped last night you'd be beside yourself that we hadn't joined you. I'm sorry Sierra, but we were so tired...there just was no way for us to have come any faster. It's okay.\"\n\n\"Never again, okay? We stay together. Please?\" He hugged me tighter and I felt him nod.\n\nI finally let go, still slightly shaky. I turned and hugged Leliana, Zevran, and Wynne as well, smiling at Sten and earning myself a smirk, and then spotted Alistair. I was still awkward around him, still somewhat angry, but with Aedan's voice inside my head telling me that I avoided him, I couldn't not. I pulled Alistair into a hug, and enjoyed being held a little too much. I even gave Prince a little cuddle, and he licked my face. Shale I ignored, as usual.\n\n\"So?\"\n\n\"It's done.\" Ding, dong, the witch is dead. Sometimes you are so inappropriate, Sierra!\n\nEveryone felt able to travel a bit further, and we decided with a large scouting party around somewhere, moving was a smart plan. We decided to wait to repack our gear, so I walked easily with just my light pack. By the time we camped, Aedan figured we were probably another day from finding Bodahn on the road. We didn't spar, we didn't practice; we all sat, near each other, even Morrigan in our midst, and took solace from each other's company. Clinging to Aedan's hand, inside our little tent, I felt the best I had in ages.\n\n********\n\nI woke back in hospital again. My personal inventory was unchanged - no new tubes, no monitors. I was sharing a room with an elderly woman who was fast asleep in the dim light of early morning. I sat up, feeling only marginally sore and definitely not weak. It occurred to me that this had been my longest streak yet in Thedas, but I still experienced none of the atrophy the doctor had mentioned previously. I collected my clothes, personal supplies, and a towel and set off in search of a shower. I didn't run into anyone in the hallway, and just wandered about, feeling a bit like I'd been trapped inside 'The Twilight Zone' or something, but eventually found a room that appeared to be for patient use, that indeed sported a shower head. I locked myself in, showered, dressed, and as I leaned over to tie my boots, was just able to reach up and pull the help cord that was hanging from the wall as the dizziness hit and I pitched forward onto the wet tile floor.\n\n********\n\nI woke in the same place I must have disappeared from. My bedroll was uncomfortable \u2013 I was laying on my armour, which I'd gone to sleep in \u2013 but otherwise it would appear as though I hadn't moved. The bedroll next to mine was empty \u2013 Aedan was awake, somewhere. It was light out, and I wondered why everyone hadn't packed up to leave yet. I could hear faint murmuring in the distance, and I sat up, changed into my armour, and headed out to find the source of the sound.\n\nI found Leliana, Wynne, Morrigan, Sten, Prince, Zevran, and Shale all relaxing in a clearing enjoying the sun. They chatted amongst themselves, and that had been the source of the noise I'd heard. They all stopped when they saw me, and then Leliana cracked up into a laugh. Zevran smirked and Wynne chuckled; even Morrigan and Sten looked amused. Prince came bounding over to lick my hand and promptly sat on my boot, as usual. I was bewildered.\n\n\"What? And where are the Grey Wardens?\"\n\nLeliana tried to stop laughing, succeeding only for a few words at a time, until Zevran finally took over.\n\n\"Aedan is over there, by the stream.\" He pointed to the south. \"Alistair is over there, last I checked trying to chop down a tree with his bare hands. We thought it best to separate them before someone got hurt.\"\n\n\"Huh?\" I'm always so articulate.\n\nZevran actually giggled. \"They had a, shall we say, difference of opinion about what to do when they woke to find you gone. Then each talked the other into changing their opinions. Much shouting ensued before we sent them off to have a chance to cool down.\"\n\nOh God. \"Tell me.\"\n\n\"Initially Aedan was planning for us to all pack up and keep moving. Alistair refused, saying we could wait a day or two until you returned. They argued for a while, and suddenly they were each arguing the opposite side. Alistair admitted we should go and Aedan refused. That's when the shouting really started.\"\n\nI rolled my eyes, cheeks flushing slightly. Alistair wanted to stay? For me? \"Alright, give me a minute to get them sorted. Would you guys pack up for me?\" \n\nThey nodded, and I headed in the direction Aedan had gone, following the sound of running water. I found him sitting on the bed of a small stream, eyes closed, boots off and feet in the water. He jumped as I sank down beside him.\n\n\"You're an idiot, you know that, right?\"\n\nHe nodded, opening his eyes. His expression was that of someone who'd been through hell. I twisted, putting my arms around his shoulders, and pulled him into an awkward embrace. He rested his head on my shoulder and I felt him shudder.\n\n\"I'm fine, Aedan. Nothing is going to happen to me. If anything, I'm probably safer there than here!\"\n\nI could feel him nod but he didn't pull away.\n\n\"I don't want to be left here alone. I don't think I could do this if you disappeared and didn't come back.\"\n\n\"You could, and you would. You're stronger than that! And you're not alone. You have Alistair, Leli, Wynne... Zevran. They wouldn't let you be alone. We are all a family now, okay?\"\n\nHe moved to grab me in his arms. \"I love you, dear sister.\"\n\n\"And I you, brother. Now put your boots on. I've got to go get Alistair, and we've got some walking to do. The werewolves aren't going to cure themselves.\"\n\nI found Alistair slumped on the ground near a large tree whose trunk had been badly abused, as Zevran had warned me. From the shattered branches scattered around, he had tried to use deadfall as an axe.\n\n\"If you really needed wood so badly, there's a hatchet in my pack, Alistair. This isn't the most efficient way to chop down a tree.\"\n\nHe jumped up when he heard my voice, spinning towards me and crossing the clearing in a couple of huge leaps. He grabbed me and spun me once, dragging an indignant, startled shriek from my lips before he put me down and backed away hastily, cheeks flaming red.\n\n\"I'm, uh, glad you're back, Sierra. I really hate it when you disappear like that.\"\n\n\"You're not the only one!\" I grinned. \"Now will you pull yourself together and come back to camp? We should get going.\"\n\nBack at camp, Aedan and Alistair avoided eye contact with each other awkwardly. Everyone was standing, staring back and forth, no one knowing what to say. I finally sighed.\n\n\"Alright. So. In front of everyone, so there's no confusion next time. If and when I disappear again, you are all to keep going, okay?\" I waved my hand impatiently when both Aedan and Alistair tried to object. \"Both of you shut it. I will find you when I get back. The important thing is that you two end this Blight. Standing around a campsite arguing about it isn't going to help.\"\n\nThey both flushed, looking sheepish. I pinned them both with stares until they relented and agreed, one after the other.\n\n\"Now shake hands and make up.\"\n\nAedan shot me a dirty look. Alistair's face got even redder. Neither man made a move.\n\n\"I mean it! Shake hands and make up, or I swear to God I will smite both of you into oblivion. We don't have all day!\"\n\nThis triggered a laugh from the peanut gallery watching, and finally I saw cracks form in both Wardens' demeanours. Aedan finally chuckled and held out his hand, and Alistair surged forward to shake it. They grinned at each other, and Alistair clapped Aedan on the back as they headed towards where everyone else was packed and ready to go.\n\n\"She's scary. I think we should do as she says.\"\n\nAedan agreed, a little too quickly. \"Too right. I'll watch your back if you watch mine.\"\n\nI stuck my tongue out at both of them in my usual mature fashion.\n\nAfter another two days of walking, we met up with Bodahn, all of us happy to be able to tuck our possessions into his cart. Except me, since I hadn't carried mine the entire time. It was sweet of Alistair, but I was starting to feel really self-conscious about the whole thing. How will I ever get better stamina and strength if no one lets me try? I lightened my pack, but continued carrying it just to make a point. Alistair gave me a look, but I ignored it and kept walking.\n\nWe were a full two weeks of walking from where we expected to pick up traces of the Dalish. We ran into a few ambushes \u2013 bandits once, darkspawn a couple of times \u2013 as well as a group of Loghain's men fighting with some of the local Bann's men. We sided with the Bann's men, and Loghain's were driven off. Everyone seemed relieved we didn't have to kill them all. We took the opportunity to spread the truth of Loghain abandoning the King and Grey Wardens at Ostagar a little further. We even ran into a group of Qunari mercenaries \u2013 Tal Vashoth, I remembered, and Sten seemed impressed that I knew the word. They seemed shocked when they saw we had a Qunari with us, and barely even tried to defend themselves. Qunari are weird, Tal Vashoth or not.\n\nAedan started acting oddly part way through the journey. At first only I noticed it, but he was becoming somewhat distractible and jumpy. And then there were the times I woke in the night to find myself in an empty tent, and he wasn't out by the fire, either. It didn't take much for me to figure what he was doing. I bet my boots Zevran's tent is empty too! No one else noticed initially, but then I started seeing Wynne and Leliana giving Aedan strange looks. I finally pulled him aside one evening.\n\n\"Hey, Aedan....\"\n\n\"Yes?\"\n\n\"I...look. You've been acting kind of odd lately. I know why. And don't get me wrong, I'm not upset by it or anything. But I think you need to decide if you're going to be honest about it in public. If not, you need to learn to hide it better.\"\n\n\"What are you talking about?\"\n\n\"Aedan. Really?\"\n\n\"But...how did you...\"\n\n\"Because you're not very good at sneaking around? Sometimes I wake in the night and you're not in our tent. You didn't think I'd notice?\"\n\n\"Does everyone know?\"\n\n\"Don't think so. But they're going to figure it out. You've been distracted lately. You stare at Zev \u2013 a lot. Someone is going to put two and two together. My advice? Either just tell everyone, or learn to be a better actor. Otherwise you're going to get caught with your pants down and it'll be awkward for everyone.\"\n\n\"It doesn't bother you?\"\n\n\"Why would it? You know I like him. And you're a big boy now, you can choose who to be with.\"\n\n\"But...I thought you said that back home, some people frown on two men....\"\n\n\"Yep. I also said I thought it was stupid. What difference does it make to me whether my brother has a wife or a husband? If you're happy, I am.\"\n\n\"I love you, Sierra.\" He hugged me. \"I'm not...quite ready to admit to it yet, not to everyone. Will you help me hide it better?\"\n\n\"Of course, brother dearest.\"\n\nAfter that, Aedan got better at paying attention again. I covered for his absence from our tent the once or twice anyone noticed. \n\nOne day Zevran approached me after dinner when I was sitting off a little ways, just quietly watching everyone in camp.\n\n\"So, cara mia, it has been more than a month, yes? Since our deal?\"\n\n\"Oh, Zev. Really? Are you that keen to be self-destructive? I thought you decided you liked your life.\"\n\n\"Oh, but I do, bella donna. What has that to do with anything?\"\n\n\"Well, I told you that if you asked me to have sex with you, I'd tell you why I wouldn't. I know you're not so foolish as to misunderstand how Aedan will react if you do such a thing.\" He jumped slightly and I grinned. \"I'm not completely oblivious, Zev.\"\n\n\"Ah, yes. Although...the conversation we had when I first met you implied that you did not know who would end up in a tent with whom, yes?\"\n\n\"True. The performance couldn't account for free will, I guess.\"\n\n\"So you couldn't have known how things would be, with Aedan, when we discussed this.\"\n\n\"Nope.\"\n\n\"Which means there are other reasons for you to want to decline all...\" he gave an arrogant hip thrust and gestured in his own general direction, \"this. Yes?\" I couldn't help but giggle, half-breathless with amusement. \"I was just wondering...if you would tell me why. Even if I don't ask you to share a tent.\"\n\n\"Oh, dear, the Great Zevran is feeling a little bit self-conscious? His ego cannot take an unexplained refusal to give in to temptation?\"\n\n\"Aha, so you do admit to feeling the temptation, then.\" He covered it well, but I could see the self-doubt behind his eyes.\n\n\"Oh, Zev. Listen. You're a nice man, though you try not to show it sometimes. You're kind, and generally well-meaning when given any sort of choice. You're good looking, and I have no doubt are very talented in bed. Of course that's tempting!\" He grinned, arrogance restored, and I laughed, but then my smile faltered a bit.\n\n\"Let's do a little mental exercise, together, shall we? A game, if you will. I like to call this game 'what if'. It's fun to play in many situations. 'What if the sky were green, not blue? What if Maric hadn't died? What if Cailan survived the battle at Ostagar?'\" He looked up, and I grinned. \"I play this game a lot, as you can see. So let's play one together.\n\n\"What if Sierra fell in love with Zevran? Because that is what it would be for me - I wouldn't be with someone I didn't love. And if you didn't love me, it wouldn't work either, so I'd have to assume you loved me too.\"\n\n\"Well, there's our first problem. I don't fall in love.\"\n\n\"Did you forget who you're talking to? I know about Rinna, Zev. You're as capable of love as the next person, and if you weren't such a coward about it, you'd realise you're already in love.\" I stuck my tongue out for good measure, and Zev laughed, though his smile did not reach his eyes, I noted.\n\n\n\"Anyways. As I see it, at first, all is well. We travel with Aedan, we fight darkspawn. We kill Taliesen when he comes for you. We end the Blight. But then what, Zev? What happens after?\"\n\nHe looked at me speculatively. \"We live happily ever after?\"\n\n\"Ri-ight. So...you're going to settle down with me, and what. Become a farmer?\"\n\n\"Well, no...\"\n\n\"What then. A merchant? A baker? No? So then, what? You become a self-employed assassin instead of a Crow? You know I'm not okay with that idea. You don't have to be an assassin anymore, and even if it doesn't bother you, you know how I would feel about it. Killing in self-defense makes me physically ill. Killing for money? Couldn't live with it.\"\n\n\"And the other thing. We will face Taliesen, at some point. We will kill him. What do you think the Crows will do when he doesn't return? Do you think they'll just give up? I think they'll keep issuing contracts, keep trying to kill you for leaving them. And I doubt they'd have any qualms about using someone you love as a pawn, either as bait or to force your hand. I may be learning, but do you think I can defeat a Crow? Even the rawest apprentice could kill me. So you'd have to watch me, all day, every day, forever, and we'd either have to go on the run, which isn't a life I'd choose, or go to war with the Crows. And I'd be a liability in that sort of war. You would get killed trying to protect me, or I'd get killed by the Crows and you'd have to live with feeling like you failed me. And if, by some miracle, we won, Antiva would be destroyed by a power vacuum. So either something worse would step in, or you'd have to run the Crows, and we're back to me not being okay with that.\n\n\"There's no happy ending for you and me, Zev.\"\n\nHe was silent for a few minutes, and I watched his mask hide the thoughts that must have been going through his head.\n\n\"I can't fault your logic.\" I nodded, relieved. \"I'm impressed that you've thought that much about it, actually. You must have spent a lot of time finding reasons you cannot be with me. One might even think you had to work at it. I am flattered that you spent so much time trying to justify to yourself why it could not work. I hope it does not break your heart when I tell you that you and I were not meant to be, cara mia. I am sorry.\"\n\nI giggled, and his eyes flashed amusement.\n\n\"As it turns out, I think I'll live. Besides, it would seem you have other...matters to occupy your mind. And your, um, hands. And things.\" \n\nHe grinned. \"And those other matters...might not be happy if I was to seduce their sister? More justifications. Please, bella donna, do not take it so hard.\"\n\n\"I'll try. I'm sure with years of counselling, I'll get over it.\" We sat companionably for a few minutes, watching the rest of our group at camp talk and sit and eat. Alistair was cleaning his sword and shield, and I surreptitiously stared for a few moments before my gaze snapped back to Zevran. I watched his eyes follow Aedan, and saw Aedan stiffen as he felt Zevran's gaze on him. I smiled at the hungry look even his Crow mask couldn't hide. Zevran noticed and grinned back at me.\n\n\"And who are your hands, and 'things', occupied with then, bella donna?\"\n\n\"Me? No one. You expect me to believe that you don't know every intimate secret about this group? If I was 'occupied', you'd be the first to know.\"\n\n\"Ah, true. But I think your mind has not been as circumspect as the rest of you has.\" He shuffled over to sit beside me, looking where I was. \"He is a wonderful specimen, I must admit. So na\u00efve and awkwardly charming! And those shoulders, no?\" I blushed and stammered, and he continued on, smirking. \"Surely a future with him would not be so problematic for you, yes? You cannot still be holding a grudge. And he has not failed to notice you either, cara mia.\"",
        "\"Zev! I'm not...He...no! We can't. Ask Aedan sometime, but I'm not having this discussion.\"\n\n\"Tsk. So inhibited. It's not good for you, you know.\"\n\nI ignored him, and we sat quietly again; I closed my eyes, willing the flush in my cheeks to die down.\n\n\"So I have to ask...if you see my future like this, why have you not tried to keep Aedan and me apart?\"\n\nI looked at Zevran and smiled. \"First of all, do you think that even if I tried, it would make the slightest bit of difference? I'm his sister, not his keeper.\" His grin widened. \"Besides. The biggest objection I have to a future between me and you is that I think relationships require that the people involved be equals. And I don't mean in the 'I cook better than you' sort of things, I mean overall. You and I wouldn't be equals - I'd be a liability in your life that you would constantly have to protect. It would breed resentment for both of us. Aedan...is your equal. You could watch each other's backs. I think you could be good for each other, as long as you both commit to it. So the real question you need to ask is of yourself: are you committed to Aedan? Because if you aren't and you get him killed, I'll tell the Crows where you are myself.\"\n\n\"Ah, cara mia, you may claim not to be a fighter, but I am much more worried about what you would do to me than the Crows.\" \n\nI laughed. \"Good. But you didn't answer the question, amico mio.\"\n\n\"Your Antivan is better than I would have expected, cara mia. Let's see if you can catch this one: io sono solo per lui.\"\n\n\"Solo per lui?\" Only for him? I met his gaze directly, demanding. His face softened, and I saw the real Zevran peeking out under the mask, insecurities and all. He nodded, serious and scared. \"How do I say brother in Antivan?\"\n\n\"Mio fratello.\"\n\n\"Right. Well, mio fratello, when were you going to get around to telling him?\" Zev's face cleared in relief and he laughed. \n\n\"Well, with a sister's blessing, how could I wait?\"\n\n\"Hang on. I'm going to need to find somewhere to sleep tonight, aren't I?\"\n\n\"Only if I'm lucky, cara mia. Only if I'm very, very lucky.\"\n\n\"Hey, if you call me cara mia, what do you call Aedan?\"\n\n\"Amore mio.\" His grin was sly.\n\n\"He has no idea what that means, does he.\"\n\n\"Not so much, no.\" \n\nI laughed and hugged him gently. \"Go tell him.\"\n\nChapter Thirty: Were? Where?\n\nI took over organising the tents when we camped after that, making sure that the one I shared with Aedan was near Zev's, and both bordered the woods so they could sneak out together. It was cute. I contemplated trying to change tents again \u2013 Bodahn had found more canvas, we could do it \u2013 but I couldn't think of a way to do it without arousing suspicion in everyone else. Both Aedan and Zevran were suddenly much more cheerful. I wasn't sure whether it was knowing that I didn't disapprove, or just that they were having more sex.\n\nThe woods changed as we left the Korcari Wilds and headed into the Brecilian Forest. It was less swampy, greener, less foreboding. We had already discussed our strategy in dealing with the Dalish, and knew that their scouts could find us at any point, so we avoided talking about anything important. It was kind of fun, wandering through the woods. We chased off a few bears, but otherwise had nothing to worry about. We kept Zevran somewhere prominent, hoping they'd be less likely to shoot us if they saw him first. Aedan and Alistair huddled protectively around me, despite my insistence that they didn't need to.\n\nA voice called out from the woods somewhere.\n\n\"Turn back now, Shemlen, or face the consequences!\" Startled, we all stopped walking, and were suddenly surrounded by two dozen angry-looking elves with bows drawn and pointed at us. They were all shorter and slighter than even Zevran, wearing armour in greens and browns that would blend into their surroundings. \n\nAedan answered. \"Hold, friend. We are Grey Wardens, and we need to speak with your Keeper Zathrian. We have information on the...sickness, currently afflicting several of your clan.\"\n\nThere was a whole bunch of chatter in Elven, which resolved into two voices, clearly arguing. Aedan glanced at me and I shook my head. No, I don't know Elven. How could I possibly? Finally one of them turned to face us and spoke in the common tongue.\n\n\"We do not tolerate outsiders, Shem. Either leave peacefully, or we will be forced to remove you. It's up to you.\"\n\n\"As much as I hate to say it, friend, you need us right now. And you may have us outnumbered, but I have two mages, two Grey Wardens, an Antivan Crow, a Qunari warrior, the best archer in Ferelden, a mabari war dog, and a sodding golem. If we're going to do this by force, we win. Now take me to Zathrian before the golem gets cranky.\"\n\nI had to give Shale credit for looking cranky very, very well. Or very poorly, depending on which side you were on, I supposed. She stomped forward, the ground trembling beneath her feet, right up to the one who'd spoken. She turned to look at Aedan.\n\n\"Is it certain it doesn't want me to squish this soft creature? It would make such a refreshing crunching sound when it pops.\"\n\nSeveral of the elves backed away, leaving their leader pale-faced and shaking.\n\n\"We will take you to Zathrian.\"\n\n\"Good choice.\"\n\nWe followed the leader, but couldn't fail to notice that his comrades didn't lower their weapons, keeping them trained on us until Zathrian dismissed them. The Keeper was polite, on the surface, but clearly deeply suspicious of us. He seemed very, very tired, and I almost felt sorry for him. Until I remembered the werewolves.\n\nWe had discussed our options, and no one was okay with us allowing the werewolves to slaughter the elves, but we were equally uncomfortable slaughtering the werewolves. Wrong had been done on both sides, but it began with Zathrian and his need for vengeance, and we had agreed that one way or the other, he needed to end it. Aedan planned to try to talk to him alone, and then call on me to back him up as a 'seer' if he couldn't convince him to voluntarily end the curse. If we were lucky, we might not even have to go into the forest.\n\nOnce Zathrian agreed to speak with Aedan, we were given leave to explore their camp. I decided to aid in my 'seer' reputation by going to visit the halla caretaker, looking into the eyes of the unhappy animal and then 'mysteriously' coming up with the solution \u2013 to check her mate for injuries. The elf was embarrassingly grateful and I hurried to decline any reward. Wynne offered to aid the Keeper's First, Lanaya, in trying to heal their wounded men. Otherwise we gathered in a small group near the large campfire and tried to look non-threatening. I asked around about Aneirin, and was able to confirm for Wynne that he was alive and well.\n\nAfter probably two hours of talking inside the Keeper's Aravel, Aedan finally emerged. One look at his face and I knew he hadn't been successful. He gestured to me, and we stepped into the trees, whispering to avoid being overheard.\n\n\"He's too angry. I'm not getting anywhere. He's raving about wanting them all dead. Think you can do anything?\"\n\n\"I'll try. Listen, I've got an idea, but it's going to suck for you. I want to get him talking about his children, about wanting revenge. The most expedient way I can think of to do that is to tell him the story of your family and Arl Howe. Perhaps he can see that there is life after something terrible like that. But...it means dragging you through it, making you talk about it. If I can't get to him any other way...do you want me to try?\"\n\nHis expression was pained, and I wished I hadn't asked, but he slowly nodded. \"If that's what it takes to avoid slaughtering those creatures, then yes. Try it.\"\n\nI hugged him and kissed his cheek softly, and then we went back to the Keeper's Aravel. Aedan introduced me and I nodded my head respectfully.\n\n\"This Grey Warden expects me to believe you are some sort of seer.\"\n\n\"Yes, Keeper.\" I was going for humble. Apparently I failed.\n\n\"Don't you 'yes Keeper' me. You want me to believe, you're going to have to work harder than that, girl.\"\n\n\"Very well. Allow me to be brutally honest. You are a several-centuries-old blood mage. When you were a young man, your son was killed, and your daughter raped and left for dead by bandits. You were so enraged when she killed herself rather than give birth to the child of rape that you cast a spell using your own blood. You summoned a spirit and bound it to the body of a wolf, basically inventing lycanthropy. And as long as the curse survives, so do you. Conversely, as long as you survive, so does the curse. The initial wolf you created, who went by the name Witherfang, is now the Lady of the Forest. She, and many of the werewolves, have become sentient again. They are aware of their curse and it causes them agony to remain so, but they refuse to return to their beast-like state. \n\n\"They ambushed you looking for revenge for causing their curse. They thought it would force you to talk to them. The Lady wishes only for death, and the only way for that to happen is for you to decide to release her \u2013 and the rest of the wolves \u2013 from the curse. Doing that will kill you and her, but the alternative is several of your clan will become werewolves, just like Danyla already has. And shame on you for lying to Athras, by the way. He deserves the truth.\n\n\"Your anger, your need for vengeance, is what is responsible for all of this tragedy. Do you really think your daughter would want all of those people to remain cursed? Would she wish those of your own clan to become so? The men who violated her, who killed your son, have been dead for centuries. Most of the werewolves in this forest were innocents who got caught, and have done nothing to wrong you or to deserve this fate. Unless you release them, more will perish. And all for what? To preserve your own life? To exact vengeance on the world at large for how miserable you are?\n\n\"You would have us kill Witherfang to try to fashion some sort of potion for your own clan members to prevent them from changing. Which may or may not work, let's be honest. The Lady would see everyone released from this curse, including all of your friends. Which of you is seeing things more clearly? It is not you, Zathrian. \n\n\"If you released the curse, you could join your family with the Creators. Feel at peace again. Wouldn't that be worth it on its own? Vengeance is a hollow thing to live for. In all these centuries you've never found a way to move on. Don't you think it's time?\"\n\nI didn't stop, even when his angry veneer cracked and he was left sobbing, broken. He had caused centuries of tragedy. He needed to hear it. And if I was lucky, breaking through meant I wouldn't have to drag Aedan through hell. \n\nHe begged to be left alone, and we complied. I stopped, just outside, shuddering. For all that I despised what he'd become, I also understood it. And no matter how necessary, watching someone break isn't much more pleasant than watching them die. Aedan put his arm around my shoulder and we headed over to join the rest of the group. They looked at me speculatively, and all I could do was shrug. \n\nWe set up our tents out of the way but within the Dalish camp, where Lanaya indicated. Aedan and Bodahn went to chat with the craftsman, and I sat by the fire, trying to let the normal chatter and companionship of camping together soothe me. The Dalish offered for us to join them in their meal, and I managed to convince everyone to just not tell me what the meat in the stew was. It was delicious. Once we had been accepted, everyone in the Dalish camp was at least polite. They seemed a little freaked out about Zevran, but given that he probably offered to have sex with half of them, it was an appropriate response.\n\nWe slept the night in our little area, apart from but within the Dalish camp. In the morning, Zathrian summoned Aedan and me. He had collected himself, and was back to the arrogant attitude that I disliked from the game, but at least he'd apparently thought a bit about things. He agreed to go into the ruins with us and talk to the Lady of the Forest, and if everything was as we said, he would agree to end the curse. My biggest concern was how we were going to avoid slaughtering our way through the werewolves' ranks. I doubted they'd respect a white flag or similar gesture, but hoped that perhaps if they saw Zathrian with us, we could convince them to talk. We agreed to wait one more day while he made arrangements with Lanaya and the rest of his clan, and set out in the morning.\n\nA celebration of sorts was held that night, a goodbye party. It was the closest they could come to the descriptions of ancient elven ceremonies used prior to an elder going into prolonged hibernation. I vaguely recalled from a codex entry that in ancient Arlathan, elves were immortal and so after centuries they would go to sleep for a long time. I wasn't clear on the concept, really, but didn't want to risk causing offense by pressing for details. Zathrian admitted to the clan what he had done, creating the curse that had led to the werewolf problem they currently faced. He received much more sympathy and understanding than I expected. We tried to stay out of their way, huddling together in our little area, but couldn't help but hear the singing. I couldn't understand the words, but it was haunting and beautiful. I could see Leliana trying to memorise what she was hearing.\n\nWe left early, hiking into the woods. I was impressed that we didn't really have to slow our usual pace so Zathrian could keep up. We were ambushed by a couple of small groups of darkspawn, and my job was to stand back and keep Zathrian out of the fight. He mostly looked nauseous every time we encountered them, so keeping him away wasn't tough. We ran into Danyla almost immediately after leaving camp. She begged us to kill her, but Zathrian managed to convince her to hold on a little longer. I was happy; it bothered me, in the game, killing her when I knew we would end the curse.\n\nZathrian knew how to magically lower the barrier to the inner forest, and was able to pacify most of the sylvans we came across, which meant no messing around stealing acorns from mad hermits or killing tree spirits. We came across a couple of groups of non-sentient werewolves, which we were forced to fight, before we finally ran into Swiftrunner. \n\nNone of us were quite prepared for the level of animosity the enormous creature showed towards Zathrian, and by extension, us. It took all of Aedan's, Zathrian's, and my persuasive abilities to even make him contemplate having a discussion. I think the only thing that might have worked in our favour was that I knew enough details about the Lady, and the ruins the werewolves had claimed, to convince him the Lady might want to talk to us. He agreed that if we all stayed put, under the watch of some of the other werewolves, he would go ask the Lady what she wanted him to do. I thought it was quite reasonable, though I knew the others were grumbling about one more delay. If it meant the difference between killing dozens of unlucky cursed souls, I was willing to wait.\n\nSwiftrunner warned us it would take a day or so for him to return to us, so we settled in and made camp. Zathrian was enraged at the interruption, but between Aedan and I, we managed to keep him calm. We built a fire, and invited the werewolves to join us for our meals, to Zathrian's horror. He retired to his tent early, and we all breathed a slight sigh of relief. I wandered a little ways away and sat near a tiny creek, picking long grasses from the bank and working to soften them up.\n\n\"So I've never really apologised for...what I said. Before.\" Alistair sat beside me, and I smiled at him before returning to working on the belt I was braiding.\n\n\"I noticed that, actually.\"\n\n\"I'm sorry, Sierra. I didn't mean to imply...that is, I just...I know it's not even any of my business anyway, but I...\"\n\n\"...have no idea how to get your foot back out of your mouth?\"\n\n\"Yes. That's it, exactly.\"\n\n\"I know. And it's okay. I over-reacted, and it wasn't really even because of you - it's because of something your brother said back before we left Redcliffe on the way to Haven. I'm not angry with you, Alistair.\"\n\n\"That's a huge relief. Thanks. And I am sorry.\" I smiled in forgiveness, and his eyes lit up a little. \"Hey wait. My brother? What did he do?\"\n\n\"It doesn't matter now.\"\n\n\"Is this what Aedan was asking you about that day?\"\n\n\"I'd rather just drop it, really.\"\n\n\"No way. I want to know. Please?\"\n\n\"What's the point? You'd just be mad, it'd make things awkward, because frankly you're a terrible actor, and I'd really rather you didn't try to kill the King, so...\" \n\nAlistair gave me puppy dog eyes, and I sighed. \"...suffice it to say he suggested I become his mistress, and I declined. He didn't take it well, and accused me...of exactly the same things you did. I informed him of the error of his ways, and now it's behind us.\"\n\n\"You're right, I will kill him. Or perhaps just maim him, and leave him for everyone to laugh at.\"\n\n\"Hypocrisy much?\" He grimaced, but I grinned to soften the blow. \"Go ahead, at your own peril - you're the heir to the throne, you know. You kill him, and you'll have to become the King.\"\n\n\"That's...I...Argh! Let him have it then. He just better stay away from you...\"\n\n\"Down boy. Take a breath.\" I grinned, and he gave me a sheepish smile in return. \"I'm just the first woman to say no to him, I think. He didn't know how to deal with it. I don't even think he ever even wanted me, it was...the principle of the thing. He gets it now. \n\n\"Duncan...is like a father to me. I never had a father, and he's a little like the ones from my childhood fantasies. The whole 'relationship' was cooked up to keep Cailan away.\"\n\n\"Sierra, you-\"\n\n\"You know about Cailan. Teagan - well, he's sweet but he's not my type. The closest I ever came to him was dancing that one night. And even if I were inclined, that nightmare sister-in-law of his would make me change my mind.\" He chuckled. \"Plus he's too old for me.\"\n\n\"You don't have to-\"\n\n\"Aedan is my brother. And I don't mean he's 'like a brother'. He actually is mine. Did you know we are exactly the same age? To the day. Bryce Cousland called me 'daughter', back in the temple. We think we were supposed to be twins, which is maybe why I'm here? I was accidentally born in the wrong place. I don't know. It would explain a lot, for sure.\"\n\n\"So you're a Cousland, then?\"\n\n\"Sort of, I suppose. But no one is going to believe that. Aedan's parents die, and suddenly some crazy chick emerges from the woodwork trying to claim kinship? I'll be seen as an opportunist trying to cash in on Aedan's grief. And I may act like a noblewoman, but my lack of knowledge of protocol and things is sure to be a giveaway.\"\n\nHe thought about it, and shrugged. \"You're Aedan's twin? Ha, I'm older than you.\"\n\n\"How old are you?\"\n\n\"Not telling!\" \n\nI smacked his arm and carried on. \"Aedan asked me to share his tent to protect me from Zevran. A brother protecting his sister's virtue. Though, to be honest, I'm not sure if he was more scared of Zev trying to worm his way into my bedroll, or his.\" \n\nAlistair laughed. \"Stop, Sierra. You don't have to tell me. It's none of my business. I know that.\"\n\n\"But I want to tell you, Alistair. I wanted to back then, even, I just...well, you didn't ask quite the way I'd hoped and I lost my temper. But I want you to know.\"\n\n\"Why?\" \n\nOh boy.\n\n\"It matters to me what you think of me. I don't want you to have doubts about me.\" He studied my face, and I looked down, letting my hair hang to hide the blush. \"As for the others, well...I prefer men, so Leli and Morrigan and Wynne are out. Shale, most days I wish we could de-activate again. Sten is...Sten. Enough said. And as for Zevran...\" I smiled fondly.",
        "\"Zevran is a nice guy. He's funny, and attractive, and he is actually loyal once he decides to be. But he's also mercenary, doesn't see what's wrong with assassination as a career, and only cares about the big picture as it relates to him. He's committed to ending the Blight, but only because Aedan is. And being near him is eventually going to get dangerous. The Crows won't ever stop hunting him, and I am not willing to live my life like that - either on the run or at war. I wouldn't be with him even if I did see him that way. He is my friend, I hope, but nothing more.\n\n\"Besides, he's also rather...taken.\"\n\n\"Taken with what?\"\n\n\"Not with, by. And not what, whom. And if you haven't noticed by now, I'm not ruining it for you.\"\n\n\"Huh?\" \n\nI giggled. \"Nevermind.\"\n\nHis smile didn't quite reach his eyes. \"And me?\" \n\nI looked up, startled, and quickly looked away again, hiding behind my hair. \"Alistair...\"\n\n\"I've heard you say that you'll never be with anyone from Thedas. You've given your reasons for the others; I'm curious what your reasons are with me. I'm neither your brother nor father, I'm not an assassin, and while I may be in danger, anyone with me wouldn't be. I'm not a woman, a golem, or a Qunari. So...why not me?\"\n\n\"I can't-\"\n\n\"Please? I really need to know. Please tell me?\"\n\n\"I'm trying, but you keep interrupting me!\" \n\nHe looked sheepish again.\n\n\"It's not about you, Alistair. Between us...it's about me. I can't...\" I struggled with the words. \"I can't do that to you. Look. I'm not so arrogant to assume that you would even want to be with me. But even if I knew, absolutely, that you did...I don't know how long I have here. Maybe I can stay, but I could be yanked back any time, never to be seen again. I don't know who I am, where I belong. I'm still half convinced I'm just crazy and you don't really exist. If you fall-\" I swallowed thickly. \"If you fall in love with me, what will it do to you if I disappear and never return? What would that do to me?\" I didn't add the concern about what would happen to me after his Calling came. It hurt too much to even think about it.\n\n\"And besides. You may not want to be, but you're the heir to the throne. Anything happens to Cailan, and it's all you. You need to marry someone who can provide noble heirs to the Theirin line. Legitimate ones, with noble mothers everyone recognises. And even if somehow you weren't, it hardly works out well for you politically if I disappear in the middle of a dinner party. And I don't think you having a relationship with some unstable, universe-hopping pseudo-templar will go over well in Weisshaupt, do you?\"\n\n\"So the answer is, I can't. Even assuming you had the slightest desire to be with me, I can't.\" I reached up and touched his face, my finger over his lips, preventing him from saying anything. I smiled sadly, stood up carefully, and walked away, leaving the finished belt behind.\n\nI carefully avoided being alone for the rest of the evening, denying any chance at getting drawn into the same conversation with Alistair again. I felt his eyes on me from across the campfire and tried not to return his stare. I crawled into bed without a word, letting a couple of silent tears trickle down my cheek. When Aedan came to bed, he had no idea what had happened, but seemed to know something had; he held my hand, and didn't sneak out to be with Zevran. Or maybe he just thought the werewolves would try to eat him if they caught him sneaking..."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-29-30"
}