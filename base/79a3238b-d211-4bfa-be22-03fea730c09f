{
    "title": "Bifrost Ch. 03",
    "pages": [
        "All rights reserved. No portion of this book may be reproduced in any form without permission from the publisher, except as permitted by U.S. copyright law. For permissions contact author through profile. \n\nI originally submitted this story in interracial love, but as it's progressing, it's becoming much more fantasy based. I highly recommend reading the previous installations before this one. I apologize for the switch, and as always thank you for your support. Your continued feedback is appreciated. \n\n***\n\nThe pearlescent gates of Vertan shone brightly in the daylight at the base of the mountains. The ancient structure stood at half the altitude of the rock it clung to, stating very clearly how impenetrable it could be against enemies. The hillsides outside of the gates were coated in multicolored flower fields. The air smelled permanently of spring and gentle rain. \n\nAztrit rode at the front of the caravan in between Kirk and Eric. Vertan was much more beautiful than she had pictured. She had only been once, centuries ago when the kingdom was destroyed from the war, and production on the gates had just begun. Vertan was wealthy from the mineral and gem deposits seated deeply in the mountains. Many came from afar to discover riches for themselves, but the deposits were only accessible with specialized tools created by the elves that resided here. Never did the sitting kings give their technology to travelers. \n\nAs they neared, a smaller portion of the bars at the bottom opened inward, seemingly by themselves. Aztrit slowed Fora as Kirk called for a halt. She looked over to him on his horse, his eyes were focused on the gates. After their time together at the pond, they had both struggled to pull away. She had helped him dress, covering his body with the formed black tunic he was currently wearing, while he kept undressing her. She had chosen to dress more conservatively, as was customary in Vertan. This time she donned a black silk dress that covered her neck line and flowed gently at her feet, still her leg was open, and it paired with heeled riding boots that came up to her mid thigh. She had pulled her hair out of her face, but Kirk had repeatedly released it from its binds. Now, in its straight form, it flowed down her back and around her shoulders. \n\nShe knew that Kirk was unworried because King Derkot had already given his approval, but something felt amiss. She had tried to shake the feeling on their ride over, but even through casual conversation with Eric, she was unsettled. \n\nKirk returned her gaze, and gave her a light smile. It had proven difficult to tear himself from her after they joined in the pond. Seeing her pull those dark suede boots over her brown thighs had made his efforts futile. He had wanted to press her up against the rough bark of the nearest tree, split her thighs, and hear her cry for him again. He searched her for her thoughts, finding that she wasn't mirroring the passion he was trying to communicate to her. \n\nBefore he got a chance to ask her why, three elves in full ruby adorned chest plates, braces, and greaves, passed under the towering pearl gates. He turned his attention to the tallest of the giants in the middle. His raven hair laid long about his slender shoulders. His face was narrow and features were delicate, but his sapphire eyes were unsettling, and they rested not on Kirk, but on Aztrit, who scowled back at the elf. \n\nKirk dismounted and came forward, standing in between her and the elf, noting how close he had gotten. Fora bucked and neighed behind him, as if trying to put distance between her rider and the onlooker. Kirk tried to pull his attention as he spoke, but the connection he seemed to share with Aztrit was powerful enough to make him feel as if he was interrupting. \"Lord Verdulke of Karth for King Derkot.\" But the elf with the blue eyes, continued to keep his gaze on Aztrit, and now a smile plastered his cheekbones. \n\nAztrit looked at the elf with fury in her eyes. She knew him, and well. He could never keep himself from being deceitful. The smile he had displayed when Kirk introduced himself was almost enough for her to ruin his ruse. 'I smell you on him sister.' She heard him say in her mind. She narrowed her eyes and dismounted Fora. She too, had known who he was. She came to stand next to Kirk and was joined by Eric. She locked eyes with Kirk, who looked to her in confusion. She could feel anger rising from his body. \n\nAfter Kirk introduced her as his healer and Eric as his second, the elf's smile fell quickly. He looked to the Lord who stood at the same height as he did, and tilted his head slightly to left. For awhile, he stayed just like that, trying to place what he was finding odd about the human in front of him. \"King Derkot has been waiting, Lord Verdulke. However, today he finds himself, preoccupied. So tonight shall be a night of feasting to welcome you,\" The elf impishly bowed for emphasis. \"And tomorrow, shall be one of planning and alliances. Thoroux and Gliker will show your second and your men to their... resting places. I, will give you a glance at Vertan as I show you to yours.\" The two blonde elves who stood at the leaders shoulders broke off and sheathed their weapons. Pulling Eric and the horses into the gates. \"My name is Frovik, General of king Derkot's army. Follow me.\" Frovik flashed a smile to a disapproving Aztrit, enjoying how upset she was. \n\nAs they followed Frovik into the gates and along the path of laid pearl, they took in the high rise buildings weaving themselves into the mountain sides connected by bridges encrusted in jewels. She noticed they planned their city defensively, topping the buildings with thick spikes of silver ore. The marbled buildings ranged from the deepest noir to the most reflective eggshell. The elves lined the streets, watching as the foreigners went by. Each one was tall and graceful looking. The women adorned high collared dresses and full sleeves entwined with assorted jewels. Even the men wore flashy jewelry as they covered up. It wasn't hard to decipher that after they rebuilt, they focused on the wealthy nature of their origin to embolden the culture they had almost lost. There were no open air markets, just gossiping on lookers and jewels. \n\nThe buildings seemed to go on for miles, going deeper into the valley in between the mountains. Except for their colours, they were all identical. The people of Vertan favoured order and uniformity, but there was a hidden layer of creativity in each architectural anomaly. Frovik's humoured voice cut through her thoughts, \"Have you ever seen anything like it, healer?\" He didn't turn to look at her when he asked this. She sucked her teeth to force herself to stay quiet. He knew she had. She carried on observing, ignoring his attempt to rile her.\n\nKirk looked between the two. Frovik laughed at her silence, while Aztrit became angrier at every attempt he made to speak to her. Did they know each other? He knew she had been intimate with other beings in Midgard, was Frovik one of them? As Frovik spoke to a lesser elf to his side, Kirk leaned over and spoke to her, \"Do you know him? He seems quiet interested in you.\" \n\nShe bit her lip and looked away from him. What was she supposed to say? She didn't want to cause more trouble than Frovik had already started. \"No?\" she formed it into a question, trying to find the right way to explain how she knew him.\n\n\"No? You sound unsure.\" He stood straight and eyed her as she fiddled with her hands. A lie in its darkest form. He didn't understand why she wouldn't just tell him if she had been with him previously. He knew she wasn't a virgin when he took her, so what was the point in lying? He looked back to Frovik and felt a new feeling in the back of his throat. Jealousy. Was it more than sex with him? \n\nShe felt twinges of pain that she was positive was coming from Kirk. She didn't want to lie. But she felt that if she had told him the truth right then, he would do something rash. She chose to stay quiet. She knew she would pay for it, but now wasn't the time.\n\nThey continued the path as it began to round through the center of the city. On either side, were long silver halls with observatories atop them, spinning slowly. The silver casted deep shadows on the mountains, making the city seem encapsulated in luxury. The hall to the right ended with a circular building topped with a statue of the Goddess Idunn, keeper of apples and youth. Frovik stopped in front of the hall to the left, it stopped when it met the mountain perpendicular to itself. This hall will be where you'll stay as honoured guests of King Derkot. Will you be staying separately, or together?\" Frovik's eyes switched in between the two, seemingly excited for an answer. \n\n\"Separately.\" Kirk said first, not looking at her. \n\nFrovik grinned wider, \"Of course, Lord Verdulke. This way.\" He led them into the cool building, their steps echoing off of the heavy slabs underneath them. He led Kirk to the first door past a trickling fountain. As he opened the door for the Lord, he fixed his lips to speak again. \"If you wish, I can arrange for you to have company to warm your bed tonight My Lord.\" \n\nAztrit balled her fists as she looked in between them. She could strangle Frovik. Kirk closed the door behind him without looking at the rage on her face. She looked to Frovik as he laughed and wiped tears from his eyes. She grabbed him by his slender throat, not being able to help her transformation. Her wings spread drastically behind her while her armour materialized on her body. He didn't stop his laughter. She pressed harder into his neck as his facial features dissolved. She threw him down the hallway, his back hitting the mountain wall at the end. She advanced with her wings as her brother came to life in front of her. \n\nHe stood taller than her in his true from. His lengthy black hair stayed the same as his sapphire eyes faded to his mischievous green. His armour radiated on his body, a twisted bronze engulfing his slender pale form. His face was rounder than the elf's he had stolen the likeness of, with a scar gracing his neck horizontally. \"Aztrit, don't be so mad dearest sister. Although I have to say, fucking the man you're supposed to kill is a little messy for Odin's favourite.\" His face lost his humour and he began to summon his staff. \n\nShe set her feet on the ground and summoned Hurink. \"Don't do this here Loki. You've had enough fun for today. Return the general and be on your way.\" \n\n\"Always the respectable Valkyrie. I just wonder, if anyone else knows about your...indiscretions. You're usually so strict. Surely you didn't think we would check up on you and find your scents intertwined. Too half-breeds make a very intriguing fragrance.\" He put his weapon away and eyed the hallway around him. This would undoubtedly give him power over her. But he would have to bicker with himself whether or not to use it. They might not be siblings by birth, but he did have an odd love for his sister. \"Think about this before it gets out any further Aztrit. Surely this is enough for father to consider it treasonous.\" \n\n\"After everything you've done Loki, I'm finding it hard to believe that I'll be the first to be cast out.\" She put her weapons away and changed back to her human form. She knew his words were true. It was different for Loki, he couldn't help his urge to be abrasive, but for her to shun her father with her actions, would be enough for him to retaliate fiercely against her. \"Put everything back the way you found it brother, and leave.\" \n\n\"Don't you want to know why he sent me?\" \n\nShe looked him up and down, \"I doubt he would send you if it was so important? Why not Thor?\" \n\nLoki came closer and drew his voice to a whisper, \"It's by my own doing that I'm here. So I've been sent down here to try to atone for my mistake.\" He sighed as she looked at him with suspicion, \"It's Fenrir.\" \n\nShe shook the doubts she was holding. Fenrir was the prophesied end of a better portion of the nine worlds, and Odin himself. A great wolf with unbound power and size who was supposed to be chained in Helheim with Hel herself. Most importantly, Fenrir was Loki's son. \"You better not say to me what I'm thinking you will Loki. I told you to check on him. Didn't I say that to you? When was the last time you sedated him? Have you been to see Hel recently? You're so fucking careless.\" She shouted at him not giving him a chance to make her angrier. \n\n\"I didn't get to tell you what happened.\" \n\nShe rolled her eyes. \"Okay, go ahead. Tell me it's something else.\" She sat there watching his expressions change as he debated lying. \"I knew it. You know he's a Harbinger, but you still only cared about yourself. Why am I not surprised?\" She loved her brother, but Fenrir escaping was heavy progression in their timeline before Ragnarok. \n\nHe took her shoulders in his hands and shifted back to Frovik. \"I'm going to find him sister. Don't worry. But be careful on your travels, he was the one causing damage to Valhalla, but he's not there anymore. He could be here on Midgard. 'Frovik's' eyes traveled above her. She turned around to see what had captured his attention, only to see Kirk glaring at the two of them. \n\nFrovik removed his hands and set his eyes on her again. \"Do as I say, Healer.'' He called her with a smile and walked past Kirk, back into the city. \n\nShe closed her eyes tightly, praying Kirk wasn't as mad as she felt he was. \"Kir-\"\n\n\"So you don't know him? You looked pretty comfortable for strangers.\" His words came from his lips before he could calm himself.\n\n\"It wasn't like that Kirk, and you know it. I do know him, but he's not who you think he is. He's-\" she turned to face him, only to find herself cut off again. \n\n\"What would I know about him? You lied to me. I asked you if you knew him. Why couldn't you just tell me you had fucked him? But he is a General, warriors are just your type, aren't they, Valkyrie?\" \n\nHe thought Frovik was her lover? She knew he was angry, but she couldn't help the smile and the laughter that racked through her body. This made him worse. She knew Kirk was just saying things out of jealousy, which made it funnier to her. \"Kirk.\" She approached him, ignoring anger causing lines in his face, and hugged his waist. She needed the laugh he gave her. \"He's my brother.\" \n\nKirk unballed his fists and looked at her with confusion. \"General Frovik is your brother?\" Why was she lying to cover it up?\n\n\"Yes and no. My brother was borrowing Frovik's image. It was Loki, my brother.\" She felt the anger in his body release with a wave of relief. She hadn't told him while her brother was here because she didn't want Kirk to alert anyone that the elf in front of them was an imposter. \n\n\"Loki?\" He asked in shock. \"Not your lover?'' he held her as she hugged the frustration from her body. \n\n\"No.\" She lifted her head to meet his understanding steele eyes with her amber. \n\nShe touched his stiff chest and ran her fingers across the ridges his muscles made. \"I wouldn't let anyone else have me.\" \n\nHe rested his hand on the intake of her waist. \"I apologize for assuming something unsavoury. It was wrong of me to not wait for your explanation.\" \n\nShe smiled at the progress they had made. They were talking about what had happened instead of letting it get the better of them. It wasn't much, but she appreciated the success all the same. She placed her hands on his face and brought his lips down to hers. She wasted no time opening for him. He enjoyed roving her mouth as he touched her body, and she would never deny him the pleasure he got from her. He grasped her waist and pushed her back towards his room. He needed her now, to confirm her words. She pulled away. \"Let me have you before dinner.\" His words were not a request. He was demanding she join him and let him partake in the sweetness between her legs. \n\n\"I'm sorry. But there's somewhere I really have to be. But I'll be here in a couple hours to join you for dinner. I promise.\" He held her tighter, hoping to keep her against her will. He trusted her, but what if this separation lasted as long as she had left before? He connected their lips again, holding her tight to his body as he took his time enjoying her lips. She let her weight go in his arms. He was kissing her so softly, she felt she would cry. She could feel the pain they had inflicted on each other when they were apart. She could feel the love building between them. She knew suddenly, he was afraid to let her leave, not knowing when he would really see her again. \n\nHe caressed her waist and looked into her face as he pulled back to look at her. She knew he was begging her not to leave. But she had too. \"I promise you, I'll be back. A couple of hours at the most. She touched his hair and held his head. \"You can always call for me, and I'll come. She kissed him again, and let the wind take her. Leaving his arms emptier than his heart felt. \n\n*** \n\nAztrit ported to the doors of Valhalla. The marks damaging the walls were unmistakable pawprints and claw marks. The damage had grown significantly worse, deteriorating the heavy stone of the wall. The skies were distorted with long grey clouds and the wind whipped with ferocity across the plains. The unrest of the Gods sat heavy in the air. The clear waters of Valhalla were now a concerning black, and the gentle water falls now roared with effort off of the land. \n\nTwo of her Valkyrie appeared on the sides of the doors, and kneeled in front of her. \"How long ago did this happen Craitol?\" She spoke to the Valkyrie to her right as she passed them both and pushed open the doors. \n\nCraitol rose, her short black hair wildly converging with the wind. She followed her leader into the long pillar filled hallway, trying desperately to keep up with her pace. \"Fenrir was here last night My Lady. Dahlia was going to come find you, but Odin himself had warned against pulling you from your task. He had asked for you to come see him as soon as you arrived on your own whim. My Lady, I should tell you-\" \n\nAztrit shook her head fiercely as her feet clicked against the linoleum leading to the Champion's Hall. If something was happening in Valhalla, it was her duty to be front and center. She knew she might not be able to fight of the Harbinger herself, but that was for her to discover and not anyone underneath her. She had left them unprotected. Before Craitol could finish her sentence, Aztrit pushed open the doors to the hall and stood still in the frame. Because of the attack, there were no heroes gathered, instead they would all be underneath the hall in the core of the building. All of her Valkyrie not on patrol were gathered around tables looking over the injured. Her sisters turned to look at her as she entered, kneeling as she walked by. She searched through the tables, not seeing Dahlia. She spun quickly around to face a distraught Craitol. \"Where's Dahlia?\" Her words came out more distressed then she had meant. \n\nNo one in the hall answered her. Instead they looked to the last table, surrounded by candles floating gently in the air around her resting body, was Dahlia. Aztrit hurried to the table side, growing angrier by the second. Dahlia laid bloody and half alive, with only her left side distinguishable. The right was ridden with giant holes curved into a 'u' shape. The bitemark of a giant. Her hair was matted with her own blood, and her right arm was gone. Aztrit placed a hand over her, sensing that her sister was still alive. She removed her cape, helmet and breastplate. She would have to be as comfortable as possible to work on her. Because of her condition she would have to focus on only her. \"Is anyone else in like this?\" \n\nCraitol sounded off behind her, never had she seen the healing powers Aztrit was rumoured to have. Most of the sisters hadn't, she was intrigued, but saddedned that they needed to be used for such a distressing matter. \"No My Lady. Everyone else is responding well to the tree mead.\" The mead they made from the Golden tree parched above their hall, was only reserved for healing purposes. ",
        "Aztrit sighed with relief as she finished preparing. She wouldn't be able to heal for quite some time after this. She placed her hands on Dahlia's forehead and chest. \"I'm so sorry Dahl.\" She felt heavily responsible for not being there to protect her sisters. No one was more capable to defend them than she was, and what had she been doing instead? She took a long intake of breath as the hall quieted to silence. She closed her fists above her and released slowly, letting the tension she had built wind down her fingers and into Dahlia's body. She tried to center her body as the force from her power winded her quickly. But she would not relent. \n\nWhite light covered Dahlia as the table shook violently underneath them. Aztrit watched as the holes in her body crackled and meddled back together. The dried blood on her body liquified and slowly drifted back into the wounds it had come from. The bone in Dahlia's shoulder began extending and lifting out of the tattered flesh that was left of the missing limb. As each bone redeveloped, muscle wrapped itself around the calcium rebuilding, and Aztrit felt her body burning. It had started as gentle prickling, but she was out of breath, and her skin felt like it was being licked harshly by powerful flames. \n\nShe placed both hands on Dahlia's chest as she screamed in pain. She thought about the support her sister had tried to give her, and he smile Dahlia always wore when they saw each other. She was the only other supernatural being that had valued her for what she was. Not what she looked like, or she could do for them. Like her father valued her. Aztrit was nothing more than a machine of war to him, a contract killer that procured every warrior he decided he needed to protect himself from the reckoning he was due. But Dahlia knew who she was outside of her duties, like no one else did. She would continue until her sisters body was restored better than it was before, even if it killed her.\n\nLoud claps of thunder surrounded the hall, as Odin appeared. He passed the frightened Valkyries that kneeled quickly as he passed. He headed straight to table to the end, noting how intently his daughter was focused on the injured Valkyrie she was rebuilding in front of her. Aztrit was covered with the eternal flame. It covered every limb, even her wings that forcefully extended from the pain she was enduring had flames coating each pitch black feather. But the flames left the wearer unscathed. She looked much more powerful then he had imagined she would. He stopped a table away and looked on, he wouldn't disturb her in her concentration. However he was unhappy she hadn't taken his requests seriously. He had asked her to not use her powers on her sisters, it would only prolong the deaths they were supposed to meet. There was always more Valkyrie to come, and none of them deserved to experience even a portion of his daughters power. If only she had been given a gift more suitable for her skills. Healing would be wasted on her. But he was glad she was exercising her manipulation of fire to build her technique, that was power he could value. \n\nThe light grew brighter around Dahlia, the flesh on her arm was beginning to slow its regeneration, and the holes in her body had long since filled. Aztrit could feel her father behind her, but nothing could take her from what she needed to do for her sister. She knew her father would tell her his disapproval as he had done so many times before when she healed those closest to her. She balled her hands again and retracted the tension in them as the force seeped back into her chest. She feel to her knees and coughed horrifically as blood seeped from the corners of her mouth. She bent over on the stone and gasped for breath. Craitol fell to her knees by her side as Aztit folded her wings back into her body. \n\nShe quieted her body as Craitol soothed her, the intense burning of the flames dripping around her faded, leaving Aztrit to gather her breaths. She looked up at Dahlia on the table as she began to wake. Aztrit stood and placed her palms on the wooden table allowing Dahlia to look up at her. \n\nAs Dahlia woke, she could feel Aztrit's energy burning inside her. She felt the arm that had one been ripped from her body and touched the torso that had once been riddled with cavities. Even the gentle scarring from past battles had disappeared. She sat up slowly and looked into her sister face, the blood at the corners of her mouth indicating that she had given everything she had to heal her. She took her pale hands and wiped her mouth, \"Craitol, bring the tree mead.\" She said as Aztrit tried to replace the breath in her body. She smoothed her sisters hair out of her exasperated face, lifting the cup Craitol brought to her brown lips. \n\nAztrit let heavy tears fall as she gulped the smooth liquid. She felt the healing take place right away, knowing that her insides had begun to deteriorate from the power she was trying to grow accustomed to. She finished the drink and threw her arms around her sister. \"I'm so sorry Dahlia. I should've been here. Nothing should have kept me away.\" Her sister rubbed her back as she cried. Not caring that her father might have been insulted with her words.\n\nOdin was not offended by her words, but they did make him think. His daughter seemed different. More emotionally ridden, and she stunk of a smell he couldn't place. But it was frustratingly familiar to him. He continued to observe as the Valkyrie pulled away, only then did Aztrit start giving her orders. She was a natural leader, and unrelenting in the face of adversity. He was sure she was his daughter. \n\nAztrit felt more powerful than she ever had as the effects of the mead wore off. Her veins felt like fire filled them. Instead of the sting it had left against her skin. The feeling traveled from her heart and worked its way out to her head and toes. She stood firm as it racked through her, lighting her insides intensely. She looked down at her armour as she felt it burning off of her body, only for the green cloth underneath the gold plates to be replaced with black. The gold material of her cape shifted to a deep onyx. She felt anew. Like a deep part of her was seeing the world in front of her for the very first time. She hadn't only changed the colour of her cloth, something inside her made her feel she was worthy of the shift in her soul. \n\nShe turned to her father, seeing the look of astonishment on his face as she transformed. She addressed her Valkyrie as they stared on in surprise, \"Keep your legions tight until we've found Fenrir sisters. If Ragnarok is on our horizon, nothing will be more important than defending our home. Craitol, take Dahlia back to her rooms. I want constant patrols on all of the nine worlds on the great tree Yggdrasil. If you find Fenrir, report back. Do not engage.\" \n\nOdin approached her and spoke before she could. \"Times are changing quickly daughter. It seems you've found your stride. It could come at no better time.\" \n\nShe listened to her father carefully, his words didn't match the emotion in his eyes. He seemed to be reevaluating how he saw her. She knew there was a change inside her that she couldn't place. A change that was undoubtedly going to leave a mark on the outcome of Ragnarok. \"So they are. Loki came to see me. I would assume that someone is trying to contact Hel, if she turns all of this will be for naught. With Fenrir loose, Surtr will surely catch wind on Muspelheim.\" \n\n\"I agree. Thor is in the process of gathering information on Hel. But the standing with Muspelheim has always been definite. We have to be prepared when Surtr comes from the world of fire.\" Odin said the last part with finality. Surtr was the ruler of the lava world of Muspelheim, the hottest world at the base of the Great Tree. His arrival in Asgard was long overdue. Never had the demons of Muspelheim favoured the gods in Asgard. He would strike when they were weakest. \n\nAztrit thought of the movements they would have to plan carefully after this first sign of Ragnarok. She was slowly deciphering where she stood on following through with her father's orders. But she knew what she would do. This was all bigger than she was. Larger than Odin and Asgard. This would be one of the few moments left that she would have to linger in her mind. \"Do you still want Lord Verdulke, Father?\" She would be later returning to Midgard than she had planned, but if these next steps didn't happen soon, there would be nothing left to fight for. \n\nOdin was pleased. He knew his daughter would always be loyal to him. \n\n**** \n\nKirk buttoned up the top of his tunic in the cool night air. He sat next to the fountain in between the dining hall and the living quarters, listening to the water trickle from the homage to the Asgardian Gods. If he was a believer in fate, he would find it humorous that he should pair with Odin's only daughter. Someone he would otherwise feel unworthy of. Because of what he was, never would Asgardians be able to accept him as Aztrit's partner. If she ever found out, he was certain she would no longer be able to stand his touch, let alone his presence. He knew he should've tried harder to keep her away, not to let how he felt get the better of him. Though something inside him desperately called for her whenever she was near. \n\n\"Still waiting?\" Eric's voice said in disbelief. Kirk had been waiting for the healer for hours, when would he realize she was uninterested in his company? Eric took a seat on the cold concrete next to him. \"There are plenty of lovely Vertanians awaiting cousin.\" \n\nKirk sat up straighter and looked to Eric. Never would he be able to understand the hold on his heart the pretty brown minx had. He hardly understood himself. \"The more for you. I prefer the quiet of the night more than the music in the hall anyway.\" \n\nEric had noticed how strange his cousin had been acting before they had left Karth. When she was around all of his attention rested on her, and when she was absent he kept to himself, seeming lost without her. She was beautiful, even to Eric. Never had he been able to stop himself from eyeing her body, but no woman was worth the longing Kirk had been feeling. She was just another witch posing as a healer, spurring on a wealthy lord to entrap. \"Kirk. Don't you think there's something a bit off about her? I haven't even seen her heal anyone. Not one tonic or cleanser. Maybe you should reconsider favouring her. Her kind are masterful at deception.\" \n\nKirk looked to his cousin in annoyance and scrunched his eyebrows. \"Her kind, Eric?\" \n\n\"Witches. She could be doing spells to make you feel this way.\" \n\nKirk laughed lightly and shook his head. He looked up at the stars studding the black wall of the sky. It was nice of his cousin to care and speculate for him, but he could never trust him with the truth. Eric only believed in the supernatural evil, not the Asgardians or the Vanir Gods. If only he knew Aztrit had saved his life, because Kirk had asked her too. If only he could see the look in her eyes whenever she was happy to see him, when she needed him desperately. He closed his eyes, feeling ashamed. He was hiding who he was out of his own selfishness. He didn't want her to realize what kind of monster he was, because he would never get to see that loving look in her eyes again.\n\nEric patted his back and stood, \"Think about it. You're a brother to me Kirk, not a cousin. You deserve happiness. We all do in the shadow of this war.\" \n\nWhen his cousin had re-entered the hall, he thought about what he had said. They did deserve happiness. Was he depriving her of the happiness she could have with someone more worthy than he? Someone untainted and heroic that she could covet, not keep in the dark. He was sure Loki knew of their fast forming familiarity, how much longer would it be before the rest of her family knew too? Odin was already interested in him, if he found out what role he would play in his destruction, he wouldn't hesitate to end Kirk's life. Leaving Aztrit heartbroken from his lies. He had to be the one to tell her. Tonight he would. \n\n\"I dont think your date is coming.\" \n\nHe looked over his shoulder at the woman on the other side of the fountain. He smiled broadly. \"It's probably for the best, she was hideous.\" \n\nAztrit laughed and circled the fountain to where he now stood. His hair was pushed away from his face, and his beard was wild from travel. His silver eyes roamed her body as she neared. She knew he would like this on her, she was pushing Vertanian dress code, but all she cared about was his reaction. The top of her dress was a solid black corset that hardly covered the tops of her soft bosom, and the bottom was completely black sheer with only black lace designs hiding her personal areas. Her hair was still straight down her back, just as he liked it. \n\n\"You didn't plan on wearing that tonight, did you Valkyrie?\" He was overwhelmed with shock. He would have to maim anyone who came close to her in that. He drug his eyes over the fabric hardly covering her body from his gaze as she turned in a circle for him. \"You have to change.\" \n\n\"Why? Everyone dresses loosely for these parties, I took a look before I came to make sure.\" The female elves did dress with an element of risk for celebratory parties, but many shortened their dresses to highlight their long legs, not their other assets. She took one of hands did another slow turn within his reach. \"I thought you would like it Lord Verdulke.\" \n\nHe stopped her spinning and brought her close to his body, \"I like it too much \n\nAztrit.\" He touched his lips to hers and took a fistful of her hair, pulling it gently to force her mouth open wider. \n\nShe felt her excitement growing inside her. The force of his kiss foretold that he was much more eager than she had intended to make him.The more she submitted to him, the rougher he became. She didn't resist as he backed her up to the nearest pillar and lifted her to align their bodies so he could enter her. He hiked up the hem of her gown and exposed how bare she was from the waist down. She pushed against his chest, suddenly feeling fearful of being caught. \"Kirk, not here. After dinner.\" Her body was flushed from his touch and although she was refusing verbally, she wanted him inside her right then, not caring if they were seen. This was happening much more quickly than she had planned.\n\nHe kissed her exposed cleavage and opened her legs wider. He could smell her heavenly aroma, knowing that if he touched her between her thighs, she would be drenched for him. \"You promised I could have you before dinner Valkyrie. I'll take you now, and I'll take you after.\" \n\nShe knew there was no use urging him to stop. He had made up his mind, and she didn't have the discipline to say no. Not with his cock pressing against her stomach. She held onto his shoulders as he yanked the front of her corset down, and took her breasts into his mouth. He thumbed her clit and ran his hand in between her swollen lips. He shook his head in appreciation, \"I've hardly touched you Valkyrie.\" His smile made her moan. She had never thought about being taken like this, with such an element of risk. His wicked smile and the words he spoke to her made her question how she had gone so long without having this fantasy she was living. \n\nHe pulled his pants just below his waist and freed his member, not wasting any time before he placed it at her entrance. He rubbed his head against the wet hole that throbbed, begging him to sheath himself inside her. He was sorry he was going to have to take her swiftly again. When she had left earlier that day, he had planned to make love to her, and emphasize the bond they were building. But she had to anger him being late, and then show up in a garment that left nothing to the imagination. The swell of her breasts, and the curve of her full hips under the sheer material was a worthy opponent against his self control. She had beaten him and left him with no will power to resist her. \n\nAztrit mewled in his strong arms, she felt herself pulsing around his tip, begging him to slip in. She didn't have to wait long. Just as she was about to voice her desire he gave a firm thrust with his entire length. She panted from the force of his hips, clinging to his tunic like her life depended on it. Her mouth hung open, not being able to make a sound. She was coming to find that he filled her like no one else ever would. The size alone was enough to make her knees weak as he entered her repeatedly, but the way he manipulated his body to hit her sweet spot every time he slipped in made him the best lover she had ever taken between her thighs. It would normally take her lengthy amounts of time to be ready to come for her lovers, but Kirk played her body like a harp, causing her to make sweet music with her voice. \"Kirk.\" She gasped out hoping to slow him. \n\nBut he would not relent. He continued his assault, listening to her call his name. He could feel her tightening around him, she was undoubtedly close to her release. He moved his lips to her ear and blew his hot breath into it. \"I don't care how many times you come around me Aztrit. I'm not stopping until I've had my fill of you.\" Hit bit down on her lobe. \n\n\"Oh my Gods. Kirk!\" She felt her orgasm rolling through her legs and up her body. She cried as she clutched him. He stayed true to his word, not letting up for a second. He felt so good inside of her. She convulsed around him, letting the throes of her pleasure suckle him, coaxing him to give her his seed. She tried to control the volume of her pleas, but she had no control of the heat massaging her body from his manipulation. \n\nHe groaned and threw his head back. He was close to giving her what she wanted. He pulled himself out to stop from emptying inside of her before he was ready. The way her body responded to him, it was hard to keep his promise of longevity. He was unsure if it had felt so good at the lake because it was the first time he had taken her, or if she really had the warmest cunt he had ever taken. Now he knew each time they were to join, ecstasy would not be out of reach. \n\nHe heard the doors of the hall begin to open again. He gathered her and slid to the side of the pillar out of view of the door. No one would see his Valkyrie. Her body was only for him. \n\nShe tensed her body and covered her breasts, preparing for Kirk to stop as they got caught. But as quickly as he had moved them out of sight, he entered her again, prompting her to try to struggle free. He placed a hand over her mouth and resumed his pace. \"Stay calm, relax your body. I won't let anyone see you.\" his eyes made her forget her fear, and she let him continue. She stuck her tongue out and suckled his thick fingers as they pressed against her lips. Her amber eyes kept his silver gaze through her muffled moans. \n\n\"Kirk?\" She opened her eyes wide with fear as she heard Eric call for him. Surely they would be discovered. She heard his heavy footsteps getting closer until it seemed he was right behind the pillar they were enjoying each other on. She breathed a deep sigh of relief as he retreated, followed by the loud noise of the door creaking closed again. Her heart was beating rapidly in her chest. She gave a muffled sigh and focused on Kirk's weight pressing her into the cold stone. \n\nKirk watched her as the fear passed, a bemused smile on his lips. This was clearly her first time with such a factor, and he was honoured to be giving her her first experience. He was close now. Her sweet sighs played to his desires. He took his hand off of her mouth and placed his lips there instead. \n\nShe looped her arms around his neck, and kissed him deeply. She was close again. He was picking up speed as he suckled and bit her lips gently. He pulled away and stared down at her. She closed her eyes and anticipated the euphoria she was about to undergo. Her climax was more intense the second time around. The fear in the back of her mind made her release sweeter. To find satisfaction so openly, where they could be spotted, made her come to him unabashedly. She buried her face in his neck to cover her screams, taking in his musky scent.",
        "This time, Kirk could not stop himself from releasing as she milked him. Her cries were filled with the intensity of her pleasure and nothing would ever sound as magical to him than when she said his name in the face of passion. He held her as she continued to shudder from her orgasm, until her body let go of the tension she was holding in his arms. As he rubbed her back and spoke softly to her, she wished to stay there forever, never having to face what would soon become of them. \n\nWhen they finally entered the noisy hall, she was relieved. She no longer felt the presence of her brother. Her eyes traveled across the long table at the back of the hall, she spotted the real General Frovik hunched over his plate, looking like he would be sick. The poison Loki gave to his victims in small doses was never enough to kill them, only to knock them out until he was done borrowing their likeness. The General was most certainly experiencing the harsh side effects of the drug Loki had made himself. Everyone else was seated at tables throughout the hall, or crowding the floor to show their appreciation for the soft music in the air.\n\n\"We are to sit at the table with Frovik, Valkyrie.\" She nodded in response to his words and began moving forward through the throngs of dancing elves and humans, swaying near their round tables. The hall was decorated lavishly with assortments of jewels surrounding candles, giving the hall multitudes of soft glowing colours. She spotted Eric dancing with a brunette elf much taller than he, stepping on her toes repeatedly. It was not hard to place that the strong mead the elves had received from the dwarves was his undoing. When Eric spotted them, he shook his head disapprovingly, and focused his efforts on the frustrated female in front of him. The colorful jeweled dresses in the hall were nothing like those worn when they had first arrived. She was reminded that in the Old Vertanian culture, pairings were only welcomed during community gatherings, when everyone had an equal chance to showcase their availability and their personal wealth. They bid faint hellos to Frovik, who was turning passionately chartreuse.\n\nAztrit noticed the King wasn't present tonight. After she asked Kirk about his absence, he told her he would only be available after the celebration tomorrow. He was away finalizing supplies for the deal they would barter. With everyone else done their eating and crowding the tables in front of them, they only had each other as company while they ate. \n\n\"I want to know more about your home.\" He said to her while she tried to chew quickly through the bird that was served. \n\n\"What do you want to know?\" She tried to say, covering her mouth from his eyes. \n\nHe wanted to find out as much as he could before he revealed himself. He wouldn't get another chance. She deserved to know. \"Tell me more about your brothers.\" \n\nShe nodded her head and scooted closer to him, unable to speak loudly. \"Either one okay to start with?\" He signaled yes and she continued. \"Thor is the oldest. He's my only brother by blood. Loki is the second, as you probably already know, adopted from the giants of Jotunheim, one of the nine worlds we belong to at the roots of the Great Tree Yggdrasil. \" \n\n\"Why would Odin adopt him as one of his own?\" \n\nShe shrugged her shoulders. \"I never really thought to ask him. But my father has always valued power. Maybe he saw what Loki could do, and chose to keep him close. Thor was furious when it happened. He enjoyed being Odin's only son. He's always been quick to anger, and slow to understanding.\" \n\nKirk took in what she had said about Thor, how would he react to what was happening between them. \"What would your brothers think about us?\" \n\nShe choked on her mead and coughed roughly. \"Thor would most definitely try to kill you. I'm his only sister, and he's ridiculously protective of his family. Loki already knows, and what he'll do with that information, I don't really know. But my brothers love me. Just as much as I love them. They do not however, get along with each other. Thor especially hates Loki's children, our nieces and nephews. I'm not particularly close with them because they're all much older than I am. But I've met Fenrir, his son. Not a pleasant being. And Jormungard, I'm sure you've heard of him, the big serpent in the ocean that surrounds Midgard.\" \n\n\"The one that eats its own tail because of its length? I thought that was just an old wives tale to keep children from the seas? He's Loki's son?\" Kirk shook his head as she said yes. He was fascinated, why hadn't he asked more about her world sooner? \"And your niece?\" \n\n\"Oh.\" She sat her cup down and breathed deeply. She didn't like talking about her. She had never met her, but from the tales her father told her about her, she belonged where she was. \"You know Helheim, world of the undead? His daughter is Hel.\" \n\nKirk stood abruptly, knocking the chair backwards, causing it to clatter against the marble floors. She jumped from the sudden movement. \"Are you okay Kirk? What's wrong?\" He looked just as sickly as General Frovik did, with shock reading wildly off of his irises. \n\n\"Loki is Hel's... father?\" He said it slowly to try to clarify that she had said that to him. \n\n\"Yes. Are you okay? Are you feeling sick?\" \n\nHe stared into her worried face. Too stunned to move. When he gathered the courage, he picked up his chair from it's off kilter position and sat back down. He ran his hand through his hair and down his beard. This couldn't be happening. After everything they had done together. How could he not have known?\n\nShe touched his back and peered into his distressed face. \"Are you okay? You're scaring me. Was it something i said?\" She was confused. They had been talking so casually, and then he turned different shades of red and blue. \"I know Helheim can be a little unsettling to think about.\" \n\n\"No, Valkyrie. I'm fine. Keep going, I'm listening.\" He didn't look into her face. He was too embarrassed. \n\nShe continued to try to soothe him. \"I have a biological niece too. Tihala. The Valkyrie you saw that night in the Dark Woods. She looks so much like her father sometimes, and I worry for her on the fields. She's so young and new to war, but she has his craving for it. That scares me. I don't want her to struggle the way Thor has had to.\" \n\n\"So Thor is a redhead too? I always imagined he was blonde. That myth that blondes are empty headed, like he's said to be, crafted my picture of him.\" He was calming himself down now, attempting to joke with her. To his delight she did laugh. \n\n\"Aye, that is true. He is not the sharpest spear. But Tihala takes after her mother in intelligence. Thankfully.\" She paused before she continued. She had been thinking about telling him the true reason she was sent too him on Midgard. After she spoke to her father, she had made up her mind. Before she met Kirk, she wasn't sure she could've done it just off of principal alone. But after he had showed her what real happiness and affection felt like, she was positive she could not do something so damaging to their relationship. She was going to tell him tonight. He deserved to know. \"Kirk, I have to tell you-\"\n\nShe was cut off by the loud booming of Eric's voice as he approached the table with a new, much younger elf with long black hair and sad looking eyes. \"Cousin! And witch my cousin has bedded.\" He nodded sloppily to her as he pressed the elf into his body. \n\nAztrit narrowed her eyes at him as he belittled her. Because she had refused his advances, she was witch and a whore now? It may have been the drink he partook in talking, but she could feel her pulse rising with anger. Before she could retort, Kirk stood and spoke instead, \"I think that's enough for tonight Eric. You have to rest for tomorrow.\" \n\nEric stood staring back at Kirk as his arms grew lax, giving the shy elf underneath him a chance to escape. His face was plastered crimson, as he swayed back and forth from his weight. After unsuccessfully attempting to stare Kirk down in dominance, Eric threw his hands and the mug he was holding in the air in defeat. \"I was beginning to tire anyway.\" \n\nKirk turned to Aztrit and took her hand in his, kissing her knuckles gently. \"Forgive me, but I have to ensure he actually gets to bed. You could meet me at my quarters later or I could come to you.\" She couldn't help but blush lightly from his frank statement. He was not asking. She could only nod her head in agreement, unable to formulate words. When he let her go and left, she berated herself 'Relax. It's not your first time with him.' But it would be the first time they might really spend the night together, and wake up next to each other. She knew exactly what they would do with all of that private time. But she was ashamed. Would he be so willing to continue if he knew she was supposed to confirm the suspicions he used to have of her?\n\nShe got up to leave the hall next, walking with haste towards the room he would be staying in. She was so enamoured she hadn't felt the blind eyes on her back as she walked again through the graceful elves, and out of the mead permeated hall. \n\n***\n\nKirk had finally gotten Eric to rest in his bed. When he left the grand barracks the Vertanians had fashioned for the visiting warriors, he walked casually in the dark. He could feel a presence watching him as he winded through the upscale buildings. But it wasn't until he reached the courtyard before his destination that he turned to face the jade eyes boring holes into his body. \n\nFrom out of the darkness came Loki, in his human form. \"I've been trying to place your scent since we met this morning. Although you might not recognize me this way.\" \n\nKirk crossed his arms over his chest as he returned his glare. \"Stealing images is quite a talent Loki. But stalking is not your strong suit.\"\n\nLoki grinned and shook his head. \"You have no idea what I'm capable of Lord Verdulke.\" He came closer and watched him for a moment before he continued. \"Does she know who you are?\" \n\nKirk tensed his jaw. \"She doesn't. But soon she will.\" \n\n\"Lying to my sister is not a good way to win her family over. Although our father already favours you. I was going to tell him, but Aztrit wouldn't be deserving of the retaliation she would face. Especially if Odin's days are numbered.\" Loki trailed off as his said this, trying not to give too much away. \"My sister is bright. I'm sure she already has some idea that you're not fully human. But she'll never be able to decipher who you've truly come from. I myself, am still trying to wrap my head around it. My daughter never told me she had a son. So you can imagine how surprised I am to realize you're a part of me.\" \n\n\"Hel was never a mother to me.\" Kirk was trying to control his anger. Never had she reached out to him. She had given birth to him, and then vanished, leaving his father with a newborn and nothing else. \n\n\"That I'm not surprised to hear you say. She was never very attentive as a child. But you are our family by blood. And that's all that matters to me. So I'm going to let you in on something I'm sure my sister has not told you. To spare your feelings or whatever lovers care about. Odin wants you. And he'll do anything to try to save himself during Ragnarok. But as an immortal, you're not fated to die for quite some time. Aztrit isn't here to make sure you win this war. She's here to make sure Odin can have you for the real battle. She's going to kill you so you can serve our father for Ragnarok.\" \n\nAztrit could feel something was wrong. After they joined the first time, she could feel his emotions almost as strongly as she could feel her own. At first it was uncomfortable, but she was starting to be thankful for it. If he was in trouble, she would be the first to know. She stood from the canopy bed in his room and moved to the door. As she reached for it, it swung open with such force she had to move out of its way. Anger was all she could read from his handsome face. \n\n\"I'm going to ask you a couple of things. And I don't want to hear anything other than a yes or a no.\" He kept his voice level and calm as he towered over her in the doorway. \"Were you sent here to take me dishonourably?\" \n\nShe could do nothing but keep her silence. \n\n\"Yes or no.\" He repeated through his gritted teeth. \n\nShe dropped her hands to her sides and tried to stop her eyes from watering. \"Yes.\" She finally said, unable to look at him. \"But Kirk, I didn't expect this to happen between us.\" \n\nHe held up his hand for her stop talking. \"Did you fake what we have? Any part of it?\" He held his breath as he waited for her answer. He didn't know if he would be able to carry the burden if she said yes. He had begun to hand pieces of himself to her the first time she kissed him. Never would he be able to reclaim the parts of himself that would be lost with her.\n\n\"No.\" \n\nHe released his breath and pushed past her into the candle lit room. He sat on the bed and took his face into his hands, unable to quiet his mind. He knew she was telling the truth. There was no longer a reason to lie. He couldn't be angry with her. He was just as dishonest as she was. He sat up and looked to her. She had changed into one of his tunic from his satchel, still her hair dangled loosely. She was so beautiful. He was convinced neither of them had expected to feel so strongly. \"Come here.\" he told her, putting a hand out for her to grasp as she came close. He wiped the tears from her eyes and held her face. \"You wouldn't have done it. Am I correct in assuming this?\" \n\n\"Yes.\" She choked out, unbelieving that he was being so understanding. \"I'm so sorry Kirk. I should have been honest with you. Never had I disobeyed my father. But I could not do something so power hungry and desperate.\" \n\nKirk held tightly to her. \"I know. I'm not upset with you. I'm angry with your father, for forcing you to partake in his preservation. He wasn't thinking about you when he ordered you to do something like this. He was only thinking of himself. He didn't care about how it would torture you.\" He quieted and stroked her cheek. Here he was belittling what another man put her through. Was he going to let someone else divulge the information that she come only from his own lips? \"Aztrit, I need to tell you something. And I understand if it's too much for you to comprehend. I only ask you give me a chance to explain myself as I've given you. Can you do that for me?\" \n\nShe saw the plea in his eyes. Her heart dropped to her stomach. What could he possibly say to her to make her waver after what she hid from him? \"Yes.\" She said steadily, praying that it wouldn't be out of her reach to forgive. \n\nHe took a deep breath and began, \"I know you've already noticed that I'm not fully human. I lied when I told you that I was. I wasn't going to tell you because I didn't want to complicate our relationship. But, I feel much stronger than I had thought I would, and things seem to be drifting to heavy dramatics already. The reason I was so shocked hearing about your family tonight, is because your niece Hel...is my mother.\" \n\nAztrit felt her face stiffen. She went through a myriad of facial expressions, trying to figure out which one was proper for the moment. \"I didn't know Hel had a child.\" She whispered, more to herself than to him. Hel's involvement in Ragnarok was undetermined. But it was an unspoken certainty that because of her relationship to the Asgardians, she would be against them. If Kirk was her son, they could find themselves on opposing sides.\n\n\"Neither did your brother. And I didn't know who my mother's parents were until you told me tonight. I had planned on telling you anyway, but because we're technically related, I knew it would be best to let you know immediately. I've never had contact with my mother, and I want you to know that I would never willingly defend her.\" \n\nShe still didn't have any words. She assumed him to be some kind of supernatural being. But Prince of Helheim? She went through the family tree carefully in her mind. Hel was her niece, so he was her Great-nephew. He was another Harbinger. The son of an outsider. She shuddered and let him go. Loki wasn't her brother by blood, so was it still taboo? She had never really seen Loki's children as her family. They were all dangerous and disconnected. Hel especially so. She had been cast to the underworld and made it her own. She captured the souls of murderers, thieves, and corrupt individuals of every nature, sucking the life out of them until they became loyal corpses forced to do her bidding. But if Kirk could forgive her for lying, and plotting to kill him, shouldn't she be able to look past his lineage, something he had no control over? \"How did you know that my brother didn't know?\"\n\n\"He stalked me from the barracks, and we spoke.\" \n\n\"So he was the one who told you about what my father asked of me?\" She raised her brows in understanding and pressed her palms together in front of her face. \"This is so disastrous. How are you staying so calm? How can you not be upset with me? And we're related?\" She racked her mind over all of the events so far, trying to consider how they should go about dealing with each other. The war seemed to be escalating quickly. Loki appeared to be playing the field.\n\nKirk reached up and pulled her hands from her face. She was over exerting herself going over the details. He kissed her hands as he looked into her eyes. \"I'm not upset because I know you had no choice but to say yes. I was angry at the situation, not you. Even when your brother told me, I knew in my soul you were not going to comply, and that made me fearful of how Odin will react when he finds out. And he will find out. So we need a plan. And about us being related, I know you see Loki as a brother, but keep in mind, he is not. He's a god who your father took in. We're no more related than I am to Derkot. So I would really like it if we could continue what we've been working on.\" \n\nShe smiled back at him, \"I would like that. It's just so odd.\" She couldn't help laughing. Out of everything she had heard and seen over time, being actually shocked by something was new for her.\n\nHe joined her in her laughter. \"Isn't it?\" He kissed her hands repeatedly, thankful the air around them was lighter. He should have been hurt by what she kept from him, but he could only feel relief. Everything was out in the open, and nothing was being kept secret between them. They could focus on what they cared about, before the worlds were emerged in war. He put his hands on her waist and pulled her further in between his legs. He slipped his hands beneath the soft material on her body, running his rough hands up her gentle curves. Her warm skin seemed to glow in the candle light. He worked his thumbs against the swell on the underside of her breasts. \n\nShe was elated. To be so candid with him about what was happening. \"Can we just start over?\" He chuckled as he continued to touch her body. His hands were making her anxious. She took her bottom lip in between her teeth and moaned. \n\n\"Where do you want to start?\" He kissed the tops of her breasts through the fabric.\n\nShe put her hands in his silky black hair and pulled gently. \"How about what your name is?\" \n\nHe lifted the bottom of his shirt over her head and dove back into her bare chest. \"You seem to know my name well enough during sex.\" His mouth moved against one nipple and tugged the other. He placed his other hand on her firm rear and squeezed it. \n\nShe made a sound of uncertainty, \"I have no idea who you are sir. Care to remind me?\" She laughed as he took her body into his hands and tossed her on the bed beside him. She watched him as he undressed. He started with his shirt, lifting it over his head, his muscles flexed under his scarred flesh. \n\nHe looked at her on the bed as he pulled his clothes off his hips, letting them fall to the floor. It was just like the first night he had touched her, but this time, he was more than confident in their ability to be much more than people who joined for pleasure. She moved her body until she was laying her head on the lush feather pillows of his bed. Her dark hair corrupting the white pillows underneath her. ",
        "He took her ankles in his hands and parted her smooth legs, holding her open for him to see. She felt her face get hot from the intensity of his stare. He stayed silent, roving his eyes over her womanhood. She realized it was the first time he was really getting to see it. The last few times had been underwater and in the dark. Here in the confines of this room, he was finally going to get to savour her. \n\nShe held her breath in anticipation as he let go of her ankles and slowly inched his palms closer to the apex of her thighs. He bent his face closer to her pussy lips and pulled away at the very last moment, kissing the insides of her thighs instead. She took one hand and spread her lips open further, hoping to tempt him from making marks on her flesh. His silver eyes only spared her display a glance and went back to his torturous teasing on her legs. She whimpered underneath him, needing him to touch her where she was throbbing most. His lips slid over her hot skin until he was right over her mound again. He took her hips into his hands and led his face to her slit. She gasped from his initial licks and kisses. She hadn't expected to be so sensitive to his touch, but now that he was down there, and drinking from her like he had an unquenchable thirst, she was nothing but grateful. \n\nHe lead his tongue in circles around her nerve ridden button, taking it between his lips and licking gently every now and then. He fell in love with her taste as he dragged his tongue across her seeping hole, licking up all of the creamy liquid that escaped her body. She tasted of toasted apples and rose, just as she smelled. He took his time slipping his tongue in and out of her, enjoying her joyous moans as she grinded her hips against his face. \n\nShe rested her legs on his shoulder as he continued feasting on her. Her legs were growing heavy from the attention he was giving her. He made her feel so delicate and valued as he savoured her. She sighed and ran her hands over her breasts and down her body. She gripped her thighs and held them open as he pressed his tongue harder against her heat. Flicking pressure on top of her clit. He gripped her wrists and pulled them underneath her thighs, using her own arms to lift her closer to his face. \"Fuck, Kirk.\" She said breathlessly as he moved his lips around her sensitive flesh harder than he had before. He suckled and licked fiercely. This position opened her the most, and the added pleasure of him restraining her was starting to build in her thighs. \"Please dont stop.\" She groaned as her chest heaved. She looked up at the intricate ceiling as she felt her climax nearing, being so open to his whim was more than enough to send her hurtling to orgasm. She clenched her thighs as the pleasure captured her body, she panted quickly and screamed for him. The electricity surrounding her legs pulled and vibrated her body against him as he continued to lick her. She pressed harder against his face as he lapped up everything she secreted. \n\nWhen she was nothing more than a whimpering pile of satisfaction, he wiped his mouth and beard and placed himself at her entrance. He took one of her hips in his hand and dragged her further beneath him. She opened her golden eyes and grabbed the blankets beneath her. \"Are you ready for me Valkyrie?\" She nodded her head yes. \"I need to hear you say it.\" \n\n\"Yes Kirk. I need you.\" She said breathlessly. She was aching for him. He smiled down on her and entered her slowly, causing her to arch her back in anticipation. \"Oh, Gods.\" She would always love the first few moments he placed himself inside of her. Her pussy was always too tight for him the first couple of pumps, clinging to him with no give. This is when he filled her the most, before she adjusted, she felt as if there was no room for him to continue. She swore as he pumped slowly, keeping her hips in place on the mattress with his long fingers. He stilled himself before he continued pumping. Taking the time to gather how wet she was for him. Everytime he pumped their bodies made noise from her tight heat. She was already throbbing gently from her last orgasm, and her legs were spread as wide as she could make them. He felt the soft flesh of her hips and continued thrusting. He only gave her slow deep strokes. \n\nShe grabbed his arms as he worked her insides, his large body on top of her made her feel unbelievably small, like she would break from his actions. She held onto his thick forearms letting him split her open each time his hips met hers. He strokes were meaningful. Each one relaying to her what she meant to him. This time, their joining was much more than every time that had come before. She really felt he was making love to her body, giving her a larger piece of himself. \"Kirk?'' She called to him, making him look up at her. She held her arms open for him to come closer to her chest. \n\nHe laid his body on top of hers, holding himself up with his biceps. She touched his cheek as his lips hovered above her own. Their eyes stuck together, conveying how blissful this moment was to both of them. He kissed her plump lips and laced his fingers in with hers, each digit connecting slowly. He leaned his body further upwards, so that each time he moved in, his shaft connected with her clit. He picked up his pace giving short, sharp thrusts, and then relieving her with soft, deep strokes. There he went playing music with her willing body again. He kissed her neck as she sung for him once more. \n\nThey kept all of their heat stuck between their bodies, selfishly keeping the love growing there from escaping. He lifted one of her brown legs, and held it in place form the underside of her knee. She took in more air as he slid in further. The control he had over both of their bodies was astonishing to her. He knew exactly how to deliver them both to the havens of their bodies. \"I'm so close.\" She whispered into the thick air. She had never wanted to come more. He gathered her body in his arms and sat her upright, never disconnecting their bodies. She held onto his shoulders as he continued pumping upwards into her. He held her up with his hands on her rear, keeping her steady as he prepared to give them both their release. He pulled all the way out, and slammed back into her, making her cry out his name. He repeated this until he felt her legs quivering around his waist. \"Fuck. Aztrit.\" He said into her ear as he began coming with her. She felt his come coating her walls, seating itself deeply into her womb. She dug her nails into the flesh on his shoulders as she came. Her nipples grazed his hard chest as they moved together. She shook as he held her, rubbing her back as her climax held her captive far longer. Her back was wet to his touch from the sweat they had conjured together. He laid her back down, letting his cock soften before he removed himself. \n\nShe accepted his wet kisses as he held her close. Their even breath was the only noise filling the room. She was taken. She loved this man more than she had ever loved anyone else. If she told him, she was confident he would say the same. The love she held for him was deep within her, something that she had not been able to ignore from the moment they met. She belonged here in his arms, as long as he would have her. She looked up at him as he pulled his lips away and gazed down at her. She was sure he would say it now. \"So you do know my name then, don't you Valkyrie?\" \n\nShe gasped and playfully hit him in the stomach. \"I have no idea what you're talking about. You're so rude.\" That was not what she had wanted him to say.\n\nHe laughed at her attempts to hit him. \"Oh, aye? I seem to recalling one of us screaming for someone named Kirk? Now that I think more on it, I recalling hearing that repeatedly.\" He mimicked her voice, \"Kirk, Oh my Gods, Kirk.\" \n\nShe was mortified. Her eyes were as big as saucers. She couldn't help what she had said in the moment, but hearing him recalling what she said was horrifying. To hear this giant warrior mimicking her womanly voice was, overwhelmingly humorous. She laughed so strongly she choked on her air. He fell next to her, prompting her to move underneath his arm next to his sweaty chest. \"You're a giant child, I hope you know.\" \n\n\"Your brother's grandchild.\" He retorted with light laughter. \n\n\"You're disgusting, it's not like that, and you know it.\" She scooted closer to him, listening to his chest rise and fall from the intake and outpouring of air into his lungs. \"Do you have any special powers you've hidden from me?\" \n\n\"Why would you think that?\" \n\n\"Well Loki is really in tune with the magic he received from his Jotun heritage. I don't know who he fathered Hel with, but to make her, he would have had to someone just as powerful as he was. I know your father was human, but surely you inherited some kind of trait?\" \n\nHe thought before he spoke. When he discovered what he could do, he had been devastated. \"I can control a subject's will. Their thoughts, their actions. I can make them do anything I put my mind to. That and my talent for battle.\" \n\n\"Wow. I'm sorry if this comes out wrong, but I'm surprised Hel hasn't tried to use your gifts to her benefit. How did you find out you had such a strong gift?\"\n\nHe shrugged his shoulders. \"She probably doesn't know I have them. She didn't stay for a single minute to raise me, and I only use my gift of war. I made the mistake of losing control over my anger when I was young. Luckily, I knew to stop myself before I willed something I wouldn't have been able to come back from.\" \n\nShe reached a hand out a ran a finger down the warm skin of the scar on his face.\"If you have such a talent for battle, how did these happen?\" \n\n\"For the longest time, I felt using what came naturally to me was betraying the person I knew I could never be. When my father told me what I was, and who I had come from, I struggled with my identity. Even after years of self doubt, I still have a hard time reassuring myself that I don't want the same things my mother does. So, I refused to use the gifts I had. But even after all of these wounds, even the deepest, I never died. I could never run from my immortality.\" He stayed quiet for a moment and then a smile broke across his face. \n\n\"What's so funny?\" She responded, still fingering the scar and crossing his lips. \n\n\"If you were here to kill me, you were so close the first time we met. Why'd you stop?\" \n\n\"Why would you find something like that funny?\" She retracted. \n\n\"It was my first time being so close. Probably because I had never been against a weapon fashioned for a god.\" He sat up and leaned his back on the wooden headboard. \"Why didn't you let me die?\" \n\nShe took her hand back and sat up along with him. \"Honestly, because I thought you were handsome. And, Odin didn't want you until after the war, taking you so soon would have made him angry. He may be my father, but when he's angry, or when he doesn't want to admit he's afraid, he does things I'll never be able to understand. Do you want to see it?\" \n\n\"See what?\" \n\n\"Hurink. My blade. The one that I would've killed you with, had you been ugly.\" \n\nHe laughed and raised a dark, thick brow at her. \"Maybe I do. Do you still plan to use it on me?\" \n\nShe stretched her hands out in front of her and called to Hurink in her mind. \"Keep calling me old, and I just might.\" her onyx blade appeared in her open palms. The deep black of the blade played nicely in the shadows of the candle lit room. The gold handle looked red from the reflection of the gentle fires in the room. She gripped the handle tighter. It felt as if it was burning. Something that had never happened before. She lifted the hilt closer to her eyes. There was now script on it that she didn't understand. Only one word laid on it that she recognized. Vili. One of Odin's brothers. An uncle of hers that she had never had the chance to meet. \n\nKirk watched her inspect her blade. She was so gentle with it, he could believe that it was sacred to her. But she looked at it as if it was the very first time she had seen it.\"What is it?\" \n\nShe shook her head, not knowing what to say. \"It's changed. It's Hurink. But someone's written on it. I think someone may have gotten into my armory.\" \n\n\"Do you need to go and check?\" \n\n\"No. I've already let Dahlia know to check and tell me.\" \n\nHe looked around at the otherwise empty room, \"You spoke to someone? Just now?\"\n\nShe placed her blade on his lap gently and nodded. \"Valkyrie can talk to each other telepathically, if we choose. Don't touch the blade itself. I had it enchanted by the elves of Alfheim to draw blood even if touched gently on its surface.\" \n\nHe lifted the sword by its cool hilt, inspecting its weight and grip. \"Isn't this length too large for you? Your arms are so short.\" \n\n\"It adjusts to the wielder. With you holding it, that's the largest I've seen it expand.\" She yawned as he handled her blade as if he had been swinging it himself centuries. It had take her long to discover how to use her body in unity with it, and she never let anyone touch it. But she knew she could trust Kirk to give it its intended respect. \n\n\"Vili crafted this for you? It's the finest I've ever seen.\" \n\nShe looked at him in bewilderment. \"You can read the inscription?\" \n\nKirk set Hurink on the bed and looked at her. \"Yes. Can't you?\" \n\nShe shook her head and picked up the hilt, giving it another look. \"No Kirk. This is Aesir. The only people who knew the original language is my father and my uncles, Vili and Ve. And they're both dead. What does it say?\"\n\n\"A gift of discovery. Does that make sense to you?\" \n\nShe searched inside of herself for an answer. But she could find none. \"No. He died before I was born, so I wouldn't be able to recall anything he had said to me. After I healed Dahlia tonight, I felt something change inside of myself. Usually after healing someone so damaged, I would be unable to heal long after. But before I left, I had enough energy to keep healing the rest of my sisters, and I wasn't breathless. My armour changed colours, and my wings are heavier. Now, this? I'm just not understanding what's changed.\" She continued, telling him how she felt healing Dahlia, and the heat burning her body as she pushed her powers to her limits. Trying to make sense of it herself. \n\n\"Do any of your powers involve fire?\" \n\nShe only raised a hand in front of her. All of the flames from the candles raced to her palm, creating a larger entity that began changing shape. \"Manipulation and creation of fire.\" She dispersed he flames and re lit every candle with a movement from her wrist. She waved a hand over Hurink and dismissed it. She was perplexed, but she was growing increasingly tired. It had been long since she had slept well.\n\nKirk saw her yawn again. \"Whatever it is, we can try to discover it in the morning.\" He laid down and pulled her into the blankets with him. She let him place her under his arm and clung to his side. As they cuddled in comfortable silence, she felt her eyelids becoming heavy. She moved closer to his body, taking in his scent. He kissed her forehead as she felt herself drift quickly into darkness."
    ],
    "authorname": "Irian",
    "tags": [
        "mythology",
        "interracial love",
        "black woman",
        "norse gods",
        "romance",
        "elves",
        "valkyrie",
        "white man"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/bifrost-ch-03"
}