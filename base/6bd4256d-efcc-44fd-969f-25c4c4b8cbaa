{
    "title": "Cummingtonite",
    "pages": [
        "Thanks to Lilalocket for her constructive criticism. \n\n***** \n\nIt all started at a mining conference. \n\nI was six years out of my Ph.D. in geology, and after six years of dead-end postdoctoral fellowships and contract lab tech jobs and being turned down for every faculty position at every university in my field for which I was qualified for, I had finally given up the dream of being a tenured professor. Sure, I knew the odds going in were against it, but I loved research, and I kept following every path I could find in search of a key to the ivory tower without success. Finally, a few weeks past my thirtieth birthday, my slowly dying relationship with my long-term girlfriend Carolyn finally ended when she left me, and a quarter-life crisis hit me like a ton of, well, rocks. Jobless, single for the first time in forever, and with no prospects for my future, I started looking for jobs outside of the ivory tower that might actually use my degree. \n\nIt felt like admitting I was a failure, but sure enough, after a few months of searching I landed a job with a Vancouver investment bank. The mining industry is populated with literally hundreds of small companies with stakes in properties all over the world, and each and every one of them wants an investor with money to come and buy out their claim, make them rich, and then build a mine to develop it. My firm worked like venture capital - it was my job to read through hundreds of identical company profiles, meet the geologists in charge, examine their core samples, and make the decision to invest in a few of them that looked promising. \n\nNearly a year into the job, I had surprised myself. I had backed a couple of winners early on (including one company run by an old buddy from my undergrad), and the sizable bonus cheque they cut me shortly after New Year's was literally more money than I had ever held in my life. In one go, I was able to pay off the rest of my student loans, buy a new car, and feel, for the first time, like a real grown-up with a real income. Failure had never tasted that good! \n\nIn early March, the mining industry gathers in Toronto for the big Prospectors &amp; Developers Conference - the largest such conference in the world. Every year, literally hundreds and hundreds of hopeful companies set up shop in the investor's exchange looking for sugar daddies, and it was my job to pick winners. I had four days to make or break my upcoming summer, and show that my first year's success wasn't just beginner's luck. \n\nAfter an uneventful first day, Day 2 of the conference dawned early for me as I began trolling the aisles of the show, and it was there she spotted me. \n\n\"Oh my goodness, Phil! How have you been?\" \n\nI was suddenly blindsided and enveloped in a tight hug from a young businesswoman in a form-fitting, but still professional, black dress and matching heels. As she pulled back and I caught her face, I recognized her. \n\n\"Kate Morgan, how long has it been?\" \n\nKate had been one of my undergrad students when was doing my Ph.D. I was her TA in three different classes, and I had always had something of a crush on her, though I never would have admitted it to anyone (if nothing else, I could have gotten in serious trouble, both with the university and with my girlfriend at the time). Kate would have been a typical \"All-American\" girl next door type had she been American, but the maple leaf tattooed on her shoulder blade gave her away. She had been a varsity swimmer for our university and had been good enough to make Canada's Olympic trials, though she never qualified to go all the way. As I looked at her for the first time in six years, I could see she still had the swimmer's body. She was tall for a woman, maybe a few inches shorter than my 5'11\", and still strong, athletic and lean, with long arms and legs and skin with a natural complexion that made her look permanently tanned. Her wavy hair was auburn and pulled back into a simple ponytail, and as we made eye contact, I was reminded again of her best feature. Her eyes were the purest shade of icy blue I've ever seen, lively and mischievous, and after six years I nearly stumbled catching sight of them again. Hot damn. \n\nWe fell into an easy rhythm catching up on each other's lives in the middle of the trade show. She had graduated with her B.Sc. the same year I finished my doctorate, and then as I moved into postdoc hell, she gone on to do a Master's degree in economic geochemistry at a school in Ontario. After graduation she had landed a job with a junior mining company, as many new grads in the industry did. She was still an apprentice with the company, but her boss liked her, and in a company that consisted of only five people (her, two senior geos, an accounting and finance guy and a secretary) she was getting a ton of useful experience not just in geology but also in running a business. \n\nAs I filled her in on the details of my job, the perfect blue eyes narrowed. \n\n\"You mean you're one of the investors? All we get here all day are people trying to sell us stuff and university kids looking for summer jobs. I need to introduce you to my boss, and then I'm going to convince him we need to have dinner afterwards on my expense account so I can convince you our project is worth it.\" \n\nI was quickly manhandled and dragged by the hand to an older, nerdy-looking bald guy in a dark suit, who introduced himself as Brian Davies, President and CEO of Flagstone Minerals. \n\n\"Let me tell you about our chromite project, assay results...\" Blah, blah, blah... As he schmoozed impossibly upbeat and promising stories I'd heard a hundred times before, I kept stealing glances at Kate, who was standing to the side quietly and taking in her boss's pitch. She hardly looked different from the undergrad I remembered, the one who would drop by my office in form-fitting clothes, whose muscular curves I'd secretly ogle as I taught her how to evaluate a thin section through a microscope. As I stood there, not really listening to all the highly interesting chromite talk, I remembered more about her. \n\nShe had been studious and came to my office hours often, one of the few students that did, and had gotten the grades to show for it, but I also occasionally heard gossip about her wild side. Of course it's no secret that varsity athletes party hard, and I'd heard stories from other grad students that she had a taste for booze and had slept around a fair bit in university, though I never got the impression she was wanton about it, she just knew what she liked and didn't fear judgment. \n\nAs her TA I had envied her effortless sociability and likability and the way she'd managed to fit in both with the jocks on the swim team and the mineral nerds. Most of the guys in her year had a crush on her; she was the kind of effortlessly likeable and bubbly girl who easily attracts suitors. But she was way out of my league, she never seemed to want to be tied down in a relationship, plus I was in a power relationship to her and I took my Ph.D. too seriously to ever consider making a move. That is, even if I hadn't been a completely hopeless geek and also taken. \n\nIn some ways, she had the university career I had secretly wanted but never had. I had been the nerd who spent my weekends drinking and playing Dungeons and Dragons with my buddies in undergrad. In grad school I hung out with my labmates and talked about research a lot. She partied, fucked around, swam competitively, was a social butterfly, and still got grades comparable to mine. She played the field; I spent my twenties with a fear of being alone and holding on to my high school relationship at all costs. It should have ended with being long distance six weeks into university like so many others, but instead we had lasted until I was 30. Fucking Carolyn... \n\nOh shit. Silence. What was that CEO's name again? Barry? He's looking at me. Better say something... \n\n\"Of course I'm really pleased you've hired Kate, she was one of my best students when I taught her\", I stammered. Was that a non-sequitur? Fuck. \"I'm looking forward to catching up with her as equals tonight and I'm sure she'll have the time to tell me all about the chromite stake you've got up north\". The guy grinned. Good. Saved it. \n\n\"Kate's been with us for two years and she's been a great hire\", said Basil or whatever. \"She works hard, she's great in the field, never complains about living in tents for a month, and her assay work and core-logging is better than some I've worked with that are twice her age\". Kate grinned in pleasure. Oh right, the perfect teeth... god, her smile is still intoxicating. \n\n\"I'm happy to let Kate have you, Phil. I hope you two have a productive dinner!\" With that, he turned and walked away. \n\nKate and I quickly traded cell phone numbers, and agreed to meet up at 6:00 when the conference closed for the day. \n\nAt 6:00 I met up with Kate again near one of the escalators on the way out of the convention centre, and we walked the short distance to one of downtown Toronto's many restaurants catering to people on an expense account. Over a Thai dinner we caught up on our lives and mutual friends, her Masters and my struggles in finding a place in academia. We also got into our personal lives a little bit; I told her the short version of my long, sordid history with Carolyn, and she told me she had a new boyfriend, dating less than a month, in Kendall Falls, the tiny mining town up north where she was living. She'd been with Kenny only a short time, but thought \"it had promise\" considering the fact she was in a small town with less than a thousand people living there and wasn't into country music, hunting or incest. \n\nShe also tried to sell me on their project in detail, which sounded promising even without the personal connection. I took notes and put them on my \"strong maybe\" list. After dinner, we eventually wound up at the Royal York Hotel for hospitality suites put on by the big companies, where we continued to avail ourselves of all the free food and booze the industry wanted to throw at us. By 10:00 we were both tipsy and sick of rock talk, so we found our way to a mediocre chain restaurant nearby, where we ordered wings and continued polishing away the beer, while talking more in depth about our relationships and personal lives. And throughout the evening, I had no inkling whatsoever of what was about to come - our friendship remained as professional and friendly as it always had been, just two old acquaintances catching up. \n\nLate in the evening I was finishing another pint of Steam Whistle and listening to Kate telling a field camp story when all of a sudden she stopped herself and bolted upright, startled. \"What time is it?\" \n\nI looked at my watch. \"Just after midnight, why?\" \n\n\"Shit!\" She looked panicked and immediately started gathering her purse and coat. \"Where are we? Maybe I can still make it. We haven't paid yet, have we?\" She tipped her head back and downed the last third of her pint in one smooth gulp. I tried to stifle looking too impressed. \n\n\"Kate, what's going on?\" \n\n\"I'm supposed to be on the 12:10 Go Train back home, it's the last one of the night\", she breathed anxiously. \"Do you think I can make it to Union Station in time?\" \n\n\"We're easily twenty minutes away walking. Do you have your ticket?\" \n\n\"No, I was going to buy it there.\" She checked her phone, noting the time. \"Four minutes until it leaves and we haven't paid the bill. Fuck!\" Her eyes welled with emotion, which surprised me. She'd always been a trooper, taking occasional bad lab and exam results in stride, marching into my office and going over answers until she was sure she knew the material. Consoling distraught undergrads was something I unfortunately had a little bit of experience with, but I'd never seen Kate emotional. She certainly wasn't the type to cry after minor inconveniences like missing a train. She slumped down in her seat, clearly fighting back tears. \n\n\"Kate, tell me what's up\", I said, using the same calm, reassuring voice I used to use to talk kids down off the ledge. \"It's not like you to get emotional over missing a train. What's bothering you?\" \n\nShe took a deep breath. \"I shouldn't tell you this, but I've always trusted you. Promise not to blab?\" \n\n\"Of course\" \n\n\"Flagstone is doing really badly. It's far worse than we let on. If we don't find investment this conference, we're probably out of business. I really believe we've got something special, but we need to convince someone to take a chance on us. \n\n\"Frankly, I never ordinarily would have been able to expense taking you out tonight, but Brian saw the rapport and the history we had together, and he knows your firm invests in a lot of junior mining companies. He told me to schmooze you and get your investment. But the company really doesn't have the money for schmoozing. \n\n\"They can't even afford to put us up in a hotel, given how inflated the prices are this week. Brian's sleeping on the floor of his brother's condo near SkyDome, and I'm staying with my parents in King City. Part of the only reason they even paid to fly me down here instead of the other senior geologist was because I had a free place to sleep and he didn't. I needed to be on that train to get home. It's almost two hours on public transit, I sleep what I can, then two hours back into the city in the morning to be here for 10 when the show opens. Now either I'm stranded, or it's a cab ride I can't afford.\" A single tear melted from her eye, which she quickly wiped away. \n\n\"Look\", I said firmly. \"I'm not leaving a friend in distress. I have a bed in my hotel room and you're invited to spend the night. I can sleep on the couch.\" \n\nKate looked up. \"You mean it?\" \n\n\"Of course I mean it!\", I exclaimed. \"I'm not far from the convention centre and the company is paying for it anyway.\" \n\n\"Oh my goodness, thank you!\" she cried. \"I don't know how I can repay you.\" \n\n\"You don't have to repay anything\", I replied. \"I know we had a professional relationship back in university, but I always thought of you as a friend, too, and tonight has done nothing to make me change my mind. And I'd never leave a friend out in the cold.\" \n\n\"I always thought of you as a friend, too\", she said smiling. \"You were the best TA. Calm, professional, you could explain anything so I could understand it, tough but fair. You had a knack for calming people down, and you cared about all of us when so many TA's didn't. I trusted you then and I'm glad to see you haven't changed.\" \n\nI could feel myself blushing as she continued. \"Plus, geos get used to sharing all kinds of weird sleeping situations with all kinds of people. I've spent two weeks in a tent with Brian, a nice hotel with you will be paradise after that... I guess I don't have a change of clothes or anything... whatever. I'll do the walk of shame into the show tomorrow. Either they'll think I've gone the extra mile to land your investment, or they'll be too oblivious to notice.\" \n\nI grinned. \"Is it still the walk of shame if you don't get laid?\" \n\nShe rolled her eyes. \"Shame about getting laid is so high school. Shame about not getting laid is a sign of insanity.\" \n\nWe paid our bill and hopped on the subway. Once we were out of the underground she texted her folks that she was sleeping over with a friend so they wouldn't worry about her, and after a short walk we were back at the hotel, a comfortable, nondescript modern block indistinguishable from any other business hotel you've ever seen. \n\n\"Oh, you have a king!\" she exclaimed as we made our way into the room. \"You're not sleeping on the couch in a bed that could hold three people.\" \n\n\"You sure?\" \n\n\"Absolutely.\" \n\nKate threw herself onto the bed, kicking off her heels as she stretched. I started carefully removing my suit jacket and tie, hanging them in my suit bag. As I glanced at my suitcase, suddenly it hit me that if Kate didn't have a change of clothes for tomorrow, she wouldn't have pyjamas either. I raised the issue with her cautiously - I didn't know how to handle this, and as a usual nude sleeper myself I wasn't exactly flush with extra garments. \n\nKate rolled on her side to face me. \"Look, Phil, I've known you for years. I know you're a good guy and I trust you. And remember, I was a competitive swimmer. Swimmers change bathing suits on the pool deck wrapped in towels. We change and shower in groups in the dressing rooms. We skinny dip like nobody's business. I stopped being self-conscious of my body years ago. And you've never seemed like the prudish type either, nor do you have a jealous, possessive bitch of a girlfriend to get mad at you anymore for doing nothing at all that you should be worried about.\" I winced. \"Will I make you uncomfortable if I sleep nude in your bed? Would you rather sleep on the couch? I don't want to do anything out of line when you're doing me so big of a favour.\" \n\n\"I'm good\", I responded, saying a silent prayer of thanks. \"It won't bother me either way, and I promise to be a gentleman about it.\" \n\n\"I know you will, which is why I'm not worried about it either. We're both adults and we can be mature about it, and once the whole swim team sees you naked enough times to be able to draw a picture from memory, you lose all sense of your nudity being anything to hide, as long as you're among consenting friends.\" She sat up and scooted over to where I was sitting. \"I want a quick shower before bed. Unzip me?\" \n\nI unhooked the back of Kate's dress and unzipped her, and she quickly shimmied out of it, and then her stockings. She then walked in matching nude-coloured padded bra and low-rider panties over to the closet, hanging her clothes carefully. I tried hard to look without making it look like I was looking, noting that both were simple but still feminine. She then turned and headed for the bathroom, unclasping her bra as she went, and I saw it hit the floor as she rounded the corner and entered the bathroom. I couldn't see her chest, but her bare back was powerful, tanned and muscular with broad swimmer's shoulders and shoulder blade tattoo, and her toned butt looked firm and inviting, even covered by her panties. \n\nI took a deep breath as the bathroom door closed and I heard the shower come on. I hadn't gotten laid in over a year, and Kate was always the one student that I could have been tempted by if she'd ever made a move on me. I could feel my cock suddenly uncomfortably tight in my underwear, and I decided I should get my suit fully off and hung before she got out of the bathroom. I wanted to see whatever she was going to let me see, but I didn't want to flaunt my own body without a reason, not that she'd want to see it anyway. After carefully hanging up my clothes I grabbed a pair of boxer shorts. My dick was now fully erect and sticking out of me at a ninety-degree angle, and I tugged at it a few times before deciding that the last thing I wanted was to need to relieve the pressure with a naked platonic friend in the room with me. \n\nI pulled on the shorts quickly, turned down the covers on the bed and climbed in, leaving only a single bedside lamp lit. Shortly after, as my erection started to finally fade, the shower switched off. \n\nA few moments later Kate emerged, wrapped in a towel and with her auburn hair, still mostly dry except at the ends, loosely hanging well below her shoulders. I hadn't realized until now, finally seeing it loose, how long she had grown it. She looked beautiful, her skin glistening with odd droplets of moisture. And then it happened - she unwrapped the towel and hung it on a chair to dry, and in a few seconds I finally saw the nude body that I'd fantasized about so many times. Her breasts were small, probably no more than a small B cup, but impossibly perky and perfectly proportioned. Her nipples were dark and only sticking out a tiny bit, with smallish areolas the size of a loonie or so. She had a washboard stomach and powerful arms and legs, still feminine, but built for speed in the pool. Her ass was toned and muscular and spectacular, and while I didn't get a good look between her legs, I could tell she was hairless, probably waxed smooth, without even a hint of stubble. Makes sense, I thought, swimmers never have hair below their eyebrows. And then in a flash she was under the covers, completely nonchalant about her nudity and apparently uninterested in stealing a glimpse at me or discerning whether or not I was naked under the covers. ",
        "\"Good night, Phil, and thank you so much for saving me tonight.\" Kate leaned over and kissed me on the cheek, and as she did I felt her warm, naked breast press quickly, teasingly, into my arm. So much for the erection, I thought, as my cock sprang back to instant life as she rolled over and killed the light. \n\nI lay in silence for a few minutes, head still buzzing from the beer, listening to Kate's breathing, mentally replaying the sight and feel of her perfect body in an effort to commit to my long term memory, and trying hard to ignore the hard, throbbing rod between my legs. I was debating going off to rub one out in the bathroom, but I could tell Kate was still awake and didn't want to do anything until she was asleep and couldn't be creeped out by potentially hearing her former TA masturbating in the next room. It was not going well. \n\nSuddenly there was a bang out in the hallway and then I heard a couple loudly and drunkenly talking in a language I couldn't figure out. I'm usually good with languages and I speak fluent French, but none of the sounds sounded familiar, though it was obvious they'd had a good time that night. I was annoyed. It was 1:15 AM and we needed to be up and functional the next day. The conversation, though, shifted - presently I could tell that it was no longer in the hallway but was coming through the wall behind the headboard of our bed. Of course, I thought, the room next door. \n\nI listened to the drunken jabbering for another minute or so until it finally stopped, and then I heard the shower in the next room turn on. Suddenly Kate spoke up. \n\n\"They're gonna fuck.\" \n\n\"What?\" \n\n\"They're speaking Finnish\", Kate explained. \"She was telling him to fuck her, and he was saying he wanted a shower first. They argued about it for a bit and now he's in the shower. She ordered him to hurry up or she was going to finish without him.\" \n\nI was impressed. \"You speak Finnish? What part of Finland does the Morgan clan come from?\" \n\nKate punched my arm playfully under the covers. \"My Mom's maiden name is Harmaaj\u00e4rvi, you dumbass\", she responded. \"Kate is short for Katarina, and my middle name is Lilja. That entire side of the family is based up in Thunder Bay where all the Finns live in Canada. I wouldn't say I'm fluent, but I can get the gist of it. And I know all the swear words.\" She grinned, her perfect white teeth shining in the darkness. \n\n\"So if they're already that loud...\" \n\nThe smile broadened. \"We're in for a show. Do you want the play-by-play?\" \n\n\"Are you offering to translate for me?\" \n\n\"Why should I be the only one to get to fully enjoy how awkward and hilarious this is going to be?\" she shot back, maybe a little too defensively. \n\n\"Relax, it's okay. If I have to hear them I may as well understand it.\" I was worried about my erection, though, which was getting quickly to the point where I would have to get off in order to sleep. Voyeurism had been a kink of mine since my first year in university, where the girl on the other side of the dorm wall from my bed appeared to be trying to break a long-standing school record for the most times getting laid at heavy metal concert volume. With Carolyn at another school a few hundred kilometres away, my first year sex life had consisted almost entirely of quietly jerking off listening to my neighbour's exploits. \n\nSuddenly the water shut off in the other room, and a few moments later, we heard some hurried conversation. I could hear frustration in the female voice. \n\n\"She says she's already got herself warmed up but how can he not have a boner? He's trying to get her to suck his dick to get him ready. She sounds a little annoyed, maybe frustrated.\" \n\n\"Whiskey dick?\" \n\nKate giggled. \"Sounds like it.\" \n\nI started hearing low male moans coming through the wall, needing no translation. \n\nEventually there was more conversation. \"She wants him to fuck her now\", Kate translated. \"But he says he wants to go down on her first. She says she's already warmed up.\" There was a sudden gutteral female yelp and I could hear what sounded like melting resistance. As the sounds intensified, I realized that the beautiful naked woman a few feet away from me was breathing noticeably shorter. The moans through the wall continued. \n\n\"She says if he keeps that up she's going to cum...\" Kate suddenly stifled bit of a sigh under her breath, which got my attention. I felt the bedcovers move as she shifted her legs, and from what I could tell she was now lying with them open a little. \n\nBy now I was rock hard again, with my cock fully erect and tucked under my waistband. I could hear female moaning at a volume that could wake the dead in the next room, but I was more interested in Kate's breathing, which had become heavier and deeper and maybe just a little frustrated. I debated stroking myself gently, but I wasn't sure I could get away with it. \n\n\"They're doing some kind of denial...\" Kate breathed, with a distinct edge to her voice. \"She's begging him to cum or to fuck her and he keeps saying no.\" Kate's legs shifted again and were now spread even wider open, though I couldn't detect any movements under the covers. I also noticed she had pulled down the comforter and now only had a sheet covering her top half. In the dim light of the room I could see two pinprick nipples poking through the sheet, casting telltale shadows. \n\nSuddenly the woman next door wailed and male moans were added to the mix, and I could hear the headboard thumping against the wall. \"I guess they're fucking now\" I said lamely. \n\n\"I guess they are\", agreed Kate. \n\nWe listened for a few minutes. No translation was necessary anymore, as the sounds of sex are the same in any language. I was desperately horny and slipped my hand down to feel the precum all over the head of my cock. I gently rubbed precum under the head, which was nowhere near what I wanted, but was the most I dared do given the circumstances. I looked over at Kate and caught her eye in the low light. Desire was all over her face. \n\n\"I'm gonna cum!\" said Kate evenly, and while my heart rate shot up I immediately realized she was speaking for the woman next door, making guttural noise at a level that would rival a plane taking off. Seconds later there was a loud male moan indicating his orgasm, then all of a sudden, silence. \n\nWe lay still for a few moments as though waiting to see if they were really done. \n\n\"Well, that was something else\", Kate finally broke the silence. \n\n\"So now what?\" I asked. \n\n\"I don't know\" Kate answered in a small voice. Her usual bravado and self-confidence was gone and she suddenly seemed very young and unsure of herself. As I caught her eye, she stared back and licked her lips. \n\n\"That was hot\" I offered. \n\n\"Christ, it was so hot.\", she agreed. She shifted again, and suddenly her knees were making a tent in the comforter as she spread her legs further. I continued rubbing the head of my penis, hoping she couldn't tell. The silence was deafeningly awkward. \n\n\"Have you got a boner?\" she finally asked. \n\nI considered lying, but decided she wouldn't have asked if she wasn't okay with whatever the answer was. \"Yes, I do. Are you wet?\" \n\nKate's body shifted slightly and I realized she was checking. Oh God... \"Yes. I'm a little drenched down there. How long has it been since you've gotten laid?\" \n\n\"Since Carolyn\", I responded. \"Over a year. She was my first and only. How about you?\" \n\n\"Just over six months.\" \n\nI was shocked. Apparently her promiscuous phase had really been just an undergrad phase for her. \"What about Kenny?\" I asked. \n\n\"Small town values\", Kate responded with a hint of sarcasm. \"We haven't had sex yet, though Lord knows it's not for lack of trying on my part. It's not like there's a lot of good men up there, so when he asked to be exclusive I figured I wasn't passing up any good alternate opportunities, either for a relationship or for casual sex. Mainly I go through a lot of batteries.\" \n\nI laughed. \"Shut up!\" Kate cried, embarrassed. \"A lady has her needs and there isn't always a suitable gentleman to fulfill them. There are no Phils in Kendall Falls.\" \n\nI did a double-take. \"Excuse me?\" \n\n\"Oh, come on, Phil. Guys like you get taken young and aren't available for girls who are still single in their late twenties. Hell, I probably would have grabbed you myself if it wasn't for Carolyn. I sure tried anyway, but you were always such a gentleman.\" \n\nIf my jaw hadn't been attached it would have landed on the floor, fallen through, and eventually made its way down to bedrock. \"You... you liked me in university?\" \n\n\"Phil, forgive me, but are you really that naive? You never knew I had a crush on you?\" \n\nI moved my mouth, but no words came out. \n\n\"All those times I came to your office hours?\" \n\n\"You were a good student! You wanted to understand the material!\" I responded, defensively. \n\n\"You think I loved petrology that much? You boys are so oblivious! What about all those times I came to your office hours with no bra on?\" Kate's voice was a mix of shock and bemusement as I thought back to all those masturbation sessions I had enjoyed thinking about her pokey nipples. \"I mean I know I don't have a lot of cleavage to show off, but you never noticed I wasn't wearing a bra? Or how I always hugged you as much as possible?\" \n\n\"I guess I definitely noticed...\" I stammered. I decided not to mention the jerking off after her sessions. \"I thought you were just huggy.\" \n\n\"I am huggy\", Kate replied, \"but not that huggy. And I knew you had a long-term girlfriend, and you'd get in trouble with the university if we banged anyway, but still. We had no hot profs in the department, and you had no idea how cute you were. You were so nonchalant and modest and genuine. I had such a schoolgirl crush on you. A bunch of the girls did. The number of times I fantasized about fucking you in your office...\" She sighed. \"Did you know sometimes I wouldn't wear panties under my skirt?\" \n\nMy cock twitched involuntarily. \n\n\"Sometimes I'd get so turned on sitting with you that I couldn't concentrate on the material. And you were so professional, always ignoring my advances and focusing on the fucking lab or whatever. I think I liked the denial a little bit, but God, it was frustrating sometimes.\" \n\n\"We can make up for lost time now\", I offered lamely. In my defense I was still in shock. \n\n\"No, Phil,\" Kate said, with an air of regret. \"There's a reason I haven't been flirting with you tonight like I used to. As much as I want to, and as turned on as I am right now, I'm still in a relationship, and even if I haven't slept with him, I'm not throwing it away for a one night stand. Even if it is the one night stand I've been thinking about for years.\" \n\n\"I had no idea\", I finally offered, lamely. \n\n\"Well, in your defense, it was probably a good thing you didn't. I was a horny and impulsive undergrad with a healthy lack of appreciation for consequences, and you could have gotten in trouble if you'd messed around with me.\" Kate rolled on her side, facing me. In the low light I could almost make out the icy blue eyes, now red-hot with desire. She licked her lips. \"So if you assume we're not fucking, then what now?\" \n\n\"I probably have to cum or I'm not going to sleep\", I responded truthfully. Kate nodded in agreement. \"Overhearing that sex through you is one of the hottest things I've ever experienced. I sometimes get off on voyeurism anyway, but hearing them and you together, my God.\" \n\n\"I'm an exhibitionist, and being naked in this bed with you, my great unrequited undergrad crush, seeing the look on your face when I dropped that towel, overhearing them, and giving you the play-by-play...\" Kate let out a frustrated sigh as I blushed. I hadn't realized I was that obvious in staring at her when she was naked and exposed. \"Let's just say I'm going to have to sleep in the wet spot tonight even though we're not having sex.\" \n\n\"I'll go jerk off in the bathroom, then?\" I offered. \"You can stay here since you're naked.\" \n\n\"I'm going to stay right here and rub one out\", Kate answered, \"and so can you, if you want. We're not touching each other, but I still want to see if that cock matches the one in my old fantasies, and I can justify that in my head that it's not cheating since I'm just rubbing one out, no different from all the other days the last six months.\" \n\n\"All the other days?\" \n\nI could feel Kate blushing even if I couldn't see it. \"Sometimes twice a day. But seriously, if you're not comfortable with this, you've got about ten seconds to get to the bathroom before my poor, neglected pussy can't take the torture anymore and makes the decision for you.\" \n\nI sat up and turned to look at her, and nodded. She sat up and turned on the bedside lamp, and I did the same. She scrambled out from under the covers and leaned back on the headboard, sliding a pillow under her. I moved to my knees and faced her, looking her body up and down. For the first time I could see all of her: her dark nipples standing erect on her small, taut, perfectly proportioned breasts, her flat washboard stomach heaving with every shallow breath, her permanently tanned skin flushed red across her chest. Her toned, muscular legs were spread, and her perfectly hairless pussy, spread open, with dusky dark and compact inner lips, an obviously erect clit just barely peeking out from under a long hooded shaft, and a smear of wetness across her opening. And her beautiful face dripping with sex: cheeks flushed, breathing ragged, and eyes staring lasciviously and shamelessly at the bulge in my shorts. \n\n\"You are beautiful, my God.\", I said breathlessly. \"The reality beats the fantasy.\" \n\nShe grinned, with a mischievous look in her icy blue eyes as she collected wetness from her opening and started lazily stroking circles around the hood of her clit. \"Thank you. Now time for me to get my comparison. Get those fucking shorts off so I can see your cock.\" I must have looked surprised, because Kate blushed and covered her mouth. \n\n\"Sorry. I get aggressive sometimes when I'm horny.\" \n\n\"I like aggressive\", I said. \"It's not something I've had a lot of experience with, but I like it.\" And with that I dropped my shorts. Kate's spectacular blue eyes widened. \n\n\"It's perfect!\", she exclaimed, then instantly covered her mouth with her hand, and blushed again. \"Sorry for...\" \n\n\"Sorry for complimenting me?\" I interrupted. She smiled again. \n\n\"Your cock is one of the nicest I've ever seen. It's like the perfect length, big without being painfully big, and super girthy. And like straight as an arrow.\" She sighed heavily and leaned her hand out, coming within inches of touching it but consciously forcing herself to hold back. \"God damn boyfriend. I want that in me so bad, but rules are rules.\" \n\nWait, I thought, one of the nicest she's ever seen? She'd actually have something to compare it to. I never thought my dick was anything special, but then again, it's not like I'd ever had much of a basis for comparison. Kate stared at it without embarrassment, unconsciously licking her lips as she rubbed herself. I started to stroke. \n\nSuddenly there was another yelp from the next room. Apparently the other couple weren't done. Then, before I knew it, Kate was speaking Finnish, and a surprised female voice on the other side of the wall responded. I could contribute nothing, so I just stared dumbly. Promptly the conversation ended, and I heard the return of a steady rhythmic thumping from next door punctuated by moans. \n\n\"So... what?\" I asked. \n\nKate blushed again. \"I asked if they minded if we joined in. They said they thought it would be hot. They don't have to know we're not fucking, and I'm both a moaner and an exhibitionist.\" She paused, and suddenly looked frightened. \"Are you okay with that? I'm sorry, I should have asked your permission.\" \n\n\"I'm okay with it, as long as you moan in English too.\" \n\n\"Fuck me!\" she yelled in response, as she plunged her middle and ring fingers into her opening. I reached down and began stroking as I moved to a position kneeling between her spread legs. She wrapped them around me, her feet gently touching my butt as I jerked off a few inches above the indecipherable blur of fingers, wetness and pussy below. Kate's moaning was in the universal language of female pleasure, and while moaning wasn't something that came naturally to me, I tried to join in. \n\nI'd like to say we lasted a while, but with all the buildup and the combined 18 months of no sex between us, we both came in an embarrassingly short amount of time. Kate started two-handing her pussy, with fingers on one hand inside and the other a blur her clit, and she screamed and unleashed an incoherent torrent of Finnish and \"goddam fuck shit\" as her vagina erupted. The guy next door made a \"hurrah\" noise in recognition as Kate's toned body stiffened and jolted with her orgasm, her legs clenching against me involuntarily. From the next room, there was a female giggle and the sound of mock applause before the moaning and thumping returned. \n\nAs Kate finally came down, hair in her face, sweat glistening on her limp body, she finally opened her eyes and gave me the most coquettish look I'd ever seen from a woman. \"Are you close?\" \n\n\"Yes\", I grunted. I was. \n\n\"Cum on my tits.\" \n\n\"Are you sure? What about Kenny?\" \n\n\"Don't care. Cum on my tits.\" \n\nI reached out and touched her right breast and tweaked the nipple and I was a goner. My cum pulsed out the end of my shaft and I grunted as the familiar pearly white streaks soon coated her tits. As I collapsed on the bed I noticed I'd hit her left nipple bang on with the largest glob. \n\n\"Bullseye, stud\", Kate grinned, as she took her breast in her mouth and licked it clean. I stared. Carolyn always treated my cum like a biohazard. \"You taste delicious.\" \n\nI took her right hand in mine and licked her two fingers. My mouth and nose were instantly filled with the musky, tangy, delicious fragrance of a woman in heat. I only had Carolyn to compare to, but Kate was slightly different. Sweeter maybe? \"You're delicious too\", I added, lamely. \n\nKate smiled weakly, then got out of bed and disappeared into the bathroom. I took the time to appreciate her firm, perfect naked ass as it walked in front of me. The moans next door intensified, and I could feel my cock starting to stir again. Momentarily the toilet flushed and Kate reappeared. \n\n\"Was that okay? Are you fine with what just happened\" I asked. I wasn't feeling guilty, I was the one who was single, I just hoped she still was fine with everything now that her hormones weren't running her brain. \n\n\"I don't know\", she responded. \"I mean, please don't worry, you didn't do anything wrong. I just... I guess I have some stuff to think about.\" \n\n\"Do you want to talk?\" \n\n\"In the morning. It's nearly two and I think the Finns are about to cum again. Let's get some sleep.\" \n\nKate curled in next to me, wrapping her leg on top of mine. I could feel her breast again pressing into me, and I could still detect heat and wetness against my leg. I kissed her forehead and turned off the lights. Presently I heard the couple next door have their orgasms, and shortly thereafter I drifted off. \n\nI awoke to an unfamiliar weight pressing down on me. As I regained consciousness I tried to roll and realized I was pinned down. I opened my eyes and looked up at Kate, naked, straddling me, an unmistakable look of lust in her sapphire eyes. I looked over at the clock - it was about twenty minutes before the alarm, and the first glow of morning was seeping in through the blinds. I realized Kate's vagina was about level with my waistline, and then realized that I could feel its searing wet heat on my skin. Oh boy. \n\n\"It's morning. Can we talk now?\" she asked. ",
        "\"Is this the best position to talk in?\" \n\n\"No, but that doesn't matter, because it's my favourite position for naughtier things.\" She smiled, shyly. \"You fell asleep within two minutes of lights out. It took me over an hour. Would you like to know what I did with that hour?\" \n\n\"Sure\". \n\n\"So first I freaked out a little about cheating on Kenny. Then I tried to sort through my feelings about him. Then I tried to sort through my feelings about you. Then I started thinking other things about you. Then I got horny and I had to masturbate again. I was kind of trying to wake you up, given that I was still cuddled in with you, but damn, you are a heavy sleeper.\" She rolled her eyes. \"I'm over casual sex, and I've been wanting a long term relationship. Kenny is not perfect for me, he's just the best I've met so fall in Kendall Falls. There aren't a lot of good single men up there. There aren't a lot of good single men anywhere. But I realized last night that one fell into my lap.\" \n\n\"I think you kind of fell into my lap right now, missy.\" \n\n\"Shut it.\" She giggled. \"I spent years of my undergrad fantasizing about you. I wanted you all the way through, even though I knew I couldn't have you. You were the one that got away for me. And I know our relationship now, if we had one, would be ultra long distance. BC to Northern Ontario isn't something to take on lightly. But I meet so few good men that I'm willing to try to make it work. And even if you're not interested in a relationship with me, I still want to fuck you this morning, if you'll let me.\" My cock had stirred to enough life that it poked her in the butt at that moment, as if on cue. She looked around and then grinned at me. \"That. I want that inside me. May I have it? Please?\" \n\n\"What about Kenny?\" \n\n\"He's not the one. I'm prepared to throw that away for this one night stand, let alone if it turns into more than that. If there is even one single man like you around, there will be others. But we can talk about what this all means later. For right now, I just want that in here.\" She leaned back and started gently rubbing up and down her opening. \n\nI grinned at the unexpectedness of all of this. This just didn't happen to guys like me. I looked up at Kate's body, her tits poking proudly outwards, face and chest flushed bright red again, and an incredible look on her face that was pure unrequited desire, with years of tension and buildup behind it. She started slowly grinding her clit against me in impatient frustration, waiting for my answer, and I could feel her molten core drip onto my stomach. \n\n\"Fuck me, Kate\". \n\nKate reached down and grabbed my manhood, stroking it a few times to bring it to full erection. She then pressed the head up against her opening, and in one swift motion, brought her weight onto me. As I slid in without resistance her I could feel intense radioactive heat surrounding me, hotter than I'd ever felt Carolyn. Fuuuuuuuck, I thought, that's good. \n\nKate, still in the cowgirl position, started slowly, gently, expertly rocking on top of me, grinding her clit against my pubic bone and staring down at me full of desire. All of a sudden she got a strange look on her face and blurted, \"Oh, fuck!\" and immediately brought her body down, pressing against mine. I felt her quiver and her full body shake, and noticed her holding her breath. Presently she exhaled, one long sighing breath right in my ear. She finally pulled up, staring down at me, a look of intense embarrassment on her face. \n\n\"Did you just cum?\" I asked. \n\n\"That... doesn't usually happen with a partner\", she responded, still out of breath. \"God, I'm such a teenage boy. I'm so embarrassed.\" She covered her face with her hands. \n\nI sat up, still inside her, and pulled her close to me, the two of us embracing on the bed with her in my lap. \"It's okay, it happens to every girl sometimes\", I teased. \n\n\"Fuck you!\" she replied, hitting me playfully, more out of embarrassment than anger. She pulled back and looked at me. \"When I was first discovering masturbation as a teenager I had such a short fuse. I would usually cum in under a minute, just like a boy could. I eventually learned how to draw it out, but sometimes it still sneaks up on me when I'm really horny. When I've had like ten years of building it up, apparently.\" \n\nShe disengaged herself from me and I could feel her womanhood gently release its prey as she pulled back. \"We'll come back to that in a second\", she promised. She reached out and pushed me back down to the bed so I was lying flat, and then, maintaining solid eye contact, slowly slunk her body down and took my dick in her hands. Her eyes roamed admiringly up and down my cock, still slick with her juices. \"I used to fantasize about doing this, too. It's amazing the reality matches the fantasy. Your cock is spectacular.\" \n\nSpectacular? What constitutes spectacular? \n\nWith that, she started at the base, took one long, firm lick from base to tip, and then took me into her mouth, and all conscious thought disappeared. \n\nIt was, in essence, my first blowjob by someone who knew what they were doing. Carolyn only went down on me sparingly, and we were each other's firsts, so I had no idea how to teach her a skill she really didn't seem interested in learning. I had spent years feeling like I hadn't understood why other guys talked about blowjobs so lovingly. All of a sudden, now, I understood. Kate was a whirling dervish of tongue and lips expertly swirling around the head and underside as her hand jerked me off, plus those eyes, staring up at me with unbreaking contact. There was no reluctance in her at all - this was a girl possessed by finally getting to have something she'd been wanting for years, and determined to take it all in. I lay back, ran my fingers through her hair, and enjoyed. \n\nFaster than I thought possible in my sleepy state, I could feel the familiar stirrings of an orgasm building. I pressed down gently on her head, enough to get her to stop, and she looked up and me and grinned, still slowly stroking. \"How am I doing?\" \n\n\"If you want it inside you again you're going to have to stop that.\" I glanced at the clock. \"We don't have enough time for me to recharge if I cum now.\" \n\n\"Damn you men and your refractory periods\", Kate whined. \"You mean I have to choose between having your cum in my mouth and my pussy? I can't have both?\" \n\nKate's words and ministrations were still sending me careening towards the edge, and I could feel the orgasm rapidly approaching even with her diminished movements on my dick I stopped her, sat up, and flipped her off me onto her back, a little rougher than I had intended to. I was about to apologize when she looked up with lust and appreciation. \"More of that, please, sir.\" I grinned as I looked down at her - she was obviously a bit of a submissive. \n\nKate spread her legs, and for the first time I got a really good look at her pussy. She was waxed smooth, with neat, darkly pink inner labia spread open slightly, obvious wetness coating her lips and inner thighs. Her clit was long and thin, the shaft prominently stiff at the top of her opening, leading to a tiny button poking out from under its hood. I bent down to go down on her, but she stopped me. \n\n\"No, I'm already too close to another O and we're out of time. Next time you can eat me all you like, but for now, please just fuck me senseless.\" \n\nI slid in without resistance, once again feeling her boiling wetness envelop me. Kate moaned and grimaced slightly. \n\n\"You okay?\" \n\n\"Better than okay\", she responded. \"It's just been six months and I'm not used to a cock as big as yours. Give me a sec.\" \n\nWait, what? As big as mine? It's not like I've seen a lot of other dudes with boners, but... \n\nKate interrupted my thoughts by spreading her legs wide, placing one ankle on my shoulder and the other leg hanging off the bed. She reached down and started to rub circles on her clit. \"Okay, fuck me, stud.\" \n\nI started pumping inside her as she rubbed, and I watched her glowing body writhe and squirm and moan in pleasure. Her tiny tits bounced in rhythm as I tweaked and rubbed her diamond-hard nipples. Her moaning was now constant, just an incoherent stream of pleasure. \n\nI could feel myself getting close to an orgasm again and slowed down, bringing a grunt of frustration from her. \n\n\"Fuck me!\" she ordered. \n\n\"I'm going to cum if I keep going\", I replied. \n\n\"In that case,\" she responded as she sat up, \"fuck me from behind and I'll cum with you\". \n\nKate rolled over and assumed the position, and I could see her glistening vagina beckoning from between her legs. I grabbed hold of her tight, muscular ass and slid in once again, slowly moving in and out, going as fast as I dared as her hot sheath tried to push me over the edge. I could detect her fingers working their magic on her clit, occasionally bumping into my shaft in her desperation to cum. \n\nI reached out to move her hair, which was lying across her back. As I touched it, she yelped \"yeah, pull it!\" I grabbed hard and she cried out in pleasure. The ministrations below my dick intensified, and shortly I felt her pussy contract around me as the orgasm tore through her, incomprehensible moans filling the room. I was close and started pounding hard, and within seconds I felt the familiar pulsating as I filled her with semen. \n\nI eased up the pressure on her hair and slowly slid out of her as I softened. Kate collapsed in a heap on the bed with her legs spread wide, and I could see her gaping pussy still twitching slightly. Finally she rolled over, and as she did so the bedside alarm went off. I quickly moved to grab it. \n\n\"That was as good as I'd hoped, but we really need to get moving. Can I have the shower first?\" \n\n\"Sure\". \n\n\"Thanks, you're a sweetheart.\" She sat up and kissed me, soft, tender, warm. I suddenly realized that it was our first kiss. \n\nMomentarily I heard the toilet flush, and then Kate reappeared, still nude. \n\n\"I know we have no time but I'm still horny as fuck, and I've got to be functional at the conference today. You have one more quickie in you?\" \n\nI glanced down at my soft cock, still oversensitive and used up. \"Give me twenty minutes and probably, but we don't have that.\" \n\n\"Come with me, then\", she replied, turning and walking into the bathroom. \n\nAs I moved into the bathroom I saw Kate bent over, her butt sticking out invitingly. She turned the water on in the tiny hotel shower and then turned to me. \"If we shower together that'll save five minutes and that's all I need.\" \n\nShe stepped into the shower and grabbed the detachable showerhead. \"Every girl's best friend\", she grinned. \"It won't take me long.\" She kneeled down in the shower and aimed the spray at her clit, noticeably shuddering as the hot jet made contact. \"Touch me everywhere\", she commanded. \n\nI climbed into the shower and knelt behind her, and I started kissing her neck and ears as she moaned in appreciation. I grabbed both breasts from behind, rubbing and tweaking her hard nipples and cupping her. \n\nPresently Kate grunted again and grabbed my right hand with her free one, forcibly pulling it down to her cunt. \"Finger me while I fuck the water\", she commanded. \n\nI curved two fingers up past the spray and found her opening, and drove inside with no resistance. She was on fire again inside, and I marvelled again at the difference between two women's bodies. Carolyn had been angular inside with a prominent pubic bone and g-spot, but Kate was all soft folds, a noticeable contrast with her hard, toned body. \n\nI probably could have kept ruminating on female bodies for a while like the gigantic nerd I ultimately still was, but I was interrupted by a frantic rhythmic pulsating of pressure on my fingers as Kate climaxed out of nowhere. Her body quivered and shook again as the water pressure sent her over the edge. While her moaning before had been feminine and exhibitionist, the grunts she made this time were the unmistakeable unladylike sounds of a woman committed only to climaxing as hard and as quickly as possible, not caring what she looked or sounded like. \n\nAs Kate came down she leaned back, jelly against my body, and dropped the showerhead, spraying both of us unexpectedly. I quickly grabbed it and ran the water over her hair, wetting it, and kissed her forehead as I looked down at her wet nude body splayed in front of me, utterly spent. The sky blue eyes made contact with mine, and the look was unmistakeable, no longer lust, but something deeper, something with real feeling behind it. \n\n\"Thank you for one more lovely moment spent together\", Kate said weakly. \n\n\"Thank you for the same, this was certainly... unexpected\", I responded. \n\n\"For me too. But I'm glad I met up with you again. Even if this is the end.\" \n\n\"Well, for what it's worth...\" I said, \"I'm willing to try to make this work, even over long distance. We'll get really good at Skype sex and see each other when we can. But this feels right. I'd be a fool to push you away now. Let's give it a shot.\" \n\nKate smiled and kissed me. \"Sounds great. Now let's fucking motor!\" \n\n***** \n\nAfter a quick Canadian breakfast of coffee and doughnuts we caught the subway and were back at the convention on time, barely. I wish I could say we hooked up again the next night, but I had actual business in the hospitality suites in the evenings, and with Kate not about to wear the same outfit three days in a row, she called it a night early and went home to her family. The day after that, the conference closed and after a quick lunch together, I flew back alone to the West Coast. \n\nSo that's where the story closes for now... I'm working on a report on Flagstone for my boss and all I can think about is their junior geologist waiting for me on Skype once I finish."
    ],
    "authorname": "thatsbogus",
    "tags": [
        "exhibitionist",
        "voyeur",
        "college",
        "hotel sex",
        "masturbation",
        "swimmer",
        "overheard sex",
        "loud sex",
        "old friends",
        "teaching assistant"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/cummingtonite"
}