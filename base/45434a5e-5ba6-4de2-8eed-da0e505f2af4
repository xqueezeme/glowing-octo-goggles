{
    "title": "Parts of Desire Ch. 06",
    "pages": [
        "This is the final chapter of Parts of Desire, and the longest. Once again, I am deeply indebted to Ravenna933 for her edits and her ideas which made this entire story stronger. \n\nIt was in a state of naked, harmonious, postcoital bliss that Rania, Khadija and I packed up our campsite on the sheltered cliffside beach on the Musandam Peninsula in the Sultanate of Oman. The previous day's disagreements behind us, we worked in happy silence, rolling up our sleeping bags, packing away what was left of our food, and stowing gear in the back of our rented Toyota Land Cruiser.\n\nFinally, with the car loaded, the three of us turned to face each other.\n\n\"I feel like we have so much to talk about\", Khadija started, \"but for now all I want to do is stay naked. It's so freeing just existing in this state of mind, after a lifetime of feeling like my body was something to hide. I have tried so hard to overcome the cultural messages I was raised with, but a week of living as a free spirit has been worth more than a lifetime of theory. I've never been so happy.\"\n\nRania gave her a hug. \"It's been good for all of us. I changed, so much, after living in Canada. I hope you can have that too, at least in your own way.\"\n\nWith that, the girls and I dove into our suitcases and started dressing. Our own secluded rocky piece of paradise was its own world, but we were still in the Middle East, in a country that had certain rules of decorum about modesty. I'd been promised hiking for the second half of our Musandam day, and the girls kitted out in sports bras and workout gear under their ever-present abeyas and headscarves, while I opted for my field pants, hiking boots, a long-sleeved workout shirt and a wide-brimmed hat to prevent sunburn.\n\nRania looked me up and down, approvingly, as I dressed. \"I don't think I realized just how tanned you've gotten this week\", she commented. \"I only ever got to see you pale from the winter. Your colour is sexy.\"\n\n\"Why, thank you\", I answered. \"I'm going to make all my friends and coworkers jealous. None of them had any idea why I wanted to come here; they thought of the Middle East as dangerous or something. I hope that coming back tanned, with the pictures I have of this amazing place, can at least convince some people to ignore the stereotypes and discover the truth.\"\n\n\"Saudi Arabia is more like the stereotypes than Oman\", Khadija observed. \"But we're not all like the reputation, as you know.\"\n\nWith the 4x4 packed up, I took one last look at our perfect beach, now beautifully illuminated in mid-morning sunshine. \"This place will be another one that will hold such wonderful memories for me.\"\n\n\"For all of us\", Khadija said, thinking. \"I know what I said about virginity, blah, blah, blah. But on some level, this will always be the place I lost it. Someday I'll have to bring my husband back here.\"\n\nI started the engine, and we negotiated the terrifying cliffside road back up to the main road. In daylight the drive was far more frightening at night, now that we could see just how far down the drop was, and how close to the edge we'd been at times. We'd been foolish even attempting to drive down the incline at night, but in the end, it had been worth it to have total privacy.\n\nAs we hit the main road again, for the first time I got a sense of the landscape of the Musandam peninsula. It was a rugged country of massive mountains plunging into pristine blue seas. It reminded me of pictures I'd seen of the fjords in Norway, except without a trace of greenery. The rocky brown and grey peaks towered over us as I navigated up and down the undulating region. It wasn't a long drive back to Khasab, but it still took us time over the slow and winding roads.\n\nWhen we hit Khasab, we bought a picnic lunch which we packed away, then Khadija directed me around the harbour and into the interior, following her brother's directions towards our hike. After a momentous drive, we finally reached a tiny parking lot with a few cars in it, and a trail heading what looked like a sheer vertical up the mountain.\n\nKhadija let out a low whistle. \"This is the hike?\" she asked to no one in particular.\n\nWe gathered our gear and headed out.\n\nNinety minutes later, we stood at the summit, sweaty and exhausted. The view below us in 360 degrees was as jaw-droppingly beautiful as any place I'd ever been in my life, with cragged, muscular peaks and plummeting canyons stretching in in every direction and leading down to a cobalt blue ocean. A fjord meandered up towards us as we overlooked it, sheer rock walls plunging a thousand feet straight down from summit to sea level.\n\nIt was the most incredible sight yet on a trip full of them, and yet as the three of us posed for pictures on the summit and then ate lunch, I was overcome with a profound sense of sadness. We were done sightseeing. We still had a day left after today, and Rania and I still had one more night together. But after that, the trip would be over.\n\nThe three of us trudged back to the car and arrived hot and sweaty in the mid-afternoon sun. I blasted the air conditioning as we drove back towards Khasab and our reservation on the ferry.\n\nKhasab in daylight wasn't anything more impressive than it had been in darkness. It was a fishing village laid out in a gap in the fjords; a small cluster of Arabian-style buildings and docks for the ferry and cargo ships. We parked in the queue for the ferry and remained in the air-conditioned car, waiting. It was the hottest day we'd yet had, so going out in the elements seemed unnecessary.\n\n\"People here fish, mostly?\" I asked innocently, making conversation. Khadija and Rania exchanged a knowing look.\n\n\"They smuggle\", Rania finally answered, quietly. \"You know how Iran has been under a trade embargo for a long time because of their government?\"\n\nI had.\n\n\"Well\", she continued, \"Khasab is just remote enough, not just from any other population centres, but also from the Royal Oman Police. There's a border between here and the rest of the country, there's not much violent crime up here, and we all think the embargo is unjust anyway, so the police kind of turn a blind eye to it. Either that, or everyone in town has ten refrigerators apiece.\" She grinned.\n\nI wracked my brain through the complicated politics of Islam, trying to pull out a piece I knew was in there somewhere. \"Aren't Iranians mostly Shi'a?\"\n\n\"You bet\", Khadija answered. \"It's complicated.\"\n\nI gestured at the ferry, still shut and waiting for boarding. \"We have some time.\"\n\nKhadija nodded. \"Going over the entire history of Islam would be unnecessary, but you know Sunnis like us and Shi'as don't get along. The split dates back fifteen hundred years, to the days immediately after the prophet died; his followers split in two on the question of whom to look to for leadership, among other things. There's no love lost between Iran and Saudi Arabia, but Oman, being neither Sunni nor Shi'a, keeps their heads down and tries, mostly successfully, to get along with everyone. Also, if there's one thing all Arabs can agree on, it's not to let something like religion get in the way of a business opportunity.\"\n\nShe took a breath, thinking. \"Judaism sees itself as the one true religion. It was the first one to believe in one god, not many gods. Christianity sees itself as having taken the building blocks that the Jews started with and perfected it through Jesus Christ. Christianity is not in opposition to Judaism, at least according to the Christians. They see themselves as following a more complete and more developed form of the same religion. Muslims see Christians and Jews in the same way that Christians see Jews. We believe that Abraham was a true prophet of God. So was Moses, so was Jesus, and so was Mohammed. We use the term ahl al-kitab to describe the three monotheistic religions -- it means \"People of the Book\". Whether a person is any form of Jewish, any form of Christian, or any form of Muslim doesn't matter. We are all brothers and sisters, worshipping the same God.\"\n\n\"Ryan, do you know what Allah means in Arabic?\" Rania interjected.\n\n\"God?\" I guessed.\n\n\"Yes\", she responded, \"but there's more to it. It's a short form of al-Ilah, which means 'The God'. As distinguished from the previous religions with many gods. Our God is the same God as the Christian and Jewish gods, whether one calls Him Allah, God, Jehovah, or Dios. It's the same in any language.\"\n\n\"So how does this result in there being smugglers in Khasab?\"\n\nRania punched my arm. \"It's a long-winded way of saying that in spite of our differences, we are all people, and Persians are our brothers and sisters too. The embargo hurts the ordinary people on the ground more than the government. People here see a business opportunity shipping appliances and food and stuff across the Gulf, and it's not like there's a lot of other money-making opportunities here. The Omani government quietly tolerates it in order to maintain good relations with Iran, and to make a profit.\"\n\nThe ferry's whistle suddenly pierced the quiet, and our conversation petered out as I shunted the car up onto the car deck. For the second time in two days, we were aboard the coastal catamaran, but unlike the trip yesterday, the ship was almost empty.\n\n\"Why is it almost empty this time?\" I asked.\n\nKhadija shrugged. \"My guess is that the people yesterday were native Musandamites going home for the weekend. Thursday night is the start of the weekend, and a lot of them work in Muscat during the week. Tomorrow is still weekend, so they wouldn't need to go back until then. Our work week is Sunday through Thursday, obviously.\"\n\nAs the ship departed to three toots of the whistle and threaded the needle of the harbour entrance out into the Gulf of Oman, the wind stayed calm. Unlike the choppy seas yesterday, this time the sea was flat and easy, and the catamaran's motion was relatively stable. The sun was still burning hot, and the gentle sea breeze was lovely on my skin.\n\nI turned to Khadija. \"How are you doing with the seasickness?\"\n\n\"Much better. I think I'll be fine with the waves so calm. I'd never been seasick before, but yesterday was pretty rough.\" She faced us. \"Rania said you two needed some time alone to talk. I'm going to go read inside. Come find me if you need me.\"\n\nShe disappeared inside the ship as Rania and I found two chaises longues and sat on deck in the shade. The ship's deck was empty, and the few tourists onboard were staying in the air conditioning. As we sat, I turned to her.\n\n\"We have so much to say to each other, again\", I began.\n\n\"We do\", she answered.\n\n\"How are you doing?\"\n\n\"I'm really good. I think we're safe to talk here, but we need to keep an eye out for eavesdroppers and interruptions.\" She paused, thinking. \"How are you?\"\n\n\"I'm good too. We need to talk about the last few days.\"\n\n\"Oh my God, yes we do\", she gushed. \"Before we say anything else, I need you to know that I regret nothing.\"\n\n\"Neither do I\", I smiled. We stared at each other, the knowledge of our past few days of hooking up passing mentally between us, and Rania shivered as she shyly smiled.\n\n\"I'm just going to start\", she said finally. \"Sex is so much better than I ever dreamed it would be. My first time was so romantic, so hot, so much fun. I fulfilled a lifelong fantasy with my wonderful boyfriend and I am going to remember that moment for the rest of my life.\n\n\"I've been fantasizing about my first time since I was a teenager. Khadija sometimes used to say I was too much of a romantic, or that I was attaching too much meaning to putting two body parts together. But I don't agree with her, and that night in the desert proved me right, as far as I'm concerned. It was everything I could have dreamed about -- slow, romantic, comfortable. You took such good care of me and made me the happiest woman in Arabia. Even though we've had slow, romantic times before, it wasn't like this. It made me feel so loved, so lucky, and so happy to have found you.\n\n\"Everything about our pairing is unlikely, and I still have to pinch myself sometimes to believe that we're really here, on a ship on the Gulf of Oman. We're a million miles and a million years away from that cold night in Canada when we first got together. This entire week has been a dream for me.\"\n\nI gave her a hug, which made her jump slightly before she remembered we were alone. She leaned into my embrace and sighed with pleasure.\n\nAt length we finally broke apart. \"How about you?\" she asked.\n\n\"You've heard the story of my first time before\", I began. \"I'm honestly a little jealous that you got this for yours. It was the best night of my life. I've been fantasizing about making love with you for over a year, and I never expected it to happen. It was perfect. Even flying here, I didn't expect to go all the way, because of your fianc\u00e9.\"\n\n\"I'm sorry-- \"\n\n\"I've accepted your apology\", I continued. \"I've forgiven you. I'm just explaining my mindset flying here to see you. I had no idea what I was getting myself into in terms of the country, the culture, or seeing you again. I was just, I don't know, compelled to come. I needed to see you again. Even if all we did was have dinner somewhere I still think it would have been worth it. I needed closure on last year and this was how to do it. Everything else is a bonus.\"\n\n\"I love you, Ryan.\"\n\n\"I love you too.\" I paused, staring into my girlfriend's soul through her brown eyes. \"Should we talk about the future?\"\n\nRania's face fell. \"Tomorrow night. For now, we'll just pretend this week is going to go on forever.\"\n\n\"It's a deal\", I said. \"But I need to know one thing. You're really okay with having lost your virginity, in case the world won't let us be together forever?\"\n\n\"I have to believe in us\", she answered. \"But yes, I have given that question some thought over the past year. Virginity checks aren't something that happens in my world, and my hymen was broken accidentally years ago anyway. But the conclusion I came to back when I thought this over is that if we stay together, then it's obviously not a problem. If someday I wind up married to someone else, you've given me a model for the kind of man I want to be with. Would you care if I were a virgin?\"\n\n\"Of course not.\"\n\n\"The man I marry won't either. Because if he did, I wouldn't be marrying him. QED.\" She grinned ear-to-ear.\n\n\"Funny, I have exactly the same attitude\", I observed. \"We've talked about emotions, but how was sex physically for you?\"\n\nRania let out a low growl. \"Oh, my God. Do you know how close we got to sex all those times when we couldn't? Do you know how much of a tease that was? Do you know how many times I replayed those scenes in my head, pretending we went all the way as I rubbed my clit over the past year?\"\n\n\"Probably about the same amount as I jerked off\", I mused.\n\n\"I had convinced myself that sex was going to be better. I knew it had to be. But I didn't know how much better. It was an entirely new world of pleasure. I had no idea I could fit something so big inside me, or that it would feel so good. I felt connected to you in every way, it was like our minds and emotions and hearts were joined through our privates. And the feeling of cumming with you inside me, and then having you fill me up...\" She shivered at the thought of it.\n\n\"It was good, eh?\"\n\nHow was it for you?\" she asked.\n\n\"Unbelievable. You were so wet, so tight. You felt so good. I'm never going to forget that first moment I was inside you, I could feel you compressing and bearing down from every angle. It was so hot inside you. It was so hard not cumming right away. And, I mean, I don't usually have that problem.\"\n\n\"I'm glad you liked it.\" Rania shifted, spreading her legs, and exhaled deeply.\n\n\"Are you getting turned on?\" I asked.\n\nShe blushed. \"I can't help it!\"\n\n\"Even after this morning? I've never seen you so drained after sex\", I smiled at the memory.\n\n\"Oh my God, this morning...\" Rania bit her lip. \"I'd never been so turned on in my life. Being naked, outdoors, with both of my lovers, having sex in the wild, feeling like I could make as much noise as I wanted. It was animalistic. I've never felt that out of control. It was an out of body experience, almost. Sex from behind is so good. Watching you fucking Khadija was the hottest thing, too.\"\n\n\"No regrets, then?\"\n\n\"None.\" She paused. \"You were okay with having both of us together this morning?\"\n\n\"Yeah, of course, it was intensely hot\", I answered. \"I trust both of you. You were both into it. I'd never had a threesome before, and I've kind of always wanted to, though I never expected I ever would. And you were both totally out of control. It was so hot being the centre of attention.\"\n\n\"I loved watching her fuck you\", Rania said breathily. \"Maybe I'll feel jealous later, I don't know. I feel like my brain is trying to tell me I should feel jealous. But I'm sick to death of feeling like I should feel things I'm not actually feeling. I'm trying to just be true to me, now, and this entire trip has felt right. Even our fight yesterday felt normal. Like any relationship would have. We disagree sometimes, but we still love each other.\"\n\n\"How's Khadija? Did you talk to her?\" I asked.\n\n\"Yeah, a little while hiking\", she answered. \"I'm pretty sure she wants to have sex with you one more time. I mean, getting to have something that you've been dreaming about forever and then being told you can only have it once kind of sucks. I get that. I'm feeling possessive of you, but if she asks nicely, and if you want to, I'll probably say yes. Not one-on-one, I want to be there. I'm not letting you out of my sight again until we get to the airport. And no matter what happens, only I get to sleep with you tonight. We've got two rooms booked and she's going to be sleeping in the other one. The last big thing I've got on my bucket list for this trip is to make love to you in a luxurious hotel room and then drift off to sleep in your arms.\"\n\n\"You're fine with that happening? I don't care, I just need to make sure I understand the ground rules\", I said cautiously.\n\n\"You can't do anything with her unless I'm there\", Rania answered. \"If I'm there, well, we'll see how the day goes. My heart wants you to myself. But my vagina kind of wants another threesome.\"\n\n\"We'll play it by ear, then, and no matter what happens I'm going to make sure that you're the focus of my attention for the rest of the trip\", I answered. \"If she and you both want for all of us to get together again, sure. I'm sure it would be fun. But the romantic stuff is for you and I alone.\"\n\n\"What are you thinking about right now?\" she asked. \"You look deep in thought.\"\n\n\"I'm just reflecting on how unlikely our entire story has been\", I said. \"I'm thinking back to the scared, exhausted young woman that knocked on my door last year, and how awkward it was living together at first, when you wouldn't even go shower or use the toilet without having all the Islamic clothing on for the walk between your room and the bathroom. Having you there made me feel so uncomfortable in my own apartment.\"\n\n\"Sorry.\" She shrugged.\n\n\"Not your fault. I can hardly believe that woman is the same person that's sitting here with me now. I can hardly believe how different the reality of you was from the mental image that I had of you, and by extension, of all Muslim women. If you and Khadija are the way you are, then there must be more. Beneath the headscarves you're all just people, and I really regret that it took me meeting you to realize that. It's also sad you all have to pretend to be something you're not.\" I paused. \"What are you thinking about?\"\n\n\"I had been thinking about what it would be like for you to fuck me from behind against the railing over there, overlooking the sea\", Rania answered lustily. \"But that's so profound of you to say something like that, and so I'm trying to keep focused.\"",
        "\"You're something else, my love.\"\n\n\"I love you too.\" She shivered. \"We need to stop talking about sex or I'll have to go rub one out in the bathroom. And I'd really rather save that for you tonight. We haven't tried girl on top yet.\" She winked, then looked around, confirming we were still alone. She leaned over and nibbled my ear and put her hand between my legs, confirming to herself if she could feel any hardness. As I swelled up under her fingertips she cooed in pleasure.\n\n\"This is dangerous\", I observed.\n\n\"It's kind of fun being the bad girl from time to time\", she giggled in response.\n\nI stood up. \"We've gotten away with a lot this trip. Let's not get arrested in the next few hours.\"\n\n\"I still feel so out of control\", Rania answered. \"I'm actually scaring myself a little. I've never felt before like my hormones were this in charge of my decisions. You've awakened the sex goddess inside me and it's all I can think about.\"\n\n\"We'll have tonight\", I promised, \"and tomorrow morning.\"\n\n\"And tomorrow afternoon?\" she begged.\n\n\"We don't have to leave the hotel room.\" I took her by the hand. \"Let's go find Khadija.\"\n\nWe went inside the ship, the blast of the air conditioning chilling the sweat clinging to my body, making me immediately cold. Khadija was curled up in a chair with a book open. The lounge wasn't anywhere near full, but there was a small group of white tourists nearby speaking with Irish accents.\n\n\"Hello, lovers\", she opened. \"Get everything sorted out?\"\n\n\"We did\", Rania answered. \"We'll chat in the car. Too many people around.\"\n\nWe spent the next few hours at sea playing cards, drinking tea, and making small talk. After our disagreements the previous day, it was nice to just spend time together again as friends. The ship was solid and stable in the calm seas, and Khadija's seasickness as nowhere to be seen. At supper time we ate in the cafeteria. After dinner the sun set, and it was a black, humid, starry night into which we emerged as the lights of Shinas appeared off the starboard bow.\n\nAfter we docked, I drove off the ship through the familiar small town, and eventually we made our way onto the highway and headed back towards Muscat. The traffic was light, the roads clear and well-lit, and I was feeling recharged for the drive. Khadija had joined me up front, with Rania in the back.\n\n\"So how far is it? What's this place we're going to?\"\n\n\"It's called the Barr al Jissah Resort and Spa\", Khadija answered. \"It's not quite three hours or so to Muscat, and the resort is on the far side, about 20 minutes east of downtown. It's more expensive than we'd normally be able to afford, but our parents are paying for the one room as part of our graduation gift. They just don't know we booked a second one. We'll split that cost three ways and it won't be that much. It looks beautiful. It's a five-star resort right on the ocean.\"\n\n\"It's a little over three hours driving? We'll be there around 10:30 then\", I said. \"We could all use a shower and a comfortable bed. Between the salt water and today being so hot and sweaty, I feel like Lot's wife.\"\n\nRania groaned. \"You're supposed to be nonreligious.\"\n\n\"I thought it was funny\", Khadija smiled.\n\n\"So, how are you?\" I asked her.\n\n\"I guess we should sort that out, huh\", she mused.\n\n\"Did the reality of sex with a man live up to the fantasy?\"\n\n\"It was better.\" She shivered slightly. \"It felt so good. You were so hard inside me, but still soft enough not to hurt, and you were hitting parts of me I didn't realize existed. It was so full, and having an orgasm with you all the way inside? Oh my God. I didn't know it was possible to feel like that.\"\n\nRania grinned. \"What did I tell you?\"\n\nKhadija ignored her. \"It was also amazing, the whole setting. The beach. The sun, the water, the fact you both were there. I don't imagine many girls have their first hetero sex in a threesome, but for me it just felt right. I really like both of you. It felt like it was meant to be. The only regret is that it's over already.\" She shot me a plaintive look.\n\n\"It might not have to be\", Rania volunteered.\n\nYou know I'd love to, but I'm not pressuring you two to include me on your last day together.\" Khadija sounded cautiously hopeful.\n\n\"Tonight is just for us, and you can sleep in your own room. But we'll see what tomorrow brings.\" Rania winked.\n\n\"No pressure, and you can change your mind if you want to\", Khadija answered. \"But I'd be up for it if you two were.\" She sighed, clearly mentally drifting a little through pleasant memories.\n\n\"Did having a cock in you change you as a person?\" Rania prodded.\n\n\"I'm still figuring that out\", Khadija answered. \"Don't get me wrong, my politics haven't changed. I don't want to think of this morning as being this big, profound, life-changing event. I've been having sex since I was a teenager, you're just a new partner. I keep telling myself that.\"\n\n\"And yet...\" I prodded.\n\n\"And yet it really was different\", she said. \"I'm still figuring out how and why. But it's like you got inside me and it just... fit. Like sex made sense. Don't get me wrong, I've had some really hot sex with my girlfriends. But women are so soft, and you were so hard. It was a totally new sensation...\" She trailed off again, thinking.\n\n\"For me, I guess it's like men and women are supposed to be together for making babies\", Rania offered. \"A penis and a vagina just fit together.\"\n\n\"Exactly.\" Khadija sighed. \"Having you inside felt like it fit me, like fingers and my hairbrush handle don't in the same way. Like your penis is shaped like the inside of my vagina, and it belongs in there.\"\n\n\"I think it's shaped more like mine than yours\", Rania shot back. She rumpled Khadija's headscarf from behind.\n\n\"I'm never going to get used to having two pretty girls fighting over me\", I said incredulously.\n\n\"I don't want all of you, Ryan\", Khadija retorted. \"Rania can have your heart. She loves you, and you love her. I'm not in love.\"\n\n\"Have you ever been in love with anyone?\" I asked, before I could stop myself. Shit shit shit, I thought to myself. I might have just stepped on a landmine.\n\nA loaded silence hung over the car.\n\nFinally, Khadija broke the silence. \"Yes, I have.\"\n\n\"You don't have to talk about it...\" I started.\n\n\"It's okay, Ryan, if I can't talk to my best friend and her boyfriend about it then I can't talk to anyone.\" Khadija took a deep breath. \"I've never said a word about this to anyone. In high school I was in love with my friend Yasmin. We were as close as two friends could have been. We started hooking up and kept it up until we went to different universities. And I had feelings for her. I don't have any experience with being in love, but the way I felt about her is something I haven't felt before. Or since. And I really believe that it was love I was feeling. The way you two talk about each other is how I felt about her.\"\n\n\"You've never told me this\", Rania said, surprised.\n\n\"I know our culture kind of turns a blind eye to two women having sex, as long as it's behind closed doors\", Khadija said. \"But actually being gay is another thing entirely. You can be imprisoned, or worse. I never thought I would tell anyone. I never told Yasmin how I felt about her. I have no idea if she felt the same about me, though I think she did. But I trust both of you. Ryan, I know lesbian relationships are legal in Canada, and I have no reason to think you'll judge me. I'm trying to adopt that as my mindset and overcome what I've been told about gay and lesbian people. And Rania, if you tell anyone, you're going to prison with me. Slut.\" She grinned.\n\n\"Do you think you're a lesbian?\" I asked.\n\n\"No.\" Khadija bit her lip nervously. \"I loved having sex with you this morning. I've had sexual and romantic fantasies about men and women both for as long as I can remember. I'm pretty sure I'm bisexual. I've never been in love with a man, but it's not like I've ever had the chance to. I've never even had a male friend before this week, apart from in childhood, and back then boys were icky anyway.\"\n\nRania unbuckled her seatbelt and leaned forward, enveloping her friend in a hug. \"Khadija, I've suspected this for years. I'm so happy you've decided to come out. You're my best friend, and I love you, and this isn't going to change anything between us.\"\n\n\"I love you too.\" Khadija wiped a tear away. \"I never thought for a minute you wouldn't accept me for who I was. I know you're not a judgmental person. But I don't know that I was up front with myself about it until this week. Seeing the two of you, acting so free with each other, acting like a couple in love and completely head over heels for each other, made me realize that I had felt that before. I finally accepted it for myself just today, on the hike, I was thinking about it and I realized that this is the real me.\n\n\"The other half of that is that we do hook up, and I'd like that to continue. I think I was worried it might ruin our friendship if you thought it might mean more to me than just sex.\"\n\n\"Does it?\" Rania asked.\n\nKhadija sat in silence for a long time. I dared not interrupt, and I forced myself to focus on the road.\n\nFinally, she took a deep breath. Her voice was shaky. \"I don't love you the same way I loved Yasmin. She was special to me. I thought about her all the time. I wrote her these long love letters in my diary that I'd burn after writing them. I think of you as a really close friend first and foremost. But I am attracted to you. You've told me many times that our having sex is just stress relief, an alternative to getting yourself off. It is more to me than that. I think you're beautiful, sexy, wonderful, and you turn me on. I fantasize about you when we're apart. I hope that's okay.\" She paused. \"I'm terrified I just ruined our friendship.\" She looked on the verge of a panic attack.\n\n\"Khadija, I love you as a friend. I don't think any less of you. And we're going to be friends forever\", Rania said forcefully. \"I've always known on some level that you saw me as more than friends. I've noticed how you look at me. You initiate sex way more often than I do, even though we've both discussed how my libido is higher than yours. I know you always want to cuddle after we hook up when I just want to get dressed and get moving again. I love cuddling with Ryan, because there's feelings there. I'll never have those feelings for you. But I don't think anything has to change in our friendship, as long as we both know that nothing's going to change. The only way I wouldn't be okay with it is if you were in love with me and weren't willing to settle for just being friends. It would be cruel to keep having sex with you if you wanted more and that was all I could offer you.\"\n\n\"I'm not in love with you\", Khadija answered. \"We're on the same page. But I definitely agree that I get more out of hooking up with you than you do with me.\"\n\n\"I told Ryan that on the first day\", Rania said.\n\n\"She did\", I confirmed.\n\n\"You really knew all this time?\" Khadija asked.\n\n\"You can't hide from the people who care about you\", Rania said. \"I like you and I love you for who you are. This changes nothing.\"\n\nKhadija finally lost it, sobbing. Rania came up to the front seat, wrapping her friend in a bear hug and holding her as she cried, letting out a lifetime of pent-up shame, repression, and pure emotion. After several minutes, the crying finally slowed down.\n\n\"Thank you\", Khadija finally whispered.\n\n\"I've never seen you cry before\", Rania observed.\n\nKhadija wiped her eyes. \"Yeah, there's a heart inside this tough-girl exterior\", she said quietly. \"I don't let people in easily. Maybe that's me, maybe that's Saudi Arabia. It's hard to admit even to yourself that you might be into girls; that you might have fallen in love with a girl in the past and probably will again in the future. Not when there's all the religious and cultural pressure not to be gay. Not when it's illegal. I spent a long time trying to convince myself that I wasn't who I said I was. It was maybe a year or two ago that I finally started to accept it to myself. And I promised myself I'd never tell anyone.\"\n\n\"Your secret is safe with me\", I piped up.\n\n\"Me too\", Rania said. \"Nothing has to change between us. I mean, assuming my boyfriend is okay with me still hooking up with you after he goes home.\"\n\n\"Knock yourselves out\", I said. \"I'm not going to put any restrictions on you two. I understand you have something special, and when we've spent this entire week hooking up, it would be ridiculous for me to get jealous over it.\"\n\n\"Thank you, both of you\", Khadija said, breathily. She seemed completely drained. \"I need some time alone to process everything. I'm honestly glad you two are spending the night together tonight.\"\n\n\"Inshallah\", I said. Both girls looked at me, surprised. \"What?\"\n\n\"No, it was right, you're right with your usage\", Rania said approvingly. \"God willing, we'll spend the night together tonight. You're learning. I'm so proud of you.\"\n\nShe climbed back into the back seat, buckling herself in. Khadija unbuckled as well, climbing back and sitting beside Rania. \"Do you mind?\" she asked.\n\n\"Of course not.\"\n\nKhadija snuggled up to Rania, burying her head in her chest, as Rania wrapped her arm around her friend, pulling off her headscarf and running her fingers through Khadija's hair. I had to focus on the road, but when I looked back a few minutes later, Khadija appeared to be asleep.\n\n\"She asleep?\"\n\n\"Yep.\" Rania paused. \"I'm glad she told me. I always wondered if she ever would.\"\n\n\"Are you okay?\"\n\n\"Yeah, I am\", she said honestly. \"I want her to be comfortable being herself. Nothing's going to change. I'm glad she finally felt like she could say something.\"\n\n\"This trip has been life-changing for all of us, eh?\"\n\n\"I never want it to end.\" Rania choked, slightly, then forced a smile. \"We still have tonight and tomorrow.\"\n\nA few hours later, both girls were asleep, cuddled into each other, as I pulled into the parking lot of the Shangri-La Barr al Jissah Resort &amp; Spa. At first glance it was hard to get a sense of the place, but as I woke the girls and we entered the lobby, my first thought was that I'd entered someone's childhood fantasy of a Sultan's palace. The building was ornate and decorated in the Arabian style, all magic carpets and lamps and arched doorways. We'd booked a package that gave us access to the hotel rooms and property for 24 hours from when we checked in, which meant we had until tomorrow night to check out, at which point we'd be heading right for the airport. I let the girls take care of checking into their room, then I checked into mine, and we went off and found our rooms -- a few doors apart from each other without being adjacent. The hall was thankfully deserted.\n\n\"This makes it easy.\" Khadija said approvingly. \"Thanks for talking to me tonight. I'll see you both tomorrow.\"\n\nShe disappeared as we unlocked our room. The room was ornately decorated but otherwise a normal hotel room, with a single King bed with an Arabian arch-shaped headboard and a few chairs and desk.\n\n\"Can I shower first?\" Rania asked.\n\n\"Do you want to together?\"\n\n\"No\", she said honestly. \"I love the idea, but we've done that a couple times on this trip, and given that I haven't showered in two and a half days, I just want to shampoo my poor hair, shave my legs, and get clean. We can have fun after.\"\n\nI checked myself out in the mirror as the bathroom door closed. I looked like I'd been out in the field for a month. My hair was suffering from an incurable case of hat hair, and it had become bleached so light it was almost blond. I had three days worth of stubble on my face, and my clothes were filthy. I heard the water turn on in the bathroom as I turned on the TV. I found a soccer game to half-watch, and I relaxed, enjoying such incomparable luxuries as television, air conditioning and a comfortable chair.\n\nTwenty minutes later, Rania emerged, with a towel wrapped around her midsection and another containing her hair. The room filled with the scent of steam and her shampoo as she smiled at me, digging into her suitcase for moisturizer and other skin and hair products.\n\n\"Go get clean, love. I'll be ready for you when you're done in there.\" She kissed me on the cheek.\n\nI quickly got naked and hopped in the shower, watching with some alarm as the water turned black as it ran off my body and down the drain. I washed myself thoroughly, then stood in the shower for a few minutes, feeling the hot water melting away the stresses of the past few days. When I finally felt relaxed and clean I shut the water off and brushed my teeth, then shaved. I finally walked out into the room in a towel, feeling like a new man.\n\nRania was lying on the bed, nude, spread-eagled on top of the covers and fast asleep. I took a moment to mentally snapshot the image of her. We'd been in a hormone-fuelled rush, or in darkness, so often on this trip that we hadn't taken the time to slow down and take our time. I stared, observing her light brown skin, delicate, flawless, unblemished by freckles, moles or stretch marks. Her smooth, hairless legs, long, lithe and muscular, leading up to the hairless crevasse between her legs. Her stomach, flat, rising and falling softly with her breathing. Her breasts, pulled down flatter by gravity but still perky, topped with plump nipples, dark brown and inviting. Her hair was still damp and stringy, hanging loosely around her face. She was beautiful and looked so peaceful and happy.\n\nI wasn't disappointed by her falling asleep. I hadn't been sure I'd be able to get it up tonight for sex anyway, given how worn out I was. I carefully covered Rania up with blankets, killed the light, and climbed into bed, wrapping an arm around her. She rolled into me and sighed sleepily.\n\nI awoke hours later with Rania still snuggled around me. I could feel her soft skin against mine from head to toe, her legs wrapped around mine as she slept. Sunlight was gently diffusing through the blinds, and I could see Rania's delicate, beautiful face, still asleep, her hair cascading down the pillow, the softness of her features resplendent in the early morning light. I stared at her for what felt like a very long time, realizing with great sadness that this was the beginning of our last day together.\n\nI had no idea what to do. Our trip had been an incredible introduction to a foreign culture for me, an eye-opening look at a part of the world about which I'd known nothing. I'd gotten to know Rania far better than before, and I felt like I understood her now in a way that I hadn't before, having experienced the culture that had made her who she was. I'd also made another friend, and unexpectedly gotten to check a few more boxes off my sexual bucket list, while also getting to see another perspective on life, Arabic culture, and feminism from someone who still knew Rania better than I did.\n\nI'd done enough research over the past year to know that even marrying Rania wouldn't solve our problem, as Saudi courts wouldn't recognize a marriage between a Muslim woman and a non-Muslim man. The only thing that I could have done to have Saudi Arabia recognize our right to be together as to convert to Islam, and I wasn't willing to convert to a religion in which I didn't personally believe. At any rate, I also wasn't willing to propose to someone this early in a courtship. I was in love with her, but I wasn't prepared to commit my entire future to a person that I'd only spent less than a month with in an actual relationship.\n\nWhat was left? I decided to enjoy today and see what happened in the future. Perhaps, I thought, there's some logic in this inshallah phrase the Arabs use. Maybe we'll find a way to be together if God wills it. At the very least, I don't want to spend our last day together, if it is to be that way, feeling sorry for ourselves.",
        "I kissed Rania's forehead and closed my eyes, trying to fall back asleep. I think I managed to doze for a bit, but eventually I became conscious of a change in Rania's breathing, and then she started to stir. Her eyes opened, slowly, and as she awoke she focused on my face.\n\n\"Mmmmmm\", she started. \"Your face was all I wanted to see first thing this morning. Nothing against Khadija.\"\n\nI pulled her closer. \"This was all either of us were craving, I think.\"\n\nRania stretched, groaning with pleasure.\n\n\"Is this what an expensive bed feels like?\" I asked rhetorically. \"Or were we just deprived after two days of camping?\"\n\n\"I don't think I'll ever want to get up\", she responded. She wrapped her arms around me and leaned over me, adjusting her hair so it wouldn't hang in my face, then leaned in, slowly, and started to kiss me.\n\nWe made out for quite a while like that, with none of the hormone-crazed intensity of the past week. Rania's body was warm and soft against me as she delicately kissed and licked my lips and ran her hand gently up and down my body. I held her against me, tracing patterns on her back, hips, side, bottom, through her hair and across her shoulders. I felt myself slowly starting to respond, becoming semi-erect, and then fully erect, but there was no urgency. Rania ignored my erection as we kissed, and I deliberately avoided touching her breasts or vulva.\n\nFinally, Rania pulled up, staring me right in the eye. Her face was flushed and bore an intense, concentrated expression.\n\n\"I love that look\", she said breathily. \"You have such incredible eyes. I could stare into them all day.\"\n\nShe sat up and moved into a straddling position. \"I haven't fully woken up yet\", she began, \"and I don't know how this is going to go, but I want to try girl on top and we're running out of chances. Will you let me ride you?\"\n\n\"I'm sleepy too\", I answered, \"so the idea that I can just lie here and let you do all the work sounds really appealing.\"\n\nRania grinned. \"You deserve a reward for driving us around all week. Let your girlfriend take care of you.\"\n\nShe reached down and grasped my erection, tugging on it gently a few times to make sure it was fully erect. \"I would have thought we'd have worn you out yesterday morning. I'm glad you've still got some strength for me.\"\n\nI reached between her legs and felt warm, wet softness. \"I'm equally impressed you're ready to go again. You were a quivering mess yesterday.\"\n\nRania smiled. \"What can I say? You turn me on.\"\n\nShe rubbed my cock against her opening, lubing it up, and then pressed her weight down, experimentally, then with conviction as I slid inside.\n\n\"I love you, Rania.\"\n\n\"I love you too, Ryan. Any tips for me?\"\n\n\"Don't worry too much about hurting me, be as aggressive as you need to be. Try moving your hips and grinding your clit into my pubic bone. And have fun.\"\n\nRania started moving in the cowgirl position, slowly at first, and then as she discovered what she liked, she started to settle in. I grasped her by the hips and let her lead. We'd dry-humped and wet-humped in this position many times before, but the sensation of being inside her while she moved was a new one for us, and it took her time to figure out how best to grind and maximize pressure where she wanted it, inside and out.\n\nI lay back as Rania experimented, enjoying being able to lie still and relax and let her do what she wanted. She let out little sighs under her breath as she rode me. I loved just looking up at her, watching her exertions, her chest flushed red, breasts bouncing. I wasn't feeling any urgency, but her molten wet centre still felt oh-so-good wrapped around me.\n\n\"How are you doing up there?\"\n\n\"Good...\" Rania sighed. \"I think I've got it figured out. Right now my clit's grinding against you and your cock's hitting my g-spot with every stroke... it feels amazing!\"\n\nShe leaned over, putting her weight on me, and kissed me as she grinded. \"Nope, cowgirl is better\" she concluded after a couple of strokes.\n\nHer pace picked up as she bounced on top of me, my hands on her hips, guiding her. \"I kind of like using you as a sex toy\", she confessed. She picked up the pace yet again, her grinding on me now at fever pitch. Small moans had started to come out of her as she rode.\n\nA few minutes later she started to shake, and I felt the telltale clenching around my erection as Rania's orgasm took her. She leaned over and lay on me, feeling out the spasms as she breathed hard in my ear, her body radiating heat from her arousal, and rising and falling against me with her breath.\n\nMoments later, she rolled over, out of breath, and pulled the covers up over both of us, snuggling into me. Her hand found my cock under the blankets.\n\n\"Can I take care of this for you?\" She asked.\n\n\"That depends\", I answered. \"What are you thinking about later, and about Khadija?\"\n\n\"We need to have sex again later today for sure\", Rania responded. \"As for Khadija, I don't know what she's thinking, and I need to make sure she's okay.\"\n\n\"Are you going to be able to have sex again later today, whether or not she's there?\" I asked.\n\n\"One hundred percent yes\", Rania answered. \"This isn't going to be our last time.\"\n\n\"Then I'm good to wait\", I answered. \"I wasn't that close, and I'll enjoy the last time when I'm a little more awake. Plus, I want to make sure I can get it up again.\"\n\nWe lay together in silence for a few minutes as my erection slowly deflated.\n\n\"Not that I'm kicking you out of bed, love, but don't you have to pray?\" I asked.\n\n\"There are some things more important than saying your morning prayers on time\", she answered. \"I turned the adhan off on my phone. All I wanted was to wake up naturally with you.\"\n\nThe minutes ticked by. Rania's breathing changed, and I opened my eyes again to realize she was crying.\n\nI hugged her as tightly as I could. \"Don't cry, my love. We still have today.\"\n\n\"I know\", she sniffled. \"But then it's over.\"\n\n\"It doesn't have to be\", I responded.\n\n\"Long distance across nine time zones isn't going to be easy\", she answered. \"I'm a girl, Ryan, but I'm not totally head in the clouds about this. I know what we're up against.\" She rolled over, breaking the embrace. \"I want to spend today with my boyfriend and best friend at the nicest resort in Oman, swimming, lying on the beach, eating great food, and having sex one more time. What happens after that is God's will.\"\n\nI leaned over and kissed her. \"Sounds like a wonderful day.\"\n\nRania got out of bed, heading for the bathroom. I heard the shower flip on for a moment, and then shut off again. A minute later she emerged, still nude. \"Ryan, I don't think I've ever let you see me pray. Are you interested?\"\n\n\"Of course I am.\"\n\n\"For a start, we have to clean ourselves before we pray. Ordinarily it's a lesser cleaning, but because we had sex, I had to perform ghusl, which is basically just a full shower. After sex or masturbation and after finishing my period each month I need to do the heavier cleaning.\"\n\nRania put on her full Arabic clothing, including the headscarf. She went back out to her suitcase and unfolded a prayer rug, worn out but ornate, about the size of a magic carpet. \"This was a gift from my parents on my tenth birthday\", she explained. \"Ten years old is when you start to pray regularly in Islam. The mat has a lot of sentimental value to me.\"\n\nShe set the mat down, orienting it on an angle between the bed and the wall. \"Can you guess why it's facing this way?\"\n\nI looked around the room, and I noticed a small arrow on the ceiling pointing in the direction of Rania's mat. \"I'm guessing it's something to do with the arrow?\"\n\nRania smiled. \"Very good, Ryan. We pray facing Mecca. Every hotel room in the Islamic world has a qibla, or 'direction', somewhere in it. It shows us the direction of the holy Kaaba in unfamiliar settings.\"\n\n\"I'm ready to begin\", she said. \"We're supposed to pray in Arabic, but I'll translate for you too.\"\n\nShe then stood at the edge of the mat and raised her hands. \"Allahu akbar\", she began. \"God is great\".\n\nOver the next five minutes Rania went through the positions I'd seen Muslims going through on TV, the bending over prostrate, then standing back up, and repeating. She repeated phrases that sounded to me not unlike the Christian prayers I'd grown up with, praying for forgiveness, peace, and strength, as well as praising the Lord for His mercy and compassion. I can't claim to have been moved religiously by the experience, but I was really pleased that Rania had offered to show me such a personal part of her life.\n\nFinally, she concluded, folding up the prayer mat and pulling off the headscarf. \"Do you want some breakfast?\"\n\n\"I thought you'd never ask.\"\n\nI threw on some clothes as Rania texted Khadija, and in fifteen minutes, we were sitting together at a table on a sunlit verandah surrounded by palm trees. The hotel, pink sandstone and arched windows in the usual Arabian fashion, stretched around us in a U shape, opening onto a sandy beach facing the Indian Ocean. Towering over the hotel were the ever-present mountains, giving the impression that the hotel was shoehorned into a tiny space between peaks. A massive pool sat adjacent to the veranda, mostly empty apart from a few early-rising children splashing and having fun.\n\nKhadija looked tired, as though she hadn't slept particularly well. As we started in on breakfast (buffet-style, loaded with fresh fruit and vegetables, easily the nicest of the trip so far), I asked her how her night had gone.\n\nShe smiled, weakly. \"It was okay. I had a lot on my mind. I was glad to be alone last night.\" She paused. \"How was yours?\"\n\n\"Quiet\", Rania said. \"We fell asleep.\"\n\n\"It was a long, hot day yesterday\", I added.\n\n\"So you haven't...\" Khadija trailed off, checking to see if anyone was listening. \"You haven't had sex again?\"\n\nRania and I exchanged knowing glances.\n\n\"Oh, fuck off\", Khadija grinned at us. \"You two are incorrigible.\"\n\n\"So, what would you like to do today?\" I asked the girls.\n\nKhadija took a deep breath. \"That depends on what Rania wants to do.\"\n\n\"I want to spend the day together with my boyfriend and my best friend\", Rania said. \"I want to lie on the beach and swim in the pool. I want to eat two more really good meals. I want to relax and let all the stress of the past two years of school completely drain out of me, like my parents had in mind when they sent us here. And at some point this afternoon or this evening, I want to go back to the room and make love with both of you.\"\n\nKhadija and I looked at each other.\n\n\"Are you sure?\" Khadija asked.\n\n\"I'm sure. Yesterday morning I was feeling like all I wanted was to be with you, Ryan\", she began. \"I wanted to be by your side and never leave it. I didn't want you to go home. I don't want you to go home. And every time I think about going to the airport tonight...\" She choked up, fanning her face as she tried to keep from crying. \"I can't even think about it. But I'm not feeling possessive in the same way today. I'm sad, and depressed, and I think I'm going to need the support of both of you to get through tonight.\n\n\"Khadija, your friendship got me through my separation from Ryan a year ago, and it's going to get me through this next time too, inshallah. And I also have something important to tell you.\"\n\nKhadija stared at Rania, eyes locked, seemingly not breathing.\n\n\"I've always held a piece of me back from you because I believed on some level that you liked me in a way that I wasn't capable of liking you back. I was willing to follow your lead and your teaching sexually, and I don't regret any of it. Having you in my life has made it immeasurably better in the past few years. But I was worried that if you developed feelings for me, it would make things awkward at best, or ruin our friendship at worst. I have always believed you were bisexual. I see you looking at men and hear you talking about them, I never thought you were a lesbian. But sometimes I saw you looking at me the same way, and it always scared me.\n\n\"I'm so proud of you for coming out yesterday. It also allowed me to put my own worries to rest. I don't believe, anymore, that you're secretly in love with me. I finally got to see what's truly in your heart yesterday, and that has allowed me to open my own heart to you. To trust you completely, to believe that you and I will be okay and will remain friends, just friends, forever.\n\n\"I love you, Khadija, as a friend. As much as I'm wanting to be with Ryan all day today, I'm also feeling a real need to give you a hug, and a kiss, and a lot more than that. And if we have one more day here, well, we should all be involved. Yesterday morning was Ryan taking turns with us one at a time. Today I want to have a real threesome. I want to fuck both of you senseless. Assuming you both consent, of course.\" Rania smiled and exhaled.\n\nKhadija looked like she was gathering her thoughts, and we sat in silence for what felt like an eternity. A waiter came by, refilling our coffee cups.\n\nFinally, the coast was clear again. \"I love you as a friend too, Rania\", Khadija began. \"I don't know if I even really knew what was in my own head until this week. I didn't have the experience to understand what I was feeling. But I can promise you that I don't feel the same way for you that I did for Yasmin. I care a great deal about you, but I haven't been harbouring a schoolgirl crush for you all these years. I'm attracted to you, but it's possible to be friends with someone you're attracted to. I like our arrangement and I don't want it to change. You're worth far too much to me as a friend to risk that on anything more, and besides, you're taken. You and Ryan are so good together. Having had the chance to see the two of you interact in person, I understand what it is that makes your relationship so good. I want that someday, with a man, or with a woman. But I'm not looking for that with you.\"\n\n\"I believe that now\", Rania said. \"Every time we've made love in the past, I think I've been holding back on some level; physically, mentally, emotionally.\"\n\n\"I always knew you were\", Khadija interjected.\n\n\"Now that the air is finally clear, all I want is to be with both of you. I think I need it, to end this week properly, and I need it to have closure.\" Rania paused as a waiter walked by. \"I also think it'll be fun.\"\n\n\"If you give me half of what you've given Ryan this week, I'm in for a treat\", Khadija said quietly, lust dripping from her voice.\n\nRania turned to face me. \"Are you in, Ryan?\"\n\n\"Well, who would I be to turn that offer down?\" I smiled. \"Are you thinking now?\"\n\n\"No, I need time to recharge a little\", Rania said, \"and I think I'd enjoy it more tonight. Let's go out with a bang before we leave for the airport.\"\n\n\"Sounds good\", I said.\n\n\"You know, I didn't get to have sex this morning\", Khadija pouted, only half-joking. \"But yes, I can wait.\"\n\nRania got up and hugged her friend. \"We have lots of relaxing to do today.\"\n\nAs we finished breakfast, we returned up to the rooms, changed into swimsuits, and headed down to the beach.\n\nThe day passed in a state of total, blissed out relaxation. The hotel had two pools connected by a lazy river, of all things, and we spent a good hour just floating back and forth lying in inner tubes. The girls went for a spa treatment at one point, while I rented a bicycle to try my hand on some of the mountainous roads near the resort. I wasn't surprised to learn that the annual Tour of Oman cycling race was taking place the following week, and the racers would be passing by the entrance to the resort on one stage.\n\nAfter a long, relaxing day, the three of us sat down to dinner together on the outdoor terrace as the sun set on the water to the west.\n\n\"The next time you see the sun from outdoors\", Rania began, \"it's going to be below zero again.\"\n\nI groaned. \"Don't remind me.\"\n\n\"Have you had a good trip, Ryan?\"\n\n\"It's been epic.\" I paused, thinking. \"I know I've said versions of this throughout the past week, but I can't believe how different the reality of the Middle East is from what I would have believed from watching CNN. This country is peaceful and beautiful, the food and scenery has been incredible, and you two defy every stereotype of Arab women I'd ever once believed. We forget sometimes that people are just people. Behind the Arabic clothing and the enforced modesty, you're no different from the other women I've known over the years.\"\n\n\"All women wear veils around men\", Rania commented. \"The girls I knew back in Canada used to talk about how you had to make sure you trusted a guy before letting him know you liked him, and how they were constantly on guard for their safety in clubs and such. Our veils in Arabia may be real and not metaphoric, but they're still there in the west.\"\n\nI nodded. \"I'd never thought about that before, but of course you're right. I remember being shocked when I found out that my first girlfriend in high school was just as horny as I was. I never believed women were like that, because the girls I knew were all keeping it hidden from public display.\"\n\n\"It's been so nice not having to keep it hidden this week\", Khadija chimed in. \"My whole life, I've felt like I have to keep my sexuality hidden. I've dreamed of being as liberated in body as I am in mind. I've finally gotten to be the person I always wanted to be this week, and I have you two to thank for that.\"\n\n\"Are you going to be okay going back to pretending to be the old you?\" I asked.\n\nKhadija sighed. \"I will be, because I have to be. I've never actually been the woman I pretend to be in public. Not now, not last week, and not when I was a teenager. I only really show my true self around friends and family, and even then, I've never opened up to anyone like I did to you two last night. What this week has done for me, above all else, has made me accept who I really am, and made me believe it really will be okay to be me for the rest of my life. Someday, I'll meet a man who accepts the version of me that you saw this week. Or I'll figure out a way out of Saudi Arabia and date girls for a while. Or maybe I'll join a polyamorous cult.\"\n\nRania and I both laughed.\n\n\"Seriously, though, Rania, thank you for sharing your boyfriend with me, and Ryan, thank you for being willing to be shared. Thank you for being kind, caring and gentle with me as I learned, for never pushing on me, and for being as attentive to my needs as you have been. Thank you both for accepting me for who I am. And thank you for what's going to come when we finish dinner.\" She winked.\n\n\"Did you get out of this week what you wanted?\" Rania asked.\n\n\"That and more.\" Just then, dinner came -- Persian-style stew with rice and lamb -- and we all dug in.\n\nOnce we were eating, Khadija continued her train of thought. \"What I wanted out of this week in the leadup to it was experience. I knew I wanted to fool around with a guy. What I got was that, but I also got acceptance from both of you, and moreover, I got a chance to finally organize my thoughts and my identity. I think I was holding back this past decade and more from making a decision on who I was and what I was into until I'd experienced enough to make that call. After this week, I feel at peace with myself and who I am, and I think I'm going to take that confidence with me back home into wherever life leads me next.\"\n\n\"What is next for you two?\" I asked, suddenly realizing I didn't know.\n\n\"Try to find a job, I guess\", Khadija said. \"I still don't know what I want to be when I grow up. But I'll need to work somewhere. I'll have to fend off the efforts of my extended family to marry me off, too. My parents won't care, but they're not going to stop everyone else from seeing me as single and marriageable. My grandmother has been trying to set me up with different boys since I turned 18.\" She rolled her eyes. \"Rania's probably going to teach school when it goes back in September.\"",
        "\"You don't have a job lined up, though? I'm assuming you'd have told me\", I asked Rania.\n\n\"I don't, no\", Rania said. \"There's no rush to apply, Saudi Arabia has a shortage of teachers; I'll be able to work pretty much wherever I want to. I had wanted to finish school and have this holiday before thinking about it.\"\n\n\"Fair enough.\"\n\n\"What about you, Ryan?\" Khadija asked. \"Back to work?\"\n\n\"Yes, back to work on Monday\", I answered. \"I fly all day tomorrow and should be home by supper Eastern time, which is going to feel like the middle of the night. I'm hoping I'll sleep enough that I can get through the day.\"\n\n\"Where do things stand with you?\" Khadija asked.\n\n\"You and I, I'm hopeful we can stay friends\", I answered. \"I like you, and if you were in Canada I'd probably go out for drinks with you every couple of months just to hang out. I have a few close platonic girl friends, and you're a lot like a lot of them. It can be a lot of fun to have an opposite sex friend to talk openly with, and flirt with, only with both of you knowing where the boundaries are and what is and isn't okay.\"\n\n\"That sounds like fun to me\", Khadija said. \"I'll add you on Skype for sure. Though I've never had a drink in my life.\"\n\n\"Neither have I\", Rania added. \"Maybe someday.\"\n\n\"As far as Rania and I go, we still aren't talking about the future.\" I glanced over at Rania and she shook her head emphatically.\n\n\"Fair enough\", Khadija said. \"Let's not ruin the last few hours we have together.\"\n\nWe made short work of dinner, keeping up the small talk, and avoiding any mention of the looming deadline our relationship was facing. After dessert, we lingered over coffee, contentedly. I could tell Khadija was antsy. She was having trouble keeping still, which I interpreted as being horny over the promise of what was to come, but she clearly still seemed to understand that she shouldn't push on Rania. Rania for her part seemed subdued, a little depressed, which was also how I was feeling. I was looking forward to the threesome very much, but my watch told me we only had two hours left before we would have to leave for the airport.\n\nFinally, Rania stood up from the table. \"Lady and gentleman, would you care to join me upstairs?\"\n\nKhadija bolted up. \"I thought you'd never ask.\"\n\nI stood as well, and we discreetly made our way back to the rooms, making sure the coast was clear before entering our room.\n\nBoth girls immediately shed the headscarves and abeyas. Rania had on a blue v-neck shirt and jeans; Khadija an orange halter top with leggings. Rania took Khadija by the hand and walked her over to the bed, gently shoving her backwards onto it, then climbing on top, a predatory look in her eye. I walked over and climbed onto the bed too, laying down beside Khadija as Rania started kissing her friend.\n\nThe girls made out for a few moments, and I could see an intensity in the way Rania was kissing her friend that hadn't been present the other few times I'd seen them together. Khadija was clearly taken aback by her friend's aggression, as she lay there, squirming, trying to keep up. Rania's free hand started tracing slowly up and down my body, concentrating on my chest and thighs as I watched them. I noticed Rania's hips start to rock gently against Khadija's leg, and then Khadija join in, grinding back at Rania. Both girls started gently sighing as they kissed each other.\n\nFinally, Rania pulled up, eyeing her friend below.\n\n\"You've never kissed me like that before\", Khadija observed, out of breath.\n\n\"I've always been scared to\", Rania answered. \"I don't have to worry anymore.\"\n\nKhadija forcibly rolled the two of them over towards me, taking command as Rania leaned into me. I wrapped my arms around her, sliding my hand into Rania's v-neck, under her bra, and finding her hard nipple. Rania sighed as I gently squeezed it. I felt Khadija's hand reaching down towards my crotch, finding the hardening bulge in my jeans and gently rubbing against it as she continued kissing Rania.\n\nFinally, Khadija sat up, and transferred her body from straddling Rania's leg to straddling my crotch. She pulled her shirt over her head, then unclasped her bra, letting her heavy dark breasts swing free as she started to grind against my now fully erect cock. Rania took the free moment to unzip her jeans and then shimmy out of them and her panties, exposing her vulva to Khadija's gaze. Khadija stared at the sight, licking her lips unconsciously as she grinded against me.\n\n\"Do you mind?\" Rania asked me, rhetorically, as she then climbed atop me, lowering her pussy to my mouth as she leaned over and started kissing Khadija again. As her lips and mine made contact I could feel the heat and moisture of her arousal against my face. I tried to start licking around her clit, but as soon as my tongue was out, Rania started grinding against me, setting her own pace and intensity. I fought her for a moment before happily giving up, letting her use my mouth as a sex toy as I enjoyed lying under two horny women making out, while both ground their clits against various parts of my anatomy.\n\nEventually, Khadija broke the kiss off and moved down to my crotch, unzipping my jeans and pulling them and my underwear down in one fluid motion. My erection sprung out, grateful to finally be released. Rania hadn't broken her rhythm on my face, so I couldn't see what was happening, but shortly I felt wet heat on my crotch, first grinding gently, then I felt a hand guiding me into Khadija. I could tell the girls had stopped kissing, and Rania appeared to be enjoying watching Khadija as she started fucking me.\n\nI was still completely powerless lying under the weight of two full-grown women. Rania was still grinding away on me, and I could feel the hard nub of her clit focused right on the tip of my tongue. Meanwhile, Khadija was fucking me with total abandon.\n\nSuddenly Rania released my face. I could tell she hadn't cum yet, and I was a little surprised, but she leaned over and kissed me, then climbed behind Khadija. She moved Khadija's hair off her shoulder, then started kissing the base of her neck. She then reached one hand down between Khadija's legs, finding her clit, and cupped her breast with the other, tweaking her nipple.\n\n\"Oh my God, that's intense\", Khadija moaned.\n\nIt wasn't long at all before I felt Khadija start to shudder, and she climaxed, moaning my name. I could feel Rania's skilled fingers moving against my pubic area, working her through her orgasm, slowing down the pressure and intensity as Khadija clenched around my shaft.\n\nAs her orgasm finished, Khadija collapsed onto the bed beside me, breathing hard. \"Thank you, Ryan, and thank you, Rania\", she said between breaths.\n\n\"You can thank me immediately\", Rania smiled, gesturing at her slit. Khadija grinned.\n\nThe girls traded places, and Rania lay down on the bed, spreading her legs, and Khadija leaned over and went to work. Rania motioned for me to come up around her shoulders, and I did so as she took my cock in her mouth, licking around the head and stroking it gently.\n\nI moved to a position where I could alternate between watching Rania sucking me and watching Khadija eating Rania out. Rania was moaning softly as she blew me, and the vibrations from her voice rippled through me as she went to town. I ran my hands idly over her chest and through her hair, cradling her head as I watched her trying to fit as much of me into her mouth as she could manage.\n\nWe carried on like that for a few minutes, and Rania gradually started to lose the ability to focus on what she was doing as her moaning intensified. I wasn't yet close, so I just enjoyed watching her hips bucking and the look of intense pleasure on her face as she grew closer to the point of no return. I couldn't see Khadija's face as it was buried in her hair, but I could see her dark brown ass sticking up in the air as she worked on Rania's vagina. I could also tell from her movements that she was fingering Rania vigorously.\n\nFinally, Rania gave up entirely, dropping my cock as she succumbed to the pleasure. The head of my erection kept poking her in her flushed cheek as she closed her eyes, writhing on the bed, holding Khadija's head firmly between her legs. She came, enormously, extravagantly, moaning Khadija's name as she tensed her muscles and exploded.\n\nKhadija poked her head up as Rania came down. Her mouth and chin were translucent with moisture, and she wore a hugely satisfied grin. \"She doesn't often let me do that to her\", Khadija confessed.\n\n\"I promise that I will let you more often\" came Rania's small voice from between pillows.\n\nKhadija smiled. \"I'll hold you to that.\" She turned to face me. \"So that's two of us cum, but not you yet. Does that make it your turn?\"\n\n\"Women can go forever, men can't\", I responded. \"I'm happy to keep going for now, but I'm not going to cum until you're both satisfied.\"\n\n\"Then you'll need to fuck us\", said Khadija matter-of-factly. She gestured for me to join her at the foot of the bed, and each of us grabbed one of Rania's ankles, sliding her to the end of the bed. Khadija then climbed on top of her, straddling, and started kissing her. Both girls had their legs spread, and I was faced with a sight I'd imagined before but never expected to see in real life -- two wet, waiting vaginas stacked one on top of the other.\n\nI'd already had sex with Khadija moments ago and not yet with Rania, but Rania had just had her orgasm and Khadija was, judging by the intensity of her kissing Rania, ready to go again. I picked Khadija, and slid back inside her, easily and without resistance.\n\n\"Ooooooh that's good\", mumbled Khadija between kisses.\n\n\"He picked you first?\" Rania said incredulously. She raised her head and caught my eye, winking at me to confirm she wasn't actually offended. \"He'll have to cum inside me to make it right.\"\n\n\"Good thinking\", Khadija answered.\n\nI picked up speed and started fucking Khadija from behind; long, even strokes, hands on her ass, bearing down on her g-spot the way I'd learned she liked. I could feel a hand lightly brushing against my balls as I fucked her -- someone was touching Rania's clit again, though I couldn't tell who was doing it.\n\nFrom the noises Rania had started making, she seemed to have recovered from her earlier orgasm, so I withdrew from Khadija, and in one long, fluid motion, entered Rania. She squealed with pleasure, and I heard Khadija grunt in frustration.\n\nI'd never had sex with two women before in such short succession, and I marvelled as I fucked Rania that the sensations were noticeably different. Rania was tighter and wetter, her vagina all smooth folds on the inside. Khadija's pussy was warmer, and her more prominent inner labia added a pleasant sensation to her body's grip on me when I was inside her.\n\nI switched back and forth between women more or less at random, and I could feel dancing fingers making up for my absences whenever I was inside the other girl. My brain was approaching overload at the idea of having sex with two people at the same time, and I could feel myself getting closer to cumming as well. I doubted I'd be able to have more than one, so I pulled out of Khadija and stopped, catching my breath.\n\n\"Why'd you stop?\" Khadija asked in frustration.\n\n\"I don't want to cum so quickly\", I responded.\n\n\"I want you to. Inside me\" Rania ordered. She pushed Khadija off of her and spread her legs, showing off her wet, waiting slit. \"Don't worry about me getting off again, I've already had two today. Just fill me up.\"\n\nKhadija sat on the bed, beside Rania, taking her head into her lap. \"You heard the lady.\"\n\nI walked over to Rania, suddenly aware of the fact that this might be the last time I would have sex with her. I wanted to savour the moment, but as I slid inside her, catching her eye and seeing the happiness and love reflected, I was overcome with emotion, and came uncontrollably, groaning loudly, pressing myself as deep inside my love as I could go, shuddering, then suddenly I was collapsing into Rania's arms, completely spent.\n\nI think I lost consciousness briefly. When I came to, I felt a hand running through my hair, and realized that as I'd fallen over I'd faceplanted right between Khadija's legs. Her scent filled my nostrils.\n\n\"That looked like a good one\", she said wistfully.\n\n\"Are you okay, love?\" Rania asked from underneath me.\n\n\"I'm fine\", I managed, weakly, withdrawing my face from Khadija's lap and sitting up. \"That was a big one.\"\n\n\"It felt so good being filled up one more time by you\", Rania said. \"Today, this trip, it's all I ever wanted. To feel loved and happy and warm with my two favourite people.\"\n\n\"Did you manage to cum again?\" I asked Rania doubtfully.\n\n\"No\", she confirmed, \"but I'm okay with that. I had two big ones today already. I just wanted to be with you for one more time.\" She suddenly fought back a hint of emotion.\n\n\"I need to cum again\", Khadija volunteered. I noticed her hand had absently started massaging between her legs. \"But if you guys are done, I can go to my room if you want.\"\n\n\"Nonsense\", Rania said decisively. \"Lie down.\"\n\nKhadija leaned back, and Rania dove between her legs.\n\n\"Wait, what?\" Khadija asked. \"For real?\"\n\n\"For real.\" Rania grinned at her.\n\n\"She's never gone down on me before\", Khadija explained to me, seemingly in shock. \"What changed?\"\n\n\"I'll tell you after\", Rania shot back. \"I want to do this. Just, you know, don't be too critical if I'm not good at it.\"\n\n\"You'll be good at it\", Khadija promised. \"You know what I like.\"\n\nRania tentatively moved her face closer to Khadija's hairy vulva as Khadija bit her lip and sharply sucked in air. Rania seemed to be thinking out a plan, or something, and then she wordlessly decided to go for it, diving between Khadija's legs.\n\nKhadija yelped and started rocking her hips, trying to increase the pressure on her clit. For my part, I just let my hands roam her body, across her breasts, through her hair, across her shoulders and chest. As Rania figured out what to do, she eventually slid two fingers inside Khadija, working hard on her sex.\n\n\"I'm gonna cum, already\", Khadija moaned, surprised, then I saw the now-familiar clenching of her legs as she shook and spasmed in my arms. Rania's face disappeared as her friend's orgasm tore through her.\n\nFinally, Khadija's breathing slowed, and her legs opened, releasing Rania, whose face reappeared, her mouth and chin coated in wetness. She was flushed and smiling, seemingly enjoying the satisfaction of what she'd just done.\n\nRania climbed up into bed between us, and the three of us started to snuggle, wordlessly, breathing returning to normal.\n\nAfter a few minutes, Khadija broke the silence. \"So what changed?\"\n\n\"I don't know if I can put it into words\", Rania answered. \"I think I always was holding back a part of me from our friendship. I was scared of giving too much of myself to you, in case it broke your heart. I was scared you might fall in love with me, and I might lose you as a friend if that happened, since I knew I could never have those same feelings for you. After our chat yesterday and today, I realized I had nothing to worry about.\"\n\n\"You don't\", Khadija smiled. She gave Rania a quick peck on the cheek. \"I'll never fall in love with you, don't worry. But if you eat pussy that well on your first try, I might have to get you to do that again sometime.\"\n\nRania blushed. \"It's a deal. And I'm sorry for all the times I didn't reciprocate.\"\n\n\"She let me go down on her, but the selfish girl never returned the favour\", Khadija said to me. \"Luckily I never minded.\"\n\n\"She's got a pretty pussy\", I observed.\n\n\"She sure does. Prettier than mine\", Khadija agreed.\n\n\"Stop, you two.\" Rania blushed again.\n\nThe three of us lay on the bed, all facing the ceiling, spent of energy, breathing hard.\n\n\"Do you still see Yasmin?\" I asked Khadija, changing the subject.\n\n\"I was thinking about that today\", Khadija answered. \"I lost touch with her. I mean, we're friends on social media, but I haven't talked to her since high school. I don't know how I'd feel seeing her again. But I think I'm going to look her up when I get home, maybe see if she wants to have a cup of tea together or something. Now that I've been honest with myself, I'm curious to see if there are any sparks still there.\"\n\n\"Good luck\", I offered.\n\n\"Thanks\", she responded. \"I don't know that I want to try to recapture some magic from years ago. But I think I need to come to terms with what happened between us, at least, in order to move on. All those feelings I had been repressing are coming out now, and I'd like to deal with them. Maybe after that I can fall in love with someone else again. I haven't let anyone into my heart in the same way since then. I'd like to someday be able to.\"\n\nI hugged her, across Rania, sandwiching her in the middle. Rania giggled as we embraced.\n\n\"I hate to do this, but when do we have to leave for the airport?\" Khadija asked.\n\nI checked the clock on the nightstand. \"About an hour. We should probably start packing up our stuff.\"\n\nRania's face fell. \"No. It's not fair.\"\n\n\"I agree, but we still have to get ready.\"\n\n\"I'll go back to my room and leave you two alone\", Khadija offered, getting out of bed. \"I need to gather up my own stuff anyway.\"\n\nShe quickly dressed, and then made her exit.\n\n\"I need to have a quick shower after that\", Rania began. \"Join me?\"\n\nWe walked together to the bathroom and shared a quick shower, one that was really nothing more than a nude embrace under the hot water. Rania was clearly fighting back tears, and I was emotional myself. How am I ever going to say goodbye again?\n\nOnce we were clean and towelled off, we dressed, then packed our suitcases up, then lay down together in bed, cuddling, not talking, just trying to postpone the inevitable just a little while longer. My mind was blank, because I couldn't think without risking tears. I tried to focus on Rania's breathing, her scent, her body pressed into mine, mentally recording everything so that I'd have this one last memory to keep forever.\n\nRania's phone chimed. \"That's probably Khadija.\" She rolled over and picked it up, reading, and suddenly her face went white. She then looked up at me, mouth open in shock.\n\n\"What is it?\"\n\nHer mouth moved, but no sound came out. She handed me her phone. Her hand was shaking noticeably.\n\nI grabbed the phone and started reading. The first thing I noticed was a familiar logo on letterhead... the logo of my own alma mater.\n\nI started reading:\n\nDear Ms. Al-Badawi,\n\nWe are pleased to offer you admission to the Ph.D. program in Education beginning in September 2019. This offer is in recognition of your significant academic achievements, and comes with a full funding package...\n\nI looked up. \"Is this what I think it is?\"\n\nShe nodded. \"I think so.\" Suddenly she burst into tears and screamed, a primal sound of joy and pent-up emotion all erupting at once.\n\n\"You're doing a doctorate? Back in Ontario?\"\n\nRania leapt into my arms, tackling me into the bed, kissing me, sobbing uncontrollably, running on pure adrenaline and emotion. I held on tight, feeling tension suddenly lifting that I hadn't known was there.\n\nFinally, Rania pulled back, her delicate face a mess of moisture and emotion. \"I applied last fall to a Ph.D. at the university I did my research at when we first met. I didn't think I'd ever get in, to be honest, which is why I never said anything. I didn't want to get your hopes up.\" She smiled. \"Or mine, to be honest. There's a professor in the education department that liked me and said she was interested in me as her grad student if I were interested, but I also know she's got a lot of students that apply to her and very few people get accepted, so I really didn't think I had a chance. With my research, she was the only supervisor I wanted to study with. She's the leader in her field, and I'm really excited about the project we've been talking about.",
        "\"I want you to know, Ryan, that I'm not doing this only to be with you. I'd be lying if I said it wasn't a nice benefit. But this is the right next step for my career, and I'd want to do this even if we had never met.\n\n\"That said, I'm going to need a place to live again in Canada. Do you know anyone who's got a room available?\" She smiled, magnificently, brilliantly, her eyes sparkling in a way that had been missing over the past day.\n\n\"There's a guest room, but I think you can share my room and we can probably leave it as a guest room\", I said, overcome. \"Congratulations. I'm so proud of you.\"\n\nRania beamed, still shaky, still clearly in shock.\n\n\"You deserve every good thing that's come your way. I know how hard you've worked for this.\"\n\n\"I never thought...\" Rania trailed off. \"I wouldn't let myself believe this could happen. I couldn't allow myself that hope. Not just for you, but for my career, my education, my future. This Ph.D. was the key to everything I wanted for the rest of my life. And I'm going to get it!\" She started crying, tears of joy streaming down her face.\n\n\"I'm not sure what I've done to deserve you, but I'm so glad we're going to get a chance to be together for real.\" I was crying too.\n\n\"I can't believe it's real.\"\n\n\"All I ever wanted was a chance\", I said, my voice cracking. \"Whether we stay together forever, or something happens to break us up, all I wanted the chance to succeed or fail on the merits of our relationship. To get the same opportunity that all couples deserve.\"\n\n\"We'll get that chance\", Rania said. \"My offer comes with full funding. As soon as I land in Canada, I'm free. I don't have to get anyone's permission to do what I please. I'll tell my parents about you and about us, and I want to meet your family, as your girlfriend. Maybe Khadija can come visit, too. We have a guest room.\"\n\n\"We have a future together\", I said, overcome. \"We're only seven months from September. Then we've got four years of a Ph.D., then...\"\n\n\"I can get a postgraduate work permit, which is one of the fastest ways to get permanent residency\", Rania said. \"I've done all the research. If it works out, I don't ever have to leave Canada.\"\n\n\"So, God willing, we can be together forever.\"\n\n\"Inshallah\", Rania answered. \"I can't help but feel like this relationship has His blessing, somehow. We never should have met, we never should have had the chance to get back together this week, and we never should have had the chance to live together permanently in the fall. This feels like it is meant to be.\"\n\n\"I love you, Rania.\"\n\n\"I love you too, Ryan.\" She paused. \"I'm still not looking forward to the trip to the airport, and to being apart for months. But we'll Skype. I'll be honest with you, I promise. No lies. No old, conservative Rania coming back. I'm determined to hold onto this feeling until we meet again.\"\n\nRania's phone chirped again, and this time it was Khadija, asking if we were ready. A few moments later, there was a knock at the door, and as soon as we saw her again, Rania's expression of joy gave her news away.\n\n\"You got in?\"\n\nRania nodded happily.\n\n\"Oh my God, congratulations!\" The two women embraced.\n\n\"Their timing is exquisite. I never thought I'd see you this happy leaving for the airport.\" Khadija looked me up and down. \"Rania tells me you have a guest room in your apartment. Do you think you'd have a place for me if I came to visit sometime?\"\n\n\"I promise you'd be welcome any time.\"\n\n\"I promise to hold you to that promise.\" Khadija smiled. \"I've always wanted to come and see the west. I finally have an excuse that will allow me to get there.\"\n\nI had spent the past week dreading the drive to the airport, but as we left the room to check out, my heart was full of joy and hope. Our unlikely relationship, spanning ages, cultures and distance, finally had a future to look forward to. Against all odds, we were going to be together again, and a couple of hours later, as the final boarding call sounded for their flight to Riyadh, Rania and I had, for the first time, a happy parting.\n\n\"Goodbye for now, Ryan\", Rania said. Her voice was tinged with an edge of sadness, but the joy and hope in her expression still shone through.\n\n\"Goodbye for now\", I agreed. \"This is the last time we won't be allowed to hug in public.\"\n\n\"That's a nice thought\", Rania said wistfully. \"I promise to hold on to the way I feel until we meet again. I promise to be myself until September. We'll talk and write to each other, and I will hold on to this openness.\"\n\n\"I promise to wait for you\", I declared, \"and I promise that we'll stand a chance.\"\n\n\"Do you remember when we saw the shooting star in the desert the other day, when you told me to make a wish?\" Rania smiled as she turned to board the plane. \"My wish came true.\"\n\nAs I watched Rania and Khadija's smiling faces disappear down the jetway, I knew that no matter what the future brought us, for the first time in our history as a couple, it was ours to decide. And that, I thought, is all any couple deserves. "
    ],
    "authorname": "thatsbogus",
    "tags": [
        "ffm",
        "hotel",
        "interracial",
        "lesbian",
        "muslim",
        "road trip",
        "romance",
        "threesome",
        "travel"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/parts-of-desire-ch-06"
}