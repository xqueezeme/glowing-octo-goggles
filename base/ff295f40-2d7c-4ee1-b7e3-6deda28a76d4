{
    "title": "14 Months 04: Christmas",
    "pages": [
        "\"Not a scratch just like I promised,\" Asher said cheerily throwing the keys to the man who regularly drove Sophie and Trent to and from the office in the city before walking around to let Sophie out of the car. \"Now, Cookie,\" he said, helping Sophie from the car. \"You will need to change before we get underway to our super-secret hide-out and await Darius's agreement to my ransom demands. Here,\" he thrust a bag at her. \"Go change in the office. I'll protect the door so no one interrupts you. And,\" he grinned slyly. \"If you're a good girl and do as I ask, I'll even take you to McDonald's on the way to the super-secret hideout.\"\n\n\"I don't see that you have given me much choice,\" she looked at the driver who seemed to be studiously ignoring her now. Looking into the bag, she saw black leather and reached in to pull out a pair of pants. \"You can't be serious?\" she shook her head holding up the garment to him. She knew this had to be a joke between the two brothers. Darius had confided that Asher was like his brother more so than the other men who had become his brothers during his time at school. They had shared a room, their belongings and everything they had from the first day they had arrived to accept their scholarships.\n\n\"Be a good little cookie and once your dressed we'll call Darius so I can list my ransom demands,\" he chuckled.\n\nSighing, unsure that she was happy to be used as a pawn in their childish games, she none-the-less walked into the office to change. Darius had liked her in soft shirts and flowing skirts, for ease of access he said. Asher, on the other hand, had provided tight leather pants and a sleeveless leather vest as well as sturdy boots with a low heel and a jacket of sturdy rather than supple leather. At finding a sleeve of hairbands, she took the time to braid her hair before opening the door and stepping out again.\n\n\"Fuck me,\" Asher groaned. \"No, seriously, fuck me, please!\" he groaned again, more exaggeratedly.\n\n\"You know I signed a contract to only do that with Darius until the end of the contest,\" Sophie pointed out as if speaking to a child which at this point, she thought she was.\n\n\"That's why I have kidnapped rather than abducted you. My brother needs to share his toys which means a renegotiation of that contract,\" he explained with a wide smile.\n\n\"One I would have to agree to, not just Darius,\" she pointed out.\n\n\"Pfft, what's not to love about me,\" he spread his arms wide and spun on the spot as if to let her see what she would be getting.\n\n\"I don't think that's the point somehow and I am not going to be the one to break the contract as it is now,\" she said seriously despite being convinced this was some joke between the brothers.\n\n\"Hence the renegotiation,\" Asher chuckled as if this all made sense. \"Ah speak of the devil he must have been wondering why you haven't arrived at the office yet and called your driver to investigate. Ash held up his phone with a wide smile.\n\n\"Hello brother,\" Ash answered and put it on speaker so Sophie could hear but put a finger to his mouth urging her to stay silent. \"How can I help you this fine afternoon?\" He inquired laconically.\n\n\"Cut the shit Ash, where is she?\" Darius's voice growled through the phone.\n\n\"No, no, that's not how this goes,\" Ash replied calmly. \"She did warn you that I had promised to kidnap her, so your question needs to be; What are your ransom demands, great and powerful, Asher?\"\n\n\"Don't be a prick, Ash. She's not one of the whores our brothers usually bring into the game. She's different. Special. Now bring her back,\" Darius's growl was so deep as to be barely more than a threatening rumble now.\n\n\"I'm your oldest and closest friend you think I can't see how special she is? I'm taking her up to the clubhouse for safekeeping until you are willing to negotiate her release,\" Asher replied as if he had no concerns about the inherent threat of violence coming from Darius's tone. \"Call me when you're ready to talk.\"\n\nSophie stood frozen. This no longer seemed like some elaborate joke between brothers. Darius had sounded beyond pissed, and she was worried that her contract and the plans she had been making for a future of freedom to do the things she wanted was slipping through her fingers because of this arsehole.\n\n\"Ash, I think you should take me back to Darius now. This joke has gone a bit too far,\" she said her concern at the call evident in her voice.\n\n\"Don't worry, little one. Darius knows where I am taking you. If I know him, and I do, he has already left the office and will probably beat us there so, in essence, I am taking you to him,\" he chuckled. Then he scooped her up and walked a short distance to dump her onto the back of a large motorcycle and cram a helmet onto her head.\n\nSophie's mind whirled. This had to be some elaborate game. True she still didn't know Darius very well and his brother's even less but she couldn't believe Asher was truly kidnapping her. What would be the point, they can't both enter her into the game and Darius had already done that. All the spots were filled. It didn't make sense to her why Asher would risk his close brotherly ties with Darius by doing this unless it was a joke of some kind.\n\n\"Have you ever ridden before?\" Asher asked into the system embedded within her helmet, startling her. \n\n\"No,\" she whispered uncertainly.\n\n\"I'll take it slow at first but wrap your arms around my middle and hang on until you get a feel for it. Just follow my body's movements, and we'll be fine,\" Asher instructed and revved the bike.\n\nThe vibrations rose through Sophie's body, and fear alone made her wrap her arms around Asher rather than just hold the sides of his jacket as she had been. It seemed that every time she got used to the feel of the bike and she relaxed her hold a little he sped up more, often weaving in and out of the growing traffic leaving the city for the holidays forcing her to grip him tightly again pressing into his back.\n\nAsher said nothing as he rode, enjoying the feel of the hot little body pressed up against him. Normally he would have cleared the city traffic in half the time, but he had taken it slowly allowing Sophie to get used to the feel of riding. He could feel her relax at times, and he pushed the speed limit and his riding skills a little more each time making her press up against him tighter than before. As he rode, he considered his methods of getting Darius to stop acting like a cunt struck fool. The girl was cute, sexy even, and had a mouth on her that Ash enjoyed, and he could admit that he had even fantasised about having that smart mouth with those luscious lips wrapped around his cock. He felt himself harden again at the visual in his mind. He had to admit he got the attraction for Darius. He'd fuck her in a heartbeat given a chance, but he wouldn't turn his back on a tradition for her like Darius had tried to do.\n\nAdmitting he could see the attraction was one thing but for Darius to cancel his annual Christmas plans with his brothers at the last minute had Asher worried. He needed to keep his head in the game if he wanted the girl to survive and go on to live a normal life after it. The Alliance had a code that they all lived by; that's why it worked. The men, gangs, families and even Cartels they either protected or went up against would exploit any weakness in their ranks. Having a wife or family was too much of a risk, to love someone outside of the brotherhood made them vulnerable to people who targeted the Alliance. \n\nThe men of the Alliance were all chosen because they had no one of significance to them. They were each true orphans, without any extended family, although some had vagrant parents who had given up their rights to them as children. They were chosen for their raw, innate intellect and life skills before they turned thirteen and entered the program. Not every candidate had what it took, and usually more than half of the young men fell by the wayside, as each year of school brought with it new and confronting training and challenges. Bonds forged by their alternative schooling were life long and although not every man was as close to his generational brothers as he was to his, Asher was closer still to Darius.\n\nShaking himself from his thoughts, he sped on toward the clubhouse. He smiled at the thought. The Blackjacks were his home away from home. Men who had attended St. Jude's Academy as one of the thirteen scholarship winners, no matter the year of their arrival in that place or if they left before completing their schooling, were eligible to become lifelong members. Other members came and went and they were well known for their charitable work particularly with underprivileged children. St Jude Hope of the Hopeless had taken them all in and given them a new life regardless of whether they became part of the Alliance or not. \n\nWhat had started as the six young men who had joined the Alliance and all it entailed reaching out to those who hadn't made it through the final hurdles of their school life had grown over the years, but the core group remained. The Alliance was never mentioned at the clubhouse, all the men there were equally successful in their own ways and had links in some form or another to the Alliance organisation even if they weren't one of the chosen inheritors of the mantle. Because of this, women were commonplace amongst the club members, wives, girlfriends, and even on some occasions daughters accompanied the members to the clubhouse so Asher knew taking Sophie there wouldn't seem odd to anyone but his immediate Alliance brothers.\n\nAsher pulled up at the country-style pub turned clubhouse with its wide verandas and beer garden and felt the stress of the city and work melt away from him. He stood from the bike, helping Sophie to her feet before pulling off his helmet as she did the same.\n\n\"Well shit, Ash has a girl with him. I could have sworn someone told me he was gay,\" a loud but distinctly male voice said from one side of the veranda.\n\n\"I think the politically correct term you are looking for is bi-sex-su-al,\" another male voice said in a snooty accent as he eked out every syllable of the word.\n\n\"Well, put me in a dress and call me Nancy,\" the first of the men chuckled. \"Who woulda thunk it?\"\n\n\"Good to see you too, Nancy,\" Asher smirked. \"This sexy little thing is Sophie. Nancy, otherwise called Roo, and Stone,\" he introduced the two men to her.\n\n\"Well hello, Sophie,\" Roo waggled his eyebrows at her while Stone nodded silently.\n\n\"Hi Nancy,\" she said and smiled sweetly.\n\n\"You can call me, Roo,\" the man said with a laugh.\n\n\"Darius here yet?\" Asher asked.\n\n\"I heard he was a no show for the ride this year,\" Roo tilted his head quizzically.\n\n\"He'll be here. Angry as all shit and ready to rip me a new one, but he will be here,\" Ash chuckled and took Sophie's hand, leading her inside the clubhouse.\n\n\"Same shit as always,\" Stone muttered under his breath.\n\n\"Fuck, Ash! What the hell have you done?\" David turned to look wide-eyed at the pair as they approached the bar.\n\n\"What?\" Ash said. \"You wanted him here as much as I did. I decided to change his mind about skipping it this year.\"\n\n\"Fuck,\" Zander scowled making Sophie think that was a permanent expression for him. \"You expect us to help you out when he arrives to kill you, no doubt?\"\n\n\"Not at all. This is a violence-free zone remember I couldn't be safer, besides this is Darius we are talking about, he's a big teddy bear right, Sophie?\" Asher flashed her a winning smile.\n\n\"I wouldn't have used that description for him. Ever,\" Sophie shook her head. \"Viking, Barbarian, you get the point I'm making here?\"\n\n\"Pfft, he's a big pussycat. Sure, a lion maybe but his roar is worse than his bite,\" Asher waved off her concern.\n\n\"You fucking, prick,\" came Darius's roar from the doorway as if on cue. Sophie could see the people on the veranda crowding the door and windows to watch as Darius strode across the room and snatched Sophie from where she stood and hauled her up against his body.\n\n\"Got you here, where you should be, didn't I?\" Asher shrugged. \"Your little Angel loves to ride. Don't you, Cookie?\" Asher said though he couldn't see her face anymore because of the grip Darius had on her.\n\n\"It does seem like everyone wants you here, Darius,\" Sophie said softly. \"Don't make me the Yoko Ono of your boy band, please.\"\n\n\"Fucker,\" Darius spat at Ash, but he couldn't help the small lift of his lips in amusement at Sophie's words. \"You told her we were a boy band?\" He accused in a disgusted tone.\n\n\"Not me. She probably just noticed how much Zander loves to sing and dance, and put two and two together,\" Asher shrugged while Zander grunted and scowled his disapproval wordlessly beside him. \"I take it Jayce filled you in then?\" he asked. \"Either that or you rode like a little old woman to get here.\"\n\n\"I told him,\" Jayce said. \"Put the girl down, Darius, before you suffocate her,\" he said gently. \"None of this is her fault unless you want to count why you were bailing on us for the first time since we started this thing.\"\n\n\"No,\" Darius snapped, but he did loosen his hold on her a little. \n\n\"This was just a joke, right? A prank?\" Sophie asked. \"You weren't really worried, were you? I mean, am I the bad guy here?\"\n\n\"You're the Yoko,\" Zander scowled at her as soon as she opened her mouth to speak and then grumbled the words. The corners of his eyes crinkled at the joke though not that anyone but his brothers would have noticed the minute movement.\n\n\"Shut up, Zander. She's not the Yoko,\" Darius rolled his eyes. He had known his brothers would take his decision not to do the ride this year badly and blame his obsession with Sophie for that decision. They had played right into his hands and despite the vow not to let any game girl join their annual ride, he had his girl with him. Admittedly, he did make plans to take her to a secluded cabin on the beach for the two days if they hadn't forced the issue and to show he was serious about blowing the ride off. He had been concerned that they wouldn't find that clue, and if they had, that they would realise he had booked it for twice as long as he needed so he could still enjoy an uninterrupted holiday with her before the New Year began after the ride which he knew they would force him to undertake. \n\nSighing audibly, he allowed Sophie to stand on her own two feet. He intended to let his brothers think they had won this intervention to warn him of the dangers of letting the girl get under his skin and would let them lecture him during their ride. They were wrong, of course, but he had not divulged his strategy this time. He considered how to put their minds at ease without having them think he had lost his mind or give away too many of his plans for Sophie. His next move would be easy after this, and once he had Asher fully onboard, his job of getting the others onside with his plans would be much easier.\n\n\"You better buy me a drink then since you went to so much trouble to get me here,\" Darius groused at Asher his lips turning up at the corners as he looked at his closest friend.\n\n\"Well, that was anticlimactic,\" Connor glanced at Sophie. \"Maybe she is a witch, after all.\"\n\n*****\n\nThey stayed for a single drink with Darius's brothers before Darius whisked Sophie away on the pretext that he needed to make sure she got some rest before the night's long ride. He took her through to the back where a long corridor of doors to what she assumed were bedrooms greeted her. He strode to the last one at the end of the corridor, stepped into the room and pushed the door closed, then grabbed her by the arm and pulled her to him. Sophie let out a gasp, and a second later, his lips were on hers. He kissed her aggressively, pulling her body firmly against his.\n\nHe ran a hand down her back and onto her ass. The tight leather of her clothes allowed him to feel every curve as if she were naked and the vision of Sophie on the back of Asher's bike with her body pressed against him assailed him. He knew it was a necessary evil, but he still wasn't ready to share her yet. Darius broke the kiss and nibbled his way down her neck, lightly biting and nipping at her. He could feel her body surrendering to his touch; he could hear it in her breath.\n\nHe moved her over to the dresser, pushing her against it before lifting her and placing her onto the edge. Darius yanked her vest open, revealing her breasts to him, pleased it had press studs rather than fiddly buttons. She watched his eyes as he took her in, his hunger evident in his expression. His huge hands moved up her sides, each cupping a breast and squeezing a nipple hard enough to make her gasp. He bent over and took first one nipple, then the other between his teeth, lightly biting and flicking at them with his tongue. He tugged at her pants and unlike the vest, it took him more time than he was happy about to rid her of them along with her underwear.\n\nSophie's breath caught in her throat when she felt his fingers touch her already throbbing pussy. Cupping a hand beneath her, he parted her lips, and finding her already dripping with desire. He inserted his middle finger inside her. She whimpered softly in need as he slid it in deeper and added a second immediately after. He used his fingers on her as he ground the heel of his hand against her clit. His lips found hers again, kissing her, biting her, swallowing her cries of pleasure.\n\nAll of the tension that had been building between them since he arrived to claim her back from Asher now became a white-hot ball of desire emanating from Sophie. She began to rock against Darius's hand as her orgasm approached, about to consume her. When it came, she cried out, into Darius's kiss allowing him to swallow it to try to quiet her cries of pleasure. Her body was shaking, and he held her tightly with his free arm, his hand now still but pressing against her throbbing pussy, adding to the sensations until she calmed down in his arms.\n\nDarius pulled away, but only long enough to open his pants, revealing his cock to her. At that moment, Sophie wanted everything all at once. She wanted to get on her knees and show him what she could be for him, but more than that, she needed him inside her. \n\nShe didn't need to ask. Darius had started to rub his cock on her pussy, coating it with her juices, preparing to take what was his. He owned this girl, possessed her, and it gave him a feeling of power he hadn't had from any other woman. She squirmed as she felt the heat of his cock on her as if he were branding her with it. He was, in a way, she thought to herself. A moment later, he was pushing his cock inside her. He'd been fucking her for months now, but she never got over the wonder that his cock was in proportion to the huge size of the rest of him inside. He's so big! Her mind screamed at her as she felt the almost painful pleasure of his slow penetration.\n\nDarius moved inside her slowly, allowing her to adjust to the girth of him. She was always so tight, and while he acknowledged that he was a big man, and she was a small woman, the sensation was beyond belief and he savoured every moment of her body's surrender to him every time he took her. He was torn, wanting to watch himself sinking inside her, but he also wanted to stare into her eyes as he took her. He loved to watch the eyes of a woman as she surrendered to him, but that which he saw in Sophie's eyes was like no other, every single time.\n\nOnce he was fully embedded and satisfied that she was ready, Darius found his rhythm, alternating long deep strokes with shorter, faster ones. They were forehead to forehead as he moved, eyes locked, Darius holding her by placing his hands on her ass, keeping her on the very edge of the dresser.\n\nSophie clawed at his shoulders and back, feeling him take possession of her with each stroke of his cock. This was what she had always longed for, someone who would care about her pleasure as much as his own. A man who could take her, demand her acceptance of him, then take her to places she had never been with anyone before him. Sophie could hear his breathing become ragged, and she knew he was close.",
        "\"Fuck me!\" she begged. \"Please,\" She felt Darius thrust into her hard, grunting at her words. \"Please Darius, I want it, I need it.\" She knew what her begging words did to him and cried out in pleasure as he rammed into her again and again.\n\nWith a growl, Darius thrust forward hard, his cock beginning to spasm as the first spurt of come bathed her insides. Again, and again, she felt his cock pulse within her pussy as he filled her to overflowing. It overwhelmed her, bringing on a second orgasm nearly as powerful as her first, and she arched back, lifting her head away from his, not bothering to stifle her cries of pleasure. \n\nWhen they had regained their senses, Darius carried Sophie over to the bed and placed her down, giving her a gentle kiss. He finished removing his clothes, then climbed onto the bed beside her. She curled up on his chest and looked up at him with a dazed smile and closed her eyes.\n\nDarius held her in his arms as she slept and wondered not for the first time what the hell he was doing. He had a plan, a plan he needed to stick to. This week was to be a major step in that plan and he considered everything he had put in place. He considered his manipulation of Asher that had got her here and how rather than lying here watching her sleep he should be downstairs reassuring his brothers that he wasn't cunt-struck as they believed. Using his free hand, he grabbed his phone to check the time and Sophie stirred beside him, snuggling closer. He dropped his hand back to the bed and closed his eyes feigning sleep hoping she would doze off again. They had another hour before they needed to re-join the Blackjacks for their annual Christmas ride.\n\nSophie tilted her head up to him and smiled at his pretence of sleep then slowly barely moving at first began to kiss her way over his chest before kissing her way down his body. She loved the rare times she could have him at her mercy and it gave her a small sense of ownership and power over him to be the one in control of his body for a change.\n\nDarius marvelled at the amazing woman who nibbled her way down his body, making him groan as he felt her warm breath move over his abdomen on her downward trail. His cock hardened at the mere thought of her and he pulled his hands back behind his head to stop the urge he had to hold her head and make her move faster. He wanted her to do what she wanted this time, to show him that she wanted him in the same way he wanted her, despite his preference for an aggressive dominating style of sex. There would always be time for that later. He let out a large groan as her lips finally found their target and she fluttered butterfly kisses up and down the shaft of his cock before placing a kiss at the tip.\n\nWith as much restraint as he could muster, he let her explore his cock and the heavy sac that hung beneath, using her dainty hands, her lips and her tongue. It quickly became too much for him, however, and he dropped his hands to tangle them in her long hair and feed her his cock until she gagged softly. Feeling his need to be fully in control rising rapidly, he pulled her up to him by her hair. So much smaller than him, he was able to move and manipulate her easily to straddle his hips without penetrating her. Pushing her up into a sitting position he placed his hands on her hips as she rolled them, grinding her pussy down over his rock hard cock and letting out a small moan that sounded more like a purr of satisfaction and need. His hands moved up to her breasts to tease at them as she continued the slow sensual dance above him.\n\nSophie could feel the hot flesh of his cock sear into her and rub against her clit as she ground down on him. His teasing hands made her even hotter as he pinched and played with the hard nipples that proudly stood out above her softly rounded breasts. Lifting her hips slightly, she positioned his cock at the entrance of her pussy and sank onto him, letting out a long low moan as she stared into his eyes.\n\nDarius watched the point of impact, seeing his cock slowly disappear into her tight little pussy. He groaned with her before looking up into her eyes as she rolled her hips, grinding down into his pelvis, ensuring she took all of him. Darius once again gritted his teeth as he let her take the lead, moving up and down his cock slowly, her moan of pleasure almost sounding like she was purring loudly in pleasure.\n\n\"Fuck,\" he groaned finally, and he sat, taking her in his arms and rolling her over onto her back. He pulled her legs up her feet resting on his shoulders, practically doubling her over and began to pound into her, losing himself in the feel of her.\n\nSophie squealed. She could barely move in the position he had placed her in, but she rolled her hips and clenched her internal muscles around him as they both gasped and tried to keep their voices low in soft moans of pleasure. Aware that they were not at home.\n\nDarius felt the shaking muscles in her legs moments before her body stiffened below him, her pussy clenching and pulsing around his pounding cock, releasing himself from the self-imposed restraint he had been exercising, he fucked her harder and deeper, his own climax slamming into him with force. Letting go of her legs, he collapsed on top her, quickly rolling to his side and pulling her with him, not wanting to crush her but not wanting to break the intimate contact either.\n\nThey lay entwined in each other's arms, breathing heavily, both of them lost in the feelings of satiated bliss. Darius's hands caressed her body as the small trembling waves continued to roll through her. He marvelled once again at how such a dainty little package could bring him such intense pleasure. He smiled as he felt her wet, dripping pussy pressed against him as he held her tightly to him. \n\n\"I need a shower now.\" She whispered as her hand smoothed over Darius's chest and through the thatch of short fair hair there, feeling its dampness, \"I think you do too.\"\n\n\"You think?\" Darius smirked at her and smacked her ass, making her squeal sweetly for him.\n\nDarius smiled as he got out of bed, following Sophie into the bathroom. Inside, there was an oversized shower with a tile bench at one end, perfect for a woman to tend to her shower routine. Perfect, also, for a couple to share. Sophie opened the door and stepped inside, glancing over her shoulder and giving Darius a cheeky smile.\n\nHe watched as she turned on the water and adjusted the showerhead so that it cascaded down onto her body. He took in every one of her curves, before he stepped into the shower with her, his cock stiffening once more.\n\n\"I'm a little sore right now, Darius. I...\" She let the words trail off as she looked up into his heated and determined gaze. \"I won't be able to sit on your bike with you if you take me like that again!\" she grinned and let her eyes wander meaningfully down his body to his semi-hard cock. Sophie poured liquid soap onto one of her hands and wrapped it around his hardening cock. She started to stroke him with one hand and reached down to fondle his balls with the other. \n\n\"Did you enjoy riding down here with Asher,\" he asked accusingly as if this was the reason she had been so horny as to instigate sex with him as soon as she woke from her nap.\n\n\"I was terrified most of the way,\" she said quietly. \"I've never ridden before.\" Sophie continued stroking him as she spoke, moving her eyes from his cock to his face, and then back again. She let the water run down over him, washing away the soap as she continued to stroke him. \"I don't know him well enough to trust him. It wasn't like being with you and knowing you wouldn't put me in any real danger.\"\n\nDarius's posture softened a little as he listened to her. She was right of course, and it wasn't like him to feel any jealousy where his brothers were concerned, especially not Asher, but it soothed him to hear the words and know that Asher still had a long way to go to win her trust despite his actions at the Jazz Club. Darius cupped her cheek letting his hands flow around to the nape of her neck as he pulled her closer to kiss her and groan at the feel of her gentle hands caressing his cock. Her lips and mouth were perfect and he wanted to feel them wrapped around his cock before joining his brothers and sharing her attention again.\n\nMoments later, with his guidance, she was on her knees, his cock in her mouth as she slowly bobbed her head up and down on it. She needed to show him that she wanted to please him and only him. She let out a whimper when Darius grabbed her by the hair, taking control of her movements and getting a better view of her face as she sucked him deep between her lips.\n\nHer pussy was needy, thoughts of soreness forgotten. She stayed where she was, though. She needed to be what she thought Darius needed her to be. She needed to show him that Asher and his brothers would never have the trust she had in him. He fucked her face, pulling her hair and growling at her. She gagged a few times but didn't care realising he was exorcising his possessive and protective demons from what Asher had done in abducting her.\n\nDarius could feel himself getting close, the moving image of Sophie and that hot sexy mouth were more compelling than the physical pleasure he felt. He could see so much in her eyes as she looked up at him. She needed to belong to a man who would show his need, take her with passion, and dominate her sexually. She needed this just as much as he did, he told himself. Unable to hold back any longer, Darius's cock erupted in her mouth, and Sophie swallowed, continuing to suck him, milking his cock until she had everything he had to give. She kept on kissing and licking his cock, even as he started to pull away.\n\nDarius brought her to her feet and sat on the tile bench, pulling her onto his lap and wrapping his arms around her. She leaned back against him, smiling and humming softly as he held her under the spray of water. \n\n\"What are you humming?\" Darius asked. Sophie often hummed around the house and in the shower but rarely sang any words for him to recognise. He'd never bothered asking before, but for some reason right then it seemed important to him.\n\n\"Heaven,\" she answered softly. When he drew back to look at her face and cocked an eyebrow, she giggled. \"It's a song by Julia Michaels,\" she added as if that would make her answer clearer.\n\n\"As opposed to the Bryan Adams version?\" he asked.\n\n\"Two different songs entirely,\" she giggled again.\n\n\"Sing for me?\" he asked. \n\n\"I don't have music,\" she prevaricated.\n\n\"That doesn't stop you humming. Just the chorus,\" Darius encouraged and waited long moments before Sophie hummed again preparing to sing the chorus.\n\n\"It's automatic. It's just what they do. They say all good boys go to heaven but bad boys bring heaven to you,\" she sang in a soft almost soulful voice before turning to look at him with a slight blush in her cheeks.\n\nDarius's grin was wide as he bent to kiss her before getting to his feet and continuing their shower before he could start a fourth round of taking her. Fuck he'd never been so horny in his life as he was with this girl. He had thought the honeymoon period would have started waning by now, but he was still as enamoured by her as he was the first day he took her.\n\n******\n\nSophie wasn't sure if she was thrilled or terrified when as one the members of the clubhouse mounted their bikes and rumbled out onto the semi-rural road. She had been told that this was an annual charity run and that they would meet up with trucks carrying supplies in the early hours of the morning. Unlike Ash, who had gone easy on her at first, Darius seemed to feel the need for speed and she clung to him desperately as they took off surrounded by thirty other bikes. \n\n\"It grew later and she grew weary with each passing kilometre despite the brief nap he had allowed her that afternoon. Even the very real fear of falling asleep and toppling from the back of his bike was barely enough to keep her awake when they finally pulled into what looked like a campground for truckers.\n\nSmall steel cabins dotted the spaced between trucks parked around a well lit and lively looking country pub. A range of bikes stood sentry in front of the pub and Sophie had difficulty working out which belonged to the Blackjacks and which were local's or random travellers. Darius helped her from the bike and kept an arm around her waist as she got her legs to work properly again after being on the bike for so long.\n\n\"How are you feeling?\" he asked a touch of concern entering his voice and face as he looked her over.\n\n\"I'm fine, glad we are stopping for a break though,\" she admitted honestly.\n\n\"No more bikes for tonight. Now we travel in one of those,\" Darius pointed to the huge semi-trailers surrounding the pub. \"First breakfast, then we drive,\" he explained.\n\n\"Breakfast? It's still dark what time is it?\" Sophie asked, looking up at him.\n\n\"It's almost four and we need to be out of here in thirty minutes,\" he guided her into the pub where a huge group of men gathered and a buffet-style breakfast was underway. He took her to where Zander had already taken a seat with a large plate of food. Stay with Zander while I get you some food,\" he instructed.\n\n\"Great pick the scariest dude in the room to leave me with,\" she sighed and took a seat.\n\n\"That's the point, no one messes with him lightly, so no one will bother you, including him,\" Darius chuckled and walked toward the buffet line.\n\n\"Not so scary,\" Zander mumbled and handed her a spare fork. \"Eat,\" he said pushing his plate toward her so they could share. \"The line is long and he'll be a while. I can get more if I need to.\"\n\n\"Thanks,\" Sophie said nervously, then took the fork eyeing him warily. She was starving and looking at Darius standing and talking to people before even getting to the line she sighed and cut a small piece of a hash brown off with her fork before spearing it and lifting it to her lips.\n\n\"Just pick the whole thing up if you want it, nobody stands on ceremony here,\" he waved his fork around at the men who were shovelling pancakes, French toast as well as bacon and eggs into their mouths with gusto. Zander wasn't sure he could tear his eyes away if she continued to pick up food from his plate and put that fork between those cupid-bow lips and pull it out slowly. It was better to have her pick something up and bite into it he decided. Taking a napkin and wrapping it around the bottom of a hash brown, he handed it to her.\n\n\"Thanks,\" she said again taking it gingerly from him as if afraid to touch him. He grunted a response and went back to his food, trying not to watch her eat. He let the tension he felt drain from him as one by one his brothers joined his table always leaving the seat beside Sophie free for Darius who was taking longer than it should given that he had a girl on the boys only trip. He continued to feed Sophie, this time with a thin slice of his French toast again wrapped in a napkin.\n\n\"How was the ride?\" Asher asked Sophie. \"Not as comfortable as when you rode with me, I bet, but the big guy takes up a lot of room on that seat even if he does ride the biggest bike known to mankind.\"\n\n\"He does?\" Sophie asked, genuinely curious.\n\n\"He does what?\" Darius said, placing a plate of cereal and fruit in front of her and taking his own seat with a plate of bacon eggs and hash browns.\n\n\"Asher was explaining that you need a big bike to carry your mammoth ego,\" David chuckled.\n\n\"He's always been jealous,\" Darius chuckled rather than rising to the bait he knew David had thrown out at him making David raise an eyebrow at Asher who mouthed the word witch. \"I heard that Ash,\" Darius said between mouthfuls of food.\n\n\"What sort of breakfast is that?\" Zander mumbled to Sophie once Darius was engaged in juvenile banter with Asher.\n\n\"It's what I'm normally given. No use complaining, it's what I signed on for,\" Sophie sighed and picked up her spoon to start on the cereal but startled as Zander pushed back his chair and stood abruptly walking from the table. No one else at the table seemed to take any notice of his abrupt departure so she went back to her breakfast and listened as the brothers joked and bantered with each other. No more than two minutes later a plate with crispy French toast drizzled with a little syrup along with bacon and a hash brown on the side landed in front of her.\n\n\"It's fucking Christmas let the girl eat what she likes for once,\" Zander snapped as Darius turned and opened his mouth to speak. Picking up the cereal and fruit, he walked away from the table as everyone sat in stunned silence. Dropping the plates off at the servery, he continued outside to check on the rig he would be driving.\n\n\"That's what you always have for breakfast. You don't like it?\" Darius asked a frown creasing his forehead.\n\n\"I like it,\" he reassured him. \"It's what I eat every single day though, and a change is nice when Margaret isn't here to scowl at me.\"\n\n\"How does Zander know what you like?\" he asked in a barely audible growl.\n\n\"You took a long time to come back, so he shared some of his breakfast with me. It was just a hash brown and a little French toast. Was that wrong?\" she asked, worried that she had caused another problem between Darius and his brothers.\n\n\"No, eat what you want,\" he bent his head to kiss her. \"Next time just tell me if you would prefer something different, and I'll get it for you.\"\n\n\"I would have eaten the cereal. Honestly, it wouldn't have bothered me at all. I like both,\" Sophie tried to reassure him. \n\n\"Eat, Angel, we have to go soon,\" he instructed and turned back to his own food and his stunned brothers.\n\nIt wouldn't have been the first time he and Zander locked horns if Darius had let his temper get the better of him and asserted his dominance over Sophie and challenged Zander on what he did. Just as if it hadn't been his plan all along to get Sophie on the ride with him, he would have gone Ballistic at Asher for abducting her the way he had. His brothers were seeing a calmer more moderated side of him, and he knew they were drawing their own conclusions about his relationship with Sophie, and he needed to walk the line carefully now because it wouldn't be beyond any of them to think Sophie's influence over him to be a bad thing rather than believe he had a bigger plan for this girl. He had to admit though it was going better than he expected at this point. \n\n*****\n\nWith a full belly and after all of the nervous anticipation of the day Sophie was more than happy to curl up in the small cabin area behind the front seats of the truck's cab and fall asleep as Darius with Asher as his co-driver pulled out onto the highway. She still had no idea where they were going or what they were doing but at this point, she was beyond asking. She drifted in and out of sleep as the big truck jolted over potholes and roared through its gears as they approached tight bends. She only caught the occasional word of the murmured conversation in the front cab but she could tell it was serious by the tone in usually joking Asher's voice.\n\n\"So that's all you're going to tell me?\" Asher asked incredulously.\n\n\"The less you know, the better off you'll be if the shit hits the fan,\" Darius grumbled knowing Asher wouldn't leave it alone and Darius could extract the most solemn of oaths from him before he divulged the full story.\n\n\"Since when have you ever not dragged me into the shit with you. It's what we do. I get that you want to protect the others, but it's me, D. You know you can trust me, over anyone else. We swore that oath as thirteen-year-olds and its never changed.\" Asher reminded him.\n\n\"You don't know what you're asking and if the council find out they will take matters into their own hands,\" he said seriously glancing over his shoulder to make sure Sophie still slept. \"Besides I'm not going to say anything with her sleeping a foot away from us.\"",
        "\"So, she doesn't even know she's in some kind of danger if someone recognises her?\" Asher was stunned by this revelation. \"Fuck, D. Whatever it is, I've got your back. You have to know that, whether you tell me the details or not, you won't be going down alone.\" \n\nThey lapsed into silence. This wasn't what Asher had been expecting. He had just wanted to find out why Darius appeared so obsessed by this girl that he was willing to break with tradition and moderate his temper so profoundly when she was around. The girl was a hot, tight, sexy little package, there was no doubt about that but Darius would have been the last one to be pulled in by a pretty face he would have thought. When they had been typically horny teenagers, her type was exactly the type they had fantasised about. Even seeking out girls with similar looks in the porn they watched. He got it and could even admit that he was a little bit jealous that Darius had seen her first but to find out she required rescuing from more than the dismal life she had been leading made him feel just as protective of her as Darius appeared to be.\n\n\"Will the council find what you did when they delve into the research you did on her? If she gets into the final five, I mean,\" Asher asked.\n\n\"I buried it pretty deep, but there's always the possibility,\" Darius admitted again looking over his shoulder. \"Let it go Ash. I'm not talking about this with Sophie right beside us, asleep or not.\"\n\nDarius followed the lead truck as the convoy of eighteen trucks whittled down, as three at a time pulled off onto side roads. He was glad he wasn't navigating this year with so much on his mind. He would tell Asher his plans for Sophie and the reasons behind it once they had a moment alone which he had no doubt Asher would create at their next stop but he wasn't going to trust that his Angel was sleeping deeply on these rough roads and he didn't want her to know until he absolutely had to tell her because he knew she wasn't ready to hear it.\n\nThe sun was sitting like a large hot ball just clearing the horizon when the trucks left the main highway onto a dirt road for their final destination. Sophie woke with a start and knelt upon the bedroll running her fingers through her tangled hair and blinking the sleep from her eyes.\n\n\"Thank you for letting me sleep, where are we?\" she asked.\n\n\"Almost there,\" Darius said. \n\n\"Where is there?\" she asked.\n\n\"The middle of nowhere,\" Asher laughed. \"There is a boy who wrote a letter to Santa and instead of asking for the new Nintendo switch or a bike he asked for rain and enough hay to feed his dad's cows,\" Asher explained. \"We can't do much about rain, but we have water and hay to tide the family over for a while. It's been a ten-year drought, more for some farmers and most are barely holding onto their land. So, once a year we help out a few of them. We can't help them all but when a kid is asking Santa to help keep his family together, we listen.\"\n\nSophie was speechless. This hadn't been what she had been expecting at all. She touched a hand to her chest as the warm fuzzy feelings for these men filled her.\n\n\"When we are there, don't use names. We are just Santa's helpers, and we got little Peter's letter from Santa because he couldn't fit all this into his sleigh even being all magical and stuff,\" Asher continued with a wink as Darius manoeuvred the big rig through the gates and over a grate to the property. \n\nA family appeared on the front deck as Sophie watched through the windscreen and Darius manoeuvred the big rig past the house to a huge shed that was almost empty, the few bales of hay still available looking nowhere near enough for a property she knew must be big by the location so far from civilization. Sophie saw the rig behind them pull up at the farmhouse and Zander step down from the cabin to talk to the family before she lost sight of them again. Men appeared as if from nowhere to help unload the two trucks piled with hay but Asher told her there were still a few employees helping out on the farm on reduced wages until times improved.\n\nSophie stood to the side; there was little she could do to help with the large bales so she did her best to stay out of the way while remaining where Darius could see her as instructed. It wasn't until most of the hay was unloaded that Peter and his mother walked down to the shed wheeling a cooler like a cart behind them filled with drinks for the men that had brought them so much. \n\n\"You must be Peter,\" Sophie said as the mother and son approached her. \"Santa told me how good you have been this year.\" She smiled widely at him and turned to greet the mother. \"Merry Christmas,\" she said cheerily.\n\n\"You have no idea what this means to us,\" the woman choked back a sob and embraced Sophie who stood stiffly not knowing what to do.\n\n\"It's not me you need to thank,\" she patted the woman's back awkwardly. \"It's Peter. He wrote the letter to Santa.\"\n\n\"Oh, yes, of course. Pete's an awesome kid,\" she said straightening herself and looking down at her son.\n\n\"Peter, bring your mum over here,\" Zander called out distracting the pair. Sophie watched as they approached the almost empty trailer bed. The mother broke down into tears again as she saw the boxes of long-life food \u2014 cans of vegetables and fruit along with staples of rice, flour and sugar among other things. In the middle of it all, was a junior-sized quad bike with all the bells and whistles for Peter himself. The second trailer also held a stash of goods for the family and it was all unpacked relatively quickly with the help of the men who worked the station.\n\nDeclining the invitation to stay for Christmas lunch, the men of the Alliance accepted a cool drink and stood to watch Peter master his new quad with his ever-watchful father guiding him.\n\n\"Jayce,\" Asher called out and waved the other man over moving away from Darius as he did so. Darius walked toward her and bent to kiss her head as he stepped past her to talk to Zander. Sophie turned to watch him and the intense conversation that ensued. She couldn't hear what was being said, but she could tell Darius was pissed. Deciding to intervene in an attempt to calm him down, she walked up slowly, making her presence known but hearing the tail of the conversation. \n\n\"...didn't fucking interfere with you and Mimi. Give me a little space and time, and for fuck's trust me when I say I have it under control! If you need to know, I'll tell you,\" Darius said before holding out a hand and gathering Sophie to his side. \n\n\"You got any decent music on your phone?\" Zander asked Sophie in the clearest voice she had ever heard him use.\n\n\"I guess that depends on what you qualify as decent music. I have stuff I like on it,\" Sophie said quietly slipping her phone from her pocket and unlocking it before passing it to Zander.\n\n\"Good enough,\" Zander grumbled and walked away to where Jayce still talked to Asher and threw the keys to the now empty water tanker at him. \"You're driving back with Asher,\" he said and went to walk toward the truck Sophie and Darius stood beside. \"Let's go,\" he nodded and opened the door to the cab still holding her phone.\n\nThe drive back was quiet as Zander synced her phone to the car stereo and chose a playlist that interested him. He sat back in his seat and crossed his arms over his chest before closing his eyes. Sophie waited through several songs before leaning forward through the gap to speak close to Darius's ear.\n\n\"Darius, is everything okay?\" she asked tentatively\n\n\"Why do you ask?\" he murmured back glancing over to where Zander sat unmoving and breathing deeply.\n\n\"Well, I couldn't hear what you said, but you and Asher were very serious on the way here and just then when we left you were talking to Zander you looked pissed,\" she explained. \"I don't want to cause problems with your brothers. I meant it when I said I don't want to be the Yoko Ono of your boy band.\"\n\n\"We are the furthest thing from a boy band, Sophie,\" Darius chuckled. \n\n\"You know what I mean,\" she sighed.\n\n\"No, you're not the cause of any problems. This is just how we are. Asher could drive the most patient man crazy at times. It will all be fine,\" Darius reassured her. \"Besides I like Zanders non-existent conversational skills when I'm driving.\"\n\n\"Oh, sorry,\" Sophie apologised for interrupting him and sank back onto the bedroll.\n\n\"I love your questions, Sophie. You can talk to me anytime. It saves me trying to guess what's going on inside that pretty head of yours,\" Darius glanced over his shoulder with a grin. \"Is that song you were humming before we left on your phone?\"\n\n\"Yes, but on a different playlist. \"I can find it for you if you like,\" she offered. \"Zander still has my phone, though.\n\n\"What about the one you sang at the Jazz club?\" Zander mumbled interrupting their conversation. \n\n\"No, but it's on Spotify if we have Wi-Fi out here,\" she offered.\n\n\"What about the one you were originally going to sing but didn't?\" he asked. \"Why did you change your mind?\"\n\n\"It was a bit slow and sultry unlike most of the songs that night so I thought it would be better to go for something more up-tempo and fun,\" she explained without actually naming the song or the fact that she was trying to channel the vivacious Rita Hayworth that night.\n\n\"Is it on your phone?\" he asked, holding up the device and looking over her playlists.\n\n\"I don't know honestly,\" she said evading the song name again. \"I'll look if you like.\" She held her hand out for the phone.\n\n\"It's alright I like playing DJ,\" he selected another playlist and scrolled through it. Approving of the list, he hit shuffle play and leaned back his arms crossed loosely over his chest again. \"Carry on, pretend I'm not here,\" he mumbled.\n\nSophie lay back on the bedroll listening to the music and leaving Darius to drive the big rig in peace. This was such a nice thing to do for Christmas. She understood why his brothers had wanted him there if it was tradition and she was half grateful that Asher had abducted her and forced the issue. His brothers were hard to read especially the perpetually scowling Zander. He had dark colouring like Asher, but he was as big if not bigger than Darius. The two of them seemed crowded in the cab of the truck. He looked like the barbarian opposite to Darius's fair Viking looks. Both were giants of men although none of the brothers could be called small or short by any stretch of the imagination.\n\nSophie closed her eyes, but sleep eluded her. The naps she had taken made her feel more tired than if she hadn't slept at all but her mind was working overtime as she tried to puzzle out the ongoing tension between Darius and Asher even after he had agreed to join the annual ride. She wasn't dumb. She realised neither Stella, Mimi or Layla had gone with their partners in the game. None of the women who were at the clubhouse seemed to be leaving with their men either she realised. It seemed like more than just that though but the more she thought about it the more certain she was that she was now viewed as the Yoko of the group despite what Darius said. The thought worried her especially when she knew he would need their help and support for the challenges in this game. Another thought occurred to her and she sat up intending to voice her worry to Darius but stopped herself worried again that she could make matters worse.\n\n\"Everything okay?\" Darius asked glancing back at her.\n\n\"You and Asher aren't really mad at each other, are you?\" she asked softly.\n\n\"No, Angel,\" Darius gave a soft chuckle. \"I just needed a break from his nagging. Trust me he will be straight back at it as soon as we get to the clubhouse.\"\n\n\"Nagging about me?\" she asked, \"I shouldn't be here, should I? You should have left me at home with Trent or Susan,\" she said, knowing it was the truth.\n\n\"There was no way that was happening,\" Darius said the menacing growl edging into his voice again. \n\n\"Why? Stella, Mimi and Layla are at home with their teams,\" she said. \"Don't you trust me to stay there?\"\n\n\"You, I trust,\" Darius said unequivocally. \"Other people not so much,\" he qualified. \"What if you needed me and I was a twelve-hour ride away?\" He asked. \n\n\"I'm sure I could survive two days without getting into trouble,\" she sighed. \"I made it this far, alone, didn't I?\"\n\n\"You did but look at what could have happened if I didn't get to Michelle before someone else did?\" he asked. \"No one else knows your back story, Sophie, what if someone locked you in a room thinking they were keeping you safe and you had a panic attack or freaked out like you said?\"\n\n\"Then maybe whoever babysits me should be given a list of rules from the contract,\" she snapped. The thought of being locked in anywhere gave her chills up and down her spine. She felt the need to be outside and feel the fresh air on her face. \n\n\"Watch the mouth,\" Darius growled making her go silent and feel the small dark space she travelled in close in around her. During the night she had been able to keep the space dimly lit with tiny fairy lights, but she hadn't bothered with them in the daylight. As if her vision was fading, the space seemed to get darker and more shadowy as it closed in around her.\n\n\"Darius, how much longer until we get to the clubhouse,\" she asked in a soft but tremulous voice. She was starting to have trouble breathing and her chest rose and fell as she tried to take in big silent breathes.\n\n\"What's wrong?\" Darius turned to glance over his shoulder and then adjusted the rear-view mirror to see her. \"Fuck, Sophie talk to me!\" He began to shift down gears and wondered if just mentioning what could have happened to her when he wasn't there, was enough to cause what looked like a panic attack. \"Zan, I'm pulling over you have to drive for a bit,\" Darius said, urgency ringing in his voice as he threw out his arm to whack Zander and ensure he was awake.\n\n\"I'm awake no need to hit me,\" Zander scowled and peered into the back seeing the panic-stricken look on Sophie's face. \"Shit, what's wrong with her?\" he asked while reaching into the back and hauling her resisting little body into the front of the cab with him. She fought his hold until he cracked the window letting fresh air in and she leaned into it drawing deep breaths.\n\nThe truck finally crawled to a stop and Sophie scrabbled at the door handle to get out then jumped from the truck and ran into the long grass on the side of the road. She had barely taken more than three steps when Zander's arm snaked around her middle and he picked up her flailing body bringing her back to the roadside and Darius who took the panicked and sobbing girl from his arms. Zander watched as Darius sat pulling her onto his lap and then placing one of his hands on the road beside him the other gently stroking her hair, leaving her free to sit without restraint as she crooned soft words to her.\n\n\"It's okay, Angel. You're free, you're out of the truck now,\" he said softly petting her hair. \"Zander will get your phone for you so you can call for help if you need to,\" he added slightly louder so Zander could hear him.\n\n\"This is why we don't bring chicks on this ride. It's too much for them,\" Connor said angrily as he got out of the truck that had pulled up behind them.\n\n\"It wasn't Darius's choice to bring her, so shut the hell up,\" Zander snapped uncharacteristically, silencing Connor and surprising David who stood with him. \"Besides it's not a pee break or a tantrum it's a panic attack.\" Then he took Sophie her phone to hold. \"Take your time, I'll let them know we'll meet them at the clubhouse,\" Zander murmured to Darius who was still trying to soothe the panicked girl. He could see the lead truck ahead of them had also pulled over so he went back to Connor and told him to go on ahead. They were less than thirty minutes from their destination so they didn't need the security of the other two trucks with them.\n\n\"Nah, we'll wait. I'll let Jayce know what's happening. They can go on ahead if they want,\" David said and turned back toward his truck with a final look at Darius and Sophie sitting on the ground. \n\n\"I need to walk for a bit,\" Sophie finally pushed out the words and struggled to stand. She was still breathing hard, but the worst of the panic was gone as she bathed in the sun's rays and gripped her phone as if it was her lifeline. Darius was right beside her as he stood with her, but he hadn't touched her, which she was thankful for. \"Thank you,\" she said quietly, \"For stopping the way you did. I just need another minute or two.\"\n\n\"Take all the time you need just stay where I can see you, on the side of the road not in the long grass or bush, there could be snakes,\" he explained his reasons for asking her to stay on the road as if afraid to put any boundaries on her while she was still breathing so raggedly.\n\n\"You can't fix her, you know,\" Zander said softly coming to stand beside him as Sophie walked slowly along the road's edge.\n\n\"I'm not trying to,\" Darius shrugged. \"I'm just trying to keep her safe. There's a lot more to her story than even she knows,\" he sighed on a deep breath. \"I'll explain just not yet, okay?\" \n\n\"This is what Asher has a bee in his bonnet about?\" Zander asked.\n\n\"He knows she special, different from the other girls we usually get in the game. He just can't work out why. Yet,\" Darius admitted. \"The night I took her someone else tried dragging her out of the club by her hair. Stupid fucker never got far with all the security Michelle had in place but she needs my protection, Zan. I need to keep her in the game as long as possible which means I am going to need help, from all of you and I am going to need you to trust me that you don't want to know the details until it's necessary.\"\n\n\"Maybe it would be better to cut and run brother, she's obviously damaged beyond repair if just talking about a trigger can do that to her,\" Zander knew it was always best to be blunt with Darius and let him know what was going on in your mind.\n\n\"I fucked up. It's my fault Sophie's on someone else's radar now. I just need time to give her a new identity and the skills to look after herself better than she had been,\" Darius admitted more than he wanted to Zander. His silent brother though never spoke about other people's business which was probably why he had finally confided this much to someone.\n\n\"Just tell me this, will this secret your keeping about her harm the Alliance in any way?\" Zander asked the direct question.\n\n\"If she is found with us before the transition to a new life, maybe,\" Darius admitted. \"I've covered our tracks pretty well though. Erased her entirely from her last place of work, had the club raided and shut down and all the employees arrested on the same night that I took her. As far as I know, the club was the only link they had to her. I'm not even sure they knew her name or just her stage name there.\"\n\n\"So, if you don't tell Asher and the guys any details and the shit hits the fan, none of it will stick to them,\" Zander nodded understanding why Darius was so cagey about this girl at last. \"Alright, I'll trust you but the moment it starts to go tits up you tell us exactly what's going on and we make a group decision about whether to be heroes or not. Agreed?\"\n\n\"Agreed,\" Darius nodded reluctantly feeling strangely better after talking this through with Zander. Who would have thought the man who he butted heads with the most would be the most supportive of his plans to protect Sophie for the long term?\n\n\"Sorry,\" Sophie said apologetically as she returned to the truck. That little back area just closed in on me suddenly. I was doing fine back there, I knew I could get out it just...\" she spread her arms as if lost for the reason why. \"Thank you for stopping and letting me get my shit together again. Is it far to go now?\"\n\n\"Not far the way I drive,\" Zander grinned and threw the keys up, catching them lightly and jogging back to the truck. ",
        "\"You can sit in the front with me,\" Darius offered. \"I doubt anyone out here will care.\" Darius climbed up into the truck and then helped her up and into his lap.\n\n\"You sure you're good to go?\" Zander asked without his usual scowl. When she nodded, he revved the engine and pulled back out onto the road taking the lead as he had on the way to the farm, the other trucks falling in behind him.\n\n\"You recovered quickly, you could have taken more time if you needed,\" Darius said softly and wrapped his arms around Sophie more than pleased that she had gotten over the panic attack so quickly but understanding that she may have needed more time.\n\n\"I didn't want to hold everyone up. I'm already the Yoko; I don't want them to hate me, even more when everyone has to be dog tired,\" Sophie said quietly letting him know she understood that her brothers didn't particularly like her.\n\n\"Nobody thinks you're the Yoko,\" Darius rolled his eyes but couldn't help the small smile that tilted his lips.\n\n\"Zander does, he said so at the clubhouse,\" she argued looking at the man who was now driving.\n\n\"True, I did say that,\" he agreed but neither agreed or denied that he still felt that way.\n\n\"That's because he's oppositional by nature. He tells most people the sky is green and we have all had it wrong our entire lives,\" Darius chuckled.\n\n\"The daytime sky is a reflection of the ocean's right? Well, the oceans are green ergo, the sky is green,\" Zander explained as if it all made perfect sense.\n\n\"But,\" Sophie began.\n\n\"Don't bother, the only time he speaks is to argue with people about stupid impossible questions,\" Darius murmured.\n\n\"Really? He didn't argue when we were talking about music earlier,\" Sophie said.\n\n\"You kept evading my question, so I gave up,\" he shrugged. \"Find the song you were going to sing at the Jazz club originally and we can argue over whether you made the right choice,\" he offered.\n\n\"We wouldn't argue if you agreed with me,\" she argued just to be silly.\n\n\"The likelihood of that is slim,\" he grumbled \n\n\"You don't even know the song,\" she said indignantly.\n\n\"Hence my question,\" his grumble got louder.\n\n\"Just play it, what's the worst that could happen?\" Darius asked.\n\n\"Fine,\" she sighed and scrolled through her Spotify list until she found Nora Jones, Turn Me On and hit play.\n\n\"Fuck,\" Zander drew out the word under his breath. \"You definitely made the wrong choice. In fact, I suggest we return to the scene of the crime and correct this injustice!\"\n\n\"I think not,\" Darius said, bending his head to kiss the top of Sophie's. \"Good choice, Angel.\" He chuckled as Zander scowled in disappointment and began his argument.\n\n*****"
    ],
    "authorname": "Helleon",
    "tags": [
        "abduction",
        "bikes",
        "charity",
        "christmas",
        "clubhouse",
        "trucks",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/14-months-04-christmas"
}