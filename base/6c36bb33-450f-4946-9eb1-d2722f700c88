{
    "title": "The Fallen Ch. 04",
    "pages": [
        "Sorry for the delay in getting out this latest chapter. Life has been busy, and writer's block can be a catty bitch sometimes. I hope you enjoy chapter four!\n\nThe usual disclaimer: This is a work of fiction. All characters involved in erotic scenes are over 18, even when not explicitly stated.\n\n* * * * * *\n\nTHE FALLEN\n\nCHAPTER 4: MYSTERY\n\n\"Seraphinus is the first of the heavenly rank of Cherubim to escape the Abyss. The tear is becoming larger.\"\n\nI recall my father's words from earlier today as I stare out the window of his big, black Cadillac Escalade. I haven't gotten a complete explanation about that statement, so the full implications of it still elude me. I would think more powerful Eternals appearing on Earth would be a good thing, but who knows? Maybe the old codgers in charge are getting nervous in their ivory towers over this news. Between all that's happened last night and today, I've found my head is spinning too much to think about it.\n\nDad is driving with Chiaki riding shotgun, myself and Danni seated in the middle row, and my brother Chris all back-of-the-bus in the third row. We're navigating through the city's business district. It's a late Sunday afternoon, and traffic is pretty heavy.\n\nIt's still hard to come to grips with calling Thomas \"father\" or \"dad\". Up until this morning he was just a friend and classmate, a young man I thought was my own age. Hah...a young man. If what Chiaki said is accurate then he's over 120 years old.\n\nOne thing I'm aware of now, though. The name Thomas Devore is a fake. I know his real name from the intermittent letters he'd send as I was growing up. They were always signed \"Ash Nightlock\". For some reason his masquerade as a Bay Ridge Academy student seems important to him, so in public he'll still have to be Thomas.\n\nAfter my recent awakening, I've found myself part of a much larger world. It's one I'm about to be thrown into head first. I'm not totally sure why, but we're on our way to meet the territory Overseer, a woman named Harmony Grace.\n\nI'd insisted on a shower first, and my father insisted I dress in something nice. Luckily, Danni and I went clothes shopping yesterday, and I have something nice to wear. All five of us are decked out in suits or dresses, shiny shoes or high heels. I swear it looks more like we're heading out for a night of clubbing than anything else.\n\nI suppose father thought Chiaki and I might make a poor impression on Ms. Grace if we showed up in our grungy, sweaty running outfits. He's probably right, but it's still funny it was a guy who insisted we get all fancied up for this little meet-n-greet...or whatever it is. Left to my own devices I probably would've just thrown on a clean pair of jeans and a t-shirt and slapped my hair into a quick pony.\n\nNow I have to walk everywhere in these high heels and hope I don't stumble around like a total dweeb. I am so not used to walking in them. I thought I'd get more practice before I had to wear them out on the town. Danni acts quite at home in hers, as if she's used to this high-society stuff.\n\nConsidering the way she threw money around while we were shopping yesterday, I'm guessing Danni comes from a wealthy family and actually is from high society. Not that something like scads of money is important to me, but I'm sure Danni will tell me about her family when she's ready.\n\nDuring our slow drive through the city, we all listen to father give Danni the same lessons he'd given me about Eternal culture and government. In spite of all the clich\u00e9s about blonds, Danni is a sharp cookie and understands just fine.\n\nAfter my father wraps up, I ask, \"Okay, so why are we going to meet this Overseer?\"\n\nHe explains, \"When I asked for permission to form our original Covey I was granted a limit of five members, but no suitable candidates ever presented themselves...until now.\"\n\nDanni questions, \"But if she already gave you permission why do we have to go see this Ms. Grace?\"\n\nDad tells her, \"She granted a limit of five with the condition she approved my other two choices.\"\n\nNo one asks the obvious question, though I see it written on Danni's face when I look over at her. What if Harmony Grace says no? I take Danni's hand and give it a reassuring squeeze. No matter what, Danni and I will be together...even if the Overseer forces us to leave Bay Ridge Academy.\n\nWe can always live in the city or the small town in between and commute to classes. I have a sneaking suspicion Chiaki's father, Ken'ichi, would put us up until Danni and I could get settled in elsewhere.\n\nAt our lack of response my father assures us, \"Don't worry. Harmony is a reasonable woman. I don't foresee any problems. This is mostly just a formality and a matter of protocol.\"\n\nSilence descends on the Escalade again, and Chiaki reaches out to turn on the radio. Her fingers hunt through stations, and I remember there was something I wanted to check. I reach down, open my purse, and get out my phone.\n\nOpening a web browser, I search for any shops in the city named \"The Third Eye\". It takes a bit of hunting to find what I'm looking for. When I see it's location, though, I'm a bit surprised. I realize the magic shop is nowhere near the warehouse district where my \"time-warp-erased\" experiences took place.\n\nStrange.\n\nNo stranger than being transported back in time to alter a seemingly insignificant decision. A decision I changed that basically brought a girl back from the dead and erased a horrible and frightening night. I should see if we can make a quick side stop after our meeting with Ms. Grace, but I'll have to think of a way to deflect any questions.\n\nNothing comes to mind. On second thought, maybe I should just go there on my own.\n\nOr...maybe I should let sleeping dogs lie and simply be grateful Emma and Graves did what they did. I probably would if I didn't have a nagging suspicion there were ulterior motives involved. I'd rather find out what those motives are. I don't relish the idea of playing an unknown part in the plans of two people powerful enough to bend space and time to their whims.\n\nI've also been itching all day to ask about Trina, the other lupines, and this \"accord\" we supposedly have with them, but then I'd have to explain how I even know about any of that. No one has uttered a peep in that regard, and I don't feel ready to reveal the circumstances of how I'd come by the knowledge.\n\nMy life has come to feel like I've been handed a scant few puzzle pieces and asked to guess what it's supposed to look like when completed. I suppose I'll just have to roll with the punches for now until I can start throwing some of my own.\n\nBut...it would seem we're here. My father is pulling into a large parking garage situated next to a towering skyscraper.\n\nMust be time to put on my game face.\n\n* * * * * *\n\nWe're checked thoroughly by lobby security, the two armed, bruiser-types wanding us, sending us through metal detectors, and x-raying we ladies' purses. Despite the intimidating size of the men, they're incredibly professional, polite, and friendly with all their pleases and thank-yous.\n\nOnce that's done we're allowed to enter one of the six elevators arrayed behind the security desk. As I step inside I notice there's no buttons beyond the emergency ones required for safety and a single button labeled \"lobby\". Apparently, wherever we're heading allows for no unauthorized stops.\n\nMy twin brother sees the direction of my gaze and says, \"This is Harmony's private elevator. It goes all the way up to her penthouse suite.\"\n\nI raise an eyebrow at how Chris talks like he's on a first-name basis with the Overseer.\n\n\"Oh,\" I mutter as the doors close. \"One way ticket, eh?\"\n\nChris grins and scratches his head when he answers, \"Naw. It can actually stop anywhere. It's controlled from a panel in Harmony's suite, and there's also an emergency recall at the security desk.\"\n\nThere's a quiet hum, and I can feel a mild lurch in my stomach as the elevator starts moving.\n\n\"So what's that?\" I ask, pointing to a small slot beneath the few buttons.\n\n\"Card reader,\" my father explains. \"It opens a panel with more buttons so Ms. Grace can use the elevator as she sees fit.\"\n\n\"Pretty slick,\" I admit.\n\nNumbers on the readout showing our current floor are whizzing by at a pretty good clip. They start to slow when they pass forty, and my body feels lighter for a moment as the steel box bleeds off it's inertia. The readout stops at \"50\", and there is a ding before the door opens.\n\nThe five of us exit the elevator into an impressive space, a pair of steps descending into a wide open living room. There's maybe a dozen pieces of artwork on the walls. A few pedestals in one corner hold some unusual sculptures. Centered and mounted to another wall is a huge flat screen TV, it's surface dark. Directly below this is a gas fireplace with some pretty realistic-looking fake logs glowing a cherry red. Flickering flames lick upward randomly from them. Much of the center of the room is taken up by a rectangular configuration of couches and chairs that face each other inwardly, their frames covered by a mahogany hued leather. A large, fancy coffee table of equally dark wood sits in the middle.\n\nMy attention, however, is riveted to the three huge windows that take up the opposite, outer wall. I've never been this high in a building, and even from across the room the vista from 500 feet up is breathtaking. I can see the far away mountains along the horizon, a large jet climbing lazily in the distance from the easily visible airport. I've been through that airport so I know how big it really is, but it looks so tiny from here.\n\nOh, and the smog. It hangs in the air like a dirty blanket.\n\n\"Quite the view, isn't it?\" a woman's voice calls from the middle of the room.\n\nMy eyes are drawn to the source of the sound. I'm mildly startled because I could swear there was no one sitting in that leather chair a moment ago. This must be our Overseer, Harmony Grace. Going by appearance she looks little more than 25-ish. With what my father told me about her position, she's likely at least 200 years old. If not older.\n\nThe beauty of her light brown face is what I'd call eloquent, her chocolate-colored skin flawless and silky-smooth. She possesses thin, elfin features that taper downward to a triangular jaw. Her liquid hazel eyes are dark and earthy, and her red-painted lips are full and pouty. They part slightly and pull upward with the barest hint of a smile. She has her brunette hair pulled back into a tight bun, two thin strands of her wavy bangs hanging down each side of her face.\n\nHarmony is wearing white, boot-cut slacks and a matching two-button jacket, with a pastel yellow guayabera shirt beneath. She has one leg crossed over her knee, and I can see black, four-inch high heels on her feet.\n\n\"Ah, there you are, Ms. Grace,\" father says in a pleasant, friendly voice. \"Good afternoon.\"\n\nThe exquisitely beautiful woman laughs lightly, the sound reminding me of a wind chime as it jingles and rings in the breeze.\n\n\"Ash, please,\" she smiles fully now, showing off her perfectly white teeth. \"You know I don't stand on ceremony. It's Harmony.\"\n\nDanni gazes at me with a look of confusion, but it's brief and comprehension dawns on her.\n\nShe turns to my dad and says, \"Oh, duh. Thomas wouldn't be your real name, would it? So your name is Ash?\"\n\n\"Yes,\" my father nods. \"My apologies for not telling you sooner. I get so wrapped up in my Thomas persona I sometimes forget.\"\n\nHarmony stands and slowly approaches the five of us with flowing, elegant steps as she looks to me and says, \"You must be the second half of the infamous Nightlock twins.\"\n\nHer reference to my father Ash's last name throws me for a brief second, but then I realize her mistake and inform her, \"It's Gray, actually. Erykah Gray. It's my mother's maiden name.\"\n\n\"Then I beg your pardon,\" she says, placing a hand over her heart and bowing ever-so-slightly. \"Either way, I'm pleased to meet you.\"\n\nShe extends that same hand in my direction as she comes closer, and I'm a little stunned at how damn tall she is. Even without her heels she must be about six foot in height, but with the footwear she's taller than all of us. More than just that, though, her very presence seems to exude an aura of poise, charisma, and power.\n\n\"Thanks,\" is all I can think to say as I shake the woman's hand, her grasp delicate and reassuring.\n\n\"You do look so much like your brother,\" Harmony tells me, turning her gaze briefly to Chris.\n\nIn that small moment where she looks at my twin, I see her eyes gain this intense glimmer. The incredibly minute expression speaks volumes to me, and I know for certain there's something romantic going on between my brother and this woman. The fleeting expression disappears as she looks to me and releases our handshake.\n\nI suppose that explains why I haven't seen Christopher with a girlfriend at school. I was wondering about that. Mystery solved. Apparently my brother likes older women. Much older women.\n\nHarmony turns to Danni to greet her as well, and I decide to take this opportunity to try out one of my abilities. I turn my head slightly and concentrate on my brother, focusing my thoughts in his direction.\n\nI attempt to mentally broadcast to him, thinking, \"Dad know about you and Harmony getting it on?\"\n\nChris coughs in surprise, while at the same time Harmony is saying to Danni, \"And you must be Danni Wilson. Ash didn't tell me you were such an ethereal beauty.\"\n\nDanni blushes a touch as she shakes Harmony's hand and graciously replies, \"Thank you. That's kind of you to say.\"\n\nMy brother's words pop into my head with a pleading tone as he begs, \"Please don't say anything.\"\n\nI have to stifle a laugh at his look of relief when I reply, \"Don't worry. Wasn't going to.\"\n\nAs I close off the mental contact, I have to wonder why it's such a big secret...but whatever. It's Chris' love life. Who am I to judge?\n\n\"It's also very nice to see the rest of you again. Please. Come. Sit,\" Harmony tells us all, waving a hand toward the middle of the room.\n\nWe all take a seat on the leather furniture, Danni and I sitting next to each other. Harmony moves into the area as we all get situated, but she remains standing. The Overseer motions to a silver platter atop the coffee table where a fancy looking bottle of wine and six glasses wait.\n\n\"Would all of you care to share a drink with me?\" she offers.\n\nMy father surprises us when he nods with a smile and answers, \"Yes, that would be great. Thank you.\"\n\n\"It's my pleasure,\" Harmony replies.\n\nChiaki holds up a hand and tells the Overseer, \"Thank you, but I must pass.\"\n\n\"That's perfectly fine, dear,\" our hostess replies with a nod. \"No one should feel pressured to join us if they don't want to. I promise not to take offense.\"\n\nThe woman lifts the bottle and uses a corkscrew puller to pop the cork. She fills five of the glasses about half way and hands them out, each of us giving our thanks. She takes the last glass for herself, replaces the cork, and sits in the chair she inhabited before.\n\nI feel kind of weird sitting here with a glass of wine in my hand. As I look back and forth between dad and Harmony I realize they're gripping their glasses by the base of the stem. Maybe it's some sort of etiquette thing? It seems right, so I match my hand position to theirs.\n\nAs if by some hidden consensus, we three youngsters hold our glasses and wait for one of our elders to drink first. I think we're all a little wowed that my dad agreed so easily. It's surprising to me he's allowing us to have alcohol even though we're still underage. Not that he looks of age, either, but technically he's about a hundred years older than he appears.\n\nMy father sniffs the crimson liquid before taking a small sip. He seems to consider the flavor for a moment before he swallows it.\n\n\"This is quite excellent,\" he pronounces, giving Harmony a charming smile. \"Very well-defined with a powerful body. It evokes words like delicate, sensual, frank, and full.\"\n\n\"I'm glad you like it,\" Harmony nods, giving dad a warm smile in return. \"It's a 1960 Roman\u00e9e Conti.\"\n\n\"Ah,\" my father says, \"from Domaine de la Roman\u00e9e-Conti. Their Burgundian Pinot Noir grapes always were subtle and complex.\"\n\n\"And flamboyant!\" Harmony says, giving out an enchanting laugh.\n\nShe holds out her glass toward my father before taking a small swig herself. Dad laughs along with her, as if at some sort of inside joke. Mirth and fondness fill his eyes, letting me know his laugh is genuine.\n\nOh damn...I get it now. After that little interaction it's obvious why Chris wants to keep his fling a secret. Seeing the lingering affection in father's eyes, it would appear he and Harmony used to be an item. Bro is banging dad's ex.\n\nI feel like face-palming, but instead I smile and take a sip of the wine.\n\n\"Mmm,\" I hum in appreciation at the flavor.\n\nIt is, as my father said, quite good, but I taste an unusual, tertiary hint of leather and underbrush. Strange...I don't remember my sense of taste being this keen. Not to mention noticing all these little details about the things and people around me. I mean, I was never a dope, but ever since we arrived at this skyscraper it's like my powers of observation have been on steroids.\n\nIt's not a perfect analogy, but the closest thing I can liken it to is this - it's like my whole life I've only seen things in black-and-white, but now I'm seeing the grand detail of colors for the very first time. Long silent, Cassie pipes up briefly.\n\n\"We...we have remembered an ability. Our senses...they have become stronger, but we may heighten them to an even greater magnitude than what you feel now.\"\n\nWell, let's see just how sharp my senses can get. I might regret this, but...I inhale deeply and picture the mixture of scents that fill my nose becoming sharper and more defined.\n\nI close my eyes and sniff the wine. It's pungent fragrance fills my nostrils, and I swear I can smell the very dirt the grapes were grown in. It's not the only thing I pick up on, either. Somewhere in this penthouse suite is a stash of weed.\n\nI was never a huge fan of that powerful aroma, so I let my sense of smell go back to normal. I power up my taste buds this time and take a small drink of the wine, almost immediately sorry. The flavor isn't bad, but it is so overpowering I almost gag.\n\n\"You okay?\" Danni asks with concern as I fight to swallow the wine without coughing it up.\n\n\"Sorry,\" I say once I win the battle. \"Ah, went down the wrong pipe. Guess I'm a wine noob.\"\n\nI cough and release my enhanced sense of taste. I have to blink a couple times at the weird sensation.\n\n\"We may do this with all our senses, but beware loud noises or bright lights. Too much sensory input may blind, deafen, or disorient us.\"\n\n\"To business then?\" father asks before taking another sip.\n\n\"I suppose so,\" Harmony sighs, looking back and forth at the rest of us. \"He can be such a...how do you kids call it these days...a buzzkill?\"\n\nWe all smile at that, and Chiaki says sarcastically, \"Naw. Him be serious? Never.\"\n\n\"Oh, of course not,\" Harmony laughs lightly in good-natured teasing. \"You're right, though, Ash. We should get our business out of the way.\"\n\nFather nods and states formally, \"Overseer Grace, I've come to officially request the remaining two spots in my Covey be filled by Erykah Gray and Danni Wilson. I strongly believe our already existing bonds of family and friendship will serve well in the task of protecting Seraphinus until the upcoming Grand Conclave.\"\n\nWhat? We're protecting Chiaki? Hahah, that's funny. Though the Overseer smiles beneficently, my heart gives a little lurch at her next word.",
        "\"No,\" Harmony shakes her head.\n\nAt that short statement my father's expression falls to a frown. It's not the end of her sentence, though.\n\nHope is rekindled when she continues, \"Not until I know who I'm assigning to your Covey.\"\n\nShe turns to gaze solemnly toward Danni and I.\n\nAt our silence Harmony Grace declares, \"I shall begin. I am also known as Kalakus.\"\n\nThe name sounds vaguely familiar, but I can't seem to recall from when or where. I can't even dredge up a connotation, good or bad, to match it with. Damn you crappy memory nonsense...\n\n\"Cassandriel,\" I blurt nervously. \"Uh, my other name is Cassandriel.\"\n\nHarmony's eyes flicker briefly in recognition, but the tiny cue is so brief and subtle I doubt anyone else noticed it. The Overseer chooses not to divulge how or from where she knows Cassie, instead turning toward Danni.\n\n\"And you, my dear?\" she asks.\n\n\"Jophiel,\" Danni reveals softly.\n\nHarmony merely nods, no recognition apparent in her facial expression.\n\nHoping my joking tone covers up my anxiety, I quip, \"Do we getta join the cool kids club now, or what?\"\n\n\"Of course,\" Harmony tells us before turning to my father. \"I shall grant your request, Ash.\"\n\nI smile at this. I'm overcome with a strong sense relief as my worry disappears, and I turn to look at Danni with my patented, cheesy-ass grin. She's smiling back, and I throw her a quick wink. The Overseer stands, walks over to the huge windows, and admires the skyline view for a moment.\n\n\"Excellent,\" my father says. \"I suppose we should...\"\n\n\"On one condition,\" Harmony interrupts, placing her hands behind her back and turning to face us once more.\n\nDad raises his eyebrows and asks, \"Oh?\"\n\n\"A favor for a favor, Ash,\" Harmony begins as she walks slowly back toward us.\n\nMy father frowns and asks, \"I'm not going to like this, am I? The favors you ask have a bad habit of being...dangerous.\"\n\nThe other woman sighs and responds, \"You can be so negative sometimes Ash.\"\n\n\"It's all part of my manly essence, Harmony,\" father jokes, cracking a smile. \"Besides, I'm not wrong.\"\n\n\"Ash,\" she says seriously, \"you don't really think I'd intentionally put ones so young in harm's way, do you?\"\n\n\"I was hoping not.\"\n\n\"But you were thinking it,\" Harmony says sadly.\n\n\"Eh, so what? All it means is I care what happens to these four.\"\n\n\"Implying I don't? I'm not a monster, Ash,\" she says sadly. \"It's not easy making the decisions I have to make.\"\n\nMy father opens his mouth, and I can see a retort on his lips. It never leaves the launchpad, though. He closes his mouth, looks at her, and gives her a wry grin. There's a moment of silence between them.\n\n\"Hold on,\" father laughs. \"Did I miss something? When did we start dating again?\"\n\nHarmony looks at him quizzically for a moment before giving off that light, magical laugh of hers.\n\n\"You're right,\" she shakes her head. \"I can't believe I just...\"\n\n\"Old habits die hard, as they say,\" father chuckles.\n\n\"I'm sorry, Ash.\"\n\n\"You don't owe me an apology.\"\n\n\"And you don't owe me any explanations,\" Harmony nods.\n\nI sense that their time as a couple had been brief, but passionate. They obviously still have feelings for each other, but the pair most likely concluded they were better off as friends.\n\nI give off a kind of nervous laugh as I ask, \"Uh...so...what's this favor then?\"\n\nHarmony gives me an eager, lopsided grin and reveals, \"I want the five of you...\"\n\nShe points to each of us in turn as she speaks.\n\n\"...to take me out to a club tonight! I want to have some fun!\"\n\nMy jaw drops open a little bit. Not because of the request, but from what dad says next.\n\n\"Sure. Sounds like a blast.\"\n\n* * * * * *\n\nIt's about 7 PM when we pull up to a little hole-in-the-wall place named \"Club Mystery\", and I'm still having a hard time believing my straight-laced father agreed to this. At the end of the day I guess he likes to blow off steam the same as anyone else.\n\n\"Dad?\" I ask as he steers into the parking lot.\n\n\"Yes dear?\"\n\n\"What about school tomorrow?\" I wonder.\n\n\"Inservice day,\" he explains. \"Did you even read the schedule they gave you?\"\n\n\"Well, ya know,\" I shrug with a sardonic grin, \"kind of a lot going on in my life right now.\"\n\n\"Three day weekend!\" my twin brother enthuses, doing this little dance with his upper body.\n\nFather parks his Caddy in the small lot across the street, and we all spill out of the big SUV. There's a piercing \"bwoop-bwoop\" from the vehicle when he sets the alarm. I can't blame him. This isn't exactly an upscale neighborhood, but it's not totally janky either.\n\nMaybe it's because the sun's about to go down and dusk is painting it's dark brush over everything, but this place my father chose...wow. Just wow. Club Mystery and the buildings around it have a real shady aura, a desperate and furtive feeling like there's an edge of danger around every corner.\n\nI hate to admit it, but it's kind of exciting. The old me would have been way too chicken to even get out of the vehicle, but I'm the new and improved Erykah two-point-oh. With Cassie having my back, and surrounded by friends and family my heart holds no fear.\n\nThere's a 30-ish, somewhat skinny, heavily-tattooed man to the side of the front door. He's seated on a stool and holding a lit cigarette in one hand. With his scruffy beard, dark sunglasses, and black beret he's giving off a sort of bad-boy beatnik vibe.\n\nFrom the open front door of the club I can hear the heavy rhythm of Trance music pounding forth. Bright red and blue strobe lights pulse and flash inside, illuminating a rather crowded interior. Three young men are smoking outside near the alley at the end of the building. When I look at them my first thought is \"frat boys\".\n\nAs we approach the beatnik he lowers his sunglasses, squints at father, and shouts, \"You got a lotta nerve coming back here, shit-bird!\"\n\nWhat the hell?\n\nMy dad points at the open door and tells the man gruffly, \"Me and my friends are walking through that door, and if you know what's good for you you'll get out of the way.\"\n\nThe beatnik clenches his fists and hops off the stool, his feet spread wide as if he's ready to scrap.\n\n\"Oh yeah, jackass?\" he growls.\n\n\"Damn straight,\" father growls back, taking his own aggressive stance only two feet from the man.\n\nMy hackles are raised at this point, not knowing who or what this man is, and I'm ready to come to father's defense. I'm so taken off guard it doesn't occur to me to question why he'd bring us here if he thought a fight was imminent.\n\nThe two men both make a quick, feinting motion toward each other, then embrace in a brotherly hug and pat one another on the back like long-lost friends.\n\nJesus fucking Christ.\n\nI exhale with relief as the two men separate.\n\n\"When did you get back into town?\" father asks.\n\n\"Last week, Tommy boy. Hey there Harmony...Chris...chickadee. What's the haps?\"\n\nChris chuckles at that, and Harmony gives the man a tolerant grin.\n\nChiaki rolls her eyes and responds, \"I told you my name is Chiaki.\"\n\nThe man holds up his hands in the universal gesture of surrender.\n\n\"Okay, okay...Chee-aaaah-keee. I'm bad with names so don't get your sweet little panties in a twist,\" the man says.\n\nHe looks over at Danni and I with a bit of a leer.\n\n\"Speaking of little, sweet, and names...can I get the ones for blackie and blondie over here? Maybe a couple phone numbers to go with?\"\n\nI gawk at the man like he just crawled out of the 1980's. Does that approach even work, like ever?\n\n\"Easy there, big fella,\" my father chuckles, then tells a bit of a lie. \"This is my cousin Erykah and her girlfriend Danni. Ladies, this is Vinnie Durante. If he seems like a chauvinistic neanderthal just ignore it. He doesn't mean anything by it. He's a good guy...most of the time.\"\n\n\"Ladies,\" he says, pointing a pair of pistol-fingers at Danni and I and throwing us a wink. \"So, if blackie's off the table then how about you, blondie? Wanna trade numbers, maybe get together later?\"\n\nNow Danni gawks at him like he just crawled out of the 80's. He gives her a wink, and I realize Vinnie isn't actually hitting on either of us. He's totally just messing with us.\n\n\"No?\" Vinnie chuckles. \"In that case, welcome to my humble abode.\"\n\nHe makes a sweeping gesture toward Club Mystery before adding, \"Mi casa es su casa.\"\n\n\"Oh, and by the way, blackie,\" he addresses me with a laugh, \"that look on your face when you thought Tommy and me were gonna thrown down...that was priceless! You looked like you were ready to rip off my head and shit down my neck!\"\n\nI kind of still am.\n\n\"Uh, yeah,\" I say flatly, not sure what else to say.\n\n\"I'm glad you're back, Vinnie,\" father says, vigorously shaking the man's hand. \"Everything fine with you and Carla? The club still treating you right?\"\n\n\"Yup yup,\" Vinnie nods. \"She's as grouchy as ever, but we're good. Business has been slammin' lately. Haven't seen them one fellas in more than three months now. I think you put the fear of god in them.\"\n\n\"No,\" my father laughs, \"I put the fear of me in them. God never follows through.\"\n\nVinnie grins and says, \"That works too. All I know is they haven't been back.\"\n\n\"Good to hear,\" my dad smiles sincerely. \"You've still got my number if you need anything, right?\"\n\n\"Damn straight, Tommy,\" Vinnie grins. \"You gotta come over one of these weekends for a barbecue. Bring your whole crew. I just got me a grill-master apocalypse 3000 or some shit, I forget the name of it, but there's no point in even firing it up unless I got people to cook for! Burns half a tank of propane just to turn that bitch on!\"\n\n\"Next weekend. I promise,\" dad tells him.\n\n\"I'm gonna hold you to that,\" Vinnie says, poking at my father's chest. \"Enough jawing. Get your rich asses in there and spend some money...I got five kids to feed!\"\n\nDad chuckles and says, \"Will do.\"\n\nWe transition inside, and I take Danni's hand, giving her an excited smile that she returns. I focus on my father to send him a mental message.\n\n\"How in the heck are you friends with that guy?\" I ask.\n\n\"He's one of my Faithful,\" he replies, \"as well as a friend. It's a long story.\"\n\n\"Oh. Maybe later then.\"\n\nFaithful? I decide this isn't the time or place for questions. We're here to have fun, so I drop it for now.\n\nDanni leans over to ask, \"You ever been drunk before?\"\n\n\"No. You?\"\n\n\"No.\"\n\n\"Looks like we're both getting our booze cherries popped tonight,\" I giggle.\n\nDanni gets a kick out of that, laughing loudly before she replies, \"Please be gentle.\"\n\nThe interior is just as seedy as the outside. The dance floor is hopping, and the inside is packed with a loud, boisterous crowd in the early stages of getting plastered. The place seems extremely popular with the college crowd, many of them \"shakin' they booty\" in a tight, sweaty cluster under the strobe lights. On a small, slightly raised stage is a DJ spinning the beats. Harmony makes a beeline for the bar, though, and we all sort of follow.\n\n\"Shots?\" my dad asks loudly, fighting to be heard over the din of music and loud drinkers.\n\n\"Shots!\" Harmony grins.\n\nDad leans against the bar and waits for one of the bartenders to be free. There's two women behind the counter, enthusiastically slinging bottles of beer and pouring shots and mixed drinks with a quick, impressive skill. The closest to us finishes with the small mob of college kids she's serving and turns to see our group for the first time. Her eyes light up when they fall on my father, and she utters a high-pitched, feminine squeal of excitement.\n\n\"Tommy!\" she calls out happily, practically running to where he leans against the bar.\n\n\"Hi Carla,\" he smiles.\n\n\"Tommy!\" Carla repeats when she reaches him, leaning over the bar to give him a big hug. \"You sexy beast, where you been hiding yourself?\"\n\nThe woman lets go, but not before she gives dad a big kiss straight on the lips. I realize Carla isn't wearing a bra, and I can see her perky nipples pressing against her black t-shirt. Nice. I imagine drunk college guys tip better if they see a frisky rack jiggling while being served their drinks.\n\n\"I've been around,\" dad says. \"How have you been?\"\n\nCarla shrugs, looking around at the packed nightclub and saying, \"Busier than a funeral home fan in July.\"\n\n\"That's good, yeah?\" Danni asks.\n\nThe bartender gives Danni a quick nod, saying, \"Heck yeah.\"\n\n\"Hey Carla,\" I butt in, \"do you and Vinnie really have five kids?\"\n\n\"Psssh. He telling people that again?\" she laughs. \"I'm not even thirty yet. Heck no I don't have five kids. Just one, a boy. Two years old. I got a picture I can show you later if you want.\"\n\n\"Yeah, I'd like that,\" I nod. \"I'm Erykah, by the way, and this is Danni. I'm guessing you know everyone else?\"\n\n\"Pleased to meet you,\" she smiles, and I note she's quite attractive with that big smile on her face. \"Yeah, I know the rest of these troublemakers.\"\n\n\"Shots shots shots shots,\" Harmony starts chanting, a grin painting her lips.\n\n\"Yeah, of course!\" Carla enthuses. \"I'll rack up the usual.\"\n\n\"Yes please!\" Harmony replies.\n\nCarla lines up way more than enough shot glasses for all of us, pulling out two bottles and pouring equal doses from each into the first six glasses. She pushes the small cluster toward Harmony.\n\n\"Some 252's to start you off, Harm,\" Carla says.\n\nHahah wut? Six shots to start off? I might be a drinking neophyte, but I know enough to realize that would get the average person piss-drunk. Those are straight liquor, not cut with anything.\n\n\"Thank you thank you,\" Harmony replies gratefully before slamming the first shot.\n\nAs the Overseer proceeds to down shot after shot, Carla pours my father a different type. It ends up with the lower half full of amber liquid, the top half a caramel colored layer.\n\n\"One buttery nipple,\" our bartender says as she pushes it toward my father.\n\n\"Thanks,\" he says, lifting in to his lips.\n\nDanni and I both giggle when Carla grabs her own tits and shakes them at my father, saying, \"But you just say the word, Tommy, and you can have these buttery nipples anytime.\"\n\nFather, Chris, and Chiaki laugh at this, and Harmony almost chokes on her last shot (oh my god she already drank all those). She manages to slug it down, but her eyes water at the effort. She shakes her head and laughs lightly at Carla's display.\n\nI'm starting to see why Vinnie and Carla are a couple. She's like a female version of him.\n\n\"One coke,\" Carla says, pushing a can of soda toward Chiaki.\n\nThe bartender gets out a slightly larger glass, fills it with red bull, then pours some liquor into a shot glass before dropping it into the red bull.\n\n\"A J\u00e4ger bomb for you, sir,\" she smiles, pushing the drink toward Chris then turning to Danni and I. \"What can I get for you ladies?\"\n\nWe're both at a loss, so I shrug and say, \"We have absolutely no idea.\"\n\n\"How about I give you both a wet pussy?\" Carla asks with a wink.\n\nWe all giggle and laugh again, and I hope that's an actual drink. Turns out it is. She grabs of pair of bottles, filling the last two shot glasses with equal portions from each. She adds a small splash of what looks like cranberry juice, then squeezes a lime slice into it and drops the remaining peel into the drink. The resulting liquid is a light reddish-pink color.\n\nDanni and I lift our shots, look at each other with big grins, and down them at the same time. I was expecting some harshness or burning, but it goes down pretty smooth. Almost the second it hits my stomach I feel a warmth spreading up into my neck and outward to my limbs.\n\n\"Wow. That's good,\" I comment.\n\nDanni nods in agreement, adding, \"Really good. A little too good.\"\n\n* * * * * *\n\nIt's an hour later and Danni and I are sitting at a table, nursing our third pair of beers. Danni has a shit-eating perma-grin, telling me she's feeling a happy glow.\n\nThe same happy glow I've got.\n\nWhew...I think I'm a little drunk. No...actually...I'm a lot drunk.\n\nAnd horny. Oh my god am I horny. It's all I can do to keep my hands off Danni while I ponder if it's the booze that's making me this hot and bothered.\n\n\"Blue jeans, black shirt. Umm, brown hair,\" Danni squints as she slurs a little, pointing at a guy on the dance floor.\n\n\"Yeah,\" I nod slowly, slurring a bit also. \"He's got a cute butt. One point for Danni!\"\n\n\"Yay!\" Danni proclaims. \"Your turn.\"\n\nDanni and I are playing the \"who's got a cute butt\" game, which only adds fuel to the fires of my overactive libido. Yeah, we're dorks. It's just something silly our alcohol-fueled minds came up with while we sit here watching the others tear up the dance floor.\n\nFather and Chiaki are dancing together, their moves respectable but nothing special. Chris and Harmony, though...good lord. My brother has some serious moves on him. He's better by far than anyone else out there, Harmony coming in a close second. The pair have this look of pure joy on their faces.\n\nI watch Harmony as she goes round and round and round with my brother and can't help but marvel at the woman. I swear she must have a little engine inside that runs off booze. I've seen her consume enough drinks to knock an elephant under the table. I don't get how she's still vertical, let alone alive.\n\n\"Harmony!\" I blurt out with a giggle. \"She's got a smoking hot butt.\"\n\nDanni joins in my laughter and admits, \"You're right! Point goes to Erykah!\"\n\nAs we sit there laughing and giggling like drunken fools, a younger, college-aged man swaggers up to our table and smiles at Danni. We both look him up and down. He's well dressed and groomed, fairly cute, but has a sharky sort of smile. His motivations are obviously a few inches below his belt buckle. Something about him raises a red flag in my gut, like he's the type who just wants to take without giving in return.\n\n\"Excuse me,\" he begins, \"but I was wondering if you could help me out?\"\n\n\"Oh yeah?\" Danni grins.\n\n\"Yeah,\" the guy nods, locking eyes with her. \"You see, my friends bet me I wouldn't start a conversation with the most beautiful woman in the bar. You wanna go buy some drinks with their money?\"\n\n\"Tempting. Very tempting,\" Danni replies, \"but there's only one problem with that.\"\n\n\"Oh?\" the guy asks.\n\nDanni gives him a toothy grin as she says, \"My girlfriend here would get real jealous.\"\n\nHe seems confused for a moment and looks back and forth between Danni and I. After a few seconds the light bulb comes on, and he gets it.\n\n\"Oh. You're lesbos,\" he concludes, spitting out that last word in a derogatory manner.\n\n\"Bi, actually,\" Danni chuckles and shrugs, \"but you're just not our type. Sorry. No threesome for you tonight.\"\n\nGood for Danni. She might be drunk, but like me she could tell something is off about this guy.\n\nThe fellow mumbles a few words I don't pay attention to, then ambles back into the press of drunken, sweaty humanity around us. I don't pay him much mind as he leaves. I'm much more interested in the implications of what Danni just said. When she called us bisexual was she just being obtuse with the guy, or did she mean it? It's a little more difficult with my head swimming drunkenly, but I focus my thoughts and project them toward her.\n\n\"Danni? Did you...do you still want...?\"\n\nI trail off, uncertain of how to finish phrasing my question. Danni looks me straight in the eyes with a dead serious expression, knowing what I was getting at.\n\n\"Erykah...you know I love you more than anything, right?\"\n\n\"Yeah. Of course.\"\n\nI know without a doubt she does, just as I love her. Our very souls have been intertwined almost as long as the universe itself has existed.\n\nDanni's thoughts echo my own as she continues, \"And I know you love me, but you can't tell me you haven't been wondering since last night.\"",
        "\"Wondering what?\"\n\n\"What it's like to have a real dick inside you...filling you up and thrusting inside with it's heat.\"\n\nI feel a warm flush fill me up at her vividly dirty description. I have to stifle a little whimper when I feel my womanhood tremble at her words.\n\nHaving Danni fuck my brains out last night with our strap-on was absolutely marvelous, but if I'm being honest with myself I have to admit the thought has crossed my mind a few times. There's another warm flush of desire inside my feminine core, and I can feel my face blushing in response to being caught with my thoughts in the nookie jar.\n\n\"I knew it!\" Danni grins. \"You've been checking out guys pretty hard tonight.\"\n\nI have?\n\n\"I...uh...\"\n\nI sigh and resign myself to a fact I'm only now fully admitting.\n\nI gaze down at my beer and confess, \"Yeah. I've been wondering what it's like.\"\n\n\"And I want you to have that experience, Erykah. It won't mean you love me any less.\"\n\n\"But it's cheating,\" I protest. \"I don't wanna cheat on you!\"\n\nIt's Danni's turn to sigh as she tells me, \"Look...what we are, what's inside us...we're designed to love. We're meant to share our love on a grand scale and be loved in return. We have to. It's who we are. It's what we need. I can feel Jophiel inside me just bursting with this warm light of love, and I'm driven to share it with the world. Just like you are.\"\n\n\"That's the booze talking,\" I chuckle.\n\n\"Bullshit. I know you've been feeling it too.\"\n\nI suppose I have. My entire life I was never really at peace with the world, but these last few days have been amazing and enlightening. I've been suppressing this growing feeling inside, not knowing what it is and frightened of it because of that. After Danni's explanation I realize she's completely correct.\n\n\"I don't wanna end up that girl who hops on anything that moves,\" I object weakly, those last, nagging bits of fear hanging on by a thread.\n\nDanni laughs at that.\n\nShe snips that final thread when she replies, \"Even if you turn into mega-slut I'll still love you, but no one is saying it has to be like that. All I'm saying is we Eternals have a duty to share our love with those who are worthy. We need to teach them to love with no limits.\"\n\nI remember my epiphany from that day Danni and I conversed in my room for the very first time.\n\nIt's my duty to protect those around me from the darkness.\n\nWhat better way than to show love in all we do? Forgiveness, kindness, and even physical love are all aspects of this. I can sense Cassandriel within, pleased at my realization. A weight I didn't know existed lifts from my mind as this hidden conflict evaporates under the light of truth.\n\n\"Danni, you're right!\"\n\n\"I know,\" she speaks aloud this time, the drunken slur back in her speech. \"I also know you've been checking out that wall flower over at the pool tables.\"\n\nI give out a nervous little giggle as Danni points. I thought I was being pretty sly about my interest in him but apparently not that sly. I look over at the young man again. He sort of reminds me of me. The \"me\" from before my awakening. He's not the cutest guy in the room, but he's cute enough and doesn't seem to know it. The young man has been nursing a single beer for the better part of an hour now and trying his best not to look out of place.\n\nHe's here with a small handful of friends, their group playing pool as they laugh and get snockered. With an easy smile, he's got no issues joking and chatting with his friends, but he seems almost painfully shy otherwise. I haven't seen him with a girl yet, nor have I seem him even attempt talking to one.\n\nA couple of his buddies were able to catch some female interest while I surreptitiously observed, but the young man doesn't seem jealous of their success. Rather, he seems a little depressed at his own lack of courage to go chat up any girls himself. I did catch him checking me out a couple times. Each time our eyes would meet he'd look away and blush slightly.\n\n\"Welp,\" Danni exhales the word as she stands, a bit wobbly for a second. \"C'mon. You need to go talk to him.\"\n\n\"What? No, Danni. I know you're right, but I'm not sure I'm ready for this.\"\n\n\"Yup,\" she nods, stealing my patented, cheesy-ass grin for a moment. \"No time like the present.\"\n\nShe reaches out and grabs my arm, tugging insistently until I sigh and stand.\n\n\"Lezgo,\" she slurs drunkenly and gives me a light push toward the pool tables.\n\n\"Okay,\" I surrender and begin heading that direction.\n\n\"Good luck,\" Danni says, tossing me a wink as she sits back down.\n\nDamn. My wing-woman bailed, leaving me to fly solo. No turning back now I guess. I put one foot in front of the other and head toward my target.\n\nWhat am I getting myself into? It's weird it was Danni who pushed me into this, quite literally. I think about it, and I mean really think about it. Examining my feelings, I come to realize that were our roles reversed I would be completely okay with Danni wanting to go get sexed up by some guy.\n\nI know...crazy, right? Is this all part of being an Eternal, this willingness to share our love and lovers so freely? It has to be. The old me would have thought this is wrong on so many levels, but now? I just can't conjure any objections that hold water.\n\nAlright, if I'm doing this then I'm going in full bore. No hesitation, no regrets...right?\n\nRight.\n\nAs I move closer the object of my interest turns to look at me. Our eyes lock but he doesn't turn away this time. I put on the most sexy-sweet smile I can muster. I can't help but giggle a bit when he gets a deer-in-the-headlights look.\n\nI know I'm not the most gorgeous or exotic woman in the room, but I manage to bring their game of pool to a halt as all of his buddies stop to watch me walk up to their meek friend. I do a quick little shuffle-step as I sidle closer to him while putting on a faux-bashful expression.\n\nAny pickup lines I say will seem corny or ridiculous, so...\n\nI simply smile and say, \"Hi.\"\n\n\"Uh...hi,\" is his reply.\n\nI decide to go with the weird-girl vibe, which is actually pretty close to the truth. I am kind of a weird girl.\n\n\"No,\" I shake my head. \"That's not right.\"\n\n\"What's not right?\" he asks, confused of course.\n\n\"You're suppose to say 'Uh hi what's your name?'.\"\n\nI actually manage to get a tiny hint of a grin out of him, and I can see it's melted his nervousness a bit.\n\n\"Uh hi what's your name?\" he asks, quoting me word for word.\n\n\"Erykah,\" I answer, holding out my hand.\n\nHe seems shocked a woman wants to touch him, even if it's a mere handshake. I'm gonna break through this confidence barrier of his even if it kills him. Not literally of course.\n\nI smile real big and tell him, \"This is the part where you shake my hand and say 'My name is insert your name here'.\"\n\nHis shield cracks a smidgen. He reaches out and shakes my hand.\n\nHe grins a little bigger this time as he wisecracks, \"My name is insert your name here.\"\n\n\"Pleased to meet you insert your name here,\" I grin and vigorously shake his hand.\n\nHe's got a firm grip. I can see the signs of a good sense of humor, keen wit, and sharp mind peeking through the walls he keeps around himself.\n\n\"But,\" I add as I release our handshake, \"that's kind of a long name. Should I call you...'insert'...\"\n\n\"Or 'here',\" I finish as I let my hand drop conspicuously close to my feminine place.\n\nHe's quick enough to catch the innuendo. He stares hard at my hand down below, his breathing quick and shallow, and his face turning a shade of bright crimson. I see panic in the young man's eyes when he realizes he's staring at my crotch, and his eyes jerk upward to stare at my face again.\n\n\"Finn. My name's Finn,\" he spouts quickly.\n\n* * * * * *\n\nWith the ice broken I'm able to get him talking. I notice Finn is barely buzzed, so I stop drinking and start to sober up over the next hour as we converse, play pool, and even take a short trip to the dance floor. We both sort of make fools of ourselves out there and step away giggling and laughing at our collective clumsiness. I discover he's actually quite chatty once he begins warming up to me. He's funny and interesting, and he holds my attention well enough that I barely pay heed to what the rest of my crew is up to.\n\nI'm definitely feeling some chemistry between us.\n\nFinn and I mostly indulge in fun, silly little small talk, but I drop hints all over that I'd like to go somewhere quieter. Eventually I'm able to wrangle an invite to his place.\n\nA short taxi ride later, and Finn and I end up in his small, one-bedroom apartment. I'm not really paying much attention to the place itself, but I notice enough to see it's fairly tidy and clean. That's good. Filth is a definite turn off for me.\n\nMostly I'm eyeing Finn, though, my pussy so hot it feels like it's on fire. I give him a sexy smile and wait for him to make a move.\n\n\"Did you want a soda or something to eat?\" he asks politely.\n\n\"No thanks.\"\n\nI give him a look that says I'm hungry for something else.\n\n\"Did you...want to watch a movie?\" he suggests timidly.\n\nNo. I want you inside me silly boy. I've got a sneaking suspicion Finn is a virgin, which is turning me on even more...believe it or not. This almost unbearable heat in me is insisting it's time to fuck, but I have to dial it back a few notches.\n\n\"Sure. A movie sounds nice,\" I nod. \"Lead the way.\"\n\nHe sets his keys down on a small hall table, and I follow him into his diminutive living room. There's just enough room for a sofa and TV, giving the room a cozy, intimate feel. It's perfect.\n\nFinn kneels in front of his TV stand and pulls out a few flicks, asking, \"What kind of movies do you like?\"\n\n\"Science fiction,\" I grin.\n\n\"No way...\"\n\n\"What, a girl can't like a good sci-fi story?\"\n\n\"Just...strange I guess. Oh, not that you're strange I didn't mean that it's just most people in general don't get into sci-fi and it's really weird, ah, I don't mean that I mean you're not weird...\"\n\n\"It's okay, Finn,\" I smile, laying a hand on his shoulder to interrupt his panicky, run-on sentence. \"Just show me what you have.\"\n\nI kneel next to him, very close, and I detect aftershave and a masculine, musky aroma. I inhale his manly scent almost greedily. God he smells so good to me right now. I want to throw him on the couch and start tearing off his clothes, but I don't want to spook him. Even though I'm here, right next to him so warm and waiting, it's like he can't believe he has a woman alone in his apartment.\n\nHe's still afraid to make a move.\n\nI need to take it slow and make tonight feel as natural as possible for him, especially if it is his first time. I loved how gentle and caring and passionate Danni was with me for my first time. I'd like to be able to share that experience with Finn as well.\n\n\"That one looks good,\" I point, picking a movie I've already seen.\n\n\"Oh, yeah!\" he enthuses. \"It is. Really good!\"\n\nHe pops in the movie as I seat myself on the couch, Finn sitting next to me shortly after. He sits close but not close enough that we touch. It's endearing how he's trying to show his interest in me while still respecting my personal space. The gesture is so cute and innocent...it just makes me want him all the more.\n\nHe starts the show, the opening credits roll, and I listen as one of my favorite opening movie lines of all time is uttered in the main character's deep, gruff voice.\n\n\"Some days you're the train...and some days you're a car stuck on the tracks. I could tell today was gonna be one of those stuck on the tracks kind of days...\"\n\nA few minutes into the show I realize there's no reason to still be wearing these infernal high heels. My feet are all achy, but this actually gives me an idea. I kick off the dreadful shoes with a grateful sigh.\n\n\"Hey Finn?\" I ask sweetly.\n\n\"Yeah? Did you want a drink or snack or something?\"\n\n\"Nah. I was wondering if you could do me a favor.\"\n\n\"Sure,\" he nods with a twinge of nervousness.\n\n\"It's kind of a big favor.\"\n\n\"Okay,\" he says.\n\n\"I just got these new shoes, and they kind of made my feet hurt a little. Could you give me a foot rub, pretty please?\"\n\n\"Yeah, I can do that,\" he readily agrees.\n\n\"Thanks. I really appreciate it.\"\n\nCool. Hopefully this will loosen him up a bit...let him know I'm okay with him touching me.\n\nFinn moves to one end of the couch, and I lie on my back on the remainder of it's length, propping my head with an arm cushion. I try to put just one foot in his lap, which I knew wouldn't work because of my tight dress. I fidget a bit, hamming it up.\n\n\"Oh darn it,\" I pout with saccharin in my voice. \"Silly dress.\"\n\nHe watches in curiosity as I sit up. I hike the dress up my thighs and drop one foot to the ground, my legs spreading open just a bit. His eyes go wide as they fall on my black, lacy panties and the promised land beneath. I pretend not to notice what he's staring at and lie back, turning my head to watch the show.\n\nFinn is a real gentleman, though. Most guys would have made a move by now, but Finn only looks away and focuses on rubbing my feet. That's fine with me for the moment. My feet actually do hurt, but his gallant behavior is having the effect of turning me on even more.\n\nSo is this foot rub.\n\n\"Oh, that feels so great,\" I murmur, the knee of my free leg going slack.\n\nIt really does, too. Finn is damn good at giving foot massages. I can tell he's really trying. He wants to make it feel good...make me feel good. He's such a sweet and wonderful young man.\n\nAfter about five minutes of utter podiatric bliss I say, \"That foot feels like heaven. Are you up for doing the other one?\"\n\n\"Of course,\" he says.\n\nHe's looking in my direction but carefully keeping his eyes off my plainly exposed underwear.\n\n\"You're so sweet,\" I smile.\n\n\"It's no problem.\"\n\nI lift my foot from his lap and slide it back, my knee pointing up in the air as I place my other foot in front of him. This has the effect of exposing my panties even more. Finn can't help it. He sneaks a peek, though brief, then looks back to my face to see a seductive smile greeting him. He looks away with such shyness I want to gobble him up. I go back to idly watching the movie while Finn works and kneads my other sore tootsie.\n\nIf I were a cat I'd be purring right now.\n\n\"Finn?\" I ask after a couple minutes.\n\n\"Yeah?\"\n\n\"You said you're in college, right?\"\n\n\"Uh-huh. Third year engineering courses.\"\n\n\"Wow. Sounds tough.\"\n\n\"Lots and lots of math, but I swear our professors tell math jokes more than teach lessons.\"\n\nI laugh at the thought.\n\n\"How about you? What year are you?\" he asks me.\n\nI consider lying for a split second and telling him I'm older than I really am. I don't want to lie, though. Better I'm truthful with him...as much as possible, anyway. There's some things I should keep secret, after all.\n\n\"I'm a senior.\"\n\n\"Oh, really? What are you majoring in?\"\n\n\"I guess you could say I'm majoring in High School. I go to Bay Ridge Academy.\"\n\nI knew this would throw him for a bit of a loop, but now he's wearing this \"oh god I'm a pedo\" look on his face. His hands stop their massage.\n\n\"Look,\" I say, reaching down to where I'd lay my purse.\n\nI pull out my driver's license and hand it to him. He examines it before handing it back, a look of relief on his face.\n\n\"You're eighteen,\" he grins. \"I suppose you must be. If that was a fake ID it would say you're twenty-one.\"\n\n\"Thought you were in trouble for a minute there, didn't you?\" I giggle.\n\n\"Yeah,\" he laughs. \"You had me a little scared for a second.\"\n\nIt was a gambit. Telling the truth usually is, but I think it broke down his barriers a bit more.\n\n\"How did you get in the club, then?\" he asks out of curiosity.\n\n\"My dad knows the owner,\" I shrug.\n\n\"Really? Can you see if he'll do something about my tab?\" Finn jokes.\n\nI laugh, happy he's relaxing and really warming up to me.\n\n\"I can, but I'll need a favor,\" I say with a wink, twirling my foot in his lap. \"You see, there's this girl in distress that needs a man's strong hand to help ease her pain.\"\n\n\"Ah,\" Finn replies knowingly, his hands and fingers going back to working their magic.\n\n\"Those really are some awesome foot rub skills you've got, Finn.\"\n\n\"Thanks. You know, they say an excellent foot massage is good for the sole.\"\n\nI giggle at his pun and say, \"Oh my god...you're a great big dork, just like me! You're so cute!\"\n\nFinn laughs.\n\n\"I've been called a dork plenty before...but never cute,\" he admits with a sidelong glance in my direction.\n\nI sit up and ruffle his short, brown hair.\n\n\"You're cute as a bug's ear,\" I tell him before leaning back.\n\nHe doesn't reply, but I can see the happy grin on his face as he continues massaging my foot. We both go back to watching the show for a few more minutes. Soon both my feet are humming happily.\n\n\"That is soooo much better. Thank you Finn. You have the hands of a Greek god.\"\n\n\"You're welcome.\"\n\nFinn looks a little disappointed when I remove my foot from his lap. I pull my dress back down and sit upright again. He gives me a smile that I return, accompanied by an expectant look on my face. A long moment passes between us, and I can tell he's still hesitant to make any kind of move, like he's afraid I'll freak out and leave or something.\n\nI suppose he'll need a gentle push in the right direction, a sure physical sign I want him closer. I take the initiative by scooting in close, slinging his arm over my shoulder, and leaning up against him. I place my hand against his stomach, pleasantly surprised by it's tight, lean feel.\n\nPart of the tightness is Finn's sudden and obvious anxiety at having a woman pressing herself against him. I idly stroke his stomach as we watch the show, my hand meandering up and over his chest periodically. It takes a while, but he slowly relaxes as he comes to realize I want to be here. His breathing becomes more calm, as well, the young man loosening up under my touch.\n\nI crane my head back to stare at the side of his face. It takes a few seconds for him to realize I'm doing so, but he eventually turns to gaze at me with a sense of wonder written on his features. He seems truly surprised I'm still here.\n\n\"Hello,\" I grin, my emerald eyes twinkling up at him with desire.\n\n\"Today's my twenty-first birthday, by the way. It's why I was at the club.\"\n\n\"Happy birthday.\"\n\n\"Thanks.\"\n\n\"Hey Finn?\"\n\n\"Yeah, Erykah?\"\n\n\"This is the part where you kiss the girl.\"\n\nHis eyes go all dreamy, like he can't believe this is happening. I savor the anticipation of the moment every bit as much as he. Time seems to slow as Finn gradually leans his head toward mine. Our lips join and gently caress one another in a slow and tender kiss. His breath is sweet with a sugary mint flavor. He must have popped a breath mint during the taxi ride here.\n\nI hate to interrupt the moment, but...\n\nI lean back and ask, \"You have mints? Can I have one? I got booze breath.\"\n\nFinn laughs.\n\n\"Your breath is fine,\" he says, though his hands reach into a pocket.\n\n\"No. I probably taste like you're kissing a beer bottle.\"\n\n\"A little,\" he chuckles, handing me a mint.\n\nI pop it in my mouth and pronounce, \"A girl likes to look, smell, and taste good.\"\n\n\"I'm not complaining,\" Finn says with a big grin. \"That kiss was amazing.\"\n\n\"Are you sure?\" I ask playfully. \"I don't know...I may have to get another sample before I can...\"\n\nFinn cuts me off with his lips against mine, the delicious warmth of his furnace-like body heating me as I press into him tighter. I give out a tiny, almost inaudible whimper. I've been wet since we got to his place, but now I'm drenched. The fire down below is almost unbearable.",
        "My hand travels up to his chest, and I can feel his heart beating a million miles an hour. As our loving lip-lock continues, my heart begins to beat just as heavily. We remain joined like this long enough that the mint he gave me has mostly dissolved, making my breath taste much better.\n\nI reluctantly break our kiss and lean back a few inches.\n\nI give him my most seductive look and ask, \"If I said I'll do anything you want what would that be?\"\n\n\"Anything?\" he asks, giving an almost cartoonish gulp of nervousness.\n\n\"Anything you want. Just ask.\"\n\n\"Can...can I...see you naked?\" he asks timidly.\n\nI kiss him briefly and lightly bite his lower lip. I let go, lean back, and run a slow finger down his body until it reaches the bottom hem of his t-shirt. I lift it up and over his head, throwing the garment to the ground. His exposed chest is lean and toned. It's plain to see he takes care of himself and exercises at least a little. I stand then seat myself on the couch between his thighs, my back to him.\n\n\"Unzip me,\" I request in a quiet, hungry tone.\n\nHe obliges, slowly pulling down the zipper at the back of my dress, and I stand up to shed it and kick it to the side. I can hear his breath hitch in his throat once I'm standing there in nothing but my bra and panties. I look over my shoulder at him.\n\n\"Like what you see?\" I ask with a coy flutter of my eyelids.\n\n\"Yeah,\" he whispers.\n\nI turn around and breathe, \"So do I.\"\n\nThe heat of the moment drives me, and I close my eyes and feel compelled to start to dancing for him. I try to make it slow and sensual. I've never tried to dance sexy before, though, so I'm not sure how enticing my moves are. I open my eyes, and Finn is staring at me with this intense look, his gaze pasted to my slow sway and roaming my body with open desire.\n\nDon't get me wrong...I love Danni's soul, I love her body, I love everything about her, but having a man stare at me this way makes me feel like more of a woman than I've ever felt like before. I try to imagine how Danni would dance, how she would twirl and shake her cute behind. Danni would make it sultry and seductive. I do my best to emulate what my imagination conjures.\n\n\"Do you like this?\" I ask, a touch self-conscious. \"Am I sexy?\"\n\n\"Yes, you're...dazzling...\"\n\nMy ego swells a little when I see the sincerity on his face. The adoration is plain to see, as well as how excited I've made him...judging by the tenting bulge at the crotch of his jeans.\n\n\"Thank you,\" I reply with a sweet smile and a wink.\n\nMy black, lacy bra is the front-clasp type, so I reach up with both hands and unhook it as I sway to the rhythm of my own passions. I do a slow reveal, giving Finn a quick, teasing peek at my perky little tits. As my seductive gyrations continue, I work in longer flashes of my breasts.\n\nAfter a bit of this tantalizing, I allow the front of my bra to fall open. I dance and sway, letting it slide down my arms and flicking it away. I climb onto his lap, facing him, and lift his hands toward my chest as he stares at me with undisguised wonder.\n\n\"I need you to touch me, Finn,\" I murmur quietly.\n\nHis oh-so-warm hands cup my breasts and massage them, his fingers occasionally giving my hard nipples light little pinches. I arch forward and we kiss again, but this time my tongue flickers softly between his lips. It isn't long before we're French-kissing, Finn's passion driving me absolutely wild.\n\nAfter a couple minutes of this I slowly climb from his lap to slump back into the couch next to him, my bottom perched at the edge of the cushion.\n\n\"Take off my panties,\" I invite.\n\nFinn still seems hesitant, but he slips off the couch and turns to kneel in front of me. His hands are shaking a tiny bit as they move forward, and he pauses.\n\nI take his hands in my own and say, \"Finn. Look at me.\"\n\nHe looks up, and I gaze directly into his eyes as I say, \"I want this. I want you.\"\n\nThose words erase his last vestiges of hesitation, and he slides his fingers under the edges of my underwear. He slowly pulls them down and off, and I spread my legs wide for him. He stares at my secret place with unabashed desire, drinking in the sight of my wet, excited sex.\n\nFinn's hands drop to the floor to support his weight as he leans forward, his attention riveted. His face is only inches from me, his hot breath brushing my inflamed labia with every exhalation. My pussy flexes a tiny bit in yearning each time I feel this heat.\n\n\"See how soaked I am?\" I whisper. \"You made me this way, Finn.\"\n\nHe knows what I want. He can see my dripping coochie is practically begging for it, and Finn doesn't disappoint. His mouth descends, closing the gap to kiss the lips of my aching snatch. I quiver at the light touch, my body wanting more. His tongue slides inside, a bit too rough and rigid. I can't fault him for his eagerness, but I'm also not above giving gentle guidance.\n\n\"A little too rough, baby,\" I whisper, running my fingers reassuringly through his fine hair. \"Softer...and flatten out your tongue while you lick...don't poke with it.\"\n\nFinn takes direction well, doing just as I asked without becoming upset. I smile, realizing he has the makings of an excellent lover. He's attentive and caring, willing to forgo his own pleasure for a while to make me happy.\n\n\"Oh yeah...that's better,\" I compliment quietly. \"Don't be afraid to ask a girl what she likes.\"\n\nHe pauses and quickly asks, \"What do you like?\"\n\nHis lips and tongue go back to work, and I tell him, \"Suck on my clit while you lick right below it.\"\n\nFinn once again takes my suggestion and puts it to practice.\n\n\"A little softer..god yeah,\" I exhale. \"Oh baby that's great right there...keep going...keep going...\"\n\nI was already so goddamn fucking horny it doesn't take much before I'm ready to pop. Finn seems to sense my imminent orgasm and starts getting all crazy with his licking and sucking, as if he thinks it's going to make my cumming more intense or something.\n\n\"No no no,\" I softly chide. \"You're all over the place, Finn.\"\n\n\"I'm sorry,\" he apologizes, leaning back with a look of distress on his face.\n\n\"Don't be sorry,\" I giggle. \"It's okay. Look, if you're going down on a girl and bringing her to an orgasm then what you're doing is exactly what you need to keep doing. If I'm about to cum then you already found my magic spot, no further exploration required.\"\n\n\"Oh, okay,\" he grins a little as I enlighten him.\n\nI'm glad he isn't taking the critique personally. He goes back to sucking and licking on and around my clit, right in the area he needs to.\n\n\"Yeah, just like that,\" I sigh. \"That's perfect.\"\n\nI start to tremble as I climb that lovely height once more. My insides clinch down, and my body tenses as the moment of apex approaches.\n\n\"Oh god!\" I cry out softly, my chest heaving and hips shaking.\n\nThe wonderful bliss of a great orgasm flashes up from below, my uterus and labia pulsating with contractions. Finn keeps at it, focusing his attention right where I told him, and provides me a lot of delightfully drawn out pleasure. My big \"O\" tapers off, and I place my hands against the sides of his face and lift gently to hint he can stop. Finn leans back and wipes my excess juices from his mouth and chin. He stares at me expectantly.\n\n\"I so needed that,\" I sigh, leaning back with closed eyes.\n\n\"I did okay?\"\n\n\"Baby, that was great.\"\n\n\"I'm glad you liked it,\" he grins, apparently pleased with himself.\n\nThere's a long moment of silence as I lay there enjoying the afterglow, and I can hear Finn shifting uncomfortably. Poor guy...I bet he's harder than a rock right now, and with his boner trapped in those jeans no less.\n\nI open my eyes, stare back, and whisper huskily, \"Do you wanna trade places?\"\n\n\"Y-yeah,\" he stutters and looks down, obviously nervous.\n\n\"C'mon,\" I say and pat the couch next to me.\n\nFinn seats himself and gets comfortable as I rise. I lean over to kiss him. I can taste myself on his lips, the dark and musky flavor of my own nectar arousing me again. As our tongues do the tango I reach down and unbutton his jeans, and my fingers brush against the bulge straining beneath them. I giggle, kneeling down between his legs.\n\nThis is it. I'm about to bare Finn completely to my sight. His hard cock will be mere inches from my face. Close enough to smell...close enough to touch. My heart rate picks up it's tempo as I unzip Finn's pants. He lifts his hips to allow me to strip him of the jeans, his underwear the last remaining barrier. Then his underwear are gone, his stiff manhood free.\n\nHe's beautiful down there. Finn's penis is about average length, I suppose, but it's thick, with a slight upward curve that ends at his engorged helmet. I run a finger over the tip, my digit coming away moistened by precum. Finn inhales with a shocked breath at the light touch.\n\n\"Finn,\" I begin softly, \"no judgment and don't be embarrassed, but are you a virgin?\"\n\nHe doesn't answer right away, giving a long pause, but when he does it confirms what I'd strongly suspected.\n\n\"Yeah,\" he nods reluctantly.\n\n\"It's okay,\" I say with an earnest look, my breathing becoming more energetic at his admission. \"I'm gonna suck you until you cum. I don't want you to stress about a thing. I want you to enjoy every second of it and not think about lasting a long time to impress me. You already impressed me by being the sweet, caring man I thought you'd be when I saw you in the bar.\"\n\n\"Alright,\" he replies with intense, eager eyes.\n\n\"Just lie back and let me please you. Cum when you want to, and don't worry about me.\"\n\n\"Okay,\" Finn says as he leans back, his eyes glued to me as my mouth inches ever closer.\n\nI lick upward from the base of his shaft, eliciting a throaty groan from the young man as I spread my saliva around. I follow up by running my soft lips up and down slowly and carefully. I stop each time at the top and gently swirl my tongue over his tip.\n\nThe taste and scent is manly, a mix of the light sheen of sweat covering his body, his aftershave, and the almost imperceptible flavor of his precum. I'm in no rush, so I take my time in giving his cock a thorough tongue-bath.\n\nI can tell by Finn's little twitches and heavy breathing that he's loving it, enraptured by the powerful sensations I'm giving him. I stare directly into his eyes as much as possible to watch his expressions of sheer enjoyment, and to be alert to how close he is to cumming. I want him to remember his first blowjob as long as he lives, and, despite what I said, I want him to last at least a little while. Making him fire off in less than a minute would hardly be memorable at all.\n\nI take the first few inches of him into my mouth with a sensual, unhurried pace, Finn uttering a long and breathy moan. I sweep my tongue around as I go, dipping my head onto his manhood as far as I can tolerate. I can't bottom out, but I have a good four inches of him inside. I can feel Finn's cock twitch ever-so-lightly in my mouth, his long, low sigh following. I pause, afraid I pushed too hard too fast, but he doesn't cum yet.\n\nOnce I sense he has himself under control I begin to move my head up and down. I move so soft and slow that I have him riding the edge of orgasm, my mouth manipulating his stick with an unexpected mastery. I'm baffled at my own skill with this sort of thing. I've never given a blowjob before, and I never watch porn. How am I this good at it?\n\n\"We have done this before.\"\n\nAh, that makes sense. I imagine in 2000 years Cassie has given more than her fair share of bee-jays. It must be her hand guiding me.\n\n\"Indeed, and when we are done we will demonstrate a little trick.\"\n\nCool.\n\nI continue my erotic balancing act, keeping Finn's virgin dick right at that threshold of maximum pleasure before cumming. I can feel his fingers stroke my hair with a tender touch, his moans and groans of pleasure sounding almost tortured. I can tell he wants to cum so badly, but I just won't let him. Not yet.\n\n\"Be aware giving this sort of fellatio to a man will cause his ejaculation to be quite...powerful. Are we sure we want to allow him to cum in our mouth?\"\n\nYeah, I'm sure. Shortly after starting my oral attentions I decided I would try swallowing. I want to experience all of Finn, accept all of him. Even if I end up not liking it I want to try it at least once.\n\nI lose track of time, basking in the intimacy of having the most private and sensitive part of Finn within my soft, succulent mouth. There's a certain feeling of power in holding him at my mercy like this. He continues giving off these sexy, tortured little sighs and moans with the occasional \"oh Erykah\". I keep it up and continue going until his body literally can't hold it in any longer.\n\n\"Prepare. It approaches.\"\n\nThe moment arrives. I can feel Finn's cock swell and flex, and his lungs shudder as he grunts and cries out at the insane force of his orgasm. His shaft pulses, the first immense stream of his spermies splashing into the back of my throat. I almost gag but manage to force the sensation back as I fight to swallow his incredible load. I can barely keep up as he shoots off blast after blast of his cloyingly thick seed.\n\n\"Oh fuck!\" he grunts with his lungs still shuddering, his hands gripping my hair.\n\nThe volume of Finn's ejaculation lessens, and I start sucking his bulging head. This sends him into a fresh wave of full-body shudders accompanied by more breathless profanity. His shaft eventually starts to get softer and shrink, but I keep sucking gently, riding his cock with my mouth as he climbs down from that glorious mountaintop.\n\nFinn, breathing heavily, exclaims, \"That was so...incredible...I thought...I was gonna...die...\"\n\n\"Now we shall show that trick we promised. Kiss his manhood.\"\n\nI allow Finn's penis to fall from my mouth, it's owner panting like he'd just run a four-minute mile. I give him a silky kiss against the flesh I so recently pleasured. I feel Cassie push a tiny little fragment of my power into Finn's shaft, my quintessence infusing the man's exhausted member.\n\nFinn jerks in surprise and blurts out, \"What was that? It felt like...like an electric shock!\"\n\nI watch in astonishment as his cock begins to swell and rise anew.\n\n\"I guess I have magic kisses,\" I giggle, giving Finn my cheesy-ass grin. \"It looks like someone isn't satisfied yet.\"\n\nThat's some trick.\n\n\"Nice feather in our cap, no?\"\n\nYes. Fuck yes! That's sexy bad ass!\n\nFinn himself looks baffled at his newfound stamina, and says, \"It's because of how foxy you are, Erykah. You turn me on so much.\"\n\nIn a very real sense. Kind of like charging a battery.\n\n\"Thank you,\" I say, blushing a little at his unstinting compliment. \"A girl loves to hear that kind of thing, you know.\"\n\n\"It's easy to say when it's true,\" Finn smiles at my sudden bashfulness.\n\n\"Well,\" I drawl and give Finn's rock hard cock a little shake, \"it would be a real shame not to put this to good use.\"\n\n\"Yeah,\" he says, his smile broadening.\n\n\"Hmmm,\" I hum, standing to my feet.\n\nKnowing my sudden worry, Cassie allays my fear.\n\n\"We can only become pregnant if we truly want it.\"\n\nReally?\n\n\"Really.\"\n\nThat's...interesting. I'm immune to disease and can't get knocked up unless I want to. It's like Eternals were built for sharing our love. I climb over top of Finn, facing him and straddling his waist.\n\nHe says, \"I...I have a condom in my wallet...in my pants over there.\"\n\n\"You can't get me pregnant,\" I assure him.\n\n\"I just want to be sure.\"\n\n\"I'm positive,\" I declare with certainty. \"I've never been with a man before. I want to feel you inside me, Finn...not some piece of latex.\"\n\n\"You're a virgin too?\" he questions in disbelief.\n\n\"No,\" I shake my head with a sly little smile.\n\nIt takes Finn a moment to process this, and his eyes widen when he makes the connection.\n\n\"You...you're...?\"\n\n\"Bisexual? Yeah,\" I nod. \"That doesn't bother you, does it?\"\n\n\"No. Not at all,\" he tells me quickly. \"So then...that blond at the bar?\"\n\n\"Danni. She's my lover.\"\n\nHis eyes widen even more in utter surprise at my admission, and he asks quietly, \"But...isn't this...aren't you cheating on her?\"\n\nI laugh lightly before revealing, \"Who do you think pushed me into talking to you?\"\n\n\"Wow,\" is all he can say.\n\nI nestle down onto Finn with my eager lips pinning the wonderful hardness and heat of his manhood against his belly.\n\n\"Don't worry, baby,\" I say. \"Everything is good...real good.\"\n\nI sigh as I rock my hips back and forth in small motions, my slick sex sliding over the top of his stick. Finn sighs too, and I lean forward for more of his gentle, passionate kisses. His hands reach up to cup and fondle my sensitive breasts, his tickling touch making me giggle. It doesn't take long before the buildup is more than I can bear.\n\nI have to have him inside me now.\n\nI lean back and rise up a bit, reaching down to grasp Finn's shaft and lift it upward. I can feel the hot, thick head as it presses against my womanly opening. I can't help but pause and savor the moment right before he penetrates me. I feel giddy and nervous and vulnerable and excited all at the same time.\n\n\"You're so amazing, Erykah,\" Finn breaths softly. \"I'm so lucky my first time is with such a perfect woman.\"\n\nSquee!\n\nMy heart melts at the sincerity of his words. I can tell by the look in his eyes the young man below sees me as a goddess this very moment, and it makes me want him all the more.\n\nI take a deep breath and slowly allow my hips to come to rest against Finn's pelvis, feeling the warmth of every delicious inch of him as he fills me like only a man ever could. My mouth falls open, and I exhale with a soft sound of ecstasy as the head of his cock glides over that magical spot inside me.\n\n\"Oh my god you feel so good,\" Finn mutters, just barely beating me to those exact same words.\n\n\"Yeah, baby, you too,\" I murmur back as I begin moving. \"Your dick is so hot inside me...filling me up.\"\n\n\"You're so tight,\" he grunts.\n\nFinn's hands fall to my hips, gripping and squeezing as I take a slow, Sunday ride. I massage my breasts with my hands, pinching and tugging at my nipples. The rising passion within spurs me on to quicken my lovemaking, and I lean into the back of the couch for support. Finn watches with keen interest as my little boobies jiggle and bounce directly in front of his face. His eyes move back and forth between my breasts and the spot where we are joined as one, then up to my emerald eyes.\n\nIt's so intimate having this part of him inside me down there, like I'm defenseless against his charms. Though I'm on top it's as if I'm at his mercy. I've opened myself up and let him inside in a way no one ever has been. The warmth, the smooth feel of his skin, the slippery sensations all combine in an eye-opening discovery.\n\nI love cock. I love it inside me, the way his curve presses the head against that hypnotically sensitive spot within. It's like I'm in a sort of trance...a sex trance.\n\nFinn is getting into it more and more. He starts thrusting his hips upward in time with my downward bounces, our flesh slapping together. Each time we contact it sends a jolting vibration through my clit, giving rise to lewd little moans that escape my throat.\n\nI lean down farther, my mouth at the side of Finn's head as my hands grip his shoulders. I breath heavily into his ear, nibbling on the lobe, and I tense up all over at my imminent orgasm. I slam my ass down hard against Finn's pelvis a few last, desperate times until my climax explodes within.\n\n\"C-cumming!\" I mouth in a tiny voice. \"I'm cumming!\"\n\nFinn grinds himself up and into me, his shaft plunging into my deepest depths. I whine with those same little animal noises Danni had gotten out of me last night. It's so amazing and different I can't help but giggle as the peak of it washes over me. My body goes limp, Finn still buried inside balls deep as my great tsunami disperses into more placid waves.",
        "\"Your cock is so awesome, Finn,\" I whisper into his ear.\n\nHe starts running his fingertips up and down my back in slow, gentle motions that send waves of goose-bumps tingling across my sensitive skin.\n\n\"Thanks,\" he grins. \"Now what should we do?\"\n\n* * * * * *\n\nFinn fucks my brains out as we make love. We move from place to place and position to position. He does me missionary on the couch for a while, building up my desire again. He gives me another jarring orgasm from the back, slamming me roughly doggie-style. After that I'm belly-down on the floor with Finn lying atop me and taking me from behind. I'm trapped and helpless against his manly thrusts as he makes me cum yet again. He's starting to take charge and has me flip over. We do a reverse 69 for a while, Finn on top and dipping his hot shaft in my throat as he eats me out.\n\nHe climbs around and mounts me in the missionary position again, my legs wrapping around his back. His slow, grinding thrusts are fucking awesome, but when he pins my legs back with his arms and starts ramming away like a madman my vision goes all blurry.\n\n\"Fuck, Erykah, you're so beautiful,\" his hungry whisper comes to my ears.\n\nI start crying out with loud, obviously sexual gasps, and Finn looks to where his hard shaft is drilling my hole. Every time he pounds me it sends that vibrating shock into my clitoris, and I start to cum again. I don't even try to hold back my voice this time. I want all Finn's neighbors to know just how goddamn good he's giving it to me right now.\n\n\"OH GOD FINN GOD!!! FUCK ME!!! FUCK ME!!!\"\n\nHis thrusts slow but become more powerful as each stroke drives his love-staff home with marvelous force. I can tell he's about to shoot his second load of the night.\n\n\"Cum in me, Finn!\" I beg, my own orgasm still ripping my senses to shreds. \"I need your cum inside me!\"\n\nHis cock pulsates within my vaginal walls, his molten seed filling my smoking caldera. It feels like hot, slick lube being squirted inside. Finn's grunts are so primal and raw as he pounds against me in the throes of his own orgasm. We're both covered with sweat at our sexy trading of lusts, our breathing labored as we ride out our pleasures together.\n\nEventually Finn releases my legs, and they flop nervelessly to the floor, my strength spent in the most glorious of ways. He falls against me, and we both laugh in the afterglow of the intensity we just shared.\n\n\"Is my manly love machine exhausted?\" I giggle.\n\n\"And hungry,\" he says. \"Are you hungry?\"<br>\n\n\"Yeah,\" I admit, stroking his back. \"I'm enjoying this, though.\"\n\nFinn rolls onto his side, reaching behind to grab an arm cushion off the couch. I turn on my side to face him, and he props our heads with the small, makeshift pillow. Our arms and legs entangle, our faces up against each other. It's only natural that we kiss softly and repeatedly as we cuddle.\n\nOut of the blue, Finn says, \"I think you've ruined me.\"\n\n\"What?\" I question, his statement throwing me for a loop. \"What do you mean?\"\n\n\"No woman could ever compare to you, and I'm pretty sure I'm a one-night stand. You're already in love with someone else.\"\n\nCassie speaks.\n\n\"This one is a good soul. We should make him one of our Faithful.\"\n\nThere's that word again, the one my father used.\n\n\"Show him what we are. He already loves us, now make him believe.\"\n\nIn a bit. First...a quick talk.\n\n\"No, Finn. You're not a one-night stand,\" I deny with a graceful smile. \"Do you love me? I'm not talking about lust...I already know we have that going for us. I mean actual love. Do you feel it for me? I just need a simple, honest answer...yes or no.\"\n\nI know it's a silly question after a single night together, but it's a basic yes/no proposition. I can see in his eyes he's putting actual thought into it, and his heavy sigh tells me his mind before his words do.\n\n\"Yeah,\" he nods, being candidly forthright and open. \"How could I not? You aren't like any woman I've ever known before or could even imagine, and it's more than you taking my virginity. There's something...special about you. Something that...\"\n\nHe pauses, his fingers clutching at the air above us as if they could extract a way to quantify his feeling from the ether.\n\n\"Something that demands I love you,\" he manages to finish.\n\n\"He is already halfway there.\"\n\nCassie's instincts declare Finn is worthy of sharing in our existence, and that's good enough for me.\n\n\"I'm happy you love me,\" I reassure him, \"because I love you too. It's perfectly okay for us to love one another. I'm in love with Danni, but I can still love you, Finn. Do you understand?\"\n\n\"I don't know...I...maybe I'm just selfish, but I don't think I could share you, Erykah.\"\n\n\"Silly boy,\" I smile, giving him a quick peck on the nose. \"The power of my love isn't something one person can handle by themselves.\"\n\nI stand, helping Finn to his feet and motioning for him to sit on the couch. He looks a little forlorn as he does so. I look back and forth, to the left and the right to make sure I won't knock anything over. This is my first time doing this, and I'd hate to accidentally bust up Finn's place. I center myself in the living room. Luckily it's narrow but long.\n\nCassie chimes in to assist, gentle fingers brushing my mind.\n\n\"Relax and feel our wings within. They yearn to be free...sense their dark glory and how they struggle to escape their long confinement.\"\n\nNow that Cass mentions it I can feel something inside me, a subtle pressure that's always been there. It's something I never noticed before, not until Cassie pointed out it existed. I try to flex what I sense, and I feel my wings battering against my rib cage from within. The sensation is spiritual rather than physical, like the memory of a past that is my birthright.\n\nThen they burst forth, and I can't help but inhale with a sharp, deep breath at the wondrous sensation of sheer glory. I turn my head to view the splendor of my new appendages as they unfurl, the delicacy of the situation briefly forgotten at my amazing discovery.\n\nMy black, feathered lengths are alight with shadow, the swirling dark dripping downward. The droplets of night evaporate and vanish as they drip from my wings.\n\nI hold my arms up high with a look of indescribable joy burning on my face.\n\n\"My god,\" Finn breathes with quiet shock. \"What are you?\"\n\nHe doesn't sound afraid, instead utterly awestruck.\n\nI flutter my wings a tiny bit before retracting them partway and explaining, \"Mostly I'm a woman who loves you Finn, and that's what you need to always remember.\"\n\nHis eyes are darting back and forth between my wings as he repeats, \"Erykah...what are you?\"\n\nI fold my pinions across my back and kneel down in front of Finn, clasping his hands in my own. He doesn't flinch or withdraw, which makes me feel better about throwing this at him so suddenly. Actually, he's handling it quite well so far.\n\n\"Do you remember when you were a little kid, and the world was still full of magic? Like anything was possible? Remember back before we had to grow up? Before we had to accept the mundane reality around us, when the universe might still hold anything we could possibly imagine?\"\n\n\"Yeah,\" Finn nods.\n\n\"I'm that feeling. I'm that sense of wonder. I'm one of those things we stopped believing in. Honestly, I only recently learned what I am, and I'm still trying to come to grips with it myself.\"\n\n\"So what are you?\"\n\nI sigh, wondering how to frame this in a way Finn can easily accept. I suppose it would be best to stick to the truth...for the most part. There are things I obviously must keep secret for his own good, but the truth in it's basic form is a good place to start.\n\n\"Are you a religious person, Finn?\"\n\n\"Not really,\" he admits hesitantly. \"You're an angel?\"\n\n\"Yes and no. It's complicated, but we call ourselves 'Eternals'.\"\n\n\"We?\" he asks wide-eyed. \"There are more of you?\"\n\n\"Yes,\" I nod. \"Danni is one too.\"\n\n\"Am I going to be punished for not going to church?\"\n\nI look at him with dumbstruck amazement for a long moment. Then I giggle, the giggle turning to a laugh.\n\n\"No Finn,\" I assure him. \"I mean, seriously? I just fornicated with you.\"\n\nI think about it and decide to try injecting some humor into the situation. I hop up and turn around to wiggle my naked ass in his face.\n\n\"Actually I've been pretty naughty. Maybe you should punish me. I'm up for a spanking.\"\n\nInstead of a swat, I feel his fingers brush against the feathers of my closed wings, the light touch tickling a little. My wing twitches a bit and I giggle, spinning back around.\n\nFinn quietly speaks, \"They're real.\"\n\n\"Of course they're real,\" I say with a lopsided grin. \"Forget about my wings for now.\"\n\nI concentrate and find it's very easy to withdraw my feathered glories. They slide seamlessly back into my body, becoming that ready, almost imperceptible pressure again. I sit down next to Finn, cuddling up to him with a sigh. He hesitates only briefly then puts his arm around me. We look into each others' eyes.\n\n\"In a lot of ways, in all the important ways, I'm just a young woman named Erykah Gray,\" I continue, \"but there's a part of my soul that's existed almost as long as the universe itself. Danni too, and we've both loved each other almost as long as that.\"\n\nFinn laughs, obviously understanding the gist of what I'm getting at.\n\n\"So my chances of stealing your heart from her are somewhere between zero and nil.\"\n\n\"That doesn't mean you're not in my heart, Finn, but Danni owns it. I can be with you, but I can never be yours and yours alone. I will totally understand if you want this to end here. If so then I'll walk away, and you'll never have to see me again...I promise.\"\n\nHe gives me a wry grin, saying, \"Not if you keep going to Club Mystery. It's become my new favorite haunt. It's where I met my first angel.\"\n\nI snuggle closer, curling up beside him with a contented sigh. Finn has fully accepted me in his heart. I can feel the connection between us now, and though it's still this fragile, frail little thing I know it will strengthen over time...as long as I treat him right and care for our link with kindness and giving.\n\nI understand what the Faithful are now. I can feel Finn's love and belief inside me, feeding me with a tiny trickle of quintessence. Though I just met him he's become one of the most important people in my life. I have this powerful desire to protect and nurture him.\n\n\"What else can you do besides grow wings?\"\n\nI joke, \"Oh, you know...fly, smite evil...angel-type stuff like that.\"\n\n\"So it's a big trade secret, eh?\"\n\n\"Not really,\" I shrug. \"Okay. I'll show you a couple things then. Prepare thy mind for the blowing it's about to receive.\"\n\n\"I'm ready,\" Finn chuckles.\n\nI look around the room, my eyes fastening on a DVD case perched atop Finn's TV stand. I focus on it, causing the small object to rise in the air and float toward us.\n\n\"Holy shit,\" Finn says with a laugh. \"That's freakin' awesome!\"\n\nI snatch the case from mid-air and throw it back toward the TV stand, using my telekinesis to halt it's flight and set it back down. Finn gawks in wonderment as it settles in place. I ponder what else to demonstrate, not sure which of my abilities might spook him.\n\n\"I'm also a lot stronger than I look,\" I reveal.\n\n\"How strong?\" he asks with raised eyebrows.\n\nI stand and say, \"Get up and I'll show you.\"\n\n\"Why? What are you going to do?\" he asks with a slight edge to his voice.\n\n\"I'd never hurt you, Finn. You asked for a demo, so I'm giving you a demo.\"\n\nHe rises to his feet and I promptly sweep him off of them, scooping him up and into my arms as easily as I could pick up a small dog.\n\n\"Jesus!\" he blurts out reflexively before realizing what he said. \"Oh shit! Sorry! I shouldn't have said that.\"\n\nI laugh and tell Finn, \"It's okay. Jumping Jesus jacked-up shit-fuck Christ on a fucking Pogo stick. See, look...I didn't burst into flames or anything.\"\n\nThat gets a good chuckle out of him. I set him back to his feet and plant a kiss on his cheek.\n\n\"I can do other stuff, too,\" I shrug, \"but right now you need to feed the Buddha.\"\n\n\"O-Kay...is that some sort of religious ritual or something?\"\n\n\"Dude, you mentioned food,\" I say, rubbing a hand in small circles over my belly. \"You must feed the Buddha and make him fat-happy!\"\n\n\"Oh damn!\" Finn laughs uproariously at my silliness. \"Yeah, food would be good.\"\n\n* * * * * *\n\nIt's still dark outside when I awaken the next morning. The ambient sounds of the city come to my ears, and I can feel a warm, masculine presence next to me, his scent filling my nostrils. I blink and have to think about where I am, but then a happy smile spreads it's way across my mouth as I remember.\n\nFinn is spooned against my back, a hand over my stomach. I glance at his alarm clock and see it's only 5:52 AM. If I recall correctly he said he needed to be up by six-thirty to get ready for his classes. I'm enjoying the feel of his naked form against me, but my bladder is telling me I need to move.\n\nI carefully extricate myself from Finn. My movements don't wake him, which I'm glad for. Seems like I should let him be for now. Either I wore him out last night or he's not a light sleeper. I get up from his bed and consider turning on a light. I don't want to disturb Finn, but I also don't want to stumble around in the dark.\n\nOh wait...duh!\n\nI jack up the sensitivity of my eyesight and quietly mutter, \"Wow!\"\n\nThe bare trickles of light coming through Finn's curtained window are suddenly washing everything with a silvery, almost black-and-white coloring. This is bad ass! I can see in the dark. Sweetness.\n\nIt's easy finding the bathroom now, and I take a quick trip to tinkle-town. As I squeeze out the last droplets of pee, a bare trickle of Finn's sperm drips out. I flex a couple times, but nothing more dribbles loose. I finish my business and flush the toilet.\n\nMy mouth is dry, like I fell asleep with a big wad of cotton in it, but my head feels fine. I thought maybe I'd wake up with a hangover, but no. Dodged that bullet.\n\nI enter Finn's kitchen and get a big drink of water, feeling better afterward. I wonder what to do now. I can't leave yet because I need to have a talk with him before I go, but I wouldn't feel right rifling through Finn's belongings in search of entertainment. I get out my smartphone instead and fiddle around on the web for a few minutes.\n\nI sigh. As I suspected I'm not really into it at the moment. My mind wanders as I think about last night and my new experiences. I got drunk and laid by a man, both firsts for me. Actually, I've had an amazing amount of firsts in the last few days.\n\nMy thoughts turn to the kinky, as they've been doing lately, and I fondly recollect the wake-up call Danni had given me yesterday morning. Being roused by her mouth down below was a great start to the day. A mischievous grin tugs at my lips. I make my way back into Finn's bedroom. He shifted during my absence and is now lying on his back.\n\nPerfect.\n\nI climb under the covers, careful and slow, positioning myself over my target. On all fours, I lean down and pop his soft little wiggle-worm into my mouth, gently rolling my tongue around it. His body shifts minutely, and a quiet moan escapes his lips. He doesn't wake, but his manhood starts to react to my attentions.\n\nBefore long, his rod is hard enough to knock a hole through drywall. I get serious and start working over his stick in earnest. That wakes him up. He groans in surprised delight, his hands traveling to the back of my head to stroke my hair.\n\n\"Good morning,\" I say around my mouthful of cock.\n\n\"Uh-huh,\" Finn utters quietly in agreement.\n\nI continue blowing him for a couple more minutes before pausing to ask, \"Keep going or you want me on top?\"\n\n\"On top,\" he says quietly and reaches out to turn on his nightstand's lamp.\n\nThe glare is overbearing, and I have to quickly release my heightened sight to keep from being blinded.\n\n\"Okay, top it is,\" I smile, rise up, toss back the blankets, and straddle him.\n\nI sigh with a soft shudder as Finn's sword slides smoothly into my moist sheath. I ride him with a quick urgency, knowing I don't have a lot of time before he has to get dressed for his day of college classes. It's not long before I'm cumming all over his dick, my juices dampening his pubes and tiny cries of passion fleeing my lips. My backside comes to rest against him, and I exhale heavily in satisfaction.\n\nFinn hasn't gotten his yet, so I lean down and whisper in his ear, \"Come on, baby. Give it to me.\"\n\nHe grabs my ass and starts pounding upward, fucking me hard and fast. I can tell by the pitch and tempo of his breathing he's getting closer, but then his alarm clock starts blaring with it's irritating racket. We pause in our coupling, and I reach over to slap the snooze bar.\n\nBlessed silence fills the room, and I chuckle as I say, \"Hey...time to get up.\"\n\nFinn laughs and responds, \"I'm already up. Can't you tell?\"\n\n\"In more ways than one, and yes I can definitely tell.\"\n\n\"Oh!\" I squeak when without warning Finn goes back to hammering away, his hands massaging my buttocks.\n\nHis breathing begins to intensify again. I try a little dirty talk to see if it has the same effect on him as it does on me.\n\n\"Yeah baby,\" I whisper, my lips against his ear and my voice husky with need. \"Come on, baby. Give it to me. Cum inside me...I want you to cum in me. Fucking cum. Cum hard.\"\n\nThat does the trick, sending Finn over the edge. He groans loudly and slams himself deep within. His steamy man-juice squirts inside me, filling my core with it's heat. I can feel his swollen cock flex and pulsate with each shot. I'm not actually cumming this time, so I can feel every bit of his orgasm...raw and unedited. It's so intimate and carnal and passionate. It's like having my insides bathed with his love.\n\nI speak softly into his ear, \"I love your cock, Finn. I love it when it shoots inside me.\"\n\nWe lie wordlessly against each other for a while and catch our breath. Finn's fingers trace lines up and down my back, making me shiver at his light touch. I kiss his ear and nibble on the lobe before sucking lightly against the skin of his neck. I'm not trying to give him a hickey, so it's a very, very light suck.\n\nFinn's orgasm has run it's course, and I know he needs to get up and get to his college classes. I lean up a bit and give him a quick peck on the nose.\n\nI look in his eyes and smile, saying, \"Thank you. That was great.\"\n\n\"Spank you,\" Finn says with a devious smile.\n\nHis palms smack my ass cheeks just hard enough to make them sting the tiniest bit.\n\n\"Oh!\" I utter in surprise at his bold move. \"You naughty boy! You better get up before you're late.\"\n\nHe sees I like it and smacks my ass again, then massages it all better with a gentle touch. I rise up, Finn's wet penis flopping out of me and hitting his belly. I swing around before rolling from his bed. If I let him keep spanking me we'll be here all day.\n\n\"Come on,\" I say, motioning for him to get up. \"Rise and sh...oh!\"\n\nI can feel something dripping down the inside of my leg. I look to see his cum sliding out of me in a thick dollop of white. Swiping it up in my fingers, I spread my stance a bit. I use my already cummy hand to catch another blop of Finn jizz as it dribbles straight down from my wet, slightly parted pussy lips.\n\n\"Oh wow,\" Finn mutters as he rolls on his side to watch with interest. \"That's sexy, Erykah. Can you squeeze out more while I watch?\"\n\n\"I can try,\" I giggle.\n\nWell, I see he's gotten over his nervousness around me, as well as his confidence issues. It also seems he has a thing for watching cum drizzle from a woman's vagina. I use the fingers of one hand to spread open my coochie, squeezing and flexing my muscles inside. More of him comes dripping out into my hand...then more and more.",
        "\"Jesus,\" I laugh. \"Is that a dick between your legs or a fire hose?\"\n\nFinn smiles but doesn't answer, his gaze glued to my crotch as he watches with rapt attention. I wonder why this didn't happen last night, but then I remember I'd swallowed his first load. That must be why it almost felt like I was drowning in his cum and had to fight to get it all down. His second batch must have been no where near this size, my vagina able to hold it in or something.\n\nEventually I've gotten out all I'm going to, leaving me to wonder what to do with my big handful of Finn's seed. If I don't do something with it fast, though, I'm afraid it's going to drip all over his floor. Without thinking I lift it to my mouth and upend my cupped palm to let the sperm run down my throat.\n\n\"Holy shit,\" Finn murmurs softly.\n\nI've read that a man's sperm is supposed to taste nasty, but honestly...I don't mind the flavor. It's not great, but it's not so bad as all that, either. Finn seems to be getting a kick out of it.\n\nAs I lick the last bits from my palm he says, \"I had a towel in the hamper over there you could've used.\"\n\n\"That's sweet of you, but I don't mind. Really, I don't.\"\n\nFinn says, \"I've heard most girls can't...or won't...do that. A lot of my friends complain their girlfriends won't swallow.\"\n\nI grin devilishly and inform Finn, \"Well then...I guess you have one hell of a story to tell them, huh?\"\n\nHe gives a sly little grin, saying, \"I guess I do.\"\n\nFiguring now is as good a time as any to have that talk, I continue, \"In fact, I'm absolutely fine with you telling your friends every dirty detail about how kinky I am. There's something you can't tell them, though. Something you can't tell anyone.\"\n\n\"I figured,\" Finn nods with a knowing smile. \"Who'd believe me anyway? I start telling people the girl I made love to last night is actually an angel from heaven, and they'll lock me in a rubber room.\"\n\n\"I'm glad you understand. It's really important.\"\n\n\"Your secret's safe with me. I promise. Besides,\" he chuckles, \"I'm pretty sure you could kick my ass.\"\n\n\"Oh, Finn,\" I shake my head, leaning down to plant a kiss on his forehead. \"I would never hurt you. I love you.\"\n\n\"I love you too, Erykah,\" he says easily but with a sigh.\n\nThat sigh speaks volumes. Finn knows he'll never have me in the way he wants, but he's still happy to have me at all.\n\n\"Don't worry Finn,\" I try to encourage him, running my fingers softly through his hair. \"Some day you're gonna find a girl who knocks your socks off.\"\n\n\"I already did,\" he laughs.\n\n\"And I'll be right here for you any time you want me. If I'm able I'll come running.\"\n\n\"Really?\" he asks.\n\n\"Yeah. Really. All you have to do is call me.\"\n\nIn a dead serious tone Finn asks, \"So...what...? I just call out your name and you'll hear me?\"\n\n\"No!\" I giggle hysterically. \"Call me on the phone, silly!\"<br>\n\n* * * * * *\n\nParting is such sweet sorrow. Finn and I trade phone numbers outside his apartment building as we stand on the sidewalk. I give him a powerful kiss and tell him to have a good day before he heads off to take the subway. I stand there basking in the early glow of a bright, beautiful morning as I await the taxi I called.\n\nIn a different universe, if I were just Erykah Gray...if none of the craziness surrounding me existed, I think Finn and I would've had a real shot at building a life together. Being who and what I am, however, it's simply not meant to be. The thought is bitter-sweet and poignant in a way, but I'm still glad to have him in my life.\n\nI'm also very eager to get back to Danni so we can have us a downright righteous gossip session. I can tell her about my night, and she can regale me with hers. While I wait for the cab I shoot her a quick text.\n\n~Oh Danni my Danni. Wherefore art thou Danni?~\n\nMy phone buzzes a moment later with her reply.\n\n~In my dorm room and btw wherefore doesn't mean \"where\" in that quote~\n\nHuh?\n\n~Huh?~\n\n~It means \"why are you\". Common misconception. You're abusing Shakespeare, but I'll forgive you this one time~\n\n~Okay smarty pantz. Coming home then~\n\n~My pussy's getting wet just thinking about you. Can't wait to hear how your night went~\n\nI laugh at her silly reply. Then I realize she could be serious, and my pussy starts getting wet thinking about her. I believe I might be turning into a nympho. Oh well...at least I'm built for love. If Danni does want a little sumthin' when I get back then I'm really glad I borrowed Finn's shower.\n\nI send one more text.\n\n~K. Love you and c u in a bit~\n\n~Love you more. *huggies*~\n\nI smile. This is actually the longest Danni and I have been apart since we met, and I really do miss her. I realize that was also the first text conversation we ever had. It's remarkable how even in a text Danni is so friggin' cute.\n\nThis taxi ride is going to set me back a chunk 'o change, but I should've gotten my disbursement this morning. Using my smartphone I log into my bank account, kind of kicking myself for not checking before I called a cab. Hopefully I have the money for this.\n\nBrix are shat when I see my balance. I stare at the number in disbelief.\n\n\"Current Available Checking Balance: $10,225.87\"\n\n\"Holy fuck,\" I mumble, hardly noticing as my taxi arrives.\n\n\"Hey miss, you call a taxi?\" the driver says after stepping from his vehicle.\n\n\"Uh, yeah. Sorry,\" I say absentmindedly as I hop in the back seat. \"Bay Ridge Academy, please.\"\n\n\"Alright,\" the cabbie nods, \"but you gotta pay up front for a ride like that.\"\n\n\"Yeah, sure,\" I say, digging my debit card from my purse and handing it over.\n\nA moment later he hands it back, and I return it to my purse without looking. My eyes are still glued to my phone's screen. I keep staring at my balance, wondering what sort of monumental fuck-up must have occurred. I should call the bank and sort this out. I don't want to spend money I don't really have and then get sued for doing so. I'm halfway through dialing the number when something occurs to me.\n\nFather.\n\nI clear the number currently on-screen and send a text to dad instead.\n\n~Hey is there something you forgot to tell me?~\n\nI wait for a reply...and wait...and wait. We're actually nearing the freeway entrance (I think) when my phone finally buzzes. I swipe and open the text I just received.\n\n~Finally checked your balance, eh?~\n\n~So that was you~\n\n~Yes~\n\nI'm grateful, but baffled. Just how wealthy is my father that he can toss me ten grand like it's my week's allowance?\n\n~Thank you, but why?~\n\n~Can't have you running around broke~\n\n~What am I supposed to do with that much money?~\n\n~Be frugal I would hope. We'll see how it goes~\n\nSo this is some sort of test? He wants to see how I'll react to suddenly being so far in the black I don't know what to do with myself. I learned plenty of lessons in frugality and monetary self-control from mom, so I might just surprise him.\n\nI send another text.\n\n~I don't know what to say except thanks again. See ya when I get back from Vegas~\n\n~Are you at school now?~\n\nDad didn't take the bait. Well, poop on him for being a spoil-sport.\n\n~No. Headed that way. Be there in about an hour or so. Why?~\n\n~There's something waiting for you when you get here~\n\n~And you're going to tell me what it is, right?~\n\n~Nope. That would ruin the surprise. Text me when you're 10 minutes out please~\n\n~Will do, and thanks for last night. You're actually pretty cool...for a dad~\n\nMy father's reply takes a minute to pop up.\n\n~And you're more than I could've ever hoped for in a daughter. I love you, Erykah. You don't know how much it means to me to have you back in my life~\n\nI stare at that middle part.\n\nI love you, Erykah.\n\nI hesitate to reciprocate, feeling the sentiment wouldn't be genuine quite yet. This whole relationship with my father is confusing at best. Something has been bothering me about him...about him and how he fits in my life. It's like finishing an entire puzzle except for the last piece, and when you lift it from the box you realize it doesn't fit in the final slot, let alone look anything like the rest of the puzzle.\n\nI sigh a bit in frustration, feeling like I'm missing something dreadfully important with dad, but I haven't been able to put my finger on it. I was so inundated yesterday and the night before with everything that happened, and I don't think my mind has processed it all yet.\n\nMy phone buzzes again. I thought it was going to be another text from father, but instead it's from Chris.\n\n~Hey sis. You still in the city by chance?~\n\nSaved by the bell, I guess. I flip back to my convo with dad and shoot him a quick goodbye.\n\n~Gotta go. Chris is texting~\n\nFather's reply is quick.\n\n~Okay. See you~\n\nI sense some disappointment there at my lack of reciprocation, but dad's a big boy. He'll get over it. I swap back to my brother's text and reply.\n\n~In a taxi headed back to school~\n\n~Still in town?~\n\n~Just barely~\n\n~Sweet. Can I catch a ride? I'm at you know who's place~\n\n~kk~\n\nThen I remember I was going to check out something. I open a browser on my phone, go to the bookmarked page, and ask the taxi driver if he'll make a detour. He's more than happy to do so...extra cash in his pocket for the day. I fire off another text to Chris.\n\n~Making a quick stop before I pick you up~\n\n* * * * * *\n\nI gaze around at the interior of The Third Eye. The quaint and clich\u00e9 little Wiccan magic shop looks just as it did from my memories...the memories of a night that never really happened. Or did it? It still blows my mind trying to think about it. I'm an actual, honest-to-goodness time traveler, like something from a science fiction story. Granted it was only a small jump of a few hours, but it's still mind-blowing.\n\nI half expect to see Emma or Graves standing around, Emma with her spaced-out, faraway look and Graves with his kind eyes. Neither are here, though. Sitting behind the sales counter is a very young woman I don't recognize. Her black hair is pulled into a tight, severe bun. She appears to be slightly chubby in a pleasantly feminine way, but it's kind of hard to tell for sure underneath her black women's business suit.\n\nShe has an open textbook in front of her, her attention riveted. As I watch her briefly she reads for a bit then scribbles in a nearby notebook. The woman senses she's being watched and looks up to peer at me through her thick glasses. She strikes me as a fellow bookworm. There's something painfully familiar about her, but I cannot for the life of me remember where I've seen her before.\n\n\"Hello,\" she greets with zero enthusiasm, her lips twitching briefly in a quick, forced smile. \"Something I can help you with?\"\n\nIt's obvious to me the young lady is irritated at the interruption, and whatever she's doing with the book and her notes is important to her. I approach the counter and try to flash a disarming grin. The woman closes both book and folder, placing them beneath the counter and out of my sight.\n\n\"I'm sorry to bother you,\" I begin, \"but I'm looking for Emma. Does she work here?\"\n\nThere's a flash of annoyance in her eyes when I say Emma's name, and the young woman answers, \"Work is sort of a strong word for her...and it's more of an ownership thing...and if by work you mean does she ever show up here to actually do anything...then no.\"\n\n\"Oh,\" I nod, not really surprised. \"She owns the place?\"\n\nThat annoyance flashes through her eyes again as she replies, \"Isn't that what I just said?\"\n\n\"Yeah, I guess you did,\" I reply to the woman's brusque manner. \"Is she here?\"\n\nShe sighs heavily before saying, \"Look, if Emma wants to get in touch with you she will. Take my advice though, sweetie. Lovers like you are a dime-a-dozen to her. Walk away before you get your heart broken.\"\n\n\"What?\" I laugh lightly. \"No, it's not like that. I didn't...we didn't...uh, you know.\"\n\n\"Oh? My mistake,\" she begins, her eyes narrowing at me in suspicion. \"Then what do you want with Emma?\"\n\n\"I just want to talk to her. Is she here?\"\n\n\"No. She isn't, and as I said she rarely ever if ever shows up here.\"\n\n\"She was here the other night with a man named Graves. Is he here?\"\n\nThe young woman's eyes become almost unfocused, yet she's still looking at me. Something's going on behind those liquid brown orbs of hers, and I'm suddenly nervous at the realization she's a mage like Emma. My skin crawls uncomfortably under her scrutiny, and I know for certain she's examining me with some sort of mystical sight.\n\n\"Oh...finally. You must be Erykah,\" the woman pronounces as she stands up. \"Emma left something for you. Follow me.\"\n\nShe walks over to a door behind the counter, opening it to reveal what appears to be a storage room. Gorilla shelves full of dusty boxes and old-looking stacks of books fill the area. The place is a dingy grey and tan with sparse light filtering through a lone window, little speckles of dust floating in the bright beam of sunlight. The woman walks inside.\n\n\"Emma left something for me?\" I ask, pausing at the open doorway.\n\n\"Yeah,\" the woman says roughly. \"You want it or not? Take it and leave or just leave. I don't care. Either way as soon as you go I call Kimmy in and I'm outta here.\"\n\nI'm guessing Kimmy is an employee.\n\nShe turns to look at me and crosses her arms under her massive bosom. The young woman taps a foot impatiently at my hesitance.\n\n\"I don't have all day,\" she scowls.\n\n\"Can't you just bring it to me?\"\n\n\"No. I was instructed to give it to you in here with the door shut against prying eyes, and no...I don't know why. I don't know why my sister does half the things she does. So, either come in here and take the blasted thing or leave. Like I said, I don't care either way.\"\n\nDamn me and my curiosity. I walk inside and close the door. The woman turns and strides behind a shelf toward a back corner of the room. I should walk away, but I have a feeling what I'm about to receive could prove important. It's bound to be another piece of the puzzle my life has become. So far, while mysterious, Emma and Graves have been helpful...as far as I can tell.\n\nAs I follow I point out, \"You know my name, but I don't know yours.\"\n\n\"Candice, if you must,\" she grumbles.\n\n\"Well, it's nice to meet you, Candice.\"\n\nShe crouches in front of a large fire-proof safe and begins twirling the combination dial.\n\n\"The pleasure's all yours, I'm sure,\" she replies in a sardonic tone.\n\nI'm not certain what to say to that, or exactly how to react to her curmudgeonly attitude. She's a real sour-puss for sure, but I don't think it's something I did. It seems more likely she's peeved at being made to play \"fetch 'n carry\" by Emma.\n\n\"You don't actually work here, do you?\" I query.\n\n\"Absolutely not,\" Candice grunts as she yanks the safe's handle. \"Do you really think I enjoy slinging worthless baubles to tourists and selling useless junk to silly fools who think they're playing at real magic?\"\n\n\"I imagine not.\"\n\n\"You imagine correctly.\"\n\nCandice lifts a large, nondescript wooden box from the safe. It's maybe a foot-and-a-half long by one foot wide. A small brass clasp holds the lid closed. My host places the box atop the safe then steps back a few paces.\n\n\"What's inside?\" I ask.\n\nCandice shrugs, saying, \"Not a clue. I avoid Emma's affairs as much as possible. Well, open it so I can be done here.\"\n\nI reach out to the box nervously, my fingertips hovering over the clasp. I wonder what witchery will befall me when I touch it.\n\n\"Oh for crying out loud,\" Candice barks. \"The box is just a box.\"\n\nShe reaches over, flips the clasp, and lifts the lid to bare the box's contents to my eyes.\n\n\"It's the hilt of a sword,\" I say, caught off guard by the unusual object.\n\n\"Huh,\" Candice says quietly. \"Odd.\"\n\nIt's rather plain-looking, the two-handed grip wrapped tightly with sweat-stained leather. It has a rounded pommel at the base, and the crossguard is thick with minor dings and scratches. There's no blade attached, but the thing looks as though it saw a lot of use before the deadly part of it disappeared.\n\nSomething about it calls to me. I reach out...\n\n\"Wait a moment,\" Candice warns a second too late.\n\n...and I grasp the handle without thinking. I lift it from the box and almost immediately regret my haste.\n\n\"Son of a FUCKING BITCH!!!\" I scream in agony.\n\nMy hand feels like it's on fire, as if the flesh was melting from my bones. I crumple to my knees under the force of it, my eyes tearing up. I try to force them open to see if my hand is indeed melting, but I cannot. I try to drop the thing, but my fingers curl around the hilt with reflexive spasms.\n\n\"Are you alright?\" I hear Candice question quietly as I fight to stay conscious.\n\n\"FUUUUUUUUUUCK!!!\" I scream, sure I'm about to die...\n\n...when the pain suddenly vanishes. I inhale and exhale raggedly at the unexpected relief. I squeeze my eyelids tight then open them against the tears to look at my hand. It's intact, none of my flesh melted away. The hilt has vanished. I stare at my palm and realize there's now a small tattoo there. Dead center is an intricately shaded image of the hilt.\n\n\"What the hell? Some warning would have been nice!\" I practically shout at Candice.\n\n\"I had no idea that would happen, and I did warn you to wait,\" Candice chuckles. \"Looks like there's a note inside the box, too.\"\n\nI stand, wiping the remainder of my tears away, and look inside to see the small, folded piece of paper within. I'm afraid to touch it. Candice sees my trepidation and extracts it for me. She opens the folded paper, gazing at what's on it before handing it too me.\n\n\"Command words maybe?\" she guesses. \"It's gibberish, though.\"\n\nMy newly tattooed hand is still shaking at the memory of the worst pain I've ever felt. It's a huge blessing it was short lived. I open the note and gaze upon two foreign-looking words. Candice is staring at my palm with intense curiosity.\n\n\"May I?\" she asks, gesturing to my hand as if asking to touch it.\n\nI dunno...maybe I should be more paranoid about this mildly chubby, bookwormish young woman, but I'm not getting a bad vibe from her at all. The intense curiosity written in her eyes is the most honest expression she's shown me, her grumpy demeanor a mere front. Someone that genuinely curious probably means me no harm.\n\nMy hand doesn't hurt anymore, so I shrug and reply, \"Yeah. Go for it.\"\n\nCandice stands in front of me, grasping my hand with a light, gentle touch. She traces her fingers over the tattoo, pushing lightly. I hold up the note and try to figure out the two words.\n\n\"Fascinating,\" the young woman mumbles to herself, \"I can feel the edges of it.\"\n\nThe first word is \"\u0440\u043e\u0441\u0442\u0438\".\n\n\"Pock-tun?\" I murmur under my breath.\n\nWhat is a pock-tee-backwards-en? Cassie enlightens me.\n\n\"That is a Ukrainian word. It's pronounced rosty.\"\n\nHuh. Like frosty without the \"f\", but the \"r\" is rolled.\n\n\"Rosty,\" I utter experimentally just to taste the exotic word on my lips.\n\nThere's a sudden weight in the hand Candice is examining, accompanied by a meaty \"chuunk\". I hear a weird noise from her, almost like a gagging, belching squeak. I look up.\n\n\"Oh shit!\" I curse in shocked horror.\n\nThere is a large, two-handed sword hilt in my palm, the very same one I lifted from the box moments ago. This time a blade is extended from it...straight into and through Candice's chest! One of her giant breasts is speared like a shish-kabob. She coughs blood and staggers back toward the wall, blood also flowing from the edges of her ghastly wound. She twists and falls on her side, the sword slipping from my grasp.",
        "\"Help...me,\" she pleads weakly, her voice a wet gurgle with all the blood trickling from her mouth.\n\nThe way she fell I don't have enough room to pull out the blade...it's way too big. I'm afraid if I move her it'll do more damage, possibly kill her outright, and I can't heal her with that giant chunk of metal stuck in her.\n\n\"The other word the other word,\" I panic, looking for where I dropped the note.\n\nI find the tiny slip of paper and lift it up. The second word is \"\u0432\u0456\u0434\u0441\u0442\u0443\u043f\"\n\nSay vidstup.\n\n\"Vidstup,\" I repeat Cassie's prompt aloud.\n\nThe blade disappears quite suddenly, followed by a split-second of stabbing pain in my palm that disappears as fast as it comes. I drop to my knees, my hands touching Candice's wound at both the entry and exit point. I force my swirling power inside the young woman's form, directing it to bring her body and soul back into alignment.\n\nHer wound heals almost immediately, my quintessence also replacing the blood she lost. I pant heavily with the effort, while at the same time Candice's breathing evens out. Repairing the depth and damage of the nasty wound took a toll on my reserves.\n\n\"Are you alright?\" I ask.\n\nThere's no pain in her eyes anymore, and Candice is looking up at me with that intense curiosity of hers again.\n\n\"Umm,\" Candice hums uncomfortably, her eyes looking to my hand. \"Thanks. I'm okay.\"\n\n\"Oh thank god,\" I murmur.\n\n\"Erykah?\"\n\n\"Yeah, Candice?\"\n\n\"You can take your hand off my boob now.\"\n\n\"Oh, sorry,\" I mumble, jerking my hands away from her body.\n\n\"I'm gonna fucking kill that bitch sister of mine!\" Candice practically screams.\n\nWhoa. I sense a little hostility there...wait...oh shit...Candice is Emma's sister?\n\nI offer a hand to the blood-stained woman, which she takes, and I help her to her feet. She looks at the blood on the floor and the blood soaking her clothing. I can still see a thin sliver of pale bosom-flesh through the slice in her suit.\n\n\"She ruined my favorite outfit,\" Candice grumbles, holding her arms out and surveying the damaged fabric with a huff. \"This will be a hassle to fix.\"\n\nShe could have died, and she's worried about her suit? That's why she's angry?\n\n\"You and Emma are sisters?\" I ask.\n\nCandice gives me a wry grin, saying, \"Yeah, unfortunately. I got all the brains and she got all the weird.\"\n\nWell...not all of it.\n\n\"No arguments here,\" I say instead of speaking my mind. \"So Candice? Do you know me from anywhere, or just from Emma telling you my name?\"\n\n\"Just your name, and a basic description. Short, skinny, long black hair. Describes half the wannabes that come in here, but you're no wannabe. Are you?\"\n\nI shrug, responding, \"I guess not. I don't know.\"\n\n\"No need to be modest. You're an Eternal, right?\"\n\nI consider denying it, but why?\n\n\"Yeah,\" I nod.\n\n\"I knew it!\" Candice smiles. \"I've never met one of you before. Can I ask you some questions?\"\n\n\"Uh, actually I was on my way to pick up someone, and I sort of have a cab waiting.\"\n\n\"Oh,\" Candice frowns then sighs, as if she fully expected some sort of excuse from me. \"That's okay. I should probably clean up this mess. Can't have poor Kimmy coming in here after I leave and popping an aneurysm. It looks like someone got murdered back here.\"\n\nHer frown.\n\nSomething about that frown is so familiar. Then it hits me like a ton of bricks.\n\nI go to school with this girl! She's in my PE class! Candice is the one who always sits somewhere reading a book with that frown on her face while the rest of the class plays sports. She never talks to anyone. Just reads. Normally her hair is down, and she doesn't wear glasses. She looks so different right now.\n\n\"Aren't you in my PE class?\" I ask.\n\n\"Oh yeah, I remember you now,\" Candice utters with realization. \"You're that klutzy girl that got hit in the face with a volleyball and had to go to the infirmary because of a bloody nose.\"\n\nWell shit. She saw that.\n\n\"Not one of my finer moments,\" I admit. \"How come you always get a pass during PE?\"\n\n\"I guess it wouldn't hurt to tell you,\" she considers out loud. \"I have a fake doctor's notice stating I have asthma.\"\n\n\"But...why?\"\n\n\"So I can study, duh. Why would I want to run around and chase balls when I can learn magic instead?\"\n\n\"Because it's fun?\" I shrug. \"It's a good way to blow off steam during the day.\"\n\n\"Meh. I'll pass.\"\n\nMy eyes narrow as something occurs to me.\n\nI ask, \"Then why didn't you ask for a study hall period? Why sit around a bunch of noisy kids while trying to study instead of going to the library?\"\n\n\"I just didn't! That okay with you?\" she growls.\n\n\"Only curious,\" I say, holding up my hands to forestall any more grumbling. \"Not a big deal.\"\n\nI think I have Candice figured out. She acts snarky because she figures if she pushes people away they can't reject her, or hurt her, or whatever it is she fears. She doesn't believe anyone will like the real her, but she still craves friendship and wants to be around people.\n\nI guess even mages are people too, with their own quirks and faults. Candice seems like she could use a friend. I decide I'm going to be her friend, but I don't have much time at the moment. Chris is probably getting irritated at the wait.\n\nI ask, \"Hey, you want to have lunch with me and some of my friends tomorrow at school?\"\n\n\"Why?\" she asks with that frown of hers again.\n\n\"Well, I figure buying you lunch is the least I can do after accidentally stabbing you. Did you have other plans?\"\n\n\"No.\"\n\n\"Then lunch it is. I'll see you in the Student Union cafeteria tomorrow,\" I declare with a finality Candice doesn't dispute.\n\n* * * * * *\n\nAfter my exceedingly strange encounter at The Third Eye I'm no closer to finding out Emma and Graves' underlying motivations. Plus, now I have more questions. Why did Emma want me to have that obviously magical sword?\n\nI have to admit it's pretty bad ass, though. I got my first tattoo and my first claymore all in the same day. I'm staring at the inked image on my palm as the cab pulls up to Harmony's skyscraper. My brother is waiting on the sidewalk.\n\nChris hops in the cab and I greet him with, \"Sup bruh?\"\n\n\"Nada sis,\" he grins with that cheesy-ass grin I know all too well.\n\nI laugh a little at the fact that my brother's cheesy-ass grin looks an awful lot like my cheesy-ass grin. I can also tell he got laid last night, and it must have been damn good.\n\nThe cabbie interrupts by asking, \"Want I should take you both to Bay Ridge now?\"\n\n\"Yeah,\" I nod.\n\n\"Yeah, back to school I guess,\" Chris agrees.\n\n\"Have a good night?\" I ask, waggling my eyebrows at him.\n\n\"Yup,\" my brother replies. \"You?\"\n\n\"Oh yeah.\"\n\nWe fall silent, both of us knowing there's a lot we can't discuss in front of this cabbie. Luckily I have other ways of communicating. I fire up the old brain-waves and send my thoughts to Chris.\n\n\"Did you get your dick sucked?\"\n\nI can't help but giggle at my own scandalous question and Chris' shocked reaction. It's kind of pushing the boundaries of good taste seeing as how the question was posed to my twin brother, but...you know. I'm a scandalous kind of girl.\n\n\"Jesus, Erykah! I'm gonna need so much therapy now.\"\n\nI laugh again, and the cabbie looks at me kind of funny in the mirror. I pretend to be watching something on my smartphone to divert any suspicions I might be loony.\n\nI broadcast, \"Okay. I'll steer clear of the tough questions then.\"\n\nMy brother face-palms and tells me, \"Thanks.\"\n\nI just can't help myself.\n\n\"So...did you get your dick sucked?\"\n\n\"Oh, come on!\"\n\nI laugh uproariously at my brother's discomfort and decide I've pushed the joke far enough.\n\n\"Alright, I promise I'll stop asking for the gory details. Sorry.\"\n\n\"Thank you,\" Chris projects back with an eye roll.\n\n\"I connected with my first Faithful last night,\" I reveal in a more serious vein.\n\n\"That's pretty cool. You're lucky. It took a while for me to find my first.\"\n\nI give a happy sigh as I tell my brother, \"Yeah...we connected several times last night. Then once more this morning.\"\n\nMy brother's voice is dripping with sarcasm when he asks, \"Oh yeah? Did you get your dick sucked?\"\n\n\"No, but he did,\" I giggle.\n\nChristopher gives me a reproachful expression and shakes his head.\n\n\"What? You brought it up this time!\"\n\n* * * * * *\n\nWe arrive at the sizable parking lot of the Academy. I direct the taxi driver to drop us off near where I see my father standing. Danni is there also, as well as Chiaki. I notice Chris is suddenly wearing an irrepressible grin. I take care of getting the cabbie payed and tipped, the man thanking me before he drives away. Danni is wearing dark sunglasses, a slight frown on her lips. I slip over to her, giving her a hug and a quick kiss.\n\n\"Everything okay?\" I ask.\n\n\"Hungover,\" she grunts.\n\n\"Oh...I'm sorry, hun. That sucks.\"\n\nDanni shrugs, saying, \"It'll pass. What I get for going overboard.\"\n\nI guess she ended up drinking a lot more than me. She did stay at the bar longer, after all. I kiss her forehead then gently stroke her hair, Danni leaning into my palm with a slight smile.\n\nI tell her, \"You should be napping.\"\n\n\"And miss your surprise?\" she grins.\n\n\"Speaking of which,\" I begin, turning to my father. \"What's this about, and why are all of you out here?\"\n\nDad explains, \"I thought the others would like to see your face when I gave you this. Here, catch.\"\n\nHe tosses a bulky black and silver key toward me. I manage to snatch it from mid-air, opening my hand to stare at it. My eyes widen when I see the Toyota symbol emblazoned on it's plastic base.\n\nNo way...\n\nI look up, realizing one of the vehicles parked next to father's caddy is a big, gorgeous Toyota 4Runner. It's a dark grey color, and though it looks like a slightly older model it's very pristine.\n\n\"Oh...my...god!\" I mutter, my jaw dropping open.\n\n\"Happy 18th birthday,\" my father tells me with a gigantic smile on his face. \"I know it's a little late, but it took a while to find something I thought suited you. You like?\"\n\n\"It's perfect!\" I blurt out happily, my smile so big it threatens to split my face in half.\n\nWow. My very own vehicle! I don't think this day could get any better!\n\n* * * * * *\n\nELSEWHERE...\n\nIn a place beyond Erykah's sight or experience...\n\nThe night is dark. It's the kind of deep and silent black from which nightmares emerge. The landscape is littered with row upon row of headstones, all of them etched with the names of those passed. The cemetery is quiet save for the chirping of crickets and the hooting of a single owl.\n\nThe most important gravestone isn't out of the ordinary. It doesn't stand out in any special way, except for the yellowed grass around it. The caretaker had been baffled at the patchy, dying vegetation. He even wondered if someone had vandalized the area with grass-killing chemicals of some sort.\n\nAnother oddity was the frequent dead squirrel or bird he'd find within this zone of yellow. It wasn't strange to periodically find small, dead animals here or there within the grounds, but he had cleaned up at least a dozen in this one area in the past two weeks. Perhaps it was time to call in an expert employed by the city to find out if the dirt had been poisoned somehow.\n\nSuch a test would prove inconclusive, though.\n\nThere is a flapping of wings as the solitary owl alights upon the headstone. It croaks it's last breath and plummets to the ground, unceremoniously dying. The grass, insects within the surrounding earth, squirrels, birds, and even a stray cat had sacrificed their meager life energies to empower the forces at work here.\n\nThe owl provides the last little scrap needed for the magic to come to fruition.\n\nThere is a low, almost imperceptible rumbling. The dirt begins to churn as something emerges from a place it has no right to. A hand pokes upward into the night, then another as a woman claws her way from her grave. Dirt-streaked and wearing her funeral attire, she climbs free from her earthy prison.\n\nShe coughs then inhales deeply, looking to her own gravestone with a morbid curiosity.\n\nIt reads: \"Guinivere Tempest Gray / 1972 -- 2016 / Dearest mother, your spirit will not be forgotten. I will see you again.\"\n\nGinny huffs in amusement at the unknowingly prophetic words her daughter had chosen for her grave. She reaches up to her chest, her fingers lightly grasping the ornate brooch dangling from the end of the necklace around her neck.\n\nShe rises into the air, flying on wings of the mystical energies at her command.\n\n\"Mother's coming, my darlings,\" Ginny utters quietly as she vanishes up and into the darkened skies. "
    ],
    "authorname": "RubyStorm",
    "tags": [
        "magic",
        "supernatural",
        "mage",
        "angel",
        "male virgin",
        "drinking",
        "his first time",
        "swallow",
        "creampie eating",
        "bisexual"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-fallen-ch-04-1"
}