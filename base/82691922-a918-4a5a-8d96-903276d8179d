{
    "title": "Claiming Bella Ch. 03",
    "pages": [
        "While Bella went into her room to change and pack, Aidan wandered around her home, getting a sense of her style and personality. She definitely wasn't a frou-frou girl. No pink and lace for her. Bella had decorated her little cottage in what could only be described as country chic; muted earth tone furniture, oversized and comfortable, classical tables with cabriolet legs in the rich colors of green, gold and dark red. Her kitchen was very modern, with granite countertops, antique white beadboard cabinets and stainless steel appliances. She did seem to have a thing for chickens, though; they graced rugs and dishes, and there were several figurines prominently displayed. Overall, Aidan liked what he saw, just as he liked Bella.\n\nBella came out of her bedroom as Aidan was walking back into the living space. She had dressed in jeans tucked into black knee high suede boots, an emerald green long-sleeved shirt that came off one shoulder and showed off the black strap of her bra and long dangly earrings. She carried a thick, knee length knitted sweater coat in one hand and an oversized weekender bag in the other. \n\nAidan whistled. \"I didn't think you could look any better than you do naked, but you look hot, baby girl,\" he told her. He walked over and took her bag from her.\n\nBella smiled, embracing the compliment, a rarity for her. \"Thank you. After all the attention, I feel pretty.\"\n\n\"You ready?\" Aidan asked. Bella nodded and grabbed her purse from the table where she'd sat it upon entering the house. She handed Aidan her keys so he could lock up behind them. With a hand on the small of her back, he ushered her to the SUV. Placing her bag in the back, he again hoisted her up into the front seat.\n\n\"I could get used to that,\" she told him with a little laugh.\n\n\"Me, too,\" Aidan told her before stepping between her legs. He placed his hands on her thighs and just stood there. Bella felt a great tenderness for this man at this moment that went beyond lust. He had fucked her in ways she had never dreamed of, yes, but beyond that he had made her feel beautiful, cherished and had assaulted a man in defense of her. Placing her hands on his face, she leaned in and tenderly kissed his lips. She places little sipping kisses all of over his lips, from one corner to the next before running her tongue along the seam of his mouth. When he opened for her, Bella tenderly deepened the kiss, sucking on his tongue and licking the entire inside of his mouth, never once hurrying.\n\nAidan moaned and squeezed her thighs. Bella pulled back and Aidan leaned his forehead against hers, panting. \"Baby girl, you are going to kill me. I've only known you one day and I think I'm falling in love with you.\"\n\n\"You don't have to say that, Aidan.\"\n\n\"I wouldn't just say that, Bell. I think you are so special. I can't wait to get on with this weekend. We are going to prove to you how desirable you are. You get buckled up. We have a date with Eli,\" and with that he kissed her on the nose he shut her door. \n\nThey drove to the restaurant in comfortable silence, Bella having changed the radio to something more palatable for her. Once they reached Jakes, Aidan had the SUV valeted and they walked into the restaurant. Eli, having arrived first, stood when he spotted them.\n\n\"Princess, you look beautiful,\" he told her as he leaned in to kiss her on the mouth.\n\n\"Thanks, Eli,\" he told her as he held out her seat for her. The men took up positions on either side of her. She stopped for a moment to think of how their situation would look to people. It was obvious from their body language, to anyone paying attention, that she was intimate with both men. After a moment's quiet deliberation, she decided she didn't give a whit about what anyone thought. Hell, this was Portland, weird and unusual were the norm!\n\nAfter looking over the menu for several moments, Bella turned to Eli and offered, \"Why don't you order for me?\"\n\nA look of lust instantly filled his chocolate brown eyes. \"Do you have any idea how much your freely given submission turns me on?\"\n\nSlipping her hand up his thigh to cup his now hard cock, Bella coyly told him, \"I have an idea.\"\n\nWhen the waiter approached, Bella kept her hand where it was in Eli's lap. Aidan ordered first, steak and lobster with a loaded baked potato. Eli, heavy lidded from arousal, ordered Bella the penne pasta with lobster and himself the same as Eli. He gave out a slight groan when Bella squeezed his cock under the table and the waiter smirked at Bella, clearly aware to what was going on.\n\nWhen the waiter left to place their order, Aidan leaned over to whisper in Bella's ear. \"Wicked girl.\"\n\nBella smiled, feeling a new confidence in herself as a sensual woman. \"I'm learning.\" With a final squeeze, Bella removed her hand from Eli and picked up her glass of wine, taking a sip. \n\n\"You are so going to pay for that, little girl,\" Eli promised her. Their meal progressed in companionable conversation about mundane things. It seemed, in a small way, that they had known each other for a much greater length of time than they actually had. Bella told them of starting her own business a few years previous.\n\n\"Honestly, if it hadn't been for my parents I never would have been able to. They helped me. I've always loved flowers and plants. Even though my father is Italian, my parents were hippies to the core, still are. I grew up on a sort of commune on the outskirts of town. I loved helping in the garden, getting my hands dirty and creating life. After a while, my parents started a co-op grocery store. It was very successful. It's a chain of stores through Portland now, but they are still hippies at heart. They helped me with the start-up capital. I was extremely lucky to find the storefront I have. It is a great place, lots of foot traffic. I was able to pay them back in the first year.\"\n\n\"Hippies, huh?\" Aidan asked. \"I guess that explains you not freaking out over the thought of having two men; especially two men who want each other as well as you. All that free love among hippies?\"\n\nBella laughed. \"That's probably a big part of it, yes. My parents had a pretty open marriage when we were growing up. They were swingers and had lovers. There was no shame or taboo regarding sex in our family. Of course, my sisters and I never saw anything inappropriate, our parents weren't pervs, but we were aware. My parents may have been open about sex, but they only loved each other. Still do. They are head over heels in love after all these years.\"\n\n\"Sisters? How many?\" Eli asked.\n\n\"Two, one older, one younger. Both are married with kids, pretty happily I might add. I'm an aunt to 5 nieces. Girls seem to run in our family.\"\n\n\"Well, I for one am grateful for your upbringing. You're lucky,\" Eli told her, a look of sadness in his eyes.\n\n\"I hope you don't mind, but Aidan told me you don't speak to your family. I'm very sorry for that. I wish everyone were accepted for who they were. The world would be a better place.\"\n\nBefore Eli could reply, his phone beeped, signaling a text message. \"That's Lina. She can get us in at 1:30. That's only 20 minutes from now so we'd better go.\"\n\n\"Who is Lina?\" Bella asked.\n\n\"She's the owner of our favorite little kink boutique. She's very exclusive and only takes clients by appointment.\"\n\n\"Kink boutique?\"\n\n\"Yes, kink boutique. You know, bustiers, leather, fishnets, etc.\"\n\n\"Oh. Will she have anything in my size?\"\n\n\"Of course. You'll understand when you see her.\"\n\nAidan flagged down the waiter and took care of the bill while Aidan helped Bella into her sweater coat. \n\n\"Did you drive?\" Aidan asked Eli. \n\n\"No, I walked. We can take your monstrosity.\"\n\nBella snickered at the apt description of his giant SUV. Upon hearing it, Aidan smacked her ass. Bella gave out a little squeak and Aidan asked her, \"What is so funny?\"\n\n\"Absolutely nothing, Aidan. Whatever could you mean?\" She asked, innocently batting her eyes at him.\n\n\"You are incorrigible,\" he told her. \n\nEli took her elbow and guided her out of the restaurant, with Aidan close behind. They all climbed in the car, Bella taking the middle, sandwiched between them and they drove the short distance to Northwest Portland. Arriving in the trendy 21st Ave shopping district, Aidan had to circle the block that their destination was in several times before finding a spot large enough for his SUV. \n\nEli helped Bella out of the SUV and they walked part way up the block. When Aidan stopped in front of a stationary store, she looked up at him in confusion.\n\n\"Not there,\" he said, \"there.\" Aidan pointed to a set of stairs she hadn't noticed that led down to a basement storefront. There was a small sign on the door that said 'Lina' in small, neat script.\n\nWalking down the steps, Aidan rang a bell. The person that answered the summons took Bella by surprise. 'Lina' was clearly a drag queen. A very large drag queen whom Bella adored instantly.\n\n\"Hello, boys,\" Lina said with a warm smile. \"Who is this gorgeous little creature you've brought me?\" she asked ask she ushered them in. \n\n\"Lina, please meet Bella. Bella, Lina.\" Eli introduced them. Bella took a moment to take in Lina, while Eli made introductions. She was a very large 'woman', probably close to six feet and 300 pounds. She wore a red kimono and her flaming red hair was piled a couple of feet up on her head. She certainly made an impression, but as much for her clearly warm attitude as for her size and flamboyance.\n\n\"Come on in, you sweet little thing,\" Lina welcomed and taking her hand pulled her inside. The shop was as over the top as Lina was. Plush velvet sofas and chairs were scattered about. The walls were lined with mirrors, giving the space an appearance of being larger than it was. It was lit by several Chinese lanterns and pendent lighting, giving an overall intimate feel to the shop. At the back were several doors, some of which she assumed were dressing areas.\n\n\"If you call me little one more time, I just might kiss you,\" Bella told Lina. Lina laughed, a laugh as big and hearty as she was. \n\nLina turned to Eli and Aidan and told them, \"Oh boys, this one is a keeper. Please come in, have a seat. Can I get you anything? Coffee, tea or wine?\"\n\n\"No thanks, Lina, we just came from lunch,\" Aidan informed her. He and Eli took a seat on one of the burgundy velvet sofas.\n\n\"I pulled some things for you, then. You were right about her measurements. Good eye, Eli. Bella,\" she said turning to her, \"come with me and we will try some things on you.\"\n\n\"And Bella,\" Aidan told her. \"Don't concern yourself with price, this is our treat. And we'll decide how much and what we buy you, understand?\"\n\nBella lowered her eyes and nodded, secretly pleased. \"I'm not one to look a gift horse in the mouth. Whatever you'd like.\" With that Lina led her to the back to try on outfits. \n\nEli turned to Aidan. \"Do you see what a natural she is? She was meant to be a sub. Every time she unknowingly does something like that, it's such a fucking turn on.\"\n\n\"Turns me on, too,\" Aidan said.\n\n\"I can see,\" Eli said with a pointed look at Aidan's crotch, where a prominent bulge was displayed against his jeans. \n\n\"Hmm...why don't you do more than 'see' it?\" Aidan told him, a smoldering look of desire entering his eyes.\n\nEli reached over and grabbed a fistful of Aidan's hair, jerking his head back before he slammed his mouth down on his with violent passion. The kiss was far from gentle, a hard clash of teeth and tongue. Usually, Aidan was the more dominant of the two, though both were tops, but today Eli was the aggressor. Eli pulled slightly back only to nip sharply at Aidan's bottom lip. Aidan growled and reached for Eli, only to have Eli slap his hands away.\n\n\"No,\" Eli told him. \"Just take it.\" He went back to fiercely kissing Aidan and reached down a hand to cup Aidan's straining cock. Eli moaned. \"Fuck you're hard,\" he praised, pulling back again. Eli directed Aidan to turn slightly so he could lean back into the corner of the sofa. When he did, Eli unsnapped and unzipped his jeans. \"No underwear, good.\" Reaching inside his jeans, he pulled Aidan's cock out.\n\n\"You're usually not this aggressive. She's really getting to you, too, isn't she?\"\n\n\"Yes, she is,\" Eli told him, giving his cock a couple of light pumps, making Aidan groan.\n\n\"Don't tease,\" Aidan ordered.\n\n\"Don't order,\" Eli retorted and leaned down to kiss Aidan again. He was leaned over Aidan, one hand braced on the back of the sofa, one hand pumping Aidan's cock. Aidan had both his hands pressed into the sofa at his sides so he wouldn't reach for Eli. In their present position, it wasn't much effort at all for Eli to release Aidan's mouth and lean down to suck the head of his cock into mouth. Aidan's hips came up off the sofa with a loud groan.\n\n\"Fuck, Eli,\" he muttered. Eli hummed his acknowledgement around Aidan's cock. Eli sucked and licked the head of his cock, driving Aidan crazy with the need for Eli to take the whole thing down his throat. Aidan curled his fingers into the fabric of the sofa and grit his teeth. When Eli finally stopped torturing Aidan and took his whole cock in his mouth, Aidan gave a little groan of ecstasy. Eli gave several strong pulls on Aidan's cock before lifting his head slightly to look Aidan in the eyes. Eli's eyes burned with fire.\n\n\"I can taste her on you,\" he told Aidan.\n\n\"Yes,\" Aidan panted, resisting the urge to shove Eli's head back down on his straining cock.\n\n\"How,\" Eli demanded, bringing his hand up to stroke Aidan, giving a little twist with each downstroke.\n\n\"I ripped her top off, pushed her over the back of the couch and fucked her tight little cunt from behind.\"\n\n\"Fuck,\" Eli groaned before again lowering his head and sucking Aidan with a new fierceness. Aidan groaned as his hips bucked from the intensity of his lover. He closed his eyes and threw his head back, reveling in this new aggressive side of Eli and he found himself praying is stemmed from the addition of Bella. Aidan wanted to keep her and needed Eli to feel the same way. Eli continued with strong pulls on Aidan's cock for several moments before they were interrupted by the clearing of a throat.\n\n\"Well, if that isn't one of the sexiest fucking things I've ever seen, I don't know what is,\" Lina's gruff voice announced. Both men lifted and turned their heads to see Lina and Bella standing not ten feet from them. They both quickly took in the outfit Bella was wearing. She stood before them in an emerald green satin bustier that laced up the front. Her breasts were pushed so high they were in danger of bursting free. She wore a matching tiny g-string with a row of crystals running down the seam of her slit and thigh high black stockings with little bows on the top. \n\nWhen Eli looked up into Bella's eyes what he saw there took his breath away. Rather than disgust or rejection he saw a desire so intense it surprised him. As a result of her intense arousal, Bella's pupils were so large there was virtually no color left to her eyes. He could see her chest rising and falling as she panted for air. In that moment, Eli was almost sure he loved her.\n\n\"Lina, can we have the big room?\" Eli asked, never taking his eyes from Bella's.\n\n\"You buying?\" \n\n\"Oh, we are definitely buying,\" he responded.\n\n\"Then have at it, honey.\" Turning to Bella she said,\" Ooh, little girl, I so envy you right now. I'll just head back to my office,\" Lina said to no one in particular and turned and headed back through her office door.\n\nEli stood and stalked to Bella. She stood very still, feeling like prey. He simply grabbed her hand and began dragging her toward the back of the shop where several doors were located, leaving Aidan to scramble off the sofa and tuck himself back into his jeans before he followed. Aidan would have been amused at the new attitude of Eli's if he hadn't been so turned on. Eli opened one of the doors and dragged Bella inside, Aidan hot on his heels. When Aidan closed the door behind them, Eli pushed Bella roughly up against the wall.\n\nBella quickly darted her gaze around the room, taking in her surroundings. They were clearly in a large dressing room. It housed the ubiquitous velvet sofa and matching chair. There were several mirrors and a table with a large chest on it. Returning her eyes to Eli, she drew in a quick breath at the expression on his face. Desire so raw it was nearly primal, feral, had her belly clench with fierce desire and a rush of fluid soaked her new panties. \n\n\"You are in so much trouble, little girl,\" he told her. \"I have never seen a woman look fucking sexier than you do right now. Aidan, give me your belt.\" Bella's eyes widened. \"Oh, not this time, princess. I have another use for it.\" When Aidan handed him the belt, Eli wrapped it around Bella's hands, binding her, before lifting them to a hook she hadn't noticed above her head. Eli stepped back, admiring the sight.\n\n\"Fuck, she looks good,\" Aidan praised before removing his shirt. Bella and Eli both admired the smooth muscles of his chest and abdomen. He looked beyond sexy, standing there shirtless with his pants undone; a girl's, or boy's, wet dream.\n\n\"Oh, I'm not through with you yet, Aidan,\" Eli told him, grabbing the back of his head and bringing his mouth to Aidan's for another fierce kiss. Bella, trapped, could only watch the two of them go at each other with a hot ferocity. She was awed at how differently they treated each other, as opposed to how they were with her. Bella felt another rush of fluid so strong it ran down her thigh, having completely saturated her panties. She watched as Eli and Aidan grappled with each other, both seemingly looking for the upper hand. Aidan grabbed the bottom of Eli's t-shirt and ripped it off over his head. He brought his mouth back to Eli's before running his hands all over Eli's upper body. Eli moaned into Aidan's mouth loud enough for Bella to hear, causing Bella to give a little moan of her own. Hearing this, the men broke apart and turned to Bella.\n\n\"No, don't stop,\" she encouraged them.\n\n\"No, but we can't ignore our baby girl,\" Aidan assured her. Bella felt very exposed, hanging there as she was. The position of her arms over her head pressed her breasts high and together; dangerously close to spilling over the top of her bustier. Aidan moved to stand in front of her and with very little effort freed her breasts from their confinement. Bella gasped as she felt the cool air hit her already hard nipples, making them almost painfully hard, poking straight out from her full breasts. \"Look at that, Eli. How beautiful is she?\"\n\n\"Very,\" Eli replied, coming to stand next to Aidan. \"You know, I don't think we've paid nearly enough attention to the beauties. Let's remedy that.\" Following word with action, Eli palmed her breast and brought his mouth to her nipple. Bella stared down as Eli took her nipple between his teeth and bit down slightly. That small amount of pain sent bolts of lightning straight to her cunt. She groaned in the back of her throat, causing the corners of Eli's mouth to lift in a self-satisfied smile. Looking up into her eyes, he released her nipple and asked her, \"Do you like that princess?\"\n\n\"God, yes,\" Bella replied. \"More, please.\" Eli just smiled before engulfing her whole nipple in his mouth. Bella threw her head back, lost in the sensation of his tongue swirling and flicking her nipple. \n\n\"No, baby girl, watch,\" Aidan said as her came up to stand next to Eli. Bella brought her head upright to see Aidan run his hand down Eli's naked back in a surprisingly tender caress. That action sent her arousal level spiking and she let out a small whimper. Bella watched Eli lick, suck and nip at her nipples for several minutes before Aidan leaned an arm on the wall next to her and used his other hand to collar her throat. Between her bound hands, his hand on her throat and just the sheer magnitude of being surrounded by these two men, Bella felt completely controlled and it turned her on like nothing she had ever experienced before. \"Look at me,\" Aidan commanded softly.",
        "Bella turned her head to face Aidan. \"It highly likely that Lina is watching us right now,\" he told her, gesturing to the corner of the ceiling with his chin. Bella looked and saw a camera mounted there. \"Does that bother you?\"\n\n\"Not really,\" she said in a low voice, husky with desire. \"She's paying far more attention to you two than me.\" \n\nWith a little laugh he lowered his face to hers and Bella opened her mouth to receive his kiss. He thrust his tongue into her mouth and Bella eagerly sucked on it. They kissed for several long moments. Meanwhile, Eli had moved on to her other breast and the dueling sensations that her men were creating had Bella moaning into Aidan's mouth. Eli lifted his head from her breast to watch the two of them devouring each other's mouths.\n\n\"Fuck, you two are something to watch. My turn,\" he said. Aidan removed his hand from Bella's throat to give Eli full access but stayed where he was to watch. Eli started with Bella's neck, kissing a licking until she was squirming and moaning. When he clamped his teeth down, she gave a cry of pleasure. Aidan leaned in to nibble her ear as Eli claimed her mouth. \n\nSoon, Aidan moved from her to Eli, moving behind him to rub along his back. Leaning in, he tongued the side of Eli's neck, moving up to lick and suck his earlobe. Eli moaned into Bella's mouth, his hips jerking against her. Suddenly, Eli's mouth was gone and Bella opened her eyes to see why. The reason had her moaning in desire. Using a hand in his hair, Aidan had pulled Eli's head back to slam his mouth down on his. Once again, they were dueling, each looking for the upper hand, kissing with a ferocity that was fascinating to watch. With his other hand, Aidan unbuttoned Eli's pants and pulled his cock out. He was stroking it with long, smooth strokes in drastic contrast to how they were devouring each other's mouths.\n\nBella kept completely still, not wanting to distract the men. Watching them with each other was the most arousing thing she had ever witnessed. It was clear they loved each other and just as clear how much they desired each other. Bella felt her heart clench a little bit in wonder that they would want to include her in a dynamic that seemed to work so well for them. She gasped, realizing that she had already fallen in love with these men. At her gasp, Aidan broke the kiss and looked at her.\n\n\"Are you feeling ignored, baby girl?\" he asked her. Bella shook her head, tears gathering in her eyes. \"No? \"\n\n\"No,\" she said her voice cracking a little. She cleared her throat. \"You two are beautiful together.\"\n\n\"Shit,\" Eli said, \"I think you just might be the most amazing woman I've ever met.\" Turning his head to Aidan, he said, \"What do you say we take this to the sofa and fuck this amazing woman?\"\n\n\"No!\" Bella said. \"I want to see you two fuck each other,\" she told them, then immediately blushing.\n\nEli chuckled as he lowered her hands and undid the belt binding them. \"It is adorable that you can still blush after all we've done together, princess. And we can find a way to do it all, don't worry.\" Together, the men herded Bella to the large velvet sofa. \"Undress us, baby.\"\n\nBella licked her lips in anticipation, eyeing the men standing side by side in front of her. Both were shirtless, their muscled chest gleaming with sweat and Bella ran a hand down each of them simultaneously. Aidan was slightly taller and more muscular than Eli but both men had gorgeous bodies. Stepping to the side to stand directly in front of Eli, Bella ran her fingers along his exposed cock so lightly that the touch was barely there. Eli hummed with pleasure. Bella dropped to her knees and Eli kicked his shoes off. She shimmied his jeans down his legs and he stepped out of them. Bella pulled off his socks and ran her hands up his legs all the way to his hips. Stopping there she looked up into his eyes questioningly. When Eli nodded she leaned forward and, in one smooth move, swallowed Eli's entire cock. Eli groaned hard, fisting Bella's hair in both his hands. Bella gave several hard sucks before pulling away and scooting over to Aidan.\n\n\"Help me?\" Bella asked Eli with a sexy little smirk on her face.\n\n\"Of course, princess. My pleasure.\"\n\nEli dropped next to Bella and together they removed Aidan's shoes, socks and jeans. When Aidan was standing before them completely nude, his large cock jutting out toward them, Bella leaned in and licked a path up and down his cock, ending by sucking the precum off the tip. She leaned back and licked her lips.\n\n\"Yum,\" she told Aidan, looking up to meet his eyes. When Eli brought his mouth down on hers, thrusting his tongue inside, Aidan moaned.\n\n\"You're right,\" Eli stated, \"yum.\"\n\nAidan hissed. \"Fuck, you two are going to kill me.\" \n\nEli grabbed Aidan's cock and gave it several pumps before guiding it to Bella's mouth. She eagerly sucked the head into her mouth, drawing his cock in until her mouth met Eli's hand. She sucked back and forth several times before Eli grabbed her hair and pulled her off, kissing her again. When he guided her mouth back it was to the side of Aidan's cock this time, allowing Eli access to the other. Together, they licked, sucked and nipped Aidan's cock, pausing occasionally to suck on each other's tongues, until Aidan commanded they stop. \n\nStepping back, he told them, \"I'm ready to sink my cock deep into one of you. Which is it going to be?\"\n\nSitting back on her heels, Bella looked up at Aidan and said, \"I vote Eli and I want to watch.\"\n\nEli stood, helping Bella to her feet. \"Fine by me,\" he said. \"Take your panties off, sit on the edge of the sofa and scoot your hot little as to the edge.\" Bella hurried to comply. \"Now bring your heels up to the couch and place them next to your ass.\" Bella did as she was told, effectively spreading herself wide for both men to see. \"Goddamn you're wet. That is so fucking hot, baby.\"\n\nAidan walked over to the chest she had previously noticed on the side table. Lifting the lid, he pulled out a single use sachet of lube and a condom before making his way to the sofa. Placing a hand on Eli's shoulder, he pushed, telling him, \"Down. I want to see you eating her cunt while I fuck you.\" Eli obeyed, kneeling between Bella's legs and gripping her ass cheeks, serving her cunt up for his pleasure. He turned his head to watch Aidan roll the condom onto his rigid cock and shivered when Aidan unsnapped the cap on the lube. Aidan knelt behind Eli and poured a generous amount of lube on Eli's ass before capping the bottle and setting it aside. \n\nUsing one finger, Aidan rubbed up and down the crack of Eli's ass, smearing the lube around. Then, palming both cheeks, Aidan inserted both thumbs into Eli's hole causing Eli to let out a loud groan and arch his back seeking deeper penetration. \"You like that, baby?\" Aidan asked Eli. \n\n\"Fuck, yes, you know I do,\" Eli answered.\n\n\"Good, now eat Bella's cunt. We don't want her to feel left out.\" Eli immediately set about eating Bella with a fervor she'd never experienced before. He had her moaning in seconds, her eyes closed and head thrown back against the couch. Meanwhile, Aidan was using his thumbs to stretch Eli's ass to accommodate his large cock, causing Eli to moan into Bella's cunt. \"Baby girl, look at me,\" Aidan ordered Bella. Forcing her heavy lids open and her head up, Bella did as Aidan commanded. \"I'm going to fuck Eli now and I want you to watch the entire time. Don't close your eyes, even when you come, understand?\"\n\n\"Yes, Aidan, I understand.\"\n\nAidan grasped his cock and gave it several quick jerks, rubbing the lube along its length before bringing the tip to rest at Eli's puckered hole. One hand on his cock and one on Eli's hip for leverage, Aidan slowly inserted his cock into Eli's ass and in one smooth motion had himself fully buried. Eli gave a harsh groan and sucked hard on Bella's clit, making her cry out.\n\n\"Fuck, fuck, so good,\" Bella whined, not knowing if she was referring to Eli's tongue on her cunt or Aidan's cock in Eli's ass. Both were equally arousing. Aidan pulled slowly out of Eli's hole before slamming back in. He repeated this several times, causing Eli to grunt at each stroke. \"God that is hot,\" Bella told Aidan, looking him straight in the eye. She watched as he reached one hand underneath Eli, and from the motion of his arm assumed he was jacking his cock while fucking him in the ass. Bella moaned from the sight as well as from Eli's tongue stabbing deep into her cunt in time with Aidan's strokes into his ass.\n\n\"Play with your tits, baby girl,\" Aidan instructed her. Bella complied, reaching up and twisting and pulling her nipples, roughly pinching them before flicking them. She had always enjoyed rough nipple play and now was no exception. She felt her nipples get tighter as did her cunt, warning her she was very close to coming.\n\n\"A-A-Aidan!\" she stuttered, \"I'm going to c-come. Please let me come!\"\n\n\"Yes, baby, go ahead. Come all over Eli's face!\" \n\nHaving been granted permission, Bella's body arched up, pressing her cunt hard against Eli's face and with on final hard suck on her clit, she came, biting her bottom lip hard to keep from crying out, never taking her eyes off of Aidan's. Her orgasm seemed to go on forever, Eli not letting up on his licking and sucking for even one second until she could take no more. He only stopped when she begged. Bella flopped limply back on the sofa, her gaze still locked with Aidan's.\n\n\"Fuck, that was pretty,\" he told her. Grabbing Eli by the hair, Aidan lifted him to a kneeling position, never stopping his strokes into Eli's ass. Turning Eli's head, Aidan told him, \"I want to taste her.\" Eli tilted his head so that he could lock mouths with Aidan. Aidan thrust his tongue into Eli's mouth before pulling back to lick all of Bella's juices off his face. \"Jesus, that's good. I could taste that forever.\"\n\n\"Can I join?\" Bella asked Aidan.\n\n\"Yes!\" The answer came from Eli. With his encouragement, she dropped to her knees on the floor in front of him. As Aidan continued to pound into Eli's ass, Bella took over the stroking of his cock while licking alternate nipples. Eli groaned at the attention of both of his skillful lovers. Encouraged by his heated groans, Bella kissed her way down his chest and abdomen before sucking his cock into her mouth. She moaned at the mouthful of precum she got, aroused by the taste. \"Fuck, I'm going to come soon,\" Eli told them both. \"You're hitting the spot, Ade. Fuck me harder!\"\n\n\"Ok, baby,\" Aidan replied, thrusting harder. \"Like that?\" Eli groaned, thrusting back against Aidan's cock. \"Yeah, you like that don't you, my cock in your ass? Me too,\" Aidan grunted.\n\nBella, bracing her hands on Eli's hips to control the force of Aidan's thrusts, began sucking hard and fast, pushing Eli over the edge. With a hoarse shout, Eli shot down Bella's throat. She swallowed repeatedly, trying to keep up with the amount of semen being pumped into her. With one final suck to gather the remnants of his semen, Bella pulled off Eli's cock with a pop.\n\n\"Bella, baby girl, I'm going to need you to move,\" Aidan informed her. Bella sat back up on the couch and Aidan pushed Eli forward until Eli had to brace his hands on the couch on either side of Bella's thighs, placing him face to face with her. Bella used the position to grab Eli's face and plunge her tongue into his mouth, kissing him fiercely. At the same time, Aidan reached up and grabbed Eli's shoulder for leverage as he began to pound furiously into Eli's ass, clearly on the verge of orgasm himself. With each powerful thrust, Eli grunted into Bella's mouth, causing her to moan. After a short time, Aidan stiffened and came with a cry of \"Fuck!\". Exhausted, he leaned over to rest his head on Eli's back.\n\nBella sat forward and rubbed both men's hair out of their faces. \"Thank you,\" she panted. \"That was amazing,\" she told them before falling back onto the sofa, herself exhausted. They stayed that way for long minutes while gathering their strength. Aidan was the first to move, pulling out of Eli to stand and dispose of the condom. Eli rolled over to sit on the floor and lean back against the sofa, pulling Bella's leg over his shoulder so he could stroke it.\n\n\"Lina,\" Aidan said, looking up into the camera, \"can you please put Bella's clothing in the bathroom so she can freshen up and change?\" Turning, he told Bella, \"You can bet that perv was watching.\" But he said it with a warm smile that let Bella know he didn't really mind and that he had a great deal of affection for Lina.\n\n\"Well, I'd watch you too if I wasn't lucky enough to be the one who was actually enjoying you. Can't blame her.\"\n\nAidan walked over and reached a hand down to Eli. With one last stroke, Eli put Bella's leg off his shoulder and, taking Aidan's hand, stood up. Eli reached up his free hand and pulled Adrian in and kissed him gently on the mouth.\n\n\"I love you,\" he told Aidan.\n\n\"I love you,\" Aidan responded in kind.\n\nBella had a moment of panic, feeling like an intruder, a third wheel, until Eli reached his hand back for her. She took his hand and he pulled her up and sandwiched her between the two men. They all three embraced for a long moment, the men resting their chins on her head. She felt warm, secure and cherished between them. In that moment, Bella realized she was truly in love with both of these men already. Not just because of the way they treated her, but because of the way they treated each other.\n\n\"Baby girl, you should probably go get dressed. We've taken up enough of Lina's time,\" Aidan said, pulling back.\n\nBella snorted, \"I seriously doubt she minded the entertainment.\" \n\n\"You're right,\" Eli laughed. \"But we need to get going. It's getting late and Saturday's are busy nights at the club. Bathroom is right next door to the right.\"\n\nFeeling completely exposed, being naked from the waist down, Bella made a quick dash to the bathroom. Thankfully, Lina had put her belongings inside. Bella made quick work of cleaning up and getting redressed. She stood in front of the sink looking at herself. She loved them. Fuck, she thought as she started to hyperventilate. She loved them. What if they rejected her, got tired of her? What if, not matter what they said there was no room in their life for her? She took a deep breath, willing herself to calm down; Bella wet a paper towel and patted her face. Having calmed herself, she left the bathroom. Lina was waiting for her, a little smirk on her face.\n\n\"Well, hello you lucky little bitch,\" Lina said to her playfully. Considering how affectionate she sounded, Bella took no offense at being called a bitch. \n\n\"Hi Lina. I sure hope you enjoyed the show.\"\n\n\"Oh girl, you know I did! Those men are hot as can be,\" Lina said fanning herself. \"That little scene is going to fuel many a fantasy for me.\"\n\n\"Well I sure hope you give me a copy if you recorded it,\" Bella laughed. Lina just waggled her eyebrows, laughing. The men opened the door to the changing room, stepping out fully dressed.\n\n\"I've got several outfits wrapped up for your little girl here,\" Lina told them. \"I took the liberty of choosing. You know my taste is impeccable.\"\n\n\"We trust you,\" Eli told her. \"I hope you wrapped up quite a few.\"\n\n\"Half dozen sets today, but I can make more if you need,\" Lina told them.\n\n\"Holy hell!\" Bella exclaimed. \"That is too much.\"\n\n\"You don't worry about it, baby girl, our treat. We want to see you in them, so think of it as a treat for us.\"\n\n\"Well, as long as they're really for you,\" Bella said with a laugh.\n\nLina walked them into the main area of her boutique. Bella picked her bag up off a chair and slung it over her shoulder. Lina picked up a large wrapped package and handed it to Aidan.\n\n\"Put the charges on my card,\" he told her.\n\n\"Already done, big boy,\" she told him with an outrageous wink. \"Would you like me to start on more?\"\n\n\"Absolutely and make some in leather please.\"\n\n\"You got it.\" Lina walked over and engulfed Bella in a huge embrace. \"Little girl, you are welcome anytime. You come visit me. I want dirt on these boys.\"\n\n\"Maybe I will,\" Bella said hugging her back. \"After I learn some dirt, that is. Do you ever come to the club?\"\n\n\"Of course,\" Lina replied. \"Huff is my man. It's new, but great.\"\n\n\"Oh, wow. I didn't know. Well, that's great then. If I'm around after this weekend, I'll be seeing more of you.\"\n\n\"What do you mean, 'if I'm around'?\" Eli asked with a frown. \"Why wouldn't you be?\"\n\n\"I'm just saying...,\" Bella trailed off, feeling awkward.\n\n\"It's ok,\" Aidan said, putting an arm around her, \"one step at a time. Thanks again Lina. We'll be seeing you soon,\" Aidan told her as he leaned in and kissed her cheek. \"Let's go guys.\"\n\nThe men ushered her up the stairs and to the truck. Again, Aidan hoisted her up into the seat. Bella scooted over to the middle and Eli climbed in after her. Aidan set her package in the backseat before climbing into the driver seat. When he reached over to belt her in, Bella burst into tears.\n\n\"Baby girl, what's the matter?\" Aidan asked, panicked.\n\n\"Bell, what's wrong?\" Eli asked at the same time.\n\nBella just buried her face in her hands and cried, shaking her head. Eli pulled her into his arms as she continued to cry and Aidan rubbed and patted her back. \n\n\"Baby, you are starting to scare us,\" Eli told her. Bella hiccupped and took several deep breaths, trying to pull herself together. \"Please tell us what's got you so upset.\"\n\nBella sat up and rummaged through her bag until she found a package of tissue. She wiped at her eyes, cursing as her makeup came off onto the tissue. Then she blew her nose, blushing in embarrassment. Finally, having pulled herself together, she took a deep breath and whispered, \"I love you.\"\n\n\"What did you just say?\" Aidan asked softly.\n\n\"I said I love you. Both of you,\" Bella replied, refusing to look at either of them. \"I know it's too soon,\" she said, speaking quickly before she could lose her nerve, \"but I love you. You two make me feel special and beautiful. I love how you love and treat each other. I've never considered being with two men before but I love how I feel when I'm with the two of you. But what if you get tired of me? What if I don't live up to what you want? I couldn't stand the rejection again so if you don't think it will work tell me now before I get any more emotionally invested in th-\"\n\nBella's rambling was cut off by Eli's mouth on hers. It was a hard, quick peck designed to silence rather than arouse. When Eli pulled back, Bella was staring at him wide-eyed. Eli cupped her face and kissed her softly on her mouth then her nose.\n\nPulling back again, Eli told her, \"Bella, I love you already. I don't care how soon it is or how long we've known each other. I love you. You are beautiful and special. It takes a special person to accept and even embrace a situation like this. I want you to be with us.\"\n\nCupping the back of her head, Aidan turned her toward him and brought his mouth down in a fierce kiss, designed to dominate. He thrust his tongue in her mouth and licked every inch before pulling back and nipping her bottom lip. \"I've loved you since before I actually met you. Everything Jess told me about you made me fall in love with you. Fucking you just made it real. I want you. I want to keep you and we want to train you. We want you to be you, but to be our sub. I think you're perfect for us. Do you want that?\"\n\n\"Yes. I want the both of you and I think I need to be your sub. I want to be what you need because I need it too.\" Aidan released Bella and reached across to fasten her seat belt before fastening his own. \n\n\"Good,\" he stated. \"But you'd better be sure because I don't think I can let you go. Now let's get to the club and start your training.\""
    ],
    "authorname": "nrjhnsn",
    "tags": [
        "bdsm",
        "gay",
        "threesome",
        "bisexual",
        "exhibitionist",
        "drag queen",
        "blow job",
        "anal",
        "cunnilingus"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/claiming-bella-ch-03"
}