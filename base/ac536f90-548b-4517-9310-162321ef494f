{
    "title": "Fisher's Catch Ch. 02",
    "pages": [
        "Thursday\n\nAuthor's note: This story can be read on its own, but you will have a much better understanding of the characters and their relationships if you first read chapter 1...\n\n.................................................................\n\nThe morning was unusual, to say the least. Jeff fell asleep in Kathy's bed and the girls were up before them. As he awoke he heard them talking and clattering in the other room. He looked at Kathy lying naked next to him, marvelling at his good fortune. \n\nShe opened her eyes and looked at Jeff, her gaze confused for an instant, then snuggling in and saying \"Good morning, Lover.\" \n\n\"Kathy,\" he said. \"About last night, - I didn't mean to...\" \n\n\"Shhh,\" she said gently. \"It was wonderful and we both loved it, and there are no commitments and no recriminations. Just a good memory for my files.\" \n\n\"You are quite incredible, you know,\" he said seriously. \"I was aching for you all day, but I knew I had to leave the pace to you. I had a feeling we were getting to this, but I didn't want to push you or take anything for granted...\"\n\n\"I wanted you from the first day,\" said Kathy with a blush. \"That first night, - when everything had gone so horribly wrong, - the only good thing that had happened all day was the way you were so nice to us, and gave us at least one day to enjoy what was supposed to be a break from all the things that were wrong at home. I wanted to experience things and have fun on the holiday, and here we were, going straight back. I wanted to have at least something to remember, and I wanted to thank you as well, that's why I came out and ... you know.\" She blushed again.\n\nHis dick remembered and gave a twitch. \"I was surprised,\" he said with a smile.\n\n\"I was, too,\" she replied, \"but I enjoyed it even if I was scared. And I really enjoyed last night!\"\n\n\"Does that mean we can do it again?\" he said, - grinning now.\n\n\"Only once before breakfast,\" she said happily. \n\nIt was gentler and more leisurely for both of them that time. She took control, put him on his back and said hello to his rapidly stiffening dick. \"You are a lovely thing, - yes you are,\" she crooned to the muscle in her hand and kissed it good morning. Then she took it deep into her throat, just like the first night. But after a few strokes, she got on top and lowered herself on him, gently, but firmly. He slid in easily, to the hilt in one stroke. \n\nShe gasped, but laughed happily. \"Oh I LIKE fucking you, Jeff Fisher,\" she said, and went at it with abandon. Her full breasts hung invitingly before him, full and firm, begging to be held and kissed. He didn't need to be asked twice. After a while, his hand slid down her flank and over her firm ass. He twisted his body and reached further, down the crack of her ass and touching the opening. \n\nShe took a quick breath. \"Jeff...\" - she said uncertainly. \n\n\"Just relax and enjoy it, Darling,\" he said. \"I won't hurt you, and I'll stop if you really want me to.\" She relaxed a bit, and he moved his finger gently around her asshole. He moved up to her pussy, feeling himself moving in and out of her hot grip. He fingered her lightly, wetting his finger in her copious secretions. She picked up the pace just a little. He moved his finger back to her asshole and slowly pushed the now slick finger inwards. \n\nShe flushed all over. \"Oh, my god, Jeff,\" she said in hurried breaths. \"That's ... unbelievable. Don't stop!\" He pushed deeper into her hot buttery passage, and her pace became frantic once more. She reached around and gently grasped his balls, and running her fingers around the root of his prick, nipping as it left her and withdrawing them just as he disappeared back in. \n\nHe left one finger in her ass and with the others reached to her cunt. The double manipulation took her over the top again. He loved the look on her face as she came. Joy, bewilderment, abandon, deep satisfaction all at once. He responded with deep thrusts and an orgasm right in sync with hers. Not as copious as the night before, but more intimate and caring somehow. Slowly she fell down on his chest. \n\n\"I think they heard us again,\" he said. It had become very quiet in the other room. \n\n\"So what?\" she said.\n\nThe girls' faces were a study in conflicting emotions when they emerged. Curiosity, mixed with a great deal of love for Kathy, and with a tiny bit of jealousy thrown in, he thought uneasily. He hoped they could go back to the carefree mood of the day before. But maybe it had been destroyed by the events in the night. \n\n\"Way to go, Mom,\" said Rebecca, breaking the awkward silence, - and silencing his fears. The girls were OK! They hugged and talked in pleasant confusion, completely ignoring him. \n\n\"Hey,\" he said, taking a risk. \"How about giving me a hug?\" He had three hugging females all over him in an instant. He returned the hugs, which quickly turned to mild kisses. \"A great way to greet the day,\" he thought. \"And we're having a whole week of this?\" \n\nThe girls decided that topless was still the dress code, and no one objected, least of all him. The suntan lotion routine now included Rebecca, who responded with great joy to his touch on her back and the sides of her breasts. She raised her upper body just a little each time he stroked the sides, and he got closer and closer to the nipple. When he finished, she sighed a little and went to sleep. When he did Kathy's back, he also got a good feel of her breasts, and then suddenly she turned on her back and said: \"Do the front too, please, Jeff\". He filled his hands with lotion and reached for her breasts. \n\nIt was incredibly erotic to fondle and massage her breasts right in the open, with a teenager looking on with amusement, and a certain glint in her eyes. He massaged Kathy's nipples as he spread the lotion all over, and they responded by saluting him. He slid his hands down to her stomach, and flirted with the line of the bikini bottoms. \"Thanks, Jeff\" was the signal to stop. He smiled and complied.\n\n\"Mine, too,\" said Elizabeth. He looked at her mother. She hesitated, then smiled a funny little smile and nodded. Elizabeth was clearly not used to this. Her skin reacted instantly when he started putting lotion on her shoulders and the upper slopes of her breasts. Her breathing became a little ragged and a flush crept over her upper body. He continued to her nipples, pinching them lightly as he continued massaging the lotion into her breasts. They responded instantly, hardening into nuggets of deep red, and standing out like pillars on her mounds. \n\nAs he continued, her color deepened and she suddenly started to shake, clenching her legs together. Her orgasm had her gasping and writhing with pleasure, as it slowly subsided. She shook herself a little, then seemed to come back to reality, and quickly ran into the house. \n\nHe shot a worried look at Kathy, but she looked at her daughter's retreating back with a loving smile, and said softly. \"Thank you. Jeff.\" He must have looked very odd, because she laughed and whispered: \"I knew you would be gentle and give her pleasure. Don't feel so guilty, I know you enjoyed it, too.\" \n\nHe grinned ruefully. \"I did,\" he admitted. \n\n\"Well, then...\"\n\nRebecca woke up and looked around for Elizabeth, then disappeared into the house after her. He heard them talking inside, but couldn't make out what they were saying. Kathy looked at him solemnly. \n\n\"Jeff,\" she said slowly. \"Can I ask a huge favor of you? Please say no if it is too much, I don't want you to do anything you don't want to do.\" \n\n\"What?\" he said. \n\n\"I know the girls like and respect you a lot,\" said Kathy, \"and I know they trust you as well.\" Jeff didn't know where this was heading, but his mind was racing in every direction. \"Making love to you was just wonderful,\" Kathy continued. \"I have never felt so satisfied and so safe in my life. You were gentle, and yet firm, and I wish you had been my first lover. Will you help my girls have that experience that I never had?\" \n\n\"What!?!\" he said, sitting bolt upright. \"Do you mean what I think you mean?\" \n\n\"Yes, Jeff,\" she said. \"I am asking you to teach my girls what making love is all about.\" \n\nHe was struck dumb, and just sat there gaping. \"But Kathy,\" Jeff protested. \"They are so young, and I'm too old for them, and besides, you and I....\"\n\n\"Bullshit,\" she said firmly. \"I was a year younger than Reb when I lost my virginity, and an experienced, gentle lover is what they need. What you and I have won't be damaged by you helping them out a little.\" \n\n\"But Kathy,\" He protested again. \n\n\"If you don't want to do it, I will understand,\" she said, \"but if you are only worried about us, that's not an adequate reason to say no.\" \n\nIn the end they were reduced to where, when and how, and together they decided to let nature take its course, - helped with a little push here and there. When the girls came back out, Kathy was naked, and Jeff was putting lotion on her ass. Ignoring their stares, he kept kneading her firm buns, opening her crack to their gaze each time he moved outwards. Slowly they sat down, quietly, yet somehow understanding that they were meant to see this, that it was OK. \n\nTheir gaze went from his hands to their mother's body to his eyes and face, and his smiles brought an uncertain smile in response from each of them. \"That feels wonderful, Jeff,\" said Kathy. \"Put lotion on everywhere.\" The girls stared as he dipped deeper, letting his fingers slide into the crack of Kathy's ass and swirl sound her asshole. Rebecca gasped as his finger slipped into the opening. Elizabeth was mesmerized. Slowly Jeff moved his finger in and out of Kathy's ass. \n\nShe lifted her hips a little, to give him better access. She swayed her hips and came up in a low, kneeling position, her legs spread wide and her ass pointing high in the air. Her whole cunt and ass were now visible to the three of them. Jeff pulled his fingers out and just stroked the globes of her ass. His hands were gliding across her smooth fair skin, slick with the lotion. \n\nShe lay down again and turned on her back, pulling her knees up in the process. Jeff 's hands kept stroking, now closer to her curly red pussy. It was starting to gape open, the pale red of her inner lips bright in the sunlight. Moisture was coming in little droplets from her cunt, lubricating his hand and fingers. He kept stroking her from ass to clitoris and back. Kathy shuddered with lust and pulled her knees higher. He put two fingers in her opening, while he leaned forward to kiss her moist nether lips. As the mesmerized girls looked on with wide-open eyes, he let his tongue swirl around her clitoris. Kathy was getting very close now. The girls leaned in almost subconsciously, their eyes glued to the scene in front of them. He let up on the movement and Kathy mumbled in disappointment. \n\nJeff looked at Elizabeth and reached for her hand. As in a trance she let him guide her hand to her mother's naked body. \" It's so soft, so soft\", He whispered. She reached out and touched Kathy's groin gently, then letting her finger move down to her cunt. She stroked it ever so gently, afraid to touch, yet unable to resist. She reached for the clitoris and touched it, still stroking. Kathy's secretions were flowing now. Elizabeth dipped her hand in her mother's cunt and felt the slickness. \n\n\"Yessss,\" hissed Kathy, on the brink again. Out of the corner of his eye Jeff saw Rebecca leaning in, reaching out as well. Her hand met Elizabeth's in their mother's pussy, both stroking breathlessly and shaking a little. \n\n\"Stroke like this,\" he whispered, showing them. \"Put your fingers inside, gently\". Both hands obliged as one, fingers reaching tentatively inside. \"Move them in and out,\" he said softly, hardly daring to breathe in fear of breaking the mood. He returned his attention to Kathy's ass and inserted his finger again.\n\nThe girls kept up with his pace, as Jeff's finger moved in her clasping ass. Kathy was whimpering and on a razor's edge. He bent down and kissed her breast, tasting the lotion on her nipples. He sucked hard while he reached out and touched her clitoris. That was it. With a loud cry, Kathy came. Her cum flooded the girls' fingers, and her pussy clenched on their hands. They kept moving \u2013 in and out, while she soared and soared. Then she collapsed in a heap, crying with pleasure. The girls sat still, not knowing what to do or say. Their chests were flushed; their nipples tight with lust, and their hips were still twitching with a receding orgasm. \n\nJeff smiled gently at them. \"Thank you for being so nice to your mother,\" he said. \"Did you enjoy it?\" \n\nThey clearly didn't know what to say, but Kathy said weakly: \"Isn't he wonderful, girls? He knows exactly what to do and exactly how I feel all the time.\" \n\n\"Oh, Mom,\" said Rebecca. \"It was awesome!\" Kathy chuckled at the odd phrase for what had just happened. \n\n\"Awesome indeed!\" she said. \n\nElizabeth looked thoughtfully at them. \"You really wanted to show us this, didn't you, Mom?\" \n\n\"Yes, Darling,\" said Kathy. \"I wanted you to see how wonderful making love can be.\" \n\n\"But you didn't, - eh.... \"\n\n\"Fuck?\" asked Kathy bluntly. \"Eh, - yes,\" said Elizabeth. \n\n\"There are many ways to make love,\" said Kathy gently, \"you should try some more of them. You enjoyed making love to us didn't you?\" \n\n\"Yes, but...\" They all sat in silence, - each thinking about the amazing event.\n\n\"Let's get cleaned up,\" said Jeff, \"then we can take a swim.\" The spell was broken; the girls blinked, and went back in the house. \n\n\"How did you know they would join in?\" asked Kathy. \n\n\"I didn't,\" Jeff said truthfully, \"but I wanted to give them the chance, and they obviously enjoyed it. I think they both came when you did.\" \n\nKathy smiled. \"Stage one complete,\" she said with satisfaction. \n\nSwimming with three topless females was a whole new dimension in water activities. They were freer and easier with Jeff than ever, and took every opportunity to tackle him and rub against him. He shamelessly felt their breasts whenever he had the chance, and he felt more than one hand grope him in quick snatches. He came out of the water with another hard-on and this time the girls giggled unashamedly. \n\n\"Look Mom, - what do you think happened to him?\" said Rebecca, pointing at his prominent erection. \n\n\"I don't know,\" said Kathy, \"but we'd better find out.\" And with that they all jumped Jeff, wrestled him to the ground and with a triumphant shout came up with his trunks. Jeff was too excited to hide bashfully, so he just sat there and let them look. \n\n\"Isn't it beautiful?\" said Kathy. \"Have you ever seen one more beautiful?\" \n\n\"No,\" said Elizabeth softly. \n\n\"I have never seen one at all,\" said Rebecca, - full of wide-eyed wonder, \"but it is really beautiful, Mom.\" \n\nJeff laughed. \"Well, I guess it's all yours, now,\" he said. \"No more secrets in this household.\"\n\n\"Then I don't need these,\" said Elizabeth, slipping off her bikini bottoms. \n\n\"Me neither,\" said Rebecca, following suit, a bit uncertain, but determined not to be left out. They looked at each other, still smiling but with a suddenly serious undertone. \n\n\"Mom, what is going on here?\" said Rebecca in a small voice, a little girl suddenly, with all her bravura gone. \n\n\"Whatever you'd like, my little baby,\" said Kathy gently, \"and nothing you don't. want\" \n\n\"Do you mean we can ...\"Elizabeth hesitated to say it. \n\n\"Make love? Sure you can, and fuck too when you are ready.\" \n\n\"Mom!\" they exclaimed, suddenly shocked. \"You told us that was a dirty word.\" \n\n\"It is when you use it at the wrong time, explained Kathy, but at a time when that's what you are thinking about, it feels really good to say all those words, fuck, cunt, prick, asshole, tits...\" \n\n\"MOM, stop!\", cried Rebecca. \n\n\"Ok, darling,\" said Kathy with a smile. \"I won't make you, but I just wanted you to understand that it's ok sometimes.\" \n\n\"Do you want to watch some more,\" Jeff asked. \n\n\"Do you mean now?\" said Rebecca nervously. \n\n\"If you want\", he said. \"Your mom enjoyed this afternoon, and I think you did, too.\" They blushed. \"I did too, but I never came.\" \n\n\"Oh Jeff,\" cried Kathy. \"I've been so selfish. You poor thing. Let me make up for it now.\"\n\n\"You don't keep count when you make love, my precious\", he said, \"but I wouldn't mind a little something\", just to tidy me over.\" \n\n\"What's your pleasure?\" asked Kathy teasingly. \n\n\"Whatever you and the girls want,\" He said. \"I'm in your hands\" \n\n\"You mean like this?\" Kathy said; reaching out and holding his semi-soft prick.\n\n\"And like this?\" said Elizabeth, also reaching out and putting her hand next to her mother's on his rapidly stiffening spear.\n\nRebecca hesitated, then shrugged and reached out as well. \"And like this?\" she said nervously, taking the protruding head of his dick in her soft hand. \n\n\"Oh, yes,\" Jeff said. \"Like this is just fine.\"\n\nThe three women stood naked around him, each with a hand holding onto his now rampant cock. \"How big does it get?\" Elizabeth asked breathlessly. \n\nThat's about it,\" He said, \"but you could get another inch or so if you treat him right.\" \n\n\"Mom, can you show us how to treat him right?\" said Elizabeth, suddenly eager to learn. \n\n\"Let's go into the bedroom,\" said Kathy, \"and we can have your first lesson.\" \n\n\"Second,\" said Rebecca with a laugh, \"we already had one, remember?\" They laid Jeff down on the bed, without letting go of him for even a moment. \n\n\"Now leave it alone for a little, girls,\" said Kathy playfully, \"and watch carefully\". \n\nShe bent over and took his cock in her mouth, nibbling lightly on the head and licking the shaft. The girls sat in stunned silence. \n\n\"How can you...\" Rebecca started and stopped in the same breath. \n\n\"It feels so nice,\" said Kathy, \"and I love the taste!\" \n\n\"Yuck!\" said Rebecca, making a face. \n\n\"Don't knock it if you haven't tried it,\" said Kathy. \"Here, have a taste.\" \n\nRebecca hesitated, but Elizabeth reached out and grasped his shining dick. \"Let me try,\" she said, and plopped it in her mouth. \n\n\"Easy does it,\" said Kathy. \"It's better if you are gentle at first. Lick it a little, and take just a little bit of it in your mouth.\"\n\nJeff was floating on air while Elizabeth tried again. Once she understood the concept, she took to it like breathing. \n\n\"Suck on it gently,\" said Kathy. \"Move your hand up and down, but not too hard or fast in the beginning.\" Every command translated into glorious pleasure, as Elizabeth went effortlessly from move to move. \"Swirl your tongue around the head. Move your head up and down. Take it in deeper, all the way into your throat.\" \n\nElizabeth gagged. \"Easy,\" said Kathy. \"Stop breathing for a little and relax your throat. Now try it again.\" Rebecca was watching with wide-open eyes. Jeff was breathing in ragged gasps.\n\n\"I think we need a break,\" he said, \"or the lesson will be over very quickly.\" Reluctantly, Elizabeth let go. \n\n\"It feels so good. Mom,\" she said, \"and I like the taste a lot.\" \n\nSmiling, Kathy gave Elizabeth a hug. \"See, Mom does know something after all.\" \n\nJeff's dick quieted down just a little, but still waved like a flagpole in a stiff breeze. Rebecca couldn't take her eyes off it. \"Would you like to try,\" he asked quietly. She nodded hesitantly, but made no move to start. \n\n\"Why don't you kiss me first?\" he said gently. She looked up, smiled gratefully and gave him a chaste kiss. \"One more,\" he said, \"and let it last a little longer this time.\" She kissed him again, and he held her tighter and moved his lips on hers. The naked, excited teenager melted into his arms, her mouth opened slightly for his probing tongue, and then suddenly she was on fire, kissing him with all her youthful energy and with wild abandon. They kissed and kissed as Jeff held her tight. His cock was digging into her stomach, but she didn't notice, just clung to him with her whole body, pushing her hips and pussy against him in short humps. He wanted to come up for air. Rebecca didn't. ",
        "\"Rebecca,\" said Kathy. Somehow she got through to the fired up teenager and she let go, looking abashed and uncertain once again. \n\n\"You like that, don't you?\" Jeff said teasingly. \n\n\"Oh yes, can we do that some more, please?\" \n\n\"Why don't we kiss more than just the mouth,\" he suggested, and kissed her neck to show her the way. She kissed his chest and played with his nipples. He returned the favor, making her nipples stand out like his did. Her breasts were marvellous. Soft and yet firm, not as large as the other two, but a wonderful handful each. He held them like grapefruit in his hands and nibbled. She closed her eyes and made small sounds of pleasure. Jeff laid her on the bed next to him and moved down to her belly. Her flesh shivered continuously as he moved around the edge of her damp patch. She started humping again, gently this time, but with unmistakable arousal. Her scent reached his nostril, fresh and lemony, and he dove in. As he parted her nether lips with his tongue, she threw her arms over her head and wailed. \n\n\"Ohmigod, ohmigod!\" Jeff backed off a little and looked at her face. It was in peace and agony at the same time, her features drawn tight. He dove in again and captured her clitoris in his lips. He sucked gently and stroked her pussy lips, putting one finger inside. She came almost violently, with strong contraction after contraction, and cried out again, - once, - then she was out like a light.\n\n\"My sweet little pussycat,\" said Kathy. Elizabeth looked at Jeff with awe. \n\n\"What did you do to her?\" she asked. \n\n\"I gave her pleasure,\" he responded, \"\"were you worried that I hurt her?\" \n\n\"No, I knew you wouldn't do her any harm, but my God, - she is out completely!!\" \n\n\"Her body needs a little break,\" he said calmly, \"and she will be fine in a minute. How about you? What do you want?\" \n\n\"I want...,\" she said. \"I want, - - Everything!\" \n\n\"Do you want me to kiss you that way\", He asked her softly, glancing at Kathy, who was cradling Rebecca's head in her naked lap. Elizabeth nodded. \n\n\"Yes please\", she said, \"at least to begin with.\" Jeff laid her back on the bed next to her sister and mother and bent over her breasts. He kissed them like he did to Rebecca, little nibbles, then suction on her nipples after he had teased her enough. Unlike Rebecca, however, Elizabeth was still an active partner. She reached for his dick and stroked it with a feather touch while he worshipped her fabulous breasts. \n\n\"Please, Jeff,\" she said in an echo of her mother. \"I need you in me now!\" \n\nKathy smiled lovingly and nodded. \"Yes Jeff, show my little girl how to make love.\"\n\n\"Are you ready?\" he whispered. She nodded again, not trusting her voice. \"We'll do this one step at a time,\" he said, \"and if you ever want me to stop, just say 'no', or squeeze my hand.\" She nodded again. Jeff stroked her tummy and her mons, twirling her hair in his fingers, and gently feeling down into her folds. Her pussy was open in arousal, and her clitoris was growing larger and more visible. He kissed it and licked gently along her slit, slipping his tongue into her tight hole. She gamely held on to his head, shaking her head from side to side, but never uttering the 'no' that would stop what he was doing. \n\nHer secretions were plentiful by now, and she was wide open to his loving gaze. Jeff couldn't resist lapping up some more of her sweet nectar, before returning to her face and kissing her soft lips. \n\n\"Is that how I taste?\" she said timidly. \n\n\"Yes, my love,\" he replied, \"isn't it delicious?\" \n\nShe had another taste from his lips. \"Not bad,\" she said matter-of-factly. \n\nHe laughed, and kissed her with more ardor. \"Please take it and put it in the right place for me,\" he asked gently. \n\nShe hesitated, then reached down and took hold of his throbbing dick, placing it at her opening. She was fully aroused, and slick with fluid, but it was still a tight squeeze. Gently Jeff moved in a little, giving her time to adjust, then a little more. \"I can feel you inside me,\" Elizabeth said, her voice full of wonder and delight. \"It feels so wonderful\". He pushed in some more, then stopped; his cock throbbing wildly inside her. \"Don't stop,\" she pleaded. \"It is soooo good.\" \n\nKathy whispered in his ear: \"Is my daughter tight and warm for you, my lover? Does her hot cunt feel good around your big dick?\" She reached down to their joining and gently fondled his balls and stroked his prick and Elizabeth's cunt where they joined. \"Do it quick, my love,\" she whispered. \"Give her as much joy as you give me.\" \n\nHe could resist no more. \"Are you ready, Liz?\" Jeff asked. \n\n\"Mmmmm\", she mumbled. He pulled out slightly, then pushed in strongly, sheathing his prick to the balls in the vice-like grip of her pussy. Kathy's hand continued to fondle his balls as he lay deep in Elizabeth's cunt. \n\nElizabeth had given a sharp cry as Jeff first burst in, but now she lay still, feeling him throb deep in her womb. \"It's all in,\" she said breathlessly, \"You are all inside me. I thought it was good with Bobby, with you it feels like my body is on fire with the pleasure of it all. Oh, thank you, Jeff for being so gentle and kind.\" \n\n\"It isn't quite finished yet, he said,\" sweet laughter in his voice. Jeff pulled out a few inches, then pushed back in. \n\n\"Oooooh\", Elizabeth moaned. \"That is so.....\". He did it again. Her cunt pulled at him, not wanting to let go, but his steady moving in and out soon had her moving in tandem, his strokes getting steadily stronger and longer. \n\nElizabeth's face contracted, and the tendons on her neck stood like ropes. She started to shake, and came like a flood. She laughed and cried, clasping him to her and kissing him all at the same time. \"I love you, Jeff, I love you!\" she repeated over and over again. \n\n\"Shhh, my angel,\" Jeff said. \"You love what we are doing, not me.\" \n\nShe relaxed in his arms. \"You are so wise,\" she said. \"How did you get so wise?\" \n\nRebecca had fallen asleep in Kathy's arms as Elizabeth and Jeff had made love. He laid the two girls side by side, kissed them both, and with a last longing look at their bodies and faces, covered them up. \"We better take their room tonight,\" he said. They crept into the girls' bed and snuggled up. \n\n\"You are still hard,\" she said in an amazed voice. \n\n\"Now that you mention it,\" Jeff said, grinning, \"maybe I could get some help with this now?\"\n\n\"You mean that during all that, you didn't come once?\" \n\n\"I got oh so close several times,\" he confessed, \"but tonight was for the girls.\" \n\n\"And now?\" she said coyly; \"who is it for now?\" \n\n\"Us!\" he said firmly and smacked her on her pert ass. She reacted with a mixture of anger and lust. \n\n\"Don't, - eh no, do that again\", she said, bewildered. He swatted her again. She shuddered and raised he ass in the air, just as she had on the deck. \"More,\" she said hoarsely. \"It hurts so good!\" He smacked her two more times, then stroked her reddened globes gently, kissing them at the same time. She stayed with her ass in the air. \"When you did that to my ass this afternoon, I thought I would die with shame,\" she said. \u2013 \"What do you think the girls thought about it?\" \n\n\"I think they loved it,\" he said. \"They wanted you so much to enjoy whatever you did.\" \n\n\" Jeff...\" she said, hesitating, \"will you do that again please, will you fuck my ass with your finger.\" His cock gave a bounce at her words. Jeff said nothing, - just continued stroking her ass, but sliding his fingers further down in her crack, and teasing her tight crinkled hole. Her cunt was flooding again, and he coated his fingers with her liquids. Her asshole opened easier this time, inviting him in. He used one finger at first, stroking in and out, caressing her cunt with the other. He added a finger, and she groaned in pleasure. \"Yessss,\" she hissed. \"Yessss, - just like that!\" \n\nJeff's cock was rock hard as he withdrew his slick fingers, lubricated his cockhead and placed it at her asshole. \n\nKathy stiffened. \"No, Jeff! It's much too big. It wont fit. It will hurt!\" she cried. \n\n\"Shhh, my love. I won't hurt you.\" Gently but firmly he pushed into her. Her asshole opened slowly and his cockhead slipped in. \n\n\"Aaahhh...\" Relief, but no pain in her voice. He pushed further. As he slowly moved into her bowels she sank down in her back and thrust up at him with her ass. Effortlessly he slid in to the hilt. \n\n\"Oh my love,\" she cried. \"It fills me up like no other feeling I ever had. Be gentle, but please fuck my ass now.\" Jeff was gentle for a while, until she started bucking and shoving, He hung on for the ride, grabbing her breast with one hand and her cunt with the other. His release was finally bubbling up, unstoppable. She could feel his dick expanding and cried \"Fill me up, Jeff, fill me with your seed. Fill my ass with your cum\". He did as she asked, dumping a long day's constant erection into her in spurt after spurt. She came as well, shaking her tail like a squirrel and crying his name over and over. It went on and on, at a level of intensity he had never before experienced. Finally they were done. Jeff's spent prick slipped out of her ass with a gentle plop, and they fell asleep as they were.\n\nFriday\n\nJeff awoke as two pairs of hands were washing his balls and his dick. \"Hi sleepy-head,\" said a bright eyed Elizabeth. \"Are you going to sleep all day? It's almost lunchtime.\" \n\n\"You're a mess,\" laughed an equally perky Rebecca. \n\n\"Have a shower with me, then,\" he said, grinning, and grabbed one girl under each arm as he headed for the shower. They made a weak pretence at struggling, but were cooperative enough to turn on the water as he pushed them in ahead of him. \n\n\"Good morning yourselves,\" he said, as he kissed first one and then the other. Kidding turned into serious kissing in no time, with the girls competing for time. His dick rose inexorably once again, pushing the girls in the tummy.\n\n\"This time I want it!\" cried Rebecca and dropped to her knees. \"I remember everything mom did to you yesterday.\" She took his prick gently in her hand and lowered her mouth over it. She had paid attention, Jeff thought as he gave himself over to the girls. She was still a little fumbling, but that only added to his excitement. He leaned back as Rebecca went to town. She figured out that he liked having his balls fondled, and she figured out that she could drive him crazy by fingering his asshole at the same time. He was at the boiling point in no time flat. \n\n\"Take it easy, please, Rebecca,\" he pleaded. \"Not so fast. It isn't a race, you know. Slow down, and please yourself as well as me.\" \n\n\"I am enjoying it,\" she protested. Jeff reached down to her breast and stroked it while she held him in her mouth. Elizabeth had reluctantly given up his mouth when he stopped to talk, but she had his other hand firmly clamped between her legs, while she rubbed her tits against his chest. \n\n\"Why don't you share?\" he said. Elizabeth also sank to her knees and took hold of his prick as it rested in Rebecca's lips. \n\n\"I can hold it while you suck,\" she said with a happy giggle, \"and then we can swap.\" \n\n\"God help me,\" he thought. \"I am a lost man.\" The girls went at it with renewed vigor, and soon he was struggling to retain control once again. He glanced down, and saw that their free hands had wandered on their sister's body, stroking vigorously between the other's legs. \"The little minxes,\" Jeff thought. \"They got past that point pretty quickly.\" The sight was too much. He warned them that he was cumming, but they just redoubled their efforts. The first rush went in Rebecca's mouth. She swallowed convulsively, but the next spurt was too quick and caught her face. The next went on Elizabeth's face, as she bent in to push Rebecca aside. Sperm was running down both girls' faces, as they tried to catch it with their tongues. Their own orgasm arrived a the same time, and they shook with pleasure, each with sperm all over her face, one hand on his prick and the other in her sister's cunt.\n\n\"My, My, this is what I call a shower,\" said Kathy looking at them with amusement. \"Had I known this, I would have joined you. Now clean up for breakfast, - we have a long day ahead of us.\" They rinsed off and dried each other carefully. \n\n\"This is much better than drying yourself,\" said Rebecca laughing, \"but it does take a long time.\" Of course the fondling and kissing that accompanied the careful drying had something to do with the slow pace. Jeff's dick was hard again by the time they were done, and the girls led him proudly by his handle into the kitchen. \n\n\"Look what we found, Mom. Good as new!\" \n\nKathy looked fondly at them. \"OK, girls, leave Jeff alone for a while.\"\n\nThey had brunch in the nude, Jeff kept looking around at the three beautiful bodies surrounding him. They kept looking at him too, all four of them in a state of mild, but constant arousal. Back on the deck in the sun much kissing and fondling took place as the sunscreen was applied all over. The decided that they should all take turns at being the recipient, and six hands made sure there wasn't a speck of visible skin left untouched. The girls seemed to really enjoy doing their mother, fondling and kissing Kathy's breasts with joyous abandon, then fighting Jeff for space on her ass and between her legs. And of course, Jeff's dick was never in a million years going to get sunburn after the treatment it got.\n\nThey found time for a little snorkelling in the afternoon, all three of them really getting very comfortable in the water by now. Snorkelling naked is fun, but Jeff was constantly nervous about the Sergeant-Majors, the small striped fish that have a habit of \"kissing\" you with a little nip when you least expect it. The girls loved the snorkelling, especially diving under him and coming up while touching him all over. Rebecca even got his dick half way in her mouth once, before she ran out of air and had to give up. He gave as good as he got, kissing and probing and tickling wherever he could get in, which was everywhere, since the girls spread wide whenever he went under. \n\nWhen they finally went back up, Jeff asked: \"Did you ever try scuba-diving?\"\n\n\"No, but I always wanted to,\" said Elizabeth. \n\n\"I'm a little scared of it,\" said Rebecca. \"What if I run out of air down there?\" \n\n\"Don't worry about that,\" Jeff said. \"I'd take good care of you. But if you would like to try it, it will have to be tomorrow, you can't dive less than 24 hours before flying, and you're leaving Sunday Night.\" \n\n\"Oh, why did you have to bring that up?\" Rebecca said. \"I was pretending we would be here forever.\" \n\n\"Let's not think about Sunday, - just enjoy the time we have,\" Jeff said. \n\n\"Amen to that!\" said Kathy.\n\nJeff felt like a sultan as he lay on the deck with his three beautiful, naked redheads around him. Three mouths, six breasts, three pussies and three asses, this must be heaven. He would reach out and find something to fondle, all of it delectable. He would feel a hand touching him and fondling from time to time, sometimes two, once all three. He would lean over and kiss a body or a mouth, nibbling, sucking or licking as appropriate. Once, a mouth enveloped his prick and sucked gently. With his eyes closed Jeff couldn't tell who it was, and it didn't matter. Once a pussy sat down gently on his face, and while he couldn't see another sat down on his hard cock, sliding him deep within her. She was gone before he could see again. Gentle hands blindfolded him, and then placed each of his hands on a sopping wet pussy. The third sank down on his prick again. \n\n\"Guess who\", a voice said. One was easy, the hymen gave Rebecca away. But he had a hard time telling Kathy from Elizabeth. He moved up toward their breasts, but before he was sure, his hands were moved back on their cunts again. \n\n\"Time's up\", Jeff heard. \"Time to change places\". Again a cunt in each hand and his rock hard prick deep in a warm pussy. Once again, he could tell Rebecca, but had Kathy and Elizabeth also changed places?. He felt again, \"yes, - no...\". Shit, he couldn't tell from the pussy alone. \n\n\"Time's up again\", he heard. Again movement and whispers, again a cunt in each hand. Again a warm cunt sinking down on his dick. It felt even tighter than before, and was that some resistance he felt as he penetrated her? Jeff stiffened with excitement. He felt the two pussies in his hands. No hymen there, no hymen here. He pulled his hands and blindfold loose and grasped Rebecca tightly to him. \"Oh little one,\" he said tenderly. \"You wanted it, too! But why did you blindfold me?\" \n\n\"I was afraid you wouldn't do it with me,\" said Rebecca tearfully. \"You only kissed me yesterday, and I wanted it so bad, and you ff...ff...ffucked Mom and Liz...\" \n\n\"Let me look at you,\" Jeff said. \"How could you believe that I didn't want you? I told you that I would do what you wanted and nothing you didn't, but when you wouldn't suck me like Elizabeth did, I thought you weren't ready for any more.\" \n\n\"Silly both of you,\" said Kathy reaching for his hand again. \" Yes, silly\" echoed Elizabeth, reaching for his other hand. Both spread their legs wide, and raised their asses a little to give him free access. Both cunts were open and aroused, both were moaning in unison as he stroked and probed. He pushed two fingers into each cunt and began a fucking motion. \n\nRebecca lifted her head from his chest and looked at her mom, then her sister, then at him. \"Don't forget me,\" she said with a smile and started her own fun. \n\nJeff began thrusting into Rebecca, keeping time with his finger thrusts into Kathy and Elizabeth. All three were fondling their breasts and pinching their nipples, faces softened and twisted with lust. He raised his head and fastened his mouth on Rebecca's nipple. \"Aaaaah,\" she cried out. \"I can't stand it any more. I'll burst if we keep doing this.\" \n\nHe smiled tenderly. \"Yes, my love. That you will.\" He kissed her, and went back to her breasts. He also moved his hands round further back under Kathy and Elizabeth and circled their assholes. Kathy moaned, but Elizabeth opened her eyes with a startled look. \n\n\"It's OK, Liz,\" said her mother. \"Just relax and enjoy it.\" Liz closed her eyes again and Jeff went back to her asshole. One finger went into Kathy, one into Elizabeth, - then two in each asshole. His cock was pistoning in and out of Rebecca, who was bouncing on his rigid dick like a doll. He felt one hand, then two on his balls. He had just enough time to put his thumbs one on each clitoris, and then he sighed deeply and came. Jeff's release was like a signal for the three of them. First Rebecca, then Kathy, with Elizabeth almost at the same time. Four bodies caught in the throes of orgasm, one more intense that he other. He saw Rebecca's face as through a haze. Her smile was a wide as the sky and her eyes shone with happiness. \n\n\"Let me die now\", he thought. \"This is as good as it gets, - maybe better.\"\n\nNone of them had any energy left, so they just lay there. Jeff got up to get them a drink, which they all took eagerly, the sun and the exercise were taking their toll.\n\nThe girls started snuggling up to Jeff again. \"Girls,\" Jeff said seriously, including Kathy in that group. \"We need to get something straight.\" \n\n\"We sure do,\" giggled Rebecca. \"It's no use when it's soft.\" He scowled and she fell silent. Maybe he was serious, she decided. \n\n\"I love what we have been doing and I love each of you dearly, but I am only one man, and you are three hot ladies,\" he continued slowly. \"You will use me up if we don't slow down.\" \n\n\"But we love making love with you,\" Kathy protested. \"And we want you all the time,\" added Elizabeth. \"Don't you like it any more?\" pouted Rebecca \n\n\"That's just the problem,\" Jeff said. \"I just can't do it all the time. As much as I love you and love making love to you, it is going to be physically impossible soon.\" They fell silent, dismayed by his insistence. ",
        "\"He's right, girls,\" Kathy said quietly. \"We have been very selfish. We want it to be a pleasure for Jeff as well, not just for us. So when he says we have to slow down, we have to slow down. What do you want, Jeff?\" \n\nHe sighed. \"First of all, please understand that this is every man's dream, and I don't want it to change. But maybe we can save up my orgasms a little, to maybe two a day. I love all the touching and fondling and teasing, and we can make love in so many ways, but if you notice me getting close to coming, you have to stop, unless it is agreed that we will see it through. We will only do that twice a day, once in the morning and once sometime in the evening.\"\n\n\"Can we still fuck?\" asked Rebecca, in a worried tone. \n\n\"Yes, of course,\" he said, \"but you have to stop when I get close, so I don't come. If I do, it's all over until then next time. Of course, you can always manage without me?\" \n\nThey looked at each other. \"You mean like Mom and me\" said Elizabeth. \n\n\"Sure,\" he said, \"or you and Rebecca.\" They both blushed. \"Or all three of you,\" he said with a smile. \"I'd enjoy watching that.\" \n\nKathy smiled. \"I think I understand,\" she said. \"I'll take care of it.\" That night he slept in Kathy's bed again, - alone. She slept with the girls, and their laughter and rustling went on for a long long time. \n\nSaturday.\n\nWithout much persuasion on Jeff's part they found themselves heading for a dive shop the next day. Jeff had his Rescue Diver certification, and knew the owner pretty well. He quickly agreed to give the girls a 'resort course', and stayed with them as they went through the drill. Just before lunch, they went for the first dive. They went to a lovely reef at 25 feet with full tanks and excellent visibility. Everyone felt very comfortable, and had good fun. At that depth, Jeff could have stayed down forever, but the girls hit 500 on their tanks after little over half an hour, so they reluctantly came back up. The girls' happy faces and bubbling enthusiasm was contagious, and the dive master agreed to let the skipper take them alone to another reef for a second dive, about the same depth. \n\n\"I know you are a good, careful diver, Jeff,\" he said before he went back to the dive shop. \"The next reef is very safe and you'll enjoy it a lot.\" \n\nAs they sped across the water, Jeff explained some more to the girls \"If you breathe with long slow breaths, your air lasts much longer,\" he said. \"Don't work hard at anything. It's just like snorkelling, kick slowly and steadily, and breathe long deep breaths.\" \n\nThat dive was even better, with better air use and better buoyancy control. Jeff was very pleased with them. \n\nIt was he who started it. He should have known better, but he couldn't resist running his finger along Elizabeth's pussy as she swam by him. She turned with a swirl of silt and stared, first spooked, then with a slow, wicked grin as she realized what had happened. From then on it was open season. Jeff suspected the skipper could see them from above, but he didn't care. This was a new and exciting game. The girls' breasts were hidden in their BCD's, but everything below the waist was fair game. The bikini bottoms were easily pulled aside for access, and Jeff's loose suit legs were no hinder. A trickle of air from the octopus gave an incredible sensation as it passed over his scrotum or an open pussy, and even if they occasionally did break the cardinal rule about not holding ones breath, some strategic tongue action was also possible. Jeff kept an eye on the air supply and signalled for ascent. They all went up slowly, smiling and holding hands. \n\nThey climbed aboard, Elizabeth and Rebecca just before him. Jeff stifled a laugh as he saw both pussies bare to the wind, their bottoms pulled aside and never repositioned. He managed to point it out to them in the boat, and he didn't think anyone noticed, but their farewell with the skipper was extraordinarily friendly, with entreaties to please come out with him again.\n\nThe night they all went to one bed. With the girls keeping him on the brink the whole day with teasing and fondling, they were ready for some unadulterated sex. \"I want to go first,\" Rebecca said. \"I have the most to catch up with.\" Jeff smiled tenderly at her and pulled her down to him. \"Don't laugh at me,\" she pouted, \"I'm not being funny.\" \n\n\"I know, pumpkin,\" Jeff said, \"but you are so young and so eager that I can't help smiling with you.\" \n\n\"OK,\" she said, slightly mollified, \"but I still want to go first!\" He kissed her and held her tight. She squirmed around, sitting up on him and reaching down for his dick. \n\n\"Not so fast,\" Jeff said teasingly. \"Slowly is much better.\" She slowed down her movements, but still reached down for him. She slid down until she faced his erection and slowly lowered her mouth over it. Out of the corner of his eye, he could see Elizabeth and Kathy holding each other and looking fondly at the young girl with his prick in her mouth. \n\n\"She's a fast learner,\" he said with a smile. \n\n\"And she has a great teacher,\" said Kathy, also smiling. She gasped as Elizabeth reached down and slid her finger down the crack of her ass. \n\nRebecca had got into a slow languorous rhythm with his prick, stroking, sucking, twirling and licking from crown to base and back up again. Every so often she would sink his prick as deep as she could, leaving just a few inches outside. He could sense her efforts in trying to get him all the way in. \n\n\"Take it easy,\" Jeff said. \"It will come, don't try so hard.\" He lifted her and turned her around, still attached to his prick until she was facing his legs. He lowered her until he could reach her pussy with his lips. As he made first contact, her mouth contracted and he was afraid she would bite him. She soon settled down again and they licked and sucked each other with great contentment. \n\n\"I want it in me,\" she said suddenly, lifting her head. \n\n\"Stay there,\" he said, sliding out from underneath, leaving her on her hands and knees. Jeff lifted her ass up a little, to get better access and positioned his prick at her cunt lips. \"Are you ready? One, two...\" and on two he slid straight into her, bottoming out at the first stoke. Her breath went out in a whoosh and she almost fell down. \n\n\"No fair!\" she exclaimed. \"You didn't count to three.\"\n\n\"I never said I would,\" he retorted and started fucking her. This was what she was built for. The dimpled, baby-soft ass was covered in fine hair, and her swayed back shone with perspiration. She moved with grace and precision, meeting his every stroke at precisely the right time. He feasted his eyes on her ass, as he fucked her. Her pussy was pulled alternatively in and out as they moved, and her small, rosy asshole winked in time with their fucking.\n\nJeff reached under and grasped her breasts hanging down, full and soft like cream puffs. He teased her nipples as they moved, making her breath ragged. He looked at Kathy, \"Join us,\" he mouthed silently. Kathy slid down under Rebecca and moved her head towards their middle. He knew she was in place when an agile tongue started licking his balls. Rebecca also got attention, her head jerked and he knew Kathy had found her engorged button with her tongue. With unfocused eyes, Rebecca looked down at Kathy's pussy just beneath her. Slowly she bent her head and kissed her mother's cunt. His throat was constricted with emotion. They were so beautiful! Kathy and Rebecca were locked in an embrace, with him as the extra leg on the stool. Still, they fucked on, in a steady pace and with increasing muscle tension. \n\nJeff felt Elizabeth beside him. She reached for his hand and put it on her pussy. \"Please,\" she said hoarsely. \"Make me cum, too.\" He placed two fingers in her gaping cunt and pushed in, his thumb on her hard nubbin. She reached out blindly for him and found his ass. Kathy, seeing the finger sneak down, was ready to receive her. She moistened Elizabeth's finger with Rebecca's juices from her mouth, licked Jeff's ass and nudged Elizabeth's finger to his asshole. Slowly Elizabeth pushed it in. Rebecca's asshole winked at Jeff still. He moistened his finger and pushed it into the second knuckle. Rebecca reared her head, but Kathy pulled her back to her aching pussy. \n\nKathy' s tongue and Elizabeth's finger compounded the hot clasp of Rebecca's pussy and Jeff finally let go. The long day's accumulated lust boiled over all at once. And once again he was the trigger for them all. Rebecca came noisily and happily shouting out in ecstatic joy, her face still in her mother's pussy. Elizabeth stiffened on his finger and came with a shake and a shudder, biting her lips to keep the cry in. Kathy was last, humping frantically for a few seconds before she too went over the cliff, soaring in glorious pleasure until she landed with a last lick at their combined juices, now flowing all over her face. Elizabeth cried out at the sight, and fell on her mother's face, licking and kissing until all trace of juices were gone. Rebecca and Jeff looked on in awe. \n\n\"That was....\" Rebecca started, but obviously couldn't find words to describe it. \n\n\"The best yet?\" Jeff asked. \n\nShe sighed happily. \"Exactly\" she said.\n\nSunday.\n\nJeff awoke refreshed, to face a breakfast served in bed by three naked ladies. They took turns. One was feeding him, one was fondling or gently sucking on his dick, the third was in a chair facing the bed, legs wide apart, stroking her cunt for his enjoyment. Two mouthfuls, then change. By he time he finished the food, he was stiff and twitching, but hadn't come. He was getting the idea. They were clearly determined to keep him hard and aching all day. \"Too bad it is all ending today,\" he thought.\n\nJeff's three nymphs got up on their hands and knees on the bed, side by side, with Kathy in the middle. He watched them as their hands came down and played with their pussies, stroking them, opening them to his gaze and dipping a finger in every now and then. He stood there almost helpless to move, staring at the sight before him. The three red pussies were looking back, and each anus winked at him. He kissed Kathy's cunt softly, then Elizabeth's and Rebecca's. He went back in the cycle, touching, licking, probing, one after the other, spending maybe 30 second on each. \n\nTheir differences became clearer as he got to know them more intimately. Kathy's cunt lips were full and dark in color, with a bright coral inner gash and a ruby red clitoris. The size and color was more subdued in Elizabeth, but although it was very tight, her pussy gaped open more, with a beautiful layered channel disappearing deep into her. Rebecca's was almost pink in comparison, but with edges that were still a little red and puffy from the day before. He kept doing his rounds, and slowly extended his area up the perineum to their assholes. Kathy and Elizabeth reacted with deep moans of pleasure, but just like the other two had done in the days before, Rebecca hesitated and pulled away a little.\n\nJeff held her hips, firmly but gently and spent more time on her. She relaxed and started pushing back. He then dipped his finger in her pussy and slowly pushed into her anus. She gasped, but kept still. When he withdrew, she made a small protest sound, but stopped when she heard the other two respond in turn to his anal probing. He went back to his cycling, his prick jutting straight out, a dark red spear of flesh, dripping and twitching. Suddenly he had to do something more. He moved up to the pussy he was at and slid his dick in to the hilt with one stroke. \n\nElizabeth jumped as if she had been skewered and let out a sharp cry. He pumped in and out five or six times, slowly and deeply, then moved one over. Kathy reacted the same way when Jeff once again slid to the full depth of his hard prick. She accommodated him with ease, yet held his prick like a hot glove. He gave her the same few strokes, then moved to Rebecca. She knew what was coming by then and had her tail in the air, inviting him in. It wasn't quite so easy getting all the way into her succulent cunt, but what a feeling, gripped tight in a velvet vice, bottoming out, then sliding through into her womb. \n\n\"Aieeee!\" she cried out with passion and perhaps a little discomfort. \"You are ripping me apart!\" Jeff pulled back and slid in, again five or six times, then pulled out. \n\nJeff looked again at the three, their hands were now holding open the deep channels he had just probed, and their secretions were dripping down their legs. Back again he went. Dipping in one for a while, then another, and another. The pace increased, and he now had his finger on each clitoris as he pummelled each cunt. Elizabeth came first, with a crying, wailing sound from deep within her. He rode her until she calmed down and went back to the other two. Rebecca was next, a sudden spasm overtook her and she threw her head back, neck muscles rigid, and clasped his prick so tight with her inner muscles that he was unable to move. She shook and cried out, then just as suddenly collapsed. \n\nKathy was waiting patiently for her turn. She turned her head and looked at him for the first time since she got into position. Her expression was one of deep joy. \"Take your time,\" she whispered. \u2013 \"if you can.\" Jeff smiled back and entered her, slowing down the pace once again. She sighed with contentment and fucked him back with a slow, steady rhythm. He reached under her arms and held her heavy breasts in his cupped hands, not squeezing, just gently jiggling them and sliding his palms over her rock hard nipples, then held her gently again. She reached under and cupped his balls, feeling them and sliding her hand all over his sack, holding with gentle pressure. He kissed her neck and she turned her head again. Their tongues entwined as they kissed with abandon, necks straining with the awkward position. \n\n\"Touch my ass. Please, - my ass,\" she whispered. Jeff kept stroking her pussy, while he dipped his fingers in her nectar and started circling her anus. She was impatient, and raised her ass to encourage him inside, and he obliged, his finger slipping easily inside, - then another. \n\nJeff felt another hand on his balls. Rebecca! She pressed against his back and kissed it. Her hard nipples pushed against him, and he twisted around for a kiss. Her eyes were moist and wide open. She kissed and breathed in his ear, staring at his prick, disappearing and appearing from her mother's cunt, and at his fingers deep in her mother's ass. She breathed harder, aroused once more. \n\n\"It's so beautiful,\" Elizabeth said in his other ear, also kissing him. \"So beautiful...\" She stroked her mother's back and the globes of her ass. She dipped her fingers in Kathy's pussy and moved them to her mother's ass, pushing his hand aside. Her fingers slid into the willing asshole, and she began a slow stroke, in time with his plunging prick. Rebecca was suddenly in position by her mother's side again, back swayed and with her hands busy in her own cunt. They came out dripping, and with just a little grimace, she quickly slid them into her own asshole. After a few strokes, however, she went back to her own pussy, pinching and pulling. Kathy suddenly pulled away, and Jeff's dick stood swaying in the open. She reached down and positioned it at her asshole. \n\nElizabeth's eyes opened wide as she pulled her fingers out. \"You can't...\" she started, but by then it was obvious that he could, - and would, His prick already moving firmly into Kathy's ass. Rebecca could tell that something was happening. She sat up and looked as well, with a look of astonishment, rapidly turning to fascination and sheer lust. \n\nElizabeth was equally fascinated. \"Me too,\" she said hoarsely. \"Oh god, do me too!\" Jeff gave Kathy's ass some more strokes, then placed his prick at Elizabeth's inviting anus. She pushed back, but was still too tight for entry. He used three fingers, then four and told her to relax her sphincter. She did, and he quickly put his dick at her back door again. This time it popped inside and he continued with a slow, steady shove. She was incredibly tight in that virginal hole, too. The texture was so different, with a different slickness; the ring of her ass held him in and her internal muscles spasmed around him. He pulled out and pushed in once, twice. Then back to Kathy's ass. Rebecca had watched in fascination as Elizabeth was opened and finally allowed him inside. She looked at Jeff uncertainly, half wanting to try it as well, but unable to bring herself to do it. \n\n\"Jeff, - I don't think I want to...\" She trailed off with an unhappy face, as if she felt she had let him down. Jeff slowed down his action and smiled at her. That's OK, little one,\" he said tenderly. \"Do you just want to watch or do you want me to do your beautiful pussy some more?\" \n\nShe laughed happily, and took her place again by her mother's side. \"Yes, please, some more in my pussy would be nice.\" \n\n\"Can we do that, too, Jeff?\" asked Elizabeth, \"I am getting a bit sore back there...\" Jeff pulled out of Elizabeth and looked questioningly at Kathy. She said nothing, but the way she grasped his prick and stuffed it back in her ass needed no words to let him know her desire. \n\nOnce again Jeff did his duty to the three red-tailed dears in front of him, keeping each of them panting for more as he switched. Every hole was wonderful, every woman straining and reaching for a mounting orgasm. He had reached a plateau where he was indefatigable, He felt like he could fuck like this for hours, always on the brink, but never going over the edge. It didn't last of course. Rebecca came with a rush, then Elizabeth, each dropping down on the bed as the aftermath of another intense orgasm shook their bodies.\n\nKathy and Jeff were left by themselves again, and he kept switching from one hole to the other, Kathy's hand helping the transition eagerly. \"I want your seed in my womb,\" she gasped. \"I am on the pill, so don't worry, but I want to feel it spurting in my womb.\" He came, she came. They both stiffened in every muscle and almost rigidly he pulsed inside her while she grasped him inside and sucked it out of him. Then they fell to the bed, their limbs tangling with the others as they lay there. \n\n\"Oh my God! That's only number one for today,\" he thought dreamily. \"And they are going to keep teasing me all day, I just know it.\"\n\nThe girls and Kathy decided they were at least going to set him up with supplies for the coming week, so after lunch they went shopping again, piling into the jeep as usual. The drive to town became one long sex-show, as they drove through the uninhabited area from the remote house. Kathy wore a loose long skirt and a shirt, buttoned down the front. Elizabeth wore loose shorts and a t-shirt as usual, and Rebecca a short skirt and a halter top, also buttoned in the front. Kathy opened her shirt as they drove away, her breasts happily sticking out from underneath. Her skirt fell apart over her legs, showing that she wore no underwear. Spreading her legs, she lazily stroked her pussy, looking at Jeff the whole time. She came with a shudder, dipped her fingers in her pussy and brought them to his lips. \"Just an afternoon snack,\" she said mischievously, leaving her damp cunt open to his eyes. \n\n\"Hey, Jeff,\" said Elizabeth from the rear. She had her legs on the back of his seat and looking in the mirror, he could see up her loose shorts to her equally red, equally aroused and equally bare cunt. She too began to masturbate for him, but then Rebecca's hand came sneaking down to take over the stroking. She opened Elizabeth's cunt lips for him to get a better look, and pushed two fingers deep in her hole, leaking juice all down her legs. Jeff was struggling with the driving and the mirror. The mirror won, and he slowed down at the side of the road. Elizabeth was soon at her climax, and watched his eyes in the mirror the whole time. Her taste was equally intense when Rebecca offered him some from her fingers. ",
        "Jeff was about to start up again, believing the show to be over. He noticed Kathy leaning over the back of her seat, and saw her first kissing Rebecca's now naked breasts, then Kathy's head disappeared under the skirt. Elizabeth flipped the short skirt up, revealing Kathy lapping at Rebecca's naked cunt. No underwear there either. Another orgasm, another transfer of taste, - this time from Kathy's lips. \n\n\"NOW you can drive,\" said Kathy wickedly. \"You steer and I'll look after the stick shift.\" She quickly unzipped Jeff, released his hard cock, and held it gently, moving her hand slowly up and down. Occasionally she would lean over and suck it a little, then sit up and go back to the hand movement. He was throbbing the whole way to town, and occasional glances at the two bare pussies in the back didn't help. \n\nAs they came into town, Kathy tucked him back in and closed the zipper carefully. \"We don't want an accident in town,\" she said. He had no idea what they bought that day. It was supposed to be groceries, and it must gave been that, since they didn't run out of food, but they could have bought a hundred fake Christmas trees for all Jeff knew. The girls took every chance to display themselves to him, usually discretely, but several time just as people had passed and no one could see for a brief instance, and once when we were right in the sun and no one would have believed that they saw a beautiful red pussy in the middle of the street. Jeff managed to hide his condition by keeping his hand in his pocket and a good 'grasp on reality', but it was the hardest shopping he had ever done (pun intended). The trip home was every bit as interesting, as the girls started undressing as soon as they had left the town behind, - long before they were back at the house. He drove the last mile with three naked ladies standing up in the jeep, letting the wind flow wherever it wanted. \n\nTime was running short when they got back, but they still had time for one more experience. Interestingly enough, they all wanted their last time to be alone with Jeff. They looked at each other. \"But he can only come with one of us, how are we going to decide who...?\"\n\n\"Let me worry about that,\" said Jeff. \"Who's on first?\"\n\nSo one by one he made love to them, gentle caring love, with lots of kisses and stroking and nibbling. And one by one they slowly rose to their peak and tumbled over the edge in a deep, emotional and satisfying climax. Each was a little disappointed when he held back his own release, but accepted it gracefully, as he gave them a long goodbye kiss. \n\nFinally, he called them all together; back on the deck where they had so much enjoyment and where it had all started. All of them naked, the girls looked at his still hard prick, bobbing up and down with every heartbeat. \"Now girls, it's your turn to say goodbye to me and my friend here.\" They knelt before him and started worshipping his rock hard spear. Mouths were everywhere, and hands and fingers everywhere else. There wasn't a spot on his body that didn't get attention. Finally, he came in a great burst, spraying them with his cum as they looked up at him, and then sank to his knees with them as they held each other in a close embrace. \n\nThen it was time to pack up and leave. Everyone was a little teary, and the hugging, kissing and fondling went on while they packed. \"I love you, Jeff,\" said Rebecca, sobbing her heart out. \"Me too,\" said Elizabeth, not much happier. \"And me,\" said Kathy, suddenly serious. \n\n\"I know you do\", said Jeff. \"I love you three too, but it is not the' live happily ever after' kind of love. It is a deeply caring love, and 'wishing that everything that happens to you makes you happy' kind of love. But the 'want to live my life with you' kind of love takes a bit longer to develop, and you girls have plenty of time and opportunity to find it. And in the meantime, just think how much fun you could have with the boys at home. I'm sure they would appreciate a lesson or two\" \n\nKathy and the girls looked at each other. \"I think we need to have a talk about those boys, \" she said a little doubtfully. \"I don't want my girls to become promiscuous and sleep around with everyone.\"\n\n\"Oh mom, - we wouldn't do that!\" said Elizabeth. \"But I bet Bobby would love it if I showed him a thing or two.\" She grinned at Jeff and winked. Kathy sighed.\n\n\"There is one boy...\" said Rebecca slowly, her eyes starting to sparkle. Kathy sighed again.\n\n\"Oh well,\" she said resignedly, \"I guess I have to trust you to do the right thing. After all, that's what I have brought you up to. But what am I going to do, there isn't anyone for me back home.\" She looked at Jeff again. \"Oh God, I wish...\"\n\n\"Oh mom,\" said the girls as one and babbled on. \"There is that nice Mr. Fredericks down the road.\" \"And there are some really nice people at your work.\"\n\n\"I guess you're right\", said Kathy wistfully, \"but a lady can always dream, right? Will we see you again back in New Jersey, Jeff?\" \n\n\"I'd like that,\" said Jeff with a smile. \"We did get to know each other pretty well in a week, but I still know there could be more to this relationship, if we let it happen...\" They exchanged phone numbers, and then it was that time. They piled into the jeep again, with all the bags, and went to the airport. \"This is how it all started,\" said Elizabeth, \"with us all in this Jeep.\"\n\n\"Actually, it started in New Jersey,\" said Jeff. \"I had my eyes on you since before we boarded the first flight.\" \n\nJeff didn't want to stay and have a long farewell; it was hard enough to see them leave. They exchanged kisses and hugs, - kisses that made the other passengers raise their eyebrows. Jeff could read their thoughts: \"Lucky dog, - three of them!\" they all thought. Then it was all over.\n\nJeff got back in the jeep and headed to the nearest bar. \"I definitely need a drink,\" he decided, - \"maybe several.\" He wasn't very good company for anyone, having that look of \"don't even think of talking to me.\" He was cursing himself for letting them go like that. Now that they were gone, he had to admit to himself that he cared more for them than he wanted to think. Finally he headed back to the cabin, feeling lonelier than ever. \n\n\"I do want to see them again!\" he thought as he entered the cabin. He looked around the cabin, - it seemed cold and empty without them. He poured himself another drink and kicked off his shoes, feeling sorry for himself. \"Christ, - I can still smell them,\" he muttered to himself as he staggered to his bedroom. \n\n\"Surprise!!!\" he heard from three beautiful, naked redheads, waiting in his bed. Jeff was dumbfounded. \n\n\"Whaaat?\" he stammered incoherently. \"I didn't have that much to drink.\" \n\nThey started talking all at once. \"The plane was overbooked.\" \"We had to stay longer.\" \"The earliest seats they had were on Friday.\" \"They even paid us some compensation for being kicked off.\" \"Can you believe it?\" \n\n\"No\", sighed Jeff happily, \"but I don't care. You are still here!\" \n\n\"So what do you want to do next?\" he asked. His answer was three bodies wrestling him to the bed, stripping his clothes off. \n\n\"We need more lessons, of course,\" said Elizabeth. \n\n\"Yeah, Jeff,\" said Kathy. \"I have always wondered about...\" \n\nJeff silenced her with a kiss. \"Let's make a list. We have plenty of time now, don't we?\" "
    ],
    "authorname": "Alan D",
    "tags": [],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/fishers-catch-ch-02"
}