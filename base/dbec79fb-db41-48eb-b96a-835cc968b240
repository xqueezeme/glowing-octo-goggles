{
    "title": "Sizzling Embrace Ch. 07",
    "pages": [
        "I apologize for the delay in posting this chapter Folks. Got caught up with work. Cheers!\n\nComments, critiques and tips are welcome. \n\nTyler Tyron Wesley vs. Tanesha Ashton \n\nDedicated to Sexy Rash, my bootylicious big sis.\n\nMeeting the parents!\n\n***\n\n'Why the fuck is he staring at me?' Ty asked himself, trying not to fidget. He'd never felt that uncomfortable in his life. \n\nTy was sitting in a couch in Paul Ashton's luxury living room, pretending not to be bothered by the elderly man's intense gaze on him. Paul Ashton sat cross from him, in another couch tapping a foot against the plush rug beneath his feet. He'd been staring at Ty for what felt like hours. \n\nTy had gotten to the Ashton home at exactly ten a.m. Dora Ashton had met him at the door with a cheerful smile and waved him into a couch. Anyone looking at Ty wouldn't have possibly noticed how shaky he was inside. Or so he hoped.\n\n\"Paul will be with you in a moment Ty.\" Dora had informed him. \"Would you care for anything?\"\n\n\"I'm good thanks.\" He'd responded politely but Dora had tilted her head to one side and looked at him...assessing him.\n\n\"I think you need a strong drink. Scotch? Cognac?\"\n\n\"I'd rather not Ma'am.\" \n\n\"Dora.\" She'd corrected automatically. \"And Ty?\"\n\n\"Yes Dora?\"\n\n\"Relax.\"\n\nTy's eyes had widened in surprise. Then he nodded. And as he watched Dora leave, he wished he'd accepted the offer of the scotch. \"Fuck.\" He muttered to himself.\n\nNow, looking at the stern face of the elderly man sitting across from him, Ty couldn't help but feel he'd done something wrong. But what had he done wrong? Ty hoped the man remembered that he'd brought his daughter home before twelve midnight the night before, as he'd promised. By eleven twenty p.m. the night before, Ty's sleek metallic black Bugatti Veyron was parked in front of the Ashton Mansion. He clearly remembered how displeased Tanesha had been with that.\n\n\"We came too early.\" Tanesha had groaned.\n\n\"Sure about that?\" Ty murmured. \"Any later and Cole would have heard your scream of release.\"\n\n\"Skull...\" Tanesha slapped Ty on his arm, making him burst into laughter. \"You know that's not what I meant.\"\n\n\"Did you see your fathers face?\" Ty turned his head to look at Tanesha. \"I don't want to take chances.\"\n\n\"We could have danced a bit more.\" She whimpered.\n\n\"You call what we were doing dancing?\" Ty chuckled. \n\nTanesha giggled. \"No, I wouldn't call it that. But it's not my fault you didn't want to dance. I did love what we were doing though. But it was definitely not dan...\" Tanesha trailed off when Ty began to punch some buttons on the music console, immediately filling the car with the lovely violin orchestration that precedes Etta Jones' 'At Last'. She couldn't help the smile that brightened her face.\n\nTy got out of the car and quickly went around to Tanesha's side. He bowed and reached out to take her hand. \"May I have this dance Ma'am?\" \n\n\"It will be my pleasure.\" Tanesha responded like the lady she was, her heart fluttering inside her chest. \n\nTy drew her to him just as Etta James' melodious voice began to belt out the song. And right out there, under the stars, the young lovers swayed to that lovely song.\n\n'At last \n\nMy love has come along\n\nMy lonely days are over\n\nAnd life is like a song'\n\nIt was the perfect setting for that amazing song, Tanesha couldn't help but think as they moved to the tune. It was...magical.\n\n'At last\n\nThe skies above are blue\n\nMy heart was wrapped up in clover\n\nThe night I looked at you'\n\nTanesha looked up and found Ty's smoldering gaze on her. Her breath caught. That look never failed to turn her insides to mush. \n\n...And here we are in heaven\n\nfor you are mine...\n\nAt Last'\n\nWhen the song ended, they kept staring at each other, still completely lost in the magic of the song.\n\n\"Thank you for the dance.\" Ty said huskily, just as affected by their dance as Tanesha.\n\n\"Finally, our first real dance of the night.\" Tanesha whispered. \"I promise I'm going to sing this song to you...when you least expect it.\" She said shakily. \"I love you, Ty.\"\n\n\"I love you, Tan.\" Ty responded hoarsely. \"Ready to head in?\"\n\nTanesha's mood instantly changed. \"Will you call me when you get home?\" She asked in a small voice, trying very hard not to cry. She didn't want Ty to go. It felt as though she was losing him all over again. \"I don't have your number. I don't know where you live.\" She said pitifully. \"I don't know...\" She started crying. \n\n\"Give me your phone.\" Ty didn't think it was necessary to save his number on Tanesha's phone as his plan was to call her immediately he got home. But Tanesha was crumbling right in front of his eyes, and he needed to at least give her something.\n\nTanesha pulled out of Ty's embrace and went to the car to pick up her clutch. Then with shaky fingers, she opened it, took out her cell phone and gave it to Ty. Ty saved his number and gave the phone back. \n\n\"I'll call you immediately I get home.\" He assured her. \"I don't know how my day will go tomorrow. After my meeting with your father, I need to get back to the office to take care of some paperwork. We'll communicate and know when and where we can meet. Then I will take you to see where I live, okay?\"\n\n\"Okay.\" Tanesha didn't sound like her usual confident self and it was killing Ty. \"Hey come here.\" He crushed her to him and hugged her till she was calm enough to enter the house. \n\nTy knew for a fact that Tanesha had entered the house before twelve midnight. And although they'd talked on phone till dawn, the fact still remained that he'd managed to get Tanesha home before her father's curfew. So why was the man eyeballing him? \n\n\"So you decided to have sex with my daughter when you were supposed to be keeping her safe.\" Paul went for the jugular.\n\nTo say Ty was shocked would be an understatement. All the blood drained from his face, leaving him looking as white as sheet. He swallowed audibly. \n\n\"Why? Cat got your tongue?\" The elderly man raised an eyebrow, as if challenging Ty to disagree.\n\nTy didn't know how to respond to Paul's question. He also couldn't help but wish he could ask the man whether fucking his daughter had in any way prevented him from keeping her safe. He stared back at the man for a moment and then thought defiantly; 'fuck this'.\n\n\"I still kept her safe, Sir.\" He definitely wasn't going to lie. The man was obviously on to him. \n\nPaul's brows rose, this time as if to say 'what the fuck?' Then his mouth tightened in obvious annoyance. \"You sure did.\" He nodded. \"But as a father, it pisses me off that my daughter was being used...\"\n\n\"With all due respect Sir, your daughter wasn't being used.\" Ty rasped, irritation simmering through him. \"And I will appreciate it if you don't degrade what we have with such words.\" His body language was so tight and defensive.\n\n\"And what exactly do you have? Huh?\" Paul moved to sit at the edge of his seat, with his hand clasped on his knee, his eyes cold. \"She's just a kid. Suddenly finds herself in the grips of criminals who want to kill her. Has no one around to help her or give her hope. Then along comes a...good-looking chap. Probably shows her some kindness. She's vulnerable. It's only natural that she will develop feelings for the guy. But you...\" Paul pointed a finger at Ty. \"You were on a job. Knew what you were there for. Knew you had to be the professional that your superiors expected you to be...unless of course the rules have changed. Which I doubt it has. I know my daughter is beautiful. But a serious soldier doing his job shouldn't even notice that. But you don't just notice that. You go right ahead and take advantage of her. How do you put it...get your rocks off.\"\n\n\"That's not how it happened.\" Ty said quietly, the full import of the wrongness of his actions finally hitting him. \"I didn't take advantage of her.\" He rasped.\n\n\"Put yourself in my shoes for a moment, young man. I know you're not a father but try. How would you feel if you were me?\" Paul sat back and watched Ty. \"Someone may see it as romantic but I don't. As far as I'm concerned, you took advantage of my daughter's vulnerability.\"\n\nTy cleared his throat and took a deep breath. \"I'm so sorry you feel that way Sir. I understand how you would think that too.\" His voice was low. \"And I do apologize for not acting professional. But I'm not sorry or regretful for what I share with your daughter. I know how you must hate me for what happened. But I didn't plan what happened between Tanesha and I. In fact I tried to fight it. God knows I tried. Yes, your daughter is the most beautiful woman I've ever met. But what called to me was her inner beauty. What I feel for her is more than mere lust.\" Ty paused for a moment when Paul Ashton snorted in disbelief. He felt himself trembling from frustration...anger...he didn't know which. Ty took a deep breath, silently urging himself to calm down. \"I'm in love with your daughter, Sir. I know you'll probably think I'm just saying that to continue...getting my rocks off. But what I feel for her is real and is never going to change.\"\n\n\"Love is a strong word, young man.\" Paul said gruffly. \"Where I come from, you first introduce yourself to a girl's parents, court her, marry her, before you have sex with her. You decided to start with what's supposed to be last. Very disrespectful if you ask me. I'm so disappointed because I had better plans for my daughter. If for...\"\n\n\"Would you please permit me to court your daughter Sir?\" Ty asked, cutting Paul off. He moved forward to the edge of his seat. \"Please give me the chance to make it right.\" \n\nPaul gave a short humourless laugh. \"A little too late for that don't you think? Don't get me wrong young man.\" Paul frowned. \"I'm not saying you should court or marry my daughter. Hell, I should be telling you to stay away from her. I'm just stating facts and how I thought things should go for my daughter under normal circumstances...which this is not.\"\n\n\"I know. But I'm ready to do the right thing. Please permit me.\" Ty looked desperate. \"These past two months without her...not seeing her, not being able to talk to her has been...\" He shook his head slowly, his very soul showing in his eyes. \"It's been hell. The restlessness, the impatience, the numb feeling inside... I missed her so fucking much.\" He whispered, not even looking at the obviously shocked Paul who was staring at him. It was not every day Paul saw a strong proud male such as Ty completely bare his soul. \"I've always thought guys who allowed themselves to be completely smitten with girls were weak.\" He gave a short humorless laugh. \"Little did I know. I'm normally a strong guy. Strong as a brick. But your daughter turned my world on its axis. I couldn't stop loving her even if I wanted to.\" He looked up and fixed his intense blue eyes directly on Paul's. \"Please Mr. Ashton. I do respect and love Tanesha. Without your consent, I'll be forced to disrespect your family by dating your daughter behind your back. Because trust me, I will. But I want to do the right thing so please.\" \n\nPaul stared at Ty for a long moment. He had no doubt that Ty would do exactly as he'd said...fuck his daughter with or without his consent. \"Tell me one thing soldier. And I want the honest answer.\"\n\n\"I'll be as truthful as I can Sir.\"\n\n\"Whilst my daughter was on that Island, there was a time I was present during negotiations with ZONKAI. I spoke to...Skull, who gave me a very graphic detail of how he was going to cut up my little girl. I only got to know from my wife, last night, that you were Skull. Meaning you were the one I spoke to. True?\" Paul watched Ty. The soldier looked as if he was going to be sick.\n\n\"True.\" Ty whispered. He wanted to die.\n\nPaul nodded slowly, staring at Ty the whole time. \"So you saw how that affected me?\" He asked quietly.\n\n\"I did.\" Ty rasped, remembering how Paul Ashton had broken down and cried. \"I'm so sorry.\"\n\nBut the elderly man only shook his head. \"Don't be. You were only doing your job. But I hope that showed you how strongly I feel about my daughter.\"\n\n\"It did.\"\n\n\"She's my heart, Tyler.\" Paul's voice was barely above a whisper. \"You don't want to know what I'll do if you hurt that girl. Trust me on that.\"\n\n\"I understand, Sir.\"\n\n\"Do you?\" Paul tilted his head to the side. \n\n\"I do, Sir.\" Ty nodded. Hell, his admiral had warned him about the man.\n\n\"Good. I'm glad we understand each other. You can court my daughter but on one condition.\" \n\n\"Anything, Sir.\" Ty would have even gladly given one of his balls if that was what it was going to take.\n\n\"My daughter wakes up in my house every morning.\" The elderly man said, getting to his feet. \"You see, I'm very old fashioned. And till my daughter is officially living on her own, I'd rather see her come awake every morning under my roof and nowhere else. I call her a kid but at twenty-one, she's old enough to want to stay out late. I don't want to stifle my kids. But when I do a headcount in the morning, I expect to see my daughter. Got it?\"\n\n'What the fuck?' Ty's facial expression didn't change. \"Got it.\"\n\n\"Do we have a deal?\"\n\nWho was he to say no? \"We do, Sir.\"\n\n\"Great.\" Paul moved towards the bar. \"I would shake on it but I think a strong drink would be better. After all, it's not every day I come face to face with someone who has seen me at my lowest.\" Paul drawled, making Ty wince. \"Unless of course you'd rather not...\" Paul paused in the act of pouring scotch into a second glass.\n\n\"I'm on leave, Sir. And I must admit I've never needed a stiff drink more.\" Ty said drawing a chuckle from Tanesha's father.\n\nPaul came back to Ty, who was standing respectfully, and gave him a glass that was more than half filled with scotch. \"To new beginnings.\" He toasted, clicking his glass against Ty's.\n\n\"I'll drink to that.\" Ty nodded and took a sip of his drink. Both men chuckled softly as they took their seats. \"Thank you very much Sir.\"\n\nBut Paul waved his hand dismissively. \"Call me Paul. And don't thank me yet. That daughter of mine is one feisty girl. 'I know my right, I know my right'.\" He did a perfect imitation of Tanesha's voice, causing Ty to burst into laughter. \"Hope you're ready for all her drama.\" Paul said dryly, the expression on his face totally comical.\n\nTy couldn't stop laughing. That was a totally different side of the man who'd nearly made him shit his pants just moments earlier. Paul Ashton had a sense of humour after all. Ty thought that was surprisingly refreshing. \"That was a perfect imitation Sir...Paul.\" Ty laughed.\n\n\"Been with the kid her whole life, Tyler. I know my daughter. But know what is going to make your 'work' difficult?\" Paul asked, giving the word quotations with his fingers. \"She is very intelligent. And she knows how to argue her case to make her opponent come across as either the devil or an idiot. I pity you son.\" He chuckled, shaking his head.\n\n\"And why do you pity him?\" Dora Aston asked, entering the living room and going to sit beside her husband. \"What's that?\" She asked taking the glass of scotch from Paul and taking a sip.\n\n\"Want me to pour you...\" Paul began.\n\n\"No.\" Dora said giving Paul's drink back. \"So, why do you pity Ty here?\" She asked, elegantly crossing her legs.\n\n\"Well, Ty wants to court your daughter. I was only preparing him for what's coming.\"\n\n\"And what, if I may ask, is coming Paul Ashton?\" Dora turned stern eyes on her husband, who suddenly looked like a deer caught in the headlights of a car. Ty bit the inside of his cheek to keep from laughing.\n\n\"Dora, you know your daughter. I'm only...\"\n\n\"And you think Ty doesn't know her after being with her for a month? Give him some credit Paul. For all you know it was her feisty nature that attracted him to her in the first place...\" \n\n\"Really Dora?\" Paul murmured. \"You really think a hot-blooded young man such as Lt. Cdr. Wesley here actually waited to see our daughter in action before getting attracted?\"\n\n\"Well...\" Husband and wife turned their eyes on Ty. \"Tell us Ty.\" Dora looked very serious. \"What attracted you to our daughter?\" \n\nTy stared back at the power couple. Sometimes telling the truth was not a very smart thing to do. He didn't think it would be in his best interest to tell Tanesha's parents that he'd actually fallen in lust with their daughter immediately he'd first laid eyes on her...and she'd been fast asleep. Like the man had rightly pointed out, he was a hot-blooded young man. And that body... But don't let it ever be said that Ty Wesley was not smart. \n\n\"Her feisty nature.\" Ty said, managing to look all serious. \n\nAll three were quiet for about three seconds. Then the laughter erupted. They laughed as though they were in a comedy theatre. By the time Ty was ready to leave, there was an easy friendliness between himself and Tanesha's parents. As they walked him to his car, Paul and Dora told Ty they were going to be in London for about a week and asked him to keep a close eye on Tanesha as the attack on her had shown them that they had to be careful. Then Dora Ashton said something which totally blew out the deal Paul had with Ty.\n\n\"When you kids stay out late, it will be better for everyone if she spends the night at yours rather than come home late. We don't know who's watching the house, ready to pounce. I wouldn't want to stay awake wondering when she'll be getting home or whether she's been kidnapped.\" She turned to her husband. \"I'm right, am I not Paul?\" But before a confused-looking Paul could answer, she turned back to Ty, who was trying very hard not to laugh. \"Just let us know whenever you people decide she'll be sleeping over okay?\"\n\n\"Okay, Ma'...Dora.\" But for the presence of her frowning husband, Ty would have hugged the hell out of Tanesha's mother that very moment.\n\n\"Good. I don't want to take any chances.\" Dora smiled as she linked her hands with Paul's. \n\n\"Have a safe trip then.\" Ty said, stretching forth his hand to Dora but she rather drew him into a warm hug which ended when her cell phone rang. As Ty shook Paul's hand, he couldn't help but notice how pensive the older man looked. \"I take my deals seriously, Sir.\" Ty murmured. \"I won't break it.\"\n\nAnd that was all it took to bring a relieved look upon Paul's face. \"Good.\" Paul nodded. \"She does have a point but...\"\n\n\"I understand.\" Ty said, wondering if Paul would shoot him if he added that he would always make sure Tanesha was home before daybreak. Surely she could get some few minutes sleep before the so-called headcount. A look at Paul's face however stopped him from adding that. He turned to smile at Dora when she rejoined them.\n\n\"May I be permitted to take Tanesha out this evening please?\" Ty asked politely. There's a lot we need to talk about...\"\n\n\"How about she having a sleepover at yours? After all...\"\n\n\"Dora...\" Paul growled, cutting his wife off.\n\n\"What?\" She turned to look at her husband. \"It's a Friday. She doesn't have to go to school tomorrow and he doesn't have to go to work either. He did say they have a lot to talk about Paul. And we both know they do. All I'm saying is that they should relax and have that talk. He can bring her home tomorrow.\"\n\nPaul locked eyes with Ty for a moment. \"Just this once, soldier.\" The older man rasped.\n\n\"I promise, all we're going to do tonight is talk Sir.\" Ty said with all sincerity. There was a lot he and Tanesha needed to talk about. Yes, he would love nothing better than to fuck her brains out till morning. But they really needed to talk. \"I'm sure you'll agree with me that after three months, there's a lot I have to say to your daughter. I mean I did deceive her. And in order to court her the right way, there should be no questions, confusion or mistrust between us. It's very important to me. Please.\"\n\n\"Alright, alright, I get it.\" Paul said tightly.",
        "\"Relax darling.\" Dora said, rubbing her husband's back soothingly. \"Tanesha did tell me this morning that she plans on spending the weekend with you anyway.\" She informed Ty who managed to mask his surprise. \"She does have a lot of questions.\"\n\n\"I'm not surprised.\" Ty responded. \n\n\"Just make sure she's safe.\" Paul said curtly. He mentally kicked himself for not making his plans known to his crazy wife before having that talk with Ty. She'd effectively thrown all his tyrannous plans out of the window. No man liked the idea of someone fucking their little girl for goodness' sake, Paul repressed the growl that threatened to come out.\n\n\"I'll protect her with my life.\" Ty vowed with gusto.\n\n\"Well, your life wouldn't be worth much if something happens to her on your watch anyway.\" The elderly man muttered, pulling out his cell phone from his pocket and stepping aside to receive a call.\n\nDora moved closer to Ty. \"Go easy on her will you?\" She murmured.\n\nTy tried but couldn't suppress his blush. \"I meant what I said Dora. Just talk.\"\n\nDora snorted. \"Yeah right. Get outta here Ty.\" She laughed as she watched Ty getting into his beautiful grey Mercedes-Benz G-Class luxury SUV. \n\nAnd even as Ty waved at Dora, he couldn't keep the grin off his face. His summon had gone better than he'd expected. Now, with the consent of her parents, he was going to court the woman he'd lost his heart to. Ty was the happiest man on earth. \n\n***\n\n\"Are you sure you're okay?\" Ty asked for the third time that evening.\n\n\"I'm fine, Ty.\" Tanesha smiled but Ty didn't look like he was buying it. \"Will you stop looking at me like that?\" Tanesha murmured, staring down into her plate. \n\n\"Like what?\" Ty asked, his eyes intense and curious as he tried to read Tanesha. He couldn't help but notice how preoccupied she'd been the whole evening. \n\n\"Like...that. You know what I mean.\" Tanesha popped a juicy scallop into her mouth and then speared another with her fork. \"Open up.\" Ty opened his mouth and accepted the scallop Tanesha offered.\n\nThey were having dinner in a very posh restaurant. Ty had picked her up from home after her parents had left for the airport, looking casual but classy in a button down black shirt, black jeans and unique grey ankle boots that looked expensive and so manly. He looked so fucking sexy Tanesha had to talk herself out of dragging him into her room and having her way with him. In a simple, chic, flowy, mini shift dress, with her long hair flowing down her back, Tanesha looked sexy yet modest. Ty couldn't keep his eyes off her.\n\n\"It's rude to stare you know.\" Tanesha had said at a point.\n\n\"That dress... It's rather unfortunate I'm going to strip it off you later tonight.\" He'd murmured sexily, sending delicious shivers down Tanesha's spine. \"Where are your brothers?\"\n\n\"They're in their rooms. Leon doesn't live here but he's decided to come stay till my parents get back. They know I have a date but are not aware that you're in. Let's get out of here before...\"\n\n\"I'd like to meet them.\" Ty had stated.\n\n\"Ty...\"\n\n\"I'm not leaving here till I meet them Tanesha.\" Ty had insisted.\n\n\"Don't say I didn't warn you.\" She'd muttered as she left to go and fetch her brothers. \n\nAnd what an interesting meet it had been. Both brothers had been thrilled with the fact that their sister was going out with someone who had been honoured by the president himself. They didn't give Ty the usual third degree they gave to other unfortunate males who dared showed interest in her. Tanesha had been surprised and happy at how well Ty had gotten along with her brothers. In fact they'd had so much to talk about that she'd had to drag Ty out of there to dinner. It looked like Ty had managed to warm himself into her family, Tanesha couldn't help but acknowledge. She'd been shocked when her mother had told her before leaving for the airport that Ty planned on taking her out that evening. Though she'd known they would be going out that evening, she'd been surprised her mother knew too. She'd been even more surprised when her mother had added that they were probably going to stay out late so she might be spending the night at Ty's. Then she'd shocked her in a typical Dora Ashton style by reminding her to use protection. Tanesha's mouth had still been opened as her mother left her room. But the shock of her mother's words was nothing compared to the panic that had gripped her when somehow, her mind had snapped back to the night before...\n\nThey'd fucked...without protection. She remembered the feel of his cum dribbling down her thighs and groaned as she sat down heavily on her bed with her face buried in her palms.\n\n\"Oh my God.\" She gasped. What if she was pregnant already? But then it had been just once right? Even when Ty had spilled inside her more than once on the Island, she hadn't gotten pregnant. So just one time couldn't possibly result in a pregnancy could it? \n\nBut even as she thought about it, she knew that it was silly to think it wasn't possible to get pregnant. On the Island, desperation had led them both to act reckless. But back to reality, it was a totally different deal. Tanesha knew she had to talk to Ty about it but at the same time, she didn't want to come across as someone who always had issues. If she wasn't being kidnapped, she was freaking out over the possibility of a pregnancy. So Tanesha resolved to forget about it and simply enjoy having her man back in her life. But it looked like Ty had easily picked up on her mood.\n\n\"So tell me what my dad had to say.\" Tanesha smiled sweetly, hoping to distract Ty. He'd kept telling her to be patient whenever she asked, making her even more curious. She was really dying to know what went down. Especially since her traitor of a mother had confessed that afternoon, that she'd told her father all that she'd told her about Ty. She should have known better than to tell her mum everything as those two enjoyed gossiping about their kids. \n\n\"I'll tell you when we get home.\" Ty grinned, leaning over to wipe a speck of sauce off Tanesha's chin with a napkin.\n\n\"Ow come on Sku...Ty. Why can't you tell me now?\" She groaned, making Ty laugh softly.\n\n\"We're almost done here, Tan. Ready for desert?\" \n\n\"I don't think I have room for desert.\" Tanesha sighed putting her cutlery down.\n\nTy signaled the waiter. \n\n***\n\nDuring the entire drive to Ty's home, Tanesha had her head resting against his shoulder. He would intermittently drop a kiss against her hair. Whenever they had to stop at a red light, Ty would do more than drop a kiss on her head...he would tilt her head back and kiss her good. By the time they got to Ty's house, they were both damn horny. \n\nWhen Ty entered the gate of his home, Tanesha's eye widened in shock. \"Oh my God, I've seen this house before in a magazine.\" She gasped. \"Fifty most unique hou...is it yours?\" Tanesha whipped her head to the side to face Ty.\n\n\"Yep. Dean built it for me.\" Ty responded with a chuckle, getting out of the car.\n\n\"Dean? I can't believe I have such a talented individual as a friend and I didn't even know it.\" She gasped, stepping out of the car. \"It's even more beautiful seeing it up close.\"\n\n\"Come on.\" Ty drew a gobsmacked Tanesha into the house.\n\n\"Oh my God, it's true.\" Tanesha screeched immediately she stepped into the house. \"Anyone outside can see us in here.\" She stared at the in-door swimming pool longingly. After all that food, the idea of a swim sounded so appealing. \n\n\"Does that bother you?\" Ty asked, sliding his arms around her waist from behind. \n\n\"How can we...\" She trailed off, feeling the blood rush to face. She couldn't believe the first thing that had come to her mind was sex. But then whenever she was around the man, her body ached for him. She wanted him with every breath she took. As embarrassing as that was, she didn't have any control over that. \n\n\"How can we what?\" Ty knew exactly what Tanesha had been about to ask. He burst into laughter when Tanesha groaned, obviously embarrassed. The girl was so sexy he sometimes forgot she'd actually been a virgin till not too long ago. \"You might like it if you actually try it.\" He murmured, nuzzling her ears. \n\nAt that particular moment, whilst they could clearly see outside, anyone watching them from outside would only see shadowy figures, thanks to the type of lighting he was using at that moment. Besides, thanks to his very high fence wall, no one could even see them. Ty decided not to tell Tanesha though. He wanted to see whether she could let go, forget about the fact that someone could be watching, and simply have fun with him.\n\n\"You sure about that?\" Tanesha giggled, turning around to lay her head on Ty's chest. \"I don't think I can if I knew someone was watching.\" Tanesha murmured?\n\n\"Sure?\" Ty drawled, with a raised brow. \"'Cause I remember vividly when a certain sexy chic got so turned on she would have allowed me to fuck her in the presence of about ten men.\" \n\n\"Oh God, don't remind me.\" Tanesha groaned. \"That was different.\"\n\n\"How different was that?\" Ty murmured. \"You had roughly ten pairs of eyes trained on you but... You know I could have fucked you right there...in front of all those men, and you would have allowed it, don't you?\" \n\n\"I was tied up for goodness' sake, Ty\" Tanesha moaned, leaning her forehead against Ty's chest. \"Besides you knew I had the hots for you.\"\n\n\"No I didn't know that.\"\n\n\"Bullshit. You knew it and used it to your advantage. I wasn't born yesterday darling.\" Tanesha snorted. \"I tried to fight it but...your touch was killing me.\" She shuddered, remembering how good it had felt having Ty's hands on her whilst she remained helpless. It had been an exhilarating experience. \n\n\"If it's any consolation, that's the hardest thing I've ever had to do in my life...letting you go. I wanted to fuck you so bad I was shaking.\" Ty groaned, leaning down to lick at a corner of Tanesha's mouth. \n\nTanesha couldn't hold in her lustful moan. \"Thank you for not going through with it.\" Tanesha murmured against his lip. \"I would have been devastated afterwards. Not to mention humiliated.\" She twisted her head to look out with a slight frown on her face. \"I'd love to get into that pool but...\" Ty's fence wall looked very high but still...one couldn't be too careful. \n\n\"Let's.\" Ty stepped back and began to take off his boots, clothes and watch, leaving on his boxer briefs. And looking at his body, Tanesha totally forgot about the fact that they could be seen from outside. Ty then proceeded to take off her accessories and dress. Her eyes however widened when Ty unhooked her bra. \"Relax. No one is watching.\" Her half-hearted protests died on her lips when he bent down to suck tenderly on each nipple till both hardened into peaks. \n\n\"Ty...\" Her head was thrown back in such utter bliss she didn't even protest when he went down on his knees in front of her and pulled off her panties. \n\nTy leaned forward and dropped a kiss on Tanesha's shaved mound before getting to his feet. \"You have one hell of a sexy body, woman.\" He murmured huskily. \n\n\"You're a fine one to talk Sir.\" She murmured, going up on her toes to kiss Ty lightly on the mouth. \"But why do you get to keep your boxers?\" She asked as her hands slipped inside Ty's boxer briefs to caress his butt.\n\n\"Hey cut that out.\" He groaned, taking Tanesha's hand and drawing her towards the pool. \"I promised your parents okay?\"\n\n\"That?\"\n\n\"That we were going to talk tonight and nothing more.\" \n\n\"Seriously? It's not like they'll even believe you.\" Tanesha looked incredulous. \"I mean it will be a cold day in hell before my mother would believe I'd sleep over and not have sex with you.\"\n\n\"Well, they not believing doesn't mean I shouldn't keep my word.\" Ty said as they slipped into the pool.\n\n\"Hmmm...lovely.\" Tanesha moaned, loving the feel of the water on her body. \"So you actually plan on keeping that silly promise?\" She purred, playfully batting her lashes at Ty.\n\n\"I sure do.\" Though Ty looked amused, the heat and hunger in his eyes couldn't be masked.\n\n\"We'll see about that.\" Tanesha said just as she disappeared into the water, leaving Ty to groan in frustration.\n\nThey swam for about thirty minutes before relaxing on the steps, with Tanesha's back against Ty's front. They sat in a comfortable silence, with Ty playing with Tanesha's hair. He'd missed doing that. After a while, he began telling her about his meeting with her father. By the time he was done, she was laughing so hard.\n\n\"Your mother is something else.\" Ty chuckled, remembering Dora's silly appeal for him to go easy on Tanesha.\n\n\"You haven't seen the half of it.\" Tanesha laughed. \"I remember going on a trip with her some years back to...I don't exactly remember where we were traveling to. But at the airport, she was asked to strip. My dear mother gave a sweet smile, and went like... 'Want me to strip? Gotta give me some music.'\" Tanesha had to pause as Ty was howling with laughter. \"Wait, wait, it gets better. When she saw the shocked faces of the officials, she quickly got serious and added... 'You might as well throw in a pole whilst you're at it. You see, when I drop it hot like that, I'm gonna need me a pole to get back up.'\"\n\nAt that point Ty was laughing so hard his sides hurt. \"Oh my God, are you serious?\"\n\n\"I was right there.\" Tanesha laughed. \"You should have seen the faces of the two ladies who she'd said that to. After the initial shock, they both burst into raucous laughter. In fact they laughed so hard their supervisor heard and came to check what the problem was. They told him they were done searching my mother. She's three gallons of crazy in a two gallon bucket.\"\n\n\"Fuck, that's a good one.\" Ty panted. \"Oh my God, I don't remember the last time I had such a good laugh. Come on, let's go up.\" Ty said getting up. \n\nHe picked up Tanesha's stuff and turned towards the stairs which looked like it had been made from glass too. Tanesha turned to look at Ty questionably, drawing a chuckle from him.\n\n\"It's tiles.\" And at the comically incredulous look in her eyes, he burst into laughter. \"You have the most expressive eyes darling. \"You sure you can lie in court?\"\n\n\"Lawyers don't lie.\" Tanesha laughed.\n\n\"Yeah. And pigs actually fly.\" Ty retorted, earning himself a slap on the arm.\n\nIn his room, they took a quick shower and then got into bed, with a boxer clad Ty spooning behind a very naked Tanesha. \"You sure you don't have blinds or something?\" Tanesha whimpered. \n\nWithout a word, Ty opened his bedside drawer and took out a device, drawing Tanesha's eyes to the framed photo of herself on the bedside table on Ty's side. And even as a choked sound tore out of her throat, Ty proceeded to activate his automatic blinds.\n\n\"Better?\"\n\nBut Tanesha didn't answer him. She stared openmouthed at the picture. She recognized Ty's bed on the Island. She was fast asleep in the bed but the picture was so beautiful it looked as though she was actually posing. \n\n\"You Asshole.\" Tanesha whispered. \"You even had a picture of me whilst I had nothing...whilst I thought the worst. Do you have any idea...\"\n\n\"Hey, hey...look at me.\" Ty touched her chin and turned her head to face him. \"I'm sorry for putting you through that. Have any idea the number of times I came close to barging into your house and just damning the consequence? It wasn't easy, baby. This picture kept me sane Tanesha. But look at us now. We're together just as we wanted. It pays to be patient don't you think?\" \n\nTanesha didn't respond. She put her head on the pillow and stared at nothing. She was surprised at the intensity of the sudden anger within her. She'd thought she was over Ty's silence and deceit but she realized she wasn't after all. \n\nTy could feel the tension within her. Though the plan was to talk, he decided to allow Tanesha to calm down before they did any serious talking. He certainly hadn't thought seeing he had her picture would upset her that badly. Ty clicked on a remote and instantly flooded the too quiet room with tunes from a collection of low soothing music from the nineties. He'd always been a sucker for old tunes thanks to his dad. He felt Tanesha tense up even more against him when Ricochet's 'Connected at the Heart' began to play and immediately threaded his fingers through her long hair, stroking her soothingly. \n\nTanesha couldn't help but freeze at the very first line of that beautiful song. If felt as though Ty was saying those words to her. \n\n'There is a picture in the pocket of my shirt\n\nI always keep you next to me\n\nWhen I'm away from you all I do is hurt\n\nI think about you constantly'\n\nTanesha felt Ty's fingers running through her hair soothingly...almost as if he knew how tightly strung she was. She loved him so much in that moment it hurt. She felt her chest tighten as her eyes flooded with tears. Suddenly it didn't matter at all that Ty hadn't contacted her. The most important thing was that they were together again. \n\n'But you're always with me deep inside\n\nI can feel you when I close my eyes'\n\nIt had indeed been hell but she was finally right where she belonged...in his arms. Tanesha's eyes fluttered shut as she listened to that lovely song, her tears silently sliding across her face and down her temple in rivulets, wetting the pillow beneath her cheek. \n\n'We are connected at the heart\n\nNothing on earth can keep the two of us apart\n\nTime has no meaning\n\nDistance has no power'\n\n\"I love you Ty.\" Tanesha blurted out irrepressibly, her voice shaking with emotion. She just couldn't stop saying those words out loud. She might as well have commanded the wind not to blow. God, how she loved him.\n\n\"I love you too angel.\" Ty murmured against her hair. \"So damn much.\"\n\n'It's never too late\n\nNo matter how long\n\nWe're never that far\n\nWe are connected at the heart'\n\nTanesha had been affected by lots of songs but none came close to that song playing at that very moment. She shuddered to think about what would happen if Ty were no longer part of her life. She definitely never wanted to find out. And even as the beautiful song washed over them, her fingers found and entwined with Ty's.\n\n\"Why did you open the door after I'd specifically asked you not to, Tanesha?\" Ty asked. He'd been dying to know since his heart nearly stopped at the sight of Tanesha with a grenade wielding Mickey, that fateful day, three months earlier.\n\n\"What?\" Tanesha whispered. She knew exactly what Ty was asking about. She was simply shocked at the suddenness of the question, that was all.\n\n\"On the Island. I told you not to open the door to anyone but me. I saw the door later and it was obvious no one broke it down. I just... How did they get it?\" \n\nTanesha took a deep breath, discreetly wiped her face with the edge of the covers and then turned within Ty's arms to place her head on his shoulder. \"Mickey...Mickey told me you said he should bring me.\"\n\n\"And even after what I'd...\"\n\n\"I saw him as a friend, Ty.\" Tanesha's voice was barely above a whisper. \"And in the end he was. He saved my life Ty. I'm sorry I went against your orders but I really thought you had sent him.\" Tanesha rubbed the creases off Ty's forehead. \"Hey, stop frowning.\" She said softly. \"It's over. And we survived. I can't believe they all died though.\"\n\n\"All except Ghost and Jess.\" Ty rasped.\n\n\"But I saw Jess lying on the floor...dead.\" Tanesha looked confused.\n\n\"Not dead. Just unconscious. He's in prison. I never told you this but...sorry about Mickey. He was a good kid.\"\n\n\"Yeah. I still can't believe his own uncle shot and killed him.\" Tanesha let out a sad sigh.\n\nThey talked at length about their time on the Island, with Ty answering Tanesha's numerous questions and finally helping her understand exactly what had been going on the whole time. She knew her kidnap was due to the fact that she was her father's only daughter but she didn't know the details and the level of danger she'd been in. By the end of their talk, Tanesha felt so lucky and grateful she didn't know what to say.",
        "\"Thank you for saving my life.\" She said, her eyes shining with gratitude.\n\n\"And thank you for saving mine.\" Ty replied right back. He felt a shudder pass through Tanesha at his words and instantly regretted making her remember how she'd had to kill. Ty groaned and tightened his arms around her. \"Hey, you did good. That idiot would have killed me if you hadn't reacted as you had. I'm forever in your debt, Madam.\" He purred jovially, trying to ease the pensive atmosphere. \"Anything you want, I'll do for you.\"\n\nTanesha laughed shakily. \"Sure about that?\" \n\n\"Positive. Your wish is my command.\"\n\n\"Can I make a wish now?\" Tanesha tilted up her head to look into Ty's eyes.\n\n\"Let's hear it.\"\n\n\"Will you make love to me?\" She asked with a wicked twinkle in her eyes.\n\n\"Nice try. Ask me again in the morning.\" Ty answered with a straight face. After all, he'd only told the power couple they were going to talk that night. What would or could happen the next morning had never come up. \n\nTanesha burst into laughter. \"Ow come on, what happened to my wish being your command...\"\n\n\"Your father happened.\" Ty chuckled. \"So...still not talking to the guys?\" \n\n\"Oh my God, those guys are so crazy.\" Tanesha exclaimed, turning to lie on her back. \"You should see the messages they left on my phone this morning. Each of then left very silly lewd messages.\" Ty couldn't stop laughing at the shocked expression on Tanesha's face. \"Oh God, I would have turned as red as a tomato if I were light-skinned. I almost didn't go to Cole's office today but I needed those cases so I had to. They know I'm just a kid right?\" Tanesha gave a mock scowl.\n\n\"Kid? Now you're making me feel as though I'm robbing the cradle.\" Ty groaned, remembering Paul Ashton referring to Tanesha as a kid too. \"Never tell Cole you're a kid. Not after what he saw last night.\" Ty chuckled.\n\n\"Oh Christ, don't remind me.\" Tanesha groaned, moving to press her face against Ty's chest. \"That was...\"\n\n\"And I can bet my last cent he's told the others.\" Ty laughed when Tanesha groaned even harder. \"That's why they sent you all those messages.\"\n\n\"They're a crazy bunch.\" Tanesha groaned. Then in a soft voice added: \"You told me about them on the Island, remember?\"\n\n\"Uh-huh.\" Ty nodded. \"I find it very difficult not to talk about them. They love you Tanesha.\" Ty said quietly.\n\n\"I know.\" Tanesha looked up at Ty. \"I love them right back.\"\n\n\"You have no idea how jealous I've been of their relationship with you for the past two months.\" Ty said squeezing Tanesha to him. Every day they'd been apart had been fucking hell. \"I missed you so fucking much.\" He rasped.\n\n\"Serves you right, soldier.\" Tanesha laughed softly. Leaning up, her hand cupped Ty's cheek tenderly, and then with lips so soft any man would wish to devour, sensually moved against his, savoring, teasing and arousing him with ease. She kissed Ty as if he was the most delicious thing she'd ever tasted, the unmistakable control and possessiveness of her actions thrilling him to no end. He definitely lived for her kisses. By the time Tanesha drew back from Ty, his breath was coming out harshly, his dick was hard as nails, and his eyes had darkened with arousal. \"Ty?\" Tanesha called softly, loving the feel of Ty's rock hard cock against her and wishing she could get it out of those boxers and inside her. But she respected his decision to honour the promise he'd made to her parents so decided not to push. \n\n\"Yes baby?\" Ty's voice was low, deeper and raspy, dripping with need. \n\n\"Don't make me ask come morning. Sleep tight.\" And even as Ty's brow raised at that sexily given instruction, Tanesha kissed him lightly on the cheek, wriggled till she was comfortable, and then promptly went to sleep.\n\nTy tried to bring his breathing under control as he watched a sleeping Tanesha. He wasn't surprised at how fast Tanesha had fallen asleep. In fact he was surprised she'd been able to stay up till that time as they'd been up till dawn chatting. Looking at her face, so beautiful, angelic and relaxed in sleep, Ty marveled at the intensity of feeling he had for her. He'd never felt that drawn to a person. Tanesha was not just in his blood, she owned his heart. And Ty didn't want it any other way. During Kyle and Aaron's wedding rehearsal a week earlier, Ty had kept picturing himself and Tanesha at that altar. And throughout the rehearsal, he'd wished with all his heart that Tanesha would one day do him the honours by agreeing to stand beside him at an altar...in holy matrimony. He'd felt so shaken inside after the rehearsal because never had he even jokingly thought of marrying any of the women he'd been with. But he knew that if he and Tanesha ever decided to take that step, he would be the happiest man. He wanted that. Technically, they'd been together for only a month, but Ty knew for a fact that he wanted her in his life...permanently. If he had to kidnap her all over again to make it happen he would, Ty thought with a chuckle. But then suddenly, all the humour disappeared from his face and the 'what ifs' started. \n\nWhat if Tanesha wasn't ready for that kind of commitment? Some people never wanted to get married. What if she was one of them? For how long did Paul Ashton expect him to court his daughter? Was there a designated time for courting? What did Tanesha expect from her ideal man? What if he wasn't able to live up to expectation? Ty groaned when he felt his stomach lurch unpleasantly at that last thought. He knew he had to stop torturing himself and get some sleep. \n\n\"Fuck.\" Ty swore when his eyes landed on the bedside clock. He couldn't believe he'd actually been thinking and torturing himself for over an hour after Tanesha had fallen asleep. \"How fucked up is that?\" He muttered to himself and closed his eyes, willing himself to sleep.\n\nAnd even as he drifted off to sleep...after worrying some more, it was with a mental note to ask Tanesha what exactly she expected of her man. Maybe that could help him live up to expectations because he sure as hell wasn't going to lose Tanesha.\n\n***\n\nTy opened his eyes the next morning and almost panicked when he didn't see Tanesha beside him. But he caught movement from the corner of his eye and turned to see a naked alluringly beautiful Tanesha standing with her back to him. Damn, she was bootyliciously sexy, Ty thought, as his hand moved down to palm his morning wood through the boxer briefs. Who wouldn't want to wake up to a scene like that every day? Tanesha was oblivious to the lustful stare she was receiving. She had parted the blinds and was looking outside through the glass. Ty couldn't help the grin that brightened his face. His lady had a naughty streak in her after all. She definitely didn't seem too bothered that someone might see her from outside. He wondered how she would react if he told her that she could in fact be seen if anyone bothered to look. The good thing was that the master bedroom was positioned in such a way that it faced a beautiful secluded hilly area, where people hardly used. \n\nTy reached for the device and retracted the blinds, leaving the room flooded with daylight. He smiled when he heard Tanesha's gasp.\n\n\"Enjoy the view.\" Ty said as he rolled out of bed and pressed a remote. As music by 'Harold Melvin & The Blue Notes' filled the room, he headed for the en-suite bathroom. There was nothing better than a good old soul music in the morning.\n\nTy quickly brushed his teeth, shaking his head in amusement when he noticed his toothbrush had already been used as it was still wet. He opened one of the cabinets and took out a new brush which he placed in the brush holder for Tanesha. Not that he minded her using his. He just wanted her to feel at home in his home. Ty removed his boxers, releasing his pulsing cock which had remained hard throughout his brushing. His cock definitely knew what it wanted that morning. Well...so did he, Ty thought feeling almost heady with excitement. \n\n\"Good morning.\" Tanesha murmured when she felt Ty's arms coil around her waist from behind. \"Oh...\" She gasped when she felt his hardness, poking against her lower back.\n\n\"Good morning angel.\" Ty murmured, trailing his lips across her cheek and down her jaw, to the long column of her throat.\n\n\"Good morning.\" Tanesha breathed, trembling in reaction.\n\n\"Sleep well?\" His lips sought and found the sensitive area beneath her ear lobe. \n\n\"Like a baby. The view from here is beaut...\" Tanesha's words turned into a moan when Ty's tongue moved moistly across her quivering flesh before his teeth nibbled her lobe. \"...beautiful. Almost like a picture. Ty you sure no one can see us?\" She sounded breathless. She certainly didn't sound like someone who gave a damn if they could actually be seen. \n\n\"Anyone watching, can.\" Ty replied huskily as his hands moved up to cup each succulent breast.\n\n\"Ty, no...\" Tanesha moaned but made no attempt to move out of Ty's embrace.\n\n\"I said anyone watching. No one ever goes there so no one will see us.\" His fingers began to slowly pull and twist her already distended nipples. \"I wish someone would this very moment though.\" Ty rasped and then began to suck on her lobe, causing an aching need to slam into Tanesha.\n\n\"Oh Ty...\" She breathed even as she felt herself getting wet. All he had to do was touch her and she was ready to beg for his cock, Tanesha thought amazed as her head fell back against his chest. Ty's fingers on her nipples felt like heaven. And the sucking on her lobe was so pleasurable she wanted to beg Ty to fuck her. He knew how and where to touch her to drive her crazy with lust. He knew her body even better than she knew herself.\n\n\"Ready for me?\" Ty rasped.\n\n\"Always.\" Tanesha couldn't hide the plea in her voice. She wanted that cock off her back and deep inside her so bad. \n\nWith his tongue sensuously tracing the shell of Tanesha's ear, Ty slipped one of his hands down her tummy to her hungry slit. He slipped a leg between Tanesha's and nudged them apart. Then with his fingertip, he parted her folds and he dipped into her wetness.\n\n\"Oh, God,\" she breathed and then let out such a sexy moan, Ty almost came.\n\n\"Fuck, Tan. You're soaked.\" He murmured wickedly in her ear.\n\n\"What did you expect?\" Tanesha gasped as his finger slipped deep inside her. \"Ah...\" She moaned brokenly as she clenched around his finger and began thrusting against it, grinding her butt against his weeping cock in the process. \n\n\"Damn, you're so fucking tight.\" Ty groaned, adding another finger. He couldn't wait to feel that tightness and heat around his pulsing cock. \n\n\"Ty please...\" Tanesha whimpered as her thrusts increased. Much as it felt incredibly wonderful to have those thick fingers inside her hungry hole, she wanted that cock...was dying to feel that cock plunging deep inside her. \"Remember what I said last night?\" Tanesha gasped, her legs quivering with tension, and anticipation. \n\n\"You said a lot of things.\" Ty murmured huskily, and then laughed softly when Tanesha groaned. \"But I think...\" He slipped his fingers out of her and reached between them for his savagely rock hard cock. \"I know what you're referring to.\" Ty widened his stance behind her and slipped the bullous head of his cock between Tanesha's already parted thighs. \"And I won't make you ask.\" He breathed as in one hard stroke, he pressed himself home, sinking deep until his groin rested against Tanesha's arse. He didn't make her ask. \n\n\"Oh God, yes.\" Tanesha cried out shakily as her palms slapped against the glass. With her back arched and her head thrown back against Ty in utter pleasure, she opened her legs further to ease the decadent pressure within her channel. She loved the feel of Ty, so thick and hard inside her, stretching her tight pussy till it trembled and clenched desperately around him. \"Damn, you're big.\" She gasped as she tightened around him.\n\n\"Tan...\" Ty gasped at the tightness on his cock. He groaned as an intense tingle crept through him, flooding his veins with such fiery heat his head fogged with blinding pleasure. \n\nHe moved them closer to the glass till Tanesha's breasts were pressed against the glass. Damn, what he wouldn't give to be on the other side of the glass, watching. But Ty would be the first person to agree he was on the perfect side of the glass at that very moment. He fucked her hard, filling her over and over, faster and faster till Tanesha was delirious with pleasure...till her legs virtually turned into molten lava. But for Ty's arm securely around her, and her weight supported by the glass she was pressed up against, Tanesha knew she would have fallen down. The feel of that wide crest of Ty's cock massaging the bundle of nerves deep inside her was mind-numbingly thrilling. Her body writhed against Ty's, the erotic sounds of flesh slapping against flesh, moans, grunts and cries of pleasure flooding her mind with blinding ecstasy. \n\n\"This is so fucking good...\" Tanesha gasped, her choice of words thrilling Ty so much he pounded into her even harder. She gave an erotic whimper as her fingers clawed the glass restlessly. Ty was so thick and deep she felt filled, possessed and dominated. She loved it. \"Skull...\" \n\n\"I'm right here, baby.\" He said hoarsely, his hand slipping around Tanesha to dip between her thighs even as he began to roll his hips with every stroke. Then his fingers touched what he was searching for...her engorged clit.\n\n\"Oh Skull...oh God...Ah...don't stop...\" Tanesha whimpered almost desperately as Ty's fingertips maddeningly massaged her clit in rapid circles, his clever fingers driving her insane. \"Oh God, please...\" Her hips gyrated with speed, meeting the hard thrusts from behind and grinding that pleasure button into his touch.\n\nWhen she felt her orgasm swirling inside her lower belly, Tanesha lifted an arm to Ty's head and brought it down to meet her hungry mouth. And at the first jolting contraction of her pussy, she cried into the kiss, her legs quaking violently. Even as she shook with the intensity of her orgasm, she heard Ty's deep groans and felt him swell inside her. \n\n\"Fuuuuck!\" Ty tore his mouth away to roar as he quickly pulled out of Tanesha and began spurting hotly and repeatedly against her succulent arse. \n\nTy's whole body shook violently as his orgasm raced through him, stealing the strength from his muscles. He latched onto the nape of Tanesha's neck and gently bit, sucked and blew on the sensitive flesh, reveling in the breathy moan that tore out of her. He collapsed against Tanesha, pressing her against the glass as his lungs heaved for breath.\n\n\"You're going to fucking kill me, Tanesha.\" Ty's voice was lazy and satiated.\n\nHe sounded so sexy a shiver of delight flashed through Tanesha. \"Not going to kill you. Just gonna keep you.\" She breathed, naughtily rubbing her arse against Ty still hard dick. \n\n\"Fuck.\" Ty muttered as goose-bumps flashed across his whole body at Tanesha's response. He made a rough sound of pleasure and tightened his hold on her. \"I fucking love you.\" He growled.\n\n\"Ditto.\" Tanesha said softly, turning around to face him. Then going up on her toes, she took Ty's mouth in a kiss so hot they were both left shaken. \"You spilled inside me the other night Ty.\" Tanesha said quietly.\n\nTy didn't flinch. His eyes remained locked on Tanesha's. \"Then I guess this is going to be the shortest courtship in history.\" He shrugged. Opportunity comes but once...right?\n\n\"What?\" Tanesha tilted her head and looked up at Ty with a confused expression on her face. \"What do you mean?\"\n\n\"Why don't we simply do what your father said...only in reverse?\"\n\n\"Tanesha frowned in confusion. \"You've lost me.\"\n\n\"Like I told you last night, your dad said I was supposed to have courted...\"\n\n\"Yes, yes...courtship, marriage and then sex. You're saying you want to...\"\n\n\"Marry me, Tanesha.\" Ty said. \"We've already had fantastic sex right? So the next thing is to get married and then court for the rest of our lives. Brilliant don't you think?\"\n\n\"Are you nuts?\" Tanesha stepped back, putting some distance between them. \"Ty we can't just jump into marriage because of a possibility of a baby. Come on!\"\n\n\"Yes we can.\" Ty said smoothly, his worries the night before about Tanesha's thoughts on marriage filling his mind. \"Unless of course you want to wait till you start showing.\" He asked, taking her hand and drawing her towards the bathroom. \"Imagine the disappointment in your parents' eyes. Why don't we simply do it now and save everyone the...\"\n\nTanesha snatched her hand from Ty's and stopped moving. That had to be the most outrageous marriage proposal ever. With her hands on her hip, she glared at Ty back since he'd still not turned to face her. \"Are you drunk or something? No, wait. Are you a seer or psychic? 'Cause it almost feels as if you know for sure I'm pregnant. That's not what I said.\"\n\n\"I heard what you said, Tanesha.\" Ty groaned, pinching the bridge of his nose in frustration. He knew he was allowing his uncertainties to rule his mind but he couldn't help himself. \"Is it the thought of a baby that scares you or the thought of marriage?\" He asked as he turned around to fully face Tanesha. \"Because...\" He trailed off, losing his train of thought. Damn, he loved her boobs, Ty thought, staring at Tanesha's breasts as if in a daze. \n\n\"What?\" Tanesha's eyes widened at Ty's words. \"Where from that? I'm conf... Ty?\" Tanesha groaned when she noticed that Ty wasn't even listening to her anymore. \"Up here, Ty.\" She said dryly, taking her hands off her hips to fold them beneath her breast, which was an even more provocative position as far as Ty was concerned.\n\n\"Fuck, you're killing me here.\" He murmured, licking his lips sexily.\n\nTanesha shook her head exasperatedly and grabbed Ty's hand. \"Come on, let's go take a shower.\" She said drawing Ty to the bathroom. \n\nIn Ty's huge glass shower, tiny showerheads scattered across the glassy walls, sprayed warm water over them as they washed each other leisurely. They kissed languidly under the spray of water when they were done bathing each other. Whilst they kissed, Ty took Tanesha's hands and spread them along the wall, wrapping each hand around a shower head. \n\n\"Don't let go.\" He murmured and then bent to capture one pebbled nipple into his warm mouth. \n\n\"Ty...\" Tanesha jerked and cried out at the suddenness of Ty's action. She felt the sensation right inside her core as pleasure slammed inside her. \n\nHis tongue moved slowly and lightly over the hardened peak, loving the erotic cries that tore out of Tanesha. Ty teased that taut nipple mercilessly. He kissed, licked, laved, and bit gently before drawing it greedily into his hot needy mouth to suck on it. He rolled and pulled on the other nipple the whole time in the same rhythmic caress. When he felt Tanesha's hand move to cradle his head, he released the nipple in his mouth and stood up straight.\n\n\"If you release your hold on the shower heads again...\" he kissed her lightly on the mouth, \"I'll stop.\" Another kiss. \"I don't want you to get hurt.\" A longer kiss. \"I'll feel better if I knew you were holding on to something solid. Deal?\" \n\n\"Deal.\" Tanesha breathed, rubbing her thighs together to try to alleviate the throbbing between her thighs.\n\n\"God, I love your boobs.\" Ty breathed, moving the soft pads of his thumbs on her nipples slowly. Somehow Tanesha's position reminded him of that day on the Island when he'd sucked her nipple in the presence of all those criminals. And even as he lowered his head to the other nipple, Ty couldn't help but silently acknowledge that just like that day, Tanesha looked spectacularly sexy. Ty was so hard he was virtually on the verge of explosion. \n\nHe moved down her body, scattering kisses all over her flat tummy. He went down on his knees before Tanesha and raised one of her legs onto his shoulder. He spread open the lips of her pussy with his thumbs, exposing her throbbing clit to his hungry eyes. Then with a lustful groan he lowered his head and sucked her clit into his mouth. ",
        "Tanesha almost went out of her mind with dizzy pleasure. \"Oh God...\" She cried out, her head falling back against the glass wall as Ty started to expertly suck on that bundle of nerves, ruthlessly pushing her toward an explosive orgasm. Her body felt as if it were on fire, every part of her alive and vibrating with blinding pleasure and need. \n\nShe was virtually sobbing as she rocked as much as she could against that wicked tongue, her back aching in pleasure. He ate her with an intensity that left her breathless. She was totally under Ty's power...she could do nothing but take what Ty was bestowing on her...utmost ecstasy. Tanesha started crying out even before her orgasm hit. She screamed Ty's name as she unraveled, coming so hard she felt dizzy. But even as she writhed with her release, Tanesha had just one thing in mind...she wanted more. She needed to feel Ty inside her again. Licking her had only succeeded in making her pussy ignite unbearably for Ty's cock, which was the only thing that could assuage that ache. Before she even came down from her high, Tanesha attacked. She released her hold on the showerheads and with a strength that shocked both of them, pushed Ty onto the floor of the bathroom. Ignoring the shocked look on Ty's face, Tanesha straddled him and then slid onto his hard pulsing cock, taking him to the root in one smooth, slick glide.\n\n\"Oh fuck.\" Ty growled as his eyes rolled into his head.\n\nAnd as water pouring all around them, Tanesha fucked the shit out of him. She would circle her hips, rhythmically clench her core, move up and down with fast powerful lunges, and then go right back to gyrating sexily on Ty. He could barely breathe from all the overwhelming sensations\n\n\"Holy fuck.\" Ty gasped. \"You feel amazing.\" His eyes were squeezed shut, his breathing quick and rough. \" \n\nTanesha set a brutal rhythm above him, her hips moving fast as she rode Ty. Her head was thrown back, her cries growing louder and louder with each thrust. She looked wild and absolutely stunning. When she leaned down and closed her teeth around one on Ty's nipples, he cried out and moved his hands to hold her tightly on the hips, holding her immobile with sheer strength and rocking upward into her tight heat over and over with fast and powerful thrusts.\n\n\"Ty...ahh...\" Tanesha's loud cry caused Ty to release his hold on her, thinking he was hurting her. \"No, don't stop please...\" She gasped as she began to ride him even harder and faster up and down the rigid length of his erection.\n\n\"God, please tell me you're close.\" Ty gasped as his hands moved back to Tanesha's hips, his own hips trusting upwards desperately as Tanesha slammed down to meet him. He couldn't tear his eyes from the point where they joined. It was so erotically captivating Ty lost total control. \"Ahh...fuck. I can't hold...\" His unfocused gaze shifted to her face. His mouth was opened, chest rising and falling with erratic breaths. His expression was taut with impending release. \n\nTanesha screamed Ty's name as her orgasm hit. \"Yes, Ty. Yes!\" Her body convulsed above him, her pussy muscles tightening rhythmically around his cock in hard spasms. And even as she totally lost herself in that ecstatic bliss, she felt Ty hold still inside her. That was the obvious calm before the eruption. \n\n\"Move Tanesha.\" Ty didn't recognize his own voice. \"Please...I'm going to come.\" He didn't have the strength to move Tanesha off him. His whole being was centered on his cock and his impending release. His harsh exhalations were virtually ending in whimpers. He'd never been fucked into such a state before. He felt utterly possessed and completely defenseless...almost lethargic. \"Tanesha...\" Ty shook with the effort of restraint.\n\n\"I can't.\" Tanesha whimpered even as her pussy rippled along Ty's cock, one orgasm rolling into the other. \"I don't want to.\" She whispered shakily just as she felt Ty's body begin to jerk, filling her with jet after jet of his hot cum. Nothing felt more euphoric than the feel of Ty's essence painting her insides. \"Skull...oh fuck.\" She breathed shakily, leaning down to capture Ty's mouth in a wild kiss as she rode out her orgasm.\n\nTanesha collapsed onto Ty's chest, her breathing ragged as she trembled with the force of that third, mind-shattering release. She writhed against Ty until the wracking pleasure eased. As she tried to bring her breathing under control, Ty nudged her chin up for a more gentle kiss. \n\n\"Marry me.\" Ty said softly against Tanesha's kiss-swollen lips. \"Please.\"\n\n\"I was thinking earlier. This must be the weirdest proposal ever.\" Tanesha chuckled.\n\n\"We love each other. I don't know about you but this is it for me. I don't want any other person. I want forever with you. That is why I want to make this official, baby.\" Ty explained.\n\n\"I'm still in school, remember? Shouldn't we wait till I'm done? Then we...\"\n\n\"If my baby is growing in here...\" Ty slipped a hand between them to touch Tanesha's tummy, \"this very moment, the fact that you're in school won't stop it, you know. Marry me Tanesha.\"\n\n\"Okay.\" Tanesha replied simply.\n\n\"Thank you.\"\n\nA ghost of a smile curved Ty's lips. He was going to give Paul Ashton exactly what he wanted for his daughter...but in reverse. The man could go fuck himself for all he cared. Tanesha had agreed to marry him and that was all that mattered. He was going to court her for the rest of his life... make sure their life together was always filled with happiness, love and freshness...just like a couple in courtship. \n\n\"Can I call my parents and tell them?\" Tanesha couldn't keep the joy out of her voice.\n\n\"Hell no.\" Ty growled. \"Do you want your father to cut his trip short and come shoot me?\" They both burst into laughter. \"Let's wait till they get back. Then I'll do the right thing by going to ask for your hand in marriage. He told me he's very traditional.\"\n\n\"That he is.\"\n\n\"So I'll go ask nicely. Will probably give a PowerPoint presentation on how I'm the best man for you and how I'll take good care of you and have six babies with...\"\n\n\"What...\" Tanesha dissolved into laughter.\n\n\"Is six too small?\" Ty asked with a straight face. \"How about eight?\"\n\nTanesha was laughing so hard, she rolled off Ty. \"Oh my God, you're crazy.\"\n\nLaughing, Ty stood up and pulled Tanesha up into his arms. \"So we wait for the power couple.\"\n\n\"Sure,\" she purred. \"Sounds like a plan.\"\n\n***\n\n\"What are you doing?\" Tanesha turned her head to look at Ty. They were parked in front of Ty's parents' house and Ty was just sitting in the car staring at her. He said he wanted to introduce her to his family so had insisted they come to his parents' for lunch. They'd had to make a quick stop at Tanesha's house so she could change. Now, instead of getting out of the car and entering the house to meet his family, Ty was just staring at her. \n\n\"Just looking at how beautiful you are.\" Ty actually looked...awed. Tanesha looked downright hot in an elegant long, white, sleeveless, maxi Jumpsuit with an alluring v-neck tunic, a small brown leather belt fitting nicely in its tiny belt loops. Completing her casual but classy look was a fashionable sky-high brown wedge heels sandals, a beautiful brown leather bag, and a stylish, brown, wide-brim floppy hat. She looked absolutely fabulous. \n\nTanesha gave a tiny moan. Ty had a way he looked at her that was both predatory and worshipful. It never ceased to amaze her how he managed that. \"I already agreed to marry you so you don't have to...\" Ty swallowed the rest of her words as he took her lips in a deep but gentle kiss.\n\nTanesha shivered when Ty pressed his tongue against hers, teasing her until she moaned deep in her throat. She kissed him back as sensually as he was kissing her. Soon both of them couldn't think beyond the kiss. The world slid away...nothing existed but the two of them. They shook in each other's arms as their control began to slip. With a groan Ty began to suck erotically on Tanesha's tongue, making her vibrate with such intense need she could barely breathe. \n\nTanesha gasped when there was a sharp rap on the window. \"Shouldn't you two get a room or something?\"\n\nTy groaned, not bothering to raise his head to look at his sister. Tanesha pulled back and looked around with a slightly bewildered look in her beautiful eyes as she drew breath back into her starved lungs. With smoldering eyes, Ty took in Tanesha's lips which were sexily swollen from the fierce intensity of their kiss and groaned.\n\n\"Fuck, I ache for you.\" He said hoarsely. \"You taste even better than you looked.\" He murmured huskily, drawing a moan from a still dazed Tanesha.\n\n\"There's someone here Ty.\" She breathed, beginning to believe Ty hadn't heard the voice. Her eyes locked on his lips as she took a deep, shaky breath, trying to snap out of whatever spell she was under. \"Ty...\" She whimpered, reaching up to adjust her hat. \"I'm here to meet your family and thanks to you, I look...\"\n\n\"Perfect.\" Ty said huskily. \"So beautiful, baby. Trust me.\" Ty tried to steal a kiss but Tanesha ducked, aware of eyes staring at them through the glass of the window.\n\n\"Leave her alone Ty.\" They heard Thea shout from outside. \"And unlock the door.\"\n\n\"Bossy little brat.\" Ty muttered but Tanesha could see the affection in his eyes.\n\n\"Hi Tanesha.\" Thea gave a brilliant smile when she opened Tanesha's door. \"I'm Thea. And I'm here to rescue you from this monster.\" She said, stretching a hand towards Tanesha to help her step out of the car. \n\nWith a flustered laugh, Tanesha took Thea's hand and stepped out of the car. \"Thank you very much Thea.\" Tanesha said, adjusting her hat.\n\n\"Oh my gosh I love your outfit.\" Thea exclaimed looking admiringly at Tanesha. \"He didn't exaggerate. You're gorgeous.\"\n\n\"Nothing but the best for your brother.\" Ty drawled as he came around the car. And without a break in his stride he lifted Thea off the ground and tossed her over his shoulder. Ty totally ignored his sister's squeals as he strode to the door with a laughing Tanesha.\n\n\"Put me down you brute.\" Thea's screams were mixed with delighted laughter.\n\n\"Ty come on, put her down.\" Tanesha said, and then promptly burst into laughter when Thea slid her hand into Ty's back pocket and pulled out his wallet. She never stopped screaming even once. \n\nThe door opened to reveal a pretty woman who was obviously Thea's mother from her looks. Her smile was so welcoming Tanesha found herself liking her instantly.\n\n\"You must be Tanesha.\" The pretty woman said, leaning forward to kiss Tanesha on both cheeks. \"Do forgive the silly behaviour of my children. They were all adopted.\" She added in a low tone, making Tanesha laugh. \"Come on in my dear. I'm Lisa by the way.\" \n\n\"Nice meeting you Lisa.\" Tanesha said, following Ty's step-mother into a cozy living room. She turned around to look behind her but Ty and Thea were nowhere to be found. She could still hear Thea's delighted screams though.\n\n\"Likewise, my dear. Make yourself comfortable.\" Lisa said. \"Lunch will be ready soon. But what can I offer you?\"\n\n\"I'm good, Lisa. Thanks.\" Tanesha said, sinking into the plush leather seat. \"You have a lovely home.\"\n\n\"Thank you. Thank God the twins are grown now so nothing gets destroyed around here. Those two were a handful. Little monsters I used to call th...\"\n\n\"Still call them.\" Came a man's voice from behind Tanesha.\n\nShe twisted her head and saw a really tall elderly man. So that was where Ty got his height, Tanesha thought, getting to her feet. The man actually looked taller than Ty.\n\n\"Tanesha.\" George Wesley boomed. \"So you're the young lady who has turned my son's world on its axis huh? His words, not mine.\" He added with a chuckle.\n\nTanesha's eyes widened. \"Err...\" She didn't know how to respond to that.\n\n\"I'm so happy to finally meet you hon.\" George drew Tanesha into a hug. \"I'm George.\" He said letting her go. \"Where are those kids?\" He asked just as a lanky teenaged boy burst into the living room.\n\n\"Holy shit!\" He exclaimed when his eyes landed on Tanesha.\n\n\"Theodore Wesley if you...\" Lisa began sternly but got cut off by the boy.\n\n\"Sorry, sorry mum. Damn, she's hot.\" He breathed staring at Tanesha with a look of reverence. \n\n\"Hello Theo.\" Tanesha said, laughing softly.\n\n\"Oooh I love the sound of my name on your lips.\" Theo, Thea's twin brother gave a mock shiver as he came closer to an amused Tanesha. \"Can I kiss you...\"\n\n\"Theo!\" Lisa hissed just as George burst into laughter.\n\n\"Your cheeks I mean.\" Theo said with a mischievous glint in his eyes. \"Mum you didn't wait for me to finish what I was saying.\" He said, not turning to look at his mother. And when Tanesha leaned forward to kiss Theo on both cheeks, he blushed so hard despite his bravado his parents and Tanesha burst into laughter.\n\n\"What happened?\" Ty asked, entering with Thea.\n\n\"She kissed me.\" Theo informed his siblings with a brilliant grin.\n\n\"You what?\" Ty looked at Tanesha with incredulity. \n\nAmused at the look on Ty's face, Tanesha decided to allow him to think the worst. With a shrug and a naughty glint in her eyes, she turned to face Ty. \"I'm sorry but I couldn't help it Ty. Your brother is simply adorable.\" Whilst George and Lisa laughed, Thea shouted ewww, and Theo gave a fist pump. \n\n\"Yeah, whatever.\" Ty said, drawing a laughing Tanesha onto the couch beside him. \n\nLunch was a fun-filled affair. Tanesha admired how loving and carefree the Wesley family was. They reminded her of her own family. She hoped she could make her and Ty's home as loving and fun as she was used to and was witnessing that very moment. After lunch, they retired to the living room and had a lengthy chat. Tanesha told George and Lisa about herself and had a good laugh when they told her hilarious stories about Ty's childhood. \n\n\"Okay, that's enough.\" Ty gave a mock growl when he thought he'd been teased enough. \n\n\"Honey, why don't you show Tanesha the famous metal head?\" Lisa asked excitedly, making Tanesha burst into laughter.\n\nTy pulled a laughing Tanesha off the couch and turned towards the backdoor. \"You know I'll get you for this don't you?\" He growled low in his throat, making Tanesha laugh even harder.\n\n\"Oh but that's so sweet, baby. I can just picture a ten year old you, trying to make his toddler siblings laugh. What I wish I could see though is your face when you realized you couldn't pull your head out.\" She laughed.\n\n\"I remember it as though it happened only yesterday.\" Ty chuckled. \"All the laughter disappeared from my face. I couldn't believe the twins were happily clapping and laughing whilst I was struggling to get my head out of the railing. They obviously thought I was still fooling. \" Ty laughed as he watched a laughing Tanesha leaning weakly against a pillar. \"Those little twits should have known better and gone for help. Tan stop laughing. It wasn't funny then.\"\n\n\"I'm sorry but it's funny now.\" Tanesha laughed. \"Oh my God. What did you expect them to do? Call for help? They couldn't even speak at that age for goodness' sake.\"\n\n\"I'm sure Theo knew what was going on.\" Ty muttered, drawing Tanesha towards the pool house. \"When the firefighters came, Theo was laughing his head off.\"\n\n\"He wasn't even two yet, how could he have possibly been laughing his head off, Ty?\"\n\n\"I swear I saw his teeth. I could see all four. And I can tell you the little twit wasn't crying. Here we are.\" Ty said, kicking at the offending railing. \"After they widened the metal to free my head, mum told them to leave it like this for future reminiscing.\"\n\n\"Oh wow, your head was this small?\" \n\n\"Fuck you.\" Ty laughed, opening the door to the cozy two bedroom pool house which had been his 'mansion' when he turned sixteen. \n\nAfter pleading with his parents that he wanted the pool house to himself to enable him play loud music without disturbing them, they'd allowed him to occupy the place. He and Lisa had had so much fun furnishing and decorating the place. His friends used to love coming for sleepovers. His parents didn't have any problem with that at all for as long as he kept getting good grades. Those were some of the best times of his life.\n\n\"This place is really cool.\" Tanesha said placing her bag and hat on the bed and moving to look at Ty's pictures and trophies. \"I love these pictures of you. How come Theo didn't move in here when you left?\"\n\n\"Mum said she wanted to leave everyone's room as it is so that we can use it whenever we want to. You should see Theo's room before we leave. He's fixed it up real good.\" Ty said, turning on the radio in the room. \n\n\"Ooh, turn it up Ty.\" Tanesha said, swaying her hips to Clyde Lawrence's 'One More Time'. \"I love this song.\"\n\n\"'The Rewrite' huh?\" Ty chuckled, lying on his back on the bed.\n\n\"It's a good movie don't you think?\" Tanesha kept moving to the song. \"Loved the intelligent humour.\"\n\nTy slipped his hands beneath his head and looked at Tanesha from beneath his lashes. \"Don't tell me you're one of the girls who has a crush on Hugh Grant.\"\n\n\"Sorry. Not my kinda guy.\"\n\n\"What's your kind?\" Ty couldn't believe he was actually getting hard from looking at Tanesha moving her sexy body to the music even after their marathon sex that morning. But then, he was always in a constant state of arousal whenever he was near Tanesha. She was the sexiest woman he'd ever met.\n\n\"Well...I'm still trying to decide.\" She said huskily, turning to face the collage of pictures on wall. \"I don't know whether it's this gorgeous boy in the pool, or this hot thing holding a baseball bat, or...\" Tanesha squealed when Ty grabbed her from behind and tackled her to the bed. He straddled her hips to hold her down, grinning as she laughed uncontrollably.\n\n\"That was a simply question.\" He scowled and gave a mock growl.\n\n\"And I was trying to give an ans...stop growling.\" Tanesha laughed. \"Oh God, my eye.\" She said suddenly, covering one of her eyes with a hand.\n\n\"Hey, what's wrong?\" Ty leaned closer with concern on his face but gasped when he found himself on his back, with Tanesha's knees straddling his waist. \"What the fuck...\"\n\n\"Gotcha.\" She laughed. \"Now, about that question... Do you really need to ask?\" She asked in her fuck-me voice, and then sexily captured her lower lip between her teeth.\n\nTy swallowed. He was completely seduced by the smoldering look in Tanesha's eyes. \"Are you trying to seduce me?\"\n\n\"What if I am?\" She whispered, wriggle her arse against his groin. \"Don't think I didn't see what you were doing during lunch.\"\n\n\"Fuck...\" He breathed, feeling himself harden even more. \"What did I do?\" He asked with mock innocence. \n\n\"You're such a tease.\" She leaned down and kissed him. \"I've wanted to do this since we sat down to eat lunch.\" She murmured against his lips. \n\nThroughout lunch, she'd caught Ty's eyes on her, staring in a way that was totally indecent. Her body had responded to the hunger in his eyes, nipples hardening and slit getting slick with need. He didn't even have to touch her and she was panting with desire. \n\n\"You're as sexy as hell.\" She sucked his lower lip into her mouth, loving the erotic moan that tore out of Ty's throat. \"Do you have any idea what you do to me?\"\n\n\"Tell me.\" Ty's voice was lower and deeper than Tanesha had ever heard it.\n\n\"How about I show you instead?\" She bent down and gave him the sweetest of kisses. \"Now why don't you tell me about growing up in this house?\"\n\n\"Haven't you heard enough?\" Ty groaned when Tanesha rubbed against his hardness as she moved off him.\n\n\"This time I want to hear from you.\" Tanesha knelt between Ty's legs. \"Tell me some of your most cherished memories in this house.\" Her hand went to his belt buckle.\n\n\"What are you...\" Ty raised his head to look down at Tanesha. \"Oh fuck, Tan...\"\n\n\"Shut up and start talking. Oh by the way, I love your family.\" Tanesha said sweetly as though she was making breakfast rather than in the process of getting a dick out. She heard him suck in a sharp inhalation as she began to undo his fly buttons. \"And don't fucking move.\" She growled.",
        "\"What?\" The look on Ty's face was priceless. \n\nTanesha wanted to laugh but made herself sound stern. \"I don't want you touching my hair. If you mess it up, everyone will know what we did in here.\"\n\n\"You have the hat, remember?\" Ty grumbled, raising his arse to enable Tanesha pull down his jeans. \"Is there a reason why you didn't pull down the boxer briefs as well?\" Ty asked, and then raised a hand in mock surrender at the glare Tanesha leveled his way. He grabbed a pillow and shoved it under his head so that he could watch her. \"One of my best memories in this house was...\" His breath caught in his throat when he saw Tanesha release his erection through the leg of his boxer briefs. \"It was when the...Oh shit.\" Ty groaned when Tanesha's warm mouth closed around the head of his cock. \"Fuck...\" He shuddered violently when she began to suck. \"I can't do this baby. I just can't think...\" He'd never sounded sexier.\n\nTanesha felt Ty's shudder and smiled inwardly. Her plan was to drive him crazy by working that velvet hardness until he came hard. She just hoped they wouldn't get caught. That would be scandalous. Tanesha sucked and licked along the rim, over and over again, loving Ty's cries of ecstasy. There was something about exposing and sucking on just the sensitive crown that thrilled Tanesha. She loved the feel of that cock in her mouth. \n\n\"Christ. That is...feels... Holy shit...shit... So good.\" Ty mumbled, totally drunk on lust. He watched Tanesha looking up naughtily at him, watched him watching her play with his cock, dancing her tongue over it, occasionally fluttering her tongue over the sensitive underside. Ty had never been more tempted to push his cock deep into a warm mouth. \"Baby please...\" He gasped. \n\nIn one fluid movement, Tanesha allowed Ty to pop out of her mouth, yanked down his boxers to allow his huge swollen cock to bounce out, and then swallowed about half of that hard flesh. \n\n\"Holly hell,\" he grunted as fiery heat shot from his brain, down his spine and directly into his balls. His hands moved down to Tanesha's head, his fingers tangling inside her hair. \n\nTanesha knew Ty wouldn't be able to stop himself from touching her. She wished she could insist just as payback for what he'd done to her in his bathroom that morning but she was enjoying the feel of his cock in her mouth too much to take it out and talk. Tanesha circled the part of his cock that she couldn't fit inside her mouth with her hand and began to pump as she sucked. \n\n\"Ah...fuck.\" Ty groaned when Tanesha took another couple of inches of his erection into her mouth. His felt his cock head brush the back of her throat and jerked as if he'd touched a live wire. \"Shit.\" Ty could barely breathe. The sounds Tanesha made whilst she sucked...the slurps, moans and humming drove him crazy till he lost control. \n\nWith a hoarse cry, he began to move Tanesha's head up and down his cock, guiding her pace but at the same time, careful not to push too far into her mouth. The last thing he wanted to do was hurt her. \n\n\"That's it baby. I love how your mouth feels on me.\" He breathed, watching her hollowing her cheeks as her head bobbed up and down. \"Holy shit, this is damn good.\" His eyelids slid closed in exquisite pleasure when Tanesha shoved her other hand between his thighs and began to roll and tug on his weighty, cum-filled balls. Ty's hips bucked as if an electric jolt had passed through him, driving his cock deeper into the wet heat of Tanesha's mouth. She gagged and pulled off to gasp for breath. \"Oh God, baby I'm sorry.\" Ty gasped, his remorse showing through his lust-filled eyes. \"You okay? I'm sor...\"\n\n\"I'm fine.\" Tanesha breathed, looking down at the shiny swollen head of Ty's cock. It was dark red with blood, looking almost painful. \"Now let's give this some relief.\" Tanesha said and then took him in again, this time taking more than what she had earlier.\n\n\"Ohhh Fuuuck!\" Ty's face was flushed with excitement, sweat misting his brow. He was completely at her mercy, near mindless with the need to come. This time when his hands went to Tanesha's head, it wasn't to guide her. His fingers tangled in the long strands of her hair as he groaned in encouragement. His eyes closed in bliss as his every sense became tensed. Tingles raced along his spine and his balls drew up, an indication that he was about to come. Tanesha sensed it and sucked hard. \"Tanesha,\" A ragged gasp tore from his throat as his cock erupted in her mouth. \"Fuuuuk.\" Light exploded behind his closed eyes as with a deep groan he flooded Tanesha's mouth with his hot cum.\n\nTanesha locked her lips around the spurting head and swallowed convulsively as fast as she could, massaging his balls the whole time till there was no more cum. For someone who had already come twice that morning, he sure had a lot of cum in him, Tanesha thought amazed. \n\nTy eventually opened his eyes and watched Tanesha sucking and licking him clean. It was almost as if she couldn't get enough. What man wouldn't want his woman to worship his cock as if it was the best thing ever? He loved and adored her right back. When he felt too sensitive after a while, Ty gently pulled Tanesha off his cock and sat up to pull her onto the bed. Then his mouth sealed over hers, kissing her senseless, not minding that he could taste himself on her.\n\n\"That was off the fucking charts.\"\n\nTanesha was thrilled at the praise. She'd set out to blow Ty's mind and from his expression and words, she'd accomplished just that. Her jaw ached but seeing the contentment on her man's face made it so worth it. \n\n\"Are you okay?\" He asked softly. \n\nTanesha nodded. She didn't think she could speak right then. The hunger surging through her at that moment was too intense for comfort. She tried to ignore it but it just wasn't working. There was no way she was ready to strip out of her jumpsuit just to get what her body was craving. Besides, the thought of allowing herself to get fucked in the house of Ty's parents was totally not acceptable. But that didn't stop her from shaking with the intensity of her need. \n\n\"We have to go before your siblings come barging in here.\" Tanesha said, pressing a kiss against Ty's mouth. \"Get up.\" She ordered, rolling out of the bed and pulling Ty up.\n\n\"Hey, come here.\" Ty husked, drawing her to him when she began to turn away. He leaned in and nipped her lower lip. \"I need to take care of you.\"\n\n\"No.\" Tanesha murmured as her hands slipped between then to re-button Ty up. \"We need to leave this room before someone comes looking.\" She re-buckled his belt.\n\n\"Sure?\" He took her chin between his finger and thumb and lifted her face to look at him. Ty searched her eyes, saw what he was looking for, and gently pushed Tanesha against the wall. \n\n\"What are you doing?\" Tanesha's voice sounded strained even to her own ears. \"I said...\"\n\n\"I know what you said.\" Ty murmured as he began to unbutton the tiny brown buttons in front of her jumpsuit. \"Your body and eyes are saying something totally different. You need to come.\" He said huskily, unbuckling her belt to enable him undo the rest of the buttons.\n\nTanesha swallowed audibly, her breathing becoming erratic. \"I'm okay, Ty.\" She said shakily even as her clit throbbed with neglect.\n\n\"Don't ever lie to me, Tanesha.\" Ty growled as he parted her top, exposing her lace covered breasts. Her taut nipples pushed out angrily against the black lacy bra. Ty latched onto the sensitive spot at the base of her neck as he pulled on a nipple through the bra.\n\n\"Ty...\" It was a desperate cry of arousal. Tanesha's eye fluttered shut as she gave herself up to the pleasure of Ty's fingers and lips. The throbbing between her legs got so intense she began to whimper. When he leaned down to gently bite the other nipple, Tanesha felt it right in her very core. \"God, that feels so good.\" \n\nShe trembled when Ty's hand left her nipple to travel down her rippling tummy to maddeningly tease the edge of her panties.\n\n\"Ty please...\" Tanesha almost sobbed with need and anticipation, her legs opening of their own accord. \"Please touch me...\" She whimpered brokenly.\n\nTy released the nipple in his mouth and straightened to look down into the lust-filled face of Tanesha. She looked as sexy as sin. And even as he lowered his head to capture her mouth in a hot kiss, his fingers delved beneath the edge of her black lacy panties to find her slick pulsing swollen clit. All it took was one stroke.\n\nTanesha's brain short-circuited as she came completely unglued. She orgasmed with an erotic cry into their kiss as tremors rippled through her. Release had never felt sweeter. But even as she convulsed against Ty in orgasmic bliss, he didn't let up. He kept strumming that clit, making her come again and again until she thought she'd die from too much pleasure. \n\n\"Ty please no more...\" She cried shakily as violent shivers racked her. Her senses were so overwhelmed that she couldn't do anything but cling to Ty and gasp for air. \"Please...\" She whimpered, trying to squeeze her legs shut. When those wicked fingers withdrew from her sensitive clit, Tanesha sagged against Ty, breathing heavily. \n\nTy gathered her spent body into his arms and pressed a ridiculously sweet kiss to Tanesha's forehead that almost had her crying like an infant. \"Are you okay?\" He whispered into her ear. She could only nod. \"Now aren't you glad I didn't listen to that lying mouth of yours?\" Ty murmured against her hair, sounding totally cocky but Tanesha didn't even have the strength to tell him off. \n\nAfter a while Tanesha leaned away from Ty and looked up at him as he began to redo her buttons. \"Don't bother. I need to use the bathroom.\" She murmured, grabbing her bag off the bed. \"And thanks...I needed that.\"\n\n\"How I wish you were sleeping in my arms again tonight.\" Ty groaned, rubbing the pad of his thumb against Tanesha's lower lip.\n\nShe grinned and went up on her toes to kiss him, a contemplative look sliding into place. \"I could. But then I'm so sore I probably wouldn't allow you anywhere near my...\"\n\n\"Get your mind out of the gutter woman.\" He chuckled when Tanesha roll her eyes at his cocky smirk. \"Ever heard of a good old fashioned cuddle? Go do your thing and let's get out of here. The guys are expecting us.\" They were passing through Chris' where the guys were, planning Kyle and Aaron's bachelor party. Their wedding was to take place on the coming Saturday. \"It's going to be a quick stop though. We wouldn't want to miss the movie.\"\n\nTanesha had told Ty on the Island that she'd never had the outdoor movie experience. He remembered. He'd therefore decided to take her to a drive-in theatre, where they could watch a movie from the privacy and comfort of Ty's car. After the movie, the plan was to simply stroll and talk. \n\n\"I can't wait.\" Tanesha beamed. \"And remember I'm cooking you lunch tomorrow.\" She said stepping out of his embrace. \"I'll go shopping for stuff before I come.\" Her last words came for the en-suite bathroom.\n\n\"Why don't you come so we go shopping together?\" Ty called back as he turned off the radio. His housekeeper usually only stocked his fridge and pantry with the essentials since he didn't stay at home much. So he was sure they had to get a lot of stuff. \n\n\"Okay. I'll be there early then.\"\n\n\"That will be good. We can hit the gym before we go shopping as I missed it this morning.\"\n\n\"Yeah, you were busy doing something else.\" Tanesha laughed. \"The idea of working out sounds great. I get to use all those wicked looking gadgets in that gym of yours. They don't get enough attention if you should ask me.\" She chuckled as she came out of the bathroom.\n\n\"Hmmm...not enough attention huh?\" With a naughty smirk on his face, he took her hand and stepped out of the room. \"Can't wait to see you all sweaty and breathless and...\"\n\nTanesha burst into laughter, her head thrown back, the delighted sound causing a tightening within Ty's chest. Tanesha totally missed the reverently loving look Ty gave her. Her laughter warmed his heart. It was one of the many things he loved about her. Ty felt almost giddy with excitement. He actually felt like a teenager on his first date. Tanesha did that to him. And he'd given up trying to figure out why she affected him the way she did. One fact remained though. He loved her desperately. Period! She was his world. He was very thankful for his amazing wife-to-be, who brought him so much joy and pleasure. Nothing and no one compared to his Tanesha. He really couldn't wait to make her completely his. \n\n***\n\n\"What the fuck.\" Ty muttered when he saw his fellow Arrowhead, Jackson, in his woodland camo shirt and trousers, striding towards where he sat with some of the squad and their partners. \n\nThey were at Kyle and Aaron's double wedding with Kyle's twin brother Ken and his soldier boyfriend, Stephen. They were having a really good time. Ty didn't remember ever dancing so much at a wedding. Tanesha loved dancing and had virtually kept them on the dance floor throughout. He loved that she was having fun. Immediately Tristan had cut in to dance with Tanesha, Ty had gone back to his seat to relax. Seeing Jackson was a surprise. But seeing what he was wearing made Ty's heart sink. A battle dress uniform meant one thing...combat. Duty called. \n\n\"Be right back.\" Ty told his friends and stood up to meet Jackson.\n\n\"Dude, where's your phone.\" Jackson growled. Then as if suddenly remembering his place, he gave a quick salute. \n\n\"Cut that out. Lost it yesterday at the bachelor party. Hit me.\" Ty was all business.\n\n\"I'll fill you in on the way. We have to go now.\"\n\nTy knew what that meant. Fuck! \"Will be right back.\" He said grimly and turned to head back to where his friends sat. \n\n***\n\n\"Where's Ty?\" Tanesha asking, sitting down beside Dean's twin brother, Jean.\n\n\"Never mind Ty, darling. His sister is so fucking hot.\" Jean rasped, looking to where Thea danced with Matt. \n\nThere was surprised laughter from the people at the table at Jean's comment, his brother Dean being the most shocked. \"She's only seventeen for fuck's...\"\n\n\"Guys I have to go.\" Ty said, crouching in front of Tanesha. \"Honey, I'm going on a mission.\"\n\n\"What...\" Tanesha's eyes widened in bewilderment.\n\n\"I don't know where I'm going. I don't know when I'm coming back...yet. But I'll try to get in touch with you immediately I get the chance okay?\"\n\n\"Oh my God...\" Tanesha's eyes had welled up. She felt someone's arms go around her waist from the side but didn't even turn to see who it was. \n\n\"Don't cry, baby. That will make it more difficult for me. Please.\" Ty said urgently, getting to his feet and drawing Tanesha up into his arms. \"I'll talk to you before I head out. Here.\" He took the keys to his Bugatti Veyron and another key out of his pocket and pressed them into her hand. \"Drive yourself home when you're ready to go.\"\n\n\"I'll hitch a ride with...\" She began shakily.\n\n\"I want you to use the car till I get back. The second key is the key to the house. Go there whenever you want to. Chris will give you an unlimited credit card...\"\n\n\"I don't want or need money.\" Tanesha sniffled. \"My dad gives me enough. I just want you.\"\n\n\"I know. But I take care of my own. And you are mine.\" Ty kissed her softly. \"Humour me. Spend time in the house. Do whatever you want...redecorate, move your stuff in, prance around naked...\" He smiled when Tanesha laughed shakily. \"I love you, Tanesha.\"\n\n\"I love you too, Ty. Come back to me.\" She was crying. She knew how dangerous his last mission had been and couldn't help but be terrified. \"Please.\" \n\n\"Nothing is going to keep me from you angel. I promise.\" He leaned down and kissed her softly.\n\n\"I'll hold you to that.\" She gave up wiping the tears from her cheeks as they kept coming anyway. \"See you soon alright?\"\n\n\"You can count on it.\" Ty grinned and then turned to hugged everyone at their table. \"Tell Kyle and Aaron to fuck till morning.\" He told the guys. \"I'll talk to you when I get the chance. Take care of her for me guys.\"\n\n\"You know we will.\" Chris said, hugging Ty. \n\n\"Give her a MasterCard Black, Chris.\" The eight friends were partners in one of the top banks in the country. It was managed by Chris who was the sole owner of two other banks. \n\n\"I'll take care of it.\" Chris assured Ty. \"Just go do your thing.\"\n\n\"Yeah. Deal with all the bad guys.\" Jean said, taking a sip of his drink. \"Hey, can I go drop your kid sister home after...\"\n\n\"Oh fuck off Jean. She came in her own car.\" Dean growled as he hugged Ty. \"Be safe.\"\n\n\"Thanks Dean. Hey Jean, touch my sister and I'll castrate you.\" Ty growled, making everyone laugh despite the glum expressions on their faces.\n\nTy gave Tanesha a last sweet kiss and then hurried to where Thea danced with Matt. He hugged his sister and Matt and then quickly dashed to where Jackson stood, waiting for him. Going on a mission always got him pumped, but not this time. He hated leaving Tanesha. There was so much he was looking forward to doing. He'd been looking forward to asking Tanesha's parents for their daughter's hand in marriage the following day. He didn't get to give Tanesha the beautiful expensive ten carat diamond engagement ring he'd bought for her. For the first time since he became a SEAL, Ty hated going on a mission.\n\nTanesha watched Ty leave and wanted to scream out her frustration. Yes, his job was important and all but that didn't mean she had to pretend to be okay with her man walking into danger. She leaned against Damon with a shaky sigh when he gathered her into his arms. Tanesha felt numb all over.\n\n\"I want to go home.\" She whispered to Damon. She would try to be strong for Ty but there was no way she could continue having fun in her current state.\n\n\"Okay.\" Damon nodded. \"I'm taking her home in Ty's car.\" He informed the others. \"Cole, follow us in your car so that I can come back with you.\"\n\nAnd as they sped towards her home, Tanesha couldn't stop the tears that slid down her cheeks. She wanted her mother. They were to return from their trip the following day. She couldn't wait to have her arms around her, rocking her as she usually did whenever she felt miserable as she did right then.\n\n*** \n\n\"Tanny?\" Tanesha heard her mother calling her and groaned. \n\n\"Oh come on mum. I told you I wanted to sleep.\" She muttered to herself as she rolled out of bed.\n\nShe didn't have lectures that day so had decided to try and catch some sleep which had been difficult to do since Ty left on his mission four days earlier. They'd virtually been inseparable for a whole week so not having him around was very difficult for her. He'd called as he'd promised, before leaving the country that day. But she hadn't heard from him again since then and the silence, though expected, was killing her.\n\n\"Mum?\" Tanesha's hesitated on the stairs when she looked down and saw two military men sitting in their living room with her parents. \n\n\"Come down honey.\" Her father said quietly, something in his voice making Tanesha's heart begin to pound within her chest.\n\n\"What is going on?\" She was so confused she totally forgot her manners till her mother's widened eyes prompted her to greet the guests.\n\n\"These gentlemen are here to see you, Tanesha.\" Paul said. \"Come and sit beside me.\"\n\n\"No dad.\" Tanesha said quietly as she wrapped her arms around herself, suddenly feeling cold. \"I'd rather stand.\" Then to the guests, she gave a slight nod. \"I'm all ears please.\" \n\nBoth military officials stood up. \"Ma'am.\" One of the men tipped his head respectfully. \"I'm Captain Campbell. And this is Commander Miller. When Lt. Cdr. Wesley was going on his last mission, he left specific instructions that you were to be notified in case of any...\"\n\n\"Tell me he's okay.\" Tanesha's voice was barely above a whisper.\n\n\"His aircraft was shot down. We've been able to locate the damaged craft but there's no sign of any member of the crew. Now, you don't have to panic. It's very possible they're okay. But his instruction was for us to keep you posted on anything that...Ma'am...\" Captain Campbell shouted.",
        "Tanesha saw the Captain's mouth moving but couldn't hear a word after that first sentence. She felt herself falling but couldn't control her movement. She saw the captain making a mad dash towards her but...\n\nEverything went black."
    ],
    "authorname": "adjoaq",
    "tags": [
        "parents",
        "talk",
        "proposal",
        "mission",
        "tragedy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/sizzling-embrace-ch-07"
}