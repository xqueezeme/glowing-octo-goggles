{
    "title": "Corpsman, Up!",
    "pages": [
        "\"I'm proud of you, son.\"\n\nChance Petersen had never heard those words from his father before in all the 26 years he'd been alive. It wasn't that there weren't opportunities to say them, his father had just never felt that anything his son had done was good enough to merit his doing so.\n\nBut now that he was extremely ill, his entire outlook had changed. Wayne Petersen was a successful doctor who knew he was dying, and he also knew he'd been unduly hard on his son from the time he was a little boy. Even worse, he knew he'd been that way for no good reason as his son was a happy, pleasant child who'd always been eager to please his dad until he finally realized nothing would ever do that. Nothing he did was ever done right. Nothing was ever good enough. Praise was extremely rare and always came with some kind of caveat. And pride was a term he never used.\n\nWhen Chance's Little League team took first place after he pitched the winning game, his father had glibly said, \"Not bad.\" After he graduated from high school as a member of the American Honor Society all he heard was, \"You'll have a tough time becoming a doctor with a GPA lower than 3.8.\" \n\nChance's had been 3.72. Obviously, that wasn't good enough.\n\nA month after graduating and working at a fast food restaurant while still living at home, the constant criticism became too much to take, and Chance found himself driving by a military recruiting center he'd passed a hundred times but never noticed before. On a whim, he walked inside, and when he did, he became every recruiter's dream. A 'walk-in' eager to enlist.\n\nThis particular station had no Army recruiter for whatever reason, so Chance's opportunities were limited to the three other services. The Marine's uniforms looked sharp, but he'd stories about the Marine Corps and wanted no part of either it's Full Metal Jacket kind of boot camp or fighting wars at the so-called 'tip of the spear'. The Air Force seemed like civilians in uniform, and that left just one choice. The U.S. Navy.\n\nChance spent a few minutes talking to a chief petty officer who not only impressed him, but sold him on the Navy in short order. The following week he was taking a physical exam and a series of aptitude tests. Two months after that he found himself in San Diego, California going through Navy boot camp. \n\nHe'd only told his mother he was leaving two days prior, and she'd cried the entire time, but true to her word, she didn't tell his father. When he found out, he dismissed his son's choice as yet one more misguided step in the wrong direction.\n\nChance knew he didn't have a specific job guaranteed after boot camp as he'd enlisted as 'an undesignated seaman.' His recruiter had told him his scores were high enough that he could get pretty much any job he wanted with a very quick mention of something about 'the needs of the Navy' that Chance didn't catch or understand. \n\n\"When you get to boot camp just let them know what you'd like to do and you should have no problem getting it,\" the recruiter told him being careful not to make any kind of actual promise.\n\nSo when he got close to graduating from boot camp, Chance was more than a little surprised to learn he'd be attending what was called 'A school' at San Antonio, Texas. He'd been given orders to attend Corpsman School which was actually located at nearby Fort Sam Houston which was a part of Joint Base San Antonio, with San Antonio being the location for Air Force enlisted basic training.\n\nChance also didn't realize before going to boot camp, he'd have to extend his enlistment to five years rather than four to become a corpsman, but the thought of getting to work in the medical field sounded interesting and he'd gladly done so. \n\nWhen he called home to tell his parents about his next assignment and what he'd done, his dad had told him it sounded like he was wasting five years of his life instead of four then handed the phone to his wife.\n\nUndeterred, Chance attacked this new challenge in a way that put him at the top of his class 19 weeks later. This time he got another 'not bad' from his father. Of course, he'd had to add, \"Not bad for something that isn't all that challenging,\" which meant it wasn't exactly medical school. \n\nChance laughed out loud when he got his first set of orders to the Fleet, the term the Navy used to describe its operating forces. The reason for the laughter was finding out he was going to the Fleet...Marine Force or FMF. Yes, he'd still be in the Department of the Navy and in an operational Fleet, it would just be as a Navy corpsman serving with U.S. Marines, the one branch of service he'd shied away from in order to stay away from ground combat.\n\nWhen he reported to Camp Lejeune, North Carolina, he was assigned to the base hospital then was further attached to the 2nd Marine Division and ultimately to a battalion within one of its three infantry regiments. Unlike the Army which had battalions, brigades, and divisions, the Marine Corps had no brigades, only regiments. Yes, the Army still had Ranger Regiments, but for the most part, they were a thing of the past.\n\nHN Chance Petersen, with 'HN' standing for Hospitalman in pay grade E-3 or the equivalent of a Marine lance corporal, was assigned to 1st Battalion, 8th Marine Regiment, or 1/8 for short. Unlike the Army, it was never called 'the first of the eighth' but simply 'one-eight'. His unit's nickname was the 'Beirut Battalion' as 1/8 had borne the brunt of the suicide bombing attack on the Marine's barracks in Beirut, Lebanon in 1983 where 241 Americans were murdered. Among the dead were not only U.S. Marines but the Navy corpsmen who'd served along with them.\n\nChance lived and trained with 'his' Marines, and along with a whole lot of razzing for being a lowly 'Squid' he was also afforded a lot of informal respect as their 'doc'. It was still too early to tell, but many jarheads considered their corpsmen to be honorary Marines, an unofficial title never bestowed lightly on anyone. But because Navy corpsmen shared the same dangers and hardships as the Marines they served with, a corpsman was often given a decent amount of respect. If he was really good, the Marines would think of him as one of their own, and Chance Petersen proved to be worth two shits as he pushed himself to do everything his Marines did from long runs in uniform to conditioning hikes to firing crew-served weapons to you name it. And while doing that, he also treated all of their basic medical problems, never once complaining or asking for a shortcut.\n\nBut he really earned his spurs during the battalion's ten-month tour of duty to northwestern Afghanistan. Most of the days were long and boring with very little to do but try and work out using the makeshift gym equipment they had at their base camp.\n\nAnd then there were the days they went out on some kind of mission when just leaving the confines of base camp meant dealing the possibility of death at any time due to makeshift bombs called IEDs (Improvised Explosive Devices) buried underground along any known or suspected route of travel. Ambushes were also possible in or around any village or area that afforded the enemy a place to hide and launch an attack. \n\nThose were the times when the boredom was interrupted by a few minutes of sheer terror and was often accompanied by serious injury or death.\n\nChance was there even before the call, \"Corpsman, up!\" was heard from a Marine calling for help for a wounded comrade. \n\n\"I gotcha, man!\" Chance would say as he rolled in and assessed the wound. From basic first aid to tying a tourniquet on a leg losing blood from the femoral artery to administering morphine to stopping the bleeding from a gunshot or shrapnel wound, Chance was there taking care of it all, often while exposing himself to enemy fire.\n\nHad there been beer available 'in-country' Chance would have drunk for free many nights after his unit returned to the relatively safety of its base.\n\nFour and a half years and two combat tours later, HM2 Chance Petersen was unceremoniously released from active duty after signing a few pieces of paper and shaking hands with a bunch of people he'd worked for, giving and getting more than a few back-slapping hugs from the Marines he'd grown to love as brothers for life.\n\nAnd just like that, he was once again a civilian, driving home in the car he'd bought four years ago headed back to his hometown a few miles outside of Seattle, Washington. It seemed surreal to think of where he'd been and what he'd done just several months earlier as he drove along the smooth, paved roads of the interstate highway system where no one knew who he was, what he'd done, or gave shit that he had.\n\nWhen he walked into the house he'd left five years ago, his mother went crazy and started crying. His dad shook his hand, gave him the once over and said, \"I see you've still got two arms and two legs. Not bad.\"\n\nWhen he told his parents he'd been accepted to the University of Washington's Registered Nursing Program, his dad had given him a stern look with a raised eyebrow and said, \"Haven't you had enough of doing a girl's job yet?\"\n\nChance had never shown any disrespect toward his father no matter how caustic the criticism. But this time the anger boiled over inside of him, and Chance stared his father down and said coldly, \"I pity you, Dad. You're gonna die a bitter old man. You'll be rich, but you'll never be happy,\" before walking away.\n\nFor the next three-plus years, they never spoke another word to one another. Chance's mother went to his room on campus and later to the small apartment he rented with a couple of other guys once a week to have lunch or dinner with him, but that was the extent of his family ties. \n\nHe allowed her to pay for the food, but wouldn't otherwise take a dime from her knowing it was money his father had earned. Between the GI Bill and working 20-30 hours a week, he proudly paid for everything the entire time he was in school and never complained about having almost nothing left over for himself.\n\nFor the most part, Chance spent his days in class, his afternoons working, and his evenings and late nights studying. He'd learned the value of hard work on active duty and he was almost singularly focused on not just graduating, but really learning the material. \n\nHis only diversion were several co-eds who found the somewhat-older, ruggedly-handsome fellow student someone they wanted to meet, and quite often, hook up with. He rarely ever mentioned his time in Afghanistan or what he'd seen, but he did occasionally mention his having been a Navy corpsman which added to his quiet, confident mystique.\n\nAnd then one day out of the blue, just before he was to graduate (with honors) from the school of nursing, his mother called to inform him his father had been diagnosed with incurable brain cancer. Chance didn't need his mother to beg him to come home. The moment he heard he hung up and drove straight to the large, beautiful house he'd grown up in, and without saying a word, he hugged his father as though they'd been the closest of friends his entire life.\n\nFor the first time in his life, Chance saw his father cry. The tears weren't tears of self-pity. They were tears of sadness for having been such a distant, cold, uncaring father to his son. \n\nIt was all Chance could do not to cry himself as his terminally-ill father apologized for being such a fool and...such an ass.\n\n\"You were right,\" he told his son. \"I am going to die a bitter, old man.\"\n\nHis father was only 59 years old making it hard to think of him as old. The bitter part, however, had been undeniably true.\n\n\"No you're not, Dad. The past is the past, okay?\" Chance told him.\n\n\"Thank you, son. That means everything to me. After the way I've treated you, I don't deserve your kindness.\"\n\nThe form of cancer his father had was incredibly aggressive, and it was growing at an unbelievably rapid rate. He'd not only been unable to attend Chance's graduation a few weeks later, he was very close to death. \n\nBy sheer force of will, he remained alive and conscious until his son came home a few hours after it was over. When he saw him, Wayne Petersen stretched out his frail arms from his bed and hugged his son. \n\nAs he held him, he said very quietly, \"Congratulations. I'm proud of you, son.\"\n\nThis time, Chance's eyes welled up with tears and he said, \"I love you, Dad.\"\n\nHis father weakly patted him on the back then said, barely able to speak, \"I'm not just proud of you. I love you, too, Chance.\"\n\nChance wiped his eyes with his sleeve before standing up and saying, \"Get some rest, Dad. I'll be back first thing in the morning, okay?\"\n\nHis dad nodded and raised his hand slightly. Chance took it and gently squeezed it just before his father closed his eyes for what was to be the last time. Later that evening while Chance was out celebrating with friends, his dad slipped into a coma and by the time he showed up early the following morning, his father was gone.\n\nThere was no reason for his mother to interrupt her son's celebration when her husband took his last breath around 6:30am the following morning. She sat there holding his hand, grateful he'd finally made peace with their only child.\n\nAfter the funeral his mom asked him just before he got ready to leave, \"What are your plans?\"\n\nAs a registered nurse, his skills were very much in demand. Chance had several job offers to choose from and was trying to decide which one to take. He explained the three he thought were most interesting before his mom asked another question that surprised him.\n\n\"Do you think you might want to settle down one day and maybe start a family?\"\n\n\"I don't know, Mom. Eventually, yes. But I kinda have to meet the right girl first, you know?\" he said with a smile. \"And now that I'm just starting out in a new career, I don't see me doing a lot of dating let alone getting married anytime soon. But yes, someday I'd like that.\"\n\n\"You were so busy in the Navy you didn't date a lot, and I don't remember meeting too many girls when you were in college. I guess I was just doing some wishful thinking,\" she told him.\n\nHe knew she was having a hard time being on her own for the first time since she was 21, but he just couldn't bring himself to move back home. Chance made it a point to drop by as often as he could, but actually living there was out of the question.\n\nHe eventually settled on a hospital in downtown Seattle and gladly accepted the opportunity to work in the ER because that was where the action was and where he felt he could do the most good. Because he'd be exposed to so many different kinds of injuries, it would ensure he'd learn every aspect of his craft much faster than say working for some clinic or HMO.\n\nAt some point, he'd try and move to a quiet, private practice, but for now, treating people who were severely injured seemed like the best and most interesting thing for him, and Chance found himself thoroughly enjoying the challenges of the job. \n\nThe exceptions were seeing children brought in who'd been shot or critically injured in a car accident or some other mishap. He'd never given much thought to having children of his own, but his heart went out to each one of them as he gave his all to helping save their lives. In those rare instances where he and the doctors couldn't, he'd find a quiet place out on an exterior balcony on an upper floor and privately shed a few tears before picking himself back up and going at it again in what seemed like a never-ending battle of life and death. \n\nAnd yet that's what life was\u2014a constant struggle to survive even when everything seemed perfectly safe and normal. The man in the black hood with the scythe was always nearby, just lurking and waiting to strike. Most people weren't aware of that and went about their lives as though they would never end. But even at his relatively young age, he'd long ago learned that wasn't true.\n\nAfter a particularly grueling 18-hour shift during his third month on the job, Chance couldn't wait to get back to his apartment and crawl into bed and go to sleep. He'd experienced physical exhaustion many times during his two tours in Afghanistan as well as on some training exercises, but he'd never had to drive home when he was barely able to stay awake. So each and every time he got behind the wheel he steeled himself to stay alert to minimize the chances of sending someone\u2014or himself\u2014to the ER he'd just left.\n\nIt was a little after 6am and although the traffic was already building, it still wasn't bad. In another half hour it would be bumper-to-bumper for several hours and just as bad from about 3-7pm at night.\n\nHe was sitting at a light waiting for it to turn green when he heard the sound of tires squealing. He couldn't identify the direction for a second or two, but when he saw a car go flying around several others across the street in the wrong lane, he could tell things were about to get really bad very fast. The car was in the left lane and headed straight for oncoming traffic which was the lane Chase was currently in.\n\nThe car not only didn't slow down for the red light, it accelerated at the intersection and as it blew through the light, it plowed into a car passing from Chance's right to left. Had it not hit the other car, it seemed almost certain it would have hit his own car head on. As time often does in such situations, things seemed to slow down as Chance clearly saw the collision then watched the car that was hit spin around and flip over after having been struck in the right rear.\n\nThe car that ran the red light careened to its left after the collision then slammed into a light pole before jumping the sidewalk and flying sideways into the side of building. \n\nChance turned right and parked his car just a few feet from the one that had smashed into the wall. He grabbed his phone, jumped out, dialed 911 then ran to the car and looked inside. The driver, who hadn't been wearing a seat belt, was slumped over and Chance was almost certain his neck was broken. He managed to get the door open then looked in and as he checked for a pulse looked into the young man's eyes. The pupils were already unresponsive to light and continued dilating as he looked at them and Chance knew he was gone. \n\nThe stench of alcohol was overpowering and explained the reason for his reckless driving.\n\nAs he reported the location to the 911 operator, he carefully made his way through the snarl of traffic that was stopping to gawk and rubberneck at the other vehicle that was upside down in the middle of the street.\n\nTwo other men were trying to open the driver's side door as Chance arrived.\n\n\"Pull harder!\" one of the men said as the door opened slightly.\n\nAlong with the other man, Chance pulled as hard as he could, and the tangled mess of metal creaked open. The driver appeared to be in his late 60s or possibly his early 70s and he was hanging upside down by his seatbelt.\n\nChance told the other men who he was and they stood back letting him take the lead. \n\n\"Sir, are you okay?\" he asked.\n\n\"My leg,\" the man said.\n\nChance bent down and looked up and couldn't see any signs of a break, but it was impossible to tell from that angle.\n\n\"What else? Does anything else hurt?\" Chance asked as he tried to evaluate the man.\n\n\"My neck. I hit my head pretty hard,\" the man said. \"Is the other driver okay?\"\n\n\"He's...fine,\" Chance lied before asking for a knife.\n\n\"Okay. You hold him here and you here,\" Chance said as he got on top of the car which was the undercarriage. \"I'm gonna cut the shoulder harness and then the lap belt if I can reach it. Do not let him fall! and cradle his neck. Got it?\"\n\nThe other men squeezed in tight and got in the best position they could.\n\n\"You ready?\" Chance hollered.\n\n\"Go for it!\" one of them yelled back.\n\nChance sawed the knife blade back and forth several times before it gave way.",
        "The man was obviously in pain but didn't scream.\n\n\"Can you unhook the lap belt or does it have to be cut, too?\" Chance asked.\n\n\"I can see it,\" one of them said. \"Hold on!\"\n\nTwo seconds later he pulled on the release and the driver was free. \n\n\"Be careful with his back and neck!\" Chance hollered as they slowly pulled him out. \"Lay him down right there then stop traffic.\"\n\nTraffic had already stopped, but that didn't mean some idiot wouldn't try and force his way through.\n\nChance examined the man from head to toe asking if anything hurt as he gently probed and prodded. The man winced and grimaced several times when Chance found an area that had been hurt. Nothing was life threatening but it appeared he'd taken a helluva shot to the side of his head during the impact. He drove an older car that didn't have side airbags, and Chance thought he might have a concussion along with a badly banged up knee and possibly a broken clavicle.\n\nWhen the EMTs arrived, one of them recognized Chance from the ER.\n\n\"What have we got?\" he asked.\n\nChance rattled off everything he'd found in a quick, professional manner before the EMT said, \"Okay. We got it. Thanks, man!\"\n\nHe waited until the driver was on the gurney then told him, \"You're gonna be okay, sir.\"\n\n\"Thank you, young man,\" he said with genuine gratitude. \"God bless you!\"\n\n\"I know these guys, and you're in good hands,\" Chance assured him. \n\nAnd just as it had been in Afghanistan after a firefight or an IED, it was suddenly over and he was back in his car sitting quietly as though nothing had happened as he waited for the police to arrive to take his statement. He sat there watching in a detached kind of way as the coroner's vehicle arrived next. In less than five minutes, the young man who'd been very much alive and well some ten minutes ago was taken off to the morgue to be prepared for burial or cremation.\n\nThe fragile nature of life still amazed him. Human beings were, in many ways, strong and resilient. And in many others, one's life could drain away in a matter of moments in so many different ways. In this case, had he just been wearing a seatbelt, the driver would have almost certainly lived. But the high-speed impact of his head with the windshield had snuffed out his life in an instant. Had he not been drunk, he'd have almost certainly never have done something so reckless and deadly. But he had been drinking, and he wasn't wearing a seatbelt, and no power on earth could undo what had been done. Death had just won another round without putting up a fight.\n\nChance dutifully explained everything he'd seen and done after providing his name and other personal information. The officer who took his statement thanked him then told him he was free to leave.\n\nAnd just like the day he'd left active duty, he was soon driving home on a smooth road, the smells of death and danger behind him. It could well have been him who'd been hit and had it been head on...who knew? As it was, a miss by a few feet was as good as a mile, and he was not only alive but uninjured and had been able to offer help to those who were.\n\nThe adrenaline wore off by the time he got home, and Chance was too tired to even take a shower. He kicked off his shoes, laid down on the bed, and didn't wake up for ten solid hours.\n\nBy the time he got back to work 24 hours after waking up, the man he'd helped rescue had been discharged, but everyone who worked with him knew what happened and there were a lot of high fives and congratulations when he walked in. The celebration was short-lived as a gunshot victim was wheeled in two minutes later.\n\nTwo weeks passed as Chance worked an average of 12 hours a day. He was growing very comfortable with the 'routine of chaos', an oxymoron he found amusing, and was quite happy with the choice he'd made to work in an ER.\n\nFor the first time since he'd started the new job, Chance had a weekend off and planned to take advantage of it. He had a ton of things he had to do and many more he wanted to do and carefully prioritized the list before heading out early in the morning to start whittling away at the list. \n\nIt was a little after 10am when he found himself a few miles south of the city when he saw a car on the side of the road with its blinkers on. He checked his watch knowing he was going to stop no matter what time it was then pulled in behind it and shut his car off.\n\nHe tried to make sure the driver, who was a woman, could see him before walking up to the door and tapping on her window thus scaring her to death. He waved from the back of her car to let her know he was there to help and as he walked to the front, she rolled the window down.\n\n\"Is everything okay?\" he asked as he saw her for the first time.\n\n\"Well, no,\" she said. \"I'm so embarrassed, but I ran out of gas. I've never done this before as long as I've been driving, but well, as you can see, I'm stuck, and I can't leave my daughter alone, and I'm afraid to get out and walk on this road with her.\" \n\nChance glanced inside and saw a girl of about eight or nine sitting quietly in the back before taking a real look at the woman driving the car.\n\nHe wasn't sure of her age, but she had to been at least 30 to have a child that age. No, that wasn't true. It was physically possible for her to be quite a few years younger, but his best guess was from maybe 28-35. She had the most beautiful reddish-brown hair he'd ever seen. In fact, he couldn't remember ever seeing anyone with hair that color before. He was trying to think what that color might be called, but he didn't know chestnut from auburn or any other shade and settled on 'reddish brown' which was at least accurately descriptive. \n\nWhen she glanced over at him he saw the bluest eyes he'd ever seen along with a kind of narrow nose set over two very soft-looking, very full lips.\n\n\"Would that be okay?\" Chance heard her say before realizing he hadn't been listening but had rather been staring and daydreaming.\n\n\"What's that?\" he asked.\n\n\"Could we maybe ride with you?\" she asked.\n\n\"Um, right. Well, sure. I mean, we'll have to leave your car here unattended, though. Or I could go buy a can and get some gas and bring it back to you,\" he told her.\n\n\"I'm honestly a little afraid to sit alone,\" the woman said. \"Would you mind if we went with you? If you have to be someplace, I understand. I just thought...\"\n\n\"I won't let anything happen to you, Mom,\" the girl in back said.\n\n\"Oh, thank you, honey. I know. I just think it isn't very safe to sit here with cars whizzing by.\"\n\nShe looked at him full on for the first time as she turned toward and again asked, \"Would that be okay?\"\n\n\"Um...yes. Sure. I'm happy to give you a ride. And I wouldn't feel safe sitting here, either,\" he said as he opened her door.\n\nChance tried not to stare when she stepped out onto the shoulder of the road, but because the rest of her was as 'well-put-together' as her very pretty face, it was a real challenge not to at least keep looking.\n\n\"Do you have anything we could write a note on to let the police know we'll be right back so your car doesn't get towed?\" Chance asked as he went around to help the girl get out.\n\n\"Oh, sure. I've got a notepad in my purse. I'm glad you thought of that,\" she told him as she got out a pen along with the pad and started writing.\n\n\"Now if it just doesn't rain before we get back,\" the woman said as she slipped it under the windshield wiper.\n\n\"It doesn't look too bad,\" Chance said raising his head up above the roof to look at the gray sky as he opened the rear passenger door. \"I may even have a clear plastic sandwich bag in my car you can put the note in.\"\n\nHe went around back to help the little girl out and when he did she thanked him pleasantly.\n\n\"Thank you,\" the little girl said quietly as he helped her out.\n\n\"You're very welcome,\" he told her. \"How about you and I stay on this side and we'll get you into my car?\"\n\n\"Okay,\" she said politely as her mom locked their car and joined them.\n\nChance opened the back door for her daughter then closed it once she was in then opened the passenger door for the beautiful woman whose name he still didn't know.\n\nShe also thanked him before he went around to the driver's side and got back in.\n\n\"I can't thank you enough,\" the woman told him as she pulled her seatbelt on. \n\n\"It's my pleasure,\" he said. \n\nHe started the car then glanced over and said, \"My name's Chance. Chance Petersen.\"\n\n\"Oh, my gosh! I'm so sorry. I've been so focused on me and my problems, I forgot to introduce myself. I'm Danika. Morris.\"\n\nShe smiled as she told him her name and couldn't help but notice her smile was as amazing as her body which was as amazing as her face which was...\n\n\"I'm Echo,\" the girl said interrupting his train of thought.\n\n\"It was her father's idea,\" Danika said causing Chance to wonder how many times she'd explained her daughter's unusual name.\n\n\"I like that name,\" Chance said glancing back. \"It's so much more fun that Sally or Mary or...\"\n\n\"Girls don't have those names anymore,\" Echo said. She wasn't being curt or rude. She was just letting him know those names were from the past.\n\n\"Right you are!\" he said with a smile.\n\n\"She's very intelligent,\" her mother told him. \"She's nine years old and in high school.\"\n\nChance's eyes opened wide with surprise.\n\n\"It's very humbling to have a daughter who's smarter than you are. Trust me,\" Danika said with another smile. \"Sorry. Not you. By 'you' I meant me, of course.\"\n\n\"No, I'm sure she's smarter than me, too,\" Chance said smiling back. \"Okay, let's go find a gas can and some gas, shall we?\"\n\nIt only took about 10 minutes to get to a gas station and Chance was able to buy a 2.5-gallon plastic container and fill it up. Danika insisted on paying for it, but Chance needed gas himself and just added it to his credit card bill while politely declining both times she offered to pay. \n\nAs they headed back to her stalled-out car she said, \"This is so nice of you, Chance. We were on our way to my dad's place when my car started sputtering then died. I had no idea what was wrong until I saw the needle buried in the 'E'.\"\n\n\"My grandfather was in a car accident two weeks ago. As a result, he sustained a fracture in C3 and some damage to C4,\" Echo offered.\n\n\"His vertebrae,\" Danika offered as though Chance wouldn't understand.\n\n\"Oh. That sounds serious,\" Chance said looking back at her without mentioning he knew what C3 and C4 meant. Of course, C4 had a military application, but that was another story.\n\n\"The injury isn't serious, per se, but because of the sensitive location, it can be very debilitating,\" Echo informed him. \"And painful.\"\n\n\"You see,\" Danika said quietly with a smile.\n\n\"I'm sorry, Mom. I was just explaining Grandpa's injury in the simplest way I know how. I wasn't trying to offend you.\"\n\n\"No, that's fine, honey. I'm sure Chance appreciates that,\" Danika said smiling at Chance again.\n\n\"Well, I'm glad he wasn't more seriously hurt,\" Chance said to both of them.\n\n\"Thank you. So are we. He lives alone now and he's so independent and stubborn sometimes. We learned that the guy who hit him was drunk and ran a red light.\"\n\nBefore Chance could ask where it happened, Danika said, \"I guess I shouldn't complain. The guy who hit him was killed instantly.\"\n\n\"He had a blood alcohol level of 0.32 which is four times the legal limit in the State of Washington,\" Echo let him know.\n\n\"Was that the accident at Mercer and 16th?\" Chance asked.\n\n\"Yes. Did you hear about it?\" she asked. \"The EMTs came and took him to the nearest ER. Dad said there were three young guys who helped him get out of the car. He was hanging upside down in his seat belt when one of them cut him loose. Dad thought he'd had medical training by the way he took care of him. I wish I had his name so I could thank him.\"\n\n\"Grandpa says they don't make young men like that anymore,\" Echo added. \"That's a euphemism intended to convey the idea that people in the current generation aren't as caring or giving as in generations gone by. It's clearly not a valid observation as there are people with those character traits in all generations.\"\n\n\"There are still a few good guys around,\" Chance said with a smile as Danika just shrugged her shoulders.\n\n\"My dad thinks they were all heroes. The one guy especially. Evidently, he works at the ER where they took my dad.\"\n\n\"Oh?\" Chance said as though he wanted to know more.\n\n\"Yeah. Dad kept going on and on about those 'fine young men' and when he described one of them, one of the nurses said, 'Oh, that's...\"\n\nShe stopped talking and looked over at him before finishing her sentence. \"Chance.\"\n\n\"Wow. What a coincidence,\" he said trying not to smile.\n\nDanika turned nearly sideways in her seat and stated at him.\n\n\"She said he was very handsome. Tall, dark hair, great smile.\"\n\nHe turned toward her and smiled.\n\n\"Oh...my...goodness! Are you...was that...did you...?\"\n\n\"Well, if your father is thin, gray, wears glasses, and drives...drove...a 2005 Nissan Altima then...\"\n\n\"It was white,\" Danika said very quietly. \"His vehicle was white although the paint was severely faded making it hard to tell.\"\n\n\"Huh. Yeah, what a coincidence,\" Chance said still smiling.\n\n\"Oh, my gosh! That was you!\" she said excitedly. \"You have to come meet my dad. If you have time, that is. I...I can't believe this. This is...crazy!\"\n\n\"Low-probability events are rare, but they do happen. Just ask any lottery winner,\" Echo said in a matter of fact kind of way.\n\nDanika covered her mouth and tried not to laugh, but she couldn't help it.\n\nChance saw Echo cross her arms and look out the window.\n\n\"She hates it when I laugh at something...\"\n\n\"Go ahead. You can say it, Mom.\"\n\n\"Well...precocious,\" her mom said.\n\n\"Technically, the things I say are indeed 'precocious', but only because of my relative youth. However that in no way renders them less factually accurate. For some reason, my mother finds my comments amusing.\"\n\nChance was also trying not to laugh and managed to hold it together as Danika fought to regain control.\n\n\"I wasn't being critical, honey,\" her mom assured her. \"Sometimes you're just so smart it...it scares me.\"\n\n\"Oh, great. And now you're being patronizing,\" Echo quipped. \"Do you see what I have to put up with, Chance?\"\n\n\"We all have our crosses to bear, right?\" he said.\n\n\"We do indeed. Mine was to be born with an IQ of 162. Well, I wasn't born with that IQ, of course. I was actually born with the raw materials needed to eventually test at that level.\"\n\n\"One sixty-two?\" Chance said. \"Where were you when I was taking organic chemistry and calculus?\"\n\nMissing the humor, Echo answered what she thought was a direct question.\n\n\"That depends on how long ago it was. I'm taking calculus this year, though, so it's probably too late for me to be of any benefit to you.\"\n\n\"Well, you're definitely a very smart young lady,\" Chance told her.\n\n\"I do have to credit my mother with providing me the kind of nurturing atmosphere conducive to free inquiry and learning, though. Had I been born to other parents who were less...\"\n\n\"Oh, look! There's our car!\" Danika announced before Echo could finish her latest dissertation.\n\nChance pulled up behind her vehicle, asked Echo to stay in his for a couple of minutes, then grabbed the gas can, and waited for Danika to open the cap cover from inside the car. \n\nThe two-and-a-half gallons chugged into the tank in a few seconds, and Chance said, \"That'll get you back to the gas station, and you'll be all set.\"\n\n\"I really can't thank you enough, Chance. For the gas and for...oh. Is there any chance...sorry...possibility...you could stop by and say 'hi' to my dad? He would really, really appreciate it,\" she asked in a way that made him realize he couldn't say 'no'.\n\nThe two things he had to get done were already checked off his list, and the ones he 'only' really needed to get done could wait. \n\n\"Sure. I'd like that,\" he said not sure how he really felt about it. Then again, he could think of a lot of things much worse than spending time with an extremely attractive woman\u2014even if she was old enough to have a daughter who was a no-kidding genius.\n\nDanika went back to get Echo, and after telling her Chance was going to follow them to her grandfather's she said, \"It doesn't make sense for me to move again if we're all going to the same destination.\"\n\n\"Echo?\" she said in her 'I've had enough' voice.\n\n\"Okay. Okay!\" her daughter said as she got out of Chance's car.\n\nUnwilling to let it go she said, \"It's not like he's some kind of serial killer.\"\n\nChance only heard that part of the exchange and gave Danika a bit of a look.\n\n\"Don't ask. Please!\" she said holding her hands up.\n\nOnce Echo got into their car she quietly told Chance, \"She's intellectually brilliant but socially um...awkward. Sometimes she says things other kids\u2014or adults other than me or my dad\u2014don't understand. I hope she's not driving you crazy.\"\n\n\"No. Not at all. I actually think she's pretty great,\" Chance said.\n\n\"Wow. If only my ex-husband had felt that way,\" she said wistfully without explanation.\n\n\"So I guess I'll be following you?\" Chance said.\n\n\"Oh, right. Yes. As you said, I'll need stop for gas, and then it's about five miles from there. Are you sure you have the time to do this? I mean, I know I'm the one who's trying to twist your arm to visit my dad, and I kind of feel guilty. I'm sure you have plenty of better things to do.\"\n\n\"I do have plenty of things to do, but nothing more important that can't wait in order to see your dad,\" he told her truthfully.\n\n\"Well, thank you. Really. So...I'll go ahead and take off then,\" Danika said.\n\n\"Please don't lose me or I'll be lost,\" he said with a smile.\n\n\"Well, I could give you my number so if you do get...\"\n\nChance smiled then told her, \"I think that's the easiest time I've ever had getting a beautiful woman's phone number.\"\n\n\"Ha! You did notice I have a nine-year daughter, didn't you?\"\n\n\"I did, and what does that have to do with your being beautiful?\" he asked with a tilt of his head.\n\n\"Unlike you, I'm not exactly young or beautiful. Not that you're beautiful. Well, you are but what I meant to say was you're very han...\"\n\n\"Why don't you give me your number and I'll follow you,\" Chance said before she could ramble on any further.\n\nIn spite of her reaction, Chance knew she appreciated the comment, and the way she was talking told him she was also clearly flustered which he found a bit odd because she really was quite attractive, and attractive people tended to used to flattery. He'd been told many, many times he was a good-looking guy, but he knew he wasn't Hollywood gorgeous so it didn't make any sense that a compliment from him would have that effect on a woman like her.\n\n\"Are you ready?\" he heard her ask before realizing he'd been drifting again.\n\n\"Oh. Sure. Go ahead,\" he told her as he fished his phone out of his pocket so she could give him her number.\n\n\"Okay. Lead on!\" he told her once the info was stored. \n\nHe saw her reach for her door but waved his hand then opened it for her.\n\n\"Thank you!\" she said. \"Wow. I can't remember the last time a man did that for me. Well, other than when you just let me in and out of your car, of course.\"\n\nShe smiled and said, \"I tend to ramble. Echo lectures and I...ramble. Sorry.\"\n\nChance just smiled, then, after closing her door, went back and got in his car and stayed right on her tail back to the gas station then all the way to her father's modest home just outside the city limits. As they drove along, Chance also found it hard to believe that a woman like Danika didn't have a man or men opening doors for her. Anything was possible, but that seemed highly unlikely. She wasn't just attractive, she clearly took very good care of herself from that beautiful reddish-brown hair to her very nice figure to the way she dressed.",
        "Then again, maybe she was recently divorced and not ready to date. It wasn't that big a deal, it was just something Chance found very puzzling, and as someone prone to look for explanations, he was having trouble letting it go.\n\nDanika parked in the driveway while Chance pulled up to the curb and parked on the street. He had no intention of staying, and he had no right to pretend he was family or even a friend so this seemed more appropriate to him.\n\nDanika waited for him while Echo got out of the back seat. \n\n\"My grandfather's going to be so happy to see you,\" she told him again. \"Since my grandma died, he's been living a life of self-imposed solitary confinement.\"\n\nChance saw the look on Danika's face, but this time she didn't laugh, smile, or respond. Evidently she was used to hearing her daughter offer such adult-sounding comments. He knew there were child prodigies who could play Beethoven's symphonies on the piano at very early ages or do incredibly complex math problems at a similar age, but he'd never met one\u2014or someone close to being one\u2014until now. \n\n\"Come on. Let's go inside,\" Danika said with a smile.\n\nAs they walked toward the door, Chance couldn't help but think that perhaps the 'mystery' was no greater than Danika's young daughter who could intimidate or scare off potential suitors.\n\n\"Dad?\" she called when she unlocked the door. \"We're here!\"\n\n\"Come on in, Dani!\" a male voice called out.\n\n\"Grandpa! We have a surprise for you!\" Echo told him as she ran ahead.\n\n\"Oh? Is it something delicious I could eat?\" he asked. \"I'm starving!\"\n\n\"No, it isn't food this time,\" she said as Danika entered the room where her father was wearing a neck brace as he lay in a recliner watching television.\n\n\"Hi, Dad!\" she said as she bent down and kissed him on the cheek.\n\n\"Hi, honey. I was getting a little worried.\"\n\n\"Well, we...I...ran out of gas,\" she admitted.\n\n\"Oh, dear. Someone forgot to fill up any time the tank gets below half, didn't she?\" her father said in a way that was unclear to Chance if he was teasing or chiding her.\n\nThe older man still hadn't seen his 'hero' yet so Danika smiled at him then said to her father, \"Dad? You remember how you said you wished you'd known the names of the guys who helped you?\"\n\n\"Of course. How could I forget? Without them, Lord knows how long I might have hung there upside down or maybe even been hit by another car.\"\n\n\"Well, I know one of their names,\" Danika told him.\n\n\"Oh? Which one?\" he asked.\n\n\"The tall one with the dark hair,\" she said admiring Chance's nearly-black hair.\n\n\"In fact, I ran into him today,\" she said, still smiling.\n\n\"Oh, my. What are the odds of that happening?\" he asked rhetorically.\n\nEcho answered for her mother.\n\n\"Without additional information, it would be impossible to compute them, Grandpa. Suffice it to say the odds would be extremely low but most likely higher than winning say...a Powerball jackpot.\"\n\nNeither he nor Danika laughed this time so Chance made sure not to even smile as she said, \"Dad? I'd like you to meet him.\"\n\n\"Him? The young man with the dark hair? Honey, I can't really even get out of this chair let alone go somewhere.\"\n\nBecause he couldn't even turn his neck, the man had no idea anyone else was in the room until Chance moved into his peripheral vision and then in front him.\n\n\"Hello, sir. It's good to see you again,\" Chance said as he extended his right hand.\n\nThe older man perked up immediately and smiled broadly.\n\n\"Well, hello there, young man! I never got the chance to thank you,\" he said as they shook hands very gingerly.\n\n\"How are you feeling?\" Chance asked.\n\n\"Well, other than my neck, pretty good, I guess,\" he replied.\n\n\"Don't forget about your fractured clavicle, Grandpa,\" Echo reminded him.\n\n\"Oh, right. Well, that doesn't really hurt too much now. I suppose if I could get around, I'd notice it a lot more, but laying here all day or in bed all night, I can't really tell.\"\n\n\"Dad, this is Chance. I don't believe you told me your last name. Or if you did I forgot it already.\"\n\n\"Petersen,\" he said.\n\n\"Chance, this is my father, George Baker.\"\n\n\"Do you have some time to sit down and talk, Chance?\" Mr. Baker asked.\n\n\"Well, I could stay a few minutes,\" he replied. He'd still have plenty of time to take care of a few more things on his list whether he left now or fifteen minutes later.\n\n\"Chance? Can I get you something to drink?\" Danika asked.\n\n\"Oh, no. I'm fine,\" he told her.\n\n\"How about you, Dad?\"\n\n\"I could really use a cup of coffee, honey,\" he told her as he reached for the power remote for the chair and raised the back up. \"And I am a little hungry.\"\n\n\"I'll get it, Mom,\" Echo said. \"I know how to make coffee. And I can pop something into the microwave to hold Grandpa over while you talk.\"\n\n\"Well, okay. Thank you, sweetie,\" her mom said.\n\n\"May I have some, too?\" Echo asked referring to the coffee.\n\n\"Um...nooo,\" her mom said with a shake of her head. \"Just because you're as smart as an adult...\"\n\n\"I know, I know. That doesn't mean I am an adult,\" Echo said as she headed for the kitchen.\n\n\"That one's something else,\" George said mostly to Chance.\n\n\"I don't think I've ever met anyone her age who's that intelligent,\" he said in reply.\n\n\"Dad taught high school math for 42 years, and as of last year, he couldn't help her anymore,\" Danika said.\n\n\"That's incredible,\" Chance replied. \"Did you always know she was...\"\n\nHis brain struggled for the right word and he knew 'different' wasn't it.\n\n\"Gifted?\" Danika offered supplying the word.\n\n\"Yes. Gifted.\"\n\n\"We were pretty sure from the time she was about three and a half. She didn't start talking until a couple of months before then when all of a sudden her vocabulary just exploded,\" Danika told him.\n\n\"The first time I read her a book with some simple math problems I could tell she understood,\" George said. \"So I started writing down some simple addition problems and at three she told me, 'So if you do the opposite, you get the top number.' She intuitively saw that subtracting was the inverse of adding.\"\n\n\"She was four and half then and by five she was multiplying and dividing. A few months later she was doing basic algebra and solving for 'x'. The next year she aced both geometry and trigonometry. As you heard she taking calculus this year, but it isn't basic calculus. She did that last year. This is second-year college calculus and everything in her problems looks like a drunk chicken stepped in ink and walked all over the page,\" Danika explained.\n\n\"Not everyone finds her advanced abilities quite as interesting or as...endearing as we do,\" George said.\n\n\"Dad,\" Danika said in a way that indicated he was getting close to saying something personal.\n\n\"Well, it's true, honey. That SOB walked out on you because of it,\" he said trying to shake his head in spite of the neck brace.\n\n\"My ex-husband left us two years ago. A lot of it had to do with his inability to cope with Echo's...personality, but there were other things going on, too,\" she offered. \"I'm sorry. You came by to say 'hello' and we're getting into our family history. Please don't think we're all a bunch of kooks,\" she said with a smile.\n\n\"I think you're all wonderful people with a very interesting, very unusual daughter or granddaughter,\" Chance said smiling back.\n\n\"Unusual doesn't necessarily indicate something negative,\" they heard Echo say as she carried in a cup of hot, instant coffee for her grandfather.\n\n\"Thank you, sweetheart,\" he said. \"And yes, you're right. Unusual can be a positive. Like in your case.\"\n\n\"So is it true you're a registered nurse?\" George asked out of the blue. He smiled then said, \"You're quite a hit with the ladies at the hospital.\"\n\n\"Oh, well, I don't know about that, but yes, I am an RN,\" he told him.\n\n\"I can see that,\" Danika said with a smile. \"I mean the part about being popular with the ladies.\"\n\n\"My mom's flirting with you,\" Echo said to her mother's horror. \"She lives alone and never goes out because she doesn't think anyone would ever be willing to accept me as their child.\"\n\n\"Echo! Please. I was just making conversation,\" he mother said, that flustered look back.\n\n\"I can't understand why you're offended at the truth,\" Echo told her mother.\n\nWithout waiting for a response, she continued.\n\n\"It seems rather obvious Chance doesn't see me as an overall negative. Also, he has a very symmetrical-looking face and is therefore very attractive. The same is true with regard to yours, Mom. Both of you are single, so the only hindrance I see to furthering your relationship is an age differential, but that may not prove to be an insurmountable issue unless you were to choose to make it one.\"\n\nChance had no idea what to say as Danika sat there looking like she, too, was at a loss for words.\n\n\"See what I mean?\" George said with a smile.\n\nChance saw Echo look at her grandfather then say, \"I don't usually get sarcasm, but I am learning to identify the telltale signs, and I believe this is one of those cases.\"\n\n\"Sarcasm doesn't necessarily imply meanness,\" her grandfather said trying to use words she could relate to.\n\n\"No. Not always,\" she said in reply. \n\nWithout warning, Echo asked, \"May I go to your study, Grandpa?\"\n\n\"Oh, sure. Go right ahead, Echo-Gekko,\" he told her.\n\nEcho gave him a look but didn't say anything before leaving the room.\n\n\"She's not a fan of nicknames,\" her mom explained. \"She thinks they're 'juvenile and demeaning'. My dad's the only person she allows to call her that.\"\n\n\"She's fortunate to have people who love her,\" Chance said without getting into his own childhood experiences.\n\nChance was going to excuse himself when George asked, \"So you've been an RN for a few years then, right?\"\n\n\"Oh, um. No. I only graduated from college a few months ago,\" he said.\n\n\"I have a hard time telling how old people are anymore, but you don't look 22 or 23 to me,\" George said with a smile.\n\n\"No. I'm a little older. I was in the Navy for five years.\"\n\n\"Oh. A military man. What'd you do?\"\n\n\"I was a corpsman,\" Chance told him. \n\nHe wasn't sure why, but then he said, \"My dad was a doctor so maybe that's why I chose nursing. Or maybe it was just a logical step after kind of being a nurse on active duty.\"\n\n\"That's like a medic, right?\" Danika asked not quite sure what the difference was.\n\n\"Yes. The Army and Air Force call them medics and the Navy uses the term corpsman,\" he explained.\n\n\"So did you go to war?\" George asked before taking another sip.\n\n\"I did,\" Chance said quietly. \"Twice.\"\n\n\"I never served. I got a deferment during Vietnam to finish college and then they stopped drafting so I never had to enlist,\" the older man explained. \"But I guess things worked out okay. I met Dani's mother, and we had her, so between the two of them I've had a pretty great life. And now I have a granddaughter I dearly love, too.\"\n\n\"You're daughter is a very intelligent and beautiful woman,\" Chance said to him as he looked at Danika.\n\nShe rolled her eyes as if to say, \"Oh, there you go again.\" She smiled pleasantly but didn't reply.\n\n\"Echo was right, you know. Dani is single,\" her father said as he watched for his daughter's reaction.\n\n\"Dad! What on earth is in that coffee! Did you tell Echo to 'spice it up' again?\"\n\n\"No. There's no brandy in it. I was just letting this handsome young fellow know you're available. That's all.\"\n\n\"Oh, my God!\" Danika said.\n\nShe turned to Chance and apologized.\n\n\"I am so sorry, Chance. I've learned to accept this kind of thing from my daughter. But my dad? Oh, no. He is in so much trouble!\" she said to Chance as she glared at her father who was still grinning.\n\n\"Well, you won't go on those dating sites and you never get out. So if you won't look after yourself, someone has to, right?\" George said before he laughed which caused his neck to hurt.\n\n\"Hah! See. You deserved that, Dad!\" Danika told him as he winced.\n\nShe turned to Chance again then said, \"If we hadn't scared you off before, you're probably praying for a way to escape and run like hell by now.\"\n\n\"I do have a bunch of things to do today, but I'm definitely not trying to escape. So if I do excuse myself it's not because I haven't enjoyed meeting you or your family,\" Chance explained.\n\n\"I'm glad you stopped by, Chance,\" George said as the younger man stood up.\n\n\"I'm glad you're doing okay, sir,\" he told him. \"Or at least relatively speaking.\"\n\n\"If not for you, who knows?\" he said again as they very gently shook hands again. \n\nAs Chance turned to walk away Danika offered to show him out as her father called out, \"Don't be a stranger, okay?\"\n\nHe turned halfway around, waved, and said, \"Take care of yourself, sir!\"\n\n\"You do the same, young man!\" he called back trying to wave with arm that didn't hurt when he raised it. \"And thank you again!\"\n\nThey stopped at the door where Danika stood quietly for a moment then said, \"My dad is right. I don't get out much so it really was a pleasure meeting you today, Chance. And I really can't thank you enough for coming to my rescue or to my dad's.\"\n\n\"I'm glad I could help,\" he told her. \"And please do fill up when your tank gets a little low, okay?\"\n\nThe way she looked at him made him wonder if there was something more to her statement about not getting out much than meets they eye, but he didn't ask.\n\nHe stepped outside and when he did, Danika said, \"Chance?\"\n\nHe turned around and looked at her, waiting for her to speak.\n\n\"Oh, never mind,\" she said with a smile.\n\n\"Did you need to tell me something?\"\n\n\"No. I was going to ask you something, but that's okay,\" she told him.\n\nAs he stood there looking at her, he found himself thinking she had to be one of the most attractive women he'd ever met. \n\n\"Okay, well, maybe we'll bump into each other again sometime,\" she said with a warm smile.\n\n\"Would it be rude to remind you that low-probability events do sometimes happen?\" Chance said smiling back at her.\n\nDanika covered her mouth and laughed loudly for several seconds.\n\n\"Oh, I really needed that!\" she told him as she instinctively looked behind her to make sure her daughter wasn't somehow watching or listening.\n\n\"I love her dearly, but sometimes living with an adult in a nine-year old body can be a real challenge. Especially when the nine-year old doesn't usually get sarcasm or just kidding around. So thank you for making me laugh.\"\n\n\"I'm glad I did. You're even more beautiful when you do,\" he told her.\n\nHer smile faded immediately and at the same time she stopped looking at him and instead looked down at the sidewalk.\n\n\"Danika? Have I offended you today? I know I've mentioned how nice-looking you are several times. If I came across as crass or like I was hitting on you, I'm truly sorry,\" he told her.\n\n\"Not at all,\" she replied. \"I just don't hear that kind of thing anymore, you know?\"\n\nShe'd glanced up at him one time then looked away again.\n\n\"Well, you should,\" he told her as he took a step back toward her.\n\n\"Oh, it's okay. I have a pretty full plate between Echo, work, and taking care of my dad,\" she told him without looking at him.\n\n\"Is...is your plate too full to possibly make some time for me to, you know, maybe see you again sometime?\" he finally asked as he found her almost irresistibly attractive.\n\n\"What? You mean like a...date?\" she asked finally looking at him but only for a second knowing she'd wanted to ask him a similar question before chickening out.\n\n\"Yes. Like a date. We don't have to call it a date, I'd be more like a...chance...to get to know you a little better.\"\n\nShe smiled then laughed again before getting serious.\n\n\"Chance, that's really sweet of you, but I...I don't know. I mean, there's a reason I don't really...date...a lot. It's just easier this way, you know?\" she told him as she realized why she'd lost her nerve.\n\n\"Easier for whom?\" he asked as he took another step toward her.\n\n\"Well...everyone,\" she said still looking down.\n\n\"Danika? I'm not certain what you mean, but if it's Echo...\"\n\n\"She's not easy to...handle,\" Danika said choosing her words carefully.\n\n\"I think she's pretty amazing,\" he told her. \"And being different isn't a bad thing.\"\n\n\"Ha! Had you used bigger words, I'd have told you you sound just like her,\" she said trying not to smile or laugh.\n\nChance was now maybe eighteen inches away as he said, \"If the reason you don't want to go out with me is me, that's fine. Not every woman finds me dashingly handsome and irresistibly charming...\"\n\nHe paused to let Danika laugh then continued. \"But unless you just don't want to go out with me, then maybe you could let me decide for myself how much of a 'handful' is too much.\"\n\n\"No. It isn't you at all. Really. I...I think you're...very attractive. And you've been incredibly kind and helpful. I just don't understand why you'd want to, you know, maybe get involved with a woman my age who has a child most people can't really relate to. I mean, I saw a couple of the cute, young nurses at the ER who were going on and on about you. I'm sure they'd be thrilled to go on a date with someone as handsome and as nice as you.\"\n\nSuddenly feeling emboldened, he gently reached out for her hands and when she let him take them, he knew she'd eventually say 'yes'.\n\n\"I'm not interested in them, Danika,\" he told her. \"In fact, you're the first woman I have been interested in in quite some time, and I would very much like to get better acquainted. With you and your daughter.\"\n\n\"Well, I suppose one date wouldn't be all that bad,\" she told him.\n\nThe truth was she'd had her self-confidence shattered when her husband walked out on her and then again four separate times after men she'd dated got to know her daughter and couldn't deal with her rather unique personality.\n\nHe kind of lowered his head to see if he could get her to look up at him and when she finally did he told her, \"With that...ringing endorsement...could I maybe call you later today and see if we can find a time when we're both free?\"\n\nShe finally smiled at him and said, \"I didn't mean to be so negative. I guess I've just gotten a little cynical where men are concerned.\"\n\nShe stopped then said, \"Make that very cynical.\"\n\n\"I'm not arrogant enough to say I can change any woman's opinion about men, but I do honestly believe I can change yours about me if you'll give me the...\"\n\n\"Chance?\" she said before his smile caused her to smile then both of them to laugh.\n\n\"In a word, yes,\" he told her. \"So...may I call you?\"\n\n\"Yes. I'd like that,\" she told him. \"Very much.\"\n\n\"Okay. Great. You said you don't get out much, and I don't get a lot of time off, and this is the first weekend I've had off since I took the job at the ER. Would it be presumptuous of me to assume you might be available this evening or maybe tomorrow sometime?\"\n\n\"Presumptuous. I guess I'm really on high alert for certain words, huh?\" she said still smiling.\n\n\"There's probably a reason for that,\" he said in a kind, polite way.\n\n\"Oh, you have no idea!\" she replied just as kindly.\n\n\"Although you just met, it is socially acceptable for you to kiss my mom,\" the two of them heard a young, female voice say.\n\nDanika pulled her hands back so fast it startled Chance.\n\n\"I...I didn't know you were there, honey,\" Danika said as she turned around.\n\n\"I've been observing your behavior from the second floor and when Chance held your hands, I was hoping that as the man, he might take the initiative and kiss you,\" she told her mom. \"As a way of indicating his interest in developing a relationship with you.\"\n\nDanika looked over her shoulder at Chance in a kind of, \"Are you sure you want to get involved with us?\" look.\n\nHe just smiled then said mostly to Echo, \"I thought it might be more appropriate to wait until after our first date.\"\n\nEcho nodded then said, \"That's another reasonable approach. It gives the female time to ensure she really wants to be kissed so I see no reason to hurry things, although I do worry that my mother will end up alone if she doesn't step outside of her so-called comfort zone in the near future.\"",
        "Danika gave him one more short 'look' but Chance just bent down and said to her daughter, \"I did ask your mom out. Are you letting me know that's okay with you?\"\n\n\"Of course. As I said, both of you are single, and I've observed a kind of latent attraction throughout the course of your interaction, so it seems logical to conclude you'd ask my mom out on a date,\" she informed Chance.\n\nShe looked up at her mom then said, \"May I stay with Grandpa when you go out with your new boyfriend?\"\n\nThere was another momentary look of horror on Danika's face, but this time it didn't last long. Chance was either going to be okay with her 'gifted' daughter or he wouldn't be so she decided to well...give him a chance. Or rather\u2014give herself a chance.\n\n\"We're just friends, sweetie, okay?\" she said gently.\n\n\"But he's a boy and you're a girl, and if you're friends then how is he not your boy...friend?\" Echo asked seriously.\n\nChance put his arm around Danika's shoulder and said, \"She has a valid point, you know?\"\n\nDanika turned toward him and said, \"Oh, no. Not you, too!\"\n\nBoth of them laughed while Echo watched for a moment before saying, \"That was sarcasm, wasn't it?\"\n\n\"Just a tiny bit,\" her mom said sweetly.\n\n\"Okay. I'm just relieved to know that I'm learning to pick up on certain social cues so quickly.\"\n\nAnd with that, Echo turned around and walked back inside.\n\nDanika turned to face Chance then said, \"Are you still sure about this?\"\n\n\"Uh-huh. More than ever,\" he told her as her eyes locked onto his.\n\n\"Well, okay then,\" she said unable to hold his stare.\n\n\"You really are beautiful, Danika,\" he told her as they stood face to face.\n\n\"Thank you,\" she said almost afraid to look at him again for fear he might be an illusion, too good to be true and vanish right before her eyes.\n\n\"I'll call you in a few hours,\" he told her quietly.\n\n\"All right,\" she replied still not looking at him when his hand reached out and gently touched her cheek. \"I'll be looking forward to that.\"\n\nHer heart was suddenly pounding, and when she raised her eyes to meet his he softly kissed her on the other cheek.\n\n\"Bye,\" he said just as quietly.\n\n\"Goodbye, Chance,\" she said as her brain tried to understand how all this had happened so quickly. Then again, she didn't really care what her brain was telling her as her heart was all that mattered at that moment, and it was telling her she couldn't wait for him to call and even more so to see him again. What she could wait for was whatever Echo would surely have to say about it all.\n\n\"I understand someone has a date,\" her father said the moment she walked back into the living room.\n\nEcho was sitting next to him, but as usual, she wasn't smiling as this was all very factual.\n\n\"I...guess I do,\" she said still reeling from the suddenness of the invitation and her willing acceptance.\n\n\"I don't detect any social clues to indicate I'm failing to pick up on sarcasm, so I fail to understand why this would be considered unusual,\" Echo told them.\n\n\"Well, people usually get to know one another for a while before going out on a date,\" her grandfather said. \"But not always. Besides, it is just a date, so it's still quite normal.\"\n\n\"I for one think it's long overdue,\" Echo added. \"I see no reason for my mother to live a solitary life, her life with me aside.\"\n\nDanika did her best not to smile then said, \"There's a difference between living alone and being lonely, honey.\"\n\n\"Granted,\" Echo said agreeing immediately. \"However, I get the distinct impression you're very lonely in spite of the fact that you have Grandpa and me in your life. Since marriage tends to be the norm in societies worldwide, it seems natural that, at some point, you would pursue another mate. And in the case of Chance, I wholeheartedly approve.\"\n\nThat comment was too much and both Danika and her father couldn't hold back the laughter. Echo gave them both a look then tried to laugh with them, but that clearly wasn't natural.\n\n\"I was able to hone in on facial clues that time and immediately realized my comments were the source of your amusement. Therefore I laughed along with you.\"\n\n\"Come here, baby,\" Danika said.\n\nEcho stood up then said, \"With the stipulation I am no longer a 'baby'.\"\n\n\"Yes. So stipulated,\" her mom said as she held out her arms.\n\nFor all her other 'excesses', Echo still needed love and affection as much or more than any girl her age, and her mom loved it whenever she was able to give her a hug and briefly interact like any other parent and child.\n\nThe truth was Danika also craved the kind of love and affection that came with having a relationship, and it had been a long time since she'd had any of her own, and this very unexpected meeting gave her hope she might have some small amount of that in her life again. She couldn't see this lasting, but even it if was just an evening or two of pleasant conversation, that would go a long way toward...she laughed when she thought of 'putting some gas in her tank' after what had happened earlier that day. Whatever the correct analogy or metaphor was, she was now very grateful to have run out of gas.\n\nJust as he'd promised, Chance called a few hours later.\n\n\"Hi, there,\" he said. \"You may not remember me, but we ran into one another by...chance...today.\"\n\nDanika laughed happily as she replied.\n\n\"Oh, I definitely remember you. Tall, handsome, heroic.\"\n\nNow Chance laughed as he said, \"I'll take your word on those, but we did agree to have dinner together. Is that still possible?\"\n\n\"I believe it is,\" she told him. \"My dad agreed to keep an eye on Danika so I am free and clear to go anywhere you'd like.\"\n\n\"I like the sound of that,\" Chance told her. \n\n\"Oh?\"\n\n\"Sure. There are a whole lot of places I'd like to go with you, so if you're agreeing to go anywhere I like, then I won't have to ask for a second date.\"\n\nDanika laughed again then realized she hadn't spent an evening without Echo in a very long time let alone been on an actual date. As much as she loved her daughter, it was almost 'freeing' to have an evening without her very adult-like conversation dominating their time together.\n\nShe almost invited Chance to her place so she could make dinner for him, but she hadn't really been out in so long it was hard to resist letting him take her somewhere so she didn't resist.\n\n\"I have a feeling things will go quite well, but I may not be the one who doesn't want a second date,\" she told him playfully and yet with some amount of real concern that might be true.\n\n\"I guess we'll soon find out, huh?\" he said lightheartedly. \"When may I come pick you up?\"\n\n\"I was getting ready when you called so maybe another fifteen minutes?\" she told him.\n\n\"Oh, perfect. But um...where exactly do you live?\"\n\n\"Ah, good point!\" she said before giving him her address.\n\n\"All right. I'll see you soon.\"\n\n\"I'm looking forward to it, Chance. Bye.\"\n\nDanika had gone straight home from her dad's and immediately put her still-clean hair up in big rollers to give it some body then did her nails while her hair was 'cooking'. Once the nails were completely dry she chose her favorite dress which was navy blue with a strip of sheer mesh at both the neckline and hemline. It was rather short, but at 38, Danika still had the legs (and the entire figure) to wear it and she loved the way it showed off her small waist without overpowering her modest, B-cup breasts. \n\nThe only decision she wasn't sure about was whether or not to leave her arms bare or wear the matching shrug that came with it. She didn't want to hide her very toned arms and yet the shrug was cute enough to make up for what it took away so she decided to wear it knowing it could always be taken off.\n\nShe'd also bought a pair of four-inch, open-toed sandals with the dress that had one strap around the toes and another above the ankle. It was a very sexy look but not so overdressed she'd feel out of place were he to take her someplace...modest. 'Cheap' came to mind but Danika didn't really care. All she wanted was to have a nice time and it really didn't matter where they went.\n\nShe debated wearing a necklace, but the mesh neckline was more than enough so she chose a pair of silver earrings and called it quits after taking a last look in her bedroom mirror. More than satisfied, Danika headed downstairs to wait.\n\nAgain, right on time, Chance pulled up when he said he would and came bouncing up her front porch steps before using the brass knocker on the door.\n\nDanika waited a couple of seconds then opened it.\n\n\"Hi, Chance! Please come in!\" she said as she stepped aside.\n\nBefore taking a step he froze in his tracks.\n\n\"You...you look amazing,\" he told her as he gave her a very polite 'once-over'.\n\n\"Thank you!\" she said as she waited for him to move.\n\n\"You look like you're ready for the prom, and I don't have a corsage!\"\n\n\"Again, thank you, but I don't think I could pass for someone going to the prom,\" she told him with a bright smile. \n\n\"Maybe not, but you look pretty darned close to that to me,\" he said before finally stepping inside. \"I'm not kidding, Danika. You look...younger than me.\"\n\n\"I'm enjoying the flattery, Chance, but you should at least keep it in the realm of possibility.\"\n\n\"Oh, I am,\" he assured her. \"Trust me on that.\"\n\n\"I guess I shouldn't ask how old you are then, huh?\" she said sweetly as he followed her inside.\n\n\"I'm still 26 for another month or so, so I hope that tells you how incredible you look,\" he let her know.\n\n\"Oh. Ouch,\" she said wishing she hadn't asked. \"Um, well...considering how I'm turning 39 in two more months, I'll take it,\" she told him. \n\nChance shook his head and said, \"If you say that's true, I'll believe you, but my eyes and my brain are having a hard time accepting that.\"\n\nDanika laughed and asked if she could get him anything to drink as it really hit her that he was twelve years younger than her. Not two but twelve! In spite of their lively banter, it seemed very unlikely he'd really ask her out again now that he knew, so she decided not to think about the age difference and just have a nice time.\n\n\"No, thank you. I'm fine,\" he told her.\n\n\"Okay. Well, if you're ready...so am I,\" she let him know.\n\nWhen she smiled at him, she brought her hands together in front of her hips, and he couldn't decide if she looked more like a teenage beauty queen on prom night or a beautiful, sophisticated woman. Clearly, she was some of both, and as much as he was already aware that she was a very attractive woman, seeing her like this was more than he could have imagined.\n\n\"I'm ready,\" he told her with a smile.\n\nShe locked the door behind them and Chance offered her his arm then escorted her to his car where he opened her door and helped her in before going around and starting it up.\n\n\"Is seafood okay?\" he asked.\n\n\"It's very okay,\" she told him. \"Echo loves Red Lobster but we don't get out too often.\"\n\n\"Well, I hope you'll like this at least a little more than Red Lobster,\" he said with a smile as they backed out.\n\n\"I'll enjoy being with you no matter where we go,\" she told him, smiling back.\n\n\"Have you been to Palisade?\" he asked.\n\n\"No, but I know exactly where it is and have always wanted to go,\" she told him. \n\n\"Well, tonight...you're going.\"\n\n\"Chance? I know that's a five-star restaurant with a view of Elliott Bay. I really would be okay with something less pricey,\" she said in a way that wasn't critical but rather honest.\n\n\"No, I'm not taking any...chances...on not impressing you,\" he told her. \n\nHe looked over and said, \"I really do hope there'll be a second date.\"\n\n\"If you're not scared off after the first\u2014and after having my amazing daughter\u2014I think I could see clear to maybe one more date,\" she told him with another smile. \n\nHe was young, but he clearly wasn't stupid, so he had to have done the math. Danika found it very hard to believe it didn't matter to him so once again she tried to focus on the present rather than let worry about the future ruin her first night out in months.\n\nHer heart wasn't racing, but she was very happy and really looking forward to having dinner with Chance, a guy who was now even more appealing to her than he'd been when they first met. And he'd been awfully appealing even then.\n\nPalisade had to be the nicest restaurant Danika had ever been to, and she was now very glad she'd worn her best outfit. When they walked inside, Chance pointed out the raw bar as they were being seated.\n\nThe view of the Bay was more than nice. It was a spectacular, 180-degree view and Danika could see it all from their table.\n\n\"This is amazing, Chance! How did you get such a great table?\"\n\n\"The owner was one of the first people I treated in the ER,\" he told her. \"Someone ran into him broadside on his way home one night and they brought him in with some fractured ribs. He told the doctor who treated him, and me, to call if we ever needed a table. So...I called.\"\n\n\"Wow. It's just so incredible.\"\n\nThe meal was just as incredible, and Danika almost felt guilty with each bite she took. Everything was so delicious and full of flavor, and the service rivaled the food and the view, and while she tried not to care, she couldn't help but think the bill would be just as 'spectacular'.\n\nAnd yet the most pleasant surprise was how the conversation was better than all of those things put together. They had so many things in common that at one point she asked him if he'd researched her to find out what she liked and valued in life\n\n\"No, not hardly,\" he replied with a polite laugh. \"I've been sitting here wondering when we're going to find something we disagree on, and so far, there hasn't been anything.\"\n\n\"Well, what's your favorite color?\" she asked with a smile.\n\n\"Oh. Well, let me see. I guess maybe...white? Or maybe black and white?\" he said.\n\nDanika laughed as she replied.\n\n\"We came close on that one. Mine is definitely black, and when you said 'white' at first, I thought we'd found something.\"\n\n\"Yeah, we couldn't possibly see each other again with that kind of major disagreement between us,\" he said very seriously.\n\nDanika was trying to remember if she'd ever had this much fun on a date, and when she couldn't, said so.\n\n\"Same here,\" Chance told her.\n\nHe smiled at her then said, \"I also can't ever remember going out with someone as beautiful as you, Danika.\"\n\nBefore she got married, Danika dated a lot. And she'd heard pretty much every line a guy could throw at her. Were this a date from back then, she'd have dismissed his compliment as idle flattery. But it wasn't back then, and the way he said it told her it was true, and it touched her deeply.\n\n\"Thank you, Chance, and may I say it's been a very long time since I had a date with someone as handsome as you,\" she told him honestly.\n\nHe went to say something then stopped then went ahead and said it.\n\n\"Do you mind me asking about your ex-husband? If you do, if it's none of my business, please let me know.\"\n\n\"Not at all,\" she told him. \"I mean, if there is going to be a second date, you should probably at least know the basics.\"\n\nShe was still smiling, but not like before, and Chance could tell this wasn't going to be pleasant for her.\n\n\"Well, we got married 12 years ago, and I truly thought I was the luckiest girl on earth, you know? Richard, my ex, was so handsome and so caring and attentive.\"\n\n\"And that changed?\" he asked not trying to get too far ahead of her.\n\n\"Oh, yes. It was when Echo was maybe five that it started. We knew she was 'different' early on, but he seemed to be handling it pretty well. Richard was an accountant, and if he had one fault, it was the way he needed everything to be perfect. From numbers to his family, ever 't' had to be crossed and every 'i' dotted just so. I know he saw me as someone he could show off at dinner parties and social events, but that never bothered me because I have to admit I enjoyed the beautiful clothes and the attention and all the compliments.\"\n\nShe stopped talking for a second then said, \"That makes me sound horribly vain, doesn't it?\"\n\n\"No, it makes you sound honest. Like a woman who knows she's beautiful, and there's no crime in that.\"\n\n\"That's very kind of you to say, Chance. Back then, I'd have probably agreed with you. Anyway, after Echo was born, I had a very hard time losing weight for a couple of years, and although I was busy being a new mother, I could tell Richard didn't want me to be seen in public. He never came out and said it, but he always found a reason why I shouldn't attend a function even when we brought in a nanny to help out. Then as soon as I lost the weight, he was nearly begging me to go with him again.\"\n\nChance didn't interrupt again. He let Danika talk knowing he could ask questions later if that were necessary.\n\n\"To make a long story short, Echo was becoming the new embarrassment to her father. He found her adult-sounding way of talking annoying at home, and the few times he took her somewhere with other people from work, he wanted to crawl under a rock and hide. Everyone else loved her. Yes, she was an 'anomaly', but these were all well-educated professionals who understood what was going on. Everyone but Richard, that is.\"\n\nShe hesitated again, and Chance could tell she was close to getting emotional.\n\n\"I don't suppose I'll ever know for sure, and Richard denies it to this day, but I felt very strongly that he was having an affair which I thought started somewhere after Echo's fifth birthday. We had a party for her at our home, and most of the other CPAs and their wives\u2014or husbands\u2014came. I saw him once out on the patio by the pool with one of the paralegals; a very attractive, younger woman. They were talking and laughing and also touching. It mostly looked innocent, but I could just tell. And then a couple of hours later, I went to our bedroom looking for something and they were in there together still laughing and...\"\n\nChance sat and waited as she collected herself.\n\n\"And when I walked in I knew they'd been holding hands on the bed although they'd stopped immediately when they saw me. Richard insisted it was all innocent. She was going through some kind of problems with her boyfriend, she just needed to talk, he was only consoling her, and well, you know.\"\n\nDanika took a deep breath then said, \"Six weeks later he told me he wanted a divorce.\"\n\n\"I'm sorry,\" Chance finally said.\n\n\"We stopped...you know...not long after the party, and he kept telling me it wasn't me. He even said he went to get his testosterone levels checked and claimed that was playing a big part in it along with all the stress at work. I guess I wanted to believe him even when I knew it wasn't true. Even after he told me he was leaving, I kept thinking it was all my fault.\"\n\n\"But it wasn't,\" Chance offered.\n\n\"No, and thank goodness for my dad. He kept me sane and put it all in perspective for me. He's not just book smart, Chance. He really knows people.\"\n\n\"I like your dad a lot,\" he told her.\n\n\"Yeah. Me, too,\" she said smiling again. \"Richard wanted out. He wanted to be away from his eccentric daughter and his aging wife. Oh, and you'll never guess who he ended up marrying.\"\n\n\"Hmmm. A young paralegal whom he'd been 'counseling'?\" Chance asked as though it wasn't obvious.\n\n\"Yep. One and the same. She was six years younger than me so I guess he was trading me in early. They say guys wait until their wives are 40 to trade them in for two 20s, but Richard couldn't be bothered to hold on that long.\"\n\n\"I hope this isn't out of bounds, but...he's a fool,\" Chance told her.\n\nDanika laughed again before saying, \"It's not out of bounds because it's the truth. Or at least I think so.\"\n\nChance was sitting across from her and when he saw her smile he reached out for her hand. She looked at it then back at him, then placed hers in his.",
        "\"I would never let you go, Danika. Never. For any reason.\"\n\nHer smile faded and she sat there for a moment before getting serious again.\n\n\"I really like you, Chance, but you can't know that. I hate saying it out it's been bothering me since you told me your age. You have to know I'll be...40...in just over a year. And you won't even be turning 30 until...\"\n\nHe didn't say anything again. He waited for her to finish.\n\n\"So while I believe you when you say you think I'm, you know, kind of...attractive...you won't be thinking that in a few more years. It's been wonderful hearing you say things like that, but well, I think you can figure the rest out by yourself.\"\n\nWhen he was sure she was finished he said, \"Are you done?\"\n\n\"Pardon?\" she asked almost defensively.\n\n\"I was wondering if you were finished telling me what I think and what I'll be thinking years down the road yet.\"\n\nHe didn't smile, but he said it very politely.\n\n\"No. I...I didn't mean it like that, Chance. I was only being honest. That's all.\"\n\n\"I believe you were telling me what you believe. The problem is you're just...wrong.\"\n\n\"Oh?\" she said even more defensively as she slowly took her hand away.\n\n\"Yes. You're wrong. Plain and simple.\"\n\n\"How so?\" she asked.\n\nChance spent the next few minutes telling her about his father and the kind of relationship they had, as well as how it ended.\n\nBy the time he finished, Danika had tears in her eyes as she imagined his dying father trying to make amends.\n\n\"Don't be sad,\" he told her. \"I learned more from my dad than I realized. Sadly, most of it was negative, but I learned many things not to be, and when I'm fortunate enough to meet the right woman and hopefully have...\"\n\nHe smiled then said, \"Or...inherit...children, I will always be aware of how much they mean to me and hopefully, how much I mean to them. And I will be there for them in every way possible every day of my life. No matter what.\"\n\nDanika's eyes had briefly dried but were now full of tears again. As the first ones fell, Chance told her, \"That means that when I say 'I do'\u2014I will. Forever, Danika. And were I be so lucky as to have someone as wonderful as you as my wife, there is nothing that could ever make me stop loving you\u2014or...her. Nothing. And especially not her age. Okay?\"\n\nChance saw her reach for her napkin and stopped her.\n\n\"Here. Let me,\" he said as he used his own to gently dab her eyes.\n\nShe took two long, deep breaths then said, \"You are a very special, very amazing young man, Chance Petersen.\"\n\n\"And you are a very special, very amazing, and very beautiful woman, Danika Morris.\"\n\nShe looked at him, did her best to smile then said, \"You almost make me believe you, Chance.\"\n\n\"Almost?\" he said with a smile. \"How can I get to where you do believe me?\"\n\n\"By just being your wonderful, honest self?\" she said in the form of a question.\n\nHe moved his chair closer to her then said, \"You are all of those things, Danika.\"\n\n\"Okay,\" she replied not knowing what else to say. What she did know was that her heart was beating rapidly, and when he held out his hand again it beat even faster.\n\nHe smiled at her then slowly leaned in and just as their lips met they heard, \"Can I get you anything el...\"\n\nThe young girl stopped talking and said, \"Oh, my gosh! I am so sorry!\"\n\nDanika pulled away and didn't look up while Chance turned around and told her, \"No, that's okay. And yes, I think we're ready to go.\"\n\nHe glanced at Danika who let him know she was ready so he asked for the check. Their server laid it on the table, apologized again, then walked away.\n\nDanika looked at the piece of paper then smiled sweetly and said, \"Rain...check?\"\n\n\"If you mean on the kiss, then yes. Definitely,\" he told her before helping her stand up.\n\nWhen they got to her dad's house, Danika invited Chance in with the caveat that her daughter was still wide awake. \n\nChance only laughed before saying, \"Is that the best you can do?\"\n\nDanika laughed, too, then told him, \"In the past, just the thought of her being around any guy I dated was enough to keep him from even wanting to come inside let alone stay.\"\n\nBefore she could open the door he took her hand and said, \"I'm not like them, and I'll never feel that way about your daughter. Ever.\"\n\nAfter having heard how things had been between Chance and his late father, Danika knew he was telling her the truth, and the fact that he could say that and mean it made whatever feelings she was having for him grow even stronger.\n\nThose feelings continued to grow as he smiled at her then said, \"I'd like my raincheck now if that's okay.\"\n\n\"Oh. Yes. The raincheck. I think this would be a very good place to redeem it. You know, when a certain genius isn't watching,\" Danika told him as her eyes danced with his.\n\nAs he kissed her, her body reacted while her brain, for some reason, tried to remember the last time that had happened, and she was drawing a blank. Not because it hadn't happened since the divorce, but because the few times it had, they'd made no impression on her. But this one...this one was making a very deep impression on her.\n\n\"I wish I had a whole stack of rainchecks,\" Chance told her when the kiss ended.\n\n\"We're having a sale on them today only,\" she told him.\n\n\"I don't have a lot of money, but...\"\n\n\"No. They're free. And they come in unlimited quantities,\" she assured him.\n\n\"Then I'll take two stacks,\" he said before kissing her again.\n\nDanika wanted to both laugh and cry with the crying part bringing tears of joy. As they stepped inside she wondered whether or not this was this real or too good to be true.\n\nEcho heard the door open and ran to her mother.\n\n\"You're back already?\" she asked.\n\n\"Do you want me to leave?\" he mom asked with a smile.\n\n\"I perceive sarcasm,\" her daughter said. \"I'll ignore that and get to the point. I was researching the average time of a first date but wasn't able to glean any reliable data. I did some mental calculations and arrived at two hours and thirty minutes as the approximate time. You returned home fifteen minutes early. Is that a sign things didn't go well?\"\n\n\"No, honey. Things went very well. Or at least I think they did,\" she told Echo as she looked at Chance.\n\n\"Oh, I agree wholeheartedly. I'd say things went swimmingly well.\"\n\nEcho looked at him then said, \"Why would you choose 'swimmingly' to modify the adverb 'well'? Why not 'wonderfully' or 'exceptionally'? Is there a subtle difference I'm missing?\"\n\n\"No. You're not missing anything. In fact, that was a very perceptive comment,\" Chance told her.\n\n\"Thank you. It's rare that my observations are received in such a positive manner.\"\n\n\"Um...you're welcome?\" Chance said with a smile.\n\n\"I didn't realize my statement left room for ambiguity, but yes, it was intended to be complimentary in nature,\" Echo informed him as Danika stood there listening.\n\n\"So how's your grandfather doing?\" Danika asked as they walked inside.\n\n\"I beat him in a game of Scrabble\u2014again. And he's currently losing in a game of Monopoly. I have hotels on Boardwalk and Park Place, plus the three green properties, so bankruptcy is inevitable meaning it's all but over,\" Echo said.\n\nShe looked at Chance then told him, \"'It's all but over' is a colloquialism indicating he's on the verge of losing.\"\n\nHe didn't tell her he understood. He just said, \"You must be a very formidable opponent.\"\n\nEcho stopped walking, smiled at him, then said, \"I am, actually.\"\n\nShe took her mom's hand then started walking, and Danika smiled at Chance, and using her free hand 'drew' a smile on her face then said, \"Wow. That is very rare.\"\n\nEcho rarely smiled and that, along with so many other things, had given her mother cause for concern. Over the years she'd learned to accept than her daughter's brain was continually processing information at a very high rate leaving it little time for the kinds of social cues so important to other people. For Echo, the information was everything whereas others put a very high priority on the social interaction between themselves and those with whom they were interacting. So seeing any hint of Echo being social was a cause for celebration.\n\n\"Well, well. There they are!\" George said when the new couple walked in. \n\nHe'd moved to the sofa and was trying to sit up straight while looking down at the board. \n\n\"She's positively unbeatable,\" George said. \"And my neck is killing me. Could you maybe help me back into the recliner, Dani?\"\n\nDanika went to help, but Chance said, \"No. Let me.\"\n\nGeorge was not only thin but small and couldn't weigh much more than 135 pounds, if that. Chance was able to lift him up easily making sure to keep his neck and back straight then help him into the chair doing the same thing. Danika could only offer limited help, and she dreaded getting him in and out of the bed each day. Fortunately, once he was standing, he could shower without needing any help other than getting his shirt and tee-shirt off, if he wasn't wearing shoes. They were a challenge, too, but for the most part, George walked around in white socks all day. Or rather sat around in them.\n\n\"Thank you, Chance. You're a saint,\" George told him.\n\n\"I'm happy to help, sir,\" he told the older man.\n\n\"Old age sneaks up on you. One day you're your age then\u2014poof!\u2014you're mine! Trust me on that, okay? You're too young to understand yet, but you will. Mark my words!\"\n\n\"I have no doubt, sir,\" Chance said as he recalled sitting in a movie theater when he was 18 when a man about George's age was sitting in front of him. All he could think of was how that man was his age 'just moment's ago' in his mind. It was the same man looking out through the same eyes, but society now saw him very differently, and that helped him understand he would one day be that man. Well, providing some accident or disease...or war...didn't take him first.\n\n\"So did you kids have a nice time?\" George asked.\n\nBefore either of them could answer, Echo said, \"Chance reported things having gone 'swimmingly well' which means they went quite well indeed.\"\n\n\"I see. Well thank you for interpreting for me,\" George said with a smile.\n\n\"I like teaching you things, Grandpa,\" she told him having no idea he as being mildly sarcastic again.\n\n\"Yes, you do, sweetheart,\" he said with another smile. \"And I love you for it.\"\n\n\"I love you, too, Grandpa,\" she replied without emotion. \n\nDanika wasn't sure what Echo felt when she said 'I love you' to someone, and her fear was she only said it as a kind of learned response rather than because it was something she felt inside her.\n\n\"I should probably get going,\" Chance finally said.\n\n\"Oh, sure. I'll walk you to the door,\" Danika said.\n\n\"No, wait!\" Echo called out. \"Can Chance stay and play a game of Monopoly with us?\"\n\n\"Honey, it's getting late, and Monopoly takes a really long time,\" she told her daughter.\n\n\"It's not that late, and I'm off tomorrow. If you're not tired of me by now,\" he told Danika.\n\n\"Oh, no,\" she said with a happy smile. \"I'm nowhere near tired of you. I'd love for you to stay. If you're not tired of me.\"\n\n\"Nope. Not at all. So let's get started!\" he said.\n\nDanika nearly cried when Echo jumped up and walked over to Chance and put her arms around him and said, \"I love you, too, Chance.\"\n\nSurprised and even a little bit touched, Chance hugged her back and said, \"I love you, too...Echo-Gekko.\"\n\nWhen she laughed, Danika felt the tears welling up in her eyes and blinked several times hoping Echo didn't see. Her daughter didn't let anyone else, to include her mother, to call her by a nickname. And yet she'd not only let Chance use the name her father used, she'd laughed at it while she was hugging him!\n\n\"Mom? Can we have chips and dip?\" Echo asked.\n\n\"That's up to your Grandpa, honey.\"\n\n\"Sure! Bring 'em out! Salsa for me, kiddo!\" he said as Echo was already on her way to the kitchen.\n\n\"I've never in my life seen her hug someone without prompting before. I mean, other than Dad, her father, and me.\"\n\n\"And she laughed when Chance called her 'Echo-Gekko'. That's a first, too, right, honey?\" George asked his daughter.\n\n\"Oh, yeah. Two firsts. I think she might just like you,\" Danika told Chance.\n\nHe pretended to get all puffed and said in a voice that matched, \"Well, you can't really blame her now, can ya? I mean, you are talkin' about yours truly here, right?\"\n\nDanika was so happy she laughed much too loudly and found herself wanting to kiss him so badly it hurt.\n\n\"Heroic with a sense of humor?\" George quipped after having laughed, too. \"This one's a keeper. Mark my words!\"\n\nShe looked at Chance and the way he smiled at her sent shivers through her body. Warm, pleasant...shivers. The kind she hadn't felt in...in...well, much longer than the last time she could remember being kissed.\n\n\"Okay. We have Ruffles, Pringles, and Lays!\" Echo said.\n\n\"Dad? Where did you get all the junk food? I certainly didn't buy that for you,\" Danika said, sort of scolding her father.\n\n\"Oh. Well, I kind of got to know Mrs. Williams from next door,\" he said.\n\n\"Really? Do tell,\" Danika said.\n\n\"Yes. After we came home from the hospital she was watching. She saw my neck brace and after you left\u2014two days later, she stopped by. We've kind of been...talking since.\"\n\n\"Dad! You devil, you!\" she said with a smile. \"So she brought you these?\"\n\n\"Uh-huh. And a cheesecake. It was delicious!\"\n\n\"Wait. You ate an entire cheesecake by yourself?\" Danika asked not believing what she heard.\n\n\"It was a small one, honey. Very small,\" he said trying not to laugh as he used his fingers to indicate a small circle.\n\n\"Ah, a 'personal-size cheesecake'. I see,\" she teased. \"She lost her husband a few years ago, right?\"\n\n\"Right. Four years ago this November,\" he told her. \n\n\"So...love is the air maybe?\" Danika asked.\n\nHe tried to turn toward her and said to her and Chance, \"I don't know. You tell me!\"\n\n\"He's got a point, you know,\" Chance told her.\n\n\"He's does, does he?\" she said sweetly as he looked right at her and smiled that amazing smile.\n\n\"Oh, I think so,\" he informed her.\n\n\"Okay. Good to know,\" she said before announced it was time to get started.\n\nDanika went broke around 10 o'clock with her dad following twenty minutes later. She was already sitting next to Chance, but after she lost, he pulled her over closer, and she was more than happy to snuggle right up to him.\n\nEcho owned all the railroads, the utilities, and had hotels on six properties while this time, Chance owned Boardwalk and Park Place plus having hotels on the three yellow properties.\n\nIt was almost midnight and there was no sign of a winner when Danika finally said, \"Okay, honey. We're gonna have to call this one a draw so we can get home and get you to bed.\"\n\nShe not only wasn't upset at having to quit, she looked at Chance then said in a way one she could, \"I believe I've met my intellectual match when it comes to Monopoly.\"\n\nGeorge was sound asleep in the recliner, and Danika and Chance were too tired not to laugh. And then to Danika's great delight, Echo laughed, too. It seemed genuine rather than her simply copying the behavior of others to try and fit in like when she said, \"I love you\" back to someone. Other than to Chance, that is.\n\nEcho fell asleep in the car on the way home and Danika said, \"All kidding aside, I've never seen her react to anyone quite like you, Chance.\"\n\n\"I'm glad,\" he told her. \"Everyone needs to be loved and understood, and when someone stands out as different\u2014for any reason\u2014it can be hard, especially if it's a child.\"\n\n\"That's so true. Kids are very quick to judge and tease and be cruel. With Echo, they still do that, but it's different because of how she's different from them. But she still needs friends, and other than my dad, her father, and me, Echo doesn't have any friends. Not one. I'm not trying to make you feel obligated or anything, Chance, I'm just letting you know how much I appreciate you being so kind and understanding with her.\"\n\n\"Hey. I told you I really like her, and I do. Different isn't bad. It's just\u2014different.\"\n\n\"I can tell she likes you, too, and that makes me very happy,\" Danika told him sincerely.\n\n\"And how about her mom? Am I doing okay with her so far?\" he asked with a smile as he glanced over at her.\n\n\"I'd say so,\" she told him. \"Considering how this has been the best day I've had in quite a few years, I think it's fair to say you're doing all right.\"\n\n\"I'm glad about that, too,\" he told her.\n\nHe reached for her hand and when she gave it to him he said, \"I'm glad because I feel the same way, Danika.\"\n\nShe wanted to unload all of her insecurities on him and warn him to leave now because of Echo and her age and so many other things, but she not only couldn't speak, she couldn't let go of his hand, either.\n\nShe smiled back and said, \"That makes me very happy, Chance.\"\n\n\"You make me very happy, Danika,\" he told her as he lifted her hand up and kissed the back of it.\n\n\"So does that mean there might be a second date?\" she asked sweetly.\n\n\"I believe I bought two stacks of rainchecks. Unlimited. So there'd better be,\" he said pretending to be very serious.\n\n\"Oh, right. Yes, you did, didn't you?\"\n\n\"I sure did.\"\n\n\"Well, then I'll honor that purchase, sir,\" she told him. \"You have unlimited...access.\"\n\nWhen she realized what she'd just said, she covered her mouth and tried not to laugh.\n\n\"I did not just say that!\"\n\n\"I'm afraid you did,\" Chance said still being overly serious. \"I heard you. Loud and clear.\"\n\n\"Maybe that was a Freudian slip,\" Danika said almost coyly.\n\n\"I can live with that,\" Chance said with a laugh as they pulled up to her house.\n\nNeither of them were aware her loud laughter woke Echo up so they were very surprised when she said, \"A Freudian slip, which is also called parapraxis, is an error in speech, memory, or physical action that is interpreted as occurring due to the interference of an unconscious subdued wish.\"\n\n\"What I don't understand is what granting access could mean as an unconscious, subdued wish.\"\n\n\"You are so busted,\" Chance said as Danika sat there in horror.\n\n\"Oh, I'm not going near that one,\" she told him as he shut the car off so he could walk her to the door.\n\nHe leaned over and smiled then said quietly, \"How about me? Will you allow me to get...near you?\"\n\nShe took his hand and placed in over her heart then said, \"Can you feel that? If feels like it's going to beat right out of my chest.\"\n\nHe actually could feel it and said, \"So...is that a 'yes'?\"\n\nShe smiled back then said, \"Ask me again after a third date.\"\n\n\"I will,\" he said before leaning over and kissing her.\n\nEcho started explaining the meaning of kissing as Chance got out to walk around and get their doors. She was still going strong when they got to the front porch where she began talking about why men open doors for women or help them get seated.\n\nDanika let Echo in and told her to go get ready for bed as she stood in the foyer with Chance.\n\n\"Still not scared off?\" she asked.\n\nHe helped her with her coat then put his arms around her and said, \"Nope. Not even close.\"\n\n\"Hmmm. Maybe you are a keeper,\" she said with a smile as their lips met again.\n\n\"I really want to see you again tomorrow. Or would that be today?\" he said knowing it was well after midnight.\n\n\"Today is okay,\" she said sweetly. \"And so is tomorrow.\"\n\n\"Get some rest,\" he told her.\n\n\"You, too, Chance,\" she said before kissing him one more time. \"I had an absolutely wonderful time today. Or would that be yesterday?\"\n\nBoth of them laughed and Chance said, \"Me, too. And I'd like more days just like this.\"\n\nHe touched her face then said, \"With you. And with your amazing daughter.\"\n\n\"Okay,\" she said quietly with a pleasant smile.\n\n\"Goodnight, Danika,\" he told her.\n\n\"Goodnight, Chance.\"",
        "Chance barely slept that night when it hit him he may have just found 'the one'. He kept going over how they'd just met, the difference in their ages, and the amazing phenomenon known as Echo. He wasn't about to run out and buy an engagement ring, but he couldn't shake the thought that Danika could be his wife somewhere down the road. And every time he thought about that it made him smile.\n\nHe got up around 8 o'clock and had a cup of coffee while counting the minutes until he could call. He had no idea when she got up, and he didn't want to disturb her in case she was still in bed.\n\nHe held out until nine then sent her a text. \n\n\"Hope I'm not waking you up. I just couldn't wait any longer. Let me know when I can call. Chance.\"\n\nHe came very close to adding 'love' but that seemed a little much so he settled for just his name.\n\nHe set his phone down and as it touched the coffee table, it buzzed.\n\nHe smiled when he saw a text from Danika.\n\n\"Hi and good morning! I've been up for an hour or so. I had a very hard time falling asleep because I couldn't get a certain very handsome ER nurse out of my mind! Call me anytime, Chance. Love, Danika.\"\n\nHe knew she didn't mean love as in 'love', but it was still nice to see. He left 'messages' and went to the phone app then hit her number from his 'contacts' page.\n\nDanika answered on the first ring and greeted him with a cheerful, \"Good morning!\"\n\n\"Yes, it is!\" he replied.\n\n\"And getting better by the moment!\" she said with a big smile.\n\n\"How long has it been since you and Echo have been to the Woodland Park Zoo?\" he asked.\n\n\"The zoo? Oh, wow. I'm not sure we ever went. Why? Is that where you wanted to go today?\"\n\n\"It sounds like fun, and I'm hoping Echo will enjoy it.\"\n\n\"You're a very brave man, Chance,\" she told him. \"Echo might spend the entire time telling us about every animal we see. You sure you're up for that?\"\n\n\"Very sure,\" he told her. \"Besides, most kids talk about the animals they see. The difference is they usually don't know very much. We might actually learn a few things today.\"\n\nDanika started to smile then choked up at the sound of his kind words. He not only didn't mind being around her daughter he made it seem like it was something he would enjoy. And deep down she had a feeling he meant what he was saying.\n\n\"Then the zoo it is!\" she told him.\n\nChance didn't have to wait to arrive to start learning about the various animals at the zoo. Echo began her 'lecture' the moment he arrived and continued talking all the way to the parking lot. Chance asked several questions which Echo either answered or promised to research.\n\n\"Where do you want to go first?\" he asked Echo as he paid for their tickets. He was sure Danika would be fine starting anywhere and as also hoped she knew, this was a day for Echo to try and have fun and maybe even be a kid.\n\n\"The Humboldt Penguin Exhibit!\" she said with genuine excitement. \n\n\"Okay,\" Chance said. \"Let's go!\"\n\nEcho continued chattering as they walked. The adults weren't ignoring her, they just realized they'd need to talk at the same time or never speak.\n\n\"Thank you for doing this, Chance,\" Danika said as they strolled along.\n\n\"Thank you for agreeing to let me,\" he told her.\n\nShe smiled at him and he leaned over and said, \"I didn't have a chance to tell you how beautiful you look when I came to pick you up.\"\n\n\"Thank you for saying that, but I was just so glad to see you, I honestly didn't know or care whether you said anything,\" she told him sincerely.\n\n\"I was very glad to see you, too,\" he replied.\n\nWhen she smiled again, he held out his hand and without any hesitation, Danika took it.\n\nEcho noticed immediately and said, \"Hand holding is part of the lead-up to the mating ritual. Penguins are very interesting in that respect. Did you know the male will sit on the egg for weeks while the female goes out to sea to eat and replenish her fat stores?\"\n\n\"Why, yes, I did,\" Chance told her. \n\n\"Did you see the National Geographic special, too?\" she asked.\n\n\"No, sorry. I learned that from watching March of the Penguins,\" he told her referring to the movie from 2005.\n\n\"We have that movie at our house! It was very informative,\" she replied. \"I wasn't born yet when they made it, but I watched it with my mom three years ago.\"\n\nShe kept going as Danika squeezed his hand then quietly asked, \"You doing okay?\"\n\n\"Never better,\" he told her with a smile.\n\n\"It isn't too much?\"\n\n\"Nope. Not even close,\" he told her.\n\n\"You're an amazing guy, Chance,\" she said.\n\n\"I feel the very same way about you\u2014and your daughter.\"\n\nAs they approached the penguin exhibit, Danika had the feeling that the three of them were a family. It only lasted a few seconds until she remembered she and Chance barely knew each other, and yet it seemed so real that when she came back to reality, even stronger feelings of disappointment followed.\n\nThey spent the entire day at the zoo and ate lunch there together.\n\n\"I wish today would never end,\" Echo said while they were eating.\n\n\"Yes, this is very nice, isn't it?\" her mother said as she looked at Chance.\n\nBefore he could speak, Echo said, \"I understand, of course, that every day has to end. What I actually meant was it's my wish that the three of us could be together like this every day from now on.\"\n\nIt was said very matter of factly, but Danika felt obligated to say something.\n\n\"Honey, that's very sweet, but Chance might have a bit of a different take on that.\"\n\n\"But he doesn't,\" Chance said while looking right at Danika. \"That actually sounds pretty wonderful.\"\n\nDanika didn't smile, and for the first time Chance wasn't sure what she was thinking so he quickly said, \"But you may not share that sentiment so...\"\n\nShe hated that she was so emotional around him, but she couldn't help it. Tears welled up in her eyes again as she told him very quietly, \"No, I definitely share that sentiment. I just didn't think you did.\"\n\nEcho was sitting between them and when she heard what both of them said, she reached for one of their hands and put them together across her lap.\n\n\"There. Now it's time for you to continue the mating ritual and take it to the next logical step. I would suggest a weekend alone so that...\"\n\n\"Echo! Honey! Please. Stop. Okay?\" her mother said, mortified by her daughter's words.\n\n\"I see no signs of sarcasm so have I overstepped some kind of social boundary?\" she asked with total sincerity.\n\n\"Oh, my gosh. Chance, I am so sorry!\" Danika said.\n\n\"Don't be,\" he told her. \"I might not have phrased it that way, but I will admit I was thinking something very similar.\"\n\nHe was smiling at her and the look of horror on her face gave way to amusement before she smiled back.\n\nWhen he kept smiling she finally said, \"What? Why are you looking at me like that?\"\n\n\"Oh, I don't know. I guess I was trying to read your mind.\"\n\n\"Oh, really?\" she said as she lowered her head and raised her eyebrow.\n\n\"Yes, really.\"\n\n\"And what was it saying?\"\n\n\"I'll tell you a little later, okay?\" he replied, still smiling at her.\n\n\"Mother? Are you blushing?\" Echo asked.\n\n\"What? No! Of course not. Why would I be blushing?\" she asked defensively.\n\n\"Well, usually blushing is an indication that...\"\n\nChance tried not to laugh but couldn't help it. When he did, he let go of Danika's hand and put his arm around Echo's shoulder and said, \"You are such a wonderful young lady.\"\n\nWhen Echo moved even closer to Chance and put her arm around his back and laid her head on her arm without a word, Danika felt the tears coming back.\n\n\"I love you, Chance,\" she said without prompting and with conviction.\n\nHe glanced at Danika then said, \"I love you, too, Echo-Gekko.\"\n\nShe smiled then laughed, something Danika rarely ever saw. She tried to hide it, but Echo saw her and said, \"I can tell my mom is in love with you.\"\n\nIt was another statement of fact and this time, Danika didn't try and correct her. She didn't because she knew her daughter was right.\n\n\"Then she and I have something in common,\" Chance said to Echo while looking right at Danika whose heart was racing as she watched her daughter interacting with this handsome young man as though she'd always known him.\n\nIt was nearly six o'clock when they got back to Danika's. Echo actually thanked Chance without being reminded then ran upstairs to put her coat away and that's when Danika said, \"I hope you didn't feel too uncomfortable today.\"\n\n\"Why would I?\" he asked.\n\n\"Well, when Echo said, you know, that...\"\n\n\"That you're in love with me?\" he said finishing her sentence.\n\nHe turned toward her and when she looked up into his eyes he said, \"I get the feeling you are, and even if you're not, I'm pretty sure I'm in love with you.\"\n\nHer eyes were flying back and forth with his to see if they belied his words.\n\n\"Chance. We really only just met. How can you say...how can you be sure...\"\n\nHe smiled then leaned in and kissed her. When she melted into his arms and kissed him back he waited for several seconds as the kiss went on and on before saying, \"That's how I know.\"\n\n\"Even with, you know, all of the...eccentricities?\"\n\n\"Even with,\" he told her.\n\n\"So...so what's next?\" she asked, her body trembling in his arms.\n\n\"Well, I believe we take the mating ritual to its next logical step,\" he said with a very serious tone of voice.\n\nDanika laughed happily and said, \"I'm all for that.\"\n\n\"I'm off until 6am tomorrow. We could all go out to dinner,\" he told her.\n\n\"Or...\"\n\n\"Or?\"\n\n\"Or I could see if my dad's up to keeping his granddaughter for the evening.\"\n\nChance made a kind of, \"Oh, really?\" face then Danika moved closer and said, \"Or maybe longer.\"\n\nThis time he actually said, \"Oh, really?\" as he pulled her close.\n\n\"Isn't that the next logical step?\" she said sweetly in his ear.\n\n\"I believe it is,\" he told her.\n\nTwo minutes later, she hung up with her father then asked Echo, \"How would you like to stay at Grandpa's tonight?\"\n\n\"You mean like a sleepover?\" she asked excitedly.\n\n\"Well, kind of,\" her mom said knowing what she meant.\n\n\"Can I take March of the Penguins with me?\" she asked.\n\n\"I think that would be very appropriate,\" her mom said.\n\n\"Are you sure he's up to that?\" Chance asked.\n\n\"He's very excited to have her,\" Danika assured him before she went upstairs to change clothes. \"And I believe Mrs. Wilson is there so, yes. It should be very okay.\"\n\nAfter a very romantic dinner, Chance offered to take her to a very nice hotel, but Danika said very sweetly, \"My place is available and there's no charge.\"\n\n\"Oh, I see,\" he told her. \"Well, free is often better than cheap.\"\n\nShe laughed then said, \"I really do love you, Chance. I know it sounds crazy, but I do.\"\n\n\"No, it doesn't sound crazy at all,\" he told her. \"Not to me anyway.\"\n\nTwo hours later they were totally alone for the first time, and after making love, Danika wanted to know, among many other things, what it was like when he was in the war.\n\nHe gave her a general overview without going into detail, and when he was finished she told him how brave she thought he was.\n\n\"No, the Marines I served with were the brave ones. I just answered the call to 'Corpsman, up!' when they needed me.\"\n\n\"You're too modest,\" she told him as she ran her hand over his chest.\n\n\"And you're too beautiful,\" he told her with a smile.\n\n\"Beautiful enough to make love to me again?\" she teased as she ran her hand down his body and 'found him'.\n\n\"I believe so,\" he told her with a smile.\n\nAs he grew in her hand, she smiled, purred, then said, \"Mmmm. Corpsman, up?\"\n\nChance laughed as he rolled over on top of her and granted her request.\n\nIt was around midnight when Danika said, \"So what's the next logical step in the mating ritual?\"\n\nChance smiled at her then said, \"I'll let you know.\"\n\nThree months later, he did when he proposed to her in the very place where her car had run out of gas. She wanted to know why they were stopping until Chance ran around to her side, opened the door, and knelt down. It was early Sunday morning so the traffic was still very light.\n\nDanika shrieked when he produced the tiny, black box with the big diamond ring in it and nearly fell out of the car on top of him as she started screaming, \"Yes, yes, YES!!\" before he could finish proposing.\n\nBy the time they married that summer, both of them saw a profound change in Echo. She was still as smart and yes...precocious...as ever, but she'd become so much more warm and loving, and Danika knew the reason why. She knew because she was reminded of it every time she looked over at her very handsome, much-younger husband whom she loved with all of her heart. And one of the many reasons she did was because he loved not only her but her daughter the very same way and she knew that Echo finally had a man in her life who not only wasn't ashamed of her but who loved her for who she was.\n\nAnd the following year when Danika Petersen gave birth to another little girl, he loved her just as much in the very same way.\n\nAfter believing no man would ever love her again because no one could possibly love her rather unique daughter, Danika was overwhelmed with the love she now had from her amazing husband, their wonderful 10-year old child genius, and the tiny baby who melted her heart every time she smiled her gummy little smile at her beautiful mommy.\n\nThe next year, Chance finally took that job in a clinic where he worked something closer to a 9-5 job that was really 8-6 but only on weekdays giving him time to spend with the new family he so dearly loved. And each time Danika filled up their car's gas tank she smiled at the irony of how forgetting to do so just one time in her life forever changed it for the better."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/corpsman-up"
}