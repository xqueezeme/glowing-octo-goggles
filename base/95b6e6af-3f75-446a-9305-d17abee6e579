{
    "title": "Hotel with a View",
    "pages": [
        "Author's Preamble: This story has a strong girl-on-girl theme with a first-time aspect, but it's primarily about unintended voyeurism. Happy reading!\n\n*\n\nCorinne let out a sigh as she pulled her bag into the hotel room. It hadn't been a particularly long travel day, but for some reason the people, the noise, the crowding, had been unusually bothersome to her. She kicked off her heels as she walked and shed her business jacket. Abandoning the bag at the halfway point, she flopped onto the bed and luxuriated in the coolness of the bedspread.\n\nFor several minutes she lay there with her eyes closed, and may have even catnapped. She wasn't sure, but when she opened her eyes again she had built back some of her energy reserve. Lying in the quiet of the room, her fingers moved into her hips, began to touch. No husband, no kids ... maybe she'd have a quiet evening in the hotel room enjoying herself. She smiled slyly.\n\nNot quite yet, though. She had things to do. She rose from the bed, rosy with her plans, and retrieved the bag from where it stoically waited. She would be here all week in business meetings, so it required unpacking and hanging everything up. No living out of a suitcase this week.\n\nThe first thing she did, though, was to find her lounging shorts and t-shirt. She set aside her jewelry, then pulled off her skirt and blouse. The bra was next, leaving her only in panties. Glancing in the room's full-length mirror, she stopped for a moment and inspected herself. While she could certainly nitpick, she liked what she saw. She worked hard at keeping in shape, and a woman of 37 with two kids rarely had such a flat stomach and toned legs. She playfully danced for a moment with her reflection, elated that she would have a quiet week to herself.\n\nShe donned the t-shirt and shorts, remaining barefoot and braless. After the cacophony of the day, it was going to be a room service night.\n\nShe hung up her various business outfits, put her underwear and other small items in the drawer, and found places for her shoes, her business papers, and other sundries. Her work for the night done, she walked over to the window and opened the curtains to survey her temporary empire.\n\nIt wasn't a fancy high-rise hotel, but rather was a nondescript chain hotel in a nondescript suburb. She didn't expect much from the view, and she was right. To her left, she was looking over the hotel parking lot. Beyond the parking area was a vacant field that would undoubtedly someday hold an Applebee's or a Verizon store.\n\nTo her right was, at an oblique angle, a large wall of windows. The hotel was an L shape, and her room was on the inside of the L, close to the central elevator. She could see the windows of the other wing, and nearly all were dark on a Sunday evening. It was going to be a quiet week in the suburbs.\n\nMovement caught her eye. Glancing down, she saw a light below and on the right. She was on the fourth floor, so the rooms on the other wing's third floor were somewhat exposed to her. Most were dark, but the closest room to hers, one floor down and only 30 feet or so away, was lit and the curtains were open. The angle was such that she could see much of the room, and a woman was inside.\n\nLike herself, the woman was near the window, but she was facing into the room. She was built somewhat like Corinne, but a brunette version, perhaps a little taller and more lean. She had a sleek mane of long hair and nice curves, with narrower hips and probably more of a C cup figure compared to Corinne's full D's.\n\nAlso like Corinne, the woman appeared to be ready to relax for the night. She was unbuttoning a nice blouse that was tucked into a very tight and flattering pencil skirt. Propriety said that Corinne should look away, but since she was at the woman's back, she gave in to temptation and watched. The woman shrugged the blouse from her shoulders, and revealed a gorgeous royal blue bra, lacy and expensive. It looked more like lingerie than a support garment.\n\nA separate movement now caught Corinne's eye. There was someone else in the room, further inside. A man was moving into view now. He was older, probably in his forties, whereas the woman looked to be in her early thirties. He too was admiring the woman's bra.\n\nShe slid off her skirt with a shimmy of the hips to reveal matching royal blue panties, very small and very fancy. It suddenly occurred to Corinne that this woman wasn't just changing clothes, but rather was removing them. Her eyes widened. She stepped back just a bit in case the man looked up. \n\nThe woman did a pirouette for the man, and unknowingly for Corinne as well. She was a stunner, beautiful bone structure and facial features with a perfect body. The man must have money to have a wife like that, 15 years younger and gorgeous. He was good looking himself, but not in her league at all. He began removing his clothes as well.\n\nCorinne's breath caught as she realized what was about to happen. Glancing over, she could see the couple's bed easily. \n\nShe internally argued. She should leave them to their peace, step back inside and mind her own business. But she was minding her own business, right? She was just looking out her window. There was nothing wrong with a woman looking out her window. And she had never seen two live people having sex before.\n\nThe man was now completely naked, and he was ready for sex. Corinne could easily see his erect penis pointing at the woman. The woman, still clad in her lingerie underwear, approached him and they had a long kiss. His hands initially wrapped around her lower back, then moved down to her ass. She diplomatically pulled them back up, making Corinne giggle.\n\nThen the woman separated slightly, putting a finger to the man's chest. Pushing him backward with a finger's worth of force, she guided him to the bed and had him sit down. Kneeling down between his legs, she smiled seductively at him, then lowered her head. \n\nCorinne gasped. She had never seen live sex, and certainly had never seen live oral sex. The beautiful brunette slowly took the man's cock head into her mouth, and his eyes rolled back. She took more of him into her mouth, then backed off and began kissing it, licking it, pushing his knees apart to lean in even further.\n\nHe was loving it, and so was Corinne. She could feel her nipples hardening, and looked down to see them clearly poking through her thin t-shirt.\n\nFor several minutes the woman worked orally, then broke off. Standing up, still wedged between the man's knees, she unsnapped the royal blue bra and slid it off. Her breasts were magnificent, and clearly didn't need the support of a bra. They stood proud on her chest, topped with dark pink areolas that were large and succulent and perfectly tilted upward. Even at her distance, Corinne could see the woman's long, erect nipples, and the man was enraptured with them. He immediately brought his hands up, then his mouth, to pinch them and play with them and suck on them, and the woman stopped her activities momentarily to allow him to play. Corinne was mesmerized by the interplay between his active play and her stoic stance, as she allowed him unfettered access to her treasures.\n\nHe seemed quite content to play with them forever, so eventually she gently forced him off. She bent over and removed her panties, and her ass was perfect. Slim yet curvy, perfect symmetric globes that were simultaneously soft looking and firm, they held up well to the man's groping. Corinne desperately hoped that the woman would turn just a bit so she could see the front, but the man was not allowing that, his hands clamped in her hips and ass.\n\nCorinne's hand dipped into her shorts.\n\nThe brunette slowly pushed the man backwards until he got the hint. He moved up on the bed and lay on his back, his erect penis standing at attention, and the woman climbed on top of him. Positioning herself, she slowly lowered her body as the man's penis disappeared from view within her hips. Corinne's mouth gaped as the woman began slowly rising and lowering herself, clearly riding the man's cock. She had never before witnessed such a thing.\n\nCorinne's hand inside her shorts began strumming her clit. She couldn't believe this. She wondered if anyone else could see the amorous couple, but given the angle she decided that she was the only one. Hers was the only room that likely had the proper height and angle to see this scene.\n\nThe woman rode him for several minutes, her breasts bobbing as he played with them. Then suddenly he was moving her, twisting, and she rolled off of him. Down on her back she went, and her legs rose and spread. Corinne got a distant but perfect view of the woman's vulva, shaved but for a narrow dark landing strip. She was too far away to see detail, but could see a wide swath of light pink within dark pink, indicating that the woman must have thick outer lips.\n\nThe man was now on top of her, entering her, thrusting. The two of them melded into one spastic mass, moving, thrusting, shaking. Corinne concentrated her gaze at their meeting spot, and could vaguely see a shiny penis appearing and disappearing with regularity.\n\nShe moved her gaze up to watch the woman's breasts oscillate with the rhythm, and -\n\nOh, god!\n\nThe woman was looking directly at her! Corinne leapt backwards, out of view. No, no, no, that did not happen. She got caught! Would the woman complain? Would the police get called? Would...\n\nOr did she get caught? \n\nMaybe the woman had merely turned her head for a moment. Maybe her eyes had been closed. Common sense said that it would be hard for her to notice a woman in another window while she had a man thrusting inside of her. Maybe it was just a coincidence of angles.\n\nShe should check. Were they still having sex? Was the woman on the phone to the police? Corinne envisioned herself being handcuffed, being taken to jail, being labeled as a sex offender. She had to know what was happening so she could know whether she needed to concoct a cover story.\n\nMoving very slowly forward, Corinne stood directly at the curtain, then peeked as little of her head as possible past it, just enough for one eye to get a view.\n\nThe woman was still on the bed, still being fucked. \n\nSighing with relief, Corinne knew that she should take that win and step away, but she couldn't. Now more stealthy, she continued to watch with one eye. It was over within minutes. The man eventually collapsed onto the woman and she stroked his head as he rested, her long legs still splayed wide around him. Had the woman cum, too, Corinne wondered?\n\nThere was little afterplay. The man rose and stepped away, and the couple began dressing. Corinne waited until they were both in their underwear again before she stepped away from the window.\n\nBy the time Corinne made it to her bed, her shorts and t-shirt and panties were still floating to the ground. She lay down, spread her legs, and thought about what she had just seen. She fantasized about being the woman in that situation, about the fancy lingerie, about kneeling between a man's legs and enveloping his cock with her mouth. And against her will, she also thought about the woman, such a classic beauty. What must it feel like to be seduced by a woman like that? Corinne's fingers explored her lips, her clit, and pinched her nipples as she had thoughts that she would never share with anyone, thoughts that were improper for a 37 year-old married mother of two.\n\nHer fingers became more urgent as her fantasies progressed, and within moments she was arching her back, her knees quivering as the final buildup came. \n\n\"Unnnnnngh! Ohhhhhh!\" Her orgasm was louder than she expected, and she hoped that no one was in the adjacent room. Her body froze, her pelvis arched skyward, her brain synapses exploded with pleasure, and she ascended for an eternal moment before dropping back to earth, her breath heavy and irregular.\n\nIt was going to be a good week.\n\n**** \n\nThere was a knock on the door.\n\n\"Room service, ma'am!\" a voice called out.\n\nOh, that was faster than expected. \"Just a moment!\" Naked as she dried from her post-work shower, Corinne hustled to throw on her shorts and t-shirt again. \"Hang on, I'm getting dressed!\"\n\nBarefoot, with her hair still dripping, she opened the door. The room service girl was a petite African American woman, perhaps a college student or a little older. She had striking green eyes and long artificially straightened hair. \"Good evening, ma'am,\" she said, seemingly unperturbed by the wait. She held an oversized tray in both hands that likely contained Corinne's salad and French fries. \"Happy Monday! May I come in?\"\n\n\"Certainly.\" Corinne stepped aside and let her enter. \n\n\"Where would you like it?\"\n\nCorinne scanned the room. \"The table at the window is fine,\" she said. Following the girl, her eyes scanned up and down the young woman. She was petite, maybe 5-4, and well built. If she was a cheerleader, she'd be the one that gets thrown in the air, her figure curvy but light. She was wearing a green tartan vest of the hotel's choosing, with complementary gold slacks that hugged her rear end. Her skin was light for a black woman, implying that black was only the most dominant of her genes.\n\n\"Thank you,\" Corinne said when the girl set down the tray. \"I'm famished.\" There was no reason to explain that, but she felt that she should make some sort of non-transactional conversation. The girl turned and smiled at her, and Corinne noticed a name tag that said, \"Natalie\". She had a five and a ten in her hand, depending on a number of factors, and she gave the girl a ten. In return she got a delighted smile and a heartfelt, \"Thank you, ma'am!\"\n\nThey walked back to the door together, and the girl folded the ten dollar bill and put it into her pocket. Pausing, she turned. \"A little trick next time, ma'am. If you order the lunch-sized version of the salad, it's almost the same size and you get the fries for free.\" She winked as she shared the secret.\n\nCorinne smiled at the girl. \"Thank you. I'll remember that.\"\n\nClosing the door, Corinne walked back to the table. Catching her reflection in the mirror, she was horrified to see how her t-shirt clung to her still wet breasts, and how noticeable her nipples were as a result. Shaking her head, she was glad that the room service person was female.\n\nShe sat down to have dinner, and by chance or subconscious, she sat at the chair that faced the hotel's other wing. Again, the rooms were mostly dark, with only an occasional sign of habitation. She had been dining for 20 minutes when the light on the third floor came on. She didn't want to admit that she had been hoping for this.\n\nShadows moved in the room, and Corinne watched. She was not a peeping tom, she told herself. She was just a woman eating a salad and French fries at her windowside table. She was doing nothing wrong.\n\nThe woman came to the window and surveyed her temporary empire. She was wearing a gorgeous dress, deep red in color and snug around her nice curves. It complemented her dark hair very nicely, and she looked like she could be a movie star, or perhaps a senator's second wife. Corinne got a good look at her face, and admired the woman's beauty: high cheekbones, nice jawline, light-colored eyes over a slim, straight nose. And those lips, those lips that Corinne had seen wrapped around her husband's penis the previous night, were gorgeous, full and perfectly plump. \n\nThe woman looked up at Corinne and smiled.\n\nOh, god.\n\nCorinne averted her eyes to her food, lifting her fork and taking an obvious bite to illustrate that, yes, she had a purpose in this window. She was eating dinner just like any woman had the right to do. She gazed out over the parking lot and the vacant land beyond, enjoying the view and proving to any observers that she was merely a person who enjoyed looking at a parking lot and darkened wall of windows while dining.\n\nWhen she glanced back, the woman was unzipping her dress from the back. She let the sleeves fall forward, and the dress fell to the floor. \n\nSurely she had seen Corinne, right? She had looked straight at her and smiled. Perhaps the reflections of sunlight were different and she was just smiling in general? Is it possible that Corinne could see her, but not vice versa? \n\nIt had to be true. The woman wouldn't smile at her and then undress in full view of the window.\n\nRight?\n\nIt didn't matter. Either the woman couldn't see her, or the woman didn't care. Those were the only two answers, and both gave Corinne security in staying in her spot.\n\nThe brunette was wearing a lacy white underwear ensemble tonight, perfectly matching. She must spend a fortune on underwear, Corinne found herself thinking prosaically. The brunette almost looked like a bride getting ready for her wedding, wearing a white, nearly sheer lace bra, matching panties, cut very low on her hips and stomach, and thigh-high white stockings that Corinne hadn't noticed under the dress. Corinne made a note that she should wear thigh-highs more often, as they were quite sexy.\n\nThe woman turned, and it was obvious that the husband must be further back in the room. Swiveling her hips suggestively atop the high heels she still wore, she walked out of Corinne's sight for a moment. She almost wondered if they were newly married, which would explain the frequent sexiness. But the woman seemed too classy to be having her honeymoon out here in the suburbs.\n\nShe was out of sight for several minutes, testing Corinne's patience. When she returned, she was nude, and Corinne feasted on seeing the woman's large areolas and dark stripe of pubic hair. She had a man by the hand.\n\nAnd it wasn't the same man.\n\nThis one was younger, maybe mid-thirties. He had a shaved head and was notably more muscular. Corinne's jaw dropped.\n\nThe brunette lay on the bed, and the man lay down between her legs. As she lolled her head back, he began lustily performing cunnilingus on her. A smile appeared on the woman's face, and she closed her eyes in pleasure.\n\nWhat was going on here? Corinne's mind raced. Was she cheating on her husband? Was she highly sexualized and good at picking up men? Of course she would be good at picking up men. Look at her. She could pick up men in a monastery. \n\nOr...Corinne was hit with a wave of realization. Was this woman a prostitute? Or given her obvious class and beauty, perhaps 'escort' was a better term. That would make a lot more sense. Someone like her would make great money in that line of work, and a mid-class suburban hotel near the airport might be a good low-key place to ply her trade. Corinne realized suddenly how little she knew about the business of selling sex.\n\nCorinne watched as the brunette shifted positions. She was on her knees now, and the man was behind her, getting ready to penetrate her. He had a long and slender penis, and inserted it to the hilt in one smooth motion. As he began his rhythm, the brunette braced herself, resting on her elbows. Her breasts undulated with each thrust, but in a limited arc. They were clearly quite firm. Corinne lost her view of them when the man reached around and gripped them, using them to help gain leverage and power in his thrusts. \n\nCorinne found herself yet again sliding a hand into her shorts. \n\nThe man lasted a while in that position, then it was on to missionary. The brunette was on her back, and he was positioned atop her, thrusting energetically. She seemed to take it in stride, wrapping her legs around him and allowing him to kiss her neck and throat.\n\nShe looked out the window, and unbeknownst to her partner, she offered a knowing smile and wave.\n\nCorinne again ducked out of the window in horror. And she again masturbated vigorously that night.\n\n**** \n\n\"Room service!\"\n\nCorinne was ready this time, making sure that she was properly dressed. Natalie appeared to be her assigned girl, because she was once again making the delivery. ",
        "\"Happy Tuesday! Chicken marsala and spring vegetable mix, ma'am?\"\n\n\"Yes. You can set it at the table.\"\n\nNatalie nodded, her smooth face creasing into a knowing smile. She walked the food over to the table and set it down. \"I know that you like a lot of ice in your water, so I brought you some extra.\"\n\n\"How thoughtful.\" Corinne had found that tipping well tended to make life much more pleasant, and she could put it on her expense account. It was a win win situation and tended to make her popular among hotel staff.\n\n\"Ma'am?\"\n\n\"Yes.\"\n\n\"There's one other thing.\"\n\n\"What is it?\"\n\nNatalie nodded to a drink on the tray. Corinne had assumed that it was being delivered to another room. It was tall and red with a little umbrella. \"This is for you as well.\"\n\nCorinne grinned. \"Oh, that's very nice of you!\"\n\nNatalie shook her head. \"It's from another guest. It comes with this card.\"\n\nCorinne's blood froze. She knew no other guests. She had no friends or coworkers on this business trip. There was only one guest with whom she had had any interaction. She blushed furiously as she accepted the card.\n\nHer voice shook as she opened it. \"Um...that's....um, that's a surprise. I don't believe I know anyone here.\" She briefly wondered if perhaps some wayward man had attached his gaze on her without her noticing. Such things had happened in the past. When you're blonde with large breasts, men notice you even if you don't notice them.\n\nInside, the card had a woman's fluid handwriting. \"Men are my livelihood, women are my hobby. 8:00 Thursday at my place. Send an RSVP via my girl Natalie. Lana, Room 301.\"\n\nCorinne stood stunned. \n\n\"Everything okay, ma'am?\"\n\nIt took a long moment for Corinne to respond, and her response was subpar. \"Um...yes. Yes.\" Corinne's mind was racing. She looked at Natalie. How much did the young woman know? She had to know that the drink was sent by this woman. Lana. But did she know why? She had to know that people sent other people drinks because they wanted to bed them, but would she make that connection in this case? And this was a woman, which made it all the more confounding. Corinne stood dumbstruck, reeling at the implications.\n\nNatalie showed no reaction at all to Corinne's hesitation. She just stood there.\n\nOh, yes. Tip.\n\nCorinne found her billfold. She started to pull out a bill, then hesitated. She drew out a $20 bill and gave it Natalie, eliciting a reaction of sincere surprise and elation.\n\n\"Can you wait a moment, Natalie? I need to write a note. I want to respond to the card that you brought.\"\n\n\"Certainly, ma'am!\"\n\nCorinne sat at her desk and put a pen to paper. She thought for a moment. \"Natalie\", she looked the young African American woman up and down, not wanting to meet her eyes. \"Can you tell me a little bit about the person who sent this drink?\"\n\nThe young woman fought to suppress a smile. \"We're taught to be discreet, ma'am. I was just told to give you the drink and the note.\"\n\nCorinne's nostrils flared. Did Natalie know why this had happened? Had this woman, this Lana woman, told her about the peeping? Did Natalie just think that the woman was flirting? Did Natalie know more about Lana than she was revealing? Did she know what Lana was doing in that hotel room? Corinne noted to herself that she needed to get more tip money.\n\nPondering what to write, Corinne finally found her words. She merely wrote, \"I'm married\" on the note card. She looked at the message for a moment, then added, \"But thank you anyway.\" She wondered if she should apologize for her peeping behavior, but decided to let that issue lie. No sense in acknowledging it at this point. She folded the note and said, \"Would you please deliver this back to the person who sent the drink?\"\n\n\"Certainly, ma'am.\"\n\nCorinne wondered if Natalie would read the note, and if she had read the previous note that Lana had sent. She almost hoped that the girl had -- it was flattering to be courted by an attractive person, even if it was by another woman, and Corinne now had the moral upper hand by turning her down.\n\nAs Natalie headed toward the door, Corinne eyed the drink. \"Before you go,\" she asked, \"what is the drink?\"\n\nNatalie had the door opened. She turned around and looked at it. \"Don't laugh,\" she said.\n\n\"Why?\"\n\n\"Our bar has funny names for all of the drinks. That one's a mix of Rum and fruit juices. It's called \"Show Me Your Boobs\".\n\n**** \n\nCorinne sat down to dinner and a show. Or maybe a show. She wasn't sure it would happen again, but she didn't want to miss it if it did. \n\nThe lights were out, but one table lamp was on in Lana's room. And there was a sign propped up in the window, handwritten with a thick marker. The sign said, \"Hi, Blondie, You're Cute!\"\n\nCorinne's mind reeled. She was being hit on by a woman. And an escort at that. And an escort who held the moral high ground to boot, who had caught Corinne in an indiscretion.\n\nMen are my livelihood. Women are my hobby. \n\nThe words rang in her head. She had no experience with a woman, and nothing even close. But in a truth that she would never dare tell, she had had thoughts. What woman didn't? Her fantasies, her secret world that no one knew, not even her husband, were populated not just by men but by both men and women. Usually it was the men who took her, because men had a penis and a penis was a very useful tool. But sometimes, when she was in a certain mood, women would come to play in her mind and her fingers. \n\nShe enjoyed those fantasies, but always dismissed them as soon as the orgasm rang through her body. She was a wife and a mother with a career and a dog and a house with a yard. No one expected a person like her to rub herself to orgasm imagining another woman. And certainly a woman like her wouldn't have a tryst with a random woman in a hotel in real life. It was just idle fantasy, nothing more.\n\nThe lights turned on below her.\n\nToday's man made her wince. He followed Lana to the window -- it was nice to know her name now -- and he was unattractive. He was at least 100 pounds overweight, and somewhat effeminate in appearance, with a soft and doughy look about him. She guessed this was the downside of being an escort.\n\nLana herself looked less sexy than usual as well, clad in a trench coat that didn't particularly highlight her appearance. Corinne frowned slightly...until Lana removed the coat.\n\nOh, wow.\n\nShe was clad in a leather dominatrix outfit, and it was stunning. The main item was a corset that cinched her waist tightly, and which stopped just below her breasts, causing them to spill up and out. She wore a tiny black thong below the waist, and knee high boots that looked wicked. She had a necklace that appeared to be a lace of spider webs, and Corinne noticed that her hair was in a pony tail.\n\nThe man removed his clothes, and Corinne felt a pang of sympathy for both him and her. He clearly didn't have a body to admire, and she had to work with it. But work she did. They walked to the bed, and she pulled some leather cuffs from underneath the sheets, one attached to each corner. She bound him to the bed, and then spent the next hour teasing the tiny cock that protruded underneath his belly. She wrapped it tightly in some sort of leather gear, then alternately sucked it, masturbated it, and worked the balls. Every time the man seemed to be getting close, she would back off, leaving him clumsily humping air. At one point, she climbed onto his chest, and to Corinne's fascination, appeared to masturbate herself, her pussy just inches above his face as he strained to reach her with his tongue. There was no bashfulness in this woman.\n\nShe held the man in frustration for 60 full minutes. He left happy, though she was unclear whether he had an orgasm, and presumed that he didn't. People were strange sometimes.\n\nCorinne was about to move to her own masturbation session when Lana walked to the window. Writing in large print, she appeared to be making a new sign, not in any way acknowledging Corinne's presence. When she finished, she removed the \"Hi, Blondie\" sign and stuck the new one up in its place. With bated breath, Corinne waited for it to become visible.\n\n\"Show me your boobs.\"\n\nSimultaneously horrified and amused, Corinne burst into laughter. Lana's face rose and she looked directly at Corinne. There was no pretending any more. Corinne held up her nearly empty glass as a toast of thanks. She was beginning to like this woman.\n\nLana shook her head. Her breasts were still bare above the corset, and she brought her hands up to grip them, jiggling them. She pointed at Corinne.\n\nOh, god. Maybe it was the drink in her, but Corinne found the woman charming tonight for some reason. After a moment of consideration, she threw caution to the wind. Reaching down, she pulled her t-shirt over her head. She gripped her own breasts and jiggled them back. Lana broke her usual classy demeanor, breaking into a satisfied smile. She motioned for Corinne to visit and very slowly licked her lips. Corinne's wave off signaling 'no' was much less convincing than it should have been.\n\n**** \n\n\"Room service! Happy Wednesday!\"\n\nNatalie was here for her nightly visit, carrying her tray as usual. Corinne let her in, and immediately noticed another \"Show Me Your Boobs\" drink. She shook her head disbelievingly. This was surreal.\n\nThe young woman walked the tray to the table near the window, and turned back to Corinne. \"Another drink, another note,\" she said. Her eyes wandered up and down Corinne's body, and Corinne intuited that Natalie had some inside information she wasn't sharing.\n\nCorinne made a point of sighing. \"Some people don't get the message,\" she said. \"Did you pass along my message yesterday?\"\n\n\"Yes, ma'am.\"\n\nCorinne opened the note:\n\n'You're married, but you're alone and I'm alone, so let's be alone together. Thursday at 8:00. If you need a reference as to my skills, watch tonight at midnight. PS: your boobs are gorgeous. I can't wait to suck on those big pink nipples. -- Lana, Room 301.'\n\nCorinne blushed furiously. She looked at Natalie, but the young black woman was noncommittal. Was she really not reading the notes? Even so, she had to understand what was happening. An escort was using her to pass notes. A female escort at that.\n\nShe handed Natalie another $20 bill. \"As you probably guessed, I need you to pass a note back. Can you wait a moment?\"\n\nNatalie was making a killing off of this episode. She smiled broadly and took the money. As Corinne sat down to write, she couldn't help but notice that Natalie had moved to the window and was looking out and to the right.\n\nShe started writing. 'I'm not into girls', she wrote. She looked at it, then added, 'But you're very pretty.'\n\nShe tore it up and tried again. 'I've never been with a woman,' she wrote. \"But you tempt me. You're gorgeous!' She emphasized the final sentence with a second exclamation point, then tore up that note.\n\nNatalie was standing in profile. She looked at the young woman, her vest tight against her cute figure, her soft facial features and full lips.\n\nShe wrote the next draft. 'I'd love to, but I shouldn't.\" She stood stock still for a long minute, then added. \"I'll watch at midnight, though, if that's okay.\"\n\n****\n\nAt 11:55, Corinne was in a state of anxiety. Something was going to happen in five minutes, and it was going to be interesting. In an odd way, she felt invested in it, and wanted to fulfill her role properly. Taking a deep breath, she pulled her t-shirt over her head, then removed her shorts. Standing naked, she looked at herself in the room's full-length mirror. Her nipples were indeed attractive, and she was proud of them. She found large areolas sexy, and was glad that she had them. Few people had ever seen them, and almost no one had seen the neatly trimmed triangle between her legs, or the feather-soft features that they highlighted.\n\nWhy was she doing this? Why was she playing this game? She didn't know, but it was too addicting to stop.\n\nShe stepped to the window. \n\nThe third floor had a new sign propped up. It said, 'You know you want to. Thursday at 8:00.'\n\nCorinne stood naked at the window, fully on display. Lana walked to her own window a floor below, wearing shorts and a braless t-shirt that clearly showed the points of her nipples. Corinne laughed heartily at the role reversal, and offered an imaginary toast to the brunette. On her end, Lana nodded approvingly at Corinne's nudity and mouthed a 'wow' as she ran her finger up and down Corinne's body. She offered a toast back and a wink.\n\nApparently there was a knock on the door, because Lana turned quickly and looked in that direction.\n\nCorinne waited anxiously to see who would enter, and was surprised that it was only Natalie, carrying a tray. The young woman carried the tray to the table near the window, and Lana followed behind her. Natalie set the tray down and turned, and Lana was on her.\n\nWrapping her arms around Natalie, Lana gave her a long, deep, romantic kiss. Corinne's jaw dropped in shock. Off came the plaid vest, the gold slacks, and then Natalie's bra and panties as Lana sensuously and methodically stripped the younger woman nude. \n\nShe took Natalie by the hand and walked her to the bed. Natalie was quite attractive, with a trim figure and nice firm butt. As Lana lay her on the bed, Corinne took note of Natalie's hershey kiss nipples on her buoyant young breasts, and her completely shaved and bare pussy. Standing over her, Lana removed her t-shirt and shorts, displaying her bare body proudly.\n\nLana took the dominant position, lying atop Natalie as the two engaged in deep kissing and caressing. Then Lana began moving down, kissing and nibbling Natalie's throat, then her breasts. She played with Natalie's nipples extensively using tongue and fingers, and Natalie seemed to melt into the bed.\n\nThen Lana went further down. Natalie's ribs received attention, then her stomach, then further down below her belly button. Corinne saw Natalie gasp as Lana's tongue first flicked across her clit.\n\nThe next twenty minutes was a divine ballet as Lana worked the young African American woman's pussy to near-orgasm, then stopped abruptly, leaving the girl hanging as she moved up to pleasure other areas. She had Natalie engaged in a horizontal dance of need and desire, partially pleasuring her again and again before finally finishing the job. She eventually bore down between Natalie's legs with a new vigor, and Corinne watched the young woman's silent scream of orgasm. Lana was clearly skilled at her craft.\n\nLana then moved up again, kissing Natalie's stomach, ribs, and breasts, before shifting to sit on Natalie's midsection. The two had a short conversation as Lana played with Natalie's nipples, tweaking and twisting and rubbing. Corinne couldn't hear, of course, but eventually saw Natalie nod.\n\nLana was on the move again, this time reaching over Natalie. She retrieved the same leather cuffs that she had used the night before, only now she was using them on the room service girl. Corinne leaned forward in interest, and her finger began stroking her clitoris.\n\nAs she had done with the fat man, Lana tied each of Natalie's limbs to a corner of the bed, effectively spreadeagling her. Then she climbed back atop Natalie, moving up to sit on the room service girl's face.\n\nLana was a sexy woman. As Corinne watched, the brunette swayed and undulated as she received oral pleasure from her cute prisoner. She stroked her own breasts, caressed her stomach, and lost herself in pleasure as her prisoner labored underneath her. Corinne realized that she had not yet seen Lana cum after all these nights.\n\nNatalie did the job, though it took a while. Lana liked to periodically raise herself from Natalie's face, presumably slowing down the process of orgasm. She would rise up, touch and stroke Natalie's face, then drop down again so her pleasure prisoner could continue her oral task.\n\nEventually, though, it was apparent that Lana was getting close. Her movements became more rhythmic, more measured. Corinne timed herself along with the brunette. Faster and faster her fingers stroked her clit and lips as the brunette began to enter the throes of ecstasy.\n\nLana's back arched, her mouth dropping open.\n\nCorinne leaned back in her chair spreading her legs, her pleasure beginning to overflow.\n\nLana's eyes closed. She gripped her breasts, facing skyward as her prisoner tongued her.\n\nCorinne's legs began to quiver. \"Unnnnnh! Oh! Oh!\"\n\nThe two women orgasmed simultaneously, forty feet apart.\n\nUsually Lana's sessions lasted about an hour, a fact that had not registered with Corinne until tonight. But Lana wasn't finished with Natalie, not by a long shot. She rose and retrieved a leather travel bag, setting it with decorum on the bed next to a curious Natalie. Reaching in, she began pulling out items and setting them on the bed. Corinne recognized a couple of the items as vibrators or dildos; the smaller items were too far away for her to discern exactly.\n\nAnd then for the next two hours, Lana put on a clinic. Poor little Natalie, bound and helpless, had no chance, and Corinne was entranced by what became a pure torture of sexual pleasure. For an interminable time, Lana impassively forced pleasures on Natalie, and the bound room service girl thrashed, bucked, arched, or at times lay paralyzed as she absorbed a particularly fiendish pleasure. Lana wrung orgasm after orgasm from her, even as they looked more and more intense on a sexually exhausted Natalie. At 3:00 a.m., with the college girl unable to continue any more, Lana finally took mercy on her. Leaning down one last time, she kissed the girl on the lips and rose off of her chest. As she walked away from the bed, Natalie lay motionless and spent, her legs splayed wide, her hair a mess, her chest heaving with each breath, and her hips and thighs offering only the occasional spastic shiver to indicate consciousness.\n\nLana walked to the window, looked up, and offered a theatrical curtsy. Corinne pressed ahead for one final orgasm from her own abused vulva, which had set a new masturbation record tonight. She knew that Lana was watching her, but did it really matter any more?\n\nLana watched, then wrote another sign and set it in the window. It read, \"References available upon request.\"\n\n****\n\n\"Room Service!\"\n\nCorinne took a moment to open the door, wondering what she should say. As she opened it, Natalie walked in with the tray. She knew by now where to place it, so she merely offered a polite, \"Happy Thursday!\" greeting.\n\nCorinne followed her into the room, noting that Natalie was walking slowly and a bit gingerly. There was also a \"Show Me Your Boobs\" drink on the tray.\n\nNatalie set the tray down. \"I got you some extra dressing for your salad, and I gave you a double helping of breadsticks,\" she offered. \"And I have another note.\"\n\nCorinne took the note. By now, Natalie knew to wait for the next chapter to unfold.\n\nIt read, \"Blondie, if you would like to check references for my skills, you may ask Ms. Natalie how she enjoyed the evening. I asked her to provide a gift as well, so be sure to ask for it. See you at 8. -- Lana, Room 301.\"\n\nCorinne reached into the pocket of her shorts and pulled out the $100 bill that she kept hidden in her billfold for emergencies. This was an emergency.\n\nNatalie's eyes popped when she saw Benjamin Franklin.\n\nCorinne held it up, but did not offer it. \"You know what's going on with these notes, don't you?\" she asked.\n\n\"Yes,\" Natalie said sheepishly.\n\n\"Who is this woman?\"\n\nNatalie's eyes twinkled as she shyly answered. \"She's a frequent guest here, maybe twice a month for a few days at a time. She's very nice.\"\n\n\"What's her story? Is she an escort?\"\n\nNatalie offered a hooded smile. \"She tips well, and she's my favorite guest.\"",
        "Corinne processed the information. \"So I gather. You know that I was watching last night, right?\"\n\nNatalie nodded.\n\n\"Do you and she ... regularly...\" She couldn't finish the sentence, and pointed at the window.\n\nNatalie looked Corinne directly in the eye, her green eyes strong and willful. \"I take care of her in the hotel and make sure that she doesn't get bothered, so every month she invites me in for an evening. You should know that I'm straight. But it doesn't matter.\"\n\n\"How on earth does it not matter?\"\n\nNatalie's mouth curled into a smile. \"Because she's soooooo good,\" she laughed.\n\nCorinne had to laugh as well. \"Are you completely straight?\" she asked. \"I'm just ... I'm just trying to figure out if ... uh ... if ...\"\n\n\"If you can do it?\"\n\nThe thought made Corinne's stomach roll with nervousness. She looked at the young woman, the woman that she had seen naked and orgasming last night under Lana's skilled hands. \"Yes,\" she admitted at long last, blushing and horrified at herself, her participation in all of this. \"Yes.\"\n\nNatalie repeated her assertion. \"I'm straight,\" she said. \"But I appreciate beauty. When I saw you that first night, for example, and your t-shirt was wet and I could see your areolas, I was intrigued. But with Lana, you don't think much about the fact that she's a woman. You think about the fact that she's beautiful and that's she's giving you the most amazing orgasms you'll ever have.\"\n\nCorinne subconsciously brought her arm up to cover her chest. The t-shirt thing was truly an accident, but she could never explain that away. \"I'm straight, too,\" she said, \"but ... I have to admit, I'm kind of curious. And flattered.\"\n\n\"Then go visit Lana,\" Natalie said. \"She's discreet, and she's amazing.\"\n\n\"Does she often do stuff like this? The notes?\"\n\nNatalie shook her head. \"Never. She saw you watching. She thought you were beautiful, and ....\", Natalie bit her lip, \"she likes your breasts. She wants to play with them.\"\n\nCorinne suddenly felt shy. \"But I wasn't watching because I was into women. I mean, I was, but I wasn't. And I'm married.\"\n\n\"Lana doesn't care. In fact, she likes it that way. She loves taking straight women. Tell her you're straight and she'll make it her personal mission to open your mind.\"\n\nCorinne handed the $100 bill to Natalie, conflicting thoughts and ideas swimming in her head. \"The note said you have a gift for me. I presume it's not the extra breadsticks.\"\n\nNatalie put the bill into her pocket. She looked up into Corinne's eyes. \"Again, remember that I'm straight. I'm doing this for Lana.\"\n\nThe young woman pulled Corinne close, and closed in for the kiss. Their lips met, soft and romantic, and the tip of Natalie's tongue pressed into Corinne. She could feel the girl's breasts crush into her own. The kiss was long and romantic, and when Natalie pulled away, Corinne could still taste her.\n\nShe took the note, read it again, and took a deep breath. Her heart was beating as rapidly as a hummingbird's. While Natalie watched, she wrote, 'I'll be there.'\n\n\"I'm scared to death,\" she said as she handed it to Natalie, her hands shaking. \"I've never done anything like this before.\"\n\nNatalie smiled a devilish smile. \"Neither had I. But now I'm addicted to it. Like I said, it's not about being with a woman, it's about having great sex. And if you're nervous,\" she added quietly, \"maybe you could use some practice. I have a break in an hour.\"\n\nHer eyes rose to meet Corinne's. For a long moment, they were silent. \"I think I'd like that,\" Corinne said.\n\nIt was definitely going to be a good week. "
    ],
    "authorname": "BuckRivers",
    "tags": [
        "lesbian",
        "voyeur",
        "escort",
        "business trip",
        "first-time lesbian",
        "seduction",
        "lesbian seduction",
        "hotel",
        "peeping",
        "caught looking"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/hotel-with-a-view"
}