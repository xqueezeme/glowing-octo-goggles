{
    "title": "Starlight Gleaming Ch. 10",
    "pages": [
        "Thanks to my reader, gyfurune, who helps catch the errors. I have been remiss in giving him credit for his help. I freely admit that any mistakes that slip through are my fault.\n\n=========================\n\nI flipped on the power switch and the ChoCac hummed to life. I left the Naval hospital where my new Aide kept watch over his wife, and passed through the gate that lead back to the Ground and Air Service part of High Guard War base.\n\nI had been driving to the hangar, but found myself in the parking lot of the Commissary.\n\nJanetta was likely still in one of the many jets that circled and roared in the evening skies above us. Her crew were at the hangar, prepping for her return. We'd had dinner, but Cholan and Ixma had lost theirs after witnessing the horror at the Dispensary. Something light to supplement the crackers, I thought.\n\nFruit smoothies sounded perfect. Cold, sweet, and light. It was summer. The smoothies wouldn't keep very long in this heat. On a hunch, I called Zinja.\n\n\"Lieutenant?\"\n\n\"Zinja, do you have a fridge there, for storing food and cold drinks?\"\n\n\"Are you kidding, sir? We have the cold storage chest we brought from home with our food in it. When we got our hangar, the only thing the previous crew left behind was some battered office furniture, a full allotment of cobwebs, a dead mouse, and droppings from the hundred cousins that moved out at the last minute. And it's a battle to keep them and the snakes from coming back.\"\n\nI chuckled. \"Thank you. I'll be there soon.\"\n\nGoing inside the Commissary, I bought a full-sized fridge, a new office chair for Janetta, a dozen cases of bottled water, a half-dozen cases of beer, as well as several cases of mixed fruit drinks fortified with vitamins and electrolytes. Dropping down the back seats, the fridge fit nicely in the back. The extra liquid supplies packed in neatly alongside the new appliance. The new chair came apart and fit in the front passenger seat. Fortunately, I remembered my original quest. Five large fruit smoothie drinks sat beside me as I drove to the hangar.\n\nOnce there, I consulted with Zinja on the best place for the fridge to reside. Against the back wall of the hangar were three smaller bays. Janetta's enclosed office occupied one bay, the lockers and open shower were in the middle, and the tool bay was the third. There was a power socket and space right next to the lockers, and it would be hidden by the lockers when the main bay doors were open, so it was less likely to attract poachers.\n\nZinja put together the chair with a grin and rolled it into the office. I backed the car into the bay. Between the four of us, the fridge and supplies were stacked next to it. Cholan and Ixma quickly loaded the fridge while I parked my vehicle behind Janetta's HueCac beside the hangar.\n\nIxma had been tasked with scrubbing the bay floor with cleaners, and she returned to it after the fridge was loaded. But she kept pausing to look at me. Zinja was in the tool bay, listening to chatter from the control tower while she cleaned her tools. Finally, Zinja told her to take a break.\n\nDown went the broom and Ixma was in my arms, burying her face into my chest. For several minutes, I just held her.\n\n\"You're okay,\" I said at last. \"Had I known what was going to happen, I wouldn't have let you come. Not you, not Cholan, not even Zinja. As awful as it was, you were not injured, and the men who tried to hurt you and Cholan are dead. Your mother is beautiful, brave, wise, and strong, and you are your mother's daughter, are you not?\"\n\nIxma looked up, her blue eyes wet. Then she smiled. \"Yes, sir.\"\n\n\"Are you going to be all right?\"\n\n\"All of you take good care of me. Having you for my man means everything, sir. I feel grown up and real, like I mean something. Being in your arms, knowing you care for me is the best feeling in all the world. Kiss me, please.\"\n\nSo I did. Twice, which made her sigh. Then she patted my chest. \"I'm better now.\"\n\nPushing away, she wiped her eyes, collected her smoothie from the fridge, and took a long drink before resuming her work.\n\nI caught Zinja watching me. She gave me an approving nod.\n\nCholan, for her part, dug into her shopping bags. Zinja warned her to pay attention to the time, as Janetta's Combat Air Patrol would last another hour, tops. Cholan needed to be on the tarmac when she landed, ready to hook up Janetta's aircraft and bring her back to the hangar. She quickly dispensed with the wrappings and put together her laptop accessories. She even finished installing one of her new programs before she put it away, her face full of geek joy.\n\nIt was bright with electric lights and full of mechanical things inside the hangar. Outside, it was fully nighttime. As Cholan climbed onto the tractor, I said, \"Let me ride along with you. I want to watch her come in. I promise I won't get in the way.\"\n\nShe glanced at Zinja who waved us off, then grinned in delight. \"You'll have to stand behind me. There's no handholds, but you can put your hands on my shoulders. Climb aboard, Lieutenant.\"\n\nWe joined a small convoy of tractors, all heading out to the runway, headlights adding to the bright lights of the airfield. The last of the night patrol was finally airborne and streaking away, their afterburners kicking in as the Lightning interceptors zoomed away into the night. Then the overflight watch began to land. We passed the row of hangars in front of us and suddenly we were on the airfield, skirting the edge and making for the end of the runway.\n\nAs we reached the waiting area, Janetta's AT-7 touched down, braked, and rolled slowly over to us. Then the engines of the Lightning cut out.\n\nJanetta rolled back the cockpit hatch, lifted her visor, and exclaimed, \"What are you doing out here, Ranji?\"\n\nI hopped off the tractor, bowed, and said, \"Cholan's Towing Service, Lieutenant! Check your tires? Clean your windshield?\"\n\nJanetta laughed, dropping her helmet onto the floor of her cockpit. \"What a loon! All right, hook me up, Cholan. Try not to run over my boy toy, will you?\" Then she turned on her dome light, propped her flight logbook onto her knees, and began to write.\n\nCholan saluted as she snickered. \"Don't run over Boy Toy. Yes, sir.\"\n\nThe Tow Tractor isn't fast, but it is strong enough to haul thirty-five tons of aircraft. Around the tractor is a circular frame that serves as a track for the hook used to haul the aircraft. Using a control switch, Cholan rotated the hook around to the front of the tractor, then edged the tractor forward to the landing gear strut and cleanly locked it into place. Then she got off and secured the connection with an S-pin with a safety latch. Back in her seat, she locked the frame and clamps dropped into place. Then she rotated the tractor one-hundred-eighty degrees in position.\n\n\"Best get on, Lieutenant. See those three tanker trucks down the field? We're going to top off the fuel tanks and the water reservoir before we head back to the hangar. That way, we're prepped for the next flight in five hours.\"\n\nI clambered back on, hands on her shoulders to steady myself while she drove. \"Water reservoir?\"\n\nCholan nodded. \"When the Lieutenant hits the afterburner, water is injected into the air stream, faking the fuel sensor so it believes the air is denser than it is. More fuel is added to the mix to maintain airspeed. It also adds to the fuel mass, and both combine to give it more thrust for the amount of fuel expended. Zinja knows how it all works a lot better than me, though. If you want the details, she can give you good, solid instruction.\"\n\nI patted her shoulders. \"You did just fine.\"\n\nWhen the refueling was done, a corporal pulled up some stairs, climbed up to the cockpit where Janetta signed off on the fuel record, and he signed on her logbook, noting the number of the fuel slip. Then we headed back to the hangar.\n\nI got off while Cholan parked the jet. Zinja directed it from the back. Once the jet was inside the hangar, Ixma brought up the step ladder and secured it for Janetta to climb down. Since Janetta was going back out in four hours, they left the Lightning hooked up to the tractor.\n\nIxma placed the chocks around the tires. Janetta gave the logbook to Cholan, who scanned it for any notes on servicing needed. Removing the ladder, Zinja replaced it with the portable work platform, lining it up beside the front fuselage. Once it was in place, Cholan hauled the data cable from the diagnostic computer to the data port behind a panel. Zinja did a safety check of the landing gear, followed by a visual on the fuselage. Cholan opened the avionics and control panels, hooking up sensors to the large diagnostic computer on wheels. A well practiced team, they operated smoothly and efficiently, each moving to the next task in concert with the other two.\n\nJanetta contented herself with giving me a long hug, smiling as she buried her face in my chest. After several minutes of indulging, she pushed away. \"I've got work to do.\"\n\nIxma brought Janetta the smoothie from the fridge, then moved to help Cholan, giving a readout of the initial findings.\n\nSurprised by the cold drink, Janetta asked how it was still cold. Zinja told her about the new fridge.\n\nPointing at me, Janetta said, \"You, with me. Now.\" Turning around, she ducked under the wing and strode to her office.\n\nI closed the door. She saw the new chair and stopped in her tracks. She sat down slowly. Sighed as her weight sank down.\n\n\"My ass thanks you, Ranji. I'm afraid you are stuck with that sorry excuse to sit on. The fridge is also quite welcome. I see how things are going to go. I'm the mean officer and you are the nice one. I can do Queen Bitch. At least between us, we'll get their minds off tonight.\"\n\n\"You don't fool them, you know. Even when you yell at them, they know you will do everything you can to protect them, and they love you for it.\"\n\n\"Maybe so, but it works for us. Now spill it, Kandikan. You fucked that cold bitch, didn't you. Tell me, and I want to hear it all.\" She didn't look angry, just focused.\n\nShe slowly drank while I told her about my meeting with the commander in the general's office. When I was done, she leaned back in her chair, her hands steepled in front.\n\n\"Ranji, I want to make sure I understand. Your contact, that you went to meet yesterday, is also the infamous Commander Orchid? And you had to fuck her because you messed up being a secret agent somehow, and then she spends hours helping you shop for naughty clothing for us? And today, she sends for you, and asks you to do her again? On the general's desk?\"\n\nJanetta rubbed her temple for several moments before speaking again. \"I get that if she says fuck, you need ask what hole and how long. But I don't like it. Not one bit. I'm already crazy dealing with this love thing. I mean, you are sitting there, not doing anything, and the hint that you might just touch me is getting my pussy in a bind. On top of that, soon you're going to be away from me for several weeks. That's like a dull knife getting closer and closer to my heart, the notion hurts so much. Gods of North and South, Ranji, how am I supposed to deal with all this?\"\n\n\"I love you, Janetta. You love me. We'll find a way.\"\n\nShe took a long breath. \"I suppose we will. I like knowing that after we make love, my pussy juice is on your cock. And I don't care if you come to me after fucking one of my team. I know them, I like them, and I trust them. But Orchid is one sick monster. They filmed us. That captain told us they plan to put our faces in some drama vid -- for entertainment! I thought those stupid vids were made up! The whole concept is an obscenity, Ranji. The bastards got caught, and that's good, but we were used, and I feel dirty.\"\n\nJanetta leaned back in her chair. \"When people smell me on you, it's kind of cool, like when you fill my pussy with your seed. Your scent on me, my scent on you. Marking each other. Like it should be. And smelling Zinja, Ixma, or Cholan on you is okay because they belong to me.\"\n\n\"Face it, Janetta, you love them, too. They're your family.\"\n\nShe blinked, then nodded. \"I do. And they are. Funny how easy it is to admit that now. But I wasn't finished with my point, Ranji. If you have to be with that cold, sick bitch -- and this is a big one -- I want you to do a full body wash before you touch any of us. I do not want any of her leavings to touch me or my crew. The thought of that bitch's dried pussy slime on you makes my skin crawl, and the notion of that slime getting inside me? No. Not happening. Lavender is now officially on my 'Hate That Stink' list. Do I make myself clear, Ranji?\"\n\nI took a breath. \"You do. Janetta, I don't know all the particulars of her situation, and I think you are selling her short. It comes across to me as something she has to do, not something she herself enjoys. But I will do as you ask. That sergeant in Tikun values her, and he spared our lives. If it gets out that both identities are the same person, it could be fatal for her, and fatal for those who spilled that information.\"\n\n\"I'm not stupid,\" she replied. \"I don't intend to talk any further about the matter, and certainly not to anyone else. Commander Orchid is a scorpion, and scorpions don't have friends, Ranji. They have prey. Smart people give scorpions a wide berth. She took care of the problem with the finesse of a fragmentation bomb. I admit, you getting an Aide surprised me. Is it on the up and up?\"\n\n\"Sowitwee's wife was there in the hospital like we were told, and hurt bad. Nu-skin patches over half her body and plaster casts. He really loves her, that much is obvious. I believe both are real.\"\n\n\"Shit. Ranji, the more I learn about what you're getting into, the more scared I am. Spies lie for a living, and I'm afraid it will twist you. And it's dangerous, too. One mistake and it'll be over. I wouldn't have a clue about why or how, I'd just be there waiting, and waiting, and you never coming back to me.\"\n\nShe picked up her drink and downed the rest of it. \"I want something with kick to it, but I don't dare until I'm off duty. Ranji, I want to talk more with you, but things have changed since you dropped me off this evening.\" Janetta gestured to a large pile of papers on her desk, about six inches high. \"Captain Angawa, the Second in Command, dropped this bombshell on me just after you left. He'll pick the reports up in two days, so all my down time is pretty much gone. But if you can, I'd like you to come and spend some time here at the hangar. With our schedules right now, I'm not going to see you very much otherwise, and that just makes me want to .. I don't know. I'm torn between crying like a little girl, and wanting to get my gun and shoot someone.\"\n\nI stood up and pulled her to me. Janetta readily buried her face into my chest. She seemed to have no problems holding me in her arms, and I certainly enjoyed holding her right back.\n\n\"I love you so much, Ranji. You make my pussy wet, and pretty much all the time, I'm ready for you to take me. But that's not all of it. I miss you when I don't see you. Dinner tonight was the best time ever. I want years of memories like that with you. Gods above, how do you do that?\"\n\nI kissed her long and slow. She sighed while our mouths hungrily explored each other. When we finally broke apart, I looked into her big, black eyes. \"Do what, my love?\"\n\n\"When I'm in your arms, nothing else matters, but the nearness of you. I feel loved and safe. How do you do that?\"\n\nCaressing her cheek, I grinned. \"Must be love, beautiful woman. When I see you, my heart fills with joy. Rest assured, I love you, right back.\"\n\n\"I want you to take me right now, but I can't. I need to focus. Besides,\" she sniffed dramatically, \"you need to go take a shower and wash off that stink. Use the one here.\"\n\nI chuckled. \"You know I am going to distract your crew.\"\n\n\"They will appreciate the show.\" Janetta opened the door. \"Zinja! Close the hangar doors!\"\n\n\"Lieutenant! It's still in the nineties! We will cook inside here!\"\n\n\"Turn on the big fans then. Ranji's going to take a shower!\"\n\nA half-second pause, then, \"Closing the doors, sir!\"\n\nJanetta laughed, turning back to me. \"It's a good thing you are young, Ranji. Keeping four women properly stoked and poked is not for the weak.\"\n\nI started laughing with her, and she swatted my butt. \"Move your ass, Kandikan. Hit the rain locker!\"\n\nMy hands on her waist, I walked her back until she was trapped against her desk. \"After I get cleaned up, are you sure you don't have time for me to make love to you?\"\n\nHer big, black eyes looked at me wistfully. \"As much as I'd love it, our gentler charges need attention, and you are really good about making a woman forget everything but what you are doing to her. I didn't see you do Cholan in Tikun, but I know the effect you had on her.\" She caressed my cheek. \"You took away all her pain and doubt with your kindness and attention. I saw you do Zinja and Ixma, and there is no doubt they liked what you did to them. You seduce them with kindness and attention. I'll watch, but I want you to do Ixma. She needs to feel you thundering into her so she forgets today's obscenity. Then, I'm sending you home with Cholan. Love them, Ranji. Whenever I'm there, I want whatever happens to be in my bed.\n\n\"Tonight, though, we won't be home until after you have to leave for work, so go ahead and sleep with Cholan in her bed. Tomorrow night, I will be more than ready to make love with you.\"\n\nLeaning in, I brushed my lips over her cheek and chin. \"Most women would not be so willing to share.\"\n\n\"As you pointed out, I love them. A good officer takes care of her people. What you do for them makes them happy, and they are working harder, too. When we fought and I thought you were gone, I lost myself in misery and self-pity. When you are gone for your training, I will need their help to get me through it. They will miss you, too. Together, we will cope until you return.\"\n\nI kissed her and she sighed as she responded. Then she pushed on my chest, wrinkling her nose. \"Damn it, I've smelt that lavender stink long enough, Kandikan! Move your ass and get out of my office!\"\n\nAt the shower, I began to undress. \"Lieutenant, what am I supposed to wear when I'm done? I don't have any spare clothing here.\"\n\n\"We did laundry this afternoon. It's still in the back of my vehicle. Zinja? Get Lieutenant Boy Toy some fresh duds. Trousers, shirt. Underwear optional.\"\n\nZinja grinned and left by the rear hangar door.\n\nMy clothes in a heap, I turned on the shower and stepped into it. The water pressure was considerably stronger than the feeble dribble at home.\n\n\"Don't get attached to that nickname, Janetta,\" I warned her as I began to wash. \"I'm not very fond of being called Boy Toy.\"\n\nIxma and Cholan parked themselves close by and watched me intently. Janetta, her arms folded, stood beside them and watched me, too.\n\nI was pretty much done when Zinja returned. She set my clothes down on a bench and sat next to Cholan, eager to take in the view.\n\nJanetta shook her head. \"He's not doing it right. Corporal Ixma!\"\n\nThe young woman jumped. \"Sir?\"\n\n\"Strip. Get in there and help him clean up right.\" All three woman looked at Janetta. \"You heard me, Ixma. Get your clothes off and make sure he washes everywhere. And I mean everywhere. Understood?\"\n\n\"Yes, sir.\" Puzzled, Ixma stood up and removed her work shoes, then her short sleeved shirt and trousers, setting them neatly on her chair. Underneath, she wore the green and gold trimmed bra and panties I'd given her. She removed those and set them down carefully, too. Lastly, she removed the neckerchief she wore as a bandana. She kept her hair braided with the ribbons.\n\nAs Zinja warned, the temperature inside the hangar grew warmer. It was probably edging over a hundred degrees. The big fans, almost as tall as a person, helped by moving air around. Still, the concrete floor was cool.",
        "Moving to her locker, Ixma retrieved a large brush, then standing next to me, held out her hand. \"The soap, sir.\" I gave it to her. Ixma wet down the brush and lathered up the bristles. Using one hand to hold me, she began thoroughly scrubbing me down. Shoulders, chest, upper back, lower back, legs, feet, even doing the crack in my ass. She worked quickly, peeling off a layer of skin. Each time she was done with a section, she'd say, \"Rinse,\" so I did. The last time I'd been so thoroughly scrubbed was when I visited home, and my personal servant Calia had worked me over.\n\nThe young woman was flushed from the heat and the exercise, her nipples hard, her gaze lingering over me. All that remained was my crotch. Ixma looked at her Lieutenant.\n\nJanetta looked vastly amused. \"Probably better not use the brush there, Ixma. Too brutal for detail work. Best use your hands. Clean him good.\"\n\nNodding, Ixma rinsed out her brush, set it aside, then soaped her hands. Standing in front of me, she reached down and began to wash my upper thighs and lower belly, then my ball sack and cock. Naturally, I hardened. When Ixma rinsed me off, she looked up at me, licking her lips. I looked directly into her eyes. \"Is that clean enough, sir?\"\n\n\"Move aside,\" Janetta replied. \"Let me see. No, not clean enough. Do him again.\"\n\nAgain Ixma lathered up my thighs and between my legs, running her soapy hands up and down my shaft, making me harder. She looked up at me as her hands moved over my cock and balls. This time she moved out of the way after rinsing me again. \"Clean, sir?\"\n\n\"Looks good,\" Janetta replied. \"Who is your officer, Corporal?\"\n\nStartled, she turned to Janetta. \"You are, sir.\"\n\n\"Who is your man?\"\n\n\"He is, sir.\"\n\n\"Corporal, you are naked with your man, and you have your hand on his hard cock. What do you intend to do about it?\"\n\nShe looked up at me, water streaming down our fronts, her blue eyes comprehending. Opening her legs and standing on her toes, she tried to move my cock into her pussy. \"Please take me, sir.\"\n\n\"Even with them watching?\"\n\n\"We are all your women, sir. Show me I belong to you.\" She got the crown of my cock within her outer labia, moved, but it slipped out. Grabbing my shaft, she tried to guide me inside again. Her outer lips, slicker, took in my crown, but then her feet dropped back to the floor and again I slipped out. Frustrated, she looked up. \"I'm too short to take you standing face to face.\"\n\nI put my hand between her legs, caressing her bare folds. Gently I slid a finger inside, probing her wet heat. Gasping, Ixma held onto me and arched her hips forward, giving me better access. I tried for a second finger, stroking the length of her swelling lips.\n\nHer eyes closed and she moaned. \"Please,\" she begged.\n\n\"Hang on to me,\" I said. \"Put one leg around my hip, and when I lift you up, wrap your other leg around me. I'll put my arms under your legs and hold you up. Yes, just like that. Now guide me in.\"\n\nShe guided my cock inside.\n\nShifting, I pressed a little deeper into her sheath, gaining an inch at a time.\n\nIxma cried out as I opened her up. Her eyes grew bigger with each thrust until her sex fully enveloped my length, stretching her insides. She shivered as she whimpered. More liquid heat coated my shaft as she wrapped herself tightly around me.\n\nI turned sideways so the other three could more easily watch me driving into Ixma's open flower. Starting slow, I pulled her away until my crown was just inside her pussy, then pressed back inside, sliding into her buttery center until my balls caressed her butt.\n\n\"Oh, gods.\" Her blue eyes wide and unseeing, her focus on my length buried within her center. Hard nipples brushed my chest as she undulated against me. Ixma's pussy slickened further, coating my balls as I probed her passage. In and out, her body caressing and receiving mine.\n\n\"So good,\" she husked. \"Don't ever stop.\"\n\nAs I picked up the pace, her breathing quickened to match, and I echoed her. Firmer I thrust, then harder. Ixma moaned, increasing in loudness in time with the faster coupling.\n\nSoon I was pounding into Ixma's tightening, slick sheath, my cock spearing into her puffy folds, exploring deep inside her belly. Her hips slapped hard with each bounce against my groin, and she wailed in pleasure. Every sixth or eighth drive into her, I held her close, moving her up and around, grinding her mound against mine. She eagerly rocked her hips, panting.\n\nIxma's grip on my arms tightened. As she neared her peak, she quieted, her desperate, hungry eyes lost in lust, focused on our union. Over and over, I lifted her up and dropped her down, grunting as I impaled her on my shaft. Again and again, her hips slammed against mine, and my cock plowed into her slick, hot groove, opening up her channel. Then she cried out, bucking in my grasp. Slowing down, I deliberately stroked in and out of her full length, while her pussy throbbed, coating my cock anew.\n\nContinuing my firm, thorough probing of her sex, I suddenly felt my balls tighten and my shaft thicken. Grinding myself within her slick heat, I grunted as jet after jet of semen sprayed the entrance to her womb. Ixma gave a strangled cry, rolling her hips as she tried burying me deeper within her welcoming, convulsing sheath.\n\nWhen her mind returned to awareness, she leaned in and kissed me hard as she heaved for air, flushed from her face all the way down to her breasts. Under the cooling water, the darker shade rapidly faded.\n\nIxma cupped my face, staring into my eyes. \"You feel .. so amazing. Nothing else mattered but you moving inside me. I feel your hard shaft filling me. And the hot and slick warmth of your seed in my belly.\" Then she shivered as another tremor ran through her body. Leaning her head against my chest, she murmured, \"I love you, Ranji. I love you so much.\"\n\nKissing the top of her head, I glanced at Janetta. She didn't seem surprised by Ixma's declaration. Ixma had asked her permission about it the night before, and Janetta had given her response.\n\nZinja and Cholan both stood up, faces flushed as they adjusted underwear and closed up their trousers.\n\n\"Zinja,\" Janetta said, keeping her eyes on us. \"I want you to show the Corporal how to run the scope and the diagnostics programs tonight. She needs to get up to speed on that.\"\n\n\"I'm already started on that work, sir,\" protested Cholan.\n\n\"Sergeant, as soon as Lieutenant Kandikan is dressed, you are going home with him. Your night off. But, I expect you back here by noon tomorrow, to pick up any slack. That will mean almost a full twenty-four hour duty, Sergeant Cholan. Are you up for that? Because if not--\"\n\n\"No, sir. I mean, yes, sir! Really, sir?\" Cholan got excited.\n\nAs I slipped out of Ixma, I let her legs down. She grunted at putting her legs together, but contented herself with holding me close as the heavy stream of water ran over us.\n\nJanetta nodded, speaking to all her team. \"Yes, Cholan. Depending on how much we get done tonight, and tomorrow afternoon, I'll let Sergeant Zinja go home with him tomorrow night. As a heads up, in the meantime, we are approaching the two-hundred-eighty-fifth hour limit on my engines. After last flight tomorrow morning, Zinja, you need to contact Maintenance and verify they have two Manco model two-hundreds ready for us, because after the weekend, all four of us will be busy swapping out the old engines and putting in the new ones, on our day off. And I will want a test flight before that bird is back on the line.\n\n\"Cholan, you and Zinja put some of that beer into Kandikan's car. The fridge at home is empty. When you get home, Cholan, stock the fridge and deliver the duffle bags with clean laundry to the bedrooms. Zinja, I'm going to my office to deal with the paperwork. Break out the sandwich wraps for lunch.\"\n\nLooking in the new fridge, Janetta took out a bottle of juice and one of water. \"Corporal! Clean your pussy, get dressed, and get your ass in gear! We've got work to do. And someone get those damn doors open. It's like an oven in here!\"\n\nThe women hustled about. I got dressed and loaded the beer into my vehicle. Zinja had picked out my civvies for me to wear-- shorts and a plain tan tee-shirt. My dress shoes didn't really go with them, but so what? The temperature had dropped to the mid-nineties, so once the hangar doors were opened, it felt a lot cooler. It wasn't lost on me that the first item of clothing Ixma put back on was the neckerchief over her hair.\n\nI stopped by Janetta's office before we left. I rapped on the open door.\n\n\"Busy, Kandikan. Go away.\" Without looking, she continued writing.\n\n\"Your stud would like to know, Queen Bitch, if he can kiss you before he goes home for the night.\"\n\nShe put down her pen and grinned. \"Since you asked so nicely, I would like that.\"\n\nI pulled her up and drew her into my arms. For several long moments, we enjoyed the contact of each other's bodies, while our mouths explored each other. I started down her neck, but she pushed me away.\n\n\"Stud, huh? That implies breeding. No breeding allowed here.\"\n\n\"True enough,\" I told her quietly, looking directly into her eyes. \"But if I rode you like that was the goal, wouldn't you like that?\"\n\nShe scowled at me. \"I am already soaked from watching you work over Ixma. I love you and ache for you and .. and you say that to me? Knowing I have to wait until tomorrow night?\" She waved her finger at me, then poked me in the chest. \"You are a mean bastard! Knock that shit off, Kandikan! Get out of here. I've got work to do. Out! Out! Out!\"\n\nLaughing, I collected Cholan and we drove home. It was already after midnight.\n\n* * * * *\n\nOnce at the cottage, we took care of the beer and the laundry, then opened windows and turned on the ceiling fans.\n\nCholan paused in the doorway to their room. I hadn't really had a good chance to see what was inside. I mean I had glimpsed inside if the door was open, but since it wasn't my room, I tried not to pry. Now, however, I was here to spend time with Cholan in the room she shared with Zinja and Ixma.\n\nTwo full beds and a narrow lane between them. Some might think mother and daughter sharing a bed strange, but it was common among the middle and lower classes. Expense might be a factor, but people often slept better with someone else close by. Zinja and Ixma had a deep love for each other, and both women shared themselves with me, but there was nothing sexual between them.\n\nI continued scanning the room. At the south end by the double windows was a large dresser, and a smaller one, side by side. I was pretty sure Zinja and Ixma shared the larger one, and a tiny closet for all their uniforms. Then I noticed the evening and sun dresses I'd bought for them, hanging amidst the many blue uniforms. It was tight in the small closet Janetta and I shared. Theirs was packed.\n\nOn the walls were a few travel posters announcing the scenic pleasures of Tikun, the relaxation to be found on the glittering beaches of The Eastern Islands, and -- hmm, Capisco has a zoo? See the giant sloth, the short-nosed bear, sabre-toothed cats, scimitar cats, and more! Family fun for everyone!\n\nI saw a picture and went over to examine it. Zinja stood in her dress uniform. She was younger, with the rank of a buck sergeant. She looked serious, but you could also see her pride, too. Beside her was Ixma, barely in her teens, wearing a simple yet pretty dress, and a line of flowers in her braided hair. She held her mother's hand and grinned happily. The photo was black and white. Color was more expensive, and knowing how much sergeants made, especially one supporting a child without a spouse, it must have been an extravagance. Nonetheless, I thought it a remarkable image, a literal snapshot of a happy moment from their past, proudly displayed by their bed. There was no doubt mother and daughter loved each other. No doubt when you saw them, they still loved each other.\n\nI turned and realized I had ignored Cholan. Sitting primly on the bed, she watched me examine their personal space. The satchel with her laptop rested on the corner of her dresser. I went over and sat beside her.\n\n\"I'm sorry. This is the first time I really had a good look at your room. The place is pretty barren, like the front room. Are you nervous?\"\n\n\"Yes, sir,\" she answered quietly.\n\nDistraction to help her relax is what she needed. I took her hand and turned to face her. \"The posters are okay, but I really like that picture of those two. It makes the room individual, personal. You should put up something too, Cholan. Do you have any pictures of your family that you could put up?\"\n\n\"Only digital images. Actual photographs are expensive, sir. Last time I checked, it was twenty credits for a small three by five image. Forty for a six by ten, and sixty for a nine by fifteen like they have. Color is almost double that. Nearly everything goes to our rent here. You keep us fed and give us things ...\" Her voice trailed off.\n\n\"You have your own charge card now. Select two or three pictures you really like, have them printed and framed, and put them up on the wall. And before you protest, hear me out. There should be something that says, 'Cholan lives here.' And do them in color. Pass on to Zinja that if she or Ixma have a picture or two they want to add, that I want them to spend the credits.\"\n\nShe frowned. \"So much money, sir?\"\n\nI shook my head. \"Besides my pay, I get a stipend from my parents. I spend over a hundred credits in monthly locker rental for my aircraft alone. It's not going to break me. You are important Cholan. You matter.\"\n\nCholan looked astonished. \"You .. own an aircraft?\"\n\n\"I do. I need to find a place to store it nearby, but yes, I do. It's not anything fancy. Just an ultralight. I am a pilot like your Lieutenant and I love to fly. I didn't qualify to be a combat pilot, though. Put me in an interceptor and I'd get my ass shot down, sure as the sun rises. I love flying, but Janetta lives and breathes it. Like it was her religion, and she was the high priestess.\"\n\n\"Yes, sir,\" Cholan chuckled. \"That's her, all right.\"\n\n\"I haven't had a chance to go up for the fun of it in over a year,\" I continued. \"I need to get a storage locker in Capisco. I think I should buy another ultralight, so she and I can go flying together. Maybe let you and the others buzz around a bit, too.\"\n\n\"Me? Fly?\" she squeaked.\n\n\"Sure! It's easy. Just like driving a car, but with up and down added in. I have a Lio Airways Sparrow. It's really stable, even when you lose power.\" Having voiced the idea, it sounded good, too. Get a storage locker somewhere in or close to Capisco, order a second ultralight, and have my own shipped here.\n\nPhotos of all of us sounded good, too. Pictures of all of us, together. Informal ones, and ones where we are all in our dress uniforms. Maybe something to give Corporal Sowitwee to do -- either to find out who does them, or have him take the photos.\n\n\"Do I have to decide now about the flying?\"\n\n\"No, you don't.\" I smiled at her.\n\n\"Good.\" She looked relieved.\n\n\"Cholan? You are in the Air Service. You came out here in one of those Condors. Do you have a thing about flying?\"\n\n\"Closed my eyes the whole time, sir. Pretended I was riding the bad roads around Dyn Choga. I like my job fine. Ladders and platforms, no problem. I can get into aircraft if it's required, but I really, really like solid ground.\"\n\nMy laughter transformed into a yawn, followed by another. I suddenly felt tired. \"Sorry. Are you still nervous about being with me?\"\n\n\"Not as much, but some. Yeah.\" She nudged me. \"I appreciate you talking to me.\"\n\n\"I remember our time together in that office with great affection. I had a great time with you. You let me know you had a good time, too, and that, in itself, is pretty hot stuff, Cholan. Back then we hardly knew each other. I know I like you a lot more now.\" I caressed her cheek. She closed her eyes, leaning in to my touch. \"Why are you nervous?\"\n\n\"It's been almost four months since you had me, sir.\"\n\n\"I know. But that has nothing to do with you. I am happy to be here with you. You are a good woman. You're smart, have a great taste in music, and I'm finding that you have a wicked sense of humor, too. Pretty sexy, all that wrapped up in one person.\" I yawned again. \"I'm sorry. The yawning has nothing to do with you.\"\n\nConcerned, she put her hand on my shoulder. \"I know. It's hours past your regular bedtime. If you just want to go to sleep, I'd understand, sir.\"\n\nShaking my head, I stood up. \"I am tired, but I also want to be with you. I just don't want to short change you.\"\n\n\"We don't always get all that we want. Inside, I'm giddy with the fact that you are here in my bedroom with me, and I get to sleep beside you.\"\n\nI grinned at her. \"Let's get undressed and get into bed, shall we?\"\n\n\"Yes, sir.\" Standing near, she yanked out her shirt tails and removed her shirt, folding it neatly and laying it beside her laptop on the dresser. She caught me looking at her breasts when she took off her bra. \"You like them, sir?\"\n\n\"Seriously impressive. Huge aureoles, thick nipples. I could lose myself amongst them.\"\n\nKicking off her shoes, Cholan looked pleased. \"You just let me know when, sir.\"\n\nNaked, I pulled back the blankets down to the sheet, and climbed onto the bed, moving over by the wall. She finished undressing, turned off the light, and climbed in next to me.\n\nScooting in closer, I drew her in and kissed her. Sighing, she responded eagerly. Each time our lips met, there was a growing urgency. Our hands weren't idle either. My free hand kneaded her breast, while she reached down and stroked me, encouraging me to harden. I slid my hand down her belly, running my fingers through her mons hair, then caressed the long groove of her entrance. Her legs opened up and she moaned. The heat I felt there was suddenly overwhelmed by the flood bursting from her swelling folds of sensitive flesh.\n\n\"You are really wet,\" I grinned.\n\n\"Yes, sir,\" she moaned, rubbing her mound against my fingers. \"You pounded into Ixma like a farmer plowing open new earth, spreading her pussy lips wide like furrows, and then you filled her with your seed.\"\n\n\"Plowing her furrow? That's an unusual phrase coming from a city girl like you.\"\n\n\"You're right, true enough. Zinja said it while we watched you do Ixma. No question, sir. You destroyed that girl. We both came from watching and hearing her pleasure. The Lieutenant didn't touch herself, but I'm sure I heard her squish when she moved away. When I learned I was coming here to be with you, I almost had another orgasm right then.\"\n\n\"Oh, Cholan.\" I caressed her flank, squeezed her hip with my hand. Nibbled along her neck.\n\n\"Sweet goddess. I got a tingle all the way down my spine, just from hearing you say my name like that. In my mind, sir, I already have you flat on your back and I'm humping you like a crazy woman.\"\n\nI grinned, rolling her nipple between my fingers. \"You want to be on top?\"\n\n\"Not tonight,\" she groaned, arching her back. \"I want to surrender to you, feel your weight on me, while you take me.\"\n\nGetting onto my hands and knees, I moved over her. Cholan moved onto her back as she reached for me, spreading her legs to receive me.\n\n\"Sorry, girl. I need to feast on all the honey dripping from your sweet flower.\" I moved down, holding her legs apart. Kissed her belly and thighs.\n\n\"You don't ... you don't need to do that, sir. I am so primed. I ... oh, blessed goddess!\" I brushed my lips along her soft petals and then blew on them. A sharp inhale, held for a long moment. And like that, with a wet sound, and a gush of more fluid, they opened, revealing her depths.\n\nGently, I licked up what leaked from her open cavity, working along the edges first. Her legs grew tense and her breathing more labored. When my tongue slipped in and caressed her inner lips, Cholan heaved up, her hands holding her legs wide apart, opening herself wider for my attention to her womanhood. It was only a short time before she began shaking. A new flood gushed out as she yelled out her release. While tremors ran through her short frame, I slurped around her sensitive center, taking in what she offered, careful to stay away from her clit.",
        "Her hands caressed my hair as she slowly rocked her hips against my mouth. \"My heart sings .. for the pleasure of .. your exquisite, gentle touch,\" she murmured.\n\nWhen her breathing eased, and tension faded from her body, I moved back in, lathing those fragile folds, caressing and sucking on those sensitive lips with my tongue and mouth. She moaned, and her body quivered, rising again toward another explosion. Swallowing as fast as I could, I did my best to drink in her essence. Circling her now prominent nubbin of joy, then alternating with long strokes up and down her succulent, swollen flesh. Whimpers escaped from her, as her hips rolled up and down, eager for the contact. When my tongue flicked the underside of her clit, she froze, gasping. Resuming my plundering, I sucked her lips into my mouth, and Cholan half sat up a moment, then fell back, rocking her pelvis faster.\n\n\"Oh, sweet Jade Goddess ... so good. I might .. I might lose my mind.\"\n\nI slipped two fingers into her hot channel, and inhaled her clit, my tongue rapidly flicking the underside of the sensitive flesh.\n\nCholan lifted back up, grunting, her hands gripping my head. With short, firm thrusts, she moved against me. Her pussy clamped down around my fingers. Another flood gushed from her center as she cried out. After a few seconds, she pushed my head away. \"No ... no more! Please!\"\n\nI sat back, pleased while she closed her legs and rolled to her side, quivering in pleasure, sucking air like a bellows. I got up and went to the kitchen, grabbing a couple of bottled waters from the fridge. Calmer, she sat up as I handed one to her. I drank half of mine. Cholan took a couple of breaths in between, and emptied her bottle in one go. I handed her the rest of mine, and she took it gratefully.\n\nWhen she finished off the water, I tossed the empties into the recycle bin, and grabbed two large towels from my room. I put one onto her dresser, while she moved over. The overhead light was off, but there was enough ambient light coming in from the window, to see the large wet spot on the bed.\n\n\"Gods,\" she murmured. \"That spot's bigger than my ass. And that's saying something.\"\n\nI spread out the towel, and Cholan settled onto it, spreading her legs wide. I paused, wondering if I should say something. I knew she felt bad about her weight.\n\n\"Sir? Please, sir, don't stop now. Let me fuck for you.\"\n\nMoving onto the bed, I sat on my haunches. Ran my hands over her wide thighs. As I leaned over her, Cholan's hands reached for my cock. I had lost some of my firmness. She made a worried sound, and pivoting, pushed her face into my groin. Her hot mouth inhaled me. Using both her hands on my hips to steady herself, her tongue flicked under the sensitive crown. Her eager mouth swallowed my shaft, while her tongue caressed my length. Her head bobbed a few minutes, sending me waves of pleasure. When she was satisfied I was hard enough, she moved back under me, spreading her legs, pulling and aiming my hard cock at her wet pussy. As my mushroom head touched her swollen lips, Cholan moaned, and lifting up, tried to impale herself.\n\n\"Lieutenant? I need you inside me so bad. Please, don't make me wait anymore.\"\n\nMoving my hips forward, I dropped a little weight onto her. She gasped as two inches slipped in.\n\n\"Go slow, please! You're -- you're bigger than I remember.\"\n\nShe was as tight as I remembered. Moving slowly, I worked my cock into her sheath a little at a time. A little forward, a little back, feeling the hot, slick, muscular flesh give way, enveloping me as I penetrated her body. Little cries escaping as I worked deeper, her body tense.\n\n\"You okay, Cholan?\"\n\n\"Hah, uh, yeah. Tight fit .. is all.\" Her hands came up, gripping my arms, her face scrunched in concentration.\n\n\"Want me to stop?\"\n\n\"Oh, goddess! Don't -- don't tease me like .. that, sir,\" she grunted. \"I need to make you feel good, make you come inside me. Ah! I think you hit bottom!\"\n\nI pushed a little more, moving my hips side to side, probing her depth.\n\nCholan inhaled sharply, pain crossing her face. \"No! It's all I can take, sir!\"\n\nThere was more than an inch to go, but I backed off a bit.\"I don't want to hurt you, Cholan. Let's give you a little cushion.\"\n\nLeaning back, I brought her legs together, and put them over my right shoulder. Her thighs kept me from pushing too deep, and gave me the depth of penetration I craved. I resumed gently thrusting into her. The slick, hot walls of her pussy gripped me tightly, as I sawed back and forth. \"How's that?\"\n\n\"Wonderful,\" she breathed.\n\nWithin a minute or so, I could feel myself drawing up, pleasure intensifying. \"I may not last, Cholan. If you want, I can try to hold it, give you more contact--\"\n\n\"Fuck me,\" she gasped. \"So .. intense!\" Her hands grabbed my butt, and as I drove into her channel, she pulled me in, forcing me deeper.\n\nEach time I reached her depths, she grunted, growing more frantic in her movements. The tightness in my loins coiled and I pumped faster.\n\nCrying out, Cholan arched her back, shaking in rapture. Her pussy clamped down hard, released, clamped, released. Hot slickness bathed my shaft, coating my balls. With a final thrust, I pressed into her, grinding as my cock pulsed, spraying into her depths. Grunting, Cholan jerked and gripped my butt harder, grinding her pussy on my cock, determined to take me even deeper.\n\nMy cock continued twitching within her folds, and she shivered again. As the passion faded, I kissed her calf on my shoulder.\n\n\"Mmm. You feel so good,\" she sighed. \"I want to stay right here with you, but I need you to get up, sir. I really gotta pee.\"\n\n\"Hmm? Oh, sure.\"\n\nAs soon as she had clearance, she rolled off and dashed out of the room. Getting up, I took the off the towel we used, and put down the fresh one. Gathering the wet towel, and my clothes and shoes, I took them to my room. When she was done at the toilet, I took my own turn, washed up, then returned to her bed.\n\nClimbing over her, I pulled up the blankets around us both. Cholan settled in, facing me, her head in the crook of my arm.\n\n\"Thank you, sir.\" Her hand caressed my chest. \"I love what you do with your mouth. I mean I really like the toy you got me, but it's so much better when there's some one to hold and share with.\" I felt her shiver and snuggle closer.\n\nKissing her gently, I smiled. \"I wholeheartedly agree with you. Thank you for sharing yourself with me, Cholan.\" I set the alarm on my watch. \"Mind if I ask a question?\"\n\n\"Ask away, sir.\"\n\n\"Are you all right with having to wear my neckerchief? I'm pretty sure I know how you feel, but I'd like to hear it from you. Janetta didn't give you or Zinja a choice about it.\"\n\nShe made a pleased noise. \"I feel like I've died and gone to heaven, sir. You are the best man I've ever been with. Now it's even better.\"\n\n\"Better? How so?\"\n\n\"The neckerchief tells everyone I'm your woman, your mistress. It feels good down deep, knowing I belong to you. I know you belong to the Lieutenant first, but if you need to come inside a warm pussy, you don't even have to ask. Just bend me over the couch and do me, sir.\"\n\n\"I'm flattered, but I'm not usually in the habit of bending women over couches, especially without asking first.\"\n\n\"I know you wouldn't hurt me, that you'd take your time until I got wet enough to take you. I .. I just want you to know that I'd like it that you wanted me that much. See?\"\n\nI kissed her head, forehead, then leaned in and gave her a slow, lingering kiss.\n\nCholan sighed. \"That's real nice, sir.\"\n\n\"There's something else I want to ask you. Our first time, you were barely able to take me all the way, but you did manage it. This time, you weren't able to take all of me. What's changed?\"\n\n\"Just fatter, sir. I don't even eat as much as--\"\n\n\"How much more weight?\" I interrupted.\n\n\"Twenty pounds. I'm five foot two and yesterday I passed .. I passed two hundred pounds.\" I saw the shadow of her hand cover her face. \"If I hit two-fifty, I'm out of the Service and I lose everything! What am I gonna do?\"\n\nI pulled her against me, holding her tightly. \"That's what we're doing, Cholan. Dealing with it head on. Tired, too?\"\n\n\"Ye--yeah. How did you know?\" She lifted up and looked at me, surprised.\n\n\"How are you coping?\" I wasn't a doctor, but we'd had a servant with a thyroid problem. That could be fixed, but first it had to be diagnosed.\n\n\"Caffeine pills ... and stim tabs.\"\n\n\"How many each day, Cholan?\"\n\n\"Four .. no, six caffeine pills. And two stims, twice a day. I'm trying to be careful. I really am.\"\n\n\"You drink cahault, too. That's chocolate and coffee. Stimulating your system that much can hurt you in the long term.\"\n\n\"I know,\" she whispered, wiping at her eyes. \"But she needs me. I'm her E--man. I can't let her down. I just can't.\"\n\n\"Have you been to the Infirmary?\"\n\n\"Yes, sir. I went while you were visiting your parents. The medico, he said I was just fat, and I needed to exercise more.\" She sniffed again.\n\n\"A medico? They can do triage and first aid, but nothing complicated. You need to see a regular doctor, Cholan. If they give you any trouble about it, you tell me, and Janetta and I will both go down there, and make new orifices. And your officer, you know that's one of her favorite activities.\"\n\n\"Yeah.\" She giggled, her body losing some of its tension.\n\nI gave her a squeeze. \"I mean it, Cholan. Ask for a full work up, you hear? Blood, urine, and anything else the doctor needs. When's your next day off?\"\n\n\"Six days. But we're swapping out both engines on the Lightning that day. And then we're back on the line again.\"\n\n\"That's not going to do, Cholan. It's already been going on too long. I know you have a really busy day tomorrow, but try to make time the day after. If not then, the next day at the latest. And if you need a ride, you tell me. I'm serious about this. You understand?\"\n\n\"Yes, sir. I will, sir.\" She laid her head back down onto my chest.\n\nI heard her sniffle. \"You okay? I'm not mad at you, Cholan. If anything, I'm worried.\"\n\n\"No, sir. Actually, I feel better. I was just thinking how lucky I am.\"\n\n\"Lucky?\"\n\n\"I got a good officer, I like the rest of my team, I'm the woman of a hot--looking Lieutenant, and that man -- you, sir, you care about me. Me! Fat Cholan. A man wants me for his woman, and he wants to take care of me. Is it any wonder I want you so much?\"\n\n\"I take care of all of you,\" I reminded her.\n\n\"I know! That makes you even more special! Lieutenant Tlacotli is the best. But if you said, 'Cholan, I need you to make babies for me,' my resignation papers would be in, and my ass would be in the air for you yesterday. And I'd be the happiest woman in the world.\"\n\nI laughed. \"Gods above, Cholan! I remember what you told me in Tikun. Apparently you dreamed a hundred babies weren't enough. And rumor is you had that dream twice.\"\n\nShe snickered. \"I had it three times. Pretty silly, though.\"\n\nI squeezed her shoulder. \"Tell me about the dream.\"\n\n\"I haven't a clue what it means, but I had to eat oatmeal and star fruit while wearing a white dress. And every time I finished eating a bowl, a baby plopped out from between my legs, dropping into a basket. Ixma kept telling me to quit eating that stuff because it was making me fat. But there was some strange guy in a doctor outfit and a clipboard who kept telling me I was behind, and that I needed to make more babies and make them faster. A hundred babies weren't going to be enough. And ground crews came by driving towing tractors. They put the baby baskets on carts and took them to the airfield. Silly and strange, huh?\"\n\n\"Indeed,\" I agreed, amused. Her hair was loose, and I stroked it, enjoying the physical touching.\n\n\"I used to eat star fruit with my oatmeal as a girl while growing up in The Eastern Islands. I mean, I know how babies are made and all. But now I'm almost afraid to eat that combo, in case it's a warning from the gods. I know that's even sillier, but there it is.\"\n\n\"Yeah,\" I mumbled. Exhaustion was rushing up to claim me, whether I willed it or not. I nuzzled her hair. \"Look, I'm fading here. Good night, Cholan.\"\n\n\"Good night, sir.\"\n\n* * * * *\n\nWhen my alarm went off, I realized several things at once. It wasn't my own bed, my back was sore from too hard a mattress, I was spooned up behind Cholan, my cock was hard, and I was inside her.\n\nShe gave a ragged breath, gently rocking against me. Her hand was moving between her legs. \"You feel so good, sir.\"\n\n\"Cholan?\"\n\n\"I couldn't help it, sir. I felt you get hard in your sleep. I got so wet, and all I could think about was having you stretching me, filling me.\" She groaned. \"Now that you're awake, would you come inside me?\"\n\n\"It'll have to be hard and fast. I want to get some running in before I have to get ready for work.\"\n\n\"I'm down with that, sir. Fuck me like there's no tomorrow.\"\n\n\"All right,\" I said, pulling out of her. \"Get up on your hands and knees. It's not like bending you over a couch, but it will do.\"\n\nCrouching down, her butt in the air, she grabbed both pillows and held onto them. \"You say the nicest things, Lieutenant.\"\n\nI lined up behind her, and pushed slowly back into her heat.\n\nCholan arched, moaning into the pillows. \"Gawds, that's so deep!\"\n\n\"I seem to remember you liked something else about this position.\" I smacked one bare cheek, then the other.\n\nSurprised, she cried out, pressing back against me.\n\nGripping her hips, I drove into her slick center. Her nether lips strained around my shaft, pulled in with each thrust, drawn out with my withdrawal. The leverage wasn't enough, so I rose up behind her and grabbing her shoulders, leaned over and slammed into her sodden cavity. Grunting became yelling as I pounded into her, giving her flank another hard smack. Then she screamed into her pillow, her pussy squeezing and gushing around me. Shoving roughly into her, I felt my balls tighten. Growling, I emptied myself into her. Each time I sprayed into her womb, my nuts hurt. I was still breathing hard from the release, and thankfully the orgasm ended quickly. Carefully, I moved back, withdrawing. Her dark, swollen vulva slowly began to close, dribbling out our juices.\n\nCholan's legs slid down. Still breathing hard, she said, \"It feels like you're still inside me. Now that's a wake up call.\"\n\nOn the floor, I leaned over and kissed her cheek, patting her butt affectionately. I glanced at my watch. \"I'll be back in about half an hour.\"\n\n\"Have a good run, sir.\"\n\nIn my room, I slipped on fresh shorts, tee-shirt, socks, and my deck shoes. I did my stretches in front of the house, set my timer, and began my jog. Half an hour later, I was back in front of the house, having completed at least twenty minutes of running full out. I stretched again, walked for a couple minutes, then went inside.\n\nCholan was at the stove, in a night shirt and apron, cooking some pan bread and potatoes. When I came around the counter, I noted with amusement that her night shirt barely covered her lower cheeks.\n\nPulling a bottle of water from the fridge, I drank half, then leaned in and kissed her neck with my wet, cool lips, then patted her bare butt affectionately. She shivered.\n\n\"What are you doing, Cholan?\"\n\n\"Enjoying you touching me. And, I'm cooking you breakfast before you go to work.\"\n\n\"You didn't need to do that. I could have easily grabbed something from the Cafeteria on my way in. And you have to be at the hangar in six hours. You should be getting more sack time, not doing this.\"\n\n\"I wanted to, sir,\" she replied, turning to face me. \"I'm not a great cook, but I do okay in the kitchen. Zinja and Ixma are much better, and besides, they like doing it, so I let them. But I wasn't going to pass up on this chance to cook for you.\"\n\n\"I'd hug you, but right now I'm all sweaty and I don't want to stink up your nightshirt.\"\n\n\"It'll wash, and so will you, sir. I'll take that hug and a kiss, too.\"\n\nHunkering down, I drew her in, and held her tight, while I locked on and explored her mouth. Cholan held on and explored me right back. When we broke, I caressed her face. \"Thank you, Cholan. That was very nice.\"\n\n\"Oh, any time, sir,\" she whispered, her eyes affectionate.\n\nWith a whistle, I showered, and got dressed for work.\n\nWe didn't have a real table, but she had the chair pulled up to the breakfast bar. A full cup of cahault, and a plate, with pan bread, fruit spread, eggs and diced potatoes, all hot and ready when I came out. And she had my thermos filled.\n\nI saw that she didn't have a plate of her own. I got up, retrieved a plate and silverware for her, and cut a section of pan bread onto her plate.\n\n\"Lieutenant? What are you doing, sir?\"\n\n\"You went to all this trouble. I want some company while I eat.\"\n\n\"But I--\"\n\nI turned to face her, my tone firm. \"Don't, Cholan. Don't even start. You are looking at a really long shift ahead of you. You are stressing your body with stimulants. I won't have you skipping meals, too. If you don't have an ulcer or pass out from hunger, it'll be something worse. You need sleep and food. So when I leave here, you are going back to bed, you hear me?\"\n\n\"Yes, sir,\" she answered quietly.\n\nSetting her plate next to mine, I dished off a portion of my eggs and potatoes for her before pulling up a chair for her to sit next to me. I patted the seat and she sat down.\n\nI took a bite. The bread was pretty good. She just sat there. I put down my fork.\n\nIn a gentler voice, I asked, \"Why aren't you eating? You aren't allergic to any of this, are you?\"\n\nShe shook her head.\n\n\"Good. Eat breakfast with me, please.\"\n\nHer lips quivered. \"What if .. what if they don't find anything wrong with me? What if it's just me being a fat girl?\"\n\nI took her hand, kissed and held it. \"Whatever the tests say, you, your officer, and I will deal with it. You aren't alone here, Cholan. Tomorrow or the day after, I want to hear that you saw a doctor, not a medico, and if you don't, I will want to know why. You told me this morning that you really liked the fact that I take care of you. But I cannot do it alone. I need your participation. You matter, Cholan Yakalme. Take care of yourself, because you believe you are worthy of that care. I believe you are worth it.\n\n\"But there's more. Skipping meals do not fix anything, and actually makes any weight issue worse. You think by starving yourself you'll lose weight. It doesn't work that way. Your body will think there's no food, so it converts some of what you eat into fat. If you aren't hungry, don't eat. But don't skip meals because you are trying to lose weight. All that does is increase your overall hunger, you lose some water weight, and you stress your body.\"\n\nHer face lowered, tears spilled from her eyes.\n\nI brushed her cheeks, wiping away both of the wet trails. \"Now I'm going to remind you that if you are tired and hungry, it might affect your work. You are an important part of your officer's flight crew. She depends on you to take good care of her aircraft, so that she has the best chance of survival in combat. Rest when you can and no skipping of meals. Are we clear?\"\n\n\"Yes, sir.\" She wiped her eyes, ashamed to look at me.\n\n\"Cholan? Did you know that about not eating? What that does to you?\"\n\n\"No, sir.\"\n\n\"Yes, you have a weight issue. We are here to help and support you. But I never, never think of you as 'Fat Cholan.' You made a first rate breakfast. Please share it with me.\"\n\nShe nodded. \"Thank you, sir.\"\n\n\"You know, when we're alone, you can call me Ranji. I wouldn't mind.\"\n\n\"I .. uh, better not. I'm your woman, but you're the Lieutenant's man first. Besides, I'm enlisted and you're an officer. It wouldn't be right.\"\n\n\"Your choice,\" I told her.\n\nWe ate quickly, and checking the time, saw that I had to leave or be late. I gave Cholan a quick kiss, thanked her again for breakfast, then hustled out the door.",
        "* * * * *\n\nA very short time later, I pulled into the parking lot assigned to Logistics and Supply. There were vehicles in the lot, but a lot fewer than I expected. It was supposed to be the start of the work shift. I went around the corner to the front entrance.\n\nOver a dozen men, and a few women, were gathered together, talking quietly. Some had looks of fear, and a couple looked downright afraid. I sidled through them, climbing the steps to the main entrance. There was a sign on the front door, bearing the masthead of the Air Service. It was a notice stating that all staff assigned to Logistics and Supply were granted a one day leave for today, but to return the next day, at start of shift, for roll call, and possibly new assignments. There were assurances that everything happening was by the Emperor's will, and that soon everything would return to normal.\n\nA third sergeant asked me if the notice was legitimate.\n\nI read the notice again, scanning the bottom. It was signed by the both General Dagantochtlo, Base Commander, and Group Captain Hanastoctli, of Imperial Security. The notice had the holographic seals of both the Air Service and Imperial Security.\n\n\"The orders are signed and sealed,\" I confirmed. \"Back here in the morning. They're doing roll, so make sure you aren't late.\"\n\nGoing home for more sleep sounded very good. I started down the steps.\n\n\"Lieutenant!\" It was Second Sergeant Matiwatli, the aide for our unit commander. \"Imperial Guards took you yesterday, but here you are this morning, like nothing happened. Do you know what's going on?\"\n\n\"Not all of it, no,\" I told him. Eyes riveted on me, hoping for answers. I was the only officer there. \"I gave testimony and saw an execution, but that was in the Medical Division. I heard some things yesterday, but I don't know what I'm at liberty to divulge. The orders on the door are clear. Do what you want today, and be back here tomorrow, bright and early.\"\n\nAnother called out, and I looked. She was a Corporal. I didn't know her name, but I'd seen her before. \"Sir, there's a rumor that Commander Orchid is actually here at High Guard. Is--is that true? Is she really here?\"\n\nI took a breath. \"It's true. I spoke with her last night.\" Mutterings and wide eyes. A few disbelieving. I held up my hands, trying to calm them. \"Look, I've heard nothing, I repeat, heard nothing to indicate there is going to be a purge.\"\n\nA purge occurred when a unit was deemed so corrupt that every single member was executed, and the unit number was retired in shame. But it was rare. The last purge I recalled, was during the Chon Revolt, almost twenty years ago.\n\n\"Keep your wits about you,\" I advised them. \"Be here tomorrow. We will all find out what's going on together.\"\n\nThe corporal crossed her arms, holding herself tightly, tears beginning to spill. I looked around. There was real fear here, worse than what I saw in Command and Control yesterday. \"Sergeant Matiwatli, have you seen or heard from our CO yet?\"\n\n\"No, sir. You're the first officer I've seen this morning.\"\n\nThe corporal began crying, and fear rose a notch.\n\n\"That doesn't necessarily mean anything bad,\" I said. \"He could be giving testimony, at a meeting somewhere, or who knows what. Calm down.\"\n\n\"Lieutenant?\" asked one. \"You've been here a couple months now. You know we are loyal to the Emperor.\"\n\nThat was the problem, I thought. I didn't know them very well, if at all.\n\nAnother spoke up. \"You're an officer. Will you Intercede for us?\"\n\nPeople were scared for their lives. What I was being asked was, is if I, as an officer, would offer them protection. The tradition was old, from the days before Queschua began conquering and uniting the rest of this part of the world. If they confessed their crimes to me, before being caught, they could face punishments ranging from demotion all the way to slavery. But, they would very likely escape execution. And, it would protect their immediate families. Those who waited until evidence was brought against them would not be so lucky. Some might think execution for thievery to be overly harsh. The warrior code of the Empire held honor as more important than life. However, these thieves had also pledged their loyalty to the Empire. That compounded the act of thievery with one of betrayal. Socially, warriors are only outranked by the priest caste. Priests and hereditary warriors are the Empire's noble classes. Enlisted have a chance to earn permanent warrior caste status for themselves, and their immediate families. The demands are high, especially for women, but there are rewards, and upward mobility is just one of them. Zinja was formerly a Free Farmer, but if she made it to twenty years service, and showed she knew a demonstrable skill, she could muster out as Guild Caste, and have a small monthly pension besides.\n\nI folded my arms and surveyed their anxious faces. \"All right,\" I said at last. \"I'll take confessions, and do what I can for you. Who seeks my protection?\" Everyone raised their hands. \"Seven hells,\" I said. \"You, too, Matiwatli?\"\n\nHe nodded, then looked down, embarrassed. \"Commander Orchid always gets the bad guy, sir.\"\n\n\"If you haven't done anything wrong,\" I told them, \"you have nothing to worry about.\"\n\n\"She drinks the blood of her enemies.\" Several others echoed that opinion.\n\n\"I heard she cooks and eats their hearts, in front of their children,\" said another.\n\n\"Enough of that! Sergeant Matiwatli, get out your personal tablet. Take down everyone's names, and email me a copy of that list. That way, if anything does happen between now and whenever, I will have your name, and can verify you have asked for my Intercession on your behalf. I'm going to go. Whoever truly wants me to Intercede for them, meet me at the Cafeteria at lunch hour. Be prepared to stay a while. I will bring a recorder and take down confessions. You should expect that Imperial Security will use truth drugs to verify you have told everything. You have the pledge of Sublieutenant Ranji Kandikan that this is so. I should warn you, however. If you were involved in tampering with the birth control drugs, do not expect me to have any mercy with you.\"\n\nI saw the three women present were stunned by my last words. Well, I'd deal with them, too.\n\nI moved down the steps, and the enlisted moved aside. Matiwatli turned on his tablet computer, and began taking names, and contact information.\n\nAs I rounded the corner, all three women hurried after me. \"Lieutenant! Lieutenant! Wait up!\"\n\n\"Yes?\"\n\nBesides the corporal, there was a sergeant and a private. \"Please, sir, can we speak to you in .. in private?\" It was the weeping corporal.\n\nI motioned and we moved farther around the corner. \"Okay, what is it?\"\n\nHer lips trembling, the corporal said, \"I'm .. I'm pregnant, sir.\" I looked at her name tag. Rilli.\n\nA normal enlistment ran five years. Women, however, could file for resignation at any time. The catch was that you had to take a pregnancy test before the paperwork would process. If you weren't pregnant, you exited honorably, with a fifty credit bonus for each full year of service, unless you qualified for a pension. Annual pensions began at completing twenty years of service. If you were pregnant, it was a dishonorable discharge, and a fine, and if you couldn't pay the fine, it might even mean temporary indenture until the fine was paid. A lot of families did not willingly accept the return of a woman and child, with no husband. Chances for survival, for mother or baby, weren't good.\n\n\"I'm pregnant, too,\" the sergeant said. Her name read Doyya. I could see she was mad, but she was also scared. \"Eight years of service, all gone to shit, sir. I could spit nails. Somebody did this to us on purpose?\"\n\nI looked at the private. Sosha.\n\n\"Not me, sir,\" Sosha said. \"At least, I don't think so. Oh, gods, I hope not. But, I--I am scared, sir. Every time I leave or return to the Women's Compound, I get fucked by one of the guards. And both my sergeants, they make me take my break with them every day. You said someone did something to our pills?\"\n\nShe had a very pretty face and large breasts. And I suddenly realized she had a real problem. \"Yes,\" I confirmed. \"They swapped out the regular birth control tablets with fertility drugs. If your pills are blue, stop taking them immediately.\"\n\n\"Fertility drugs?\" Sergeant Doyya swore and Sosha blanched. The corporal just started crying again. Doyya whirled on her. \"Knock it off, Rilli. It's not helping. You are going to help us, aren't you, sir?\"\n\n\"Look,\" I said. \"I can't make any promises, but I will do the best I can. This isn't your fault. And, if you know of any other women with your problem, get a hold of them, and have them come to the cafeteria. I'll do what I can for them, too.\" I reached into my satchel, and pulled out my laptop. Setting it on the hood of my vehicle, I powered it up.\n\nThe women tried to gather around to watch what I was doing, but I shook my head, turning the screen away. \"I'm afraid I can't let you see this. Stand over by the driver door.\" The computer booted quickly. Accessing the email program, I wrote a quick email, addressed to Capisco Travel Guides.\n\nI wrote, 'I know this is the busy season, but what is the plan for those affected by the tainted goods? Thanks. -- R.' When the email was gone, I powered down the laptop and put it away.\n\nThe corporal and private stared off at nothing in particular. The sergeant, however, watched me intently. \"This is your vehicle, sir?\" Doyya asked. I nodded. \"A sublieutenant with a brand new ChoCac. And if you did what I think you just did, I feel a lot better.\"\n\n\"Just what do you think I did?\" I raised my eyebrows.\n\n\"Sir, I think even voicing my opinion is way above my pay grade,\" she answered. \"Come on, Rilli. I know at least four, no, five women I need to talk to. I'm sure you know some that I don't. We want to let them know what we learned, and be back in time to meet with the Lieutenant.\"\n\n\"But what are we going to do?\" Rilli whined. \"I don't want to go back to my parents. My father and uncle will say I'm a whore, and beat me!\"\n\nThe sergeant slapped her shoulder. \"Get a grip, Corporal Rilli! Let the Lieutenant work on things. I believe we just did the smartest thing in the world.\" Frowning and sniffling, the corporal rubbed her arm. Doyya looked at the private. \"Sosha? You coming with us?\"\n\nThe private looked at me, pleading. \"Can I stay with you, sir?\" She must have seen I was unhappy with the request. \"Please?\"\n\n\"All right, get in the ChoCac. See you later, Sergeant. Corporal.\" I got in the driver's seat and flipped the power switch. The vehicle quietly hummed to life.\n\nAs I drove, I thought about all that was happening, and wondered if the gods of chaos had somehow escaped and were just getting their party started. I glanced at the private. She glanced back, but kept her hands in her lap, saying nothing. I headed back home to West Seashell Lane.\n\nThe vehicle parked, I shut it off. \"We're here,\" I said. Grabbing my satchel from the floor, I got out, and shut the door.\n\nSosha meekly followed me inside. Running on little sleep the past few days had me feeling a little ragged at the edges. Setting my satchel on the counter, I reached into the fridge, and grabbed a beer. A little alcohol would help me relax. \"Sosha, you want a -- what the seven hells do you think you are doing?\"\n\nHer trousers and underwear at her ankles, she leaned over the arm of the couch. Sosha looked confused. \"Sir? You--you want a different position?\"\n\nCholan chose that moment to come out of her bedroom, still in her short nightshirt. She took in the private, dropped her mouth open, and then shut it. Folding her arms, she leaned against the wall and watched us.\n\n\"Private, did you hear me tell you to drop your pants?\"\n\n\"No, sir. But you brought me to your house, so I thought--\"\n\n\"Get covered. I appreciate the offer, but no thank you. I am beat and I'm going to take a nap, so that I can be fresh for what will likely be a long afternoon.\"\n\nCholan started to grin.\n\n\"You behave yourself,\" I warned her.\n\nCholan raised her hands and drew a line across her lips, her amusement plain.\n\nSosha looked at Cholan as she finished pulling her trousers back up. She took in the neckerchief in Cholan's hair, and then seemed to notice the huge emblem for the 233rd Interceptor Group on the wall.\n\n\"Are you really going to take a nap, sir?\" Cholan stood up. \"Because I'd really like to have you lay with me until I have to get up.\"\n\nI shook my head. \"I'd love to, but no, I'll doze on the couch. Way things are going, I have a funny feeling I better stay dressed.\"\n\n\"Let me get my blanket and some pillows.\" Cholan disappeared back into her room.\n\n\"She's your woman, sir?\" Sosha asked quietly.\n\n\"Yes, she is,\" I answered. \"Sosha, if you want something to drink, there's beer, mineral water, and juice, too. Help yourself. I'm afraid there's not much entertainment. Not even any books or magazines, I'm afraid.\"\n\n\"It's okay, sir. To be honest, I can't read very well,\" she admitted, then she hastily added, \"But, I am getting better at it.\"\n\nThe couch was the only comfortable place to sit long term. There was the chair at the small table, with the desk computer, a kitchen chair, and a bar stool. Not much for entertaining visitors. I shrugged. One thing at a time. Settling into one corner of the couch, I sat down, taking another drink of beer. It wasn't going to take much to put me under, I thought.\n\nCholan came out. She made me lean forward and put one pillow in the corner, to help support my head. Pushing me back, she took the half empty beer from me, and set it aside. Kissed me affectionately. Using the second pillow to prop her body up a bit, Cholan put the blanket around her legs, curled up with her head on my lap, and closed her eyes.\n\n* * * * *\n\nI woke up to Janetta speaking quietly, urgently. \"Cholan? Cholan, get up. I need you to go down to the hangar now.\"\n\nOpening my eyes, I glanced at the watch. Only an hour. And my neck screamed in protest at the slightest movement. I looked at Janetta, blinking stupidly.\n\nCholan rose, rubbing her eyes in panic. \"Oh, gods, I overslept, didn't I? I'm so sorry, Lieutenant!\" She rolled off the couch and tried to squeeze by her officer.\n\nJanetta shook her head. \"No, you aren't late. I'm early. Cholan, I had a complete failure in my avionics. I need you to help get my bird fixed ASAP.\" She was still in her flight suit, and it was dirty from smoke, and still sported the dried blood from the night before. She smelled of jet fuel and burnt plastic, and several strands of hair had escaped her Jaguar hair clasp. I was worried. She'd had a major systems failure, and she was calm, almost subdued about it.\n\nCholan paused. \"A complete failure? All at once, or did you lose the LRAT first?\" LRAT was the acronym for the Long Range Targeting system.\n\n\"I lost the LRAT first. Why?\"\n\n\"Do I have time for a shower first, sir?\"\n\n\"You've got to fix it, and do it quick, Cholan. You tell me.\"\n\n\"I won't know until I open it up, but it doesn't sound good. I'll be ready in twenty minutes, sir.\"\n\nJanetta turned to look at Sosha sitting in the corner. Nervous, the private rose up and saluted.\n\n\"Who is this, Ranji? And why are you here instead at work?\"\n\n\"I love you, too, Janetta.\" I stood up slowly, rubbing my neck. \"Are you okay?\"\n\n\"I'm fine!\" she suddenly snapped. \"But my Lightning appears to be toast, and I don't have a fucking clue as to why! You didn't answer my question, and that pisses me off.\" She turned to the private, moving to get in her face. \"Who the fuck are you, and why are you in my house?\"\n\nI moved between them. \"All right, Janetta, that's enough! Before I answer your question, I need to know that you are not hurt. That aircraft can burn to slag on the tarmac, as long as you are safe. I need to know. Are you all right?\"\n\nJanetta glared at me, then the next thing I know, she's got her arms around me, and she's kissing me hungrily. I kissed her back, getting into it, and then she bit my lip.\n\n\"Ow! That hurt, Janetta!\" I shoved her away. \"How do you go from kissing, to trying to remove my lip?\"\n\n\"I'm fine. Now fill me in.\"\n\nHer black eyes looked predatory, and I could see Janetta evaluating Sosha. Was Janetta jealous? Did she just mark me in front of a strange woman? My neck hurt, and I was already grumpy.\n\n\"That's Private Sosha. She works in Logistics and Supply. I got to work, and there was a notice that the office was closed until tomorrow. People got frightened, and asked me to Intercede for them. Sosha, I believe, received blue pills, and has been taking them.\" Sosha nodded. \"She asked to stay with me until this afternoon, so that she isn't molested.\"\n\nJanetta glanced at me, at Sosha, then turned away. I took her arm, and turned her back to me. She looked ashamed.\n\n\"I thought you brought her here, to our house, to fuck her,\" she said. \"I assumed the worst, and I'm sorry, Ranji. Whenever I see you, I still have to remind myself that you love me, and I love you, and all this isn't just a crazy dream. Your reason for not answering my question, well, it surprised me. I am not used to someone really caring for me like that. I'm trying. I am. But it's not all my fault, you know. Sometimes you are impossible, but being a man, you can't help that.\"\n\nI almost burst out laughing. I'd heard that complaint about men in general, before.\n\n\"I'm such a bitch sometimes.\" Janetta threw her arms around me again. I held her, stroking her back.\n\n\"No, you're the Queen Bitch,\" I reminded her.\n\n\"So I am,\" she admitted. \"I was fine, until I got on the ground, and then I got scared. That has never happened to me before, Ranji. In the air, I'm not scared at all. I don't even think of the aircraft as being separate from me. It's all a part of me, and I just do what needs to be done.\"\n\nJanetta took a long breath. \"When I got back on the ground, I lit into Zinja and Ixma. I mean really lit into them, yelling, and saying things I'm ashamed to repeat -- until Zinja showed me what they did, and it was by the book. Gods, Ixma sobbing, and begging me not to send her away. My first double shift, and I'm so tired. I've got a mountain of reports still to finish, my aircraft is .. I don't know. I might have to sign out another aircraft. If I do, I want it checked over, before I have to fly it. Everything is crazy, Ranji, but I see you, and hold you, and I feel okay. If I had the time, I'd drag you into our bedroom, and make you pound into me until I saw stars.\" She lifted up her head off my shoulders, and held my face in her hands. \"I love you. I'm such a mess right now, and if I didn't have you, I don't know what I'd do.\"\n\nWhat could I say? I just kissed her. Slow and gentle.\n\n\"We're both buried in work at the moment,\" I told her quietly. \"It sounds like you are not planning on getting any sleep before your shift tonight. That's not good. You need down time before you fly, or you will get hurt, or even killed. The longer you go without sleep, it becomes a when, not a maybe. Trust your crew to do right by you. If Zinja is working at the hangar, who's going to make food for you, and them? All of you going without sleep, and food? No way. Call the Commissary Diner right now. Order up food and drinks--\"\n\n\"We've got a whole fridge full of drinks, thanks to you. And Zinja has an industrial size pot to brew cahault.\"\n\n\"Fine,\" I told her. \"Good, actually. But you still need to eat. Real food, Janetta. Call up and order four meals for each of you. Whatever you don't eat, bring home for later. You can pick up the food on the way back to the hangar.\"\n\n\"That's a really good plan, Ranji. Wish I could. Computers are down. Have been since yesterday. And my phone doesn't work.\"\n\nComputers are still down? I wondered if that is what Doyya meant. I pulled out my phone and opened it up. \"Active service\" read the display. I showed it to her.",
        "\"Oh, that bitch! I bet she turned off my phone on purpose! Oh, this is so--\"\n\n\"Hey! Make the call to the Diner,\" I told her, handing her my phone. \"I don't know why I have service if you don't. Right now, it's not important. Order the food. The Diner is in my contacts.\"\n\nNodding, she stepped away. Pulling out her charge card, and walking to the kitchen, she started the order.\n\nI looked at the private. Sosha looked right back, her face thoughtful.\n\n\"You okay?\" I asked her.\n\nShe started to say something, but shook her head.\n\n\"Go on,\" I encouraged. \"If it's out of line, I'll say so. But I won't chew you out for it.\"\n\n\"She's your woman, too?\"\n\n\"She is,\" I confirmed. \"All warrior and all mine.\"\n\n\"I think you're a good man. Most wouldn't have turned down free pussy, even if you didn't ask for it. Is the other one an officer, too? And they're okay living together with you?\"\n\n\"Private,\" Janetta said crisply, \"who he sleeps with is my business, not yours. Ranji, here's your phone back. The food won't be done before eleven-thirty. That's more than an hour from now. As soon as Cholan's ready, we're heading to the hangar.\"\n\nI put the phone back into my pocket. \"I'll follow you over. I want to help, and once I'm done this afternoon, I'll be back to do what I can.\"\n\n\"You're not an E--man or a mechanic, but I am happy having you around. Cholan!\" Janetta called out. \"How much longer?\"\n\n\"Getting my shoes on, sir!\" she replied from the bedroom.\n\nJanetta gave me another quick peck, then called out again as she headed out the door. \"I'll meet you in the HueCac!\"\n\n\"Let's go, Sosha,\" I said, retrieving my satchel from the kitchen counter.\n\nCholan came around the corner, dressed in clean work fatigues. She had her own laptop over her shoulder, busy tying her neckerchief around her braid. \"Bye, Lieutenant!\" she said, hurrying out the door.\n\nI quickly closed up the windows, and turned off the fans. In a decently made building, I'd leave the fans on, and the windows open. With the crappy electrical system, and shoddy construction, I didn't dare leave the fans on unattended. We already had issues with bugs, mice, and lizards making their way inside. Sosha helped with closing up the front windows, and I did the bedrooms.\n\nSosha was quiet during the short drive to the hangar, and frankly, I was busy driving and thinking. Mostly about Janetta. I wasn't overly religious, but I thanked whatever gods that were listening that Janetta hadn't been hurt.\n\n* * * * *\n\nWhen we entered the hangar, Cholan was on the raised work platform, her head buried in the avionics compartment. The panel was open, and the system attached to the panel looked badly scorched. Janetta, Zinja, and Ixma stood around, watching the display monitor, listening to her assessment of the electronics. The camera cable was on, so I moved to watch with them.\n\nCholan pulled out, grabbed a light, and buried her top half inside again. Then something zipped across the screen. Cholan jumped, then let loose a stream of East Islander. I didn't understand what she said, but her tone was clear enough.\n\nJanetta and Zinja moved closer. \"You okay?\" Janetta called.\n\nCholan leaned back out, spitting, and choking, and wiping. Lines of hydraulic fluid had doused her from her hairline to her left breast. \"That shit is vile!\"\n\nZinja grabbed a handful of rags, and tossed them up to her. When her face was clear enough, she asked, \"Who removed the wire on the hydraulic line?\"\n\n\"We both did,\" Zinja answered. \"My say so. Why?\"\n\nI saw a Group Captain walking toward the hangar, with a sergeant right behind him. Janetta saw them, and swore quietly before straightening her shoulders and saluting.\n\nHe nodded back. He turned to me, a question on his face, then he did a double-take on my name tag. Grinning, he held out his hand. \"Group Captain Pentil Tanosca, commander of the 233rd. So you're the one who put the spin on my newest pilot! Glad to meet you at last. And, I'm really glad she is sorted out.\" He shook my hand, then focused on Janetta. \"Well, Lieutenant? How is it looking?\"\n\nShe looked up. \"Sergeant Cholan?\"\n\nCholan leaned back into the fuselage, speaking loudly so we could hear her. The camera feed on the probe moved around inside. \"See here? Long Range Targeting scan board is fried. That's easy to fix. Just put in a new one. See here? Weapons Control computer. Burnt to toast. Anti--air Counter Measures. Toast. Fuel monitor -- everything the master board controls, including the master board itself. Even the backup surge regulator, all gone, and need to be pulled. About five hours work, if it goes without a hitch. But I would not fly it, until the rest of the systems are tested, to make sure they aren't compromised.\"\n\nShe came out of the fuselage bay, to finish her assessment, wiped her face again, and tossed the rag aside. \"Three, maybe four days, of solid work, replacing everything. It's quicker to do that than to test every system. That's double--shifts, if I'm working on it by myself, without having to do other work. Lieutenant, if the radio wasn't a discrete system, you would have lost radio, and identification broadcasting, too.\"\n\nLosing her ID broadcast meant Janetta's interceptor would have suddenly registered as an unknown military aircraft to the anti--air systems surrounding the airfield. The automated SAMs would have kicked in, before the humans monitoring could have reacted. I swallowed.\n\n\"Okay,\" Janetta asked. \"Do you know why it happened?\"\n\n\"Oh, yeah,\" she nodded, holding up a small, scorched circuit board. \"The J--27 regulator. And it's a good thing you were able to get down when you did, too, sir.\"\n\n\"Why is that?\" Captain Tanosca asked.\n\n\"With the regulator out, and the boards shorting, power was still going into the system from the batteries. When you told me that the LRAT went out first, I was pretty sure I knew what had happened. The surge overloaded the rest of the systems, fine. You still had hydraulics, radio, and your guns. Handicaps, but still viable. The avionics and hydraulics work good together for the 2230 series. We replaced that with the new 3100 board last month. Trouble is, the 3100 is a smaller, more compact system. The hydraulic line runs right over the secondary regulator. Once the regulator blew, power kept feeding into the system, cooking the hydraulic tubing, as well as the other systems connected to it. The god of the Air Service likes you, sir. Another ten or fifteen minutes with the power on, and you would have had an onboard fire. Fire, and no hydraulics, in the Lightning? You'd be flying a dead stick.\"\n\n\"Seven hells,\" I muttered.\n\nJanetta shook her head. \"I don't buy that. Otherwise, the other Lightnings would also be having problems. So why aren't they?\"\n\nCholan nodded. \"Excellent question, sir. They need to use a J--35R regulator with the 3100 LRAT board. The newer board runs hotter, and it needs a stronger regulator, to handle the discharges. Either the other crews figured it out, or they are still running the 2230 boards.\"\n\nJanetta went to the diagnostic console and pulled up the avionics menu, then selected the Long Range Targeting system. \"I'm looking at the specification manual, and it says to use the J--25 Regulator.\"\n\n\"I know what it says, sir,\" Cholan answered. \"And it's wrong. When I did the upgrade, I kept blowing J--25s whenever I put power through the system. Went through half a dozen regulators, the first day. You were grounded at that point, sir, so I had time to troubleshoot it. Took me two days, but I settled on the J--35R as allowing the proper amount of current back into the rest of the avionics. And as a safety measure, I hung the starboard hydraulic line so it doesn't even touch the 3100 board.\"\n\nCaptain Tanosca looked thoughtful. \"Sergeant Vanu, are you familiar with what Sergeant Cholan is talking about?\"\n\nThe captain's aide checked his tablet, then nodded. \"Yes, sir. Four days after we received the 3100 hardware, there was a software update. The update notes confirm the change in voltage regulator series. J--35L is considered acceptable, but the R version is preferred. No mention, though, of the hydraulic line.\"\n\n\"So there was a defective digital manual sent out, but it was corrected later?\" he asked.\n\n\"Affirmative, sir,\" Sergeant Vanu replied.\n\nCholan climbed down, joining the rest of us crowded around the display screen.\n\n\"Bring up the system status, Sergeant,\" the captain instructed.\n\nSergeant Vanu entered commands, and the diagnostic system displayed its report. According to the computer, it had queried the Air Service mainframe just two days earlier. The log reported twice-weekly contacts on schedule.\n\nThe captain saw the readout and frowned. \"Verify the program version, please.\"\n\nThe sergeant consulted his tablet, then compared it to the status report. \"It's off, sir.\" He tapped a few keys on his tablet. \"According to the update history, this diagnostic is using software from .. that's more than seven weeks ago, sir.\"\n\nCholan immediately went around the back of the console. I stepped around to see what she was doing. She fished out a key, crouched down and opened the back panel. It was dark within the unit. I reached up to the work platform, retrieved the light, and handed it to her. Captain Tanosca stepped around to see what we were doing.\n\n\"Hello, there,\" Cholan muttered. \"What are you--\"\n\n\"Stop! Don't touch anything, Sergeant!\" the captain ordered. \"What do you see?\"\n\n\"A strange circuit board, sir, in the network slot. Not what's supposed to be inside this unit. And, it doesn't look like Imperial manufacture, sir.\"\n\n\"Close it up,\" the captain said. \"Lieutenant Tlacotli, I consider this an attempt on your life. For the moment, we act as if nothing is amiss. Sergeant Vanu, get a truck, return to my hangar and bring my diagnostic unit here. I'm off the flight rotation for three days, so I won't need it. We need the assistance of Security to proceed, but almost all non-combat services are locked down, with the Imperial forces running around pell-mell on base. I hear Air Security is going through the grinder with Imperial Security at the moment.\"\n\n\"Sergeant Vanu and Private Sosha, please step outside the hangar,\" I said.\n\nThe sergeant looked at his officer. Captain Tanosca raised his eyebrows, but said, \"Do as he says, Sergeant. I'm curious to hear what Lieutenant Kandikan has to say. You're okay with the Lieutenant's Flight Crew remaining?\"\n\n\"I trust them with my life, sir.\" After the two enlisted moved out into the roadway, I spoke quietly. \"I used to work Security at Tikun War base. I could get some recommendations, find someone here that's trustworthy. You are thinking of checking for fingerprints, Captain? And forensics on the circuit board?\" He nodded. \"I'll handle that. Someone came here when no one else was around. I'd like to set up a discreet camera array hardwired to a control unit and data storage, and put them inside the office. The Lieutenant's Flight Crew can help me get it installed. Set up for continuous motion sweep, with option for on--command record. The Harbinger series are compact, will record standard, infrared and ultraviolet. If there are any repeat visits, we'll catch them.\"\n\nI thought about the satellite feed over the base, but knew it was a dead-end. Imperial Security kept secret the fact that we were monitored, and I did not see us getting access to that information easily. The camera system was the next best option.\n\nCaptain Tanosca looked at me. \"You have access to that type of equipment?\"\n\n\"If not now, I will.\"\n\n\"All right, Lieutenant Kandikan. Make it happen. And I want you to keep me in the loop. Nothing digital, strictly in-person updates only, until we have hard evidence. We are on a deadline. If this is being monitored, you have two days, max. Then I need my own diagnostic system back, and we have to get a new unit assigned to this team. Am I clear?\"\n\n\"Yes, sir,\" I replied.\n\n\"Tlacotli, it appears your bird is dead, and will take some time to return it to flight-worthiness. Go to Air Maintenance, and draw a fresh bird from the reserve pool.\"\n\n\"I'll want to check over the new one before I fly it, sir,\" Janetta told him.\n\n\"Agreed.\" The captain looked at his watch. \"You have eight hours to find and verify the bird before your duty shift begins. Now, tell me why you look like shit.\"\n\nJanetta did look tired. \"Sir?\"\n\n\"You have been off for nearly three weeks. This is your second day back, on a six-week assignment of Over-Flight Support. How long since you last slept?\"\n\n\"Yesterday at noon, sir.\"\n\n\"Lieutenant, you are on Over-Flight duty. Six hours of flight time spread out over sixteen hours of duty time. You are supposed to nap at least two hours between flights, while your crew keeps your craft combat ready. You had a systems failure, so I understand why you aren't in bed right now. But explain to me why you did not do your earlier naps per protocol.\"\n\n\"I was given extra duty, sir,\" Janetta replied.\n\nCaptain Tanosca put his hands on his hips. \"What sort of extra duty? From whom?\"\n\n\"Captain Angawa gave me reports to complete. I am to turn them in tomorrow, at the end of my duty shift.\"\n\n\"Show me.\"\n\nHe and Janetta headed to the office. I turned to the others. \"All of this is not for discussion outside our group, understood?\"\n\n\"She's our officer. Count on us, Lieutenant,\" Zinja assured me. Cholan and Ixma confirmed their support. Then Zinja gave me a sly look. \"That was really sweet, what you said to the Captain.\"\n\n\"That? It's true. I do trust you,\" I told them.\n\nIxma moved closer to me.\n\n\"Yes, well, thank you, anyway. Corporal! Hands to yourself! If you flaunt your affection in front of Captain Tanosca, even if he chooses to ignore your breech of military conduct, you will embarrass your officer, and you will embarrass me. I will regret chewing you a new asshole, but chew it I will.\"\n\nFlushing, Ixma stepped away. \"I hear you, Second Sergeant.\"\n\nCholan smiled at Ixma. \"Take solace in knowing you did your job, Ixma. What happened was sabotage, and not your fault. Focus on the fact that Lieutenant Kandikan is going to help us find the bastard who did this.\"\n\n\"Hey! No promises,\" I objected. \"I'll do what I can, but no promises!\"\n\n\"You told me this morning that you believed in me. I believe in you, Lieutenant,\" Cholan said matter-of-factly.\n\nJust great, I thought. Then I thought of something.\n\n\"Cholan, open up that panel, and shine the light in. Point out the strange circuit board to me. I want a picture of it.\" She got down again to do as I asked. \"When I get the security cameras, I will count on your help putting them in.\"\n\n\"You got it, sir,\" Zinja promised.\n\nRetrieving my laptop, I booted it up, and using the record feature, captured the image digitally. When I was done, I told her to lock it back up. I sent the image to Capisco Travel Guides, with a single question, 'Have you seen this type of circuit board before?'\n\nI powered down my laptop as Janetta and Captain Tanosca returned. The Captain was speaking to her. \"Go ahead and finish the reports for Captain Angawa. I will deal with him at a later time. Haul your dead bird over, and swap it out for a new one. I seem to recall this one was already due for engine replacement. Might as well let Air Maintenance replace the electronics, and the engines, at the same time, with an order to test all the wiring. I will counter-sign the authorizations. When you have your new bird here, make sure the doors are secured once you leave. Then I want you to go to the naval base, and get checked out. The Air Service Infirmary is closed at the current time, and we need the exam to justify you being off duty tonight. I will note in my report that you 'don't feel well' from your hard landing. If the new Lightning is not up to your safety specifications, call me, and tell me you still have a headache. We'll go from there. Clear?\"\n\n\"Yes, sir. And thank you.\"\n\n\"You are taking this calmly, for someone who's survived a death attempt.\"\n\n\"People have tried that before, sir,\" she replied. \"I'm a warrior, and I still stand.\" Meaning that everyone who had made such an attempt was dead.\n\n\"As it should be,\" he told her. \"Sergeant Cholan. Your knowledge of the internal workings of the AT--7 is remarkably thorough. I will note that in your personnel jacket. In order to help keep the saboteur in the dark, I will withhold my report for the next several days. The Safety Board will review, but at this point we are going with mechanical failure. Lieutenant Tlacotli assures me that she, too, trusts all of you with her life. That is high praise.\" With a nod, the captain and his sergeant departed.\n\nI glanced at my watch. It was past time for me to be at the Cafeteria. \"Janetta, go ahead and use my vehicle. It's got more room, and when you are done, you can all come home together. I've got to leave right now, so I'll take your HueCac.\" I stepped over to her, and gave her a light kiss. \"I'll stop by later, and see how you are progressing. Don't forget your food at the Diner.\"\n\nPursing her lips, she nodded. \"Thank you, Ranji. Knowing I can depend on you means a lot. Now get out of here. I have work to do.\"\n\n\"Thank you, my Queen,\" I laughed, collecting my laptop.\n\n\"Queen?\" Ixma asked.\n\n\"I am the Queen Bitch,\" Janetta declared.\n\n\"That's for sure,\" Cholan dead-panned.\n\nRaising her eyebrows, Janetta continued, \"And you are all my bitches. Cholan, you and Ixma go to the Commissary Diner, and pick up our food. It's already paid for. Zinja, we're going to secure the doors, and take this dead Lightning to Air Maintenance, and get a new one from Reserves.\"\n\n\"Yes, sir!\"\n\nI collected Private Sosha, and hopping into the smaller, two-door electric HueCac, we drove to the base Cafeteria.\n\n* * * * *\n\nIt was almost half-way through the lunch hour when we arrived. There were almost double the number of people from this morning waiting for me. Almost half were women. Logistics and Supply. Vehicle Maintenance. Air Maintenance. Command and Control. Medical. Quartermaster's Office. Security. Even a Postal Carrier. Sosha joined the long line of people awaiting my protection.\n\nI grabbed a seat at the end of the table, and stood on it. \"All right, all those who seek Intercession, raise your hands.\" Everyone nearby raised their hands. I needed to make this manageable. \"All right, if you have not given your names to Second Sergeant Matiwatli, please do so. I will process men first, in the order they are on the list. Please sit, and if you need to get up, and get food, or go to the latrine, do so. I'm not going anywhere, not until everyone has had a chance to present themselves.\"\n\nI booted up the laptop, and prepared to record the sessions. Names were taken, statements given. I glanced at my watch. Four down, forty minutes gone. I realized this was going to be a long night.\n\nJust then two things happened at once. There was a pop-up message from Capisco Travel Guides. At almost the same instant, I saw flashing lights as two Air Security cruisers shot by the windows, almost immediately followed by the pop-pop-pop of automatic rifles, and the heavier pops of assault rifles being fired.\n\nSeveral people jumped up, and not just from our group, rushing to the windows, to see what could be seen. I was prepared to resume taking statements, when someone yelled out, \"Hey, there's something going on at the Commissary!\"\n\nI had already hit the accept on the pop-up. It read, 'If you can reach any women officers, stop them from suicide. Already lost seven. Expect more. Tell the women I will protect them. -- O.'\n\nI closed out the programs, shut down the laptop, and I climbed up on the top of my chair. \"All right! I need your attention. I need to go check on something. I will be back as soon as I can. I want all of you to remain right here until I do. However, before I go, I need to speak to the women. I know why you are here. Do any of you know, or suspect that a woman officer is in the same condition you are?\"",
        "One woman from Command and Control slowly raised her hand. \"I--I think I do. Two of them.\"\n\n\"Your name. And do you know where they are?\"\n\n\"Third Sergeant Chita, sir. Lieutenant Sheeya and Senior Lieutenant Haneeya Chantowanti. Two sisters who live together, officers in the Judge Advocate General's office.\"\n\n\"I saw someone here from Air Security. Where are you?\" I scanned the crowd.\n\nA strongly built woman raised her hand. \"Corporal Yalcamara, sir.\"\n\n\"Sergeants Doyya, Chita and Corporal Yalcamara, you are now mine. Follow me.\" Leaving my laptop, I grabbed my satchel. Inside was a holster and my Chon .44 pistol. If Cholan and Ixma were involved in the shooting, I was going to take it poorly.\n\nOutside the cafeteria, I led the three women to the HueCac. \"Doyya, you're driving and you're in charge. Your job is to stop them from committing suicide. If you can't convince them, subdue them. I have been promised they will not face death.\" From my pocket, I pulled out the Beltan stunner, and gave it to Yalcamara. \"Use this. Break down the door, do whatever you have to. Stun them, tie them up, whatever you have to do, on my direct orders. Bring them back here. There's not much room in the HueCac, but do what you have to. Make multiple trips if necessary.\"\n\n\"What are you going to do?\" Chita asked. Doyya powered up the HueCac.\n\n\"I'm going to the Commissary to make sure my family wasn't there.\" It was out before I realized it, but that's the way it was. If Janetta's crew was her family, then they were my family, too. I slapped the hood of the vehicle. \"I'm trusting all of you to do your best. Turn to!\"\n\n\"Sir, yes, sir!\" the women echoed. Doyya nodded as she backed the vehicle up, turned, and sped off.\n\nI hurried up the street. I could see there was already a dozen vehicles, and almost two score Imperial Guards, gathered about. Farther west, I heard more shots being fired. I could see a couple of tracking drones in the air, zipping about overhead, and two attack helicopters hovering close by. The drones, the helicopters, and more shooting continued, moving west, farther inland.\n\n\"Hey, there!\" Two Imperial Guards in power armor spotted me and cut me off. \"Stop right there. This is a closed area.\" Their fully covered visors and the metallic echo of their voices dehumanized them. Both pointed their heavy assault rifles at me.\n\nI raised my hands. \"I just want to know if my people are here. I'm looking for Sergeant Cholan Yakalme and Corporal Ixma Ba'lanchicotl. Are they here? If they aren't, I'll move along. If they are here, I want to see them.\"\n\nThey paused, then lowered their weapons. One scanned my lanyard. \"Identity confirmed. You will come with us, Sublieutenant.\" The first one led, and the second one fell in behind me.\n\nWe approached the Commissary building, near the Diner entrance. Five men lay dead on the ground, with great gaping holes in them. Blood pooled on the asphalt around them. Three vehicles were parked in the lot close by. The nearest one was a ChoCac with the door open, the driver's side window shattered, glass all over the seat, and the door .. warped? On the ground, outside the door, was a liquid mass that stank horrendously. As we moved around it, my heart fell.\n\nThe license on the vehicle was mine.\n\n\"Cholan? Ixma?\" I looked around frantically. \"Cholan! Ixma!\" That window was rated to withstand a 20mm shell! What broke that window?\n\n\"Calm down, Sublieutenant!\" said the guard behind me.\n\n\"No! That's my vehicle! My people are here. I want to see them!\"\n\nThe guard up front turned around. \"That's where we're going, sir. Calm down or we will be forced to stun you.\"\n\n\"All right, all right. Just as long as I can see them,\" I agreed, taking a deep breath.\n\nStepping through a cluster of Air Service personnel, Imperial Guards, and Imperial Security, we headed to the open end of an ambulance. Those gathered around made way for us. The lead guard said, \"He's here, sir.\"\n\n\"Thank you. Return to your duties,\" I heard. A woman's voice, and as I recognized it, Commander Orchid poked her head out of the ambulance, and said, \"Step inside, Lieutenant.\"\n\nThe Commander sat down, making room for me. On her other side sat an Imperial Security Medico. Laying on the stretcher, covered in a blanket and curled into a ball was Ixma!\n\nHer voice shaking, teeth chattering, and her face covered by her hands, she recited her name, rank, and serial number.\n\nOrchid leaned around me. \"Sergeant! Close the door. Clear the area. We're moving out.\"\n\nThe back door closed, there were two loud thuds in the back, and then we were moving.\n\n\"Ixma?\" I said quietly. I looked at Orchid. \"What's happened to her? Where's Cholan?\"\n\n\"Do it,\" she said to the Medico. He leaned forward with the injection gun, put the flat nozzle against her neck and pulled the trigger. There was a short hiss, Ixma jerked, and sat up, terror on her face. Her face, hands, and arms appeared sunburnt.\n\n\"Don't wanna disappear,\" she said, her voice beginning to slur. \"I don't--Ranji? I knew you'd come for ...\" Ixma reached out, then she slowly crumpled.\n\nI glared at the commander. \"What happened?\"\n\nShe gave me a black look in return. \"Get a hold of yourself, Sublieutenant. I am your superior officer. You will treat my rank with respect, or pay the consequences.\"\n\n\"I apologize. Sir. Now what in the seven hells happened? Sir.\"\n\nOrchid scowled, then chose to ignore my tone. \"We pulled the security camera footage from both sides of the street, and from the Commissary parking lot. That's being looked at, to see what's salvageable. From what we know, the two of them arrived, and, almost immediately, they were surrounded by seven men. They were after Corporal Ixma. The women managed to get back into your vehicle and engage the security locks. That alerted us. But, we already knew there was trouble, and were on the way.\"\n\n\"How did you know that, sir?\"\n\nShe nodded. \"I have had two people assigned to keep an eye on you, and the people with you. One for each vehicle. The one following your ChoCac spotted the men approaching, and heard the screams of the women. Your photo to me, though, was a clincher. One of the hostiles approached the locked vehicle, and over-rode the voice lockout. As Security forces moved in, Sergeant Cholan was pulled from the vehicle. I'm afraid she was badly beaten, trying to defend Corporal Ixma. Relax! She is at the Naval Hospital, and receiving the best care we can give her.\n\n\"The Imperial Security agent charged up, as the assailant reached in to pull Ixma from the vehicle. She shot him seven times. You told her you kept a pistol in your glove box?\"\n\nI nodded.\n\n\"It probably saved her life. The agent, Dohensa, ordered the men to stand down. They ignored him, and the agent opened fire. He shot two, before he himself was killed. Energy weapon. Same one that hit your vehicle, and busted the window. I'm telling you that because agent Dohensa leaves a wife and young son behind.\n\n\"About that time,\" she continued, \"an Imperial Guard patrol showed up. The men refused to surrender, and were taken out by the Guards. The weak personal shields the humans had were no match for the heavier caliber assault rifles. Fortunately, the officer that Corporal Ixma shot, was seen by several Guards, and their cameras recorded the image, before the body disintegrated. The second one is still loose at this time, I'm afraid. It appears he also has some sort of personal cloaking device.\"\n\nReaching into her jacket, Commander Orchid pulled out the Wampag Talon, and handed it to me. \"This is yours, I believe.\"\n\nI took it, and slipped it into my satchel, beside the Chon .44.\n\n\"We learned something new today. We knew projectile slugs aren't effective against draconian personal body shields. Flechettes, however, seem to work just fine. The techs are speculating about what's different about them. Possibly the mass is a factor, or the area of field penetration. Maybe it was proximity? Who knows? That is what the techs get paid to find out. The point is, that Corporal Ixma shot, and killed, a draconian agent.\"\n\nShe touched her headset, dropping down the microphone. \"Wolf Leader, what's the status on the hunt? Well, I don't care! Put up more drones if you need to. Infrared, ultraviolet. Try a science drone! Something that can read microwaves, or gamma radiation, or x-rays even. He's shielded, and cloaked, but there's got to be a way to detect him! Find him. Alive is preferred, but he's killed an Imperial Security agent and several Imperial Guard. Peek up dresses, and dance on rooftops if you have to. Just find him! You are the best, and I want that alien. Alive, but I'll take dead, over escaped. Do not disappoint me.\"\n\nOrchid put the microphone out of the way, her communication over.\n\n\"If he's cloaked,\" I asked, \"how are you tracking him now?\"\n\n\"When he moves, there is a heat displacement, that infrared picks up. It doesn't last long, a few seconds, but it's something. He's already taken out nine troopers. We want his tech, but I am loathe to freely spend the lives of good soldiers, for little hope of success.\"\n\nI nodded toward Ixma. \"Is she going to be okay?\"\n\nThe commander nodded, speaking in a gentler voice. \"We know what they used. The gun fires a highly charged plasma bolt. After she shot him, she closed the door again. The burns she has are minor; most of the damage was absorbed by the special glass of your ChoCac. Once we get to the hospital, she'll get treated. I'm glad you're here for her. Initially she was incoherent, and distraught over her friend. We know she saw the draconian, because she was screaming he had four eyes, which is their natural state. They have two eyes in each eye socket. Very few people know that. She was calming down, saying you would come for her. Then she saw me, and didn't react well, I'm afraid. Name, rank, and serial, in between asking for you. We tried to question her further, but she's had a great shock. Well, you saw her.\"\n\nWater lovers, the draconians are allies of Aesir-Veda. About human height, the humanoid reptiles are known for their arrogance and their fetish for copulating with humans. On average, they are stronger than a man, but are no match for someone in power armor. In their normal form, their dual eyes are a mark of their alien evolution. The human eye sees three main color bands of light. Red, yellow, and blue. Draconians see six color bands, allowing them to see farther into the color spectrum. The dual eyes sit side by side in the orbital socket; the eyes track together, but they can be closed independently. Disconcerting when you first experience it. I had seen draconians live as a child, and subsequently saw video footage, as part of my extensive private schooling. The dual eyes are difficult for many humans to deal with, so even when they reveal their basic form to humans, they camouflage their alien eyes so it appears as a single orb per eye socket.\n\nI moved over to sit beside Ixma, taking her hand gently into mine. \"Has her mother and her officer been informed?\"\n\nThe commander pulled up a tablet and was tapping on the screen. \"It's already being taken care of. I've also arranged for her commanding officer to meet with me tomorrow. I expect your pilot, and sergeant, will arrive at the hospital shortly after we do. There--\"\n\nThe tablet made a lower sounding beep.\n\n\"Ipi curse their foul hides!\" Orchid took a long breath. \"Well, it was a gamble. Three injured, but no fatalities at least. We tried to remove the device from your diagnostic computer, but it blew. I'm afraid the computer is a total loss. It is fortunate that the aircraft was not inside, as it might have been seriously damaged.\"\n\nHer tablet beeped again, and she tapped several times, then read a message. \"Ah, some good news at least. The Empress herself, has pled the case of the women here, and the Emperor has given his written support. Any woman who is pregnant, will be retested in two weeks time, and if she is not pregnant at that time, the erroneous test results will be expunged, with no break in service.\"\n\nI raised my eyebrows. \"Abortion is illegal in the Empire, Commander.\"\n\nShe nodded gravely. \"And as good citizens, we obey the law. It is unfortunate that the Seven Nations does not adhere to our ways, but they are not as enlightened as we are, are they? That such loyal citizens have endured such a malicious attack is unthinkable. It is in the interest of morale, and morality, that those most affected by the Drug Plot be given several days leave, to visit the various local attractions, to rest and relax, before returning to duty. And any who find the whole episode too much to bear, well, we will honor their request to exit military service, and emigrate, of course.\"\n\nSo those women who found themselves unable to abort their child, would get an honorable discharge, as long as they remained within the Seven Nations. Those who chose to abort would return to their positions, as if nothing had happened. The pregnancies weren't their fault, but considering the attitudes, it was a generous outcome.\n\nStill, I had to ask. \"Would it be within the Emperor's mercy to allow them a hardship leave of, say a year, before returning to active duty?\"\n\nThe commander narrowed her gaze. \"That idea has been aired before, and lacks sufficient support at this time. As the Emperor's humble servant, it is not my place to make, support, or oppose, such ideas, but to carry out the Emperor's wishes, enforce the law, and maintain the security of the Empire. Your liberal ideas do you credit, Sublieutenant, but they can be viewed as dangerous by others. Please exercise caution for your own sake.\"\n\nSo there was a faction working to change the harsh rules women endured in the military. That was indeed news to hear. Obviously, such an agenda would be opposed, by the same lunatics that had perpetrated the mad scheme to switch the birth control drugs, in the first place. The sheer cruelty of their plot deeply angered me, and given the chance, I'd gladly visit mayhem upon their person. If I was rubbing off on Janetta, maybe she was rubbing off on me.\n\n\"It seems that Lieutenant Tlacotli's phone service has been disrupted. Were you aware of that?\" I asked.\n\n\"No.\" She tapped several times on the tablet, then scrolled, then tapped a few more times. \"Shouldn't have happened. Fixed.\"\n\n\"I'd like some monitoring equipment for Janetta's hangar. Something to keep watch while they are away.\" I outlined the Harbinger cameras, and the type of setup I wanted installed.\n\nCommander Orchid nodded. \"I'll see to it. Hopefully today, but maybe not.\"\n\n\"On a different, but related matter,\" I continued, \"several people have asked me, as an officer, to Intercede on their behalf.\"\n\n\"Indeed?\" The commander looked up from her tablet computer. \"Go on.\"\n\n\"They are at the Cafeteria now, awaiting my return. I have promised to hear them out. I have also told them, if they were involved in the Drug Plot, as you call it, that I was not going to protect them.\"\n\n\"Very well, Sublieutenant Kandikan. They are at the Cafeteria now? I will make note of it.\" She looked out the windows. \"Good. We've arrived. This is where I take my leave. I will be in touch with you later. Sergeant, go with them, and see that the doctors have all the information they need, to treat the Corporal here, and I mean all the information. Go armed. You are to stay at her side until relieved.\"\n\n\"Yes, sir.\" He reached into a cabinet and pulled out a pistol and buckled it on.\n\nThe doors in the back opened up, and orderlies reached in. I got off the stretcher, and helped roll it out. A black ChoCac, with tinted windows, pulled up behind the ambulance, and I watched as the Commander got into the back seat. Then, I hurried after the stretcher carrying Ixma. The Imperial Security Medico talked as we moved, discussing the energy weapon Ixma had been hit with, her hysterical reaction, what treatments were recommended, and the sedative that she'd been given. The doctor asked more questions, then belted out instructions.\n\nAs we whipped around a corner, a middle-aged nurse suddenly wheeled about and blocked me. \"There!\" she barked, pointing to a chair. \"You can sit in that chair. Let us do our job and don't interfere. If you cause any problems, you'll end up in the lobby. Understand, Lieutenant--\" she glanced at my name tag -- \"Kandikan?\"\n\nI nodded and sat down. \"There's another one of my people here, too. Sergeant Cholan Yakalme. I need to find out about her, too.\"\n\n\"One emergency at a time,\" she said, then disappeared behind the curtain. A few minutes later, the nurse, and two others left.\n\nThen the curtain snapped open, and a second nurse began wheeling the stretcher one way, the medico in tow, while the doctor went off in another direction.\n\n\"Doctor! Wait! What's happening with Ixma?\"\n\n\"She's going upstairs for a nutrient bath to prevent scarring. She'll be moved into her room in a couple of hours. You can ask more then. I have other patients to see to.\" And he strode off.\n\nIxma was gone already. I wasn't going to do much where I was, so I made my way to Reception to await the arrival of Janetta and Zinja.\n\nWhen I stepped through the doors, I saw that both women were already there. Janetta was loudly arguing with a clerk, and a marine had started in her direction.\n\nZinja tapped Janetta on the shoulder, and ran to me. \"Lieutenant? Where's my girl? How is she? They won't say anything! Security said come here, and these navy gits are telling us she's not here.\"\n\nJanetta strode over, ready to bite someone's head off. \"Ranji? What's going on? Are they here, or aren't they?\"\n\n\"Yes, they're here. Ixma's upstairs being treated for energy burns. I haven't heard about Cholan yet. I got here just before you did.\"\n\n\"My girl's alive! What did you say? Energy burns? Is she going to be all right?\" Zinja searched my face for any reassurance.\n\n\"I've been told she's going to be fine. No, I don't know where she is. I'm told Cholan was hurt badly. I haven't spoken to anyone about her yet.\"\n\nJust like that, Zinja's arms were around me, squeezing the air out of my lungs. \"I want to see my girl!\"\n\n\"Zinja!\" Janetta looked at me, and tried to pry her arms off. \"Squeezing the stuffing out of Ranji is not a good idea.\"\n\nZinja realized what she was doing, and let me go. \"I'm sorry, sir.\"\n\nIt was nice to breathe again. \"That's some grip,\" I squeaked, then cleared my throat. \"Let's find out about both of them, shall we?\"\n\n\"I tried that, Ranji. I got no where,\" Janetta growled.\n\nStill, I tried anyway. I had as much success as Janetta. I knew Ixma was there, and had no reason to doubt Cholan was also being treated there. But it was if they didn't exist, and therefore we didn't either.\n\nThe three of us were preparing to head upstairs, and do a room-by-room sweep, when two Imperial Security sergeants approached us. Both wore sidearms, but were otherwise in summer dress. \"Sergeants Diwan and Melo,\" Diwan said. \"We are to stay with you until you return home.\"\n\nI explained our lack of information, and Diwan nodded. \"Let me go talk to them.\"\n\nWithin a few minutes, a doctor arrived and we were led to an examination room.\n\n\"I'm Dr. Brensoyet,\" he said, obviously disgruntled about being there. He was a captain, about ten years older than Janetta and myself. He explained that Ixma was fine, that her treatment had gone as expected, and that she was sleeping. Cholan was still in serious condition, and still in surgery. \"Did you know she was taking a lot of Stim tabs? We estimate eight per day, based on her blood work-up.\"\n\nJanetta started to say no, but I nodded. \"She told me this morning,\" I said.\n\n\"Between the weight and the Stim tabs, there's been some minor damage to the heart muscle. She had a stroke when she was under anesthesia. She's severely overweight and has a drug problem. If she doesn't show progress in the next six months, we are recommending discharge from the Service.\"",
        "\"Before you go making snap judgments,\" I said quietly, \"you need to do a full work up on her. Full physical. As one of her officers, I insist on it.\"\n\n\"You're her commanding officer?\" the doctor asked me.\n\n\"No,\" Janetta replied, \"He's not. I am. Sergeant Cholan is the E--man on my Flight Crew. She's his woman. I'm her officer. I'm asking for a full physical, Doctor.\"\n\nThen I blinked. \"While you're here, you should get checked out, too, Lieutenant. You hit the ground hard this morning. Your Captain's orders.\"\n\nJanetta rolled her eyes. \"Thanks for the reminder, Kandikan. So, yeah, I guess I need to get checked out, too.\"\n\nDr. Brensoyet went over to the computer, and began typing rapidly.\n\nJanetta whispered in Nahuatl, \"Stim tabs, Ranji? What the fuck!\"\n\n\"She's tired all the time. It's a struggle for her to do her job. I think she's got a bad thyroid. But most doctors are a hardheaded lot and won't see, or admit to the obvious, unless it's their discovery, or it jumps up and down, and kicks them in the shins. If I tell them what I think it is, they'll say I'm not a doctor, and quit looking.\"\n\n\"She's really sick?\"\n\n\"It's not her fault, I'm sure of it. This should have been found, and treated, when she first entered the Air Service.\"\n\nThe captain suddenly quit typing, then cleared his throat. \"Well, I'll be,\" he said quietly. He spun around in his seat. \"Apparently she has a thyroid condition. It was marked as treated, but there's no accompanying certificate, or physician's report. We'll follow up here, of course. And, just to be thorough, we'll also continue with the full physical. We're hardheaded that way, here in the Naval Service. We like to be thorough.\"\n\nTo her credit, Janetta dead-panned, \"Thank you, Doctor. It's appreciated.\"\n\nNahuatl wasn't a commonly spoken language outside the states of Nahua and Huestica. I learned it because of Janetta. Just our luck that the doctor spoke it as well.\n\nSergeant Melo spoke up. \"Dr. Brensoyet, you said the medical file notes treatment, but no accompanying information. Indicating possible falsification of medical records.\" He pulled out a tablet from his side pocket. Glancing at the terminal number on the monitor, he tapped on his tablet. \"Sending inquiry now. Please write your comments along with a copy of the file. Imperial Security likes to be thorough, too.\"\n\nThe doctor nodded and typed for several minutes. When he stopped, the sergeant paused, then said, \"Thank you.\"\n\n\"Lieutenant Tlacotli, lean forward,\" the doctor told Janetta.\n\nPuzzled, she complied.\n\nPulling out a penlight, he shined it in her eyes, flicking the light away. \"Did you really hit the ground hard? Because you don't act like someone in pain.\"\n\n\"I'm not. I landed my craft down in one piece. It was sabotaged. I walked away fine, but my aircraft is out of commission. This whole thing may be moot. But my orders were to get checked out, so do what you gotta do.\"\n\nDr. Brensoyet pulled out a pad, and made a scribble, then tore it off, and handed it to Janetta.\n\nShe was out of her seat in a heartbeat, knocking over her chair, and snarling. \"Grounded? What kind of fucking shit is this, Doctor?\"\n\nHe was already writing on another sheet, as he consulted the computer screen. He tore that sheet off and handed it to her.\n\n\"What's this?\" Janetta demanded.\n\n\"Be here on that date and time for a full, comprehensive physical. Should take about three days for all the tests. Until you get a clean bill of health, you are grounded.\" Dr. Brensoyet checked another screen. \"I see a Zinja Ba'lanchicotl listed as the Corporal's mother. Sergeant Zinja, is that you?\"\n\n\"Yes, sir,\" she said quietly.\n\n\"Very good. We'll go upstairs now. First, I'll let you look in on the surgery going on with Sergeant Cholan, then we'll visit Corporal Ixma, although I expect her to be fully sedated. As blood relative or spouse, the sergeant qualifies for the former and can stay here overnight, but after the visit -- a brief one, mind you -- I'm kicking you two officers out. You can come back later during visiting hours.\"\n\nThe doctor led the way, while Janetta and I followed. Janetta was quiet, but I could see she was fuming, too.\n\nZinja latched on to my hand for consolation, but she was gentle with it. The doctor said Ixma was fine, but until she saw it with her own eyes, she didn't believe it.\n\nOutside the operating theater, we couldn't see much. The doctor began discussing the treatment, stating that Cholan would need weeks to heal, and months of therapy and drugs.\n\nI shook my head. \"What about Nano-treatments? They will cut the healing down to a tenth of the time, and it will repair all the internal damage.\"\n\n\"She's enlisted. She has no extra funds and her records don't show family resources to cover the costs. The process I outlined will return her to health and functionality sufficient to satisfy her duty requirements. This is what the military will pay for.\"\n\n\"How much for the Nano?\"\n\n\"It's a rough estimate, but three thousand credits initially, then once a week for twelve months, at a thousand per month.\"\n\nJanetta was shocked. \"Fifteen? Fifteen thousand credits? That's a four bedroom house, with a vehicle, free and clear!\"\n\nI shook my head firmly. \"No, it's Cholan, back with us like she is supposed to be, helping to keep your aircraft safe and functioning. Pain for a year while her ribs heal? Taking drugs for the rest of her life, to stave off another stroke? She's twenty-three, just two years older than we are. Who's your family, Lieutenant?\"\n\n\"You, Zinja, Ixma, and Cholan.\" By the look on her face, I knew she could tell where this was going.\n\n\"Exactly! And you are my family, so that makes them mine, too. Family sticks together. Doesn't matter if it's you, Zinja, Ixma, or Cholan. I take care of my family.\" I turned to the doctor. \"Get the forms for me to sign, and order the treatments. I'm paying.\"\n\n\"You have proof you can pay?\"\n\nI pulled out my charge card. Seeing the silver sheen, he nodded. I didn't blame him for asking. Authorizing a service, when the funds weren't available, could leave him hanging for some of the costs, not to mention the potential damage it would have to his medical career.\n\nOkay,\" Dr. Brensoyet replied quietly. \"Wait here. Your decision may affect what they are doing to her right now.\" And he stepped inside the operating room.\n\nWhile the doctor was away, Janetta leaned in close, whispering, \"I love you, Ranji Kandikan.\" I took her hand and kissed it. Zinja still had my other one.\n\nDr. Brensoyet rejoined us, and Janetta discreetly retrieved her hand. \"I'll start the process tonight,\" the doctor told us. \"Lieutenant Kandikan, on your way out, give your card information to Reception, and sign the payment authorization forms. Once that's done, treatment will begin. Now, let's go check on the other member of your family, shall we?\"\n\nWhen we arrived at Ixma's room, she was sound asleep, in hospital garb, her face and neck, hands and arms, a bright pink. Zinja hurried to her side, tears of relief spilling freely. Between soft kisses, caresses, and telling Ixma she loved her, without words, Janetta and I settled on a brief hug to Zinja, and a touch to the sleeping woman.\n\nStanding nearby was another member of Imperial Security. The three agents conferred quietly while we visited.\n\n\"How long will she be here?\" I asked Dr. Brensoyet.\n\nHe shrugged. \"Depends on Imperial Security, really. Physically, she can go home tomorrow. If she has nightmares or such, well, psych services can be arranged. When we know, we'll let Lieutenant Tlacotli know. If you and Imperial Security are satisfied, I really need to attend to my own patients.\"\n\n\"Fine,\" I told him. The agents nodded their satisfaction, and the doctor walked off.\n\nMelo came over to me, followed by Diwan. \"Lieutenant? Whenever you are ready, I will accompany you. Diwan, here, is assigned to stay with Lieutenant Tlacotli.\"\n\nJanetta raised her eyebrows. \"I need a babysitter?\"\n\nSergeant Diwan frowned. \"Our orders, sir. There's already been an attempt on the lives of two of your crew. Go about your normal business. I am your shadow, not your nursemaid, nor your babysitter.\"\n\nJanetta closed her eyes briefly. \"Let's go downstairs, Ranji. I want to get that damned paperwork done.\" Then she narrowed her eyes. \"Ranji, we were picked up and dropped off here. Did you drive my HueCac here?\"\n\n\"No, I rode in the ambulance with Ixma.\"\n\n\"And your vehicle is ...?\"\n\nI sighed. \"Who knows? Last I saw it needs major repair. The door and side panels are warped, and the driver's window blown out. May or may not be totaled.\"\n\n\"It's a rad to the gate, and another five to the hangar. And I'm getting hungry.\"\n\nI laughed. \"There's twelve meals waiting for us at the Commissary Diner. Let's go there. It's not as far, and we can pick up your vehicle, and drive to the hangar from there. After we eat, I need to go back to the Cafeteria, and finish sorting out all the people seeking my protection. When you are done, and on your way home, give me a call. Otherwise, I will worry about you.\"\n\n\"My phone isn't working. Remember?\"\n\n\"Check it,\" I replied.\n\nShe did, and then put it away. \"I still hate that skanky bitch,\" she muttered.\n\nDownstairs, I gave my financial and contact info to Reception. Janetta made sure that she would be called when Cholan came out of surgery, and informed of her nightly progress.\n\nSergeant Melo surprised us, by having a vehicle pick us up, and take us to the Commissary.\n\nAs we rode, I reached into the satchel, and pulled out the Wampag, and one of the boxes of ammunition. I refilled the pistol clip, and handed it to Janetta.\n\n\"Take it. The flechettes are effective against the draconian body shields. Or so we hope. Two of them injured Cholan, and Ixma. One is still on the loose.\"\n\nShe put the pistol into her belt. \"No weapon for you?\"\n\n\"I still have my Chon. Besides, I'm going to be in public at the Cafeteria.\"\n\nThe Commissary had some vehicles parked out front, but there was no sign of my battered ChoCac.\n\nJanetta and I went inside, and ate a hot meal together, which was quiet, and nice. Both of us would have preferred having her flight crew with us, but at least everyone was alive, and going to get better. We picked up the food Janetta had ordered that morning -- it seemed a lifetime ago -- and we headed over to the Cafeteria.\n\nOutside the Cafeteria, we found Janetta's vehicle. We loaded the food into the back. She'd leave some of it at the hangar, in the new fridge, and take the rest home, for us to eat later.\n\nBefore I let her go, I drew her in for a long kiss. She was still a bit nervous about public displays, but quickly gave herself over to the task. As she looked up at me, her big black eyes full of interest, she grinned. \"Ranji, I think you are happy to see me. No, wait, that's a gun in my belt.\"\n\n\"Wait till I get home tonight, Lieutenant,\" I promised. \"Someone expressed a desire to be hauled into the bedroom and pounded until she saw stars.\"\n\n\"Mmm. Can't wait,\" she sighed. Then she climbed into her vehicle. Sergeant Diwan slid into the passenger seat. Janetta backed out of the parking space. \"Which one are you again?\" she asked the sergeant.\n\n\"Diwan, sir.\" By the time he got those words yelled out, she hit the accelerator mid-turn, and zoomed away, burning rubber. At least one tire left the pavement. She does love to speed.\n\nI headed inside, Sergeant Melo behind me. Returning with a member of Imperial Security in tow was likely to cause nervousness, if not outright panic. Worrying about it wasn't going to make it go away, though. I'd deal with it as needed. With a deep breath, I opened the door and entered the Cafeteria.\n\nOnce inside, I noticed the group was considerably smaller. Sergeant Doyya was the only woman among the men waiting for my return. I went to her first. \"Where are the other women?\"\n\nShe saluted. \"Lieutenant. The rest of the women have gone home. Commander Orchid took us away, and talked to us, explained our options. I'm signed up to go next week into Capisco.\"\n\n\"Are you coming back?\"\n\nShe nodded. \"I've got eight years in. I have no clue who the father is, nor do I care. When I'm ready to leave, I'll have a pension, a guild certification, and money to live on, so I can provide for my kids, when I'm ready to have them.\"\n\n\"How did the rescue mission go?\"\n\nDoyya looked sad. \"With Chita's help, we found their quarters. We broke in and found them right away. They were in the tub together, bleeding out. The senior lieutenant, she was alive when we got there. We explained that you sent us to help them, to help stop them from killing themselves. She saw her sister was dead and asked us to let her die in peace. They did everything together, she told us, and she couldn't bear to let her twin die alone. It was plain as day she loved her. Despite your orders, we couldn't go against her wishes, Lieutenant. After they were both dead, we took them out, and dried them off. Put them into their dress uniforms, before we called Security. It didn't seem right that dead women officers should be taken to the morgue naked, without any dignity. Sergeant Chita told us they were stand-up lawyers. You put me in charge, sir, so I take full responsibility for disobeying your direct orders.\"\n\nI sighed. \"Sergeant, I don't appreciate having my orders disobeyed. However, you were there, so I will accept your assessment of a Warrior's last wishes. And if you get any grief for your actions, tell them to come see me. You and the others acted honorably. Air Service, Sergeant!\"\n\nDoyya snapped to attention, giving me a perfect salute. \"Air Service, sir!\"\n\n\"You waited here to give me your news. I appreciate that, Sergeant. Respect, loyalty, diligence. Fine work.\"\n\nRelaxing a bit, she looked at me. \"Lieutenant, we're all grateful for the Emperor's leniency. It was .. unexpected. What about you? You went to check on your family? Are they safe?\"\n\n\"They were both hurt, but thankfully they are alive. Hopefully, one will be out tomorrow. The other was still in surgery when I left. That's what took me so long to get back.\"\n\nThe sergeant shook her head. \"That's a shame, sir. You should be there with them, sir. If you think you might need help to speed things up, I'm volunteering.\"\n\nI looked at Doyya. She had strong features that on a man would be considered masculine, but they were softened by feminine curves, and a narrower bone structure. Her hair was cut short, but the edges were feathered, and helped transition her from handsome to pretty. She was five or six inches shorter than me, and leanly built like Zinja. She could just be offering to help, because she was that way.\n\nShe must have seen the hesitation in my face. \"Private Sosha told us you already have a couple of women, and that you refused her offer. I'm not looking for protection, or a lover, sir. You stood up for us today. If I can help you get back to your family in the hospital, it's the least I can do.\"\n\n\"Okay, Sergeant. This is Sergeant Melo, who obviously works with Imperial Security. Let's get to work.\"\n\nShortly after I resumed talking with the men, Doyya brought me a large cup of cahault, and a hot sandwich. I'd eaten recently, but she didn't know that. And a few hours later, it went down just fine. Doyya sat nearby, and whenever my cup emptied, she got me another one. Most of the men were just looking for some kind of assurance. Apparently I had been the only officer from our entire floor to show up this morning.\n\nIt was nearly three hours later, and there were only six men left. These were full-blown confessions of theft, and necessarily took much longer to process. I was wrapping up with the current man, with two yet to go, when I noticed four Imperial Security, in summer dress, walking directly toward me. The leader was a lieutenant, accompanied by a sergeant carrying a laptop. Both wore pistols. With them were two privates, armed with Tlokan heavy assault rifles and short swords.\n\nThe officer stopped next to me, the others waiting behind him. \"Sergeant Melo. Sublieutenant Kandikan? I'm here to finish taking confessions from the men seeking your Intercession. Your presence is needed elsewhere.\"\n\nI stood up. \"That's the point, though, isn't it, sir? Am I being ordered elsewhere?\"\n\n\"The fact that you are taking confessions is on record. Everything these men tell me will be as if you heard them. My statement to that fact is part of that man's record. You are not being ordered to leave, but I was told you would want to be with Lieutenant Tlacotli--\"\n\nNo!\n\n\"Janetta? What's happened to her!\" I grabbed his arm, and nearly gave him a hard shake, to get the information out of him faster.\n\n\"Sublieutenant, please remove your hand. Tlacotli is injured, but refuses to be treated, insisting that she has paperwork to finish. Her commanding officer is off base with his wife, and not immediately available. It was felt that you would be able to convince her to see reason. Please secure your laptop.\"\n\nI released him. \"I am sorry, Lieutenant, for disrespecting your rank.\"\n\n\"We understand she is your lover. The heat of emotion. No harm done. Sergeant Melo, please escort Sublieutenant Kandikan to Hangar Thirty-Six.\"\n\nDoyya asked me, \"What should I do, sir?\"\n\n\"Go home. Get some rest. I'll see you at the office tomorrow morning.\" I hurriedly saved the current session and closed files on the laptop. When it was powered down, I put it into my satchel, and followed Sergeant Melo out to his vehicle.\n\nInside his ChoCac, he asked the AI to display a map, and show our progress. I was anxious to get to Janetta. I had to keep reminding myself that I was told she was alive. The sergeant, thankfully, left me alone to my thoughts.\n\nAt the hangar, there were a dozen vehicles, and at least half were security cruisers, with flashing lights on top. Dozens of Imperial Security were present, keeping the flight crews from nearby hangars, from getting too close. Sergeant Melo parked off the road, and we got out. \"Follow me, Lieutenant. I'll get you through.\"\n\nFour Guardsmen in power armor stood at the hangar entrance. Inside was a body covered by a blanket, and I panicked, until I saw Janetta sitting inside the office, hunched over, writing at her desk. On the ground near her office, was a large wet area. Standing in the bay, talking, were three Imperial Security. They turned around when I stepped into the bay with Sergeant Melo. One of them was Commander Orchid.\n\nI started to hurry past them to Janetta, but Orchid, and the others, cut me off. \"Kandikan! Wait.\"\n\n\"She's hurt. I need to see her!\"\n\n\"Get her to see a doctor, Lieutenant,\" Orchid said, glancing at the office. \"We have an ambulance waiting to take you both there.\"\n\nI looked at Janetta, focused on her paperwork. I caught a glimpse of a bruise forming on her right cheek. I nodded toward the body on the ground. \"Is that who hurt her?\"\n\nOrchid shook her head. \"No,\" she said quietly. \"That's Sergeant Diwan.\" She looked past me to Sergeant Melo. \"Sergeant, we waited until you got here. He was your partner. I thought you should go with him to the morgue.\"\n\nLooking stunned, Melo walked over, as a stretcher was brought in, and the dead sergeant was moved onto it. He had seemed a decent man, but I was so glad it wasn't Janetta they were carrying out.\n\n\"Can I go see Janetta now?\"\n\n\"A moment. Everything that happened tonight is on lock-down. He hurt her bad, and still she killed the draconian, Kandikan. And he didn't disintegrate. We have his tech. This is huge. I'm going to do my best to shelter you both. And I'll do my best to debrief you sometime tomorrow. Even if it doesn't happen then, I will get in touch with you later. That's all for now.\"\n\nA thought occurred to me. \"Commander. She doesn't like you. Not one bit. It would help if she didn't know you were here.\"",
        "She gave a sharp nod and walked briskly out of the hangar.\n\nI watched Janetta, as I walked toward her. Slowly, calmly. Janetta was a trained warrior, but I knew she was wounded. I didn't know how bad. She had good hearing, and I expected her to turn and see me. She had incredible reflexes, and she could be deadly. I remembered the nauyaca viper, on Chingli Point. It had dropped silently down from the branch next to me. Her casual snap, sending her knife whizzing by my head, had saved my life.\n\nAs I reached the doorway, she put down her pen. I took in the bloody claw marks down her back, the patches of blood soaking through, at the neck of her jumpsuit. 'Oh, gods,' I thought.\n\nI managed to get the first syllable of her name out, and she had the Wampag Talon pointed at me, her hand shaking. She stared blankly for several seconds, then seemed to recognize me.\n\n\"Ranji? Ranji?\" Janetta stood up and immediately cried out in pain, falling back into the chair.\n\nI gently took the pistol from her hands, flipped on the safety, and stuffed it into my pocket. \"I'm here, baby. Where does it hurt?\"\n\n\"Everywhere!\" She wrapped her arms around me, trying to pull herself up. I helped her. Leaning against me, she squeezed me tight, and began to sob. I saw the other half of her face, and it was a mess. Her left eye was almost closed, and there was bruising from her cheek to her neck.\n\nSeeing such a strong woman letting loose that way was deeply disturbing. That it was Janetta, was a dull knife twisting in my heart. \"Come on,\" I told her quietly. \"There's an ambulance waiting. Let's go see a doctor.\"\n\nJanetta stiffened, mastering herself. \"No, Ranji, not like this. Take--take me to the shower. I need to get clean.\"\n\nThe look in her eyes, pleading to me, was all it took. \"Okay, Janetta. Lean on me. I'm here for you.\"\n\nSlowly we made our way to the open shower. Holding on to me, I helped her take off her boots.\n\nJanetta loves those things. She spent over three hundred credits for them. Almost knee-high, they are steel-toed, thick leather, high-end, regulation combat boots. Water-proofed, they have an added seam that ends at the ankle. Two heavy, adjustable brass clamps that lock into place, creating a snug fit on her legs. Open them up, and they slide easily right off the heel. Drop your feet in, close the clamps, and they are on your feet, good and tight. And right then, I was so glad they weren't the cheaper, lace and snap kind, that I would have had to cut away.\n\nShe whimpered the whole time I took off her left boot. Her foot was horribly discolored.\n\n\"That looks broken, Janetta.\"\n\n\"Yeah.\"\n\nOnce free of the boot, Janetta kept it from touching the ground. Unsnapping the cuffs, I then unzipped her jumpsuit, taking in the tears in the lower half, that revealed her crotch. Using me to remain steady, she closed her eyes, taking slow, ragged breaths. The torn bra fell away. I pushed the jumpsuit off her arms, then down her body. The light, tough material slid down, pooling at her feet.\n\nA massive bruise along her left rib cage. Bruising on the left side of her neck, a bite mark at the base of the other. Not made by human teeth. Difficult to see the bruising because of the large tattoos, but there were scratches on her breasts. Long claw marks on her back. Her broken foot. Multiple bruising on her inner thighs. Semen dripping from her battered sex.\n\nThere are few things more horrible than seeing a loved one in pain. You wish and pray for the power to take it all away. That's the measure of love, isn't it? That you love someone so much, that when they are in pain, it makes you want to weep with rage, and hurt whoever caused it. My brave warrior had killed her attacker, but she had suffered for it.\n\n\"I love you, Janetta.\" Taking her arm, I helped her to the shower, and turned on the water. She leaned into me again, as the warm water cascaded over the both of us.\n\nFor several minutes we stood there, holding each other. Then she took a deep breath. \"Ranji, you're still dressed.\"\n\n\"Yes, I am,\" I agreed. \"And I don't care. I'm here as long as you need me.\"\n\n\"Get me some soap. There's some in my locker.\"\n\n\"What about you?\"\n\n\"As long as you don't take too long .. I'll be all right. Having you here means so much. Just being here, you are helping me get my bearings.\"\n\nI retrieved her soap from her locker, and hurried back to her. With a sigh, she leaned back in to me. I lathered up, and began working her back, and the bite on her neck, generously soaping the gouges, letting the suds, and blood, run freely. Janetta hissed while I worked.\n\nI loosened her hair clasp, stuffing it into my shirt pocket. Pouring a generous helping into her scalp, I worked her hair, taking my time to wash it thoroughly, and then to rinse it. Janetta held on, and I felt her tension ease. When I was done, she looked up into my face. \"You take such good care of me. I love you, Ranji Kandikan. Give me the soap. I need to do this myself.\"\n\nI handed it to her, and bracing herself, she lathered between her legs. Whimpering, she rubbed fiercely. I let her go on for a while, but finally I reached for the soap, gripping her wrist. \"It's done, Janetta. It's time to go see the doctors.\"\n\n\"It's. Not. Clean yet.\" Refusing to look at me.\n\nI turned off the water. \"You are the fighter pilot. What's my job?\"\n\n\"Take care of me .. and my crew.\" She looked at me then.\n\n\"There's not a thing that anyone else can ever do to you, that will take away your perfect warrior's heart, or mar your beauty, Janetta. Let me take care of you.\"\n\nI picked her up and carried her into the office, sitting her on the desk.\n\n\"The reports, Ranji. They'll get wet.\"\n\nI moved them away. \"Rest your feet on the chair. I'll get some towels, and a new jumpsuit for you.\"\n\nAfter I got her dried off, I emptied the first aid kit, and applied the remaining Nu-Skin patches onto her back. Then I helped her into a fresh jumpsuit, from her locker. Her foot was visibly swollen. Janetta, though, was calmer, content to watch me, as I tended to her. I collected her boots and brought them to the office. The ruined jumpsuit went into the trash bin. Grabbing the stack of papers from her desk, I headed out of the office.\n\n\"Hey! Where are you going with those?\" she demanded.\n\n\"We are going to the hospital. You are under orders to have them ready, by end of shift tomorrow morning. I'm getting them delivered for you.\"\n\nShe blinked. \"Oh. Okay.\"\n\nI approached the Imperial Security officer waiting by the bay doors, a senior lieutenant. Most of the vehicles and soldiers were gone. Two ChoCacs remained, a four-door passenger vehicle, and the ambulance. Two armed troopers stood guard nearby, with the officer.\n\n\"Thank you for waiting,\" I told the security officer. \"She's almost ready. I need two favors. This stack of papers need to go to the Second in Command, of the 233rd, at the end of shift, tomorrow morning. The second favor is that someone follow us, in her HueCac, to the hospital. When she is discharged, I'd rather she not have to walk. Is that acceptable?\"\n\nHe took the papers, glancing through them. \"I'll see they are delivered. And I'll have someone follow you to the hospital. It's impressive that she killed him. Draconians are stronger than humans are. Getting his cloaking and camouflage generators, that's the coup of the century.\"\n\n\"I'm not surprised at all. Lieutenant Tlacotli is a Jaguar Warrior, and an Eagle Warrior. Today she's had two people she cared for hospitalized, survived a nearly fatal sabotage of her aircraft, and tonight she was raped, and badly hurt, but she killed him in single combat. Her superior officer ordered her to have those papers done. Rather than be treated for her injuries, she worked until her orders were completed. That warrior has a heart that won't quit. Many have tried to take her down, but she is still standing.\"\n\n\"Duly noted, Sublieutenant. Duly noted.\"\n\nBack in the office, I gave Janetta her boots to carry. A kiss, and then I carried her out to the ambulance.\n\nAs we headed to the hospital, I pulled out her brush and began doing her hair. Janetta sighed and closed her eyes. By the time we arrived, I had her hair brushed and contained once again within her jaguar hair clasp.\n\n* * * * *\n\nFor the next three hours, I waited while the doctors examined Janetta. The foot was broken all right. Three cracked ribs. Several shots to prevent infection from the bite, and claw marks. They were going to wrap the ribs, and send her home with basic pain relievers. Before I could get into their face, the medical staff looked at the computer screen briefly, suddenly changed gears, and prepared to wheel her off for the nano-treatment.\n\nI hurried to speak to her before they forced me away. \"Janetta, they aren't going to let me stay with you. I'll be here waiting, until you return.\"\n\nThe sedatives were kicking in already. \"Go check on Cholan, and Ixma, Ranji. See how they are. When I wake, I want .. I want you to tell me.\"\n\nSo I wandered down to Reception. I was prepared to fight, and if necessary, hurt someone to get any information, but there was no need. Once I got through the line, I asked about them, and once I showed proof of identity, I was given Cholan's medical status and her room number. The same for Ixma as well.\n\nIxma was considered well enough to be discharged in the morning.\n\nCholan's surgeries and the nano-treatment had gone well. Her face and chest were in plaster casts, to immobilize the injured bones while she healed. She had been heavily sedated, since arriving at the hospital. It was after visiting hours, but I didn't care. I was surprised to find an Imperial Guard inside her room, though. Once I was identified, my presence wasn't challenged.\n\nAt her bed, I kissed the top of her head and touched her hair. \"Get better fast, Cholan. We need you.\"\n\nUp two floors and on to another wing to see Ixma and Zinja. They, too, had a guard, but he stood outside. Once I passed inspection I quietly slipped inside.\n\nI found them spooned together on the bed, Zinja's arms protectively around her daughter. They were all right, and seeing them like that brought a smile to my face.\n\nTurning to go, Zinja sat up and whispered to me. \"Lieutenant? I thought you went home for the night.\" She looked at her watch, frowning. \"Has something happened?\"\n\nI stepped closer to their bed. \"One of the bastards that hurt Cholan, and Ixma, attacked Janetta at the hangar. She's alive, but she's hurt pretty badly. I'll come by about seven, and take you to see her. Then I have to head to work.\"\n\n\"Did she kill him?\"\n\n\"I don't know the particulars, but I'm assured he's quite dead.\"\n\n\"Was she ..?\"\n\n\"Yeah.\"\n\nZinja swore quietly. Then she shook her head. \"One of the gods of chaos sure has a thing for her, Lieutenant. If I could figure out which one, I'd give up a year's wages to buy favor for her.\"\n\n\"Her attacker was draconian.\"\n\n\"Gods above!\" Then she grinned. \"Our Lieutenant, she's a tough one!\"\n\nIxma mumbled in her sleep.\n\nZinja caressed her daughter's hair gently. \"She was having a rough time sleeping. They gave her something to knock her out. Should be awake by morning, I would think.\"\n\nShifting, Ixma half rolled onto her stomach, then her hips began to grind into the bed. \"Mmm, Ranji,\" she murmured.\n\nI looked at Zinja, who burst out laughing. \"Isn't that a kick in the pants! Hears your voice, and it sets her off. No doubt but what she's dreaming about, now!\"\n\nMy cheeks felt hot. I had no problem riding Ixma in front of her mother, her commanding officer, and her crew mate. But watching while she had an erotic dream, somehow seemed too personal, too intrusive into her private thoughts. Even if it involved me.\n\n\"Oh, don't be like that, Lieutenant,\" Zinja told me, as if she had heard my thoughts spoken aloud. \"The girl's got it bad for you. And I'd rather her have a wet dream, than wrestle with night monsters. Besides, there's nothing wrong with a woman craving the touch of a good man.\"\n\n\"You think I'm a good man?\"\n\n\"Lieutenant, don't you worry about that. You are doing fine.\" Then she gave me a wicked grin. \"You do real fine.\"\n\nIxma ground her hips into the mattress, sighing.\n\n\"You're not going to help her get off?\"\n\n\"Good night, Zinja. I'll see you in the morning.\"\n\n\"Good night, Lieutenant.\"\n\nI went to the room assigned to Janetta. Again, there was a guard on duty.\n\nJanetta hated Orchid. And Orchid was brusk -- harsh even -- and coldly efficient. But I kept seeing evidence, that despite appearances, Orchid showed that our lives mattered to her. Two men died because she had assigned them to keep watch on me, Janetta, and her crew. The thoroughness of her examinations, and the mercy shown to Sowitwee. The unprecedented plea for all the service women, including soliciting the support of the Empress herself, to render justice. Nearly seventy-two hours since I'd met her, and I would not be surprised to learn she had not slept a wink. I'd had a few hours each night, and I felt beat.\n\nThe words she said when I first learned Melannee's alternate identity, came back to me. \"Don't believe everything you hear about me.\" A simple request to give her the benefit of the doubt, to not judge her by appearances. And her request that I be her friend, just before she donned the role of Orchid. How hungry would I be for a friend to trust, if I lived a life full of lies? The transformation showed it was a role she played, like an actress in an entertainment vid, but a role that demanded attention to detail, or face death.\n\nI knew nothing of Melannee's background, but the bare tale of her birth. How could one talk of the rape of their own mother, and the bastard child that resulted, with such jaded contempt? There was no doubt that Ixma had been blessed by the love of her mother. Had Melannee been reminded of, or even punished, for the rape that caused her birth? I could speculate to no useful end. I hoped that one day I'd hear Melannee's tale in fuller measure, and until then, I realized I was prepared to give her the friendship she had begged of me.\n\nSetting my alarm, I settled into a chair. \"Private? If they come in and I don't rouse, will you please wake me?\"\n\nRemaining at attention, the guard nodded. \"Yes, sir.\"\n\n* * * * *\n\nThe guard had to shake me, I was that far gone. Two orderlies wheeled Janetta into the room, with a nurse overseeing the process. They moved her to the bed.\n\nI pulled myself to my feet.\n\nJanetta herself was out cold. Drugs, pain, stress, and lack of sleep, can wear you out, that's for sure. I noticed Nu-Skin patches all over the massive bruises on her neck, and ribs, and a fresh plaster cast on her foot.\n\n\"Where are her boots?\" I asked.\n\n\"Personal items are stored until checkout,\" the nurse responded. \"Or until requested, and approved, by the primary physician.\"\n\n\"As long as you don't lose them,\" I warned her. \"If you do, I won't speak for the safety of the one who lost them.\"\n\n\"Yeah, she's real tough right now,\" the nurse nodded, dismissing my warning. She looked at me speculatively. \"Are you going to try and climb into bed to be with her?\"\n\n\"If I can,\" I admitted.\n\nThe nurse scowled, but instructed the orderlies to move her back off, and widen the bed. It was barely wider than a single, but with the rail on one side, we could squeeze in. Finishing the chart notes, she informed me that if I removed the IV on Janetta's hand, or tried any sexual shenanigans, I'd be banned from further overnights.\n\n\"Yes, Ma'am,\" I replied, removing my shoes. Once they moved her back onto the bed again, I slid in next to her. And without waking, Janetta sighed and curled into me.\n\n\"Okay,\" the nurse grudgingly admitted. \"She seems to like you, so you can stay.\" Then she destroyed any bluster, by laying a blanket over us.\n\nA kiss to the forehead of my warrior, and I was out.\n\n# # # "
    ],
    "authorname": "TJSkywind",
    "tags": [
        "early earth",
        "prehistory",
        "consensual",
        "native",
        "alt history",
        "military",
        "poly",
        "aliens"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-10"
}