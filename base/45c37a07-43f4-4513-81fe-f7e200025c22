{
    "title": "Relentless",
    "pages": [
        "Special thanks to sbrooks103X, Bebop03 and Chasten for the beta reads and edits The story is much more readable -- and much better -- for their input. And I have to thank The Missus for being...well, everything.\n\nThis is a story we hadn't planned on writing. Hopefully you'll find this a distraction from all the lunacy around us these days. \n\nRelentless\n\n\"...if you're not the careful sort, don't play with sharp blades.\" - jocko_smith\n\n*****\n\nFluorescent lights flickered, somehow making the stained off-white walls and institutional gray tile floor even duller as the officer led me down the hall from the main jail.\n\nShe was saying something, but I really wasn't listening. I knew the gist of it anyway.\n\nThe processing clerk handed me my personal packet and I checked it. Purse, keys, pen, cellphone. He gave me a suppressed smirk, then looked at the officer. \"I should probably just keep all of it; it'd make processing her back in faster.\"\n\nI signed for everything wordlessly and waited for the officer to escort me out. She nodded and the clerk buzzed open the bulletproof glass doors.\n\nSunlight from the setting sun warmed my face, but it didn't really have the same feel anymore.\n\nI didn't even have to look around. The bike messenger was standing right at the bottom of the stairs, laconically unstrapping a long cardboard box from the back of the bike. I headed down to him.\n\nThe officer shook her head. \"Fuck.\"\n\nThe bike messenger gave me a raised eyebrow and a wry grin then opened the box. I looked in and pulled out the envelope first and looked in it. No note, like always. Just a thousand dollars in cash. That wasn't a surprise. Not anymore.\n\nThe other item was a work of art.\n\nI pulled it out and hefted it. \n\nA C271 Cherry Bomb. \n\nIt practically glowed with an absolutely beautiful high-gloss black-and-cherry finish, touched off by gold decals. \n\nSomebody had taken the time to put a very professionally done black Lizard Skin tape grip on it.\n\nThe tape grip went up the near-perfect maple a bit farther than I would have if I had done it myself, and I'd always used P72s when I played as a teenager, but...\n\nI hefted the Louisville Slugger and let it spin around my hand. It was fucking perfect. \n\nAnd here I'd always thought the phrase \"my heart sang\" was too melodramatic.\n\nMy heart was definitely singing.\n\nThe officer looked at the baseball bat in disbelief, then shook her head again. \"Goddammit.\"\n\nThe bike messenger gave me a broad grin. \"I'll take the box. We wouldn't want you to get picked up for littering before the fun starts.\"\n\nThe officer watched him ride off, then turned to me and looked at the bat again. \"Who the fuck would do this?\"\n\nI stared straight at him. \"Someone who understands.\"\n\nMy phone buzzed and I looked at it. A single text message from a blocked number. \n\nIt just gave the name of a nightclub and a time. 9 p.m. Just enough time to do my makeup and hair.\n\nI grinned and hefted my beautiful, beautiful bat.\n\nRun, Motherfucker. Run.\n\n*****\n\nSeven Days Earlier\n\nI shifted on my aching feet, just dodging the \"accidental arm brush\" from the creepy old guy. It wasn't like I hadn't seen that coming a mile away.\n\nThe flicker of disappointment at missing the boob-graze flickered on his face and I gave him my fixed plastic smile. \"Thank you flying Air Expanse.\"\n\nMy legs, feet, and back were really looking forward to a hot shower, a long night in bed and maybe I could prevail on Justin to give me a real, no-hidden-agendas backrub.\n\nExcept that Justin wasn't there to meet me like he was supposed to. A frustrated call to his phone got me his voice mail. \n\nI waited at least twenty minutes for him to call back before I headed to the cab stand. \n\nOkay, fifteen minutes. But my back and feet were killing me. As a personal fitness instructor, Justin sometimes had appointment changes at the last minute, so waiting could be a bad choice. \n\nMy house was only about fifteen minutes away anyway, so there was no point in making Justin drive all the way out when I could be at the before he reached the airport. \n\nBy the time I reached the front door, I was fuming again. Justin's bright red Charger was parked in the driveway, and I could hear the Bose speakers blasting before I even got near the house. He'd just forgotten again. \n\nThat was becoming an issue. Working was one thing, but Justin seemed to be doing less and less of that all the time. He was spending lot more time with video games and playing the damn vintage acoustic guitar that he'd spent three months of his pay on. That was another issue that was becoming normal. Lately, my pay seemed to go for everything we needed, but what money he did bring in seemed to go for things he \"needed.\" I'd even had to sign the loan on his ridiculously expensive Charger because his credit sucked and \"self-employed personal fitness instructor and part-time bartender\" didn't seem to excite loan officers.\n\nI wasn't near as pissed off as I should have been, but that changed moments later. \n\nEven after seeing the path of strewn clothing, including a pair of Barbie pink \"spank me\" panties I'd never owned lying on top of a pair of Justin's boxers, I still held out... well, \"hope\" is too strong of a word, but it's in the right vein. \n\nBut I found them anyway. On my bed, in my house. \n\nThey didn't hear me come in, which wasn't surprising. Eminem was chanting about puke on his shoelaces at about jet-engine levels and the place reeked of beer and weed. \n\nA tiny portion of my mind was pissed about the weed. I would lose my job if I tested hot for weed, and after a close call with a \"special brownie\" Justin had brought home, I'd flat out told him he couldn't have it in the house again because if I lost my job, we wouldn't have a house.\n\nThe bigger part of my mind told that tiny part to quit being a whiny bitch, since we had a lot bigger problems, what with Justin porking a barely-legal, chunky, banana-blonde slut on top of the hand-stitched double wedding ring quilt that my great grandmother had made for me before she passed away. \n\nIt took every bit of my self-control to pick up the stereo remote and kill the sound. \n\nThe sudden silence rang in my ears for a long moment while I waited for them to catch up to current events. \n\nThe woman's bovine face slowly came up over Justin's shoulder and peered blearily at me for a long moment. She giggled dully. \"Dude. I think it's your old lady.\"\n\nHe half-turned without even \"pulling out of the saddle\" and looked at me. \"Oh...um, hey Ashley.\" He stopped, trying to decide what to say next.\n\nI'm not sure what he possibly could have said that would have helped, but it sure as fuck wasn't the next sentence out of his mouth. \n\n\"We're out of lube.\"\n\nI think there was more. Something about the kitchen and vegetable oil. Something about \"joining in.\" Maybe. But I really had used up all my self-control picking up that stereo remote. Ending a twenty-hour day on throbbing feet with an aching back, abandoned at the airport, and then finding my man-child husband boffing a Spice Girl wannabe and more or less expecting me to join them in a threesome was really just a tiny bit too much.\n\n\"You. FUCKING. ASSHOLE!\" I grabbed the first thing I could reach and got ready to swing for the fences.\n\nJustin finally seemed to realize how bad things had just gone, diving over the bed and leaving the girl lying there in shock staring up at me. \n\nIn that red fury, I might have actually killed him, so it was probably lucky for me that the guitar strings tangled in the dangling light fixture on the windup. It certainly didn't feel like good luck though. \n\nI howled something that I didn't even understand, tried to rip the guitar loose and ended up pulling the whole damn light fixture down. I screamed in frustration and slammed the guitar into the floor a few times trying to get it loose.\n\nThe piglet crawled past me at a speed I'd never have thought a human could reach on all fours. Her pasty white butt jiggled disturbingly like an extra-large, extra-pale serving of jello. It's fucking Florida, who the hell is pasty white in Florida?\n\n\"No!\" Justin lunged at me just as the whole thing came loose and I swung as hard as I could.\n\nA very disappointing \"thunk\" accompanied by Justin shouting, \"Dammit,\" was the only result. All that was left was the fractured neck of the damn thing; the body of it was in pieces on the floor.\n\nJustin stepped toward me, cradling his forearm, looking down at the remains. \"My guitar!\"\n\nHe was still looking down in tragic despair when I punched him with every bit of strength my hundred and fifteen pounds could muster.\n\nHe went down, clutching his eye, and I kicked him twice in the ribs before a very loud, but weirdly calm voice caught my attention.\n\n\"Don't make me Taser you.\"\n\nI turned and looked at the officer in the bedroom doorway, Taser leveled at me. I froze, wondering if I could land just one more kick on Justin before he nailed me.\n\n\"Don't. Tasers hurt like hell and then I'd have to do all that paperwork and add resisting an officer to the charges.\"\n\nThrough the doorway behind him, I could see chunky-butt Banana-Head Bitch in the living room frantically talking and crying to a female officer who looked rather disinterested in her tale of woe. It dawned on me that I'd never seen a My Little Pony \"Friendship is Magic\" full thigh tattoo before this.\n\nI scowled down at Justin. \"Fucker.\" And stepped away.\n\nThe officer sighed. \"Good choice. Face the wall. Hands behind your back, pressed together like you're praying.\"\n\nI felt the cuffs click into place. \"How the hell did you get here so damn fast?\"\n\n\"We were literally driving down the street when Miss Chubby Naked Girl ran out in front of us. I'm going to assume you are the wife or the girlfriend?\"\n\n\"I was.\"\n\n\"Came home early?\"\n\n\"Actually, I came home right on time for a change.\"\n\n\"Word of advice from someone who deals with this all the time. He ain't worth it. This isn't exactly the first time I've run across this kind of thing. Trust me. When you get out, get what you need and just walk away. It'll be easier on you, easier on us.\"\n\nJustin had rolled to sit up and was looking sorrowfully at the pieces of his fucking guitar. He looked up at the officer. \"She needs to buy me a new guitar.\"\n\n\"Not my problem. That's a civil issue. Take it to small claims court.\" The officer obviously had no sympathy for Justin.\n\nI fumed as they processed me into the jail. I wanted to listen to the officer. He made sense. Walk away. Just leave it. \n\nBut as they snapped the mugshots, all I could feel was boiling fury.\n\n***** \n\nI sat with my back against the cell wall staring straight at the cell door all night. Sleepless. The other women in the pod gave me odd looks and stayed away from me. \n\nI focused everything I could into the officer's words: \"Just walk away.\"\n\nI could do that. He could keep the damn car, keep whatever damn furniture he wanted, the stupid video games, and the collection of beer-making equipment that he had to have, but never even used. \n\nI'd just move out of the house and stay at the local flight attendant crashpad for a few days until I could get a place of my own. The other crew members could be cool about stuff like that. I was hardly going to be the first divorce-bound flight attendant in history.\n\nI'd make this easy.\n\nMy 3 a.m. decision lasted exactly four hours and twenty-two minutes.\n\n*****\n\nIn the morning I was informed I was going to be charged with Domestic Assault, that a trial date would be scheduled, then handed a blurred copy of a page of instructions, and finally \"released on my own recognizance.\"\n\nI turned on my cell phone as I walked out of the building, but I got the same \"only available for emergency calls\" message I normally got when I was in a low-service area. \n\nI was halfway down the steps when it dawned on me that the jail was damn near in the center of town. My phone had five bars of signal but I couldn't make calls. I headed for the ATM with a sinking feeling. \n\nI wasn't particularly surprised when I discovered my bank account was closed. I closed my eyes and fought back rage for a moment. If Justin had closed the account, he'd probably also cleaned out the savings account. The savings account he hadn't contributed one red cent to. The savings account that I had first filled with the money my grandmother left me, then carefully managed and religiously built up for when we would have kids. The savings account I'd only put Justin on so he could handle things if there was an emergency, like if I was in the hospital.\n\nI spun on my heel and practically ran for the nearest branch of my bank since it was only a few blocks away. \n\nAndrea, the assistant bank manager was polite, calm, and could give me no help whatsoever.\n\nI was out over a hundred fifty thousand dollars. \n\nThe son of a bitch had emptied it completely. It was underhanded, evil, and, as far as Andrea could tell, completely fucking legal.\n\nShe at least let me use the office phone to confirm that my cell phone was canceled. \n\nI walked back out on the street and just stood there for a moment. I had no idea what to do.\n\nI was just lost. \n\nI started walking. It being Florida, it started raining. Of course.\n\nI didn't make a conscious decision, I just walked. So it must have been fate. \n\nI found myself, less one shoe that I'd lost somewhere along the way, standing in front of the gym Justin worked out of. Right in front of that was a bright red Charger with JUSTN 88 on the license plate.\n\nI stared at the door to the gym. If I confronted Justin at work, he'd just go hide in the men's locker room, run out the back, or something.\n\nGosh. If only there were a way I could get him to come out and talk to me.\n\nThe construction site across the road from the gym was buzzing with activity, and they mostly ignored me at first. But a woman in a short blue skirt and a white blouse that was missing more than a few buttons -- a blouse that was almost transparent from the rain -- will draw the attention of construction workers. A few catcalls sounded off, but they died away as they noticed my missing shoe and my expression.\n\nA big guy who seemed like he might be in charge walked over towards me as I reached a stack of cinderblocks. \"You need help?\"\n\n\"Nope. I just need to borrow this.\" I wrenched a cinderblock off the stack and cradled it. \"Cheating asshole.\"\n\nHe nodded and took a step back out of the way with a slight smile.\n\nI was halfway back across the street when I realized most of the construction workers were following me. They stood solemnly while I hefted the block over my head and brought it slamming down on the hood. That triggered the alarm and a wave of groans and cheers from the workers.\n\nI did that four more times to the deafening music of his car alarm before guys started pouring out of the gym. They probably intended to stop me but came up short when they saw the wall of construction workers behind me. \n\nJustin pushed his way to the front and stopped, staring at me wide-eyed. \n\nI picked the block up again. \"Where's my grandmother's money, you fucking asshole?\"\n\nHe looked frantically from me to the car. \"Look, Babe, we need to...\"\n\nThe cinderblock exploded into the windshield. It didn't exactly shatter like I wanted it to, but it looked awesome stuck halfway through.\n\n\"Don't...you...DARE...call...me... 'Babe,' you piece of shit. Bang some teenager in our fucking bed? Steal the money MY grandmother left me? And you think you can call me 'babe'!?\"\n\nThe blast of a police siren cut me off. \n\nThe officer was already pulling his cuffs out as he stepped out, so I sighed, turned to face the car, and put my hands behind my back.\n\nOnce he had me cuffed, he looked over the wreckage, then at the construction workers. \"She steal that block off your site?\"\n\nThe big guy pursed his lips and shook his head. \"Nah. Musta just been lyin' around here or somethin'. It's got red paint on it, see? None of ours have red paint on them, right guys?\"\n\nThe officer chuckled at the earnest chorus of agreement from the crowd, but it didn't stop him from putting me into the back seat of the cruiser. \n\nThey booked me on Public Mischief, Destruction of Private Property, Vandalism...and Littering.\n\nThe officer told me that it would probably cost me 60 days \"just to cool off.\"\n\nBut it didn't.\n\n*****\n\nLate the next afternoon a concerned-looking officer led me out. \"Your lawyer came in. Seems you own the loan on that car and there's no law against busting up your own stuff as long as you don't file a false report about it. Public Mischief is an overnight hold and Littering will probably be dropped. So you're out again.\"\n\n\"My lawyer?\"\n\n\"Yeah, cute blonde woman with short hair.\"\n\n\"Oh.\" I guessed she must have been from the public defender's office. I wasn't sure how that all worked, but I really was broke right now after all. Would have been nice if she'd have talked to me though, so I would know what was going on. They probably don't have much time though.\n\nI signed for my stuff and reflexively turned on my phone. I was just going to kick myself for bothering to it turn when it buzzed with an incoming text message from a blocked number: \n\n*BIKE MESSENGER OUTSIDE*\n\nThe messenger was patiently straddling his bike right at the bottom of the stairs, holding a shoebox-size package. \n\nHe held it out and I looked at him warily. \"Who is this from?\"\n\n\"I don't know, one of your adoring fans, maybe?\" \n\nThe package had an envelope with five hundred dollars in brand new bills and one of those fancy old-fashioned red bricks. I studied the brick and turned it over, seeing the words \"Copper County Municipal\" neatly scribed into it. No note, nothing.\n\n\"You have no idea who sent this? Are you sure you have the right person?\"\n\nHe grinned and held up his phone for me to read. It was a news story. One of those funny little bits you read to kill time. Under the title \"Turbulence Ahead\" there was a news story with my mugshot on it. \"You're a meme, lady. You're all over the internet. Everybody knows who you are.\"\n\nI stared at my mugshot for a long moment. The suppressed half-smile, the crazy-ex-girlfriend death stare. Shit. Even to me, I looked like I'd lost it. So much for my job.\n\nSince I had no idea what else to do with it, I dropped the brick into my purse.\n\nI needed to catch my breath. I needed to think.\n\nI needed to get cleaned up. The money would help, wherever it came from. Maybe a good night's sleep at a hotel instead of the crashpad, so I'd have some privacy and time to soak in a tub. A change of clothes.\n\nI could have headed to a store, but it was getting late. Besides, I had all the clothes I needed at my house. My Uber app worked just fine.\n\nThe Uber driver just kept looking at me in the rearview mirror. Then I realized he was looking at his phone. \n\nI googled my name on my weirdly in-service phone. Fuck. I was everywhere. It must have been a slow news day because the mugshot was on every news site. A lot of them had a cell phone picture of me poised next to the Charger with that cinderblock held over my head like some kind of insane avenging angel. \n\nHe realized I'd caught him and started to talk. \"Are you...\"\n\n\"Yes. I'm her.\"\n\n\"Cool! I mean...\" He trailed off slowly. \"So, um, this address is...\"\n\n\"My house. I just need some of my clothes.\"\n\nHe nodded like a bobblehead, grinning. \"This is so cool. I never get to meet anyone famous.\"\n\nThankfully, he refrained from asking any more questions.\n\nThe house was lit up like a Christmas tree and the music was blaring, but the Charger was nowhere to be seen. Justin had a bad habit of leaving everything on, probably because I was the one who had to pay the electric bill.",
        "At least I didn't have to worry about any drama. I nodded at the driver. \"Wait here, I'll be right back out and you can take me to the Divinity Hotel over on 19th Street.\"\n\n\"No problem.\" He started tapping away on his phone and from the guilty hunch of his shoulders, I was pretty sure it was about me.\n\nScrew it. If meeting me was the high point of his day, he'd had a pretty boring day. I shook my head as I headed up the walk.\n\nI dug my keys out, which took longer than usual because I had a fucking brick in my purse with them. I couldn't get the key in the damn lock. \n\nDamn, I was tired. Couldn't anything just go right? I held my keys up and looked at them to make sure I was using the right one. Then tried again.\n\nNope.\n\nI looked closer and then looked at the lock. It was new. Not even the same brand as my key. I peered through the window. Right furniture, right stereo. \n\nThat son of a bitch. He'd changed the fucking locks to keep me out of the house I paid the rent on. I pounded on the door, my overloaded purse thumping against my side.\n\nNothing. No motion at all.\n\nI pulled the brick out of my purse and studied it. Edith Johansson, the landlady, would understand; I'd just call her and let her know. Of course, I ended up leaving a voicemail because she never picked up her business phone after hours.\n\n\"Edith? You've probably seen what happened on the news. Everybody else has. Look, I have to get into my house and get some clothes before Justin gets back and starts some drama. So I'll pay you for the window, and that light fixture too. Sorry about everything. Oh, yeah, this is Ashley.\" \n\nConscience salved, I pulled the screen off the living room window. Maybe I could make a small hole, just big enough to reach through and unlock it. I tapped as gently as I could with the brick. \n\nThe whole window fell apart in a rain of shattered glass. I was sure that was some kind of a God-sent analogy for my life, but whatever it meant, it wasn't really at the top of my list of things to figure out. I unlocked the frame, raised it and carefully used the brick to clear the glass off the window ledge before crawling in. \n\nOf course, I missed a sliver of glass stuck to the bottom of the frame, so I ended up with a damn river of blood running off my scalp onto my face. I was pretty sure it was a minor thing. Flight attendants have a lot of first aid training, so I knew cuts on the head bled like crazy. I grabbed a random white T-shirt Justin had lying on the couch and did my best to stop the bleeding.\n\nFor a moment, I stood in the living room and thought about my missing money. If Justin had taken it all out, he'd have to keep it somewhere. I thought about searching, maybe start with the freezer, but decided nobody would be that stupid. I just needed to get my stuff.\n\nThe damn stereo was blasting, the room was dark because the light fixture was gone, and I was tripping over something. I tossed the T-shirt as I caught my balance, then flicked on the nightstand lamp. I sighed and turned the damn stereo off.\n\nI felt a sinking feeling as I heard an urgently whispering voice from the closed bathroom door. \n\n\"...come on, hurry! She's in the house. She's in the fucking bedroom!\"\n\nI looked down at the lime green thong panties that had wrapped around my shoeless foot. I was standing next to a metallic orange skirt and Justin's boxers and jeans.\n\nI didn't actually have time to drop the brick before the Taser hit me. \n\nDon't let anyone tell you that Tasers don't hurt like hell. If you've ever wondered, it feels like you're a puppet getting your strings cut. While getting a whole-body Charlie horse. \n\nAfter the officer had me cuffed, I managed to glare at him. \"I thought you were supposed to say something like 'freeze' before you do that.\"\n\nHe shrugged and pointed the bed. The bloody white shirt was lying on top of a bunched-up blanket. \"It looked like you were beating someone to death with the brick.\"\n\nI tried to ignore Justin and the skinny-ass green-haired bitch who crept out of the bathroom with him. That didn't last very long.\n\n\"I've got a restraining order on her because of what she did to my car. She's fucking crazy. You need to keep her ass locked up.\" Justin struggled to cover himself with a hand towel while the woman apparently had to make do with her own hands. \n\nThe officer shook his head. \"You really need to stay away from him and his girlfriend.\"\n\n\"Which one?\"\n\n\"Which one what?\"\n\n\"Which girlfriend? The fat one with the My Little Pony tattoos or the meth-y skank here with the 'It Ain't Gonna Spank Itself' tramp stamp?\"\n\nHe turned and looked, choking back a chuckle at the sight. \"Any of them. All of them.\"\n\n\"I really need to go to a clinic to get tested for STDs.\"\n\n\"You'll actually have to stay out of jail for a day or two to do that.\" He lowered his voice as he eyed her stringy green hair. \"Seriously though, getting tested might be a good idea.\"\n\nJustin double-checked to see that the cuffs were on before he stepped a bit closer. \"Where's my car, you bitch?\"\n\n\"Fuck you. I've been in jail until about an hour ago so whatever happened, it wasn't me. Asshole.\"\n\nThe officer firmly pushed us further apart. \"Let's not do this right now.\"\n\nJustin glared at me hatefully. \"You need to arrest her for Grand Theft Auto. She stole my fucking car.\"\n\n\"Did you report it stolen?\"\n\n\"Well, no. But...\"\n\n\"Then how the hell can I arrest her for that?\" \n\nJustin stammered into silence as his Joker-wannabe girl snatched the T-shirt off the bed, then promptly dropped it once she saw all the blood on it.\n\n*****\n\nThe other women in the jail pod stayed as far away from me as possible all night and I ignored the whispers.\n\nAs the officer led me out the next morning, one of them called out. \"Go get him.\"\n\nThe officer looked back tiredly, then looked at me. \"Please don't. Look, you're being released, okay? Your lawyer, the Blonde Tornado, hit this place first thing this morning. She's threatened a claim of police brutality for the Taser incident. Your landlady backs your story about you trying to get in and out without running into your husband; she even produced the recording. There's no restraining order because the request was based on you destroying his car and it turns out the car is actually in your name. And again, there's no actual law against doing that. Just remember though, you have a domestic violence charge pending, so if they refile based on that, they have a good shot at getting an order.\"\n\nI really needed to call the public defender's office; it sounded like my court-appointed lawyer was going above and beyond. \"Do you have the number for the public defender's office?\"\n\nHe looked completely puzzled. \"Why?\"\n\n\"So I can call my lawyer; she's a public defender, right?\"\n\n\"I've been here for ten years; I know every public defender and she isn't one of them. Hell, your lawyer wears suits that would cost a public defender half a year's salary.\"\n\nI shut up. I had no idea if it was legal for someone to hire a lawyer for me without me knowing. Whoever it was, they kept getting my butt out of jail, so it was best to be quiet. He eyed me suspiciously but let it go.\n\nThe bike messenger was waiting, smiling from ear to ear. \n\nIt was a small box this time. One thousand dollars, a key card to the Hollywood Suite of the most expensive hotel in town -- with a receipt for two weeks paid for in advance. And the key to the Charger, wherever it was.\n\nI thought it through and took the Uber directly to the hotel this time.\n\nI spent the next four days catching my breath. I didn't have any clothes, but the silk hotel robe was just fine, and the hotel restaurants delivered incredible room service. \n\nI watched bad movies, drank a few too many hotel bar daiquiris, and actually slept. A note from my lawyer arrived, announcing that my divorce was filed, and Justin had been served. I wondered at that since I'd never actually met the lawyer or filled out any paperwork, but I should have, so I was hardly going to argue about it.\n\nI also had time to look over the news stories and memes I'd managed to generate. \"Turbulence Ahead\" was one of the least sensational ones. \"Fasten Your Seatbelts\" was accompanied by the cell phone picture of me with the cinderblock. And, apparently, my friendly Uber driver had taken a number of photos of me as I broke into my own house. With a brick.\n\nTo top it all off, under the title \"Relentless,\" there was a delightful picture of me with blood running down my face while I stood in my living room with that brick in my hand. I looked... well, \"unhinged\" was probably too kind; but \"maniacally homicidal\" was a nice fit.\n\nThat really explained why the other women in the jail had treated me like a grenade with the pin out.\n\nA phone call confirmed that my employment with Air Expanse was \"temporarily suspended\" pending the outcome of the domestic violence charge.\n\nOn day four, a message came up from the front desk. \n\nMy car was finished and waiting for me at \"The Hellacious Body Shop.\" The hotel limousine service was at my disposal, of course. \n\nWith the message was a black and dark-red skirt outfit with a pair of cute-but-practical low-heeled pumps. \n\nI thought about it for a while. Whoever was \"helping\" me obviously had their own agenda, but what the hell, they'd protected me so far. \n\nThe guy at the body shop was all smiles when I showed up. \"I was honestly worried whether we could get this done on schedule, but it all kind of came together beautifully. Your lawyer came by and dropped off the new plates this morning when she settled the bill. I'd really appreciate if we could get a couple pictures of you with it. Be great for customers who aren't sure if we can capture their essence, if you know what I mean.\"\n\n\"I'm not sure I'm the best choice for an advertisement.\"\n\nHe laughed. \"You are for the type of people who go in for this kind of custom work. They love the bad girls.\"\n\nInstead of the garage, he led me into their showroom. \n\nIt was the Charger of course, but she'd been repaired. Repaired wasn't even a good word for it. The damage I'd done was fixed, but there had been a lot more. Blacked-out headlights and taillights, tinted windows. The hot-red paint was gone, replaced with metallic-flake black cherry paint that was so perfect it felt like I could fall into it.\n\n\"Beautiful, isn't it? Hell, I hate to let it out of the showroom. We detailed the whole thing, made some minor tweaks to the engine for max horsepower out of that Hellcat engine and added a Cherry Bomb Extreme exhaust system. They'll hear you coming. It's technically legal, but just barely. Anyone gives you trouble, have them call us; we had an inspector check it.\"\n\nI walked around the car and looked at the license plate. The JUSTN 88 plate was gone, replaced by one that read B4D GRL.\n\nBad Girl. \n\nAs I pulled out, I had to laugh. It had taken me a moment to catch on, but for his pictures, he'd seated me, very ladylike, on a stack of cinderblocks next to the car. \n\nThe loud growl of the engine was absolute music. \n\n*****\n\nIf I had actually known who my lawyer was, I could have called her and asked how to get access to the house. As it was, I cruised by, looking carefully to see if there was any certain sign that Justin wasn't home. \n\nThere wasn't.\n\nBut there was a dying bonfire in the middle of a large burn mark in the front yard. \n\nI stopped. A snakelike object just poking out of the singed area caught my attention. I tried to convince myself I was wrong.\n\nHe couldn't be that stupid. \n\nI stopped, saying remarkably un-ladylike things under my breath.\n\nHe wouldn't. \n\nI got out slowly and walked over to it. Once I was close enough to be sure, the un-ladylike litany was no longer under my breath. It was now quite loud and quite focused on Justin.\n\nThe purse strap was all that was left of one of my favorite purses. Enough was left in the debris for me to be pretty sure the asshole had burned every piece of clothing I owned, along with my purses and shoes. I could even make out the remains of my hair dryer and make-up case. \n\nI glared at the house. \"Justin! You son of a bitch!\"\n\nA rake lay on the ground next to the sidewalk, and I picked it up to see if I could salvage anything, but it was hopeless. \n\nThe staccato chirp of a police siren caught my attention and I turned to see a cruiser pulling up. The officer got out tiredly, speaking into his radio. He shook his head. \"Let's do this. Turn around.\"\n\n\"What am I being arrested for this time?\" I was already turning though and putting my hands behind me.\n\n\"We've seen it all before. You can't burn your husband's stuff in the yard. Even if he is a complete asshole.\"\n\nI started to argue but decided I knew the drill by now. Once they got me to the station, I'd be able to make a statement, then they'd look into it. But their first priority wasn't my comfort or even justice; it was making sure whatever was going on didn't escalate. Trying to argue it out now would only make things worse.\n\n\"Can someone move my car? I don't want to leave it here.\"\n\n\"I can see that; somebody might put a cinderblock through the window or something. With your permission, I can get someone to move it.\" He looked over at it. \"There will probably be an argument over who gets to do it. Where do you want it to go?\"\n\nI thought about that for a second. \"Hellacious Body Shop. Tell them I'll be back for it.\"\n\nHe chuckled as if he didn't believe me.\n\n*****\n\nAnother night staring at the pod door. The women who had been there a while warned the new girls to stay the fuck away from me. Not that most of them needed the warning. That picture of me covered in blood with the brick in hand seemed to be everywhere. \n\nIt was almost six in the evening before they out-processed me. A female officer gave me my clothes and took me to change before heading up.\n\n\"So, turns out that the couple across the road has a Ring camera, and it clearly shows that your husband, not you, burned the stuff.\"\n\n\"He burned MY stuff. Has he been arrested?\"\n\n\"That would be a civil matter.\"\n\n\"Okay. So why was I arrested in the first place if it's a civil matter?\"\n\nShe shrugged. \"You kind of have a pattern. So a twenty-four-hour hold was reasonable.\" She paused. \"Look, nobody here thinks you're getting a good deal out of this. Nothing about this is fair, but we only have so much flexibility here. You've got a pending domestic assault charge hanging over you, and the way everything works, that puts you on the shitty end of everything. Your lawyer should have explained that to you; she sure as hell makes sure we follow the rules.\"\n\nI didn't answer that; I didn't want to explain that I'd never even met my lawyer. Justin had sure as hell fucked me over though. No job, no clothes, no money. I fumed silently as we walked up to processing.\n\nTen minutes later, I was standing alone on the sidewalk holding that beautiful Cherry Bomb Louisville Slugger.\n\n*****\n\n\"Ashley.\" I looked for the voice. Down the sidewalk sat my badass car; an attractive petite woman with a cute blonde bob haircut was standing next to it, dangling the keys from her forefinger. \"I thought you might need this.\"\n\nI walked over to her. \"You must be my lawyer.\"\n\nShe smiled, a touch mechanically. \"I am a lawyer. Not really your lawyer though. I'm here to keep my client out of trouble. But my client's interests do just happen to coincide with yours.\"\n\n\"Is there any point to asking who your client is?\"\n\nShe shrugged, then shook her head. \"Not really.\"\n\n\"So are you going to give me any legal advice, um...?\"\n\n\"You can call me Amber. Standard legal advice would be for you to get in your car, go somewhere to kick back and stay out of trouble until your trial, hire yourself a competent lawyer, and make the best of things. But there is a very strong possibility that everything will work out much better for you if you ignore the standard legal advice and just do what you really want to right now.\"\n\nI glanced down at the message on my cell phone and raised an eyebrow at her. She just smiled, a bit more humanly, and gave a single tilt of her head. \n\nI reached over and took the keys from her. \"Thank you for everything.\"\n\n\"It's been a pleasure. I'd best be going, there are things that an officer of the court can't really be a party to.\"\n\n*****\n\nI cleaned up at the hotel and wasn't even surprised that a very nice club outfit was already sitting on my bed when I got there. A mini dress in black \"wet look\" leather with a pair of matching low-heel dancing shoes. The dress fit like a fucking glove. \n\nDead at nine o'clock, I pulled up right in front of the club. The line to get in was a mile long, but the bouncer grinned and pointed to me as soon as I handed my keys to the valet and waved me up to the front. He gave a slight smirk at the bat tucked under my arm but didn't say a word.\n\nOne of the women near the front of the line looked like she was going to say something to the bouncer, but she stopped when she noticed the bat, then recognition dawned. She smiled at me instead, then started frantically typing away on her phone. \n\nI stalked through the doors, searching the crowd. Justin had to be here. That had to be why I was here. \n\nThe place was just starting to fill, and it didn't take me long to find the asshole. He was holding court with a half dozen skanks at a table, and he didn't see me until I was almost on top of him.\n\nI slammed the bat down on the table. \"Hey, asshole.\"\n\nHe looked up in shock. \n\nI spun the bat around my hand. \"We need to talk.\"\n\nHe shoved backwards, his chair went over and he rolled to his feet, backing way frantically. \"You can't be near me!\"\n\nI started around the table, as half-naked skanks scattered like cockroaches from the light. \"Where's my grandmother's money, asshole?\"\n\nHe looked over at one of the floor bouncers. The huge bald man nodded to me respectfully, turned and started walking away. I grinned. \n\nJustin looked past me at the front door but decided his chances were better out the back. He turned and ran, but before he reached the hall to the bathrooms and the back exit, he suddenly slid to stop, scrambling for a second before falling on his butt.\n\nAt first I thought he'd slipped on a spilled drink, but he scrambled right back toward me, transfixed on a tall woman standing in his way. She had dark red hair, a black miniskirt and black mesh top that wasn't hiding a damn thing. \n\nBefore I could figure out what the hell was going on, he screamed \"Fuck!\" and leapt past me, sprinting for the door. \n\nShe stared after him unblinkingly. I couldn't be certain because of the music, but I thought I heard a low husky voice purr, \"Run, Motherfucker. Run.\"\n\nI glanced back and caught a glimpse of the woman before dashing after him. She just stood hipshot with a vicious predatory smile.\n\nThe valet hadn't even parked my car, he was standing outside waiting for me with the keys in hand.\n\nMy phone buzzed with a message, and I stared at the address.\n\nHome base.\n\n*****\n\nA rental car was parked askew in the driveway. I assumed it was Justin's. Paid for with my money, of course.\n\nI parked the Charger in front of the house, grabbed my bat and headed in.\n\nHe was in the bedroom frantically shoving clothes into a suitcase and barely gave me a glance when I walked in.\n\n\"Hey, Asshole.\"\n\nHe looked up, shook his head once, and kept stuffing clothes in.\n\nI shifted the bat and walked towards him, I was going to get his fucking attention one way or another.\n\nThen she walked in and I froze.\n\nShe was even taller than I'd thought. She was probably as tall as Justin in bare feet, but she was wearing four-inch heels. She gave me a smile that made me shiver, a tingling rush running down my body. \n\nA tiger had walked into the room. ",
        "\"Miss me, Justin?\" She shifted her laser-intense gaze to me. \"Hello, Ashley.\"\n\nI backed away from both her and Justin. She radiated sex in mind-numbing waves. Not loving sex or fun casual sex. Pure, nasty, visceral, paint-peeling, dogs-howling, can't-look-yourself-in-the-mirror sex. The kind that leaves you sore for days and embarrassed at what you were willing to do for months.\n\nJustin stared at her, paralyzed. I think he made a slight gasping squeak.\n\nShe gave a throaty sound, maybe a laugh, maybe a growl. \"Since Justin seems to have forgotten his manners, I'll introduce myself. I'm Nicole, but you can call me Nikki. Everybody does. I let Amber handle things this week. But I just couldn't miss this, so I flew in this morning. I'm the 'ex.' Justin and I used to be married. He's not very good at the whole 'faithful' thing. He cheated on me too.\"\n\nI looked at her and then back at Justin in disbelief. \"You cheated on her? Holy shit. I've been trying to figure out what was wrong with me that made you cheat. You cheated on...her.\" I gestured helplessly. \"There is something seriously fucking wrong with you. Jesus, she's ten feet away and you could cut glass with my nipples. And I'm straight.\"\n\nNikki raised one eyebrow at me meaningfully. \"No woman is a hundred percent straight, Baby. Trust me. Spaghetti is straight too, until you get it hot and wet.\"\n\nI staggered another half step back and shook my head to clear it of an avalanche of wildly impure thoughts. \n\nShe continued. \"I've gotten much better since it happened. I found the man of my dreams, dreams I didn't even know I had. I have an amazing family. But it was very, very bad, believe me.\" She paused as rage and loathing crept into her voice. \"Poor, poor, little Nikki. Four months into a very severe case of postpartum depression, nearly suicidal, and the asshole here not only fucks around on me, he makes a public spectacle of it, and absolutely, completely humiliates me.\"\n\nJustin suddenly zipped the suitcase up and looked at the door.\n\nNikki shook her head slowly. \"Uh, uh, uh. I did promise my man I wouldn't lay a hand on you, but I don't believe Ashley has made any promise to anyone. I'm sure she'd like to hear the rest of this.\"\n\nI shifted the bat into both hands and stepped between him and the door. \"Try it. Please.\"\n\n\"A girl after my own heart.\" Nikki sent me a slow wink that made me flush.\n\n\"We had a deal, Nikki.\" Justin suddenly found his voice. \"Four hundred miles. I stay four hundred miles away and you let it go.\"\n\nHer smile seemed to almost grow fangs. \"We did have a deal. Four hundred miles.\" She held up a cell phone with a map. \"Three hundred ninety-nine. Point eight.\" She gave me a warm look. \"I did have to stand right at the city limit sign.\"\n\nFor a second I thought he was going to rush the door. I wound up with the bat. \"Seriously, Justin. I fucking dare you.\"\n\nNikki waited for a second, then sighed. \"He won't do it. No balls at all.\" She shook her head and I could feel she really wished he would try. \"Anyway, during the course of our...train wreck, I managed to find out that he and his latest girlfriend were embezzling from his cousin's construction firm. So in exchange for my silence, he agreed to go at least four hundred miles away.\"\n\nJustin puffed up a little. \"It's been almost five years. That's the statute of limitations.\"\n\nNikki laughed, a soft cruel sound. \"I'm sure it is. But it was never really about the law, was it Justin?\" She shifted her smoky eyes to me. \"His cousin has a very long history of violence, and no forgiveness in his soul at all. But he has lots of blowtorches and ball peen hammers.\" \n\nI could see fear in Justin's eyes and I decided to push him. \"I want my grandmother's money. Asshole.\"\n\nEven though I had the bat, he was far less afraid of me. \"The money is community property; at best you'd have to split it with me.\"\n\nNikki nodded. \"That is true.\" She held a bag up. \"It was in the freezer. Idiot. Half would be around seventy-five thousand dollars, right?\" \n\nI nodded. I hated the idea of him getting any money, but right now I had nothing.\n\n\"But what you actually do with your half of the money is up to you, Justin. Personally, I think you could spend it on this.\" She held up a slip of paper, then handed it to me. \n\nI looked at it, it was just a phone number.\n\nNikki studied her nails just a bit. \"That's your cousin's phone number, Justin. I bet Ashley would sell that to you for, oh, seventy-five thousand dollars.\"\n\nI felt an off-kilter smile crawl onto my face. \"That would give me something to live on until I get a new job.\"\n\n\"Amber checked your contract and the employee handbook. Don't worry about your job. You're only fired if you're convicted of domestic violence, and it is very much in Justin's interest to be very gone long before that could happen.\"\n\nI grinned. I suspected it looked a lot like Nikki's smile. \"And you'll have to stay four hundred miles from me too. Just so I don't accidentally remember the number.\"\n\n\"Oooh, I like that. Symmetry.\" Nikki blew me a kiss I could almost feel.\n\nJust a few minutes later, Justin was headed out the door, crushed. As he stepped out, Nikki called to him. \"Four hundred miles from Ashley at all times, Justin. Oh, heavens, I forgot. Ashley's a flight attendant, isn't she? They change routes all the time, don't they? She could be almost anywhere.\"\n\nHe stopped and looked back at us in horror as he realized what that meant.\n\nI gave him my most innocent wide-eyed look. \"Run, Motherfucker. Run.\"\n\nHe spun on his heel and walked faster.\n\nI looked at Nikki. \"You obviously have the money to do what you want. Why the games? You didn't need me for any of this.\"\n\nShe looked down at her nails for a second, then met my eyes. \"Maybe I didn't. But you needed it, didn't you? I remember what it was like, how helpless and alone I felt. How fucking hopeless everything seemed. I got lucky. I met the right guy at the right moment.\" She shook her head in momentary wonder. \"With his help I really 'found myself,' as silly as that sounds. But until I did...\" She stared into darkness for a moment. \"I saw your picture on the internet, I remembered what it felt like when he did it to me. I couldn't leave you that way.\"\n\nAmber was leaning against my Charger as we walked out to watch Justin get in his rental car and drive off. \n\nShe looked at Nikki. \"That's it? No stabbing? No shooting? No severe beatings? No faces bitten off?\"\n\nNikki rolled her eyes and looked at me in mock exasperation. \"One time, just one time. Bite one face off and you're branded for life.\"\n\nAmber smiled and handed Nikki a black silk jacket. \"Let's try and not to cause a riot at the airport this time. That TSA checkpoint may never recover.\"\n\nNikki shrugged the jacket on, then put her arm over Amber's shoulders as they walked toward a dark car next to mine. \"C'mon, Cream Puff, we have to catch that flight and go convince my husband I've been good. Or least make him not care.\"\n\nShe paused, smiling, then hit a speed dial number on her phone. \"We're done...\" Someone on the other end talked for a moment and she laughed, a liquid, breathless sound that felt like black velvet sliding down a nude body. \"Oh yes. Your baby did bad, bad things.\" She stopped and closed eyes, shivering, while Amber steadied her for a moment. \n\nNikki seemed to catch her breath and snapped her dark eyes open. Her voice turned sinful and hungry. \"God. Yes. You really do know what I like. You Bastard.\"\n\nPost Production Notes\n\nThough this works just fine as a standalone, it is really a sequel to \"The Harpy.\" Thanks again to the the editors and beta readers, it's a tough job, but they were amazing as usual. As always thank you to the readers, you've supported us since the very beginning and we can't express our thanks enough. All we can do is post more stories when we have the time. \n\nThis one is for all the readers who have asked for \"more Nikki.\" I don't think we've had a month go by since \"The Harpy\" posted that we didn't get an email asking if there was any way she could return. I didn't really see how there could be. \n\nSometimes the Universe decides what you will write. This is one of those. \n\nThere was a recent news story about a flight attendant who went ballistic after catching her husband in bed with another woman. I saw her mugshot, saw that look in her eyes that said she wasn't done yet. I told a co-worker that I really wanted to post her bail and have a bike messenger deliver a baseball bat and a GoPro to her outside the jail. You know, just to see what happened next. \n\nThen I noticed the name of the flight attendant. \n\nNicole.\n\nOver the next few days, I got three emails in a row from different people asking for a sequel to The Harpy.\n\nI never use the radio in my truck, but The Missus borrowed it, and when I turned it on the next morning, Carrie Underwood's \"Before He Cheats\" was blasting. Followed by Chris Isaaks' \"Baby Did a Bad Bad Thing\" which I've always thought of as a sort of theme to The Harpy. \n\nI can take a hint. \n\nThe Missus pointed out that some stories just have to be written. We've had a few of those -- stories that won't let go until they are down on paper. They fill up the space in your head and refuse to let you work on anything else until you deal with them. \"The Song of Farwalker and Deadgirl\" haunted me for weeks until I got it out. The Missus couldn't go to sleep one night until we got out of bed and had \"An Angry Man\" sketched out.\n\nSo while I was fairly certain I was never going to write a sequel to \"The Harpy,\" I didn't get a say in it. Nikki decided to return. Rather than piss her off, I got with the program.\n\nBecause, well, Nikki can get just a little bit crazy if she doesn't get her way.\n\n \n"
    ],
    "authorname": "Todd172",
    "tags": [
        "amber",
        "btb",
        "cheater",
        "cheating",
        "florida",
        "harpy",
        "justin",
        "nikki",
        "revenge"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/relentless-4"
}