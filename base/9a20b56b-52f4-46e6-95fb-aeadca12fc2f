{
    "title": "Lady in Red Ch. 28",
    "pages": [
        "The weekend was spent rehearsing for the Christmas show that had already been contracted for CBC. Gwen, Jordan, and Steve were up at four. They were in the van, and riding to the studio by five AM.\n\n\"If people think making movies is an easy job, they should follow us around for a few days. Charlie, Ashley and Charlotte wanted to sleep in. They decided last night that if they arrived at the studio by seven, they'd be in plenty of time for everything and still get some sleep,\" stated Jordan as she tried unsuccessfully to stifle a big yawn. \n\nBy Sunday evening, Clyde was satisfied that his stars were prepared to tape the Christmas show the next weekend. \"I've completed some negotiations with CBC earlier this week. They spent around half a billion dollars for the rights to broadcast pro football on Saturday nights. They want Jordan to sing their opening song. And they want Charlie and her to write it, if they can. They have a mediocre one written already, but they're hoping for something with more pizzazz. Jordan, you've become a hot commodity. CBC wants you to do their morning show concert on Labor Day weekend. You're on top again and bigger than ever!\"\n\n\"I don't know what to say, except thanks to Gwen, Steve, and Charlie. I'm still going to attend Lisa's school this fall and try for a business degree. I'll do concerts and recordings around my schedule. I hope I get to do more TV shows and movies, too. I'll do anything that includes Gwen and/or Steve. This time, I'm going to keep my head straight and make it last. I owe it all to you, Clyde, for making me enter rehab and then putting me with Gwen's family. Thanks!\" \n\n\"That isn't all. I have a few of the glamour magazines asking about using you and Gwen on the cover. I just need to work out the details, but can I assume that you're each fine with sharing a cover with the other?\"\n\n\"I'd be honored to appear on any cover with Jordan,\" replied Gwen quickly. \"She's really helped my career and been like a sister to me. That was one of the luckiest days of my life when you sent her home with us. It started rough and got worse fast when Steve poured soap down her throat, but look where we wound up.\"\n\n\"I feel the same,\" agreed Jordan. \"Gwen's my best friend and the sister I always wanted. It'd be great!\" \n\n\"Good! I thought you'd feel that way. I don't know if you two have been following your press, but you're at the top, or near it, of every poll about the most beautiful, sexiest women in the world. Considering your ages and that you're still in high school, that's amazing. Do you still want your paychecks going to the hospital fund? You've given them more than they could have dreamed of. If you want to start putting it in your own bank account, they couldn't complain.\"\n\n\"I hope to work at that hospital someday and I want to keep channeling everything I get to them,\" responded Gwen immediately. \"I can understand Jordan wanting to build up her bank account, so I won't blame her if she keeps her share.\"\n\n\"No way! My old songs are making me more money than ever now that I'm making hits again. I really believe that I've been given this second chance because I'm helping the hospital,\" confessed Jordan.\n\n\"Did you hear that, Steve? I'm considered one of the sexiest women in the world. I bet you never thought that would happen when you first saw me sitting at the mall.\"\n\n\"You couldn't be more wrong. The first time I saw you, I knew you were the sexiest, most beautiful woman in the world. It just took a while for the rest of the planet to realize what I already knew,\" boasted Steve.\n\n\"You have a knack for saying the right thing at the right time!\" grinned Gwen as she hugged Steve. \"I knew you were a real hunk long before you sat down with me that day. I had watched you walk by the food court earlier. At that time, I never thought we'd be sleeping together, but I sure daydreamed about it.\"\n\n\"Not to change the subject from sex, but did you kids get some family lined up for next week's taping of the show?\" asked Clyde. \"This is a show about an old fashioned family Christmas, so we need some family!\" \n\n\"I seem to be responsible for getting family to attend. So far, I have my parents, grandparents on Mom's side, Kate, Lisa, Lisa's beau, my Aunt Diane, Uncle Will, and Cousin Stephanie.\n\n\"I asked Ashley and her sister, Becky, to be in it since they're close friends, along with Charlotte and her boyfriend, Billy. I called Jordan's mother, which pissed Jordan off for a few days, and she's agreed to come. \n\n\"Then I contacted Steve's Aunt Janice and her daughter Jen. They're coming, but his grandmother declined. Janice said that her mother is feeling pretty guilty about her treatment of Steve's mother years ago. The really good news is that Steve's grandfather, William Patterson, is coming. He said he'd rather not be on television, but he wants to meet Steve, as well as watch Jen and Janice when they tape the TV show.\n\n\"For some reason, I never even thought about asking him. Jen told us she had a grandfather, but he wasn't with them in Paris and I forgot all about him. Imagine forgetting a grandparent. I didn't even know their last name was Patterson! That was embarrassing. The good news is that he was very cordial and warm on the phone. I think Steve and I will like him.\"\n\n\"Great! Now, you kids will have to put in long hours this week. I want to get as much of the movie filmed as possible before the weekend. Then we'll tape the TV show before you all go back home for your graduation on Tuesday. We'll be headed to Florida a couple days after your graduation for all of the beach and outdoor scenes.\n\n\"I'm negotiating the movie rights about the terrorist attack with a major studio. Forget HBO or Lifetime. We'll get a lot more than a TV network will pay. I'm working on getting some money for the families of the kids that died, as well as those badly wounded, and some for the school. Your portion will go to the hospital fund. They could technically make the movie with no permission, but that usually causes resentment, and litigation, so they are paving the way with cash. I expect to reach an agreement on compensation for all the parties. The story's mostly about you two, and they want to use your names and endorsement, so they're negotiating. The hospital will get the lion's share of the money. You don't have time to be in it this fall, so it'll be interesting to see who they get to be Gwen and Steve.\" \n\nThe next week was a grueling one for the actors, and their PA's. Steve and Gwen spent a lot of time separated since many of the scenes they were in did not include the other. Jordan spent time filming with each of them separately and they did a few scenes where the three appeared together.\n\nAshley constantly watched after Steve, making sure he was at the right place at the right time, knew his lines, was dressed appropriately for the scene, and made time to eat his meals and drink lots of water. She would argue with the crew if she felt they were demanding too much from him. She had the make-up people keep Steve prepared for his scenes.\n\nAs Steve became comfortable with Ashley, he relied on her more. By Wednesday afternoon, they were frequently laughing and joking with each other.\n\nWednesday evening, Ashley approached Gwen after the group had finished dinner. \"I want to thank you for taking me on for this job, Gwen. It's been a real learning experience, a lot of work, and a lot of fun. As you know, I really enjoy being with Steve. He's just amazing. He works hard, is always polite, never complains, and looks fantastic. \n\n\"I have to keep the actresses away from him. They're attracted to him like moths to the flame. I understand how they feel, but I still have to keep him away from them so he can concentrate on his performance. He's a very good actor. He's good at everything, now that I think about it. I still have dreams about that love scene you two did. That was amazing. You're a lucky girl to have him. He's devoted to you.\"\n\n\"He's amazing alright. I'm constantly pinching myself to see if this is a dream. Jordan, Charlie, and Charlotte are joining Steve and me in the hot tub in half an hour. We'll drink some sodas and talk about the movie, so why don't you join us? I know Steve and Charlie would like that.\"\n\n\"You've no idea how intimidating it is to be next to you and Jordan,\" responded Ashley. \"Like Clyde said, you're two of the sexiest, most beautiful women in the world. I'll don't have the curves you two have.\"\n\n\"Let me tell you something Steve told me, although I always suspected it,\" began Gwen. \"Guys like pretty girls. They like girls' boobs. They like big ones, small ones, and medium sized ones. They seldom meet a breast they don't like. You're extremely attractive and have a great figure. Men like looking at you. Never feel like you're an also-ran. Come on down and relax with us. You'll get to watch Steve's chest muscles ripple when he moves, and see his washboard abs.\"\n\n\"Since you put it that way, I'll be there!\" laughed Ashley.\n\nShe joined the group half an hour later just after they had settled into the spa. She wore a modest one piece suit. Ashley wasn't surprised to see Jordan and Gwen in very small bikinis, but was stunned when Charlotte stood up to retrieve a can of soda that had rolled away. She was wearing a thong bikini that revealed a surprisingly shapely derri\u00e8re. Her breasts were small compared to Jordan and Gwen, but looked perfect on her narrow, thin frame.\n\n\"What? You didn't think I'd wear a thong?\" asked Charlotte when she saw Ashley's surprise. \"Gwen convinced me that I have a nice ass and I should flaunt it. Since I have no boobs to speak of, I decided to show off the only real mounds of flesh I have. What do you think?\"\n\n\"You surprised me. You were always so prim and proper in school and now you're like a different person. Not every girl can wear a thong, but you look great in it. How does Billy like it?\"\n\n\"He hasn't seen me in it, yet,\" admitted Charlotte. \"He's seen me without any clothes at all and seems to like what he sees. I used to worry because I wasn't built like you, Jordan, and Gwen, but I've finally come to realize that I'm very acceptable to a lot of guys. It's more about attitude. Smile, be happy, compliment people, and see the light side of things. I'm no supermodel, especially compared to you three, but I'm very much a woman and I can satisfy my guy. I'm good with that.\"\n\n\"You keep comparing me to Jordan and Gwen, but I'm not as beautiful, or sexy, or voluptuous as they are. I'm pretty average. Jordan and Gwen are incredible,\" stated Ashley.\n\n\"You seem to have vision problems, Ashley. What size cup is your bra. A C? What is your waist, 22 or 24? Your face is beautiful, your figure is perfect, and yet you tell me that you're average. If you were average, where would that leave me? Billy thinks you're hot. He told you so. Steve isn't saying much, as usual, but I've seen him looking and he approves of what he sees. But then, I've seen him sneaking peeks at my ass, so what does he know?\" laughed Charlotte as Steve blushed. \n\n\"The truth, as I see it, is that men like women. They like friendly, smart, attractive women the most, but almost all of us women have what they like and want. Embrace it! I don't know why you feel the need to play down your figure, looks, and brains, but it isn't a very good idea. You're not having much fun that way. \n\n\"Your sister is very similar to you physically, but I heard you tell her several times how sexy she looked and how pretty she was. When you tell Becky that, you're saying it to yourself, since you're so similar. If you think she looks good, than you have to believe that you look good, too. Are Becky's boobs too small? Is she too fat? Too thin? Too tall? You know she's pretty close to perfect, which means that so are you.\"\n\nAshley had no response for Charlotte's observations. She did wear the same size as Becky, and Becky had a wonderful figure. They were the same height and weight and Becky was beautiful. Maybe she'd been a little harsh on herself. Maybe she didn't have to date such losers.\n\n\"Thanks, Charlotte. You've really changed a lot since last year. I remember how quiet and shy you were and how you never seemed to date. Now you're telling us that you feel desirable and have a boyfriend that agrees. You've matured a lot and have wonderful self esteem. When I'm with you guys, I feel like I'm the student and you're the teachers. This has been a great experience for me!\"\n\nThe next evening, the group again made plans to meet in the hot tub. Gwen and Jordan exchanged glances when Ashley appeared in a bikini. Charlotte simply laughed.\n\n\"Wow! To think I was trying to build up your confidence last night. Gwen used to try to wring testimonials out of me about how good she looked, back when she had some doubts about being the sexiest woman in the world. If you have any doubts about how good you look in that bikini, look at the faces on Steve and Charlie.\"\n\nAshley blushed as she stepped into the tub, looking for a place to sit. Steve reached over, placed a hand on each of her hips, and lifted her onto his lap. Unable to conceal her surprise at Steve's actions, Ashley quickly looked to see Gwen's reaction. \n\n\"See what happens when you get too close to that guy, especially when you're looking so hot and wearing so little,\" pointed out Jordan. \"Now he'll force you to sit on his lap and you'll feel those abs and pecs pressed against your back and side. He'll sneak peeks down your top and pretend that he doesn't even realize he's still holding your hips. I'm lucky Charlie's here to protect me, or I know I'd have fallen prey to that awful man's sick desires.\"\n\n\"It takes some of the pressure off me,\" teased Gwen. \"Now I can relax and feel the jets ease my tired muscles. You'll find that it's much tenser sitting on Steve's lap. No muscles get to relax when he has a beautiful woman in his grasp.\" \n\nAshley grinned as she made a production of getting comfortable on Steve. \"You're absolutely right, Gwen. I do feel some tense muscles, but they don't belong to me. Mine are all rubbery and weak right now. This boyfriend of yours is quite bold, and very hard...to resist!\"\n\nThat evening was the ice breaker for Ashley. She finally felt comfortable with her relationship with Gwen and Steve. She often repeated in her head the things that Gwen had told her about Lisa's flirting and teasing and how much Steve enjoyed it. Gwen seemed totally fine with it, so Ashley decided that she was going to take a page from Lisa's book.\n\nRelatives began arriving Friday afternoon for the weekend taping of the Christmas show for CBC. Clyde kept his stars working on the movie while he had a couple of stretch limos pick up the new arrivals at the airport. It happened that Gwen's family arrived at nearly the same time as Steve's, so they wound up sharing a ride to the hotel in a limo.\n\n\"Jen!\" yelled Kate when she spotted Steve's cousin rolling her bag toward the limo. \"Isn't this cool? We get to be in a TV show. None of this would've happened if your handsome cousin hadn't fallen for my beautiful sister so hard. Look what's happened already. Movies, concerts, TV shows, and there'll be a lot more, I'm sure.\n\n\"Hello, Mrs. Bennington. It's nice to see you again. I'm glad you came for the show. It's great that Steve finally has some family to share these amazing accomplishments with!\"\n\n\"Young lady, are you my grandson's girlfriend, Gwen Anderson? You look different on TV. I'm William Patterson, Steve's grandfather, or so I am led to believe.\"\n\n\"I wish I was Gwen! She's my sister, and Steve's girlfriend. I'm Kate. This is my mother, Paula, my dad, Ted, my Aunt Diane, my uncle Will, and my cousin Stephanie. The two older people getting into the car are my grandparents. Steve is your grandson? You must be really proud. He's the best looking, strongest, bravest guy I've ever met!\"\n\n\"I'm sorry I didn't get to introduce everyone,\" apologized Jen. \"It's hard to get many words in when Kate's wound up. This is my grandfather, William Patterson. He came to meet Steve and see what the fuss is all about. Gwen invited us to their graduation next Tuesday, so you'll be seeing a lot of us the next few days. I'm so excited! All my friends are so jealous that I get to hang out with Steve Hammer, Gwen Anderson, and Jordan Quick.\"\n\nEventually everyone managed to find a seat in the stretch limo and get under way. Paula broke the brief silence. \"Mr. Patterson, your grandson is a very fine young man. My family has had the pleasure of being around him for the past eight months. He's saved our lives. He's taught us about honor, sacrifice, and determination. You really need to show him some love and respect. He was extremely lonely when we first met him. He was quite sad about losing his parents. He had no idea he even had relatives. I may seem to be overstepping my bounds here, but his happiness is very important to everyone in my family. \n\n\"You stated that you were 'led to believe' that Steve is your grandson. That statement implies some doubt, at the very least. If you have any doubts about Steve, I suggest that you forgo meeting him. He was hurt badly when your wife and Janice rejected him. He knew his mother had died, but when he saw Janice, he reverted back to the boy that loved his mother more than anything on earth. He picked her up and hugged her, somehow believing that his mother had come back to him. Janice scolded him and demanded to be put down. When your wife arrived shortly afterward, she was even colder.\n\n\"That wonderful young man was suddenly in pain, rejected by his own family, much like his mother was years before. My daughter is young and idealistic, so she asked you to take part in this show, thinking it would be nice for Steve to have family around him for what is supposed to be Christmas. I'm older and I've seen more. I won't stand by and see any of you treat Steve with anything less than complete acceptance and love. If you cannot, or will not do that, I think you should board the next jet back home.\"\n\n\"Mrs. Anderson, I now see why Steve was so taken with your family. That was well said and straight from the heart. Your warning will be taken under consideration. I'm a wealthy man, so I spent some of my money on investigators to find out if your young knight was a descendant of mine. He is my grandson. Of that, I am now certain. I didn't mean to suggest otherwise.\n\n\"I fear that he may not care to see us, or warm to us in any way. Jen assures me that he likes her, but who wouldn't? As you can easily see, she's a beautiful young lady. Janice assures me that she can see his mother, her sister, in his eyes. She has also told me of her regret that she was so unfriendly when she first met Steve. In her defense, she had no idea who he was, nor why he was hugging her.\n\n\"This horrible mess falls on my shoulders. I should have put my foot down when my wife gave her ultimatum to Jen that fateful evening. I knew it was wrong. I knew Jen was a loving, loyal girl that would never turn her back on the man she loved. I just didn't know that she'd act so quickly and so permanently. It's been a source of shame and pain for me ever since. Your staunch defense of the lad is very heartening. I wasn't there to help him, to guide him, to do the things that a grandfather should. The fact that he somehow found a family like yours is a source of great joy to me. Madam, please accept my apology for any slight, real or imagined.\"\n\n\"Okay! We cleared the air. I'll do my best to make up for my less than warm behavior to Steve that day in Paris,\" promised Janice. \"I'm very impressed with the depth of your emotions, Paula. Steve is obviously more to you than your daughter's beau. He's very important to you as well as the rest of your family. That much is apparent. This isn't about his success or fame. All of you genuinely love and admire him, so I'm certain he is even more impressive than we are led to believe from the press reports. ",
        "\"My father and I have come here to love him and to try to earn his forgiveness. My mother has been ashamed and embarrassed since we met you in Paris. She'll never forgive herself, and she has no expectations of Steve forgiving her. That's why she refused to come. Jen simply adores Steve and Gwen, and she has spoken of little else since she spent time with them in Paris. We appreciate that Gwen was so thoughtful and pray that Steve will eventually learn to tolerate us, if not love us.\" \n\nSteve and Gwen were finished for the day and changing into fresh clothes when there was a knock on their door. Gwen opened the door to find the hallway filled with people.\n\n\"Mom! Kate! Stephanie! Come on it. Dad, give me a hug! Uncle Will and Aunt Diane, it's so great that you came!\" welcomed Gwen to her family. \"Jen! We're so glad you could make it! Janice, it's really nice to see you again. Grandmother! Thanks for coming!\"\n\nThen Gwen went silent as her gaze fell on the older, tall man behind Janice. \"Grandfather Patterson? It's so good to meet you!\" cried Gwen as she threw herself into the man's arms.\n\nWilliam Patterson had spent a lifetime keeping his emotions in check. He had been very successful at business, and keeping his feelings to himself was a big part of his success. \n\nWhen the beautiful young woman greeted him so warmly and referred to him as 'Grandfather', tears suddenly filled his eyes. He didn't need his years of experience reading people to know that he held an exceptional young woman in his arms. He responded by hugging her tightly as he closed his eyes to prevent others from seeing his emotion.\n\nGwen finally stepped back and led the older man into the room. The women had been hugging and kissing Steve in greeting. As Gwen approached, her family stepped back away from Steve.\n\n\"Grandfather Patterson, this is your grandson, Steve. This is your grandfather, Steve, so show him respect,\" directed Gwen as she noticed Steve shrinking back.\n\nSteve recognized the tenor and import of Gwen's greeting. Not wanting to disappoint Gwen, he offered his hand to the older man. \"Sir, it's nice to finally meet you.\"\n\nWilliam Patterson studied the young man as he took his hand. He had Jen's eyes. That was obvious. He carried himself like a military veteran, tall and straight. His eyes were clear and unblinking, His grip was strong, and his voice was even. Going against everything he had promised himself, William Patterson began to break down. \n\nAfter he released Steve's hand, he stepped closer and embraced the younger man, much as he had Gwen. Gwen watched closely as Steve's arms slowly moved up and wrapped around his grandfather. She turned to Jen and winked. When the two men parted, Steve turned to Gwen and pulled her to his chest and hugged her tightly. \n\nEveryone watched silently as Steve finally released Gwen far enough to reach down and kiss her. The two remained with their lips locked until Kate began to complain.\n\n\"Hey! Why don't you two get a room? Wait! This is your room, isn't it? Maybe you'd like us to leave. We only flew a million miles to see you. Why worry about us?\"\n\nGwen extricated herself from Steve and apologized. \"Sometimes Steve has to express his feelings nonverbally. He was feeling pretty emotional and he needed me to help him with those feelings. We're absolutely delighted that you all came to be with us at Christmas, in a manner of speaking. Charlotte checked you all in and has your room keys. I'll call her and get them. Didn't Billy come with you?\"\n\n\"He booked a later flight. Charlotte knew about it. He'll arrive in an hour or so,\" responded Kate. \"This is way cool! We get to stay in a real nice hotel and appear in a TV show. Gwen, you're the best sister ever!\"\n\n\"Thanks, Kate. We appreciate that all of you took the time to come. We really want this to be a family Christmas, even if it's six months off. Let's meet in the restaurant in an hour for dinner. Clyde told us that everything's paid for, including meals, tips, and room service. Let's have a nice meal and catch up on everything. We have a private dining room reserved for dinner so we can take as long as we want and be as noisy as we want. See you in an hour!\"\n\nLisa had joined up with Jason when he landed in the capital to switch flights. The two of them flew in to LAX on the same flight as Billy. As they were shown to their waiting limo, an attractive woman called to the driver, asking if he was supposed to drive Cindy Quick to her hotel. As the driver was responding to her inquiry, a very pretty girl approached the car. \n\n\"I know who you are,\" stated Billy. \"My girlfriend's Charlotte. She was at your house a couple weeks ago. You're Ms. Summers' sister, Becky.\"\n\n\"You're Billy? Charlotte told me about you! It's nice to meet you. Pardon me, but are you Gwen's sister, Lisa? You're so beautiful. Gwen showed me your cover for 'Shape' magazine. You sure have an amazing sister, and her boyfriend is... , well, he's...\"\n\n\"A hunk? A doll? A beautiful man? A dreamboat? Am I getting close?\" asked Lisa as she took Becky into her arms and hugged her. \"You're Ashley's sister? You look like her. You're both beautiful.\"\n\n\"Thanks! I went to my class formal with Steve. He called me 'Lefty' and made me feel great. He was the best date I ever had. He sang to me and danced with me. He was a gentleman, too. He looked great in his tux. He kissed me right after we met. He says I'm not handicapped and he's right.\"\n\n\"Wow! That sure sounds like Steve. He called you 'Lefty' and it was great? Only Steve could pull that off. It sounds like you had a good time with him. Gwen doesn't loan him out very often, so you were quite lucky. Somehow, I think you're going to be very happy to see him when we get to the hotel.\" \n\n\"My daughter's Jordan Quick. She hasn't spoken to me more than a couple times in the last year. I'm afraid that I made some mistakes and she's not very willing to forgive me. I've been reading about her though, and she's doing very well again. I was invited to this affair by Gwen Anderson, Jordan's best friend. You're Gwen's sister, and the rest of you are her friends? Have you met Jordan?\"\n\n\"She was at my house a couple weeks ago and she's beautiful! So is Gwen. The best thing about her is how nice she is to everyone. You have to be very proud of her. I hope you can reconcile your differences,\" offered Becky.\n\n\"What about this Steve Hammer?\" asked Cindy Quick. \"Jordan got into some trouble with him. Her picture was all over the internet. Do you think he took advantage of her, or got her drunk so he could be photographed with her to help his career?\" \n\n\"No!\" stated Lisa flatly. \"Steve was helping her. He has no career aspirations. At least not show business. He wants to be a SEAL and he's the bravest, kindest man I ever met, except for Jason. You'll not fare very well this weekend if you malign Steve in any way. It won't take you long to determine every woman at this event is in love with Steve, at least a little bit. Isn't that right, Becky?\"\n\n\"It's embarrassing, but true. I know I fell in love with him when he kissed me and took me to the formal and made me realize that the loss of a hand isn't the end of my life. If he's like that with other girls, they're going to be in love with him, for sure!\" \n\n\"Well, I'll withhold judgment,\" replied a skeptical Cindy Quick. \"I've always found that when something or someone seems too good to be true, there's a reason.\" \n\n\"Everyone is already checked in and the rest of the group is waiting for us in the hotel restaurant. We'll have dinner first, and then see our rooms. This'll be a great weekend!\" enthused Lisa as she snuggled closer to Jason. \n\nWhen the final group entered the reserved dining room, Gwen and Steve hurried to meet Lisa and Jason. While Steve grasped Jason's shoulder and shook his hand, Lisa and Gwen hugged each other tightly.\n\n\"Jason and I are sharing a room. It'll be our first time together. Will Steve be okay with that?\" whispered Lisa.\n\n\"I think you need to ask him, if it's important to you,\" replied Gwen with a big smile. \"I think it's wonderful that you've found such a great guy.\"\n\nAs Lisa hugged Steve, she spoke quietly into his ear. \"Jason and I are sharing a room this weekend. It'll be our first time together. Do you think less of me for wanting to sleep with Jason?\"\n\n\"I'm surprised you have to ask,\" responded Steve with a big grin as he lifted Lisa off her feet and swung her around. \"He's a great guy and he seems to love you. I've very happy for you both! I'd forgotten how beautiful you are!\"\n\nLisa pulled Steve down for a kiss in front of Jason and everyone else. \"Thanks, Steve. I wanted you to approve because I know you're way better than me at telling if men are the real deal, or jerks. You've confirmed what I believed already.\"\n\nAs the two couples interacted, Diane, Paula, and their mother watched. \"Look at those two men,\" observed Carolyn. \"Your daughters have picked the cream of the crop. Strong, handsome, loyal, and brave, are a few of the words that describe those two. You've done a wonderful job with your daughters and it shows. You'll have beautiful grandchildren with loving, protective parents.\n\n\"I love your dad, and he was a very good husband and father. We were delighted when you girls settled on Ted and Will. They've proven themselves to be fine men and excellent husbands and fathers. They helped you raise great kids. That said, what Gwen and Lisa have is beyond anything I ever dreamed possible. Those two men radiate masculinity, combined with intelligence and humility. Kate and Stephanie have tough acts to follow. The good thing is that Steve and Jason are the kind of men that will interact with other men like them. If Kate and Stephanie meet enough of Steve and Jason's friends, they'll wind up with some great men, too.\"\n\nMeanwhile Jordan had advanced to meet her mother. She held Charlie's hand tightly as they moved closer. \"Mom, this is Charlie. I told you about him a few times in emails. He's my boyfriend, my song writing partner, and I love him.\"\n\n\"Charlie, it's a pleasure to meet you. Jordan always went for the handsome ones, just like her mother,\" greeted Cindy as she hugged Charlie to her ample bosom.\n\n\"I see where Jordan gets her great looks, Mrs. Quick. It's very nice to finally meet you. If you're wondering, I'm in love your daughter.\"\n\n\"I had no doubts about that!\" laughed Cindy Quick as she released Charlie. \"She's found new friends and rejuvenated her career. I have to thank you for all you've done for her. I'm afraid I wasn't a very good role model for much of her life, but I'm ready to do anything I can to make that up to her. I'm sober now and expect to stay that way.\"\n\n\"Mom! You never told me that you quit drinking. Are you done with the drugs, too? Don't lie to me!\" threatened Jordan as she held her mother's hands.\n\n\"I've been clean and sober for three months now. When you went into rehab, I really went crazy. I was out of control, but when you started breathing life back into your career, I decided I had to clean up my act. I knew I had treated you badly and that you hated me. I also knew that if there was ever going to be a chance for you to forgive me, I'd have to be sober.\n\n\"When you have a wonderfully talented daughter making hit records, TV shows, and movies, it's pretty embarrassing when she won't even speak to you. I don't expect you to forgive me right away, but please give me a chance to prove that I've changed.\" \n\n\"You'll have that chance this weekend. If you're telling the truth, you're already forgiven. I've grown and learned a lot the past few months. I'm too happy to spend time trying to punish you, Mom. Just be honest with me and don't ever think that I'll go back to that life I had before rehab and meeting Steve, Gwen, and her family.\n\n\"Okay, everyone, please welcome my mother, Cindy Quick. I don't want to take too much time so I'll introduce her to the stars, Gwen Anderson and Steve Hammer. They've given me my life back, along with Charlie and Gwen's family, who are sitting over there,\" pointed Jordan. \"As we eat, or whenever you get the chance, introduce yourself to Mom. We've had some rough times, but Gwen just wouldn't let me stay estranged from her. Gwen's taught me that family is the most important thing in having a happy, successful life. Thanks, Gwen!\"\n\nGwen hugged Jordan's mother and then stepped back so Steve could introduce himself. Steve placed his hands under Cindy's arms and lifted her up, so her face was close to his. He turned his back to the group and whispered to Cindy.\n\n\"Your daughter is a loving, talented, caring, beautiful woman. She deserves happiness, and that includes having a mom she can be proud off. If you're kind and loving to her, I'll be your friend forever. If you hurt her again, I'll respond accordingly. Now do you still want to hug me?\"\n\nCindy Quick was taken totally by surprise with Steve's obviously strong emotions for her daughter. She studied his face for a few seconds and then threw her arms around his neck. \"You've got a deal, Big Boy! I've never had a friend like you are to Jordan, but I can already tell that I'd like to have one. Does Gwen know you love Jordan?\"\n\n\"Yes, I do,\" responded Gwen quietly into Cindy's ear. \"Steve loves several girls, but none more than Jordan. I love her, too. We'll do just about anything for her. She's our sister now.\"\n\n\"What just happened?\" demanded Jordan as Steve placed her mother back on her feet. \"What did you say to Mom?\"\n\n\"They pretty much told me that they care for you more than you may realize and that I'd better put on my big girl panties and be the mother you deserve. And I agreed,\" responded Jordan's mom as she took her seat next to Jordan.\n\n\"See how they are?\" whispered Jen to her mother and grandfather. \"They care about people, especially family and friends. Gwen's family welcomed Steve when he started dating Gwen. He's an orphan and thought he had no relatives on our side and just one uncle on his father's, so he cherished Gwen's family. All of these girls love him, and he loves them back. Gwen understands how it is. She isn't jealous at all because she knows he's totally devoted to her, but if you're their friend, they'll do anything for you. Jordan is extremely close to them. Kate and Lisa are blood and no one should ever do anything to hurt either one of them with Steve around. I'm blood, too, and I know he'd do almost anything for me.\" \n\n\"Look how Steve and Gwen made sure that Jordan's mother was on her best behavior,\" pointed out Ashley to her sister. \"They think the world of Jordan and didn't want her hurt by her mom. She's been pretty miserable to Jordan over the years. She's an alcoholic and used a lot of drugs. Gwen talked Jordan into letting her invite her mother in hopes that they'll reconcile. They just made sure that her mom gets with the program. That's why those two are so special. Just being around them makes you a better person. The fact that they're incredibly good looking doesn't hurt. All of these girls here are in love with Steve.\" \n\n\"Yeah, like the one sitting next to me,\" countered Becky. \"You have it pretty bad for him. Mom and I talked about it after you left. We both noticed how you looked at him, and treated him. You know what? We decided that we didn't blame you and that I'd do the same thing when I'm around him. Gwen doesn't seem to worry about anyone stealing him away. She told me that she enjoys seeing Steve be so nice to other girls because it helps them feel better about themselves. That means she won't mind if I flirt with him every chance I get. You're with him all the time. Have you done anything naughty to get his attention?\"\n\nAshley blushed as she thought about the morning she woke up almost naked with Steve sitting by her bed. Then later she discovered that she had offered herself to Steve and had even put her nipple in his mouth!\n\n\"I'll tell you a story tonight when we go to bed,\" offered Ashley. \"You'll just have to promise to never tell Mom, or anyone. It's pretty embarrassing, but not nearly as bad as it might have been.\"\n\nAfter dinner, Lisa found a moment to be alone with her mother. \"Jason and I are sharing a room. It'll be the first time that we slept together. I want you and Dad to know and approve. I know he isn't Steve, but he's a great guy and he's been so good to me. I've fallen for him, Mom. Steve likes him. I told him we were sleeping together and he was happy for us.\"\n\n\"I can't very well ask you not to sleep with Jason after I allowed Steve and Gwen to sleep together in our house,\" reasoned Paula. \"Besides, if Steve gave his approval, he must be a pretty special young man. Steve would never say it was okay if he didn't believe it. He loves you way too much to stand by while you make a mistake. Ted is the same. He likes Jason. He told me that he's going to give him 'the talk' later this evening, so warn Jason. He gets to sleep with you, but he has to listen politely while Ted explains how he expects his daughter to be treated.\"\n\n\"Dad's going to give Jason 'the talk'? I heard he gave one to Kate's prom date. Now he's doing it to my boyfriend, the guy that's graduating from West Point in few days and will soon be training to be an Army Ranger.? I'm so proud of Dad! He really loves us girls. You did pretty good when you found him. Did you have any idea what a great father he'd be?\" \n\n\"Honestly? I had no idea. I guess I should have. He was polite to his mother and respected his father. I guess I saw the clues but was too young to think about them, or it was all subconscious or something. He did turn out to be a pretty good catch, didn't he?\" asked Paula rhetorically.\n\n\"Jason and Steve both think highly of Dad. That pretty much tells the whole story. Those guys see how Dad treats us girls and you. They respect him for being a good father and provider. Jason's going to be so happy when Dad gives him 'the talk'! I told him everything Dad said to Steve that night and how he even gave one to Kate's prom date.\"\n\nThe hotel had a game room with a couple of regulation pool tables. The entire group gravitated to that room after dinner. Jason was preparing to break when Ted began speaking to him. Jason immediately set the pool stick down and listened to Ted politely.\n\n\"I had this talk with Steve when he first came to date Gwen. Looking back, I think some of the family members felt I was unreasonable, but I don't think I was. If you are going to date my daughter, I expect you to respect her. I expect you to avoid driving under the influence of alcohol and to never use drugs. I expect you to be willing to give your life for her if necessary. I have to admit I've added that after seeing Steve willingly risk his life for Gwen, Paula, Kate, and Lisa. I expect no less from you. Do these demands seem unreasonable or too exacting to you?\"\n\n\"Sir, I will do everything in my power to live up to your expectations. I'm honored to be able to know a father like you, and a family like the one you've raised. Your daughters are incredible women, as is your beautiful wife. If I ever disappoint or fail to meet your expectations, please let me know. I'll do my best, sir!\"\n\nTed beamed as Jason shook his hand just before Lisa threw herself into Ted's arms. \"That was a great 'talk', Dad! I don't think that soon-to-be Ranger will trifle with me. Look how well it worked on Steve. Now I have my own protector, like Gwen has. You're the best father ever!\"\n\nEveryone made their way to their rooms after a few games of pool and a great deal of talk. Steve and Gwen spent their time visiting with their guests and thanking them for making the trip to appear in the Christmas show they were taping. Steve managed to chat with his grandfather and aunt. He found himself enjoying their company more than he expected. It was impossible for him to look at Janice without seeing his mother. He apologized for his mistake in Paris and explained that he couldn't shake the feeling that he was looking at his own mother.",
        "For her part, Janice apologized for being so rude when they first met. She explained how proud she and Jen were of his achievements. She told him that it was her honor to remind him of his mother; whom she missed desperately. \n\nBefore entering their rooms, Lisa hugged Gwen. \"I wish this was my first time, like it was for you and Steve. I would very much like to be able to give that honor to Jason. Your first time was in Paris, in sight of the Eiffel Tower. That must have been amazing.\"\n\n\"It was, but mostly because Steve loved me so much. You'll be a very happy woman tomorrow. Jason is a great guy. He'll be strong, but gentle, unless you want him to be something else. Making love to someone you love is the special part. It isn't about Paris, L.A. or back home. Remind me to tell you about our love scene and how rough it was and how incredibly hot it made me. You won't believe it.\"\n\n\"Now I'm curious! Steve was rough? I never would have guessed he could be that way. He adores you. Did he hurt you?\" asked Lisa as she glanced at Steve talking with Jason.\n\n\"If you call having orgasms so intense that your stomach hurts for a couple days, then the answer is 'yes'. He hurt me pretty good!\" laughed Gwen.\n\n\"You had orgasms while filming the scene? Is that considered porn? Could anyone tell?\" asked Lisa incredulously. \n\n\"They couldn't tell for sure if we were acting or doing it, and we did a little of each. Steve had his head under my skirt and tickled Ms. Kitty with his tongue and it set me off like nothing I ever felt before. I couldn't believe he'd do that with so many people watching us. Wait until you see the movie. I don't know how much they'll edit out.\"\n\n\"Wow! Now I'm really ready to jump Jason's bones! We'll have to do a ladies' lunch so you can tell us all about it. Mom, Diane, and Grandmother will be amazed. I can't wait to hear about it.\"\n\n\"I don't know about telling Mom, but Grandmother will love the story. She must have been something in her day. For my first time with Steve, Mom, Diane, Stephanie, Kate, and Amber Stahl each hugged us and gave us some advice. It was the most widely known deflowering in history!\"\n\nJust then Steve stepped close to Lisa and hugged her tightly. \"I'm sorry to interrupt your conversation, but Jason is getting a little nervous and excited. It would be cruel to keep you guys in the hall any longer. I talked some more with Jason. He saved my life, so that makes me biased, but it's my opinion that he loves you totally and will treat you like a queen. He's smart, strong, honorable, and decent looking. If he were a SEAL instead of a Ranger, he'd be perfect!\"\n\n\"Thanks, Steve! You know I trust your opinion more than my own in matters like this. I thought he was special, but you've just sealed the deal. I'm going to tell him that I love him tonight. Do you think that'll scare him off?\"\n\n\"What I think is that he'll be asking you to marry him someday. He loves you, Lisa. Any man would, but Jason isn't one to toss the words 'love and marriage' around lightly. He's a keeper. Just love him, and trust him. He'll always do right by you. I'm sure of that.\" \n\nEveryone enjoyed the two days they spent taping the TV program. They learned how shows were produced, and they looked forward to seeing themselves on TV. Lisa was exuberant while Jason had a constant smile on his face. He and Steve spent as much time together as they could and their girlfriends noticed. \n\n\"Have you noticed how well Jason and Steve get along?\" asked Lisa. \"When I first tried to explain my feelings for Steve, Jason got angry and upset. He gradually came to understand and now they're best buds. I guess Jason's over any jealousy issues.\"\n\n\"Steve owes Jason his life. That's something that binds them together. They both love you and that binds them together. Jason is beginning to love Kate and me and that will make them even tighter. They're real men, Lisa. They don't beat their chests and make stupid boasts. They treat people, especially family, with love and respect. They're strong and capable, but kind and gentle, unless they're called upon to be forceful. We both done good!\" laughed Gwen.\n\nIt wasn't until Sunday afternoon that Lisa managed to get all the ladies together for a late lunch. She told them that there was an important topic of interest to be discussed. That piqued their interest and they all arrived at the dining area early.\n\n\"Gwen and Jordan have already done their love scenes with Steve. Ashley and Charlotte were there to see them and I thought we all should know what to expect when we see the movie. We know how Charlotte loves to tell a story, so I'll ask her to recount what she witnessed,\" stated Lisa as she turned the floor over to Charlotte.\n\n\"Let me say that I pretty much soaked two pair of panties watching those girls with Steve. Jordan and Steve were all gentle and considerate with each other, like normal people would be, except that she's a goddess naked and Steve is, well...Steve.\"\n\n\"They were naked?\" asked Gwen's grandmother. \"Now I simply have to see that movie and buy the unedited DVD!\"\n\n\"You won't be disappointed! I promise that,\" laughed Charlotte. \"I guess you all know it started out as a PG movie, but now's it's going to be an R rated flick. That's because of all the heat Jordan, Gwen, and Steve brought to the love scenes. \n\n\"Watching Steve with Jordan was like watching a fairy tale with a beautiful, incredibly well stacked princess and a strong, handsome prince exploring and enjoying each other. Steve held Jordan's breasts and kissed them gently before he pulled her onto his lap so very slowly. Jordan closed her eyes and moaned and trembled. Before they were done, she did that several more times. \n\n\"It doesn't sound as exciting as it looked because it's hard to imagine how beautiful Jordan looks naked and how amazing Steve is. They were so sexy; I could barely stand still enough to watch. It was perfect.\"\n\n\"So my daughter is going to be naked in a major motion picture? Making love to Steve Hammer? How do you think that makes me feel?\" asked Cindy Quick.\n\n\"Jealous?\" quipped Kate. \"Horny? Wet? Excited? Am I getting close?\"\n\n\"All of that,\" admitted Cindy. \"You can add proud to the list. I know the money Jordan gets for the movie is being donated to the hospital fund. I know that she and Steve will do a great job and it'll only help her career. I now know that Steve and Gwen will never deliberately hurt Jordan, which is more than could be said for me over the past few years. I can't wait to see the film.\"\n\n\"Mom! That's not really true. You weren't that bad. I was a pretty miserable teenage star. You had your hands full and with no husband around to help you.\"\n\n\"Having no husband was my fault. I never even believed in love or marriage until lately. I'm just beginning to understand what I've missed. Enough about me. Go on with your story, Charlotte.\"\n\n\"Well, Jordan pretty much threw it in Gwen's face that she did an amazing love scene with Gwen's man and she didn't think Gwen would ever be able to top it. That was throwing down the gauntlet! Gwen announced that Steve wasn't going to get any sex until after their scene because she wanted his full attention.\n\n\"In the movie, Jordan is the beautiful cheerleader type that all the boys fall for. I don't know where that stereotype came from. What would any guy see in Jordan? Gwen is the bad girl from the wrong side of town. She was raised in a rough neighborhood with a tough family. Somehow, Gwen and Steve are always at odds in the movie, but they gradually develop a real sexual tension that becomes tangible half way through the movie. Does Steve want the blonde cheerleader? Or does he want the tough acting, insulting, dark haired problem child?\n\n\"In their scene, Steve made some cutting remark to Gwen about being a slut and Gwen was supposed to slap him. Well, she slapped him so hard his head spun around! He was taken completely by surprise. He called Gwen a bitch and grabbed her shirt and pulled her close to him. Then he suddenly jerked his hand and most of Gwen's shirt was in his fist and her rather firm, perfect breasts were on display. It was Gwen's turn to be shocked. She took another swing at Steve, but he caught her hand with almost no effort, and then sneered at her. Gwen was mad a wet hen by then and grabbed Steve's shirt with her free hand and pulled the front of it completely off Steve. \n\n\"Steve got really pissed, so he bent Gwen's arm behind her back, and forced her big breasts against his bare chest. That alone will be worth the price of admission. Then he reached under her short skirt and ripped her thong off and held it up to his face and sniffed it! He smirked and nodded before suddenly bent down and forced both his hands between Gwen's knees. Then he grabbed her hips from behind and lifted her off her feet. His muscles were all bulgy and sweaty as he easily picked up Gwen, walked ahead and held her against the wall. Then he slowly raised her up and rubbed his face in her neck and nibbled her all over her, biting and kissing as he slowly raised Gwen up so his face was in her cleavage. All this time, Gwen was beating on his back and shoulders with both hands. When he started working on her incredible breasts, Gwen's struggles seem to lessen. \n\n\"Then Steve slowly raised her higher, kissing and biting her toned abs, but he kept raising her higher! You can see where this is going. Gwen realized what was happening and feebly covered her breasts with her hands and arms as Steve ducked his head under her skirt!\"\n\n\"Oh my God!\" exclaimed Paula as she fidgeted in her seat. \"This was all on film?\"\n\n\"You bet it was. Gwen put one hand down to hold Steve's head as her face went from shock to rapture. Then she moaned really loud and shook all over. Steve slowly lowered her so her breasts were back in his face. Gwen actually held her left breast up and offered it to Steve! He bit down on it and Gwen had another spasm and moaned again. Then Steve slowly lowered her to the floor and they kissed hard.\"\n\n\"Wow!\" gasped Kate. \"That's so hot! I can't sit still and listen. Gwen, you used to be the nerd of the school and now you're the sex goddess. I hope I can make a movie with Steve someday. That was some scene!\"\n\n\"I didn't say that was the end,\" cautioned Charlotte. \"When Steve released Gwen, she slapped his face again, and hard. Then she dropped to her knees and pulled down his pants and boxers in one move. That was my favorite part. Then she bites Steve's stomach and abdomen. Then she.....\"\n\n\"Okay, they get the picture!\" interrupted a very red-faced Gwen. \"It's a movie! We were acting. That's all!\"\n\n\"I watched it all,\" offered Ashley. \"It was incredibly hot! Gwen's a little embarrassed but I'm here to tell you that every woman in the country is going to wish they were her when they see the movie. She didn't do anything the rest of us wouldn't do if we had the chance. It was like watching the Mona Lisa being painted. It was art and it was amazing.\"\n\n\"I guess we know how my sister feels about Steve now, but I have to agree with her and Kate. I wish it was me making that movie with Steve,\" asserted Becky. \"He's the best looking, nicest guy I've ever seen!\"\n\n\"So anyway, Steve only allowed Gwen to service him for a short time before he pulled her up by the hair, kicked off his pants from around his ankles, and carried her into the bedroom. He sat down with her on his lap, flipped her around and spanked her perfect ass several times!\"\n\n\"Wow!\" blurted Diane. \"Steve spanked Gwen? You saw him do that? What did Gwen do? Did she get mad and slap him again?\"\n\n\"Au contraire!\" chuckled Charlotte. \"Steve tossed her on the bed and then proceeded to mount her missionary style, but like a stallion. Pretty soon they two of them are sliding back and forth. Then Gwen moaned again and suddenly flipped Steve over and rode him for a minute or so. Finally Steve groaned, tugged her down and kissed her for a long time. Then Gwen rolled off and lay next to him. They were both panting hard, but with huge smiles.\"\n\n\"Now I feel like I have to go find Jason!\" groaned Lisa. \"I can't wait to see the movie. My little sister sure has grown up. I'm so proud of Gwen. She sings, dances, acts, plans on being a surgeon and, along with Jordan, is voted the sexiest woman in the world, before anyone even sees the movie!\" \n\n\"Do you believe all this, Mom?\" asked an amazed Jen. \"Steve and Gwen are performing at the wedding for the governor's daughter. Gwen and her sister are bridesmaids. Then they're going to Moscow for a state dinner with the presidents of the two most powerful nations in the world, and they're taking us! They're on TV, movies, and have hit recordings. Have you even known anyone like them?\"\n\nEveryone headed to the airport Sunday evening after the finishing the show. Many in the group were going to attend graduation in Sparta on Tuesday. Ashley was going to drive home with Becky because her graduation was scheduled for Monday evening.\n\n\"Ask your mom if she'd mind having us for guests again,\" requested Steve to Ashley. \"We'd like to go to Becky's graduation Monday. If she'd let us stay a couple nights, it would be great. Jordan and Charlie would need their own room and I can sleep on the couch. We wouldn't be too much trouble.\"\n\n\"Are you kidding?\" laughed Ashley. \"Mom will be delighted to have you stay over. She's the hit of the town after the last time you stayed. Everyone's been calling her and stopping her on the street to ask about you guys and to tell her how impressed they are. If you stay and go to the graduation, it'll prove it wasn't a fluke. Becky'll be on cloud nine!\" \n\nMonday evening found Jordan, Charlie, Gwen and Steve sitting with Ashley and her mom in the school auditorium. Before the ceremony began, the group was besieged by autograph seekers. Once the music started, everyone quickly took their seats.\n\nAs Becky found her place in line before the ceremony, the other kids were talking excitedly about her guests. Becky beamed with pride as she described her weekend in L.A. taping a television show. She had come a long way from the depressed young woman that had lost her left hand.\n\nBecky's special friends stood and cheered for her when she won a citizenship award and again when she received her diploma. No one in the building could doubt just who the famous trio was there to see.\n\n\"Excuse me,\" politely began a tall black man to Steve after the ceremonies had concluded. \"I'm Jeff Wilson. My daughter was valedictorian of the class tonight. We're having a party beginning in half an hour at a local restaurant. We're having a buffet and a band. All the kids in the class have been invited, along with any parents that care to attend. We'd be honored if you and your friends would stop in for awhile.\"\n\n\"I'll have to discuss it with the Summers and my friends, but I certainly thank you for the invitation, Sir. It's very generous of you.\"\n\n\"I'd like to talk to you about your father. I served with him in the Navy. My daughter is going to Annapolis next month and I thought you may want to meet her.\"\n\n\"Sir, I'll be there. I can't speak for the others, but I would love to talk with you about Dad and the Navy, and meet your daughter. Just give me the directions and I'll be there, at least for a while,\" replied Steve quickly.\n\n\"Of course we'd like to go with you,\" assured Jordan when Steve told his friends about the invitation. \"Gwen has to go to protect her territory. Did you see how beautiful that girl was? We don't want to leave Steve alone with her.\"\n\n\"Naomi won't steal Steve away from Gwen,\" promised Becky. \"She isn't gay, but she's really rough on men. Some of the guys think she's racist, but I never heard or saw her do anything to make me think that was true. It's more like she dislike all males, and Steve is, above all else, very male.\"\n\n\"This should be interesting. It's like the immovable object meeting the irresistible force,\" chuckled Gwen. \"No matter how much she dislikes men, she can't dislike Steve. He'll bring her over to the other side.\"\n\n\"Hello, Mr. Wilson. This is Jordan Quick, Gwen Anderson, and Charlie Burns,\" introduced Steve half an hour later. \"I think you know Ashley and Becky Summers.\"\n\n\"Thanks for coming, and call me Jeff. My dad was Mr. Wilson. You kids have done an amazing job raising money for your local hospital with your concerts and TV shows. Saving a thousand or so people was pretty impressive as well. I'm honored that you decided to come to our little party for Naomi. This is my wife, Julia.\"\n\nSteve had been studying Jeff Wilson as he spoke. He looked vaguely familiar. Then Jeff introduced his wife and Steve immediately recognized her. \n\n\"Mrs. Wilson! I haven't seen you for years, but you're still beautiful! I remember how nice you were to me in Cuba. I didn't make the connection with your husband until I saw you. You look great!\"\n\n\"You were a charming boy back then,\" laughed Julie Wilson. \"But now you're really smooth. I have to admit that I'm pleased that you remember me. I've been following your successes since you moved to Sparta. You've managed to accomplish some extraordinary achievements, with the help of these beautiful ladies.\n\n\"Like Jeff said, we are delighted that you could come to Naomi's party. You're both even more beautiful in person than you are on television. I watched that Emerson River rescue live on TV and I have to admit that I cried all the way through it. What you kids managed was amazing. The fact that you had the presence of mind and the courage to attempt those harrowing feats was unbelievable. I watched that 'Lady in Red' video after I saw the rescue on television. That was your first date? Now you're lovers, stars, and successful students. I'm very impressed.\"\n\n\"I was there the day your father finally got tired of Murphy's bragging and made that bet. Watching you shoot was something I never forgot,\" admitted Jeff Wilson. \"Here comes Naomi. I'll introduce all of you. Do you remember her from Cuba, Steve?\"\n\n\"Actually, I do now. She was really pretty, even back then, but she was more mature than me and hardly even noticed me in classes.\"\n\n\"I think you'd be surprised,\" hinted Julia Wilson as her daughter approached. \"Naomi, you know Becky Summers. This is her sister Ashley. These are her friends, Gwen Anderson, Jordan Quick, Charlie Burns, and Steve Hammer. You had some classes with Steve when we were stationed in Cuba.\"\n\n\"Hello, everyone! Thanks for coming to my party. I heard that you were in town a couple weeks ago and Steve went to the formal with Becky. Everyone was talking about it the next week. I've watched you perform on television and you're very good. You were voted the two sexiest women in the world in one of the magazines. Steve saves lives like some guys collect baseball cards,\" finished Naomi as she shook everyone's hands.\n\n\"That was a great valedictory speech you gave tonight,\" praised Gwen. \"You're going to the Naval Academy and so is Steve. Maybe you guys will get to help each other find transportation back home now and then.\"\n\n\"I'm going to be pretty focused on my studies. I need to prove that I belong there. It isn't easy to be a black woman in a white man's world and that's what the Navy is. I finished at the top of my class because I'm smart and I worked harder than anyone else. I'm very determined and probably won't be coming home too often.\"\n\n\"I'm sure it isn't easy for you. As a woman, I know that there are certain barriers that I have to break, as well as a lot of men that I have to refuse. They seem to think that we women should do anything for any sort of common courtesy they extend,\" offered Gwen.\n\n\"That's right! I'll bet you have men talking to your breasts instead of your face all the time. That's demeaning. Men are so predictable and shallow,\" responded Naomi.\n\n\"I don't quite agree there. I wear fashions that show cleavage. I don't feel I can show off the girls and then be upset when guys look at them. A lot of guys do talk directly to them, but I've come to realize that's it's a male thing. Why do women dress to catch men's eyes and then complain when they look? I love it when Steve's eyes wander down there and he gets all flushed. Men simply enjoy visual stimulation. Women know that, dress for it, and then we wonder why men are so attracted to us.\"",
        "\"If I could interrupt,\" began Steve. \"It's nice to see you again, Naomi! You always sat up front and answered all of the instructor's questions. I usually sat farther back and listened to you and the teacher. You drove Mrs. Landers crazy because you always answered her questions before she could call on the rest of us.\"\n\n\"That would be me. And you're the guy that told Frank Harnett that I was a spoiled damn black bitch that you'd never want to have anything to do with. I remember it like it was yesterday. Now you're God's gift to women, white women, anyway.\"\n\nSteve was stunned by Naomi's assertion that he had uttered such hurtful things about her to Frank, or to anyone. Why would Frank say something like that? Did he misunderstand a statement, or a joke? Steve felt his face heat up as he realized how bad it must sound to Jeff Wilson and his wife. He was unable to say anything, as words failed him totally.\n\n\"Come on, Steve! Dance with me! I've been waiting eight months to be able to get you in my arms and now's my chance,\" insisted Ashley as she pulled Steve onto the dance floor.\n\n\"That was an extremely hurtful thing to tell Steve. He'd never say anything like that. I don't know what that Frank guy was thinking, but Steve would never speak about a woman, or a girl, with such disrespect,\" stated Gwen flatly. \n\n\"Maybe your boyfriend is nice to white girls but holds black women in contempt. He's probably a closet racist,\" suggested Naomi. \n\n\"Really? I'll tell you something I promised Steve that I'd never tell. I sleep with the guy and I'm damn proud of it. He's the most considerate lover a girl could ever want. That's not my point, however.\n\n\"One night after we made love, we started talking about anyone we ever had crushes on. I never went on a real date before I met Steve, and he assured me he had very little experience with girls before we met. I pressed him about girls he liked and what they looked like.\n\n\"He finally admitted that there was a beautiful dark skinned girl in school in Cuba that had caught his fancy. Her mother was stunning and she looked like she was going to be as beautiful, if not even lovelier. This girl used to wear an orange bikini to the beach. It had one strap that hooked to the front of her top and went around her neck. He used to dream about working up the nerve to ask her to take a walk or go to a movie with him.\n\n\"But she was way out of his class. She hardly ever spoke to him and seemed to make a point of ignoring him in school. His first crush was unrequited. Thank God I didn't make that mistake!\" finished Gwen as she turned and strode away in anger.\n\n\"I'm not apologizing for Gwen, because you pretty much had that coming,\" pointed out Jordan to Naomi as her parents listened. \"You don't know Steve or you wouldn't have said those things about him. He's sensitive and kind. He's strong and fearless, but words hurt. Maybe those words hurt you years ago, but you didn't hear them from Steve. Did it ever occur to you that maybe Steve never said them?\n\n\"Don't think you'll make any friends with any of us girls that consider Steve a friend with your poisoned talk. The truth is, every single one of us loves him. He's Gwen's man now, but she shares him. I don't mean sexually, but emotionally. I don't know how much longer we'll stay here since Steve doesn't feel welcomed by the girl of honor for the party. I have Charlie now and I love him, but he knows that I'll do anything for Steve. Now that I think about it, so will Charlie. Steve makes peoples' lives better. He saved me, and he helped Charlie find success. He's way better than what you just made him out to be! Please excuse us,\" offered Jordan coldly as she led Charlie out on the dance floor.\n\n\"What in hell got into you?\" demanded Jeff as soon as he was alone with his wife and Naomi. \"Those kids have accomplished incredible things in the past few months. They're nice enough to come to your party because I personally asked them, and you shit all over the guy? Did you see how those girls reacted? Did even one of them act like they believed a word of that crap you were tossing around?\"\n\n\"Calm down, Jeff. I think Naomi may be rethinking her words. Did you see her flinch when Gwen told her how Steve had a thing for the girl in the orange bikini back in Cuba? They were both young and had no idea how to behave with the opposite sex. Naomi was smitten by him back then. She never told me, but I saw how she acted around him at the functions we attended. Now she's embarrassed herself and lost what could have been some very good friends,\" concluded Julia Wilson. \n\n\"The real question is this. What will she do about it? What's she made of deep down? This is a gut check for you, Naomi. If you can't handle this situation properly, I don't know how you'll make it through the Naval Academy.\" \n\nNaomi had been shocked at Gwen's story about Steve. She knew Frank Harnett was a liar and a troublemaker. She had simply chosen to believe that Steve disliked her. She never dreamed he had the slightest interest in her. He had never indicated it, but then Naomi had to admit she wasn't very approachable back then. If the truth be known, she still wasn't very warm to her classmates and she had few friends. She had finally met up with Steve again after so many years and she screwed it up!\n\nAshley was enjoying her dances with Steve. He was being quiet, even brooding a little, but he was in her arms and that was all that really mattered. She managed to keep him for three slow dances, and she knew her time with him was running out. Every girl in the room was casting glances her way, working up the nerve to ask Steve to dance with them. Then Ashley saw Naomi walking determinedly toward them.\n\n\"Uh oh! It looks like trouble's coming. That Naomi looks like she's not done with you yet,\" warned Ashley.\n\n\"If you've come over here to insult Steve and cast doubt about his character, you can keep on walking,\" stated Ashley defiantly as she stepped between Steve and Naomi.\n\n\"Actually, I've come to apologize to him. I owe all of you an apology. My actions were inexcusable. Would you allow me a dance with Steve so I might ask him to forgive me?\" asked Naomi contritely.\n\n\"Really?\" responded a surprised Ashley. \"In that case, sure! Making up with Steve has got be one of the best things a girl can do!\" \n\n\"Please?\" asked Naomi softly as she stepped inside Steve's arms. \"Dance with me while I eat crow. I knew you wouldn't have said those awful things. I liked you, but you didn't seem to have any interest in me. It was a stupid defense mechanism I developed over the years.\n\n\"When I heard about that 'Lady in Red' video, I couldn't wait to see if it was you. I even went to a couple of your football games, including the state title game. Your beautiful girlfriend was always around and I didn't know if you'd even remember me, so I never dared talk to you. When I heard about the attack on your school and saw Gwen talk on television about how badly injured you and others were, I cried.\n\n\"When you were abducted, I worried all week. I watched all of your TV shows and can't wait to see your movie. What I'm trying to tell you is that I was very wrong, and I'm sorry. Can we manage to be friends? We'll be going to Annapolis soon and it'll help if we have someone we can depend on. I won't let you down again.\"\n\nSteve had listened politely to Naomi as they danced. He had held her slightly away from his body since he felt no warmth for her. As she talked, he began to relax.\n\n\"You were beautiful then and you're even more so now. You never gave me the time of day, so I thought you had no use for me, but I never said anything disrespectful about you. I would have discouraged anyone else from it, too. You really stung me when you said those things. Your dad was a friend of my dad's. I respect him and your mother. It embarrassed me that they might believe that I'd say something like that.\"\n\n\"Steve, I'll apologize to you in front of them and explain how it was a stupid misunderstanding and entirely my fault. Will that help let you forgive me?\"\n\n\"I seem to have a lot of trouble staying angry at beautiful women, admitted Steve. \"It's hard to believe that I've finally managed a dance with you.\" \n\n\"You can hold me a little closer, you know. I won't break. Let these other girls eat their hearts out. I heard how nice you were to Becky at the formal. This is my party, so could you please pretend that you like me? I know Gwen's your girlfriend, but she seems pretty cool about letting you dance with pretty girls. Becky and her sister really like you a lot and they're both beautiful blonde, white girls.\"\n\n\"We're not going to get along if you keep referring to people as white, or as black,\" warned Steve. \"I don't see the need to use an adjective describing the color of anyone. Can we agree to not do that?\"\n\n\"Okay! I guess I'd better get over that fast. My dad keeps telling me that the Navy won't be happy with that attitude either. You're a guy and I'm a girl, and we're dancing together. Since you said I was beautiful and since color is no issue, will you hold me closer, please? Half the kids in my class think I'm gay because they never see me with a guy. Dancing with a dreamboat will dispel some of those urban myths.\"\n\n\"As long as we're not misleading anyone, I can do that,\" replied Steve with a grin as he drew Naomi up tight against his chest.\n\n\"Well, it looks like your daughter just talked her way out of an embarrassing situation,\" chuckled Jeff Wilson to his wife as they watched Steve hold Naomi more closely. \"Now she has to make it right with all those pretty girls that hang out with the lucky bastard!\"\n\n\"Look at Steve!\" gasped Becky. \"He's practically crushing that Naomi now! I thought he was mad at her. He sure doesn't act it.\"\n\n\"I'll let you in on a little secret,\" responded Gwen with a smile. \"Anytime you want Steve to forgive you for something, rub your 'girls' up against him until he gives in. He looks like a big strong guy, but a pair of boobs up close reduces him to a blubbering idiot. He's what scientists call 'a man'. He may even have a little extra testosterone in his system, which renders him especially weak in the knees when he's confronted with breasts of any size or shape.\"\n\n\"Really? That's great to know!\" grinned Becky. \"I may not have two hands, but I do have two breasts and apparently that's more important to Steve. I'll have him eating out of my hand in no time!\"\n\n\"I can't believe you just made that joke!\" gasped Ashley as she hugged her sister. \"You've really come a long way toward getting over your accident. I'm really proud of you.\" \n\n\"That big lug with that witch's boobs making dents in his amazing pecs pretty much set me straight,\" replied Becky. \"He wasn't even interested in feeling sorry for me. He told me I wasn't handicapped and to get over it. Maybe he'll be interested in feeling something else, something that feels a lot better than 'sorry' does.\"\n\nThe Sherman High School had about a twenty percent black population, but the party was pretty evenly split between black and white guests. A tall black boy approached Gwen.\n\n\"I was wondering if you'd honor me with a dance? I know you're a famous star, but you're here, so I thought I'd take a chance.\"\n\n\"I'd be delighted!\" replied Gwen as she headed out on the dance floor with the boy. \"You're a very good dancer. Thanks for asking me.\"\n\n\"Are you kidding? You're thanking me? Now that I broke the ice, every guy here will be trying to get a dance with you. Your boyfriend seems to be having a good time with Naomi. Most of us thought she might be gay, or at least a man hater. Now she's all cozy with your guy. Does that bother you?\"\n\n\"It bothers me more that some of you thought that Naomi was a man hater. People must have thought the same about me until I met Steve. I'm graduating valedictorian tomorrow. I never had any dates before I went out with Steve, so people may have thought I was gay or disliked men for some reason.\n\n\"Steve's a big boy. He can take care of himself, even around your beautiful, exotic classmate. We have an understanding and we don't get jealous. We are totally committed to each other. We can laugh and flirt with others, but at the end of the night, we're together.\" \n\nSteve, Jordan, Charlie, Gwen, Ashley, and Becky spent the next hour dancing with the local students attending the party. Naomi finally found an opportunity to speak to Gwen and Jordan off to the side.\n\n\"Steve's pretty much forgiven me for being such a miserable bitch. Now I'm asking you both for forgiveness. I was totally in the wrong. I knew it when I said it. I've worked hard to be valedictorian and spent very little time dating. I'm a social moron. \n\n\"You said that Steve had a thing for me years ago, but nothing like I had for him. I was way too shy to allow it to ever show, although my mother figured it out. I'm black and he's white and it just seemed like he'd never be interested in me. When I heard he was at Sparta, I followed everything he did. That seemed to include the two of you most of the time. I've watched the videos, the TV shows, the concerts, anything with Steve. When he came here tonight with his two beautiful white girlfriends, I became jealous and catty. I wanted to hurt you and I somehow knew the best way to do it was to hurt Steve.\n\n\"I'll understand if you don't want to have anything to do with me. I'd be that way if the shoe were on the other foot. I was wrong. I'm sorry.\"\n\n\"You were wrong!\" agreed Jordan. \"The biggest mistake you made was when you didn't grab Steve when you had the chance. Gwen knew enough to latch onto him. I was pissed at the things you said to Steve, but if he's okay with you now, so am I.\"\n\n\"You were wrong to think that Steve is prejudiced in any way,\" added Gwen. \"I take that back, since he does seem to favor pretty girls with nice bodies. I saw you rub your boobs all over the guy so he'd forgive you.\"\n\n\"Actually, he wouldn't let me rub them against him before he forgave me. I tried, but he had to hear my apology before he'd let me close. Did I offend or upset you by dancing too close to Steve?\" asked Naomi worriedly. \n\n\"Are you kidding?\" laughed Gwen. \"Jordan and my sister, Lisa, have rubbed their boobs all over him when they were topless. And they aren't the only ones. Jordan has pictures on the internet to prove it, and Lisa has posters that do the same. I have a friend that shall remain nameless that had her 'girls' in Steve's face not too long ago. You can release your Krackens for all I care. Steve loves boobs, but he's mine. He's a loyal friend, and a great lover, and I'm not letting him go. I firmly believe that as long as I love him, he'll be faithful to me, as I will to him.\n\n\"As far as forgiving you is concerned, once Steve made the decision, the rest of us had no choice. We all know that he wouldn't be happy with us if we were anything less than kind to one of his friends. The more Steve likes you, the more the rest of us will. That just seems to be the way it works. It may seem strange, but it's true, don't you think, Jordan?\"\n\n\"I never thought of it that way, but now that you mention it, you're right. If Steve likes a person, we girls tend to like them, too. If he loves another girl, we all love her. Not a physical love, but emotionally, we pick up on his feelings and follow his lead. Gwen often leads Steve into these things, like she had Steve take Becky to the formal. He took it from there and now she's one of the 'harem'. Don't get me wrong. I love my boyfriend, but Steve is a special friend and I'm honored to be part of his female entourage. \n\n\"We won't be having sex, but we share everything else and that's what Steve does to females of all ages. I noticed your mom got a little squirmy when she was talking to him. My mom just met him and she thinks he's the best thing since sliced bread. Gwen's mom, and I mean no disrespect, is absolutely in love with him.\"\n\n\"Jordan's right about that. Steve's done so many great things for us, and he's so darn attractive, she's head over heels. But that's okay. I have a boyfriend that everyone likes a lot. That's why I get to sleep with him in my parents' house. He's earned the right to tag their daughter anytime he wants. I'm just a sacrifice my folks have offered up to Steve to keep him close!\" complained Gwen as she used her hand to cover her smile. \n\n\"My God! That's just wrong! If you weren't eighteen, I'd report them to child services. Just to help out, we could switch places. I'll wear your clothes and pretend that I'm you. We're practically twins,\" suggested Naomi.\n\n\"That might work, except that Steve would notice the difference when he ran his hands over your butt. He's used to a tiny one like mine.\"\n\n\"Oh Yeah?\" challenged Naomi. \"Stand next to me. Jordan, tell us who has the bigger ass, Gwen or me?\"\n\n\"Steve! You got here just in time. Which of these asses looks bigger to you? If it were dark, could you tell which ass belonged to which lady, just by using your hands?\" asked Jordan.\n\n\"That's a good question. I can't be sure. Suppose you tie a blindfold on me and we find out?\" joked Steve.\n\n\"Okay, it's a bet. If Steve can tell which ass is yours nine out of ten times, you win. If he can't, we'll swap places for a week,\" proposed Naomi.\n\n\"Nine out of ten times? Wouldn't you rather go for a few hundred?\" asked Gwen with a laugh. \"That bully spanked my poor little butt in the movie we're making. He knows it very well. He'd never mistake that big bottom of yours for my cute little tush.\"\n\n\"He spanked you in the movie? Now I really want to swap places! You need to be removed from the abuse the guy is heaping on you. I'm offering to help. That's the kind of friend I can be. Please let me help you!\"\n\n\"I don't think I'll take that bet. I trust Steve, but I'm not going to have him squeezing your bottom if I can help it. It may be much larger than what he's used to, but Steve's nothing if not adaptable. He could learn to like big bottomed girls.\"\n\n\"You two are breaking me up,\" laughed Jordan. \"It looks like Naomi is joining the sorority. Just remember that Steve and Gwen are in love, lovers, soul mates, and disgustingly faithful. Anything else goes.\"\n\nSteve looked at the three women and shook his head as Charlie wandered up to join them. Any one of them was all a man could ever ask for. The three of them together practically took his breath away. He put an arm around Naomi and the other around Gwen and led them toward the Wilsons.\n\n\"Thanks for inviting us, Mr. Wilson,\" stated Steve as he shook the older man's hand. \"We had a great time and I really enjoyed seeing you, your wife, and daughter again. I hope it doesn't take so long for us to get together again.\"\n\n\"Not a chance!\" interjected Naomi. \"Gwen's invited me to stop in now and then, plus come to your graduation tomorrow. I'm too late to be your girlfriend, but I'm a girl that can be your friend. Gwen's even nicer in real life than she comes across on TV, and she's even more beautiful, with a sharp sense of humor. You've hit the jackpot with her.\"\n\nJeff Wilson cast a glance at his wife to find her beaming at her daughter's improved attitude. \"I didn't tell the story about the bet. I'll make it quick. We had this jerk named Murphy that was pretty good with a handgun. He thought he was the best, but there were several guys on base that could shoot circles around him and Steve's father was one of them.\n\n\"Bill, that's Steve's dad, finally had enough of the empty bragging. He suggested that Murphy was overly impressed with himself and a 15 year old kid could probably shoot better than he did. Naturally Murphy got incensed and challenged Bill to put up or shut up. Long story short, Bill won a hundred bucks from Murphy, but better yet, he shut him up. We knew Steve would be good since he had Bill for an instructor, but we all left the shooting range shaking our heads. Let's just say that those terrorists had no chance when Steve entered that gym with a gun in each hand.\"",
        "\"He's very good with his hands,\" agreed Gwen with a smile. \"It didn't take me long to learn that.\"\n\n\"On that note, we'd better head home,\" laughed Ashley. \"We had a great time.\"\n\n\"Thanks for having us, Naomi. We didn't hang out much in school, but we should have. You're pretty cool. You just always seemed so aloof and reserved. I regret not being friendlier to you,\" admitted Becky. \n\n\"Well, I was pretty focused and a bit angry, so it wasn't anyone's fault but my own. Hopefully, we'll become friends now. Thanks to all of you for coming. I was pretty rude earlier, but Gwen and Jordan set me straight. I thank you both for that. Would it be okay if I kissed your boyfriend good-bye?\" asked Naomi.\n\n\"Go for it, but remember that your dad's right here. Don't force him to thrash Steve for taking liberties with his lovely daughter,\" warned Gwen as Naomi wrapped her arms around Steve and kissed him gently on the lips.\"\n\n\"Don't worry about me!\" laughed Jeff Wilson. \"Remember I saw Steve shoot. Kiss her all you want. I bet that I'll be able to stand it longer than Gwen will.\"\n\n\"What nice people,\" observed Charlie as the group drove back to Becky's home. \"Will we ever go anywhere that Steve doesn't have a beautiful girl pining over him?\"\n\nEarly the next morning, Mrs. Summers fed everyone breakfast before they headed back to Sparta. Becky rode with them to attend the graduation ceremonies that evening.\n\nIt was early afternoon and Steve was going for a run when he decided to hit the trail through the hills above the high school. He saw some activity on the athletic field, where the graduation ceremonies were taking place. There was a newly constructed stage sitting near the edge of the field. In front of it were several thousand chairs. The school board had decided to hold the ceremonies outside where they could accommodate what was expected to be a very large crowd.\n\nHe recognized Amber's van and realized she was probably going to video at least some of the festivities. He was thankful that he had no active role in the graduation, other than accepting his diploma. This was going to be Gwen's night to shine. She and Charlotte had worked hard to attain the top two positions in the class and he was very content to sit back and enjoy their success.\n\nSteve saw some photographer's setting up tripods on platforms. They were likely paparazzi hoping to get some interesting photos of Gwen, Jordan, or him. How could people spend their lives annoying other people? Then Steve noticed a van parked along an old trail behind the athletic field. It wasn't too far from the river and it wasn't unusual for people to park there and walked down to the river to fish. He saw two men digging coolers out of the van and grinned to himself. These guys were going to drink some beer while they spent the afternoon drowning worms. He idly wondered if they were Bronco fans since their coolers were mostly orange with some blue trim.\n\nSteve finished his run just in time to shower and shave before he got Uncle Joe into the car. By the time they arrived at the school, hundreds of people were already waiting and it was over half an hour before the scheduled start. Steve greeted dozens of people as he led Joe over to the section he and Gwen had determined to have their families sit. \n\n\"Hey, Steve!\" came a voice Steve knew had to belong to Kate. \"This is going to be the best attended graduation the school has ever had. Look at those guys taking pictures of you. Once Gwen and Jordan show up, they'll leave you alone. I came with your grandfather, aunt and cousin. They thought it would be polite to wait for Mom and Dad, but I told them I'd come ahead and save our seats.\n\n\"Hello, Uncle Joe. You must be pretty proud of your nephew. He's a TV and movie star now. Pretty soon he'll be a midshipman and then a SEAL. Pretty cool, isn't it?\"\n\nBefore Joe could respond, Kate wrapped her arms around Steve. \"Everyone here is watching you, and now me. I may even get my picture in the tabloids and get rumors started about Gwen's beautiful little sister. How about a kiss to give them something to talk about?\"\n\nSteve held Kate in his arms and looked down at her. She was getting more beautiful every day. She was going to make some lucky guy very happy, if he could handle her wit and enthusiasm for life. He picked her up and kissed her gently on the lips. Then he set her back down.\n\n\"Wow! You kissed me! All the other girls are so jealous now. You finally kissed me. That's way too cool. You can do that anytime you want from now on, okay?\"\n\n\"Here comes your sister and parents. Don't let them find out or we'll both be in trouble,\" cautioned Steve.\n\n\"Gwen! Steve kissed me in front of everyone! You should have seen it, Mom. Everyone else did. I'll be on the front page of the Star Watcher, unless they find another space alien, or Elvis shows up again.\" \n\nSteve just laughed as he greeted Gwen's family and then his own. He had more relatives attending his graduation than he ever knew he had before coming to Sparta. He heard his named called and turned to find Becky jumping into his arms. \n\n\"I saw you kiss Kate! I don't think it would be fair if you didn't give me one, too. I know Ashley would like one, but she's a teacher, so give me two!\" insisted Becky.\n\nSteve quickly gave in and kissed Becky lightly. As he stepped away from her, Stephanie was in his arms. She didn't say anything. She simply stared at him until he bent over and kissed her. Then he felt a tapping on his shoulder and found Naomi smiling at him.\n\n\"You don't want to show favorites, or have people think you're not an equal opportunity kisser, do you?\" she asked as she moved in close to Steve and kissed him on the lips.\n\n\"Come on, Steve. We'd better get you up on the stage before your lips get chapped,\" urged Gwen as she pulled him toward the steps leading up to the platform and his seat. Many of the kids had already taken their places. Gwen's seat was up front since she was giving the valedictory address. Steve went to his seat, which was assigned alphabetically. He was three seats from the right side in the third row, between Mike Gullone and a very pleased Lori Henderson. \n\n\"What's Gwen wearing under her robe? I heard most of the girls were going to be in their underwear since it's so warm. I'd like to see....\"\n\nSeeing Steve's stony stare, Mike Gullone decided to contemplate his fingers for several seconds before Steve laughed. \"I think they all decided to go naked under their robes,\" offered Steve to his much relieved classmate. \"What about it, Lori? Are the girls naked under the robes?\"\n\n\"I can be if that's what you want!\" responded Lori with a chuckle. \"Want to help me get my damn bra off?\"\n\n\"I will!\" volunteered Mike Gullone, much to Lori's dismay. \"It looks like we have some Syracuse fans here and they plan to party after we graduate.\"\n\nThe stage had filled and the principal was about to start the proceedings as Steve gave his classmate a quizzical look.\n\n\"I saw a couple orange coolers under the stage. I climbed up from the back and I slipped and fell. There were two beer coolers under each end of the stage. As soon as this is over, I'm going after a beer. I don't care who they belong to. It'll be party time for this high school graduate!\"\n\nJust then the principal asked everyone to stand as Gwen and Jordan sang the national anthem. As usual, they did a tremendous job and the audience applauded and cheered loudly. Steve had been given a copy of the program and knew that Gwen wasn't going to speak for another fifteen minutes or so.\n\nAs he listened to the principal drone on about the future and how well the class had done, he tried to decide why he had a nagging feeling of concern. What had happened to upset his balance? He tried to remember everything he had done and said in the last twenty minutes. Lori suggested that he could help her remove her bra, but that was hardly a reason to feel anxious. Mike had volunteered for the job, but that was predictable. He had also wondered if Gwen was wearing just underwear under her robe. Steve had pretended to be annoyed, but it was a typical teenage barb that caused no hard feelings.\n\nThen he thought about the beer coolers under the stage. Why would kids try to hide them there? He decided that they would do that only if they were drinking during the ceremony. Steve was well aware of how possible that was, but he looked over the graduating class and saw no indication of kids drinking on stage. He remembered back to how he had seen men unload coolers from a van parked in the woods above the river and behind the school. \n\nSteve decided that he had to check out the coolers. It just seemed incongruous, and he had learned long ago to trust his instincts, but not coincidence. Hoping no one would notice, Steve stood and slipped down the row and quickly ducked behind the sitting graduates. He dropped to the ground and easily located the two coolers. \n\nThe stage was about three feet high, but was heavily braced, so crawling to the coolers was not easy and it took him longer than he expected. \n\nPaula noticed Steve immediately when he stood and slipped behind the other students. She wondered if he was feeling poorly, or had to go to the bathroom badly. He had never given any indication of a weak bladder or a weak stomach before. As the minutes ticked by, she became more concerned. \n\n\"Ted, would you go look behind the stage as see if Steve is having a problem. He's been gone a few minutes and I'm worried.\"\n\nTed dutifully left his seat and circled around to the back of the stage. When he got there he saw an orange cooler on the ground and no sign of Steve. Then he saw another cooler slide out from under the stage, followed by Steve.\n\n\"What's going on, Steve?\" asked Ted. \"It isn't like you to sneak a beer during an event like this.\"\n\n\"Ted, I don't think these coolers have beer in them, but I hope they do. I'm worried that they're bombs. I don't want to let anyone know that I found them, or the bomb maker may detonate them. I'm going to carry them into the woods, where any explosion will be less likely to hurt anyone. When you go back to your seat, don't let on that I'm doing this. If there's a panic, the bomber will detonate them, and who knows what else.\"\n\n\"I hope you're not suggesting that I'm not man enough to help you here,\" countered Ted immediately as he bent and picked up one of the coolers. \"We'll get them there out of here faster if we each carry one. Let's hurry!\"\n\nIt only took a few minutes to carry the coolers back into the woods. Steve quickly found the same older van parked under the forest canopy. He walked up to it and tried the back door. It was locked, so he picked up a softball sized rock and smashed the small window in the back door. Then he reached in and unlocked the door. \n\n\"My God!\" exclaimed Ted as he stared at the contents of the van.\n\n\"Ted, we need to move fast. Something's going down tonight and it's going to be very bad if we don't do something,\" stated Steve as he picked up a handgun from a tool box filled with guns. He checked the magazine and handed the gun to Ted. \"This is the safety, push it ahead and it's ready to fire. Keep pulling the trigger and it'll keep firing. You'll know when to use it. We've got to get back to the stage.\"\n\nAs he spoke Steve gathered several more handguns, checked their loads and shoved them in his waistband, with two in front and one in back. Then he placed the two coolers in the back of the van and covered them with a towel that had been lying on the floor. \"Here! Carry these for a ways while I make some calls,\" insisted Steve as he handed Ted two vests.\n\nSteve dialed 911 as they walked rapidly back toward the graduation ceremony. \"This is Steve Hammer. I have it on very good authority that terrorists plan on attacking during, or immediately after the graduation at the high school. Have responders wear body armor and come in silent. It's likely that there are bombs involved and a loud police arrival may nudge the bombers into detonating the bombs. Ambulances will probably be needed.\"\n\nWhen he disconnected, he quickly pressed another button on his cell. \"Hello. This is Steve Hammer reporting another terrorist attack on Sparta High School. It's going to begin in the next ten or fifteen minutes. Do what you can!\"\n\nSteve stopped and pulled his robe off and began fitting the vest over his shirt. \"Take off your jacket and put that on. Then put your jacket over it. We don't want anyone to know we're on to them.\"\n\nPaula was relieved when Ted returned to his seat. He looked agitated and was sweating profusely. \"What was wrong? Are you okay? What happened?\" whispered a concerned Paula to her husband.\n\n\"Paula, don't ask. Just be ready to get down when the shit hits the fan. Do not panic, but tell the girls to be ready to get down. It's a matter of life and death that they do not act frightened right now. Do you understand? I'm trying to help Steve.\"\n\nPaula had been terrified at Ted's curt speech, but found immediate relief when she heard that Steve was involved. She turned to Kate sitting next to her and whispered instructions.\n\n\"Steve and your father feel there's going to be some serious trouble. You need to be ready to duck down as soon as something starts. Tell Lisa and have her pass it on to Naomi, Becky and Jen. Tell them that they must remain calm or Steve could be badly hurt,\" warned Paula, knowing that the mention of Steve would reassure the girls. \n\nThe kids sitting behind, and near Steve, had seen him leave and had wondered about it. When he finally returned, he whispered into the ear of the girl sitting on the end. She quickly rose and moved down to take Steve's empty seat while he sat down in hers. He began listening to the speaker while watching the audience. The speaker was Ms. Walker announcing the totals for the fund raising effort.\n\n\"To my absolute amazement, this senior class has managed to raise just under twelve million dollars for the hospital building fund, and the number will continue to climb. All of the students worked hard on this and I thank them all. This is a feat we will likely never see equaled. Future generations will benefit from the hard work and generosity of this class. I salute you all!\"\n\nWhen the applause died down, the principal again took the microphone. \"We have some new awards this year, compliments of the CBC Network and Clyde Davis. They will be awarded every year going forward. They will be in several new areas. We have the 'Gwen Anderson Medical Student Award' to be given to a graduating senior planning on a career in medicine. The first year's award is going to Charlotte DeVries, appropriately enough. This scholarship is for five thousand dollars and is to be used to buy, books, supplies, lodging, whatever the student feels is needed to pursue his or her goal of a career in medicine. Gwen, would you come forward to award this honor to your friend, Charlotte?\" \n\nCharlotte and Gwen were both in tears as Gwen handed the envelope to her friend. They acknowledged the applause and returned to their seats. \n\n\"Next is a five thousand dollar scholarship named after our own Jordan Quick. It goes to the senior planning on pursuing a career in music. Shelly Malloy is this year's recipient. I understand that she has already written a song that has been recorded by Jordan and will be used in an upcoming major motion picture. Jordan, would you care to award this honor to Shelley?\"\n\nJordan was shaking slightly as she moved from the back to hand Shelley the envelope. She managed to gather herself enough to acknowledge the cheers and shake Shelley's hand. It was obvious that it was a very emotional moment for Jordan.\n\n\"Finally, we have the 'Steve Hammer Military Career Award' which is given to a senior pursuing officer training in college or at a military academy. Steve, please come forward and award this scholarship to Jared White, who will be enrolled in officer training while in college.\"\n\nSteve's eyes were everywhere but on Jared as he walked to the front of the stage. He noticed two police officers moving across the parking lot toward the ceremonies. He accepted the envelope from the principal, handed it to Jared, and then embraced him. While in that embrace, Steve whispered in Jared's ear. \n\n\"I think some bad shit's going down here tonight. Reach in my left sleeve and take the gun from my hand. Keep it hidden in your robe until you need it. I hope you won't, but be ready.\"\n\nJared hardly blinked as he seemed to adjust his embrace, but slid his hand up Steve's sleeve and took the gun Steve offered and then carefully moved his hand back. He used his other hand to be sure the robe covered the gun. Nodding, the two friends parted and went back to their seats.\n\n\"I have another announcement to make and then we'll have the valedictory address. This afternoon I was given an advance copy of 'Rolling Stone Magazine\". I feel confident that this school has never had graduating students appear on the cover before this issue. This is the magazine as it will appear in newsstands and stores starting tomorrow. The cover features Gwen Anderson and Steve Hammer with the banner 'America's Royal Couple?'. Yes, it does end with a question mark, so they haven't ascended to the throne, yet.\"\n\nThe principal allowed the applause to quiet down before announcing, \"And now Gwen Anderson with the valedictory address.\"\n\n\"Thank you, Sir. Thank you, all. Traditionally, valedictorians speak about the future, and their hopes and dreams. Tonight, I want to tell all of you some of what I've learned in my senior year at Sparta. I've learned about life, death, love, and hatred.\n\n\"You all remember the hatred we were exposed to when those deranged terrorists attacked our school and our very way of life. They were consumed with hatred of an ideology, of a philosophy, of freedom and personal choice. This hatred prevented them from living a healthy, productive life. It consumed them and led to their deaths. Did we deserve any of the evil they brought to our school? I am here to state that we did not.\n\n\"Life is precious and this fall, we learned firsthand how precious it is. Three of our classmates perished that day, as did a wonderful father and husband that worked as a custodian here. Their lives were taken; these people were taken from us. That's a void that can never be filled. That's what death does. We still grieve for our loss.\n\n\"Lives were saved that cold afternoon last fall when two toddlers plunged into the frigid waters of Emerson River. We saw a hero willingly risk his life to save others. Lives were saved the day of that horrible attack on our school. Billy Marsh and Jared White used their bodies to shield Charlotte and me from the killers' bullets. In doing so, both of these fine men were seriously injured. Many others stayed behind in a gym containing explosives to render medical and moral assistance to those injured in the attack. \n\n\"I can only explain these heroic acts this way. They were acts of 'love'. When people risk death or injury to help others, they are guided by love. When people line up to donate blood for others, the motivation is love for fellow man. That love shown so many times by the Spartan Nation has proven to be far stronger than hatred and despair. It gives life meaning and purpose. Of all the emotions, I believe love is by far the strongest. The Spartan Nation has been tested. It was badly hurt when we lost four wonderful people that horrible day. But the Spartan Nation has shown the world that love trumps hate, that we'll fight for life and dignity, and that we'll never yield to terror and fear!\"\n\nThe crowd cheered and applauded long and loud as Gwen finished her speech. Tears were shed and eyes turned red as people recalled that fateful day referred to by Gwen. \n\nAs Steve sat back down after applauding Gwen, he noticed the van that had been parked in the woods was driving slowly along the road on the hill above the school. It was about a quarter mile away when he saw the van stop.",
        "Steve quickly stood and strode to the front of the stage, standing off to the side so no students were directly behind him. He gripped both guns tightly under his robe. His attention shifted from the van to the people in the audience. He looked for any signs of an attack. As he looked, he noticed a couple men standing in the back, shifting back and forth and looking at their watches frequently. Steve marked their position mentally as he turned his attention back to the van on the hill.\n\nThe driver of the van walked around in front of it. He stood still and looked down the hill at the stage. Steve watched as the man silently waved his hand. Then he held up a cell phone, made a flourish with both hands, and pressed a button. \n\nThe result was immediate and beyond anything Steve could have imagined. There was a deafening explosion from the area where the van had been. A shock wave knocked many in the audience and the students on stage off their chairs.\n\nAs he staggered backward, Steve shook the sleeves of the robe down below his elbows and brought both handguns up and ready for action. Just as debris from the explosion began raining down on the crowd, Steve saw several men start forward with handguns. One of them appeared to aim in Gwen's direction. Steve terminated him immediately with two bullets to the brain.\n\nPeople began screaming and ducking as the sound of gunfire filled the evening. As he expected, his position on the stage made him the central target for the gunmen. Steve felt a bullet strike his chest as he double-tapped another would-be killer. From the corner of his eye, he saw a tall man point a gun in Lisa's direction. Just as he brought his left hand gun around, the man's head mushroomed as he was struck by a round from Ted's weapon. Steve felt another bullet strike his chest and he turned to see three men moving down the aisle toward him. Standing his ground, he brought both guns into play, firing so rapidly, witnesses would later claim that it sounded like a continuous roar. \n\nJared was stunned when the explosion rocked the assembly. He immediately turned to look for the source of the explosion as he was pushed back by the shock wave. That was almost his undoing. Because he was unprepared, he staggered and dropped to his knees just as a bullet whined past his head. Looking up, he saw a heavy man moving down along the crowd toward him. The man stopped and raised his gun again. Without thinking, Jared brought his gun up and started pulling the trigger. The man lurched back when two bullets struck his chest and finally went down when Jared's third shot took off the top of his head.\n\nTed felt that he was on the verge of a heart attack as he sat and tried to listen to Gwen's speech. He knew fear as he looked at his wife and daughters sitting near him. What if they were hurt, or worse? The tension was winding him tighter and tighter. Paula tried to reassure him, but it only increased his feeling of dread and anxiety. The sudden loud explosion and resulting mayhem somehow ended his anxiety. Now that it was happening, Ted reached way down and found the calmness he needed to keep his family safe. \n\nPaula saw Steve shooting from the stage. Suddenly a gunman appeared a short distance in front of her. He raised his weapon toward Lisa, and Paula knew absolute fear. There was a loud explosion next to her and the gunman's face turned to blood. Paula swung around in stunned disbelief. She saw Ted holding a handgun with smoke tendrils curling out of the barrel! He had saved Lisa!\n\nGwen had a bad feeling when Steve strode up to the front and side of the stage so suddenly. It was not part of the program and she knew of no reason for him to draw attention to himself. Then she suddenly knew fear as she realized there were only a couple possible reasons for Steve to want to attract attention. He was diverting it from others! When Jared took a similar stance on the other side of the stage, Gwen had no doubt that something really bad was afoot and the two men were moving out to meet it head on.\n\nGwen was knocked backward from the force of the explosion. As she scrambled to her feet, she saw a man moving down an aisle while pointing a gun at her! Before she could react in any way, the man's head turned crimson and he fell to the ground. Swinging around, Gwen saw Steve's robe jerk violently as Steve lurched backward a step. He used his left hand to shoot a man with a gun in the back row. Then he swung both guns up and began firing nonstop as three armed men charged him. All three dropped to the ground not twenty feet from Steve. \n\nAs suddenly as it began, the gunfire ended. Sobs and cries of fear and anguish began to fill the air. Steve remained standing, scanning the crowd for any further terrorists. Jared stood ready on the far end of the stage, while Ted stood guard over his family, his gun pointed to the skies as Paula sobbed and hugged Lisa.\n\nAmber Stahl had been set up on the side of the seating section and had recorded the entire event. She had planned on editing everything down to a minute or so for the evening news. Now she was on the phone to the station.\n\n\"Put me on live! There's been mass shootings and a bomb blast here at Sparta. Yeah, he was in the middle of it. I'll send the video back right now. Just get me live as fast as you can. This is a major news event!\" \n\nOnce again, Channel 5 was the only station with a reporter on scene for a horrifying series of events in Sparta. The station went live immediately, and within another minute the CBC Network was broadcasting live the aftermath of the bomb blast and shootings.\n\n\"Steve! You've been shot! I saw the where the bullet hit you in the chest!\" cried Gwen as she rushed to Steve as he continued to sweep the crowd with his eyes. \"My God! Look at the holes! You've been shot three times!\"\n\nSirens were blaring as ambulances and police cars streamed into the parking lot. The ambulances drove as close to the stage as possible. Steve saw the first medics to arrive work on a police officer that was down just beyond the sitting area. The second officer was with him, trying to stem the bleeding. Then a helicopter hovered and landed on the end of the athletic field not in use.\n\n\"I'm okay, Gwen. I'm wearing a vest. It stopped the bullets from penetrating into my body. Keep a sharp eye out in case there are any more of those bastards,\" cautioned Steve.\n\nGwen recognized the FBI man that had been so rude in the hospital the day of the first attack. He had a gun drawn as he led two other men in suits toward the stage. When he saw Ted holding a gun, he immediately stopped and pointed his weapon at him.\n\n\"Drop the gun! We have you covered!\" shouted the man as Ted quickly placed the gun on a chair and raised his hands.\n\nSeeing the potential for confusion, Steve quickly placed his weapons on the stage floor and stood with his hands raised shoulder high. As one of the suits moved in and handcuffed Ted, the head man started for Steve.\n\n\"Get down with your hands behind your back! Reach for those guns and you're dead!\" threatened the government man as Steve gracefully dropped to the floor and placed his hands behind his back. \n\nThe actions of the FBI did not go unnoticed by Jared so he quickly knelt down, slid his weapon away from his body and lay down with his hands behind his back. The third FBI suit quickly moved in and handcuffed him.\n\nAs Steve was being cuffed, Gwen went off. \"What in hell's wrong with you? These men saved our lives! That's Steve Hammer, my father, and Jared White! They're the good guys! Release them immediately!\"\n\n\"I don't take orders from teenage trim,\" snarled the agent in charge. \"These men are armed and wearing body armor. It appears that they came to this dance expecting trouble. Where did they get the guns and the vests?\"\n\n\"Vests?\" repeated Jared. \"Why the hell didn't you tell me you were wearing a bullet-proof vest? Hell, I walked out there because you did, acting all tough and shit. I could've been killed!\"\n\nAmber Stahl was nothing if not observant. She quickly determined where the story was and moved toward the encounter with the FBI as Gwen grew angrier. \n\n\"You don't take orders from 'trim'? Is that what you said? That settles it. You're going to be out of a job as soon as I can make it happen. Amber, do you want to interview me right now?\"\n\n\"This is a crime scene. Back off with the camera,\" ordered the lead FBI agent, causing Amber to take a few steps back.\n\n\"Zoom in and I'll speak loudly,\" promised Gwen. \"Steve Hammer, Jared White, and my father Ted Anderson, just saved dozens, if not hundreds of innocent people, from crazed terrorists. These jackasses from the FBI showed up after the shooting was done and handcuffed them after pointing their weapons at them. I'm making this promise to the people watching this as it happens, if these three heroes are not released immediately, I will see that these FBI men lose their jobs, if it takes me the rest of my life.\"\n\nAs she finished speaking, Steve's phone began to ring. Gwen quickly reached under Steve's bullet riddled gown and pulled his phone off his belt. The FBI agent was reaching for her when she answered it.\n\n\"Hello? Thank God, it's you! You're watching us on TV? Let me switch to speaker phone, Sir. This FBI man needs to hear this from you,\" announced Gwen as she pushed the speaker button on the phone.\n\n\"This is the President. I want you to release those three men right now. Question them if you feel it's necessary, but do not treat them like criminals. Do you understand?\"\n\n\"What kind of crap is this?\" snapped the lead agent. \"You expect me to believe the president has you on his speed dial? These three are persons of interest and I'm taking them in for questioning, whoever you are!\"\n\nThen the agent's phone rang. He carefully pulled it out and answered it. \"Hello, Mr. Andrews? We have a hell of a mess here. There are eight dead men, a wounded cop, and three suspicious characters that were armed with the same type of guns the dead terrorists used. I have them in custody.\n\n\"The president called you? He's on the line now? Okay, but I think it's a bad idea. No, I'm not refusing. I just think that we should...okay! I'll do it!\" stated the obviously flustered federal agent as he reached into his pocket and pulled out keys. \n\n\"Thank you, Mr. President. I have no idea how Steve wound up with the guns or the body armor, but I'm glad he did! We'll fill you in on everything as soon as we get it straight. One police officer was wounded, and a few people were banged up from the force of the bomb blast. Steve was hit three times in the chest, but the armor must have saved him. He looks pretty good, but we'll have him checked at the hospital. Thanks for helping out, Sir. Yes, Steve's hands are free. Would you like to speak to him?\" \n\nSteve accepted the phone from Gwen. \"Yes, sir. The short version? I saw men unloading two orange coolers earlier today by the school. I thought they were taking them fishing. A kid told me he saw them under the stage. I dug them out and carried them back to the van they had come in. Gwen's dad helped me. We found guns, plastic explosives, and some bullet proof vests in the van. I grabbed some guns, two vests, called 911 and the state department number I have on my phone.\n\n\"It turned out that the bomber stopped to watch from up on the hill as he detonated the bombs with his cell phone, not realizing the bombs were in the back of his van. He unwittingly became a suicide bomber. My impression? They looked homegrown to me. Thank you, Sir!\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "graduation",
        "tv taping",
        "christmas show",
        "grandfather",
        "navy friend",
        "terrorist",
        "bombs",
        "vans"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-ch-28"
}