{
    "title": "Semper Fidelis Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 12 - One Step Ahead\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said the lovely redheaded reporterette at 7:00am, Monday, March 21st. \"It is hard to believe it's now Spring with all this snow on the ground, but the Channel Two News Weather Center says that last night's snow was the last storm of the season, and we should soon be thawing out with warmer temperatures!\"\n\nBettina then got to the news: \"It is already getting hot politically, as the highly-charged situation of the SBI Raid that killed Marine Corps Gunnery Sergeant Manuel Guernica is now the center of barbs and mudslinging between State politicians and Police Commander Donald Troy! After Commander Troy vowed to stick by the slain Marine and get Justice for him, he has come under withering political and personal attacks.\"\n\nThe tape showed Katherine Woodburn making a speech at the University, where she said \"I have called upon the SBI's Office of Ethics and Review to suspend Commander Troy from all law enforcement duties and investigate him for corruption. I have given the SBI evidence of Commander Troy's illegal tactics in solving some of the crimes he has been credited with closing. I do not understand why there has been no action upon my requests.\"\n\nBettina then said \"Asked for a comment, Commander Troy replied that he declines to be bullied and intimidated by politicians covering for corrupt and murderous SBI Agents, and that he will continue to pursue the case relentlessly until the alleged criminals have their day in Court.\"\n\n\"In political news,\" said Bettina, \"Governor Val Jared says he will not participate in the debate being set up by Fox News Midtown, citing that he will be running on his record, not Sean Stockton's rhetoric. Stockton called upon Governor Jared to accept the debate challenge. Meanwhile, Channel Two News has learned that Senator Stockton is being pressured to drop out of the race, and sources tell Channel Two News that a meeting between the Republican contenders might happen as early as today.\"\n\n\"And another political hot potato has emerged in Midtown.\" said Bettina. \"Experts are telling Channel Two News that with SBI Director running against Governor Jared, who is widely expected to easily win the Republican nomination, it will be difficult for the SBI to communicate with the Governor's office, and vice versa. Republicans have called upon Director Lewis to take a leave of absence from the SBI while he runs for Governor, but Mr. Lewis has refused, stating that Governor Jared should likewise take a leave of absence. Channel Two News has learned that each side will likely set up liaisons to avoid communication problems during the Election season. And now to Nick Eastwood for Sports! When are we going to get to play baseball, Nick?...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" said Cindy Ross, coming into MCD, \"are you guys ready for some real news?\" Everyone murmured that they were as Cindy came up alongside me.\n\n\"Mrs. Milton,\" Cindy called out. \"Don't keep us in suspense. Roll that beautiful footage.\"\n\n\"Yes ma'am.\" said Mary. She took over the monitor on the wall we'd been watching Bettina on, and rolled a video.\n\nMy eyes widened as I watched... myself. It was a Youtube video of my press conference from the previous Friday, where I ripped the reporters and supported the Marine Corps. The curse words were silenced out (thank goodness), but the message of support for the Marine Corps was clear.\n\n\"This is going viral and is hot stuff right now.\" Cindy said. \"The comments are 90% positive and are nationwide. Welcome to the big-time, Commander.\" After hearing the tape, the other Detectives in the room clapped for me.\"\n\n\"Guys,\" I said, \"I appreciate the sentiment, but this is a 'teachable moment'.\" That got some groans as I continued: \"This could easily be a very ugly exchange in a press conference. It could easily be a police officer beating someone to death, shooting a dog, or shooting a person in cold blood. Our jobs are hard now... and you have to be aware of people out there with the desire to make it worse for you.\"\n\n\"Understood, sir.\" said Cindy. \"But we're still loving how you kicked the Media's ass yesterday.\" A chorus of support rang forth.\n\n* * * * * * * * * * * * * * * *\n\nSBI Public Relations Director Michael Horner came up to the podium in the Westphalia offices of the SBI. \"Good morning, ladies and gentlemen. I am here today to show that the man that was killed in the SBI raid last week was indeed a drug distributor, having set up pipelines from Afghanistan to America, and bringing in millions of dollars worth of opiates to sell to our children. The SBI's actions in this case were correct, and we are taking action to gain their release after being illegally arrested by Commander Troy of the TCPD.\"\n\nHorner gave dates of Guernica in Afghanistan, and gave details of the drug pipeline. He also reminded reporters of the Iron Crowbar stopping an SBI drug raid with machine gun fire. \"Commander Donald Troy always seems to take the side of the drug offenders, and that needs to be investigated.\"\n\n\"We also ask how Commander Troy and his Officers arrived at the scene of the crime so quickly.\" continued Horner. \"There is no way they could've gotten there just three minutes after our heroic agents, unless they knew we were coming. And that would imply their complicity in the death of Guernica.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Old news.\" I said at the press conference less than an hour later, referring to a question about the machine-gun incident. \"Move along. Next question.\"\n\n\"The SBI laid out a strong case of Guernica's drug pipeline.\" said John Hardwood. \"Are you sure you want to continue defending this criminal?\"\n\n\"Okay,\" I said, \"you said the dates were---\" I named dates, Hardwood confirmed them.\n\n\"Well, the funny thing...\" I said, bringing out a sheaf of documents and hurling them at Hardwood, hitting him in the chest, \"... is that those documents will prove that on those dates, Guernica was in Iraq, had not set foot in Afghanistan and would not do so for many months into the future. You can confirm that information with both the Pentagon and the FBI. \n\n\"So I would ask why Director Jack Lewis's SBI not only murdered Gunny Guernica, but have now committed criminal slander against him with a false smear campaign. Take your time and get a good, well researched answer on that, Mr. Hardwood. Maybe Director Lewis can himself explain why his SBI is now trying to smear the good name of a Marine they murdered, as well as trying to smear my name.\"\n\nI could feel the hatred of the Press as they realized I was playing them like the fish they were. \"So,\" I said as I prepared to leave the podium, \"is this Press conference going to be on Youtube also, like the last one was?\" The Media members looked confused, and talk between them began. \"Look it up!\" I said as I walked down the aisle and out of the Press Room.\n\nPart 13 - Cutting Bait\n\n\"Come in, Sean.\" said Val Jared as the State Senator and candidate for Governor was ushered into the office. It was the private office of the Governor, a small room behind the large public office. \"Can I offer you some coffee, tea, water?\"\n\n\"No thank you, Governor.\" said Stockton. He sat down at the designated seat opposite the Governor at the small table.\n\n\"Sean, we've been friends for years, and we've worked together and fought a lot of political battles together.\" said Jared. \"So I obviously do not want to go through a deeply painful primary process against you.\"\n\n\"Then why did you run again, Governor?\" asked Stockton. \"If you'd run from the beginning, I never would've gotten in. Now I look like a total fool.\"\n\n\"Nonsense, Sean.\" said Jared. \"And call me Val while we're in here having this private meeting.\"\n\n\"I could not be so disrespectful, Governor.\" said Stockton, meaning it as a gesture of respect.\n\n\"Look.\" said Jared. \"I am prepared to offer you one of several positions when I win re-election. I'm going to need a new SBI Director, that's for sure. I'm also probably going to need a new Attorney General, or one of the new Regional Director positions we're creating.\"\n\n\"I appreciate it, Governor,\" said Stockton, \"but I'm a Legislator, first and foremost. I'll still have my State Senate seat.\"\n\n\"And you can fight Katherine Woodburn every step of the way as she attempts to consolidate power in the State Senate.\" said Val Jared. \"Or... you can run the SBI and make it into a much better organization, give it the integrity it needs so badly.\"\n\n\"So you drop out,\" said Jared, \"you get your campaign debts paid off, you'll have something in my administration or you can stay in the Legislature, and you grow the name recognition and get ready to run for Governor again in four years.\"\n\n\"All right.\" said Stockton, pretending to concede, now getting what he wanted and needed in the face of the inevitable. \"I'll drop out and endorse you, and we'll see where it goes. I just have one question, and just for my personal curiosity.\"\n\n\"Sure, go ahead.\"\n\n\"Why did you get back in?\" \n\nVal Jared nodded, his face something of a grimace. \"It's like this, Sean. I was ready to let it all go and retire, and then this thing with the Marine came up. I support the Marines. My daddy was a Marine, and he loved the Corps more than he loved my mama and me. Jack Lewis and his thugs murdered that Marine, then just tried to cover it up by smearing his name. Thank God for the Iron Crowbar, though. He is going to shove the Crowbar of Justice so far up Pelletier's ass that Pelletier will be shitting nails for the rest of his worthless life.\"\n\n\"Some people don't like that man, the Iron Crowbar.\" said Stockton. \"Be careful of him.\"\n\n\"That man is going to clean up the SBI, after he finishes with what he's working on now.\" said Jared. \"You have no idea of what he is uprooting in this State and this Nation. But anyway, back to the SBI. I can see that Jack Lewis has turned it into a den of corruption. He has destroyed the reputation of what was once the best State Law Enforcement organization in the Nation. And so... I'm running to keep Jack Lewis from doing to the State what he did to the SBI... and to clean up the SBI in the next four years before I retire.\"\n\nStockton nodded, accepting the explanation. He did not know that it was only partly the truth.\n\n* * * * * * * * * * * * * * * *\n\n\"Who in the hell put that out there?\" asked Jack Lewis. \"I mean... didn't you guys know that the Iron Crowbar could check the veracity of that data? Even if the Media wasn't going to? Hell, especially if the Press wasn't going to...\"\n\nDeputy SBI Director Robert Gaston said \"We got that data from the Pentagon. We double-checked it with our people in the FBI, people we can trust. It looked good. The data looked good. And only after we ran with it did it come out about the attempted cyber-attack to change the data, and the Iron Crowbar having the real information.\"\n\n\"I'd say we were set up.\" said SBI-NTF Director Richard 'Dick' Ferrell, his droopy mustaches wilting even more with his depression.\n\n\"You are actually going to sit there and tell me the Pentagon and FBI used some of their immensely valuable time to concoct this scheme to fuck with us?\" replied Lewis. \"C'mon, Dick, that's beneath you.\"\n\n\"With respect, sir,\" said Ferrell, \"they don't like us as it is, and now they're pissed at the treatment of their Marine. This makes us look even worse now. And don't forget that the Iron Crowbar is working with the FBI, and his wife is... well, you know who she works for.\"\n\n\"And you'll be telling me next,\" said Lewis, \"that the Media helped out by letting the Iron Crowbar humiliate them in that video that went viral. My God, that was better for Val Jared than any advertising his idiots of the State Republican Party could've dreamed of, and he got it for free.\"\n\nJust then there was a knock on the door, and Lewis's assistant looked in. \"Sir, they're ready for the meeting now.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely MILF reporterette at 10:00am, still Monday March 21st. \"We now go to the State Capitol in Midtown for a breaking announcement! Nick, are you there?\"\n\n\"Yes, Bettina!\" shouted Nick Eastwood from among the throng of reporters in the main atrium of the State Capitol. \"I was here to cover the Conference meetings when we were alerted that State Senator Sean Stockton was going to speak now, at 10:00am. Oh... here he comes now!\"\n\nThe cameras all went to Sen. Stockton as he came to the bank of microphones on the podium. \"Thank you for coming on such short notice.\" said Stockton. \"Today I am suspending my campaign for Governor of this great State. While I am proud of the great campaign we ran, and while I greatly appreciate the effort my staff and many volunteers have made, I also understand the need for Republican Party unity behind the best candidate possible. Therefore, I am endorsing Governor Val Jared for another term as your Governor...\"\n\n\"And there you have it.\" Nick Eastwood said. \"Senator Stockton has bowed out of the race for Governor. It's going to be Val Jared vs. Jack Lewis.\"\n\nBettina said \"Great job covering politics for us, Nick! A lot different than Sports, I would guess.\"\n\nEastwood flashed his brilliant smile as he said \"Not as much as you think, Bettina! When it comes to our Conference, things can get really political... and make the Governor's race look like a tiddlywinks match...\"\n\n* * * * * * * * * * * * * * * *\n\nThe applause died down as Jack Lewis's campaign group, Democrat legislators, and staffers turned from the televised announcement of Stockton dropping out of the race.\n\n\"Okay, guys, that's one down and one to go.\" Lewis said. \"But in reality, this only helps the enemy gather around one candidate. Okay, Queenie, what do you have for me?\"\n\n\"Sir,\" said the Queen of Opposition Research, \"your numbers did begin to slip after the SBI shot that dirty Marine baby-killer. You're now behind 48-45, with Libertarian candidate Blade Schwartz at 2%, and five percent undecided.\"\n\n\"Okay, guys.\" said Lewis. \"Let's not speak such rhetoric out loud. As you might know, things get put on Youtube, and those things can hurt us.\"\n\nHe stood up to address everyone clearly. \"Guys, I don't know who did it, I don't know what happened about that data, but I do know one thing. There comes a time to fish, and a time to cut bait. We... are going to have to cut bait on this one. We'll do what we can for our arrested SBI Agents as far as legal representation. But we can do no more for them. They're on their own...\"\n\n* * * * * * * * * * * * * * * *\n\nIn the room were Lewis, Ferrell, Gaston, State Senators Richard Langdon and Katherine Woodburn, and the Queen of Opposition Research.\n\n\"Queenie, as much as we agree with your earlier comments, I would recommend that you don't say that about the Marines in front of the Iron Crowbar.\" Jack Lewis said.\n\n\"What's he going to do? Kill me?\" asked the Queen of Opposition research, poster child of the Leftist Millennials, with little respect for anyone or anything.\n\nKatherine Woodburn spoke up and said \"Yes, Queenie. He just might. If the Iron Crowbar heard you say that, you very well might be found dead in a dumpster. And I am not kidding about that. Remember what happened to me after that Police dog was killed. Remember what happened to Senator Langdon. Remember what happened to Henry R. Wargrave.\n\n\"With Commander Donald Troy, the Iron Crowbar... \" Katherine continued, choosing her words carefully, \"...the normal rules we hold the Republicans to, the rules of decency that we demand the common people follow but we are above... the Iron Crowbar cannot be held to. He does not play the Game the normal way. He simply does not care.\"\n\n\"Good Lord, Katherine...\" said Jack Lewis. Robert Gaston was totally shocked.\n\n\"She's right.\" said Richard Langdon, a cold-blooded killer himself. \"The Iron Crowbar has put us off our game by playing on different terms... sometimes our own terms.\"\n\n\"Yes, but why say it out loud?\" said Gaston.\n\n\"To make a point.\" said Katherine Woodburn. \"I told you before that plans are being put into effect to destroy the Iron Crowbar, the only man who is a real threat to us. We will do this in two ways. First, we will use his own actions against him. We will destroy his reputation.\" She paused for effect.\n\n\"And second?\" asked Jack Lewis.\n\n\"Also as I said before: we have a friend, a great great friend, who is going to take care of that for us.\" said Katherine. \"He is going to obliterate the Iron Crowbar... and every member of his family of every generation. There will be nothing left of the Iron Crowbar when this great man gets done with him. Nothing, including the Iron Crowbar's filthy progeny... nor anyone who shares his blood...\"\n\nPart 14 - The Tipster\n\n\"Great news!\" said Paulina. \"The Grand Jury brought indictments against the five SBI Agents who didn't take deals. Krasney is going to let me run with it, too. I've already filed the formal charges, and with an 'aggravating circumstances' for Pelletier. I'm going for the death penalty for him.\"\n\n\"That's great!\" I said, smiling for the first time in a while. \"By the way, what about Assistant Fire Chief Jefferson?\"\n\nPaulina frowned, then got a resigned look on her face. \"Krasney offered to drop the charges in exchange for Jefferson dropping his lawsuit against the Council and you. Jefferson told Krasney to pound sand. Krasney gave it one last shot to get Jefferson to cop a plea, but Jefferson refused and even dared Krasney to take it to trial. So Krasney now is making the excuse that he thinks Jefferson wants to use the Courtroom as a stage to attack you, and he doesn't want to give Jefferson that stage.\"\n\n\"He's going to drop it, then.\" I said. \"And that pisses me off. Stay here and listen to this.\" I picked up the phone and called my attorney, Bernadette Gillem.\n\n\"Hi... this is Don Troy... yes, fine, how are you?... listen, did you file that countersuit against Jefferson?... well, can you file it on my behalf, since he named me in the suit?... okay, thanks. Yes, file it... okay, bye.\" I hung up.\n\n\"Okay,\" I said, \"I've joined the battle. Krasney can offer whatever he wants, but I've flied a countersuit to Jefferson's, at least the parts where I'm personally named, and I won't drop it.\"\n\nPaulina grimaced as she looked at me. \"You know you could lose your indemnification over that.\" she said.\n\n\"I don't care.\" I said. \"I bought my own liability insurance years ago. So you can tell Krasney that his efforts to bury this are fruitless, and he might as well go all in and bring the charges.\"\n\n\"I'll tell him.\" said Paulina as she got up to go. As she was walking to the door, she turned back. \"Don,\" she asked. \"Why do you always have to escalate things? Why do you always pour gasoline on the fires others are trying to put out?\"\n\n\"Because, Paulina...\" I replied, \"... if others won't do the right things, and stand up for Justice... then I'm left with no choice but to fight for myself, and my own way.\"\n\n* * * * * * * * * * * * * * * *\n\nNoon, at the Cop Bar. Jack had brought his entire FBI Team, and I'd brought Cindy and Martin Nash.",
        "Lindy Linares said to me \"The facial recognition software was unable to give us any exact matches to the blurry pictures from the Reubens crime scene. We ran the program over the entire weekend, and so far nothing has come up of this guy Roland anywhere... except occasional visits to the State Prisons to confer with clients.\"\n\n\"Needless to say,\" Jack Muscone said as he enjoyed his double cheeseburger, \"we're going through the names of every client he visited, looking for connections to Superior Bloodlines, or any of the names in your previous cases. Not much there, so far.\"\n\n\"We did work up those digital sketches you wanted.\" Lindy said. She handed me the pictures and I looked at them.\n\n\"Definitely a possibility.\" I said. \"By the way, did you work up those sound recordings?\"\n\n\"Sure did.\" said Eduardo Escobar. \"There's a jump file with the audio recordings in the package we're giving you. We got a voiceprint pattern, but it doesn't match anyone else's on file.\"\n\n\"At State Prison...\" I said, \"... was Roland ever in the vicinity of Watch Captain Lockhart?\" I noticed everyone looking over at Jack. \"Jack, did you just lose another one hundred dollars?\"\n\n\"No, just twenty.\" said Muscone. \"To answer your question: we didn't see much in the video snippets we got. But I checked, and Lockhart was on duty at the prison that Roland went to... every single time.\"\n\n\"We're getting close-rrrrrrrrr.\" I muttered. \"Okay, nothing more on that for now. So, it was very interesting that the data sent to the SBI by the Pentagon turned out to be cyber-hacked, while the real and original data was subsequently found and sent to me. You guys behind that? Or your boss?\"\n\n\"Not us.\" said Muscone. \"We're not good enough nor have authority enough to do that. I figured your Mouseketeers were at work.\"\n\n\"Noooooo.\" I said. \"They don't fuck around with things like the military's computers. My people also are more efficient than the hackers... these hackers only changed the data in one place, but it's backed up. And other records in other places, like the pay system, weren't also changed. My guys... would not have been so sloppy.\"\n\n\"So who pulled that off?\" asked Jack. I could tell the FBI people were listening intently while trying to pretend they weren't. Cindy was seeming looking off to one side.\n\n\"Let me just say that something like that came from a very, very high level.\" I said. \"Higher than all our pay grades, put together.\"\n\nCindy then looked up. \"Hey, look.\" she said. \"They're burying Gunny Sergeant Guernica at Arlington National Cemetery.\"\n\nWe all looked at the TV. The cemetery ceremony was being shown on the City's KSB feed. I watched as the Marine Honor Guard folded the American flag with formal, crisp movements. Then it was presented to Sergeant Guernica's widow, her two small children next to her. The little boy Miguel had a band-aid patch over where his face had been branded by an SBI Agent... a thug I still could not get properly identified.\n\nWe finished our lunch in near-silence. Jack Muscone expensed it. I thanked the FBI guys for their help and information, then Cindy and I left for Headquarters. Nash said he'd get a ride with Sandra, by the way, so he didn't come with us.\n\nAs we drove, Cindy said \"I have rarely gotten the vibe from you that I did when you were watching that funeral. Why is it affecting you so much? I mean, yeah he was a Marine, and yeah, they abused his children, but you're still hot over it.\"\n\n\"Yes.\" I said. \"Yes I am. We'll talk about it later this afternoon. I have two things I need to do first.\"\n\n* * * * * * * * * * * * * * * *\n\nSBI Agent Carter Fischer came into the University Psychology Building and went to the office of Dr. Laura Fredricson. Introducing himself to Gayle Roberts, he was admitted into the room, which seemed empty as the door was closed behind him.\n\nThen he saw the chair behind Dr. Fredricson's desk wheel around. The person sitting in that chair was... the Iron Crowbar.\n\n\"Thank you for coming, Agent Fischer.\" I said. \"This is the safest room in the County to have a private talk that can remain private. Have a seat.\"\n\nFischer did so, sitting in front of the desk. I slid a piece of paper over so he could read it. It read: It was you that called in the tip?.\n\nFischer looked up at me and just nodded. I took out a small plastic ashtray, set the paper on fire, and let it burn to ashes in the ashtray as Fischer watched.\n\n\"Agent Fischer,\" I said to start, \"I am very rarely wrong in my evaluations of people, if I do say so myself. You are one of the very few I missed on; I thought you were going to be one of the good guys. \"So, I just want to hear your whole story, off the record, just between us.\"\n\nFischer said \"From the beginning?\" I nodded.\n\n\"I always wanted to be an FBI Agent.\" said Fischer. \"But as you can see, I'm pretty skinny, and not all that athletic. So I didn't make it through Quantico. But I did get into the SBI as a data analyst, then managed to get into their full Agent program.\"\n\n\"I don't think I'm one of the corrupt ones.\" said Fischer. \"But I saw what was going on around me. I would never actively do anything dirty, but I let what others were doing slide. I thought it was just the normal political machinations of a bureaucracy.\"\n\nI nodded. \"I can understand that. So what happened?\"\n\n\"Agent Grigsby, who is a rock solid guy, asked to not work with Greenwalt anymore. Grigsby said Greenwalt was a racist and constantly making racist comments. Grigsby also said that Greenwalt was immature, and acted like our missions were ROTC exercises in the woods or something. So they had me working with Greenwalt at times. Not all the time, but I was supposed to get him squared away, and at least get him to stop talking the racial stuff.\"\n\n\"Well,\" continued Fischer, \"Greenwalt caught the eye of some people in the NTF. Ferrell had Pelletier bring Greenwalt in, to see if Greenwalt would be good on things like drug raids and paramilitary exercises. Ferrell and Pelletier thought that Greenwalt would wake up and get it together when he realized that those were real bullets coming at him... or Greenwalt would be a casualty, and that would be that.\"\n\n\"Tough training program.\" I said. \"I'm glad the Police Academy is not that harsh.\"\n\n\"Believe me, Commander,\" said Fischer, \"that is not the norm. It was just Greenwalt that I ever heard that said about. Anyway, they put him on Pelletier's team, which is basically an SBI SWAT Team. We've been beefing up since you shot up some our people in that bad raid in your County with that machine gun.\"\n\n\"So glad I could assist in your people's training.\" I said acerbically. \"So you didn't work with Greenwalt anymore?\"\n\n\"Oh yeah, I did.\" he said. \"If we got a call, like that Linda Farris calling us in, he usually was tagged to go with me. And when you showed up and was about to rip Ms. Farris a new one, he and I were only glad to get out of there and out of your sight as quickly as possible.\"\n\n\"Anyway,\" Fischer continued, \"this raid was being planned, and Greenwalt has a habit of not keeping his mouth shut. He was doing a bit better about not being overtly racist, but he still talked a lot. So the night of the raid, d a bunch of us went to a party at one agent's house; the driver Rogers's house. They would have parties to disguise how they were getting together, and then *poof!* suddenly were up and gone in vans.\n\n\"Well, there were a bunch of us not on that raid, some not even in the NTF, and some of those guys were bantering about the upcoming raid. I happened to hear Greenwalt telling someone that they were supposed to go to Nextdoor County but that they really were going to your County, and they had to make sure they got in and out of there before you, the Iron Crowbar, got wind of their raid.\n\n\"So I called Lt. Evans in Nextdoor County.\" said Fischer. \"I had worked with her some on drug information, though she doesn't trust us any more than you do. I gave her a code sign we'd worked out if a C.I. we were both using got compromised, so she knew it was me. I told her what I knew. I guess she called you guys.\"\n\nI nodded. \"So, how much of this are you willing to put down in an affidavit, and testify to.\"\n\n\"All of it, if I have to.\" said Fischer. \"Look, I just want to be an Agent, State or Federal. I looked into other States, but many of them are as bad or worse than this one. If I testify, I'm done in that capacity. But I'll do it if I have to, because it's the right thing to do.\"\n\n\"Agent Fischer,\" I said, \"would you like to help me and others clean up the SBI? Make it a force for good, and as free as possible of corruption?\"\n\n\"Sure.\" said Fischer.\n\n\"Then we won't use your testimony, unless it becomes zero-option necessary.\" I said. \"What I'd really like for you to do is just keep your eyes and ears open. Do what you've been doing, going with the flow, but just do good Agent work. If Greenwalt gets past this, keep an eye on him to see if he's connected to other racially-related people, stuff like that.\"\n\n\"I'll do it, sir.\" said Fischer.\n\n\"All right, thanks for coming by. I'm thinking better of you now.\" I said, standing up. He stood up and we shook hands.\n\n\"I appreciate it, Commander.\" He crossed the long office and exited from the door in which he had come in.\n\nThe door to the nursery behind the desk opened. Cindy Ross came out.\n\n\"Do you trust him?\" she asked.\n\n\"Yes and no.\" I said, sitting back down in Laura's chair. Now how is it that she got a better chair than I have? I idly wondered. \n\nThen I said \"Methinks what he said was true, but he left out a few things. He's working for someone, maybe the FBI, and was already gathering information on white supremacy groups from Greenwalt.\"\n\n\"How do you know?\" Cindy asked.\n\n\"Elementary, my dear Watson.\" I said. \"Greenwalt trusted Carter there enough to keep talking things like raids in front of Carter. So Carter is considered 'okay' by Greenwalt and maybe others. So he's ingraining himself with them. If he were really trying to keep Greenwalt from talking race, as Grigsby apparently did and got fed up with, then Greenwalt might work with Carter, but likely would not say much to him. Ergo, the real truth is that Fischer is worming his way into Greenwalt's all-white world.\"\n\n\"The logic holds.\" said Cindy. \"But what about him informing Molly of the raid, who informed me instead of you directly, then I came to you?\"\n\n\"You've heard me say that sometimes the Media will actually tell the truth, and I call it a 'Random Act of Journalism'.\"? Cindy nodded, and I said \"This is similar. Fischer is sort of on the fence, but he's basically a good guy. He knows something really is badly wrong about this raid he's hearing about. So he alerts Molly to the details, which is the right thing to do, while keeping his own person out of the picture. With Mr. Fischer, there... we'll just have to see...\"\n\nPart 15 - Voiceover\n\nDetective Joanne Cummings and I went to the office of Kroger Regional Director George White, whose dog had been killed in the 'Going Rogue' case. After we were admitted, I showed him some pictures.\n\n\"These are artist sketches.\" I said. \"Mr. White, do any of them look like the man that threatened you when you wouldn't smuggle goods for them?\"\n\nHe looked through the photos, and his eyes kept coming back to one man in a reddish-brown beard and mustache. \"I can't swear to it, but this guy...\" he tapped at the picture as he spoke, \"... he sure looks close.\"\n\n\"Thank you, Mr. White.\" I said. \"And I don't suppose you've heard from the guy again?\"\n\n\"No.\" said White. \"But my wife and I are being audited by the State Tax Authority, going back seven full years. We've retained an attorney; the State seems to be out for blood.\"\n\n* * * * * * * * * * * * * * * *\n\n\"What did you think, Detective?\" I asked as we got in my SUV.\n\n\"If you can find the man and put him in a lineup,\" said Joanne, \"I think Mr. White will correctly identify him.\"\n\n\"Me too.\" I said.\n\n\u2028\"Where to now, sir?\" I asked.\n\n\"To the Campaign Office of Jenna Stiles. \" I said. \"And this is why I brought you instead of Captain Ross. Prepare for possibly emotional times...\"\n\n* * * * * * * * * * * * * * * *\n\nI played the audio tape for Jenna. As I did, I noted her recoil sharply, her eyes widening, almost popping out of her head.\n\n\"Oh my God.\" said Jenna.\n\n\"Do you recognize this voice, Jenna?\" I asked.\n\n\"It... I can't testify to it...\" she said, \"but yes, it sound a lot like the first man, the one that forced Gor-don to rape me, and then he raped me...\"\n\nJenna then said \"And... he's the one whose voice I thought I'd heard before that night. Do you know who he is?\"\n\n\"Before I answer that,\" I said, \"take a look at this sketch of a man in an mask. Does it look like that man?\"\n\nJenna's eyes teared up. \"Again... I can't testify to it, but... yes...it does look like that masked man.\"\n\n\"I know this is hard, Jenna,\" I said, \"and I appreciate you doing this. So let me ask you, do you know a lawyer named Charles Roland?\"\n\n\"Yes.\" said Jenna. \"He was representing Perry Richards in some deal that was going on several years ago. I wasn't an ADA yet, I was working for the people on the other side of the deal. Roland was a real asshole... oh my God...\"\n\n\"His voice?\" asked Joanne Cummings, who was sitting next to Jenna and comforting her.\n\n\"I... I think so...\" said Jenna.\n\n\"If we catch this guy,\" I said, \"do you think you might be able to identify him from moles or other marks on his body?\"\n\n\"Yes.\" said Jenna.\n\n\"Okay, again I am sorry to have to put you through this.\" I said.\n\n\"If it catches the bastard, it's okay.\" Jenna said. I had the Campaign Manager come in, who I'd forewarned about the questioning that was to occur. She comforted Jenna as Detective Cummings and I left.\n\nPart 16 - Solution\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" she shouted at 7:00am, Tuesday March 22d. \"Channel Two News has learned that District Attorney Gil Krasney has decided to not press charges against Assistant Fire Chief William Jefferson for assaulting a Police officer and other charges. However, Jefferson is still under investigation by the Inspector General, and may be relieved of his duties as Assistant Fire Chief.\"\n\n\"Jefferson's lawyer made a statement that his lawsuit against the County and Commander Donald Troy would continue. Yesterday, Commander Troy filed a counter-suit in the case, clouding the legal entanglements considerably. Town & County Councilman Thomas P. Cook has stated that if Commander Troy does not drop the counter-suit, he will lose his indemnification as a Police Officer, but the Mayor and some other Council Members issued a counter-statement saying that Cook was not speaking for the Council and has no authority in that matter.\"\n\n\"In the case of the shooting of a Marine by the SBI on a raid gone horribly wrong, five State Agents were formally indicted and have pled 'not guilty' of multiple charges, including first degree murder. In the case of the leader, Agent Justin Pelletier, the Town & County District Attorney's Office has said they will seek the death penalty for the aggravating circumstances of the case.\"\n\n\"And finally,\" said Bettina, \"Channel Two News has learned that the FBI may begin an investigation of the SBI very soon. The FBI will not confirm this, but has not denied it either. And SBI Director Jack Lewis, who is running for Governor, has said he has heard nothing at all of any possibility of such an investigation.\"\n\n* * * * * * * * * * * * * * * *\n\nI finished my chicken Caesar salad as Jack Muscone polished off his second double cheeseburger. We were eating lunch at the Cop Bar, which was surprisingly not busy today. The rains and messy road conditions probably were a factor.\n\n\"Nice appetizer.\" I teased. \"What's the main course?\"\n\n\"Hell, Don,\" replied Muscone, \"I haven't eaten since lunch yesterday, and I was up half the night working on stuff.\"\n\n\"You guys are busy.\" I said.\n\n\"Thanks to you.\" said Muscone quietly. \"What I wanted to tell you is that the rumors of opening up an investigation on the SBI is true. What has happened is that we went to get a warrant to begin surveillance on Charles Roland. The Federal Judge agreed that we had probable cause based upon what you gave us, and he issued it, but then he called me and the U.S. Attorney into his Chambers.\n\n\"While there, he said that with the Belfort Badge Gang investigation, and Roland being an offshoot of that, and with the SBI raid fiasco, he was supportive of our opening an overall investigation... but he wants it rolled into one package. So we've formed a Task Force. My team is on it, you and Cindy are on it as Consultants, Les Craig and Miles Winters are going to look into SBI connections with corrupt politicians like Dick Langdon. The idea is to bag just as many of these bastards as we can.\"\n\n\"Well, perish forbid I tell the FBI its business.\" I said. \"I just hope that you are prioritizing some things over others.\"\n\n\"What do you think is the most important?\" asked Muscone.\n\n\"Disguise Man.\" I said. \"He's the thread on the web that takes us right to the center, and the Consultant. Next is Louise Belfort, Watch Captain Lockhart, and the small armies they raise from time to time.\"\n\n\"I agree.\" Jack said. \"My boss... does not. Those Washington meetings with him and your wife and some of the highest level people in the Government... are allegedly about the ginning up of race wars in this country.\"\n\n\"I didn't think they were ready to go with that.\" I said.\n\n\"Neither did I, nor my boss.\" said Muscone. \"And I know very little. So you, me and my team, and Cindy can work on the Consultant, and my boss will keep his eyes focused elsewhere. In a way, that's good... I have carte blanche for our operation.\"\n\nSomething was going on, I realized. Both operations were big. But we were being directed to one and made to focus on one. Giving me, through my FBI friends, this kind of investigation of the SBI... that's dangling a *big* carrot in front of my face...\n\n* * * * * * * * * * * * * * * *\n\nBack at Headquarters, I was visited by a contingent of people. The Guernica family had come to say goodbye. They were moving to Arizona, where Mrs. Guernica had relatives. She thanked me for capturing the criminals, and for upholding her husband's honorable name in the face of smears.\n\nHer little daughter looked a bit scared of me, but Joanne Cummings held her and told her the big redheaded man was her friend. So the little girl smiled a little bit at me.\n\nAs for Miguel, he came up to me and said \"I drew a picture for you, Mr. Crowbar.\" \n\nI knelt down and looked at it. It was in crayon. My whole head was in orange, with lots of orange-red hair and very large ears. Did I really look like that? I thought. The rest of me was in blue, with a silver star pasted over my chest where my badge would be. And in my hand was what looked like a red candy cane, representing my crowbar. That would do, I thought. That would do.\n\n\"This is very good, Miguel.\" I said. \"Will you help me put it on my wall?\" I put him on the desk and we thumbtacked the picture next to Pete Feeley's shield. Miguel was very happy. I would later put the drawing in a frame and hang it on the wall on the other side of the room.\n\n\"Miguel,\" I said, \"I want you to do something for me. When you're growing up, I want everything you do to be something that will make your daddy proud of you, okay? Your daddy was a good man, and he's watching over us somewhere up there. Make him proud of you, okay?\"\n\n\"Yes sir!\" said Miguel. I put him back down on the floor, noticing that his mother had tears in her eyes.\n\nAs everyone was leaving, Miguel suddenly ran back and hugged my leg. \"Thank you Mr. Crowbar!\" he said, then darted back to his mom. Cindy was watching, and her eyes got a little moist. I held back, but thought to myself that moments like that made what I do worth the fight, and worth the pain.",
        "* * * * * * * * * * * * * * * *\n\nThat evening, we had dinner at the Cabin. Laura was back, and Carole was overjoyed to see her mom again. My mother Phyllis was there, as was Chief Griswold, Cindy, Teresa, Todd, Jack Muscone, Tanya Perlman, little Pete, Paulina Patterson and baby Tasha, Sandra Speer, Martin Nash, Molly and the boys, and Chief Moynahan.\n\nI had told Cindy about my findings about Charles Roland. Her ice-blue eyes became jet when I told her of his very likely involvement in Jenna's ordeal. I also promised that his takedown would belong to her.\n\nAfter dinner, we talked about the case, reaching the final part, what everyone wanted to know:\n\n\"That just leaves one big question, son.\" said my mother. \"I keep hearing that you believe the SBI raiders did not make as much a mistake as we are led to believe.\"\n\n\"Not only that,\" said Chief Griswold, \"when Commander Troy told Governor Jared what he thought, the Governor suddenly announced he was running for re-election.\" Everyone was stunned... and of course wanted to hear a lot more.\n\n\"All right.\" I said. \"I have here a copy of the warrant that was issued for the raid. Everyone please take a look at it.\" As they did, Ross had decided to play a game of pinching my nose, so I played with him for a moment.\n\n\"Oh, I see it.\" said my mother the instant she examined the documents. No one else caught on. Chief Griswold did not bother to look at it. He was holding baby Jim, who was fascinated by the Chief's big handlebar mustaches... just as his sister Carole had been months before at one of these victory parties.\n\n\"Still don't see it.\" said Cindy.\n\n\"You've got a lot on your mind, I can tell.\" I said. My mother patted Cindy on the arm, and Cindy patted my mom's thigh in appreciation.\n\n\"So,\" I said, you may have noticed that the letters and numbers are very much in the European-style. The 'z' has a line through it to differentiate from a '2', the '7' has a similar horizontal line to differentiate it from a '1', and the '1' has a little flag-tail on top of the line.\"\n\n\"Now in America, we generally don't write that way.\" I continued. \"I made a check of as many places of origin of SBI warrants as well as other Government documents as I could. There is only one place where this writing is consistently used, and it's the Clerk of the Court of the Midtown Superior Courts. She's in her sixties, and she emigrated from Germany forty years ago.\"\n\n\"So,\" I continued, \"most of the time, 70% of the time for the pollsters out there, the SBI uses the Westphalia Courts to get their warrants. 20% of the remaining time, the SBI gets the warrants at the local jurisdiction of where they're executing it. And the last 10% is the Midtown Courts.\n\n\"Now usually warrants are typed.\" I said. \"Chief Moynahan and Molly will remember when I went down there once before, and I lamented on how long it took to get warrants. One of the reasons was because they insisted on typing them, for clarity. But then, after the Midtown PD made some complaints, they started writing them out longhand if they got backed up, or if the warrant was very quickly needed.\"\n\n\"So instead of going to Westphalia Courts, instead of going to our County's Courts, which was the jurisdiction for either our County or Nextdoor County, they go to Midtown. Why? Because that is where the woman that writes the Germanic numerals works.\"\n\n\"Someone asked for an address of 2461 Reservoir Drive. That's the Nextdoor County side of Reservoir Lake. Our side is Reservoir Road. I might add that there is officially no '2461' on Reservoir Drive, and that Tom Riordan does not live at his Riverside Drive home now... but that's not relevant to what I was seeing.\"\n\n\"So,\" I said, \"the SBI death squad rolled up, but the driver misread the address as '2467'. And that led to Gunnery Sergeant Guernica's death. He thought burglars were invading his home and he went to defend his family. He was obliterated, and his family is lucky to be alive.\"\n\n\"Because you got there in time.\" said Chief Griswold.\n\n\"Maybe.\" I said.\n\n\"So they misread the '1' for a '7'.\" said Cindy. \"And they meant to go to '2461'. So who lives there?\"\n\n\"The houses are odd-numbered on the right, even-numbered on the left.\" I said. \"So they meant to go three houses further down.\"\n\n\"But that's...\" Cindy said, and then her eyes widened. \"Oh my God!\"\n\nShe was looking over at Chief Griswold. \"That's your address, Chief!\" she exclaimed.\n\nEveryone gasped, looking over at Chief Griswold, who was nodding. Then they looked back at me, seeing a man whose face was set in iron.\n\n\"That's right.\" I said flatly. \"I do not believe in this many coincidences at once. They must think I am a stupid idiot that wouldn't see through that. I believe that the orders for this raid came from the top, from Jack Lewis himself... and the purpose and intent was the cold-blooded murder of Chief Antonio Griswold. And yes... I took what they did very, very personally. And still do.\"\n\n\"And once the Iron Crowbar showed his well-reasoned analysis to the Governor,\" said Moynahan, \"the Governor did not appreciate his friend Grizz being targeted like that. And his announcement to run again came swiftly.\"\n\n\"Can we prove this?\" asked Martin Nash. \"Any of it?\"\n\n\"If push came to shove,\" I said, \"I have a C.I. that heard one of the raiders say well before the raid that they intended to come into our County. We also have Graves's testimony. But linking Lewis to the killers, and showing intent? Ain't likely gonna happen.\"\n\n\"I'm sorry for that family.\" said Cindy. \"But I'm glad you're alive and still with us, Chief.\" She got up and went over and hugged the old Chief.\n\n\"So what are you going to do, Don?\" asked Jack Muscone.\n\n\"Payback is coming.\" I said. \"And it will be a bitch for Director Jack Lewis. He will regret the day he ever heard my name...\"\n\nPart 17 - Epilogue: Death Before Dishonor\n\nAt 4:00am, Wednesday, March 23d, I was awakened by my cell phone ringing... and Bowser barking at it. I answered. It was the Deputy Director of the FBI.\n\n\"Commander, can you come down to the Federal Building as soon as possible?\" he barked. \"And wear a sharp-looking uniform.\"\n\n\"Er, yes sir.\" I said. I got up, made a hasty toilet, kissed my wife on the cheek, then left. I was in my Duty Dress uniform. No idea what was going on, though.\n\nI pulled up and parked behind the Federal Building, gaining access with my consultant badge. The guard at the door asked another guard to escort me to the third floor, where the FBI rooms were. I could feel a touch of something in the air, not excitement, but not tension. I would soon find out what.\n\nGoing into the FBI area, I was brought to the conference room. I saw the FBI DepDirector, and across the room, and older man in a Marine Corps uniform.\n\n\"Thank you for coming, Commander Troy.\" said the DepDirector. He began introducing me to the Marine General. As the man turned to face me, I was stunned... he was no less than the Commandant of the United States Marine Corps, the highest Marine in the Nation!\n\nThis man's presence would literally be classified information. To say it was a surprise was a huge understatement.\n\n\"Ah, it's an honor to meet you, Commander.\" he said, coming up to shake my hand.\n\n\"Likewise, General.\" I said. I didn't know it yet, but this man would one day be Chairman of the Joint Chiefs of Staff. And if the FBI DepDirector gave off an aura of power, this man gave it off even more so.\n\n\"Commander, I have been briefed on your Police Force's response to the attack on Gunnery Sergeant Guernica and his family..\" said the General. \"I also was informed of your support of him in the face of smears, and I happened to see that video that's going around. I wanted to tell you personally that I am very grateful to you for your actions and your words.\"\n\n\"It was my honor, General.\" I said, still a bit stunned.\n\n\"Even so, I want you to have this.\" he said. He extended his hand and dropped a small black metal object into my hand. It was an Eagle, Globe, and Anchor, the official symbol and insignia of the United States Marine Corps. \"This was Gunny Guernica's, pinned on him when he graduated from Parris Island.\"\n\n\"Sir... I can't accept this.\" I said. \"His family should have it.\"\n\n\"They have his other ones.\" said the General. \"They wanted you to have this one. I know that you'll treasure it as you do those Army Airborne wings of yours.\"\n\n\"Yes sir, I will.\" I said, then remembered my manners. \"Thank you, General.\"\n\nHe shook my hand again, and said to the FBI DepDirector. \"We need to be getting back to Washington, William.\"\n\n\"Yes, we do.\" said the FBI DepDirector. \"Our plane is at County Airport. I'll be seeing you again soon, Commander.\"\n\nAs he left the room, the Marine Commandant said loudly \"Semper Fi, Commander!\"\n\n\"Airborne all the way, General!\" I replied, a Paratrooper to the last.\n\nHe chuckled, then the room emptied of all but myself. I looked at the Eagle, Globe, and Anchor in my hand, still stunned at what had just happened.\n\nI went to my SUV, and drove to Headquarters. I would frame the insignia, on a red background, and hang it on the wall near the picture drawn by Miguel. I would not forget. And I would fully avenge Gunny Guernica's death.\n\nThe lights in my officer were off. As I looked outside the window of my office, seeing the first threads of dawn, a song kept playing in my head. A song that had led Gunny Guernica and his fellow Marines for many years, and would carry the Corps forward...\n\nFrom the Halls of Montezuma\nTo the shores of Tripoli;\nWe fight our country's battles\nIn the air, on land, and sea;\nFirst to fight for right and freedom\nAnd to keep our honor clean;\nWe are proud to claim the title\nOf United States Marine...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/semper-fidelis-ch-03"
}