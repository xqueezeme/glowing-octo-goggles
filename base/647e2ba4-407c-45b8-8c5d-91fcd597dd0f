{
    "title": "Saturday Night School Ch. 08",
    "pages": [
        "(This is the eighth chapter of the Saturday Night School series, by Jessica Tang-Von Harper.)\n\nAfterwards, they fled into the gardens. \n\nThey raced across the meadow on bare feet, hand in hand, first running under the night sky but swiftly cutting to the left and seeking refuge in the shadows of the trees. In the course of their love-making, Michelle had pulled off Charlie's clothes, and now he walked beside her just as naked as she was, his clothes bundled in the crook of his arm like a football. He peeked at her, and reflected that, for once, he was actually more naked than she was. She, at least, still wore her stockings.\n\nThe night air felt cool on his skin. Charlie looked up at the tree branches that stretched above his head, picking out the occasional glint of a star through the ceiling of leaves. He felt a wary vigilance, walking through the garden with no clothes on, concerned that at any moment they would turn the corner and find someone waiting to catch them. Yet he also thought he understood something of the thrill Michelle felt when she walked outside naked.\n\nHis gaze lingered on her body, her skin speckled with the moonlight that slipped through the tree cover. He recalled how she had undressed outside in the parking lot, passing him her garments one by one, and afterwards he had locked the stack of clothing in the trunk of his car. Since that point, she had been nude, without any means of getting dressed again, completely trusting in Charlie to return her clothing to her at some undefined point in the future.\n\nShe was nude when they walked into Greenholt Gardens. She was nude when she met Ronni's brother Nick for the first time. She was nude while Nick gave them a tour of the gardens, and when Ronni had to leave and asked Charlie to walk her back to her car, Michelle remained behind, chatting with Nick, still nude.\n\nMichelle appeared very comfortable being naked, even while the rest of them wore clothes, but that didn't mean she was unaffected by the experience. Charlie learned just how much it had affected her when he returned from saying goodbye to Ronni and found Michelle spinning in place in the meadow. Michelle had flung herself at him, greedy with desire, and he'd been quickly divested of his own clothing. He and Michelle had made love on a picnic bench just outside the snack bar, in full view of one of the security cameras.\n\nCharlie pointed out that Nick could be watching them on the security camera, and Michelle was not only aware of the possibility, she was excited by it. She wanted to put on a show for Nick, to show him what she looked like with Charlie's cock inside her. She and Charlie had sex in several positions, and Charlie could tell that Michelle was always aware of that watching camera and the view she offered it.\n\nUntil they both climaxed. Michelle tried not to cry out when she came, but she couldn't stop herself completely, and her faint shrieks mingled with the distant calls of night birds. Charlie pulled free and painted a streak of cum along the top of her left stocking. They held each other, sweating and breathing hard, and Charlie could tell the spell was broken. Instead of putting on a show for the camera, now Michelle wanted to flee from it. So Charlie quickly gathered his clothes and they ran for the darkness. They only left behind their shoes, his sneakers and Michelle's heels, which still sat side by side under the concrete table.\n\nThey found the pathway known as the Brook Path, which followed the trickling brook that fed the garden's lily pond. The path led uphill, a dark and winding trail with occasional stone steps that took them higher and higher. To their left, they could see the shadowy line of the brook, and could hear the trickle of the water. To their right, the trees and ferns of the Tropical Garden grew thick and high, leaning over them. Charlie could hear small creatures hiding in the darkness, scurrying through the carpet of loose leaves, rustling the low branches. \n\nMichelle gazed into the darkness. \"It's a little scary, isn't it?\" she remarked.\n\n\"Yeah,\" Charlie agreed. \"But I don't think we'll get in too much trouble if we get caught. It'll be really embarrassing, definitely, but I'm sure we're not the first couple to sneak into the garden looking to be alone.\"\n\n\"I'm not so worried about getting caught,\" Michelle said. \"I'm more worried about getting eaten by a bear. Or murdered by a serial killer with an axe.\"\n\nCharlie tried to smile, but as he looked out at the darkness of the garden, it was impossible to completely dismiss those possibilities. \"It's kind of a horror movie trope, right? The teenagers have sex, and then the killer gets them... like punishing them for being immoral...\"\n\n\"Then we're in big trouble,\" Michelle said gravely. \"We've been so immoral tonight.\"\n\nCharlie chuckled and slipped his arm around her waist. He pulled her close, enjoying the feel of her skin. \"If an axe murderer gets me,\" he said, \"my last words will be, 'Completely worth it!'\"\n\nShe laughed. \"That's what your last words will be?\" She stretched up to kiss him. Down below, he felt her fingers circling his cock, squeezing it gently. Her breasts gently bumped against his chest. She murmured, \"I think my last words will be, 'Help! An axe murderer!'\"\n\n\"Don't worry,\" he told her. \"I'll make sure it takes him a long time to kill me, so you have time to escape.\"\n\n\"So sweet!\" Michelle smiled and kissed him again. Her hand continued to casually clutch his penis, and he could feel it hardening between her fingers. She tugged on it gently for a moment, and when she let go, Charlie could feel his cock pointing at a higher angle than before. \n\nNow if they got caught, he had the added shock bonus of a visible erection. \n\nThey reached an intersection where the Brook Path crossed a wider grassy trail. The grassy trail led to a wooden bridge on their right, traversing the brook. A light pole stood next to the bridge, bathing the intersection in a white glow. A wood bench painted dark brown sat under the light pole. \n\nMichelle walked directly towards the far-left corner of the intersection, and at first Charlie couldn't figure out why. She bent over and manipulated some long metal thing that jutted out of the ground, and Charlie realized that it was a faucet just before water sprayed out of the spout onto the grass. Michelle turned the water off and looked up at him. \"I'm going to clean off,\" she said.\n\n\"Okay.\"\n\nMichelle leaned over and caught the top of one of her stockings. She slowly worked it down her leg and finally tugged it off her foot. \"Will you keep track of these for me?\" She held the rolled-up stocking out towards Charlie. \"Do you have someplace you can keep them?\"\n\n\"Sure.\" Charlie plucked the stocking out of her hand and stuck it into the front pocket of his jeans. He did the same thing with her other stocking. \n\nMichelle turned on the water and cupped her hands underneath the spray. \"It's cold!\" she moaned. Nevertheless, she squatted next to the faucet and splashed water onto her legs, cleaning off the sticky evidence of their immorality.\n\nCharlie looked around the dark garden, feeling vulnerable in his state of nakedness. \"Maybe I should put my clothes on...\"\n\n\"Not yet,\" Michelle said.\n\n\"No?\"\n\n\"Go sit on that bench. I'll join you in a second.\"\n\nCharlie thought about mentioning that the bench was positioned right under the light, and he would be clearly visible sitting there. But of course, Michelle already knew that, and didn't care. He walked over and sat down on the bench, placing his bundle of clothes next to him.\n\nNaked in Greenholt Gardens. Charlie looked around, checking carefully to make sure no one was watching them. He didn't see anyone, but couldn't help feeling like he was on display. Maybe someone lurked in the shadows, watching them. The white light from the bulb overhead took away his night vision, and prevented him from penetrating the darkness off the trail. \n\nMichelle turned off the faucet and walked towards him, her body wet and gleaming in the glow of the overhead light. Charlie watched her careful, swaying walk; the contrast of her shining body against the background of dark foliage gave her approach a dreamlike quality. Perhaps that was all this was. Just a dream, and he would wake up any minute to find the whole night had been conjured up by his overactive imagination.\n\n\"What now?\" he asked.\n\n\"Now I want to give you a blow job.\" She lowered herself to her knees in front of him.\n\n\"You do? I mean... do you think this is a safe place?\"\n\nShe already had his cock in her hand, stroking it as she rested her elbow on his leg. \"Imagine walking by this bench, in the daylight when the garden is open and full of people,\" she murmured. \"We'll see this bench and remember that I gave you a blow job here. We'll always remember.\" She leaned over and kissed the head of his penis. \n\nCharlie felt himself rapidly stiffening under her attentions. He could feel her tongue swirling around his swollen head and he leaned back, his nervousness quickly overcome by the pleasure she was giving him. \"We'll call this bench the Blow Job Bench,\" he whispered.\n\nShe lifted her head and made a face. \"Eww. No.\"\n\n\"Sorry.\" He laughed. \n\n\"We just need to take advantage of this opportunity,\" she said. \"Who knows when we'll get the chance to do something like this again?\" She leaned over and her mouth enveloped his cock.\n\n\"Yeah,\" he sighed, and for the next several minutes, he didn't say a word. He slouched against the back of the bench, watching Michelle's head bob in his lap. Part of him wanted to close his eyes and focus on the sensations she was causing, but he couldn't bring himself to detach completely from the world around them. His eyes continued to scan their surroundings, on the lookout for any unexpected spectators.\n\nAs Michelle continued her earnest work, Charlie started to wonder what he would do if he saw someone approaching. He knew realistically that he would probably warn Michelle and they would retreat into the garden to hide, but he also felt aroused by the idea of not doing anything, of letting Michelle continue sliding her lips up and down his cock while he casually waved to the hypothetical approaching stranger. The thought of it excited him tremendously.\n\nHe glanced down at Michelle. He expected at any moment that she would abandon her oral manipulations in order to climb into his lap and take advantage of his extremely hard erection, but she seemed determined to make him climax only with her mouth. Her head bobbed tirelessly, rhythmically. His hands tangled in her hair, and they played with the illusion that he was moving her up and down on his shaft, fucking her mouth, although in reality she still retained most of the control.\n\n\"We'll remember this bench,\" he whispered to her. \"Whenever I see it, I'll think about how beautiful you look now, naked and on your knees, sucking my dick. I'll think about how you did such a good job that I came in your mouth. I think every time I see this bench from now on, it's going to get me hard again, just remembering how this feels right now, and I'll remember how sexy and beautiful you looked, with my dick in your mouth...\"\n\nShe made a low groaning sound, and for the first time, he noticed that one of her hands had disappeared down below, and she was almost certainly fingering herself. He continued whispering to her. \"Maybe someday, we'll be here in the day, when it's busy, and I'll remember how good this felt, and I'll just have to feel it again. Would you do that for me, Michelle? If I ask for you to do this again, even if it's daylight and people are walking by, will you take off all your clothes so I can watch you naked and on your knees, just like this, sucking my dick? Would you do that in front of all the people?\"\n\nShe moaned again, clearly turned on by the outrageous scenario he was describing. Her shoulder quivered as her hand moved rapidly between her legs. Charlie felt himself getting very close. He tried to continue his dirty talk, but now he could barely manage a rhythmic patter, \"Ahhh... Michelle... ohhh, Michelle... you're so good... ohh, you're so good...\"\n\nFinally, he threw back his head, closed his eyes and came. Her hand circled his cock, milking it for every drop, while her mouth waited above to lick it clean.\n\nHe opened his eyes, and she climbed onto the bench to press next to him. \"Thank you...\" he said.\n\n\"You're welcome.\" She leaned her head on his shoulder, her long hair falling down his front as if to clothe him. \"Is there any on my face?\"\n\nHe glanced at her. \"No.\"\n\n\"Good.\" She touched her chin anyway, tracing it with her finger. \"I thought about just letting it go on the ground... but then we'd have to figure out how to clean it up anyway, right? We couldn't just leave it. Not when we're guests here.\"\n\n\"Yeah...\"\n\n\"There wasn't much, anyway. Not like before.\"\n\nCharlie put his arm around Michelle and pulled her against him. For the first time that night, he noticed the chill of the night air against his skin, but where Michelle pressed against him, he felt warm. The world around them had become a dream again, the milky light cast by the lamp above their heads making a circle of light around them, like an island floating in a sea of darkness. Their lone bench sat along a piece of grassy path that disappeared into blackness in either direction. They were both naked, which was surreal in itself. Naked under the night sky.\n\nWe're not the only island, he thought. In the distance, he could see another lamp, casting its own circle of light, illuminating its own piece of the garden. Why did they bother? Lighting up such tiny bits of the garden and leaving all the rest to the night?\n\nMichelle's breathing felt slow and steady against his side, and her head nestled against his shoulder. He thought for a minute that she had fallen asleep. \"I wish we could stay here forever,\" he murmured, reminding her with those same words that they could do no such thing.\n\n\"I know,\" she sighed. \"It's probably so late though.\"\n\n\"You want to head back to the car?\"\n\n\"Let's go a little bit further.\"\n\n\"Okay.\"\n\n\"Did you want to get dressed?\" \n\nHe did. As he pulled on his clothes, he felt the strangeness of their relationship, that she would stand there, completely naked, watching him as he dressed, and she would remain naked, as if the practice of wearing clothes was something that only applied to him. He could have offered her his shirt, but he didn't, and he knew she would have said no if he did. She had willingly surrendered her clothes before entering the garden, and he knew she intended to be naked the whole time they were there.\n\n\"Okay,\" he said. \"I'm ready.\"\n\nThey followed the brook path further up the hill, until finally the path veered away from the brook, and Charlie could see a fence in the distance delineating the border of Greenholt Gardens. The brook itself continued past the fence, towards the mountains, and Charlie wondered if he could look it up on a map and find out where it went.\n\nTheir eyes adapted to the darkness, and they consciously avoided the illuminated areas, choosing instead to retain their night vision. They picked a meandering path back down to the Japanese garden, and skirted wide around it, seeing the glowing red lanterns peeking through the trees.\n\nMichelle held his hand as they walked towards the entrance to the gardens and the concrete table where they had made love earlier. \"Charlie,\" she said. \"This was better than the school. I'm so glad you found this place.\"\n\n\"You never did have your freak-out,\" he observed.\n\n\"What?\"\n\n\"When I came back from walking Ronni to her car. You said you were on the verge of having a complete freak-out.\"\n\n\"Oh.\" She shrugged. \"I probably still will. Later. I'm trying not to think about all of it right now.\" She waved at their surroundings. \"Why waste this worrying? If I'm dead, I'm dead. Nothing I can do about it now.\"\n\n\"What do you mean, if you're dead?\"\n\n\"You know... if Ronni tells everyone. Or if her brother tells everyone. My reputation at school. Actually, my reputation everywhere.\"\n\n\"I don't think Ronni will tell anyone,\" Charlie said quietly.\n\n\"Maybe she won't. But I don't know for sure.\" Michelle paused. \"She has pictures of me. Videos.\"\n\n\"She deleted them.\"\n\n\"She did?\"\n\n\"I watched her. She showed me that she deleted them.\"\n\n\"When?\"\n\n\"Just before she left.\"\n\n\"Oh!\" Michelle nodded thoughtfully. \"Well, that's good, I guess.\"\n\nThe path turned and Charlie could see the courtyard at the entrance of Greenholt Gardens. He could see that unforgettable table, with their shoes still sitting underneath it, and on the slope above the table, the snack bar. He froze. \"I think I know what you mean,\" he said in a low voice. \"About having a freak-out.\"\n\n\"Are you about to have one right now?\"\n\nHe pointed towards the table. \"We just had sex on top of that table. Actually, all around that table, in a bunch of different positions. We didn't hold back. And you said that Nick could see us the whole time.\"\n\n\"Uh-huh. On the security monitor.\"\n\n\"That's pretty embarrassing, isn't it? We had sex right where he could see it. And now we have to go talk to him and pretend like nothing's weird.\"\n\n\"I know,\" Michelle said.\n\n\"And he's Ronni's brother. And we just met him tonight.\"\n\n\"I know.\" Michelle held out her arms. \"And I'm still naked.\"\n\n\"That's true.\" Charlie glanced down at her nude body. When they said goodbye to Nick, would the security guard even be thinking about the sex he had witnessed? Or would he be too distracted by Michelle standing naked right in front of him?\n\n\"Do we need to talk to him?\" Michelle asked. \"We could just go without saying anything.\"\n\n\"Yeah, we could,\" Charlie said. \"Do you want to?\"\n\nMichelle's hands touched the top of her legs. \"No,\" she admitted nervously. \"We should go tell him we're leaving. He knows what I'm like by now. No point in trying to be modest after everything else that's happened tonight.\"\n\nCharlie looked at the snack bar. He could see a dim light through the windows. \"You think he's in the snack bar?\"\n\n\"He's probably in the monitor room,\" Michelle said. \"Come on... I'll show you where it is.\"\n\nMichelle started up the path, and Charlie reluctantly followed. He felt as if someone was watching him as soon as they stepped out into the courtyard, and he looked around for the camera. He immediately noticed a black half-sphere hanging under the edge of one of the buildings. That was almost certainly where the camera was hidden, and he could feel it watching them like a dark eye. He imagined Nick, sitting in his monitor room, tracking Michelle's approach on a screen. Leaning towards the screen, studying the curves of her nude body as she came closer and closer.\n\nThey stopped by the table to get their shoes. Michelle carefully stepped into her heels, growing about four inches as she did so. Charlie had to sit and pull on his socks first. Michelle leaned her hip against the edge of the table and watched him. \"Almost ready?\" she asked as he yanked on his sneakers.\n\nHe stood. \"Ready. Where to now?\"\n\n\"Follow me.\" Michelle led the way up the slope.\n\nThey walked past the door to the snack bar and headed towards the locked front gate of the garden, a tall dark wall of metal with wheels bolted to the bottom. A semi-circle indentation in the cement showed the path that the wheels took when the gate was rolled open during business hours. The gate was closed and locked with a thick chain, yet Michelle seemed to be heading right towards it. Just as Charlie was about to ask her where she was going, she turned sharply to the right and stood in front of a closed brown door. She knocked.\n\nAfter a few seconds, the door opened and Nick stood in the doorway. He held a coffee mug in his hand. \"Hey!\" he greeted them. \"You're done looking around?\" ",
        "Behind Nick, Charlie could see a black chair sitting in front of a messy desk, and just in front of the desk, a wall of monitors. Charlie counted twelve, in three rows of four, each displaying the feed from a different camera. \"Yeah,\" he said to Nick. \"Thanks for letting us look around this place at night. We're about to head out, just wanted to let you know.\"\n\n\"The garden is so beautiful,\" Michelle said earnestly. \n\n\"Hey, no problem.\" Nick grinned. \"Did you have any trouble? You didn't accidentally crush any plants, right?\"\n\n\"No,\" Charlie said. \"We stayed on the paths.\"\n\n\"You didn't leave any signs you were there?\"\n\n\"No,\" Michelle said softly. \"We cleaned up after ourselves.\" Her eyes met Charlie's and he could see a mischievous twinkle in them.\n\n\"Great,\" Nick said. \"I don't love this job but I don't want to be fired from it, either.\"\n\n\"No one will even be able to tell we were here,\" Charlie assured him.\n\n\"Great, great.\" Nick looked at his watch. \"You guys need to leave right away? I'm due for a break. Want to hang out in the snack bar for a bit? We can grab some drinks from the coolers, they don't care.\"\n\nCharlie and Michelle looked at each other, and Charlie shrugged to let her know he was fine either way. Michelle turned back to Nick and smiled. \"No rush,\" she said. \"We can hang out.\"\n\n\"Let's go.\" Nick walked over to the desk and grabbed a set of keys. Charlie took the opportunity to scan the monitors, trying to make a quick inventory of which sections of the gardens had cameras on them. He noticed that one of the monitors had a dark screen, as if it was broken or had been turned off. He only had that quick glimpse before Nick turned around and blocked his view, but Charlie was pretty sure he knew which monitor had been turned off.\n\nNick closed the door to the monitor room and locked it. He did so without thinking; probably he had to lock the door every time he left that room. As they started towards the snack bar, Nick looked at Michelle. \"So, have you been nude this whole time?\"\n\n\"Yes.\"\n\n\"Wow.\" Nick grinned. \"I mean, Ronni told me that she was working on a student film with a nude scene. I pictured you wearing a robe or something, and just taking it off for the nude scene. I sure didn't expect this. Are you a nudist or something?\n\n\"Not at all,\" Michelle answered in a cheerful voice. \"I just thought, if I'm going to have to be nude for the film... I should get used to it, don't you think? And what better way to get used to it, than just to jump right in and do it?\" She spoke so calmly that Charlie wondered if she had been expecting someone to ask such a question and had an answer prepared.\n\n\"That make sense, I guess,\" Nick said. \"So, this is your first time experimenting with being a nudist?\n\n\"Yeah...\"\n\n\"Are you used to it now?\"\n\n\"Not quite yet.\" She gave him a tiny smile. \"I probably just need some more time.\"\n\nThey reached the snack bar and Nick unlocked it. He pulled the door open. \"After you,\" he said, and held the door while Michelle and Charlie entered. \"Go on back, grab what you want from the cooler. Just none of the alcohol, please.\" Nick sat down and picked up the remote for the TV. He turned it on and started flipping through the channels.\n\n\"You want anything?\" Charlie asked Michelle.\n\n\"I need to see what they have,\" she said. \"I'll come back with you.\"\n\n\"Nick?\"\n\n\"Just a coke,\" Nick said.\n\nCharlie walked with Michelle past the cash register and through the door into the kitchen. He opened the tall refrigerator and pulled out a bottle of Sprite for himself, plus a Coke for Nick. \"Anything look good?\" he asked Michelle.\n\n\"Brrr.\" She stood in front of the open cooler, letting the cold air stream over her bare skin. \"That's cold!\"\n\n\"You don't have to stand right in front of it.\"\n\n\"Here. Feel.\" She took his hand and brought it to her hard nipple. \n\n\"Definitely cold,\" he said, squeezing the tip of her nipple between his fingers. \"Hey, did you notice that one of Nick's monitors was off?\"\n\nMichelle reached into the cooler and pulled out a raspberry iced tea Snapple. \"No, I didn't notice. Why was it off?\"\n\n\"I think he turned it off. It was the monitor showing that stone table. I don't think he watched us after all.\"\n\n\"No?\" \n\n\"No. Maybe he turned it off when he saw what we were doing. He didn't want to watch us.\"\n\nMichelle considered this as she tried to open her Snapple. \"I'm actually really happy, if that's true. You saw how I was out there. I was getting really carried away.\" She held out the Snapple. \"Can you open this for me?\"\n\nCharlie released her nipple to take the bottle from her. He gripped it with his hand and tried to turn it, and thought for a moment that the cap would defeat him as well. Then it made an audible popping noise and he twisted it loose. He gave the drink back to her. \"It does give us a little less to be embarrassed about,\" he said.\n\n\"Maybe.\" \n\nThey returned to the dining area of the snack bar and took seats at the table with Nick. Charlie took the seat at the opposite side of the table from Nick, leaving the chair between them for Michelle. Nick had found a late-night talk show where the host was engaged in an awkward interview with Aubrey Plaza, and they watched for a few minutes while they sipped their drinks. \n\n\"If one of the bosses walked in right now, I'd be fired for sure,\" Nick said, eyeing Michelle's body. \"It'd be hard to explain this one.\" Michelle didn't seem at all self-conscious when he looked at her, and that was gradually making him bolder about looking.\n\n\"Is that a possibility?\" Charlie wanted to know. \"Has anyone ever dropped in on you this late, unexpectedly?\"\n\n\"Oh, it's definitely a possibility,\" Nick said ominously, but then he grinned. \"It hasn't happened yet, though. They don't need to check on me in person. They have other ways to make sure I'm really working. Like I have to keep moving the mouse on the computer in the monitor room, or it shows me as 'Idle' at the main security office. And when I do a patrol around the gardens, they have me test my card access on each of the gates. It saves the time I put in my card, so they know when I did the patrol.\"\n\n\"Are you serious?\" Michelle said. \"What happens if you don't do a patrol on time?\"\n\n\"If I'm really overdue, they'll call. If I don't answer the phone, they'd probably send someone. You know, like maybe I need help or something.\" Nick shrugged. \"This job kind of sucks. It's not very exciting. I look forward to the patrols, because at least I get to walk around the gardens.\"\n\n\"I can imagine,\" Michelle said. \"I think I'd be so bored if I had this job.\"\n\nNick held up his Coke. \"Well, here's a toast to you, Michelle. Tonight definitely hasn't been boring.\"\n\nMichelle smiled and touched her Snapple to the side of his Coke.\n\nThey continued to chat, the conversation turning to Pine Hills High School. It turned out that Nick was three years older, and had been a senior during their ninth-grade year. They had all shared the same high school campus for that one year, but he didn't remember either of them. He did remember Michelle's older sister Mirella, who was a junior that year and also a cheerleader. \"Yeah, when I picture her in my head, I can see the resemblance,\" Nick said. \"She was really pretty, too. What's she doing these days?\"\n\n\"She works at Macy's,\" Michelle said. \"She still lives at home.\"\n\n\"She has a boyfriend?\"\n\n\"Yeah.\"\n\n\"Figures.\" Nick grinned.\n\nNick changed the channel. He seemed to know all the late night programs, and Charlie wondered how many hours a night he spent watching TV in the snack bar. They settled on an old episode of \"The Twilight Zone\", which Charlie had seen before, and for a while Charlie exchanged favorite Twilight Zone episode plots with Nick. Michelle had never seen the Twilight Zone, and didn't have much to say, although she seemed to want to laugh at a lot of what they were saying.\n\n\"I just have to say something to you guys,\" Nick said all of a sudden, \"and I hope this doesn't make you uncomfortable, Michelle...\" He glanced at her, but she just waited patiently for him to continue. \"I just gotta say this... there's something so fucking hot about having a beautiful, naked woman sitting right next to me, and, like, just casually talking about TV and stuff. We're just sitting around, watching TV, and you're there, drinking your drink, kicking back like you're not even worried, and we're talking about all this stuff, and every time I look at you, I'm like, damn, she's naked! I'm having a conversation with a naked woman and she's got the best body I've ever seen and it's right there in front of me! Sorry, am I making you feel self-conscious?\"\n\n\"No,\" Michelle said. \"I mean, not any more self-conscious than I already felt.\" She laughed.\n\n\"You don't seem self-conscious at all,\" Nick said. \"What's your movie about, anyway?\"\n\n\"It's about two people, Max and Ingrid, who are falling in love,\" Charlie said. \"But they're hiding their feelings from each other. Whenever they talk, another woman Gwen is with them, but she's actually a representation of their hidden attraction.\"\n\n\"I'm going to play Gwen,\" Michelle said.\n\n\"What's it called?\" Nick asked.\n\n\"It's called: 'Anything You Want' \", Charlie said. \"At least, that's what I'm calling it right now. I might pick a different title later.\"\n\n\" 'Anything You Want'?\" Nick looked thoughtful. \"Can I read the script?\"\n\n\"Sure,\" Charlie said. \"Ronni has a copy she can show you.\" He hesitated. \"You know what? Actually, you can take mine.\" He had his copy of the screenplay folded up in his back pocket. He passed it to Nick. \"Maybe you can read it if you get bored later tonight.\"\n\n\"Cool,\" Nick said. \"Thanks.\"\n\nThey only made it halfway through the Twilight Zone episode when Nick abruptly stood. \"Sorry, I need to do my circuit of the gardens. I'm overdue, actually, and it's like I told you, I have to swipe my card or the company starts to wonder what's going on.\"\n\n\"That's cool, we should probably get going anyway,\" Charlie said. \"What is it, almost two in the morning?\"\n\n\"Almost,\" Nick said. He watched Michelle as she stood. \"You have clothes to put on?\" he asked her.\n\n\"Yes,\" she said. \"In the car.\" She took three steps closer to Nick, stopping just within his reach. Her palms pressed flat against her upper legs and she looked up at him intently. \"Nick... I want to tell you something before we go. It's something you've probably already figured out, but I just want to say it out loud. I'm not this way because I'm trying to get ready for that nude scene in Charlie's movie. That's not the real reason...\" Her hands had started to move on her legs in her usual nervous gesture. \"The real reason...\" She struggled to find the right words.\n\nThe left side of Nick's mouth twitched up in a half grin. \"It's all right. You don't have to say it. I think I get it.\" He paused. \"This isn't the first time, is it?\"\n\n\"No,\" she admitted. \"We did this at the school. On the weekend, when no one was there.\"\n\n\"You were with Charlie?\"\n\n\"Yeah. We walked all around. Even outside.\"\n\n\"Nice,\" he said. \"Well, no one's ever here either, not at night. Come back any time. Sunday thru Thursday. I don't work the weekends. Just tell Ronni you're coming, she'll give me the message.\"\n\n\"Thank you, Nick.\" Michelle moved closer to him. \"Well... good night!\" She brought her hands up, reaching for him, and this time Nick knew what to expect. He opened his arms and let her slip in close to him. Pressing her body close to him, Michelle stretched up to kiss him softly on the mouth. Nick let his hands rest on her hips as she kissed him.\n\nShe broke the kiss, and Charlie heard her whisper, \"Thank you for not telling.\" Nick nodded and Michelle pulled away, stepping back to stand beside Charlie.\n\n\"Good night, Nick. Appreciate you letting us in here,\" Charlie said, offering his hand.\n\nNick reached out and shook Charlie's hand distractedly. \"No problem,\" he said. \"Good night.\"\n\nCharlie held Michelle's hand as they walked out the way they came. They stepped out into the parking lot, still empty except for Charlie's car and Nick's pick-up truck. \"I'll get your clothes out of the trunk,\" Charlie said. \n\n\"Oh, that's all right,\" Michelle said, walking straight to his car. \"Hardly anyone's going to be up this late.\"\n\nCharlie slowed. \"You're going to keep going? How long? Until I drop you off at your car?\" \n\n\"Why not? I'm small, I'll mostly be hidden inside your car, and anyways, it's dark. No one's going to notice me.\" She stopped in front of Charlie's car and gazed for a moment at all of the empty parking spaces, and beyond them, the silent road that led past the garden. Her eyes dropped to look down at her body. In a quiet voice, she said, \"It's hard for me to stop sometimes.\"\n\n\"It is?\"\n\n\"I really like this feeling of not caring. Maybe I get too used to it. It's hard to have to get dressed again.\" She looked out at the empty parking lot. \"I get this feeling like I want to wait until the very last minute. The very last second. Like I'm about to walk into a crowded room and I'll pull a dress over my head just as I'm opening the door.\" She paused. \"No, more like I want to wait until I'm a second too late. After the door is already open. I want that rush of being a second too late.\"\n\n\"All right,\" Charlie said. \"Hop in. You're right, no one will see you in my car in the dark...\"\n\n\"You decide, Charlie,\" Michelle said.\n\n\"What?\"\n\n\"I want to give the decision to you. Should I get dressed now, or do you want me to stay like this while you drive me to my car? I want you to tell me what to do.\" She stood and watched him, waiting for his answer. He could tell that she was serious. \n\n\"I'll get your clothes,\" he said. He walked to the trunk and popped it open. The stack of her clothes sat where he had left it. He picked up the stack and brought it to her.\n\nMichelle didn't argue and she didn't ask why. She obediently took her clothes and sat them down by her feet, then put them on one by one. The sky-blue pair of panties and the sky-blue bra. The clingy white sweater. The tight black skirt. Everything but her stockings, which Charlie still had, one in each of his front pockets. After she was dressed, Charlie walked over to his car and opened the passenger door for her. Michelle held out her hand for him to hold as she carefully lowered herself onto the passenger seat. She moved one foot into the car, then the other. Once she was safely inside, Charlie shut the door.\n\nHe circled around the back of the car to the driver's seat, and as he walked, he remembered the heart she had drawn him, after the Saturday he called the Second Michelle. He had left her in his car for no more than five minutes, and when he returned, she was gone, leaving behind just a simple heart drawn on a piece of paper. \n\nNow he imagined it would happen again. Circling around the car, he would open the driver's side door and she would be gone. In her place, another heart drawn on a piece of paper. \n\nHe opened the door and she was still there, sitting in his car in her white sweater and black skirt. She was there, of course she was. But it still seemed like a miracle to see her. \n\nThat was the Second Michelle, when she had left the heart in his car. What Michelle was he on now? Sixth? Seventh? When had he stopped counting?\n\nHe closed his door and started the car. \"1:51,\" Michelle read the digital clock on his dashboard. \"Did you think we would be out so late?\"\n\n\"Yeah, I thought it would be something like this.\"\n\n\"Will your mom say anything when you get home?\" Michelle asked.\n\n\"I doubt my mom will even wake up,\" Charlie said. \"What about you? You're not in trouble, are you?\"\n\n\"No. My parents think I'm at Vanessa's house.\"\n\n\"They do?\" Charlie frowned. \"So you're driving to Vanessa's house after I drop you off at your car?\"\n\n\"No. Vanessa doesn't know I'm doing this, either. I'll just go home, and if anyone asks, I'll tell them I didn't feel like sleeping at Vanessa's after all. I'll say I have a stomachache or something.\" She shrugged. \"The benefit of never getting into trouble. When I do need to lie, my mom and dad usually believe me.\"\n\n\"What if they called Vanessa asking for you? And she doesn't even know you're supposed to be at her house?\"\n\n\"She'd cover for me anyway. I know she would. But she'd be mad, and she'd definitely want to know what the hell I was up to.\" Michelle sighed. \"I'll need to come up with a better excuse, if we're going to keep doing these late nights at Greenholt Gardens.\"\n\nCharlie thought of his own mother. He hadn't considered for a moment telling her anything but the truth; he even brought Michelle inside to meet her. I'm a secret, Charlie thought. From Michelle's friends, from her family. Charlie wondered if Michelle would ever introduce him to her parents. He decided he wasn't in any great hurry for that to happen.\n\nThey reached Michelle's car, parked in the same dark spot where she'd parked before. Charlie pulled up to the curb behind her car and turned off his headlights. He turned off the engine and the abrupt cessation of noise made the darkness seem very quiet.  \n\n\"I'm just going to throw an idea out there...\" Charlie spoke in a low voice, but he was clearly audible in the silent car.\n\n\"Uh huh?\"\n\n\"Your parents think you're at Vanessa's house. All night.\"\n\n\"Uh huh.\"\n\n\"Do you maybe want to spend the night at my house?\" He watched her, trying to gauge her reaction to the suggestion. \"I mean, you don't have to sleep in my room. Unless you want to. But we also have an extra bedroom. With a bed. You could sleep there.\"\n\n\"I don't think so, Charlie.\" She spoke softly. \"Not tonight. Okay?\"\n\nHe shrugged, as if it didn't matter to him. \"Sure. It was just a thought.\"\n\n\"I just met your mom a few hours ago. I don't think I'm ready to be sitting across the breakfast table from her.\"\n\n\"I know.\"\n\n\"It's a nice thought, though.\"\n\nThe silence returned. Charlie turned his head and studied Michelle's profile for a moment against the glass window. \"Okay,\" he said. \"Well... good night.\" He reached for her to kiss her goodbye, and she leaned into him, returning his kiss without hesitation. A final taste of the passion they had shared that night.\n\n\"Good night,\" she whispered breathlessly, untangling herself from his arms. \"We're going to be so tired tomorrow.\"\n\n\"Completely worth it,\" he said, and she laughed.\n\nHe watched her as she walked to her car, and it occurred to him that if he had decided the other way and told her to keep her clothes in the trunk, she would be walking to her car naked right then. In fact, she was ready and willing to do exactly that before they left Greenholt Gardens. She would have sat in his passenger seat naked for the whole drive and then she would have hopped out of his car and walked to her own without a thought.\n\nI'm not the secret, Charlie thought. This is the secret. Michelle stripping in a parking lot. Michelle walking naked through the gardens. Michelle sitting naked between two fully-dressed men, watching TV. \n\nHe reminded himself to keep his perspective. They were playing a risky game, and he had to let Michelle handle her side of it her way. Even if it meant her parents thought she was with Vanessa all night instead of with him.\n\nMichelle's lights turned on. A moment later, her car pulled away and drove down the street, becoming just a pair of red taillights dwindling in the distance.\n\n\"Now four people know our secret,\" Charlie murmured. \"Five, actually. I forgot Daryl.\" How many people did it take to learn a secret before it wasn't a secret any longer? Charlie realized he would soon be adding two more: the two actors who would play the parts of Max and Ingrid. He would need to recruit them carefully. He would need to make sure they would be discrete.\n\nCharlie started his car and pulled the steering wheel to the right to make a sharp U-turn. He turned left at the corner and slowly drove the short distance to his house. He thought about Michelle and the way she had looked just moments before, walking to her car dressed in her clingy white sweater and black skirt. \"At least she didn't leave any of her clothes behind this time,\" Charlie mused as he pulled into the driveway. ",
        "Then he remembered the stockings in his pockets."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionism",
        "voyeur",
        "public nudity",
        "public sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-08"
}