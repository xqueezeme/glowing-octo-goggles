{
    "title": "Meaningful, Meaningless Sex",
    "pages": [
        "\"So, who's it gonna be - Mike or Dave?\" Ellie wanted to know.\n\nI peered closer at my reflection in the mirror, pretending to perfect my lipstick. They were the only two guys who'd shown any interest. Nice enough - but I hadn't felt any chemistry.\n\nEllie, on the other hand, had been spoiled for choice. As soon as we'd taken our places down by the pool, the good-looking guys had flocked to her. I'd hoped they'd flock to me too - that we'd play the field as a double act - but I was simply eclipsed. Ellie turned every head - a tall, willowy blonde with big breasts and a bubbly confident laugh. They scarcely noticed the flat-chested brunette next to her.\n\n\"And what about you?\" I asked, ignoring her question. \"You're going with Jordan?\"\n\nShe nodded - unembarrassed, supremely confident. \"Yeah, he's totally my type.\"\n\nJordan certainly was Ellie's type. She had a 'thing' for hyper-muscled jocks - and he was certainly one of those. She'd lost her virginity to the school rugby captain and then, after he'd moved on to his next conquest, had sought her revenge by sleeping with the rest of the squad. (Not that Josh Stevenson had cared, or even noticed.)\n\n\"So, come on Lucy - Mike or Dave? Who's it gonna be?\" Ellie looked at me pointedly.\n\nI pushed nervously at my hair, trying to inject some life into the mousy brown strands, hoping I could think of a way to change the subject. But Ellie wasn't going to let it go.\n\n\"I... I... I... dunno,\" I stammered, my face flushing bright red. \"I mean... I'm just not feeling it with either of them.\"\n\nEllie rolled her eyes.\n\n\"Oh, come on!\" she sighed despairingly. \"Don't tell me you're chickening out. Just get yourself drunk, get into bed with one of them - it'll be over before you know it. Then you won't be the only virgin at university!\"\n\n\"But I just don't want a one-night stand,\" I wailed. \"I want something meaningful - even if we are only here for a week.\"\n\n\"But that's the whole point of a holiday romance,\" she growled in exasperation. \"It's meaningless - meaningless sex! You won't even remember the guy's name once you're back home.\"\n\n\"But I don't want that,\" I complained. \"I've still gotta like the guy - I want, I want...\" I struggled for the words, \"...meaningful, meaningless sex.\"\n\nEven I knew how ridiculous that sounded. Ellie gave a snort of derision and headed out the door. I followed behind as we clattered our way down the stairs in our heels. The boys would be ready - we'd have kept them waiting.\n\nIn truth, Ellie's attitude was understandable. Despite the closeness of our friendship, we'd had very different degrees of success with the opposite sex. She'd had two steady boyfriends in the past two years and had played the rest of the field pretty comprehensively; I'd simply watched on - part-horrified, part-jealous. That was something I bitterly regretted now - all the cool guys had lost interest and the nice boys were well settled - it was only the creeps that remained.\n\nWe reached the lobby. There were about a dozen guys waiting - all British, mostly university students on vacation, although I suspected a few were older than they claimed. All were wearing white shirts, their hair spiked with gel. The room reeked of cheap aftershave, which barely covered the heavy stench of testosterone. The sharks were assembled, ready for the hunt.\n\nDave made a beeline for me, getting in early to stake his claim - sending the signal to Mike and anyone else who might try their luck with me. He danced around me as we walked to the first bar, trying rather too hard to keep my attention - it was all a bit suffocating. The smell of desperation is so off-putting.\n\nI knew the Strip would be big - bigger than anything I'd seen before - but, even so, the intensity still overwhelmed me. That combination of alcohol, summer heat and being a thousand miles from home, brought out the very worst in everyone. It was louder, brighter, bassier than anything I'd imagined - and not in a good way.\n\nI made the mistake of accepting a drink from Dave at the first place we got to. That was foolish - for the rest of the night he acted as if we were engaged - fawning over me, holding his hand around my waist, trying desperately to kiss me, becoming ever more animated as I tried to show my disinterest. I'd seen Ellie accept drinks from 'no-hopers', only to dismiss them with a casual flick of the hand and a look of distain. How I wished I could pull off the same trick.\n\nDave remained in orbit around me all evening. We did dance, but I had to push his hands away a couple of times, when they got too low or too high. We sat on the side lines, watching through the melee of bodies as Ellie and Jordan shoved their tongues down each other's throats. Mike had quickly found someone else - I felt a mild sense of regret - maybe I could have imagined getting into bed with him by the end of the week. But judging by the way he and his squeeze were grinding together, I knew he wasn't the guy for me.\n\nDave and I left with Ellie and Jordan around two in the morning, just as the partying was hitting its stride. It was inevitable that she'd invite Jordan back - she hoped that would push me into going with Dave, but I was exhausted - and my feet were killing me. Sex was the last thing on my mind; any interest in 'my guy' was long gone. I let him kiss my cheek as we said goodnight and watched him die inside when I failed to return the favour. I felt cruel and exploitative - but I wasn't going to rush into anything - and certainly not his bed.\n\n-\n\nI slept fitfully - the lumpy couch made sure of that. I'd let Ellie and Jordan have the twin bedroom - and from the grunts and shrieks that penetrated the paper-thin walls of our self-catering apartment, they'd made full use of their 'privacy'. No sooner had they left off, than other couples around us started up. Everyone was doing it - except me.\n\nBy half seven, the sun was streaming through the sliding glass doors that led out to our balcony. There'd be no chance of getting more shut eye. I was going to have to amuse myself until Ellie surfaced - maybe that wouldn't be till lunchtime.\n\nI dragged myself over to the kitchenette, filled a glass with water and carried it out to the balcony. Beneath me, the pool area was deserted - bar a solitary maintenance guy poking around in one of drains. I toyed with the idea of going down for an early sunbathe, but decided on balance I'd feel a little exposed without my schoolfriend for backup.\n\nRestlessly, I wandered back into the sitting room, trying to work out what to with my morning. I spied my sketch pad, half-buried in my suitcase. Yes, that was it - I'd take a walk up on top of the cliffs and do some drawing. I'd planned to do some anyway, to reassure my parents that I wasn't going to spend all my time getting drunk and getting laid. But now, I had a couple of hours to produce something half-decent. With any luck, an hour's walk would tire me out and I'd come back and sleep some more.\n\nI found a set of steep, uneven steps that took me up the hill behind the hotel towards the headland. As I climbed, I felt myself relax. Perhaps that was my problem - I'd been on edge since I got on the plane. The pressure I'd placed on myself to lose my virginity was destroying my sense of fun. Not that I was regretting coming to Spain - the cosy rented cottage in Cornwall with Mum and Dad had never appealed. This was my first holiday without my parents and I was determined to make the most of it.\n\nDad hadn't wanted me to go on vacation with Ellie - we'd argued about it several times. He'd wanted us to have a last family holiday together, so he could keep his eye on me for a few months longer, until I went off to university. But I'd insisted, put my foot down. It was my money - I'd earned it - and I was going to decide how to spend it.\n\nThe one part of the plan I'd given quarter on, was the choice of hotel. Dad had made sure that we were as far away from the Strip, with its bars and clubs, as possible. We had a self-catering apartment with a twin bedroom in a complex with its own pool and private beach. It was expensive, but everything we needed was on site - no need to venture into the horrors of the town.\n\nPerhaps I shouldn't blame my parents. I was the youngest of four and the only girl - it was natural they'd be a little more protective of me. Growing up, I'd always had the earliest bedtime, the earliest curfew of any of my friends. And I'd always played the baby of the family. When my schoolmates were getting their first boyfriends, I'd stayed aloof, wanting to take my time choosing, wanting to make my suitors work for my hand. That was something I deeply regretted now - I'd missed the boat back home.\n\nMy virgin status had gnawed at me - for at least the past year. I was torn between the high moral values instilled in my upbringing and the rawest urges of my teenage body. That's why we'd agreed - Ellie and I - we were going away to get the deed done, away from watchful eyes and sharpened noses. This was where I'd cast off the shackles of childhood with my first kiss and more.\n\nUp on the clifftop I walked for maybe twenty minutes, until the resort town had disappeared from view behind me. Open fields stretched out - a few goats and sheep were grazing on the sunburnt gorse. To my right there was a steep drop to the sea.\n\nI settled down against a rock, looking out over the bay beneath me. There was not a soul to be seen. I spotted a small island, maybe half a mile away - that would be as good as any subject. I took a few photos with my phone, messaged them to my parents, then pulled out my pad and began to draw.\n\nA little while later I was weighing up whether I should go back, or if I should find a new place to sit and sketch some more. I'd been enjoying the quiet solitude of the morning, compared to the heaving shark pit the previous night. I'd made a couple of rough drawings, one of which was turning into something a little more 'finished'. The hotel would be properly waking up now - if I didn't get back to the room soon, I'd risk bumping into Dave on the stairs.\n\nI turned to pack my pencils away in my rucksack. Standing a few metres behind me, ears pricked, watching me intensely, was a dog. I hadn't heard him approach - how long had he been there?\n\nI hesitated. I'd heard all sorts of horror stories about rabies in feral animals, but he seemed friendly enough and well cared for. I wanted to reach out and stroke him, but I didn't want to take the risk.\n\nThe dog came towards me slowly. He was a beautiful colour - a light fawn. I didn't recognise the breed; his fur was a little darker than a golden retriever's, but he had those same intelligent eyes as a border collie. I stayed still as he sniffed at me, hoping I wouldn't provoke a bite.\n\nSuddenly, there was a shout behind him. He scampered away and I looked up. A young lad with dark, curly hair was walking towards me, carrying a bag of animal feed on his shoulder. He called out a volley of incomprehensible Spanish - doubtless telling me off for trespassing. My blank expression told him I didn't understand.\n\n\"English?\" he asked as he got closer to me.\n\n\"Si,\" I nodded. I only knew about ten words in total - ignorant Brit abroad.\n\nHe swung the sack down from his shoulder. He drew breath and was about to speak again, when he noticed the sketch pad on my lap.\n\n\"You draw?\" he asked. He was obviously Spanish, but his accent wasn't too thick.\n\n\"Er, yeah,\" I replied, a little hesitantly.\n\n\"Can I see?\" he asked.\n\nHe was behind me now, looking over my shoulder.\n\nI tilted the sketch pad for him.\n\n\"It's very good,\" he said quietly.\n\nI started to get up.\n\n\"It's OK,\" he said. \"You can stay.\"\n\n\"No, it's alright,\" I replied. \"I need to get back to the hotel.\"\n\nI turned to face him, getting my first proper look at him.\n\nMy heart skipped a beat.\n\nHe was handsome - gorgeous in fact - tall, but not too tall, with curly, jet-black hair that just reached in front of his dark eyes. His shoulders were broad and his bare arms were strong and muscular. He the very epitome of a young, sexy Spanish lad.\n\nI felt myself beginning to blush. I reckoned he was about the same age as me - maybe eighteen or nineteen. He was soooo good looking!\n\nThe dog, who'd been by his side came forwards, sniffing at my leg. I crouched down and stroked him.\n\n\"He's very friendly,\" I observed.\n\n\"Yes,\" the lad said slowly. \"With people he does not know, he is sometimes...\" he hesitated, trying to find the right word, \"circumspect.\"\n\n\"He's a beautiful colour,\" I observed.\n\nThe lad nodded but said nothing.\n\n\"What's his name?\" I asked.\n\n\"Paco,\" he replied.\n\n\"That's a nice name,\" I smiled.\n\nI stood and pointed to my chest.\n\n\"Lucy,\" I said.\n\n\"My name is Nicol\u00e1s,\" he replied. \"Nicol\u00e1s,\" he said again, in case I hadn't heard him properly.\n\nThere was an awkward pause as the two of us looked at each other. My heart was beating a little bit faster.\n\n\"I ought to go,\" I said shyly. \"I need to get back to the hotel.\"\n\n\"You can come to draw when you want,\" Nicol\u00e1s said quickly, extending his hand as if to dissuade me from leaving.\n\nI'd been so mesmerised by his eyes, I'd scarcely notice his voice - a wonderful deep bass that sent shivers running through me.\n\nI smiled. I fully intended to return.\n\nI said goodbye, reached down and slung the rucksack over my shoulder. I picked up my sketch pad and began to walk back in the direction of the resort.\n\nAs I reached the top of the first set of steps, I turned and looked back for a few seconds. Nicol\u00e1s, surrounded by jostling sheep, was pouring the contents of the sack into a metal feeder. He'd taken off his shirt and I could see the muscles of his chest gleaming in the sunshine. I watched him, feeling the heat in my core beginning to rise. Was this the guy I'd been looking for?\n\nI hesitated - part of me wanted to go back, to talk to him some more. But I couldn't - he'd think me a right idiot if he did. I wouldn't know what to say - I'd just stand there dumb-struck by his beauty, as he looked at me expectantly. I watched as he called Paco to him and the two of them started to walk towards the other side of the field. Was I imagining it - did he really glance back at me before he disappeared?\n\nGiddy with excitement and lost in my fantasies, I started to descend - moving a little too quickly over the uneven steps. Half-way down, I missed my footing and fell, twisting my leg and toppling backwards, sliding down the loose gravel. There was a painful bump as I reached the bottom.\n\nI cried out in pain.\n\nI brushed the grit from my hands - my palms were a little grazed, but it was my foot that was hurting the most. I tried to stand. My ankle was killing me - I couldn't put any weight on it.\n\nI sank down again onto the slope beside the bottom step, cursing my carelessness. How was I going to make it back to the hotel? I'd have to call Ellie to come rescue me. The rest of my holiday was ruined now - no walking, no clubbing - maybe not even the pool. I'd have to sit it out, while Ellie had all the fun - watching from the side lines again.\n\nI took some deep breaths, hoping to out-think the pain, hoping I'd be OK to walk if I waited a few minutes. I sank my head into my hands in despair.\n\nSuddenly, above and behind me, I heard the sound of running paws and the jangling of a collar - it was Paco, coming down the steps - coming to rescue me! My heart leapt.\n\nHe stood in front of me, cocking his head a little. Was I alright?\n\n\"Nicol\u00e1s - fetch Nicol\u00e1s,\" I groaned.\n\nHe gave three short barks, then disappeared like a shot.\n\nI didn't really expect him to come back, much less to be able to summon his master. But a minute later, I heard a young man's voice, calling from the top of the slope.\n\n\"Lucy! You are OK?\"\n\nHe'd remembered my name!\n\n\"I fell,\" I shouted back. \"I've hurt my foot.\"\n\nHe hurried down the steps, his faithful dog by his side, and crouched down in front of me.\n\n\"Let me see,\" he said calmly. That voice - so soft, so caring.\n\nI lifted my leg out towards him. He untied my laces and removed my shoe, then gently held my heel as he probed my ankle with his fingers. His touch was cool and reassuring.\n\n\"You have sprained it,\" he said.\n\nI looked at him in amazement, forgetting the pain for a second. How did a simple Spanish farm boy know a word like 'sprain'? Who was this Nicol\u00e1s?\n\n\"I will carry you to my house,\" he continued, oblivious to my surprise, \"and I will put the ice and a bandage on it. Then I will drive you to your hotel.\"\n\n\"T-t-thank you,\" I managed to stutter, caught completely off-guard by his confidence and generosity.\n\nBefore I knew it, he'd lifted me onto his back and was carrying me up the steps, past the cliff top where I'd been sketching. Paco walked steadily at his side, keeping his eyes on the way ahead.\n\nA few minutes later, we were descending the slope at the other end of the field, turning towards a small farmhouse. It was a picture-postcard view - a modest two-storey building, built in an 'L' shape, with walls painted yellow and a tiled terracotta roof. We were approaching from the rear of the property, where a covered half-courtyard looked out over a small cove.\n\nNicol\u00e1s pushed open the gate and carried me up the path between the ranks of olive trees in the small garden. We reached the back door and he lowered me slowly to the ground. He turned around.\n\n\"Can you sit there?\" he asked with a reassuring smile. \"I will bring the ice.\"\n\nI nodded and hobbled a few steps to a sun lounger. My ankle wasn't throbbing quite so much, but putting my full weight on it definitely was painful. I lowered myself gingerly and swung my leg around so that my injured foot was supported. Nicol\u00e1s unlocked the back door to the house and went inside. I could see a kitchen with a tiled floor through the open doorway.\n\nThere was the sound of slurping beside me. I looked down - Paco was drinking rapidly from a bowl of water. His thirst quenched, he walked slowly towards me and I reached forwards to stroke his head.\n\n\"Thank you, Paco,\" I whispered.\n\n\"He likes you,\" said a voice from the doorway. It was Nicol\u00e1s, returning with towel, a roll of bandages and a bag of ice. \"It is strange,\" he continued, \"usually he is circumspect with people he does not know.\"\n\nI smiled. His English was good, but strangely formal, as if he'd learnt it from a 1950s textbook. He placed the ice on my ankle and covered it with the towel.\n\n\"I will leave it for ten minutes,\" he explained. \"It will help to reduce the swelling.\"\n\nAnd with that he disappeared again. Paco lay down on the floor watching me, ready to spring to my aid, should I need it. I settled against the back of the sun lounger and looked down towards the sea. The pain was lessening already - the ice was definitely helping.\n\nThe cove was small, maybe a dozen metres across at most, with a narrow beach that ran along the shoreline. To the right, the golden sand gave way to the rocks that rose up to become the cliffs where I'd sat earlier. To the left there was a short wooden jetty to which a red motorboat was tied.\n\nI looked up, Nicol\u00e1s was returning with a glass of water for me.\n\n\"This is such a beautiful place,\" I said quietly. \"You're so lucky to live here.\"\n\nHe smiled and set the glass down beside me, then handed me a packet of ibuprofen.\n\n\"Are you feeling better?\" he asked.\n\nI nodded. \"Yes, thank you,\" I replied meekly.\n\n\"I am going to remove the ice and put a bandage around your ankle,\" he continued.\n\nI offered my foot and Nicol\u00e1s proceeded to bind it tightly with the bandage, with deft, confident movements.\n\n'Where had he learnt to do that?' I wondered.\n\n\"I am going to feed the other sheep,\" he said calmly once he was finished. \"Paco will stay here. If you need me, he will find me. When I return, I will drive you to your hotel.\"",
        "I nodded again. \"Thank you,\" I said. My words were so inadequate. I was simply in awe of him.\n\nHe crouched down and addressed Paco with a stream of Spanish. The dog whined in agreement and lay down on the ground beside me. His master scratched the top of his head, then disappeared.\n\nI rested my head against the back of the sun lounger and closed my eyes. It felt a little surreal - a guy I'd only just met had brought me to his home and bandaged me up. And not just any guy - a beautiful, handsome young man, with warm, healing hands, and the kindest, wisest look in his eyes. Who was this boy, this enigma?\n\nThe painkillers were making me drowsy. I'd only slept for four hours the previous night. I closed my eyes, preparing to doze, listening contentedly to the sound of the waves, safe with the loyal Paco by my side.\n\n-\n\nI woke with a start. My phone was ringing - the muffled sound was coming from my rucksack. I blinked my eyes open - confused, disoriented - it took a few seconds for me to work out where I was.\n\nI scrabbled in my bag and lifted the phone to my ear. Someone, presumably Nicol\u00e1s, had covered me with a thin cotton sheet as I slept.\n\n\"Hi Ellie,\" I said, answering the call through my haze of disorientation.\n\n\"Oh, thank goodness,\" my friend replied - she sounded agitated. \"We were about to send a search party. Where are you? I've been texting you all morning!\"\n\n\"W-w-what's the time?\" I stammered.\n\n\"It's two o-clock,\" she replied. The frustration was obvious in her voice. \"Where are you?\" she asked again.\n\nI'd slept for over four hours - nearly five.\n\n\"Er, I went for a walk,\" I muttered apologetically. I glanced down at my ankle, still swathed in Nicol\u00e1s' bandage. Now wasn't the right time to tell Ellie I'd been injured.\n\n\"I'll be back in an hour,\" I added.\n\n\"You sure you're OK? You're not lost? Should I come and meet you?\"\n\n\"No, it's OK - I just lost track of time. I'm gonna come back now - I'll see you at the hotel.\"\n\nI ended the call and looked around for Nicol\u00e1s. Paco had been watching me intently - he'd been there all the time.\n\n\"Where is Nicol\u00e1s?\" I asked him.\n\nPaco leant his head back and gave three short barks, then turned and raced off, not into the house, but in the opposite direction, down to the cove. When he reached the beach, he ran onto the jetty, but halfway along he turned, flew up the rocks and disappeared from view.\n\nThirty seconds later, he was back, panting in front of me - mouth open, tail wagging. For a moment I wondered if he'd misunderstood, thought I was playing a game with him, but as I looked up, I saw a bare-chested Nicol\u00e1s' climbing over the rocks. He turned to walk up the beach towards me.\n\nNot for the first time did I feel my heart begin to race as I watched him - that dark curly hair that framed his face so beautifully, those broad shoulders and strong forearms, his pecs and abs with just the right amount of definition. My eyes slipped lower - to the bulge in his shorts - what beast did he keep in there?\n\nHe smiled and waved as he approached.\n\n\"I'm sorry,\" I said meekly. \"I fell asleep.\"\n\n\"That's OK,\" he replied. \"Your ankle? Is it better?\"\n\nI nodded. It wasn't really hurting at all now, but I had yet to put any weight on it.\n\n\"I should go,\" I said. \"I don't want to take up any more of your time.\" I placed a hand on my rucksack and started to get up.\n\n\"You must be hungry,\" he said gently. There was such quiet authority in his voice. \"Do you want to eat something?\"\n\nMy gut reaction was to be British and politely decline - tell him I didn't want to impose and to beat a speedy retreat. But I stopped myself. I was starving - I hadn't eaten breakfast and it was past lunchtime. And more importantly, I wasn't going to pass up the chance to stay just a little bit longer with him.\n\n\"Thank you,\" I smiled. \"That would be very kind.\"\n\n\"I will bring some food,\" he said softly. He turned and disappeared into the house.\n\n\"Thank you, Paco,\" I whispered, reaching out to stroke him.\n\nThe dog whined in reply and came closer, dipping his head so I could stroke him more easily. There was a knowing look in his eyes - it was as if he could read my innermost thoughts.\n\nI lifted the blanket from my lap and swung myself around, resting both feet on the cool terracotta tiles. There was a round table with four chairs by the back door to the house. I pushed myself upright and tentatively walked towards it. There was a dull ache as I put my weight onto my bad foot, but it wasn't as painful as I'd expected.\n\nI sat down on a chair, waiting for Nicol\u00e1s to return. He appeared a few minutes later carrying a jug of water and two glasses, which he set down in front of me. There was something tucked under his arm - he handed it to me - it was my sketchpad! I'd been carrying it in my hand when I fell. He must have gone back to find it, while I was asleep!\n\nI watched him disappear back into the kitchen, disappointed that he'd put a shirt on, although his shorts revealed enough of his muscular thighs to compensate - at least temporarily. A few moments later, he re-emerged with a platter of food with a few slices of Spanish omelette, some chorizo, olives and salad. I smiled to myself. At home it was always me who did the fetch-and-carry as the male members of my family sat around, but here I was Nicol\u00e1s' honoured guest.\n\n\"Do you live here on your own?\" I asked as he cut a slice of homemade bread for me.\n\nNicol\u00e1s shook his head. \"No, my parents live here,\" he replied a little sadly. \"But my mother - she is ill, she is in the mountains - it is cooler there.\"\n\n\"I'm sorry,\" I said, looking down and breaking eye contact.\n\n\"My father is with her,\" he added quietly. \"I look after the farm until he returns.\"\n\nI nodded. He'd been entrusted with a heavy responsibility.\n\n\"And after that?\" I asked cautiously, \"are you studying, or will you work?\"\n\nNicol\u00e1s beamed at me. \"I will go to Barcelona to university,\" he said proudly. \"I will study medicine. I will be a doctor.\"\n\nThat explained a lot. Nicol\u00e1s was no simple farm boy. Sitting in front of me was one of the brightest young men of his age group. My heart beat a little faster.\n\n\"And you?\" he asked.\n\n\"I am starting at university in September,\" I replied. \"I will study English literature at Durham. It is in the north of England.\"\n\n\"So we are the same age,\" he said, smiling. \"And you are on holiday here in Spain?\"\n\nI nodded. \"Yes, with Ellie - she is my friend from school. We are staying until Saturday.\"\n\nI realised I was speaking a little slower than usual, matching the pace of his words, enunciating a little more, talking in shorter sentences, not skipping words. Even though Nicol\u00e1s' English was very good, I didn't want to overwhelm him. But I wondered if I was sounding a little patronising. It was so hard to get the balance right without appearing rude.\n\nWe chatted a little more as we ate together. Nicol\u00e1s told me about his work on the farm and how he was looking forward to starting his course in Barcelona. He'd never been to England, but wanted to visit soon. Silently I prayed would he would - hoped he might visit me.\n\nI was a little concerned when I saw his motorbike. That had always been one of Dad's unbreakable rules - I was not to ride under any circumstances. But he was far away - he'd never know. And after all Nicol\u00e1s had done, it seemed so churlish to refuse his offer.\n\nInstinctively he reassured me - he'd drive slowly, it wasn't far to the hotel. He handed me a helmet and I climbed behind him - clinging tightly, crushing my breasts against his back, hoping this wouldn't be the last time I saw him.\n\nHe pulled up at the entrance to the lobby and switched off the engine. \n\nReluctantly I released my grip on him, swinging my bad leg over the back of the bike to stand on my own two feet. I pulled off my helmet and handed it back to him, shaking my hair free as nonchalantly as I could.\n\n\"Thank you,\" I said simply, stepping forwards and throwing my arms around him as he sat on the bike. I wanted to kiss him, but he was still wearing his helmet.\n\n\"No worries,\" he smiled.\n\nI made my way up the steps and pushed open the door. I turned and looked back at him for one last time. He waved, then started his engine. I watched as he drove off and disappeared from view.\n\n-\n\n\"Lucy, is that you?\" Ellie called as I closed the door behind me. The air hung heavy with the stench of stale sex.\n\n\"Yeah, it's me! I'm back,\" I called.\n\n\"I'm in here,\" she called from the bedroom.\n\nI stuck my head through the doorway, half expecting her to still be wrapped around Jordan, but she was on her own, just lying on her bed, fiddling with her phone.\n\nI hobbled across to 'my' side of the room and plonked myself down on the mattress.\n\n\"How was your walk?\" Ellie asked distractedly.\n\n\"Yeah, it was really nice,\" I replied. \"I went all up over the cliffs and down the other side of the headland.\"\n\n\"That sounds nice,\" she replied insincerely. \"You'll have to take me up there.\"\n\nNo chance of that happening.\n\n\"And what about you?\" I asked. \"How was your morning?\"\n\nEllie blushed and turned to look at me for the first time\n\n\"It was amazing - better than last night - even better! Jordan is such a stud - he made me cum so many times! His tongue is phenomenal - no one's eaten me out like that before. And his cock - fuck me, just wow! Honestly, I'd let you have a turn, but I want him all to myself.\"\n\nI wasn't entirely sure how to react to Ellie's 'non offer' of sex with Jordan, but before I had time to feel insulted, she added, \"Anyway you've got Dave.\"\n\nDave? Desperate Dave? I hadn't given him the slightest thought. Nicol\u00e1s' bright star had outshone him completely.\n\n\"D-D-Dave?\" I stuttered.\n\n\"Yeah. I said we'd go out for dinner with them tonight. Before we go on the Strip. The guys are gonna pay.\"\n\nMy stomach lurched - there was no such thing as a free meal - even in this world of endless partying. Dave would expect something in return - I had a good idea what he'd have in mind.\n\n\"W-w-who are we going with?\" I asked, bewildered, hoping I'd misheard.\n\n\"Jordan and Dave,\" Ellie replied. \"It's a double date and they're paying. Then we're all gonna go clubbing together.\"\n\n\"Oh,\" I said. She'd told me twice that I wouldn't have to dip my hand in my pocket; I suspected the price was unzipping Dave's jeans.\n\nShe'd heard the uncertainty in my voice.\n\n\"Come on, it'll be fine. You said you wanted to get laid this holiday. Dave's nice enough - he's keen, he's gonna splash his cash - just go for it!\"\n\nInside I was horrified and indignant. This was banter from the boys' locker room, not the girl talk I was used to. I might have come to Spain to lose my virginity, but that didn't mean opening my legs to the first dick offered. True, Dave was a nice guy, but there was no chemistry there - none whatsoever. Surely there were others I could try to get to know?\n\nI was about to object strongly, to tell Ellie to butt out of organising my sex life, when she caught sight of the bandage on my ankle.\n\n\"Ohmigod - what's that?\" she asked, alarmed. \"Did you hurt yourself?\" She pointed to my foot.\n\n\"Oh, I slipped,\" I explained. \"But it's OK, they put some ice on it and bandaged me up. It doesn't hurt that much.\"\n\nI hoped that Ellie wouldn't ask me who 'they' were - I wanted Nicol\u00e1s to be my secret for a little longer.\n\n\"Can you walk OK?\" she asked, going back to her phone.\n\n\"I can do short distances,\" I replied. \"But I'm on ibuprofen - I won't be able to drink tonight.\"\n\nEllie looked distinctly unimpressed. \"But you are gonna come out, aren't you - at least for a meal?\"\n\nI nodded. \"I'll try,\" I promised. \"I'll see how I feel after that.\"\n\n-\n\n\"What is this piss?\" Jordan demanded, waving his half-drunk bottle of beer at the waiter.\n\nI was mortified.\n\n\"S-s-so-sorry sir,\" stammered the terrified man. \"We have not the other one.\"\n\nThe thug curled his lip in disgust and dismissed the poor guy with a wave of his hand. All eyes were on us now - every diner in the restaurant was staring. I sank lower in my chair, hoping the ground would swallow me up, but the paving stones beneath me remained defiantly solid.\n\n\"Fucking shit this place,\" Ellie's man went on, his voice booming around the restaurant terrace. \"Dunno why we come 'ere.\"\n\nIf I hadn't been certain before, there was now no doubting that Jordan was a monumental prick. Well over six feet tall, he cut an intimidating figure - and he knew it. He'd seemed alright the previous day, when he was turning on the charm by the pool, but now he was showing his true colours - utterly insufferable.\n\nWe'd gone to a restaurant serving British food - he didn't want to eat 'that foreign crap' as he put it. Actually 'restaurant' was far too generous a description, it was the worst greasy diner I think I'd ever seen - the sort that gives our nation's cuisine its bad reputation. Our plates were piled high with oily carbs and cremated meat - not a fresh vegetable in sight.\n\nDespite his vociferous complaints, Jordan appeared to be a regular - although quite why the owners hadn't banned him was a mystery.\n\n\"You're coming out on my boat - all of you,\" he waved his hand round the table - his voice loud enough for every customer to hear. \"There's a beach up the coast, we'll go for the day. Take a barbecue and shit.\"\n\n\"Oooohhhh, you've got a boat!\" squealed Ellie, clasping her hands together in delight.\n\nShe was drunk. She'd downed two large glasses of white wine as soon as we'd arrived, and now she hung on Jordan's every word, laughing exaggeratedly at her man's boorishness.\n\nWhat had got into her? Those ear-splitting cackles as he insulted everyone in the restaurant - staff and diners alike. She lavished sycophantic attention on him, massaging his ego, encouraging him to be ruder still. Was it just the hot weather and the cheap alcohol? Or was this the true Ellie coming through? Surely his cock wasn't that good?\n\nAnd as if that wasn't enough to ruin my evening, Dave's concern was suffocating - you'd have thought I'd had my leg amputated with the amount of fuss he made of my ankle. He was trying so hard to prove his caring credentials, he virtually offered to cut up the food up on my plate. He tried very hard to make me accept a drink and when that failed, he slipped his hand onto my thigh. I had to push him away, while trying to kick Ellie under the table, hoping in vain that she'd intervene.\n\nThere was one other couple - Mike had brought his girl from the previous evening - was Bethany her name? She fancied herself as a 'social media influencer', whatever the fuck that was. She grinned inanely the whole way through, flashing her brilliant white teeth and flicking her hair, barely saying a word. Her man spent the entirety of the meal staring down her cleavage. The two of them truly deserved each other.\n\nI politely declined all invitations to join the five for a night on the Strip, blaming my ankle, (which was no longer hurting) and fled back to our apartment. I settled down on the sofa in the living room, leaving the bedroom free for Ellie and her beau, hoping they wouldn't wake me when they crashed back in the early hours.\n\nAs I drifted off, I heard a quiet knocking on the door. I had a good idea who it was - and no, I certainly wasn't answering the door in my pyjamas. Dave would have to take the hint and give up - nothing was going to happen between us. Nothing at all. I closed my eyes and fell quickly asleep.\n\n-\n\nThat night I dreamt - dreamt of him, dreamt of Nicol\u00e1s - his kind eyes, his gentle hands, his sexy deep voice - his tender lips as he kissed me - sweeping me up in his arms and carrying me to his bed. He'd lay beside me as we'd stare into each other's eyes. Lovingly he'd stroke my hair and whisper my name as our hearts beat in time.\n\nMy fingers would slide under his top, exploring his abs and his pecs. He'd reach down and peel the garment from his torso, revealing his body-to-die-for. I'd bury my head in his muscular chest - giddy with lust, intoxicated with desire.\n\nI'd move across his body to settle between his legs. I'd feel his hardness as I brushed my breasts over his crotch; his eyes would beg me to release him from his imprisonment. Delicately I'd kiss my way, following his treasure trail to the waistband of his shorts.\n\nI'd nuzzle against him, feeling the steel against my cheek through the fabric. He'd be hard - so hard -- and smell so good -- he'd drive me wet with anticipation! He'd watch me slip the fastening to reveal his glory. Would he be straight or curved? Circumcised or uncut? I knew he'd be long - long and thick! My pussy would spasm as I held him for the first time.\n\nHesitantly I'd bend my neck to kiss his shaft. I'd worship him with the soft brush of my lips. Then I'd be bolder - I'd lick from base to tip, not once but three times. Meekly I'd look up again craving his approval and he'd stroke my cheek in gratitude as he whispered sweet nothings to me.\n\nI'd want him in my mouth - there'd be no delay. I'd pull his erection up, so I could slide my lips over his glans. And then slowly I'd start to bob my head as he urged me on. \n\nI'd watch his eyes glaze over and the tide of pleasure rise within him. He'd grip my hair, throw back his head, cry out my name. And I'd feel his explosion in my mouth - let that glorious, thick cream slide down my throat as my own, all-consuming climax broke over me.\n\n-\n\nThe bright sun was streaming through the balcony doors. Ellie and Jordan had crashed back in the early hours - it wasn't a surprise I'd woken. Fortunately, their amorous activities had been somewhat shorter than the previous evening, but I'd taken a long time to fall asleep again.\n\nBlindly my fingers felt for my phone beneath the couch. I lifted the screen to see the time.\n\n'09:37' it read.\n\nShit! I'd been planning to go back to the clifftop where I'd first met Nicol\u00e1s. I'd wanted to be there at least an hour ago, if not more - hoping he'd see me - that he'd want to talk to me again. I beat my fist against the pillow in frustration.\n\nMy ankle was throbbing; I needed to take more painkillers. I sat up and swung my legs over the edge of the sofa. Tentatively I began to stand, taking my weight on my bad foot. Actually, that wasn't too bad, but walking would be more difficult.\n\nI hobbled over to the sink and turned on the tap. I filled a glass, took a tablet from my bag and washed it down quickly. My thirst quenched, I limped out to the balcony, waiting for the ibuprofen to work its magic.\n\nI gazed down at the pool area below me. It was getting busy - there were some children splashing around in the water and a few parents watching from the side. Life was so easy for an eight-year-old, I mused.\n\nI took some deep breaths. I could still go up to the cliff top - maybe Nicol\u00e1s would come by anyway. Perhaps Paco would hear me - come and investigate, bring his master with him.\n\nDeep down I doubted myself. If Nicol\u00e1s did appear, I'd just wave at him across the field - I wouldn't have the courage to talk to him. That was the problem - I didn't know how to talk to guys - I was so shy. Nicol\u00e1s would be added to my ever-growing list of nearly boyfriends - nothing would happen - I was too scared of rejection to make a move. At least I knew Dave was keen.\n\nI shuddered. Dave would be coming round any minute - I was sure of it. I'd hear his gentle tap on the door. If I stayed here, there'd be no escape. I had to get out.\n\nI dug my fingernails into the palm of my hand and pinched myself. I had to conquer my fears. What did I have to lose? I'd made up my mind - I was going round to the farmhouse - to say 'thank you' to Nicol\u00e1s. I'd take him a present - he couldn't turn me away. He'd invite me in, give me a drink, maybe we'd spend some time together.\n\nWhat was the worst that could happen? If he said 'no', or 'sorry I'm busy' or 'thank you and goodbye', I'd just come back here - no one would know, no one would see, no one would mock me. But if he said 'yes', well... there was a world of possibilities - a world of possibilities.",
        "So that was it... decided. I was going to break the habit of a lifetime and not let my reticence get the better of me. Make a change, stick my neck out, roll the dice for a guy I hardly knew - but the one who'd shown me more kindness and understanding than all the others put together.\n\nThis was my moment - my moment in time.\n\n-\n\nAn hour later, I arrived at the farmhouse, clutching a small bouquet of flowers and a bottle of wine. I'd very nearly chickened out on the walk over, but I'd made it! There I was, knocking on the wooden front door.\n\nI waited for what seemed like an eternity. It was a hot day, but as I stood there in the full glare of the sun, I shivered with nerves. I ran my hands over my arms - they were covered in goosebumps.\n\nI was about to give up, to turn tail and flee, when I heard the sound of paws approaching - claws lightly tapping on the tiled floor inside. It was Paco! He gave a soft whine - enquiring who was visiting.\n\n\"Paco,\" I said quietly, \"it's me, it's Lucy.\"\n\nThe dog gave three short barks of acknowledgement then raced away. There was another long wait. So long, I was beginning to wonder if he really had gone to find his master or if he'd just retreated to his bed.\n\nThe door swung open.\n\nMy jaw dropped.\n\nNicol\u00e1s was standing there, bare-chested, shirt casually slung over his shoulder. He was gorgeous! I stood, rooted to the spot, incapable of speech. My eyes drank in the vision of masculine magnificence before me - those beautiful chestnut eyes, high cheekbones and perfectly chiselled jaw - all framed by the flowing curls of his jet-black hair. He was tall, dark and handsome. I felt my heart beat a little faster.\n\n\"Er hi,\" I stuttered, fumbling for my words. \"I came to say thank you, for yesterday, for helping me - I brought you these.\" I proffered the flowers and the wine.\n\nThere was a moment's pause - my heart skipped a beat. A broad smile broke out across his face and a wave of relief swept over me.\n\n\"Come in,\" he said, accepting my gifts. He stood aside to let me through. Paco led me excitedly down the hallway, tail wagging from side to side.\n\n\"How is your ankle?\" Nicol\u00e1s asked. I could feel him watching for a limp as I walked ahead of him.\n\n\"It's fine, fully recovered, thank you. You have healing hands,\" I replied, turning to face him as he set the flowers down on the kitchen table.\n\nWe looked at each other for a few seconds, each waiting for the other to speak. I could tell my face and chest were flushed. He was so good looking! I wanted to throw myself at him, to shower him with kisses and strip off his clothes, but I couldn't - I just couldn't - not yet anyway.\n\n\"Would you like a drink?\" he asked.\n\nI shuddered with delight - his deep bass voice and Spanish accent were so sexy!\n\n\"I have some lemonade,\" he offered.\n\n\"Yes please,\" I nodded enthusiastically. Nicol\u00e1s could have presented me with untreated sewage and I'd have accepted without hesitation.\n\n\"Would you sit outside?\" he asked pointing to the back door. \"Paco would like you to join him.\"\n\nThe dog was staring up at me, wagging his tail.\n\n\"I'll come right out,\" he said. I noticed he occasionally slipped an American-sounding phrase into his conversation.\n\nI sat down on the sun lounger and made a fuss of Paco. We didn't have pets at home, but something told me that my quest to claim Nicol\u00e1s' heart required the approval of his dog.\n\nOut of the corner of my eye I spotted a few items on the table. There was a sketch pad with a few pencils. Paco slipped away to lie down in the shade and I moved across to have a look.\n\nI opened the cover. Nicol\u00e1s was a talented artist - there was no doubt about that. The first few were drawings of Paco, beautifully executed, capturing his personality as well as his likeness. Next there was a still life and a couple of rough landscape scenes, mostly looking out to sea.\n\nI looked up. Nicol\u00e1s was coming out of the kitchen carrying a jug and some glasses. He saw me looking at his sketch pad and he froze.\n\n\"Are these yours?\" I asked. \"They're really good.\" I turned the final page.\n\n\"N-n-no you can't,\" he gasped in horror.\n\nBut it was too late. Staring up at me was a pencil sketch of a teenage girl, with long dark hair and a shy smile. It wasn't was it? But it was! My heart jumped for joy.\n\n\"Is this me?\" I asked.\n\nHe looked down and nodded.\n\n\"I am sorry, I am embarrassed,\" he said.\n\n\"No don't be embarrassed,\" I cried. \"It's amazing, I love it!\"\n\n\"You do?\" he said a little suspiciously.\n\nI nodded vigorously.\n\n\"You gotta let me draw you now!\"\n\nHe smiled thoughtfully and began to pour out the lemonade.\n\n\"Yes, OK,\" he replied.\n\n-\n\n\"You are looking forward to going to university?\" he asked.\n\nWe were still at the round table. Nicol\u00e1s had brought me some pencils and fresh paper, and was sitting graciously opposite me, so I could draw him.\n\n\"Yup, I can't wait,\" I said enthusiastically.\n\n\"And you're going to Der-ham?\" he asked.\n\n\"Durham,\" I corrected him. \"It's not said as it's spelled.\"\n\n\"I am sorry,\" he said humbly. \"My English is not so good.\"\n\nI shook my head. \"Your English is excellent - it's really good.\"\n\nHis face lit up - that meant a lot to him.\n\n\"And Durham - it is in the north of England?\" he asked.\n\nI nodded - I wondered if he'd looked it up.\n\n\"It is a big city?\"\n\n\"No, it's tiny,\" I answered. \"There's a cathedral, a castle and the university - that's it, pretty much. The castle's part of the university.\"\n\n\"It must be very old,\" he observed.\n\nI nodded. To my shame I didn't know as much about my future hometown as I should. I pretended to concentrate on drawing.\n\n\"And your friend,\" he asked. \"She is going to study at Durham too?\"\n\nI shook my head. \"No, she will be in Exeter - in the south west. It's a long way from Durham.\"\n\n\"You do not spend time with her - here in Spain?\" He looked puzzled.\n\nI hesitated. \"She's interested in other things,\" I said. I'd let Nicol\u00e1s read into that whatever he wanted.\n\n\"She likes to drink and dance?\" he suggested.\n\nI nodded.\n\n\"And you not so much?\"\n\nI nodded again. I was in danger of seeming boring.\n\n\"But you came here together, you and...?\"\n\n\"Ellie,\" I said. \"Her name's Ellie.\" I was about to add that she was my best friend, but I wasn't sure anymore.\n\n\"And you have known her a long time?\" he asked.\n\n\"Since we were eleven. We're at the same school.\"\n\n\"She does not know you are here?\"\n\nI looked up sharply. He was right - but why would he think that? Did I look like the secretive type?\n\n\"She's met someone - a guy. She's spending a lot of time with him,\" I explained.\n\n\"Here in Spain, or was this before?\" He was enjoying the gossip.\n\n\"Three days ago - here,\" I told him. \"His name's Jordan.\"\n\n\"Jordan,\" he said slowly. \"Jordan,\" he repeated.\n\nI looked up sharply. \"You know him?\"\n\nNicol\u00e1s shook his head.\n\n\"You like him? Is he good for her?\" he asked.\n\n\"He's big and muscly - that's what she likes. But he's too old for her. I mean he says he's 21, but he looks much older.\"\n\nI put my pencil down, picked up my phone and scrolled through my photos. I'd secretly taken a photo of Ellie and Jordan together, the first night we'd been clubbing. Tellingly she'd refused to let me take a proper posed one later that night.\n\n\"Look,\" I said, handing Nicol\u00e1s the phone. \"That's Jordan there. There's no way he's 21.\"\n\nI'd been expecting Nicol\u00e1s to merely glance at the screen, but he picked the phone up and studied it intently for several seconds.\n\n\"I think you are right,\" he said slowly. \"He is older.\"\n\nHe was silent for a few seconds.\n\n\"And do you like him? Is he good for her?\" He asked again.\n\n\"He's awful,\" I snorted. \"He's rude, selfish, he shouts a lot. But Ellie thinks he's fun for the week. She'll forget all about him as soon as she goes home.\"\n\nNicol\u00e1s said nothing. He stared out into the cove for a few minutes, thinking deeply. I suspected he strongly disapproved.\n\n\"Would you like to eat some lunch with me?\" he asked, suddenly breaking the silence.\n\nI looked up from my drawing in surprise. I'd kinda assumed I'd go back to the hotel for lunch with Ellie, but I wasn't going to pass up the opportunity to spend more time with Nicol\u00e1s.\n\n\"Er, yes please,\" I responded. \"If that's OK?\"\n\nHe nodded.\n\n\"I need to go to the sheep,\" he explained. \"I will take about twenty minutes. Then I will come back and prepare the food. If you need me, Paco will find me.\"\n\n-\n\nI walked back to the hotel. Nicol\u00e1s had offered to take me on his motorbike, but I'd politely declined the ride - I'd imposed too much already. It was late afternoon, but still baking hot. I stayed close to the side of the road, making as much use of the limited shade as I could.\n\nNicol\u00e1s had been the perfect host. He put together a simple lunch - some salad, bread and cold gazpacho soup that he'd prepared earlier. Then we'd taken his motorboat across to the island at the mouth of the cove. We'd swum and sunbathed as we chatted and laughed together.\n\nI was falling for him, I knew it. For the first time in my life, I was properly falling for a guy. I'd known him less than two days, but already I knew he was perfect. And he liked me too - I could tell. We'd brushed arms a couple of times, let that 'accidental' skin-to-skin contact last just a little too long - and I'd seen him discretely checking me out as I danced in front of him in my bikini.\n\nBut he just wasn't the guy to go for cheap, no-strings sex - even if I did try to hand myself to him on a plate. He wanted love and romance as part of a proper relationship, not some meaningless one-night stand. Not that we'd talked about it - I just knew.\n\nAnd that that made me want him all the more.\n\nSo I had another 'nearly boyfriend'. This time - for the first time - he was a serious 'nearly boyfriend'. But still only a 'nearly boyfriend'. That warm feeling in my heart got me no closer to losing my virginity. That was the problem - I could go visit Nicol\u00e1s every day until the flight home, but we'd never make it upstairs to his bed. He was too much of a gentleman.\n\nWas that what I wanted - deep down? Companionship to keep me occupied while Ellie made full use of the hotel room? Not really. I'd come to Spain with one purpose in mind - if I didn't lose my virginity this week, when would I lose it? Nicol\u00e1s was marriage material for sure, but he wasn't a cheap snog or a one-night stand.\n\nBut there was one guy who was ready and willing. Dave wasn't perfect, but nobody is. He was attentive enough - he'd be gentle. If I dithered any longer, I risked losing even him - I'd definitely be the only virgin at uni. All I needed to do was get drunk, get into bed and get it over with - just shut my eyes as he prodded me with his short, weedy dick, while I thought about somebody else.\n\nWas that my answer? To get wasted, lie under Dave and pretend he was Nicol\u00e1s? Surely that was the worst of all - wasn't that cheating them both? But If I really did want to get my first time over with, I could see no other way. The handwringing had to stop - I had to decide. No chickening out this time.\n\n-\n\n\"Where have you been?\"\n\nEllie was fuming - I'd never seen her looking quite so pissed off.\n\n\"Er, I went for a walk,\" I stuttered. \"I left you a note,\" I added meekly.\n\nShe gave me a look of withering contempt.\n\n\"But your ankle,\" she hissed, jabbing a bony finger towards my foot. \"If it was hurting too much to go clubbing last night, you're not telling me you miraculously recovered this morning.\"\n\nThat felt like a punch to my stomach - my best friend was accusing me of lying.\n\n\"But I wasn't walking all the time,\" I protested. \"I did some drawing.\"\n\nI could see the anger welling up in her. She walked over to the breakfast table and picked up my dusty, dog-eared sketch pad - the one that Nicol\u00e1s had rescued.\n\n\"You were drawing?\" she asked, shaking the pad at me. \"What with - the sand on the beach?\"\n\nI tried to interject, tried to explain, but she was unstoppable.\n\n\"Honestly Lucy - you tell me you wanna get laid, we come out here, I find you a nice guy, and then you run off and decide you don't wanna know. I mean for fuck's sake - do you really wanna be the only virgin at uni?\"\n\n\"But it's not like that,\" I interjected.\n\nShe gave me an almost contemptuous look.\n\n\"I was kinda with someone,\" I said, not entirely sure what to tell her about Nicol\u00e1s \"a guy - I met him yesterday, when I was walking. He's from the farm on the headland.\"\n\n\"You have?\" she asked, her demeanour suddenly changing - surprised but pleased. \"And is this serious, is he gonna be the one?\"\n\nI shook my head - there was no point pretending.\n\n\"I thought he might,\" I said flatly. \"But it's not gonna happen.\"\n\nEllie put her arm around me. She could see the disappointment in my eyes. She squeezed me against herself.\n\n\"Dave's nice,\" she said softly. \"He really is. And he cares about you. He's good looking, you like him... You need to give him a chance.\"\n\nI let out a big sigh.\n\n\"I dunno,\" I said. \"I'm just not feeling it with him.\"\n\n\"You need to give him a chance,\" she said again. \"Promise me you'll come out tonight - come clubbing.\" She attempted a warm smile. \"Let him buy you a drink. You're a good fit - you'll be a cute couple - I'm sure he'll do everything right.\"\n\n\"Ok,\" I nodded, resigning myself to the inevitable. \"I will give Dave a chance - I will come out. But it's not gonna be tonight - maybe tomorrow, but I'm not sleeping with him tonight.\"\n\n-\n\nI'd decided to go for it. I rapidly downed two glasses of white wine, just as Ellie had the previous evening, and got through the meal with a fuzzy haze swirling around my head.\n\nJordan was boasting again, but somehow I minded less. We were all going out on his boat the following day - he insisted. We'd love it - a couple of others were joining us too. He knew somewhere quiet - we'd have a beach to ourselves. We'd swim, toss a ball around, barbecue - then come back and hit the clubs.\n\nDave had been less suffocating once he'd heard my ankle was healing and I'd even found myself enjoying his company a little. Towards the end of the meal I felt him rest his hand on my thigh and to my surprise, I didn't push him away.\n\nWe danced. That's always the good thing about loud music - you can't talk. Dave had bought me two more drinks by the time he leaned in for his first kiss - for my first EVER kiss. It was awkward, but first kisses always are - or so I'd heard. We bumped teeth a few times and Dave made these jerky, stabbing motions with his tongue. But that was OK, we'd find our rhythm, we had plenty of time to practise.\n\nWe walked back to the hotel around three, arms round each other's waists. Several times we stopped to lock lips in secluded doorways - letting Ellie and Jordan get ahead.\n\nUp the stairs he escorted me, to the door of the apartment - told me he'd had such a special night, wondered innocently if I'd like to come back to his. Mike was with Bethany, he said - he had the place to himself. He'd be lonely on his own.\n\nI fluttered my eyelashes and politely declined, but gave him a final peck on the cheek. Waving coquettishly, I watched him walk down the corridor and disappear around the corner, then inserted my key in the lock.\n\nI closed the door and for a brief moment, I rested my head against the wall. The lights were off in the sitting room, but the barely muffled noises coming from the bedroom told me that Jordan was already at work. I shuddered.\n\nI took a deep breath. My stomach lurched. I ran to the bathroom, flipped up the lid of the toilet and spewed into the bowl.\n\nI sat on the floor and wept.\n\n-\n\nI was pleasantly surprised by Jordan's boat. I'd been expecting a leaking rust bucket, but for once his boasting wasn't too overblown. True, it wasn't the newest vessel - it had at least twenty years of use, maybe more, but it was large - 15 metres, just under 50 feet.\n\nI'd been in two minds about going - putting up with Jordan for a whole day would be a challenge, but Ellie had persuaded me. I'd have a chance to spend time with Dave, so he could seduce me properly - we could practise our kissing. And the distractions would help me get Nicol\u00e1s out of my system.\n\nAs soon as we'd boarded, the men had gravitated to the helm, presumably wanting to demonstrate their seamen's credentials. The girls were sent to the foredeck, which ran to the bow. We lay, stretched out in our bikinis, providing the eye candy for the guys above. I'd tried to explore a little, but the forward cabin was secured with a stout padlock and the tiny rear deck was noisy and choked with diesel fumes. Topping up my tan, as the male members of the party leered down at my modest cleavage, was the only option.\n\nWe'd turned out of the harbour and headed down the coast, past the island where Nicol\u00e1s had taken me the previous day. The weather was beginning to turn and clouds were rolling in from the sea. Once we'd reached open water, the waves were pretty choppy. Of course, Jordan insisted on \"giving her the beans\", making the engine scream like a tortured fox. There was an ominous smell of overheating oil as we jolted across the waves. I'm sure I wasn't the only one feeling queasy.\n\nJordan's beach was as beautiful as it was inaccessible - a broad strip of dark golden sand, maybe 100 metres long - completely deserted. Behind it, the severe sandstone cliffs rose vertically upwards - there'd be no way down from above. We anchored - quite a way from the shoreline. We'd need to wade ashore - that was OK for the guys, but for a smallish girl like me, it was only my head above water.\n\nMy ankle had started to complain again. The previous night's dancing had taken its toll. I watched Ellie, Bethany, Mike and Dave set up the volleyball net and begin to play, while I sat it out by the pile of bags at the base of the cliffs, watching the clouds scudding across the sky. Jordan had gone off somewhere with the other two - his mate Darren and his girlfriend Courtney. They were an odd couple - Darren and Courtney - he'd hardly said a word all morning and she'd spent the boat ride down staring sullenly out to sea. We'd wondered if they'd had an argument.\n\nI watched Dave trying to outdo Mike at volleyball - he was so keen to impress me, it was kinda cute. He wasn't bad looking, I told myself - average height, with dirty blond hair, a little scrawny, but then most teenage boys are. He could be quite amusing in his own way too - once he relaxed a little.\n\nI'd made up my mind - tonight would be the night - no backing down. We'd get dinner together, just the two of us - me and Dave. I'd spotted a nice restaurant down by the harbour. I was going to wear the little black dress that I'd bought especially. I'd let him wine me, dine me, then take me back to his room. Everyone else would be down on the Strip - we'd have the time to ourselves. All I needed was to tell him my plan.\n\nI reached out for my bag - I was going to put it behind my head, so I could lie down and sunbathe - put some colour into my anaemic complexion. But as I lifted the rucksack, one of the straps caught on someone's coat. As I tried to disentangle the two, a wallet fell from the pocket, out onto the sand in front of me. I picked it up - it belonged to one of the guys - but which one? I flipped it open - there was a driving licence in the front card slot. Jordan's face looked up at me. I was about to shut it and put it back, when I caught sight of the name.\n\n'Gavin Andrew Henlow' it read.\n\nI did a double take. I read it again.\n\n'Jordan' was a nickname - so what?\n\nMy eyes flicked lower to the date of birth. That didn't look right! I double-checked my maths. He wasn't 21 he was 28, nearly 29! A shiver ran through me. He'd told us he was 21. I knew he'd been lying.\n\nMy eyes darted around the beach. No one was paying any attention to me. I pulled out my phone and, using my bag as a cover, I took a photo of the licence, checking to make sure that the image was clear, before restoring it to its rightful place in the wallet.",
        "I'd never felt comfortable about Jordan - but that was all it had been - a vague feeling. Now there was tangible proof that one person in our party was not quite who they wanted us to believe. I felt a little queasy, unsure what to make of it. He'd lied about his age - but did it really matter?\n\nI was feeling nervous -- I needed to pee. I looked around for cover. Off to my left, there were some large rocks at the end of the beach - not ideal, but if I squatted down, I'd be well hidden. I walked across to the first - no, not big enough - I'd need to go further in. The second was fine. I squatted down and pulled by bikini briefs aside.\n\nI'd finished and was about to get up when I heard voices approaching. A loud voice - definitely male - unmistakably Jordan's.\n\nI crouched down lower, hoping my head was well hidden. I half-expected a stream of urine to start shooting across the top of the rock and over my head.\n\n\"Right let's get this over with,\" he said. \"You got the cash?\"\n\nI heard the sound of a zip being opened and then the rustle of something being transferred between the two guys.\n\n\"Pleasure doin' business,\" Jordan said nonchalantly.\n\n\"Saw you gettin' on with that Lucy girl last night,\" he added. \"You get anywhere after?\"\n\n\"Frigid little bitch,\" the other guy muttered. It was Dave!\n\nMy stomach lurched.\n\n\"You didn't tap her last night?\"\n\n\"Nah - didn't even give me a blowjob!\" He sounded more than a little pissed off.\n\n\"You need to get her wasted - do what you like then,\" advised Jordan - doubtless speaking from years of experience.\n\n\"Tried that,\" Dave replied. \"She hardly touches booze - four drinks last night - that's all she had.\"\n\nThere was a pause. I suspected looks were being exchanged.\n\n\"You got anything stronger?\"\n\nThere was the sound of the zip being drawn down again.\n\n\"Slip that in 'er drink and she'll be putty in your hands.\"\n\nI felt physically sick.\n\n\"Nuh, nuh, nuh,\" Jordan continued, as if snatching the packet away from Dave's grasp. \"It's gonna cost ya.\"\n\n\"How much?\" Rather too eager.\n\n\"Hundred fifty euros.\"\n\n\"Aw man - that's too much! No way - I can't pay that.\"\n\n\"One hundred and fifty euros to pop a tight li'l pussy?! You don't wanna pop her - plenty would. A nice virgin snatch - they'd pay ten times that - easy!\"\n\nWhat?!! How the hell did he know that? Ellie had told him I was a virgin!!\n\nThere was a silence, as if Dave was deliberating, weighing the price for my deflowering.\n\n\"Look if you're not interested, I'll do her myself. Wouldn't mind ploughing that tight little cunt!\"\n\nThere was another pause.\n\n\"Hundred euros,\" Dave offered in desperation.\n\nJordan weighed up his options.\n\n\"Tell you what, help me get this weed on the boat and unloaded the other end and I'll do it for a hundred. Just for a mate.\"\n\n\"Deal!\"\n\nThere was the sound of agreement and then silence. I listened, straining to hear the receding footsteps, scarcely daring to breathe. I'd just heard two men plotting to rape me, fixing the price for virginity. But somehow that wasn't the worst part - that was Ellie's betrayal.\n\nI needed to get away from those who wanted to harm me. I had to go straight to a police station, then get home as soon as I could. This holiday was a disaster - I needed to be on a flight out tonight. I wasn't safe.\n\nBut how could I get off the beach? My only way back was in Jordan's boat - it was far too far to swim. I took my phone out my pocket - there was no signal down here beneath the cliffs - no way of summoning help. There was no alternative. I'd have to make a run for it as soon as we docked.\n\nI waited a minute or two, then peeked over the rock. Dave and Jordan had disappeared - it was just Mike, Ellie and Bethany playing ball. Darren and Courtney were nowhere to be seen - were they back on the boat maybe?\n\nI walked back along to the place where we'd left our bags, scanning the cliffs to see if there was any sort of a path - but there was none. It was a sheer drop down - attempting to climb would be suicidal.\n\nThe three volleyball players were getting bored. I saw Mike whisper something in Bethany's ear. She giggled and reached out to grab his hand, but he slipped past her and planted a large slap on her butt. She shrieked with delight and the two of them ran off towards the rocks where I'd been earlier. No prizes for guessing what they were up to.\n\nEllie flopped down on the sand next to me.\n\n\"That was fun - hot though, I'm knackered.\"\n\nI turned to look at her, but said nothing. I was almost shaking with fury, ready to deliver a broadside against her, to demand to know why she'd revealed my most intimate secret, to accuse her of the greatest betrayal.\n\nBut something held me back. I needed to get away from Jordan, Dave - all of them as soon as possible. If I could do that with her help, so much the better - there'd be time for recrimination later. She'd blurted something out she shouldn't have - that was nothing new in the world of schoolgirl gossip - especially from her. And maybe Ellie was also a victim, flattered into supporting her man by the attention he gave her. Now it was time to make the scales to fall from her eyes.\n\n\"What do you know about Jordan?\" I asked quietly, trying to sound as casual as possible.\n\nEllie rolled her eyes.\n\n\"Really Lucy, really? Not this again?\" she despaired.\n\n\"You know his name's not Jordan?\" I asked.\n\nThere was the slightest flicker of hesitation.\n\n\"What do you mean his name's not Jordan?\" she asked, irritated, creasing her brow in an exaggerated way, preparing to dismiss me.\n\n\"His name's Gavin,\" I said. \"Gavin Andrew Henlow.\"\n\nEllie shook her head, now annoyed, forehead creased more than ever.\n\n\"Oh leave it Lucy,\" she hissed. \"Honestly! What is your problem? You've been trying to do him down all week. He uses a nickname - so what? Everyone calls me Ellie, but my real name's Eleanor. Big deal! What is your fucking problem? Why do you even care?\"\n\nI was nervous now, feeling the pressure.\n\n\"And you know he's not 21,\" I said as calmly as I could. \"He's 28. He'll be 29 next month.\"\n\nThere was a pause. The colour was beginning to drain from her face.\n\nShe shook her head.\n\n\"No, he's not - he's 21,\" she insisted. Her words carried no conviction. \"I mean, how would you even know that?\" she demanded.\n\nI unlocked my phone.\n\n\"I found his driving licence,\" I said quietly. \"It's here in his wallet, in his coat. Look.\"\n\nI handed her my phone.\n\nEllie squinted at the screen, using her fingers to enlarge Jordan's photo and then his name and date of birth.\n\nI looked up. Three figures were appearing from the side of the cliff - Jordan, Darren and Dave. There looked like there was a concealed opening - a cave - so well hidden I hadn't spotted it before - even from the boat. I squinted against the bright sunlight. Each was carrying an object, like a box - something vaguely rectangular or square looking. They were moving quickly and furtively down the beach to the waterline. My heart skipped a beat. The colour and the pattern were unmistakeable - Jordan had Ellie's suitcase! What the hell? I looked at the other two bags. Dave's was black - it could have been mine, but at this distance it was difficult to tell. I had a fair idea who the other one might belong to.\n\n\"Ellie,\" I asked slowly. \"Did you give Jordan your room key this morning?\"\n\nShe looked up at me sharply. \"Er, yeah,\" she said. \"I met him in the lobby - while you were buying the water. Said he'd left something in there last night.\"\n\nThe three men had reached the water line and were wading towards the boat, bags held high.\n\n\"Don't stare,\" I said quietly, \"just have a quick look. Is that your suitcase Jordan's got on his head?\"\n\nShe turned her head as casually as she could, then looked straight back at me.\n\nI could see the fear in her eyes.\n\nShe nodded, unable to speak.\n\n\"I've got a good idea what's in those bags - and I think you do too,\" I said.\n\nAnother nod. Silence.\n\nWe pretended to look at my phone, but made furtive glances towards the boat. We could see Jordan unlocking the padlocked door and slinging the suitcases into the forward cabin.\n\n\"We can't get caught up in this,\" I said firmly. \"We need to get away. As soon as the boat docks, we need to get back to the hotel, get our passports and get out.\"\n\nAnother nod.\n\nSuddenly the thought hit me - Jordan might not have just taken the suitcases. We had about a thousand euros in cash between us. And all our travel documents were in the room too - there wasn't a safe. I'd done my best to hide my valuables, but I'd no idea what Ellie had done with hers.\n\nI felt her reach for my hand.\n\n\"I'm scared Lucy,\" she whispered. \"I'm scared.\"\n\n\"It's OK,\" I said, but I knew full well it wasn't. \"They don't know we've rumbled them. We've got time. They'll need to offload - they'll be busy. They won't see us go.\"\n\nAnother nod.\n\n\"We need to keep our heads down, pretend everything's normal, and when we get our chance, we run.\"\n\nAnother squeeze of my hand.\n\n\"Thank you,\" she whispered.\n\n-\n\nJordan was in a foul mood. The disposable barbecues wouldn't light. The spray that had washed over the boat on the journey down had filled two with sea water and the third wasn't much drier. The anaemic sausages sat on the grill and stubbornly refused to brown.\n\nEllie and I bit our tongues. There was nothing we could do to help and we'd both realised that a hungry Jordan was likely to take the boat back to the resort sooner rather than later. It was just a question of waiting and trying to stay calm - as unbearable as that was.\n\nThe group was getting more agitated now - voices were becoming raised - the alpha was coming out in each of the males. Jordan was pacing around, gesticulating wildly, blaming everyone but himself.\n\nI was the first to scramble back onto the boat. I climbed the steps to the cockpit, heading for the foredeck. As I passed the steering position, something metal and shiny caught my eye. I peered closer. It was a key - a small key on a loop of dirty string, sitting in plain view on the captain's chair. The name of the brand matched the padlock on the door to the cabin beneath me.\n\nRealisation dawned. I looked around furtively. No one was watching me - they were all too concerned with getting back onto the boat. I grabbed the loop of string in my fist, climbed down the ladder to the foredeck and made my way to the bow. I leaned over the side, pretending to look out to sea. I let my fingers open and the key dropped down into the water below. That would buy us a bit of time when we docked - the confusion would give us a chance to slip away.\n\nEllie came alongside me and grabbed my hand again.\n\n\"You OK?\" I asked.\n\nShe nodded. She was white as a sheet.\n\n\"It won't be long now,\" I said, trying to reassure her. \"We'll be back to the harbour in what, twenty minutes - we won't see them again after that.\"\n\nThere was an explosion of rage from the helmsman's position above us. Jordan was banging the controls in frustration. At first, I thought he'd realised the padlock key was missing, but that was the last thing on his mind.\n\nThe boat wouldn't start.\n\nA firestorm of shouts and arguments raged above and behind us. Ellie and I huddled closer together, hoping they'd get it sorted and that we'd be underway.\n\nMore shouts, more banging. Someone had lifted the boards above the engine - they were clanking something metal - as if that was going to do anything.\n\nEllie was looking at her phone.\n\n\"You got reception?\" I whispered.\n\nShe shook her head.\n\nI'd been holding mine in my hand. I turned it over and unlocked the screen. To my surprise and relief, there was one bar of signal - I wouldn't get 4G, but at least I could make a phone call.\n\nI glanced at Ellie and pressed my finger to my lips. I dialled the emergency number - 112. I put the phone to my ear, ducking down in front of my friend, so that her body hid what I was doing.\n\nI heard two rings - a little crackly, but at least I had a connection.\n\nA man's voice answered, firing a rapid stream of Spanish.\n\n\"Coastguard, coastguard,\" I said, as clearly as I could.\n\n\"Hold the line,\" he replied in perfect English.\n\nThere were a few more clicks and crackles, then I heard woman's voice, speaking again in Spanish.\n\n\"Do you speak English?\" I asked.\n\nThere was a sigh at the other end of the line. Clearly the operator had dealt with too many British idiots today.\n\n\"Yes, this is the Coastguard, where is the emergency?\" she asked tersely.\n\n\"Our boat has broken down,\" I explained. I gave her our approximate location.\n\n\"Are you drifting or anchored?\"\n\n\"We're anchored,\" I replied.\n\n\"And you are how many?\"\n\n\"There's eight of us.\"\n\n\"And no one is injured?\" she asked. I could hear the irritation in her voice.\n\n\"No, we're all fine,\" I replied.\n\n\"Then you are not an emergency,\" she said flatly. \"The Coastguard is too busy to deal with you. I will send a message to the local volunteers. One of them may come to assist.\"\n\nThere was a clunk and the line went dead.\n\nAnger flared within me. Of course, it was an emergency - I was trapped on a boat with a stash of drugs in the cabin below me.\n\nI needed the police.\n\nI dialled again - 112.\n\nAn error flashed up on my phone. 'Network unavailable.'\n\nI dialled again - 112.\n\nStill nothing.\n\nMy heart sank lower than I ever felt possible; I buried my head in my hands. We despaired.\n\n-\n\nThe next thirty minutes felt like an eternity. Desperately Ellie and I scanned the horizon, hoping for the help I knew would never come. We continuously woke our phones, but the connection was ever elusive. Behind me the shouts and arguments had quietened. They were debating now whether one of them could climb up the cliffs to summon help. I turned and glanced back at the helm. Jordan was sitting on the Captain's chair, fist in his mouth - powerless for the first time in his life. Wisecracks and bullying couldn't help him here.\n\nA shout went up. \"A boat, look a boat!\"\n\nOur vessel lurched as everyone ran to the side.\n\nSure enough, rounding the headland was a small, red motorboat. There was just one person aboard, sitting at the stern, steering a course towards us. I gasped. Even from this distance that silhouette was unmistakeable. I blinked. No, it wasn't him - surely not. But it was! It was!\n\n\"Nicol\u00e1s, Nicol\u00e1s!\" I called, jumping up and waving at him frantically.\n\nEllie stared at me in amazement.\n\n\"You know him?\"\n\n\"Yeah, he's Nicol\u00e1s,\" I replied. \"He's the guy from the farm - I met him on the cliff top, the day before yesterday.\"\n\nSuddenly there was an ear-splitting shout behind us.\n\n\"WHO IS THAT? WHO THE FUCK IS THAT?!!\" Jordan was standing, stock still, his face white as a sheet. \"WHO THE FUCK IS THAT?\" This wasn't his usual boorish bellowing - no this was different. The whites of his eyes said it all. This was terror!\n\nI looked back towards Nicol\u00e1s. He stopped his boat about 25 metres from us. I waved again - but no reaction - he obviously hadn't noticed me. Why wasn't he coming closer? Why wouldn't he acknowledge me? I was beginning to feel a little hurt, a little worried. I needed him to rescue us.\n\nI watched him scan our boat. He reached down and took something out of the locker by his feet. He turned, as if to hide what he was doing. I saw him pick up a black, rectangular object and bring it to his ear. I knew in an instant what it was - and so did Jordan.\n\n\"HE'S GOT A SAT PHONE! HE'S GOT A FUCKING SAT PHONE! IT'S THE POLICE - IT'S THE FUCKING POLICE!\"\n\nThere were more shouts, more cries of anger, torrents of swearing as he and Darren panicked, blamed each other and then tried to formulate a plan. Nicol\u00e1s had heard the shouting and had turned around. He was talking into the phone, describing what he could see.\n\n\"GET THAT FUCKING ENGINE STARTED!\" someone was yelling.\n\n\"YOU! GET THAT STUFF OVERBOARD. I DON'T CARE HOW YOU DO IT - JUST GET IT OFF THE FUCKING BOAT!\"\n\nI turned to Ellie. \"This isn't safe. We gotta get off. We gotta get off the boat!\"\n\n\"WHERE'S THE KEY? WHERE'S THE FUCKING KEY?\"\n\nI knew exactly where it was.\n\n\"I FUCKING GAVE IT TO YOU!\"\n\n\"NO YOU DIDN'T. NO YOU FUCKING DIDN'T!!\"\n\n\"BREAK THE DOOR DOWN. JUST BREAK THE FUCKING DOOR DOWN!\"\n\nThere was a series of bangs and crashes, as the men hurled themselves in turn against the padlocked door, which stubbornly refused to yield.\n\nMore shouts more recrimination. They were trying to break the cabin windows with a wrench.\n\nI glanced back towards Nicol\u00e1s. He still had the phone to his ear, but he was listening. He wasn't coming any closer.\n\n\"We gotta get off,\" I whispered to Ellie. \"We gotta dive in and swim out to him. He'll take us back.\"\n\nEllie nodded. She gripped my hand tighter.\n\nI waved again at Nicol\u00e1s. He lifted his hand in the subtlest gesture of acknowledgement. He'd seen me, he knew I was there. He didn't want to put me in any more danger.\n\nThat was a moment of great relief. Maybe it was best to sit tight.\n\nDarren was shouting again. \"YOU GOTTA DO SOMETHING! ANYTHING! JUST GET HIM OFF THAT FUCKING PHONE!\"\n\n\"WHERE'S THE FUCKING FLARE GUN?\" Jordan shouted. \"WHERE ARE THE FUCKING FLARES?\"\n\nHis words ran through me like a bolt of lightning, chilling me to the bone. No way was I gonna stand by while he took aim at my Nicol\u00e1s!\n\nI leapt to my feet and flew up the stairs to the helm. Jordan was straightening up, trying to fit the flare into the gun. He looked up in surprise, shocked by my sudden appearance.\n\n\"YOU!\" he snarled.\n\nIn that split second, I'd snatched the gun from his hand and had thrown it overboard.\n\n\"Ellie, jump!\" I screamed, running for the side.\n\nI dived - straight into the water.\n\nSplash!\n\nI swam - swam as fast as I could. It was cold, but I didn't care. All I wanted was to get away from them, to get to safety, to get to Nicol\u00e1s. My heart was thumping, my arms were tiring, but I pushed on, harder, faster. My vision was dark, I had no idea where I was, where I was going, if he'd be there.\n\nHands were catching me. Strong hands, powerful hands. Lifting me up, like they'd lifted me before. I was in a boat, lying on the bottom. The engine was roaring, we were moving, skipping across the waves like a stone, jolting, jarring, knocking. I clung on for dear life.\n\nNow we were slowing, throttling back - a quieter, gentle chug-chug-chug. I opened my eyes - I could breathe again. Someone was next to me - it was Ellie - lying on her front. Thank goodness - she'd made it too! I pushed myself up, coughing and spluttering. Nicol\u00e1s was behind me, shutting off the engine.\n\nHe pointed at Ellie. \"She is injured,\" he said quickly, matter-of-factly. He handed me a first aid box and a foil blanket. Then he picked up the phone and began to speak rapidly in Spanish again.\n\nI knelt beside my friend. She was conscious, but groaning.\n\n\"It's OK,\" I whispered. \"It's Lucy, we're safe, we're with Nicol\u00e1s - you're gonna be OK!\"\n\nShe rolled over a little. Now I could see her face for the first time. There was a big gash across her forehead and she was bleeding into her eyes. There was a cut on her leg as well. I reached into the box, pulled out a swab and started to clean the blood from her.\n\nSuddenly Nicol\u00e1s was beside me with a bandage, wrapping it round her head in swift, deft movements. Together we put her into the recovery position and placed the blanket over her.\n\nHe turned to me, gravely serious.\n\n\"Have you taken anything, any drugs?\" he asked quickly. He was serious -- he wasn't messing around.\n\nI shook my head, alarmed at his questioning.\n\n\"You haven't smoked, eaten any pills?\"\n\nAgain I shook my head. \"I haven't Nicol\u00e1s, I swear.\"\n\n\"And her,\" he asked. \"This is your friend? Has she taken anything?\"\n\n\"I don't know,\" I said truthfully. \"I'm pretty sure she hasn't though.\"\n\nA look of relief passed over his face. He pointed at Ellie. \"She will need to go to hospital. She may have concussion.\"",
        "There was a loud noise overhead. A helicopter was passing above us.\n\n\"It is the police,\" said Nicol\u00e1s. \"We are safe now.\"\n\n\"Thank you,\" I said, reaching out to grasp his hand.\n\nHe shook his head. \"No, it is me who must thank you. I saw what you did with that gun. That was brave. I couldn't have done that.\"\n\nHe squeezed my hand. I desperately wanted to hold him, to put my arms around him and to rest my head on his shoulder as he steered us home, but with Ellie still lying down, it was too awkward to move around in the boat.\n\nNicol\u00e1s' sat phone was ringing. He answered and spoke rapidly again in Spanish. I managed to pick out a couple of words - polic\u00eda, hospital, concusi\u00f3n.\n\nHe switched off the phone and turned back to me.\n\n\"We need to get her to the hospital,\" he said. \"The ambulance will meet us at the harbour.\"\n\nI nodded.\n\n\"And the others?\" I asked, pointing in the direction of Jordan's boat, which was out of sight round the other side of the headland.\n\n\"You know who they are?\" he asked, speaking quickly. \"Are they your friends?\"\n\nI shook my head.\n\n\"No, we just met them. They're from the hotel.\"\n\nNicol\u00e1s took a deep breath.\n\n\"They are a drugs gang,\" he began, speaking more slowly, as if wasn't quite sure what he could tell me. \"The police were watching them. They knew who they were, how they were selling in the clubs, but they did not know how they were shipping it in. Now they do.\"\n\n\"And you?\" I asked slowly. \"Are you a police officer?\"\n\nHe shook his head and smiled. \"No. I am a volunteer for the Coastguard. The police sent us all the photos of the gang, asked us to report if we saw them.\"\n\nHe squeezed my hand again.\n\n\"We must go. We will get her to the hospital,\" he said.\n\n-\n\nI sat alone at the end of the jetty, watching the light fade from the evening sky. It was my first chance to draw breath at the end of a bewildering day. Nicol\u00e1s had gone to check on the farm animals, while I'd taken a shower and changed my clothes. Now I was waiting on him to return.\n\nI'd ridden in the ambulance with Ellie, then waited at the hospital while they ran all the tests. She was awake and talking, but they were keeping her in overnight for observation. I'd phoned her parents. Her dad was going to get the first flight out in the morning. I hadn't told him everything - just enough to let them know that Ellie was concussed, but stable.\n\nNicol\u00e1s had taken me to the hotel. Our apartment was a complete wreck - our belongings had been strewn all over the floor and our suitcases taken. To my relief, my money, my purse and passport were where I'd hidden them, but Ellie's appeared to have been stolen. I'd packed our clothes and toiletries into the plastic trash bags that Nicol\u00e1s had given me and he'd taken me back to his house.\n\nThe following morning I'd be with the police and someone from the British consulate - they had a lot to ask me. But for now, I could relax - I was safe. I took some deep breaths, looking out across the still waters, watching as the occasional fish broke the surface for air. All was calm.\n\nI stood up and turned around. Nicol\u00e1s was walking towards me along the jetty, his features lit perfectly by the rising moon. A wave of passion surged within me and I ran forwards, flinging my arms around him, tightly embracing him. I buried my head against his chest.\n\n\"Thank you,\" I whispered, \"thank you so much.\"\n\nHe pulled me closer to him, his hands resting on my back. I felt the gentle touch of his lips against my damp hair.\n\nMy heart leapt. Did really just kiss the top of my head?\n\nDizzy with emotion, I pulled back a little from him and looked up at his handsome face. He was smiling down at me, eyes sparkling.\n\n\"Nicol\u00e1s,\" I blurted out, scarcely in control of my words. \"I think I'm in love with you!\"\n\nThe broadest smile broke out across his face.\n\n\"I think I'm in love with you too,\" he said slowly.\n\n\"Really?\" I asked breathlessly. \"You're really in love with me?\"\n\nHe nodded and gently cupped my cheeks with his hands. Then the moment, that magical moment - our first kiss.\n\nHis lips were soft and tender. His tongue teased mine, caressing it with tender warmth. Lovingly he stroked my face as I melted into his embrace. Time stood still as we held each other.\n\n\"Lucy,\" he said quietly. \"I need to take a shower - is that OK?\"\n\nI nodded.\n\n\"And then I will prepare some food.\"\n\nHe disappeared back into the house and I sat back down at the end of the jetty, delirious with joy and happiness. My heart pounded with love - I was the luckiest girl in the world!\n\nI heard the jangling of a dog collar behind me. I turned to see Paco approaching. He settled beside me and rested his head on his front paws. I put my arm across and stroked him.\n\n\"Thank you,\" I whispered.\n\nHe looked up at me. Those eyes were full of such wisdom and understanding. I owed him so much.\n\nI looked back at the farmhouse. A light came on in the upstairs bathroom - that was my man, preparing to take his shower. He'd be naked by now! I could just picture the water, cascading over his broad shoulders as he washed the soap from his smooth, dark skin. How I wanted to run my hands across his chest and to squeeze that perfect butt! A shiver of ran through me - I groaned with frustrated lust.\n\nBut why was I imagining? There was no need. There were no locked doors between Nicol\u00e1s and me. No need to wait until he'd finished! I could go up there, join him - he'd let me wash him - and then afterwards... I could only dream of what we'd do.\n\nPaco was looking up at me, reading my thoughts.\n\n\"Should I go to him?\" I asked quietly.\n\nThe dog said nothing, but prodded my thigh with his nose, nudging me into action. That was his blessing - I could go to his master. I hugged him again, took a deep breath, then stood and walked purposefully towards the house.\n\n-\n\nNaked, I tiptoed across the landing and tried the door of the bathroom, praying it would be unlocked. It swung open. The shower was in the far corner - Nicol\u00e1s had his back to me; the sound of the running water had covered my entry. I paused for a few seconds, admiring his body - that fantastic butt and the broad sweep of his muscular shoulders. A flash of excitement ran through me - I could feel the wetness building between my legs.\n\nI slid open the door of the cubicle. Nicol\u00e1s half-turned, looking over his shoulder at me in surprise.\n\n\"W-w-what are you doing?\" he asked, astonished.\n\n\"I'm going to wash you,\" I said simply.\n\nI closed the door behind me, taking the bottle of shower gel from his hand. Tenderly I lathered up his back, watching as the rivulets streamed through the foam. My fingers slid lower, down his flanks to his magnificent bottom. I squeezed gently - so lean, so muscular - I shivered with delight! He'd feel so good thrusting into me - I knew it. I nearly came there and then.\n\nI planted a kiss between his shoulder blades.\n\n\"Can you turn around?\" I asked tentatively.\n\nHe hesitated; I could see he was nervous. He shook his head.\n\n\"Please Nicol\u00e1s,\" I pleaded. \"I want to wash your front.\" I was desperate to see him - I placed my hands on his sides and tried to twist him.\n\nReluctantly he began to turn and, as his hips shifted, his prize possession came into view!\n\nMy jaw dropped.\n\nHis cock was fully erect, jutting straight up at me at full salute. I gasped - he was long and very thick - a magnificent spear erupting from the jet black curls around the base, the bulbous tip shining brilliantly in the harsh fluorescent light.\n\n\"W-w-w-wow!\" I stuttered.\n\n\"I'm sorry,\" he said. \"I am embarrassed.\"\n\nEmbarrassed? How could any guy be embarrassed with a weapon like that?\n\nI shook my head. \"No, he's beautiful, he's amazing, he's... he's huge!\" Tentatively I reached forwards. \"Can I touch him?\"\n\nHe nodded, a little warily.\n\nGingerly I wrapped my fingers around his shaft. He was so hard and so warm! I wasn't sure how to grip him - I didn't want to hurt him.\n\nCautiously I began to slide my fist up and down. I watched, enraptured, my fingers moving over the ridges of his hardness as the velvet skin ran over the steel beneath. \n\nAnxiously I looked up at my man.\n\n\"Is this OK? Am I doing it right?\"\n\nHe nodded weakly, mesmerised by my actions.\n\nI looked down again, squeezing a little harder, moving a little quicker. My core ached for him. I needed him so badly!\n\nI felt the gentle touch of his fingers, lifting my chin so my lips could meet his. His kiss was soft, teasing my tongue as I melted against him. I let him lead, returning his passion with increasing fervour as his hands roamed over my breasts, sending tingles flashing through my body.\n\nI hadn't noticed the water beginning to run cold, so intense was the heat within me. Nicol\u00e1s reached behind and turned off the tap, then guided the two of us out of the shower. He selected an enormous, fluffy towel and wrapped it around us, pulling me against him. That felt so good - the smooth firmness of his skin on mine, the insistent hardness of his weapon pressing against my belly. My nipples tingled as they throbbed against his chest.\n\nTenderly Nicol\u00e1s dried me, planting soft kisses on my body as he knelt to pat the water from my legs. Proudly I stood before him, unashamed in my nakedness, my breasts swollen in my arousal, my chest flushed with the rawness of my passion. He wrapped the towel around me, then picked me up and carried me to his room.\n\nThe two of us lay down on his bed, side-by-side. We stared into each other's eyes as he tenderly stroked my hair and cheek.\n\n\"You are so beautiful,\" he whispered in his deep bass voice.\n\nI quivered. That Spanish accent was so sexy!\n\nLovingly he began to kiss me, worshipping my lips with his, teasing my tongue with his own. Blindly my fingers scrabbled for his hardness. Gratefully I closed my hand around him and awkwardly began to work his shaft.\n\n\"Oh Nicol\u00e1s,\" I gasped. \"You're so big and so hard!\"\n\n\"Yeah?\" he growled. \"You like it?\"\n\nI nodded - a delighted smile breaking across my face. I fucking loved it - I wanted it so bad. His cock was the best!\n\nHe kissed me harder, his tongue delving deeper, his passion building as he rolled me onto my back. Hungrily he moved above me - that was better, I could stroke him more easily. He was fantastic - so big, so hard - I couldn't believe the way he filled my hand!\n\nI groaned in frustration when his mouth left mine, but in the next moment, his lips were brushing across my jawline and down my neck. I'd always imagined being kissed there would tickle, but it felt so good - so sensual, so enthralling - it made me tingle from the hairs on my head to the tips of my toes.\n\n\"Oh yeah,\" I moaned, \"that feels amazing.\"\n\nNow he was unwrapping me, lifting the corners the towel to reveal my body for his delight. I watched as he feasted his eyes on my breasts, arching my back to present myself to him. My nipples were raw, throbbing with anticipation. My eyes begged him to soothe them with his tongue.\n\n\"Please, please,\" I whispered imploringly.\n\nHe hesitated for a moment, as if unsure what to do. Then he dipped his head and swept his tongue over my right nipple.\n\nA deep guttural moan sounded from my chest.\n\nHe looked a little surprised, bewildered almost that he'd had that effect. I grasped his head in my hands and steered him back down, holding my breath as I awaited second contact.\n\nA single flick of his tongue across the tip - my body spasmed as sparks fizzed through me. I sighed with ecstasy.\n\nBoldly now he dipped his head again, taking my nipple fully into his mouth. First a soft swirling movement with his tongue, caressing me, soothing the throbbing tightness, stirring the warmth, stoking the heat within me; next - short little taps, sending sparks racing through me and finally pulling me with his lips. Beneath him I writhed and moaned, encouraging him on, directing him from side to side.\n\nI reached for his right hand and brought it down between my legs. His touch was electric. I felt his fingers part my lips, watched his eyes widen as he felt my wetness.\n\n\"I'm so horny for you,\" I gushed, \"so wet for you - that's for you, that's all for you!\"\n\nGently he began to stroke my lips, watching me closely as he found his rhythm. I bucked against him a little, urging him on with whimpers and cries.\n\n\"Faster, faster! So good, so good!\"\n\nAgain he dipped his head, servicing my breasts with his mouth, flicking his tongue across my nipples. The sound of my wetness reached our ears - I was primed and ready - it was gonna be soon - I was ready to blow - it was gonna be phenomenal.\n\n\"Aaaarrrrgggghhhh,\" I groaned. \"I'm gonna cum, I'm gonna cum.\"\n\nI ripped his head away and brought his lips up to meet mine. I thrust my tongue into his mouth, desperate to bind him, to draw his strength as he drove me to the edge.\n\n\"Gonnacum, gonnacum, gonnacum!\"\n\nThe dam burst and my body shook. The most colossal orgasm thundered through me - I screamed, shouted, begged him to hold me, pleaded for him never to let me go. I grabbed his wrist and clenched his hand between my legs - the poor boy - that must have hurt!\n\nI fought for breath.\n\nI opened my eyes. Nicol\u00e1s was watching me, gently stroking my hair, his face filled with love. I lifted my hand to brush his cheek.\n\n\"Wow!\" I whispered, \"How did you do that? I've never cum like that. No one's ever done that to me before!\" I was staggered by the depth of my climax. If sex with Nicol\u00e1s was gonna be like this, I really couldn't wait!\n\nHe smiled again and put his arms around me, holding me close as the fog of my orgasm began to lift. Now it was my turn!\n\nDelicately I planted little kisses on his collarbone and across the top of his chest. He wasn't entirely smooth - he had little downy hairs just starting to grow in the valley between his pecs. I hadn't noticed them before - in a few years he'd have a manly forest, but for now I had a perfect view of his gleaming abs and pecs.\n\nMy turn to push him over, to explore him as he'd explored me. I trailed down his body, drawing my fingertips across his chest, tracing the gentle swell of each muscle. He was magnificent! I looked on in awe, scarcely believing what my own senses were telling me. Here was my own Spanish Adonis!\n\nMy eyes slipped lower to his crowning glory - that mysterious part of him that my body craved more than anything else. This was the weapon that would slay my virginity, unashamedly saluting as I gazed down on him.\n\nI lowered my torso to his, trapping his steel beneath my belly and letting my nipples lightly brush over his pecs. That felt so nice - the firmness of his skin against my softness - I could only imagine what it felt like to him!\n\nI pushed up a little and reached between us, grasping his magnificent cock. I began to work him - watching his eyes as I moved my hand. He gave a little nod of encouragement, reaching up to hold the sides of my torso and stroke my sides with his thumbs.\n\nBut I wanted more. Touching was nice, but tasting was better! I wanted to feel his weight in my mouth and his length against my throat. I wanted to make him cum!\n\nLithely, I slid down his body, like a temptress preparing a spell. I kissed across his collar bone and over his pecs. My hand was beginning to knock against the underside of my breasts. I let go of him and let his length slide deliciously between them. That felt really good - I shivered with delight!\n\n\"Oh Lucy,\" gasped Nicol\u00e1s, \"so goooood.\"\n\nI looked up - there was my man, transfixed by the sight of his weapon nestling snuggly between my breasts. He was bewitched, captivated - lust painted all over his face, ardour burning his eyes - my enchantment was working!\n\n\"Yeah?\" I asked encouragingly.\n\nI took my free hand and pressed my bosom more tightly around him, then started to rock forward and back. The two of us watch in fascination as his cock slid between my breasts.\n\n\"That feels amazing,\" I whispered.\n\nNicol\u00e1s just nodded - simply spellbound.\n\nCautiously I slipped further down his body, coming face to face with his erect penis for the first time. I was fascinated - I'd seen a few porn videos, of course I had, but guy's dicks always seemed so different - some fat, some thin - some long, some short - some curved, others straight...\n\nNicol\u00e1s' cock was magnificent - there was no other way of describing it - a lance of thrusting masculinity, erupting from the jet-black curls at its base. It was long and thick, a rod of warm ivory reaching almost to his belly button. His foreskin was pulled tightly down and the head glowing with a deep red lustre. My pussy quivered in anticipation. I couldn't wait to take him inside!\n\n\"He's... he's beautiful!\" I stuttered.\n\n\"Do you like it?\" Nicol\u00e1s whispered, reaching down to tenderly stroke my cheek.\n\n\"Like it? He's fantastic - phenomenal!\" I cried.\n\nI bent down and placed a delicate kiss mid-way along his shaft. Nicol\u00e1s' eyes nearly popped out of his head.\n\n\"You smell so good!\" I marvelled.\n\nI spied his balls, half hidden in the dark forest of hair. I planted a kiss on each, inhaling the irresistible scent of man. I was giddy with excitement.\n\nI took his cock in my hand and lifted it delicately away from his stomach. So hard, so firm! He was lightly curved - so perfectly shaped to slip inside me. I could feel myself getting wetter still.\n\nThe tip of his head was glistening - a drop of fluid had leaked from the little hole. That must be his pre-cum! I'd never seen it before - only heard about it - a mythical nectar, but now I knew it was real. I reached out and gathered a drop in my fingertips, watching in fascination at the webby strands as I played. Gingerly I lifted my fingers to my mouth and licked. It was tangy, a little salty - not quite what I expected.\n\nCarefully I began to work him, watching, mesmerised as his big, dark head disappeared then re-emerged as I changed direction. It was like a child's peek-a-boo puppet - sliding in and out of its hiding place. The feel of his smooth skin gliding over the hard ridges of his core was like nothing I'd experienced before. All those sensations - warmth, coolness, softness, hardness all colliding in that perfect, magical, masculine part of him, which my body craved so passionately. An aftershock raced through me.\n\nI took some deep breaths - I was meant to be making him cum, not the other way round!\n\n\"Is this OK?\" I asked anxiously. \"Am I doing it right?\"\n\nNicol\u00e1s smiled back at me.\n\n\"Perfecta,\" he whispered.\n\nEncouraged, I slid my tongue across his tip.\n\nThere was a hiss of pleasure above me. Nicol\u00e1s' fingers gently brushed my hair clear of my face. He wanted to see! That turned me on even more - I needed to put on a show.\n\nAnother cautious flick of my tongue over his glans. Nicol\u00e1s' hands gripped my hair more tightly. My pussy was on fire!\n\nI wanted more, wanted to take him in my mouth, to taste him wholly, completely.\n\nI bent forwards again and licked his shaft from base to tip, then nodded forwards and slowly pushed him past my lips. Nicol\u00e1s let out a deep bass moan and closed his eyes, pressing his head back into the pillow. The bulbous head slid past my tongue, filling me, forcing my mouth wide open. Boldly, I took him further, swirling my tongue around him, tasting his essence - that salty sweetness mixed with metallic bitterness.\n\nI murmured my appreciation and his hips twitched, pushing his rod deeper, letting me feel the power of his meat against my throat!\n\nI looked up at him, pulling back and up a little, so I could watch him watching me. That was harder to do that I thought - his dick was springier than I was expecting. Maybe I was doing this wrong - the women in porn made it look so easy - mind you they made everything look easy.\n\nTenderly, Nicol\u00e1s stroked my cheek with his hand, his eyes were beginning to glaze over - I must be doing something right.",
        "I bobbed my head for a few more strokes. I wasn't sure how fast or how deep to take him. I knew you could hurt a guy, if you went in too hard too early.\n\n\"Beautiful, so beautiful,\" he murmured.\n\nI moved a little faster, making shallower strokes, managing to keep eye contact with Nicol\u00e1s - that was a little easier, the rhythm felt more natural.\n\nSuddenly he leaned forwards and pulled me upwards. He met my mouth with a kiss.\n\n\"W-w-what you do that for?\" I asked indignantly.\n\n\"I was about to...\" His voice petered out - he wasn't sure of the word.\n\n\"But I want you to orgasm,\" I protested. \"I want to see, I want to see your cum!\"\n\n\"You do?\"\n\nI nodded. \"You made me cum, now I'm gonna make you cum!\" I insisted.\n\n\"But it will make a mess, it will be sticky!\"\n\nA sticky mess was exactly what I wanted. His sweet cream would be delicious! No way was Nicol\u00e1s backing out because of some misplaced sense of chivalry.\n\n\"Please, I want to see,\" I said. \"I want you to do what you normally do. Don't be embarrassed. I want to watch - I want to see. Please let me see!\"\n\nHe hesitated, but I wasn't taking 'no' for an answer. I picked up his right hand and placed it on his cock.\n\n\"Show me!\" I commanded him.\n\nObediently, he began to stroke, slowly at first, then faster and faster. I watched on in fascination as his movements became a blur. His left hand went between his legs and he pressed up under his balls - that looked interesting, I'd have to try that.\n\nHis breathing was becoming more laboured. Little drops of sweat were gathering on his brow and his skin shone as never before. His muscles stood out as he strained. I licked my lips and lay my cheek down on his abs as he prepared to blow.\n\nWith a roar that rattled the windows, Nicol\u00e1s threw back his head and shot six blasts from his cock. The first three hit me full in the face, but the last three I caught in my mouth. Thick, rich and creamy - delicious! Eagerly I licked him clean, sucking every last drop as if my life depended on it, like an animal possessed. Another orgasm pounded through me as his red-hot tip slid down my throat and his fingers tightened in my hair.\n\nI turned and kissed him, our tongues writhing together as he tasted his seed in my mouth. Tenderly he wiped the rest of his cum from my nose and cheeks.\n\n\"Nicol\u00e1s,\" I sighed. \"You are phenomenal - just phenomenal.\"\n\n\"I love you Lucy,\" he whispered.\n\n\"I love you too,\" I replied contentedly.\n\n-\n\nWe sat on the rocks above the beach, watching the waters beneath us as they shimmered in the moonlight. I leaned against Nicol\u00e1s as he held me, sometimes kissing, sometimes caressing, listening to the sounds of the waves lapping at the shore. I hadn't been in love before, but I was sure this was it - there was a warm feeling surging within me, spreading to every part of my body, making me giddy with excitement.\n\nI wasn't anxious - there, with him, with his arm around me, I was effortlessly riding a wave of happiness, a radiant glow surging in my heart. We'd eaten by candlelight, outside on the terrace. I'd worn on my little black dress and some subtle makeup - just as I planned, so long ago. He'd looked so handsome, eyes sparkling as he sat opposite me - blue shirt, light chinos, tousled curly hair. We'd talked, we'd joked, we'd laughed together - now time was standing still.\n\nI wanted one thing, more than anything else. I'd had a taste, but I needed more. My body cried out for his, my core ached for him. I needed to tell him, but I wasn't sure how. I just needed to do it, make my intentions clear, be direct - not be shy about it.\n\nI looked up at him.\n\n\"Nicol\u00e1s,\" I said softly, \"I want to have sex with you - tonight.\"\n\nHis beautiful face lit up with a radiant smile of surprise.\n\n\"You do?\"\n\nI nodded. \"Yes, I really want this,\" I said. I paused, giving a few moments for my request to sink in. \"Do you? Do you want this too?\"\n\nHe nodded slowly, but without hesitation. \"Yes,\" he whispered. \"I really want this.\" But he frowned. \"But I do not have a...\" he searched for the English word, but did not know it, \"...a cond\u00f3n.\"\n\n\"It's OK,\" I answered. \"I have everything. It will be safe, I promise.\"\n\n\"You do?\"\n\nI nodded.\n\nI felt a slight tension within me - I was gripping his hand just a little tighter maybe - a little nervous now. There was something more to say - I wasn't sure when. But maybe better now than later.\n\n\"Nicol\u00e1s,\" I began again. \"I have not done this before. This is my first time. I am a virgin.\" I felt myself blush, just a little.\n\nAnother radiant smile lit up his face.\n\n\"You are? I am a virgen,\" he said. \"It is my first time also!\"\n\nIt felt such a relief to hear those words. We'd saved ourselves for each other - this was our destiny. We hugged each other tightly. We kissed. I melted in his arms as the stars looked down on us. This was so right!\n\nWe tiptoed past the sleeping Paco - he looked so peaceful, lying on his rug in the kitchen. I let Nicol\u00e1s lead me up the stairs, but as we stood in the hallway and he prepared to take me to his bedroom, I pulled him in the opposite direction into mine. This would be the place - everything was set, the lube and condoms hidden strategically under the pillow - this was how it would be.\n\nWe stood, holding each other's hands, looking deep into each other's eyes, silently pledging our love. I reached up to take hold of his cheeks and guided his head down. His lips met mine. We kissed lovingly, our tongues searching deep into each other's mouths, our hands running over each other's bodies.\n\nI broke the kiss and began to unwrap him, working my way down the buttons on the front of his dress shirt. I fumbled a little with the cuffs; my fingers were clumsy with nervousness. I pulled the tails from his chinos and skimmed my palms across his abs and pecs. Mmmm - he was delicious! I leaned forward to plant little butterfly kisses on cool skin, then reached up and eased the garment from his shoulders.\n\nMy - he was mighty fine! I'd seen him bare chested before, of course - several times. But somehow in the dim light of the room, he was twice the man I thought he'd been. Six feet of masculine perfection! His skin, deeply tanned, shone like the polished armour of a demigod and his glorious smile radiated strength and confidence. I gasped - I very nearly came. What had I done to deserve him?\n\nNow it was his turn. He moved behind me and his fingers found the fastening of my dress. Cautiously he slid it down; I prayed it wouldn't catch or snag. I'd always fantasised about this moment - having strong, gentle hands delicately unzip me - a moment of exquisite vulnerability as I revealed myself to him.\n\nNicol\u00e1s planted a kiss on my bare neck and instinctively stepped back to let me turn around. A moment passed between us, then he gently lifted the straps from my shoulders. The fabric slipped from me, falling in a shimmering pool at my feet.\n\n\"Tan hermosa!\" he whispered - he was in awe of me - his eyes sparkled as he beheld my beauty.\n\nI stood before him in my bra and panties - I'd taken so long to choose them - saved in secret for this moment, saved for the perfect man I had not yet known.\n\nHe held out his hand and I stepped forwards.\n\nI fell against his chest, frantically covering his cool skin with kisses, running my fingertips over the swell of his muscles. His hand went to the back of my head. Emboldened, I took one of his nipples gently between my teeth and pulled lightly.\n\nA strangled gasp sounded in his throat. \"It's good,\" he managed to moan.\n\nLike a whore, I ran my hand over the front of his chinos, feeling the meat trapped behind the fabric. He was hard, rock hard - surely that had to hurt! Nervously I fumbled with the brass button and the zip, freeing his magnificence. He turned and sat down on the side of the bed. I helped him pull his trousers from his legs, revealing his white boxer briefs. That proud bulge looked simply delicious! I could feel myself salivating - I wanted to taste him again.\n\nHe stood and pulled me gently to him, holding me close, letting me feel his hardness as it pressed against my belly. My arms slipped around his waist and down to his buttocks. I squeezed hard - so firm, such power - I pulled him tighter against me. Fuck - this was going to be so good!\n\nBoldly he swept me up and carried me round the side of the bed, effortlessly laying me down on the bed. I loved that - that wonderful feeling of weightlessness as he held me in his arms. I'd felt the thrill the first time he'd done it - even with the agony of a sprained ankle, but now, it was a million times better - and meant so much more.\n\nHungrily he crawled between my legs - an Iberian tiger stalking his prey, feasting his eyes on the prize beneath him. Lust was plastered across his face - I'd fired the beast within - now he was going to take me, to ravish me, to own me.\n\nAnd I wasn't afraid, wasn't anxious - not even nervous. This is what I wanted, what I'd dreamed of. I was expectant, excited, for sure. This was the guy who'd make me a woman; I was ready - more than I'd ever been.\n\nI folded his body into mine, pulling him deeper with my arms and legs, thrusting my sex up against his hardness. He ground against me, letting me feel the ridges of his cock through my panties. That felt so good!\n\nAgain he whispered his love for me and kissed me on the lips. He pushed up from me and reached between my breasts to unfasten my bra. I smiled - he'd spotted the clasp at the front, somehow that was very pleasing to me - I hadn't needed to show him! Delicately he spread the two halves of the garment, as if opening a treasure cabinet for the first time. Flames lit up in his eyes as he exposed my naked breasts.\n\n\"Tan bonita,\" he gasped. \"Tan maravillosa!\"\n\nI wasn't entirely sure what he was saying, but I think I guessed.\n\n\"Qu\u00e9 belleza!\"\n\nMy nipples throbbed as he caressed them gently with his tongue. The warmth of his mouth closed over each one in turn as he worshipped my body, driving a gasp from my lips at his touch. He placed soft kisses between my breasts, nuzzling their gentle swell, then lavished his attention again on my proud buds. Instinctively my hands went to the back of his head, encouraging, directing him.\n\n\"You are beautiful,\" he whispered again.\n\nNow he was moving downwards, honouring me, revering me - brushing his lips over my abs and across the top edge of my panties. His breath was warm and gentle, his fingers so soft and caring. A visceral moan resounded through my body as my aching core demanded his touch.\n\nI buried my hands again in his hair as he nuzzled me. His cool lips brushed against the inside of my thighs, tantalisingly close, but yet so far from my centre. I longed for him to slide my panties down my hips, to reveal my most delicate flower. I was so wet for him, dripping with sweet nectar. Surely, he could smell the perfume of my arousal!\n\nI moaned a little in disappointment as he kissed his way back up my body. Was he chickening out; didn't believe I was ready; couldn't bring himself to take me?\n\nHe held his face above mine and I looked up into those deep brown eyes. Then his touch - so light - making me tingle all the more as he stroked me through the fabric.\n\nA soft groan escaped my lips. I closed my eyes, pressing my head back into the pillow, flinging my arms out wide as I surrendered to him.\n\n\"You like that?\" he asked in his soft bass growl.\n\nI nodded, my eyes sightless. \"Yuh, yuh, yuh.\"\n\n\"You like that?\" he was teasing me now.\n\n\"Please Nicol\u00e1s, please!\" I moaned.\n\nI lifted my hips, imploring him to reveal my nakedness. With a final, tender kiss on the waistband, he hooked his fingers behind the elastic and eased my knickers over my hips.\n\nHe gasped.\n\n\"You're beautiful!\" he whispered in wonderment.\n\nHe leant forwards and placed a gentle kiss on the soft dark hair that covered my mons.\n\nI felt him take my slender hips in his powerful hands and a shiver ran through me as he blew across the moistened lips of my sex. He reached forwards to plant a kiss on my mons. My eyes closed as he parted my dripping labia, licking repeatedly upwards to my clitoris. I could hear him spreading my wetness as he lapped across the entrance to my channel. I moaned in frustration, trying to capture his tongue and suck it inside me. I gasped with pleasure.\n\nFaster and faster his tongue worked my sex, stoking the fire, fanning the flames inside. I buried my hands in his curls, bucking my hips against him as he worked his magic. The heat was rising inside me, simmering, bubbling, boiling - building the tension, raising the pressure, driving my whimpers, my cries, my moans as the surging inside me prepared to blow.\n\nI threw back my head and screamed, digging my fingers into his hair as my orgasm exploded over me. A thousand earthquakes thundered through me as he catapulted me to the stars. I flew on a wave of pleasure to lands unknown, never before seen. Blindly I clung to him, fighting to breathe.\n\nI came to.\n\nI was lying on my side - Nicol\u00e1s behind me. My back was pressed against his chest - his body curled around mine, his hardness pressed against my butt, his hands lovingly cradling my breasts. Such a wonderful feeling - so soft, so safe, so secure.\n\n\"I love you,\" he whispered.\n\nMy heart leapt and aftershock raced through me.\n\n\"I love you too,\" I murmured, turning my head to seek his lips.\n\nOur mouths met in a frenzy of passion. I was wild, driven by the taste of myself on his tongue. His hands roamed over my body and I pressed back against him, squeezing his cock against my bottom.\n\n\"Nicol\u00e1s, please,\" I panted. \"Take me! I want you now!\"\n\nHe jumped away from me, knelt up and slid his boxer briefs from his body. I reached under the pillow and pulled out a condom and a bottle of lube.\n\nHe came towards me on his knees, offering himself to me. He was rock hard!\n\nAnd so big!!\n\nDelicately I closed my fingers around his length, testing him, proving him, knowing for sure he was ready. A little drop of pre-cum had collected on his glans - that looked too tempting! I moved towards him and licked his head like an ice cream - a big fat lick. Delicious!\n\nI wanted to take him in my mouth, to feel his meat against the back of my throat, but my core was aching, screaming, demanding him. One more kiss, then I took the condom from the wrapper and began to roll it down his shaft. We'd practised this at school with a banana - it seemed so unreal to be finally doing it properly. Protection secured, I watched as he dribbled some lube into his hand and coated the sheath - all wet and shiny - correctly prepared, ready for me.\n\nHe set the bottle down and knelt between my legs. His cock bobbed in front of him as he got into position. I licked my lips. He looked enormous, but I didn't care - all I wanted was him inside me!\n\nMy hand reached between us as his tongue invaded my mouth. I grasped his penis lightly and began to work him slowly, feeling the ridges of the steel through the rubber.\n\nHe lowered his hips and I positioned him at my entrance.\n\nI looked up at him.\n\n\"Please,\" I whispered. \"I'm ready.\"\n\nHe kissed me again and carefully, tentatively began to push forwards.\n\nHis bulbous head slowly eased into my channel, stretching me wide. I winced. That hurt - a sharp, stinging, pinching pain. I closed my eyes and gritted my teeth - I was going to get through this - no matter what it took. I took some deep breaths. Above me, Nicol\u00e1s held still, very still - comforting me with the lightest kisses on my cheeks and forehead, tenderly stroking my hair.\n\nI opened my eyes. My man was looking down at me, a loving concern in his eyes. I lifted my head, seeking the softness of his lips.\n\n\"Are you OK?\" he asked.\n\nI nodded. \"I'm just getting used to you.\"\n\nHe smiled and kissed me again. I was so lucky to have such a caring boyfriend!\n\n\"Is it OK for you?\" I asked anxiously.\n\n\"Really nice,\" he whispered.\n\nI took a deep breath.\n\n\"Can you push a little more?\" I asked.\n\nMillimetre by millimetre he moved forwards, watching me closely, ready to stop in a heartbeat. It hurt, of course it hurt. My virginity was not giving up without a fight. But that was a battle I was already winning - pain would be conquered by love. All I wanted now was for Nicol\u00e1s to take me, to possess me, to own me. I lifted my legs a little more, calling him deeper inside.\n\nI felt him coming to rest against my mons. He was all the way inside. The walls of my channel gripped him tightly, probing his meat, testing his steel - so big, so hard! He felt so good - I'd done it! Euphoria erupted inside me - a wonderful feeling of completeness, a joining of our bodies and souls that banished the discomfort from my mind.\n\nWe kissed for a long time - for how long, I know not, but Nicol\u00e1s would have held me for eternity, safe and secure in his embrace. I looked up at his face, cradled in my hands - his eyes sparkled with love for me. I nodded, pleading with him to begin, then, as I felt the slow withdraw as his hips eased away, I pressed my forehead against his, curving my body upwards and inwards, as if to prevent him escaping from me.\n\nAnother kiss, this time on my forehead. He looked down at me, searching my eyes again for signs of pain - but there were none.\n\n\"Please!\" I begged, sliding my hands down his back to his fabulous bottom, trying to pull him back into me.\n\n\"You are ready?\" he asked.\n\nI nodded. \"Please Nicol\u00e1s, please,\" I implored him again.\n\nSlowly, very slowly he began to press, pushing forward again, invading my softness once more. My back arched, calling him deeper as I stretched around him. I threw back my head, gasping in pleasure, my eyes sightless as my fingers clawed at his skin.\n\nSuddenly he was all the way inside me, sheathed to the hilt, splitting me open as the two of us united. My muscles gripped every inch, binding him to me, enslaving his flesh to my service. Nothing could persuade me to let him go.\n\nHe kissed me tenderly on the lips, but as he started to move away, I grabbed the back of his head and held him, pushing my tongue hungrily into his mouth. Surprised, he hesitated for split second, then responded vigorously, gripping my face between his hands, as we lost ourselves in a whirlpool of passion.\n\nWithdrawing again, pulling from me, lifting his hips as he slid away. My core cried out in anguish, clutching in vain, desperate to hold him inside, gasping to receive him again. A third push, a little smoother, a little quicker, all the way in once more.\n\n\"Yeah!!\" I cried, delirious with pleasure.\n\nKisses, frantic kisses, endless kisses - on my cheeks, my forehead, my lips; Nicol\u00e1s' tenderness in that most masculine of acts. My mouth searched blindly, my tongue thrusting against his as I tightly gripped the back of his head. Moans and whimpers emanated from my chest, words impossible, unfit to carry my emotions.\n\nMore thrusts - each time I arched my back as he filled me, a warm pleasure flooding through me.\n\n\"So good,\" I managed to moan.\n\n\"Yes?\" he asked softly, \"you like that?\"\n\nI nodded.\n\nHe was slow, yet powerful, stretching me open as I surrendered to him. Above me the sinews of his body glistened lightly with perspiration, his muscles standing out strongly beneath his skin. His scent was raw, intoxicating - a testosterone-charged heat that drove me wilder still.\n\nHe pushed up away from me a little, straightening out his arms, so the two of us could crane our necks to see where we were joined. Entranced I watched as his condom-covered cock slid from me, slick with my juices, then buried itself again. A hypnotic, mesmerising rhythm, lifting my soul from the bed where I lay, driving me to places never before seen. I flung my head backwards, surrendering myself to pleasure, pain banished to the farthest corners of the earth as fire in my core burned ever brighter.",
        "There was a change in Nicol\u00e1s too, as he responded to my moans. He'd been tentative, hesitant in those first few strokes, but now he was settling, understanding what I needed, letting his own visceral power take control. Beneath him I writhed with pleasure - he was dominant, in charge and in control - his masculinity fully unsheathed. He began to increase his pace, driven onwards by the same urgent, primeval desire that commanded me. Harder. Faster. Deeper.\n\n\"Yuss,\" I hissed each time he hammered into me, squealing and moaning in equal measure. \"That feels so-so-so good.\"\n\nHe brought his chest down again, crushing my nipples against his torso, binding me ever more tightly to him. The side of his head pressed against mine and I buried my face against his shoulder.\n\n\"Go Nicol\u00e1s, go!\" I urged, \"go-go-go-go-go!\"\n\n\"Grrrrr-aaaaaggghhhhh!\" Nicol\u00e1s cried, thrusting forward one final time. He collapsed against me as my pussy contacted around him.\n\n\"Aaaaarrrrrhhhhhhh!\" I screamed, pulling him ever more tightly into me as my climax exploded within me, catapulting me to unknown worlds.\n\n-\n\nI rested my head against the inside of the plane, watching as the fields and houses grew ever smaller beneath us. England lay ahead of me - my friends, my family, my place at university. But everything I'd worked for and had held so dear, now seemed so inconsequential - almost irrelevant. My heart was calling me. My heart had stayed in Spain.\n\nI turned on my phone and unlocked the screen. A picture of Nicol\u00e1s shone out at me. We'd fallen in love, deeply in love - spent as much time together as we possibly could. Now I could hardly bear to go. I'd stayed with him for over a week after the incident. The police had wanted to talk more - they wouldn't let me depart. Not that I wanted to leave.\n\nMy father had panicked when I'd phoned. He and Mum had flown straight out to hire an army of lawyers to \"sort me out\" and \"bring me home\". The fact that I'd found myself a Spanish boyfriend made everything ten times worse.\n\nMeeting Nicol\u00e1s had changed their minds - I knew it would - even Dad was impressed by him. And as they'd learnt more about that day on Jordan's boat, they began to realise I wasn't a little girl anymore. They went home a few days later, happy in the knowledge that they'd raised a strong young woman, more than capable of looking out for herself.\n\nI flicked through the photos of the holiday. Ellie had been so confident, so self-assured when she arrived. She'd been discharged from hospital after one night, but the cut to her forehead would be slower to heal. Her father had taken her home a few days later - a little older, a little wiser.\n\nAnd so, the plane headed north, leaving the coast behind, charting a course towards England. Nicol\u00e1s was coming to visit soon. We'd checked online - there were flights from Barcelona to Newcastle. The girls in Durham would be so jealous!\n\nI flicked to the final photo. There was Paco, ears pricked, eyes shining - alert and ready! I owed him so much - we owed him so much. I clutched the phone to my chest.\n\n\"Thank you,\" I whispered. \"Thank you.\"\n\nTHE END\n\n*****\n\nAuthor's note\n\nThank you for reading this story, I hope you enjoyed it! Please do vote and leave feedback if you would like to. What did you think of the characters, the plot and the pacing? I'd be particularly interested to hear your opinions if you didn't feel you were able to give me five stars - what could I have done better?\n\nDid you feel that Lucy and Nicol\u00e1s were a credible couple? Did Jordan work as the villain? What did you think of the escape/rescue scene - did this fit in, or did it feel out of place? Did you feel that Lucy's decision to give up on Nicol\u00e1s half-way through the story, and to score a 'quick win' with Dave was credible? Please let me know your thoughts.\n\nA confession - I don't speak Spanish! So, I'd be grateful for any suggestions to improve Nicol\u00e1s' dialogue, especially on the last two pages.\n\nThank you for your constructive criticism. Please help me improve my work so that I can write better stories for you!\n\nSpindleTop"
    ],
    "authorname": "SpindleTop",
    "tags": [
        "beach",
        "first love",
        "high school",
        "holiday",
        "romance",
        "sea",
        "spain",
        "summer",
        "vacation"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/meaningful-meaningless-sex"
}