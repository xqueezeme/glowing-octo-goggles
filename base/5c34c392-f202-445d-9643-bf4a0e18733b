{
    "title": "Macallan Promises",
    "pages": [
        "Author's Note: Call me nutters for trying, but this is my crack at a modern day erotic/romantic fairytale. Its content cuts across a few categories here on Lit. but I think it's best in fantasy/sci-fi based on the overall theme. This story is slow and romantic-y lesbian and, more important to some (love it or hate it), it's entirely sister-sister incest.\n\nThere's sex aplenty when it gets there, but if your particular needs are more immediate, I recommend you address them and swing on back here afterwards. This is no quick-fix affair.\n\nRead on and, as always, let me know what you think if and when you reach the end.\n\nNo, I didn't forget: everyone's eighteen or older. Promise.\n\nMacallan Promises: Young Molly can control time but not the desire for her own sister\n\n*~*~*~*~*~*~*~*~*~*~ *~*~*~*~*~*~*~*~*~*~*~\n\nFor what we receive, we swear to you, Brighde. We swear together, as mothers, daughters, sisters, aunts, nieces, wives and widows, to protect the lands and the people of Ireland against her foes. Where shelter is sought, we will offer it. Where aid is sought, we will deliver it. Where vengeance is sought, we will wreak it. For as long as our chests take breath, we swear. We swear together.\n\n-- The Maids and Matrons of Clan Macallan, c. 720 A.D. (translation of first verse, others lost)\n\n~*~*~Part 01 -- 15 years ago~*~*~\n\nIt was going to be a horrendous crash, the kind that would make the evening news anchors pause after they reported the story out of polite respect for the victims' families. A yellow bus full of elementary school children was headed up one way of the winding mountain road in northern Maine and a propane tanker was coming down in the other direction, swerving wildly as the driver struggled to keep his truck under control on the ice-slicked asphalt.\n\nAnd it was all happening in dreadful slow motion.\n\nWe were safe though. Or should have been.\n\nMy mom, my younger sister Tabitha, and I were driving along on a separate road above it all with a clear view of what was about to happen below, well out of harm's way. That all changed when Mom saw what I'd already seen.\n\nShe mashed the brakes of our trusty old Datsun and she turned to look at me. Her eyes blazed greener than the Irish hills on a midsummer's day. She'd never looked more beautiful.\n\nI knew what she wanted to do. \"No Mommy! It's too far!\" I gasped.\n\nShe nodded. She knew too. \"I love you, Molly. Promise you'll take good care of Tabitha.\"\n\nAs the first hot tears streaked down my face because I understood what was about to happen, I swore the most powerful oath I knew. Gram had taught it to me the opening just the week before. I'd practiced well and the old Gaelic flew true from even my young lips.\n\n\"Geallaim \u00f3m' chro\u00ed istigh, le gach buille, gach tr\u00e1, gach sruth, le gach a bhfuil agus a bheidh ionam,\" I swallowed, feeling the magic gathering and tightening in my chest, \"go dtabharfaidh m\u00e9 aire do Tabby.\"\n\nIt was an old promise, a mighty promise, and Mom's eyes were wide even before I finished. She smiled proudly and touched me on my wet cheek. Then she leapt from the car without another look back.\n\nTo save the children on the bus. Other people's children. And yet leave her own.\n\nHonestly, it's usually some damn children that do us in.\n\nMom did what she had to do, what she had always forbid me to do, and when it was over, everyone on the road below was a little confused but very safe and alive. Except Mom.\n\nI was ten years old at the time. I could barely reach the Datsun's pedals but I drove my six year old sister Tabitha home. Along the way I tried to explain to her that even our amazing Mom couldn't come back from what had happened. And when we got home, I had to tell Dad that he was a widow.\n\nSo, basically, it sucks being a Macallan girl. But then it always has. Well, for the last thirteen centuries anyway.\n\n~*~*~ Part 02 -- Now~*~*~\n\nThe pledge I gave my mother in the car fifteen years ago is called a heart promise. Only one can be given, truly given, in a Macallan's lifetime. It's a powerful thing, even in our strange family. That's why Mom was so surprised when I vowed it.\n\nA Macallan can't undo a heart promise, or break it. Even if we want to. It binds. It guides. It steers. I'd made my promise and I would be its servant for as long as I lived. So my vow that day in the car was what my Mother had asked for and more.\n\nIn English, my promise that day meant roughly, \"I promise with my whole heart, with each beat, each ebb, each flow, with all that I am and will be, I will watch over Tabby.\"\n\nIt was a big pledge, especially for a ten-year old, but I never regretted giving my heart promise away to my little sister. Not once.\n\nI was already mostly awake one night and reliving the day in the car when I felt a familiar weight press down into the bed behind me. I had known who it was as soon as she came in the front door twenty minutes ago. My sister has always walked on her heels. For a petite girl, she sounds a little like a water buffalo.\n\n\"Hi Tabby,\" I muttered into my pillow and peeked at my alarm clock through one eye. It was a little after 4 am. She'd used her key to slip into my one-bedroom apartment in the wee hours of the morning again. Not a big deal, she knew she was welcome to crash whenever she wanted.\n\n\"Dammit,\" my sister's giggle gave her away completely, \"there's just no sneaking up on you is there? What if I were a rapist? Would you have waited here quietly in bed to get ravaged?\"\n\n\"A rapist wouldn't have detoured to use my shower first, genius.\"\n\n\"Hehe, I could have been a very hygiene-conscious rapist.\"\n\nI smiled in the dark. My sister had always been funny. \"I suspect they're pretty rare.\"\n\nI felt her hand searching across the bed and come to rest on my hip. She scooted herself towards me.\n\n\"Couldn't I have been your boyfriend sneaking in for some midnight luvin'?\"\n\nIt had been several months since my baby sister and I had talked last and she was out of date on my personal life.\n\n\"Don't have a boyfriend anymore,\" I grumbled\n\n\"Ick. Girlfriend?\" Her second question sounded almost hopeful as her hips curled behind me until we were spooned. Her thighs were bare and her cool skin made me shiver when they met the backs of my naked legs.\n\n\"Nope, don't have a girlfriend either. That's your thing not mine, kiddo.\"\n\n\"You could have one if you wanted. A girlfriend, I mean. You're smart and cute. I bet you could find a hot, talented chickie without too much trouble. One that might get you seriously...\"\n\n\"Tabitha,\" I cut her off. \"I'm okay, sis. Really.\" It was too late at night for her old argument. My bisexual sibling was pretty sure that regular old heterosexual women were either ill-informed or narrow-minded. As far as she was concerned, I was both.\n\nI felt more of her cool, bare skin press into parts of my back that weren't covered by my comfy little chemise and I sucked in a breath. \"Are you... Tabby, are you naked, honey?\"\n\n\"Nope.\" She snuggled into me tighter and wrapped an arm around my waist.\n\n\"What do you have on?\"\n\n\"Panties,\" she admitted.\n\n\"Yeah, that's close enough to naked to qualify.\"\n\nTabby giggled brightly. \"Don't be such a prude, sis. My stuff's all dirty and I didn't want to rummage through your pajama drawer without asking. Besides, you know this is way warmer.\"\n\nI let out a long slow breath, not wanting to fight. I wanted to sleep. \"Fine... just maybe quit wriggling so much against me, Tabs?\"\n\n\"Sorry, can't help it.\" She giggled again then forced herself to settle. \"It's so nice and toasty in here with you. Don't you miss snuggling like when we were little?\"\n\n\"Yeah,\" I confessed. Those were less complicated days.\n\nFor about ten years, from when she was three until she was thirteen, Tabitha had snuck into my bed in the early morning to curl into me. She used to press her ear to my chest to listen to it beat. She'd match her breathing to mine too. Eventually, it would lull her back to sleep. Mom and Dad were grateful for the peace and quiet in the morning. Of course, her little warm body next to mine usually put me to sleep too.\n\nTabitha would have kept up those morning visits if I hadn't put a stop to them. Why? I had my reasons.\n\nThat morning, spooned into me from behind, Tabitha fell asleep long before I managed to. I lay in my own bed for about an hour listening to her breathing and feeling her heartbeat thud against my back. Her breasts were mashed into me from behind and her warm breath tickled my neck. It even smelled nice, like cinnamon. Tabby was a TicTac junky and had been for years. She said she always wanted to be \"smooch-ready\" if she met someone worth kissing.\n\nDammit. I'd been doing fine right up until I thought about her and kissing. That tipped me right over and my body responded. I pressed my lips together tightly, powerless to stop the warmth unfolding in a very inappropriate place.\n\nAs Tabitha began snoring, I fought my horrible arousal. I also fought the urge to sneak a hand down between my legs to relieve it. As sick as it may sound, I'd done it before when she held me like this in bed. My baby sister is an insanely heavy sleeper.\n\nBut this time I just pressed my lips together more tightly, denying myself the pleasure and the release of masturbation. It was a good punishment.\n\nYou see, I'd missed Tabitha more than I could bring myself to tell her. I'd missed her terribly. I don't just love my sister. I'm in love with her. It's been like this for years now. And I hate myself for it.\n\nI won't claim the Irish invented self-loathing, but I think we can all agree that, as a people, we've perfected it nicely.\n\n~*~*~Part 03~*~*~\n\nGr\u00e1 r\u00fanda. In Gaelic it means \"secret love.\"\n\nThat's what Gram would have called this awful thing I struggle with whenever I'm near Tabitha. I had fought it, denied it, and raged over it. Even had myself a few good, long \"why me God?\" cries over it. Lately, I'd focused on accepting that I loved my own sister in every way: physically, emotionally, mentally, psychically, and spiritually.\n\nAll of those important -ally's.\n\nIt pretty much sucks. I mean, seriously, how much more taboo does it get than homosexual sibling incest? You know, without involving farm animals. I wouldn't wish my life on anyone.\n\nWhen I woke later that morning, my chemise had ridden up in the back. As I'd feared, with Tabitha snuggled so perfectly into me and with so much of her bare flesh against mine, I'd been having the most ridiculously graphic sex dreams.\n\nThere'd been hours of kissing and licking and stroking and sucking. I'd never even seen a strap-on dildo outside of a porno film, so why on god's green earth did Tabitha make me dream of using one with her? Giving and taking? My head is a sick place and getting sicker.\n\nI sighed and rolled over carefully to face Tabby, my only sister, my best friend, my heart's true and tortured desire. She was especially pretty like this, sleeping, and lit by the soft morning light creeping through my window.\n\nI'm not in love with Tabitha because of the way she looks. Still, it doesn't hurt that she's gorgeous from head to toe. My little sister is prettier than me in every way; I've always thought so and the boys growing up had more or less shared my opinion. They'd been stopping to look at Tabby even before she hit puberty. Her big, bright green eyes, delicate nose, perfectly straight, white smile and gorgeous blonde hair guaranteed it.\n\nActually, Tabby's hair had always teetered between blonde and light brown depending on the season. She was off-schedule with her light hair now, it was mid-January, but she'd spent the last two months in the warm Nevada deserts. As proof, she even sported a few bright platinum highlights that contrasted nicely with her tan. It wasn't just her color that was pretty though, Tabby's hair was shiny, incredibly heavy and thick, and silky, silky smooth. She could make a living doing salon commercials.\n\nMe? I inherited Gram's wild auburn curls and ivory skin. The only commercials I'd ever be able to land would be ones for Irish Spring soap. Trouble is, I can't whistle worth shit.\n\nBut Tabby... oh Tabby. When puberty hit her, and it slammed into her like a freight train, what men did around my sister went from funny to ridiculous. Who could blame them? Almost overnight, her legs lengthened into sleek, mini-skirt quality limbs. By age thirteen, she was complaining about her large, round breasts, already twice the size of mine at seventeen, because they made gymnastics harder. She shut up about them at fifteen when she figured out they were chest-mounted man magnets.\n\nDon't get the wrong idea, Tabitha was more than just pretty. She was funny and tender and sweet and thoughtful and incredibly, absurdly sensitive. She was also open and honest and free and brave and she'd always been just, well, good in a way little sisters usually aren't.\n\nWhen she was eleven, Tabby rescued a squirrel with a broken leg and hand-fed the little thing until he recovered. But even when he was all patched up, he didn't want to leave. So \"Sqeakers\" scampered around our house and slept in her dresser for the next six years. He followed Tabby everywhere. And when he finally died at the ripe old squirrel age of eight, Tabby cried for an entire month straight. I missed the little guy too. He was a small, furry, breathing example, living proof, of how Tabby is so many things I'm not. So many things I'll never be. She touches people and everyone loves her. Even bushy-tailed rats.\n\nI think Squeakers may have left his mark on Tabitha too. My sister had become a talented nature photographer. One of her pics even made the cover of National Geographic last year. At just twenty-two, apparently she's the youngest photographer to manage it. Yep, Tabby is talented too.\n\nMost of me is proud of my kid sister. A tiny part is jealous. That leaves a couple of parts left over to lust after her. Yeah, they're my naughty parts.\n\nI sighed and watched Tabby sleep, enjoying the chance to just stare at her freely without concocting some lame excuse. Her mouth hung open a little and it made me smile. I used to tease her about it when we were growing up, calling her \"mouth breather\" so cruelly that I'd actually made her cry a few times before I finally stopped. There's no cruelty like sibling cruelty.\n\nSleep-tousled Tabby has always been my favorite. It was all I could do not to kiss her right then. It would have been so easy, just press my lips to hers, flick my tongue between them, gently trace along her mouth the way I'd wanted to for longer than I can remember.\n\nOh Tabs, my little gr\u00e1 r\u00fanda.\n\nI had to hold my breath when her arm, the one that had been wrapped around my waist while we slept and later slid down around my hips when I turned over, tightened around me. In her sleep, her hand unwittingly cupped my butt gently and she used it to pull herself closer to me, face-to-face now. Her much larger breasts pressed into mine and her nose blindly found the crook of my neck. Her warm, moist breath puffed into my throat. She wriggled a little, then settled again.\n\nJesus, she was killing me today.\n\nStill, I reached up behind her and cupped the back of her head, scratching lightly beneath the hair at the top of her neck. She responded with a few lazy sighs before her breathing became even and regular with deep sleep again.\n\nIt may sound crazy, but generally speaking, I'm not a lesbian. By that, I mean I'm not really attracted to other women. I'd actually checked, hoping in some perverse way that I was just into girls and that Tabby merely happened to be the most attractive girl near me. Once, I even lured Tabitha's prettiest cheerleader galpal into my bedroom as a last, desperate test.\n\nHer name was Kendra and she was openly gay and beautiful in a dark-haired, smoky-eyed, olive-skinned kind of way. She'd been giving me come-hither looks for years, so when I shut my bedroom door behind her and asked if she'd help me figure something out, I barely had time to ask her to kiss me before she did it.\n\nKendra's lips felt wonderful, and she smelled nice, a little like apples. Plus, I very much liked the way she sighed dreamily halfway through our smooch. But it didn't move me. Not the way I'd hoped. Kendra was gorgeous, not to mention an amazing kisser, but my body didn't respond to her. Not like it responded to my own sister.\n\n\"Nothing?\" Kendra finally asked, opening her deep, dark bedroom eyes and looking up at me hopefully.\n\nI smiled lamely, \"Nope, sorry.\"\n\n\"Don't be,\" she smiled too and squeezed my arm, \"you're a good smoocher. It was fun for me. If you want to make this some kind of annual lesbo check-up, let me know? I won't tell Tabby.\" One corner of her mouth curled up for a naughty smile. \"She'd just be jealous anyway.\" Before I could ask Kendra to explain, she slipped back out of my bedroom.\n\nIt became plain what Kendra meant later because, on top of everything else, it turned out that Tabby liked girls and that she and Kendra weren't just studying in her bedroom. Marvelous. One more thing for me to picture -- the two of them rolling around, naked, hot and sweaty.\n\nTabby's renewed stirring brought me back to the present.\n\n\"Mmmm, tell me Molly?\" my cuddling sister sleepily whispered into my neck.\n\n\"Tell you what?\"\n\n\"You know... the story... the long version.\"\n\nAgain? \"That's a bedtime story. For when you go to bed. Not when you wake up. And aren't we getting a little old for this?\" I chided.\n\n\"Never too old for faerie tales,\" she huffed, sounding a little less than her actual age. \"Please?\"\n\n\"Fine,\" I caved and took a deep breath for the story Tabby never got tired of.\n\n\"Long, long ago in a little village on the windswept coast of northern Ireland, there lived a heart-achingly beautiful young woman named Hannah Macallan. In fact, she was the most beautiful girl that anyone had seen in a thousand years. Her skin was as fair and as flawless as moonlight on a still lake. Her long, blood red hair gleamed like rubies. Her eyes were the deep green of the lushest hills and, speaking of lush, her body was a man's fantasy made real -- tiny in those places men like, round and full in the other places men like too.\"\n\nTabby snickered, \"I think you added that last part. But keep going,\" she added hastily when I gave her a short look.\n\n\"But human men aren't the only ones with fantasies. Faerie men have them too and Hannah's beauty was enough to touch even a fae heart. As it happened, when she was born, Hannah's first cry attracted the great faerie prince Bertolas who slipped invisible into the midwife's hut to see her. For good or ill, he fell in love with Hannah right then.\n\nFor Bertolas, Hannah's scant nineteen years passed like snapped fingers and yet still he barely managed to wait it. On her birthday, he went to her and he wooed her, singing songs older than mortal ears and offering her tokens of his admiration. He was, like all his kind, beautiful too. They soon fell in love, deeply in love.\n\nBut before she would marry him, Hannah begged the fairy prince to promise that he would be faithful to her until she died. She could not bear to share him. It was an almost impossible thing to ask of a faerie. They live and love freely by nature, seeking beauty for beauty's sake. And yet for Hannah, the prince devised a way to change even this. He gave Hannah her promise, and better. He forged a mighty oath in old faespeak that bound his whole heart like cold iron.\n\nHannah and the fairy prince were wed soon after. His promise held and he loved her and was faithful to her, not only until she died, but forever after. Bertolas lives still and honors her in his heart. That was how strong their love was, how strong his oath was.",
        "Hannah bore her beloved husband beautiful daughters, half-fae, and many were touched by magic. Stronger still than his own fae blood, the prince's oath was in them too. Hannah's daughters were from then on known as oath-takers, promise-makers. A Macallan would never break her pledge. It was like they couldn't. A Macallan woman's word was very nearly her life.\n\nFor fae kind, a human that could be trusted to her word was a special thing. It meant bargains could be struck, secrets shared, pacts made. Over generations, with what they learned and with good hearts, the Macallan family did great deeds for mortals and fae alike. And in time, even Brighde, Great Mother of all the Isles, came to the Macallans because, every once in awhile, even a goddess has a favor to ask. It took all the clan to grant it, and still only the firstborns could carry Brighde's immense boon - seasamh in aghaidh ama.\"\n\n\"Standing against time,\" my sister whispered.\n\n\"Yes. And with it, the Macallans defended all the Isles against the dangers Brighde sensed coming. And Eire knew peace. The End.\" I scratched my sister's neck. \"Happy?\"\n\n\"Your version is way better than Gram's.\"\n\n\"You mean you didn't like, 'Somebody fucked a faerie and now we're all fucked too, so suck it up and quit crying'?'\"\n\nWe both laughed hard enough that we were wiping our eyes afterwards.\n\n\"Good old Gram,\" Tabby sighed finally.\n\n\"Yeah. Hey, how about some coffee?\" I changed the subject quickly.\n\nNot because Gram's death still hurt. In fact, she'd gone out like I wanted to someday. Seriously, you piss off a grumpy old Irish woman at your own peril. Trying to hijack her 747 and crash it into a shiny white federal building full of innocent people had made her mad.\n\nNo, the real reason I was eager to get out of bed right then was that Tabby's last several fidgets had rubbed her nipples against mine again, sending tingles up and down my spine that felt so good they nearly hurt.\n\n\"Wait... awww... Molly...\" Tabitha whined, patting the warm spot on the bed I'd fled too quickly for her liking.\n\nBut I was already wrapped in my robe and toeing into my slippers. \"How about French toast for breakfast?\"\n\n\"Oooh, with...\"\n\n\"...cinnamon.\" I finished for her. \"Trust me, I know how you like it, sis.\" I leaned down to peck her forehead and tugged up the blanket that was drifting dangerously down her tempting chest as she sat up. Her smooth, lightly tanned shoulders were trouble enough. \"Get up when you're ready and come let me mother you a little. Just put on some more clothes, okay?\"\n\n\"Heh, for French toast I'd put on a ball gown.\" She grinned as I left and flopped back down on her back.\n\nI padded into the kitchen and made the batter for the French toast. I let half-a-dozen thick bread slices steep then made coffee and started slicing some strawberries. It had probably been awhile since my vagabond sister ate anything healthy. When that was done, I heated a pan and started cooking.\n\n\"Tabby?\" I called several minutes later when I was halfway through.\n\nNo answer. Meh, she'd probably fallen back to sleep. I finished cooking.\n\n\"Tabby?\"\n\nStill no answer.\n\nI nuked a bottle of maple syrup to take the chill of from the fridge then filled my coffee cup and drank my way halfway through it. I picked up a fork and put it back down.\n\nFinally, I'd lost my patience, \"Dammit Tabitha, breakfast is getting cold!\"\n\nStill nothing. It wasn't that big of an apartment, she had to have heard me. Was she okay?\n\n\"Fine,\" I sighed and closed my eyes tight, gripped the smooth edge of my breakfast table, and kicked off my slippers.\n\nDon't ask me why, but it's easier when my feet are bare, easier still when they touch water. In the olden days, many a Viking ship had turned right around and paddled for home after they learned what a line of Macallan women waiting for them in the surf meant. The doors to Valhalla wouldn't open for a Norseman who died between heartbeats without a fight. So I understand the symbolism of the water, but not the mechanics.\n\nIt's kind of embarrassing to admit, but I've just never been that good with magic and Gram didn't have enough patience to drill it into my thick head. The word for \"moron\" in Gaelic is \u00f3inseach and she yelled it at me a lot.\n\nUnderstanding wasn't required for what I was going to do next, it was just a matter of being an eldest Macallan daughter. And I was one. Lucky me.\n\nSitting in my modern little American kitchen on the hills of San Francisco, I listened for a funny rubbing sound, a very, very old one that I've heard running behind my ears since the day I was born. Turns out that it's just the small, constant friction of the world going by. Mom and Gram had to explain to me when I was little that we were the only ones that could hear it.\n\nLuckily, I didn't have to wait long. I heard what I was hoping for almost right away; a little knot on what I had always pictured as a giant silk rope that's constantly sliding by. Flaws in the rope, like the one coming, made a slightly louder rubbing sound as they draw nearer.\n\nWhen it got came enough, I gripped the little knot, in my head, not with my hands, and pulled hard on a few looser threads that I could feel, just enough of them for the space of my apartment. I had only a little piece of that giant rope, but when I gripped the threads tightly it was like a sudden tug-of-war with a championship sumo wrestler.\n\nFor a few moments it was me against my little corner of the world. My stomach rolled and my head pounded as I heaved mentally. Finally the threads came free. They stayed with me, unwinding reluctantly from the silk rope as it continued its constant sliding.\n\nI opened my eyes and everything, everything, was frozen.\n\nI can stop time. Mom could too. And Gram. And her mom. And hers. Hers too. And so on, back to a little village on the windswept coast of northern Ireland where fae things once dwelled. And part-fae things like Macallans.\n\nNifty huh? Yeah, right up until it kills you. It's how my mother died. It's how we usually die. There are strict rules. Break the big one -- no fucking with the whole rope of time -- and you pay with your life. That was part of the promise our family made to Brighde, Great Mother of Ireland, eons ago in exchange for the power of seasamh in aghaidh ama - standing against time. And in the Macallan family, promises are a serious thing.\n\nI shook my head to clear it, let my stomach settle, and trotted off to find my only sibling to see if she'd managed to hurt herself somehow or if she was just being a brat and ignoring me. I'd probably be ticked either way. And because I know Tabby a little too well, I brought the bottle of warmed maple syrup with me on my search. Odds were good that I'd get to use it.\n\nI pushed open my own bedroom door and found my kid sister still tucked cozily in my bed.\n\nDamned brat. Like everything else, she was motionless. Her eyes were squeezed shut but it didn't matter, she couldn't see me either way.\n\nThis may sound crazy, but, exactly as I expected, she was masturbating. Yep, masturbating.\n\nBoth of Tabby's arms were under the sheet that was tented between her spread knees. Her face had that unique, mixed look of concentration and bliss.\n\n\"Jesus, Tabby,\" I muttered. I'd been catching her like this since... well... for a very long time. My kid sister had a ridiculous sexual appetite and wasn't above a little self-served snack now and then to tie her over until her next nookie session.\n\nUsually, I would slip back out of the room and leave Tabby to her privacy, but sometimes, like today, I'd treat myself a little and mess with her. I could only go so far though because there were promises about that too. Strong promises. Blood promises.\n\nIn a few steps, I was standing next to my young sister lying comfortably in my bed. Her small lips were parted, nostrils flared, cheeks flushed a light pink with her excitement.\n\n\"What is it with you and touching yourself in my bed, girlie?\" I wondered out loud as I leaned closer to her. She couldn't hear me either.\n\nShe'd be nude under the blankets. My fingers toyed anxiously with one corner of them. I hadn't seen Tabitha naked in a couple of years.\n\nIn high school, with three varsity sports plus gymnastics on the weekends, Tabby's body had been insane, almost impossible. The same girl isn't supposed to have six pack abs and perfectly round, C-cup breasts, but Tabitha did. She'd looked like some sort of cartoon supergirl. The high school boys were practically beating each other to death just for the privilege of taking her to the movies.\n\nHer body had softened a little bit since high school. She'd given up sports in college to focus on her studies, majoring in photojournalism. Her body changed, becoming less chiseled and more natural, more feminine and, to my eyes when I got my last peek back then, even more attractive.\n\nWe'd shared a bathroom one weekend at the beach during her senior college year a couple of years ago. She was so casual about her naked body while pulling her bathing suits on and off, wandering around naked. It had been hard not to stare.\n\nI don't look bad in a bikini. I'm long and lean with narrow hips, a respectable tush from running, and small, high-set breasts, but I'm definitely not shaped like Tabby's fit and luscious hourglass. Not many women are.\n\nI wondered what she looked like now and fiddled with the edge of the sheet a bit. I only had to lift it to see, but the sheet felt heavy. It was weighed down by your conscience.\n\n\"Oh Tabby, we're getting a little old for these games, kiddo.\" I said it to myself more than her.\n\n\"These games\" were complicated because the first promise Mom and Gram bound me to was an oath when using the family gift: never to do ill to family. We'd even shared blood in the oath and that fed more magic into it. A blood promise is nearly as strong as a heart promise, breaking it is torture.\n\nTouching Tabby in a sexual way without permission definitely qualified as \"doing ill to family\" and I'd never figured out a way to ask permission. It would be an awkward question, \"Hey sis, mind if I feel you up a little while I'm using the ole' family gift-slash-curse?\"\n\nStill, I could have a little fun. I dribbled a bit of maple syrup onto a finger and dabbed it at my sister's lips. They were soft and warm. I dipped into the syrup and did it again, painting a good sweet gloss on her lips that she'd taste later. She'd know I did it. She had gotten used to my pranks over the years. Besides, the sensation of my finger on her lips, in fact any touch sensations that happened now, would catch up with her the moment time restarted.\n\nI let my syrupy finger linger at her lips, feeling wronger as I lingered longer. The blood in my veins tickled its oath-warning. I ignored it and pressed a fingertip into her mouth so she'd taste maple the moment she woke up. It was even hotter and softer inside her mouth; small too because her lips were barely parted. My thoughts, already teetering on the sexual, tumbled deeply into the gutter as I brushed her little tongue with my fingertip. My blood tingled a stronger oath-warning.\n\nHow many men? How many men had she had in her mouth? I knew she swallowed, but then again I did too. We'd traded that sordid bit of truth one night a few years ago over a good bottle of wine, sitting in front of my fireplace.\n\nAnd how many women? How many women had she pleasured with these lips, this tongue? She'd openly admitted to liking girls that very same night after we'd polished off a second bottle of wine, \"S'not so bad, Molly. You just need to find the right girl and get a little brave.\" She'd said it with the same sweet smile that I imagined her using to lure men and women into her bed.\n\nA little brave. Yeah. Sure. I sighed and pulled my finger from Tabby's tiny, warm mouth. I'm not brave. Not like Tabitha, anyway. And I have promises to keep. My blood stopped tingling.\n\nI backed away from the bed, savoring one last look at my pretty sister from my bedroom doorway, and made a mental note to change my sheets before going to sleep tonight. Tabby tended to leave a bed more than a little soggy when she masturbated. Even worse than I did.\n\nI was back in the kitchen and sitting in my chair when I let go of the silky time threads. They had already starting tugging at me with increasing urgency, pleading to be released. They needed to rejoin their rope. It was time to let them go.\n\nWhen everything restarted, my stomach lurched then quieted.\n\nI sipped coffee and heard my sister giggling loudly from the bedroom as soon as she realized what I did to her. Then there was quiet. Then there was some very soft moaning.\n\nA couple of minutes later, I heard the bathroom sink running and that made me smile. Well, at least she had enough sense to wash her hands before she came to the breakfast table.\n\n\"The maple syrup was a nice touch,\" she chuckled as she bounced happily into the kitchen and took her seat, pouring syrup onto her stack of French toast.\n\n\"Thanks, I thought so too.\" My eyes flicked down her body then back up. \"And nice lingerie,\" I added tartly.\n\nShe'd finally rummaged in my pajama drawer. The slinky pink babydoll she was wearing was mine and it looked better on her, naturally. The light color softened her tan and the fabric clung to her hips and chest like a second skin. She was naked under it. Her nipples poking at the front and the absence of any panty line at her hip made that clear.\n\nMy sister grinned and apologized for her pilfering through a mouthful of French toast, \"Sorry, but I've missed girlie clothes. It's been nothing but fake, polyestery stuff for the past two months camping in the desert. And you've got a killer lingerie drawer by the way.\"\n\n\"Fine, at least you can't ruin that with your superhooters,\" I needled. Her chest had stretched out some of my favorite sweaters when she borrowed them while we were growing up and, like a good sister, I never let her live it down. \"Make you a deal Tabs, I'll forgive your mooching if you eat some of these strawberries. There's these things called vitamins in them and they're good for you, sis.\"\n\n\"Okay, mom,\" she rolled her eyes even as she munched happily on a chunk of strawberry. A drop of juice slid from the corner of her mouth and rolled down a little before she lapped it away quickly with an agile dart of her pink tongue.\n\nIt made me wince. Even when she doesn't mean to be, Tabby is sexy. She doesn't realize it because it's natural for her, like breathing and walking.\n\nBrighde help me.\n\n\"You're going to make some guy, or some girl, very happy some day, Tabby,\" I nudged her knee with mine.\n\n\"Mmmm... why not both?\" she mused playfully, stuffing more French toast into her face.\n\nWe caught up over breakfast. No news for me as usual, I was still grinding out life as a junior associate at a big law firm. The partners thought I could do miracles, which was partly true -- just not the kind they thought. You can have the answer to a lot of legal questions if you can steal twenty minutes here and there without anyone knowing. Yeah, yeah, it's cheating, but I'm a lawyer. Turns out that it's okay when we cheat. We call it advocacy.\n\nTabby, meanwhile, had spent the late fall in the high Nevada deserts, chasing wildlife and men. Oddly, I realized, she hadn't mention any women. In fact, come to think of it, she hadn't mentioned any for awhile now.\n\n\"You off girls now, sis?\" I asked out of the blue.\n\nMy question brought her up short and she twitched her nose as she looked at me, \"Nah, just, I dunno... getting more selective I guess. Boys are for fun, Molly,\" she sighed, \"but girls... girls are for love. There's something so much more intimate about... \"\n\n\"Whoa,\" I stopped her with a hand on her arm, a heat already spreading across my cheeks the way it often did when she talked about girl-girl things, \"wait 'til I've had a drink or two to go into the girl-on-girl details, huh?\"\n\nShe smirked as she rose from her chair with her already empty plate. \"Fine, then wanna go drinking tonight? We'll pick up some of your local talent. When's the last time my prim and proper sister had herself a little naughty, naked fun time?\"\n\nI laughed in spite of the jab, I'd always liked the way my sister put things. \"I'm fine, Tabby. I don't think I have the same kind of needs you do. Besides, work keeps me busy. And happy.\"\n\nShe patted my shoulder then picked up my breakfast plate too. \"You do, Molly. Have needs, I mean. I promise. The Eire fire burns on in you too, sis. I can tell. It's just buried under... I dunno... something.\" She fiddled with a few of my curls. \"How about we stay in for a movie night then? I vote for pizza and wine. Red, please. I can fetch movies.\"\n\n\"Mmmm,\" I considered, \"sounds a bit better. All right.\"\n\n~*~*~Part 04~*~*~\n\nWe spent the day working. Tabby started in on two months worth of dirty laundry and attacked her giant e-mail inbox. I logged into the server at my firm for some much-needed document review.\n\nBy late afternoon, we were both antsy from being inside all day and I decided to lure Tabby out for a run on the wicked San Francisco hills.\n\n\"We'll go slow, I promise,\" I lied blatantly, \"I know you've been jogging perfectly flat desert trails the last few months. C'mon, don't be a sissy.\"\n\nThe sissy thing always works. Even my goody two-shoes sister has enough pride to rise to a challenge. We dressed and stretched on my front porch. I watched Tabby bend forward limberly to clutch her toes, and tried not to look too long at her easy flexibility.\n\nTabby would not only be gorgeous naked, she'd be bendable and twistable in bed too, you could just tell.\n\nBrighde save me.\n\nShe looked up at me so quickly I was worried she'd heard what I was thinking. \"You're running outfit's super cute, Molly. I bet the guys on your street appreciate the view.\"\n\n\"View?\"<br />\n\n\"Of your butt, silly. You've always had a good tush for running shorts. All sleek and sporty. I think I've been getting a little hippy lately.\"\n\n\"Hippy?\" It made me smile. \"You're not hippy. Besides, trust me, when you run, nobody's looking at your hips, sis. For the boys, it's all about those boobies.\" I hopped up. \"C'mon hippo, let's get started already.\" I pulled her to her feet.\n\n\"Hey,\" she prodded my shoulder with good humor when she was up, \"I was trying to be nice.\"\n\nI trotted off a few steps, \"Pfffh, nice is for wussies. Move it.\"\n\nI led her on my longest loop, a ten-mile torture test I hadn't braved in months. It was even worse than I remembered. By the time we staggered back, I was panting so hard I could barely talk and Tabby looked like she was about to throw up. We were both dripping with sweat but at least I could stand up without swaying. It was a petty victory but at least I could beat her at something.\n\n\"Shower,\" Tabby wheezed, falling through my front door onto her knees as soon as I opened it. I watched her heart-shaped rump wriggle a crawl towards the bathroom. The way my sister's ass flexed and moved so tautly, it looked... squeezable. Yeah, really squeezable.\n\nI shook that ridiculous thought from my head and followed her exquisite body as it continued dripping sweat onto my hardwood floor with her crawling.\n\n\"Please.... cold shower,\" she begged. \"For the love of Brighde, I thought the desert was bad.\"\n\n\"We've got way more humidity. Plus, these fucking mountains the sick bastards insist on calling hills. And don't take Her name in vain.\"\n\n\"Whatever, I think I kinda hate California now,\" she whined weakly.\n\n\"Beats Maine,\" I argued, \"Remember freezing our butts off for seven months out of the year growing up?\"\n\n\"My butt was a lot smaller then. And right now, I'd kill to freeze for awhile,\" she gasped.",
        "\"Good point.\" We reached the bathroom together and I leaned into the shower stall to turn on the water for her.\n\nI burst out laughing when Tabby started crawling right into the shower with her clothes on.\n\n\"At least take your sneakers off, you little dope,\" I snatched her ankles and slipped her Nikes off before they got wet.\n\n\"Get in here with me,\" Tabby groaned after she stuck her head under the water, \"this feels awesome.\"\n\nMeh, what the hell, I kicked my shoes off and joined her. She was right, it felt fantastic. The icy water made my skin tingle.\n\nThis was the kind of silly, spontaneous thing that my little sister was good at. I'd missed her.\n\nWe sat together in the shower stall, side by side, with our backs to the cool tile and let the cold water rain down on us. Tabby's head lolled onto my shoulder as we sat there, slowly catching our breath. It was a nice sister-bonding moment that made my heart swell sweetly.\n\nShe asked a question so softly I barely heard it, \"Molly? How come you moved so far away?\"\n\n\"Work.\" It was a simple answer and even mostly true.\n\n\"That the only reason?\"\n\nCareful, just a partial truth now. \"No, I dunno, I guess maybe I needed to strike out on my own a little.\"\n\n\"You didn't do it because you were mad? Or tired of looking after me? It felt like you ran away from me.\"\n\n\"No, honey.\"\n\n\"Promise?\"\n\n\"Promises are serious things for us, Tabby, you know that.\"\n\n\"I know. Still, promise?\"\n\nI sighed and chose my words carefully, \"Yes, Tabby. I promise that I didn't move away because I was mad at you or tired of you.\"\n\nNo, dumbass, it was because I loved you a little too much. And not in the right way. Those last two thoughts echoed in my head so loud they hurt my ears.\n\n\"Thanks,\" she kissed my shoulder, \"I love you, you know.\"\n\nIt made my heart twist in my chest. \"Oh Tabs, honey, I love you too.\"\n\nShe nodded into my shoulder. \"I know. But we don't say it enough, I think. I just felt like saying it. After Dad goes it's just you and me. It's starting to sink in.\"\n\n\"Mmmmm,\" I pursed my lips at the sad thought, \"the last of clan Macallan.\"\n\n\"Aye,\" she agreed in a really bad Irish accent, one more appropriate for a cartoon leprechaun fleeing from kids who were after his breakfast cereal. It made us both chuckle and I threw an arm around her shoulders to pull her closer.\n\nWe sat quietly for awhile before she stifled a bigger laugh. \"Okay, I have to say this... your white jogbra is completely soaked through and I can totally see your nipples.\"\n\nI did my best to shrug it off even as I felt them stiffening more because she was looking. \"They're nipples, sis. You have 'em too.\" But they began to push out against the wet white fabric of my jogbra even more. Just super.\n\n\"Yeah... but yours were always prettier,\" my sister said matter-of-factly, still watching my chest.\n\nHer random compliment caught me off guard, \"Really?\"\n\n\"Mmmhmm, I've always thought so,\" she said as she finally stopped studying my chest to lean forward and pull off her socks. \"But my toes are way cuter.\" As proof, she wiggled them and looked at me with a sweet smile, \"See?\"\n\nI had to admit, they were adorable. \"Yeah.\"\n\n\"Ever sucked on someone's toes before, Molly?\"\n\nWhere did she come up with this stuff? \"Eh, no. Can't say I have.\"\n\n\"You know, that's one upside of branching out into girls, sis. You can lick places on a girl you wouldn't want to go anywhere near on a guy.\"\n\n\"Yeah, well, I'll have to take your word on that, Tabs.\"\n\n\"I know. Just sayin'.\" She reached down and started wrestling with her tank top, \"Hey, help me off with my top? It's stuck to me like glue and I can barely breathe between it and the bra. You're lucky you don't have to double-bag your chest when you're running.\"\n\nSports, I thought ruefully, the one consolation for the small-breasted. \"Yeah, lucky me.\"\n\nI pitched in to help her peel off her sopping pink tank, revealing a gray jogbra beneath that pushed her breasts up and together into a cleavage that could have sold bras for Victoria's Secret. She dropped the pink top to the shower floor with a wet splat.\n\nI forced my eyes down off her breasts, now heaving a little after her struggle to get her top off, and admired her smooth and perfectly tanned stomach as it rose and fell too. She'd gotten her navel pierced since I'd seen her last. A delicate little gold butterfly decorated her taut belly.\n\nShe caught me looking and fiddled with the small charm. \"Like it?\"\n\n\"It's very pretty.\"\n\n\"It's a monarch butterfly. I picked it out special. They migrate you know. Like birds.\"\n\n\"Yeah, really far, right?\"\n\n\"Mmmhmm, but it's really the timing part that amazes me.\"\n\n\"Timing part?\"\n\n\"Well, somehow each one of these little guys knows when it's time to come together. And then they just do. There's no confusion, no hesitation. They don't just know who they're supposed to be with and where they're supposed to go... they also know the hard part... the damn when.\"\n\nShe looked down at her stomach and toyed with her charm then looked up at me again but with an expression I couldn't read.\n\n\"Lately Molly, who I belong with doesn't seem that hard anymore. It's when it's supposed to happen that I can't figure out.\" She gnawed her lip and sighed.\n\n\"And so you had someone stab you through the belly button with a gold butterfly to help you think more clearly?\" I sassed her.\n\nTabby opened her mouth to defend herself but hesitated and shut it with a tender smile. She scooted back next to me to rest her head on my shoulder again. \"Yeah, I guess it sounds kind of silly doesn't it?\"\n\nI felt bad about teasing her. \"Did it hurt? I really do like it. Maybe I'll get one too.\"\n\nHer voice brightened a little but still sounded tired, \"I'd like that very much, Molly. Very much. Then we could both be butterflies.\"\n\nHer sweet thought hung in the air as we sat together, letting the frigid water rain down on us. Tabitha pressed her closer leg against mine and I watched as our thighs started to lift into goosebumps, her bronzed skin against my porcelain white.\n\n\"Hey, Moll?\" she finally broke the comfortable silence, \"Would it freak you out if I took off my bra too?\"\n\nJesus, of course it would. \"Go for it, just be careful when you unleash those things in this confined space. You might accidentally knock one of us unconscious.\"\n\n\"Har dee har har.\" Tabby stood and I admired the way the muscles in her stomach and legs flexed and twisted smoothly as she did it. She fingered the bottom of her bra and looked down at me slyly. \"So, ready to see them?\" she teased.\n\nMy answer was more sarcastic than I intended, \"Pfffh, how many men have you asked that question?\"\n\n\"Thousands,\" she shot back, \"and, not to brag too much, but I haven't had a complaint yet.\"\n\nWith one determined wriggle, Tabby jerked her gray jogbra up and off. My sister's spectacular breasts bobbed free, round and glistening under the cold water. They were gorgeous orbs of firm, perfect breast that thrust straight out from her chest. Strike that, I had breasts. Those... those were tits, I thought giddily. Jesus, they'd easily overfill my hands and were covered in an even, flawless tan. Tabby had definitely been sunning topless. The light pink of her tiny nipples was a tempting contrast against her slightly bronzed skin. Her areolas were puckered tight and her nipples were long and hard.\n\nAnd suckable.\n\nOuch, bad thought. I swallowed and forced myself to look away as my sister, now wearing only a small gray pair of jogging shorts that clung to her hips, turned to duck under the water.\n\n\"Soap?\" she asked blindly, eyes closed against the shower spray.<br />\n\nBut I was still a little distracted from her strip show, \"Huh?\"\n\n\"Soap, sis. I need some soap.\"\n\n\"Oh, right. Sorry,\" I snapped out of my daze and rummaged in the soap dish, then reached up to pass her the slippery bar.\n\nShe didn't take it. Instead, she turned a little more to face away from me, \"Actually, feel like washing my back?\"\n\n\"Sure.\" I levered myself to my feet. Even Tabby's back was pretty. It was smooth and tanned with enough muscle here and there to be both fit and feminine.\n\nI rolled the soap bar over and over in my hands for lather then began sudsing my kid sister's sleek back. I'd never washed her before, even when we were little. It was nice to touch her in this way, tender and a little sensual without being sexual.\n\nIn time, my soaping turned into a massage, white suds dripping onto Tabby's little gray jogging shorts then streaming down her tanned legs in milky streams as I kept kneading her back. She didn't move to stop me. In fact, she sighed and took a few steps forward to lean herself against the shower wall while I worked on her. She groaned softly into the tile every once in a while when I found a good spot and dug deeper.\n\nI kneaded my sister's beautiful back for a long, long time, sinking my fingers into her exquisite, lightly tanned flesh over and over. I finally stopped only when I realized my own hands and forearms were getting sore. More importantly, my body was screaming its depraved hunger, a wicked heat coiling and uncoiling deep in my belly.\n\nI backed away from her and she sighed dreamily. \"Wow, that was awesome. Thanks so much, Moll.\" She spun slowly to put her back to the shower spray to rinse off the thick layer soap I'd spread on her. It put her smiling face right in front of mine. More importantly, it put my hands directly on her breasts.\n\nI sucked in a breath as they filled my palms. Round. And firm. So firm. Hot in some places, cool in others where they'd pressed against the shower tile. Her nipples, thick and hardened, dug into my hands.\n\nTabby didn't even blink. And she didn't pull away. She just smiled softly. \"Uh, I can wash those myself, sis, but if you really...\"\n\n\"I'm getting out,\" I blurted awkwardly, palms finally flying off her chest and backing away.\n\nBut her bright green eyes locked on mine, almost pleading. \"I'm sorry I teased you. That was mean. C'mon, I'll do your back too.\"\n\n\"Just... just take your shower, kiddo.\" With shaky hands, I quickly wrung some of the water from my hair and opened the shower door to step out.\n\nOut. That's what I needed. I had to get out. And away. My head was spinning. I hadn't had lurid thoughts like these while I was awake in awhile. A mental movie of Tabby shuddering and groaning with my face in her lap was running in full Technicolor with THX surround sound in my head. Jesus, I swore I could taste her. She'd be tart, lemony. Tabby's skin had always been that way. Her little blonde honeypot would be that way too. I knew it.\n\n\"Sis, wait,\" Tabby caught my arm, \"if it's me you're worried about?\"\n\nI could only shake my head. No, she wasn't the problem. \"Please let me go, Tabby.\" I meant more than just this shower. God help me, I couldn't even look at her.\n\nShe shrunk a little but still kept hold of my arm. \"Sis, this stuff doesn't make me uncomfortable. Really. Besides, I guess I just figured... I mean... you know... you've touched me before haven't you? When you do your time freeze thingie you must have at least once\u2014\"\n\n\"Never.\" I lied firmly, looking down at the floor like it had the answers to my self-loathing.\n\n\"Never,\" I repeated, more softly. Maybe if I said it enough I'd believe it too. \"Mom and Gram made me promise not to do things like that when I use the gift. Not to family. It was... it was a blood oath, Tabby. I broke one of them once. I'll never do it again.\"\n\nI had to lie to her about touching her. I couldn't tell her that she was the reason I'd dared to break a blood promise. That I'd briefly cupped one of her tempting young breasts way back when. I'd been too curious to stop myself.\n\nViolating the blood oath had twisted my guts viciously as soon as I did it.\n\nI had barely made it to the bathroom. I was vomiting for hours afterwards, sweating and shivering with fae fever, muscles twisting and knotting brutally on the linoleum floor of the little bathroom we shared growing up. It had literally been torture because that's what it was supposed to be. In clan Macallan, any promise was a serious business, blood promises even more so. I knew it. Tabby knew it too.\n\nHer eyes widened, guessing at what I must have gone through. \"Oh god, I'm so sorry, sis. I've always felt bad for you. Mom and Gram were so much harder on you since you're the oldest.\" She let me go.\n\n\"S'ok,\" I sighed, \"I learned my lesson.\"\n\n\"I bet you did.\" Her already soft expression somehow softened even more as she watched me back away. Her tender, sympathetic look only made me want her more. As if that were possible.\n\nThat's when I realized I was out of the shower and standing in a shallow puddle from what was dripping off my own body. It wasn't much but it meant my bare feet were touching water, which meant it would be easier. I closed my eyes, listened and got lucky: a knot. I didn't even stop to think. I was tired of thinking. I just seized a few threads and heaved.\n\nEverything stopped.\n\nMy topless sister stood motionless in the shower. The shower's falling water droplets all around her were paused in midair, glimmering and glittering in the light. It meant my already gorgeous sibling was surrounded by hundreds of sparkling diamonds. It was heart-achingly beautiful.\n\nI couldn't fight my own ridiculous needs. Not anymore. I needed relief, was going to go crazy without it. I leaned back against my little bathroom sink and spread my feet. I stared, unblinking, at Tabby as I slid a hand into my soaking wet jogging shorts and pressed two fingers into my own folds. A groan slipped out at the first brush against my clitoris. It was swollen and tight with need and I was juicy to the point of being sloppy. It was going to be a knee-shaker of an orgasm, I could tell already.\n\n\"I'm so sorry, honey. I'm failing you again,\" I whispered, apologizing to my sister for the way I was about to use her.\n\nI drank Tabby in. Her delicate angel's face with her thick, wet and now dark blonde hair plastered to one side. Her perfect body. Her honest sexuality. All of her. I pictured kissing my sister's lips, nibbling at her neck, dropping to my knees and licking at the dripping undersides of her large, round breasts, nipping at her puckered nipples, reaching around to cup her beautiful heart-shaped ass and digging my fingernails into it, then lapping my way down her flat, tanned belly, tugging those little jogging shorts down to her knees and pressing my lips to her...\n\nThat was enough. \"Guh huh huh,\" I whimpered and came.\n\nThe orgasm that swept through me was a welcome and fiery wind, boiling my blood, burning away the ravenous, incestuous hunger. My eyes squeezed shut all on their own as I rocked into my hand and shuddered. I had to clutch the sink's counter behind me to keep from falling over while my knees buckled with the force of the glorious and much-needed release.\n\nHoly crap. Yep, I was right, a total knee-shaker.\n\n\"Fuck,\" I panted, head hanging limply as the cum's heat drained away almost as quickly as it came. I gave myself a couple of minutes to recover. Then, with one last longing look at my sparkling, near-naked sister, I let my threads go and let time restart.\n\nI smiled lamely at her as she started moving, slowly at first, like moving through hot wax, then sped up as time accelerated to full speed. \"Finish your shower sis. I'll hop in when you're done, okay?\"\n\nShe just nodded and watched me go. I could practically feel the pity coming off her in waves. She was still thinking about the pain of breaking a blood oath. She didn't know what I'd just done. That I'd masturbated over her half-naked body while she couldn't do a thing about it.\n\nFuck, I hated myself a little more than I did yesterday.\n\n~*~*~Part 05~*~*~\n\nAs Tabitha suggested, we had pizza and wine for dinner, splitting a large pie and a decent bottle of pinot. We changed into pajamas and, with our bellies full of hot cheese and alcohol, Tabby cracked open a second bottle while I set up the DVD player. The rentals Tabby had picked up while I waited for the pizza to be delivered held a couple of surprises.\n\n\"'Desert Hearts'? 'Bound'?!\" I looked at my sister in disbelief. \"What is this? Lesbo night?\"\n\n\"Ooops,\" Tabby giggled and shrugged, \"I didn't realize. I was a little distracted. A very cute girl at the movie rental store recommended them.\"\n\nI could only shake my head. \"Yeah, I'll bet she did. What was her name?\"\n\nShe smiled. \"Becky. Why? Want her phone number? She gave it to me.\" Tabby's smile widened into a playful grin. \"She's a little young for you if you ask me.\"\n\n\"Nobody asked you.\"\n\n\"Fine, Becky's shift finishes at ten,\" Tabby continued, \"We could call her and invite her over. She seems like fun.\"\n\n\"Very funny,\" I snorted.\n\n\"Suit yourself,\" she shrugged, \"maybe I'll give her a call tomorrow then. See if she wants to do some...\" she drew out a suggestive pause, \"...sightseeing with me.\" Then she had the nerve to bat her pretty green eyes innocently.\n\nSomething new and awful twisted in my chest. Jealousy. Marvelous.\n\n\"Sounds like a good idea,\" I said tersely. \"So how about a fire in the fireplace during our lesbian movie fest? I know it's a little warm for it here, but it's January, dammit, and I'm kind of in the mood.\"\n\n\"Oooh, that would be awesome. I'm parking my butt on the floor then.\" Tabby plucked a pillow off the couch and plunked herself down on the thick rug while I got the fire going and shut off the lights.\n\nI laid down on her other side, leaving her closer to the fire, and handed her the DVD player's remote because I felt guilty about being cranky. \"Here chickie, little sisters get remote privileges tonight.\"\n\nTabby took it with a smile. \"Sweet, now we're going to watch the girlie sex scenes in slo-mo. Maybe you'll learn something.\"\n\nSuper. I held my tongue. \"Blanket?\" I offered instead.\n\n\"Big enough to share?\" she asked, eyes already glued to the TV screen as previews started.\n\n\"Yep.\" I flung it over both of us then settled in for what I fully expected to be roughly three hours of girl-on-girl torture: in the movies and on the floor with Tabitha.\n\n\"Molly? Thanks.\" She crossed her nearer leg over mine as Bound started. I'd seen the movie, so at least I knew what I was in for. Even I had to admit that Gina Gershon was ridiculously smart, hot and dirty.\n\n\"Thanks for what?\" I said absently.\n\n\"I dunno. Everything. Letting me crash here whenever I want. And all the stuff you helped me with growing up because Mom wasn't there and Dad was clueless and Gram was so weird.\"\n\n\"I'm not sure I was all that helpful. As I recall, we figured out the big things together.\" A silly memory came rushing back that made me chuckle, \"Remember locking ourselves in the bathroom and trying to work out what to do with maxipads?\"\n\n\"Oh shit,\" Tabby grinned, \"that was funny. I was pretty sure I needed one too. What was I, like nine?\"\n\nI chuckled again. \"Yep. And there was no definitely convincing you otherwise. I really tried.\"\n\nTabby found my hand under the blankets and squeezed it gently, \"I wanted to be like my big sister. Like you.\" She squeezed it again. \"I always have, Molly. You know, I wish I could...\"\n\n\"No Tabby,\" I stiffened, \"never wish for the Macallan curse. Save your wishes for something better.\"\n\n\"...but that wasn't what I was wishing for,\" she said softly.\n\n\"Good. Watch your movie.\"\n\n\"'Kay,\" she turned onto her side and scooted down to rest her head on my chest. Her cheek felt hot against my breast even through the fairly thick, cotton button-down pajama top I was wearing.\n\n\"That's my boob your head is on, Tabby.\"\n\n\"Yep,\" she said simply, \"and it's an excellent pillow.\"",
        "\"Small pillow,\" I grumbled.\n\n\"True, but a good one all the same.\"\n\n\"Very funny.\" I stroked her head.\n\n\"Wasn't jokin'. And keep petting please.\" She arched her neck to push her head into my hand like a needy cat.\n\nI ran my fingers Tabby's silky, perfect hair and watched as Gina and Jen Tilly traded lusty, hungry looks on screen. It made my heart beat faster and, with her ear to my chest, Tabitha must have heard my pulse quicken.\n\n\"Heh, admit it, sis, this is hot. You don't have to be gay to say this is hot.\"\n\n\"Fine. It's hot. Happy?\"\n\n\"Very. Phase one is complete,\" she chuckled darkly. \"You'll be a raging lesbo by summer. I can't wait to tell Dad.\"\n\nI laughed, hard, and Tabitha's head bounced on my chest. I was still laughing when she asked her quiet question out of the blue, \"Didn't you ever want to?\"\n\nShe'd lost me completely. \"Want to what?\"\n\n\"Touch me? You know, when you do the time-thingie?\"\n\nThe bottom of my stomach dropped away. \"Jesus, Tabitha.\"\n\nI tried to sit up but she pressed her head harder into my chest and she squeezed my hand, the one she still held beneath the blankets.\n\n\"It's okay, sis...\" she said quietly still looking at the TV, \"...tell me. And no fibbing. I'll know. You're a terrible liar.\"\n\n\"Pfffh, I'm a lawyer. I'm an excellent liar.\"\n\n\"No, Molly, no you're not. Not to me anyway. Not as good as you think.\" When her head turned over slowly to look up at me she was very close. Her eyes were wide and glittering in the firelight. Flecks of gold danced against deep dark green. \"And don't change the subject, Molly.\"\n\nShe licked her lips and my heart skipped several beats at her closeness, the dim light, the combined warmth of her and the fire, and the forbidden girlie romance unfolding on the screen.\n\n\"Tabitha, I...\"\n\n\"I would have,\" she interrupted gently, \"Wanted to. Touch you, I mean. And I don't mind if you do.\" She nibbled her lip uncertainly and tugged our joined hands to her belly, stroking herself, \"And if you ever want to...\"\n\nI jerked my hand away from hers and her pretty eyes hardened around their edges, her lips shrinking to a straight line.\n\nShe sighed. \"You know what Molly? You're making this kind of hard.\"\n\nShe slid upwards, closer, and her eyes were locked on my mouth. I could feel her breath on my face. Everything in me, every bone, every muscle, and every sinew screamed, \"no fair.\" I honestly wanted to cry. Her. Here. Like this. It was too much. My desire for my own sister, my own flesh and blood, rose up like a tidal wave and loomed over me.\n\nLike a coward, I closed my eyes and listened for the old rope, praying for an escape. I heard only perfectly smooth sliding. There were no little knots. No threads. Nothing for me to hold. Nothing to tease apart. It meant there was no escape there either. Not without daring to grip the whole rope. And that was forbidden.\n\nI had no refuge left.\n\n\"What are you doing Tabs?\" I whimpered, barely daring to open my eyes again.\n\n\"Being brave. For you.\" She brushed her nose against mine and a thrill shot through me.\n\nI didn't think it was possible, but her eyes glittered even more. She smiled as she closed the last half inch between us. That's when Tabitha's lips, my own sister's lips, pressed softly into mine.\n\nSweet Brighde. I was undone. All the resisting. All the self-hatred. All the secret wants heaped high around me and mortared fast with my taboo urges. It all fell with one damn touch of my sister's perfect lips.\n\nTabby's kiss was sweet and warm and tender. I groaned weakly into her mouth and the sound encouraged her; she worked her lips into mine more eagerly. My sister was an outstanding kisser. I had no clue where my lips ended and hers started. It was everything I'd ever hoped for.\n\nHer lips closed carefully around my lower one and pulled softly, playfully. It made me groan again, this time from somewhere very deep in my chest. It seemed like forever came and went before my beautiful sister backed her head away slowly and fixed her very green eyes on me again. They were smoky, sultry slits.\n\n\"See now, smartypants?\" Her voice was huskier than I'd ever heard it and she had a way of making 'smartypants' sound suspiciously like 'dumbass.'\n\nI swallowed. \"Yeah.\"\n\n\"Okay, you and me? We're both going to quit fighting this... this thing that's been killing you for years... killing us...\"\n\n\"How did you...\"<br />\n\n\"I'm your sister, Molly. Did you really think you could hide how you felt from me? I used to think it was just my body... that you just kind of lusted after what happened to me at puberty.\"\n\n\"Don't be silly, I don't care how\u2014\"\n\n\"It's okay,\" she cut me off yet again, \"I understand it's not just physical. But you know what? Even back then, when I thought it was just a body thing? I was really flattered. I never said anything because I didn't want to embarrass you. I figured you'd just kind of get over it with time, lose interest eventually.\"\n\nShe paused and searched my face. \"But you haven't have you?\"\n\nI barely shook my head.\n\n\"Good because,\" she glanced away uncomfortably and when she looked back, her eyes were soft and honest, \"because neither have I. I want you too, Molly. And I'm getting tired of playing games. I'm tired of waiting for you to come find me when I'm masturbating. Tired of hinting. Of flirting. Of stealing snuggles and begging for you to touch me. Mostly, I'm just tired of not being with you the way I want. The way we both want.\"\n\nShe drew in a long slow breath. \"I'm going to say this out loud because you won't. You look a little out of it too so I'll even use really small words,\" she smiled and paused to kiss my nose then nipped at its rounded tip and pulled back to look at me tenderly.\n\n\"I am in love with you, Molly Macallan of clan Macallan. And I don't think it's just in the little sister way. It feels like the big and romantic and hot and sweaty way. Do you understand?\"\n\nMy mouth had gone bone-dry so my answer came out as a hoarse whisper, \"Yeah.\"\n\n\"Good girl,\" she smiled again, \"now, kiss me like a grown-up. That junior high school smooch was nice but... well... we're both adults now. C'mon sis, how about you start with just a little tongue for your little sister?\"\n\n\"Jesus, you're kinda sick,\" I choked out an amazed giggle.\n\n\"Uh uh, I'm naughty. And trust me, there's a difference. For the love of Brighde, why on earth do you think I've been kissing girls for the past several years? I was practicing, dummy. For you.\"\n\nOoh, that did it. \"Quit taking Her name in vain, you little...\" I cupped the back of her head and mashed my lips into hers. I drove my tongue into her mouth and twisted it around hers hungrily. She tasted like red wine and pizza with a hint of cinnamon TicTac. Perfect. I'd never had anything so delicious.\n\nTabby's lips pulled into a bigger smile as we kissed, obviously happy that she was getting what she wanted -- what we both wanted. She let me have my fun for awhile, exploring her willing little mouth, teasing me with quick strokes of her incredibly talented tongue that resonated between my legs. Then her tongue spun and wrapped itself almost completely around mine so limberly and so expertly that I half-coughed and my eyes went wide in surprise. Her eyes were open too and looked very amused.\n\nMy sister's tongue was... was long. Insanely long. She flicked at the sensitive roof of my mouth and I mewled in amazement.\n\n\"Surprised?\" she asked, pulling away. \"I had my tongue nicked when I got my belly button pierced. You'll appreciate it more later. There are advantages to having a naughty kid sister. You'll see. In fact, I promise.\"\n\n\"Promise, huh?\"\n\n\"Yep, promise,\" she rolled off my chest and rummaged around under the blankets.\n\n\"Where are you going?\"\n\n\"Just takin' off my pajama bottoms,\" she explained, \"it'll be easier to touch myself without clothes in the way. And you're going to help.\"\n\n\"Help you... uh... masturbate?\"\n\n\"Why not? It's not a bad place to start you out on the girlie stuff. A little less intimidating than me just sitting myself down on your face, right?\"\n\n\"True,\" I admitted, although the face-sitting thing sounded kind of appealing already.\n\n\"So c'mere,\" she gathered her long blonde hair and pulled it up above her head, \"kiss me some more while I fiddle. I'm pretty worked up from the movie and cuddling with you. I bet I can cum a couple times. Ever catch me cumming?\"\n\n\"No,\" I admitted.\n\n\"Good, now's your chance then.\"\n\nShe didn't have to ask twice. I scooted over and pressed my nose into her ear. It felt a little silly, like sneaky under-blanket sex with a high school boyfriend. \"So... like this?\"\n\n\"Mmmhmm.\" Tabby spread her legs a little and one pressed against me. Her hands slid down under the blanket and her right shoulder was soon rolling gently as she pleasured herself. Being this close to my sister while she actively masturbated had my heart racing. I'd caught her in the act many times before but this was way better.\n\nOf course, I was so wrapped up in watching her that I forgot what I was supposed to do.\n\n\"What're you waiting for?\" my sister whispered looking from my eyes to my mouth, \"start kissing, Molly.\"\n\n\"Oops, sorry,\" but I ducked her lips and started planting small smooches on her neck instead, little pecks that made her sigh. Her skin was soft and warm. It was also that sweet and slightly tart flavor that I'd never been able to forget.\n\n\"Oooh, yeah, that's nice,\" she cooed as my kisses stretched longer. I tried a few licks next, savoring the texture of her skin too, right down to the tiny delicate hairs ticking my tongue\n\n\"Uh huh, even better, Molly,\" Tabby let out a long sigh from between pursed lips and her hand moved a little faster.\n\nHer compliments made me bolder and I tried a few nips at her neck, pulling her delicate flesh into my mouth and rolling it carefully between my teeth. Some absurd part of me begged me to bite, to chew on my sister, really chew, as if that might finally satisfy my impossible hunger for her.\n\nAs I nibbled at Tabby's neck, I grew bolder still and slid a hand down to her stomach. The muscles there were twisting and shifting and it was fun to feel them move as she pleasured herself. I ran my fingers back and forth over her belly gently. I'd tickled her there thousands of times before, but I'd never stroked her. Not sexually. Not like now. Without realizing it, I started playing at the bottom edge of her pajama top.\n\n\"Go ahead and push it up Molly,\" Tabby whispered breathlessly, \"or just go under. Don't care. I want your hands on me.\"\n\nI nodded into her neck and wriggled my hand under her top. I counted three slender ribs before my searching fingers hit the underside of her nearer breast. I traced along its full, sweeping curve where it met her chest.\n\nTabby panted softly at the contact. \"Nipple,\" she whimpered.\n\n\"Nope, that's not your nipple,\" I teased, cradling the rounded underside of her boob, feeling its firm weight and its tight, smooth skin.\n\n\"Not funny,\" my sister snorted.\n\n\"C'mon, it was a little funny. Sooo... rub it? Your nipple?\" I asked softly just as my fingers made contact with the small, tightly puckered flesh of her aerola. Her breasts were gigantic compared to mine but her nipples were a good deal smaller. Interesting. I traced tiny circles around it.\n\nShe groaned and shook her head dazedly, \"Pinch it now. Gently.\"\n\nI did as she asked, catching her puffy nubbin between my first two fingers and rolling it carefully.\n\nTabby shuddered, \"...other one?\"\n\n\"Your other nipple?\"\n\n\"Uh uh, your other hand. Get it down here. With mine.\"\n\nIt took some twisting, but my left arm made its way down between us.\n\n\"Here, sis,\" her hand found mine beneath the blanket and pulled it over her hip. \"Right here.\"\n\nWe passed quickly over her soft, sparse tuft of hair. I barely got myself oriented between her legs before she was pressing one of my fingertips between her small, puffy lips and centering it at her entrance.\n\n\"In,\" she pleaded softly.\n\nI did as she asked, swirling around her slick little hole a few times then pressed a tiny bit into her.\n\n\"Ooooooh,\" she let a long groan as my fingertip parted her insides, sinking slightly into the oily heat of her pussy. She went back to touching herself, twirling slowly at her clit with one hand while holding her lips open for me with the other.\n\n\"Oh Molly,\" she whimpered, \"you don't know how many times I've thought about this. Exactly this. You kissing me. Touching me. You're about to make me very, very happy.\"\n\n\"Ditto,\" I kissed and nuzzled happily at her neck, more interested in the taste and smell of her warm skin than talking.\n\nI kept nibbling at her and tinkering with her insides, giddily pressing in and out of her hot tunnel a little more each time, feeling it's slick, swollen heat, learning every inch of another girl for the first time. Her jilling hand started brushing mine as she rubbed at herself more and more quickly.\n\nI smiled when Tabby bore down on my finger with some very skilled love muscles.\n\n\"Talented, kiddo,\" I complimented her quietly.\n\nShe giggled and squeezed me again even harder, \"Practice.\"\n\nI should have figured my sister would have a talented cooter. Which made me remember that I had talents too.\n\nIn fact, a unique talent.\n\nIn the almost total quiet of our gentle sex play, it wasn't too hard to listen the way I needed to as Tabitha and I worked together slowly to make her cum. She wasn't rushing and neither was I. We were both enjoying our shared fantasy made real.\n\nOur patience soon paid off in another way: a large and easy knot wandered by in the rope of time so I leisurely grabbed it and tugged. Time in the apartment did what it does for me. It jerked to a stop, held tight by the silken threads in my head.\n\nIt sounds kind of funny now, but I only then realized that I was kind of unsure what to do next. I'd never had sex with a girl before much less while she was stuck between moments.\n\nFor guys, it was kind of simple. In fact, I had done it plenty with a boyfriend I dated through a good part of college. He was a chronic premature ejaculator which was a shame really, he was a nice guy and very well-equipped. Lucky for him, I was probably the only girl on campus he could satisfy. As soon as I got him hard, I'd just stop time and take my pleasure. I used him gleefully, like a life-size sex toy, for as long as I needed.\n\nOf course, all of the sensations of my sucking mouth or enthusiastic fucking would catch up with him as soon as time restarted. For him, it was presto, instant orgasm. He just kind of figured it was his usual premature ejaculation. Silly boy.\n\nI kept touching my now-motionless sister while I pondered, lightly rolling her nipple with one hand and teasing her slick, hot folds with the other. What would this be like for a girl when time restarted?\n\nWell, Tabby and I were going to find out together.\n\nI eased my finger from my little sister long enough to nudge her hands away to make more room for mine, then cupped her completely. Her warm, barely-furred mound was a tiny bulge that fit perfectly in my palm. I traced my fingertips over her slick, delicate lips and reveled in the sheer taboo of it. Tabitha was my sister, my own family, almost my only family. And yet here we were.\n\nLost in the newness of it, I kept circling around Tabitha's pebble-like clitoris over and over. I dipped down into her opening for more of her abundant juice. I started to enjoy the simple repetition, rubbing and dipping. After awhile, I spiraled down onto her clit directly and began to seriously masturbate my gorgeous baby sister. I sucked sloppily on her shoulder as I did it, pausing only to rewet my fingers with her juices when they became tacky.\n\nI'd fantasized about doing this to her for so long that it barely seemed real, like living a dream. I only stopped jilling her when the silky threads that I'd so rudely dislodged started doing more than tugging, they were pulling desperately, pleading and begging to be set free.\n\nHow long had it been? I let go of the threads in my head, figuring Tabby would have to cum after all that touching.\n\nThe first clue that time had restarted itself was my sister shuddering on the floor next to me. In moments, Tabby's shuddering became thrashing. I scooted away to give her room.\n\n\"Muuuaaaa... fu... fu... aaah!\" she whimpered and her legs fell wide open beneath the blanket. \"Huh huh, Molly... I...\" Both of her hands flew down to clutch herself as she exploded, jerking and moaning with her orgasm.\n\nShe barely had enough time to gasp for breath twice before she started shaking again. A second orgasm swept through her. A bigger one.\n\n\"Ah huh ah... sis, holy... ahhhh!\" She shook harder and her hips flew up off the rug, arching her back into the air. I watched the muscles in her neck strain. Tabby's beautiful green eyes stared at me, wide, unblinking, helpless and amazed. She collapsed back down onto the floor when that cum was over, panting.\n\nThat's when the third, last, and largest orgasm crashed down on her.\n\n\"Mu.. Molly... what the?... jesus... aaaaah!\" my little sister's entire body trembled as it peaked insanely. She rolled onto her side, facing me, and curled into a ball as her body rocked in giant spasms. She was grinning crazily now, her face twisting in ecstasy, her small hands coming up higher beneath the blanket to knead at her own tits greedily. Her hips even wriggled a little dance on the floor as she flailed through her final orgasmic twitches.\n\n\"Wuh wuh, holy.... crap,\" she whimpered, quivering next to me, when it was finally over and she lay limp and panting, loose blonde hair covering half her face.\n\nI reached over to brush it off her cheek. \"You okay, Tabs? I guess I may have, uh, overdone it.\"\n\n\"Are you kidding?\" she gulped and half-smiled, \"That was... that was incredible. Do it again. Wait! Maybe give me like an hour to recover first. Or a week,\" she giggled dizzily.\n\n\"Still, I could have warned you. Sorry,\" I scooted closer again and kissed her temple, \"for guys, it was always a one-and-done thing. It didn't occur to me that a girl would just keep cumming.\"\n\n\"I didn't even think that was possible,\" she blinked several times and pressed herself against me. \"Let me just catch my breath for a few minutes?\" Tabby threw a limp arm and leg over me and cuddled in. Her skin was hot and slick with sweat.\n\nJust a few minutes later, my kid sister fell asleep on me, mouth hanging open and everything. She even drooled on me a little bit. It was very sweet.\n\n\"I love you, mouth breather,\" I murmured and pecked her on the top of her sleeping head then picked up the forgotten DVD remote and started up the movie again.\n\nWhen it was over about an hour later, I nudged Tabby, \"Have a nice nap?\"\n\n\"Yeah,\" she stirred sleepily, \"and now I'm all rested up for bed.\"\n\n\"Rested for bed?\" I chuckled.\n\nShe nodded and smiled as she rose to her feet, letting the blanket slide away without a hint of shyness. She was completely naked and it made me gulp. The first time I saw Tabitha nude in years was in my den by firelight.\n\nShe looked very much like an image snatched from some demented teenage boy's wildest sexual fantasy: sleek, tanned legs, curvy hips with a miniature bikini tan line, round and closely set breasts with perfectly centered little light pink nipples, wild blonde hair, and bright emerald eyes. She turned to face me completely and it brought her lightly furred little blonde mound into view too. There were a few stray droplets of girl juice in it that glistened in the firelight.\n\nShe caught me looking. \"I'm usually smooth,\" she fluffed her little patch with a few fingers and half-smiled. \"But in my defense, I've been camping in the desert for a couple of months.\"",
        "Tabby wasn't timid. She let me stare at her fantastic body, filling the time I admired her by pulling her hair up into a little twist and wrapping an elastic band around it. The motion made her mouthwatering breasts sway in hypnotic way.\n\nShe broke the spell. \"C'mon Molly, let's go to your room. We're going to need a bed for the things I want to do to you.\" She turned partway through her invitation and finished it over her shoulder as she wandered back further into my apartment.\n\nI had to close my eyes and take a few breaths to steady myself. I barely fought off the urge to pinch myself too. This was real. Not dreaming this. Real.\n\nBy the time I caught up to her, Tabby was stretched out on my bed and waiting in the dim city lights that filtered in through the windows. She wiggled her eyebrows in a silly way. \"There's plenty of room here right next to me.\" She patted the bed.\n\n\"Even with those big hips of yours?\" I sassed her even as I admired her a little while longer from the door. Some part of me wondered how we were even related. One of us was probably switched at birth.\n\nHer nose twitched as she smiled smugly. \"I prefer to think of my hips as 'juicy.'\"\n\nHer smug smile faltered a full minute later when I still hadn't managed to peel myself from the doorway.\n\n\"What?\" she asked softly.\n\n\"I don't know,\" I shrugged and fiddled with one of my curls nervously, \"I just... is this crazy, sis? Are we crazy? For as long as I've thought about this, about you, it's all just been in my head. And that's how I told myself it was okay.\"\n\nShe nodded. \"Now it's not just in your head anymore. Yeah, I get it.\" She nibbled her lip in thought. \"But can I ask you something? What do you see when you look at me right now?\"\n\n\"A drop-dead hottie spread out on my bed,\" I blurted.\n\nWe both laughed at my quick answer and I was grateful for the tension breaker.\n\n\"But Tabs, I also see the little girl I helped get dressed for school in the morning. The one that held my hand whenever we crossed the street and wore Wonder Woman underoos. It's kinda fucking me up a little, you know?\"\n\n\"Yeah, I know,\" she smiled. \"But you still, you know, want me too... don't you?\"\n\nZero doubt there. \"Definitely,\" I nodded quickly.\n\n\"Good. Me too. Would it help any if we turned off the lights?\"\n\nI shook my head. \"Uh uh, then I'll be more likely to think about you when you were little. I need to see...\"\n\n\"...boobs?\" Tabitha inserted with a wry grin, and it made me chuckle again.\n\n\"Close enough. Yeah, they do kind of help.\"\n\n\"Glad to hear it,\" she smiled brightly but was soon serious again. \"Look, I'm your littler sister, Molly. With all the history that implies. There's just no getting around it. Just like you'll always be my big sister. My sophisticated, sexy, big-brained, workaholic sister.\"\n\n\"Sexy huh?\" I smirked and finally crossed the room to sit next to her on the bed.\n\nShe sat up and nudged my shoulder with hers. \"Yep. Incredibly sexy. I've jumped on every decent looking redhead I could get my hands on since I hit high school. I've got a thing for redheads, you know.\"\n\n\"Oh,\" I pouted a little, \"so that's why you're attracted to me?\"\n\n\"No silly,\" she rolled her eyes like she was talking to someone very slow, \"you've got the order mixed up. I'm attracted to redheads because...\" her small, warm hand found the side of my neck and traced up and down, \"...because I've wanted you.\"\n\n\"Seriously?\"\n\n\"Yep. Sheez, you're smart but you're a little thick sometimes.\" Her hand drifted up to twirl one of the dangling red curls next to my face. \"So how about this? How about we just call tonight a trial run? We have fun, real fun, and do all the stuff we've been cooking up in our heads.\"\n\n\"I don't know about you, but that's a lot of stuff,\" I admitted, smiling and she nodded along with me. \"And tomorrow? What then?\"\n\nTabby shrugged again. \"When we wake up in the morning, all sticky and smelly and satisfied, we figure out what we want.\"\n\nI shook my head slowly, \"You've always been a huge...\"<br />\n\n\"Slut?\" she half-smiled.\n\n\"...procrastinator,\" I snickered, \"but I like your trial idea a lot.\"\n\nAs proof, I started to unbutton my pajama top but she stopped me. Tabby nudged me onto my back on my own bed and smoothly straddled my waist. Her glorious breasts swayed from above as she did it. They were very tempting. But her little mound was open too. Her puffy lips were split and puffy and glistening because her legs were splayed so widely.\n\nIt was a tough decision. I chose boobs and reached up for them with itchy fingers.\n\n\"Nooo,\" she caught my hands at the wrists and tossed them back onto the bed, \"you've had your groping fun already. It's my turn now. Your job is to lay there. And cum. A lot.\"\n\nShe reached down and continued unbuttoning my pajama top, then bent forward to kiss my collarbone. She licked along it, her tongue warm and wet against my bared skin.\n\n\"Let your hair down for me at least, please?\" I asked politely as she lapped at me. I was afraid to move my hands now.\n\n\"What's the deal with you and my hair anyway?\" she murmured between kisses at my breastbone. \"Yours is just as nice as mine. Just different.\"\n\n\"Uh uh, yours is straight and it's soft and it's pretty and it smells really good and...\"\n\n\"Okay okay, here,\" she tipped her head down towards me so I could reach her elastic.\n\nI tugged it free and her hair, brassy gold now in the thin light, fell on my skin like heavy silk. She didn't stop me when I reached up and ran my fingers through it.\n\nTabby kissed her way down to my top's last button then sat up and sucked in a long slow breath. She grinned evilly and flipped both sides of my pajama top open to bare my chest, two small mounds with skin as porcelain white as the rest of me.\n\nMy sister licked her lips as she eyed my chest and I felt my cheeks getting hot. Great, now I was blushing.\n\n\"Wow,\" she half-smiled saucily, \"speaking of stuff that's just as nice as mine... these are some lovely tatas.\"\n\n\"Tatas?\" I burst out laughing, \"did you seriously just call my boobs 'tatas'?\"\n\n\"Yep, these are definitely tatas,\" her hands crept up to caress them carefully, wow her hands were so warm and so soft, \"and call me crazy, but I've always suspected they'd be really, really sweet too.\" She looked down at my chest and licked her lips again. \"They are sweet aren't they? I just bet they are. Guys must have told. Go on admit it.\"\n\n\"Maybe a little,\" I smirked. My smirk fell with my jaw as I watched my sister bend forward, her mouth slowly lowering to my left breast. Her tongue, her long tongue, snaked out and licked a slow, perfect circle around my nipple.\n\n\"Oooh,\" I whimpered. She twirled around it several more times, making me dizzier with each spin before she sucked it into her mouth. It yanked the breath from my chest.\n\nMy sister slowly drew down harder on my breast, suckling now, her cheeks puckering in, and I panted shallowly as she pulled on it hungrily. I felt my nipple begin to swell further and further, growing heavy and thick. Within the perfect vacuum of her mouth, her tongue started flicking back and forth across it. It sent sparks up and down my spine and a yawning heat bloomed between my legs.\n\nShe switched to the other breast, but not before nibbling a wicked goodbye to the first. She kissed and sucked at the second one until both my nipples stood long and hard and full. By then she was purring as she reared back to admire her handiwork.\n\n\"I've thought about this a lot, Molly. Getting my mouth on your chest. Actually, I nearly did it once when you were sleeping. You came home drunk from a party, stripped naked and flopped down on your bed. I heard the thump and came to check on you. You were so out of it that you never managed to get under the covers. You were just laying there unconscious and naked on your back, with one leg swung wide open. Everything was on full and juicy display. Quite a show, sis,\" she snickered and licked a few times at each of my nipples before continuing her confession.\n\n\"You have no idea how hard it was to walk away from you like that. I was so close to sneaking in for a quick lick of my big sister's beautiful little muffin. I wanted too soooo bad. I went back to my room and made myself cum three times that night thinking about you.\" She rolled her eyes and sighed.\n\n\"Whoa, I had no idea, Tabs,\" I marveled.\n\n\"Mmhmm. It's been a long wait but I'm finally going to do to you what I should have done that night. Ready?\" she smiled slyly over my breast.\n\n\"Yes please,\" I pleaded giddily.\n\n\"Never had another girl do you before right?\"\n\n\"Uh uh.\"\n\n\"Good. You're really going to like this,\" she said confidently.\n\nI laced my fingers deeper into her silky hair, \"Promise?\"\n\n\"Oh, I promise. In the way only a Macallan sister can promise.\" Her impossibly long tongue flicked out to bat at one of my nipples a few more times. Then she kissed her way down my stomach, pausing to dip and twist her tongue into my belly button.\n\nA flirty comment she made in the shower earlier came rushing back. \"Was that what you meant before about being willing to stick your tongue in places on a girl you wouldn't go near on a guy?\"\n\n\"Uh uh, not even remotely close,\" she snickered as she lapped back and forth at my bare skin just above the waist of my pajama bottoms. \"Hips up, cutie.\"\n\nI lifted my butt off the bed and my sister very slowly dragged my bottoms down. She followed their descent with equally slow licks at the skin she uncovered. She was taking her time, teasing us both, stretching it out.\n\n\"You're awfully smooth, sis. Aren't I going to hit fur anytime soon?\" She pouted.\n\n\"Nope.\"\n\n\"Awwww, I like red fur. S'my favorite color. Ever since I saw yours that one night.\"\n\nShe grinned as she licked leisurely back and forth over the smooth expanse of my bare mound that she was uncovering as my pants eased downwards.\n\n\"Sorry, sis, you're a week too late. Nothing's left.\"\n\nHer eyebrow cocked up, \"Brazilian wax?\"\n\n\"Close,\" I said, my voice getting tighter as my pants kept sliding lower and her tongue followed, \"sugared brazilian.\"\n\nMy soggy underwear clung to my wetness and Tabby tortured me by tugging at them just gently enough for the suction to pull at my sticky lips without actually separating.\n\n\"Looks like somebody's very excited about the idea of being eaten by her baby sister,\" she teased wickedly while staring intently between my legs.\n\nMy panties finally popped free and Tabby admired my hairless slit with greedy eyes, \"Oooh, wow... I mean... I knew you'd be... but wow.\"\n\nI twisted my hip, trying to hide myself, suddenly bashful. \"The girl at the salon was really thorough, she worked on me for awhile.\"\n\n\"I wasn't talking about the sugarjob, sis,\" she said quietly. \"I was talking about you. Seriously. You're beautiful. Even down here. Small and pale and delicate. Soft pinks and roses. Your lips are so slender, so pretty. You may just have the perfect pussy,\" she smiled up at me.\n\n\"Um... thanks I guess?\"\n\nI held my breath as my sister leaned forward and licked the ticklish hollow to the side of me. I snorted and fidgeted. I was about to beg her to get on with it, to quit torturing her poor, needy sister, when her warm tongue dragged lightly up my lips.\n\n\"God yes,\" I moaned, arching up to meet her mouth eagerly. I held my breath as her tongue split me open and began softly wandering through my folds.\n\n\"Mow er mater?\" she asked, her question muffled between my legs.\n\nI was too lost in what she was doing.\n\n\"Do you want to cum now or later?\" she asked again, pulling away from me a little when I didn't manage to answer. Her skillful little licks were already driving me crazy.\n\n\"Both,\" I whined greedily. Her tongue was coming close to my clit but steering just clear of it. Maddening.\n\nShe giggled as she continued exploring me with those wonderful little licks. \"Alright, but please remember you asked for it.\"\n\nHer tongue finally swirled over my sensitive button and I saw stars. In another minute, the entire spinning galaxy came into view when my sister set up a very practiced rhythm of twirls and circles over it. Her hands came up to stroke my hips tenderly as she ate me. Yeah, Tabby had done this before. My little sister knew how to please another girl. It was easily the best oral I'd ever had.\n\nThe funny thing was that she was just getting started. As she warmed up, and warmed me up, she began to wriggle her tongue down to play at my entrance every once in awhile, pressing a little more insistently at my opening each time. After several visits, she sank it into me slightly and I twitched as her tongue twisted and curled just inside.\n\nShe went back to licking at my clit for awhile only to return and wriggle her tongue into me again. Then there was more licking. Then more wriggling. She switched back and forth easily, but the wriggling dug a little deeper each time.\n\n\"Ugh,\" I finally groaned as she sank her tongue deep, insanely deep inside me, and I lost the ability to talk without panting, \"Wish... huh... done this... huh.. earlier.\"\n\nShe answered between a series of firmer licks at my button that made my spine tingle more. \"Meh, better late than never, Moll.\"\n\nShe moved a thumb to my clit and began to rub it in lazy circles. It freed up her tongue and she winked up at me as she slowly sank it into me again.\n\nYep, I was screwed. Sex with a man was never going to be the same. No man's cock could twist and curl inside me like my sister's insane tongue.\n\nTabitha's touching and licking worked together. A lovely cum loomed. My insides were clutching spastically around her tongue as it speared gently in and out of me like a bendable cock and her thumb continued its patient circling.\n\nIt was coming. Soon now. The first orgasm my beautiful little sister would ever give me. I'd waited for this for years, dreamt about it, masturbated to it as my most secret and perverse fantasy.\n\nI sank into one of my most depraved memories -- I'd made myself cum after helping Tabby pick out the underwear to wear to her senior prom. I'd pretended to forget something in the dressing room while she paid at the cash register. Ducking into the tiny dressing room, I jerked up my skirt and made myself cum in ten seconds, reliving the last hour of my gorgeous teenage sister modeling a dozen different panty sets.\n\nThe memory of that hasty, guilty orgasm connected with Tabby's perfect tonguing now and launched me into a gigantic climax.\n\n\"Fu-u-u-uck,\" I hissed, my hips rolling up off the bed and into her face all on their own as my body went haywire. Tbby knew just what to do. Her small warm hands slid quickly under me to cradle my ass and support my body in midair as the peak twisted its sweet, hot joy in my belly. Her tongue popped free, leaving me to twitch and spasm emptily, and she slid up to my clit.\n\nMy sister didn't stop licking as I came. She continued swirling her tongue over my hypersensitive bud, almost torturing me as my orgasm stretched out further and further until I was wincing. It was an insanely long ride.\n\nThe crazy part is that it never really ended, not completely anyway. Because, still holding my hips up off the bed, using gentle rhythmic laps, Tabby pushed me through that first cum and urged me towards another one, using my first climax as a springboard for a second, even better cum like I sometimes did for myself when I masturbated.\n\nThe next orgasm would be even bigger. It's how it works for me anyway and somehow my sister knew it. Or maybe all girls were the same? I had no idea and right then wasn't the time to ask.\n\nThat's when my sister started doing something new and even better than what she'd done before. She stopped licking and started rolling her tongue in these impossible waves against my sensitive bud. No guy had ever done anything like it for me before.\n\nHoly crap, Tabby was really, really fucking good at this.\n\nThe next orgasm started unfurling in the base of my back, my muscles knotting up and quivering, winding up for a serious cum. Tabby's rolling tongue dragged me steadily towards it. It was going to be a doozy just like I expected - the kind I can only have after a smaller cum first paves the way and gets me ready.<br /> <br /> I grit my teeth, panted through my nose, reached down with both hands to cup her head and twisted my fingers into her buttery soft cornsilk hair. Tabby's eyes glinted happily up at me over my twisting stomach as her tongue kept rolling against my clit, driving me closer and closer to a gigantic climax.\n\nA creeping numbness began to work its way inwards from my fingers and toes. Soon I couldn't feel my arms or knees either. My body was gathering itself up for something outrageous. Fuck, this was going to be good.\n\nI ground my hips into her face even harder, chasing her tongue, greedy for the orgasm she was about the unleash.\n\nClose. So close. \"Jesus effing... hyuugh hyuugh,\" I hissed, trembling in the near dark and clutching at her head as I teetered on an immense brink.\n\nThen the teetering was over and I was falling. It was an epic cum that made my toes curl and my scalp tingle. My spine was just a giant electric highway, a pleasure conduit for the ecstasy rushing up and down from my brain to my pussy. Holy fucking hell. I didn't fight it, I simply came and gulped for hair and quaked. It barely registered that one of Tabby's hands came up to rub my belly affectionately, stroking it as my body heaved its sweet release.\n\nWhen it was over and my back finally gave out, she set me down on the bed again. I was still catching my breath when she used her hands under my butt to roll me over like a pancake. As I panted facedown into my pillow, she moved to sit up and straddle my ass then started rubbing my shoulders.<br /> <br /> \"Oooh,\" I moaned softly into the pillow. Holy crap, that felt good. Her hands were like magic.<br /> <br /> \"Good?\"\n\nA few heartbeats thudded in my chest before I could speak. \"You mean the backrub or the sex?\"\n\n\"Heh, the back rub. I could kind of tell you liked the sex.\"\n\n\"The rubbing's awesome, are you kidding me? A backrub after oral sex?\"\n\n\"Sure, why not?\"\n\n\"You guys need to list this on your brochures. You'd get a lot more recruits if the rest of us knew.\"\n\n\"And by 'you guys' you mean...?\"\n\n\"Lesbians.\"\n\n\"Heh, that may be 'us guys' now, sis.\"\n\n\"Owie,\" I giggled weakly, \"guess I walked right into that one didn't I?\"\n\n\"Pretty much.\"\n\n\"Fine, you win. Just keep rubbing.\"\n\nI felt myself melting into the mattress while my sister massaged me, the wonderful glow from two orgasms becoming a bone-deep satisfaction with the help of her soothing strokes. I groaned as she finished working at my shoulders then slowly made her way down along my spine.\n\nIt felt so good that I didn't budge when the phone next to my bed rang.\n\n\"Voicemail,\" I muttered into my pillow. But I felt Tabby lean over to look at the phone anyway.\n\n\"I can see the caller id, sis, and you're not going to believe this,\" she giggled, \"but it's Dad.\"\n\n\"Seriously?\" I tensed up automatically, pulling my arms into my sides.\n\n\"Relax, he's three thousand miles away, he can't actually see what we're doing, dummy,\" she snickered. \"And here, only bad girls ignore their daddies.\" She plucked the cordless phone out of the cradle, pressed it to my ear and clicked it on.\n\n\"Oooh, you little...\"\n\n\"Molly?\"\n\nToo late. \"Hi Dad. Everything okay? It's after midnight your time isn't it?\"\n\n\"Eh, old folks don't sleep. You'll find out someday.\"\n\nIt was a lovely thought and I let his optimism dangle in the air longer than I should have. Your average eldest Macallan daughter bites the big one well before she hits fifty. Mom was a perfect example. Gram had probably set a family record at seventy-eight.",
        "\"Yeah, well, here's hoping,\" I said lamely.\n\nMy dad knew this was awkward and he moved onto a better topic. \"I'm just remembering to warn you that your sister will be swinging by soon. She said something about dropping in on you.\"\n\n\"Too late, Pop. She's already here. In fact, she's rubbing my... leg... right now.\"\n\nExcept it wasn't my leg she was rubbing. It was my butt. Tabitha had continued her massage while we talked, easing slowly down my back, and didn't hesitate for a single moment when her hands crossed my hips. She simply dug deep into the muscles of my ass and kneaded.\n\nSweet Mother Macree, a butt massage too? That would definitely have to go in the lesbo brochure.\n\n\"You guys go running? This time of year, I do envy the San Francisco weather. We got three inches of snow this morning.\"\n\n\"Yep. We overdid it a little too. I felt a hammie cramp coming on and now Tabby's abusing me.\"\n\nTabitha snickered softly and stopped rubbing my butt. The sick part is that I was about to cover the phone's mouthpiece and whine about her stopping when she bent down and started kissing me there instead. I gasped as my sister's soft lips pecked all over my ass cheeks.\n\nOf course, our father heard my gasp. \"Sounds like Tabby's getting even for all the cruelties you used to dish out when you two were little,\" he chuckled.\n\n\"Yep, she finally admitted today that she's been waiting to do this to me for years now.\"\n\nThe fact that the three of us laughed, each for our own reasons, made the whole situation that much more absurd. Things got more ridiculous when Tabby started mixing licks in with her kisses. Her tongue was hot and smooth on my soft butt skin. Her licks started stretching out longer and the kisses got more scarce.\n\nJesus, my kid sister was licking my ass.\n\n\"Well, you kids play nice. I'm glad she made it out to see you. You're good for your sister, Molly. I worry about her antics sometimes.\"\n\n\"Yeah, well, did it ever occur to you that she might be a bad influence on me, Dad?\"\n\nTabby rewarded my cheeky question with a nip to one of my buns that made me giggle before I could bite it back.\n\n\"Nope, not really.\"\n\n\"Great, glad to hear it, Pop.\"\n\nI jerked limply when Tabby paused with her nose in my crack and snorted warm air into the tight space. I held my breath. My heart raced. She wouldn't... would she?\n\nShe would.\n\nAs my insanely perverted sister's tongue teased slowly into my butt crack for one long, languid lick that slid directly over my backdoor, it was all I could do not to simply drop the phone.\n\n\"OkayloveyougottagoDadbye,\" I sputtered and clicked the phone off then flung it across the room\n\n\"Smooth exit, Molly,\" Tabby giggled. \"And for the record, this is what I meant about putting my tongue in places on a girl I wouldn't go near on a guy.\" She paused to lap in my crease again. \"Like it?\"\n\n\"God yes,\" I admitted quickly.\n\n\"What is it you like?\"\n\n\"Your tongue.\"\n\n\"And what's my tongue doing now, sis?\"\n\n\"Rimming me.\"\n\n\"Mmmhmm, that's right. You know, for the record, even your rosebud's pretty.\"\n\n\"You're sick.\"\n\n\"Naughty,\" she corrected me quickly, punctuating her lesson with a firm, tongue twist at my pucker that made me shiver.\n\nI'd had men touch me there, even let a few press a finger inside when the sex was good and I was feeling wild. Once, I'd even come close to letting a boyfriend wedge his slightly undersized tool in there. I'd chickened out at the last minute though.\n\nBut no man had ever offered me this. Not licking.\n\nTabitha pressed her face further into my ass and lapped again and again. Soon, I was gasping facedown into my pillow with my gorgeous sister drilling her tongue against my rear entrance.\n\n\"Uuuuugh,\" I grunted softly as her tongue started to win out against my slowly loosening rose. I could feel her begin to sink inside me. I shuddered as she explored further and further into my opening ring, twisting and twirling within then pulling back out only to circle my rim then ease her tongue right back in again.\n\n\"Uuuuugh,\" the sound slid from me as a softer whimper that time. This was sick and wrong and hot. Ready for the crazy part? I reached back and pried my own butt cheeks open for her. She didn't have to ask.\n\nTabby took it for the signal it was and that's pretty much when she started fucking me. With her tongue. In my ass. It was nasty and raunchy and sheer heaven. Like nothing I'd ever felt before. I let her do it. I laid there and let my dirty kid sister drive her tongue in and out of my twitching backdoor.\n\nGood lord, Tabby was just chock full of surprises.\n\nUsually my best orgasms, like the ones she'd given me earlier, start in my spine. Right around the small of my back. This time, something intense was building up further south, in my hip bones. She was taking me somewhere new and different.\n\nWith time, I relaxed into Tabby's eager plunderings at my forbidden hole. I slipped a hand under myself, hoping to play at my clit for the little something extra I needed to get off - the match for the giant, gasoline-soaked orgasmic bonfire that my talented sister was piling up inside me with perverted glee.\n\nMy fingers never found their mark. Tabby reached beneath me from below and batted my hand away before I'd even managed to get near myself. She replaced my hand with her own.\n\n\"Oh girlie,\" I eked out as her thumb began sweeping slowly back and forth against the top of my slit, brushing my sensitive bud just barely enough to add heat to her tongue's endless drilling. It made my breath come in small shallow puffs.\n\nMy sister's voice was pure honey, \"Yeah sis, I know. Just relax and enjoy, okay?\"\n\nI nodded, shuddering and moaning as my sister pleasured me in this new and insane way. My clit and my softening sphincter were linked now and my body became an instrument, one that Tabby played beautifully.\n\nMy wicked little sister kept licking and worming at my rear hole, playing with the ring she'd patiently loosened, all the while stroking my tiny, hard nubbin steadily with her little thumb. She took her time, letting me get lost in the depraved carnal symphony she was playing just for me.\n\nIt was a long and glorious performance before she made me cum.\n\n\"Tabbeeeeee.....\" I whimpered into my bed, then barely managed to suck in a big breath. And I came. The orgasm was outrageous. I clawed at the bedspread and had to gnaw on a corner of my pillow to keep from shrieking. My gorgeous younger sister had heaved me up into heaven; I quivered and mewled my way back down to earth.\n\nI was dizzy when it was over and barely managed to roll onto my side.\n\n\"Not bad for my first time, huh?\" Tabby slid up behind me and spooned herself in comfortably.\n\nI had to brush loose hair from my face to talk. \"Please, that was clearly not even close to your first time.\"\n\nTabby giggled and pulled the covers up over us then hugged me tighter to her, \"I meant my first time with you, sis.\"\n\n\"Ah, gotcha.\"\n\nWe cuddled in the quiet, letting the warmth of our snuggled bodies deepen and she held me as I recovered. Tabby even knew just how to let me enjoy the post-cum glow, to let my jangled nerves settle from all that stimulation. Whether she knew because she was another girl or because she was my sister, I wasn't sure. I also didn't care. I loved it either way.\n\nIn time, a different kind of hunger won out. I pulled one of her hands to my mouth, it reeked of me, and I kissed it. I actually licked and sucked at the thumb she'd masturbated me with. Part of me knew it was sick but the other part told me it was right. For us anyway.\n\n\"Okay, Tabs, your turn,\" I whispered between licks.\n\n\"Really?\" she asked the back of my neck. \"I mean, you don't have to sis, I'm fine.\"\n\n\"No way, I'm not missing out on this chance. If you change your mind tomorrow I might never be able to again. I've... I've waited too long for this, Tabby.\"\n\n\"No argument here. But maybe let me go trim up a little first? I feel bad about\u2014\"\n\n\"Uh uh,\" I spun and stopped her with a kiss. \"I want you just like this.\"\n\nShe smiled. \"Okay. Be my guest. But Molly? Can I ask you for a favor? No cheating this time okay? With the time-freezing thingy, I mean. Don't get me wrong, what you did to me on the floor in front of the TV was fantastic, but I want to enjoy the build-up now. I want to savor this. You know, I've had to wait a long time too.\"\n\n\"That's fair, okay, no 'cheating', as you call it.\"\n\nI ducked beneath the covers and I paused long enough at her chest for some soft warm kisses and quick fondles of her heavy, oversized breasts.\n\n\"I'll be back for you girls later,\" I whispered to them politely. Tabby's giggle from above told me she'd heard me, so did her gentle pat on my head through the blanket.\n\nI kept sliding down, smooching at my sister's smooth, tight belly, mixing kisses with licks. As I moved lower, I tried to nudge her onto her back with her legs open.\n\nInstead, Tabby rolled further onto her side and flipped the blankets off us.\n\n\"I know this sounds silly, Moll, but I really want to see your face too. After dreaming about this for so long, I don't know, I need to know it's real.\"\n\nStill laying on her side, Tabby swung one knee up, opening herself for me and I looked down. What lay between her legs was a smooth, beautiful, lightly blonde and pale pink invitation, already puffy and slick with need, and I moved closer.\n\n\"Oh Tabs, wow, that's... that's just... wow.\"\n\n\"Thanks, I feel bad about being all fuzzy though,\" my sister's voice broke in through my daze. \"Have you ever...\" her obvious question about my experience at what I wanted to do next trailed off.\n\n\"No.\"\n\n\"I can teach you if you want, Molly,\" she offered softly. \"Want me to? Want your baby sister to teach you how to make her cum with your mouth?\"\n\nHer dirty words melted over my brain like something thick and sweet and I nodded, licking my lips and drawing closer, hypnotized by the tender, glistening lips of my sister's pussy. I could smell the sweet and musky tartness that waited for me there. Lemons. She'd taste a little like lemons there too, I just knew it.\n\n\"Then look at me, Molly.\"\n\nMy eyes didn't move. \"I am. I am.\"\n\n\"No, up here at my face,\" she giggled. Her head was resting sideways on a pillow and she smiled down at me. \"Now, watch my tongue.\" It flicked out through her lips, snapping softly up and down. Up and down.\n\nI rested my head sideways between her legs too, my ear pressed into the smooth skin of her inner thigh, and touched my tongue to my sister's beautiful blonde sex for the very first time.\n\nHer downy fuzz tickled my lips and I instantly drowned in the tart, sweet taste of her. I locked my eyes on her face and watched one corner of her mouth twitch when I curled my tongue up and down in her softness several times like she'd shown me.   \n\n\"Oooh yeah, nice and soft, Moll. This is even better than I imagined it would be,\" she sighed.\n\nShe reached down to tuck a stray curl behind my ear and ran her fingers through my hair as I continued rolling my tongue up and down her delicate folds. Things were getting wetter already, partly my drool and partly her juice. She nodded and moaned softly when I finally returned to lightly snap my tongue up and down over her clit like she'd shown me, pressing just firmly enough that I could feel the tightness of her tiny knot.\n\nShe groaned happily again. \"Okay, now try this.\" She started flicking her tongue sideways. Tabby's lips pursed and she shuddered when I duplicated it between her legs. \"Perfect, sis. You're a natural.\" She scratched my head lightly and smiled again.\n\nIt made me laugh a little into her mound, \"This is kinda fun.\"\n\nTabby nodded dreamily and scratched my head again, \"How's this for sibling bonding?\"\n\nI giggled harder into her mound and the odd sensation made her giggle too.\n\nThat's what my first time eating another woman was like. Tender and slow and patient. Tabby cooed and smiled and pet me as I experimented, curling my tongue this way and that in the musky, tart wetness of her little pussy. I switched back regularly to the sideways licks she asked for just to keep her excitement up.\n\nEventually, Tabby's pretty face took on a rosy blush, her eyes closed, and her mouth hung open. She was getting closer, ready to cum.\n\nI reached up with my free hand to palm one of her enormous breasts. She pulled my fingers to its tiny pink nipple, already hardened to a firm, fleshy nubbin, and coaxed me into rolling it between my fingers again. When I did, she nodded and caught her lower lip in her teeth. Her face reddened more.\n\nI was going to make my first girl cum with my mouth. And it was my own sister, the same one I used to do my homework with at the kitchen table while Dad cooked dinner. For a moment, I was back at that table, watching her puzzle out her algebra, her face squeezed tight in concentration, her little tongue slipping absently to the corner of her mouth as she focused on her math.\n\nThe history, the intimacy, of that memory didn't scare me anymore. In fact, it sweetened everything right then. Made it richer. Fuller. Deeper. Tabitha and I were connected in a way I would never know, could never know, with anyone else. Sisters are sisters. It's special.\n\n\"Alternate now, Molly,\" came Tabby's breathless plea from above, \"It'll make me go. Always does.\"\n\nI did as she asked, snapping my tongue up and down then sideways against her rigid clitoris. It was hard as a pebble now, full and free of its little protective cover and a deep and luscious berry pink that made my mouth water as I licked it. Tabby's fingers in my hair curled inwards as her excitement rose, her fingernails biting into my scalp. I lapped at her tightened bud more firmly, pressing it against the bone beneath, driving her to her orgasm.\n\n\"Yessssss, Molly, yessss, go on,\" she whimpered, \"make me cum. Make your baby sister cum. Just like she was meant to. Just like she's always hoped.\"\n\nHer eyes were shut now and she trembled and sank her fingernails harder into my scalp, hard enough to moisten my eyes. I sucked her battered little button between my lips, and rolled it gently. It made Tabby's hips jerk into my face. I didn't pull away though. I wanted more. I reached behind her still sideways-resting body and squeezed her upturned ass cheek, sinking my nails into the toned muscle of her little cheek and pulling her harder into my mouth, sucking and rolling at her clit to urge her on.\n\nTabby went rigid, then gasped, then her body pitched and twisted. And then she came.\n\n\"Maaaaaahleeeeeee,\" she wailed, quivering as her orgasm took her, hunching into my face, using my hair to pull me into her. My little sister used me for her pleasure, grinding herself against my mouth. Several long moments went by as she shivered and humped, a slave to her gleeful climax.\n\nEven after she relaxed slightly, I carefully lapped at her hypersensitive bud a few times for good measure. It made her quiver at each of my tender little pulls. It was an insanely powerful feeling, controlling my sister's entire body with the tiny morsel trapped between my lips. I chanced a few gentle suckles at her clit before I eased up, worried I'd overdo it.\n\nI was wrong. \"More,\" Tabby whimpered when my mouth finally came away.\n\nI wasn't sure I'd heard her right. \"More?\"\n\n\"Yeah, again,\" she panted and reached back for my hand. I had just started caressing her deeply scratched butt cheek with it, worried about what kind of marks I might have left. \"I can go again... sort of like you did... hurry... like this.\" She circled my first two fingers and tugged them quickly to her front then steered them to her entrance.\n\n\"In,\" she mewled, sinking my fingertips inside herself. She was soaked, swollen, and blazing hot inside. \"...more... please Molly, more...\" she fidgeted and humped eagerly, tugging at my wrist, trying to draw my fingers in.\n\nI sank further inside her, feeling post-orgasmic twitches nip and squeeze on my fingers, amazed at how puffy and hot her walls had become. Her juices dribbled down my wrist. She snorted when my fingers were completely inside her and the webbing between my second and third finger rubbed at her clit.\n\nI started to ease my fingers out, intending to push them inside again for the fucking motion I assumed she craved. I assumed wrong.\n\n\"Uh uh,\" she stopped me and pulled my fingers into herself again with a groan. \"Curl 'em... your fingers... inside.\"\n\nI did, grateful I didn't have long fingernails, and she trembled at the searching stroke of my fingertips, \"Ooooooh, right there,\" she mewled.\n\nShe was softer there. Spongy.\n\n\"Rub,\" she gasped weakly. \"Rub and you'll make me go again. Bigger.\"\n\nSure enough, I stroked and she trembled again even harder. Holy crap this was hot.\n\n\"Can I?\" I leaned down to blow warm breath gently on her clit again, scared to touch it but eager to pleasure her in the best way possible.\n\n\"Yeah... both... even better... fucking hell, you're good at this for a newbie,\" she giggled insanely.\n\nI glowed at the compliment and began to softly, barely lick at Tabitha's already abused clit with just the tip of my tongue. I licked gingerly as I stroked her tender insides with the pads of my fingertips.\n\nI had a front row seat to my sister's epic unraveling; licking and massaging the walls deep inside her clenching and unclenching pussy. One of her hands flew down to cover mine on her breast, forcing me to squeeze it viciously, sinking our interlaced fingers deep into the firm pillow of her perfect young tit. Her other hand clutched at her own forehead, as if this was all too much to take. It worried me.\n\n\"Am I hurting you, Tabby?\"\n\n\"Fuck no,\" she rasped, \"don't stop.\"\n\nSo I didn't stop. I licked. I massaged. I squeezed. I watched carefully as my young sister's face twisted more and more tightly in sweet agony. I felt her pussy spasm and clutch harder on my fingers.\n\n\"Molly?\" my beautiful, trembling sister gritted out through tightly clenched teeth.\n\n\"Yeah sweetie?\" I asked between my tiny licks.\n\n\"Seriously...best sister ever...\"\n\n\"Me?\"\n\n\"Yeah.\" She smiled even broader.\n\nThen I watched her nostrils flare, her mouth fall open and her breathing get ragged.\n\n\"Ooooooooooooh,\" she groaned and stiffened and came again.\n\nTabitha's body didn't explode. Not on the outside, anyway. My poor little sibling was just too exhausted for that.\n\nInside was another story completely. Her cunt walls shuddered and rolled, sucking and gnawing and drooling on my fingers, and wetness streamed down my wrist. I wriggled inside her gently and she shivered, legs twitching limply on the bed. Her grinning face twisted up in what looked close to pain so I stopped licking her.\n\nShe sighed relief but nodded and kept shivering as I fingered her gently through her cum, kissing and nuzzling at her softly furred mound as I slid them in and out. I pumped at her softly until the little mouth of her pussy finally stopped its spastic squeezing.\n\nI slid my hand free and we both lay like that, panting, for several minutes before I scooted up along her body.\n\n\"Not coming up?\" she asked when I stopped at her chest.\n\n\"Nope, I promised them I'd be back later, remember?\"\n\n\"Fine, but your face has got to be all wet with cooter juice,\" she giggled weakly as I slowly traced the undersides of her breasts with my now-aching tongue. Being a lesbian required more tongue stamina than I'd expected.\n\n\"I don't mind,\" I murmured, lost in her chest now. I pressed my face between them, felt their warmth cover my nose then press into my cheeks on either side. I kissed her breastbone and puffed my hot, pussy-scented breath into her chest and rested there, buried in my sister's boobs and smelling her tangy-sweet smell. Wow, this was nice. No wonder guys like tits.",
        "\"So which is it you like better Moll? Your little sister's hair or her boobs? I've always wondered.\"\n\nI reluctantly pulled away far enough to talk over her supermodel mammaries, \"For looking? Your eyes. For touching? Your hair. For licking... well...\" I lapped at a breast to make my point.\n\n\"Nicely put,\" Tabby giggled and patted my head as I wriggled a hand under her other breast and cupped them both, really feeling them in my hands for the very first time.\n\nI asked the question I'd always wanted to aske, \"How do you walk around with these things anyway?\"\n\nShe snickered tiredly, \"C'mon, a 'C' is not that big.\"\n\n\"Bullshit. They feel damn big to me, and they're huge on little you, and you know it.\"\n\n\"Maybe,\" she admitted. \"I guess I just have decent back muscles. Feels good to have you touch them,\" she purred. \"Lick them a little more? It's kind of relaxing.\"\n\nAs if I needed the invitation. I settled in and kissed at every inch of smooth, tanned skin on her breasts I could reach, then circled one of her little pink nipples between my lips and licked its firm tip lazily while cupping it gently. Her hand found the back of my neck and cradled my head as I dragged my teeth over her nubbin then tenderly suckled. I let her first breast go only to wriggle down to her other one and give it the same soft treatment -- cupping, licking, nipping and suckling until my sister's breathing had become the smooth and even rhythm of near-sleep.\n\n\"I don't need to wait until tomorrow, Molly,\" she whispered dreamily when I finally scooted up all the way and she nuzzled herself into my throat. \"I know what I want. What I've always wanted. I'm just surer now, sis.\"\n\n\"Me too, Tabby. Me too.\"\n\nAs I fell asleep with my face in Tabby's hair, breathing its lemony smell in and out like incense, I knew I wanted more of this. Needed it. Needed her. I didn't want to go back to the way things were yesterday. I couldn't go back.\n\n~*~*~Part 06~*~*~\n\nA few stray morning sunbeams on my face woke me up. Tabby had already hidden from them under the blankets and her face was pressed into my bare stomach. She was snoring, and her vibrating lips tickled against my belly in a nice way. I pet her head and let her tickling drag me from sleep's fog.\n\nNow wide awake, I contemplated waking Tabby too. If I did it nicely, maybe offering to start some loving again, she'd know how I felt about the night before without me needing to say it again.\n\n\"Gr\u00e1 r\u00fanda?\" I whispered softly to see if she was awake. I'd have to teach Tabby what that meant. She deserved to know.\n\nI stroked down my sister's smooth shoulder and across her back to see how she would react. The limpness of her warm body and her deep, blissful snoring told me she was exhausted. She needed her rest. We could talk when she woke up.\n\nI stretched my toes leisurely and enjoyed the quiet, petting Tabitha's wild gold mane a little while longer before I slipped a pillow under her head and carefully snuck naked from the bed.\n\nI had to do something with all this energy. I pulled on running clothes, waiting until I reached the front door to put on my shoes to keep from waking Tabby, and trotted out into the street.\n\nMy feet felt light, my legs strong. The morning air helped, sweet and cool in my lungs as I jogged. It was one of the best runs I'd had in a long time.\n\nA lot of it was Tabby. My head and heart were clear finally. After years of my lies and self-denial, Tabby knew how I felt about her. Well, apparently she'd known for some time.\n\n\"Uasc\u00e1n,\" I heard my grandmother chuckling in my head. Yeah Gram, I guess I can be pretty dumb.\n\nThe most amazing part was that Tabby felt the same way about me that I felt about here. If we had wasted time with confusion or doubt then we could make up for it together. I was done running away from my sister.\n\nIn fact, I smiled as I jogged along, I was literally running towards her right now. I'd wake her and tell her again how I felt -- that I couldn't live without her like this. That I hadn't started living, really living, until last night.\n\nThis was like a fairy tale.\n\nThat thought twisted a cold knife into my stomach as I rounded the last corner onto my street. Irish fairy tales, the real ones, don't always have happy endings. As a people, we have a pretty dark sense of humor.\n\nIt was Tabby, the real-life Tabby, who chased my worries away. I looked up from my feet and saw her waiting for me by the curb. She'd figured out I was jogging and came outside to wait in one of my slinkier robes, a creamy white satin one that hit her mid-thigh and showed plenty of cleavage. The neighbors were getting an eyeful.\n\nI saw Tabby was holding two mugs too. Wow, she'd even made coffee. Yep, one more reason to love her.\n\nI waved to her from half a block away and she managed a small wave back with her mug-filled hands.\n\nThe funny thing was that a trash truck driver behind her waved to me too. He was working his way up the street. I smiled and waved again and he waved back.\n\nThat's when a big yellow ball bounced out into the street across from Tabby, the kind you get at the supermarket for a buck. Tabby didn't see it. Neither did the truck driver. He was almost cross-eyed, trying to ogle my sister from behind and ogle me, jogging right towards him.\n\nFuck. Everyone knows that where there are bouncing balls there are bouncing children. It's some kind of sick rule.\n\nAnd here he came, a little toe-headed deathtrap. Right between two parked cars and darting out for his cheap-ass ball.\n\n\"No! Nononononono!\" My lips could only make one useless sound over and over.\n\nThe truck driver finally saw the little boy and began to swerve away from him. His truck was heavy and slow.\n\nHis turn was towards Tabby. Towards my sister. Towards the woman I loved.\n\nBy then I wasn't running, I was sprinting. Sprinting and waving like a madwoman. I half-listened behind my ears too. Enough to know there was no knot coming for me to use to lock up this whole fucked up situation and figure a way out. No, of course not.\n\nHelpless. Nothing to do.\n\nAnd suddenly I was twelve years old again and watching my Mom throw herself from the car to stop time and save a busload of innocent children.\n\nNow it was some clumsy tyke with a little yellow ball. Seriously, one way or the other, it's always the damn kids that do us in.\n\nI couldn't let Tabby go. Not Tabby. Not now. I'd only had one day with her. I'd waited a whole lifetime for one day.\n\nMy chest tightened. I would do what Mom did. For Tabby. Only for Tabby. I skidded to a stop, took one good, deep breath, and, in my head, I reached for the sacred rope, the whole silk rope of time. The one that pulls literally everything.\n\nIt's what we're never supposed to do. Not without paying the steepest price.\n\nHeat bloomed behind my eyes for what was coming. I didn't need a mirror to know they'd be blazing. Not the bright green of the soft old hills like Mom's. Mine would be the roiling black gray of the northern Irish seas at winter, terrible and merciless. Like Gram's would have been at her glorious end.\n\nNow.\n\nI squeezed the forbidden rope, squeezed and pulled. And felt nearly nothing. It was like yanking on an aircraft carrier. How the hell did Gram or Mom ever manage it? If they did, I could. I squeezed harder.\n\nThat's when I felt the real burning start. It drove me to my knees. My skull filled with lava and lit my brain on fire. I gasped but still somehow managed to squeeze tighter. My stomach heaved and I tasted bile. Still, I squeezed tighter. Holy hell, even my fucking teeth hurt.\n\nFuck you world, I squeezed even tighter.\n\nEverything was slowing, the air was thickening in the telltale cooling candlewax way. I could feel it. Almost there. I dug deeper and squeezed again. That's when I felt an ominous wetness begin to drip from my nose and my ears. I hissed and squeezed one last time. When I opened my eyes, nothing was moving.\n\nTabby.\n\nI could barely form the small thought through the pain. If I could just get to her and pull her a couple of extra feet away from the curb, she'd be okay. It's all that mattered now. I rose shakily to my feet and started stumbling towards her, my legs barely listening.\n\nI felt a gentle push at my back.\n\nGo dtabharfaidh m\u00e9 aire do Tabby. I will watch over Tabby.\n\nIt was my heart promise, the one I'd made years ago to my Mom to look after my sister. It couldn't be broken. It bound me, steered me, guided me -- now when I needed it most. When she needed it most too.\n\nI reached my sister, grabbed her round the waist and dragged her dead-weight body, coughing and wretching miserably as we went back towards my front porch. Blood dribbled from my nose and spattered across her clean white robe. When we were both well clear of the road, I collapsed at her feet, spent.\n\nReds and blacks swirled into my vision as everything restarted. The trash truck skipped the curb where Tabby had been standing then swerved its way back onto the street, missing the little boy too. I never saw him or his stupid yellow ball again.   \n\nYou're welcome you little fucker, I though bitterly.\n\nTabby fell to her knees beside me, guessing what happened. It wasn't hard to figure out. She'd been down by the curb one moment and several feet away the next, with her nutjob sister twitching on the ground beneath her.\n\n\"How bad?\" she sniffled, \"Like, Mom-level bad?\"\n\nI could barely move my head to nod. \"Pretty much. I kinda think I stopped the whole shebang from spinning for a little bit. Gram would be proud,\" I tried for a tough-girl smile then coughed. I had to swallow something chunky that came up with it. That couldn't be good.\n\nTabby sobbed openly now. \"Not fair. Not fair. Just one day? Not fair!\" Her lips, so soft and warm, pressed against my cold, sweaty forehead, and a few hot tears fell on my face. \"Molly, don't get mad, but Gram taught me something...\"\n\nThrough a slowly thickening haze, I watched Tabby bite into her own lip until it bled. She spat into her palm and looked down at me with worry, \"I don't care what happens now, Molly. One day's just not enough.\"\n\nShe mumbled a prayer and swung at my hand laying limp in the grass, clapping us together palm-to-palm. My hand was already smeared with the blood that had been leaking from the various holes in my head. Our blood merged with the clap -- fae blood met fae blood.\n\nThere was a deep, thunderous crack so loud that it thumped in my chest and echoed down the street. It was a sound that probably hadn't been made for centuries. Thirteen of them, I guessed dizzily.\n\nSo much for subtle.\n\nTabitha began to chant, sing-song, like a little girl, \"As ucht \u00e1r gcomhfhuil agus in am an gh\u00e1tair, glaoim ort, a Bhrighde. A Bhrighde, imp\u00edonn d'in\u00edonacha deireannacha cabhair uait.\"\n\nI was delirious. What had she just said? 'from common blood and desperate need?' Oh god, my sister didn't speak Gaelic, she didn't know what she was doing.\n\n\"Tabby?\" I sputtered. \"You're summoning...\"\n\n\"...Brighde. I know. Shhh, it's the only spell Gram taught me. She said to use it when things looked hopeless. That because we'd be the last Macallans, Brighde might answer. Molly, I don't want to scare you, but it's time to use it now.\"\n\n\"Sweetie... can't just call a goddess...\"\n\n\"I COME,\" a powerful voice echoed from a distance.\n\nOkay, maybe you do, I thought dizzily. I could barely keep my eyes open now, they were so heavy. Maybe a nice little nap. Just a quick one. A tiny snooze.\n\n\"Stay Molly. Don't go. Not yet. Wait just a little longer.\" Tabby rocked me in her arms.\n\nThen I saw her across the street, our mother. She shimmered in from the east. It was her, but not her. I watched, stunned, as she padded towards us lightly, barefoot. Everywhere she stepped, asphalt or concrete, it didn't matter, green grass and heather grew.\n\nSweet heaven, a goddess, a real and true goddess.\n\nTabby, what have you done?\n\nBut the Mother of All Ireland was not angry. In fact, her face was serene and smooth as she came to kneel beside Tabitha. When she bent over me, the tips of her gold hair brushed my face. Power crackled along my skin at the slight touch, old and deep and true Power.\n\nI looked up and tried to smile. She was beautiful, lit from behind by the morning sun. She looked just a little like Tabitha now, or rather Tabby looked like her. And all I could smell was heather and sweet grass. It was much better than the coppery stench of blood I'd been choking on.\n\n\"YOU KNOW THE LAW AND BROKE IT. WHY?\" kind eyes older than stone asked, lips unmoving.\n\nThere was only one answer worth the breath I had left. I rolled my eyes towards my sister, \"Gr\u00e1 r\u00fanda.\"\n\nTabitha finally found her voice. It was tight with fear, cracking as her words came tumbling out, \"If she dies, it ends with her, Great Mother. I will give you no children. The Macallans and your boon go with her.\"\n\nBrighde's eyes never left me, ignoring my sister's outrageous threat, and she spoke aloud, \"REST NOW, MOLLY OF CLAN MACALLAN. REST AND BE WELL. FOR THE LAST OF MY FAVORITE DAUGHTERS AND FOR A LOVE LIKE THIS, EXCEPTIONS CAN BE MADE.\"\n\n\"Exceptions?\" Tabby whispered hopefully.\n\n\"OF COURSE, EXCEPTIONS WOULD HAVE... CONSEQUENCES.\" The last thing I saw was the way her nose twitched, just the way Gram's used to.\n\nThen I heard Tabby's voice turn cautious, \"I'm listening.\"\n\nThat's when everything went gray. Then black.\n\n~*~*~Part 07~*~*~\n\n\"Hey, you,\" Tabby whispered, her smiling face inches from mine when my eyes slitted open against the bright hospital room lights. She reached up to gather a few of my sloppy curls and she tucked them behind my ear. \"How do you feel?\"\n\n\"I know how I feel,\" I winced and struggled to sit up. \"Like shit. What I want to know is, how do I look?\"\n\nHer smile spread wider, \"Well, I was sort of hoping that you felt better than you looked.\"\n\n\"Funny,\" I started to smile too but stopped because my lips were too dry and tight to do it without splitting. \"So, either of us dying?\" I asked lamely instead.\n\n\"Nope, looks like you're exhausted but healthy, but...\" she glanced at the hospital bed next to us where a middle-aged women was reading a book, and dropped her voice, \"...we need to do a few things. I made Grandmom Brighde a couple of promises. There was a lot of blood around. They were those kinds promises.\"\n\nShe looked at me meaningfully, as if I couldn't crack the code on who Grandmom Brighde was or what one of those promises were.\n\nI nodded and it made my whole head hurt, \"Well?\"\n\n\"We, uh, need to go back to Ireland.\"\n\n\"That's not so bad, it'll make a nice vacation in the spring when...\"\n\n\"To live,\" Tabby said quietly.\n\nLive? In Ireland?\n\nHome. Some part of me understood that, even though we'd never been there, for Tabby and me, Ireland was home.\n\nI nodded. Ireland it would be. I didn't really care where we went so long as we were together. Flying away with my sister sounded perfect actually.\n\nFlying away. Butterflies. The notion of flying made me smile and I reached forward to my sister. She looked at me oddly as I traced a few fingers across her stomach and I toyed with the little gold charm in her navel there beneath her blouse.\n\n\"You were right, sis. In the shower, I mean. We're butterflies. How many different ways have you tried to tell me how you felt over the years?\"\n\nHer eyes misted up as she squeezed my hand. \"Thousands.\"\n\nShe smiled but her mouth tightened again. \"There's more though. And it's trickier.\" She squeezed my hand harder. \"Molly, we need to have kids. Both of us. Daughters.\"\n\n\"Well, that's not so...\" I trailed off as the reality of it set in. \"Oh.\"\n\nKids meant men. Marriage. Families. My stomach knotted. The life, whatever it might have been, that I dreamt of living with my sister, just the two of us, the life I'd tasted for less than a single day, and that, amazingly, she seemed to want too... had slipped through my fingers.\n\nStrike that, our fingers.\n\nTabitha read the sadness on my face. \"What? Oh cheer up, sis, you're not pawning me off on some dumb man that easily.\"\n\n\"Huh? You just said we had to... how are we going to...?\"\n\nHer smile stretched into a grin as she leaned closer. \"Meh, we'll hit a few pubs and pick up a nice guy or two and let them have their way with us. We can even do that part together if you want. And we'll keep doing it until we have some little ones.\"\n\n\"Wow. Okay. When you say it like that, it starts sounding like fun.\"\n\n\"It will be, Molly. We'll raise them together too.\" She kissed me on the cheek, lingering just a little longer than a sister should, and I felt my stomach untie itself again. \"I think I can even get you to like children, Moll. Well, yours and mine anyway. I can't guarantee anything about other people's,\" she added cheekily.\n\n\"Promise? I mean, about the together part, not the kid part.\"\n\n\"I promise. In fact...\" she drifted further back, tracing a line with her nose back to my ear until I felt her breath on my neck. \"Okay, I wish I could do this in Gaelic. I know it would mean more to you but Gram said it would work in English...\"\n\nShe took a deep breath.\n\n\"I promise,\" she whispered, \"with my whole heart, with each beat, each ebb...\"\n\n\"Tabby, you don't have to,\" I tried to stop her.\n\n\"Shush,\" she sank her teeth into my earlobe to quiet me. \"I've wanted to do this for a long time. And now I have to start over.\"\n\nShe kissed my cheek tenderly.\n\n\"I promise with my whole heart, with each beat, each ebb, each flow, with all that I am and will be... .\"\n\nGreat big, messy, happy tears rolled down my face as my sister finished pledging her love to me until her dying breath. A sister's love. A lover's love.\n\nIn clan Macallan, a heart promise is the strongest of all. It's because we only get one.\n\nTabitha had saved hers for me.\n\n~*~*~*~\n\nAuthor's note: First off, bless you, dear reader, for making it this far. This was a labor of love and I'm grateful you stuck through it with me.\n\nIf you have a comment or criticism, I'd love to hear it. Please do it publicly though. My private feedback has never worked for whatever reason. Fair warning though, any posted comment that includes the phrase \"too long\" or variations thereof risks swift and merciless deletion. I did warn y'all about that up front. :-p\n\nBecause I've come to enjoy dishing questions to you guys: did anybody pick up on the symbolism lurking behind Tabitha being a photographer? I'm happy to say that most of my friends spotted it - more likely due to them being smart rather than me being a particularly good writer.\n\nThe attempted symbolism was twofold. First, Tabby is drawn to photography because it is essentially freezing time with each picture, the closest she'll ever get to Molly's ability. Second, a photograph saves something, preserves it, in a way Tabby wishes she could have done for her mom. Hehe, thinkin' porn. XD\n\nNow just go ahead and click on that nice little 5-star thingie. Super. Thanks.\n\nP.S. A very special thank you to one incredibly helpful Irishman who chimed in from the wilds of Rwanda to help me with Gaelic. As if third world relief weren't enough, he made time to stomp out one corner of this writer's boundless ignorance. I raise my glass to you, sir -- two fingers of good Irish Jameson's in your honor."
    ],
    "authorname": "PacoFear",
    "tags": [
        "fantasy lesbian",
        "fantasy romance"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/macallan-promises"
}