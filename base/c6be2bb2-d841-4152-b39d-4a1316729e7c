{
    "title": "Finn Ch. 10: Predator",
    "pages": [
        "The black Camaro was sitting in the driveway when he pulled up to the house. He rushed to the door, thankful to be home. When he didn't see her seated at the table or on the couch he immediately went into the bathroom, stripped and got in the shower. Even though he never thought at his age he would have a routine to follow, it was comforting knowing what was expected of him. He had become more confident in independently following her unspoken orders and longed for the praise she always provided when he did. After he toweled off he went to his room and knelt down on the floor to wait for her.\n\n\"Good boy,\" her voice came from the doorway. She walked to where he was and stood in front of him to buckle the collar around his neck. \n\nHis eyes wandered over her slacks, and he wondered what the punishment would be if he reached up and pulled them down then buried his face between her legs. But he didn't have permission to taste her, no matter how much he craved having her thighs trembling by his ears.\n\nHe followed her to the kitchen, grabbed their plates off the counter then set one on the table for her and sat down at her feet with his.\n\n\"From now on it is your responsibility to wake me up in the morning,\" she said, running her hand through his hair. \"I expect to be woken up at six thirty, and I expect to be woken up by your mouth.\" \n\nHe paused with his fork halfway to his lips, processing the semantics of her request. \n\n\"If you wake me up with the sound of your chains, you will be punished,\" she continued. \"I expect to come at least once by seven. If you make me late for work, you will be punished. On weekends, I expect to come more than once, but still expect to come once by seven.\"\n\n\"Yes, Mistress,\" he said, trying to calculate the specifics in his mind. \n\nAfter she was finished her fingers ran through his hair one more time before she headed down the hallway. The increasingly familiar daze started to seep into his head from where her hand had touched. He shoveled the rest of his food into his mouth then went to rinse the dishes. He had just shut the dishwasher when she came back in holding two familiar bottles in her hand.\n\n\"Come,\" she directed, sitting down on her normal spot on the couch and patting her lap. \n\nHe lay across her, pressing his hips into her thighs and his cheek against the couch. Blood rushed between his legs in anticipation of her hands massaging his healing wounds. Even though it had been a few days, the residual reminder of her authority still scorched through him every time he sat down. \n\nShe began rubbing the soothing balm into his skin and he sucked in a breath when she lightly squeezed his thigh. \n\n\"Good boy,\" she praised, the haze around his head thickening the more she rubbed. \n\nThe ache from several days of denial was throbbing, and he groaned softly into the leather cushion when she rubbed the lotion into it. He took another deep breath when her fingers pushed inside him and instinctively started rubbing himself against her lap. \n\n\"No,\" she scolded, bringing her hand down hard on his battered skin. \n\nThe sound of the slap made him jump and pain shot up his body from where it landed. But when her fingers slid into him again, he couldn't help himself. \n\n\"No.\" Her hand came down again, the loud slap echoing in his head. But this time he was prepared for the punishment and embraced it. \n\n\"Floor.\" \n\nHe rolled off her onto his knees, clasping his hands together in his lap.\n\nShe unzipped her pants, exposing her flesh colored strap-on. \"Do you like my cock?\" she asked, running her hand down it.\n\n\"Yes, Mistress,\" he replied, though the words sounded slurred. He wanted her inside of him, owning him. \n\n\"Come worship it, then,\" she said, still stroking it with her hand. \n\nHis lips brushed against the tip then he ran his tongue lightly down the side.\n\n\"You can do better than that,\" she scolded. \"You're a man. You should know exactly what my cock wants.\" \n\nIt had been awhile, but he knew what he would want if he was the one sitting on the couch. He wrapped his hand around it and covered the tip with his mouth, sucking lightly before sliding down it. When he pulled his head back he dragged it gently through his teeth. \n\n\"Good boy,\" she praised, and he ran his mouth down it again. Her hand grasped his hair, pushing him down to the base. He gagged when the tip hit the back of his throat, quickly pulling his head back only to be pushed down on it again. \n\n\"Do you think only half my cock deserves to be worshipped?\" she asked.\n\nHe shook his head, unable to speak with her filling his mouth. The saliva dripped down his chin, falling into his lap. \n\n\"Then stop fighting.\" \n\nShe was right. She owned his mouth now. It was hers to use as she pleased. He forced himself to relax his jaw and neck so she could use his mouth as she saw fit. Then it became easier, and when she let go of his hair he continued on his own, doing his best to earn the privilege of having her inside of him. \n\n\"Enough,\" she said, breaking his stroke. \"Turn around and bend over.\"\n\nHis cheek pressed into the hardwood floor, and he groaned when her slick fingers pushed into him. But he wanted more. He wanted to be filled and stretched and reminded he was owned. When her tip ran over his entrance he wanted to beg and plead for her to stop teasing and let him feel her penetrating through him. \n\nHe flinched when she pushed through his muscles, the feeling still unfamiliar. Then he relaxed and closed his eyes so he could focus on every inch of her slowly stretching him. \n\n\"Good boy.\" Her fingernails gently scraped over the wounds on the backs of his thighs, and he let out a breath when her hips pressed into his. She held her place inside him and he clenched down, memorizing how it felt to be filled by her.\n\nA half moan, half whimper escaped his lips when she started to move. Her hips connected with his at every thrust, reigniting the burn from his marks. His hand wrapped around his length but he paused his stroke so he could revel in the rhythm of her ownership.\n\nWhen the warmth started he knew the end was near but was desperate to prolong the feel of her ownership as long as his body would allow. \n\n\"Please, Mistress? Please can I come?\" he begged when the burn tore through him.\n\n\"Yes.\" \n\nHe was already dripping when the word came from her mouth and within seconds the intense heat was ripping through his body, scorching his muscles until they were limp and quivering. \n\nHe dreaded the feeling of her pulling out, leaving him empty and hollow. It was a feeling he hated, and his hand moved to his collar. The cool leather was soothing, reminding him he was still owned.\n\n**************************\n\nSoft buzzing woke him out of a sound sleep, and he lay staring up at the ceiling trying to figure out what it was. The grogginess drained from his body when he realized it was the alarm on his phone. He had set it to vibrate at six twenty so he wouldn't be late for his new task. He scooted as close as he could to the nightstand then sat up and bent down over it so he could turn it off with his chained hand. \n\nAfter the buzzing ceased he sat running his hand up and down the small amount of slack she had left in his chain, thinking about how he would get where he needed to be without waking her. At six twenty-five he got up and moved quietly down the hallway to her room. He paused at her cracked open door and grabbed his chain in his hands to keep it from clinking or running through the cuffs. \n\nThough he had been living in her house for over a month he had never been in her bedroom. Soft sunlight filtered through the cracks in the blinds, illuminating the space enough for him to see her closed eyes and the outline of her body beneath the white covers. \n\nHe crept to the foot of her bed, holding his breath, then knelt down and shoved his head underneath the covers. The mattress sank under his weight as he carefully tunneled closer to where his mouth needed to be. He froze, worried the movement would wake her, but her even breath told him she was still unaware of his presence. \n\nHer soft bedding caressed his hardening length as he scooted closer. He noticed she slept naked and ran his eyes over the parts of her he would soon be tasting. He continued wriggling forward on his stomach, avoiding touching her bare legs, until he was close enough to reach what he needed. \n\nHis tongue ran over her lightly, avoiding any areas that would be too sensitive. He imagined if he shocked her awake the punishment would be brutal. So he stayed low, teasing her opening then running his tongue lightly around her lips. It didn't take long for her legs to move, inviting him into the areas he had been avoiding. His mouth followed her unspoken orders, and her legs shook in response.\n\n\"Good boy,\" she murmured, bringing her leg over his head. \n\nHe rolled onto his back and she rolled onto her stomach, pressing herself into his mouth. His arms wrapped around her, pulling her down towards him. Her hand slid underneath her stomach and wrapped around his hair, gripping it tightly in a fist. She moaned into the mattress, her need dripping down the sides of his face. \n\nHis need pushed against the covers, lifting them away from his body. But it would be ignored and turn into an ache when it was suppressed. It throbbed more at the thought. Her muscles tightened and she sucked in her breath. When he didn't hear the air flow back out between her lips he knew, and he tightened his grasp to keep her from pulling away from his mouth. His tongue managed two more passes before her body attempted to involuntarily jerk away from it. But he was a good boy, and he knew not to lose contact before she was done. \n\nWhen her body began to relax again he moved his tongue back to where he had started, savoring as much of her taste as she would allow before telling him enough. After a few moments she rolled off him and made her way to the bathroom. The clock by her bed read six forty-seven.\n\n**************************\n\n\"Can I ask you something?\" he started, staring at Ian from across the table. Ian's openness made him feel more at ease, and he needed someone to talk to. So when his mistress had informed him she wouldn't be home for dinner, he had asked if he could see if Ian was busy.\n\n\"Of course,\" Ian replied.\n\nHe ran his hand over his naked neck. He hoped once he chose his twenty-four/seven collar the anxiety he felt when he wasn't with his mistress would subside. \"How did you choose your collar?\" \n\n\"It was a compromise,\" Ian said after a moment of thought.\n\n\"What do you mean? I thought the slave had to choose it.\"\n\n\"Technically, that's true,\" Ian started, shrugging his shoulders. \"I wanted chastity but she felt the cage thing was too clich\u00e9, so we compromised.\" \n\n\"Why would you want chastity?\" he asked, surprised.\n\n\"It's just what I wanted,\" Ian said, shrugging again. \"I don't think anyone could explain to you why they choose what they do. It's something you just know.\"\n\n\"Well, I have no clue.\" He had been thinking about it since he made his decision but had been unable to come up with any option that sounded even mildly appealing.\n\n\"You'll figure it out. And once you do, it'll make perfect sense- at least to you. And that's all that matters,\" Ian assured him.\n\n\"Do you know what options I have?\" Maybe there was one he hadn't thought of. He wasn't very experienced in the lifestyle so his knowledge was limited.\n\n\"Well, let's see...There's chastity, various piercings- I know guys who have both nipples and their dicks pierced and then they tie them all together...\" Ian paused and looked to the side, thinking. \"...Cages that go around your nuts, some of which can be pretty brutal. Her will, urethral plugs\u2014\"\n\n\"Her will?\" he interrupted.\n\nIan glanced over his shoulder around the restaurant to see if anyone was eavesdropping on their conversation. \"That's how some of us in the community refer to a butt plug.\" \n\n\"Oh.\" He followed Ian's lead but didn't see anyone looking their way.\n\n\"If a man has a feminization fetish,\" Ian continued, \"his collar may be women's underwear or something like that. Guys who enjoy CBT\u2014\"\n\n\"CBT?\" he interrupted again, grabbing his drink.\n\n\"Cock and ball torture,\" Ian elaborated. \"They usually like shock collars.\" \n\n\"Wouldn't those be noticeable in public?\" he asked, his hand going to his neck when Ian gave him a strange look.\n\n\"They don't go on your neck, Finn,\" Ian said, his eyes briefly glancing down towards his groin.\n\n\"Oh, I guess that makes sense,\" he said, embarrassed at his ignorance. \n\nThey paused their conversation long enough for the waitress to put down their food plates. Though Ian had given him a longer list of options, there still weren't any he felt drawn to.\n\n\"How did you and Madame Lexi meet?\" he asked, wanting to change the subject. \n\n\"We worked together,\" Ian replied, taking a bite of his mashed potatoes.\n\n\"Oh, what do you do?\"\n\n\"I'm the principal at a junior high. She was working as a long term sub\u2014\" he stopped for a second as if the words sounded strange. \"Substitute teacher, obviously not the other kind of sub,\" he corrected himself. \"Then she lured me into her world.\"\n\n\"Lured you in?\" he stopped sawing at his steak and looked up.\n\n\"Ya, that's what they do.\"\n\n\"What do you mean?\" \n\nIan put his fork down and tilted his head to the side, chewing on his lower lip. \"How did you and Mistress Morgaine meet?\" \n\n\"She went to my high school but I didn't know her,\" he explained. \"Then I picked her up at a bar a little over a month ago.\"\n\nIan raised his eyebrows. \"You picked her up at a bar?\" \n\n\"Ya, I mean, she was there and I went to talk to her,\" he said, remembering the brief conversation they'd had that night.\n\n\"What bar?\"\n\n\"Tiny's Bar. It's just a small bar out in the middle of nowhere. My friends and I go all the time.\" At least, he used to go with them. \n\n\"Was she with anyone?\" \n\n\"No.\"\n\n\"Huh.\" Ian thumped his fingers on the table. \"So you went to talk to her and then what happened?\"\n\n\"I took her to my house.\" Technically, he took her to his sister's house, but he doubted the specifics were relevant.\n\n\"So you're telling me a girl who looks like that just happened to show up at the small town bar you frequent, by herself, and you asked her to go home with you and she went?\" \n\n\"She was the one who brought up going home with me,\" he clarified, then realized it was more of an aggravating statement than a mitigating one.\n\n\"Wow,\" Ian replied, exaggerating the word as it fell from his mouth. \"Doesn't get much luckier than that, does it?\" \n\n\"Guess not,\" he said, running his hand over his neck.\n\n\"So she followed you home...\" Ian said, motioning for him to continue the story. \n\n\"No, she came with me in my truck.\" He thought back to that night and remembered walking her out to the parking lot. He hadn't noticed a Camaro and imagined a car like that would have stood out.\n\n\"Huh,\" Ian grunted again. \"So what happened when you got her home?\"\n\n\"It didn't go very well,\" he admitted, still running his fingers over his bare skin. He hated thinking about that night. It reminded him of how lost he had been.\n\n\"Oh?\" Ian said, feigning a look of shock.\n\n\"Ya, she stormed out.\"\n\n\"She just stormed out into the night with no car?\" It was clear Ian was done pretending he was listening to a plausible story.\n\n\"No,\" he said, shaking his head. He took a deep breath and let it out, knowing Ian was trying his hardest not to laugh. \"Someone was there to pick her up in a white SUV.\"\n\n\"Oh.\" Ian began running his hand over his chin. \"You know, my queen drives a white Subaru Outback.\" \n\n\"Huh,\" he replied, nodding. He pushed himself back in his seat, his hand falling from his neck to his lap, and laughed. It had never crossed his mind before, but looking back, why would she go to a bar when she had an entire harem of men at her disposal, all well trained and eager to please in any way she desired?\n\n\"So they hunt down prospective slaves?\" he asked, clarifying the obvious.\n\n\"Didn't you know domme is synonymous with predator?\" Ian said, still laughing.\n\n\"How do they know who would be interested?\" \n\n\"I make no claims to know their methods of assessment.\" \n\n\"I just don't get why she would pick me.\"\n\n\"I don't know, but congratulations. We are some of the lucky few,\" Ian said, raising his glass to toast their good fortune.\n\n*********************\n\nIt was Saturday morning and her legs were still not fully functional thanks to the new morning ritual she had implemented. She shakily made her way down the hall to the kitchen to start breakfast. After having her body's energy supply drained by two orgasms, all she could think about was how good scrambled eggs and bacon sounded.\n\nHe wandered into the kitchen while she stood at the stove stirring eggs in a pan. She could feel him fidgeting behind her, and after a few moments of enjoying his discomfort she turned to acknowledge his presence.\n\n\"Mistress...\" he started, running his hand over his collar.\n\n\"Yes?\" \n\n\"My uncle just text me asking if I can go check the fence on one of the ranches this morning. He said he can't get ahold of anyone else and they're releasing the lake tomorrow so we need to make sure the fence is sturdy before it's under water.\"\n\nShe stared at him for a minute, assuming he had told her an abbreviated version of the request since it made absolutely no sense. \"Releasing the lake?\"\n\n\"Yes, Mistress. Every year, right before it starts to rain, they open the dam to drain the lake down so the rainwater won't cause it to overflow and flood the houses nearby,\" he explained, still nervously touching the silver studs on the collar. \"When they release the dam the majority of the water fills up a small lake on one of my uncle's ranches. So we always make sure the fence is good so when we bring the cattle there we don't have to stand in the middle of a lake and fix fence when the water starts to drain off in the spring.\"\n\n\"Oh,\" she replied, removing the pan from the heat.\n\n\"I'm sorry, Mistress. I know it's Saturday and I wanted to spend the day here\u2014\"\n\n\"No, you need to go.\"\n\n\"Yes, Mistress,\" he said, then headed towards the table. \"Mistress?\" he asked, turning back towards her.\n\nShe turned away from the bacon sputtering on the grill to look at him.\n\n\"Do you want to go with me?\"\n\nHer gaze went back to the strips twitching and jerking as they cooked. Her mouth almost immediately told him she had other responsibilities she needed to take care of, but her heart stopped her from speaking the words.\n\n\"As long as you promise to bring a horse that won't buck me off,\" she said, moving the bacon to their plates.\n\n\"I promise, Mistress,\" he replied, his smile covering half his face.\n\nAfter breakfast she pulled on one of the few pairs of jeans she owned along with a long sleeved shirt. The weather was already changing from warm summer into cool fall, and where they were going it would be even colder. She grabbed a hooded sweatshirt to take with her and put on a pair of old running shoes since she didn't own any boots. She twisted her hair into a long braid down her back then went to his room to take off his collar.\n\nIt wasn't long before they were pulling up the dirt driveway of his parent's place. Unlike her house there were no orchards, just pastures with horses and chickens roaming free. He wound down the path to the barn where a stock trailer was parked, and turned his truck around so he could hook up. \n\n\"Are your parents home?\" she asked, waiting to see someone come out of the house.\n\n\"No, Mistress. Ever since my dad retired they travel a lot.\" He got out of the truck and she heard the squeak of the trailer being cranked down. She turned in her seat to watch him hook up the chains, then he disappeared she assumed to go catch the horse he promised wouldn't buck her off. ",
        "She scrolled through her phone until he climbed back in the seat next to her. He grabbed the cowboy hat off his dashboard, shoved it down on his head, smiled at her then shifted into gear and headed back down the driveway.\n\nThey made their way down the back roads, and she watched out the window as the green pastures and miles of orchards flew by. She had spent the past ten years avoiding this town, swearing to never come back. But there was no denying the beauty of the quiet countryside.\n\n\"Go Lions!\" he yelled as they drove past the high school.\n\nShe smiled and turned towards him. \"Do you miss being on top of the world?\"\n\n\"Sometimes. Life was so easy back then.\"\n\nMaybe for him. There was no amount of money anyone could pay her to go back through those blue hallways. \n\n\"I still can't believe I don't remember you.\"\n\nIt was a line she had heard him say before. \"I didn't take many classes there.\"\n\n\"Why not?\"\n\nShe sat staring at him, wondering how she finally managed to make her way into the passenger seat of his truck, and also wondering why even after all these years it was still somewhere she wanted to be. He looked the same as he always had. His jawline was a little more squared, his body a little more filled out, but his smile and eyes would never change. She moved her gaze back out the window to watch Tiny's Bar disappear behind them. \"I took most my classes at the community college.\"\n\n\"Oh, I see.\" He smirked and pushed in the clutch, switching gears as they pulled farther away from town. \"You were one of those girls.\"\n\n\"One of what girls?\" Her head snapped back towards him, her eyes narrowed.\n\n\"The smart girls,\" he replied, then his smile faded when he caught her stare. \"It's okay. I already knew 'cause of the way you talk.\"\n\n\"What do you mean the way I talk?\" she drilled, turning her entire body towards him.\n\n\"You talk very correctly...\" he started, shoving his body as far against his door as he could. \"Please don't get mad,\" he continued, rubbing his hand against his neck. Then his lips parted into their charming smile, begging for her forgiveness. \"I like the way you talk. It's sexy.\" \n\n\"Sexy?\" She crossed her arms and tried to force her face to stay set, but it was a hard task. It was a strange feeling to want to touch someone so badly. His body was always calling to her, begging for her caress or her discipline. \"Are you sure it's the way I speak, or is it the things I say?\"\n\n\"Why do you do it?\" he asked, his expression becoming more serious.\n\n\"Do what?\" \n\n\"Dominate men.\" Now his smile was gone, his eyes darting quickly between hers and the road. \"I mean, I can tell you enjoy it, but I'm curious why.\"\n\nShe uncrossed her arms and looked back out the window for a moment, gathering her thoughts. \"Men are taught to be dominant from the minute they're born. They're taught to be in control of everything, including their emotions, at all times. They're biologically inclined to be aggressive, and also naturally physically stronger than a woman. So for a man to submit to me, to trust me enough to go against both nature and nurture to show me what he truly wants and desires, well, nobody could ever convince me there is anything sexier than that.\"\n\nHe slowed to a stop in the middle of the empty road and shifted the truck into park. He bent down over the seat, pressing his lips to her thigh before opening his door and stepping out. \n\nShe watched him through the window as he walked over to the barbwire fence that stretched as far as her eyes could see. Besides the fence and the old road in front of her no other signs of civilization could be seen. He unlocked a gate that had she not been there to see him open she would never have known was there. Then he climbed back into the truck, pulled through the gate and shut off the engine.\n\n\"Where are the horses?\" she asked when he swung open the trailer door and all that was inside was a four wheeler.\n\n\"You said to bring a horse that wouldn't buck you off,\" he replied, setting up two ramps behind the back wheels. \"Ol' Red here is the safest horse I own.\" \n\nShe stepped out of the way while he climbed on, backed down the ramps, then pulled up next to her.\n\n\"Are you ready, Mistress?\"\n\nShe sat down behind him and wrapped her arms around him, grasping the front of his shirt when the four wheeler jerked forward as he took off. \n\nThe cool wind whipped through her hair as he tore down the path. She looked to the side, staring out at the rolling hills. When he turned off the trail she held out her hand to let her fingers run through the tall stalks of wild wheat surrounding them. He weaved through the old oak trees, the gnarled branches reaching down like grasping hands as they flew by.\n\nThe air smelled fresh and green, like rich earth and sun drenched fields. Like how he always smelled. She ran her hands over his stomach while she watched the world flying by, moving them under his shirt so she could feel the muscles under his skin. She let her fingertips slide under the waist of his jeans before running them back up to his chest. His body was hers to touch, at least it was for now. She wanted to remember how it felt to have him at her mercy, even if it would only be for a short while. \n\nShe didn't know what he would choose as his collar. All she knew was once he was double collared she would no longer have an excuse to keep him in training. She wondered how long she could drag it out, prevent him from making a decision. But that would be unfair to him, and every time he nervously touched at his neck reminded her. \n\nWhen she looked ahead she saw they were reaching a cliff and wondered what was on the other side. It looked like the world ended there and they would fly off the edge then fall into the underworld. She closed her eyes and waited to feel the drop, but instead he turned and continued parallel to the edge. She looked back at where they had come from. All she could see was rolling hills, tree tops and blue with just enough white clouds to break up the monochrome sky.\n\n\"It's going to get bumpy,\" he yelled over the engine.\n\nShe clasped her wandering hands together then caught her breath as they bounced down the hill to the flat land below. The ground was covered in smooth rocks, and from the sand she could tell this was where the water collected every year. The four wheeler jerked and jumped over the rocks to the other side, the fence finally coming into view.\n\n\"We're being watched,\" he said, slowing down and pointing to a patch of trees.\n\nShe turned her head and saw a coyote sitting in the shade, intently observing their every move. She had fallen asleep to the yips of pups in the orchards surrounding her house more often than not. But those coyotes ran at the first glimpse of a human. Out here they were bolder, and the scavenger sat watching them as they slowly made their way down the fence line.\n\n\"As long as it's not a wolf...\" he said, turning his attention back to the fence.\n\n\"There aren't any wolves out here anymore.\"\n\n\"That's what they say...\"\n\n\"You don't believe them?\"\n\n\"No. I've heard them howling when I've had to come out here at night. It's the most terrifying sound I've ever heard,\" he said, then turned to look at her over his shoulder. \"Well, second most terrifying.\"\n\n\"What's the most terrifying?\"\n\n\"The sound of you coming through the front door, Mistress.\"\n\nShe felt the smile take over her face and laid her cheek against his back, wrapping her arms around his waist and holding tight as he sped off again.\n\n******************\n\nThe sun was fighting with the growing clouds to prove its dominance of the sky when they pulled back into his parents' driveway. He looped around and backed his trailer in where it had originally been then got out to unhook. She stepped out of the truck and began wandering around, glancing inside the red barn at the huge stacks of hay before wandering to the other side to see if a horse would come to the fence.\n\nWhen she turned the corner her heart skipped a beat. There it was, covered in a layer of dust as if it hadn't been moved in years. She slowly made her way closer, then reached up and ran her hand along the white aluminum of the gooseneck. When she reached the door on the side she let her hand drop and wiped the dust off on her jeans. \n\nShe curled her fingers around the door latch and pulled. When the door popped open she looked over her shoulder to see where he was. Squeaking came from the direction she had come from, telling her he was cranking up the stock trailer. She took a deep breath, her heart pounding as she peered inside.\n\nThis was where her mind had wandered to on most nights over ten years ago, even though it was somewhere she had never been. She stepped inside and ran her hand over the cheap counter tops, her eyes running over the small couch covered in a paisley print. He was the first cowboy in town with a living quarters horse trailer, courtesy of his parents, and the minute he turned sixteen and could pull it without their company the stories of what went on inside haunted her. \n\nIt was far from luxurious as she had often dreamt it to be. The bed in the gooseneck was tossed together with random blankets and mismatched pillows. Paper plates and plastic cups were stacked on the stained counter next to the tin colored sink. It smelled like old settled dirt that hadn't been disturbed in years. \n\nHer eyes fell on him standing by the door, watching her. \"What would you do if I was just a random girl you picked up in town today?\" she asked.\n\n\"You saw what I would do the night I brought you home from the bar. You weren't impressed, Mistress,\" he reminded her. \n\nHe was already going to take a thousand pieces of her when he left. What was one more? She pulled her shirt off over her head and tossed it on the couch, then stepped out of her shoes. Her hands reached around her back, unclasping her bra and letting it fall to the floor. She turned away from him, bending over to push her jeans and underwear to the floor. She climbed the three steps into the bed then sat down and turned back to face him, letting her legs dangle over the edge.\n\n\"What do you want to do to me, Finn?\"\n\nHe stepped inside and shut the door, clicking the lock into place. \"Please you, Mistress,\" he replied, his eyes trying to stay on the floor.\n\n\"Look at me, Finn.\"\n\nHis eyes wandered over her body, lingering on her exposed breasts. \n\n\"What do you want to do to me?\"\n\n\"Please you, Mistress.\"\n\n\"No,\" she said, slowly shaking her head. \"Tell me what you would do if I told you for the next hour I would allow you to do whatever you wanted.\" \n\nHe stood frozen, his hands clasped in front of him. \n\nMen were never good with words, which was why she usually didn't require them to speak more than two or three at a time. \"Show me, then.\"\n\nHe timidly approached her, as if waiting to see if it was a test. His hand ran lightly down her leg, and when she didn't punish him he moved onto the first step, this time running his hand up her thigh. By the time he reached the second step, he was getting bolder. He lightly brushed his lips against hers, grabbing her face between his hands. When he opened his mouth she followed, dragging her tongue over his then biting into his lower lip.\n\nHe pushed his mouth harder into hers and she pushed back, her teeth grazing against his. She began pulling at his shirt, trying to get the buttons undone, craving the feel of his skin against her own. It slid off his body and she ran her hands down his back, her fingers reaching underneath the waist of his jeans. They moved farther onto the bed, his lips never breaking from hers as he pushed her down underneath him. Her hands ran through his hair, knocking the hat off his head and sending it tumbling to the floor. \n\nHis mouth pulled away, moving to her neck. His lips lit up the nerve endings in her sensitive skin, his warm breath accentuating the tingle. His tongue traced over her collar bone before his lips began making their way down her chest. He moved to the part of her his eyes always devoured, his mouth covering the hardened peaks.\n\nShe wanted to grab his hair and pull him back up to her mouth, desperate for the feel of his weight on top of her. But she shivered when his tongue dragged down her stomach, his lips coming together and pressing into her skin as he made his way lower. She spread her legs in eager anticipation but he trailed his tongue down her hip to her thigh. His mouth made its way to her knee before moving to the other side and working its way back up the inside. His lips tickled against her, and she jumped when he skipped the last few inches and covered her with his mouth.\n\nHis tongue knew exactly where to go and that's where it stayed, softly teasing the sensitive skin above her clit. Her back arched off the bed, her hands grasping for his hair. He pushed his fingers into her, stroking them up and sending her arousal pouring down his hand. When the feel of his fingers disappeared she opened her eyes and watched him put them into his mouth, sucking them clean before burying his head back between her legs and pushing his tongue inside her. \n\nHer mind was too lost in the warmth of his mouth to notice him rolling her over until she found herself on her stomach. When his tongue pushed its way between her cheeks she moaned and raised her hips, pushing back into his mouth. He grasped at her with his hands, pulling her apart and circling his tongue over her. Her body trembled, her moans becoming more frantic. She wanted to scream for him not to stop when his mouth moved away, breaking contact momentarily before his lips pressed into the indents at the small of her back.\n\nHe continued up her spine, taking the time to circle each bump. By the time he reached her ear she was writhing beneath his touch, desperate to take back control. When she felt him pressing between her legs she shoved a pillow underneath her hips, raising herself just enough for him to easily slide inside.\n\nHis mouth trailed over the back of her neck as he pushed into her. The intrusion radiated through her, bringing a gasp from her lips. His mouth nuzzled against her ear as he thrust into her, his breath hot against her skin. Her hands grasped at the blankets, her moans turning into desperate cries when the ripples of heat started burning through her veins. His name and several other expletives poured from her mouth when the orgasm hit, and she groaned as he continued to drive into her, drawing out the sensation.\n\n\"Please let me come, Mistress,\" he begged into her ear, his fingers running down her arm then entwining in her own. \n\n\"Yes,\" she said, bracing herself for the impact of his desperate need.\n\nHe sped up his stroke, his fingers tightening around hers. She held her breath as he pounded into her, forgetting how rough a man could be when allowed to have control of the penetration. But his body sent tremors through her as it rammed into her own, and she pushed her hips up as much as she could until he was penetrating through her with intense accuracy.\n\n\"Wait... Don't come yet...\" she gasped, hoping she caught him in time. \n\n\"Please, Mistress!\" he begged, slowing down.\n\n\"No! Keep going!\" she yelled, then cried out when his body ripped through her again, his hips slamming down onto hers. \n\n\"I can't...I can't...Please, Mistress!\" his pleas continued in her ear, but it didn't matter anymore. \n\nHer body clamped down, every nerve surging through her like rolling fire. \"Yes,\" she whispered, forcing the word out in a breathless submission.\n\nHe shoved into her as far as her body would allow, his loud moan echoing through her. He pulsed inside her as he weakly continued thrusting until finally remaining still. His lips repeatedly pressed against her back, his weight pushing her into the mattress, his length still buried deep inside her. But she didn't tell him enough, because it wasn't. She wanted him chained and on his knees. She wanted him squirming and pleading and trembling. She wanted him crawling and shaking and begging. But above all those things, she wanted him inside her. "
    ],
    "authorname": "SyptemberSmyth",
    "tags": [
        "femdom",
        "female domination",
        "male submissive",
        "male slave",
        "pegging",
        "strap on",
        "cunnilingus",
        "mistress",
        "dominatrix",
        "oral sex"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/finn-ch-10-predator"
}