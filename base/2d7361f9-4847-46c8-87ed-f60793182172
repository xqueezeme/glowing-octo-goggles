{
    "title": "Annie & June Ch. 04",
    "pages": [
        "<CENTER>PREFACE</CENTER>\n\nThe following is a \"true story of my imagination\" and continues the affair between two nursing moms which began in \"Annie & June\". This episode focuses on day 2 of the weekend shopping trip the girls took in Chapter 3. In this chapter, chapter 4, Annie and June bring home a young salesgirl for more nursing moms lesbian fun!! As always, names, places, situations, etc. are all a figment of my imagination and any resemblance to someone or some place you know is purely coincidental!!\n\n<CENTER>THE WEEKEND SHOPPING TRIP \u2013 DAY 2</CENTER>\n\nJune woke first and a glance at the clock read 8:12 a.m. She turned and gazed at Annie who lay sleeping, uncovered. Annie lay naked with her legs spread slightly, her closed slit clearly visible through her bald pussy. June was exceptionally horny this Saturday morning and stared hungrily at Annie's bare pussy. She eased herself gently between Annie's legs and licked her slit lovingly. Annie groaned and turned her head as her legs spread wider. Her delicate pussy lips opened like a rose to reveal a moist, pink center. June's pussy spasmed, as she gently slid her hands under Annie's ass and dipped her tongue into the warm, moist center, before covering the pussy with her mouth completely and eating out her friend.\n\nAnnie was roused from a deep sleep by an overwhelming sensation to urinate. Waking fully, she realized it wasn't a need to urinate at all, but the beginning sensation of an approaching orgasm as June ate her pussy. Annie closed her eyes and smiled, as she reached down and placed a hand on the back of June's head.\n\nJune felt Annie's hand and glanced up at her. Annie laid there with her eyes closed in obvious pleasure. Neither spoke save for an occasional moan escaping Annie's lips. June continued her assault leaving no part of Annie's cunt untouched. She licked her slit, nibbled her clit and tongue-fucked her hole. She even grazed her anal ring briefly with her tongue. \n\nAfter a few moments, Annie's moans grew louder as her orgasm came over her. Through the climax, June ate her pussy, as Annie moaned loudly. Her eyes remained closed as her head flipped from side-to-side. Her fingers dug into June's hair as her other hand massaged her own breast. Her hips raised involuntarily in an effort to get more of her pussy into June's mouth. Finally, the orgasm subsided as June's tongue began to relax. When the orgasm was over, June shuffled up to Annie and kissed her. Annie tasted her own juices as their tongues danced. When the kiss was over, June spoke.\n\n\"Breakfast in bed!\" she said wryly. Annie laughed. \"So, you hungry?\" June said seriously.\n\n\"Mmm-hmmm,\" Annie replied. \"I could go for a Belgian waffle!\"\n\n\"Mmm, that sounds good. I'm going to shower. Wanna join me?\"\n\n\"Sure!\"\n\nThirty minutes later, the women were ready for a day of power shopping, among other things. As they walked hand-in-hand through the hotel corridors, they turned a corner and were met with Maria - the housekeeper from the previous night. June watched as the young lady eyed first Annie and then her. She smiled at June briefly before glancing at their locked hands. She turned and went back into the room she was freshening up as Annie and June made their way out of the hotel.\n\nOutside, the air was warm and dry, with just a slight breeze. Annie and June made their way through the parking lot and across the street. Still walking hand-in-hand, they made their way into the Tellville Pancake House. After a brief wait, they were seated.\n\nAnnie's eyes immediately found the Belgian waffle. \"Here it is,\" she said, \"Belgian waffle made from scratch and topped with blueberries and raspberries. Okay, I'm done looking!\" she said putting the menu down and staring at June.\n\nJune smiled and perused the menu, settling on two eggs over easy with hash browns.\n\n\"Are your ready to order?\" asked their gray-hair, plump waitress. \n\n\"Yes,\" Annie replied looking over at June.\n\n\"I'll have two eggs, over-easy, with ham,\" June said looking over at the waitress.\n\n\"White or wheat bread?\"\n\n\"Wheat,\" June responded.\n\nThe waitress stared at Annie. \"I'll have the Belgian with blueberry sauce and sausage links.\"\n\n\"Drinks?\" The waitress asked.\n\n\"Coffee for me,\" June replied.\n\n\"Orange juice...large,\" Annie answered.\n\n\"Thank you,\" the waitress replied and walked away.\n\nAfter a wonderful breakfast and conversation, Annie and June paid their bill and left a generous tip. Walking out hand-in-hand, they noticed a few of the other patrons staring at them. Squeezing each other's hands tightly, they exited the restaurant and burst into laughter, as they made their way to the shopping outlets.\n\nAfter several hours of shopping and trips to the van, both women looked at each other in exhaustion. \"Phew!\" June said, as she let out a deep sigh. \"I think I'm done!\"\n\n\"Oh, okay, but can we hit A Woman's Prerogative?\" Annie asked in reference to the woman's shop specializing in lingerie and women's delicate under garments.\n\n\"Oh, sure!\" June replied, as if she had forgotten about the shop and was suddenly excited to check it out.\n\nBoth women made their way into the shop and browsed its content. Annie selected several items, including two bras and several panties. June had selected several panties and was rifling through bras when a high-pitched, pert voice came from behind.\n\n\"May I help you find something?\"\n\nJune turned, as did Annie. Both stared at a beautiful but very young-looking woman, dressed in a black, two-piece suit. A lace camisole was barely visible underneath the short, buttoned-up jacket.\n\nAnnie and June stared speechless at the young woman for a second before June cleared her throat and said, \"You? You...work here?\"\n\n\"Yes,\" the young woman replied, with a quizzical expression, \"why?\"\n\n\"Oh...no reason...San-dy,\" June responded reading the saleswoman's nametag and then glancing at Annie for a brief moment. \"It's just...well...you barely look old enough to drive.\" The young girl was about their height, standing maybe five-two or five-three. Sandy had barely a waist to speak of, but a full, heart-shaped ass that filled her backside out nicely and balanced out a chest that supported grapefruit sized tits. Sandy was very young looking but strikingly beautiful nevertheless with porcelain skin, full round cheeks and a small mouth. She had a small, button nose that offset her round, innocent-looking blue eyes. Her shoulder-length, blonde hair was pulled back into a pony-tail, adding to her youthful appearance. \n\n\"Oh, yeah,\" Sandy replied, \"I get that a lot.\"\n\n\"So,\" Annie asked, noticing the small tattoo on the top of Sandy's hand, between her left thumb and index finger, \"how old are you exactly?\"\n\n\"Nineteen,\" Sandy replied glancing at Annie.\n\n\"Wow,\" June added, \"you don't look nineteen at all! Good thing, too, cuz age has a funny way of sneaking up on you!\"\n\n\"So I've heard,\" Sandy said. \"Uhm, so was there something I can help you find? You looked frustrated.\"\n\n\"Oh, well, I've always liked your seamless bras but I can't seem to find one my size.\"\n\n\"What size are you?\" Sandy asked beginning to rummage through the bras.\n\n\"She's a 36D,\" answered Annie, as Sandy stopped and turned to stared at her momentarily. Annie smiled before June responded.\n\n\"This is Annie, Sandy, and I'm June. And yes, I'm a 36D,\" June said as Sandy turned from Annie to glance back at June, a perplexed look across her face. \"I'd like a black one and a lilac one, if you have any my size,\" June added.\n\n\"I don't think there are any here, but I might have some in the back,\" Sandy replied seemingly flustered from Annie's remark on June's breast size. \"Let me go check,\" she added.\n\n\"Okay,\" June answered as she and Annie watched the petite girl walk away. Her firm, tight ass jiggled nicely with every step.\n\n\"Mmmm,\" Annie groaned just loud enough for June to hear, as both continued staring at Sandy's ass.\n\n\"You got that right,\" June whispered wickedly as they both continued staring at Sandy's behind until she disappeared out of sight. \n\nAnnie turned and leaned close to June. \"There's probably not a hair on that pretty, young pussy of hers. She probably shaves it clean like all the young women today,\" Annie whispered.\n\nThis time, June was the one to groan softly before regaining her composure. \"C'mon, help me go try some of this stuff on,\" she said as she turned and headed to the dressing rooms.\n\nThe dressing rooms were a series of large stalls with heavy curtains for doors. There was plenty of room for, both, Annie and June as June began to undress. \"Oh, god, that little girl has me so hot!\" Annie whispered staring at June.\n\n\"She's not so 'little' apparently,\" June replied gazing at herself in the mirror as the last article of clothing came off. \n\nSeeing June naked aroused Annie, as she moved into her. She wrapped her arms around June, just under her breasts and kissed June's neck, chin, and lips. Annie moaned again as they kissed softly, but when Annie moved a hand to June's breast, June broke the kiss.\n\n\"Annie, honey, let me try this on first,\" June replied matter-of-factly, and Annie backed off immediately, not wanting to make her friend uncomfortable.\n\n\"Sorry,\" she said putting her head down like a little girl who had just been chastised.\n\n\"No, that's okay, I just want to get this on first,\" June said, slipping on a baby blue, double-layered, full support sport bra and matching sport shorts. The full support pressed June's breasts together and up, causing them to look like two, large balloons. \"What dya think?\" she asked twirling into the mirror.\n\n\"Nice, very nice,\" Annie replied gazing lustfully at June's breasts. \"Think you can nurse in it?\"\n\n\"Idunno,\" answered June, \"let's find out!\" she whispered hoarsely as she turned to Annie and lifted the bottom of one side of the bra easily to release a plump breast. The nipple stood erect at the thought of what they were about to perform and where.\n\n\"But...I thought...,\" Annie replied in reference to June stopping her a moment earlier.\n\n\"I wanted to get this on first so we could...test it out,\" June responded. Then she added, \"Does my baby girl need some mommy milk?\" She teased her nipple.\n\n\"Ugh!!!\" Annie groaned and leaned into June who sat back on the built-in bench of the stall. Annie kneeled between June's spread legs and covered June's turgid nipple with her mouth. Her hand moving instinctually to June's other breast and releasing it from the confines of the bra so she could massage it as she sucked.\n\nThe letdown came immediately as Annie began to gulp. The sweet milk easily trickled over Annie's tongue and down her throat.\n\n\"Ugh!!!!\" June moaned. \"Yes!\" she hissed, \"My baby girl! Drink mommy's milk all up. It's all for you!\"\n\n\"Mmmm,\" Annie moaned as she gulped and stared into June's eyes.\n\n\"Yeah, that's it,\" June moaned, looking deep into Annie's eyes and caressing her cheek.\n\nBoth women were so aroused and engrossed in their lustful act that they didn't hear Sandy calling just outside the curtain.\n\n\"Excuse me,\" Sandy repeated politely.\n\nStartled, June glanced up and her eyes met Sandy's through the crack of the curtain's side-edge. June noticed Sandy peering into the stall, seemingly intrigued at what they were doing. \"Oh,\" she said stumbling a bit as she stood, forcing Annie to release her hold.\n\nAnnie saw the direction of June's stare and turned, meeting Sandy's eyes momentarily. She stood and slipped out of June's way as June lowered her bra and opened the curtain slightly. \"Uhm...yes?\" she asked, behaving normally but seemingly flushed and embarrassed. She didn't want to look at Sandy, but she knew she had to, so her eyes glanced up into the young girl's eyes.\n\n\"I...uhm...found what you were looking for,\" Sandy said with a touch of attitude in her voice and leaning on one side as she held up the bras by an index finger. A slight smile ran across her lips, as she stared at June as if contemplating something.\n\n\"Oh...uh...thanks, thank you,\" June replied flustered as she stretched out her arm and grabbed hold of the bras. \"Uhm...Sandy...'bout what you just saw...\"\n\n\"That's okay,\" Sandy quickly interjected. She stared deeply into June's eyes before adding, \"I understand.\" Then, she added, \"but you two should finish up trying on your stuff, don't you think?\"\n\n\"Yes, absolutely!\" June said without hesitation. Then glancing one more time into Sandy's eyes, said, \"thanks.\"\n\n\"No worries,\" Sandy replied and turned away.\n\nFlustered and embarrassed, June closed the curtain and said, \"Oh my god, that was close. We almost got in trouble, but I think she's gonna ignore it!\" She quickly undressed and put her clothes back on.\n\n\"Yeah, good thing she likes you,\" Annie remarked, grinning.\n\nJune stared at her while dressing. \"Do you want to try anything on?\"\n\n\"No, I'm pretty sure everything I got will fit. We probably should get out of here.\"\n\n\"Good idea,\" June responded gathering up her items and opening the curtain.\n\nBoth women came out to no one's gaze or attention. The store was busy enough to keep the clerks occupied at the register counters. June caught sight of Sandy helping a customer check out.\n\n\"Okay,\" she said smoothing out her appearance and adding, \"are we set?\"\n\n\"Yup,\" Annie said.\n\nBoth women made their way to the check out registers and stood in line. Ironically, the next available checkout was Sandy, who yelled, \"I can help who's next.\" Annie and June both stepped up to the register together, but Annie went first. \"Find everything you were looking for?\" Sandy asked.\n\n\"Yes, thank you,\" Annie replied with a smile. Sandy smiled back as she held up each article for folding before placing them in the bag. \n\n\"Oh, this is beautiful!\" Sandy said holding up a very sheer, powder blue, flyaway baby doll nightie with a single bow-tie at the bust line; which then draped loosely down to the hips. \"Someone will love this,\" Sandy remarked in fake reference to a male, as she glanced at both women and smiled.\n\n\"Yes, I'm hoping they will,\" Annie responded taking pleasure in the amusing game and glancing briefly at June, who was not smiling. Annie finished her sale, and June was next.\n\n\"Are we all set?\" Sandy uttered the rehearsed line.\n\n\"Yes, thank you,\" June replied looking through her wallet and pulling out her credit card. \n\n\"These sport bras are amazing!\" Sandy said, holding up the bra that June had on when Annie was nursing. \"I wear lots of sport bras and these are by far the most comfortable,\" Sandy added, a smile never leaving her face.\n\n\"Good, that's what I'm looking for,\" June replied in a pleasant, but professional tone.\n\n\"And they're so versatile!\" Sandy remarked in obvious irony.\n\nFrom the corner of her eye, June caught Annie turning away as a coughing fit seemed to besiege her. When she turned back and met June's gaze, Annie was smirking. June was getting annoyed, but turned to Sandy and decided to play along, replying, \"Good, good, cuz I need it to also allow me to nurse my little one, you know?\" She ignored Annie's half-cough, half-laughter fit again and with a sparkle in her eye, smiled at Sandy.\n\n\"Of course,\" Sandy replied handing June the charge slip to sign. June signed the slip and retrieved her bag from Sandy. \"Thank you, ladies. We hope to see you again some time!\" Sandy added as the women walked away. Annie and June said thank you simultaneously as they looked back one final time at Sandy. As Sandy stared at June, she winked an almost imperceptible wink. Both women turned and walked away. \n\nOutside, Annie started talking about some of the items they'd purchased, but June's thoughts were lingering on Sandy. She glanced at her yellow charge slip and noticed Sandy's name printed at the top. June thought back to the moment Sandy caught them, and how she was straining to peer into the stall as if to catch a glimpse of their naked breasts. June also wondered why Sandy had let them go? Perhaps, June thought, she's curious? June's mind flashed a vision of the three of them entangled on their hotel bed sucking breasts and eating pussies. Her pussy spasmed as the fleeting thought disappeared. But then, June wondered if the young woman wouldn't indeed join them? Suddenly, June had an idea and stopped in her tracks.\n\n\"What?\" Annie asked turning to her friend.\n\n\"I think she overcharged me,\" June lied. \"Wait here, I'll be right back.\" \n\n\"Actually, I'm starving. I'll be waiting in here,\" Annie said in reference to the diner in front of which they were standing.\n\n\"Okay, good,\" June said and quickly began walking back to the lingerie store. Reaching its entrance, she looked back to verify that Annie was no longer standing there. Annie had gone into the diner. June quickly took out a pen and the charge slip. Using her purse as support, she wrote down \"Annie & June\", along with their hotel name, room number, and a time of \"8:00\". Looking up at the entrance of the store, she steeled herself and walked in. \n\nSandy looked up from behind the counter and saw June approaching. Before she could speak, June stuck out her arm and handed her the charge slip. She said lying, \"I think you gave me the wrong copy of the charge slip, this one's yours,\" and she quickly turned and walked out of the shop. She didn't give Sandy a chance to reply, nor did June look back at her. She simply walked out and headed straight into the diner.\n\nIn the store, a confused Sandy looked down at the piece of paper and read the scribble. A smile spread across her face as the confusion vanished. She placed the paper into her pocket and went about her business, anticipating quitting time.\n\nIn the diner, Annie asked, \"Everything straightened out?\"\n\n\"Yeah, it was my misunderstanding. Let's eat!\" June replied and the topic was dropped. Both women ate salads and made small talk before heading back to the hotel. It was nearly two o'clock in the afternoon, and both women were exhausted, as they entered their hotel room, dropped their bags and toppled together on the bed. They had not intended to fall asleep, but sleep came nevertheless. They dozed for two and a half hours.\n\nWhen they woke, twilight bathed the darkening room, signaling the arrival of dusk. June turned on the side lamp as Annie went to the bathroom and peed. Again, June listened to the sound of the urine hitting the water and her pussy spasmed. She pushed thoughts of piss fantasies out of her head. She stood and turned on all of the lights and closed the heavy curtains that housekeeping had opened. She went into the bathroom to brush her teeth. Annie had thought of the same thing and was just finishing up her own brushing.\n\nAs June brushed, Annie wrapped her arms around June's waist from behind and whispered in her ear, \"So, what other 'toys' did you bring?\"\n\nJune spit into the sink and rinsed her mouth. Standing and turning into Annie, she whispered, \"Naughty ones. Very, very, naughty ones,\" and she kissed Annie deeply.\n\n\"Mmmph,\" Annie moaned into June's mouth before whispering, \"can I see?\"\n\n\"In due time, my sweet,\" June responded, \"in due time!\" With that, she slipped out of Annie's grasp and walked out.\n\nAnnie followed. \"Aw, c'mon Juney!\" Annie pleaded, \"I wanna see!\"\n\n\"I'm hungry, should we order in?\" June said choosing to ignore Annie's remarks.\n\n\"And eat out?\" Annie cracked.\n\nJune glanced at her and smiled. They ordered room service, starting with some bruschetta. Annie experimented with beef tips smothered in an orange teriyaki sauce, with a hint of nutmeg and coffee, while June went with the Southwestern pasta with blackened chicken and corn. They splurged on two bottles of expensive wine, along with a double order of strawberries and mint chocolate sauce. Four bottles of sparkling water rounded out the order. June paid the $110 check and tipped the server generously before closing the door on him. After tuning in a jazz station on the clock radio and lighting some candles, the women dimmed the lights and had a romantic dinner. In no time, one bottle of wine was empty and Annie and June were feeling good. The clock displayed 6:40 as June wondered if their visitor would show up? June poured each of them a fresh glass of wine and then stood, pulling Annie along with her. Each held their glasses of wine as they began to slow dance to the jazz coming from the radio. They looked into each other's eyes as they swayed softly to the music. They came together in a sensuous kiss. ",
        "\"Mmmph,\" groaned Annie as she wrapped June tightly as the kiss grew in intensity. \n\n\"Do you wanna see what I bought today?\" whispered Annie.\n\n\"Sure,\" June answered between kisses.\n\n\"Wait here,\" Annie said, as she headed into the bathroom, grabbing her bag on the way and shutting the door.\n\nJune smiled to herself as she picked up her own bag and fished through the items she had purchased. She was searching for a particular article that she had secretly grabbed while she and Annie were separated momentarily in the lingerie store. She found it: A black, cross-dyed, lace merrywidow with red trim and tiny bows on the shoulder straps. Adjustable garters and matching panties completed the ensemble. Quickly and quietly, June undressed and slipped on the sexy outfit. Looking into the blank television screen, she tussled her short hair and then fished out the 3-inch heel black pumps she had worn to work the day before. Walking to her overnight bag, June fished out another sex purchase, a 10-foot long, black whip. Moving to an open space of the room, she leaned on one side, her free hand on a hip while the other held the untangled whip, and waited. June looked incredible! Her large, milky-white D-cups seemed ready to burst from the enhancing bra cups of the merrywidow. The high-cut, g-string lace panties, curved around her womanly hips, as her succulent ass looked even better than usual, enhanced by the high heels. The heart-shaped cheeks hung with just the right amount of weight as the g-string disappeared into her crack. Her long, slender legs were wrapped in thigh-high black stockings, which completed the look of a woman who meant business!\n\n\"Okay, I'm ready,\" Annie yelled innocently from the bathroom.\n\nSo am I, bitch, thought June wryly.\n\n\"Here I come,\" Annie added, as the bathroom door clicked opened and Annie stepped out. Finding and turning to June, she froze; her mouthing dropping open but no words coming out. After a few seconds of silence, Annie gasped, \"Oh...my...god!\"\n\nJune, herself, took a few minutes to regain the composure she had lost at the sight of Annie, who looked incredible. June gave the whip a crack, hoping she would do it right, since she didn't really have much experience at this sort of thing. It cracked perfectly, the sound bouncing from the wall as June hissed, \"shut up, bitch!\" She was fighting not to burst into laughter, as she controlled a wicked smile across her face. \"Come here!\" she commanded.\n\nStill somewhat stunned, but eager and enthralled, Annie slowly made her way to June until she was a foot away. \"Stop!\" June ordered, cracking the whip again, not so well this time. Annie stopped; motionless; speechless. \"My, my, my,\" whispered June, \"don't we look...cute?\" she said. \n\nAnnie looked beyond cute. Annie looked incredibly hot and delicious in the powder blue, baby doll nightie. Padded demi-cups pushed her beautiful, milk-filled, C-cups up and out, as a large, frilly bow was tied between them and hung loosely down to her navel. The nightie was split down the front and, so, hung open around her small waist. Matching, lace, g-string panties completed her outfit as she stood barefoot in front of June, her toned and tanned legs together, almost as if at attention. Instinctually, her head was lowered submissively, as her sparkling green eyes looked innocently up at June, waiting anxiously.\n\n\"Turn around,\" June whispered sternly. Annie turned slowly, her tight, tanned ass coming into June's view, causing June's pussy to spasm. \"Mmmm,\" June moaned as she ran the end of the whip's handle across Annie's ass and then slipped the thicker part of the whip between the cheeks. Annie gasped and closed her eyes at the feel of the handle sliding between her cheeks. \"My baby's got such a nice, tight, little ass,\" June whispered. \"Turn around and face me again!\" she said sternly. Annie turned, glancing at June and lowering her head in servitude again. June gazed into Annie's innocent stare as she brought a hand to one of Annie's breasts and massaged it, pinching a stiff, eraser-like nipple. Annie couldn't resist another moan. \"Silence!\" June ordered, cracking the whip. Annie winced at the sound, as June released her breast and took a step back. \"Dance!\" she said, again very sternly.\n\nAnnie began to sway to the soft jazz still playing on the radio. The baby doll nightie fluttered, as June watched. Intentionally, June's reaction remain unchanged, so Annie turned, rotating her hips as her hands moved up and down her side. She turned back toward June, cupping her breasts as she continued to sway, squatting briefly all the way down and standing again, badly mimicking the stripper moves she'd seen on her husband's porn movies. On instinct, she untied the bow from her nightie, under which was the hook to release her confined breasts. As she reached for the hook, June spoke.\n\n\"Not yet!\" she ordered. Annie lowered her hand but kept dancing slowly. \"Stop,\" June ordered. \"Get down on your knees and lick my shoe,\" June said sternly, wondering how far Annie would go, and ready to end this game at the first sign of reluctance from Annie. But Annie cooperated, as she dropped to all fours, leaned down and let her tongue sensually snake out of her mouth as its tip licked June's shiny, black, high-heel pumps. June's pussy spasmed at the submissive and erotic sight. \"That's a good girl,\" whispered June, running the end of the whip softly across Annie's back and ass. \"Lick your master's shoe correctly and you'll get rewarded with some milk.\" Annie intensified her efforts upon hearing the reward, her pussy spasming in desire. After a couple of long minutes, June spoke. \"Enough!\" she said, adding, \"Stand up!\" Annie stood and returned to attention. \"Tie your bow again!\" June ordered. Annie obeyed. \"Lay back on the bed and play with yourself. But don't remove any clothing. I wanna watch my girl play with herself in her baby doll nightie,\" June remarked.\n\nAgain, Annie obeyed as she backed herself to the bed and dragged herself up onto it, as June took a seat in the armchair with her legs spread, ready to watch. Annie pulled her breasts from the confines of her bra, while leaving it in tact. She played with a breast while the other hand moved her panties out of the way and began to rub her bald, smooth pussy. She immediately began to feel the stirring of the orgasm that had been hovering at the threshold of pleasure throughout the game they had played. Annie closed her eyes as she felt a bit of her milk seep out and onto her hand. She strummed her clit and rubbed her moist labia, as she opened her eyes and stared at June.\n\nJune had been sitting erect with her legs spread watching, but she now dropped the whip, rested back into the arm chair and brought a hand to her pussy, as the other hand massaged a huge breast through the material. Like Annie, she moved the panties aside and began playing with her pussy. She closed her eyes and moaned as both women played with themselves and watched the other. Their moans grew louder and louder as each neared orgasm, when June stopped suddenly. Standing, she slipped her panties off, leaving only the merrywidow. Seductively, she crawled onto the bed and over Annie, whispering, \"Would you like some milk for being such a good girl?\" Annie simply nodded affirmatively, as she continued playing with herself.\n\nJune straddled Annie's torso and rose onto her knees. Staring down into June's eyes, she lowered the straps of the merrywidow off her shoulder and released her pendulous, milky-white globes. Milk leaked from her stiff, turgid nipple as she leaned over, supported herself on her hands, and kissed Annie passionately. Annie's hands immediately went to June's breasts and massaged the hanging sphere, her hand gently rolling June's nipple between her fingers.\n\n\"Mmmph!\" June moaned into Annie's mouth. Breaking the kiss, she moved a hanging breast just over Annie's mouth and lowered it just enough for Annie to get her mouth around the nipple and tip of her breast. Instinctually, Annie sucked hard and the milk immediately trickled down her throat. Annie continued rubbing her pussy as June hunched over her on all fours, her eyes closed as the remarkable sensation of Annie's sucking made her pussy twitch. June reached between them and began playing with her own pussy again as Annie continued sucking.\n\n\"Mmmph!! Ugh!\" Annie groaned releasing the breast, as a bit of milk continued to trickle across her lips. She shifted to the other hanging breast and immediately sucked.\n\n\"Ah!!! Yeah, baby!!! That's it!!! Take your reward baby!!! Drink my milk!!!! Suck it down!!!\" June gasped as she lustfully gazed into Annie's eyes. \"Would you like a cookie with your milk, sweetheart?\" June said in an endearing voice, as she lustfully gazed into Annie's eyes. Annie nodded yes while continuing to nurse off of her friend's delicious breast.\n\nJune broke the contact and rose to her knees again. Shuffling forward on her knees, she moved forward until she was hovering above Annie's chin. Her pussy was only inches from Annie's mouth, as Annie licked her lips in anticipation and looking into June's eyes, said, \"Mmm, yum. You have the best cookies Mrs. Cini!\", just as June lowered her pussy onto Annie's waiting mouth. June threw her head back and massaged both her breasts as Annie's tongue burrowed deeply into her nether hole. She squeezed her nipples harder than she realized and milk spurted across the pillows, hitting the headboard and Annie's forehead. \"Mmmm!\" Annie managed to moan, as she brought her hands to June's ass and forced more of June's pussy onto her mouth, guiding it so she could attack June's clit.\n\n\"Ah!!! Yeah, that's it!! That's it!! Lick my pussy!!! Lick Mrs. Cini's pussy you little bitch!!!\" Annie alternated driving her tongue into June's hole and flicking it across her clit before sucking it momentarily. June was fast approaching orgasm but wanted Annie to cum, too. So, she suddenly flipped around and over into a sixty-nine. Annie immediately went back to work on June's meaty pussy, as June stared at the delicate folds of Annie's bald pussy before licking it lovingly.\n\n\"Oh!!!!\" Annie moaned breaking her contact momentarily, as June began to mercilessly attack Annie's delectable pussy. Annie's tender lips sprouted open as her tiny bud came into view. June licked it. She licked Annie's labia. She drove her tongue into her hole and even flicked her tongue periodically across Annie's rosebud asshole. \"Ah!!! Yeah, Juney!!! That's it!! Uh-huh!! Uh-huh!! Lick my cunt!!! Eat my pussy!!!\" Annie gasped louder than she wanted, cognizant that they were in a hotel room.\n\nBoth women continued feasting on each other with abandonment, as each tried to out do the other, their passions rising quickly, as their moans increased. Both women felt the stirrings of orgasms building and were quickly reaching the point of no return when there came a loud knock on the door.\n\nBoth women stopped what they were doing as silence filled the room. June glanced at the digital clock that read \"7:43\". She wondered if it might be Sandy a bit early; or \u2013 and more likely - the hotel clerk complaining about the noise?\n\n\"Oh shit!!\" Annie whispered. \"Busted!\" she said half-giggling and in reference to their loud moans.\n\n\"Don't worry,\" June said dismounting Annie and slipping on her panties, bra and pumps. If it was Sandy, June wanted to look hot for her. She brushed her hair with her hand as she walked to the door. She glanced at Annie who was just laying their, looking awfully hot in her flyaway nightie. June smiled at her before peeking into the peephole. \n\nSandy was standing just outside and about to knock again, when she heard June unlock the door. Opening the door, June immediately put an index finger to her lips, motioning to Sandy with her other hand to enter. She moved aside and Sandy entered, standing just out of sight of the bed, as June shut the door. Annie asked who was at the door and June replied.\n\n\"Annie?\" June said. \"Remember that hot little number from the store today?\"\n\n\"Yeah?\" Annie said, elongating the response as if unsure where this was leading.\n\n\"Well,\" June said reappearing with Sandy in tow by the hand, \"I invited her to join us.\"\n\n\"Hi,\" Sandy waved, feeling suddenly timid.\n\nAnnie thought for a moment before the light bulb went on and she gazed at June smiling. \"You little sneak! That's why you went back inside the store?\"\n\nJune smiled, nodding affirmatively. Then, she turned to Sandy and smiled at her. \"Thanks for coming,\" she said.\n\nSandy smiled timidly and wrung her hands together, feeling anxious all of a sudden but persevering. \"I...I wanted to come.\" \n\n\"Why?\" Annie asked, twirling a bow on her nightie, looking sexy.\n\nSandy gazed at her for a long moment and then at June. \"I...well....I'm not sure. I just thought...you know...from what I saw in the dressing room and then your invite....that you were...\"\n\n\"Lesbians?\" June said, still standing next to the very young looking woman.\n\n\"Well...yes,\" Sandy replied.\n\n\"And that turns you on?\" June asked. Sandy nodded affirmatively again.\n\n\"Wow, you don't come across as a lesbian, Sandy,\" Annie remarked.\n\n\"oh...I'm not,\" Sandy replied, her voice barely above a whisper.\n\n\"But,\" June added, \"you find yourself attracted to girls?\" Sandy nodded, looking first at June then back at Sandy.\n\n\"Well, we have news for you, Sandy,\" Annie said, \"we're not lesbians.\"\n\n\"But...the changing room....you two were....,\" Sandy replied, a puzzled look across her face.\n\n\"She's right. We're not. We're both married with children,\" June said, raising her left hand and showing Sandy her wedding ring. Annie followed suit.\n\n\"Oh, I'm sorry. I thought... I should go,\" Sandy remarked.\n\n\"No, stay,\" Annie said anxiously.\n\n\"Yes,\" June added, \"please stay. We may not be lesbians...\"\n\n\"Yet,\" Annie interjected.\n\nJune glared at Annie before continuing. \"but I guess we're what you'd call bisexual?\"\n\n\"We've discovered an intense attraction for each other,\" Annie added.\n\nJune turned to Sandy and brought her mouth to her ear, whispering, \"And for you, sweet Sandy. Please stay.\"\n\nSandy turned to June and smiled meekly. She nodded affirmatively before turning back to face Annie, who was gently caressing her body and gazing at Sandy. Sandy stared at Annie and licked her lips subconsciously.\n\n\"Good,\" June whispered, sliding behind Sandy and wrapping her arms around the young girl to unbutton her jacket. \"Tell us, Sandy, what turns you on the most?\"\n\nSandy gazed at June momentarily and then back at Annie. \"Uhm...Idunno,\" she said somewhat hesitantly. \"Girls....I guess,\" she added with even more uncertainty.\n\n\"Really now?\" June replied. \"I wouldn't have pegged you to be into women,\" she added. \"Any...particular type?\" June continued, wondering if the young girl liked hot MILFs.\n\n\"Whatdya mean?\" Sandy asked, glancing at June and running a hand up an arm, as if she was cold.\"\n\nJune grinned before clarifying her statement. \"Blondes? Brunettes? Athletic? Feminine? Your age or...?\"\n\n\"Our age?\" Annie interjected, as Sandy glanced at her on the bed.\n\nSandy gazed at Annie before answering, \"I'm attracted to older women.\"\n\n\"Why's that?\" June asked, dropping the young girl's jacket and caressing both arms lightly with her fingertips.\n\nSandy was getting so turned on that her thoughts grew hazy. Her nipples stiffened from June's caresses, as goose flesh appeared on her arm. \"I....I...rather not say,\" she said apprehensively.\n\n\"Why?\" Annie asked, erotically spreading her legs, allowing Sandy a view of her moist slit through her thin, transparent panties.\n\n\"Tell you what,\" June replied, still standing behind Sandy. She wrapped her arms around Sandy and gently caressed her plump breasts for a moment through the lace camisole, before sliding both hands to Sandy's pants. Unhooking them, June squatted while at the same time slid Sandy's slacks off. Sandy stepped out of them, as June stared at her pert, taut ass in total view. Sandy had on cream colored, lace panties that matched her camisole and which slid into the crack of her ass. \"Mmmm,\" June moaned, planting a soft kiss on the cheek of Sandy's ass, as Sandy closed her eyes and inhaled sharply. She opened them to refocus on Annie, who was, now, gently caressing her bald pussy through her panties, while watching June stripping Sandy. \"Tell you what,\" June re-iterated standing behind Sandy again and bringing her hands to the young girls breasts again. Squeezing them, she added, \"we'll tell you what turns us on first. It's very kinky, Sandy, very private. But for some reason, we have a feeling we can trust you, right Annie?\"\n\n\"Right,\" Annie said hoarsely, her anticipation growing as she slid her hand underneath her panties and slid a long, slender, finger into her hole. \"Mmmmm,\" she moaned, as Sandy groaned at the sight and at the feel of June gently squeezing her breasts. Her stiff, dark nipples were easily visible through the lace material.\n\n\"Annie and I,\" June continued, \"are nursing mothers, Sandy. \"Our breasts are filled with milk. And nothing gets us off more than taking each other's milk!\" As June whispered hotly into the young girl's ear, she grabbed the bottom edge of the camisole and gently but swiftly whisked it off, revealing the young girl's pert breasts. As she kissed the nape of Sandy's neck, June moved her hands to Sandy's breasts, tweaking her candy-colored, stiff nipples.\n\n\"Mmmm!\" Sandy moaned, closing her eyes momentarily before replying to June's admission. \"You mean...like...like a mother gives milk to...like...her daughter?\" She asked, turning to gaze at June.\n\nJune took the opportunity to sweetly kiss the young girl's lips before replying with a smirk, \"Yes...like a mother to a child... a daughter.\" June was getting a sense of Sandy's fantasy, of which she'd been reluctant to divulge. So, June decided to draw it gently out of the young girl. \"In fact, some times, when Annie and I are playing, I like to pretend she's my daughter. I offer her mommy's milk.\"\n\n\"Mmmm!!!!!\" Sandy moaned again, as June slid a hand down into the young girl's panties to find, yet, another bare pussy. She caressed Sandy's moist clit with her fingers before bringing her hand back to her breasts.\n\n\"Does that excite you, Sandy?\" June whispered, nibbling on the young girl's ear lobe. Sandy nodded affirmatively.\n\n\"Now,\" June continued, all the while massaging Sandy's breasts. Her own stiff nipples rubbed against the young girl's back. \"Will you tell us, Sandy? Tell us what turns you on? I promise, it won't shock us,\" June whispered sexily, as she licked up the side of Sandy's neck, taking an ear lobe gently between her teeth and flicking it with her tongue. \"Tell us,\" she reiterated.\n\n\"My...my...mom,\" Sandy blurted, her chest rising and falling in time with her shallow breathing. She was so turned on; she thought she could cum on the spot, if June wasn't careful.\n\n\"Mmmm,\" June moaned, as she glanced at Annie from behind Sandy and licked her lips. \"Your mother turns you on?\"\n\n\"Yes,\" Sandy said, feeling bolder now that the secret was out and moving one of June's hand from her breast back down to her pussy, inside her panties.\n\n\"Mmmm, you're so wet, Sandy,\" June purred, slipping a finger into the young girl's pussy before strumming her clit. \"Does thinking about your mommy get you wet?\" June asked for sheer excitement.\n\n\"Oh!!!!\" Sandy groaned and squirmed. \"Yesss!!!\" She hissed, closing her eyes and groaning again, as she spotted milk leaking from Annie's nipples. Annie was so turned on, she had to quit playing with herself momentarily for fear of cumming.\n\n\"Tell us more,\" June asked, teasingly as one hand massaged the young girl's breast and the other strummed her clit.\n\n\"She...she...,\" Sandy gasped, her chest heaving as her pussy spasmed under June's delicate touch. \"She looks just like Annie,\" Sandy added. Annie and June simultaneously gasped as June moaned and Annie's eyes fluttered closed momentarily. \"I thought you were my mom when you came into the store,\" Sandy said to Annie. \"My mom's a bit older but still beautiful,\" she added, gasping at June's continuing ministration.",
        "\"Mmmm,\" June moaned kissing Sandy's neck lightly as she pinched the young girl's stiff nipple. \"Go on, Sandy, tell us more,\" June whispered just as Annie slipped her panties off. She stretched back on the bed again and spread her legs wide for Sandy. Her bare, moist slit was puffy and pink, as she slid her fingers through it, eliciting a moan from the young sales girl. \"Do you fantasize about being with your mom, Sandy?\" June asked, her eyes boring into Annie's from behind the young girl.\n\nSandy nodded affirmatively. Her chest heaving as her breathing turned erratic. \"I...I think she's...bisexual,\" Sandy continued, as she brought her own hand to her other free breast and began to massage it. The entire time, she gazed at Annie, alternating her glance between Annie's succulent pussy and her eyes.\n\n\"Do you think she's fantasized about you, Sandy? Do you think your mother wants you?\" June teased into the young girl's ear.\n\nSandy gazed hard at Annie before answering. \"I...I don't know,\" she replied, \"but I sometimes catch her staring at me and my sister.\"\n\n\"How old is your sister?\" June asked.\n\n\"Two years older than me...twenty-one,\" Sandy replied. \"She looks just like me, except a bit fuller around the waist, with bigger tits and brown hair. I think she's beautiful!\"\n\n\"Mmmm,\" Annie moaned from the bed, \"she sounds delicious!\" June grinned at her friend and lover before turning her mouth back toward Sandy's ear. She was getting a better understanding of the young girl's suppressed desires and fantasies.\n\n\"Do you tease your mom, Sandy?\" June whispered into her ear.\n\n\"I...I dunno,\" Sandy answered, her voice barely a whisper as she continued gazing at Annie. \"I...I sometimes dress wondering if my mom would find me sexy in a particular outfit. One time....,\" Sandy continued, \"...I caught her gazing down my top, when I was bent over. She had a look of lust in her eyes.\"\n\n\"Mmmm,\" June moaned, increasing her efforts on the young girl's pussy and breast.\n\n\"I... I sometimes walk around in my bra and panties just to see her reaction. It makes me wet to think I turn her on. We all go to the pool some times. I've caught her gazing at my sister like she was a piece of meat. My sister has fantastic tits.\"\n\n\"Have you ever fantasized of kissing your mother?\" June whispered.\n\n\"Yes,\" Sandy replied in a whisper, her eyes still focused on Annie.\n\n\"Have you ever fantasized about sucking your mother's breasts?\"\n\n\"Yes,\" Sandy replied.\n\n\"Have you ever wondered what it would be like to taste your mother, Sandy?\" Sandy nodded affirmatively. June continued, slowing her manipulation of the young girl's pussy, sensing Sandy was beginning to quiver. Sandy thought she was about to roll into an incredible orgasm, but June stopped her skillful manipulation, leaving the young girl gasping for release.\n\n\"Then go,\" June said, \"go to your mother in front of you. Look at your mother's pussy, Sandy! See how inviting it looks? Go to her breasts...suckle them like you did as a baby! Drink your mother's milk!\" June added, as she gently shoved Sandy toward the bed.\n\nTaking the queue, Sandy moved onto the bed toward Annie, as Annie shifted onto her side and welcomed the young girl into her arms. Annie and Sandy kissed softly but sensually, as Annie untied the bow on her nightie and unclasped her bra. Her tits spilled free as Sandy immediately moved a hand to them. Annie moaned into the young girl's mouth as June moved around toward Annie and gently slipped the nightie from her shoulder. Annie was now completely naked as she broke the kiss and gazed into Sandy's eyes.\n\n\"You look so much like my mom,\" Sandy whispered, as June took a seat in her chair and began playing with her pussy, watching the role-playing mother and daughter make love. Annie and Sandy embraced and kissed again, this time more hotly as their breasts came together. Their stiff nipples rubbed against one another, sending hot sensations through each of their bodies. When the passionate kiss broke again, Annie spoke.\n\n\"Would my sweet daughter like some of mother's milk?\" Annie said in the same tone she used with her children. June and Sandy moaned simultaneously from the comment as Annie placed a hand behind Sandy's head, bringing it to her hanging breast.\n\nSandy squirmed underneath Annie's hanging breast and took its engorged nipple into her mouth. The role-playing mother and daughter gazed into each other's eyes, as Annie brushed Sandy's hair aside and whispered sweet encouragement.\n\n\"That's it, baby,\" Annie said, \"take your fill.\" She threw her head back momentarily as the erotic sensation ripped through her breast. She realized Sandy wasn't sucking hard enough and gazed back into her eyes. Brushing the young girl's cheek softly with the back of her hand, she whispered, \"suck harder, baby. You won't hurt me.\" She smiled sweetly at Sandy, who sucked harder.\n\nAnnie's milk began to trickle from her nipple. The moment the sweet, warm nectar hit Sandy's tongue, the young girl's pussy spasmed in ecstasy. She sucked harder, and the trickle turned into a stream, hitting the back of her throat, as she began to gulp. She moaned in delight, as did Annie. From her chair, June stroked her pussy roughly as her mouth hung open. Her gaze riveted to the incredibly hot scene in front of her, as she watched Mother Annie's hand flutter between her daughter Sandy's legs and caress the young girl's shaved pussy, before slipping a finger inside it.\n\n\"Mmmm!!!\" Sandy moaned into Annie's breast and sucked harder at the feel of Annie's finger inside her pussy.\n\n\"That's it, baby girl,\" Annie said hotly, \"suck mommy's breast. Drink my milk, baby, as I rub your pussy. You like mommy rubbing your pussy don't you?\"\n\n\"Mmmm-hmmm,\" Sandy moaned again, a look of desperation in her eyes as her ecstasy increased tenfold.\n\n\"That's it, Sandy!\" June hissed from the end of the bed in her chair. \"Drink it! Drink your mother's milk, baby!!!\" She strummed her pussy savagely as she gazed at the two women on the bed.\n\n\"Mmmmm!!!!\" Sandy moaned yet again, as Annie raised up and released her breast from the young girl's mouth. A stream of milk hit Sandy on the lips and nose, causing her to moan in pleasure as the milk trickled down the side of her neck. Annie quickly switched to the other breast, bringing it to the young girl's mouth. Sandy immediately took to it and began sucking. Annie felt the bed sag and glanced over to find June crawling between the young girl's legs. \n\nSpreading Sandy's legs, June rubbed the young girl's pussy briefly before locking her mouth over her engorged labia and exposed clit. Annie moved her hand to her own pussy and rubbed if furiously as she watched June eat her role-playing daughter's pussy. \n\n\"Oh! Ah!! Fuck!!!\" Sandy gasped, breaking her contact with Annie breast, as more milk coated her face. \"I'm gonna cum! Fuck, I'm gonna cum!!!\" She repeated, quickly latching back on to Annie's breast and moaning deeply as her legs began to quiver and her stomach tightened.\n\n\"Mmmmmm!!!! Mmmmmm!!!!\" She screamed a muffled scream into Annie's breast, as she sucked her role-playing mother's milk and gazed into her eyes. Sandy's hand grasped June's hair and pulled the older woman into her pussy, as June continued her merciless attack on the young girl. \"Oh!!!!! Fuck!!!!!!\" Sandy screamed, releasing her hold of Annie's breast as she closed her eyes and quivered uncontrollably as her orgasm ripped across her body!!\n\n\"Fuck, that's hot!! I'm cumming too, baby!!! Mommy's cumming too!!!\" Annie yelled, as she closed her eyes and rolled through her own orgasm.\n\nWhen Annie opened her eyes again, Sandy and June were kissing softly. Sandy had rolled onto her back and June hovered over her, her huge breasts hanging succulently, as drop of sweet milk dripped from their tips due to her excitement. Annie rose and began placing tiny, soft kisses along June's back, working her way lower. When she reached June's ass, Annie kissed the cheecks softly as she easily slid three painted, slender fingers into June's sopping pussy. June had not cum yet, and was very near the edge, as she stopped kissing Sandy momentarily and moaned.\n\nSandy took the opportunity to lower her head and take one of June's thick, turgid nipples into her mouth, licking and biting it tenderly.\n\n\"Ah!!!!!\" June groaned loudly, as a million sensations rippled through her body. \"Bite my milk-filled, breasts, Sandy!\" She hissed. \"Bite 'em!! Do the other one, baby!!\" She ordered, as Sandy switched to June's other breast, eagerly anticipating the taste of her sweet milk.\n\nMeanwhile, Annie rose and retrieved the juice-stained strap-on dildo that June had purchased and fucked her with the night before. Sliding it on, she suddenly felt powerful and decadant, slapping the fake phallus several times before applying some lubricant to it, stroking the realistic looking cock much the same way she stroked her husband's cock. \n\n\"Mmmm,\" Sandy moaned, beginning to loosen up and getting into the pleasurable game. \"My mommy's friend has beautiful tits!! Can I drink some of my mommy's friends milk?\" She asked in a coquettish, playful voice.\n\n\"Uh!!! Fuck yes!!! Suck my breasts, baby!!! Suck 'em really hard and drink mommy's milk!!\" June gasped, as she suddenly felt the huge cock split her engorged nether lips. \"Ah!!!! Annie!!!! Fuck...yeah baby!!! Fuck me!!!! Fuck me hard while your daughter drink's my milk!!!!\"\n\nAs Annie slowly built up a rhythm, Sandy's intense sucking was rewarded with a gusher of sweet milk, splashing her tongue. \"Mmmmm,\" she moaned in pleasure, as her own hand worked her pussy.\n\n\"Oh, fuck!!!\" June gasped. \"You girls are gonna make me cum!!! Oh!!! Fuck, I'm getting close!!! Yeah, that's it, baby girl, drink my milk, suck 'em!!!\" She added, as Annie now had built a nice rhythm and was methodically pounding her fake cock into June's pussy, as she held the older woman by the hips. \"Yeah, Annie, fuck me!!! Fuck me, baby!!!\" On impulse, Annie slapped June's ass cheek hard. \"Ah!!!!!\" June screamed in pleasure!\n\n\"You've been a bad girl, Juney,\" Annie said playfully, \"eating my daughter's pussy and giving her your milk!\" She added, slapping June hard twice more. June was near delirium, as the sensations of her pussy being well fucked, the stinging pleasure of the slaps coupled with the intense sucking and letdown of her milk, pushed her over the edge. She rolled into one of the most intense orgasms she'd ever experienced, as her body began to tremble and her knees grew weak! Annie continued fucking her best friend and whispering naughty words to her, as young Sandy drank from June's pendulous breasts, the milk leaking out and covering Sandy's chin and neck. Sandy's breasts glistened from sweat and milk. When June rolled into her uncontrollable orgasm, she inadvertently broke the contact between her breast and Sandy's mouth, and a long stream of milk doused Sandy's face, hitting her nose, eyes, hair and cheeks. Sandy moaned in pleasure before taking the breast back into her mouth, as June's orgasm peaked.\n\nJune's orgasm was so intense that when it was over, she was too weak to stay in her doggie position hovering over Sandy. She groaned one final groan, and collapsed onto the bed next to Sandy. Her breast, from which Sandy had been sucking, shot a few spurts of sweet milk for a second before the stream came to an end, trickling down the side of her breast. The fake phallus that had been fucking her made a loud, squishy \"plop\" sound as it slipped from her wet pussy. She was heaving and gasping as her eyes remained closed \u2013 a smile of contentment across her face.\n\nBut the pure, unbridled act had turned Annie and Sandy on again, as Annie now stared down at Sandy, who was in perfect position to get fucked. Annie smiled a wicked smile at Sandy, who returned the smile and rubbed her pussy. \"Are you gonna fuck me, mommy? Are you gonna fuck you daughter's sweet, tender pussy?\"\n\nAnnie's grin grew wider. \"Do you want mommy to fuck you, baby? Do you wanna feel mommy's big, thick cock in your tight pussy?\"\n\n\"Oh, yes, mommy!!! I want you to fuck me!!! I wanna feel mommy's cock inside me as I drink my mommy's milk!!\" As Sandy spoke, Annie had positioned her fake cock, slick with June's juices, at the entrance to Sandy's pussy and rubbed it gently up and down, slipping the head momentarily once or twice inside Sandy's pussy. \"Oh!!!!! Please, mommy!! Don't tease me!!! Fuck me with your big cock, mommy!!! Please hurry!!!\" Annie slid her fake cock slowly but deeply into Sandy's pussy as the sales girl let out a deep, guttural moan, gripping the bedsheets as she closed her eyes.\n\nAfter a few minutes, Annie got into a steady rhythm, fucking Sandy in missionary position, as the sales girl began to mumble unintelligibly. Annie leaned forward so as to rest atop the girl and ran her hands through her hair, grasping her head and kissing her hotly. Their tongues danced and sucked as Annie fucked her role-playing daughter mercilessly. Breaking the kiss, Annie hissed a command.\n\n\"Suck mommy's nipple, baby!!! Drink more of mommy's milk!!!\"\n\n\"Yes, mommy, yes!!!\" Sandy said, deliriously, as Annie rose a bit and brought her candy-colored nipple to Sandy's mouth. Sandy wasted no time in sucking, and immediately, Annie's sweet milk flowed into her mouth. \"Mmm!!!\" she groaned, as Annie caressed her hair and fucked her pussy.\n\nJune had come back to life and rolled onto her side, watching the role-playing mother and daughter fuck each other, as she gently stroked her pussy and breasts. Droplets of milk leaked from her breasts, running down her side and onto the already-soaked bed sheets.\n\nSandy sucked and drank her role-playing mother's milk, as she groaned with every thrust of the fake cock into her oiled pussy. All the while, Annie held her head tightly to her breasts, hissing expletives and nasty thoughts to her role-playing daughter. Both women approached orgasm simultaneously as they began to groan in unison, while June rubbed her own pussy harder.\n\nAll three women rolled into orgasms as moans of pleasure and the wet, squishy sound of a pussy getting fucked filled the room. The scent of pussy and sex filled every nook and cranny of the hotel room.\n\nIn the room next door, Maria, the housekeeper, sat on a crumpled bed with her dress hiked up, her panties lowered and her hand working furiously on her own hairy pussy. Her mouth was slack and her eyes closed as she sat perched up with her head near the wall, listening to the women next door making love. She had coincidentally come in to prep a room after a late checkout, when she had begun to hear the unmistakable sounds of sex coming from the women next door. Taking a chance, she had moved her cleaning cart down the corridor and returned to the room, shutting and locking the door. Her intentions were simply to listen in, but as the groans grew louder, she couldn't help sneak a hand to her pussy. And when the women started talking about breastfeeding, a secret fetish of the housekeeper, it sent her over the edge. And now, she sat on the yet unmade bed as she dug her fingers into her sopping pussy, imagining what it would be like to nurse from June's beautiful, large breasts while having the cute friend eating her pussy. Maria orgasmed along with Annie, June and Sandy.\n\nAs all three women in the next door came down from their climax, so did the beautiful housekeeper, wiping her pussy-soaked hand on the bedsheets about to be washed and regained her composure. Annie simply lay there with her eyes closed and her flat, toned stomach heaving.\n\nJune sat on the bed caressing her pussy longingly as a smile spread across her face, staring at the two women before her. \"Wow!\" She said. \"That was quite something!!\"\n\n\"You're not kidding!\" Gasped Sandy, adding, \"That was one of the best cums I've ever had! Fuck it was hot!! And I'm still horny!\"\n\n\"Me, too,\" June replied.\n\n\"Maybe we should see what other toys Juney has in the bag!\" Annie replied smartly.\n\n\"Toys?\" Sandy asked, alternating her glance between the two women.\n\n\"Yes,\" Annie answered, \"our friend here paid a visit to a sex shop and brought some toys with her! They're in her bag there!\"\n\n\"Really?\" Sandy said, a smirk on her face as she shuffled off of the bed and made her way to June's bag. \"This one?\" Annie and June nodded yes, a curious smile spread across June's face, as she glanced down at Annie, who winked at her.\n\n\"Mmmm!\" Sandy groaned in pleasure, pulling out a red leather paddle and holding it up for display. \"Does our little girl there get out of line often?\" She said to June, smirking, as her head nodded in the direction of Annie.\n\n\"Fuck,\" Annie whispered, turning to June and kissing her hotly, her tongue licking June's teeth before the kiss ended. \"I want you to spank me later, Juney,\" Annie whispered, \"cuz I've been veeerrry bad!\"\n\n\"Oh, I like these! These are fun!\" Sandy said, pulling a vibrator and butt plug from the bag. Annie moaned again, as she drew a hand down to her pussy and began caressing it. June had been casually caressing her nipple and pussy, as she continued watching Sandy.\n\n\"And of course!\" Sandy said amusingly, pulling out the final items from the bag, two nylon pair of adjustable cuffs, one for wrists and the other for ankles. Annie moaned, as Sandy, now feeling bold, threw the wrist cuffs to Annie and said, \"You do her wrists, I'll do her ankles!\"\n\n\"Whoa, ladies!!\" June said in a not-so-serious tone and smirking, as Annie jumped up and grabbed June's wrists. She cuffed June's wrists, tying the straps of the cuffs all the way down to the long feet of the bed. Good thing they're adjustable and long, thought Annie.\n\nJune lay there amused, her smile widening as her arms had been stretched across both sides of the bed as if in crucifixion. Both, Annie and June, watched Sandy do the same with June's ankles, tying them to the feet of the bed, as June's legs spread impossibly wide.\n\n\"There!\" Sandy said in her girlish tone, leaning briefly forward and giving June's wide open and vulnerable pussy a long lick. June closed her eyes momentarily and breathed in sharply, before staring back at Sandy.\n\n\"What else? What else?\" Annie said excitedly as she leaped to her feet, toward Sandy and the sex toys.\n\n\"Stuff a pillow or two underneath her ass!\" Sandy said, the sweet, nineteen year old sales girl now taking on a tone of authority. \n\n\"Huh?\" Annie replied, puzzled, as Sandy held up the butt plug. \"Oh!\" Annie added, realizing what Sandy was intending. \"I dunno...\" Annie replied concerned, looking at June on the bed.\n\n\"It's okay,\" June whispered, her voice dry and cracking from anticipation, \"go ahead, Annie.\"\n\nAnnie smiled as she made her way to June and placed two, thick pillows underneath June's ass. June smiled as she gazed helplessly at her friend. When she was done, Annie looked at her friend and caressed her breast momentarily, pinching the nipple. She leaned down and kissed June lovingly before whispering in her ear, \"We're gonna make you cum like you've never cum before!\" June closed her eyes and moaned.\n\nWhen June opened her eyes, they focused on Sandy, who was making her way over to the bed with the vibrator and lube in one hand and the butt plug in the other. \"Wow! Looks like you thought of everything,\" she said to June.\n\n\"I made a list,\" June said matter-of-factly.\n\nSandy and Annie stared at her momentarily \u2013 neither saying a word. Then, Sandy simply said, \"You're serious? You made a list?\"\n\n\"Yeah,\" June replied, again very seriously, as the other two women continued staring at her. \"What?\" She asked, unaware at how ridiculous it sounded to have made a list of the sex toys she needed to bring.\n\nSandy and Annie burst into laughter, as June finally gave up and joined them. All three women laughed hysterically at the thought of June walking up to the sex shop clerk with her list in hand!",
        "\"That's my Juney,\" Annie said still giggling and squeezing June's breast briefly, as June continued to lay there spread-eagled, her hips raised by the two pillows.\n\n\"Alright then,\" Sandy said returning to the bed, adding, \"let's reward you for your thoughtfulness!\" Sandy placed the items between June's thighs and moved up to the her side, on her knees. Annie moved to June's other side, so that both women were inches from June's succulent breasts. Sandy kissed June lovingly, as she caressed June's breast and pinched her nipple. Annie followed suit.\n\nWhen Annie's kiss ended, both women began to kiss June's neck. Both women kissed their way down her neck, to the swell of her breasts and finally to her nipples. They licked her nipples lovingly, as the rose colored nubs stiffened rapidly, before each woman took a respective nipple between their lips.\n\n\"Ahhh!!!!\" June moaned, arching her back and feeling the constraint of the binds, as sensations rippled through her chest and groin. Sandy and Annie continued teasing and softly biting June's nipples, licking and sucking them until the milk letdown arrived, catching Sandy by surprise.\n\n\"Mmmmph!\" Sandy groaned into June's breast. \"Yum...my!\" she said coquettishly, releasing the nipple momentarily to speak.\n\n\"Like?\" June whispered, staring into Sandy's eyes, as her arms tugged at the restraints with each pleasure spike.\n\n\"Mmm-hmmm,\" Sandy groaned, letting her hand flutter to June's pussy, her fingers sliding through June's hair and slipping effortlessly into June's moist cavity.\n\n\"Uh!!!\" June groaned, closing her eyes and feeling Annie's hand join Sandy's on her cunt.\n\nJune's hips began to gyrate gently, as Sandy and Annie continued sucking her breasts and taking her milk. Sandy continued driving a slender finger into June's hole, while Annie strummed June's clit.\n\nAfter a few minutes of this pleasurable torture, Sandy released June's breast and returned to kissing her way down June's stomach, as she watched milk trickle from the freed nipple and drip down the side of June's large breast.\n\nAnnie followed suit and began working her way down June's right side, both women kissing their way down to June's hips, her thighs, while their fingers continued their manipulation of June's cunt.\n\n\"Suck her clit, Annie, but don't make her cum,\" Sandy ordered, as she continued her descent toward Annie's exposed rosebud. The wrinkled hole looked clean and pink, seemingly inviting Sandy to kiss it. And so she did.\n\n\"Ah!!!!! Fuck!!!!\" June groaned loudly, at the simultaneous feeling of Annie's mouth on her clit and Sandy's lips and tongue frenching her asshole. \"Oh!!! God that feels incredible!!!\"\n\n\"Mmmmph!!\" Sandy groaned as she stabbed her stiff tongue into June's anal opening, licking its rim while Annie kept June on the edge with licks of her clit and a finger in her pussy hole.\n\nSandy sat up and applied some lubricant to her well-manicured fingers. Returning to June's moist anal opening, she gently prodded the opening with her index finger, slipping first a fingernail and then the tip of her finger into the now glistening anal opening.\n\n\"Ah!!!! Oh!!! Fuck, I'm gonna cum, girls!!!\" June gasped.\n\n\"Oh...no you don't!!\" Annie shouted gleefully, letting up on June's clit and watching Sandy's ministrations.\n\nSandy had begun moving her index finger in and out of June's asshole, down to the first knuckle, as June closed her eyes and groaned. Annie resumed sucking her friend's clit, her tongue occasionally dancing across June's labia and hair before she'd latch back on to her clit and sucked.\n\n\"Mmmm!!!\" June moaned, licking her lips in pleasure, as she continually gyrated and pulled on the soft restraints. \"Please, girls!!! Make me cum!!! Please!!\"\n\nSandy drove her finger deeper to the second knuckle into June's lubed asshole. She had easily slipped past the anal ring and felt it loosening with each drive.\n\n\"Ah!!!!!\" June groaned again, feeling Sandy's finger delve deeper into her, as Annie's finger also slipped deeply into her pussy hole, both fingers manipulating her erogenous anal and pussy zones simultaneously, while Annie continued sucking her clit.\n\n\"Don't let her cum, Annie!\" Sandy warned, as Annie stopped her sucking and slipped her finger from June's pussy. June relaxed a bit, as Sandy continued slipping her index finger in and out of June's asshole. Her pink, glistening rosebud seemed to now swallow Sandy's finger completely to its base, as Sandy increased her tempo. Glancing up at June, Sandy noticed the older woman's milk-filled breasts leaking milk, without anyone touching them! \"Oh my god that is so fuckin' hot!\" Sandy hissed to no one in particular, as Annie noticed her gaze and turned toward June's breasts.\n\n\"It's natural to leak some if you're extremely turned on,\" Annie said, crawling over to June's breast and seductively licking up a drop from the side of June's breast up to her nipple. She tenderly flicked June's nipple as it continued leaking.\n\n\"Kiss me,\" June said hoarsely into Annie's eyes, as she continued to squirm and pull on the constraints.\n\nAnnie leaned forward to kiss June but pulled back at the last second, leaving June's tongue to dance sexily with air. Annie leaned back and smiled wickedly as she gazed into June's eyes.\n\n\"You bitch!\" June hissed, a smirk across her face.\n\n\"Yeah, that's it, Annie!\" Sandy screamed. \"Tease her!!\" She added, smiling. Her finger was now easily moving in and out of June's asshole. June's opening had adjusted to the finger and swallowed it easily with each thrust. \"Come back here, Annie! Let's kick it up a notch!\"\n\nAnnie shuffled back down to June's pussy just as Sandy handed her the vibrator with her free hand. \"Here,\" Sandy said, \"lube this up a bit and run it over her clit and slide in and out of her pussy!!\" \n\n\"You act like you've done this before,\" June gasped between moans, still squirming.\n\n\"Let's just say,\" Sandy answered, slipping her finger out June's rosebud and stabbing her tongue into the opening just before it closed. Looking back at June, she finished the sentence, \"my sister's best feature is her ass!\" \n\n\"Mmmm,\" Annie moaned into June's pussy. She had slipped the vibrator into June's pussy and resumed sucking her clit.\n\n\"Oh, my god! You get it on with your sister! You sexy little cunt!!! You're not as innocent as you led us to believe, you bitch!!!\" June gasped, before adding, \"Make me cum! Please, make me cum!!!\"\n\n\"Keep sucking her clit, Annie!\" Sandy ordered, noticing the leaking milk still dribbling down June's breasts, as she squirmed uncontrollably, her eyes closed. Sandy slowly, yet easily, slid the butt plug into her new friend's asshole. \"Okay, Annie, be a good little girl and go nurse mommy's tits!!\"\n\nAnnie wasted no time turning the vibrator over to Sandy who took it and maneuvered it slowly in and out of June's pussy.\n\nWhen Annie had latched on to June's breast and was well on her way to nursing, Sandy leaned forward and licked June's clit momentarily before taking it into her mouth and sucking voraciously.\n\n\"Ah!!! Oh my god! Oh my god!! Oh my god!!!! Don't stop! Don't stop!! Please don't stop!!!\" June began to plead and beg, almost incoherently as she subconsciously tugged at her restraints. Her orgasm approached fast.\n\nAnnie nursed greedily and sloppily on June's breasts, while Sandy held the butt plug in her asshole with one hand; drove the vibrator in and out of her pussy with the other hand, while the entire time, sucked on June's clit voraciously.\n\nJune's orgasm hit her like a hurricane! She squirmed uncontrollably, screaming a deep-throated scream, as her orgasm attempted to naturally contract her asshole. The contraction was met with the fullness and resistance of the butt plug, which sent new shivers through her vibrating pussy and to her clit, which was being traumatized by Sandy's tongue and suction! Wave after wave after wave of incredible crescents and valleys rumbled through June's body, as her milk streamed freely into Annie's mouth. June continued to babble incoherently through the orgasm, until at last, she began her descent back to reality. Her mind swirled as she passed out from the intense feeling she was experiencing. It was as if every ripple of orgasm had nowhere to settle: Not in her nether regions, not in her breasts, and so they simply kept crashing through her like a pinball bouncing from bumper to bumper.\n\nWhen she came around, Annie had switched breasts and was now lovingly licking her other breast, having depleted both breasts of their supply for the moment. Sandy had removed the vibrator and was gently lapping at her petals, occasionally brushing her clit and sending mild spasms through June's body.\n\nJune began to chuckle in disbelief of the orgasm that had just ripped through her. \"Oh my freakin god, that was unbelievable!!!\" She said, her arms still pulled back by the restraints.\n\nAnnie sat up and moaned lightly. \"God that was so fuckin hot, I'm horny again!\" She said, kneading her breast and running her hands through her bare, but moist, slit.\n\nJune giggled and said jokingly, \"Too bad Maria's not here or we could split up into pairs!\"\n\n\"Mmmm,\" Annie moaned, closing her eyes and adding, \"yes... Maria. Sweet Maria. She did look interested didn't she?\"\n\n\"Who's...Maria?\" Sandy asked, as she freed June from her restraints.\n\n\"One of the housekeepers,\" June replied. \"My dominant side took over last night, and I ordered Annie to put on a little show for our housekeeper!\"\n\n\"Oh yeah?\" Sandy said, somewhat amused. \"And, she seemed interested?\"\n\n\"You could say that,\" June replied, \"she couldn't take her eyes off of Annie's deliciously bare and wet pussy nearly inches from her face!\"\n\n\"Fuck that's hot!\" Sandy said at the thought as she watched Annie rub herself while June, now free, wrapped Annie in her arms and kissed her tenderly. Sandy walked to the telephone and called the front desk. \"Yes, this is room 307. Can we have some extra pillows, please?\" Sandy spoke into the telephone, as Annie and June watched intrigued. \"Two's fine, thank you,\" she added, \"oh and could you have Maria deliver those?\" Sandy listened for a few seconds and then said, \"Great, thank you so much! Goodnight!!\" Hanging up the phone, she glanced at Annie and June who watched her with eyebrows raised. Sandy smiled and said, \"Let's find out just how interested Maria is!\" Then, she stood and went to the restroom as Annie and June continued to cuddle on the bed. \n\nWhen Sandy exited, she gazed at the two women and asked, \"What's Maria look like, so I know it's her when they come?\"\n\n\"She's Hispanic, short and very pretty!\" Annie said almost anxiously, to June's amusement. \"Dark hair, dark eyes with a beautiful smile!\" Annie added. \"Can't tell what her body looks like in her uniform though.\"\n\n\"While we wait, tell us about you and your sister,\" June asked Sandy, curious. \"What's her name?\"\n\n\"Jillian,\" Sandy answered.\n\n\"How did it happen?\" Annie asked, in obvious reference to Sandy and her sister's sexual involvement. \n\n\"Last year,\" Sandy replied, \"during my first year of college. Jil' was already a sophomore and spent a lot of time with me. I think she felt an obligation to look after me. One night, we decided to just hang out at her apartment cause my dorm roommate was turning out to be a bitch. We started drinking and somehow, the conversation turned to our mother. We both admitted to each's suspicions that mom was bi. Jillian acted all disgusted, but when she saw that I said nothing, she pressed me. I told her I wasn't sure how I felt. I told her the thought of mom making love to another woman excited me. Jillian grew quiet and turned the conversation to making love to a woman. Neither of us had ever been with another girl, and we both wondered what mom saw in women. Well, to make a long story short, the alcohol got the best of us and we kissed to see what it was like. We discovered we liked it and it made us hotter, so the night slowly turned into a lovemaking session. I remember it being around three in the morning when we heard her roommates come home from partying, and I was eating my sister's pussy in the living room. We both jumped, grabbed our clothes and ran to her bedroom. It was hilarious to see her go out to the living room, where her roommates continued to party with their boyfriends. She chatted with them for a few minutes and then said she was really tired and said goodnight. She came back and we got into a sixty-nine, eating each other's pussies to sleep.\"\n\nSilence filled the room as Annie and June both stared at Sandy in disbelief, their nipples hard as pebbles as both women caressed their soaked pussies.\n\n\"And the anal?\" Annie asked, quizzically.\n\nSandy shrugged her shoulders. \"Things just progressed, I guess. Jil' and I still get it on today. We really got into our lovemaking, deciding to explore every sexual delight. I was kissing her ass cheeks one day when I remarked that she had a perfect ass. She told me to play with it, cause it turned her on. I finger-fucked her ass to orgasm that day, and from then on, we were into major ass play, mostly on her ass. She really loves having a tongue in her ass.\" June groaned, as Sandy continued. \"Sometimes, we think about ways to bring our mom into our lovemaking. We have a feeling she's a sexual dynamo, and the thought of making love to her excites both me and Jil', now. We sometimes orgasm describing to each other what we'd do to mom.\"\n\n\"Fuck, that would be so hot,\" Annie whispered, digging her fingers into her pussy. \"I can just imagine your tongue in your mom's pussy and you sister's tongue in your mother's asshole, driving her to orgasm.\"\n\nA sudden knock at the door started all three women, followed by a pleasant voice speaking English, but with a strong accent. \"Hello, housekeeping!\"\n\n\"That's her,\" Annie said in reference to Maria's voice, as Sandy walked naked to the door. \n\nPeering into the peephole, she said, \"Yup, looks like who you described.\" She unlocked and opened the door. \"Please, Maria, come in,\" she said politely but firmly.\n\n\"Pillows for the ladies?\" Maria said, entering and hearing the door shut and lock behind her. Before she could react to Sandy closing the door, Annie and June came into her line of vision. She simply stood there, holding the two, fluffy pillows horizontally on both forearms. Her gaze zeroed in on Annie's bare cunt, her soft, tender folds had blossomed and lay open to Maria's hungry gaze. Maria licked her lips involuntarily, as Sandy took the pillows from her and tossed them aside.\n\n\"Thank you, Maria,\" Sandy said walking up and standing next to the submissive but strikingly beautiful Latino woman. \"I understand you've met Annie and June here?\"\n\n\"Si, Senora,\" Maria whispered, gazing straight ahead at Annie and June on the bed in front of her. She could feel Sandy's soft breath on the side of her neck, as her naked breast brushed against Maria's clothed arm. \"We met...yesterday,\" Maria added.\n\n\"Tell me, Maria, don't they look beautiful? Look at June's breasts \u2013 how large and womanly they look. Look at Annie's beautiful pussy, Maria. It's open and wanton. It's almost begging for you.\" Sandy whispered, as Maria's breathing quickened. Sandy moved closer into the maid, her body pressing lightly against the side of Maria's body.\n\n\"Si, Senora, si,\" Maria whispered. \"They look...how do you say? Ra...diant!\" She whispered louder, pleased that she'd thought of the word.\n\n\"Yes, radiant,\" Sandy agreed. \"And do you know why they look...radiant, Maria?\"\n\nThe Latino woman nodded negatively as her eyes bore into Annie's, who was softly playing with her engorged cunt, while staring back into the Latino woman's eyes.\n\n\"Because,\" Sandy continued, moving Maria's hair away from her neck and leaning into it. \"Because we all three just finished making love to each other!\" Sandy gasped just as she licked the side of Maria's neck from the bottom up to her ear lobe, taking the fleshy nub between her teeth and nibbling on it momentarily. Maria closed her eyes, as she unconsciously began wringing her hands, her breathing quickening as her snug uniform showed two erect nipples through it. Keeping her mouth centimeters from Maria's ear, Sandy whispered, \"What time to you get off?\"\n\nMaria turned her head hesitantly to face Sandy's, their lips only centimeters away. \"I...I...had punched out when you called, Senora. I brought the pillows coz they said you asked for me.\"\n\nSandy nodded affirmatively before asking, \"Can you stay?\" Her tongue darted out making brief contact with Maria's lips, knowing the act would send pleasurable shivers through the Latino woman's body. \n\nMaria closed her eyes and motioned no with her head. \"No, senora, I have...to go...home. My husband...he...\"\n\n\"Look at them, Maria!\" Sandy said sternly, using her hand to turn Maria's head back toward Annie and June. \"Look at her, Maria!\" Sandy repeated, knowing Maria's token of affection was Annie. \"Look at her beautiful face, Maria! Look at her breasts! Those are mother's breasts!! You can drink her milk, Maria! Look at her pussy, Maria! She shaves it! You can taste her, Maria! Right now! You can taste her nectar! Her milk! You can make your fantasy come true, Maria! There will never be another moment like this, Maria!\" Sandy ended. Her hand had risen to Maria's bosom and was gently massaging the maid's breast through her uniform, as she rubbed her body lightly against the maid, who's chest rose and fell rapidly, while she gazed into Annie's glistening, soaked pussy. Annie's breasts were leaking milk on their own, signaling her intense arousal as she gazed at Maria and Sandy through half-lidded, desiring eyes.\n\n\"I...I...have worked double-shifts, before. I can maybe call...my husband...and tell him I will work another shift.\"\n\n\"What about your children,\" June asked, always the concerned one.\n\n\"They are with their abuelita, senora. They do not like their father. They are afraid of him. He drinks too much and has a bad temper, Senora! But, if I tell him...I work another shift...he will expect more money!\"\n\n\"We'll take care of it!\" June said, without hesitation.\n\n\"Call your husband, Maria!\" Sandy whispered into her ear again, before retreating back to allow the woman to move toward the phone.\n\nSlowly, Maria walked to the telephone. She dialed and waited. After a few seconds, she spoke into the telephone, presumably to her husband and in Spanish. While Annie, June and Sandy understood nothing that the beautiful, Latino woman was saying, they sensed irritation and anger in her, as her voice rose and her words quickened. After a few minutes of verbal sparring, Maria slammed the handset onto the receiver and rifled off a string of Spanish expletives at the idle telephone.\n\nLooking back at the three women, she simply said in her broken English, \"Fuck him!\" And with that, she untied and removed her white smock, covering her blue uniform.\n\n\"Correction,\" Sandy said smiling and moving behind the pretty maid so that both were staring at Annie and June, still laying on the bed. \"Fuck...you!\" Sandy whispered into Maria's ear.\n\nMaria smiled, as Sandy, from behind, squeezed the Latino woman's breasts before she began to slowly unbutton the buttons on the rear of the maid's blouse. \"Yes,\" Maria said hoarsely and licking her lips briefly as she gazed at Annie. \"Fuck me!\" She added and reached behind her to unzip her skirt, letting it slide to the floor. It was quickly joined by the blouse, which Sandy removed from her shoulders. Maria stood in a full length slip, watching Annie and June rub themselves as they watched the slow, sensual undressing. \n\nSandy moved the maid's hair aside again and planted a wet kiss on her neck as she moved the slip's spaghetti straps off of her shoulders and let it flutter to the floor, joining the crumpled skirt and blouse. ",
        "Maria stood, now, in white, cotton briefs and bra, suddenly embarrassed to be nearly naked in front of Annie and June. Sandy released the bra hook at Maria's back and the Latino woman's large tits came into view, slightly jiggling as her nipples contracted from the breeze. Her aureoles were large and wide with slight slopes that formed the pointy nipples.\n\n\"Mmmm,\" Annie moaned, as she slipped her fingers inside her bare pussy, its juices glistening in the light.\n\nSandy knelt behind Maria and slowly removed her underwear. Standing naked, Maria felt vulnerable and awkward, but excited at the same time. Her mound was covered in thick, black hair, forming a large, dark 'V' against her olive skin. \n\n\"Touch yourself, Maria,\" Sandy whispered in her ear, leading Maria's arm and hand to her own pussy. Maria continued gazing at Annie and June, but mostly Annie, as her fingers slipped through her pubic hair to rub her engorging nether lips. She closed her eyes and breathed sharply as she opened them and gazed lovingly into Annie's pussy. \"You want her, don't you Maria?\" Sandy asked. \"You want to taste Annie's pussy, don't you?\" Maria nodded yes and continued rubbing herself, her juices flooding her fingers. \"You want to drive your tongue into her sweet hole, don't you? You want to lick and bite her nipples, and maybe taste her sweet mother's milk, don't you?\" Sandy added, more sternly, now playing with Maria's heavy breasts from behind. Maria nodded affirmatively again. \"I can't hear you!\" Sandy hissed.\n\n\"Ye...yes,\" Maria said in barely a whisper, nodding still.\n\n\"Yes, what?\" Sandy asked. \"I want to hear you say it?\"\n\n\"I...I want to taste senora Annie. I want...to eat...her...pus-sy!\" Maria said, feeling a bit more at ease.\n\nSandy smiled at the comment, as she grabbed Maria by the hand and led her to the side of the king-size bed, next to Annie. Annie and June moved aside as Maria moved onto the bed and embraced Annie. Annie and Maria gazed into each other's eyes, as their nipples grazed against one another. In the meantime, Sandy moved around the bed to June. Taking June's hand, she helped her off of the bed, as Maria and Annie kissed sensually.\n\n\"Oh god that is so hot,\" June whispered watching her close friend's tongue dancing with the pretty maid's tongue, as Annie's hands traveled to Maria's ass and pulled the maid into her.\n\n\"Mmmm,\" Annie groaned into the maid's mouth as their kissing intensified. Maria moaned also.\n\n\"I want you,\" Sandy whispered into June's ear, as her hands massaged the older woman's breasts. \"I wanted to fuck you the moment I saw you nursing Annie in the dressing room, you slut!!\"\n\n\"Mmmm,\" June moaned as she kissed Sandy hotly. When the kiss ended, June said, \"that's quite a foul mouth you have there, young lady!\" Her voice had taken on the tone of a more authoritative figure.\n\n\"That's right, bitch, what are you going to do about it?\" Sandy hissed.\n\n\"I may have to spank you with my paddle!\" June said sternly. Both women couldn't keep their hands off of each other as fingers explored nipples and cunts.\n\n\"Yesss!!!!\" Sandy hissed in pleasure at the comment. \"Spank me, Mrs. C. I've been a very, very bad girl to your Annie, and I need punished!!\" Sandy said, her eyes glazing over from sexual desire, as she French-kissed June hotly. When the kiss ended, Sandy led June into the bathroom, grabbing the paddle on her way in.\n\nOn the bed Maria had turned and crawled over Annie; locked into a sixty-nine, as both women feasted on each other's pussy. Their moans filled the room, as Annie navigated through the maid's coarse, thick pubic hair, lovingly licking Maria's slit and nibbling on her clit.\n\n\"Ah!!! Senora!!! Annie!!! Annie!!!!\" Maria yelled before locking back on Annie's bare pussy. She had never eaten a shaved pussy before, and discovered she enjoyed it very much. With the hair gone, she could taste and feel the flesh; wet with its juices and engorged in its arousal. Maria nibbled on Annie's tender labia, as she drove her tongue deep into Annie's pussy.\n\n\"Ah, fuck!!! Eat me, Maria!!! Eat my pussy, baby!!!!\" Annie gasped, arching her back some, as she spread Maria cheeks and pulled herself back into the maid's hairy pussy above her. Cautiously, she let her thumb massage the Latino's woman's asshole as she ate her pussy.\n\n\"Ah!!! Ah!!!! Ah!!!! Senora!!! Senora!!!!!\" Maria screamed in her thick accent, stopping momentarily from eating Annie and leaning back. Her pussy sank into Annie's mouth, as Annie's tongue burrowed into her hole. \"Yes!!! Yes!!!\" Maria gasped, as Annie continued massaging her asshole with her thumb, removing her tongue from Maria's pussy and settling it onto Maria's clit. Annie sucked Maria's clit and massaged her asshole gently, as Maria's screams intensified.\n\nIn the bathroom, June sat on the lid of the toilet, her arms folded across her chest authoritatively; the paddle dangling from her fingers. Sandy stood before her, teasingly pouting her lips, her doe-eyes begging for mercy. \"Please, Mrs. C.!\" Sandy said coquettishly. \"Please don't spank me! I'll be good! I promise!! Please don't spank my ass, Mrs. C.!\"\n\nJune eyed the young woman in front of her with an eyebrow raised, as she unfurled her arms and simply pointed to her closed thighs, signaling for Sandy to lay across them.\n\nActing the part of the young, reluctant, girl who had misbehaved, Sandy timidly bent over June's thighs, her groin resting comfortably against the older woman's naked thigh. June caressed Sandy's cheeks with her free hand, while Sandy continued to plead. \"Please, Mrs. C., don't spank me! I'll be a good girl from now on! I promise! I won't touch your Annie unless you tell me! Please, don't spank me, Mrs. C.!!\" Sandy begged, while gyrating her hips invitingly against June's thigh, her own wetness coming.\n\nJune caressed Sandy's tear-drop shaped asscheeks momentarily before moving her free hand to Sandy's mouth; slipping a finger between Sandy's lips. Sandy licked June's finger invitingly, as she gyrated her plump, smooth cheeks for June, as if taunting her! Smiling wickedly, June raised the paddle and brought it down forcefully, the sound echoing across the hard surfaces of the bathroom, as Sandy yelped and then wimpered.\n\n\"Uh! Please, Mrs C.! That hurt!! Don't spank me!!\" Sandy continued to beg, all the while her ass continued to gyrate invitingly, as she sucked and licked June's fingers seductively.\n\nSmack! Sandy screamed again, as another smack followed, and another, and yet another. Her orgasm was fast approaching, as the spanking increased.\n\nOn the bed, Annie had flipped Maria over and now lay above her. Both lay in the same direction as they kissed hotly, before Annie crawled sensually up so that her plump, breast hung invitingly over Maria's succulent lips.\n\n\"Would you like to taste my milk, Maria?\" Annie asked breathlessly, as she rubbed her raw, humid pussy against Maria's thigh, that Annie had straddled.\n\n\"Si!\" Maria gasped, as her hands cupped Annie's ass, pulling Annie deep against her.\n\nMaria opened her mouth invitingly and licked her lips, as Annie's turgid nipple descended between her lips and disappeared. Instinctually, Maria took the entire aureole into her mouth and sucked voraciously, as Annie threw her head back. No sooner had Maria started sucking that Annie's sweet, warm nectar flowed out of her breast and onto the maid's tongue.\n\n\"Ah!!!!\" Annie gasped, as she continued rubbing her pussy hotly against Maria's thigh. \"Yes, Maria! That's it, baby! Drink my milk!! Oh!!! Ah!!!\"\n\n\"Mmmm!!\" Maria moaned at the pleasant taste of the warm milk that streamed from Annie's nipple with each suck. The pearly-white fluid tasted sweeter than Maria imagined, as it trickled down her throat. \"Mmmm!!!\" She moaned again.\n\n\"Oh, fuck, Maria!!! I'm getting close baby!!! My clit against your thigh and you sucking my nipple's too much baby!! I'm gonna... I'm gonna!!!\"\n\n\"Play with me, Senora! Make me cum, please!!!\" Maria begged, as Annie reached down and fingered the Latino woman's pussy. \"Oh, yes!!\" Maria said in her thick accent. \"Yes! Yes!! Yes!!\" \n\n\"I'm cumming, Maria!! I'm cumming!!! I'm...cum-ming!!!! Annie screamed as her body convulsed.\n\n\"Si, senora!! Me too!!! Me too!!! Ah!! Ah!!!!!\" Maria gasped through her own orgasm, as she continued sucking and drinking. Her orgasm wasn't as powerful as Annie's, who's body seemed to quiver in delight with every suck of her nipple!! \n\nIn the bathroom, June was taking great delight in spanking her submissive partner. Her breasts leaked milk from arousal as her hand continued its swath, jiggling Sandy's deep crimson cheeks with every slap.\n\nSandy had grown quiet, having slipped into an intense orgasm from the overwhelming and alternating sensations of pain and pleasure, not to mention from the whole submissive thing. Her body quivered slightly, as her pussy spasmed, sending a rush of syrup cascading over June's thigh.\n\n\"Uh!!\" Sandy let out a deep, guttural groan as her orgasm peaked, beginning its descent. June had stopped spanking and now lovingly caressed Sandy's reddened cheeks, leaning forward and kissing each one tenderly, as her hand slipped down and into Sandy's soaked pussy. \"Mmmmm!\" Sandy moaned at the touch.\n\nJune smiled. \"Seems like someone enjoyed being punished!\" She said teasingly, as Sandy slipped off of June and leaned back to rest on her haunch. \n\n\"Oh, I'm sorry, June,\" Sandy said, gazing at the clear fluid that covered June's thigh. It was literally dripping onto the bathroom floor, there was so much of it. \"I should've mentioned that I'm a squirter,\" she said.\n\n\"A squirter?\" June asked inquisitively.\n\n\"Yeah, a squirter. If I have a strong cum, I literally expel fluid from my cunt, like a man shoots cum from his cock!\"\n\n\"Oh,\" June replied, \"I thought it was pee.\" She made the comment in a matter-of-fact tone, as Sandy giggled.\n\n\"No, no,\" Sandy replied. \"Think of it as my 'cum',\" she added.\n\n\"Oh,\" June whispered, looking down and running her hands over her wet thigh.\n\n\"Hey, don't look so disappointed,\" Sandy quipped, as her eyes met June's. She saw the longing in June's smile and understood. Leaning forward, between June's legs, she kissed the older woman tenderly before whispering, \"Do you have a piss fantasy?\"\n\nJune gazed into Sandy's eyes momentarily before her blinking several times, adding, \"No, no...of course not!\"\n\nBut Sandy knew better, as she forced June to stay seated when she tried to stand. \"Yes you do!!\" Sandy hissed sternly, as June relaxed and gazed into Sandy's eyes. Sandy kissed June hard before whispering, \"It's okay. Jillian and I are into watersports. It's actually quite erotic.\"\n\nJune looked longingly into Sandy's eyes before stuttering, \"I...I...\"\n\n\"Shhh,\" Sandy whispered just before kissing June tenderly. When the kiss broke she gently but sternly whispered, \"Get in the tub.\"\n\nIn the bedroom Annie and Maria were draped in a loving embrace, after each experiencing powerful orgasms. Maria nursed from Annie's breast to relieve the pressure. \"That's a good girl,\" Annie whispered, caressing Maria's cheek and hair. \"That's it, drink it all down!\" she added, as the distinct sucking sound of someone nursing filled the silent room.\n\n\"I wonder what they're doing in there?\" Annie whispered, as Maria chose not to answer, reveling in the intimacy and security she was feeling from nursing on Annie's plump breasts.\n\nIn the bathroom, June lay flat in the large, empty bathtub, as Sandy squatted facing her, at the end of the tub over June's feet, a dainty foot on either side of June's ankles. Sandy had unwrapped a glass provided by the hotel near the bathroom sink and filled it with water. \"Play with yourself!\" She had ordered June as she took her seat in the tub and drank, filling her bladder.\n\nJune lay in the tub, her head flat on the surface, nearly under the large tub's faucet, as she gazed into Sandy's flared pussy. June was playing with herself as Sandy had spread her legs for June's gaze, drinking quickly. \n\nAfter a few minutes of June providing agonizing pleasure to herself, and Sandy downing a couple of more glasses of water, Sandy sat gazing into June's eyes, as she whispered, \"Ready?\"\n\nTimidly, June nodded affirmatively. She could hear her heart pounding in her chest, as the blood rushed through her head. Suddenly, she felt a warm sensation against her toes and feet. Glancing down, she saw the golden stream of urine coming from Sandy's open, engorged pussy. \n\n\"Oh my god!!!\" June groaned, tossing her head back and bringing her hand back to her pussy. She played with her pussy furiously as she glanced back at the golden shower her feet were receiving. And just as quickly, it stopped. \n\nSandy was grinning as she stood and walked gently forward until she was standing over June's torso. She squatted down so that her pussy gaped open, pointing into her navel. June continued playing with herself, as she glanced at Sandy's face. Sandy had her eyes squeezed shut as if in deep concentration. In anticipation, June closed her eyes and groaned, as she felt the warm, golden urine hit her stomach. She glanced down at the yellow fluid splashing and running across her stomach.\n\n\"Oh!!!\" June moaned as she played with herself furiously, the initial stirrings of her orgasm rising from her groin. \"Ah!!!! Fuck that's so hot!! Piss on me, Sandy!!! I'm a dirty slut!!! Piss on me!!!\" She gasped, as Sandy, grinning, moved a bit forward and covered June's tits with the golden liquid. \"Ah, fuck!!!! Piss on my tits, Sandy!! Piss on my milky tits!!!\" June screamed, no longer caring about what was taking place. Her orgasm approached very quickly as she strummed her clit and gazed into Sandy's eyes. \"I'm gonna cum, Sandy! I'm...gonna....ah.....!!!\"\n\nSensing that her urine session was peaking, Sandy yelled. \"Close your eyes and mouth!\" And before she could give June a chance to think why, Sandy shuffled upward and shot her golden stream across the mature woman's face, splashing the golden nectar across her sealed lips, her nose, her tightly shut eyes and dousing her hair.\n\n\"Mmmmph!! Mmmmph!!!! Mmmmmm!!!!\" June groaned loudly through tightly shut mouth and eyes as one of the strongest orgasms of her life ripped through her!!!. The degrading feeling of someone's urine splashing all over her was too overwhelming as her body shook and her toes curled.\n\nAs the stream of urine ended, June opened her eyes and mouth. \"Ah!!!!\" She screamed, as her orgasm peaked and began its descent. \"Ah!!! Oh!!! My god!!! Fuck!!!!!\" She gasped, quieter, as she wiped the yellow wetness from her eyes and mouth. \"Oh my god!!! Oh my god!!! That was unbelievable!!!\" She gasped again.\n\nStanding, Sandy smiled and pulled the mature woman to her feet, kissing her hard on the lips, tasting the pungent, sour liquid momentarily. Breaking the kiss, Sandy leaned forward and turned on the shower as June moved under the hot spray. Sandy exited the shower tub and the bathroom, leaving June to regain her senses.\n\nIn the main room, Sandy found Annie laying on the bed; her legs spread impossibly wide as her bald pussy displayed its raw, reddened lips flaring open, while Annie held it open with one hand and played with her clit with her other hand. Annie gazed lustfully into Sandy's eyes as she spoke.\n\n\"That was... the single... most erotic thing... I've ever seen!\" she whispered to Sandy, her orgasm lingering, waiting to come.\n\n\"You saw?\" Sandy asked, in reference to her urine play with June. Annie said nothing, but simply nodded affirmatively. Sandy could tell the older woman was close to orgasm, as she looked around. \"Where's Maria?\"\n\n\"She left,\" Annie gasped, only half engaged in the conversation as the other half of her mind seemed focus on her impending orgasm. \"She said she had to go!\" Annie managed to add.\n\n\"Did you pay her?\" Sandy asked, moving closer to the edge of the bed and standing a few feet away from the writhing woman in front of her.\n\n\"I tried,\" Annie answered, closing her eyes at times to keep from cumming, \"but she said she couldn't take money for something she enjoyed so much!!\" \n\nSandy let the conversation drift as she watched Annie strum her pussy just enough to keep her teetering on the edge. \"Want some help?\" Sandy murmured, noting the shower still running.\n\nAnnie gazed at her lustfully before nodding yes. Her mouth was slack as saliva dribbled from one corner. \n\n\"Mmmm,\" Sandy moaned as she positioned her head between Annie's thighs and slipped her hands under the older woman's ass cheeks, staring at Annie's bald, humid and raw pussy. Lifting Annie slightly, Sandy ran her tongue lovingly up Annie's slit before locking onto her clit and attacking it, mercilessly.\n\n\"Uh!!!!!!\" Annie let out a deep, guttural moan as her hand grabbed a fistful of Sandy's hair and pulled the young woman hard into her groin, as Annie arched her back. Her orgasm slammed into her immediately as Sandy teased her clit without mercy! \"Ah!!!! I'm cumming!!!!! Ah!!! Oh!!!!\" She screamed, as Sandy licked, flicked and sucked Annie clit through her powerful orgasm. \"Ah!!!! Fuck!!! I'm cumming already, Sandy!!! I'm....ah!!!!\" Just as Annie orgasmed, Sandy shoved her index finger into Annie's asshole, while she sucked voraciously on her clit. \"Ah!!!!!! Oh!!! Oh!!!! Fuck, Sandy!!!! Ugh!!!!\" Annie mumbled as her entire body quivered and her toes curled, while her thighs closed tightly around Sandy's face and her asshole flexed repeatedly around Sandy's finger.\n\nWhen her orgasm was over, Annie released her thigh grip on Annie's face as Sandy crawled over her and kissed her hotly. \"Mmmm,\" Sandy moaned into Annie's mouth.\n\n\"Mmmm,\" Annie returned her moan, as her hands filled with Sandy's plumb asscheeks; her fingertips sinking into Sandy's asscrack.\n\n\"Mmmm,\" Sandy moaned again, \"I like that. Play with my ass, Annie.\" \n\nAnnie kissed Sandy hotly as she pulled the young looking woman into her more tightly; her fingers sinking further into her crack. A finger found the young woman's anal opening and slid easily inside.\n\n\"Oh, yeah! That's it. Finger my ass, Annie!!\" Sandy gasped, kissing Annie hotly, as their succulent breasts rubbed together. \"You know what I really like? Really, really like?\"\n\n\"What's that?\" Annie replied, as the two continued kissing hotly.\n\n\"I like a tongue up my ass!\" Sandy answered hotly. \"Would you stick your tongue up my ass, mommy? I keep it nice and clean down there!\"\n\n\"Mmmm,\" Annie groaned. \"Yeah, I'd like that!! I wanna stick my tongue up my daughter's ass!!\" Annie added, remembering their roles.\n\n\"Mmmm,\" Sandy moaned, kissing Annie one last time before shuffling upward, bringer her groin toward Annie head. She turned so as to face Annie's feet before straddling her face and spreading her legs. She had done this many times with her sister, and so knew just how to position herself. She lowered her ass gently toward Annie's face before feeling Annie spread her asscheeks.\n\n\"Mmmmm, look how nice and clean! This perfect, pink little hole looks delicious,\" Annie groaned before sinking her stiff tongue into Sandy's anal opening. At the same time, Annie brought her fingers to Sandy's pussy and began rubbing her succulent lips and clit, as Sandy squeezed her plump breasts; pinching her nipples painfully. \n\n\"Ah!!! Yeah!!! That's it, baby!!! Tongue my ass, Annie!!! Lick my ass, Mommy!!!\" Sandy moaned, gyrating her ass in circles as Annie's tongue bore into her asshole \"Fuck, baby!! That's it!!! I'm getting close, baby!!! Keep playing with my cunt, baby!!! Lick my asshole!!!\"\n\nAll three women moaned and gyrated in unison as Annie's stiff, wet tongue penetrated Sandy's asshole repeatedly, while June's tongue wildly licked Annie's pussy. Moments later, Annie's tongue on Sandy's asshole and her fingers on Sandy's clit brought Sandy to a tremendous orgasm as she screamed and shook violently. And in response, Annie climaxed violently, screaming into Sandy's ass.",
        "When their orgasms were over, Annie and Sandy slumped onto the bed in complete exhaustion, yet completely satiated. The shower was still running. After several minutes, Sandy stirred and glanced at the clock.\n\n\"Holy shit, it's past midnight!\" She said standing and looking for her clothes. \"Annie, that was fucking incredible,\" Sandy gasped, slipping on her underwear. \"I can't thank you ladies enough for giving me this night! I can't wait to tell sis about it while she eats my pussy.\"\n\nAnnie smiled while watching Sandy dress. Finally dressed, Sandy buttoned her jacked and sat in the chair by the desk. Finding a pen and paper, she jotted down her personal contact information. Leaving it on the desk and standing, she smiled at Annie.  \n\n\"Give Juney a kiss for me, okay?\" Annie nodded affirmatively, suddenly sad to see the sales girl go. \"Thanks again for an incredible evening. I left my number on the desk here,\" she added walking over to Annie and kissing her lovingly. \"Call me, Annie. If you want.\"\n\nAnnie said nothing, unsure at the moment if she would have the nerve to contact Sandy again. They smiled, as Sandy walked to the door, waved goodbye and exited.\n\nMoments later, June exited the bathroom with only a towel wrapped around her head. She looked surprised to find only Annie. \"Where'd everybody go?\"\n\n\"They left,\" Annie replied. \"Maria had to go and Sandy just left. She left her number in case we ever want to call her again.\"\n\nJune gave a deep sigh, as she dropped the towel from her head and crawled onto the bed. She slipped under the covers and Annie followed suit. Satisfied and exhausted, both women cuddled under the covers, thinking about what had just transpired over the weekend. Without saying a word, Annie leaned forward and took June's nipple between her lips. She sucked and the milk came, slowly, nearly depleted. June moaned as she caressed Annie's hair; slurping sounds filled the suddenly quiet room. Moments later, June was asleep as Annie released her breast and covered her gently. She turned off the bedside lamp and lay there in the glow of the moon thinking about her feelings for June and wishing the weekend was not going to end in the morning. She had been fighting her feelings for June for the last few weeks but now couldn't deny them. She was falling in love with her best friend, and the thought terrified her. She began to cry, wondering whether to tell her or not.\n\nAnnie cried herself to sleep after what seemed like hours.\n\nThe following morning was somber. Annie and June woke to the sound of birds chirping and sunlight streaming through cracks in the curtains. They made slow, sweet love before showering and dressing. They packed and picked up the room a bit before having a light continental breakfast in the hotel's lobby. Annie had not said much the whole day, even eliciting a comment from June on the quiet ride home.\n\n\"I'm just sad that the weekend's over,\" she said smiling softly at June. While true, it was not the reason she was quiet. She was debating whether to tell June she loved her before they arrived home. But, she never got the nerve, remembering their families and children.\n\nIn Annie's driveway, they said their goodbyes, and somehow, Annie thought this might be the last goodbye...at least as lovers.\n\nJune waited until Annie was inside before speeding off, wondering why her friend was acting strangely.\n\nTO BE CONTINUED... "
    ],
    "authorname": "writerotica",
    "tags": [
        "breastfeeding",
        "nursing",
        "milk",
        "best friends",
        "sisters",
        "mother",
        "incest",
        "lesbian",
        "anal",
        "toys"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/annie-and-june-ch-04"
}