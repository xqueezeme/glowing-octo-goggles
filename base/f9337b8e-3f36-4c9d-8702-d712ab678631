{
    "title": "A Ski Adventure",
    "pages": [
        "The bell rang and, as we noisily gathered our books and folders, Mademoiselle Amaury announced, \"OK! Tomorrow we will talk about advanced statistical analysis.\"\n\nThis drew a loud groan from just about everyone in the class, myself included, and I nudged Chlo\u00e9 gently.\n\n\"You mean there's more advanced stuff than what we've been doing for the past six weeks?\" I exclaimed. \"This class is going to be the death of me.\"\n\nOf course, being a Senior at the International School of Paris, I actually said this to Chlo\u00e9 in French, a language that I have been more or less fluent in since my parents moved to Paris six years ago. \n\nChlo\u00e9 laughed and shook her head.\n\n\"Ahh, Michel.\" She always calls me Michel even though my name is Michael. \"If you were to focus more on what Mademoiselle Amaury is teaching and less on the length of her skirt you might find the class a little less difficult.\"\n\nI blushed, realizing that Chlo\u00e9 might be a little more aware of my crush on Mademoiselle Amaury than I had imagined.\n\n\"Ah, that isn't fair! I don't look at her like that!\" I responded.\n\n\"Michel, you are an eighteen-year-old American virgin. Watching you look at her is like watching a starving man looking at a ham sandwich. Why do you drool over her when there are so many girls of your own age you could date?\"\n\n\"What? Oh, come on Chlo\u00e9. I'm not that shallow!\" I said, shaking my head defensively.\n\n\"Really, Michel? Tell me that you've never spent time looking at her boobs or legs?\"\n\nThis rebuke was delivered with more than a hint of annoyance in her voice. Of course, being clueless about girls, it wasn't obvious to me why she might be so upset, however, I knew enough to understand that I should try to defuse the situation.\n\n\"Well, OK, maybe I'm attracted to her just a little bit,\" I said. \"But just because I admire how she looks doesn't mean that you need to get angry.\"\n\nChlo\u00e9's response was simply to arch her eyebrows, shoulder her backpack and, without as much as a single word, abruptly head to her next class.\n\nI was a little flummoxed by her rapid exit, which, I guess, is unsurprising since the sad truth is that despite possessing a strong well-muscled physique and being one of the brightest kids in the year, I've always been pretty shy and clueless when it comes to girls. In particular, I've never quite managed to get my head around how they think\u2014a failing which has regularly landed me in trouble with Chlo\u00e9.\n\nShe and I have been best friends since just about the first day I started at the school. Her father, Jean-Yves, met my dad, who's a diplomat when they were both working in Dubai. They became good friends, as had our moms, and had stayed in touch even after returning to their home countries. When dad was offered an assignment at the Paris embassy he was excited by the opportunity to renew his friendship with Jean-Yves and his wife, Marie, especially when he discovered he could find a place for me in the same International Baccalaureate program as Jean-Yves's daughter. I guess he figured that it would be good for me to have a friend around when making a start in such an alien environment.\n\nAnd make no mistake, an alien environment it was, at least to a twelve-year-old kid from DC. Not only did they speak a strange, foreign language, eat weird food and watch sports that most people had never heard of (rugby, anyone?) but their whole culture and approach to life was totally different from anything I had experienced. Consequently, having Chlo\u00e9 around to answer questions and guide me through the minefield of French cultural norms was a godsend that I had taken advantage of many, many times. \n\nAs it turned out, the fun and laughter that we shared as a result of my cultural ineptitude had, over the years, turned us into best friends who now spent much of their waking time together. Not only did we hang out together most nights of the week, either doing homework or working out in my basement gym, but at weekends we'd often go running or Chlo\u00e9 would act as a tour guide while we explored Paris together.\n\nNow I guess I should add that while Chlo\u00e9 is indisputably one of the hottest girls in the school, she and I are simply friends. Sure, I've admired her statuesque beauty and the locks of golden blonde hair that tumble in curls down past her shoulders, and while I'll admit that I've lusted over her small, trim body more than once, the fact that she is my best friend has always placed her off-limits in my mind.\n\nThat's not to say that I'm immune to the charms of the female form. Like any testosterone-fueled eighteen-year-old guy I'm almost perpetually horny. It's just that, being so shy around girls, I've never really had the nerve to extend a friendship into something more intimate. So Chlo\u00e9 is correct in asserting that I'm a virgin, although as far as I can tell, so is she. In her case, I'm sure it's through choice rather than any lack of opportunity, however.\n\nI caught up with Chlo\u00e9 over lunch, having determined that I needed to find out exactly what had been troubling her earlier.\n\n\"Is everything ok?\" I asked quietly. \"You left Statistics class really quickly this morning.\"\n\nShe smiled across the table at me. \"It's no big deal, I overreacted. Don't worry about it, Michel. It's just that, you know...\" she said, her voice trailing off. \"Oh, never mind,\"\n\n\"Chlo\u00e9, you know we can talk. What's bothering you?\"\n\nShe stared out of the window momentarily before turning and looking at me accusingly.\n\n\"I'm a woman, Michel,\" she said, pausing for a moment. \"I know I'm young, only eighteen, and have all of my life in front of me. But sometimes I just wish people would notice me.\"\n\n\"What do you mean? Of course, people notice you. You're beautiful, intelligent, funny, caring.\"\n\nShe looked at me with her piercing blue eyes, smiled and shook her head.\n\n\"Thank you, I appreciate that. But why were you ogling Mademoiselle Amaury when there are so many girls of your own age?\" she said, the merest hint of sadness in her voice. \"You never look at me like that.\"\n\n\"I wasn't. I was just, ugh...it's just what guys do, Chlo\u00e9. It doesn't mean anything.\"\n\nShe looked out the window wistfully and sighed as she turned back towards me, a look of disappointment on her face.\n\n\"Honestly, guys can be so obtuse at times! Let's just drop it.\"\n\nSince it appeared that I had, once again managed to draw her ire, I was more than happy to drop it and switch subjects.\n\n\"Has your mom talked to you about plans for Ski Break yet?\" I asked, brimming with excitement. \"Sounds like they are planning a trip to Chamonix. I can't wait to get some skiing in!\"\n\nHer deep blue eyes regained some of their normal sparkle.\n\n\"Oh, are you sure? Mamam hasn't said anything about vacation. It would be wonderful though.\"\n\n\"Well I heard my mom and yours talking on the phone at the weekend and it sure sounded like that was what they were discussing. Aren't you and your parents coming over for dinner on Saturday? Maybe they'll tell us then.\"\n\n\"I hope they do. I so love being in the mountains and the snow. It's such a romantic place to be,\" she beamed.\n\nFor once, my prediction turned out to be correct and, over dinner on Saturday night, our parents informed us that they had rented a small, four bedroom condo in Chamonix for a week. The plan was for us to leave early on Friday afternoon and hopefully be in Chamonix by late evening. We'd then have six glorious days of skiing and snowboarding on the flanks of Mont Blanc, one of the best ski mountains in the world.\n\nChlo\u00e9 and I were over the moon at this news and, after excusing ourselves from the adults, headed to my room where we talked eagerly about what we might do in Chamonix.\n\n\"I want to ski the Vall\u00e9e Blanche! That would be totally awesome.\" I said, excitement coloring my voice.\n\n\"Yeah. Ang\u00e9lique did it last winter with her boyfriend and said it's not to be missed.\"\n\nChlo\u00e9 was sitting beside me on my bed, her long legs stretched out in front of her as we checked out the Vall\u00e9 Blanche route on my laptop. She was close enough that I could almost feel the warmth of her body and each time I turned my glance towards her, my eyes were inevitably drawn to her smooth, toned thighs that were barely covered by the short black skirt that she wore. \n\nIt was difficult to keep up my side of the conversation since, as we talked, my mind continually conjured up vivid images of Chlo\u00e9's naked body being ravished by mine. It was a bizarre experience and I was glad that my computer served to hide the thick erection that had formed in my jeans. \n\nI was confused. What was happening? When had my friend of six years suddenly become a hot, young woman?\n\n\"I'd like for us to take a sleigh ride together in the snow,\" Chlo\u00e9 said, breathlessly. \"Think how wonderful it would be for the two of us to be riding through a moonlit forest on a sleigh!\"\n\nHonestly, I can't say that I was completely sold on the charms of that particular activity but I decided to keep that particular thought to myself. Besides, my brain was occupied by a much more pressing matter\u2014specifically, whether I should succumb to the strong feelings that Chlo\u00e9's close proximity, delicious scent, and long, smooth legs were generating and simply kiss her.\n\n\"Ummm Chlo\u00e9...you know we've been friends forever and, well, ummm...\"\n\nUnfortunately, Chlo\u00e9's mom dealt a mortal blow to my amorous advance by choosing that very moment to call upstairs that they were getting ready to leave. \n\nChlo\u00e9 looked at me questioningly, a glint in her eyes.\n\n\"Guess I have to go. Give me a goodnight hug.\"\n\nWhile we often hug when parting, this time seemed different. She hugged me tightly, crushing her small breasts against my chest and brushing her lips across my cheek. By that time my cock was hard and the pressure of her body against mine only served to make it grow harder.\n\n\"See you Monday, Michel,\" she said, her eyes twinkling as she extricated herself from our hug. \"Sleep well and sweet dreams.\"\n\nMy dreams that night turned out to be not only sweet but frustrating as well. In the dream, Chlo\u00e9 and I shared a full day of skiing under a sparkling blue sky. Afterward, she joined me in the hot tub wearing nothing but a flimsy red bikini that emphatically displayed her small, perky breasts and long, tanned legs. Apparently, in my dreams, I had none of the inhibitions regarding Chlo\u00e9 that haunted me in real life since we were soon kissing passionately while my hands openly explored her tight, sexy body. Delight quickly turned to frustration however, since just as my hand slid onto her breast, I woke up. My fingers were tightly wrapped around my stiff cock, stroking it hard as I frantically tried to recall the feeling of Chlo\u00e9 in my arms. Hard as I tried, however, I just couldn't recapture the wonder of the moment when my hand had found her soft, warm breast.\n\n***\n\n\"Wake up, Chlo\u00e9, we're almost there,\" I said softly.\n\nDespite the expansive room available in the back seat of the Audi that Chlo\u00e9's mom was driving, Chlo\u00e9 had fallen asleep with her head on my shoulder and her body pressed against mine. Sitting up with a start, she peered into the darkness and rubbed her eyes.\n\n\"How long was I asleep?\"\n\n\"About two hours,\" her mother replied. \"You look so cute sleeping on Michael's shoulder, Chlo\u00e9. It's a shame that you and Michael are just friends.\"\n\nI laughed quietly as Chlo\u00e9 put two fingers in her mouth and made a gagging sound.\n\nTen minutes later we were there, and I was carrying skis and bags into the lobby from the cars, creating a large pile of luggage. Behind me, I could hear a heated back-and-forth between the dads and the lady behind the reception desk, but I couldn't make out what was being said. Eventually, the two of them turned and joined us beside the luggage.\n\n\"Stupid place seems to have mixed up our reservation,\" my father seethed. \"They insist that we only have three rooms rather than the four that I reserved. I don't know what we're going to do. They say they are full because it's Ski Break all over.\"\n\n\"Oh, maybe Chlo\u00e9 could share with Jean-Yves and I?\" Chlo\u00e9's mom said, looking at her husband.\n\n\"Unfortunately, that won't work, Marie,\" my dad replied. \"Two of the rooms have king beds and the other has two twins. I guess I can take the twin room together with Michael.\"\n\nMy heart sank. A week sharing a room with my dad. He had to be joking!\n\n\"Non, non, that would be too bad!\" Marie said. \"How about...Jean-Yves, how would you feel about Chlo\u00e9 and Michael staying in the twin room together? I know it's a little odd but they have known each other for years.\" And then, looking directly at me, she said, \"Besides, I trust Michael.\"\n\nI shifted uncomfortably under her gaze. \n\n\"It's alright with me so long as Chlo\u00e9 is ok with it. After all, we'll be out skiing all day and most evenings for dinner. So it's just somewhere to sleep,\" I said, looking over at her.\n\nMy mom interjected, \"We couldn't ask Chlo\u00e9 to do that, Marie. It wouldn't be fair!\"\n\nWhat? What was she thinking? I thought to myself, frantically trying to come up with a reason why it was perfectly fair. Thankfully, Chlo\u00e9 quickly stepped in to save the day.\n\n\"It's OK. Michel and I are good friends,\" she said, sweeping her head around to look at each of us in turn, \"and we aren't kids. I'm sure we can manage. Let's just get the bags up to the rooms. I'm tired!\"\n\nTwenty minutes later we had said our goodnights to both sets of parents and were settling into our room. I smiled warmly at Chlo\u00e9 as I locked the door.\n\n\"Thank you for saving me from a week of sharing with my dad!'\n\nShe laughed, grinning at me. \"You should have seen your face when he suggested it! You looked as if the world was coming to an end!\"\n\n\"It pretty much was! I did have to listen to the 'you had better behave and not let me down' speech out in the hallway though, which is still better than having to spend a week listening to his snoring, I guess.\"\n\n\"Well, count yourself lucky young man, and you had better be on your best behavior,\" she said with a giggle. \"Anyway, I'm going to shower and get ready for bed.\"\n\nOpening her bag, she rummaged through the contents before pulling out a large toilet bag and some clothes. \n\n\"I won't be too long,\" she said, \"though being a girl, it will probably take me a little longer than you're used to. Don't fall asleep.\"\n\nTwenty minutes later she emerged from the bathroom, gently toweling her long blonde hair. She had donned a grey T-shirt and a pair of thin cotton pajama shorts which provided a stunning view of her tanned legs and tight ass. She was clearly braless under the tee since her nipples appeared to be pushing prominently against the material.\n\n\"What?\" she said, looking at me as I watched her cross the room.\n\n\"Ummmmm...nothing,\" I stammered, a little embarrassed at having been caught appreciating her figure so openly.\n\n\"Right,\" she said. \"Why do I so not believe that?\"\n\nI blushed. \"Well, OK. I was thinking how amazing you look and wondering whether or not I should tell you.\"\n\n\"Really? We've known each other for the past six years and you're only now getting around to realizing that I'm a girl?\"\n\n\"Of course not! I know you're a girl, Chlo\u00e9. It's just that, well, you are my best friend and I've tried not to think of you that way.\"\n\nShe sighed. \"Honestly, for such a bright guy, you can really be pretty dumb at times, Michel,\" she said, drawing the comforter back and sliding between the sheets. \n\n\"What's that supposed to mean?\" I asked quizzically, gathering my own toilet bag and heading towards the bathroom.\n\n\"Never mind. Don't worry about it,\" she replied. \"I may be asleep when you get done. If so, goodnight.\"\n\nOnce again it wasn't clear to me how I had upset her. However, by the time I completed my bedtime preparations, there was soft heavy breathing emanating from Chlo\u00e9's bed and I had no chance to pursue the issue. So I quietly climbed into my own bed, placed my hands behind my head, and silently contemplated my new and seemingly growing attraction to Chlo\u00e9.\n\nThe next morning I woke early. We weren't planning to ski until later so I decided that a quick shower was in order, to freshen up and get ready for the day. Chlo\u00e9 was still asleep, tightly curled beneath the comforter, as I padded quietly towards the bathroom. The hot water spraying softly over my body was awesome and I luxuriated in the shower for a full ten minutes or so. Afterward, I brushed my teeth and without thinking walked back into the bedroom, a fluffy white towel wrapped around my waist. Unfortunately, Chlo\u00e9 had chosen that exact moment to get dressed and was standing by her bed, naked from the waist up, holding the grey T-shirt that she had slept in. \n\nI will admit to being mesmerized by the sight of her nearly naked body and no matter how hard I tried, I couldn't find the will to draw my eyes from her perfect breasts. I was instantly hard, my cock rising to tent the towel as I stood quietly by the door, transfixed by her beauty.\n\nSuddenly realizing that I was there, Chlo\u00e9 screamed and quickly used the shirt to cover herself.\n\n\"Michel! Didn't you think to knock! Or at least make some noise to indicate you were done in the bathroom!\"\n\n\"I'm sorry, Chlo\u00e9! I didn't...I didn't mean to,\" I stammered.\n\nWatching from across the room her face slowly softened and she began to giggle as her eyes homed in on my towel covered erection.\n\n\"Bien! It seems that at least some parts of your body aren't immune to my feminine charms!\"\n\nI gasped as she dropped the T-shirt and stood, hands on hips, staring at me.\n\n\"Oh, Michel, don't look so astonished,\" she said quietly, \"I've been trying to make you notice me forever. I've watched you drool over Mademoiselle Amaury and other girls at school but never look at me. I'm glad I've finally found a way of getting your attention.\"\n\nI was dumbstruck! Until a few weeks ago I hadn't even thought of Chlo\u00e9 sexually and I certainly never imagined that she had any romantic interest in me. Now here she was crossing the room towards me, almost naked, her nipples hard and prominent. I swallowed hard, my eyes darting urgently between her face and her breasts.\n\n\"Chlo\u00e9, you're gorgeous. In fact, I think you're absolutely beautiful. But...\"\n\nShe stopped close to me and placed a finger on my lips. Then, looking me in the eye, stood on the tips of her toes and brushed her lips softly across mine. Instinctively my arms went around her, our lips parted and my tongue sought hers. The kiss quickly became passionate and Chlo\u00e9 let out a small moan as our tongues tangled and danced within her mouth. Her hands were in my hair, then roaming over my back as an indescribable warmth spread through my body. My mind raced with desire as I felt her naked breasts pressing softly against my chest and my cock twitched as I recalled the pleasure of caressing her breasts in my earlier dream.\n\nWhen, a few minutes later, Chlo\u00e9's small hand tentatively closed around my hard shaft, it was my turn to emit a low moan as my knees shook and my body trembled. \n\nI was in shock, my mind reeling from the myriad different thoughts that assaulted it. I wondered whether Chlo\u00e9 had planned this, or whether it was just an opportunity she couldn't pass up. Above all, I wondered, through the haze of pleasure that had descended on me as Chlo\u00e9's hand moved slowly up and down my shaft, just how amazing it felt to have her hand stroking me rather than my own. \n\n\"God, that feels so good!\" I moaned into her ear.\n\nAfter a few moments of continued stroking, she stepped back and looked down at the prominent bulge that tented my towel.\n\n\"I'm flattered, Michel,\" she whispered. \"May I see it?\"\n\nHer question froze me in place, unable to move, while I digested her request.\n\n\"Chlo\u00e9...I...really? Are you-\"\n\n\"Shhhhhhh, Michel. Don't talk. Just go with the moment.\"\n\nBlushing, I slowly pulled the towel apart and dropped it to the floor. My cock sprang higher, pointing almost straight up towards the ceiling and Chlo\u00e9 eyed the thick, hard erection warily. It was bobbing gently, pulsing, and the large bulbous head was an angry shade of purple.",
        "\"Ooh la, la!! Michel, I never imagined he would be so big!\"\n\nI was locked in place, smiling as she showered me with compliments on the shape and size of my dick.\n\n\"Ummmmm, how are we going to get him to go down, Michel? You can't go to breakfast like that!\" she giggled.\n\nI blushed. \"I'll have to cum,\" I groaned. \"I'm so aroused he'll never get soft if I don't.\"\n\nNow it was Chlo\u00e9's time to blush. \"Ummm, Michel,\" she said softly, a soft red tint spreading across her face. \"Will you let me watch?\"\n\nI was, of course, embarrassed by the idea of Chlo\u00e9 watching me masturbate, however, my little head was in control and I desperately needed to cum. So ignoring her question, I lay on the bed, propped my head against the headboard and began to stroke my thick shaft. Chlo\u00e9 watched intently as my hand slid up and down, pausing now and then to caress the tip. I settled into a rhythm, pumping my cock hard, my eyes focused on Chlo\u00e9's breasts and my thoughts fixated on how they would feel in my hands. I was soon panting and moaning, all embarrassment gone, rushing towards the amazing moment when my balls tighten and cum shoots high into the air.\n\nThe sound of Chlo\u00e9's voice broke my focus.\n\n\"Michel, I want to help,\" she said softly. \"After all, it's my fault.\" \n\nWhat? I couldn't quite believe what my brain had just heard. I looked at Chlo\u00e9 intently before moving over to create space on the bed beside me. She nodded, climbed onto the bed, and immediately scooted down before laying her head on my belly and absorbing a close-up view of my erection. Gingerly, she reached out and rubbed her fingers over the small bead of precum that had formed at the tip of my cock, smearing it gently over the head. I moaned softly when she finally wrapped her sticky fingers around the shaft and slowly slid her hand up and down the entire length while using the fingers of her other hand to caress my heavy balls.\n\n\"Like this, Michel?\" she asked quietly.\n\n\"Oh, yes, Chlo\u00e9. God, that feels wonderful,\" I groaned, as she stroked me.\n\nMy breathing became more and more ragged and I tangled my fingers in her hair while her small, soft hands worked my cock. It didn't take long for the pleasure to become almost overwhelming and I was soon at the point of no return. \n\nI gasped a warning to Chlo\u00e9. \"Chlo\u00e9...you're going to make me cum!\"\n\nThe warm pleasure building inside me was irresistible and a few moments later my body stiffened as my balls began to unload a thick stream of cum into the air.\n\n\"Oh my God, Chlo\u00e9...oh my God,\" I grunted. \n\nShe continued to stroke me while my body shuddered from the amazing sensations that were assaulting it. Finally, I lay on the bed panting, amazed at what had just transpired.\n\nChlo\u00e9 giggled softly, \"Oh, Michel...who would have thought there was so much? That was incredible, thank you.\"\n\n\"Thank me? All of the thanks belong to you! That was the best thing that has ever happened to me! Ummmm...are you okay?\"\n\n\"Shhhhhh, I'm fine,\" she replied, her beaming smile helping to break the tension of the moment. \"It was fun. Now you had better go clean up before someone comes to see why we're late for breakfast.\"\n\nHalf an hour later we were sitting around the breakfast table eating bread, cheese, and charcuterie with our parents, discussing the weather and our plans for the day. As we enjoyed the food we were careful to give no inkling of what had happened in our room just a short while earlier, which was difficult, as my mind continually played visions of Chlo\u00e9's small hand sliding up and down my cock as I shot rope after rope of cum into the air.\n\nAfter breakfast we headed out to the slopes and were soon congregated at the top of an easy blue, preparing for the first run of the week. Chlo\u00e9 was wearing tight white ski pants with a pink hooded jacket trimmed with white fur, and to me, had the look of a blonde goddess. I got an instant boner watching her bend over to adjust her bindings, my fertile mind transforming the sight into one of her bent over, naked, waiting to receive my hard cock. Of course, I had no idea when such a wondrous experience would come to pass but I knew, in that very instant, that one day she would be mine.\n\n\"OK, let's go! Bet I beat you to the bottom, Michel!\" Chlo\u00e9 shouted with a laugh, as she took off down the mountain.\n\nChlo\u00e9's challenge immediately snapped my mind from its erotic visions and I followed, chasing her as fast as I could. She was an excellent skier and I admired her tall, lithe body as she expertly carved turns in the crisp snow. She skied for a full five minutes, occasionally looking back to check on me, before coming to a halt just above the next section of the run.\n\n\"C'est Bien!\" she said as I pulled up beside her. \"It is so quiet and peaceful...so beautiful, Michel,\" she said, breathlessly. Then, grinning sexily, she added, \"I hope you are going to be able to keep up with me this week...and not only on the slopes.\"\n\n\"Ha!\" I responded. \"You cheated\u2014taking off before I was ready!\"\n\nBlushing, I absorbed the second part of her challenge, wondering what additional adventures she might have planned and whether I would, indeed, be able to keep up. To save me from having to answer I looked up the mountain and watched our parents descend, albeit at a much slower pace than we had.\n\n\"Come on, let's go,\" I said. \"They'll catch up with us at the bottom.\"\n\nShe grinned and pushed off with her poles, beginning the race once more. She navigated the piste gracefully, following the fall line and using long, lazy 'S' turns to control her speed. I followed behind, turning where she did and waiting for the moment when I might shoot past her and lead the way to the bottom. Eventually it came and I cut inside her, pointing straight down the slope, as the bottom lift station came into sight. I heard her sharp cry of dismay behind me and I knew that she would be driving herself down the slope relentlessly in an attempt to catch me.\n\nWe reached the bottom together, almost in a dead heat, both of us laughing. I high-fived Chlo\u00e9, congratulating her on both her style and speed.\n\n\"Oh, that was totally awesome,\" a huge grin filling my face. \"You were great. I had forgotten what a great skier you are. And you looked so graceful and beautiful!\"\n\n\"Merci, Michel!\" she said nudging my shoulder with hers. \"For an American, you ski pretty well too!\"\n\nJust then our parents arrived, braking sharply and throwing snow over the both of us. Chlo\u00e9 squealed.\n\n\"Maman, that's not nice!\" she said, laughing.\n\n\"Ah, my dear...what's not nice is taking off down the mountain and leaving your elderly parents to find their own way down!\" Marie responded, her breath coming in shallow gasps.\n\n\"You guys aren't old...just slow,\" I said, looking at Marie and my Mom, who were shaking their heads.\n\n\"Careful, Michael. Remember this is the first run of the day. Marie is an expert skier and I'm betting that she will be beating you down the mountain by the end of the week!\" my mom replied.\n\nI laughed. \"Well, I think I'm up for the challenge!\"\n\nFive o'clock found us in one of the popular slope side bars, celebrating with a few beers in traditional apr\u00e9s ski fashion. France has a much more liberal attitude to alcohol than America and Chlo\u00e9 and I were able to relax over a beer as we talked excitedly about the day. It was after seven before the two of us finally trudged into our room, tired and exhilarated.\n\n\"That was a totally awesome day,\" I said, sitting on my bed, more than a little exhausted from the exertion of the day. \"I'm wiped, but let me grab a quick shower and then you can get ready while I meet Mum and Dad in the bar.\" \n\n\"Fine, I'm pretty exhausted too, so go ahead.\"\n\nAn hour later, I was rendered almost speechless when Chlo\u00e9 appeared in the bar. She was rocking black skinny jeans paired with a black and cream Alpine sweater and black ankle boots. The jeans were tight across her ass and emphasized her long legs, while the sweater perfectly accentuated her slim figure and pert boobs. Her long blonde tresses tumbled over her shoulders and her face glowed with a natural beauty. She looked totally ravishing and captured the attention of almost everyone in the bar as she made her way towards us.\n\nLater, back in our room, I told Chlo\u00e9 just how great she had looked and the many appreciative glances that she had garnered. \n\nShe smiled brightly. \"Merci, Michel. I wanted to look good for you.\"\n\n\"Thank you. Ummmmm, do we need to talk about this morning, Chlo\u00e9? I, ummm, well It was amazing but \u2014\"\n\n\"Michel, sometimes you think too much. Why don't we just go with what feels good and natural for both of us and see what happens? I loved watching and hearing you. So who knows what might happen next.\"\n\nWith that, she wrapped her arms around my neck and, reaching up, kissed me softly. The kiss was warm, soft and comfortable although it quickly became deeper and more passionate. Our mouths were open, tongues wrestling as our bodies pressed close. My cock hardened instantly, hoping for a repeat of the morning's activity. However, just as my hands wandered to Chlo\u00e9's ass she broke the kiss.\n\n\"Time to get ready for bed...I'm so tired,\" she said, yawning. \"Oh don't pout, Michel. We have a whole week to enjoy being together.\"\n\nEmerging from the bathroom ten minutes later, she was once again wearing the soft cotton pajamas and grey tee that she had worn the night before. However, tonight, instead of sliding into her own bed, she crossed to mine and asked, with a teasing grin, if we could snuggle. This, of course, was music to my ears and I quickly flipped back the sheets and made room for her. A warm wave of pleasure suffused my body, and my cocked stiffened when she slid her firm body against mine and laid her head on my shoulder. After a few minutes, her fingers began to run up and down my bare chest, caressing me softly and I groaned when they finally approached the waistband of my boxers. \n\nShe lifted her head and smiled at me.\n\n\"You are so handsome and sexy, Michel. I love that you get so hard for me!\" she said, grasping my rigid pole through my shorts. \n\nI moaned as she squeezed me. \"Chlo\u00e9...you can't\u2014\"\n\n\"Can't what, Michel? Do you want me to stop?\" she breathed, running her nails the length of my cock.\n\n\"God, no. No, of course not.\" I gasped as she grasped me again. \"Oh...fuck! Did you lock the door?\"\n\nShe laughed. \"No, why? Do you think we might get a visit from our parents?\"\n\n\"I don't think so. Your Mom said that she trusted me. But it wouldn't be good if they found you in my bed.\"\n\nPouting, she slid out of bed and padded across to the door, locking the deadbolt.\n\n\"Better?\" she said, turning gracefully and smiling at me. Then, grasping the bottom of her tee, she pulled it up over her head, exposing her small, perky breasts. I was captivated, my heart pounding and my eyes firmly fixed on her stiff nipples as she crossed back to the bed.\n\n\"Can I join you again, Michel?\"\n\nWithout waiting for an answer she slipped back into the bed, sliding her body close to mine once more.\n\nThe smell of her freshly showered body was intoxicating. Our mouths quickly found each other and we kissed, her soft lips parting to admit my tongue. The kiss was long and passionate, our hands roaming over the other's body, teasing and caressing. She moaned quietly when my mouth moved to her neck and shoulders, nuzzling, nipping, and, finally, nibbling her ear. A moment later she entwined her fingers in mine and slowly guided my hand to her breast. It was exactly like my dream, except this time it was reality. Her soft, warm breast really was in my hand, and she really did moan into the kiss when my fingers rolled and squeezed her stiff nipples. She stroked my stiff member through the thin material of my boxers and I yearned for the feel of her soft hand around my shaft.\n\nI broke the kiss, panting, \"I want to be naked with you!\"\n\nShe looked at me cautiously, biting her lip while she thought for a moment. Then she rolled on her back, lifted her hips, and quickly drew the shorts down her long legs. My eyes drank in the vision of her naked body for what seemed forever. She was a natural blonde and I could clearly see her swollen lips through the sparse pubic hair that covered her sex. Small, glistening beads of moisture covered her lips and I knew that she was feeling just as hot as I was.\n\n\"You too, Michel,\" she whispered.\n\nI wasted no time, pulling off my boxers and freeing my cock before kissing her again and allowing my hands to explore her breasts, gently pulling and tugging at her nipples which were clearly very sensitive. She returned the kiss ardently, her tongue eagerly seeking mine and grappling with it frantically. After a few minutes I rolled her on to her back and she looked up at me nervously as my long, thick member pressed against her stomach.\n\n\"I don't know if I'm ready, Michel. I'm sorry, I really, really want to, but...\" she said quietly.\n\n\"It's okay, Chlo\u00e9. Let's just go slow. We'll both know when the time is right.\"\n\n\"Merci, Michel...I just don't want you to think I'm stringing you along.\"\n\nWe kissed again and when we came up for air she grinned up at me wickedly.\n\n\"There is something else I want to try,\" she said, pushing me off and sitting up on the bed. \n\nShe rotated her body quickly, ending up with her mouth level with my cock and her pussy inches from my face. Her top leg bent and lifted, giving me access to her sex while she grasped my hard shaft, pumping it slowly. I grew harder as she stroked me and moments later, when Chlo\u00e9's tongue swirled softly over the crown of my cock, I was in heaven. She bathed the head of my cock with gentle kisses and long, loving licks of her tongue which quickly had me gasping for more. A few minutes later I caught my breath sharply and moaned her name when her sweet lips closed around my cock.\n\n\"Chlo\u00e9. Oh, god, Chlo\u00e9.\"\n\nI watched her head push down my shaft, taking more of me into her mouth and drawing a deep groan from my throat, followed, almost immediately, by another, as she smoothly drew her lips back up. She repeated this process, seeming to gain in confidence as she listened to the effect her mouth was having on me, each time sliding her mouth a little further down my cock. I was totally captivated by the sight of my thick cock slowly disappearing between her luscious lips as she worked to pleasure me, in a way that was totally blowing my mind, while teaching herself how to suck a cock. It would have been easy to simply enjoy the pleasure that Chlo\u00e9's mouth was delivering, however, the faint musky scent of Chlo\u00e9's sex, so close to my face, was driving me wild.\n\nReaching out, I ran a finger up and down her bright red lips, parting them as I explored her labia for the first time. She was wet and slick and when my fingers rubbed gently at the small, red bud they found, she moaned softly, letting me know that I had found her spot. I focused all of my attention there for a few minutes, using my fingers to vary the speed and pressure with which I touched her and listening closely to the sounds she vocalized in response. Despite my lack of familiarity with female anatomy, I knew that I had found her clit and from the soft mewling sounds that escaped her mouth, I gathered that she wanted more. Pulling her a little closer, I tentatively parted her lips with my tongue, tasting her for the first time. She moaned in pleasure as I slowly ran my tongue from deep between her legs to the point where her lips joined. She gasped loudly when it brushed softly across her clitoris.\n\n\"Ahhhhhh, Michel. That felt so good,\" she said quietly.\n\nRolling her onto her back, I knelt, gazing down at her moist, inviting slit before returning my mouth to the exploration of her pussy. I licked, lapped and kissed softly, allowing Chlo\u00e9 to position herself so that my mouth worked those parts of her pussy that needed the greatest attention. It was the perfect way for both of us to learn what she needed and craved. Eventually, we found a rhythm; Chlo\u00e9 would push her hips from the bed and my tongue would lick deep at her entry. As her hips descended I'd draw my tongue up through the slick, swollen folds of her pussy until the tip of my tongue ran across her small clit. Her juices flowed freely as I worked at her sex and, despite my initial trepidation at using my mouth, I found pleasure in the taste of her warm, wet pussy and the soft, muffled moans that emanated from deep within her throat.\n\nHer hands were in my hair, pressing my mouth against her slick folds and she was soon breathing heavily, catching her breath in deep, ragged pants. The movement of her hips grew more frantic and by the way that she whimpered each time my tongue rasped her clit I guessed that she was close to cumming. I pushed my mouth harder against her inflamed lips, sucked her clit into my mouth and swirled my tongue over and around it as I urged her onwards to orgasm.\n\nMoments later her fingers pulled painfully at my hair, her body arched and her thighs clamped tightly around my head. She cried out, moaning my name over and over, as waves of orgasmic pleasure began to roll through her, stealing her consciousness for just a moment. Her orgasm went on and on, her body convulsing and bucking wildly, and I watched in fascination. Eventually, the intense pleasure faded and she lay panting on the bed.\n\n\"My God, I've never cum like that before,\" she gasped.\n\nI started to lap softly at her pussy once more but she pushed me away, giggling lightly.\n\n\"Stop, Michel...please! Give me a moment. We're way too sensitive afterward for that.\"\n\nI turned around, leaned over and kissed her deeply. After we kissed I sat back and gazed deep into Chlo\u00e9's sparkling blue eyes.\n\n\"Your turn,\" she said softly. \"Lay on your back.\" \n\nAs soon as I did, she returned her attention to my cock, scooting closer on her knees before grasping it and guiding it back to her mouth. She kissed the head softly and I felt a little suction as her lips peeled away. Another soft kiss followed, then another, until I was a quivering, moaning wreck. Then, instead of another kiss, she closed her lips around me and began working them slowly up and down my shaft, her hand gently squeezing my balls as she used her mouth on me. She kept this up for a few minutes, all the while varying the speed and depth.\n\n\"Oh God Chlo\u00e9...I'm going to cum...\" I said, attempting to pull myself from her mouth.\n\nIgnoring my warning she continued to bob her mouth on my cock. Seconds later my body shuddered and my balls released my second load of the day, which Chlo\u00e9 gamely attempted to catch with her mouth. The force with which my cum jetted into her throat caught her by surprise however and she gagged noisily, pulling her mouth from me and gasping, just as I expelled one final jet which splashed across her face, causing her to grimace. \n\n\"I'm so sorry, Chlo\u00e9. I didn't mean to\u2014\"\n\n\"It's fine...don't worry. It just happened so quickly,\" she said, before adding \"Don't worry, I'll do better next time.\"\n\nShe lay beside me and I wrapped my arms around her as she cuddled up to me. We kissed softly, a gentle, warm kiss that spoke volumes about the connection that was developing between the two of us.\n\n\"You are amazing,\" I said softly when we broke the kiss.\n\nShe nuzzled her head against mine. \"Thank you, Michel. You are too. I'm so tired though. I need to go to sleep.\"\n\nThe rest of the week passed with days very similar to our first. All six of us would hit the slopes early, before separating later in the morning so that Chlo\u00e9 and I could spend time exploring the mountain together. Often she and I enjoyed extended make-out sessions on the chair lift where Chlo\u00e9, taking advantage of the isolation, would gently rub my cock through the tight material of my ski pants. More than once I reached the top of the lift in a red-hot state of arousal, aching to feel Chlo\u00e9's lips around my rock-hard cock.",
        "On Wednesday the two of us skied the Vall\u00e9e Blanche. It was a long, hard day of skiing, which left both of us physically drained but totally elated from successfully completing the route. The views from the Aiguille du Midi, just below the summit of Mont Blanc are stunning, something not to be missed if you ever have the chance to visit Chamonix. \n\nWe were still tired the next morning and, over a leisurely breakfast, decided to skip skiing and instead, rent a snowmobile. After a short walk from the condo, Julie, a cute blonde from England, gave us a quick lesson on how to handle a snowmobile and we were soon on our way, following a path that wound around and up the mountain. Julie had mentioned a small, secluded mountain restaurant that not only had stunning views from the outside deck but was also the perfect place for two young lovers to enjoy lunch together. She also told us about the emergency shelters that are dotted around the mountain just in case, in her words, we wanted or needed to find somewhere with a little privacy.\n\nChlo\u00e9 sat behind me on the snowmobile, her arms firmly wrapped around my waist and her body pressed close to mine as we made our way up the path. It was a perfect, still, day and the snow on the trees glistened under a beautiful, crystal-clear blue sky. It took about forty-five minutes for us to reach the restaurant and, as Julie had promised, the views were indeed stupendous. The entire Chamonix valley was laid out before us and directly across, on the other side of the valley, the Mont Blanc massif soared high above the town. We could clearly see the serrated pinnacle of the Aiguille du Midi glinting in the sun and the tiny black specks that were skiers slowly edging their way from the cable car terminus to the top of the glacier where the Vall\u00e9e Blanche route begins. \n\nWe held hands as we absorbed the breathtaking view, totally in awe of where the two of us had been the previous day and of what we had experienced together in the few short days since we had arrived in Chamonix. Deep in thought, I slowly began to understand just what Chlo\u00e9 had meant all those weeks ago when she said that the mountains were such a romantic place to be. I turned my head to gaze at her exquisite beauty, silently acknowledging that I was falling in love with the gorgeous, vibrant woman before me. She was quiet, leaning on the rail at the edge of the deck drinking in the view, but exuded a natural, radiant sexiness that had me throbbing with desire. I used my finger to gently turn her face towards mine and we kissed. I tasted the vanilla chapstick that she had applied to her lips a few minutes earlier as they parted to receive my insistent tongue. We kissed softly at first but neither of us was able to control the desire that was burning brightly between us and we were soon kissing deeply and passionately. As our kiss progressed Chlo\u00e9's fingers gripped my hair, urgently pulling my mouth to hers. I was hard and a low groan escaped as she pointedly rubbed her soft body against my erection. \n\n\"Let's go, Michel,\" Chlo\u00e9 said softly as she broke the kiss. \"I want to be able to touch you. Do you remember where Julie said the emergency shelter was?\"\n\nI nodded and took her hand in mine as we headed back to the snowmobile. Ten minutes later I pulled to a halt in front of a small wooden shelter that was nestled in the trees a few yards back from a remote black piste. Julie had told us that these shelters were used by emergency personnel to accommodate and treat injured skiers while they waited for evacuation from the mountain. The shelter was spartan, sporting only a long wooden bench that ran from one side to the other and being lit solely by the large window set into the wall by the door.\n\nI drew Chlo\u00e9 into my arms almost immediately, inclining my head and covering her sweet lips with mine. We kissed for a long time, Chlo\u00e9's lips doing the talking, expressing exactly what she was feeling and what she wanted. When we finally came up for air she broke apart and slipped off her jacket. Underneath she wore a black silk polo that was pulled tight over her breasts. \n\nShe looked at me, her eyes glowing with desire. \"I want to taste you again, Michel,\" she said, as she got to her knees in the snow.\n\nI pushed the straps of my pants from my shoulders and Chlo\u00e9 quickly drew the zipper down from my chest to my groin, tugging at the stretchy material as she pulled the pants down my legs. I shivered, though whether it was from the cold air that assaulted my lower body or from the thrill of what we were doing, I'm unsure. Chlo\u00e9's small hand quickly reached through the opening in my black thermals and found my hard cock. She squeezed it gently before caressing and squeezing my balls. I groaned as her fingers fumbled around trying to extract my cock through the opening. Finally, she succeeded and her eyes flicked up at mine as she shuffled forward and ran her tongue around the thick purple head in front of her. Today, she wasted little time on preliminaries however and simply closed her lips over my dick and slid them slowly down the solid shaft. Her thumb and forefinger were curled around the base of my shaft and they followed her lips as she drew them sensually back to my head and began to work my thick cock in and out or her mouth with loud slurping sounds, occasionally glancing up to gauge my response.\n\nI was in heaven, my hands balled in her thick blonde hair, as she earnestly worked her mouth up and down my member. The feel of her warm, wet mouth surrounding my cock, combined with the thrill of the almost open-air location, brought me to the edge very quickly.\n\n\"Chlo\u00e9...Chlo\u00e9, I'm almost there.\" I gasped, cum boiling in my balls.\n\nHer eyes flicked up at me and she nodded slightly, acknowledging that she was ready.\n\n\"Oh...oh fuck, fuck,\" I moaned in pleasure as the first shot of cum fired from my cock. My knees gave way and I leaned on her shoulders as a thunderous orgasm grabbed me. \n\nChlo\u00e9 was prepared this time and simply held her mouth in place over the head of my cock as I came. Finally, she pulled her mouth from me, spitting into the snow and wiping her lips with the sleeve of her polo. I reached down, pulled her to her feet and kissed her hard, tasting my cum as our tongues danced together.\n\nAfter a minute Chlo\u00e9 pulled back and looked down at my semi-deflated cock, rudely protruding from the fly of my thermals.\n\nShe shook her head, laughing softly. \"You had better put him away before you get frostbite, Michel. How would we explain that to your parents.\"\n\nOn our final day of skiing, we were up early with a plan to ski some particularly difficult black slopes. We skied with our parents in the morning although, as usual, we soon separated so that Chlo\u00e9 and I could spend time alone. Unsurprisingly, our week of sexual exploration had drawn us even closer, to the point where it seemed that the only thing that mattered to me was Chlo\u00e9 and what she was doing at any particular point in time. It was sappy, I know, but I've always been told that love does strange things to you.\n\nAll too soon it was four o'clock and the final run of the day\u2014and of the vacation\u2014was upon us. Chlo\u00e9 and I were perched on the edge of Bouquetins, a steep black piste with large moguls that starts just below the Aguille de Charlanon. The views of the Chamonix valley, almost 1500 meters below, were breathtakingly beautiful. Only the vision of Chlo\u00e9, naked in the moonlight filtering into our room, and moaning softly while my mouth explored her wet, warm pussy, could, in my mind, compete with the beauty of the view that lay before us. \n\nTurning to Chlo\u00e9, I kissed her deeply and thanked her for our time together.\n\n\"Let's go, ma Cherie! Still plenty of skiing to be done!\" \n\nWe skied the full 1500 meters of vertical drop with only three short stops to gather our breath and admire the beauty of the mountains that surrounded us. Reaching the bottom, it was high-fives and hugs all around.\n\n\"Totally awesome!\" I cried, embracing Chlo\u00e9. \"I love you...!\"\n\nLooking up at me, her face beaming, we kissed, oblivious to the other skiers surrounding us.\n\n\"I love you too, Michel,\" she whispered in my ear.\n\nMy heart did a triple backflip and I grinned at her.\n\n\"Let's get rid of this gear and have a beer. We need to celebrate!\"\n\n\"You go, Michel. I need to go buy a few gifts. I'll be there in half an hour,\" she replied quickly.\n\n\"Oh. It's okay, I'll come with you.\"\n\n\"No, it's fine. Go relax with a beer and I'll be there soon.\"\n\nHalf an hour later I had almost finished my first beer when I spied Chlo\u00e9 fighting her way through the crowded bar, carrying a few bags in her hands. Heads turned as she gently worked her way through the crowd of happy skiers.\n\nKissing me softly, she said, \"I'll have one of those whenever Katie comes by.\"\n\n\"What did you buy?\" I asked as Chlo\u00e9 sat close to me on the bench.\n\nSmiling coyly, she simply said, \"Oh, you'll see...\"\n\nLater that night we enjoyed a delicious dinner with our parents at Chez Jaques and as we walked, hand in hand, back to the condo we giggled and laughed over some of the things that had been said over dinner\u2014things that made us think that our parents might be more switched on to our burgeoning relationship than we had imagined.\n\nAs soon as we were alone we were in each other's arms, kissing passionately. Desire and need were burning hot in both of us, but Chlo\u00e9 pulled away quickly.\n\n\"Give me a few minutes to get ready, Michel,\" she said, heading to the bathroom.\n\nI rapidly stripped and slid, naked, between the sheets, my cock already rock hard at the thought of Chlo\u00e9's slim body. I couldn't help but stroke myself while waiting impatiently for her to return.\n\nMy breath caught in my throat when she finally emerged from the bathroom a few minutes later. She was wearing a flimsy yellow babydoll that barely reached to the top of her thighs. Her small breasts were covered only by two pieces of yellow satin, surrounded by white lace with a small pink bow in the middle. Her golden blonde hair tumbled softly past her shoulders as she smiled at me sexily. I was stunned. She was, quite honestly, the most beautiful and alluring woman on the planet at that instant.\n\n\"Oh my God, Chlo\u00e9! Where did you find that?\" \n\nHer beaming smile lit up the room. \"Merci Michel! Just something I bought when I went gift shopping earlier today. I hope you like it!\"\n\nShe slid into the bed, her breasts pressing against my chest as we kissed. Our kisses were passionate and frenetic, hands roaming ceaselessly across the other's body. Chlo\u00e9 moaned softly into my neck when my fingers found her stiff nipples and teased them mercilessly through the soft lace that covered her breasts.\n\n\"Oh, Michel...Michel...I love you,\" she whispered.\n\nThere was something about her being almost, but not quite, naked that had my cock harder than it had ever been. I can't tell whether it was the sensation of caressing her body through the soft, satin and lace or the knowledge of the delights that awaited below the flimsy material. All I know is that I was aroused as never before and that I desperately wanted the beautiful creature that lay below me, panting softly while I rolled her nipples in my fingers. \n\nMy fingers easily parted her wet lips, finding her clit and circling on it softly while she writhed and moaned. I explored her slowly\u2014running my fingers the full length of her dripping sex before teasingly dipping a finger lightly into her slick opening. It didn't get very far, her intact hymen blocking the path, but she moaned softly at the feeling of my finger spreading her there. Returning my finger to her hard, prominent clit I sucked gently at her nipples, licking and flicking at them with my tongue. By now, I was well aware of her likes and I used the tips of my fingers to tease up the sides of her little clit before flicking softly at the tip.\n\nWe made eye contact and I softly bit down on her nipple, gradually increasing her pleasure by pulling and tugging at her breast.\n\n\"Aghh, Michel. I want you,\" Chlo\u00e9 gasped. \"I want you inside me!\"\n\nI was shocked. \"Chlo\u00e9, we agreed to wait. Are you sure?\"\n\n\"Yes, Michel. I need to feel you in me...please,\" she said, sitting up and pulling the babydoll over her head.\n\nShe lay back and spread her legs, watching as I moved, nervously, between her legs. I gripped my shaft and gently pushed my thick head up and down her wet, slippery lips and over her clit. Then, looking deep into her eyes, I moved the head to the entrance of her pussy and moved over her, before pressing forward gently, causing Chlo\u00e9 to moan and suck in her breath sharply.\n\n\"Are you okay?\" I asked, looking down at her with concern.\n\n\"Oui...keep going...I want to feel you in me,\" came her response.\n\nPushing harder, I felt the resistance give and her soft walls surround the head of my cock as the first few inches of my member slid inside her. \n\nShe let out a loud gasp. \"Oh, oh...Michel!\"\n\nI froze, then took a deep breath and thrust my hips forward hard. Suddenly I was buried deep inside her, her soft walls enveloping my shaft in a tight, warm velvet glove. Chloe's fingers clawed my back as she gasped and trembled beneath me, my hard cock stretching and filling her for the very first time. It took all of my self-control to hold myself still as I gazed down at her sweet face which, at that moment, was wracked with pure emotion and pleasure. \n\nFinally, I pulled my hips back slowly, my cock easily sliding out of her dripping pussy, causing Chlo\u00e9 to whimper softly.\n\n\"Take me, Michel...love me...please.\"\n\nHer moans became louder as my stiff cock pushed back inside, filling her in one smooth stroke. I repeated the action, again and again, thrusting hard and slowly building the pace as her excitement grew beneath me. We were both virgins, however, we easily found a steady rhythm, and Chlo\u00e9 urged me on as she worked her hips upwards to meet each deep stroke of my cock. \n\nMy breath came in deep gulps as I directed all of my energy to pleasuring the beautiful woman that lay beneath me. The feeling of her tight walls surrounding my hard shaft and her soft moans of pleasure each time I drove into her were driving me wild and only encouraged me to plunge myself into her harder and harder.\n\nSuddenly Chlo\u00e9's nails dug hard into my back and she let out a soft moan as her pussy began to convulse around my cock, rippling and squeezing me through a towering wave of orgasmic pleasure that flowed through her body. I continued working my hips, thrusting myself into her hard, knowing that my own orgasm was just a few thrusts away. It overtook me quickly and I moaned and grunted as I filled her with my cum just as she crested her own wave of pleasure. As I slowed, Chlo\u00e9 gasped and moaned as a series of small aftershocks continued to rock her slender frame.\n\nWe kissed softly, the intensity of the moment that we had just shared affirmed by our soft caresses and whispered words. My cock remained nestled in her soft warm pussy as we luxuriated in the afterglow of our first time.\n\nI woke up the next morning with Chlo\u00e9's body still entangled in mine. Kissing her softly I stroked her cheek until she slowly began to waken. Her eyes fluttered open and she smiled at me tenderly.\n\n\"Good morning, Michel,\" she said quietly. \"How did you sleep?\"\n\nI smiled in return, laughing. \"Like I have never slept before\"\n\n\"What time is it?\" she asked.\n\n\"Just seven o'clock. We don't need to be at breakfast till nine.\"\n\n\"Bien. Because I want you to make love to me again,\" she said softly, wrapping her arms around me."
    ],
    "authorname": "CelticLion101",
    "tags": [
        "first love",
        "first time",
        "french",
        "mountains",
        "outdoors",
        "snow"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-ski-adventure"
}