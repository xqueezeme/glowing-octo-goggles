{
    "title": "For Love of a Brother Ch. 01",
    "pages": [
        "Prologue: Spring 1962\n\nThe room was quiet except for the occasional whimpering of the baby in his mother's arms. She continued to rock gently, all the while kissing him and whispering sweet things in his ear. Although the nurses tried every night to rock him to sleep, it was she who had the touch he wanted and needed.\n\nExhausted and fighting sleep herself, she knew her husband would be picking her up soon to take her home for a few pitiful hours of rest. He cared for their 15-month-old daughter while she kept the vigil at the hospital.\n\nHe stirred a little, waking her with a start from her doze before he settled into a sound sleep. Silently, she admonished herself for falling asleep as she looked down at her son, so small and frail in her arms. How she loved him so, even more than life itself. He would have surgery soon to remove the kidney that was poisoning him and she was dreading it. Another operation for her Andy and he wasn't even six months old yet! Perhaps, this would be the last one. She could only hope.\n\nCarefully, she stood up on shaky legs and prayed he wouldn't wake. She tenderly placed him on the bed, trying to avoid moving the tubes sticking out from his sides that drained the waste his good kidney had missed. Good kidney? The doctors told them it was damaged, too, but it still worked. When they removed the bad kidney, they would repair the other and hope for the best. Even then, sadly, they said he probably wouldn't live to see his fifth birthday.\n\nTears rolled down her face as she lifted the gate into place, securing it so he couldn't accidently roll out. As she had done every night since he was hospitalized, she sat in the rocking chair again, weeping and praying until her husband arrived to take her home.\n\nFebruary 1979\n\nA cold wind blew through the trees that early morning. Overgrown bare branches scraped against the sides of the house as bits of rain splashed against the window panes that were next to Serena's bed.\n\nIt awakened her slightly, but she merely flipped onto her stomach in search of a more comfortable position. She could sleep through a tornado, or so it was suggested by her brother, teasing her as he always did.\n\nDiane heard the wind and cocked an ear toward the ceiling to see if it waked her children. Hearing nothing, she went back to her breakfast and newspaper. It was almost six o'clock and soon it would be time for her to go to work and for the kids to get up and get ready for school. She heard a faint beeping sound coming from above and knew Serena's alarm was going off. Smiling to herself, she took another sip from her coffee cup.\n\nSerena groaned when she heard the familiar beep, beep, beeps, coming from her alarm clock. Another full week of school greeted her and she was not amused. Grumbling, she threw off her covers and stumbled across her room to the alarm where she silenced the annoying noise with the flick of her finger. Fighting the urge to flop back into her bed, she instead fumbled around in the dark for her robe and slippers, disdaining a light for fear of blinding herself that early. Once she shrugged on her robe, she made her way out of her room and went down the dimly lit staircase to the kitchen.\n\n\"Morning, bright eyes,\" her mom greeted her. Squinting, Serena mumbled something and waved her hand weakly. She shuffled to the fridge and pulled out a carton of orange juice. Tempted to drink straight out of the carton, she glanced at her mom and thought better of it. Instead, she poured herself a glass and gulped it down.\n\n\"Some storm, huh?\"\n\n\"I guess,\" Serena shrugged. \n\n\"I hope your dad's had an easy night.\"\n\n\"He usually does. Criminals don't like to come out and play in bad weather.\" Her father, Joe, was a police officer. Serena gulped down another glass and put the carton back in the fridge. She then rinsed her glass and set it in the sink.\n\n\"I hope you're more awake during practice today than you are now,\" Diane said.\n\nSerena looked at her strangely as if the last sentence hadn't registered. Practice? Practice! Serena had almost forgotten about. It was the first day of practice for the girl's softball team and the boy's baseball team at McKinley High School. Serena was a senior and played centerfield, while her brother, Andy, a junior, played second base.\n\nSerena had already made the team, being her team's most valuable player the past two years, the league's player of the year last season, all-state the previous two years, and the pre-season pick for player of the year in Ohio. Other than that, she was pretty good.\n\nAndy, on the other hand, hoped to catch on as an extra infielder for the varsity. He didn't want to play on the junior varsity again, even though he was assured of being a starter. Andy didn't care if he sat the bench, he wanted to be on the varsity team.\n\n\"I should be awake by then,\" Serena answered.\n\n\"Well, I've got to run,\" Diane said as she threw on her coat. \"Your dad should be home soon, unless he has a lot of reports to write.\" She put her purse over her shoulder. \"Tell Andy 'good luck' for me.\"\n\n\"I will.\"\n\nDiane brushed past her, kissing her on her forehead as she went by. \"See you at supper,\" she called before she was out the door.\n\nSerena went back upstairs and into the bathroom where she took a quick shower. After toweling off, she put her robe back on and went back to her room. Once there, she found the clothes she wanted to wear that day and dressed quickly. She combed her short, brown hair into place and glanced at the clock. It was almost six-thirty and time to wake her brother.\n\nAndy never liked being waked by an alarm. It always made him jump out of his skin, no matter how low the setting. He mentioned this to Serena one time and from then on, she took it upon herself to wake him. Like her mother, Serena was always looking out for her little brother. They never fought, seldom argued, and genuinely liked being around each other.\n\nShe strode to his door and knocked softly before letting herself in, as was her custom. He was still asleep, his face buried into his pillow. Serena touched him lightly on his shoulder and he woke instantly, turning to her.\n\n\"Shit!\" he exclaimed softly, eyeing her. \"I was in a good dream. If you only could have waited a few minutes.\"\n\n\"Sorry,\" she said, straightening up, \"I can't schedule waking you up around your dreams. Which girl was it about this time?\" she smiled sweetly.\n\nAndy stretched and yawned. \"No girls, this time. It was about practice. Man, I was hitting everything out of sight, running strong, catching everything. I couldn't do anything wrong. I wish it would happen in real life.\"\n\n\"You'll do fine,\" she said as she walked to the door. \"It's getting late. You better get moving.\"\n\n\"Thanks, sis.\"\n\n\"No problem.\"\n\nLike his sister before him, he took a quick shower and found clothes to wear. After dressing, he packed his gym bag with his sweat pants, baseball shirt, jock strap with a protective cup, his shoes and his glove. The first few practices would be in the gym until it got a little warmer. The temperature that day was only supposed to get into the low twenties. He grabbed his backpack full of schoolbooks and ambled down the stairs to the kitchen.\n\nAfter a breakfast of cereal and toast, Andy took his stuff to the garage and threw them into the trunk of the car, a late model '68 Chevelle he and his sister shared. He didn't see his sister's bag, so he knew he'd have to remind her before they left. Coming back into the house, he found her in her room getting her books together.\n\n\"I didn't see your stuff in the car,\" he said, hands on his hips outside her door.\n\n\"They're in the back seat. I threw them in Saturday.\"\n\n\"Oh. You about ready to go?\"\n\n\"Yeah, give me a couple of minutes. I'll be down soon. Warm up the car if you like.\"\n\n\"Okay.\" Andy went back down, shrugged on a heavy coat, and made his way back to the garage. After opening the garage door, he started the car and backed it onto the driveway. He closed the garage door and waited patiently for his sister.\n\n\"Miss Burleson,\" Mr. Hilliard glared at her from the chalkboard, \"if you must daydream, please do it outside my classroom. Now that I've got your attention, what was Lincoln's thoughts during the time in question? Did he want to end the war by any means?\"\n\nSerena returned the stare, but she wasn't angry at him. In fact, he was one of the few teachers who kept her interest. Her thoughts had been far away on the softball field. She was anxious to get the season underway and prove to everyone she was the best player in the state.\n\n\"Lincoln wanted to end the war no matter what. He didn't care if slavery was ended or if things stayed the same,\" she answered. She really liked history.\n\n\"Very good, Miss Burleson,\" he said, lightly applauding her. \"You weren't quite comatose, were you?\"\n\nSerena shook her head and smiled slightly.\n\n\"Miss Burleson is correct. Lincoln....\"\n\nSerena's thoughts went back to softball. She thought she should have been named the best player in the state the previous year, but it rarely was given to juniors. Serena's stats were better than the girl who won, but it wasn't to be. The girl went on to receive a scholarship to UCLA and Serena was happy for her. Serena, however, had no intention of going that far away to go to school. She received offers from all of the top softball schools in the country, but she wanted to be within a days drive from home. So, when Indiana University beckoned, Serena visited the campus, fell in love with it, and the rest was history. It was a good fit for her, too. Indiana was graduating two of their outfielders, so she could step right in and start in her freshman year. She was happy with her decision and couldn't wait for practice to start.\n\nAfter a hot post-practice shower, Andy walked up the stairs from the locker room with his buddy, Jim Schaeffer. They had been put through a grueling practice and both were tired. When they reached the student's lounge, Andy looked for Serena, but he didn't see his brown haired, brown eyed, superstar sister anywhere. Jim left and Andy wandered to an unoccupied chair near the door. While putting his bags in the chair next to him, he saw a pair of shoes stop in front of him. Looking up, he saw a blond haired, green eyed girl staring at him. It was Jenny Hobbs, a girl with whom he had been partnered during their sophomore biology class. They had gotten along very well doing experiments and dissections together, but never dated, both having been involved with someone else at the time. She was of medium height and build and he remembered her being on Serena's team, but he couldn't remember her position.\n\n\"Hi Andy,\" she said, still looking down at him. \"Can I sit with you?\"\n\nAndy blinked for a second, trying to get his thoughts together. Very few girls talked to him out of the blue, especially one as pretty as Jenny. Grabbing his books once again and emptying the seat, he said, \"Uh, sure, Jenny. Sit down.\"\n\nShe tossed her bags to the floor and sat down, her body turned his way. \"Wow, what a practice! Don't ask how it went.\" She pushed her wavy blonde hair away from her eyes. \"How have you been, Andy?\" Her eyes shone and she smiled at him. She had really liked him when they were partners, but they went different directions once the experiments ended. Thinking back, she would have liked to have dated him if she hadn't been dating someone else at the time.\n\n\"So, so. Practice was a pain. I think Anderson was trying to coach track instead of baseball. All we did was run. I feel about as good as that frog we cut up last year.\" He liked her smile. It was friendly and genuine.\n\n\"Yeah, I know that feeling,\" she agreed, her smile wider. \"I'm pretty sore.\" She looked around and saw they were somewhat alone, with only a few people hanging around nearby. \"So, are you and Kathy still dating?\"\n\n\"Nah,\" he said, \"we were never a real couple. We just sort of hung out together, you know, just as friends. She's dating Keith Ross now, I think.\"\n\n\"Hanging around with anyone in particular now?\"\n\n\"No. How about you and Terry?\"\n\nJenny and Terry Kell had been dating at the time a year before. \"No, we split up a few months ago. The Christmas Dance, I think. He wanted to get more serious, a lot more serious, if you get my drift, and I didn't.\"\n\nAndy's eyes widened and he understood very well. \"Oh.\"\n\n\"So, you waiting on Serena?\"\n\n\"Yeah, we drive together every day, or at least try to. Most of the time, there's no conflict. If there is, one of us takes the bus. No problem. The bus stop's only a block away.\" He looked around, but didn't see her. Not that he was in any hurry for her arrival. He was quite content talking to Jenny and he was starting to relax a bit. Looking back, he really missed being partners with her. She had been a lot of fun and she wasn't squeamish when it came to the dissections. In fact, she was quite skilled with the knife and could find things easier than he. She was the main reason they got mostly \"A's\" on their reports.\n\n\"Yeah, my mom's picking me up in a few minutes. I wish I had a car to drive, but my folks need them. It's not so bad, I guess.\"\n\nAndy looked down at his hands as he was starting to get nervous again. He wanted to offer to take her home, but he didn't know how to approach it. He wanted to ask her out, but he was afraid to be turned down. He hated being shy. Here was a really sweet, pretty girl talking to him and he couldn't keep a conversation going. Andy looked back at her and she was smiling at him, obviously enjoying being in his company. He couldn't remember being nervous around her before. Maybe it was because she was dating someone then and she was safe. Andy smiled and looked down again.\n\n\"I guess so,\" he said softly, sighing and looking the other way. \"So,\" he said, bringing his attention back to her, \"how's school going for you?\"\n\n\"Not too bad. I wish you were still my lab partner. I haven't had a decent one this year.\"\n\n\"You know I hate science. I bitched about it enough last year.\" Although he loved biology for a time last year, he mused. \"Give me math and business and I'm a happy camper.\"\n\n\"Hey guys,\" Serena said, leaning over the back of the chairs between the two. She had been watching from a safe distance before she decided to make her entrance.\n\n\"Damn,\" Andy muttered to himself. \"Hey Serena,\" he said, trying to be cheerful. At any other time, he would have been glad to see his sister and go home. This time was different. \"You're out kind of early.\"\n\n\"Same time as usual. Hey Jenny!\" she turned her attention to her teammate.\n\n\"Hey Serena, long time, no see.\"\n\n\"You're interrupting us,\" Andy said quietly, looking up at her.\n\n\"What?\" she asked.\n\n\"You interrupted us. You interrupted a great dream this morning and now, you've interrupted us.\"\n\n\"Sorry. It's the sister in me.\"\n\nAndy turned to Jenny. \"What's a guy supposed to do with a sister like that?\"\n\nJenny eyed the door leading to the parking lot and saw her mom's car at the curb. \"I know what you can do, but I have to go. Mom's here.\" Jenny stood up and gathered her books and gym bag.\n\n\"What?\" he stammered, as she began to walk to the door. Jenny looked behind her and laughed softly, her soft curled hair bouncing lightly on her collar. He looked at his sister for help. She jerked her head in Jenny's direction and motioned to her. \n\nMy God, she thought, do I have to write him directions? \n\nAndy finally got the hint, getting up quickly. \"Hey Jenny,\" he called, \"wait up. I'll walk with you.\" Jenny stopped at the door and waited patiently as Andy gathered his belongings.\n\nThey met at the door, with Serena trailing a safe distance behind, and walked to her mom's car, a brown Toyota. They walked slowly, not in any hurry to get there. Andy saw the silhouette in the driver's seat and he assumed it was Jenny's mom. They got to the car too fast for Andy. Jenny opened the back seat door and put her books and gym bag inside before she shut it.\n\n\"See you tomorrow after practice?\" Jenny asked, her hand on the door handle.\n\n\"Sure,\" Andy answered. He looked down and scuffed his shoe against the wet pavement. Hands in his pockets, he looked back at Jenny, who had a bemused look on her face. He glanced back at Serena and said, \"You know, back in the lounge, you said you had a solution to Serena interrupting me. What is it?\"\n\nJenny smiled and reached into her pockets. She produced a scrap piece of paper and a pen and wrote something on it. Taking a step forward, she pressed the note into his hand. \"Call me,\" she said softly before turning and opening the door. Before he knew it, she was gone and he was staring at the red tail lights of their car as they disappeared around the corner. Serena was at his side and nudged him. Wordlessly, they walked together toward their car.\n\nDiane loved it when Joe was spontaneous. When he beckoned her upstairs to the bedroom when she came home from work, she didn't question it. She knew they had at least an hour before the kids were due home after their practice, plenty of time for them to have some fun. Except on weekends, it was difficult for them to get together because of their differing schedules.\n\nAfter almost twenty years of marriage, Joe lusted for Diane as much as when they were newlyweds. Even after two kids and thirty extra pounds, he thought she still looked fantastic and felt she was as sexy as ever. When they were able to sleep together, he couldn't keep his hands off of her, playing with her and teasing her. Their sessions were usually long, slow, and sensual, taking their time and reveling in the moment.\n\nThis was not one of those times, but Diane enjoyed a little \"quickie\" after work if she wasn't too tired. He helped her undress quickly and soon, they were naked and under the covers. She was already getting moist from anticipation as his hands roamed between her legs. Her kisses, soft and sensual at first, soon became hot and fiery against his lips. It had been a while since they had made love and she missed it terribly. \n\nDiane climaxed loudly and quickly once his mouth and tongue found her clitoris. He attacked it with fervor and gusto, savoring her special taste and enjoying the sounds she made. He never tired of doing that for her. \n\nJoe didn't last long once he was inside her. She seemed tighter than usual as she ground her pelvis against him, urging him to thrust harder and not hold back. She wrapped her hands around his buttocks and pulled him into her as hard as she could stand it. His release was strong and powerful and Diane could feel each and every burst that came from him, filling her and satiating her.\n\nThey rested for awhile as he toyed with her delicate nipples, teasing them with the tips of his fingers. Oh, how she wanted to lay with him for the rest of the evening! But, the kids would be home soon and there was supper to be fixed, although Joe had started a pot roast. With a contented sigh, Diane kissed him, and they got dressed again before heading down to the kitchen\n\n\"So, when is he going to call me?\" Jenny asked Serena as they got dressed for practice that Friday.\n\n\"I don't know,\" Serena answered as she tugged a sports bra over her small, pert breasts. \"He's been pretty busy with practice and school work. I think he had a few tests this week, too.\"\n\n\"I mean, I gave him my number. What more does he want?\" Jenny sat down on the bench in front of her locker. \"We sit and talk after practice. I know he likes me.\" She looked up at Serena as she pulled on a sweatshirt. \"We had such a great time in biology last year.\"\n\n\"He likes you, Jenny, he really does,\" Serena said. \"He talks about you a lot when we drive home. He's just really shy about calling girls.\"\n\n\"But, we're friends,\" Jenny protested.\n\n\"I know that, but he was even weird about calling Kathy on the phone, and they were pretty tight, no matter what Andy says. Even when they were dating, he always had to get up the courage to call her.\"",
        "Jenny looked down, deep in thought. \"Does he know what position I play?\"\n\n\"Sure he does. He asked a few days ago. Didn't he ask you?\"\n\n\"No. I didn't tell him.\"\n\n\"Why?\"\n\n\"Catcher is such an unladylike position. I always look like I'm giving birth in a rice paddy.\"\n\nSerena laughed. \"My God, Jenny, it's not that bad. Besides, he was okay with it.\"\n\n\"What did he say?\"\n\n\"He said, 'Cool, I knew she was tough.'\"\n\n\"Wonderful, great,\" Jenny moaned sarcastically. \"Now he thinks I'm tough. Just wonderful.\" She shook her head from side to side.\n\n\"I think he's fine with it. Anyway, don't worry,\" Serena laughed, \"I'll work on him about calling you.\"\n\n\"Will you? I'd really appreciate it.\" Jenny looked hopeful.\n\n\"Sure, no problem,\" Serena said as she stood up and started to walk to the gym. \"I always try to help the disadvantaged!\" Serena ducked and ran as Jenny's glove sailed by her head, landing with a thud against one of the lockers.\n\n\"I'll get you for that!\" Jenny yelled as she retrieved her glove from the floor. \"I don't care how fast you can run!\" She then ran after her friend towards the gym.\n\nJenny was in a foul mood that evening at supper. She had a poor practice, Andy had a late practice, and her mom came earlier than usual so she didn't get to talk to him. He still hadn't called her, although she reasoned he hadn't had time yet. Her twelve year old sister, Melissa, was getting on her nerves, like she normally did. Jenny didn't feel like talking to anyone and any question directed at her was met with a terse, one word answer.\n\nAfter she reluctantly helped her dad with the dishes, she went to her room to start on her homework. She worked weekends at McDonald's and she liked to get her school work out of the way. She didn't want it piled up and waiting for her on Sunday night. An hour or two later, she had quite a bit of it done, so she put it aside and decided to turn on her stereo. She was one of the few teenagers who couldn't do homework with music playing.\n\nExpecting to hear Led Zeppelin or The Stones come through her speakers, she cringed when the twang of Conway Twitty pierced her eardrums. Jenny loathed country music and her sister was the only one in the family who liked it. She wasn't allowed in Jenny's room without permission, but that usually didn't stop her.\n\nThat was just the last freakin' straw for Jenny as she flung open her door and stormed into the livingroom to confront her sister. Her mother and Melissa were seated on the sofa watching television and her father had gone out for the evening, bowling, Jenny thought.\n\nGlaring at her sister, Jenny said menacingly, \"Stay the hell out of my room and keep your grubby little hands off my stereo!\"\n\n\"I didn't touch your stupid stereo,\" Melissa retorted indignantly.\n\n\"You did too! It was on a country station. I hate country and everyone knows it. You're the only one who likes country. Stay out of my room or I'll...\"\n\n\"Stop it!\" Angie, their mother said. \"That's enough out of both of you.\" She stood up between them. \"You,\" she pointed at Jenny, \"in the kitchen.\" She turned to her left. \"And you,\" she pointed at Melissa, \"I'll deal with you later.\"\n\nJenny stomped into the kitchen ahead of Angie as Melissa smiled triumphantly as she had gotten her sister in trouble again.\n\nArms crossed, Jenny placed her butt against the sink and glowered in silence.\n\n\"What's gotten into you?\" Angie asked after she shut the swinging door.\n\n\"Nothing.\"\n\n\"You call that nothing? You haven't had a civil word for anyone the last few days. What's up?\"\n\n\"Nothing.\"\n\n\"Come on, Jenny,\" Angie said, moving to her side. \"It has to be more than Melissa messing with your stereo. You usually don't give that a second thought. Something else is bothering you. You can tell me. Maybe I can help.\"\n\n\"I don't know,\" Jenny said softly, picking imaginary fuzz from her jeans. \"She's always messing with my stuff and she won't stay out of my room. She's driving me nuts!\"\n\n\"I'll straighten her out,\" her mom assured her. \"What else is wrong?\" Angie's dark brown eyes were staring at her daughter intently. Jenny knew she wouldn't get out of the kitchen without telling her something. Damn! She wanted to keep it private for a while longer.\n\n\"It's just that, well, there's a boy I like at school. I'd like to date him, but he won't call me. His sister says he's shy and he likes me, but I'm getting tired of waiting. We talk every day after practice and I know he likes me....I don't know.\" She sighed loudly.\n\n\"Is this the same boy who walks with you to the car?\"\n\n\"Yes.\"\n\n\"He's very good looking. I can see why you like him.\" Angie smiled at her daughter.\n\n\"We were lab partners in biology last year,\" Jenny continued, \"and we had a great time. I don't know. I just thought he would have called by now.\"\n\n\"Why don't you call him?\"\n\n\"I thought it would be better if he called. I mean, I gave him our number. Isn't that a big enough hint?\"\n\n\"Better for whom? You like him. He likes you. It seems like nothing will happen unless one of you breaks the ice. I had to do it with your father.\"\n\n\"Really?\" Jenny exclaimed, her interest piqued.\n\n\"Yes. It was pretty much the same thing. I wanted him to call. He didn't, so I said the heck with it. I called him and we started dating very soon after that. I guess what I'm trying to say is this; don't worry about who should call whom. If you like him that much, give him a call. It doesn't have to long and drawn out. Just talk about practice or school, stuff you normally talk about. If he likes you and is as shy as you say, then he'll really appreciate the call and he won't be afraid to call you.\"\n\n\"I guess,\" Jenny said softly. She still wasn't entirely convinced about the whole thing, but it made sense. But, she did miss not talking to him that day, even though their conversations usually only lasted about ten minutes or so before her mom picked her up. What the hell, she certainly didn't have anything to lose by calling him.\n\nJenny's eyes brightened as she looked up. \"Thanks, mom,\" she said before she hugged her. \"I guess I need to talk to you more often.\"\n\n\"Any time,\" Angie replied. \"Now, if you'll excuse me, I'll have a piece of your sister.\" Angie went back into the livingroom and began to rip into Melissa.\n\nJenny waited until the door closed before she picked up the kitchen phone and began dialing. She had memorized Andy's number after Serena had given it to her. It was unlisted, being that their father was a cop. She dialed it quickly and waited as she heard it ring on the other end.\n\nAndy was lying in bed resting when the phone rang in the hallway. He was about to get up and answer it, but Serena was already out of her room and calling downstairs to say she had it.\n\n\"Burleson residence,\" she said as she answered.\n\n\"Serena?\" Jenny asked. She had never talked to Serena on the phone before and she wasn't sure if it was her or their mother.\n\n\"Yes.\"\n\n\"It's me, Jenny. Is Andy there?\"\n\n\"Hey Jenny! Couldn't wait for him to call, could you?\"\n\n\"No. I figured if I waited any longer, we'd be old and gray before he called.\"\n\n\"How true. I'll get him for you.\"\n\n\"Thanks.\"\n\nSerena held the phone away from her and yelled in Andy's direction, \"Hey Andy, the phone's for you.\"\n\nAndy jumped out of his bed and made his way to the phone. As he reached for the phone, he asked, \"Who is it?\"\n\n\"Some blond bimbo,\" she answered, grinning. Shrieking could be heard through the mouthpiece on the other end.\n\nHe took the phone from Serena. \"Jenny?\"\n\n\"Oh, great, you automatically assumed it was me. She says blond bimbo, and you knew it was me! That's wonderful! She's dead meat. You tell her that for me. You're next!\" Jenny tried to act angry, but she wasn't doing a very good job of it.\n\n\"I...I...\" Andy tried to speak, but he couldn't say anything.\n\n\"And to think I was going to be nice and call you up and ask how practice was for you. This is the thanks I get. I should have dissected you instead of the frog!\"\n\n\"But, I...\"\n\n\"No, no. It's too late for an apology. I won't accept it.\" By now, she was giggling.\n\n\"I didn't mean it...\"\n\n\"Andy.\"\n\n\"What?\"\n\n\"I'm not mad at you. I was joking.\"\n\n\"Really?\"\n\n\"I will, however, do something evil to that brat sister of yours when I get my hands on her.\"\n\n\"Don't hurt her too much. I'm kind of fond of her.\"\n\n\"Okay, I won't hurt her too much. How was practice? Sorry, I couldn't stick around. Mom came a bit early.\"\n\n\"It was okay. A bit tiring, but I did pretty good. I think I'll catch on as a reserve.\"\n\n\"Good, I know that's what you want. I hope it works out for you.\"\n\n\"Thanks. How's practice going for you?\"\n\n\"Not too bad. I've been working with the pitchers a lot, trying to get them in shape. My hitting's been so-so, but it'll come around.\" She became silent for a moment. \"You sound kind of tired, Andy. You feeling okay?\"\n\n\"Yeah, I'm okay. Just a bit tired, I guess,\" he answered. \"I had quite a few tests this week, too, on top of the practices. I guess it's caught up to me.\"\n\n\"Well, you've got the weekend to rest up.\"\n\n\"True.\"\n\n\"Got any plans?\"\n\n\"None. I thought I'd just vegetate and take it easy. You?\"\n\n\"I open the store tomorrow for eight hours and I work noon to four on Sunday.\"\n\n\"Oh. I guess I shouldn't keep you. You'll have to get to bed soon, won't you?\"\n\n\"I've got a little while before I have to worry about it.\" Just then, an idea hit her. \"Hey Andy?\" she said.\n\n\"Yeah.\"\n\n\"Can you hold a bit? I have to ask mom something.\"\n\n\"Sure.\"\n\nJenny put down the phone and opened the door to the livingroom. Angie and Melissa were still sitting on the sofa. Melissa was pouting and giving Jenny a nasty look that Angie didn't see. \"Hey mom?\" she said.\n\n\"Yes,\" Angie answered.\n\n\"Could I have Andy over for supper tomorrow night?\"\n\n\"We're not having anything special,\" Angie answered, \"just burgers and fries.\"\n\n\"That's fine. I'm sure he'll be okay with that. Is it okay?\"\n\n\"Sure it is. I'd like to meet him.\" Melissa's eyes brightened as she found a new way to torment her sister.\n\n\"Great! Thanks mom.\" Jenny hurried back to the phone.\n\n\"Hey Andy, you still there?\"\n\n\"Yeah, I'm still here,\" he said tiredly.\n\n\"Would you like to come over tomorrow night for supper? Mom says it's okay.\"\n\n\"Well, I...\"\n\n\"We don't have to go anywhere afterwards,\" she continued excitedly, \"we've got a stereo, TV, billiards, and table tennis in the basement. We can just spend the evening hanging out down there.\"\n\n\"Sounds great, Jenny,\" he said. He wasn't sure about it, but he really liked her, always did. He had been wanting to ask her out ever since they met up again, but he couldn't get up the nerve. \"What time?\"\n\n\"I get home around three, three thirty. Give me some time to clean up. Maybe around four. Is that okay with you?\"\n\n\"Four is fine.\"\n\n\"Great,\" she sighed. That's done, she laughed to herself. She glanced at the clock and saw it was getting late. She did have to get up early, very early, but she didn't want to stop talking to him. She was torn, but she knew she had to cut their conversation short. Besides, they had the entire evening the next day to talk. \"Well,\" she sighed again, \"it is getting kind of late. I hate to cut this short.\"\n\n\"That's okay. We can talk tomorrow,\" he said, stifling a yawn. Why was he so tired?\n\n\"I guess I'll let you go then,\" she said, definitely not wanting the call to end.\n\n\"Oh, Jenny,\" he said quickly, \"where do you live?\"\n\n\"3127 Glenmore Circle. Do you know where it is?\"\n\n\"Yeah, I know where it is. It's actually not too far from me.\"\n\n\"Really? Where do you guys live?\"\n\n\"Ewell Street near Riley.\"\n\n\"That's not far at all.\" Jenny hesitated, dreading the end. \"Well, I really must be going. I'll see you tomorrow at four.\"\n\n\"I'll count the minutes.\"\n\n\"You're silly,\" she laughed. It was the first time she felt he was relaxed with her all week. \"I'll see you.\"\n\n\"Okay. See you.\" They hung up at the same time. With a dopey grin on his face, Andy floated back to his room.\n\nJenny's hand fell away from the phone and she pumped her fist in the air. \"Yeah!\" she exclaimed to no one in particular.\n\nAndy woke up the next morning annoyed. He thought he had gotten enough sleep, but he woke up tired and ragged. He had felt sore and out of shape for the entire week. He knew his coach was working them harder than in past years, but Andy felt it shouldn't be bothering him this much. \"Maybe I'm just out of shape,\" he mumbled to himself before he flopped back down for another hour of uneasy sleep.\n\nHe spent the greater part of the afternoon getting ready for the evening. Once he got up again, he felt better and the tiredness was almost gone. He took an extra-long shower and took more time than usual getting his hair just right. Since they weren't going anywhere after supper, he decided on wearing a pair of jeans and a brown corduroy shirt. He had shaved, although he didn't really need it, and put on a sparse amount of aftershave. Once he was satisfied with his appearance, he glanced at the clock and saw it was a few minutes past three-thirty.\n\nHe stepped over to Serena's room and sat down in a chair near the door. \"Going with the casual look, I see,\" she said while glancing over a book she was reading.\n\n\"My suit's at the cleaners,\" he replied.\n\n\"You're quick today,\" she said, smiling. \"So, what are you guys going to do?\"\n\n\"Just hang out, I guess. No specific plans. Just have supper and play some pool and ping pong in her basement,\" he shrugged.\n\n\"Watch out for her sister. Jenny says she's a terror.\"\n\n\"She's not mentioned much about her,\" he replied as he removed some dirt from under his thumb nail.\n\n\"Probably with good reason. She says she's a brat.\"\n\n\"I'm used to it.\"\n\n\"Well, well, feeling a bit frisky today, are we?\" Serena laughed. \"I'm sure I can regale Jenny with some sordid details about you.\"\n\nAndy's eyes widened. There were some things she could spill that didn't need to be brought up any time in the near future. \"Okay, okay, I'll back down. Geez, some people are so sensitive.\"\n\n\"Yes, I am. Remember that.\" Serena eyed him closely. Something about him didn't seem quite right. She couldn't place a finger on it. \"Are you feeling okay?\" she asked.\n\n\"Yeah, I'm fine,\" he answered, a bit annoyed. He didn't feel one hundred percent, but not as good as he wanted. What did she see? \"Why do you ask?\"\n\n\"Oh, nothing. You just look a bit tired, that's all.\" That was it, she thought. His eyes looked droopy.\n\n\"I think Coach Anderson wants us to run track this year, too,\" he said smiling. \"I guess I'm a little tired.\" That wasn't too hard to admit, he thought.\n\n\"Maybe you need to catch up on some more sleep.\"\n\n\"Yeah, I'll do that.\" He got up and stood by the door. \"See you later.\"\n\n\"Have a good time. Tell me about it when you get back.\"\n\n\"I don't think so.\"\n\n\"I'll get it out of one of you.\"\n\nAndy thought for a second. \"Yes, I think you will.\"\n\nHe arrived promptly at four and saw Jenny peering out of the front window. She met him at the door before he had a chance to knock or ring the bell.\n\n\"It's about time you showed up,\" she greeted him. She was wearing a white sweater, jeans, and sandals. He inhaled deeply. She had that wonderful, freshly bathed smell about her.\n\nAndy checked his watch and saw the time. He smiled and showed it to her.\n\n\"I was only teasing,\" she said. \"Come on in and I'll introduce you to everyone.\"\n\nShe led him into the livingroom and took his jacket, putting it in the hall closet. He didn't see anyone there or in the kitchen. Once she closed the closet door, she led him past the kitchen to a doorway that went to the basement. Turning back to him, she said, \"Mom and dad are downstairs watching TV. I think my sister's in her room sulking about something. Unfortunately, you'll get to meet her later.\" Without waiting for a reply, she led him down the stairs to a brightly lit furnished basement.\n\n\"Hey guys, there's someone I'd like you to meet.\" Heads and bodies turned on the sofa as Andy came to the bottom step. Nervously, he made to the carpeted floor and saw Jenny's mom first. At first glance, he thought he saw Jenny's twin, but a second look showed her to look like an older sister, not a mother. She mirrored Jenny in every way except for her brown eyes and longer, straighter hair. He could see where Jenny got her good looks and he also got a glimpse as to what Jenny would look like twenty years into the future.\n\n\"It's good to meet you, Andy,\" Angie said. She turned to her right. \"This is Jenny's dad, Brad.\"\n\nBrad Hobbs stood up to his full height, slowly and deliberately, as was his custom when Jenny brought friends over. He actually couldn't stand up fully, the ceiling was too low. The ceiling was a full foot over Andy's head, he being five foot seven, so he stood in awe trying to calculate Brad's height.\n\n\"Oh, daddy, quit trying to intimidate him,\" Jenny said. Brad broke into a smile and moved over to Andy.\n\n\"Jenny says you're a ball player, too,\" he boomed. \"Good for you.\" He extended his hand and Andy took it, dwarfing his. \"Good grip,\" he exclaimed. \"Well, we'll leave you two alone,\" he said as he and Angie brushed past them. They went up the stairs quickly and shut the door behind them.\n\n\"How...?\"\n\n\"Six foot ten,\" Jenny answered. \"Yes, I know he's big. I guess I should have warned you.\"\n\n\"Yeah, that would have helped,\" Andy said.\n\n\"Well, come on over and sit with me. Do you want to watch TV or listen to the stereo?\"\n\n\"I don't know,\" he said. \"I'm not really in the mood for either.\"\n\n\"What do you want to do then?\"\n\nAndy thought for a moment until he had an answer. \"You'll probably think it's weird,\" he said finally.\n\n\"Try me.\" She was staring at him now, her eyes almost level with his.\n\n\"I thought maybe we could just sit and talk. We really haven't had a chance to talk by ourselves without people or family around.\"\n\nJenny smiled. \"I'd like that.\"\n\nShe led him to the love seat and she turned off the TV before sitting down next to him. They sat close, but not touching. For the next hour and a half, they talked. They talked about anything and everything that crossed their minds. School, practice, dating, food, jobs, music, and the movies, they covered a lot of topics and got to know each other a little better. All of Andy's nervousness and apprehension melted away like sun-kissed snow. He almost felt as relaxed with her as he had with Kathy.\n\nWhen Angie came down the stairs to tell them it was time for supper, they were engaged in a friendly argument.\n\n\"It's a date,\" Jenny said.\n\n\"It is not. It's friends getting together,\" Andy replied.\n\n\"It's a date,\" Jenny insisted.\n\n\"It is not, Jenny,\" Andy said as he looked at Angie.\n\n\"What are you two fussing about?\" Angie asked as she came down to the bottom of the steps. Right away, she could tell they weren't angry with each other.\n\nJenny replied before Andy could speak. \"I say we are on a date tonight and he insists we're just two friends hanging out together.\"\n\n\"Sounds serious,\" Angie said. \"Can this wait until after supper?\"\n\nJenny and Andy looked at each other, shrugged their shoulders, and said in unison, \"Sure.\" They laughed together as they followed Angie up the stairs.\n\nAndy's first impression of Melissa didn't bother him, but merely amused him. After Jenny introduced him to her, Melissa blurted out, \"Are you her boyfriend?\"\n\nJenny rolled her eyes as she sighed and was about to say something, but Andy beat her to it. \"Well,\" he said slowly, \"I'm a boy and I'm her friend, so I guess you could call me her boyfriend.\"\n\nMelissa had no reply for that and sat down. Jenny smirked and gently jabbed Andy in the ribs in appreciation. \n\nAs they sat down, Angie said, \"It's nothing fancy, Andy, but I hope you like hamburgers and fries.\"",
        "\"I love 'em, ma'am,\" he replied.\n\n\"There's no need to be formal,\" she said. \"Please call me Angie.\"\n\n\"Okay, Angie.\"\n\nThe supper was very good and Andy had seconds of everything. Once dessert was finished, Angie shooed them out of the kitchen and told Melissa to help her with the dishes.\n\n\"But, mom,\" she whined, \"it's Jenny's turn.\"\n\n\"Jenny has a guest and she'll take your turn next time,\" she explained. \"Now, come on, it'll only take fifteen or twenty minutes.\"\n\n\"Oh, all right,\" she said.\n\nJenny gestured to Andy and they went back down to the basement. Once there, Jenny turned to him. \"So, what do you want to do?\"\n\nAndy eyed the pool table, knowing he was good at billiards. \"We could play some pool, I guess.\"\n\n\"Sounds fine. I'm pretty good, though, so watch out.\"\n\n\"Right,\" he scoffed. \n\n\"You don't believe me?\"\n\n\"I don't think I'll have too much trouble beating you.\"\n\n\"We'll see,\" Jenny smiled. They set up the balls and Jenny suggested Andy break. He did and managed to get a ball into one of the pockets. It was the last one he would pocket because after he missed on his next shot, Jenny cleared the table in quick fashion. Andy looked on in amazement as she pocketed ball after ball. Most of the shots weren't difficult, but she set up each shot beautifully and made some hard shots, too. He could only shake his head in admiration once she finished.\n\n\"You are fantastic!\" he exclaimed once she was done. \"I should have known you'd be good, having a table in your basement.\"\n\n\"So, do you believe me now?\" she smiled.\n\n\"Without question.\"\n\n\"Come on, we'll play again.\"\n\n\"And get my butt kicked again? No thanks.\"\n\n\"Come on,\" she said earnestly. \"I'll show you some stuff and you'll get better.\"\n\n\"Okay,\" he said, \"but there won't be any competition from me.\"\n\nThey played four or five more times and Jenny won each one easily, but her tips about angles and setting up shots helped Andy and by the time they finished, he was confident he could beat any of his buddies.\n\n\"You should be a pro,\" he said as they put the cue sticks away.\n\n\"Nah, I'm not that good, believe me. I go down to the pool hall on Stratton Street and get my butt beat regularly. Those guys are the pros. I'm getting better, though.\"\n\nJenny flipped on the stereo without asking Andy and turned on a rock station. They sat down on the love seat again, this time, a little closer. \"I hope Melissa doesn't come down and bother us,\" Jenny said.\n\n\"Will she?\"\n\n\"Mom said she'd keep her upstairs, but she can be sneaky at times.\"\n\nAndy noticed musical tapes in the stereo cabinet and decided to change the subject. \"What kind of tapes you got there?\" He got up and moved closer to see the titles.\n\n\"Pretty much anything,\" Jenny replied as she moved to his side. She inhaled and could get a faint whiff of his aftershave. She liked it.\n\nAndy flipped through the tapes seeing country, rock, and classical. His eyes widened. \"Cool, you've got Mozart, Beethoven, Brahms, all the great ones!\"\n\n\"You like that stuff?\" Jenny asked.\n\n\"Oh, yeah. It's great to listen to after a bad day. I play Mozart on the way home after school if I had a tough test. It really relaxes me.\" Jenny made a face. \"What? You don't like classical music?\"\n\n\"That's my mom's stuff. I only like rock, the harder, the better.\"\n\n\"Man, Jenny, you ought to listen to this, I mean, really listen. It's really soothing and relaxing. You could use it to relax you if Melissa gets on your nerves. It really works, believe me. Do you want to listen to some now?\"\n\n\"I am very relaxed right now. I don't need to listen to it.\"\n\n\"Oh, come on Jenny. Listen to just one side and I think you'll like it.\"\n\n\"Well, alright, I'll listen to one side,\" she relented.\n\n\"Great,\" he said. He turned back to the tapes and studied them, trying to decide which one to pick. After a few minutes, he finally settled on Mozart's \"Requiem\". He handed it to Jenny. \"Here, put this one in.\" She did as asked and then, they sat on the love seat again.\n\n\"Now, just listen,\" he instructed and they settled back as the first movement began. Call it a revelation, call it an epiphany, but as each note washed over her, Jenny realized how truly peaceful the music was and was beginning to enjoy it. Slowly, and without thinking, she rested her head on Andy's shoulder and sighed. Andy smiled and put his arm around her shoulder, giving it a gentle squeeze. Without a word, they listened and took in each note. Andy, who had listened to \"Requiem\" many times, still enjoyed it as if it were the first time. Mozart was his favorite composer. Jenny, on the other hand, was mesmerized by the music. She had never taken the time to really listen to classical music and never realized how soothing and relaxing it really was. Maybe Andy had picked out the perfect piece for her, she didn't know for sure, but she knew she wanted to listen to more.\n\nWhen the first side ended, she was still against him and not wanting to move. Not only was she relaxed, she was melted putty who couldn't move if she wanted. It was more than just the music that pleased her. She loved being close to Andy and being held by him. She could stay that way for a long time. \"You were so right,\" she murmured, \"that was so neat. I never thought I would ever like something like that. I guess I never really listened to it before.\"\n\n\"The other side is pretty good, too, although it's a bit slower and sadder,\" he replied. He made no move to change the tape. Jenny felt fantastic against him and he loved the scents coming off of her, the shampoo, the soap, and the light perfume she was wearing. He definitely was not in any hurry for her to leave his side.\n\nJust then, the basement door opened and Melissa bounded down the stairs. Reluctantly, Jenny's head left his shoulder and she looked over her own shoulder at her little sister. Shit, she hissed to herself.\n\n\"Whatcha doing?\" Melissa asked.\n\n\"Just listening to some music,\" Jenny answered. \n\n\"I don't hear anything.\"\n\n\"The first side just ended.\"\n\n\"I bet you guys were kissing.\"\n\n\"Melissa,\" Jenny sighed, trying to control her temper, \"we were not kissing. We were just talking about the music when you came down. What do you want?\"\n\nMelissa ignored the question and went over to the stereo and saw the tape. \"Mozart?\" she said, puzzled, \"I've never heard of that group.\"\n\nAndy laughed. \"Mozart wasn't a group. He was an Austrian composer from the 1700's.\"\n\n\"Oh.\"\n\n\"Melissa,\" Jenny said, exasperated, \"what do you want?\"\n\n\"Mom says to come up for some popcorn if you want.\"\n\n\"Alright, we'll be up in a few minutes. Now, could you leave us alone?\"\n\n\"So you can start kissing again?\"\n\n\"Melissa!!!\" Jenny made a quick move from the sofa towards her sister.\n\nMelissa turned quickly and bounded back up the stairs as fast as she had come down them, shutting the door loudly behind her.\n\n\"That wasn't so bad,\" Andy said.\n\n\"Yeah, right,\" Jenny replied. She stood up slowly and stretched. \"Come on,\" she said, \"let's get some popcorn.\"\n\nJenny gave him a bowl as her parents sat around the kitchen table. She handed him a can of pop without asking him if he wanted any before they sat down with them. \n\n\"So,\" Brad said out of the blue, \"did she beat the crap out of you in pool?\"\n\n\"Well, in so many words, yes,\" Andy replied. \"Many times, in fact.\"\n\n\"Don't worry about it. She beats all of her boyfriends.\"\n\n\"Daddy!\" Jenny squealed.\n\n\"All of your boyfriends?\" Andy asked.\n\n\"It's only been a couple,\" she said.\n\n\"Check the notches on her cue,\" Brad suggested.\n\n\"Daddy! Stop it,\" Jenny wailed.\n\n\"So, how many were there before me?\" Andy asked, obviously enjoying making her squirm.\n\n\"I don't have to listen to this. I'm going back downstairs. You guys can have your fun without me.\" Jenny stood up and began to move towards the basement door. She turned back to Andy. \"If you know what's good for you, you'll come down with me.\" She gave him a smile before heading down the stairs.\n\n\"Look out,\" Angie said, \"she's already setting down rules.\"\n\nAndy laughed and took his snack and drink down the stairs. Jenny had already set her stuff on one of the tables when he appeared at the bottom of the steps. \"You can set your things over here with mine,\" she instructed. He walked over and did as he was asked.\n\n\"So, do you want to listen to the rest of the tape?\" she asked. \n\n\"Sure.\"\n\nJenny went over to the stereo, flipped the cartridge, and sat down with Andy, who had his drink in hand. They sat in silence, letting the music wash over them. Soon, Jenny had settled against him and Andy had his arm around her once more. They stayed that way long after the tape finished.\n\n\"This is so nice,\" Jenny murmured, not wishing to move her head from his shoulder. \"I don't want to move.\"\n\n\"I'm certainly not going to stop you,\" Andy said, not wanting her to move, either.\n\nThey stayed that way for quite a while, neither saying anything and just enjoying each other's company. About fifteen minutes later, Jenny sat up, complaining of a stiff neck. She moved her head from side to side, trying to stretch it and loosen the tight muscles. Without any hesitation, Andy started to massage the back of her neck and shoulders as he had done so often for his sister. Serena got stiff necks quite often.\n\nJenny bent her head forward as he worked his fingers into the muscles that lined her neck. He was providing instant relief for her and soon, she was out of her discomfort. When he finished, she said, \"I think I'll have to keep you around for a while.\" She leaned over and kissed him on the cheek.\n\n\"What was that for?\" he asked, quite surprised.\n\n\"I just wanted to thank you, that's all,\" her bright green eyes sparkling.\n\n\"Well, you're welcome,\" he replied, grinning.\n\n\"You know,\" Jenny continued, \"I'm having a really good time for a first date.\"\n\n\"It's not a date.\"\n\n\"Is too.\"\n\n\"Is not.\"\n\n\"Okay, so if this isn't a date, when are we going to have one?\" she demanded.\n\n\"I don't know.\"\n\n\"You know,\" she said coyly, \"I can't let you kiss me until we have a date.\"\n\n\"You already kissed me,\" he pointed out.\n\n\"Oh, no, that was a friends getting together kiss,\" she replied. \"I was simply repaying you for the massage.\"\n\n\"Oh, I see,\" he nodded. \"Well, I guess we better have a date then. I certainly wouldn't want to break any of your rules.\"\n\n\"No, that wouldn't be good.\"\n\n\"Well, how about the Valentine's Dance next Saturday? Unless, of course, you've already got a date.\"\n\n\"Andy!\" she said indignantly, \"I do not already have a date for that. I was hoping you'd ask me. I'd love to go. I'll pay for the tickets if you want.\"\n\n\"No, no. I've got some money.\" He worked summers at one of the local department stores in the stock room. \"I'll get the tickets this week.\"\n\n\"Great.\" Jenny smiled to herself. She was so happy she asked him over. It was a very memorable first date, no matter what he said to the contrary.\n\nThey spent the rest of the evening playing pool and ping pong, then settling down once more to Brahms and Beethoven. Before they knew it, it was around midnight and time for Andy to leave. They took their bowls and drinks and made their way up to the kitchen. There was but one light on and everyone had already gone to bed.\n\n\"Just put them on the table,\" she said to Andy about his bowl and glass, \"I get them later.\"\n\nShe got his coat from the closet and pulled one out for herself. Handing his coat to him, she said, \"Come on, I'll walk you out.\"\n\nClosing the door behind her, she looked at Andy sadly. She really didn't want the evening to end and she wished she didn't have to wait until Monday after practice to see him again. Andy took her hand as they went down the steps and kept it, much to Jenny's pleasure and surprise. It felt very good to her. Slowly, they made their way to his car. He stopped with his back against the door and looked at her. He was already as happy with her as he had ever been with Kathy, although he and Kathy never really dated that much. He still liked her a lot, though, and was sad when they broke up.\n\n\"I guess I'll see you Monday,\" he said softly, his breath steaming in the frosty air.\n\n\"Yeah,\" she answered, a bit distracted with her own thoughts.\n\n\"Have a good day at work.\"\n\n\"It should be fine. It's only four hours.\"\n\n\"Yeah, well,\" he said, \"I better get going.\"\n\n\"Yeah,\" she sighed. She really hated to see him go. She let him go, though, and watched his car until it disappeared into the night.\n\nAnnoyed and a bit scared could have been two of the thoughts going through Andy's mind the next morning when he woke. He had a hard time sleeping and he couldn't blame it on Jenny or their evening together. Of course, he enjoyed their time together and he thought about it all the way home, but he was not the type to let something like that keep him awake most of the night. In his mind, it really wasn't a date and nothing out of the ordinary happened. There was no goodnight kiss or anything like that. He held her hand briefly, but that wasn't enough to elicit any special thoughts or dreams. He was tired when he got up and he had to use the bathroom. It took a long time before his bladder let loose and he had a burning sensation when it did. When he did finish, he still felt like he had to go, but there was nothing left. He had this happen to him numerous times over the course of the past few months, but he had thought nothing of it. He felt normal almost all of the rest of the time.\n\nHe went back to bed, but sleep eluded him once again. Andy tossed and turned and tried to get comfortable, but it was useless. Finally, at eight o'clock, he gave up and got up for the day. He had been tired all week and he blamed it on the rigorous workouts the coach was giving them, plus the tests he had to study for, but now he was worried it was something else. Looking back, he could remember times in the past few months when he was tired for no good reason. He just didn't think anything of it. It wasn't just a matter of being tired, it was a general shortness of breath whenever he needed extra energy for running, jumping, or any type of exertion. He couldn't put his finger on it, but deep down, he knew something was wrong. For the time being, he decided to keep it to himself in hopes it was a passing thing. There was no need to get everyone in a panic should there be nothing wrong.\n\nOn Monday, school passed by slowly, and for Andy, it seemed like an eternity. His sleep was no better that morning and he was very tired. He didn't nod off in class, but he came close. He didn't know how he was going to be able to get through practice, but he was going to do his best. As the last bell chimed for the end of the day, he walked slowly to his locker and began to separate the books he would be taking home with him and those that would stay. He didn't hear the footsteps behind him as he fumbled around with some of the notebooks.\n\n\"Hey, Andy,\" a familiar voice said behind him.\n\nAndy turned and saw Jenny and he smiled. \"Hey, what are you doing here?\"\n\nShe didn't answer, but was staring at him, studying him.\n\n\"What?\" he asked, puzzled at her expression.\n\n\"You don't look good. Are you okay?\" she asked, very concerned.\n\n\"What do you mean? I feel fine,\" he lied.\n\n\"I don't know, Andy,\" she said, still studying him. \"You just look really tired and your color is off. Are you sure you feel okay?\"\n\n\"I'm fine,\" he insisted, a bit edgy now and getting annoyed with the questioning.\n\n\"Okay,\" she said softly. \"I was just asking. Come on. I'll walk you to the locker room.\" \n\n\"Sure,\" he said, still in thought about what she said. If she noticed something different about him, then it was noticeable and he needed to get it checked out. He closed his locker and walked with her to the locker room.\n\n\"I think he's sick, Serena,\" Jenny insisted as they got dressed for practice.\n\n\"I know,\" Serena replied. \"Mom and I noticed it yesterday. We couldn't get two words out of him and all he wanted to do was lie around all day. I even tried to get him to talk about you, but he wasn't interested. Usually, I can't get him to shut up when your name comes up. I'll definitely get on him after practice.\"\n\n\"I hope so. He seemed irritated that I asked him about it. I really think something's bothering him.\" Jenny looked down at her feet. I hope he's okay, she said silently to herself.\n\nPractice did not go well for Andy that afternoon. He was tired, out of breath, and slow to react to anything hit or pitched his way. Ground balls that were normally within his reach weren't caught. His throws, normally crisp and strong, were lazy and weak. His bat speed was slow and any contact he made wasn't solid. Disgusted with his performance and worried about his health, he stood under the shower for a long time afterward, hoping the hot water would soothe whatever was ailing him.\n\nWhen he talked to Jenny after practice, he wasn't his usual jovial self with her. In fact, he could barely stay awake in the chair. Serena was shocked when she saw him after she came up from the locker room, but she tried not to show it. He and Jenny made small talk until it was time for Jenny to leave. They walked slowly to the car; Andy couldn't go any faster if he tried.\n\n\"Please, take care of yourself,\" Jenny pleaded. \"I don't want to nag, but you need to see a doctor.\" They were at the car now.\n\n\"I know,\" he said softly, glancing at his sister. \"I will. I don't feel so good.\"\n\nOut of instinct, she leaned forward and kissed him on his cheek, touching it after she did so. \"Tell me what's going on. I don't care how late it is.\"\n\n\"Your parents might care.\"\n\n\"I'll let them know ahead of time.\"\n\n\"Okay.\"\n\nJenny got into the car, not wanting to leave him. She waved to him before the car was put into gear and driven away.\n\n\"Come on,\" Serena said. \"Let's get you home before you fall over.\"\n\n\"I couldn't agree with you more,\" he said meekly.\n\nSerena drove home as quickly as possible, glancing from time to time at her brother. She didn't know what to think. All she knew was he was very sick and she was becoming very concerned.\n\nJoe and Diane took one look at Andy when they came through the door and had the same thought. His kidney. By then, his color had taken on an ashen, yellowish hue and he was very weak. They put the food away quickly, grabbed their coats, and took him to the hospital. Joe called for assistance in his best cop's voice, and soon Andy was wheeled into the emergency room.\n\nWhile Joe and Diane processed the paperwork, Andy was taken into the emergency room examination area immediately. They explained to the nurse that he only had \u00bd of a kidney and they suspected something was wrong with it. The information was then relayed to the staff taking care of him.\n\nHe was immediately put on oxygen and he felt better with the fresh air circulating through his nose. He had his vital statistics taken and an IV was started in his right arm when a pleasant looking man in his forties came into view.\n\n\"Hi there, Mr. Burleson,\" he greeted him. \"I'm Dr. Torgeson and I'll be taking care of you for now. We've been told you're not feeling too hot, so we're going to check everything out, just to make sure we find out what's going on with you. Okay?\" From the information given him, he already suspected renal problems, but he wanted to make sure.\n\n\"Okay,\" Andy said weakly. He was scared, but he was mostly exhausted and just wanted to sleep.\n\n\"Have you had any trouble sleeping, going to the bathroom, itching, or anything out of the ordinary lately?\"\n\n\"I haven't slept well for the past week and I'm always tired. I've had trouble going, but I haven't had any itching. I've been tired on and off for the past few months.\"\n\n\"Okay,\" he noted. \"Any pains anywhere?\"\n\n\"No.\"\n\n\"Eating okay?\"\n\n\"Yes.\"\n\n'Are you having trouble breathing?\"",
        "\"Yes. Sometimes, it's hard for me to catch my breath. It's like I have to breathe twice as hard to get half the air.\"\n\nDr. Torgeson jotted down more notes. He motioned for a nearby nurse to come to him. \"I want a complete renal panel done stat, and I need the results as soon as possible.\"\n\n\"Yes sir,\" she replied. She called the lab to send down a phlebotomist to take a sample of his blood.\n\nAndy was cold and scared and wanted his family with him. When he heard the doctor mention \"renal\", he knew it meant something about his kidney and he guessed something was wrong with it. He knew he only had the \u00bd kidney left, but he really never gave it much thought. He assumed it would go on forever and no one had ever told him otherwise. Andy had heard of people who had to go on dialysis and he knew he wanted nothing to do with that. He only hoped it could be fixed.\n\nDr. Torgeson came out of the ER a half hour later and found a very anxious family waiting for him. He guided them to a deserted area. Looking at them through rounded spectacles, he began. \"We're running blood tests right to confirm what I already suspect.\"\n\n\"It's his kidney, isn't it?\" Diane interrupted.\n\n\"I believe it is,\" he agreed. \"We won't know for sure until I get the test results back, but all indications point in that direction.\"\n\nJoe muttered to himself and looked away.\n\n\"I've sent for the staff nephrologist and he should be seeing him shortly.\"\n\n\"When can we see him?\" Diane asked.\n\n\"In just a few minutes after Dr. Venkata sees him and I've consulted with him. I'll come back for you, then.\"\n\nAs he turned to walk back to the ER, Joe said meekly, \"Okay.\"\n\nSerena had never seen her parents so sad and defeated. It surprised her to see them slump in their chairs so pathetically. She knew it was bad and that Andy's kidney wasn't working, but she also knew her brother was a fighter. He had proven that time after time from when he was an infant. She knew he could overcome this too.\n\nSerena sat down next to her mom and Diane looked at her through tear-welled eyes. \"Mom, he'll be alright. I know he will. He's too tough to let this get him down.\"\n\nDiane reached out and touched her cheek. \"You just don't understand, baby. If he loses the kidney, he'll have to go on dialysis.\"\n\n\"I know, but...\"\n\n\"He'll be hooked up to a machine for three or four hours, three times a week. He'll hate that. He's been through so much already....\" Her voice tapered off as she struggled to keep her composure.\n\n\"If anyone can get through this, he will. He can adjust to anything,\" Serena said confidently.\n\n\"I hope so, baby...I hope so.\"\n\nAndy stared at the ceiling of the ER and wondered what was happening with him. He was still cold and his penis hurt where they catheterized him. That was one of the worst experiences he had ever faced. Even a doctor grabbing his nuts was preferable to that! They had taken four vials of blood from him, but he was so sore from everything else, he barely felt the needle stick. Maybe the drawer was just very good. He didn't know. He didn't know about anything at that time. He did know he wanted his family near and wanted to see them in the worst way. He wanted to talk to Jenny and hear her voice. Hearing her voice would soothe him as much as Mozart, he thought.\n\nAn eastern Indian doctor came and looked at his chart for a few minutes before he departed. He had studied it very hard and made his own notes on it, but said nothing nor acknowledged the scared patient in the bed. He left almost as quickly as he had arrived and Andy was alone once again. He wished someone would tell him something, anything. Waiting was the worst part. Time was dragging and he thought they had been there for hours. He glanced at a clock that was to his immediate left and it was only about half past seven, so they had only been there about ninety minutes. Whenever he asked a nurse about what was going on, they would only tell him they were waiting for test results. They did give him an extra blanket, and although it helped warm him, the heaviness again his groin area was uncomfortable.\n\nIt was almost an hour later before Dr. Torgeson emerged from the ER with another doctor by his side, a very small eastern Indian man with delicate features. He couldn't have been more than five foot four and probably about one hundred pounds soaking wet. Dr. Torgeson introduced him to the family.\n\n\"Mr. And Mrs. Burleson, this is Dr. Venkata, our staff nephrologist.\" \n\n\"Come, sit down,\" Dr. Venkata said softly, indicating the chairs behind them. They sat down and he sat in front of them.\n\n\"I have examined your son's blood work and his chart and I am afraid I do not have good news,\" he said. Diane sighed heavily and looked away. Joe looked down at the floor. \"His urine output is minimal and his creatinine level is very high. All of his vital statistics are poor at this point. I believe he is in acute renal failure at this time and he needs to undergo dialysis treatment immediately.\" He paused momentarily.\n\n\"Will he regain his kidney function?\" Joe asked.\n\n\"I do not know that at this time. More tests will have to be run to determine that,\" Dr. Venkata answered.\n\n\"When do you want to begin the dialysis?\" he asked.\n\n\"As soon as possible. He is very sick and he needs to have his system cleansed.\"\n\n\"I see,\" Joe said softly, letting the reality sink in. \"We'd like to see him.\" Serena nodded in agreement.\n\n\"I will have a nurse bring you back in just a few minutes. Do you have any more questions?\"\n\nArms crossed, Diane shook her head as tears began to spill down her face. Dr. Venkata looked at her and smiled thinly. \"Mrs. Burleson,\" he said quietly, yet reassuringly, \"your son is sick, but he will not die. Keep your spirits up for him.\" Diane looked at him blankly, then nodded.\n\nIt was but a few minutes later when they were taken back to see him. Serena was shocked when she saw him at first. The IV, the oxygen mask, and the lack of good color in his face scared her momentarily before she regained her composure. Once she got past that, she saw he was still the same brother she loved.\n\nEach of them gave him a hug with his father being the last, roughing up his hair afterwards.\n\n\"How are you feeling?\" Diane asked, smoothing his hair out of his eyes.\n\n\"Pretty tired,\" he answered. \"They're sticking me and poking me like I'm a pin cushion. I won't tell you what else they've done to me,\" he said, looking straight at his sister. \"So,\" he said quietly, \"what's going on with me? No one's told me anything.\"\n\nAll three exchanged looks as no one wanted to break the news to him. After what seemed like an eternity, Serena stepped forward. \"Your kidney stopped working and you're getting sick from it.\" They waited for his reaction.\n\n\"I figured as much,\" he wheezed, trying to catch his breath again. \"When's it going to start working again?\"\n\nDiane spoke this time. \"They don't know if it will, honey. We'll just have to wait and see.\"\n\n\"Shit,\" Andy muttered softly so they couldn't hear him. That was great. That was just great, he thought to himself. Just when I think I got the team made, this has to happen. Damn it!\n\nSerena saw his furrowed eyebrows and thought he was in discomfort, but then she looked again and knew that look. It was his angry look and she was glad to see it. It meant he was ready to fight and he wasn't ready to give up.\n\nThey talked quietly for a few minutes before it was time for him to be taken to the dialysis unit. Andy asked Serena to call Jenny for him since he would be unable to do it himself. She said she would. Serena gave him a kiss, as did his mom, before they wheeled him out of the ER and towards the elevator. It wasn't until he was out of their sight that Diane broke down. Together, Joe and Serena led Diane to a small waiting room that was relatively deserted. She calmed down after a few minutes and asked Joe to call her parents to tell them the news. \n\n\"I need to take a walk,\" Serena announced. \"I'll be back in a few minutes.\"\n\nAs she turned to leave, Joe touched her arm. \"Are you okay?\" he asked.\n\n\"I'm fine, daddy,\" she said sincerely. \"I just need to take a walk, that's all.\"\n\n\"Okay,\" he said, not totally convinced. \"Come back soon. Your mom needs us both here.\"\n\n\"I will,\" she promised as she began to walk away. She didn't know where she was going to go, she just needed to get away from there. The thoughts of Andy lying in the ER came rushing back to her and she began to feel faint. She hurried to the nearest exit and walked out into the brisk February evening. The dizziness faded as the cold went straight through her, but she still didn't feel any better. Chilled to the bone, she returned to the door and went back inside.\n\nRemembering her promise to Andy, she found the nearest payphone and dialed Jenny's number.\n\nShe answered on the first ring, \"Hello,\" almost frantically.\n\n\"It's me, Serena,\" she said sadly.\n\n\"How is he?\"\n\n\"Are you sitting?\"\n\n\"Yes. Is it that bad?\"\n\n\"It's bad. You may not know this, but Andy had kidney problems as a baby and he only has about a half of one kidney. One was taken out of him when he was a baby.\"\n\n\"I didn't know. He never told me.\" Oh my God, she thought to herself.\n\n\"Well, the doctor's tried to repair the other one, too, but they never guaranteed anything.\"\n\n\"Did it give out?\" Jenny asked.\n\n\"It looks like it,\" Serena answered.\n\n\"Shit!\" she exclaimed.\n\n\"My feelings exactly.\"\n\nThey remained silent for a few seconds as Jenny tried to absorb it all. \"What happens now?\"\n\n\"Well, they took him to the dialysis department and they're going to try to clean him out. Then, I guess they'll try and see if they can get the kidney to start working again.\"\n\n\"Will it work again?\"\n\n\"They didn't say yes or no, but they didn't seem too optimistic.\"\n\n\"Damn.\" Jenny sat slumped in the chair in the kitchen as her mom came in. She gave a thumbs up to Jenny with an eye cocked. Jenny shook her head sadly and gave her a thumbs down. Angie frowned and patted her daughter on the shoulder and left her alone again.\n\n\"Did you get to see him? How was he?\" Jenny asked rapidly.\n\n\"He looks a lot worse than he did at school. I almost didn't recognize him. He made sure I called you, though.\"\n\n\"Sounds like him.\"\n\n\"Yeah. Well, I got to get back. Mom's taking it real hard...\"\n\n\"Tell them hi for me, would you? Tell Andy I'm thinking of him when you see him.\"\n\n\"I will. If it's not too late, I'll call again.\"\n\n\"Please do, Serena. I don't care how late it is.\"\n\n\"I won't call past eleven, okay?\"\n\n\"Okay. I'll let you go. Thanks for calling.\"\n\n\"Okay. Bye.\" Serena hung up the phone and began her journey back to the waiting room.\n\nThe pain was excruciating as the needle was moved slowly into his groin. Dr. Venkata was slowly pressing a dialysis needle into Andy groin area in hopes of finding the renal artery. Andy flinched at every movement as the white hot pain was almost too much for him to bear. He was crying from exhaustion and pain. A nurse was at his head, patting him reassuring on the shoulders and whispering encouragement to him. The doctor slowly moved it forward, then inched back, then started again. Andy tried to stay still, but the pain was just too much.\n\nExasperated by Andy's flinching and his inability to get the needle into the artery, Dr. Venkata pulled back slightly. \"Mr. Burleson,\" he said calmly, \"you must remain still. You must not move.\"\n\nThrough his tears, Andy replied, \"Can I ask you something?\"\n\n\"Yes.\"\n\n\"Have you ever had this done to yourself?\"\n\n\"No, I have not.\"\n\n\"Then, you don't know what you're talking about if you expect me to lie still and not make any moves while you're sticking a needle in me down there.\"\n\nDr. Venkata paused for a moment. \"Do the best that you can, son. Work with me and I will try to make this as easy for you as possible. Okay?\"\n\n\"Okay.\"\n\nIt would take another five minutes, but the doctor had the needle in place. He taped it down securely before he took off his rubber gloves. Thinking he was done, Andy let out a loud sigh and brushed the tears away from his eyes.\n\n\"I will let you rest for a minute before we start again,\" the doctor said as he moved away.\n\n\"Start again?\" Andy looked wildly at the nurse who had moved to his side by then. \"We have to do this again?\"\n\n\"I'm afraid so,\" she nodded. \"He put the needle into the renal artery. Next, he'll have to put one in the renal vein.\"\n\nAndy trembled at the thought and began to shake as the tears began to flow again.\n\n\"Hey, hey,\" she said softly, \"it's okay. This one goes in a lot easier. I promise.\"\n\nAndy looked at her and could tell she wasn't lying to him. She took his hand and squeezed it. \"I promise,\" she said again. And it did.\n\nLater that night, actually early Tuesday morning, Andy was alone with his thoughts. His family had reluctantly left hours before, although it was long after the posted eight o'clock time. He guessed it was around midnight when they finally did depart. His dad had called work and had taken the day off for his midnight shift. His mom wasn't going to work and he figured Serena wouldn't be in any decent shape to go to school, either. He didn't feel too bad, hungry maybe, and sore from the initial dialysis and the catheter. Other than that, not too bad.\n\nThe dialysis went better than he expected. He slept through most of it, getting some shut eye he sorely needed. His visit with his family went well. No one seemed to be as sad as they had been previously. Although no one said anything, in his heart he knew he wasn't going to be able to play baseball that spring, even if the kidney did recover. He wasn't as upset about that as he figured he'd be, or maybe it just hadn't sunk in yet. After all, he could possibly play summer ball when he got his strength back.\n\nAndy knew he would be out of school for quite awhile and wondered about his school work. It was going to take forever for him to catch up. He figured he would miss at least a week of school, depending upon how fast he bounced back. He was not ready to concede that his kidney was finished, that it would never function again. He had faith in the doctors and in the medicine he was being given that his kidney would start functioning again and he would once again live a normal life.\n\nJenny crossed his mind over and over once they left. He briefly considered calling her, but it was way too late for that and Serena told him she had already called her. Perhaps he could call her after she got home from practice. He really didn't know what he would say and he thought it might be an awkward conversation. The thought of the Valentine's Dance crossed his mind and he doubted they would be able to go now. It saddened him because he knew Jenny really wanted to go, plus, it would have been their first real date. Maybe some other time, he thought as he gazed out the window. Their was virtually no traffic out on the nearby highway and the downtown skyline was dark and still. He wondered what time it was, but it really didn't matter anymore. Eventually, he got tired enough to fall into an uneasy sleep.\n\nJenny was restless beyond belief all day. Her thoughts were totally on Andy and his health and nothing else mattered to her, especially her classes. And when she realized Serena was absent, there went her sole source of information. She was tempted to call their house many times between classes, but she knew they'd be at the hospital. She also resisted calling his room, figuring he would be out for tests or resting. She certainly didn't want to wake him. Talking with her parents that morning, they were going to allow her to use a car a visit him in the evening. Jenny even considered skipping practice and visiting him earlier, but she knew Andy and her parents would disapprove of that. She would just have to wait until the evening.\n\nBefore practice started, she told the coach what was going on with Serena and why she wasn't there. When the team heard about the news, they asked Jenny many questions and told her to give Serena and Andy their best when she visited. Her practice was lackluster and her effort wasn't her best, but she plowed through and did the best she could considering the circumstances. Once it was over, she showered and dressed quickly and met her mom at the car, where she heard the bad news.\n\nHe didn't know why he cried when he heard there was no hope for his kidney to regain its function, nor did he know the nurse who happened to be there at the time. All he knew was he was crying and she was holding him and telling him it was okay and everything would work out for him. He didn't understand how things could be alright when he was only seventeen and he didn't have any kidneys, plus he would have to go on dialysis for the rest of his life. That was certainly a wonderful thing to look forward to!\n\n\"But,\" she said, looking at him square in the eye, \"you are still alive and many people function very well while on dialysis. You will adjust. There are other options you will be told about in due time, also, so try not to think about how bad things are right now. You've got many things to live for and to look forward to. Your main goal now is to get strong enough to go home and get back to school where you belong.\"\n\n\"But, it isn't fair!\" he said.\n\n\"Who said it was fair? It's never fair when someone loses their kidney function. We've got kids a lot younger than you in the dialysis unit right now and it isn't fair to them, either. It isn't fair that I lost my husband to cancer ten years ago when he was only thirty-two, but I went on and I lived. Yes, life has dealt you a nasty blow, but you have to deal with it and not feel sorry for yourself because you have it much better than some people.\"\n\nHe thought about what she said as he looked at her steel-gray eyes. She met his gaze, then sat up and began to busy herself. Andy reached for a tissue and wiped his eyes and nose with it.\n\nShe was standing at the foot of his bed and looking at him as a smile peeked from the corners of her mouth. Softly, she said, \"You remind me of my husband when we were in high school, maybe a little too much.\" She looked away for a second and moved closer. \"You just need some time to get used to your condition. I know it's tough. I've seen many people have to deal with their loss of kidney function and they went through the same things as you are. Just give it some time. If you need to talk, I'm here and so is every nurse on this floor.\" She turned to leave.\n\n\"Thanks,\" Andy said.\n\n\"You're welcome,\" she replied before she disappeared.\n\nDr. Venkata's office was spacious, but sparsely furnished. He had to bring in two extra chairs from his colleague's office to have enough for Diane, Joe, and Serena. They already knew Andy's kidney would never recover. He had called them in the morning to tell them and asked them to meet him to discuss Andy, his condition, and what could be expected in the next few years. He had options to discuss with them concerning his care and hoped they would be open minded with the his proposal.\n\nWhen they were seated, the doctor sat down behind his desk. \"First,\" he began, \"thank you for coming in on such short notice. I know you want to visit your son and I will not keep you very long. As I told you over the phone, we have the test results back and I see no hope for Andy to regain his kidney function.\" Diane looked on with red, puffy eyes. \"For now, he will be placed on a dialysis regimen and a strict low-sodium, low-potassium diet. This will aid in cleansing his system and getting him back on his feet.\"\n\nHe moved from behind his desk and sat on the edge. \"I have a proposal for you, an option I think you should consider.\" He looked at them thoughtfully. \"I feel Andy is too young to be on dialysis and I know you will agree with me on that. In 1954, a surgeon successfully transplanted a kidney from a man to his twin brother, who had kidney disease. The transplant was successful and the recipient lived many years longer until he died from unrelated causes. Since then, kidney transplants have been very successful and people have lived long, useful lives because of it. Here is what I propose. I would like to put Andy on the waiting list for a kidney. However, since it can take upwards of a year or two to find a suitable donor, I would like for you to consider the possibility of being tested to be a donor.\"",
        "Diane looked at Joe and he, back at her. Serena looked blankly at the floor, not totally comprehending what the doctor had suggested.\n\n\"You're saying you would take a kidney from one of us and put it in him?\" Serena asked.\n\n\"Yes,\" he said simply. \n\n\"What about the donor?\" Diane asked. \"Wouldn't we be at risk with only one kidney?\"\n\n\"A person can easily live on one kidney. Look at Andy. He lived on one half of a damaged kidney for seventeen years. One kidney can easily do the job of two.\"\n\n\"I see,\" Diane said. She had already made up her mind to be the donor. She would do anything to help her son.\n\nThere was a pause as Diane and Joe contemplated the proposal. \"Well,\" Joe said, \"I don't know about Diane, but I'll give him one of mine.\"\n\n\"No, you won't Joe, I'll give him one of mine,\" Diane offered.\n\n\"Di, listen...\"\n\n\"No, Joe, I'm going to do it...\"\n\n\"Mr. and Mrs. Burleson,\" Dr. Venkata interrupted, \"I think it's wonderful you both want to be the donor, but it is not that easy. We will have to test both of you to see if you are a close enough match to make the transplant worthwhile.\"\n\n\"I want to be tested, too,\" Serena said quietly, looking at the doctor. \"I can, can't I?\"\n\n\"No! Never!\" Diane said sternly. \"You will not be tested. I won't allow it.\"\n\n\"But, mom, I want to do it.\"\n\n\"No, Serena. You are too young and you will not do it. You have too many years ahead of you. You have college, children. No, you won't do it.\"\n\n\"It's not fair! He's my brother. I want to do this for him...\"\n\n\"No! I don't want to hear another word about it from you...\"\n\nJoe remained silent, deep in thought. He didn't know when he would have to step in. Fortunately, the doctor did it for him.\n\n\"If I may,\" Dr. Venkata said, \"I think it's admirable for one so young to want to do something so heroic for brother. I am not one to meddle in a family's affair, but I think I have a vested interest in this.\" Diane started to protest. \"Please, hear me out. If Serena wants to be tested, I think it is in Andy's best interest for her to be tested, and only because of this. There is the possibility that the two of you may not be a match for him, but Serena may be.\"\n\n\"What determines a match?\" Joe asked.\n\n\"Blood samples will be taken from each of you and Andy. From the samples, tissue will be extracted and tested to see if they are compatible. Andy's and your tissue will be placed in a petri dish and will be checked to see if they draw closer, stay the same distance, or go away from each other. It is called an \"Antigen\" match. A six antigen match is perfect, with little chance of rejection. A one antigen match has a very slight chance of being successful.\" The doctor waited for more questions.\n\n\"I want to be tested,\" Serena said, quietly, but firmly. Her jaw was set and she was serious.\n\n\"No,\" Diane said.\n\nSerena had been looking down since the argument began, but her head snapped up as she looked at her mother. \"Mom, I'm going to be tested. If I have to sneak out of school to do it, I will. I have to do this. You heard him. What if you guys aren't a good match? What happens then? Andy goes on dialysis without us ever knowing if I could help him. Sorry, but that's not going to happen. If I get tested and I'm not a match, I can live with that. But, there's no way I'm not going to find out. I have to know.\"\n\nJoe spoke before Diane could protest. \"I think we need to discuss this at home and not here. Arguing will get us nowhere and it certainly won't help Andy. We need to calm down. He doesn't need to see us mad at each other.\"\n\n\"I think that is an excellent idea. There is no rush with this decision,\" Dr. Venkata said. \"Just let me know when you would like to be tested and I will make the arrangements.\" He stood up and went back to his desk where he picked up various brochures and pamphlets. \"Here is some reading material I think you will find most helpful.\" He handed them to Joe. \"If you have any questions whatsoever about the testing or about transplants, please do not hesitate to contact me,\" he said as he showed them to the door.\n\nThe short drive to the hospital was painfully quiet. Serena knew if she said anything, her mother would jump down her throat and she wouldn't be nearly as nice as she had been in the doctor's office. Her mom had quite a temper whenever Serena disagreed or argued with her. Luckily for both of them, they got along very well and rarely argued. The thought of being tested thrilled her and scared her at the same time. What if she was the best match? What would she do? She had never had any type of surgery in her life and truthfully didn't know what to expect. She didn't even know how they would remove the kidney. All she knew was she wanted to be tested. She had to be tested and no one, not even her mother, was going to stop her from doing it.\n\nAndy was in good spirits when they arrived. They didn't avoid the subject of his total renal failure and they talked about his need for dialysis. They did, however, avoid the subject of a kidney transplant, something all three knew needed to be discussed at length amongst themselves before they included Andy.\n\nWhen his lunch arrived, Diane and Joe excused themselves for their own lunch while Serena stayed with Andy. She claimed she would get something when they came back. Truthfully, she just wanted to be alone with him for a few minutes without her parents around. Many an evening, they would sit in one of their bedrooms and just talk It never mattered about what. They just enjoyed being with each other.\n\nHis lunch was bland and sparse, but he was hungry and it didn't matter what it tasted like. Serena waited until he was finished before she spoke. \"How are you really feeling?\" she asked, her brown eyes probing his.\n\n\"Physically, I'm just whipped. I feel like I played three or four games in a day. I feel so tired all of the time and all I want to do is sleep. I wish I could get some energy back.\"\n\n\"You will. It'll just take some time,\" she said. Serena looked down at the sheets and then back at him. \"How do you feel about the kidney and dialysis?\"\n\nAndy stared off into space as he thought about the morning and when he found out. \"I was pretty upset when I found out, but a nurse talked to me and I felt better after that. I guess I'm still mad about it, though. My baseball season is screwed and unless I get some energy back, I won't even be able to play summer ball. I was going to take Jenny to the Valentine's Dance Saturday, but that's out the window. Hell, I don't even know if I'll be able to take her to prom.\" He looked away as he could feel the tears starting to come again. He willed them back into his sockets before they had a chance to spill.\n\n\"You'll make it to prom, Andy. You'll get your strength back. I know you will. I also know you'll work your ass off to play summer ball, so that's not even an issue.\"\n\n\"I don't know,\" he said sadly. \"I don't know how much energy I'll have after dialysis. Maybe I'll only have about half my strength. Who knows? I guess I'll just have to wait and see.\"\n\n\"Yeah,\" she agreed.\n\n\"Have you talked to Jenny?\"\n\n\"I talked to her last night. I talked to her mom today and she thinks she'll be coming out tonight to visit.\"\n\nAndy's eyes brightened. \"It'll be great to see her.\"\n\n\"And what am I, chopped liver?\" Serena asked indignantly.\n\n\"You,\" he smiled, \"are my very best friend.\" He took her hand. \"You know when I said I was angry about all of this?\"\n\n\"Yes.\"\n\n\"Well, I'm scared shitless, too.\"\n\n\"Of course you are. I would be. It's natural to be scared. I'd think something was wrong with you if you weren't.\" She looked at him carefully, still holding his hand. \"It's okay to be scared. You don't have to put up some brave front for me because I know how scared I'd be if I were in your shoes.\"\n\n\"Really?\"\n\n\"Yes, really.\"\n\nAndy looked down as the tears were once again filling his eyes. This time, though, he didn't feel like fighting them. He could always be himself around Serena, whether he was angry or sad, kidding or serious. Serena noticed the tears and scooted up on the bed. Without a word, she gathered him to her and held him, his head resting on her shoulder. And neither of them saw their parents standing at the door, watching them and marveling.\n\nJenny arrived shortly after seven o'clock not knowing what to expect. She didn't know if he would look normal or sick and she didn't know how to prepare herself if he looked really bad. What would she say? What would she do? Feeling scared and unsure of herself, she found his room and slowly walked in. Serena, Diane, and Joe were all seated around his bed talking softly. Serena saw her first and held her finger to her lips. She got up quickly and walked softly to her.\n\n\"He's sleeping,\" she said in hushed tones. Diane and Joe came over and the four of them left the room and walked to a nearby waiting area. Once they were there, Serena made introductions.\n\n\"We're very glad to meet you,\" Diane said. \"We've heard a lot about you from Andy and Serena.\"\n\n\"Some of it was good, I hope,\" Jenny said.\n\n\"All of it was good,\" Joe said.\n\nHands in her pockets, Jenny asked, \"How's he doing?\"\n\n\"He's pretty tired,\" Serena said, \"but he's doing alright. He'll probably wake up in a little bit. He usually doesn't sleep very long.\"\n\n\"How did he take the news?\"\n\n\"About as well as could be expected. I don't think it's totally sunk in yet. It may take him a while to get used to it.\"\n\n\"Oh.\"\n\nSerena looked at her parents, then at Jenny. \"Hey guys, I'm going to take her back to see him, if you don't mind.\"\n\n\"Sure,\" Joe said. \"We'll wait out here for a few minutes.\"\n\nWhen they got to the room, Jenny asked, \"How does he look?\"\n\n\"A little worse than when you last saw him, but he's improved.\"\n\n\"Improved?\"\n\n\"He looked awful last night.\"\n\nThey went in and Jenny steeled herself. When she saw him, he wasn't nearly as bad as she expected, but it still saddened her greatly. \"Shit,\" she muttered under her breath as she looked at him. He looked much younger when he was asleep, almost like a thirteen or fourteen year old. Jenny sat in a chair next to his bed and stared at him, feeling great sadness that he had to be so sick. She didn't know much about kidney disease and was surprised at the devastating effect it had on him. Jenny was also amazed at how fast he had gone downhill. Just a week before, he seemed so healthy. Now, he looked like a shell of his former self.\n\n\"We were going to go to the dance Friday,\" she whispered.\n\n\"I know.\"\n\n\"I'd give up all the dances in the world for him to get better.\"\n\n\"You guys will go to other dances. He just needs time to get his strength back.\"\n\n\"He won't be able to play baseball this year, will he?\"\n\nSerena shook her head. \"Maybe summer ball. We don't know how much strength he'll have.\"\n\n\"He's going to be so disappointed.\"\n\n\"I know.\"\n\nThey sat in silence for a few minutes. \"We had such a great time Saturday night,\" Jenny remarked. \"That seems like so long ago. Almost like a lifetime...\"\n\n\"Lifetime?\" Andy asked sleepily, stretching his arms. \"What are you talking about?\" he asked Serena, not seeing Jenny.\n\n\"Waiting for you to wake up!\" Jenny said sarcastically. \"I haven't got all night to wait for you.\"\n\nHis face jerked quickly over to her side and a big smile erupted over his face. Serena was amazed at the transformation. \"Hey Jenny!\" he exclaimed.\n\nJenny was out of her chair quickly, throwing her arms around him and hugging him gently. \"Hey yourself,\" she said softly as she moved back.\n\nSerena moved discreetly away from the bed. \"I'll be back in a few minutes,\" she said before she disappeared unnoticed.\n\nHer hand found his and she squeezed it lightly, noting it didn't seem to have the same strength it had just a few days ago. \"How're you feeling?\" she asked softly.\n\n\"Okay, but I'm feeling better now,\" he replied.\n\nJenny smiled shyly. \"You don't seem too sick to me if you can flirt like that.\"\n\n\"Who's flirting? I was merely stating the truth about how I'm feeling.\"\n\n\"Right.\" She looked behind her and then sat on the bed next to him. Looking at him seriously, she asked, \"How are you really feeling?\" Her eyes searched for answers before he could speak.\n\n\"I just feel really, really tired, almost like I couldn't get out of this bed if my life depended on it. This laying around and doing nothing is about to drive me crazy.\"\n\n\"Aren't you allowed to get out of bed?\"\n\n\"I've been up a few times,\" he admitted, \"but for only a little bit at a time. I get exhausted really fast.\"\n\n\"I guess you'll just have to work and get stronger.\"\n\n\"Yeah.\"\n\nThey talked about her day at school and her practice. As she knew he would, he bawled her out for her bad practice, good natured, of course. They avoided talking about the dance, but instead focused on other events coming up in the school year and their studies. He confided in her the fact of his uncertainty about his homework and whether he'd be able to catch up quickly. Jenny told him she'd be more than happy to help him in any of the subjects if she could, but thought Serena would be better at it since she took a lot of the subjects he was taking now. Andy assured her he would like both of them to help him, if they were able.\n\nSerena and her parents came back a few minutes later to find Jenny sitting once more in the chair beside the bed. She moved away to let Diane be near. After all, she was his mother. Jenny stayed for another half hour before she left, needing to get home to do her school work. She didn't have a private good-bye as she had hoped, but she promised to visit again as soon as she could. Serena walked her to the elevators and they lingered there for a few minutes before Jenny pushed the down button.\n\n\"I really like him,\" Jenny said.\n\n\"I know.\"\n\n\"No, I mean I really like him.\"\n\nSerena remembered when his face lit up looking at Jenny when he first woke up. \"Well, he really likes you, too.\"\n\n\"Do you think so?\"\n\nSerena smiled thoughtfully. \"I know so.\"\n\nSerena didn't want to argue that night. She planned to go back to school the next day and she was tired. But, her dad wanted to get everything out in the open about the testing. He wasn't one to let things boil until they exploded. But, Serena thought, he had taken the night off again and he didn't have to worry about getting up.\n\nDiane made it very clear from the start she wanted to be the donor and was adamant about Serena not taking part in it.\n\nShe kept saying, \"You will not do this. I won't let you,\" and expected Serena to accept it. But, Serena had other ideas and would not back down.\n\n\"You think you're the only one in this family who loves him,\" Serena shot back.\n\n\"I do not think that. I know you love him and I know your father loves him. I am in the best position to give him a kidney. Don't you understand that?\"\n\n\"Then what's the big deal if I get tested? You may be in the best position to donate, I'll agree with you there, but what if you and Andy aren't a match? What happens then?\"\n\n\"We will be a match. I am his mother.\"\n\nSerena rolled her eyes to the ceiling. \"Have you listened to Dr. Venkata or read any of the pamphlets? A perfect stranger could be more compatible than you. It has to do with tissue and blood match.\"\n\n\"We have the same blood type.\"\n\n\"That's not going to make any difference if your tissues don't match.\"\n\n\"They will match.\"\n\n\"How do you know that?\" Serena was ready to pull her hair out with frustration.\n\nJoe finally had enough and stepped in. \"Okay, both of you, let's calm down and talk about this rationally. Above all else, we have to do what is best for Andy. Do we agree on that?\" They both nodded their heads. \"Okay, the best thing for Andy is to get the most compatible kidney so it won't be rejected or the likelihood of it being rejected is diminished. Do we know if you are the best candidate?\" he asked, looking at Diane.\n\n\"Yes, we do.\"\n\n\"How?\"\n\n\"I am his mother.\"\n\n\"I'm his father. Why aren't I the best candidate? We're not talking about who is in the best position to give him a kidney. Hands down, you're the best. But, it certainly won't help Andy a bit if you don't match up with him.\"\n\n\"But, I will match up with him. Don't you see that?\"\n\n\"Diane,\" he sighed, \"you will match only when the test results tell us you will. All the wishing and hoping in the world won't amount to a hill of beans if scientifically, you are not a match. If Serena and I are not a good match and you are, great. If I'm the best match, fantastic. And if Serena is the best match, then I think it's her decision and her decision alone if she wants to do it.\"\n\nSerena looked at her father in disbelief. She couldn't believe he was siding with her.\n\n\"You can't be serious,\" Diane said, shaking her head. \"You would actually allow Serena to give him a kidney over us?\"\n\n\"Only if she was the clear cut choice over us. Other than that, no, I wouldn't want her to do it. But, we've got to think of Andy first. If you read the pamphlets, you know the donor can easily live on one kidney. Any disease it might get in the future would more than likely have affected both kidneys anyway, just like Andy. The donor is no more susceptible to any kidney problems than a person with two. Di, we can't stop her from doing it. You know that. She's just as stubborn as you and she would find a way to get tested.\"\n\nThe last statement brought a small smile from Diane, although she tried to hide it. \"I just can't stand the thought of both of my children being operated on at the same time,\" she cried.\n\n\"Why don't we just wait and see before we jump to conclusions,\" Joe suggested. \"I wouldn't be too thrilled about that possibility either, but if it's the best thing for Andy, then I think we have to consider it.\"\n\n\"Well, I don't agree with you and I will never agree with you on this. Every fiber of my being tells me to stop this from happening, but I know I can't stop her from doing it. I just pray to God it doesn't come to that.\"\n\n\"Me too,\" Joe agreed.\n\n\"Mom,\" Serena said softly, \"believe me, I'm not doing this out of selfishness. I only want Andy to get better and if I can do that or you or dad, it just doesn't matter who. The only thing that matters is Andy getting better and living a normal life. If you or dad are the best match for him, I would rejoice in that, only because one of us could do it and help him.\"\n\nDiane reached for her and hugged her tight. \"I just don't want you to do it,\" she cried.\n\n\"I know,\" Serena said. \"I'd be the same way if I were in your shoes.\"\n\nThe days went by slowly for Andy. Little by little, he regained his strength and was able to be out of bed for almost an hour without too much trouble. Whenever his family visited, he sensed something was going on just by their looks to each other, but nothing was said directly to him and the moment would pass. He was told he would be able to go home either Friday or Saturday, depending on how well he was doing and how he was responding to the dialysis. Also, the ports in his groin would soon be removed and he would have a minor surgery to have a fistula placed in his upper arm to allow easy access for his dialysis treatments.\n\nHe still couldn't get used to the fact of not being able to use the bathroom on his own. The catheter had been taken out when he stopped producing urine. He could produce a few dribbles now and then, but it was pointless to try anymore. Jenny had visited Wednesday night and he was so glad to see her. He really looked forward to talking to her and having her near him and she always brightened his spirits. They didn't get any private time together, but it didn't matter to him. She stayed for an hour and he was disappointed when she had to go.\n\nHe still felt sad and depressed at times, but he talked to a few nurses and they always seemed to have the right words to say to comfort him. He really was looking forward to being home and back in familiar surroundings. Andy hated that his family had to come out every day to visit and felt as if it was a burden for them. At least if he was home, his care would be easier for everyone. When the family visited Thursday evening, Diane was introduced to the renal dietician who introduced her to cooking for a dialysis patient. Basically, it had to be sodium and potassium free. All canned vegetables had to be salt free, no snacks with salt, limited potatoes, etc. It was a very bland diet, but she made excellent suggestions for seasoning that would make the transition a bit easier for Andy.",
        "Andy showed them the fistula that had been implanted under the skin between the forearm and the biceps. It was swollen and misshaped and it looked odd, but no one made a fuss over it.\n\nJenny couldn't make it that evening because of her studies, but she did call him and they talked for about fifteen minutes. When it got to be about a half hour before visiting hours were to end, Everyone gathered close around Andy's bed.\n\n\"Andy,\" Joe said, \"we've got something to tell you, something you should know.\" \n\nAndy's eyes widened and he immediately thought something was wrong.\n\nDiane patted his hand saying, \"It's nothing bad. It's just something we've discussed and we think you should know about it.\"\n\n\"Have you heard of organ transplants?\" Serena asked.\n\n\"Not really,\" he answered.\n\n\"It's when an organ is taken from one person and put into another. Usually they're taken from persons who have just died, but with kidneys, one can be taken from a living person and given to someone,\" Serena explained. \"The first kidney transplant took place in 1954 when a man donated a kidney to his twin brother.\"\n\nClearly perplexed, Andy said, \"I don't understand. What's this got to do with me?\"\n\n\"We've talked about this at length,\" Joe said, \"and we've decided we're going to be tested to see if one of us can give you a kidney.\"\n\nThe silence was deafening and you could have knocked Andy off the bed with a feather if one was available. Dumbfounded and awestruck, Andy sat with his mouth partly open, unable to speak. Thousands of thoughts swirled through his head. He couldn't believe what they were proposing, actually having a kidney removed from one of them and placed inside him...so .... he....could.... feel.... normal again. Overcome with emotion, he held his face in his hands as he bent forward. He couldn't say anything or do anything except cry at that moment.\n\nDiane was quickly by his side, holding and gently rocking her son. He was still her baby after all. He regained control soon thereafter and wiped his eyes. \"I don't know what to say,\" he whispered, barely able to talk.\n\n\"No need to say anything,\" Serena said, \"but if you get a kidney from me, you'll owe me big time!\"\n\nJenny stood in front of the large, old house, gazing at it and wondering why she was there. She couldn't remember ever being there before. Dark and foreboding, she could see vines growing up the walls and lattices, climbing up to the second and third floor windows which were lightless.\n\nIn a flash, she was in a room. Sheets covered the furniture and the drapes were drawn, casting shadows throughout. Jenny looked around and tried to let her eyes get used to the light, or the lack thereof. She thought she saw a door and blindly stumbled towards it, knocking into a table as she went. Her hand found a knob and it opened with a click. She pulled on the door and it squealed from it's oil less hinges. It startled her as the quietness was broken. \n\nShe stepped into the hallway, dimly lit and full of dust and cobwebs. She looked to her left and right and saw a stairway to the right about sixty feet away. Jenny cocked her head and thought she heard voices coming from that direction. She walked cautiously towards the stairway, her shoes making imprints in the dusty carpet.\n\nThere was no light going down the stairs and Jenny hung onto the bannister with white-knuckled fingers, slowly descending in a slow spiral. They seemed never ending and the voices were becoming louder, but no more distinct. Her foot touched the floor and she realized the stairs had ended. Down at the very end of the hall, she saw a light coming from a room to the right. Chandeliers lined the ceiling and were decorated with black strips of velvet.\n\nJenny walked slowly towards the light, the floorboards creaking beneath her. To her left, she saw a mirror, but barely recognized the girl who stared back at her. Jenny's hair was swept up in a special maze of curls atop her head and she wore sparkling earrings. She stared at herself and noticed her dress, black in color and exquisite in detail. She thought she looked paler than usual and was puzzled by the dress. I don't own a black dress, she thought to herself.\n\nJenny tore herself away from the mirror and pressed on. The voices were becoming more distinct and she thought she heard crying, sobbing as if their heart would break. She came to the entrance and looked inside. It was fogged and difficult to see anything. Jenny strained to see, but all that was apparent was shadows moving about, floating as if on air.\n\nQuickly, the fog lifted and Jenny could see people sitting in plush velvet chairs or walking about. She recognized a lot of the people, friends from school, teachers, and Serena's parents. All were dressed in somber, dark colors and Jenny finally realized where she was. Without hesitation, she turned and tried to leave the room. Out of nowhere, Serena stood in front of her, blocking her path.\n\n\"Leaving so soon?\" she asked, her breath foul and rancid. She looked thin and pale, nothing like herself. \"Come, come, there's so many who want to meet you.\" Her talon-like nails dug into her elbow as she guided Jenny back into the room.\n\n\"I think I should go,\" Jenny said, no longer wishing to be near her friend.\n\n\"Oh no, my dear,\" Serena cackled, her fingers digging deeper into her flesh, \"he wants to see you, too. You wouldn't want to disappoint him, would you?\"\n\n\"Who are you talking about?\" Jenny asked. \"Where's Andy?\" She tried to pull away, but Serena's grip was too strong.\n\n\"He's right over there,\" she replied, pointing to a group of people. They were standing in front of something, but Jenny could not see what it was, nor could she see Andy.\n\n\"Where is he? I don't see him.\"\n\n\"Come along,\" Serena hissed, \"and you will see him.\" She pulled and dragged Jenny towards the crowd. When they got within twenty feet of them, they parted and behind them was a coffin on a low catafalque. \n\nJenny screamed, \"NO!!!\", covered her eyes and tried mightily to pull away from Serena.\n\n\"Come, come, child. You must see and believe.\"\n\n\"No, no, no,\" Jenny shrieked, jerking and trying to wrench away from her captor. \"I don't want to see! No, no, no,\" she kept saying.\n\n\"Do not fight it. You must see and believe.\"\n\nThe crowd circled and began to chant, \"You must see and believe, you must see and believe...\"\n\nThey were now within a few feet of the coffin. Jenny held her eyes low and refused to look at the corpse in the coffin, dressed in his black finery.\n\n\"Look at him!\" Serena commanded.\n\n\"No,\" Jenny whimpered.\n\n\"Look at him, bitch! He is here to welcome you. LOOK AT HIM!!!!\" Serena took Jenny by the jaw and with lightning speed, brought her face to within inches of the corpse. \"Look, my pet,\" Serena cackled, holding her in place, \"he is here for you.\"\n\nJenny took a look at the corpse and screamed.\n\nShe bolted upright in bed, her mouth wide open from her scream. Frantically, she looked towards her door, but she didn't hear any pounding of footsteps coming from her parent's room. Her heartbeat was in a frenzy and her thin nightgown was clinging to her, soaked from her sweat. She slowly realized she was safe in her own room as familiar things came into view, but she continued to shake from fear.\n\n\"Oh my God,\" she said softly, hugging herself and trying to forget. She glanced at her alarm and it was after one o'clock. Briefly, she thought of calling him, but talked herself out of it, knowing he needed his rest and not needing to hear from his hysterical girlfriend. Standing up on shaky legs, she pulled her nightgown off and dried herself with it. Not trusting her legs to carry her to her dresser, she climbed back into bed naked and pulled the covers up to her chin. She wanted to cry, but she fought against it, not wanting a dream to get the best of her. It was only a dream, she kept repeating to herself. It was only a dream. She prided herself in being a strong person and she didn't necessarily believe in dreams, good or bad. And she certainly couldn't believe in this dream. Andy was getting better and was going home soon. She just knew the dream couldn't be true, it couldn't be a sign of things to come.\n\nThe tears came anyway, despite her strength and resolve to the contrary. Valiantly, she kept them silent and let them run down her face and onto the pillow, damp already from her sweat. When she finished, she flipped her pillow to the dry side and tried to get back to sleep, thinking of Andy and wondering why she received such a horrible vision.\n\n\"I can't believe you guys are doing that for him,\" Jenny exclaimed once she heard the news from Serena about the test. They were dressing for their final practice before their season started. \n\n\"What's not to believe?\" Serena said, as if it were the most natural thing in the world for them to do. \"You'd do it for someone in your family.\"\n\n\"You don't know what I'd do or not do,\" Jenny replied. She truthfully didn't know how she would react if the same thing happened to her family. She was ashamed to admit she really didn't like her sister and wished they were closer like Serena and Andy.\n\n\"I guess you're right, I wouldn't know. All I know is we all want to do it for him. You should have heard me and mom arguing about it. She really doesn't want me to do it, but she knows nothing will stop me, so she finally gave in.\"\n\n\"I can see her point,\" Jenny said. \"Who would want two of their kids operated on at the same time?\"\n\n\"Who's side are you on?\" Serena asked.\n\n\"I'm not on anyone's side, Serena. I just see her side of it, that's all. This whole transplant thing sounds really weird to me, like something out of a Frankenstein movie.\"\n\n\"Well, I'll tell you what, Jenny. I've done some research and being on dialysis is not the greatest thing. Besides the pain and inconvenience, a person never has the energy he once had, he has to be on a special diet, and...\" Serena stopped and looked down at her shoes.\n\n\"And what?\" Jenny asked.\n\n\"And Andy might not have too long of a life being on dialysis. No matter how good a job it does replacing a kidney, it cuts a life short. Now, tell me why I shouldn't do it.\"\n\nJenny was dumbfounded and sad. She couldn't believe how stupid she was, how inconsiderate she was of their love and caring for Andy. Jenny looked around for a rock to crawl under, but none were available. Maybe that was why she was shown the dream. Maybe she was seeing what might happen if he didn't get the transplant. She realized just how much Serena loved him.\n\nJenny touched her hand that was rested on the bench. \"I could never tell you not to do it,\" Jenny said softly. \"I only wish I was half as brave as you.\"\n\n\"Bravery has nothing to do with it. I'll be terrified to have the surgery.\"\n\n\"Yes, but you would do it, wouldn't you?\"\n\n\"Of course.\"\n\n\"Then it is bravery because you're doing something you're terrified to do, yet, you would go through with it. In my book and anyone else's, the bravest thing to do is to lay down your life for love of a brother.\"\n\n\"Well,\" Serena smiled, \"we don't know if anyone will be able to give him one. It all depends on the testing.\"\n\n\"What happens if none of you can give him one?\"\n\n\"He'll go on a list and he'll have to wait for a cadaver kidney.\"\n\n\"You mean, he'll have to wait until someone dies who has his type of kidney?\"\n\n\"Yeah.\"\n\n\"How long would he have to wait?\"\n\n\"It could be a year or more depending on tissue type and everything. Some people die before they find the right kidney.\"\n\n\"Shit.\"\n\n\"Exactly. That's why we have to give him one. Besides, being family, the doctor thinks it would work better for him anyhow. We just don't want him to have to wait.\"\n\nJenny nodded and they finished getting dressed. They headed out to the ball field where Serena and Jenny paired off and helped each other stretch. Once they were through with that, they ran sprints from home plate to the right field foul pole, a distance of about two hundred feet. They did that four times before coming in, grabbing a ball, and began passing it to each other to warm up their arms. Within minutes, their arms were limber and they were whipping the ball back and forth, each trying to make the other's hand sting. It was a game they played before each practice and it was rare that either one gave in and let the other know it hurt.\n\nThe coach called in everyone, gave them their positions, and set about the practice. They were going to have something of a practice game whereby the pitching would be live and the batters would run the bases should they hit one fair. Players would rotate to different positions since they wouldn't have enough to field two full teams.\n\nIt went by quickly as each player got two at bats and got to play different positions. Serena got a double and a home run in her two attempts and Jenny got a single and a walk. Serena was flawless in the field, even making a long running catch to snare a sure hit before it hit the ground. As they walked back to the locker room after practice, Serena was quite pleased with her effort and looked forward to the start of the season. She knew what was expected of her and she welcomed the challenge. In the back of her mind, she wanted people to know she should have been named the best player in the state the previous year, too.\n\nAs they walked up the stairs to the lounge, Jenny still half expected Andy to be waiting for her. Even though he had been in the hospital for almost a week, she still looked for him. It always saddened her when the realization struck her. When they opened the door, he wasn't there, as she expected. Now, she'd give anything to see him there and back to his old self. And she knew why Serena desperately wanted Andy to receive a kidney and quickly. She missed his old self, too. \n\n\"So, you guys are getting tested tonight?\" Jenny asked. She looked up and saw her mom at the curb.\n\n\"Yeah, as soon as I get there.\"\n\n\"I wish I could go, too, but mom says I should wait until after supper.\"\n\nSerena nodded, but said nothing, alone with her thoughts as they walked out of the school building and into the frosty February night.\n\nThe blood test was very routine as only three vials were taken from each. Serena became a bit queasy as she watched the blood come out of her vein and go into the sterile plastic tube, having to look away and regain her composure. The phlebotomist finished quickly and caused them very little discomfort. Dr. Venkata said it would not be until the following Monday before they would have the results and determine who, if any, would be able to give a kidney to Andy.\n\nBefore they went up to his room, they decided to go to the cafeteria for their supper. Serena picked at what she had chosen, and she had chosen very little. She was nervous and apprehensive, knowing the wheels were set in motion and perhaps she was at the start of a journey into the unknown. There was no doubt in her mind she would go through with it if she were the best match for her brother, but she had never had an operation and she didn't know what to expect.\n\nActually, everyone seemed to be in their own world, quiet and to themselves. Eventually, they talked about general things; Serena's practice, Joe's day at work, and things like that. Andy had called them early in the morning and told them he wouldn't leaving until the next day. The doctors just wanted to give him one more day to gain his strength and to give him one more dialysis treatment. There was no sign of infection in his fistula sight, something the doctors wanted to watch very closely. It was common for infection to set in if the connections weren't perfectly sterile, but everything seemed to be working well for him. Although everyone wanted him home, they agreed it would be best for him to stay another night.\n\nWhen Jenny arrived at his room, she was surprised to see no one there, except for the sleeping patient snoring lightly in his bed. She moved quietly to his side, hoping not to wake him, but his eyes fluttered open as she neared.\n\n\"Hey,\" he said tiredly as he tried to push himself into a sitting position.\n\n\"I didn't mean to wake you,\" she replied, standing at his side.\n\n\"That's okay. I've been sleeping most of the day anyway. That's what really sucks about this, I'm always sleepy and tired,\" he said disgustedly.\n\n\"You'll get your strength back,\" she said hopefully. \"I mean, you are feeling stronger, aren't you?\"\n\n\"I guess so,\" he admitted, \"but I wish I didn't wear out so easily.\" He looked at Jenny for a few seconds and realized how pretty she looked that evening. She was wearing a light green sweater that almost matched her eyes and tan, tight-fitting jeans that showed off her figure. Her wavy, blond curls were pulled back in a pony tail and tied with a green ribbon. He could smell her perfume, light and fresh, just the way he liked it.\n\nHe leaned her way and sniffed. \"What are you wearing?\" he asked.\n\n\"I don't know,\" she shrugged, \"some type of rain scent, I think. Do you like it?\" She leaned in his direction, moving her neck near his nose.\n\n\"Yeah, it smells great,\" he said. His nose touched her neck and she smelled heavenly. Maybe that was the reason he decided to lightly kiss her neck. Her skin felt amazingly soft as she sighed her approval.\n\n\"Oh my,\" Jenny said, looking at him when he pulled away. \"You must be feeling better.\" She looked at him and bit her lip slightly. Her heart was telling her to kiss him, telling her the moment was right for their first kiss. Her brain was running interference, though, telling her it was wrong to kiss him in his hospital bed and that she should wait for a more romantic moment.\n\nHowever, instinct took over. Slowly, she raised her hands to each side of his face and held it there for an instant. Andy knew what was about to happen and he wasn't about to stop her. He had thought about this moment many times in his hospital bed, although he certainly didn't think it would happen there.\n\nLightly, softly, she pressed her lips against his and began kissing him as delicately as the scent that emanated from her skin. He kissed her back, but she was clearly in charge of this episode as she continued for a few seconds. When they parted, her green eyes stared into his brown ones, sparkling from happiness. She was so glad she kissed him. She didn't need soft music and candles to enhance the magic of it. For just a brief moment, she had forgotten where she was and why she had originally come. She had forgotten about his illness and had pushed aside the fact he was in a hospital bed. Jenny only knew she needed to show him how much she cared for him and how important he was to her.\n\nAndy stared back at her and smiled. \"What was that for?\" he asked softly.\n\n\"I don't know,\" Jenny smiled shyly, \"it just seemed to be the right time.\" She leaned forward once again and they shared another kiss, this one longer, deeper, and more sensual. Andy's hands massaged her neck and the back of her head tenderly, making her melt into him. His kisses were sending signals right between her legs, something she had never experienced before with her other boyfriends. It scared her for a second, but the feeling was too good to be wrong.\n\nKissing him forever and never letting go crossed her mind, but her brain won the battle this time. Besides, she figured his family would be back shortly and she didn't want them seeing her and Andy in a lip lock. She broke the kiss and hugged him tight, her breasts pressed against him.\n\nHad he been well, Andy knew for sure he would have had a raging hard on at that moment and he would have had an embarrassing dilemma on his hands. She was a wonderful kisser and she felt fantastic against him. But, with his illness and the medications given him, he had virtually no sex drive whatsoever. For one time in his life, he was grateful for that inconvenience."
    ],
    "authorname": "Tony155",
    "tags": [
        "joe diane",
        "student lounge",
        "andy still",
        "day andy",
        "hey serena",
        "andy stared",
        "serena cackled",
        "likes lot",
        "forever thought",
        "serena back"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/for-love-of-a-brother-ch-01"
}