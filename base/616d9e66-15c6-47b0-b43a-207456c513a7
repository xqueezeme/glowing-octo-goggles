{
    "title": "A Demon Scorned Ch. 03",
    "pages": [
        "Anita\n\n\"Yes!\" I stared at the small glow in the palm of my hand. Magic! I was working magic! I'd nearly defeated the cuffs. Soon I'd be able to channel enough magic to get free. \n\nThere was a knock at the door of my cell, and I hurriedly snuffed out the light. \"Come in.\" \n\nIt was Egear with my breakfast. He set it on the table. Instead of leaving the room, he stood there, looking at me hesitantly. \"Mind looking over something for me?\" he asked. \n\nI shook my head. \"Not at all. What is it?\" \n\nEgear pulled a sheath of papers from his pocket. \"This. It's... A weather working.\" \n\nI frowned, looking over the paper on top. \"A weather working?\" From what I could see, it was one on a pretty massive scale. I flipped the page. A map of Cendan was next, covered with symbols. \"Over the whole country?\" \n\nEgear nodded. \"The drought occurred because most of the winds blow from Northeast to Southwest, toward the ocean. The wind brings rain over the Haggar mountains, but, if it's not blowing hard enough, most of the rain stalls over the mountains and falls there. Right?\"\n\nI nodded. \"Right. Basic meteorology.\" \n\nEgear nodded. \"I've taken weather patterns all over the Northern continent into account, and a few in the Southern continent, and I think that, if we switch the prevailing winds to blow from Southwest to Northeast, away from the ocean, we can increase rainfall significantly without any ill effects.\" \n\nI raised an eyebrow. \"None?\" \n\nEgear frowned. \"Well, the increased rainfall will cause some flooding as the land adjusts to it. And the mountains will get less rain, but no one lives there. At least, not near Cendan.\" \n\nAnd for good reason. The Haggar mountains were incredibly tall and steeply sloped, with little land horizontal enough for farming. Also, the high magical background count meant they were inhabited by wild demons, mostly of the lesser variety. Lesser demons were both less powerful and much less intelligent than greater demons like Saban, but they were still very dangerous. \n\nI looked over the rest of the papers. \"This will require a lot of magic. The entire priesthood, and more.\" \n\nEgear shrugged. \"I was kind of hoping we could somehow convince one of our neighbors to lend a few high powered mages. Like, maybe Kerath could spare a few wizards, type of thing.\" \n\nI frowned. \"Not Kerath. Not after Saban abducted me.\" \n\nEgear looked at his feet. \"Point.\" He looked back up at me. \"The main issue is that I can't convince anyone to look at it, not even the other junior priests, because the idea is so far fetched and I'm... kind of a failure as a priest.\" He sighed. \"I was wondering if you could present it to Lord Saban. I mean, you kind of have his ear, and all that.\" \n\nI snorted. \"Not exactly.\" \n\nEgear shrugged. \"Just a thought.\" He paused. \"You love him, don't you?\" \n\nI blinked. \"What?\" \n\n\"It's in the way you talk about him sometimes, like you're more exasperated by his behavior than actually angry. You care about him. Even after all this,\" Egear said. \n\nI shifted uncomfortably. \"He had me kidnapped.\" \n\n\"But you still love him,\" Egear insisted. \"You should tell him. And tell him... Tell him the reason you sent him away. Whatever that reason was.\" \n\nI looked down at my feet. \"Can we not talk about this? It's kind of personal.\" \n\nEgear blushed. \"Sorry. I'm kind of bad with social boundaries. Sorry.\" \n\nHe moved to take his papers back. I stopped him. \"Mind if I borrow these for now? I want to examine them in more detail. Proofread your work, as much as I can.\" \n\nEgear nodded. \"Thanks. I have other copies, so you can keep them. It'll give you something to do.\" \n\nI grinned. \"That's the idea.\" \n\n*\n\nSaban\n\nI sighed as I worked my way through yet another old tax document. I wished Runt was here. He actually liked numbers, gods alone knew why. I couldn't trust any of my new advisors. Not yet. But I trusted Runt, who had been my second through the entire battle to capture the portal the Cendan. \n\nMy memories of the battle played through my mind. I'd lost none of my demons, as Aio didn't have many powerful warriors. He'd basically sat under the portal accepting sacrifices for the last hundred years. \n\nI scowled. My opinion of Aio wasn't high. A demon lord owed care to all his subjects, not just the ones he liked. My subjects were mine. Mine to command. Mine to protect. \n\nStill... My arrival had obviously caused some political instability. The priest last night who'd attempted to take control of me spoke to that. I frowned. How bad would the political problems get? Would the alterations I was making, and the ones I planned to make, stir further unrest? \n\nI sighed. Those thoughts would have to wait until later. It was time for the daily public audience. I wondered if anyone would be desperate enough to come this time. \n\n*\n\nAnita\n\nI considered the spells I would need to use to get free. For starters, I needed an unlocking charm. I called on my limited amount of magic, and unlocked the door. Check. Then I locked it again. \n\nI would need to spell the guard at the door to sleep. I knew a nice, low magic sleeping spell that should work. Check. Probably. \n\nHow would I actually get out of the castle, though? An invisibility spell would be ideal, but I couldn't channel that much magic right now. I doubted I could get that much magic through the collar without causing visible damage. What about an illusion? But I sucked at illusions, even when at full power. I also wasn't sure what to disguise myself as. As servant, maybe? But I wasn't sure what the servants wore... \n\nI could just avoid the people entirely. My cell was located near the outer wall of the castle. I could climb down the wall of the castle, and then up and down the curtain wall. But could I channel enough magic to make that plan viable? I would need to stick to the walls. Frowning in concentration, I began to prepare a spell. \n\n*\n\nSaban\n\nI sat in the chair on the dais, waiting. For the first half an hour, no one came. And then...\n\nI frowned down at Bessary as she bowed low. \"Has Lord Hubert been bothering you again?\" \n\nShe smiled. \"Nope. He's been very polite.\" Her smile widened. \"To all the servants, not just me. I'm here because-\" She looked behind her. \"Damn it! Brother of mine...\" \n\nShe left the room at a rapid trot. When she returned, she was dragging a small man. \"This is Fenner. My brother.\" \n\nThe man bowed shakily. \"High Lord.\" His voice was almost a whisper. \n\nHe was silent, trembling. Bessary glared at him, and he began to speak. \"My... My wife, High Lord, she's a priest. And... and I have no magic. She... Hurts me. Sometimes.\" \n\nI cocked my head to the side. \"Hurts you? Be specific.\" \n\nHe looked at his feet and made a strangled noise. \n\n\"He's charmed not to talk about it, High Lord,\" Bessary told me. \"I'm a lesser mage, so I was able to counteract it somewhat, but...\" She shook her head. \"He still can't give details.\" \n\nFenner made another strangled noise. It looked like he was trying not to cry. \n\nI frowned. \"You're in pain.\" A demon could always tell. \"Is the spell hurting you?\" \n\nHe nodded, then whimpered. \n\n\"Stop fighting it, then,\" I ordered impatiently. Humans had no common sense sometimes. \"What is her name?\" \n\n\"Herlia,\" he gasped. \"Her name is Herlia.\" As he stopped fighting the spell, his pain decreased. But it did not go away. \n\nI turned to a page boy. \"Fetch Herlia.\" \n\n\"I want a divorce,\" Fenner whispered. \"But she won't let me. The only reason I can talk about it is Bessary's magic.\" \n\nI nodded slowly, frowning. \n\nA priest burst into the room, trailed by her demonic familiar, who took the form of a humanoid green monster. She gave me a brief bow. \"I came as soon as I heard my husband was here, High Lord. He is a pathological liar. So is his sister. It runs in the family.\" She gave a long suffering sigh. \"He's always making trouble. So is she.\" \n\nI cocked an eyebrow. \"So you don't hurt your husband.\" \n\n\"Of course not!\" she told me. \"I love him!\" \n\nI frowned. \"Your first statement is a lie. But the second is true, or, at least, you believe it is. How odd.\" I wasn't sure how or when I'd gained the ability to tell when humans lied, but it was certainly useful. \n\nHerlia's eyes widened. \"High Lord, I-\" \n\nI cut her off.\"The law is clear,\" I told her. \"You have used inimical magic on a fellow citizen multiple times, without a just cause or any sign of remorse. You must be punished.\" I met the gaze of her familiar. \"You, Alcaraz. Break your binding.\" \n\nDemonic familiar spells had two parts. The first, the contract, had to be agreed to by both parties. It forced the demon to obey the mage, but only as long as the mage focused on the command. The binding enforced a series of commands without the mage focusing on them. Usually among those commands was one keeping the demon from killing the mage. As a demon lord, I had the ability to assist demons in breaking bindings. My mind buoyed his as we surged against the spell. \n\nAlcaraz broke the binding, and Herlia staggered from the backlash. I smiled coldly. \"You have two choices. One, agree to the permanent binding of your magic.\" Such a binding required the mage's permission. \"Two, refuse, and be killed by Alcaraz.\" \n\nAlcaraz's eyes lit up. \"Can I kill her by feeding on her?\" \n\nI shrugged. \"If she doesn't agree to the binding, yes.\" \n\nHerlia's eyes widened. \"You can't do this to me!\" \n\n\"I can,\" I told her. \"And I will.\" \n\n\"But I'm a senior priest!\" she protested. \n\n\"The law should apply equally to all,\" I told her. \"And, as long as I am the High Lord, it will. Your choice?\" \n\nShe swallowed. \"I'll allow my power to be bound.\" \n\nAlcaraz growled in frustration. \n\nI smiled. \"Good choice.\" I turned to Fenner. \"I will have the magics she placed on you removed. How do your divorce laws work?\" \n\nHe smiled shakily. \"Divorces must be approved by a priest or the High Lord.\" \n\nI nodded. \"You have my approval, then.\" I turned to the page boy again. \"Fetch a priest strong enough to remove the spells and bind Herlia's magic.\"\n\nFenner bowed low. \"Thank you, High Lord.\" \n\nI smiled, but, inside, I was uneasy. How many of my priests had been blithely breaking the law, certain that they would get no retribution? How would I prevent this in the future? And how many could I trust? \n\n*\n\nAnita\n\nI lay on my bed, contemplating. Should I tell Saban why I'd sent him away? At the time I'd lied. I didn't quite remember what I'd said, but I'd selected my words with care, determined to make him hate me. \n\nThe door to my cell opened. I looked over at the doorway, and then, frowning, stood. \"Who the hell are you?\" \n\nMy two visitors didn't wear the robes of priests, and I could tell they had no magic. They were muscular, and their clothing was cheap. My eyes went to the pendant one held, which was engraved with a closed eye. A notice me not pendant? My eyes narrowed. \"You're not supposed to be here, are you?\" \n\nOne stepped forward, and I saw the junior priest who had been guarding me. She was lying on the ground, and her throat had been slit. Not good. \n\n\"We're here to get you out,\" one of the men said. \"The, umm, Kerath priesthood sent us.\" \n\nI took a step backward. \"I don't believe you.\" For starters, Kerath's high powered mages were called wizards, not priests. \"Get out, now, or I'll scream.\" Threatening to call for help felt lame, but, with the magic blockers in place, I wasn't up to defending myself, not even from magicless thugs. \n\nOne of the thugs pulled out a knife. \"Scream, and you die.\" \n\nI growled in frustration, but was silent as the thugs gagged me and bound my wrists and ankles. Then the larger one lifted me up. \"Time to get the hell out of here,\" he muttered to his companion, and prepared to activate the notice me not spell. \n\n\"Freeze!\" a voice said from the doorway. Egear stood there, hands raised in a casting stance. \"Or I'll... I'll make you freeze!\" \n\nThe smaller man laughed. Quick as a flash, he whipped out a knife and dove at the junior priest. \n\nEgear let out a very girly scream and dove out of the way, casting as he went. The thug with the knife yelped as his pants caught fire. The man holding me groaned and dumped me on the bed. \"If you want something done right...\" \n\nIf Egear had been even a decent battle mage, the thugs wouldn't have stood a chance. As it was, it was only a matter of time before his throat got slit. \n\nAs the battle raged, I worked furiously at the bindings around my wrists, trying to undo them. As much as I wanted to get out of the castle, going with the thugs seemed like an out of the frying pan, into the fire type of thing. Fortunately, when I was 14 I'd had a brief fascination with magicless escape artist techniques. The rope around my wrists gave, and I reached for my gag. \n\nUnfortunately, the larger thug noticed that I'd managed to get loose. He grabbed me by the hair and held a knife to my throat. Egear went flying past him to crumple against the cell wall. He didn't rise. Shit. \n\n\"Quickly,\" the larger man urged the smaller one. \"Tie her up again.\" \n\nThe smaller man whipped out a piece of rope. Then his chest exploded, spraying me and the other thug with blood. I blinked as the corpse crumpled to the ground. \n\nBehind him stood Saban, eyes glowing red. \n\n\"Put her down,\" he told the remaining thug. \n\nThe thug's grip on my hair tightened. \"I don't think so. The way I see it, the only reason I'm still alive is cause I got a hostage.\" \n\nSaban hissed. \"Let her go, and I'll let you live.\" \n\nThe thug snorted. \"Yeah, right, demon. You'll let me live, right up until the point you decide torturing me isn't fun anymore.\" \n\nSaban growled. \"I give you my word I will let you go.\" \n\nI heard a soft groan behind me. Egear? \n\nThe thug snorted again. \"Your word. Yeah, that plus three coppers will get me a cup of tea. Now, here's what's going to happen.\" His grip on my hair tightened. \"I'm going to leave. With the girl. And you won't follow us. Or I slit her throat. \"\n\nSaban's eyes, still red from lid to lid, narrowed. \"How do I know you won't kill Anita the moment you can do so safely?\" \n\nThe thug chuckled. \"I guess you'll have to take my word for it.\" The knife pressed into my throat. \"Move out of the doorway. Now.\" \n\nSaban began to step aside. \n\nThe thug froze, every muscle in his body going tense. \"I've got him,\" gasped Egear. \"Get the knife!\" \n\nSaban moved in a blur, yanking the knife away from my throat and then tugging me away from the man. I gasped as some of the hair in the thug's hand was yanked out. \n\nEgear let out a strangled cry and crumpled once more. The thug snapped out of his paralysis. He took a step away from Saban. His eyes went to his knife, now buried hilt deep in the stone wall. \n\n\"Don't even think about it,\" Saban growled. \"Now, you and I are going to have a talk about hired you.\" His tentacles ran up and down my body, as if Saban was trying to reassure himself that I was really all right. \n\nThe man nodded, looking defeated. \"I'll tell you-\" Suddenly he made a strangled noise, and grabbed for his throat. \n\nSaban growled. \"What are you doing?\" \n\nThe thug made another strangled noise. His face began to turn blue. \n\nSaban's eyes widened. \"No!\" \n\nThe thug crumpled to the ground, dead. \n\n*\n\nHalf an hour later, the body had been cleared away and Egear was in the infirmary. According to the healer, he would live, but doing big magic right after he'd been hit on the head had likely damaged his brain. It would be impossible to know how badly he'd been damaged until he woke up. If he woke up. \n\nSaban still hadn't put me down. He'd removed the ties around my ankles, but his own grip kept me immobile against his chest. The only person he'd allowed to touch me had been the healer, and, even then, Saban had watched him like a hawk. \n\nAs Saban headed towards his rooms, I laid my head against his chest and listened to his heartbeat. It was still pretty fast, as if Saban still hadn't fully calmed down. Technically, a demon didn't need a heart, or any other internal organs, but when Saban had taken this shape he'd made it as realistic as he could, and it responded to his emotions like a real human body would. \n\nI thought of Saban's true form. I'd only seen it a few times. Back when he'd been my familiar and lover, he'd worried that it would frighten me. I wondered if that was still true, and if he ever worried about frightening his new subjects. He did seem to care about them, in his own possessive way. \n\nIn their natural forms, greater demons were essentially lumps of tentacles, eyes, and fanged mouths. Pretty scary, especially when they were large, like Saban. Fortunately, greater demons were also shapeshifters, and could look like whatever they wanted. Saban preferred the form of a black haired human man, but sometimes he added a few tentacles. \n\nWe reached Saban's rooms. After closing and locking the door, Saban began to strip off my bloody clothing. Then he laid me down on his bed. Grabbing a bowl of water and a washcloth, he began to wash me. \n\nI sighed. \"I'm glad you came when you did.\" \n\nSaban chuckled, his washcloth moving gently down my side. \"I thought you couldn't wait to get out of here.\" \n\nI shrugged. \"I didn't know what they wanted me for. You, well, you like fucking me too much to hurt me. I didn't know if anything was stopping them.\" \n\nSaban dabbed gently at a spot of blood on my face. \"Very practical.\" He hesitated. \"I'm glad you're alright.\" \n\nThen he kissed me. The kiss was gentle. Slow. I kissed him back greedily. Gods, I'd missed this. \n\nHis hands found my pussy. Without breaking the kiss, he began to gently stroke me. I moaned, and arched against him. As I began to grow wet, his fingers slid into my core, stroking me from the inside. I gasped against Saban's mouth, and then his tongue slid between my lips, twining with mine. \n\nSaban's hands pulled away from me, and I whined in protest. Then I felt his cockhead against my pussy lips and moaned. He gripped my hips, keeping me from moving, allowing him to enter at his own excruciatingly slow pace. I wriggled, trying to take more of him into me, but his hands, though gentle, were unyielding. \n\nEventually every inch of Saban's cock was inside of me, and it was, as always, a perfect fit. No matter how loose or tight I was, shapeshifting Saban could compensate. I wriggled again, but Saban still gripped my hips tightly, ensuring he was the one to set the pace. Slowly, he began to move within me. \n\nI pulled back from Saban's mouth. \"Faster!\" I gasped. \n\nSaban chuckled. \"You're not the one giving the orders here.\" \n\nI whimpered as Saban's pace slowed. \"Faster, please?\" \n\nSaban cocked his head, considering. Then he grinned. \"Okay.\" \n\nSuddenly I was being pounded at an almost painful pace. I moaned, writhing beneath Saban as his fingers found my clit again, and he stroked it in time with his rapid thrusts. \n\nI groaned as the stimulation became too much. \"Sa-\" \n\nSaban engulfed my cry as he pressed his mouth to mine once more. Tentacles gripped my wrists and ankles, but I wasn't interested in going anywhere. There was nowhere I would rather be right now than in Saban's bed, being fucked silly. I wanted this. \n\nI came, my pussy spasming around Saban's cock. Where my forced orgasms had torn through me like tidal waves, this was slow. Gentle. Soothing. I moaned, closing my eyes to savor it. \n\n*\n\nSaban\n\nBeneath me, Anita came, and I sighed with contentment as I fed. It tasted so good... But instead of forcing her to cum again, I pulled away. \n\nAnita yawned. \"That was nice,\" she murmured, and made no protest as my tentacles cocooned her against my chest. She squirmed a bit, getting comfortable, and then relaxed. \n\nI relaxed, too. I hadn't realized until now how tense I was, but now every stiff muscle loosened, and every mental knot of worry came undone. I held Anita pressed against me. She was safe. Warm. Happy. I listened as her breathing slowed... And then I slept."
    ],
    "authorname": "charmscale",
    "tags": [
        "wizard",
        "sci-fi",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-demon-scorned-ch-03"
}