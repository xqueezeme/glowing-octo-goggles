{
    "title": "The Valley Road",
    "pages": [
        "The inspiration for this story is the classic Bruce Hornsby song of the same name. I originally meant for this to be submitted under the Tapestry banner, but I think it stands more on its own, even though it features some characters from a story I submitted many years ago, History Lessons, plus a couple of other characters who have appeared in passing in some of my other work. Yes, that is a bit of shameless cross-promotion to get you to read some of the other entries in my catalog. \n\nAs with many of my tales, if you're looking for quickie sex, this is probably not the story you want to read. I love to hear from readers, so please leave a comment or send me an email. \n\n************** \n\nWhy am I here? Maria thought to herself. Surveying the room, she was surrounded by many people she could have been content never to see again for the rest of her days. \n\nFifty years. Their class wasn't very large, and their reunions kept getting smaller and smaller through attrition and abandonment. Eventually several of the classes consolidated their reunions so the attendance was enough to justify holding the event. \n\nIt didn't help that everyone seemed to be on Facebook and Instagram, so people could connect in ways they never could in the past, and some of them didn't see the need to get together every five or ten years. \n\nMaria wasn't Facebook friends with many of her classmates. She wasn't real life friends with any of them, either. \n\nNot after what had happened. \n\nEven five decades later, she still got a lot of side eye. But Maria didn't care. Many of these people were only at the reunion because they had never moved away from Jefferson County. Her family was old money and she was expected to be there, even though she didn't get home very often. And she had lived a very successful life on her own. \n\nFuck them all, she put on her best southern belle smile and walked into the main ballroom at the Stone Ridge Garden Club, her head held high. \n\nShe wore a bright red jacket and matching long skirt that was perfectly tailored around her lithe form. Her chestnut hair was woven into an elegant French braid updo. She wore her mother's diamond jewelry, which she saved for only the best occasions. \n\nIn the local social politics, Maria was establishing herself at the top of the hierarchy. She was unescorted, but commanded attention, respect and deference simply by virtue of her family's name. It also helped that her Mercedes sedan cost more than most everyone's houses. \n\nThey came to greet her in ones and twos. She made small talk with everyone, asking about their children and grandchildren. They gave condolences on her father's recent passing. Some of them wanted to talk shop, and a few of the men who wouldn't have given her the time of day when they were eighteen came by to flirt. \n\nThe party was informal, but yet formal. It was full of local nuance and subtext. \n\nMaria was aware of it all. She checked her watch for the millionth time, waiting for the socially-acceptable window that she could leave. The former class president gave a short speech. He was twice-divorced, twice-bankrupted, and his third wife was half his age, yet no one looked down at him the way they did her. \n\nShe sat at a table by herself, a half-empty glass of wine warming in front of her. She jumped when she heard the chair next to her slide out. \n\n\"Do you know how hard it is to sneak in here with you watching the door all night?\" \n\nMaria looked over, both startled and relieved. \n\nHe was dressed in an elegant\u2014and expensive\u2014dark blue double-breasted suit. His red tie perfectly matched her dress. His hair, which was once jet black, was highlighted with silver. \n\nThose big, brown eyes bored into her. Just as they had all those years ago. Their almond shapes haunted her dreams. She had feared she would never see them again. \n\nAnd there he was, fifty years later. \n\nShe slowly stood to greet him, her hands shaking. For the first time that night, her composure cracked. \n\n\"Quan Liu,\" she breathed softly. \n\nThey stood there, staring at one another. Time seemed to stand still. \n\nIn the back of her mind, she knew everyone was looking at them. All of the other conversations in the room came to an abrupt halt. \n\nThis was the moment she both relished and feared at the same time. \n\n\"Maria Bradford,\" he bowed his head slightly. \n\nHe reached out. For a brief second, she was unable to move, but she willed herself into action. Stepping into his arms, Maria gave him a warm, but chaste embrace. \n\nShe sensed the hunger in his touch, even all these years later. But that was not publically acceptable for her. Even if she wanted to tell everyone in the room to mind their own goddam business. \n\nQuan pulled back, and each gave the other the once-over. \n\n\"You look amazing,\" he breathed. They stood there for a moment, staring at one another awkwardly. Quan motioned to the chair, and held it as she sat down before taking a seat himself. \n\n\"You haven't changed a bit,\" she replied. \n\nHe snorted. \"I'm old and fat now, with grey hair and high blood pressure.\" \n\nMaria smiled to herself. Quan would never be fat. When he was younger, he was thin and strong. Wiry. The muscles in his arms and legs and chest were toned through hard work, and now he was still in great shape, even for a man in his late 60s. If not for the color of his skin, he would have been a catch for any of the stuck-up debutante bitches in Jefferson County. \n\n\"I'm sorry about your dad.\" That was a lie. A lot of people in the world had wished for the death of Sterling Charles Bradford IV, and perhaps none more than Quan. \n\nExcept maybe Maria. \n\n\"Cancer is an awful disease,\" she replied automatically, and they both let the matter drop. \n\n\"I see all the usual suspects are here,\" he observed. \n\n\"Yes, all of the ones who never got away. Or those who just want to see and be seen.\" \n\nQuan and Maria sitting together was already causing quite a stir, although everyone there was too polite to say anything. Maybe later when the alcohol was flowing more freely and inhibitions were gone would the true feelings be said out loud. \n\n\"You need to dance with me,\" Quan reached out to take her hand. Instinctively, she started to pull away but she forced herself to wrap her fingers around his. \n\nThey stood. \n\nShe felt a jolt run through her body at his touch. Her pulse raced. \n\n\"He can't stop you anymore,\" Quan said softly, sensing the reason for her apprehension. \"He can't stop us.\" \n\nThey made their way to the dance floor, their heads held high, ignoring the whisperings of their classmates. Maria glared at anyone who dared make eye contact with her, her disdain evident for all to see. \n\nThe dance floor was mostly empty anyway, so they had it to themselves. \n\n\"How have you been?\" Quan took the lead. She followed his steps easily. \n\n\"What brought you to this reunion?\" Maria cut through the small talk. \"You haven't been back to town since graduation.\" \n\n\"I've come home to visit my folks,\" he replied. \"I just never came to these things. Why would I want to spend my time with a bunch of racist rednecks who never liked me to begin with?\" \n\n\"Why are you here tonight, then?\" \n\n\"Because your father is dead and he can't do anything to either of us now.\" Quan's eyes got dark. \"The world is a different place.\" \n\n\"Jefferson County hasn't changed much,\" Maria frowned. \n\n\"Sure it has. You own half of it now,\" he snorted. That wasn't literally true, but since Maria was an only child and her father had never re-married after her mother's death, his petty fiefdom was now hers. If she wanted it. \"This room is full of cunts who want nothing more than for you to sell everything off and leave for good.\" \n\n\"I have left for good.\" \n\n\"Yes, I know,\" he smiled. \"You're world famous.\" \n\nMaria rolled her eyes. \"I didn't want Daddy to be able to hold anything over my head. I'm surprised he didn't cut me out of his will.\" \n\n\"He didn't have any choice. After that big lecture about your family's name, who else was he going to leave that gigantic mansion and all his money to?\" \n\n\"I thought about telling him I was a lesbian just so he'd disown me.\" \n\n\"If he didn't disown you over me, then he wouldn't disown you over that. Besides, I know for a fact that you're not a lesbian. Or at least you weren't when we were eighteen.\" \n\nFor the first time that night, Maria smiled. It was a wide, exuberant smile. \n\nShe was flooded with memories. Memories she had long since buried. The memories themselves were full of joy and happiness, but they led to anger and suffering. And hate. \n\nMaria pulled Quan close to her. His embrace was strong and comforting. \n\n\"I've missed you,\" she whispered in his ear. \n\n\"Not a day goes by that I don't think about you.\" \n\n\"Even when you're sharing a bed with your wife?\" \n\nQuan frowned bitterly. \"She died two years ago.\" \n\n\"I'm so sorry,\" Maria stammered her apology quickly. \"I didn't know.\" \n\n\"It's okay,\" he replied gently. \"Nobody around here would know. Since Mother and Father died, I haven't had many reasons to come back for the last few years.\" \n\n\"So what have you done with yourself? At one point, weren't you in the Navy?\" \n\n\"For a few years. My wife got tired of moving around, so I got out and flew for Eastern and Delta for twenty more years.\" \n\n\"What do you do now? Retired?\" \n\n\"Not really.\" Quan paused for a moment. Maria took a quick look around the room. Most of the eyes in the room were still on them. Some were jealous. Some curious. A couple were actually angry that a proper southern belle had dared debase herself by dancing with someone whose skin was darker than theirs. \n\nJust to tweak them a little more, she pressed her cheek against his. \"Can we continue this conversation some place more private?\" \n\n\"How about over breakfast?\" \n\n\"I'd like that.\" \n\nSeeming to know what she was thinking, Quan gave her a quick peck on the cheek for everyone to see before stepping back. Her hand slipped into the crook of his arm, and they made their way back to their table. \n\nThey didn't bother to sit down. \n\nMaria gathered her clutch and they headed for the door, arm in arm. \n\nSome reunion activities were still planned, but she didn't care. \n\nFuck them all, Maria thought, scanning the room one more time, her withering stare falling on everyone who had ever wronged her, as if daring them to speak and incur her wrath. \n\nBoth handed their tickets to the valet. \n\n\"Would you like to come over for a drink?\" she asked formally. It was still early in the evening, and the reunion was scheduled to run for several more hours. \n\n\"I would be delighted.\" \n\n\"Do you remember how to get to my father's house?\" \n\n\"Of course,\" Quan's brown eyes danced with delight at the game of social niceties. \n\nTwo cars pulled in to the circle. Quan held the door of Maria's giant Mercedes sedan as she got in. It closed with a solid thunk! She rolled the window down. \n\n\"I'll be right behind you,\" he winked before getting into a sporty Lexus SUV of his own. \n\nThe drive to her house only took a few minutes. Jefferson County wasn't that big. Over the years, the edge of town crept closer and closer to her father's property. He still owned enough to be able to maintain some semblance of privacy away from nosy neighbours. \n\nShe kept checking her rear view mirror to make sure he was behind her. \n\nThe Bradford mansion was built with old southern money dating back before the Civil War on what had once been a tobacco plantation. Adorned with white columns, it was a testament to the power and prestige of her family. \n\nUp until her father's death, she hadn't set foot on the grounds for ten years or so. And that was only for her mother's funeral. They didn't speak much, at least until he called one night and told her he had cancer. He was dead six weeks later. \n\nThe house was kept up through a series of contracts and arrangements that were paid through her father's various accounts. Maria had maintained things as executor and sole inheritor until she decided what she was going to do with the estate, but still didn't spend much time at the house, except when she was in town for business. \n\nThere were too many memories. Too much anger. \n\nToo much pain. \n\nShe parked in the detached garage that had once been horse stables. Quan parked beside her. \n\nMaria led him into the house. \n\nHe was carrying a small gift bag, and a bottle of wine. \n\nThe house had been renovated several times over the years. Even though the bones were almost two hundred years old, it had all the modern amenities in it, including the massive kitchen her mother had desired, but she was taken by a stroke before she ever got to use it for anything other than making tea. \n\nHer father didn't cook. One of the first things Maria had done upon taking ownership was evict her father's live-in girlfriend who was thirty years his junior. After that, she returned the house to the way she remembered it as best she could. \n\n\"I have something for you,\" Quan set the bottle of wine on the counter and pushed the gift bag towards her. \n\nUnder the tissue paper was a simple black wooden picture frame. Quan had his arms around a gorgeous, raven-haired woman with radiant, perfect dark complexion. The pair was flanked by a young man and woman who looked to be college age and were spitting images of their parents. \n\n\"Your family is beautiful,\" Maria smiled not immediately thinking it strange he would give her a picture of his other woman and children who had no relationship to her. \"Your wife and kids?\" \n\n\"That's not me,\" Quan's eyes locked on to hers. His next words made Maria's blood run cold. \"I found our son.\" \n\n************** \n\nThey had known each other since they were in kindergarten. There were no private schools in Jefferson County in the 50s. The segregated public schools each had several hundred students, but weren't large by any means. \n\nQuan Liu wasn't black, and since his family was skilled and relatively wealthy, he attended the school with the white students. His family was something of a novelty, and although he was subjected to some teasing, the outright racists mostly left him alone. They were too busy terrorizing the black families. \n\nDr. Liu fled China with his wife and son when the communists took over. The family ended up in Jefferson County after answering an ad in the regional paper that promised to pay for moving expenses when the county's only doctor volunteered for the Army and was killed in Korea. \n\nFor several years, Quan's father was the singular physician in the county, and the nearest hospital was over an hour away. He spoke fluent English and was competent at a time when his skills were needed most. The community essentially had no choice but to accept him. \n\nQuan's mother was the office's only nurse and office manager. Most of the county's rural residents were poor, and when they couldn't pay, they bartered eggs or other goods for the doctor's services. Because of the times, Dr. Liu basically had to maintain two offices which were right next to one another but in separate buildings: one for the white patients and one for the black patients. \n\nBorn in 1950, Quan grew up as an outsider, never really fitting in with a community that was divided into black and white. His parents pushed him, and he was not only smart, but driven. His father's status in the community protected him to some extent, and outright racial hostility was quashed early on in his life. \n\nAfter Brown v. Board of Education, the schools were desegregated only when the National Guard showed up to enforce the court order. Racial tensions still ran high, and all the armed soldiers in the world couldn't change the hearts of backwoods rednecks. \n\nJefferson County lagged several decades behind the Sixties, seemingly stuck in a time warp. \n\nBy the time they got to high school, Maria knew Quan as the one who was going to graduate at the top of the class. She also noticed that he was the most handsome young man at Stephen D. Lee High School. His exotic Asian looks stood out, but he was also fit and muscular. He played basketball and football, and it was rumoured that he was a karate master. \n\nShe never knew of him dating in high school; partly because none of the girls would have said yes, but his parents also wanted him to concentrate on school. \n\nMaria was older by a few months. She was one of the popular girls, mostly due to her family's money. She was smart, but not brilliant. Pretty, but not gorgeous. \n\nQuan did some odd jobs to make some money, including work for her father around the estate. Mostly menial tasks and in retrospect; it seemed he was reminding the doctor's son of his true station in life. \n\nColloquially, everyone called Maria's father \"Charlie Four\", but in their family, he was \"Lee\". The family history of full of southern bigotry. They were antebellum slave owners who sent their sons off as officers to fight against the Yankees in the \"War of Northern Aggression\". \n\nAfter the war, they were in the Klu Klux Klan and old south Democrats who promoted and benefited from Jim Crow laws. In the 40s, most of the family joined with the rest of the Dixiecrats over the Civil Rights Movement. \n\nMaria grew up in that environment; she didn't consider herself a racist, but knew blacks only as subservient to whites. At the same time, she also looked down on poor whites, who were clearly below her station in life, too. \n\nAll that changed one day when she came home from school to Quan and a couple of the other boys from school doing work in her yard. \n\nIt may have been her hormones. It may have been the fact that all the other boys were slovenly and lazy. \n\nQuan's muscles were taut and firm. His exotic looks were particularly enticing. When he flashed a secret smile at her, Maria's pulse raced. She looked away, both excited and ashamed to find herself attracted to someone she shouldn't have feelings like that over. \n\n************** \n\n\"That's why you were sent away, wasn't it?\" Quan's eyes bored into her. \n\nMaria steadied herself against the kitchen table to keep from falling over. \n\n\"He didn't send you to 'his sister's' to keep us apart.\" It wasn't a question. His voice was hard and angry. Even if they both knew his ire wasn't directed at Maria. Five decades could not cover up the raw emotion they both felt. The hatred. \"He didn't want the shame of a bastard Chinese grandchild.\" \n\nThe long-practised stoic veneer Maria had perfected cracked. She stifled back tears. \n\nQuan's strong arms enveloped her as the sobs wracked her body. \n\n************** \n\n\"Daddy needs you to help at the house today.\" In the nuanced social protocols of their community, she could talk to him. But he could only address her if it was over schoolwork. Maria lay her southern drawl on extra thick and batted her eyes. \n\nQuan didn't stand a chance. \n\n\"Come over after school,\" she winked. Maria turned and walked away, putting a little extra sway in her hips. She didn't bother looking back. \n\nShe knew Quan hadn't moved. He wouldn't be able to keep his eyes off her until she turned the corner of the hallway. \n\nSure enough, he came over after school, setting his bike against the tree in front of the porch. \n\nThere actually was some work that needed to be done. Maria gave him some basic direction and left Quan alone. \n\nWhen her mother returned, she and her driver saw Quan toiling out by the detached garage. Nothing untoward was implied or seen. But they didn't notice Maria watching her handsome friend from her window. \n\nAfter the chores were done, Maria's mother paid him a couple of dollars and Quan departed. Lee Bradford may have been a hateful son-of-a-bitch, but his family paid the people they owed. ",
        "This went on a couple of times per week for almost a month. \n\nMaria knew exactly what she was doing. It was her idea to have him come over to do some work that didn't require actual professional quality, but was more than the cook or housekeeper was paid to do. She established Quan as trustworthy and a hard worker. She normalised his presence around their house. \n\nOn the few occasions her father was there to see him, all he saw was the Chinaman's son working on something that needed to be done. \n\nShe wanted him to be invisible. \n\nAfter a while, Quan was allowed inside the house to do work. At first, one of Maria's parents or the housekeeper was required to be present. But after another month or so, his presence was so ubiquitous, everyone stopped caring. \n\nEveryone but Maria. \n\nHer family had spent the better part of a century mastering the political conventions and social mores of Jefferson County. All of the subtext was second-nature to Maria. \n\nAs was the desire and drive to get what she wanted. \n\nAt first, she stayed in her room when Quan was around. After the second week, she would pass through; long enough to be noticed, but there was no conversation or even a sideways glance. \n\nOtherwise, they were simply schoolmates skating through their senior year of high school. She was destined for Agnes Scott, one of the \"proper\" women's colleges in the south. \n\nShe wasn't sure what Quan's plans were. They didn't talk about that with one another. If his draft number came up, he would need a deferment or he would be off to the service. \n\nBy the time the spring break rolled around, Quan was pretty much a fact around their household. He was known as punctual, courteous and meticulous, bordering on perfectionist. \n\nOne day when he came over, Maria was waiting for him in the parlour when Quan rang the bell. \n\nShe straightened out her blouse, which had the top two buttons open. \n\nHis jaw dropped when the door opened. \n\n\"Come in,\" she invited with a wink. Maria was never big in the chest, but her blouse showed just enough bare skin to get his undivided attention. \n\nQuan stood there for a moment, unable to move. She left the door open and retreated into the living room. \n\nIt took him a moment to will himself into motion, but he soon followed. \n\n\"What did your dad want me to do today?\" his slow drawl was clearly nervous. \n\n\"Daddy is out of town. Mamma has a meeting down at the Garden Club,\" Maria gave him a predatory look. He was handsome and muscular. \"So she won't be home for a little while.\" \n\nMaria did not think of herself as na\u00efve at the time, but in hindsight, she was the biggest fish in the small pond of rural Jefferson County. She was publicly chaste as her station required. Her status afforded her access to the highest circles in the community and protected her to some extent. But it also demanded that she steer clear of obvious entanglements. \n\nShe was one who was pursued as a prize by those who were her equal. She could also use those beneath her. Maria dated all the right people as it suited her own ends, but did not form any long-term attachments or commit to any relationship outside her family. \n\n\"Let's go for a walk,\" she suggested. \n\n\"Are there chores for me to do?\" \n\n\"You can help me check out the old barn.\" \n\nAny resistance Quan had was squelched when she bent over, ostensibly to tie her shoe. She knew that the view down her blouse at the white lace bra that covered her pert breasts would spur him into motion. \n\nShe stood, and he stood with her. \n\nThey went out the front door. \n\nHer house was set back from the road and any adjoining property. Maria knew their housekeeping and grounds staff was off that day. No one had any business within a mile of them. \n\nThe old oak trees gave them cover as they walked down the old valley road that ran parallel to the creek which wound its way through their property. It was paved up to their house, but was still dirt and gravel on the rest of their property. \n\nNeither spoke, but Maria saw Quan eyeing her. \n\nShe didn't call him on it. \n\nHer blouse covered as much of her as was appropriate for an early spring day. Her skirt went down past her knees. \n\nMaria led him out to the barn, under the pretense of checking on one of the tractors. \n\nAs he gave it a cursory look, she admired his corded muscles and firm rear end. There was not an ounce of fat on him. \n\nShe licked her lips and felt a tingle between her legs. But she suppressed those immediate feelings, opting instead for the long game. \n\nThe tractor started right up after a couple of tries. Her father hadn't used it himself in years. Every now and then someone came out to the barn to mow the fields. \n\nThey weren't used for farming much anymore; her father had abandoned the cattle and tobacco business after the war, and didn't want to sell the land or have people on his property working. Her family didn't need the money. Lee had gotten in to the telecommunications business and was making lots of money running phone lines and later television cable all over the county. He had paid off all the right people and had a monopoly on the industry. \n\nThe pretense of work gone, Maria and Quan walked back to her house following the same road. \n\nShe made sure to move a little closer, not enough to hold hands, but enough to make it clear she was interested. \n\nHer mother still hadn't returned. Maria went in to the kitchen and retrieved a few dollars out of a jar in the cabinet. \n\nQuan's eyes were still locked on to her chest. \n\nShe slipped him the money, their hands touching briefly. \n\n\"Thank you for coming over today,\" she said sweetly. \"Maybe we can find some more things for you to do on Wednesday.\" \n\nHe stood there, unable to move. \n\nImpulsively, she placed her hand on his arm, lifted herself up on her tip toes and kissed him quickly on the cheek. \n\nQuan's eyes widened in shock. \n\nMaria giggled, her face flushing. \n\n\"Good-bye, Quan.\" \n\nWith that, she turned and went up the stairs, not looking back. \n\nWhen she had turned into her room, she heard the front door close, and saw Quan get on his bike and ride off. \n\nThat night, as she lay in bed, her hands worked between her legs. \n\nShe clenched her teeth as the orgasm consumed her so her parents couldn't hear. Imagining the weight of the handsome Asian man pressing down on her. \n\n************** \n\nQuan lifted her limp body into his arms. He carried her to the couch in the living room. \n\nMaria was crying inconsolably. \n\nHe cradled her to him. She buried her face in his shoulder, gasping for breath. \n\nHis hands stroked her hair soothingly. \n\nNo platitudes were offered. No words were spoken. No blame was exchanged, although he knew this was something she had carried within her for fifty years. \n\nOnce her breathing became regular, Quan sat her up enough for them to take their jackets and shoes off. \n\nShe was numb. \n\nHe didn't try to prod or spur her into action. He just held her. His embrace was comforting. \n\nAt one point, he got up and poured them both a tall glass of wine. \n\nThey fell asleep, still mostly dressed, in one another's arms on the couch in the house where they fell in love. \n\n************** \n\nThe next time Quan came over, there were no chores to be done. Her mother was out seeing to the many social obligations she had. \n\nHer father was at his office or some place doing what ever it was that paid for their lifestyle. \n\nSo they went for a walk. Talking. \n\nThey had known each other since they were little. But they had very little interaction other than what was at school. \n\nThere were no cell phones then. No internet. No social media. \n\nWhen the school day ended, they each went to their separate worlds. In some ways, they were meeting for the first time. \n\nMaria felt his attraction to her, as much as she knew she was attracted to him. She didn't know what it was. He was different than any of the other boys at school. It wasn't just his exotic looks. \n\nHe wanted out of their little town, too. Quan Liu didn't want the peak of his life to be in high school. \n\n\"What will you do after graduation?\" she asked. \n\n\"Father wants me to go to live with my cousins in Seattle and get into college. He wants me to become a doctor like him,\" Quan frowned. \n\n\"Do you want to be a doctor?\" The shrug he gave her was all the answer she needed. \n\n\"What do you want to do?\" he asked. \n\n\"Mamma says I need to find a man at school. Daddy doesn't want me to leave,\" Maria frowned. \n\n\"What do you want?\" Quan repeated. \n\n\"I want . . .\" \n\nHer voice trailed off as they looked down the past the moss-covered oak trees that lined the old valley road. \n\n\"I want . . . I want to see the world.\" \n\nThe two exchanged a look, realising they were trapped by their circumstances. By their families. By times that were changing everywhere but Jefferson County. \n\n\"Come on, let me show you something.\" Quan reached out towards her. Maria took his hand, knowing no one could see them. \n\nA part of her didn't care. \n\nThey walked down the road for a little further, to the point that the road turned off to the barn. \n\nAn overgrown trail continued onward, following the creek. Quan led her through the trees. Soon the woods ended in a field overlooking a pristine lake. \n\nWay out in the country, there were no developments. No houses. No people. Just the quiet of the birds and the water. \n\nThey went down to the lake's edge, watching the ducks swim by. Every now and then a fish jumped into the air before splashing down. \n\nAll too soon, Quan looked at his watch. \n\n\"We need to get back before your mother gets home.\" \n\nMaria sighed with disappointment. \n\nWhen they got back to the house, Quan straightened up and moved some things just to say he did some work. \n\n\"Quan . . . thank you,\" she said softly. \n\nHis smile was radiant. \n\nAgainst her better judgment, knowing that she shouldn't, she lifted herself up on her toes again, but instead of kissing his cheek, she pressed her lips against his before pulling back with a nervous laugh. \n\nHe stumbled out the front door, sure to wipe all evidence of her lipstick away before heading home. \n\nOver the next couple of weeks, Quan returned, usually to do chores. He got some of the old farm equipment working to the point that it could be sold. \n\nMaria's family had hired help that took care of most of the grounds, but they were part-time and there were still lots of odd jobs to do. \n\nSome days Quan worked at his parents's office as a clerk. \n\nAnd they still had to go to school. \n\nBut there was still lots of time for them to spend together. Not every day. But enough to distract them from the fact that once they graduated, both were destined to go on with their separate paths. \n\nOne afternoon, they went down to the lake. Maria brought a blanket and some food. \n\nThey sat by the lake talking and eating. \n\nFor Maria, it was nice to be with someone who didn't want her for her name. Who wasn't using her to advance themselves. \n\nShe also enjoyed being the center of Quan's attention. Even if it was puppy love. \n\n\"Kiss me,\" she whispered. \n\n\"What?\" his eyes widened in surprise. \n\n\"Kiss me,\" Maria threw herself into Quan's arms. They fell back on the blanket, a tangle of arms and legs. \n\nTheir lips met. Their bodies pressed together. \n\nHer hands roamed his shoulders and strong arms. She pushed her small breasts up against his chest. \n\nThey began to explore one another with their hands. With their lips. \n\nMaria fell into his embrace. She felt so safe. So unlike any of the other boys he had dated. \n\nBefore long, they pulled themselves apart. Maria straightened out her clothes, and pulled her hair back, careful to leave no trace of their encounter. \n\n\"I'll miss this,\" she said quietly. \n\n\"Miss what?\" Quan asked, folding up the blanket. \n\n\"The quiet.\" Her voice was soft. Wistful. Her eyes were sad. \"You. You're not coming back here are you?\" \n\nHe gave her a thoughtful look. \"I'd come back for you.\" \n\nMaria snorted bitterly. \"Daddy would never let you.\" \n\n\"We're eighteen, Maria. He can't stop us.\" \n\n\"You'd be surprised what Daddy can do around here.\" There was fear in her eyes. \"He owns most of the town. He'll own more if he can marry me off to Cal Randolph.\" \n\nQuan reached out and took her hands. The look in his eyes was full of innocence and exuberance. \"Let's run away after graduation.\" \n\n\"And go where, Quan?\" she sighed bitterly. Maria was keenly aware of the obstacles in her life at that point in time. \"We don't have any money. We don't have jobs. Daddy would have me brought home.\" \n\nShe wiped tears from her eyes. Tears of frustration. \n\nHe had no answer. \n\nThey walked back to the house in silence. \n\nWhen he got on his bike to ride away, he didn't look back. \n\nMaria retreated into her room, sobbing. \n\nWhen her mother returned a little while later, Maria's happy daughter fa\u00e7ade returned and they cooked dinner for her father. \n\n************** \n\nMaria awoke in the darkness. The lights were out. Quan lay back on the couch, snoring softly. \n\nHe was still so handsome. \n\nHis face was a little fuller. \n\nThe muscle tone of his arms had faded some with age, but he was easily the most handsome man at the reunion. Of course, Maria was a little biased. \n\nShe quietly slipped upstairs to the guest room. \n\nMaria hadn't packed much by way of clothes. She slipped out of her clothes and shoes, and put on a robe. \n\nQuan was right where she left him. \n\nLeaning over, she kissed him gently on the lips. He stirred and smiled in his sleep. \n\nHer cheek brushed his. \n\n\"Come with me,\" she whispered in his ear. \n\nHis eyes fluttered open. Moonlight shone through the windows. In the darkness, she knew where she was going, even after all this time. Quan took her hand and followed her lead. \n\nShe led him up past her childhood bedroom, which had been mostly untouched for the past fifty years. \n\nThey stood at the door to her parents's bedroom, standing at the threshold for a long moment. \n\nMaria took a deep breath and stepped over. \n\nThe robe fell from her shoulders, revealing her bare skin. \n\nQuan gasped in surprise. \n\nShe crossed the room before turning to sit back on the bed. \n\nAs if in a dream, Maria beckoned to him. Her long-lost friend. The great \"what if . . .\" of her life. \n\nHer lover. \n\nEntranced, Quan slipped his tie off as he approached her. \n\nMaria's hands went to his shirt, tugging hungrily at the buttons. \n\nHe started to un-do the buckle on his belt, but she grasped his hands and placed them on her breasts. They were never big, and had the sag of a woman who was almost seventy. \n\nIt didn't seem that Quan cared, though. His gaze was soft and wondrous. As if he were looking at the most beautiful woman in the world. \n\nHe caressed her gently, as he had done so long ago. \n\nShe opened his belt and pants, which fell to the floor, along with his boxers. \n\nQuan's cock hardened in her grasp. \n\nMaria lay back on her parents's bed. \n\nHer father's bed. \n\nOnce, she adored him as all little girls adore their fathers. \n\nThen she came to hate him. The hate fueled her for decades. It drove her to a career she made for herself. Where she never needed him or his money. \n\nThe rift between them strained her relationship with her mother. But in Maria's mind, she was complicit as well. She died as much from a broken heart as the stroke. \n\nIt was only when Lee Bradford was on his deathbed that the hatred turned to pity. Pity at an old, beaten man who held on to his bigotry and racism because he knew nothing else. \n\nAn old man she had deprived of \"legitimate\" children. An old man who died knowing his family name would soon die out. \n\nAn old man whose last sight had been the daughter he had alienated. The daughter who refused to hold his feeble hands or grant him absolution as his life slipped away. \n\nMaria's last act of revenge was to make love to the boy her father had chased off when he came to profess his love for her. \n\nTo make love to the boy in her father's bed. \n\nShe pulled Quan to her, but he did not mount her. Not right away. \n\nAs she lay on her back, he slipped down beside her, their warm bodies brushing together. \n\nMaria spread her legs at his touch. \n\nQuan's hard cock pressed against her leg. She stroked him gently. \n\nHis fingers caressed the insides of her thighs. The pads of his fingertips spread her labia, which slickened at his touch. \n\nThey kissed again hungrily. \n\nHis mouth worked to her neck. Kissing. Nibbling. \n\nThen to her collarbone. \n\nThen down her chest. \n\nMaria cried out when he sucked one of her erect nipples just as he entered her slick pussy with one finger. Then two. \n\n\"Inside me,\" she pleaded. Her fingernails dug into his shoulders as he continued to suckle on her breasts. \n\nShe spread her legs as Quan moved over her, his slender form pressing down on her. \n\nQuan lifted himself up just enough to look her in the eyes when he entered her. \n\nThe desire was evident in his gaze. \n\nOne hand cupped her breast as he leaned in to kiss her. \n\nShe reached around to grasp his firm rear end. \n\nPulling him until he was buried fully within her. \n\nBareback, they were as close as two people could possibly be. \n\nIt felt so . . . so . . . right. \n\n\"Do it, Quan Liu,\" Maria whispered, her thick drawl filled with hunger. \"Make love to me.\" \n\nEver so slowly, Quan withdrew until only the head of his cock was within her, then he pushed forward, not hard or fast. \n\nThey savored every touch. \n\nMaking up for lost time. \n\nHe filled her up with each slow thrust. \n\nMaria cried out every time Quan hit bottom. \n\nHer nails dug into his bare shoulders. \n\nThe hardwood bed creaked as they made love. \n\nEven in the darkness, she could see the outline of his almond-shaped eyes. The curve of his cheeks. \n\nHis skin was so soft against hers. \n\nQuan didn't pound away at her. Her body tingled with each stroke. \n\nStrong hands grasped her in all the right places. He seemed to know exactly where to kiss her. \n\nTime seemed to stand still as the moans and the grunts came louder and more frequently. \n\n\"Look at me,\" Quan whispered. \"Look at me when you cum . . .\" \n\nHer eyes were hooded over with pleasure, but she did not look away, even through the tears. \n\n\"I love you, Maria,\" he said gently. \n\n\"Cum inside me,\" she moaned. \"Cum with me.\" \n\nBoth orgasmed at the same time, their eyes locked on one another. \n\n\"Oh, Quan!\" she gasped, pulling him to her. Her toes tingled. \"It's been so long . . .\" \n\nThey kissed passionately as they rode out the cum. \n\nFinally, he collapsed on top of her, burying his face in her shoulder. Holding her as she sobbed. \n\n\"I'm sorry . . . I'm\u2014\" \n\nHe silenced her with a kiss. \n\n\"I love you, Maria. And I'm never letting you go again.\" \n\n************** \n\n\"You need to come over this afternoon,\" Maria said to Quan one afternoon in the hallway at school. Her voice was low. They walked far enough apart that no one suspected anything. \"Mamma will be late and Daddy is out of town.\" \n\nSchool was winding down. \n\nMaria knew there were only a few more chances for her to see Quan again. The excuses were getting thinner. \n\nHe was just too damn efficient and good at whatever tasks she could dream up to get him to come over. \n\nShe already had a date to the prom. In fact, she was officially dating one of the school's star athletes. He was also of similar social standing and they were a good match. \n\nHe was pretty. He came from a good family. He was going to Alabama to play football. \n\nAnd he was as dumb as a box of rocks. \n\nBut he was white. \n\nHe was well-mannered and polite. He was a little handsy when they went out, but he seemed to respect Maria's desire to \"save herself\" and never forced himself on her. ",
        "There was no connection. He seemed to have only two points of conversation: sports and himself. \n\nSo the object of her affections was singularly Quan Liu. \n\nHis eyes widened for just a second, but he didn't say anything, and only gave her a slight nod before turning in to the chemistry classroom. \n\nMaria was waiting for him when he arrived. \n\nTo her surprise, he was driving an old '56 Ford pickup truck. \n\n\"Where did you get this?\" she asked, climbing in to the passenger's side. She placed her blanket on the seat, which was scuffed and torn. \n\n\"Father bought it for me a couple of months ago,\" he beamed with pride. \"We've been working on it at night. I just got it running the other day.\" \n\n\"You did a great job on it,\" she said, admiring the work and love he had obviously put into this project. It wasn't as nice as the Camaro her father had promised her for graduation, but she was not about to rub it in her friend's face. \n\n\"Where do you want to go?\" he asked hopefully. \n\nShe knew he wanted to drive around town to show off his truck. And to be seen in public with her. \n\nBut she could not let that happen. \n\nAnd she hated herself for that. \n\n\"Let's go down by the lake,\" she couldn't bring herself to look him in the eyes. \n\nIf he was disappointed, he didn't show it. The drive down the valley road was much shorter in the truck. \n\nMaria took his hand and led him down to the field by the water. \n\nHe followed her, unsure of what she wanted. \n\nShe wore a long skirt and loose blouse, much more casual than he was used to seeing her. \n\nHer hair was pulled back. \n\nMaria spread the blanket out on the grass and motioned for Quan to sit next to her. \n\nTheir fingers intertwined and they kissed hungrily. \n\n\"Graduation is in two weeks,\" she whispered. \n\n\"I'm moving to Washington at the end of June.\" His words seemed to slap her in the face. \"Maria . . . I\u2014\" \n\n\"Shhhh,\" she pushed him on to his back. \n\nHer mind was made up in an instant. \n\nBefore she could stop herself, she reached for her blouse and flung it off. Quan looked up at her in surprise as she reached behind herself for the clips on her bra. \n\n\"What . . .\" \n\n\"Shut up, Quan,\" She leaned over and kissed him, hard. Her hands tugged at his shirt and jeans. \n\nAs she pushed her skirt down over her hips, she paused to admire Quan's strong, tanned form. \n\nHis chest, shoulders and arms were strong, their corded muscles seeming to glisten in the sun. His stomach was flat. \n\nQuan's eyes seemed to be glued to her breasts, their pink nipples standing out proudly. \n\n\"Take your underwear off,\" she said with authority, not giving either of them the chance to back out. \n\nHis hands went to her body, exploring her bare skin. \n\nThe first cock Maria had ever seen was erect and rock hard. \n\nHe was the most beautiful creature she had laid her eyes upon. \n\nThe space between her legs was already slick, and she moaned when he reached down to touch her. \n\nAn electric jolt shot through her body when his hand came in contact with her labia. His inexpert touch was offset by his enthusiasm. \n\nShe leaned over and kissed him. One of his hands went to her breast while the other continued to fondle her sex. \n\nMaria stroked his hardness. \n\n\"I want you to make love to me,\" she whispered between kisses. \n\nAny resistance he had collapsed when she thrust one of her breasts into his mouth. \n\nShe giggled when he bit just a little to eagerly, but his desire was endearing. Her own lust was fueled by his handsome face and forbidden body. \n\nBefore he could stop her, she threw her leg across his lap. His cock flexed into the space between her legs. \n\nMaria guided the head of his cock to the opening of her pussy. She was wet with anticipation. \n\nClenching her teeth determinedly, she lowered herself on to him. There was a brief jolt of pain when he first entered her, but she took all of him inside her in one swift stroke. \n\nQuan lay back as Maria rode him. \n\nHis hands grasped her hips and breasts. \n\nTheir movements were not in sync. It took a while to establish any kind of rhythm. \n\nMaria didn't care. All she knew was she wanted Quan Liu inside her. \n\nShe was going to lose him soon, and she wanted every moment to count. \n\nAll too quickly, Quan jerked and he cried out in frustration. \n\nMaria felt her pussy flood with his warmth. She leaned over and kissed him as his orgasm subsided. \n\nThey fell into one another's arms and lay together under the clear sky listening only to the sounds of their laboured breathing and the birds. \n\nQuan kissed her neck. \n\n\"I'm sorry,\" he stammered with embarrassment. \"I tried\u2014\" \n\n\"Shhhh,\" she nibbled on his ear. \"It's okay, Quan . . . it's okay. I love that you want me.\" \n\nCuddling on the blanket, their hands roamed the other's naked body. \n\nAfter a little while, Maria reached between Quan's legs and found his soft cock. It was still wet with their juices. \n\nShe began to slowly bring him back to life. \n\nThis time, she rolled over on her back, pulling him to her. \n\nThey kissed again. \n\nQuan paused for a moment before entering her. \"Shouldn't we . . . um, have a rubber or something?\" \n\n\"I just had my period,\" she said dismissively, with the certainty of a teenager who knew everything from the insufficient sex education provided by Jefferson County in 1968. \"I can't get pregnant until at least next week.\" \n\nThey found their rhythm easier. Quan didn't last much longer than the first time, but Maria didn't care. \n\nWhen he went off inside her again, she tingled from head to toe. They came together, laying on a quilt her grandmother had made, under the bluest skies in God's entire Creation. \n\nWanting nothing. \n\nThey cleaned themselves up as best they could and returned to her house in his truck. \n\nQuan walked her to the door, giving her one last kiss. \n\nSharing a look of longing, he almost stepped inside, but Maria knew he couldn't stay. She had to clean up before her mother came home. \n\nShe squeezed his hand tenderly before he got back in his truck and drove home. \n\nAlthough neither knew it at the time, that was to be the last time they touched for almost five decades. \n\n************** \n\nMaria woke in the king sized bed alone. Soft morning light shone in from behind the curtains. \n\nThe covers were bunched up from where they had slept and made love. \n\nA thin layer of dust covered the nightstand and the dressers. She made a mental note to have the housekeeping service do a thorough cleaning before she left at the end of the week. \n\nHer robe hung from one of the posts on the dark oak bed. \n\nShe put it on over her still naked body. \n\nWhen she stepped into the hallway, she smelled the aroma of fresh coffee. \n\nQuan sat at the kitchen table fiddling with his tablet. \n\nEven in his rumpled dress shirt and reading glasses, he looked so dashing. He stood from the stool by the counter to greet her with the kind of smile she never wanted to be without. \n\nMaria folded into his arms, resting her head on his shoulder. The comfort of his embrace felt so familiar. \n\n\"Would you like some coffee?\" he asked. \"I would have made breakfast, but there's not a lot of food here and I didn't know if you wanted me going through your kitchen.\" \n\n\"It's not my kitchen,\" her reply was harsher than she meant. \"It belonged to Mamma.\" \n\n\"You never came back here.\" It wasn't a question. \n\n\"I was home for one summer after I went to school. But after that, I never wanted to come back here.\" \n\n\"Why not?\" he asked softly. \n\n\"It stopped being 'home' when my father threatened to kill you.\" \n\n\"I deserved that,\" her lover said. \n\n\"No you didn't, Quan,\" Maria snapped. Her blood pressure began to rise. \"You never deserved anything he did to you.\" \n\n\"You were way out of my league,\" Quan's voice was so soft, she could barely hear him. \"I was a fool to think you would ever be with me.\" \n\n\"I wanted you.\" Maria reached out to take his hands. \"I wanted to run away with you more than anything. I wanted away from here.\" \n\nShe waved around at the giant, empty house around them. \n\n\"I wanted all of this to go way. I never wanted to be Sterling Charles Bradford the Fourth's daughter. He never wanted me, either. He wanted a son to carry on his name. A son to play football and take hunting.\" \n\nQuan took her trembling hands. \n\nMaria choked back tears. Her voice was a raspy, angry whisper. \"I wanted to tell you we made a beautiful baby boy. I wanted to raise him in a house full of love.\" \n\nHe took her in his arms again as the tears came. \n\n\"I wanted to raise him with you.\" \n\nBoth of them were crying. They were the tears of tragic heartbreak for the family they never had. \n\nIt had been years since Maria had allowed herself to cry like that. With her secret out, it was as if a weight had been lifted from her soul. \n\nA part of her expected Quan to strike her, as her father had done when he found out she was pregnant. To shame her for being a whore to bedded a chink. A slut who couldn't save her virginity properly for her husband, who had no such expectation. \n\nMaria waited for the barrage of questions about why she never told him. About why she had never spoken to him again. About why she had kept this to herself for fifty years. But those questions never came. Not from Quan. \n\nShe knew he would never hurt her. Not physically. Not emotionally. \n\nHe had always been good to her. \n\n\"Our son wants to meet you,\" Quan said gently once the fit passed. \n\n\"How did you find him?\" she wiped her eyes with the handkerchief from Quan's pocket. \n\n\"My daughter got everyone those home DNA kits last year for Christmas,\" he replied with a smile. Reaching for his phone, Quan opened up an app. \"Once all of our results came back, two cousins no one knew popped up. They were his twins, and well, we got to talking and he sent his own kit in to be sure, and boom! Instant family.\" \n\nMaria looked down at the app, which showed Quan's family tree with three children: the oldest was named Marc Thompson, and two others from his marriage, Kai Liu and Michelle Harrison. \n\nThe family tree also showed Marc had two children, David and Isabella Thompson. Their grandchildren. \n\nHer heart jumped into her throat at the sight of her son and his family. \n\nQuan steadied her and sat her down in the stool by the counter. \n\n\"Do you want to meet him?\" \n\n\"Of course I want to meet him! Why would you even ask that?\" her voice trembled. \n\n\"We haven't spoken in almost fifty years, Maria,\" Quan reminded her. \"I told him I would see what you wanted to do.\" \n\n\"I want to meet him,\" she said resolutely. \"Whenever and where ever they want.\" \n\n\"I'll take care of it.\" \n\nHe took her in his arms once again. \n\n\"Don't you want to know why, Quan?\" \n\n\"I figure you'll tell me when you're ready,\" he shrugged. There was no blame, judgment or reproach in his tone. \n\nShe started to cry again. This time, they were tears of joy. For the first time in years, she felt completely safe. \n\n************** \n\nThey went out to breakfast once they had cleaned up. \n\nJefferson County had grown and changed. Not as much as the rest of the world. But enough that an Asian man and white woman going out as a couple did not draw curious stares, threats or worse. \n\nIt helped that neither of them were well-known in the community anymore. \n\nDr. Liu had retired many years ago, and Maria's family, while wealthy, had mostly withdrawn from local politics and been supplanted by other families in the community. A fair number of families and immigrants came to town, mostly drawn in by the new hospital and the school system which was in dire need of teachers; both paid signing bonuses and moving expenses in exchange for the promise of staying for several years. \n\nWhere their reunion was filled with their classmates from 1968, none of them were out for breakfast on a Sunday morning. Maria and Quan didn't run in to anyone they knew by sight or by name. \n\nQuan drove them back to her family house. \n\nIn public, they could not have any kind of meaningful conversation. In the car, Quan drove. Maria mostly rode in silence. \n\nShe was used to being private and guarded. Some of it was her high profile public role. Some of it was a defense mechanism. \n\nThey went inside and sat at the kitchen counter. There was so much she wanted to say. So much she wanted to know. \n\nBut she didn't know where to begin. \n\n\"Can we call him?\" she asked out of the blue. \n\n\"Let me see if he's free.\" Quan picked up his phone and fired off a quick text message. \n\nAlmost immediately, his phone buzzed. Maria's heart began to race. \n\n\"They're out running around right now, but will be free in a few minutes.\" Quan reached out at the disappointment which was obvious on her face. \"I've got an idea. I want to show you something.\" \n\nHe led her out to his SUV. \n\nQuan drove down the old valley road, past the barn which was slowly falling apart. There was a gate where the gravel ended. \n\nOn the other side, the old trail had been paved and joined to a road which intersected just past a fence which she didn't recognize. \n\nMaria frowned. \"When did this happen?\" \n\n\"Your dad had some money problems a few years ago when the market crashed,\" Quan replied as he got out of the SUV. \"He sold a bunch of land to some developers to cover his debt.\" \n\n\"How do you know that?\" \n\n\"You'll see.\" Quan went to the gate, which opened on to her father's land. Her land. \n\nHe got back in the Lexus and began driving down the paved road, which apparently she did not own. The asphalt looked relatively fresh. \n\nWhat used to be a ten minute walk through the woods took virtually no time. The road let out on the same field and pristine lake where they had made love all those years ago. \n\nMaria gasped when she saw a huge round gazebo set out in the lake connected to the shore by a short walkway. It looked brand new. \n\nThe road ended at what looked like a gravel parking area. Quan stopped the car and got out. \n\nShe followed mutely, her eyes wide. \n\nQuan took her hand and led her across the field to the gazebo. The supports for the gazebo rested on metal beams which poked up out of the water. The decking was all composite. The lower level was easily fifty feet across. It had a metal railing all the way around lined with bench seats. The faint smell of wood stain hung in the air. \n\nA spiral staircase led to the upper level, which was about half the diameter of the lower level. Both levels were covered with a light aluminum roof. \n\n\"What is this?\" she asked. \"Aren't we trespassing?\" \n\n\"You might be. I'm not,\" he winked. \n\n\"You own this?\" Maria held the railing as he led her up the steps. The view was incredible. Everything was just as quiet and peaceful as she remembered. \n\nAnd she was there sharing it with the one person who appreciated it as much as she did. \n\n\"Yes,\" Quan waved all around them. \"I own all of this. I bought it for you.\" \n\nFor once in her life, Maria Bradford was rendered speechless. \n\n\"After Eastern went under in ninety-one, I started a business with three other pilots. We bought a couple of Learjets and started a luxury private air service,\" he explained. \"We rubbed elbows with the right people. One of our regular clients was a real estate developer who talked a lot when he was drinking. He liked me and brought me on as a partner in one of his companies.\" \n\nMaria stared at him blankly. \n\n\"We did really well in the nineties and up to the housing bubble in oh-eight. When it crashed, we lost money on some properties, but I had enough cash to buy property at bargain prices. Some of it was your father's.\" \n\nShe snorted. \"That explains why his books showed about half as much land as I thought he owned. I don't remember seeing your name on any of the transactions.\" \n\n\"Your father would never sell anything to me,\" Quan scoffed, the angry edge returning. \"That son of a bitch would have gone bankrupt before ever letting me buy anything from him. So I hid behind LLCs and development groups. Some of my partners bought a good chunk of Jefferson County a few years ago. All that talk you hear about the country lakeside resort and golf club is them. I bought all the lots around this lake. It's about a hundred and fifty acres. No one will ever set foot out here unless we let them.\" \n\n\"What do you mean by 'we', Quan?\" \n\n\"Do you remember what you told me? You said you wanted to run away with me. Let's do it.\" \n\n\"That was a long time ago.\" \n\n\"And now we're both retired.\" He motioned for her to sit next to him on one of the benches. \"Your father is gone, Maria. He can't stop us. No one else around here gives a damn about us anymore.\" \n\nQuan paused and reached into his pocket for a small box. A ring box. \n\n\"Do you remember that day? A week after graduation. I came to your house to ask you to marry me.\" \n\nMaria was flooded with memories. \n\n\"I didn't think your father was going to be home. I hadn't seen him for weeks, but he was there that day.\" \n\n\"Daddy was waiting for you,\" she said softly. \"He knew I was pregnant. Mamma told him after I missed my period. I wanted to tell you . . . but he beat me when he found out. He wanted me to get an abortion, but the only doctor around here was your dad.\" \n\n\"I'm surprised he didn't hold that over me.\" Quan's eyes got dark. \n\n\"And admit that his daughter was fucking someone he didn't approve of? No, Daddy would never have let that happen. If you thought what he said to you that day was bad, you should have heard what he said to me.\" \n\n\"If I'd known he hit you, I'd have killed him.\" The clear threat of violence hung in Quan's voice. It was a good thing her father was already dead. \n\n\"You'd have gone to jail. Or they'd have strung you up to a tree out in the woods,\" Maria said bitterly. \"Daddy sent me and Mamma to Atlanta. I was guarded the whole time. After the baby was born, I came back. Daddy wanted to marry me off, but no one around here would lay a hand on me. There were too many rumours. Too many whispers. It was an open secret. I was damaged goods to these people.\" \n\nQuan took her shaking hands. \n\n\"So I went off to college.\" Maria paused long enough to wipe tears from her eyes. \"I tried to forget about you. I tried to forget about our son. No one there knew what happened.\" \n\n\"That's all behind us now.\" Quan opened the box. Inside was a simple, plain gold ring. \"I bought this for you. I know it's not much, but it was what I could afford then. Your father told me my family wasn't worth the shit out of a cow, and that your family could buy me and sell me a hundred times over. That may have been true, but that old bastard didn't deserve a daughter as wonderful as you. Maria, will you marry me?\" \n\n\"When Daddy threw you out of his house, I wanted to follow you, but I couldn't.\" Maria took the ring box and closed the lid. \"Right now, I want two things: one of them I can't have, and one of them I don't deserve.\" \n\nHis hands started to tremble. \n\n\"Quan Liu, I want to be eighteen years old again. I want to be pregnant with your child\u2014our child\u2014and I want to run out to your truck as you drove off with the black eye and broken arm Daddy gave you and never come back. Everyone we knew back then has spent the last fifty years calling me a whore, but at least I would have been with you.\" \n\nMaria reached up and caressed his cheek. \n\n\"You were always so good to me, Quan. I don't deserve you. I want your forgiveness and your love. But I don't deserve either,\" Maria looked away, ashamed. \n\nIt took Quan a moment to find the words. \"There is nothing to forgive. We were kids, and you did what was required of you at the time. I don't care about any of that. We can't undo the past. I just want us to be together now. For the rest of our lives.\" \n\nMaria still had the ring box in her hands. She opened the lid again. The single small diamond glistened in the sun. It seemed so small, but in that moment, it was the most valuable gift she had ever received. ",
        "\"Marry me, Maria,\" Quan whispered, his voice desperate. \"Please. I'd get down on one knee but it would take me half an hour to get back up.\" \n\nThey both laughed. Nervously. The tension went away as their fingers intertwined around the ring box. \n\nShe lost herself to his gentle touch. Since she went away to college, Maria asserted as much control over her life as she could. It wasn't always easy, and it had earned her a reputation as a bitch and a cunt. In reality, she was acting just like the men in her profession, but since it wasn't expected from a woman, she was labeled as \"difficult.\" \n\nBut that drive served her. She was tenacious and fierce. Fearless. Intimidating. Most importantly, she won. A lot. \n\nMaria was the first woman to be made a partner in her law firm. And the first of any of them to argue before the Supreme Court. \n\nShe made it her life's mission to atone for the sins of her father and his father and his father before him. Maria took cases fighting for women's rights, for civil rights, for gay rights. She made lots of enemies among those in power. She endeared herself to anyone who had been oppressed. \n\nBut right then, she would have given anything to go back to being eighteen years old again: pregnant with her son, poor and estranged from her family, but with the man she loved. Deep down, she knew the reason why she had never married was she always carried a torch for Quan Liu. No matter how hard she denied it, even to herself. \n\n\"You know I can be the world's biggest bitch, right?\" \n\n\"My wife was a Chinese tiger mom,\" he said with a slight smirk. \"I think I can handle you.\" \n\n\"Even after fifty years?\" \n\n\"I've kept my eye on you,\" Quan winked. \"Well, from a distance. I couldn't let my wife find out. But your name popped up in the newspapers every now and then, so it was easy to keep track of you.\" \n\n\"What if your wife hadn't died?\" \n\n\"Then we wouldn't be having this conversation, and one day I'd sell this property for twice what I paid for it.\" \n\nMaria snorted and playfully smacked him in the shoulder. \n\n\"I looked you up a few years ago, too,\" she said softly. \"Well, I had someone else look you up. They said you were married and had kids, and ran some kind of private business. I figured you were happy, so I never checked up again.\" \n\n\"I was happy, Maria,\" he replied wistfully. \"I loved my wife and my kids are wonderful. But I a part of me always wondered what would have happened to 'us'.\" \n\n\"Do your kids know about me? What will they think?\" \n\n\"They don't know specifics, but they'll like you. And you'll like them. My daughter is a lawyer, too.\" \n\n\"I hope she's not an ambulance chaser. They give us a bad name.\" \n\n\"No, environmental law.\" \n\n\"I like her already.\" \n\nThey sat there for a few minutes. Listening only to the birds and the sounds of the water on the shore. \n\n\"I can't marry you, Quan,\" she said resolutely, as much for herself as for him. \"Not today. You can't come back into my life and expect to pick up right where we left off. I'm a different person now. So are you.\" \n\n\"I want you to fall in love with me again.\" \n\n\"I want that, too,\" she whispered. \"Ask me again in a year.\" \n\nQuan framed her face with his hands and kissed her. Deep and passionately. \n\nThe buzzing of Quan's cell phone broke them from their reverie. \n\nHe glanced at the screen and then helped Maria to her feet before tapping out quick reply text. She followed him down the spiral steps and back across the deck to the field towards the parking area. \n\nThe car pulling up stopped her dead in her tracks. \n\nIt parked next to the Lexus SUV and four people got out. \n\nMaria grasped Quan's hand to steady herself. She held on as if her life depended on it. \n\nThe man looked just like his father, but just a little taller. He was thin with the same black hair streaked with grey. \n\n\"I'm going to kill you for this,\" she whispered softly enough that only Quan could hear. He only grinned sheepishly. \n\nThe six of them stood there for what seemed like forever. \n\nMaria's eyes never left her son. Their son. \n\nIt took every ounce of willpower she had to spur herself in motion. She crossed the field at a brisk walk, her head held high. \n\nThe man walked out to greet her. \n\nThey stopped an arm's length apart and faced each other, unsure of what to do next. \n\nMaria reached out to touch his face. She ran her fingertips over his cheeks, wondering if it was a dream. \n\nTears leaked out of her eyes. She didn't move to wipe them away and didn't dare take her eyes from him. \n\n\"They never let me hold you,\" she said bitterly. Apologetically. \n\nIn response, he took her hands in his and squeezed them sympathetically. He was trying not to cry. \n\nAfter the baby was born, Maria wept. For months. His birthday passed by year after year, unobserved except for the tears she shed in solitude. She hid her shame from the world and vowed never to cry again over the child she gave away. \n\nThey wrapped their arms around one another in a tight bear hug, as if neither ever expected this day to come. \n\nFifty years of guilt faded away in that moment. The first time she had ever taken her child in her arms. \n\nA part of Maria wanted to laugh. A part wanted to cry. \n\nSo she did both. These were tears of joy. Joy at finally holding the son who was taken from her. \n\nHe lifted her off her feet. His strong arms enveloped her as if he was going to crush her. Maria wouldn't have traded that feeling for anything in the world. \n\nFinally, they pulled back, if only to look at each other in disbelief. \n\n\"I'm Marc,\" he said softly. He had a clear, deep voice with no trace of the southern drawl of his birth parents. \n\n\"You're beautiful, Marc,\" she replied, trying to will her stoic control back. \"I'm Maria.\" \n\n\"All the beautiful sounds of the world in a single word,\" he quoted, his eyes dancing with delight, his smile radiant. \"Maria.\" \n\nMarc reluctantly released her from his embrace and took her hands. He motioned to his family. \n\n\"This is my wife, Angelina\u2014\" the g sounding as h using the Spanish pronunciation, \"\u2014And these are our children, David and Isabella.\" \n\n\"It's so nice to meet all of you,\" Maria let go of her son's hand and reached out to greet his family with warm southern hugs. \n\nOut of the corner of her eye, she saw Quan and Marc speaking softly, their arms around one another. Both were smiling and laughing. \n\n\"Let's go back to your house, Maria. We can catch up there,\" Quan suggested. He paused for a second, looking down at the ground where they stood, then towards the lake, then at both Marc and Maria. He chuckled to himself. \n\n\"What's so funny?\" Marc asked. \n\n\"I was just thinking . . . You're standing right at about the spot where you were conceived.\" \n\n\"Oh, for Heaven's sake!\" Maria flushed with embarrassment and playfully smacked Quan on the shoulder. \n\nQuan's eyes sparkled with laughter. \n\nMarc let out a nervous chuckle. His wife and kids snickered. \n\nWith an exasperated sigh, Maria took Quan and Mark by the arm and led them towards the Lexus SUV. \"We have a lot to talk about.\" \n\n\"You go with them,\" Angelina said to her husband as she and the kids got in their car, which looked like a rental. \"We'll be right behind you.\" \n\nMaria and Marc got in the back seat as Quan drove the short distance back to her house. She didn't want to let him go. It was as if touching him was the only way she could convince herself she wasn't hallucinating. \n\nThe six of them spent the rest of the day getting to know one another. \n\n\"Where did you grow up?\" she asked their son. \n\n\"Dad was stationed at Warner-Robbins during Vietnam. We moved around some before he got out, and then settled in Minnesota. I always called Bloomington 'home' until I moved to Kentucky.\" \n\n\"And that's when you met Angelina?\" \n\n\"Marc was my AP history teacher,\" his wife blushed. \n\n\"I'm sure there's a story there,\" Maria winked. Angelina and Marc had matching shy smiles that told her enough. \n\nEnough to know that they were still madly in love after all this time. She was suddenly jealous of the couple who sat across from her and her long-lost lover. \n\n\"What do you all do now?\" she asked to politely change the subject. \n\n\"I work for the Kentucky Department of Education. I run a program that promotes vocational and technical education around the state,\" he gave them the short version of his job description. \n\n\"I'm chief financial officer of an aeronautics and robotics company,\" Angelina said when it was her turn. \n\n\"We're seniors at Duke,\" David said. \n\n\"Both of you? What are you studying?\" Maria asked. \n\n\"I'm in the pre-med program. I'm going in to a PA program,\" he replied. \n\n\"I'm in the visual arts program. I want to work on movies,\" Isabella said. \n\n\"Work on movies? Not be in movies?\" Maria asked curiously. \"You're too beautiful to be off-screen, sweetheart.\" \n\nThe younger woman blushed. \"Thank you. I want to be a stuntwoman.\" \n\n\"I can make some calls if you need a foot in the door. I know some people,\" she winked as Isabella's eyes widened with surprise and delight. \n\n\"It sounds like you all are doing well in your lives,\" Maria complimented her new extended family. An uncomfortable silence fell over the group. \n\nShe was used to being in control of her environment and knowing more than anyone else in the room. For once, she was behind and dealing with incomplete information. \n\n\"You want to know why, don't you?\" she said softly. She was speaking to Quan and Marc. \n\nBoth nodded. \n\nMaria took a deep breath, trying to find the right words. \n\n\"If you would like to have this conversation privately, we can go and meet you later for dinner,\" Angelina offered. \n\n\"Thank you, sweetheart,\" Maria smiled appreciatively. \"That's not necessary. You all have a right to know.\" \n\nShe looked at her old lover and her son. \n\n\"My life was mapped out for me from the moment I was born,\" she said softly. \"My family is old money around here. I wasn't supposed to fall in love with someone like Quan. And when I got pregnant, it was a scandal. You had already left when the whispers got out. I don't know if your parents ever knew; I don't think so, though.\" \n\nMaria's eyes fell to the floor. \n\n\"I want to tell you that I gave you up because my parents made me.\" She was disappointed in herself. \"But I couldn't raise you here. Not by myself. And I couldn't drag Quan back to this little backwater town. Not where he would have been made an outcast like me. I gave you up and hid you from Quan because I knew I couldn't raise you. Not in Jefferson County in 1968.\" \n\nShe looked up at her son with fear and self-loathing in her eyes. \n\n\"Do you have a good life, Marc?\" Maria whispered. \n\nHe got up from his chair and sat next to her on the couch. His hands covered hers. His voice was gentle and understanding. \n\n\"Yes,\" he looked her in the eyes with his father's big brown eyes. The ones that promised love and safety. \"You did right by me, Maria. You gave me to a family that loved me. My mom and dad were better than I could have asked for. I had every opportunity in the world.\" \n\n\"How can I make it up to you?\" Despite her efforts, Maria's voice broke. \n\n\"You owe me nothing,\" he replied. \"My parents told me that my mother and father put me up for adoption because they loved me and wanted what was best for me. I thought about looking for you, but I didn't know if you wanted to hear from me. If it hadn't been for that home DNA test my kids wanted, I never would have found you.\" \n\n\"I guess our kids know what we need sometimes,\" Quan smiled. \"Even if we don't.\" \n\n\"I just want to get to know you,\" Marc took both of his parents's hands. \"I am married to the most beautiful woman in the world and have two great children. Every day of my life is a bonus day. I want whatever relationship you want to have with me and my family.\" \n\n\"Are you parents still alive?\" Maria asked. \n\n\"They are,\" he replied. \"Dad just retired a couple of years ago. Mom still works at the university.\" \n\n\"I want to meet them,\" she said. \"And tell them they raised a wonderful young man.\" \n\n************** \n\n\"I love feeling you inside me,\" Maria sighed as Quan's weight settled down on top of her. \n\nThey seemed to melt into the memory foam mattress. \n\nThe first rays of morning shone into the big bay window overlooking the lake. Their lake. \n\nQuan leaned in and kissed her. She ran her fingertips over his bare shoulders. \n\nShe spread her legs as he filled her up. \n\nWith one hand, Quan reached up to palm her breast. He pinched the nipple just the way she liked. \n\nThey made love long and slow as the sun came up. \n\n\"I am never letting you go again,\" he vowed for the millionth time. \n\nMaria never tired of hearing those words. \n\nHer fingers dug into Quan's rear end as he thrust a little harder. A little faster. \n\nTheir lips met again, as tender as their first kiss all those years ago. \n\nBut this time, they weren't hiding from anyone. Their love was no secret. There were still some disapproving stares, but the times had driven the bigots and racists underground and forced them to hold their tongues in public. \n\n\"Don't stop,\" she gasped. The tingling started in her toes. Quan pulled back until he was almost out of her. \"Don't . . . stop\u2014oh!\" \n\nHe pushed forward suddenly until he was buried all the way inside her. \n\nMaria caressed his strong arms as Quan built a hard, steady rhythm. \n\nShe saw him bite his lip, knowing he was close. \n\n\"Oh, Quan,\" she moaned as the orgasm washed over her. Her hips met his thrusts. \"Cum for me!\" \n\nHer womb filled with warmth as they orgasmed together. \n\nQuan collapsed on top of her. His weight was comforting. His touch felt so right. \n\n\"I love you, Quan Liu,\" she whispered in his ear. The words felt so right to say. And they came so easily now. \n\nThey lay together for several minutes, not moving. It wasn't until they heard footsteps upstairs that they stirred. \n\nHe pulled back and sat at the edge of the bed for a moment before heading to the master bathroom. She admired his nude form. \n\nStill slender and fit, Quan was the envy of men twenty years his junior. His muscles were still toned. He had filled out some since high school, but the sight of him still took her breath away. \n\nMaria got up and slipped on a terrycloth robe. She went in to the bathroom. Quan was brushing his teeth. \n\nShe reached over and gave his backside a playful pat. \n\nIn response, Quan reached into her robe and groped her breast. Years of conditioning made Maria uncomfortable with public displays of affection. Combined with the shame she felt when she came back to Jefferson County, Maria was never one to even hold hands with anyone where they could be seen. \n\nQuan was slowly breaking her of the bad habits. She was still proper and well dressed in public, but privately, she was open to all of the pleasures Quan brought her. \n\nAnd after that day a year before, she never shied away from slipping her arm into Quan's or kissing him on the cheek for the world to see. It helped that they spent most of their time at her house in Alexandira, his apartment in New York or traveling the world together, and not stuck in Jefferson County. \n\nShe was like they were eighteen again. Only with dashes of back and knee pain. \n\nAnd the possibility of breaking a hip if they got too acrobatic in bed. \n\n\"Shower with me,\" he whispered in her ear. \n\n\"You just want to put that thing in me again,\" she snickered. \n\n\"I always want to put it in you, Maria,\" Quan pushed the robe off her shoulders. \"Besides, you made me dirty. I think you need to clean me off.\" \n\nShe let out an exaggerated sigh that was supposed to sound exasperated, but they both knew she would never refuse him. \n\n\"Don't wear yourself out, honey. You've got a big day ahead of you.\" \n\nThe hot water started. Quan led her into the custom-made glass-enclosed shower that was large enough to accommodate four people if they wanted. The body jets massaged them as they took a long, indulgent time together. \n\nHer hands lingered on him and his on her. \n\nMaria savoured his touch. As she did often, Maria wondered how their lives may have turned out if they had made different choices. \n\nBut that was in the past, and there was no sense in wondering about things that could not be un-done. \n\nEven after their morning coupling, Quan was ready to go again when she stroked him a few times. It was like he was making up for lost time. \n\nMaria wasn't complaining. \n\nHe pushed her up against the heated tile wall. She held on to him under the gentle spray of the body jets. \n\nCrying out every time he hit bottom. \n\nQuan called out her name as his cum coursed up inside her. Right where it belonged. \n\nA short time later, they emerged from the master bedroom to find his son Kai and his wife Kelly cooking breakfast. Michelle and her wife Alesia were snuggled up on the couch with the younger kids. The teenagers were nowhere to be found, probably still burrowed under the covers in the upstairs guest rooms. \n\n\"You have a wonderful house, Maria,\" Michelle complimented. The house itself was mostly finished. It just needed a little more landscaping around the wrap-around porch, but they were holding off on that until the pool was done. \n\n\"Your father built it,\" she reached for the offered mug of coffee. \"I just wanted a little summer cottage here on the lake.\" \n\n\"I built this monstrosity so our family would always have some place to stay,\" Quan scooped up one of his grandchildren and sat down with him on the couch. Left unsaid was that he never wanted to set foot in the Bradford family home again. Except maybe to tear it down. \n\nMaria would never let him do that. She did have some sense of family and history. But she had a few ideas of what to do with the antebellum mansion. \n\n\"So what's with the extra bedrooms?\" his daughter asked. \"Do you really need to show off how rich you are to everyone who ever wronged you?\" \n\n\"Your kids are going to have kids one day,\" Quan winked noncommittally, even though she wasn't far off the truth. \n\nMaria smiled at her fianc\u00e9e's brood. They were everything her father had loathed. Everything she grew up knowing nothing about. \n\nAsian. Buddhist. Black. White. Catholic. Mixed. Queer. \n\nThey were beautiful. \n\nAnd that didn't include her half-Asian son, his Latina bride and their brilliant children. \n\n\"When are Marc and Angelina going to be here?\" one of the kids climbed up into Maria's lap as if she always belonged in their family. After their granddad, Uncle Marc was their favorite because both men spoiled everyone rotten. \n\n\"Later this morning,\" Maria said with a rapturous smile. \"Don't worry; the wedding won't start without them.\""
    ],
    "authorname": "HLD",
    "tags": [
        "couple",
        "redneck father",
        "lakeside",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-valley-road"
}