{
    "title": "Teaching Her a Lesson Pt. 30",
    "pages": [
        "Part Thirty: Distribution of Diplomas\n\n\"Ladies and gentlemen, I give you: the graduating class of 2020!\"\n\nThere was no applause. Into the silence, someone made a fart noise blowing into their palms. I was pretty sure it was Justin. \n\nOn stage, Principal Horen glowered in the direction of the disturbance, then resumed. \"So then, everyone will applaud, you'll stand up, we'll allow a moment to smile at where your family is sitting so they can get a picture, then begin ushering out. It will follow the same order as the procession to stage; just turn the opposite direction. We'll lead you back out across the lot to the fieldhouse, where we'll distribute actual diplomas. There will be four tables...\"\n\nMrs. Horen rattled off details to her disaffected crowd. The graduation rehearsal, a formality to reduce the chance of anyone making a fool of themselves during the ceremony, was always like this. It was attended by seniors who were burned out and way past ready to be done and gone. Any fondness they harbored for their four years at GHS was wrapped up in the people around them, not this ritual of academia. If we had some quality speakers this year who knew how to stoke the fires of those connections, they'd warm to it, but for now, they were simultaneously tense yet bored. This, they tolerated solely because they were inured to regulated tedium. \n\nI'd volunteered to be a graduation usher a couple times in the past, but today, I was merely another spectator. Like a lot of teachers, I was in the auditorium for the rehearsal ceremony simply to have one last opportunity to see all of them in one place one last time. In a little while they would line up, proceed out to the football field, and commence the austere festivities. \n\nI stood towards the back of the auditorium in a dimly lit nook. In a year that had been so fraught with my own drama, particularly of late, it was good to have time to see my students -- former students -- here in school again. Some I hadn't taught in years, sophomores who'd taken speech and dodged my classroom in junior and senior English. Others, I'd seen only Thursday while I'd been forcing a blearly smile from a heart dulled by Serenex. Fresh faces or students whose names were already beginning to slip from memory, our time together was at an end. All we had now was history.\n\nAs we waited for the go-ahead to mobilize, students shuffled over to say farewell, exchange handshakes or hugs, invite me to their open houses to celebrate their graduation, or, in Justin's case, to make a hushed word of gratitude for not flunking him.\n\n\"You didn't flunk you, Justin. I had nothing to do with it.\" He'd finished with a D+, as I recalled, but still, fail or flourish, it was my go-to line. In any case, it was better than Taylor had managed. \n\nHe glanced around. \"Oh, and hey, about that thing...\"\n\n\"I really don't want to talk about--\"\n\n\"Nah, nobody's listening, C-dawg.\" True, we had a little space around us; the presence of others had nothing to do with my disinterest in discussing the topic, however. \"I wanted to say thanks for being cool about it.\" I gritted my teeth. Still, there was enough background noise that it was safe enough so long as nobody came closer.\n\n\"I wish I could say the same,\" I said dryly.\n\nHe chuckled, grinning that irritating Justin grin of his. Lord, how I couldn't wait to never see that again. \"Come on, buddy, relax. I was just busting your balls a little. Only not with my mouth this time.\"\n\nMy hands clenched.\n\n\"Look, I'm just joshing you, man!\" he protested, slapping me on the arm. Like the reminder of what had happened between us, the slap was harsher than I was comfortable with. \"Don't hold it against Taylor, though. She was only trying to do me a solid. Not easy to figure out if you're gay or bi or whatever without nobody finding out about it.\"\n\nMuch as I was inclined to be flippant with the little prick, especially now that I wasn't his teacher any more, his words engendered just enough sympathy that I held my tongue until I could compose something less snarky to say. \"And the verdict?\"\n\n\"You hitting on me, C-dawg? You're not my type, brah!\" This time, his voice carried plenty loud, as did the ensuing guffaws. He lacked the fans he'd cultivated in my class; the only students near enough to overhear him glared at him for his crude suggestion. My empathy dissipated.\n\n\"Good luck out there, Justin,\" I said, and walked away.\n\nI almost immediately bumped into Tabitha. \"Hi, Mr. Canon,\" she said brightly. In a room full of people who'd been forced into antiquated ceremonial garb, she might be the one person who was pulling off the look. \"How do I look?\"\n\n\"Like a graduate.\"\n\n\"So, you approve?\"\n\n\"Always.\"\n\nHer smile warmed. \"Are you coming to my graduation party? Daddy's going to be gone for most of the summer in Europe. He says it's to visit his mom and dad, but it's really for business. so we're doing it next weekend while he's still home.\" She took a half step closer, enough to lower her voice to intimate levels while maintaining a respectable distance. \"I thought maybe you'd like to see my bedroom.\"\n\n\"I would like that.\"\n\nHer smile brightened. \"In the meantime, do you think, maybe, we could sneak out for a few minutes and I could go down on you? I could try to finish you really fast.\"\n\n\"Don't you worry about me, Tabitha. This is your day.\"\n\n\"I know. I want to be able to taste you on my tongue while I walk across the stage.\" The brief lick of her lips was subtle, but sufficiently suggestive to leave me forced to hold my hands in front of my crotch.\n\nI shook my head. \"A for effort, but I think you'll have to settle for a tic-tac.\"\n\n\"But you'll call soon, right? My grandparents -- my mom's parents, that is -- leave tomorrow, so then there's nothing standing between us. I'm yours for as much as you can handle me.\" She smiled hopefully.\n\n\"Oh, Tabitha. You know I will.\" I spread my arms, figuring her body would work as well for covering my erection.\n\nShe squirmed in surprise as she felt my hands close in on her ass. \"Mr. Canon!\" she squeaked quietly in my ear.\n\nI enjoyed a few more seconds of fondling, then released her. With my back to the auditoriums' occupants, it was naught but a hug as far as they were concerned. Her face was suddenly flushed, and I knew well that the intense look on her face was not the righteous indignation that once would have been there at being publicly felt up by a teacher. It was arousal. Savage, urgent arousal.\n\n\"Congratulations, Ms. Hutchings. See you on stage.\" I walked by, and left her in my wake.\n\nA few rendezvous with fond students later, I finally bumped into the fondest of them all. She disentangled herself from a cluster of friends to dash over to me and unabashedly wrap her arms around me in a truly fierce embrace, practically a tackle. \"Mr. Canon. Hi.\"\n\n\"Hiya, Cassie.\" I hugged back, skipping the grope this time. She'd already arranged a sleepover tonight; I'd have plenty of opportunity to enjoy her ass then. \n\n\"Can you believe we're here? I mean, gosh, this is probably the last time we'll ever be together at GHS. Not that we were ever together together here. Which sucks, you know? Well, no, there was the locker room. That's technically GHS, even if it's way out past the parking lot. Wasn't that awesome? Do you think we'll ever do something like that again? I'm not good at hashtag roleplay -- yet -- but it was still fun. For me, anyway. You looked like you had fun, but I don't wanna be assumptuous. Presumptuous? That sounds better. You know, I bet I'd know way more vocabulary if I'd had you for English.\"\n\n\"I had fun,\" I assured her. Had her friends heard her? It had probably come out too fast for them to make sense of it.\n\n\"So I was thinking maybe tonight, if you wanted, I could wear this leather--\"\n\n\"It's time, everyone!\" called Mrs. Horen from the stage. She began bellowing out instructions for alphabetical lines to reform. \n\nI squeezed her shoulder. \"Wear it.\"\n\nShe giggled happily. \"Goodbye hashtag schoolgirl, hello hashtag bondage slave!\" She rushed off towards the front of the line. I got out of the way, and soon enough, the alphabetical procession formed and made its way toward the exit, and from there, out into the parking lot and over to the football field. It was a gray day, but the forecast promised minimal chance of rain until this evening, so outdoors it was. It was warm out, and a bit humid, and altogether the sort of day that made for bad pictures. Ah, well. \n\nThe other teachers and I not involved in the ceremony shuffled along in their wake. Space was always at a premium for graduation, so in absence of a ticket, I used my status as a teacher to get past Mrs. Pedretti, then simply stood off to one side to observe. By summer's end, I'd be back to normal human tolerance for standing in place for hours at a time, but for now, my knees were still in teacher mode. Three hours was nothing.\n\nThe ceremony commenced. It was about the same as years past. An opening address by Principal Horen, brief remarks from the superintendent. The valedictorian and class president gave speeches. Then it was time for the distribution of \"diplomas,\" which were really only empty holders. They'd get their diplomas afterward; the withholding was our last means of coercing their good behavior for this final stretch. Parents were asked not to applaud for individuals so the reading of names could proceed quickly. Or less slowly, anyway. Most parents listened. Nobody tripped. I only caught a single name mispronunciation, and it was promptly corrected by another teacher on stage. \n\nThere was, for me, a conspicuous absence between Valerie Stenson and John Stettman-Boggs. \n\nSomewhere in the middle of it the sun peeked out, though it didn't last long. When it left, it was grayer even than before. Just like that, it was all done and over. As Principal Horen took the mic to make her final remarks and instructions, I quietly excused myself from the field.\n\nShe was waiting for me by my car. Somehow, I wasn't surprised.\n\n\"Hey there, C-dawg.\"\n\n\"Hey there yourself.\"\n\n\"How was it? I miss anything?\"\n\n\"A diploma.\" I looked her over. \"And apparently a copy of the dress code.\"\n\nTaylor smirked her radiant smirk. Amazing how different it was when she was smirking for you instead of smirking at you. She hefted her breasts in their turquoise bikini top demonstratively. \"All those fuckers coming out here ready to throw their success in my face. Figured I'd make sure they knew I still got something over on 'em.\"\n\n\"Well, you're doing a good job of it. If boobs were in the core curriculum, you'd have at least aced one subject.\"\n\n\"Aw, you say the sweetest things.\" \n\nI stood by, waiting, but when she said nothing further, I prompted her. She was blocking the door, after all, which was not an accident. \"Was that it? You waited here for me just to show off your tits?\"\n\n\"First of all, don't act like you don't love it. Your ass is stuck with all them other flat-ass bitches now, so take 'em in while you can.\"\n\n\"Abbie is flat?\"\n\n\"OK, flat or droopy.\"\n\n\"Oh god, Taylor, she's not droopy.\"\n\n\"Just admit you're gonna be lost without 'em.\"\n\n\"I still have Isa.\"\n\nShe frowned. \"Fuck. OK, you got me there. Maybe. Anyway, I was just waiting for some friends. Saw you coming and figured I'd try not to be a bitch for once.\"\n\n\"Trying something new, eh?\"\n\n\"Blow me.\"\n\nI folded my arms. \"Taylor, you were standing by my car. If you want to pretend it's coincidental timing, fine, but if you have something you wanted to say to me, say it.\"\n\nShe frowned. \"Way to be a dick about it. I was going to give you something, but if you're gonna be a prick, then fine, fuck you, too.\"\n\n\"A present? For what? I'm not going back on what I said, Taylor. Maybe you thought drugging me and forcing yourself on me--\"\n\n\"Right, because you were totally cool to drug me and forced me to take your stupid test.\"\n\n\"The two are not even close to the same thing!\"\n\n\"Right. You just hated it, I bet. That must be why you came inside me. Twice.\"\n\n\"I stand by what I said. Yes, we had fun, but no, I'm not changing my mind.\"\n\nHer hands balled into fists, and a primal growl issued from deep in her throat. A few hundred feet away at the other end of the parking lot, the procession of graduates began exiting the field wearing their caps and gowns, empty diploma cases in hand.\n\n\"I swear to god, you are the most selfish asshole I've ever met!\" Taylor roared. \"If you even knew half the shit I did for your ungrateful fuckin' ass, you'd--\"\n\n\"You mean like drugging Randi?\" I interjected calmly.\n\nTaylor froze, head snapping back warily. \"Um, what do you... I mean, I never...\"\n\n\"You did. And if you're going to lie to me, then we have nothing to talk about. I know all of it now, so don't embarrass yourself by being coy.\"\n\nShe planted her hands on her hips. \"OK, fine! So what? So I dosed a janitor. Big fucking deal. Not like anybody got hurt by it.\"\n\n\"That depends on one's perspective on the merits of free will.\"\n\n\"Overrated. You of all people should know that.\" She shook her head irritably. \"So how'd you find out?\"\n\n\"You left your essay on the floor. She returned it to me, because she thought you and I might be continuing to get together even after your dismissal and that I might want to return it to you. Which begged the question why she wouldn't object to such a liaison, but she assured me that I was an excellent teacher, and that you were lucky to have me. I asked if she'd read it. She commended your hard work, but felt like you'd over-relied on quotation.\"\n\n\"Harsh criticism from a bitch that mops up piss off the men's room floor for a living.\"\n\n\"She's a hard worker and provides good service. Two things you've yet to learn anything about.\"\n\n\"Ooooh, sick burn there.\"\n\n\"At any rate, the way she reacted made it too obvious what you'd done to her. In short, you were sloppy.\"\n\nThe procession was passing us by now, though it didn't come close enough to allow us to be overheard. One of her friends called out a greeting, but she barely acknowledged it. \"Sloppy my ass. That's just some good sleuthing on your part.\"\n\n\"Oh, that's only where the sleuthing began. You see, something Abbie said yesterday as she was coming around... it got me thinking. She acted like there was some big secret she'd figured you'd tell me, something that would have forestalled the breakup. So once Randi revealed her little slice of the secret, I thought, there has to be more to it than that. Brainwashing Randi worked out well, but it's a cover your ass move, not a romantic gesture. So as I thought about it some more, I remembered that Randi wasn't the only person who told me that very thing that day. Excellent teacher, lucky to have me. Care to guess where else I heard it?\"\n\nTaylor shrugged. \"Your mom?\"\n\n\"Principal Horen, as a matter of fact. As I reflected on it, I was pretty sure she'd used that exact same wording, too. Struck me as a little bit suspect.\"\n\n\"Are you accusing me of dosing the principal, too?\"\n\n\"Yes, among other accusations. So I had to ask myself why. Randi, all right. In and out of the room every afternoon, in a position to see and hear things you -- we -- didn't want seen or heard. But Principal Horen? I think in five years of teaching at this school, she's been in my classroom twice that I recall, and only for planned observations. She knows as much about what I do in my classroom as I expect your parents do about your participation. So what for?\"\n\n\"What for?\" Taylor sneered. \"Um, you don't remember her catching me showing you my pussy? Firing you? Kicking my ass out of school?\"\n\n\"Sure, there was that, only that very afternoon when she walked in on the lot of you, your sister returned the Serenex to me. It's been in my custody ever since. So I knew it had to have occurred before all that. I wouldn't have put it past you to dose her for your own ends -- straight A's, immunity to disciplinary action, that kind of thing -- but that you'd come at her to instill a high opinion of me... that didn't register.\"\n\n\"Yeah, well, like I said, you're welcome.\"\n\nI disregarded her deflection. \"So I put a pin in that and then asked myself: if you went after her, then who else? So I picked up the phone and called up Mrs. Cook-Burfield, my department head. Direct supervisor, and the classroom next door. Maybe you'd thought she was a threat, too. I point blank asked her what kind of teacher I was, and I bet you'll never guess what she said.\"\n\n\"A ball-busting asshole?\"\n\nFamilies were milling out of the gate now, some of them dispersing toward vehicles in the lot, others making their way to find their students in the fieldhouse. \n\n\"Excellent teacher, lucky to have me. By then, I was starting to get paranoid. Who all had you gone after? By the time Ms. Salata and Officer Barbie... sorry, Barbour--\"\n\n\"Ha! Gotcha.\"\n\n\"By the time they made me pour most of my can down the sink, there was hardly any left, so I know you couldn't have done much with it. I was guessing maybe a half dozen doses, tops. I used at least two or three simply bringing you in for the final. I'm not a math teacher, but I can add and subtract.\"\n\n\"Don't sell yourself short, C-dawg. You're multiplying my boredom with all this.\"\n\n\"So I figured I'd check with the usual suspects. I swing by Isa and Candy's house, to ask Candy what she thinks of me as a teacher.\"\n\n\"God, I didn't re-dose Ms. Salata!\" she protested angrily. \"What would be the fucking point? That bitch is as owned as owned can be.\"\n\n\"I know you didn't dose her. Her answer was not that same rote recitation. The immediate look of guilt in her eyes, however, said a great deal more. Same for Isa. They knew something. Plain as the tits bulging out of that bikini top of yours.\"\n\n\"Hey, tuck that away for your refresher on similes next year.\"\n\n\"But what? I already knew that they'd hooked you two up with the canister after Abbie used on me. They'd admitted it, and made a very reasonable claim for innocence on the grounds that you mind-controlled them into it. I'd already forgiven and forgotten supplying you with more of the stuff, so why those evasive looks over old news?\"\n\n\"HEY TAYLOR!\" yelled Justin from a couple aisles over. In unison we held up a single digit each to ward him off, albeit not the same digits. For once in his life, he took the hint and swaggered off into the building to retrieve his diploma.\n\n\"So? What'd they say?\" she asked evenly.\n\n\"Oh, nothing at first. You have them good and cowed. I pulled out all the stops, though. Started with the basics, a little corporal punishment, the old 'Hey, Candy, I planned for you to tell me Taylor's secret,' all that bullshit. Took some naked photos of them, faces and all, sent them to every number on their contact lists. Still wouldn't break.\"\n\nTaylor gaped. \"You did fucking not.\"\n\n\"Of course I didn't. But so long as they only thought I was being a tyrannical overlord, they couldn't control themselves, fell to frigging themselves into a coma. Moreover, they handed their phones over, where I looked through their call logs. Specifically, their call logs with you.\"\n\n\"Jesus, fucking invade people's privacy much?!\"\n\n\"Spare me. For the love of god, spare me.\" A couple approached the vehicle parked next to mine; we stood aside so they could get in; I calmly delayed my recrimination until they were in their vehicle and on their way. \n\n\"What I found interesting, even more so than the sight of those women sixty-nining their tongues off, was a pattern a few weeks back, shortly after the dinner party. A pattern of calls between you and Isa, and then this other number and Isa, and vice versa. Minutes apart. Almost as if there was some causal relationship between them.\"\n\n\"This is some paranoid-ass shit, Mr. Canon.\"",
        "\"Since there was no name attached to the contact, I asked Isa who it was. She acted like she didn't know. Acted badly, I might add. So I did the logical thing and gave them a call. I'd say you'll never guess who answered, but I'm sure you know exactly whom.\"\n\n\"I don't have the slightest--\"\n\n\"She was confused, hearing a man's voice coming from Isa's phone, but I managed to get a name out of her before she hung up. A first name, at least, though that was plenty. The call seemed to really freak Shantel out for some reason.\"\n\nThe car beside us pulled out. I broadened my stance. Right now, with that look of consternation on Taylor's smug face, it felt like my ego needed a whole parking space. \"You dosed her, didn't you.\"\n\nThe young woman merely glared sullenly. It was as much confirmation as I'd gotten when I pressed Isa on it, but that too had been sufficient. \"Makes sense. With a trained chemist on your side -- one who works in a drug analysis lab, with access to all the contaminants she'd need to replicate my mutated Serenex, one whom you thought I'd never encounter or question, so you could keep marching to your twisted Emersonian drummer. Even if the woman found a way around your control -- which I doubt you'd give her -- she'd think to go after Isa, and no way that submissive little bitch was going to rat you out. Hell, you probably even had Abbie handle that, scapegoat for life.\"\n\n\"Almost out of the good stuff, so you move heaven and earth to get your hands on more. You make all these big plans for a grandiose gesture to impress your new boyfriend, mind-fucking the entire faculty and staff just so you and I can hook up in the classroom without anyone getting nosy.\" I shook my head. \"Or something. It's so insidious and fucked up I can't even begin to fathom what you were thinking when you did it. But I spoke with a dozen of my coworkers today at the rehearsal, and every last one parroted that same 'excellent teacher, lucky to have you' bullshit. By then, I was checking out that other thing, too -- what Randi said about how whatever I do is for the best, nobody's business. Again, there it was. Horen, too, once I cornered her.\"\n\n\"Maybe they were just...\" But she didn't have any excuses left.\n\n\"Maybe nothing. Mrs. Meaden retired, effective Friday, so I flat-out asked her if she'd heard about the flashing incident. She said she had. So I asked, 'and what if I told you the girls were in there waiting to have sex with me?' I'll give you three goddamn guesses what her answer was.\"\n\nTaylor had been so certain she'd gotten away with it all, she was stunned speechless. I had her on the ropes, and pressed the attack. \"You had Candy get them at the faculty meeting, the one to explain my absence the week before finals. Was that it? That's the only timing that makes sense to me. If you already had Horen, and I can only assume that you did, it's the easiest way. Lure in the bulk of the faculty, then send Isa after any stragglers and the shirkers who missed the meeting. Twenty-four hours, and the whole faculty was corrupted, thanks to you.\n\n\"Oh, and I found out about Shipman. Got to him, too, huh? I couldn't get anything out of Isa about whether she dosed him after he was called in on my case, or if that whole getting fired and investigated by the cops thing was one big stunt you set up before it even happened. Either way, fuck you for that, too. On behalf of both of us.\"\n\n\"I... It was...\"\n\nA few tiny droplets started to fall on us. \"Was that why you stormed in the other day, tried to get me to fuck you with Horen roaming the halls on the warpath? Because you knew full well you could get away with it, and wanted my help looking for the boundaries of your bottomless ego? Because you wanted to show off how completely, utterly, remorselessly self-important you can be? Because you thought it would be funny?\"\n\n\"It's not not funny...\"\n\n\"Why, Taylor? Just... why? Help me understand what motivated this. Tell me--\"\n\nThe band, on hand to play \"Pomp and Circumstance\" for the ceremony, was the last out of the football field gates, shuffling along with their instruments in the direction of the band hallway entrance. Some kid with a trombone gave a look at Taylor, half-uncovered tits gleaming from the wetness, and played what I could only interpret as a wolf whistle. I gave him a hard look and he darted away giggling. \n\n\"Actually, you know what? Screw the explanations. I don't care any more. Christ, Taylor. Do you have any idea what kind of damage you could have cause? Still might cause, frankly. I don't know if you've noticed, but this stuff has an uncanny way of blowing up in your face the first chance it gets. I can't even begin to imagine the ways this might have gone to hell.\"\n\n\"But it didn't. Unlike you, I went in with a plan. The plan worked.\"\n\n\"Don't think that the potential catastrophe is my sole objection, Taylor. I only point it out because god only knows how many more gallons of that crap you have back home, and whatever other casual cruelty you might plan. Or use on a whim, for that matter.\"\n\n\"I don't have much -- and I don't use it on a whim. I'm not stupid.\"\n\nI closed my eyes for a moment, and let out a long sigh that built up almost instantly. \"I know you're not stupid. As a matter of fact, Taylor, I think you're brilliant. And you're beautiful. And you're cunning as hell, and I should clarify that you may be the only person I have ever met for whom I mean that distinction as a compliment.\"\n\nA tiny smile threatened at the corners of her mouth, so I pounced before it could spread. \"You're also ruthless, egotistical, thoughtless, and cruel. You frighten me, Taylor. Do you realize that? I care about you -- more than I've ever told you, more than I've ever cared about most people.\" That was a realization I was having even as I said it. \"But I am genuinely frightened by the lack of compunction you have exhibited.\"\n\nHer eyes glistened. \"You're afraid of me?\"\n\n\"Yes. I was worried about you -- and I still am -- but after what I've learned these past few days, I am more worried about what you might do.\"\n\nThe parking lot had quieted down. By now, almost everyone had either moved inside for the diploma dispersal, or gotten in their cars and headed home. Good timing, too, because it was then that the weather forecast failed altogether. Raindrops began to fall, pinging off the cars of the lot, sprinkling onto student and teacher alike.\n\nShe didn't flinch though. \"So, what, you gonna follow me home, force me to get rid of the rest of it? Because there's barely any left.\"\n\n\"I'd be an idiot to take your word for it after everything I've learned, but regardless, no. I'd be a bigger idiot to think I was going to get somewhere by forcing Taylor Stern to do anything.\"\n\n\"But you said you were afraid.\"\n\n\"I am. Which is why I hope you'll do the right thing and get rid of that stuff. You have more than enough to make it on your own in the world, Taylor. You don't need that junk. Whatever you've gained from it, it's cost you more. You lost out on a diploma you spent thirteen years pursuing. You lost your parents' trust. Your sister's. Mine.\"\n\nShe forced a sneer, but it didn't reach her eyes. \"Big deal, so my English teacher hates me now. I mean, what happened to your big speech from the other day about how as a teacher you want what's best for your students, huh?\"\n\n\"Taylor, I do not hate you. Maybe I did once, though don't insult me by pretending it wasn't mutual. I...\" No. I cut myself short. \"I don't know, maybe I could have loved you, even. Maybe. I loved being with you, at least. Regardless, I don't give two craps whether you think that the teacher-student factor diminishes the sentiment or not. It doesn't to me. I got into this whole stupid mess because of that feeling, and once I started, and I saw you as something other than a bratty little vixen, I couldn't resist going further.\"\n\nThe rain held itself to a mere drizzle, as if it worried about being seen as rude for interrupting. \"I still want you to do well and find some peace and happiness for yourself. You don't have to be Ralph Waldo Emerson to see that you're not going to find it in that canister. I'm not going to try to force you to do anything. Lesson learned on that one, believe me. Just think about it, and make your own decision. That's all I ever ask.\"\n\nAfter a moment, she wiped away a sheen of moisture from her forehead. \"You ask a fuck of a lot more than that, C-dawg.\"\n\nI let myself smile. \"I wouldn't be much of a teacher if I didn't.\"\n\nAt last, she stepped out from in front of my car door. \"C'mon, let's go inside. My friends are waiting for me, and I'm sure your fallback bitches are waiting for you.\"\n\nThey weren't, but I had planned on going in anyway. I wouldn't have even gone to my car if I hadn't seen her standing there. Perhaps it was selfish of me, but graduation was one of those days that simply felt good to be a teacher. It would do my soul good to expose it to the joy of my former students, especially after what I'd just put it through.\n\nTaylor and I walked inside together. If anyone thought it strange, a young, single teacher walking side by side with a dropout in a sopping wet bikini top, I didn't care. Hell, thanks to her, my colleagues would think nothing of it, and all of her classmates were about to leave for good, and had bigger things on their minds, besides. Inside, there was a buzz of excitement, jubilant noise streaming from the fieldhouse doors ahead. As we reached them, however, Taylor stopped me with a hand on my wrist. I paused.\n\n\"You know, it's a damn shame we hated each other before we liked each other. We might've done good, ya know.\"\n\n\"Maybe so.\"\n\n\"Guess you can't reboot shit in the middle of it, though.\"\n\n\"No, you sure can't.\"\n\nHer head tilted to the side. \"You sure you don't want your present?\"\n\n\"You mean the present isn't a work place where none of my coworkers or superiors can find any fault with anything I do?\" Not exactly what I'd had on my wish list. Honestly, I'd thought it would be that, or else a quick fuck in the backseat of my car. It would have been tempting. There really was no substitute for her.\n\n\"Nah. This is... well, let's just say it's not for pussies.\"\n\n\"You're not going to reverse psychology me into it, Taylor. I am not a pussy, but I'm not an idiot, either.\"\n\nShe laughed. \"Tell you what. I'ma leave you be. For good and all. Maybe think about some shit. Maybe read some more Emerson.\" She smiled, and though her voice hinted at sarcasm, her eyes bespoke something else. \"You decide you want it, talk to Tabitha. She'll hook you up.\"\n\n\"How long do I have to decide?\" I asked, perplexed.\n\n\"It's time-sensitive, you could say.\"\n\n\"Meaning...? Come on, at least give me a hint.\"\n\n\"I already gave you the hint. Your ass seems pretty good at figuring out shit, anyway.\"\n\nCryptic. Nothing to be done for it, though. \"All right. You have fun with your friends, Taylor. I suppose we'll probably see one another around.\"\n\n\"Yeah, if you're gonna keep fucking my sister,\" she said as we stepped aside to let Mrs. Pedretti past us. The words were said at full volume, mere feet from the passing parental volunteer; the woman simply kept walking, even as I sheepishly answered that I likely would. If the woman was offended at my admission, she gave no sign of it. \n\nGod, that girl.\n\n\"All right. Well... I guess see you later, asshole.\"\n\n\"Later, bitch.\"\n\nShe smiled, but the melancholy in her eyes was the same as I felt in my own heart. Breakups were shitty, regardless of the circumstances. For almost two years, I'd looked forward to the day when I'd stop having to see Taylor goddamn Stern five days a week. Now, I was sorry to see her go.\n\nI was hopeful, however. I hoped she'd reflect on what I'd said. I hoped she'd figure out what she wanted to do with herself, or at least find something to bring her a little joy and satisfaction. I hoped she'd set down all that bitterness and fear she carried on her shoulders. \n\nI really hoped I didn't need to take action to stop her. \n\nSomehow, though, I didn't think I would.\n\nI gave Taylor a headstart into the fieldhouse. Once I entered, it was a fracas of tearful goodbyes, farewell selfies, proud stares at hard-earned diplomas. This would be a day many of them would remember forever. Now that it was real, no longer the foreshadowed event of the rehearsal but the tangible fact of having graduated, students thronged their old English teacher. Megan approached me with Cassie, the three of us letting Cassie's grandmother take a picture. As we posed, Megan murmured out of the corner of her mouth. \n\n\"My mom's fine watching Robby tonight; told her I had to work a night shift. Got room for one more?\" Somehow, her smile never faltered. The woman ought to be a ventriloquist.\n\n\"Ask Cassie about the dress code,\" I muttered back. \n\n\"You think I got her that outfit without splurging on myself?\" \n\nLater, when Cassie tagged me in the photo after uploading it to her instagram, I'd shake my head at the look on my face after Megan grabbed my ass a split second before her mother hit the button.\n\nI posed for pictures, congratulated elated students and proud parents, stashed still more open house invites. None were so alluring as the one for next weekend, with its promise of a bedroom tour. The young woman who had made that offer sought me out before long as well.\n\n\"Hey, Mr. Canon. Have you met my father?\" She gestured to the man beside her, a dauntingly attractive man of delicate features but hard eyes. Beside him stood a woman that I would have recognized as a trophy wife without having heard a single word about her. Tabitha's stepmother, the second Mrs. Hutchings, was a slender Asian woman who looked like she was a good deal closer to her stepdaughter's age than her husband's. Close to my own, if I had to guess. Mrs. Hutchings was intensely beautiful, and she wore an expression that was unimpeachably gracious yet simultaneously revealing intense disinterest in the proceedings.\n\nHer father extended a hand.\n\n\"Mr. Hutchings! Good to meet you. I'm--\"\n\n\"Say no more, Mr. Canon. My daughter's told me all about you. Said you're her favorite teacher. She wasn't too much trouble, I hope?\"\n\n\"Far from it. 'Pleasure to have in class,' as I'm sure you've heard a thousand times over the years.\"\n\n\"Yes, well, let me say I had my doubts about letting her attend public school, but you people run a tight ship here, Canon. By all accounts you've done fine work with my Tabitha. You're to be commended.\"\n\nBy sheer chance, Amy was walking past in that moment. Recognizing Tabitha from her own honors level junior English, she leaned in to add, \"Mr. Canon is an excellent teacher. We're lucky to have him.\"\n\nI managed not to choke on my tongue. Tabitha spared me from trying to reply to that, thankfully. \"Daddy, if it's all right, I'd like to stay here and hang out with my friends for a while.\"\n\nHe smiled indulgently, the look of a man pleased with himself for having sired something so pleasing. \"Of course, princess. Be home in time for dinner. Understood?\"\n\n\"Yes, sir.\"\n\nHe bent in to plant the briefest of kisses on her forehead, and with a magnanimous parting nod to me, gathered up his wife and made for the door with a bit more haste than was seemly.\n\n\"Sorry about that,\" she said. \"And sorry about this, too, but... well, you know how it is. Taylor said to remind you about the present? If you're interested.\"\n\n\"I suppose you're not going to give me a hint either.\"\n\nTabitha shook her head. \"She told me not to. Even if I did, it would probably only... yeesh, that was almost a hint. Sorry. Though she did ask me to pass along a message. Hang on.\" She fidgeted inside her graduation gown until she came out with her phone. Thumbing through texts, she seemed to find what she was looking for.\n\n\"She writes, 'I got this for him back when it still made sense to get it for him. Then we broke up and fuck knows I ain't got no use for it. Was finna just leave and never tell him...'\" Tabitha wrinkled her noise. \"Ugh, no wonder she flunked out. Anyway, she says, 'I appreciate what he said, so fine, what the fuck ever, if he wants it, it's his.' Except she used its, not it's.\"\n\nI waited for a moment. \"That's it? She didn't say what it is?\"\n\n\"Do you want it?\"\n\nMy eyes narrowed. \"Do I?\"\n\n\"I don't know, Mr. Canon. All I know is if you do, I have more instructions.\"\n\nI sighed. Here's hoping it was a fruit basket or a gift card and not the deed to Mrs. Horen's house. \"Oh, good god. Fine. I'll take it.\"\n\n\"You got it.\" Like that, Tabitha was back on her phone, thumbs tapping hastily at keys.\n\nI didn't bother to hide that I was reading over her shoulder. He says he'll take it. The recipient, according to the contact name at the top of the page, was Bitch, Stupid.\n\n\"Taylor, huh. Does she know you have her saved like that?\"\n\nShe shook her head and pulled up another contact. \"No, that's not Taylor, and no, she doesn't know. This is Taylor.\" Bitch, Boss. \"If I enter them like that with the commas, they stay side by side. Convenient.\"\n\n\"Dare I ask what you have me saved as?\"\n\nShe smiled, scrolling down through her contacts and finally tapping on one and holding it up to me. Free Tutoring Service. \"In case anyone snoops, I didn't want them to find an entry for 'Guy Who Spanks Me Until I Come.'\"\n\nThank goodness everyone else was wrapped up in the moment and not paying attention to us. \"I approve.\"\n\nThe phone buzzed with the reply from Stupid Bitch. (Inwardly, I felt a bit guilty that I didn't know whether that referred to Abbie or Cassie. Tabitha was not someone whose estimations of others' intelligence was known to be charitable.)\n\ntell him 2 go 2 his room, it read. Abbie, then. Cassie at least used words and capital letters. Hell, it automatically capitalized; Abbie just didn't like to be told how to punctuate.\n\n\"My classroom?\"\n\nTabitha nodded. \"I believe so, yes.\"\n\nThere was a problem with that, though. \"Uh, I don't have my keys any more. I can't get in there. I'm not sure I could have gotten through all those doors and gates when I did. Horen doesn't place a lot of faith in us not to burgle the place, I guess.\"\n\nTabitha texted as much while I paused to greet another student, Dan Rietty, and his parents. \"Mr. Canon's a good teacher,\" he told them. \"I really liked some of the questions on your final, by the way,\" he added back in my direction.\n\nI'd never felt so relieved to be demoted from excellent to merely good. \"I'm glad. You had some sharp answers, too, Dan. I'm proud of you.\" I did not, in fact, remember Dan's answers, but he was here diploma in hand, so he must have done well enough.\n\nDan's family moved on. Abbie's reply was already waiting. \"She says it's open?\" The girl shrugged.\n\nI sighed. I'd already said yes. Why the hell not.\n\nSure enough, the way was clear. Gates unfastened, doors unlocked. Taylor had once made a glib admission that she'd made copies of my house keys -- which I was only now realizing I might need to have my locks changed -- so I could only assume she'd done the same to Randi or Mrs. Horen and their keys to the school. \n\n\"So you and Taylor broke things off?\" Tabitha asked quietly at my side. Not that there was anyone around. She could have screamed it and no one would have heard.\n\n\"Word gets around, it seems.\" I shrugged. \"But yes. I told her I'd had enough. Twice, actually.\" \n\nShe didn't reply, but even in the farthest corner of my field of vision, the broad smile plastered on her face was unmistakable. \"Schadenfreude?\" I asked.\n\n\"No, just... it'll be better without her. We'll be better without her. I'll learn more. Get more playing time, too. Don't construe this as my having self-esteem issues, but she's, um, a lot of competition.\"",
        "\"Different men have different types, same as women, Tabitha.\"\n\n\"Yeah, well unfortunately, my type of man is into the whole perfect legs perfect ass perfect tits aesthetic.\"\n\n\"Believe me, Tabitha. I would never peg you for having self-esteem issues.\" I paused, pulling her in for a brief kiss. We were in the middle of the school's central corridor, but why not? Nobody was around. If they were, they would be a coworker, and would just shrug it off as nobody else's business. \n\nLord, Taylor. It was like she'd wanted to be able to fuck me in the middle of a faculty meeting.\n\n\"You're much prettier than her,\" I told her. So long as one confined prettiness to the face, anyway. And was generous with \"much.\"\n\n\"I know,\" she said smoothly. \"Though I'll notice you didn't challenge any of my other ratings. I really will get that tit job, you know, if--\"\n\n\"I know. But no. Sure, I've always like 'em big, but you're on your way to convincing me I've been missing something. Keep building your case.\"\n\nShe grinned, mollified, and on we went.\n\nThe door to my classroom was closed, but in the otherwise dark and gloomy corridors, it was the only one with light streaming from inside. The windows no longer had their paper coverings, removed in preparation for a redecoration in the fall, but we still couldn't see anyone from the entrance. I braced myself. \n\nIf I'd had to make a guess, I would have guessed that I'd walk in to find Taylor naked on my desk, a last ditch effort to win me back, or maybe just a petulant demand for non-drugged breakup sex. \n\nMy second guess: Abbie and Taylor together, a gambit to show me she'd gotten over the step-incest thing and was willing to play ball, be chill about the status quo. \n\nIf I'd made a third, then maybe, just maybe, she'd have Candy and Isa in there with them, too, a full-on Stern-style \"down with dykes\" revelation of their awokening, a great big classroom orgy at the ready to usher in a summer of debauchery that would include her. \n\nFourth? She'd made Abbie take a dump on my desk.\n\nI opened the door. \"All right Taylor, let's--\"\n\nTaylor was not in my room. Two other people were. \n\nOne was straight from my short list of suspects. Abbie sat on the corner of my desk in a loose-fitting t-shirt and denim shorts that went down nearly to her knees. That she wasn't dressed to titillate was actually much more surprising than her being here. As I walked in, she looked up from her phone with a sly grin. \n\n\"Sup, C-dawg. Long time no see.\"\n\nThe other occupant, however, was not on the short list. Nor the long list, nor any list at all aside from my second period class roster.\n\n\"Katie...?\"\n\nKatie Medina's reply was muffled by her gag, what turned out to be a wadded up ball of paper towels from the dispenser I kept in my desk. Which, it turned out, was now sitting beside Abbie, who turned out to be offering to me the key to a pair of handcuffs which, it turned out, were the reason Katie wasn't moving from her desk at the front of the room. \n\nShe was still wearing her graduation gown from the ceremony, though the cap looked to have tumbled to the floor at some point.\n\nI dropped the key twice in my haste, but the cuffs fell open. She coughed fretfully into the paper towels, and though she immediately removed them, I winced at seeing that a layer of paper remained stuck to her tongue, and probably inside her cheeks as well. She rushed over to the wastebasket, attempting to spit the clingy bits from her now completely dry tongue. Removing the gag did nothing to stop her from gagging.\n\n\"Get her some water, Tabitha!\" I snapped, patting the poor girl on the back what I hoped was comfortingly. \n\n\"Sure! Um, but I don't have any way to...\"\n\n\"There's a bottle in my bottom right drawer. Hurry!\"\n\nTabitha rushed to obey, squeezing past where Abbie nonchalantly sat back, popping a Flamin' Hot Cheeto in her mouth from a bag in her purse. It crunched noisily. As Katie struggled to de-mummify her tongue, I whirled on her. \"What in the name of all the fucks in hell is going on here?!\"\n\n\"Surprise,\" she said dryly. Some crumbs dropped out of her mouth; she lazily brushed them off her lap. \"For the record, I told her not to do that.\"\n\nHow unlike Taylor to ignore good advice. \n\nIt wasn't often that I shouted. I raised my voice all the time, but that was an essential fact of life inhabiting a room with thirty energetic teenagers. Shouting, however, was rare. Taylor had often tried her best pushing me to that point, and it seemed she wasn't yet done.\n\n\"You have about three seconds to start making explanations for why there is a student chained to a desk in my classroom while you sprinkle Cheetos crumbs on my floor for the goddamn rats!\" I roared. I hadn't meant for the crumb situation and the hostage crisis to receive equal weight, but it was what it was.\n\n\"Rats? You serious?\" She raised her feet onto the desk nervously.\n\n\"One...\"\n\n\"Jesus Christ, dude. Shoot the messenger, why don't you.\"\n\nKatie wheezed into the wastebasket in the midst of trying to peel dry paper off her tongue. Or maybe she was about to throw up. I was just glad she wasn't running out of the room screaming.\n\n\"I'm about to.\" I thrust up two fingers.\n\nAbbie drummed her fingers on my desk and gave me a look that bespoke how my counting at her was apt to go over. Goddamn oppositional-defiance! Goddamn Serenex! Goddamn Taylor Stern!\n\nI forced my volume down as low as it could, around what I usually used for a full classroom. \"Level with me here, OK? I am freaking the hell out, and I don't think that's just me being reactionary. Tell me something. Anything.\"\n\n\"It's Taylor, man. You know how she is. Told me what she needed, so here I am. I was in fuckin' bed and she comes in barking at me at the crack of noon get get my ass out here. And what's my thanks for a job well done? I got your ass all up in my grill. Fuck me, man, this job sucks. Need to fuckin' unionize.\"\n\n\"And what was it she told you to do.\"\n\n\"Just to bring her here and wait for you.\" She shrugged.\n\n\"Did she tell you to bind and gag her, or do you just walk around with handcuffs in your--\"\n\nTabitha returned from the fountain, rushing over to Katie with the water bottle. The young blonde spritzed some into her mouth, swished, and spit it into the empty wastebasket. A few more times, and she seemed to have loosened the paper to the point where her tongue was free. Meanwhile, I tried not to notice how much cleavage was visible hanging beneath her gown. These girls had given me bad habits.\n\n\"Katie, oh my god. Are you all right?\"\n\nShe remained bent over. \"Ugh. Yeah. Man, that was nasty. Thanks, Mr. C.\" She kept at it with the water bottle, swishing the water around to get the dregs and spitting into the trash.\n\nI pivoted to the others. \"Both of you. Talk. Now.\"\n\nTabitha defended herself first. \"I didn't know anything about whatever that was,\" she insisted.\n\nAbbie shot her a swift glare. \"Don't hate on me. I told Taylor this was a horrible idea from the beginning, C-dawg.\"\n\n\"Well you obviously know something! If you don't know the why, you can at least start with the goddamn how! I just watched her graduate! Did you chloroform her in the bathroom or something?\"\n\n\"This school, man, people getting drugged all over the place. Somebody needs to crack down,\" quipped Abbie. I didn't laugh.\n\nScrew it. I turned back to Katie, who seemed to have more or less recovered. \"Katie, what did they do to you? Are you OK?\"\n\nShe nodded. \"Yeah, I think so, Mr. C. Those paper towels were frickin' gross. You know what it... Did you ever try the saltine challenge?\"\n\n\"No.\"\n\n\"Oh, well it's this thing where you have to eat six saltines in one minute. It sounds really easy, right? Because it's just crackers, and I'd swear I've eaten six crackers in a minute like a hundred times -- not literally a hundred times, because crackers are basically just pure carbs and who needs 'em -- but man, suddenly when it's a challenge, it's impossible. Your mouth gets so dry after like three of them, and--\"\n\n\"I'm familiar with the premise,\" I interjected.\n\n\"Oh. OK. Well anyway, it was like that, kinda of. But stickier.\"\n\n\"Did they hurt you? What happened?\"\n\n\"Hurt me? Eh, the cuffs were a little tight, but I think it'll be fine.\"\n\n\"Katie. I understand you're having a moment, but I need you to tell me... WHAT. HAPPENED.\" I was this close to losing it.\n\n\"Oh. I was in the fieldhouse waiting in line for my diploma, and Abbie came over and told me you wanted to see me in your classroom. So I said OK, sure. Keyed us right in -- though I swear, Mr. Canon, I don't know anything about where she got those keys.\"\n\nI waited for her to go on.\n\nShe stared at me unblinkingly.\n\n\"That's it?\" I turned back to the others. \"She just followed you down here? What the hell did you handcuff her for?\"\n\nThe answer to my question, however, came from behind me. \"Oh, that was my idea. I mean, Abbie's cuffs, but she was just doing me a favor loaning them to me. Didn't think the paper towel thing was gonna be that nasty, though. My bad, for sure.\"\n\nI was starting to get dizzy from all this spinning. Or maybe I was losing my mind.\n\n\"You... what? Why?\"\n\n\"Taylor said you wanted to do me.\" She suddenly gasped, mortified. \"Oh my frickin' god, was she punking me? Oh my gawd I am so embarrassed! I can't believe I... oh frick, oh frick, oh frick!\"\n\n\"Katie, I promise you, I never said--\" \n\nMy knees faltered, and I fell back onto a desk. Tabitha rushed to steady me, but I shrugged her away. My head was spinning. \"When... when did she...\"\n\n\"Who, Taylor? Oh, right before the thingy. During the rehearsal? She said afterward I should come down here so you and I could, you know, do it. Sorry, it feels so weird saying that to a teacher.\"\n\n\"Oh my god, she didn't...\"\n\n\"Show him your tits,\" Abbie instructed her.\n\nKatie leapt into action. \"Oh! Right, duh.\" In the blink of an eye, she tugged the zipper of her gown downwards and shrugged it off.\n\n\"Katie, wait!\"\n\nExcept I was already too late. Beneath her gown, Katie Medina, GHS's now-former It girl, was completely and totally naked.\n\nIt was all of her almost exactly like I, and any hetero male at GHS, had imagined. (And we had all imagined.) A little bit thin, a little bit tall, and every single last piece of her about her just so goddamn cute you wanted to fuck it individually. She was almost the exact midpoint between Tabitha and Taylor. Tall, but not towering. Thin, but not skinny. Dark roots, but the bulk of her dyed pale blonde. Toned, but with all sorts of well-placed curves. Big tits, yet almost exactly one hair shy of being so big they distracted from the rest of her. A habitual smile from a lifetime of people who'd been unable to resist smiling back.\n\nShe flinched at my shout. \"What? Oh frick, did you wanna take it off me, Mr. Canon?\"\n\n\"No!\"\n\n\"Oh.\" She was obviously confused about my reaction, though she did nothing to cover herself. Did she always keep her pussy waxed, or was that for my benefit? \n\nStop looking at her pussy, Canon!\n\nBut Canon yelled back at me. Stop being a pussy, Canon!\n\nI am not a pussy! we yelled in unison.\n\nIt wasn't easy to turn away from the naked blonde cheerleader -- now former cheerleader -- standing in the middle of my classroom waiting for me to fuck her. Still, I managed. Abbie was popping another Cheeto in her mouth. Tabitha at least had the grace to look down.\n\n\"You two. Strip.\"\n\n\"Yes, sir.\" Tabitha immediately obeyed, deftly removing her gown and getting to work on the dress beneath it. A reproving look was all it took to communicate that she should leave her stockings on.\n\n\"Whoa, it's getting crazy up in the heezy,\" muttered Katie.\n\nAbbie, meanwhile, dramatically imbibed another Cheeto, brushed her fingers off on her shorts, and hopped down from the desk. \"Now you're talking.\" For her, I ordered no exceptions. She stripped bare, tossing her t-shirt, shorts, and underwear at random around the room. Slingshotting her panties by the waistband, Abbie laughed triumphantly as they landed draped over the American flag by the whiteboard.\n\n\"Oh frickin' wild -- is that a tattoo, Tabitha? I never would've figured someone like you would have a tattoo, especially not there.\" Katie squinted. \"Is that a...\"\n\nShe recognized it, and fell silent, gazing at me in awe.\n\n\"Now me.\"\n\nAbbie and Tabitha understood me immediately, and worked in quiet unison on my own clothes. It was a formal day, so I was in a full suit save for the jacket. As they squatted to untie my shoes, Katie asked behind us, \"Um, so... am I supposed to help?\"\n\n\"No. I have other plans for you.\"\n\n\"Oh. Should I text my parents and tell them I'm gonna be a bit?\"\n\n\"So long as you don't tell them why.\"\n\nShe snickered like I'd said something ridiculous. \"Mr. C, whatever you do with students and staff is nobody's business. It's for the best that way.\"\n\nHer purse was tucked behind my desk; she retrieved her phone and composed her message while the others finished undressing. My clothes went folded neatly on the desk, careful to avoid crumbs.\n\nI pointed to a spot on the floor near the middle of the room, right near where I began classes on a normal teaching day. \"Abbie, right there. On your back.\"\n\n\"Hell yeah, baby. This is gonna be fuckin' tits, yo.\" She pranced across the room, her own tits bouncing madly, and plopped herself down. Her knees bent, thighs spread.\n\n\"Tabitha... sit on her face.\"\n\n\"Wait, what? Oh this better be one of those things where you're gonna fuck me while you suck face with the stick girl. Because if you think you're gonna shut me up just by havmmf smmfmm...\"\n\nThe rest of it was lost in Tabitha's cunt. I gestured for her to spin, so she'd be looking away from Abbie's body rather than across it. Nothing intelligible slipped out during the transition.\n\n\"Make her come, fantasy slut.\" I raised my voice to be heard through the barrier of the crotch on her face.\n\nTabitha's eyes fluttered as Abbie's tongue got to work. Her chin jerked up involuntarily as she sucked in a sudden breath.\n\nI took my position at the front of the classroom, walking my cock right into Tabitha's mouth. \"Now you, me,\" I said simply. \"If my cock leaves your mouth before I say so, you fail the course.\"\n\nLike that, she was deep throating me. She gripped my ass to hold me inside her mouth. I don't think I could have bucked her if I tried.\n\nI did not try.\n\n\"Have a seat, Katie.\"\n\nKatie, who by then had moved from texting to browsing social media, looked up as if stung. \"Oh! Yeah, sorry, cool.\" She scurried across the room, though rather than sitting opposite me, she sat off to my right, two seats back.\n\nRight. Her assigned seat this past semester.\n\n\"Frick, that's cold. Ya know, people think it's weird that I wear shorter dresses in winter than I do in summer, and maybe this is weird to say to a teacher, but since we're all naked and you're, you know, in Tabitha Hutching's mouth and all, I dunno. Anyhoo, this is exactly why. When the AC is on the desks get so mother frickin' cold you don't even know. But in the winter, I barely go outside, so like, who cares if my dress is short.\"\n\nShe waited for me to speak, but when I didn't immediately say anything -- Tabitha was managing to engage her tongue and throat at the same time -- Katie posed a question. That was almost too familiar of a sound. Her voice had a naturally questioning quality as it was, whether it was seeking agreement (\"right?\"), feigning confusion to get someone to do something for her, (\"is this right...?\"), or the real thing (\"um, right?\").\n\n\"So, like, is this a regular thing for you guys? Abbie was telling me how you're this amazing lay, and I guess you do have a pretty big dick, at least compared to other ones I've seen, which isn't that many, but still.\" She flipped her hair over her shoulder, as if it wasn't the only modesty she had left to her. Her legs weren't even crossed.\n\n\"Not as regular as it should have been,\" I replied after a moment's consideration. More specifically, I'd been considering the way Abbie's tits flopped in synch with Tabitha grinding her pussy on her face.\n\n\"Oh. Yeah, that makes sense. And just so you know, I'm normally more shy about being naked than this, but you took long enough that I had time to psych myself up. That was why I took off my clothes under my gown, so I'd be, like, pre-naughty? Oh my gawd it's weird saying the word 'naughty' to my English teacher.\"\n\nTabitha's azure eyes honed in on mine imploringly, pleading silently for my come, promising that she would never leave. A faint moan issued from between her thighs.\n\n\"Anyway, I was sort of nervous at first, but I figured since they said you'd already done it with those two, plus Taylor, plus some other girls, I didn't wanna look like I was inexperienced. But now that everybody else is naked, it's actually kinda no big deal, which is so weird considering you're, you know, an adult and all.\"\n\n\"We're all adults now, graduate.\"\n\n\"Actually, since you brought it up, I don't actually have my diploma yet. Taylor said I was still a student until I had that. If they're closed once you're done doing us, can I get mine from you, or do I have to come back another day?\"\n\n\"I'll take care of it.\"\n\n\"Thanks, Mr. Canon! You're the best.\" She bounced happily in her seat, blonde hair and apple breasts swinging side to side. \"So, do you want me to help somehow, or...? I dunno what's left with your thing in her mouth. But you know, my ex-boyfriend liked it when I put a finger in his butt, but then I did that to my new boyfriend and he like freaked out. Said it was a 'gay thing,' and I'm like, 'buh...' We're doing a joint grad party though and everything's all set up and paid for, so I figured it'd be weird if I broke up with him before that. Plus I'll get way less stuff if his family hates me, right?\"\n\nI disregarded the questions. Katie, like Taylor, had been in my class both junior and senior year. She knew full well how susceptible I was to being lead away from my objectives. \"When were you dosed? At Cassie's party?\" The memory was fuzzy, but I was sure I'd heard Katie's name from Taylor's mouth. I felt like it was around that time, but a few weeks ago was years ago in Serenex time.\n\n\"What party? You mean Cassie Brown?\" She shook her head. \"Nah. That party sucked anyway. I got pretty drunk, though. Anyway, no, it was... Thursday? Or Wednesday. What day did you come back last week?\"\n\n\"Friday.\"\n\n\"OK, so Thursday, then. I remember because I was really stoked we had a sub for most of the week until I showed up Thursday and suddenly I was like, what was I even thinking, Mr. Canon is an excellent teacher, and then you were back the next day and I was really glad.\" Then she frowned, which since it was Katie Medina meant the lower lip automatically thrust out in an adorable pout. \"Where were you all week anyway, Mr. C? You never said. Three days is a long time to be out. Did one of your grandparents die or something?\"\n\nEven the casual mention of dead grandparents wasn't enough to dull the heat throbbing out of me into Tabitha's mouth. How could she breathe like this? Abbie was kneading Tabitha's ass, and as I watched, she took a page out of Katie's ex-boyfriend's playbook. A high-pitched noise squeaked out of her throat, but soon became a low moan of excitement. She humped the younger Stern's face with a bit more urgency.\n\n\"My grandparents are fine, thanks. Now tell me, how did they do it? Ambushed you in the bathroom? Call you down to Barbour's office?\"\n\nShe shook her head. \"No, it was in Mrs. Hagan's class.\"\n\n\"You, um... I mean, did she...\"\n\nIn the middle of my question, I completely lost my train of thought. Goddamn, Tabitha was too fucking good. That girl deserved her A+.",
        "Except no, that wasn't it. My teacher's pet was earning her milkbone, but it was everything else, too. I was here, in my favorite place, doing my favorite thing. Namely, fucking two beautiful, enthusiastic young women in the manner of my choosing.\n\nIt was Tabitha. It was Katie. Abbie, too. It was seating charts. Fake blondes. Real blondes. Tattooed brunettes. Panties on a flag. Caps and gowns. Big tits, little tits, huge tits. Leaky pussies and tightly sealed mouths. Gradebooks and extracurricular lessons. The kinks of ex-boyfriends. Rewards for good work. Discipline for misbehavior. A meter stick. Dry erase markers writing and rewriting on a whiteboard. Engaged students. An excellent teacher. \n\nI hated how well Taylor knew me. That this was everything I'd ever truly wanted, the intersection of my two great loves. Thank god the smug bitch wasn't here to see her little plan succeed.\n\n\"Well, I guess they dosed me in Mrs. Hagan's class,\" Katie continued as I trailed off. \"If you're talking about the programming stuff, I don't really remember it, but I guess that was in the gym with everybody else. You know, the big convocation.\"\n\n\"The what?\"\n\nThe question was reflexive. It required no answer. The full depth of her meaning was perceptible even to the limited brainpower I was devoting to anything but processing nerve endings and admiring the abundance of female flesh surrounding me. \n\nWednesday, I'd already deduced, they used the faculty meeting to get the teachers. Might have missed a few, but those were contractually mandated, so attendance was always at or near a hundred percent. There, they make the faculty accept with my every act, then set up a covert convocation for the next day. Did they go room to room, spraying unsuspecting students and then herd them in groups to the gym? Or did they simply conscript the faculty and have them tackle it all at once with their own supplies? It didn't matter. The whole student body, gathered en masse, helpless and unresisting in one giant assembly in the bleachers. Taylor and whomever she selected to assist her going down the rows, a few drops on each tongue, then taking the mic and... \n\nI came. I grabbed Tabitha's hair and smashed her face down, jizzing straight down her throat. The rough treatment was enough to push her over the edge, and when I let go, the final few spurts splattering across Abbie's tits, Tabitha collapsed sideways, thighs locked around her playmate's face, holding her in place until she was good and done.\n\n\"She did the whole school.\"\n\n\"Yeah, pretty much,\" Katie nodded. \"So um, were you gonna do me next, or is there a line, or what? Or are you done now?\" She telegraphed her disappointment with another simpering Katie-pout.\n\nTabitha at last released her death grip on Abbie's face. The girl rolled away, gasping, but giggling in the midst of it all. \"Ladies and gentlemen, Taylor gives you: the graduating class of 2020!\"\n\nI stood over her. A dribble of cum trickled out; Abbie tried to dart over and catch it but it caught her on the nose. She wiped it off on her arm. \"Only the seniors?\"\n\n\"Well, no, that was just a cool line. Can't really hide all that noise if we don't get everybody.\"\n\n\"Everybody.\"\n\n\"Everybody who was in attendance,\" Tabitha amended, forcing herself back to her knees with a little help from Abbie. Then she coughed and some of my cum splashed down her chin. She grimaced and sucked it back down.\n\n\"Classy.\"\n\n\"Shut up, Abbie.\" She looked back up to me, as calm as if she hadn't just belched up my jizz on herself. \"We were missing about thirty-some students who were absent or off-campus, so Officer Barbour called them down in groups to her office and took care of the rest Friday and Monday. We were so worried you'd notice something was going on, but we made sure not to call any of your students during your class. Guess it worked.\" She hazarded a grin.\n\n\"Did everybody know?\"\n\nAbbie snorted. \"Yeah, like we could tell Cassie or her mom and not have you instantly find out.\"\n\n\"You're doing it with Cassie Brown, too?\" Katie giggled, and it was such an adorable noise I couldn't tell if it was mirthful or malicious. \"And her mom? That's frickin' crazy.\"\n\nTabitha explained, \"We had Ms. Salata ask her for help with a side project during the, erm, convocation. Not to equate teaching with babysitting, but in this case, she babysat to our satisfaction.\"\n\n\"Why?\" I threw my hands in the air. \"What in the hell would possess her to turn the entire student body into... into my...\"\n\n\"Into what? Is there some secret club or something? Of, like, F buddies? Not to get R rated or anything.\" She gasped, grin broadening. \"Is it like some exclusive thing for the hottest girls? Am I in? I'm in, right? Tell me I'm in. If Cassie Brown is in, I am so in.\"\n\nTabitha and Abbie looked from her, then up to me. \"Why? You really gotta ask? This one's on you, C-dawg,\" said Abbie.\n\n\"On me?! How in the hell is this on me?!\"\n\n\"Day one, man. When you put the stuff on her chapstick? She told me what you said to her.\"\n\n\"I'm pretty goddamn sure I didn't say, 'brainwash the whole school!' I only made her promise to quit copying homework and stop misbehaving in class!\"\n\n\"Uh, yeah. Exactly,\" Abbie said, as if I were being obtuse. \n\n\"Exactly what?\"\n\n\"Sometimes I feel like you don't know her at all, C-dawg,\" Abbie answered, shaking her head. \"If she ain't allowed to break the rules and stick it to the Man, whatcha gonna do but rewrite the rules and make the Man your bitch?\"\n\nTabitha nodded, albeit somewhat guardedly, to second her support. \"You did read her essay, right Mr. Canon? I mean, what did you expect her to do? Taylor Stern isn't going to take that from you lying down.\"\n\n\"That's not what I heard,\" giggled Abbie. \"HEYO!\" Katie laughed with her, and even Tabitha let a little grin slip.\n\nShe gave me the freedom to do anything I wanted with my students, so she could give it to me without breaking the rules. My god.\n\n\"Count your blessings, dude. She almost didn't tell you we did it. She was hella pissed after you dumped her mid-coitus, C-dawg.\"\n\n\"So what on earth changed her mind? Did repeating the dumping this afternoon toggle the switch or something?\"\n\n\"Because of what you said. She didn't tell you?\"\n\n\"She texted Tabitha that, but I don't even know what I said. I've been her teacher for two years, and her lover for two months. I've said a billion things to her!\"\n\n\"Lover? Awww!\" Katie gushed.\n\n\"To Stan,\" she said. \"In the truck the other day.\"\n\n\"What?\" It took me so off-guard I had to fight to remember the conversation. Except... \"How did she know what I said? She was in the back end of the truck, zonked out of her mind.\"\n\n\"Yeah, well... my own dosing may have been slightly, ya know, bullshit,\" Abbie answered, grimacing. \"Look, I'm sorry, OK? You just looked so proud of that stupid bratwurst trick, and I figured it might get me out from the middle of you two if I played like it worked -- which by the way it did -- and yeah, so when she was throwing her big goddamn hissy fit all over the house that night once she came to, I told her what you said.\"\n\n\"Why, what'd you say, Mr. C?\" asked Katie, guzzling down the drama with relish.\n\nI was still processing, so Abbie replied for me. \"He told her dad she's not a piece of shit like he thinks she is. Not sure how ol' Stan's gonna process it, but he did take her out on a daddy-daughter date that night. Hell of a lot easier to live with her after, that's for damn sure.\"\n\n\"So my prize for putting in a good word for her is...\" I shook my head.\n\n\"Having sex with the one, the only, Kaaaaaaaaatie Medina!\" she announced boisterously, waving her hands in the air, delivering a sound effect for the roaring crowd. \"That's sort of romantic, actually, when you think about it. In a really weird kind of way.\"\n\n\"I'm... I'm going to...\"\n\nI didn't know. Like a hundred times before, here I was, standing in my classroom, confused and aroused and livid and enchanted by goddamn Taylor Stern.\n\nAbbie finished my sentence this time. \"You're going to enjoy your summer off -- scratch that. We're going to enjoy your summer off. Then you two can figure out what you wanna do with it all in the fall.\"\n\n\"I do not need her input.\"\n\n\"Well you're gonna get it,\" Abbie countered. \"She already re-enrolled for the fall before your fake firing, yo.\"\n\nFake! I knew it! \"You weren't even expelled until after that!\"\n\nShe rolled her eyes. \"No duh. But you were gonna flunk her anyway, remember?\"\n\n\"I've never failed a student,\" I retorted, my rote response at the ready. I didn't miss Katie surreptitiously inspecting my cock, which was well on its way to readiness for round two. \"Unfortunately, some students do choose to fail my class. And I assure you, Taylor Stern--\"\n\n\"--deserves to fail,\" Abbie finished in perfect unison. She shook her head. \"That stuff is a trip, huh? A month and a half of after school work sessions, and it never dawned on you that you hadn't graded a single one of her assignments, never passed along a shred of makeup work to her other teachers? I tell ya, C-dawg, I expected more out of a fella smart as you. Wouldn't have had to go through the whole expulsion bullshit if you hadn't gotten the cops involved. Makes me a little nervous to think of my dear sister and I taking your class in the fall, entrusting our education to a guy whose students are running the table on him.\"\n\n\"You... you're...\"\n\n\"I'm taking speech, too, so brace yourself for double the fun, baby.\" She pushed herself up to her feet, but on her way up made sure to take a long lick, then a deliciously wet suck, on my cock. \"Tell you what. Why don't we leave you two alone for a bit, and if you're still pissed off after Cheerleader McGee here gets through with you, we'll do a little cheering of our own, huh?\"\n\n\"Oh, that was clever,\" Tabitha granted generously.\n\n\"Or hey, if you really wanna pitch a fit, then I guess we'll see you in August. Every day.\" She kissed me on the cheek.\n\n\"You're so lucky,\" sighed Tabitha as she let Abbie lead her out of the room. \"Wasted most of the year in here.\"\n\n\"Is he that good, you guys?\" Katie called after them.\n\nAbbie ignored her, opening the door to the hallway. \"Call me clever, but I can't wait to see what a cunning linguist you are. My turn, Tabby.\"\n\n\"Fair enough, but do not call me Tabby.\" The two sauntered out into the hallway, as naked as if the halls of GHS were the girls field locker room. Which they may as well be now.\n\nKatie adjusted herself in her seat, posture erect, hands folded together cheerily. \n\n\"So... what happens now, Mr. C?\"\n\nI snatched the blue marker from the tray and uncapped it. \"Come to the board. You'll need this.\"\n\n*\n\nTHE END! That's the conclusion to Teacher Her A Lesson. I hope you had some fun with it, maybe a feel or two. It was so much fun to write.\n\n \n"
    ],
    "authorname": "Svalbarding",
    "tags": [
        "male dominant",
        "mind control",
        "student",
        "teacher"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/teaching-her-a-lesson-pt-30"
}