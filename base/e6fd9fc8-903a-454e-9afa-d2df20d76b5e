{
    "title": "Succubus Summoning 111",
    "pages": [
        "/**\n\nAUTHOR'S NOTE\n\nThis is a continuation of the Succubus Summoning series that begins with \"Succubus Summoning 101\"\n\n*/\n\nAt first Phil thought it was a nightmare. Then he hoped it was a nightmare.\n\nN\u00ffte stood at the foot of his bed with a whip in her hands.\n\nThat was an image you hoped was nightmare and not reality.\n\nPhil was feeling a little divorced from reality at the moment, especially after his visit to C\u03adr\u03bcl\u0259a. He didn't have much to anchor himself to anyway. Phil was currently imprisoned in Hell. Reality couldn't exactly be regarded as a concrete foundation out here.\n\nN\u00ffte was a succubus and a fearsome one at that. Out of the succubi Phil had encountered in the castle, N\u00ffte was both the most beautiful and also the most terrifying. There was no mistaking her for anything other than a demon. Her eyes were jet-black pools. Black horns protruded from her temples. A pair of black bat wings was partially extended behind her. A second pair of miniature bat wings stuck out from behind her ears. She was wearing a tight black PVC teddy with a deep V around the neck that showed off the lush curves of her cleavage.\n\nThis wasn't a dream, Phil realised with resignation.\n\nN\u00ffte smiled coquettishly and offered Phil the handle of the whip.\n\n\"Hurt me,\" N\u00ffte said. \"Whip me. Turn my creamy white flesh purple with bruises. Flay the skin from my soft, vulnerable body.\"\n\nPhil was confused. The last time he'd encountered N\u00ffte she'd taken great pleasure in torturing and nearly killing him.\n\nHe took the handle of the whip before he realised what he was doing. N\u00ffte offered and he took it automatically.\n\nShe hopped up on the bed next to Phil.\n\n\"Beat me, fledgling,\" she murmured huskily. \"Thrash me and I'll reward you.\"\n\nHer hot tongue ran up the side of Phil's cheek.\n\nPhil got up off the bed and N\u00ffte turned to present her ass cheeks to him. They were creamy white and totally exposed. The rest of her legs were covered in black fishnet stockings. A zip covered her crotch. It was partially open and moisture was dribbling out of the opening. The air was thick with the heady aroma of N\u00ffte's arousal.\n\nPhil felt the weight of the whip in his hand. It was long and unwieldy. He stared again at the perfect white globes of N\u00ffte's ass. She looked back at him and wiggled them invitingly.\n\nPhil wondered what he should do here. He didn't really relish the idea of lashing N\u00ffte's perfect white skin. What if he inadvertently hurt her and made her mad. That prospect terrified him. He didn't really like the idea of refusing her either. At the moment he had the whip and that was infinitely preferable to N\u00ffte having the whip.\n\n\"What are you waiting for?\" N\u00ffte said. \"Hurt me!\"\n\nPhil was galvanised into action. He swung the whip, but he hadn't done this before and wasn't used to how long the whip was. He got it all wrong and the tip slithered down N\u00ffte's cheek with scarcely more force than a wriggling worm.\n\nN\u00ffte shook her head.\n\nHe missed with the second stroke, but the third connected with a loud slap and left a red mark on N\u00ffte's ass. Phil swung again, but not quite as hard this time. He was embarrassed about the mark he'd already left on her pristine skin.\n\n\"No no no!\" N\u00ffte cried.\n\nShe turned, grabbed the whip and yanked it so hard out of Phil's hands he toppled forwards onto the bed.\n\n\"That's not how you do it at all,\" N\u00ffte said.\n\nPhil realised he was now crouched on the bed on all fours and N\u00ffte was holding the whip.\n\nNot good.\n\n\"You do it like this.\"\n\nNot good at all.\n\nThe whip struck with a bone-jarring thud and smashed Phil right off the bed and up against the wall.\n\nOw.\n\n\"And this...\"\n\nOw.\n\n\"And this...\"\n\nOw. Ow. Ow.\n\n\"Ahem.\"\n\nVerd\u00e9 appeared in the doorway. Phil was profoundly grateful for the interruption. N\u00ffte's fangs were bared in manic glee and she didn't show any signs of wanting to stop anytime soon.\n\n\"If you've quite finished beating our little fledgling to a pulp, Rosa would like to see him in her chambers,\" Verd\u00e9 said.\n\n\"Oh Verd\u00e9,\" N\u00ffte said. \"Lovely lovely Verd\u00e9. Are you in the mood for a little bit of fun?\"\n\n\"Mmm, always,\" Verd\u00e9 purred. She slipped seductively out of her gossamer green robes.\n\n\"Little fledgling hasn't got the technique right yet and I'm really in the mood for a jolly good thrashing,\" N\u00ffte said.\n\n\"Would you like me to use the special whip?\" Verd\u00e9 asked.\n\n\"Yes please,\" N\u00ffte purred.\n\nVerd\u00e9 touched the wooden door with her index finger and there was a short flash of green light. She drew her finger away from the door and a long green tendril followed it. It was as if new growth was sprouting out of the old wood at Verd\u00e9's request.\n\n\"Don't forget the thorns,\" N\u00ffte whispered.\n\nThe green vine multiplied into seven or eight different strands. Those strands grew more and more twisted and tangled. Wickedly sharp thorns sprang up along their lengths.\n\n\"A dash of poison?\" Verd\u00e9 asked.\n\n\"Mmm yes,\" N\u00ffte replied. \"Something that will give it a real sting.\"\n\nCrazy, Phil thought. Absolutely crazy.\n\nHis eyes widened as bubbles of liquid welled up from the thorns. A droplet hit the floor and sent up little puffs of white smoke. Verd\u00e9 pulled the new plant growth from the door and gave the vines a few experimental swings.\n\nAches or no aches, Phil decided it was time to get up and get out of here before Verd\u00e9 and N\u00ffte decided it might be fun to use that whip on him.\n\nVerd\u00e9 and N\u00ffte approached each other, their eyes gleaming with lust. The two succubi embraced and their lips met in a sloppy, passionate kiss.\n\nPhil stopped and stared. He didn't really have a choice in the matter.\n\nVerd\u00e9 and N\u00ffte broke off their kiss and looked at him. Their arms and wings were still around each other.\n\n\"Shoo fledgling,\" Verd\u00e9 said.\n\n\"Go play with Rosa,\" N\u00ffte added. She kicked the door shut in his face for good measure.\n\nPhil stood outside the door. In terms of his life, health and general wellbeing, it was probably a very good thing he wasn't in that room right now.\n\nHe heard a loud crack followed by a squeal of delight.\n\nHe still wished he was in there to see that.\n\nHey wait, he thought. Where were Rosa's chambers?\n\n\"Lower levels,\" C\u03adr\u03bcl\u0259a said. She was sitting cross-legged on the floor and drawing pictures of people screaming in agony as they were burned alive. The pictures were very detailed. \"Opposite N\u00ffte's chambers,\" she added.\n\n\"Thank you,\" Phil said.\n\nC\u03adr\u03bcl\u0259a looked up at him and smiled, her ruby-red eyes twinkling.\n\n\"You're welcome,\" she said.\n\nPhil had seen N\u00ffte and C\u03adr\u03bcl\u0259a's chambers. He'd visited Verd\u00e9's garden. He hadn't seen Rosa's quarters yet though and wasn't sure what to expect.\n\nA wide basalt walkway through a pit of fire in a cavernous hall was not exactly what he expected, but not altogether unsurprising either.\n\nThe main entrance was two large double doors made out of a dark red metal. The metal was warped in places as if by very high temperatures. When he slipped through and saw the room on the other side Phil understood why. The heat hit him first. The rest of the castle was pleasantly warm. Warm enough that Phil never felt a chill despite his nakedness. Rosa's chamber was much hotter, hot enough for a sheen of sweat to form on Phil's skin.\n\nOn the other side was a wide walkway made from large blocks of rough-hewn basalt. On either side of the walkway the floor dropped away into pools of bubbling lava. The walls were plain apart from stone sculptures of ferocious looking succubi. Thin streams of yellow lava ran down from their eyes, naked breasts and naked pussies.\n\nTentatively, Phil walked down the walkway. He jumped every time a flare erupted from one of the pools and sent flames swirling up to the ceiling.\n\nRosa was at the far end of the room, where the walkway widened out into a raised dais. She lounged casually across the arms of a sturdy stone throne. Normally Rosa wore nothing or close to nothing. Today she was wearing a spiky leather bodysuit that might have resembled armour had it not hugged the curves of her figure in such a revealing manner. There was something a little more demonic about her today, Phil thought. Her red horns looked a little longer than usual.\n\n\"This is your room?\" Phil said as he approached her throne.\n\nRosa smiled. \"This is where I greet visitors,\" she said. \"It's important to make the right first impression.\"\n\nRosa's left hand caught fire. Short yellow flames flickered over her wrist and fingers.\n\n\"Did they teach you any defensive magic at this school of yours?\" Rosa asked.\n\nPhil wasn't sure he liked where this was leading.\n\n\"Some shields,\" he replied.\n\nIt had been right near the start of term. At the time he was still getting over the shock that magic both existed and he was currently studying it at a college for warlocks.\n\n\"Show me,\" Rosa said.\n\nThe flames in her left hand coalesced into a single ball of fire. She casually tossed it up and caught it as if it was nothing more than a tennis ball.\n\nPhil tried to remember the lessons. It had been a long time ago. Now was it 'Shelrak dom Magique' or 'Kaldak mod Magique'?\n\n\"I'm not sure if I remember,\" he said. \"I'll try.\"\n\nHe waved his arms around in an impressive fashion.\n\n\"Shelrak mod Magique!\" he yelled.\n\nNothing happened.\n\nRosa lazily threw the ball of fire at him.\n\nFuck.\n\nThe ball of fire grew bigger. It went from tennis ball sized, to baseball sized, to soccer ball sized, to something wider than his shoulders in diameter. Its heat preceded it in a simmering wave as it arced through the air towards him.\n\nFuck. It was going to burn him to a crisp.\n\nThink. Think.\n\nHe could remember the lessons. He remembered that sense of awe when his own shimmering dome had appeared around him.\n\nThe fireball was moments away from striking him.\n\n\"Sheldak nida Magique!\"\n\nThe fireball impacted on his shield with a bright flash. Phil was knocked backwards. His brain felt like it had been half wrenched out of his skull. He was still alive though and thankfully unsinged.\n\n\"You didn't go whuff,\" Rosa said. Phil couldn't tell if she sounded pleased or disappointed.\n\nRosa swung her long legs round, stood up out of her throne and casually threw another fireball at Phil.\n\nFuck.\n\nHe made another shield and rocked backwards as the fireball struck it.\n\n\"Stop playing games, fledgling,\" Rosa said, throwing another fireball at him.\n\nFuck.\n\n\"Sheldak nida Magique!\"\n\n\"Who are you really?\" Rosa screamed.\n\nThe succubus was ablaze with fury. Phil had never seen her look this angry before. Fires flickered around the edges of her body in an orange-red nimbus. In the midst of the conflagration her eyes glowed with icy blue light.\n\n\"Stop pretending!\" Rosa cried.\n\nWhy was she so angry? he thought.\n\n\"I don't know what you mean!\" he shouted back.\n\nFuck. She really was trying to burn him to a cinder.\n\nThe fireballs were getting bigger, faster, hotter and more powerful. Phil remembered from the lessons the instructor telling them the mind provided the shield, but it also took the brunt of the force. Phil's skull felt like a bell that had been repeatedly whacked by a large sledgehammer.\n\n\"Don't lie,\" Rosa said. She drew a whip that ignited into a long coil of bright yellow flame. \"You're hiding your abilities.\"\n\nOh fuck.\n\nThe whip would have sliced him in two had he not got a shield up in time. Instead he was sent skidding across the walkway until his heels teetered on the edge of the other side. His lungs burned like he'd just run a mile. A single drop of blood dribbled out of his nostril.\n\n\"I tire of these games,\" Rosa said.\n\nShe flapped her great red bat wings and took to the air. Phil watched warily as she circled above him.\n\nShe was really trying to kill him and there wasn't much he could do about it. Wargsnouts students were forbidden from learning direct attacking spells until at least the third year.\n\n\"Enhalarat mod Flambescanae!\" Rosa yelled.\n\nFlares erupted from the fire pits on either side of Phil. They coalesced into floating balls of flame. As Phil watched they opened out to reveal the forms of beautiful women.\n\nBeautiful women that also happened to be on fire.\n\nPhil backed warily into the centre of the stone walkway.\n\n\"We are spirits of fire and passion,\" a spirit said. \"Burn for our lust.\"\n\nFlames flickered over their naked forms. Their bodies were thin and leggy -- perfect catwalk models. Fire formed their hair, twisting up from their heads to form elaborate beehives. They were attractive, but clearly deadly.\n\nThe lead spirit blew a kiss and a ring of black smoke drifted towards Phil. He cast another shield, but in his panic cast the wrong type. The smoke ring came straight through and enveloped Phil's head.\n\nHe couldn't see or breathe. Phil coughed and spluttered and tried to brush the smoke from his watering eyes. It smelt a lot like sweet incense and he felt his mind spin and his heart start to race as it sank into his lungs.\n\nA warm hand gripped his.\n\n\"Dance with us,\" the spirit said.\n\nPhil was spun into the arms of another spirit. He felt the heat of her body as she whirled him round in a wild flamenco. He heard crackling and smelt burning and realised it was the hairs on his body.\n\nHe was pinballed out into the arms of another spirit and whirled around faster and faster. Their feet were a blur as they danced. Phil's feet screamed as they were forced to match the pace.\n\nOne of the spirits kissed him and his lungs were filled with her hot breath. His blood ignited as lust burned in his veins. The steam rushed to his head and clouded his mind with a sultry fog.\n\nPhil was spun into the arms of two spirits. They held him in place as the spirit that had kissed him approached.\n\n\"Your end will be like the fiery birth of a new star,\" the spirit said. She reached between her legs and parted the flaming labia of her pussy.\n\nHe felt her molten heat as she approached. He knew that if he entered her he'd be burnt to a cinder. Thankfully he also knew how to deal with spirits like this.\n\n\"Exhalarat dom Flambescanae!\"\n\nHe repeated the dismissal spell until each of the spirits disappeared in a puff of black smoke. Then he bent over in a coughing fit. He felt singed and parboiled.\n\nRosa wasn't about to give him any time to rest either. He only just managed to dive out of the way as her fire whip slammed across the path and seared a black line into the stonework.\n\nPhil backed away and stood on tottering legs. He threw up both an anti-magic and anti-demon barrier. They surrounded him in twin flickering domes. He doubted they'd survive a decent hit and even if they did the impact would probably pop his brain. He continued to stand anyway, his breath coming in ragged gasps.\n\nRosa landed in front of him and folded her wings behind her. She walked up to the barrier, her hips swinging seductively. Phil watched her warily.\n\nRosa twisted her blood-red lips up in a smile. Her blue eyes sparkled.\n\nShe unlaced the front of her bodice and pulled it down. The ripe globes of her breasts bounced free and unfettered.\n\nPhil gawped, entranced by the sight of her dusky brown nipples.\n\nHe lost concentration.\n\nThe shields flickered out.\n\n\"That might be considered a weakness you know,\" Rosa said.\n\nShe stepped inside the non-existent shields and casually planted a kick on Phil's chest that sent him flying backwards and over the edge of the walkway. A pool of molten lava awaited him below.\n\nNooooooo... ah?\n\nPhil wasn't falling. He was lying on something pliant. He looked around and realised his fall had been broken by something that looked like a transparent beanbag with fluorescent orange edges.\n\nRosa peeled off the rest of her leather bodysuit and lay on the shimmering bed next to him.\n\n\"It's an energy field of heat,\" Rosa said. \"It makes quite a comfortable bed don't you think.\"\n\nPhil couldn't argue with that. The surface was soft and luxuriously warm. Gentle vibrations ran through it like ripples through gel. The motions massaged his aching limbs with soft caresses. Perfectly relaxed, he sank into the shimmering field until nearly all of his body was enveloped by pleasant warmth.\n\n\"You lost fledgling,\" Rosa said. She ran her hand through the energy, sending luxurious ripples across Phil's body. \"This is the point when a succubus holds her prey in a state of blissful relaxation while she leisurely sucks out their life and soul.\"\n\nRosa ran a hand over Phil's crotch. The liquid heat rippled up and down Phil's cock in gentle stroking motions. He was completely helpless. His limbs felt so relaxed he couldn't move them.\n\n\"What do I do with you fledgling?\" Rosa asked.\n\nPhil sighed as the liquid heat continued to stroke up and down his erection. His balls felt like they'd been suspended in warm honey.\n\n\"You're not strong enough,\" Rosa said. \"It's only a matter of time before Nurse Honey sucks out your soul and imprisons it in her flesh for all eternity.\"\n\nHer other hand suddenly flared up in flames.\n\n\"Maybe it would be kinder to burn you to ash right now,\" Rosa said.\n\nPhil felt the heat of her hand as she raised it above his forehead. He felt a flash of terror, but it couldn't penetrate the cocoon of warm pleasure surrounding him.\n\n\"No,\" Rosa said, withdrawing her hand. \"Verd\u00e9 would never forgive me. The last time I incinerated one of her favourite pets she refused to see or talk to me for a century. I can't tell you how much I missed her tongue lapping at my clit. You wouldn't understand.\"\n\nShe speeded up her stroking motions. He felt a tingling sensation in his balls and he groaned as he felt the orgasm breaking inside him.\n\n\"Oops,\" Rosa said. \"Hold on. We can't have any going to waste.\"\n\nShe straddled Phil and engulfed his cock with her pussy in one smooth motion.\n\nEnveloped in her hot flesh, Phil couldn't hold out any longer. He cried out in pleasure as his hips bucked upwards and he pumped a thick rope of cum into her moist pussy. Her vagina noisily sucked on his cock, gulping down his cream until his balls had none left to pump.\n\n\"And you are quite delicious,\" Rosa said.\n\nHer pussy kept his cock rock hard with expert little sucks and squeezes.\n\nRosa leant over and whispered in his ear. \"I'm going to show you what it feels like when a succubus slowly sucks a man dry.\"\n\nHer fangs slid into his neck. There was no pain, only blissful ecstasy as her venom poured into his veins like warm lava. Any tenseness the massaging of the bed hadn't already removed simply drained away. His balls swelled up with fervent activity.\n\nRosa sat back up and rocked up and down on his cock. Phil was entranced by the glory of her unfettered breasts as they bounced in front of him. She rose up and down with exquisite slowness. Her moist vagina slurped up and down his twitching shaft.\n\nHer tail curled under Phil and lightly circled around the entrance to his ass. He was in such a relaxed state he offered no protest as the end of her tail gently pushed its way inside him. The tip wormed up until it found his prostate. It rubbed against it, sending thrills of pleasure through Phil's body.\n\nHe was truly helpless now. He was Rosa's plaything. She fondled her breasts and smiled majestically as her sucking pussy and probing tail reduced Phil to a molten puddle of bliss.\n\nHe came again, but this time it was a slow constant stream as she massaged his prostate with his tail. The orgasm was long and slow and Rosa greedily sucked down his seed until his balls were empty.\n\n\"Are you enjoying your slow death, little fledgling?\" Rosa asked.\n\nShe leaned backwards and spread her wings. Phil sank deeper into her sumptuous sheath. Powerful muscles clenched around his cock, holding him in place and keeping him hard as she sucked him.\n\nPhil couldn't talk. The pleasure overwhelmed everything.\n\nHis balls had already filled back up. With a blissful shiver he let go and emptied their contents into the strong suction of her vagina.",
        "Rosa fell forward and tightly embraced Phil's twitching body. Her warm breasts pressed against his chest. Her wings folded around his back. Far beneath him the pool of lava bubbled with constant motion.\n\n\"You're dying,\" Rosa whispered in his ear. \"Your body is breaking down its organs and tissues to produce more seed to feed me. Can you feel it?\"\n\nPhil could. It felt like being consumed by a thousand million tiny biting ants. Even that couldn't penetrate the pleasure he felt. He was drowning in it. He couldn't help himself. He didn't want this to stop.\n\nRosa flexed her hips and her vagina gripped his cock with a mighty suck. Phil whimpered as he exploded within her. Semen spurted from his cock in a great geyser that Rosa's pussy greedily gulped down. His balls weren't even getting a chance to refill now. He was jetting his life straight down her hungry maw.\n\n\"Your tissues are drying up as I suck out all your fluids,\" Rosa whispered.\n\nWithin his body Phil felt his tissues shrink and shrivel. He felt dry, desiccated.\n\nHe felt terror then.\n\nHe couldn't stop though. He didn't want to stop. He couldn't bear for this feeling to end. Rosa's pussy continued to make wet slurping sounds as she sucked his life away.\n\n\"I can hear your heart beating like a little caged bird,\" Rosa whispered. \"It's getting slower now. So little blood left to pump. Lub dub. Lub dub.\"\n\nPhil wheezed through parched and cracked lips. He felt cold, ever so cold, even with Rosa's warm body wrapped around him.\n\n\"Can you hear it?\" Rosa whispered. \"Slower and slower. Lub. Dub. Your life slowly draining away. Is this what you want fledgling?\"\n\nNo, I don't want to die, Phil cried inside.\n\nI don't want this to end.\n\nHis heart was struggling in his chest. He was a withered shell. Life was just the tiniest of flickering embers inside him.\n\n\"Lub... Dub&mdash\n\n\"But I won't stop it,\" Rosa whispered. \"Not this time.\"\n\nRosa lightly kissed him on the forehead and released his cock from her silken prison.\n\nPhil gave a rattling wheeze. It was the only sound his dried up tissues could make. Whether it was a cry of relief or regret he didn't even know himself.\n\n\"You're lucky Verd\u00e9 gives such wicked oral,\" Rosa said. \"I don't think I could go another century without feeling her tongue inside my pussy.\"\n\nRosa looked down on Phil's withered body and smiled.\n\n\"And you are quite an amusing little pet,\" she said, smiling broadly. \"Now let's get you off to Nurse Honey. She won't claim your soul just yet.\"\n\nRosa paused, her lips pursed in thought.\n\n\"I think.\n\n\"How many times have we nearly killed you again?\""
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "magic",
        "summoning",
        "warlock",
        "whip",
        "fire",
        "magical duel"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-111"
}