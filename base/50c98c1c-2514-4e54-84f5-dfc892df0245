{
    "title": "Homecoming Queen Ch. 03",
    "pages": [
        "I moaned in pleasure as Katy fucked me doggy style with her black, 9-inch strap-on. Although it technically wasn't a strap-on. It was a 9-inch dildo, but instead of being held in place with a harness, it penetrated her with a smaller 5-inch extension that also kept it in place without the need of any straps or harnesses all while vibrating and pulsating from within her vagina. It was called a Feeldoe and it was heavenly.\n\nKaty had me bucking back into her like a woman possessed as she fucked me with her new toy. I was completely naked, but in true dominatrix fashion, Katy wore black stockings, lace-up knee-high boots, and a strappy leather harness bra and garter belt. I was in heaven and would do anything this woman demanded of me, including impale myself on her lady-dick.\n\nShe had already cum twice. The first on my tongue as she had me eat her out before forcing me to suck her big black cock. The second was as she fucked me with the Feeldoe. She pulled my hair as she slammed me from behind and orgasmed from the pressure and vibrations of the Feeldoe. Now it was my turn.\n\n\"Do you want to cum, you little slut?\" Katy barked at me.\n\n\"I do,\" I purred back at her.\n\n\"What?\"\n\n\"I do!\" I said more forcefully.\n\n\"Tell me what you want.\"\n\n\"I want you to make me cum, Katy. I want to cum all over your big cock!\"\n\nI was practically screaming it. I wanted to cum so bad. Katy released my hips and pulled out, the head of her fake cock leaving my ass gaping. My body let out a small shiver, but the look on my face was one of utter disappointment. I felt so incomplete without her inside of me.\n\nKaty laid back on her bed, her upper body slightly propped up by her pillows. She smiled a knowing grin at me and pointed at her cock.\n\n\"Reverse cowgirl,\" was all she said.\n\nI dutifully did as I was told, eager to get her cock back inside me. With my back to Katy, I straddled her silky stockinged legs and grabbed ahold of her boots as I lowered myself onto her 9-inch monster. After a few adjustments, I bottomed out and let out a small sigh of relief.\n\n\"Earn it!\" Katy commanded.\n\nI quickly responded by rocking my hips into her, impaling myself on her cock. I gripped her boots by the calf tighter as I worked myself further up and down the shaft.\n\n\"Attagirl,\" Katy urged. \"Take that whole dick. I wanna see that ass bounce up and down on my cock.\"\n\nShe had really taken to this role. If I didn't know better, I'd have thought she was a professional dominatrix, but after several months of being with Katy, I was used to her telling me what to do. To tell the truth, I kinda liked it too. Unlike Jason, she was eager to take care of my needs...after she got hers of course.\n\nI obeyed Katy's commands and leaned forward to grab her ankles. Once I had a firm grip, I used all the strength in my thighs to bounce myself up and down on her huge cock. Katy admired my work and gently ran her hands down my back and ass as I built up a sweat. Finally, as I had worked myself into tizzy, Katy grabbed my hips and pulled me back into her.\n\nShe talked to me as a mother would calm a child.\n\n\"There you go. Relax...lean into me and let me do the rest of the work.\"\n\nAs I laid back into her and caught my breath, Katy reached around with her right hand and stroked my limp penis. It didn't take long for me to reach my fully erect 5-inches.\n\n\"Oh, do you like that?\" Katy teased. \"My little slut likes it when I fill her ass and play with her cock?\"\n\n\"Ooooh,\" I moaned. \"You know that I do.\"\n\nI ground my ass into Katy's hips as she continued to stroke my cock. The feeling from both ends was overwhelming. I wasn't going to last much longer.\n\nKaty continued to force her massive Feeldoe into my ass as she rapidly stroked my dick. Then, I let out a long, deep howl as she made me cum. I let out three quick spurts that landed on my belly and covered Katy's hand.\n\n\"That's my girl. Get it all out.\" Katy encouraged me. \"Show me how much cum you've got in those balls you like to keep tucked away.\"\n\nShe certainly knew how to turn me on with her words. I'd do anything for this girl, and I was eager to cum all over myself to please her.\n\nAs I came down from my orgasm, my cock quickly deflated, but Katy's dildo remained perfectly implanted deep inside my ass. I twitched and squirmed as the feeling became overwhelming.\n\nKaty drew lazy circles in the cum on my chest with her finger. She giggled at my unease.\n\n\"What's the matter? My big cock becoming too much for you.\"\n\nEager to pull it out, I started to rise.\n\n\"Not yet!\" Katy demanded as she pulled me back down and held me in place by my hips.\n\nMy legs quivered and my insides churned as I remained impaled with my legs splayed to the side. It must have been quite the sight because Katy couldn't stop watching our reflection in her large mirror.\n\nFinally, after a few additional seconds of torture, she allowed me to get up. I quickly rose off her massive cock. It exited with an audible \"plop\" as it again left me gaping for several seconds. I laid down next to Katy completely exhausted, but entirely satisfied.\n\nKaty licked the drop of cum off of her finger.\n\n\"Mmmm. Your girl cum is always so tasty.\"\n\nI giggled, but then frowned. I loved being fucked by Katy. She was a stunner and she always took care of my needs, but something was missing. It was all about the sex with her. Don't get me wrong, it was amazing sex. Katy knew how to make all of my fantasies come true, but as I got more comfortable being Allison, I was craving a relationship of more than sex.\n\n\"What is it?\" Katy asked, sensing my mood.\n\n\"I'm not quite sure.\" I said.\n\n\"What, am I not doing it for you anymore?\n\n\"No! That's not it at all!\" I yelped. \"It's just...I love being with you, but sometimes...I...I feel like I need something more. Does that make sense?\"\n\n\"What more do you need?\" Katy asked, slightly offended.\n\n\"Well, for example, you still have a relationship with Dan. Sure, we fuck and its great, but I'd love to have something on top of that.\"\n\nKaty nodded. \"You mean that you wish you were still with Jason.\"\n\n\"Kinda,\" I said sheepishly.\n\nAfter a long pause, Katy finally spoke, \"I guess I can understand that...but what does that mean?\"\n\n\"I'm not sure. I don't want to give up what I have with you, but it's been eating me up with how I left it with Jason. We haven't even talked in months. He was my best friend, you know.\"\n\nKaty comforted me as we laid together on her bed. She encouraged me to talk to Jason, and if that was what I truly wanted, she would support me. I didn't know where to start, and I'd certainly need her help, so it was hugely important that she was on board.\n\nAfter we had cleaned up and I was back to being Allen, she walked me to the front door.\n\n\"I just want you to know that no matter what you decide and no matter what happens between you and Jason, you'll always be my friend, and you can always count on me. Allison or Allen.\"\n\nThen, Katy pulled me close and gave me a big open mouthed goodbye kiss. Normally, this wouldn't be anything new, but she had never kissed me when I wasn't Allison. I thanked her and made my way to my car, but as I left, I couldn't help but have a feeling of regret. I sure hoped I knew what I was doing.\n\nWhen I got home, I went straight to my room and tried to make sense of my life. I had been starting to come to grips that I enjoyed being Allison, much more so than being Allen. I was more outgoing, more personable, more attractive, and it helped that the sex life was much better. Part of me wanted to make it a permanent transition, but that was something for a little down the road. I wasn't going to transition in the middle of my senior year of high school.\n\nI needed to make up with Jason. Whether that ended up with me as his girlfriend or just as friends, we'd been through too much together to leave things as they were. But he certainly wasn't my biggest fan at the moment. It would take a large gesture on my part to even get him talking to me.\n\nI spent the entire afternoon trying to come up with a plan. I ran it by Katy to see what she thought, and over the next few days, we made tweaks and planned for contingencies. I didn't want to be caught speechless. She helped me rehearse over and over, on the phone and in person, and after a week, I decided that it was finally time to rip off the band-aid and just do it.\n\nI called Jason on a Thursday after school. As it rang, I found myself wishing that it would go to voice-mail, but after the third ring, Jason finally picked up.\n\n\"Hello.\"\n\nHe sounded unimpressed to be hearing from me.\n\n\"Hey Jason, it's uh...\" I didn't know whether to go by Allen or Allison. All that practice and I messed up my opening line.\n\n\"I know who it is,\" Jason said gruffly. \"What do you want?\"\n\nI took a deep breath. \"You can do this.\" I thought to myself.\n\n\"Jason,\" I started. \"I need to apologize to you.\"\n\n\"That's an understatement.\"\n\nHe was being overly hostile towards me, but it wasn't unexpected. In reality, he still owed me an apology for treating me the way he did, but I was willing to look past that and try to be the bigger person.\n\n\"I know it is,\" I continued. \"But you deserve a real apology. I shouldn't have treated you how I did at the party, and I shouldn't have closed you off. I know you have no reason to even listen to me, but I hoped we could talk.\"\n\n\"I answered the phone, didn't I?\"\n\n\"Yes, yes you did. Thank you for that.\"\n\n\"Well...what did you want to talk about? Or was that it?\"\n\nHe was still obviously upset, but at least I had him on the phone. It was nice to just hear his voice again. It was an odd feeling, but it was painfully apparent to me now how much I had missed him. I only hoped that beneath his brevity, he felt the same way.\n\n\"Other than being deeply sorry for how I acted and how I treated you, I...uh...I was wondering if you wanted to hang out sometime?\"\n\n\"Who's asking?\"\n\n\"Allison...but to be completely honest, I'd be happy hanging out with you as Allen too.\"\n\n\"I'm not so sure either is a good idea, Al.\"\n\n\"Please Jason. I miss hanging out with you.\" I did my best to not sound like I was begging, but I wasn't doing a great job.\n\n\"Al, I don't know what you have been up to with Katy, but knowing her, I know it can't be anything good. That chick is crazy, and she seems to have gotten to you.\"\n\n\"I've stopped seeing her,\" I lied. \"You're absolutely right. I let her get into my head and manipulate me.\"\n\n\"Hmmm,\" he didn't sound convinced. \"Well, at least you figured that out, but I still need some time. Sorry Al.\"\n\n\"Okay. I get that. Can I call you again sometime?\"\n\n\"Sure. Call me tomorrow.\"\n\nWe hung up. It didn't go exactly how I had hoped, but at least he was talking to me again. It would definitely take some time and sweet talking to get him to come around.\n\nAfter I talked with Jason, I called Katy to tell her how it went. Thankfully, she was encouraging and convinced me to stay with the plan. She was confident that he'd come along eventually.\n\nThe next day after school I called Jason again. He answered quickly, as if he was waiting for the call. Unfortunately he was still against us hanging out, but we did talk for an hour. It was nice to hear him speak kindly. We talked about our upcoming finals and how the semester was turning out. Nothing deep, but it showed that we could still be friends. Most importantly, Jason agreed to call me on Monday.\n\nThe weekend was unremarkable. Mostly I worked and studied for my upcoming finals. I spoke with Katy twice. She wanted to get together but I told her that I needed to stay home to make sure I didn't fail any tests. Although, we did talk about Jason and how it was going with him. I told her all about our last two conversations and that I was hopeful to see him after finals. I just had to keep wearing him down.\n\nJason called on Monday, just as he said he would. Again, it was all light conversation. Mostly about which finals we had and which were coming up. I attempted to ask about what he'd be doing during Christmas break, but he shrugged it off. I finally broached the subject of seeing him again.\n\n\"Well, if you don't have anything planned, why don't we get together one day?\"\n\n\"Ally, I'm still not ready. I'm sorry.\"\n\nI was bummed, but then I realized that he called me Ally and not Al. Maybe he was coming around.\n\n\"Okay,\" I said, dejected. \"Call me tomorrow?\"\n\n\"Of course. Bye Ally.\"\n\nThe week continued in this manner. After school, Jason would call. We'd discuss our finals. I'd ask to see him. He'd decline. But everything was very friendly and I could tell it was getting harder and harder for him to say no.\n\nOn Friday after the last final, the routine was no different, only this time, we had nothing to study for the next day. Again, I pestered Jason about what he had planned for the week.\n\nHe finally relented.\n\n\"Well, my parents work Monday to Wednesday before they are off, so I have the house to myself. I was mostly planning on vegging out and playing PS5 tomorrow. Wanna team up in Call of Duty?\"\n\nThat was not exactly what I was hoping for.\n\n\"Um, sure. I guess that sounds good. What time?\"\n\n\"Noon sound good?\"\n\n\"Sure,\" I responded softly.\n\nActually that would work perfectly. If Jason wasn't going to relent, I'd have to take matters into my own hands.\n\nSince Jason was hesitant to take the next step and invite me over, even after all my begging, I'd just have to surprise him at his house. Since it was the Monday before Christmas, his parents would be at work all day and according to Jason, he'd be home playing Playstation.\n\nIt was time to break out the secret weapon. My Victoria's Secret lingerie did it's job after the Homecoming dance, but it was my sister's cheerleader outfit that started Jason and I down this path. It was time for Jason to see me in it in person.\n\nAs soon as my parents left for work on Monday, I got started on putting myself together. I hadn't dressed in the cheerleading uniform in months, but it always made me feel super sexy. There's something about the combination of feel of the polyester and being on display yet covered that was such a turn on. It was hard to get prepared without getting myself worked up.\n\nFirst, I did my hair and makeup. In true cheerleader fashion, I gave myself bold eyeshadow in the maroon and gold of my school and a matching lip stain. My hair was done in a high ponytail with maroon scrunchy. I had been letting it grow, and even in the ponytail it reached my shoulders now. Finally it was time to throw on the outfit.\n\nOur school modeled the cheerleading uniforms after those of the USC Song Girls. The skirt was a basic white accordion skirt with maroon and gold trim along the bottom. It was so short that the hem line was well above my fingertips. I still couldn't believe the girls were allowed to wear them, as any other skirt that short would earn you a detention and a trip home to change.\n\nMy sister had several tops to choose from, including the traditional white sweater, which I almost wore because of how chilly the weather was, but I decided on the sexier option. It was a no-sleeve mock turtleneck, all white with maroon and gold block lettering on the front. Underneath was worn a sheer white bodysuit, and under that were a pair of sun kissed sheer-to-waist nylons. The outfit was capped off with maroon Nike low-tops with gold trim.\n\nI gave myself a long look in the mirror and felt my tucked penis stir. I sure had the look, now it was time to show off Allison the cheerleader to Jason and hope for the best. I grabbed a duffle bag and headed out the door to the car, neglecting to grab a coat.\n\nThe last time I walked out the door as Allison, I was terrified. This time I was full of confidence. I glided down the front steps and strutted to my car, casually tossing my duffle into the passenger seat. I tucked my skirt underneath my rear as I sat in the car, swung each stockinged leg in, started the car, and started my way to Jason's house.\n\nThankfully, my confidence didn't waiver as I made the drive. Normally, I would have parked down the block from Jason's house, but this time, I parked right in front. Leaving my duffle in the car, I hopped out and bounded my way up the stairs, eager to have Jason finally see me in the cheerleading uniform in person.\n\nI rang the doorbell and then struck a pose with one hand on a popped hip and the other resting on the door jamb and then waited...and then waited some more. It was earlier than I told Jason we'd play Call of Duty, but he had to be up by now.\n\nI rang again.\n\nFinally I heard the door begin to open. Jason opened it, clearly unimpressed from being disturbed from his late sleep.\n\n\"Can I help you,\" Jason asked without looking up.\n\n\"You tell me!\" I said with a cute smirk.\n\nJason finally looked up and saw what was in front of him.\n\n\"Allison! What...um, what are you doing here?\"\n\nHis jaw practically hit the floor as he looked me up and down, eyes lingering on my exposed thighs just under the hem of my skirt.\n\n\"I got tired of waiting for you to invite me back over.\"\n\n\"But I thought we were going to play Call of Duty this afternoon?\"\n\nI giggled. He still hadn't taken his eyes off my legs.\n\n\"Well, we still can. There's no rule that says we can't play together in person, right?\"\n\nHe was so caught off guard, it was hard not to laugh at him. It was cute watching him process the situation.\n\n\"I uh...I uh...I guess we can do that.\n\n\"Well, if that's what you want.\"\n\n\"What do you mean?\" He asked, confused.\n\n\"Well, we don't have to play Playstation. But if that's what you want to do, I'm happy to kick your butt.\"\n\n\"Ok.\"\n\nJason continued to stand in the doorway, staring at my body. As much as I enjoyed his gaze, my legs were freezing.\n\n\"Jason?\"\n\n\"Yes.\"\n\n\"As much as I love chatting with you in front of your house, it's awfully cold out and I'm not exactly dressed for the weather. You think we could move this inside?\"\n\n\"Oh yeah...come in, come in.\"\n\n\"Thanks babe, my legs are starting to turn blue.\"\n\nI shivered as I crossed the threshold and the warmth of the house made its way into my chilly bones. It was now obvious that I had just woken up Jason and that he was not at all prepared for my arrival. He wore a plain white t-shirt and a pair of gray sweat pants, which he likely threw on when he heard the doorbell. Honestly, I couldn't believe he actually got up to answer the door.\n\nI rubbed my arms to warm up as I stood in the foyer.\n\n\"Um, so...do you want to go play Call of Duty?\" Jason asked.\n\nHis eyes now stared straight ahead at my breasts. I was fully covered, but as I rubbed my arms to warm myself, my mighty B-cups were thrust out and standing at attention.\n\n\"If that's what you want to do.\" I cooed in response.\n\nJason led me downstairs to the game room and set up the Playstation before handing me a remote and taking a seat next to me on the large couch.\n\nWe played a few games as a team. Jason could normally hold his own, but it was obvious that he was distracted. The first two games he was eliminated very early and sent to the gulag where he was promptly defeated. The third game was a little better, but he still fell victim to an obvious ambush.\n\n\"Everything alright?\" I asked. \"You are usually a little more on your game.\"\n\nI elbowed him in the ribs to make sure he knew I was just teasing.\n\n\"Yeah...I'm just not used to playing with a Song Girl sitting next to me.\"\n\n\" A Song Girl who's kicking your ass.\" I reminded him. \"And looking good doing it, if you don't mind.\"\n\nJason nodded, his attention now back on my tanned legs which were crossed in his direction. It was finally too much for him to bear. He reached out and put a hand on my knee.\n\nI put down my controller and looked him in the eyes.\n\n\"It's about time,\" I scoffed. \"I was afraid you'd just want to lose at Call of Duty all day.\"",
        "\"I've missed you Allison.\"\n\nThat was all Jason could bring himself to say, but it was all he needed to say.\n\n\"I've missed you too,\" I said.\n\nJust like after the Homecoming dance, I swung my leg over him and straddled his lap and placed each of his hands on my smooth, nylon encased legs.\n\nJason looked up at me.\n\n\"I'm sorry for how I treated you.\" Jason admitted before lowering his eyes.\n\n\"Thank you,\" I responded. \"I've missed you too. Perhaps too much.\"\n\nI sat there on his lap in silence for what felt like an eternity.\n\nJason finally looked back up and smiled.\n\n\"You know, that has to be the sexiest outfit I have ever seen.\"\n\nI laughed. \"I had a feeling you might like it. So does it look better on me in person?\"\n\n\"So much better. I can't believe you're actually wearing it here in person.\"\n\n\"What can I say,\" I giggled playfully. \"I know what the boys like.\"\n\nJason paused again as he looked me up and down. I feared that my joke did not go over well. Just as I was about to apologize, Jason spoke.\n\n\"Allison, I'd like...would it be okay if I kissed you?\"\n\n\"I thought you'd never ask,\" I said as I sighed in relief.\n\nJason made the first move, bringing his face towards mine. After a moment of hesitation, I eagerly and excitedly met him halfway. A feeling of complete euphoria overwhelmed me as Jason passionately kissed me and let out months of pent up sexual frustration.\n\nHis hands caressed my thighs and made their way under my short, flowing skirt until they found purchase on my hips. Sliding his fingers underneath the leg holes of my sheer bodysuit, Jason gripped hard and pulled my entire body into him with his strong arms.\n\nI melted into his body and felt his 8-inch hard-on press into my nylon and polyester covered crotch. My hands instinctively went under his shirt and pulled it up over his head, revealing his chiseled body. I caressed his chest, leaving scratch marks on his pecs with my well manicured nails. Then I dove into his body, full-force, pulling myself closer until our bodies nearly merged as one.\n\nMy lips left their red stain on Jason's neck and collarbone. I yanked at his hair as I pulled his head back in passion to get at him. Jason returned the favor, and tugged on my ponytail, earning himself a low-pitched moan from my lips.\n\nThe first time I was with Jason, we were both nervous and unsure of each other. The second, Jason seemed both ashamed of me and himself. After months apart, we now knew that we both wanted each other badly, and my experience with Katy had taught me exactly how to get what I want.\n\nI finished removing Jason's shirt and devoured his chest with my lips. He maintained a firm grip on my nylon covered hips and repeatedly forced me to grind my ass into his engorged cock. I loved the way he manhandled me with his strong arms. I especially loved the way his huge dick felt pressed against my limp cocklet. I started to purr as I pressed myself into him faster and faster.\n\n\"Oh shit!\" I moaned. \"Right there...don't stop...you're gonna make me cum!\" I gasped between labored breaths.\n\nI closed my eyes and titled my head back in pleasure as Jason took complete control. His hands finally left my hips and made their way underneath my ass. In one swift motion, he reached a hand between us from behind, grabbed the snap crotch of my bodysuit, and pulled, releasing all three snaps and leaving just the thin layer of nylon and his gray sweatpants between me and his monster cock. It was the sexiest move I had ever seen.\n\n\"Cum for me Allison,\" Jason encouraged. \"I want to watch you orgasm all over my big cock.\"\n\nHe was pushing all the right buttons. I was putty in his hands. His hands had now found their way under my opened bodysuit to my bare back. He pulled into him with one hand and pulled on my hair with the other, arching my back and pressing my breasts into him. More importantly, this position put incredible pressure on my tucked penis.\n\nI bucked my hips and thrashed into Jason as fast and as hard as I could. I could feel the orgasm building inside of me. I thrashed my head forward, despite Jason's grip on my hair and put both of my hands behind his back, pulling my forehead to his as I dry humped his cock to completion.\n\nWaves of pleasure radiated through my body, starting at my balls and pulsing outward toward my head, arms, and legs before rebounding and converging back on my crotch. Finally, I exploded in a massive orgasm.\n\nMy hips locked in place as I came.\n\n\"Oh fuck...I cumming!\" I screamed.\n\nOne spurt.\n\nTwo spurts.\n\nThree spurts.\n\nMy body quaked as I felt the orgasm pause, but continued to build in intensity.\n\nFour spurts.\n\nFive spurts.\n\n\"Holy shit!\" I yelled at the top of my lungs.\n\nI felt spent, but the orgasm still hadn't released my body.\n\nA sixth spurt.\n\nThen a seventh.\n\nMy eyes rolled back in my head and my body shook uncontrollably.\n\nAt last, an eighth and final spurt.\n\nI began to laugh as I curled inward to take refuge in Jason's body. I continued to grind myself into him as my body and mind came down from the most powerful orgasm I had ever experienced in my young life. The giggles overcame me, and a huge smile forced its way onto my face.\n\nI pulled my forehead back to Jason's.\n\n\"Thank you...thank you...thank you,\" I whispered repeatedly.\n\n\"Oh my God. That was the hottest thing I have ever seen in my life.\"\n\nI could barely speak and I still hadn't caught my breath so I just nuzzled my head into Jason's neck, finding protection in his body. My chest heaved as I was finally starting to take deep breaths.\n\n\"That was incredible. You are so fucking sexy.\" Jason continued. \"How much did you cum? That had to be, like, a minute long orgasm. I mean, how...\"\n\nI cut him off with a big kiss on the lips. He needed to learn to let a girl linger in her sexual bliss.\n\nI kept a long hold on his lips with mine as my breaths finally slowed and my head stopped spinning. After a lengthy kiss as both a thank you to Jason and a muzzle, I slid off of him, leaving one finger against his lips to encourage his silence.\n\nI slid to the ground and kneeled beside the couch, gripped his sweatpants by the waistband, and finally set Jason's manhood free. His cock practically burst from his pants and stood at attention as I set it free. He clearly wasn't wearing any underwear.\n\nOnce I had his pants around his ankles, I wasted no time in devouring his strained cock with my hungry mouth.\n\nI loved the way Katy used my mouth with her various strap-ons and dildos, but nothing compared to the scent and taste of taking Jason's engorged cock in my mouth. He smelled musky and I could taste the saltiness of his skin. Even more enjoyable, however, was the heat emanating off of his cock.\n\nTruly, there's no comparison to a real man's dick. There are a lot of acceptable substitutes, and they certainly get the job done, but a real dick pulsates and vibrates with an energy that plastic, rubber, and silicone simply cannot replicate.\n\nI was in heaven and I gave Jason a blowjob worthy of his incredible cock. Now knowing that I could deep throat him without gagging, I set out to give him quite the show. I began by working the head with my mouth, letting my spit and drool drip down the shaft so I could massage it with both hands.\n\nJason seemed to grow in anticipation, but I continued to slick his cock with my spit nevertheless. Finally, when I was satisfied with my preparation, I took the purple head of Jason's dick in my mouth, placed both hands on his thighs, and paused to look up at him as he watched from above.\n\nWith his willing encouragement, I looked back down at my goal, opened my throat and pressed downward. The opening of my throat initially provided a bit of resistance as the large cockhead pressed against it, but through sheer will, I forced it past and continued to lower my head into Jason's lap. Inch by inch, his veiny cock disappeared into my wanting mouth.\n\nAs my lips reached further and further towards their goal, my throat screamed in pain as Jason's massive cock stretched it.\n\nTwo inches to go.\n\nI felt like I was going to choke. I could feel the outline of Jason's dick protruding from my neck. Still I pressed further.\n\nOne inch to go.\n\nI could almost touch Jason's pelvis with my lips. I was just about there. I couldn't stop now.\n\n\"Yes baby.\" Jason encouraged. \"Take that whole dick. You can do it.\"\n\nHis words gave me the push I needed. My mouth glided down the last inch and my nose pressed into Jason's pelvis. I held myself there as long as I could, teasing Jason's balls with my tongue all the while. I wished I could stay there forever, but alas, I had to come up for air.\n\nI gasped and sucked down gulps of air as my head hovered above Jason's now glistening cock. Tears welled in my eyes, but I wanted more. I loved the feeling of being filled by Jason's dick.\n\nAfter a few moments to recover, I refocused and set to the task again. This time, Jason's length went down much easier. I bottomed out in a fraction of the time that it took me the first try. Again, I held my lips to Jason's pelvis and then rose to hold the tip of his cockhead by the prominent ridge.\n\nJason placed his hands on the side of my head, not to control my movements, but to support me in my efforts.\n\n\"You are amazing!\" Jason cried.\n\nUp and down I continued. The entire length now easily moved in and out of my throat. I worked his cock with everything I had, taking Jason's moans and groans as signs of a job well done.\n\nI entered a smooth rhythm. Up, pause, down, pause, repeat.\n\n\"Allison, I want to fuck you so bad.\" Jason moaned.\n\nStill I continued.\n\n\"Get up here.\" He demanded.\n\nJason now pulled me off of his cock and had me once again straddle his lap. Previously he refused to kiss me after sucking his dick. This time he pulled me close and stuck his tongue in my mouth.\n\n\"You are so sexy,\" Jason continued. \"I want to see you ride my dick in that outfit.\"\n\n\"Okay,\" I whispered.\n\nI hiked up my skirt and grabbed my nylons by the waistband, starting to pull them down, when Jason grabbed me by my wrist.\n\n\"No, leave them on.\" He demanded.\n\n\"But how...\"\n\n\"Turn around.\"\n\nI pulled my nylons back up and turned so that my ass was even with Jason's face. He grabbed the nylons between my cheeks and ripped a hole in them as if they were made of wet tissue paper. I was a little bummed that Jason ruined my nylons, but holy fuck that was hot. He spun me back around and leaned back into the couch and waited for me to mount him. I happily obliged.\n\nI crawled my way back up Jason's lap, straddling him with my nylon encased legs and allowing his rigid cock to poke through the hole he had just made to nestle up against my waiting asshole. Jason grabbed my skirt by the hem and pulled it up over my waist.\n\nMy bodysuit hung loose over my crotch in the front, but had started to ride up my back in the rear. Jason lifted the front to watch as I started to guide his cock into place with my hand. My limp penis had come untucked ever since he had unsnapped my bodysuit and there was an obvious mess in the front where I had cum. Jason gave me a brief, peculiar look, but then refocused on watching me penetrate my ass with his dick.\n\nAfter a bit of maneuvering to navigate the hole in my nylons, I popped the head of Jason's cock inside of me, grabbed ahold of his shoulders and slowly lowered myself onto his massive shaft.\n\nJason was larger than most of Katy's toys, but he still entered me easily. Katy had me well adjusted to size by now. Buried to the hilt, I locked eyes with Jason and began to rock my hips, allowing his dick to fill me as deep as possible. I pulled Jason's lips to mine and kissed him deeply, moaning into his mouth as we fucked.\n\nIt felt so amazing to have him inside me again. Jason caressed my thighs and ran his hands up the inside of my bodysuit as I worked his dick. My movements were slow at first, but when Jason moved his hands to my ass, I picked up the pace.\n\nI again pressed my forehead to his and started to violently impale myself on his cock. I would rise up halfway before crashing back down into his lap with a loud \"slap!\"\n\nJason was transfixed.\n\n\"Oh my God! Oh my God!\" Was all he kept repeating.\n\nI could tell he wasn't going to last much longer so I decided to help him get there even faster.\n\n\"Yeah...fuck me Jason. Cum inside me. Cum deep inside your cheerleader slut!\"\n\nMy dirty talk clearly put him over the edge. Jason wrapped both arms around me tightly, locking my arms to the side. He pulled my whole body towards him and rapidly jackhammered my ass with his dick.\n\n\"Ohhhhh Fuck!\" He grunted as he unleashed a massive amount of cum inside me.\n\nI had just had the biggest orgasm of my life, and yet it felt like Jason had just pumped twice the volume in me in just his first spurt. Three more followed, filling me to the brim as Jason's legs went rigid.\n\nAfter a few moments, Jason finally released his vice like grip around my body. With him still inside me, I nuzzled my head back into the crook of his neck and cuddled with him on the couch as we both regained our composure.\n\nAs Jason's cock softened inside me, I teased him by slowly rocking my hips, overwhelming his now oversensitive penis.\n\n\"Oh shit, Allison!\" He exclaimed as he stuck out his hands and wiggled his fingers.\n\n\"Hehehe,\" I giggled as I played coy. \"What, you don't like the way I move my hips?\"\n\n\"Jesus, girl...you're gonna break me.\"\n\n\"Break you in is more like it,\" I quipped.\n\nI finally pulled myself up and off Jason. His dick fell out with a massive rush of his cum, much of it catching in my ripped nylons.\n\nI pulled up my skirt and looked at myself.\n\n\"Well, I don't think I'll be wearing these nylons again.\"\n\n\"Yeah,\" Jason agreed. \"I don't know who made a bigger mess, me or you.\"\n\nI gave him a quizzical look.\n\n\"It was definitely you,\" I laughed, \"but thanks for helping me cum. That was amazing.\"\n\nJason didn't respond.\n\n\"You always look so ashamed after you fuck me.\" I frowned as I continued to look at him.\n\n\"To be honest, I usually am. I tried to convince myself to let you go, that I didn't want you. But then you strolled in here...wearing that,\" he motioned to my outfit. \"And well, I couldn't help myself. And then I watched you cum while riding me.\"\n\nMy frown quickly turned to a giant smile.\n\n\"It was the sexiest thing I have ever seen.\" He continued. \"Your face, your body language. Everything was so feminine, so pure, so erotic.\"\n\n\"It was pretty good,\" I laughed.\n\n\"Well, in that moment I kinda realized that I didn't care if you had a dick. You're still the sexiest girl I know. I want to see you make that face over and over and over again. If you'll let me of course.\"\n\n\"I would love for you to give me that O-face again and again. I saw you look at me after you saw the mess I had made in my nylons. I thought you were disgusted.\"\n\n\"I thought I would be too, but then I realized that I made that happen. You creamed all over my dick and made that mess for me.\"\n\n\"Because of you,\" I corrected.\n\n\"Because of me,\" Jason continued. \"It was beautiful. I want to be the one to make you cum from now on.\"\n\nI leaned in close and gave Jason a kiss on the lips.\n\n\"I'd love that.\"\n\nI stood and shimmied my skirt off my hips to the ground so I could proudly show off the mess we had made. Jason looked on curiously.\n\n\"You know, you don't need to be afraid of touching me. You don't even really need to stroke me. I'm small enough. You can just cup me while I'm tucked and rub like you would a vagina. I'll still cum.\"\n\nJason nodded.\n\n\"I know. I'm working up to it.\"\n\n\"Okay,\" I said with a smile.\n\nI cleaned up and changed into something more comfortable. Jason and I picked back up at Call of Duty, doing much better than we had when I was a distraction. At 2:30, I started to get up to head home.\n\n\"I should get outta here before your parents get home. When can I see you again?\"\n\n\"How about Friday?\" Jason asked. \"They'll both be back to work then.\"\n\n\"Friday works perfectly. See you then.\"\n\nI slowly crawled back over to Jason and gave him a passionate, sultry kiss before finally getting up and heading upstairs to leave. The day had gone even better than I had hoped. It seemed like Jason had finally accepted us as a couple. There were still issues to work around, but if he was on board, it would make navigating the problems that much easier.\n\nThe next few days were unremarkable. Christmas came and went, filled with all the formalities and traditions of multiple family dinners and running around like crazy. I talked to Katy and filled her in on how it went with Jason. She was happy for me, but I could tell by her tone that she realized she was losing her plaything.\n\nI told her that I was seeing Jason again on Friday and that I could really use her help. I wanted to blow Jason's mind...give him a day that was unforgettable. It would be really hard to top Allison the cheerleader.\n\n\"I've got just the thing,\" Katy said. \"Come over early on Friday and I'll have everything ready.\"\n\nOn Friday, I waited for my parents to leave for work and then quickly threw on a pair of leggings, a sweater, and some sneakers. I did some light makeup and then headed over to see Katy.\n\nI was finally becoming more and more comfortable both leaving the house as Allison as well as being out and about as Allison. Eventually I'd have to come out and tell others, but for now, the sneaking around would have to do.\n\nWhen I got to Katy's, she greeted me with a hug, a small kiss, and a cheery \"Merry Christmas.\"\n\nI returned her kindness and asked about her family and their Christmas break so far. We chit chatted and caught up for about 30 minutes before she dragged me upstairs for her big plan. When I entered her room, my jaw hit the floor.\n\nLaid out on her bed were a black latex bodysuit, thigh high boots, and a long khaki overcoat. She was going to turn me into a dominatrix. Damn this girl was kinky.\n\nMy dick stirred at the thought of wearing this expensive and exquisite outfit. Never could I even consider buying any of this stuff.\n\n\"Do you like it?\" Katy asked.\n\n\"I love it,\" I said as I ran my hand along the latex. \"But do you think I can pull off that look?\"\n\n\"Oh hell yes!\" Katy exclaimed. \"If you can pull off that cheerleader look, you can pull this off. Besides, I've taught you plenty on how to be dominant, only the role will be reversed.\"\n\nI just nodded, intimidated by the domineering outfit.\n\n\"Come on...first thing's first. Let me do your make-up.\"\n\nI took a seat and let Katy do her thing. She teased my hair to give it a wild and big look. Then she gave me bold, dark eyes and a bright red lip stain. Heavy makeup, sharp contours, and massive false lashes completed the look.\n\nThen Katy led me to the outfit.\n\n\"I hope it fits.\" I murmured.\n\n\"It will!\" Katy said confidently. \"I got it for you...Merry Christmas.\"\n\n\"What? Katy, no...I can't accept this.\"\n\n\"Of course you can...and you will. I insist. My only condition is that at some point you wear it for me. That is why I bought it, but I think this is perfect for the occasion. Go rock Jason's world.\"\n\nI was speechless. I pulled Katy in and gave her the biggest hug.\n\n\"I don't know how to thank you.\"\n\n\"Just tell me all the details tonight.\"\n\n\"Deal!\"\n\nKaty watched admiringly as I got dressed. The black bodysuit was a dream. It was tight, but it fit perfectly. It even had a built-in bra that pushed up my meager breasts into impressive B-cups. The bodysuit was long-sleeved and high-necked. The hips were high cut and the rear was a Brazilian cut that showed off a but of butt-cheek. There were metal rings in a band around the waist and a dual zipper at the crotch that could open both directions. It was mostly opaque, but in some areas, a hint of skin could be seen through the material.",
        "The thigh high boots were 5-inch platforms that laced all the way up the front. They were the most beautiful things I had ever seen. Of course they had a zipper side to allow for easier wear. Zipping them up for the first time was the most heavenly thing I had ever felt.\n\nOnce I had squeezed into the outfit, I stood and admired myself in the mirror. I couldn't believe it. What a contrast from my Homecoming dress and the cheerleading uniform.\n\n\"Don't forget the overcoat,\" Katy reminded me. \"That's actually mine, so you'll have to return it, but it's chilly and we can't have you driving to Jason's in just that.\"\n\nI put it on, but left it open in the front for the time being.\n\n\"You look amazing,\" Katy gushed.\n\nShe led me down the stairs and walked me to the door, where she buttoned up the jacket and tied off the belt in a kind, motherly fashion. Then she pulled me in and gave me a deep, passionate kiss.\n\n\"Go get 'em girl!\" She said as she spun me around and slapped me on the ass, to see me on my way.\n\nI left Katy's house both confident and horny as fuck. Not only did Katy's lips on mine get me all warmed up, but the latex bodysuit made my body tingle all over. I was dripping with sex appeal and oozing with confidence. Off I went to Jason's to lock him down as mine once and for all.\n\nThe drive to Jason's from Katy's house was quick, and I got there earlier than he would be expecting me, but his parents were gone and I couldn't wait any longer. I parked on the street in front of his house, stepped out of the car with my big black boots, grabbed my duffle, and strutted to the front door.\n\nI considered leaving the duffle in the car again, but last time I had to make a cold and uncomfortable run to the car, dripping with sweat and cum to get my change of clothes. I didn't want to experience that again, so with me it came.\n\nI knocked on the door and waited. Just like earlier in the week, Jason was slow to answer the door. At least this time I was fully covered in my floor length coat. Finally, after making we wait for what felt like 10 minutes, Jason sleepily opened the door.\n\n\"You're early,\" he groaned, eyes barely open.\n\n\"Whenever I choose to arrive is right on time,\" I snapped back.\n\nJason's eyes popped open at my bold response. I placed a hand against his chest and pushed him back into the house, following slowly with long, deliberate steps, making sure my boots clunked on the tile floor.\n\n\"Wha...what's going on Allison?\" Jason muttered, still trying to process the situation.\n\n\"You're in for the ride of your life,\" I purred sexily as I loosened the belt and let the coat drift open and then fall to the ground. \"You think you're up for it?\"\n\nJason stumbled backward, eyes bulging as he took in my appearance.\n\n\"Jesus woman! You're certifiable.\"\n\nI smiled. Hearing him call me woman just encouraged me even more.\n\n\"Don't pretend like you don't like it!\" I scowled.\n\nI reached for his dick with my right hand.\n\n\"You know you're already hard for me.\"\n\nI pulled him close by his cock and planted a big kiss on his mouth, jamming my tongue and probing as best I could. I felt Jason stiffen in my hand.\n\n\"See, hard as a rock!\" I laughed. \"Downstairs...now!\" I commanded.\n\nJason did as I said, quickly moving downstairs. I gathered Katy's coat and my duffle and slowly made my way down after him, making sure that my boots could be heard clacking on each wooden stair as I descended.\n\nI placed my things in the corner and then made my way to stand over Jason at the couch. I stood feet just over shoulder width apart with my hands on my hips, in what I like to call my superheroine pose. My white hot crotch was right at face level and Jason could not peel his eyes away.\n\n\"You like what you see?\" I asked.\n\n\"Yes.\"\n\n\"Yes, what?\" I barked.\n\n\"Yes, yes ma'am.\" Jason stuttered.\n\n\"You want to touch it, don't you?\"\n\n\"Yes ma'am, can I?\"\n\nI nodded my approval.\n\nJason slowly reached out with a cautious hand as if my crotch were a vicious dog waiting to bite. As he got closer, he could feel the heat being generated by my body. I ached for his touch, but I stood my ground and made him come to me. At last, his hand made contact and he pressed his cupped hand into me, cradling my tucked penis with his fingers and pressing his palm into my pelvic bone.\n\nI moaned deeply at his touch, biting my lower lip and letting my eyes roll back in my head. It was a show for Jason, but at the same time I was ecstatic that he had finally touched me.\n\nJason slowly rubbed his hand back and forth, his previous apprehension melting away. All of his fears of being with me were being pushed aside by his desire to pleasure me. My legs began to wobble in my platform boots as the waves of enjoyment pulsed through my body.\n\nJason started to pull his hand away, but I caught him by the wrist and pushed his palm back into me with even greater force.\n\n\"I didn't say for you to stop.\"\n\nCaught off guard, he continued to massage my tucked dick as I straddled his body on the couch. I pressed my chest towards his face and Jason attacked me with full force, one hand still cupping my crotch, the other pulling me close from behind, all while his mouth sucked and licked my neck.\n\nI began to grind into his palm as I became more aroused. Jason rubbed me more aggressively, only pausing when I grabbed his shirt and pulled it over his head, quickly resuming where he had left off. My moans became louder and mixed with the sound of my rubber suit sticking to Jason's skin.\n\n\"I want to see you cum so bad!\"\n\n\"I want to cum with you inside me,\" I practically begged.\n\n\"How do I take this thing off?\" Jason asked.\n\nI stood up and turned my backside towards Jason, pointed at the crotch zipper, and winked. Jason slowly unzipped me about halfway, exposing my ass to him. Then he pulled his pants to his ankles and motioned for me to sit.\n\n\"I can't take you without any lube.\"\n\n\"I...I don't have any lube,\" Jason admitted.\n\nI laughed. \"That's what I'm here for, baby.\"\n\nI dropped to my knees and immediately took Jason's cock in my mouth, slobbering all over the head and allowing my drool to sloppily drip down the shaft. He was so hard, I didn't even need to use my hands, so I placed them under his bare ass and pulled him into my mouth as I worked his knob.\n\n\"Fuck...Allison, your mouth is amazing.\"\n\nHappy with how much spit I had left on Jason's dick, I quickly hopped up, wiped the spittle from my lower lip and turned around to put my back to Jason. I backed up to the edge of the couch, reached between my legs to get a firm grasp on his cock,\n\nSlowly, I guided the head of Jason's cock through the opening in my latex suit and up against the opening of my hole. Jason supported me by placing his hands on my exposed hips and steadying me as my legs wobbled on my heels. His cock finally found purchase, and with a small rock of my hips, I quickly bottomed out and found myself in Jason's lap, his cock buried to the hilt, deeper than I had ever felt him.\n\nI let out a large moan as he filled me completely. After a brief pause, I began to work his dick with my ass, pulsing my quads as I bounced up and down. As I opened my eyes, I noticed that I could see our reflection in the dark TV. I watched as Jason fucked me with his glorious cock.\n\nAfter I settled into a rhythm, Jason again reached around and began rubbing and pressing his palm into my flaccid, tucked penis. I rewarded him with several more moans, and eventually leaned back for him to kiss my neck and fondle my breasts with his free hand.\n\nI was in heaven being pleasured from both sides. My mind was in a fog and all I could think about was my impending orgasm. Slowly, I leaned forward and put both of my hands on Jason's knees so that I could pull each leg onto the couch, and ended up riding Jason reverse cowgirl.\n\nAs I bounced wildly on his dick, thrashing my hips and waving my hair, Jason slowly but deliberately inched my zipper forward. I was too entranced in the throes of passion to warn him that he was too close to setting my cock free, but surely enough, as that zipper moved upward, eventually my tucked penis was no longer supported and squirted free from the bodysuit's tight hold and ended up in Jason's hand.\n\nMuch to my surprise, Jason didn't recoil in horror or even stop what he was doing. He gently gripped my flaccid cock and began to stroke it with three fingers and his thumb. I again flung my body back into him as his skin touched my dick for the first time.\n\nI arched my back hard. Jason grabbed my hair and pulled me into him with one hand while the other stroked me into a small erection.\n\n\"Yes...yes...YES! Jason! Make me cum. Make me CUM!\" I yelled.\n\nI couldn't take it anymore. The pleasure was overwhelming. As Jason thrust his cock into my ass and stroked my dick with his hand, I lost all control of my body. Every muscle tensed as I came into Jason's hand. My back arched farther than I ever had as I let five spurts erupt and cover the hand Jason used to get me off.\n\nI reached behind and held onto Jason's neck for dear life as I rode the orgasm to completion. Just as I was finishing up, I felt Jason tense.\n\n\"I can't hold out any longer,\" he yelled.\n\nJason's hands left my cock and my hair and immediately went to my hips to pull me down into him. He covered my right hip in my own cum as he held me down. Just then, I felt his powerful release as he came in me over and over.\n\n\"Oh fuck!\" Jason screamed.\n\nI watched our reflection in the dark TV as Jason filled me to the brim with his sweet, sticky fluid. I could not stop grinning at the sight of me covered in a combination of our semen.\n\nAfter Jason had finished, I quickly stood up, stretched my legs, and jumped back into his lap to shower him with kisses in gratitude for another amazing orgasm, hoping for several more before the day was over. Eventually, I slid off of Jason and laid down on the couch, pulling him with me.\n\n\"That was incredible,\" I whispered.\n\n\"You are so fucking sexy. I would do anything to watch you cum.\"\n\n\"I see that now.\" I admitted. \"You definitely surprised me there, but I must say, you sure know how to stroke a girl off.\"\n\n\"I surprised myself too, but in the heat of the moment, I just had to feel you in my hand. I needed to make you cum like last time.\"\n\n\"Well it worked. I liked it.\" I said as I gave Jason another kiss.\n\nWe continued to lay in one another's arms as we rested up for round two. Jason's eyes closed as he drifted off into a nap and I snuggled in closer, taking comfort in his strong body.\n\nJust then, I heard the front door open from upstairs.\n\nI bolted up, startling Jason.\n\n\"Shit, Jason...get dressed. Someone's home!\" I said in a loud whisper.\n\nQuickly, I jumped up, grabbed my duffle, and quickly and as quietly as possible in my boots made my way to the bathroom.\n\n\"Oh fuck, oh fuck, oh fuck,\" I mumbled to myself as I tried to wiggle out of the latex bodysuit and thigh high boots.\n\nMy entire body shook with fear as I stepped out of my heels, desperately trying to get changed before I was discovered. I didn't have any boy's clothes with me, so I'd have to change into the leggings and sweater I had worn to Katy's.\n\nDespite my rush, I tried to be as quiet as possible to see if whomever was home had made it into the basement. Once I was dressed, I quickly refreshed my makeup. Thankfully, Jason hadn't cum anywhere that wasn't easy to wipe up.\n\nAfter a quick refresh, I heard voices from outside the bathroom.\n\n\"Mom, what are you doing home?\"\n\nJason was being loud for my benefit. Unfortunately his mom did not play along.\n\n\"Mmm phmmm early...frmmm winnnn store.\"\n\nI could barely make out what they were saying, but I couldn't stay in the bathroom forever. I did my best to calm my nerves and gather my strength. I took a deep breath and opened the door, stepping out to encounter Jason and his mom.\n\nMrs. Trevino was surprised by my sudden appearance.\n\n\"Jason, you didn't tell me you had company.\"\n\n\"Um, sorry mom.\"\n\n\"Allison, isn't it?\"\n\nI nodded in agreement.\n\n\"Nice to see you again Mrs. Trevino.\" I said politely.\n\n\"Oh, dear it's great to see you again too. I was wondering if I'd get to run into you again.\"\n\nShe turned her attention to Jason.\n\n\"You didn't tell me that you two were seeing each other again.\"\n\n\"It's um, kinda a new development.\" Jason mumbled.\n\n\"Well how nice. Jason, go bring in the groceries from the car. I'd like to have a chat with Allison.\"\n\nMy eyes practically shot out of my head. Jason tried to stall, but there was no hope. He mouthed \"sorry\" as he disappeared up the stairs, leaving me alone with his mother.\n\nJudy turned to address me once her son was out of earshot.\n\n\"Allison, I'm so happy to see you and Jason back together.\"\n\n\"Thanks, me too.\" I admitted.\n\n\"Good. Good. But you know, I've been meaning to tell you, I've finally placed where I know you from.\"\n\nMy heart thundered in my chest. This is it. I'm busted.\n\n\"It took me a while,\" Judy continued, \"but eventually all the pieces started to come together.\"\n\nI couldn't believe this was happening. I wanted to run and hide. Just when I was falling in love with being Allison, and more importantly, getting along with Jason so well.\n\n\"Well, let's just say that I'm happy that Jason found a way to make time for his best friend, Allison. Or should I say Allen.\"\n\nMy face went white with fear. My life as I knew it was over. I felt like I was going to faint.\n\nJudy rushed to my side and caught me.\n\n\"Oh dear, sit...sit!\"\n\n\"I...I...I don't know...\"\n\nMy mind was spinning. My body shook uncontrollably. A million things raced through my head, all of them ending in disaster. I hadn't been this terrified since I showed Jason that picture of me dressed as a cheerleader. This was a thousand times worse.\n\nJust then, Jason clambered down the stairs and saw the look on my face, pale as a ghost.\n\n\"Oh shit,\" he whispered."
    ],
    "authorname": "AshRynn87",
    "tags": [
        "crossdress",
        "lingerie",
        "cheerleader",
        "stockings",
        "boots",
        "latex",
        "dominatrix",
        "transgender",
        "anal",
        "big cock"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/homecoming-queen-ch-03"
}