{
    "title": "Camera Buff - Exposed Ch. 01",
    "pages": [
        "Notes\n\nThis story takes place in my fictitious town of Malvado Playa California. It's the next day after the events in Camera Buff. If you haven't already read my story Camera Buff, please read that first! You'll enjoy it!\n\nAll characters in this story are over the age of eighteen... but just barely!\n\n*\n\n\"No, really, Dude. What's the deal with Rona Barrett?\"\n\nJason Indrani had been pestering me at every break since lunch. I was trying to open the combination on my locker, but he kept making me lose my rhythm.\n\n\"Stop bugging me... crap!\" If I didn't hit the numbers on the spinning dial exactly right, it wouldn't work and I'd have to start over again. It was a temperamental tumbler.\n\nHe stared at me with an exasperated expression on his skinny, dark face. \"Why the frig would Rona friggin' Barrett kiss you on the friggin' cheek?\"\n\n\"I'm just helping her. She wants me to take pictures of her teddy bear collection. It's nothing. She's just buttering me up so I do it for free. Like I got nothing better to do.\"\n\n\"In that case, you shouldn't settle for a lousy kiss on the cheek. If it was me, my price would be one minute of free access... squeezing her luscious tats.\"\n\nOh, If Jason only knew. But there was no way on earth I was going to tell him that I'd not only squeezed Rona Barrett's luscious tats the previous night, I'd shot my cum all over them, at least twice, while I videotaped and photographed the whole thing. Man... it would blow his mind to see those photos. Heck, it blew my mind every time I thought about it. But he'd never see them. They weren't in my possession anyway. Rona had confiscated the flash cards when we were finished. I was hoping that tonight, when Rona and I got together, that I'd get a chance to see them. I didn't dare hope for more.\n\nWhen I finally opened my locker, a bright pink slip of paper fell out and landed at my feet.\n\nJason snatched it up.\n\nHe looked at it and said, \"Whoa!!\" before handing it to me.\n\nIt read, \"Bring your camera. Rona.\" I felt a flush of warm emotion surge through my heart.\n\nBut I had to hide my feelings from Jason. \"What are you so excited about? She just wants me to bring my camera. I'm taking pictures of her stuffed animals, duh.\"\n\n\"Heh, heh. I'd love to take pictures of her 'stuffed animals' too! But seriously dude, are you blind? Look. She spelled the 'O' in 'Rona' with a heart! She's your friggin' girlfriend, Louis, and you don't even know it!\"\n\nActually, that's what I wanted to believe, but when you're a nerd you learn to keep your expectations low. What did a heart shaped 'O' prove? For all I knew, that's just how she wrote her name.\n\n\"Take a cold shower, Jason. I'm late for class.\"\n\nAs I made my way to Trigonometry, I thought about the fact that Rona wanted me to bring my camera. I'd already planned to... hell, I never went anywhere without it... but the fact that Rona went out of her way to tell me to bring it made my dick stir. Maybe she wanted to pose for me again. I sure hoped so! In fact, if I had to choose between fucking her again, or taking some nude pictures, I woulda picked the pictures in a heartbeat.\n\nI suffered through Trigonometry, barely able to concentrate, wondering what, if anything, Rona had in store for me. My mind was still racing with vivid images of our wonderful night together... my cock sliding between her lips... the feel of her silky soft pussy on my tongue... that little black mole on her left breast... the sight of my virgin cock slipping into her beautiful vagina... particularly the second time when I wasn't wearing the condom anymore... I could still feel my flesh buried deep inside Rona Barrett's body... fuck. Just thinking about her made my heart ache and my stomach turn.\n\nOur night of crazy sex hadn't changed the basic fact that I was a nerd and she was Rona friggin' Barrett. I just knew that she wouldn't fuck me again, much less fall in love with me. She was way out of my league.\n\nI'm just kidding myself thinking there's even a possibility. Maybe she was just manipulating me after all... hoping I'll do her homework... Damn... If so, she has me pegged. I'll do anything for her... anything... as long as there's even a remote possibility of seeing her naked again. She can dangle that promise in front of my nose for the rest of the year... I'll be her abject slave. Oh... Rona... Rona...Play with my heart, Rona... I'm yours... and maybe... maybe... just maybe... the little heart shaped 'O' means what Jason thinks it does!\n\nWhen the bell rang I ran like hell to the photo studio to collect my camera bag from the lock-up. Mr. Hanners was there, and since I was his favorite student, he started chatting with me about upcoming assignments for the yearbook. After a while, I interrupted him, asking if I could borrow the portable flash kit. He said 'sure', so I fished the big bag out of the closet, as he started talking about arranging a photo session for the Colorguard. A few days ago I would have been salivating at the opportunity to photograph those sexy girls, Laurie Bonner in particular, but today I was breathless with impatience.\n\nHe was in mid-sentence when I just said, \"Sorry, Mr. Hanners, gotta go!\" I'd never ran out on him like that before, but I had a date with Rona Barrett, Student Council President, and sexiest girl at Malvado Playa High School!\n\nI was out of breath by the time I reached the parking lot. Most the students had already taken off, and I was afraid she might have given up on me. I was relieved to see her leaning against the side of her car. She was glowing in the eternal California sunshine. But she wasn't alone. Wylan Jansen, who played all the romantic leads in the school musicals, was standing right in front of her, one hand casually gripping her roof, the other hooked in his belt buckle. He was leaning in awfully close... his chest almost touching her breasts. She had her hands behind her back and was looking up at him sweetly as she laughed at whatever crap he was yammering about.\n\nHer body language made my heart sink. They were definitely flirting with each other. And why shouldn't they? They were perfect specimens of the human species. Naturally, they were drawn to each other. What chance did a scrawny creep like me have against the likes of Wylan Jansen?\n\nIt could only mean that I wasn't her boyfriend after all. I stopped in my tracks and watched them a while, certain that in a second or two she was going to kiss him, invite him into her car and drive off without me.\n\nBut then she saw me standing there. \"Louis! There you are!\"\n\nShe waved at me with a big smile on her face. She scrunched right out from under Wylan's arm and started walking toward me with a happy little bounce in her step. He looked pissed when he saw that she'd dumped him for me. I felt a surge of hope.\n\n\"I thought you forgot about our appointment.\"\n\n\"No. I just had to pick up my stuff.\"\n\nI thought she was going to hug me, but instead she snatched the big flash kit from my shoulder. As I followed her to the car like an eager puppy, she opened the zipper and looked inside. \"Wow, what's this stuff?\"\n\n\"The portable flash kit. Just in case you want to... you know... pose for a few more pictures.\"\n\nShe grinned back at me, \"You certainly are an optimistic little devil.\"\n\nI blushed.\n\nWylan was still standing by her car, but she just brushed him aside, imitating the sound of a car alarm, \"Step back from the car. Wooe eeee, wooo eeee, wooo eeee. Beep! Beep! Beep! Beep!\"\n\nShe tossed the flash kit in the trunk and pointed me to the passenger door, \"Well, get in. We're burning daylight.\"\n\nWylan looked at us with confusion as we got in the front seat. She rolled down her window and waved him over. \"Need a ride, Wylan?\"\n\nHe had a tight expression on his face. \"No thanks.\"\n\n\"Bye, then,\" she sing-songed. She looked at Wylan in the rearview as we drove away, chuckling. \"Poor Wylan. His car wouldn't start, and he lives way over near the outlet stores. I'm pretty sure he wanted me to give him a ride home.\" She giggled, \"But he's too proud to ride in the backseat.\"\n\n\"Behind the camera nerd.\"\n\nShe reached out and squeezed my thigh, \"Behind my camera nerd.\"\n\nA shot of erotic energy shot right out of her hand, through my thigh, straight into my cock. Fuck! She's really into me! It was so mind-blowing; I just couldn't get over it. I just sat there and stared at her beautiful face and body, as she squeezed my thigh playfully. The fact that I already knew what she looked like naked didn't in any way diminish the impact of her amazing figure. She was wearing a tight yellow T-shirt that made her breasts look devilishly perfect. Her curly auburn hair was sparkling in the sunlight, revealing deep red and orange accents. Her blue eyes scanned the road ahead of her. She was silent, but her hand was talking to me on my thigh.\n\nShe turned off Center Street and headed out along the causeway, toward Malvado Estates. She drove in silence for a while, her hand slowly moving up my thigh to my crotch. By the time she reached my cock, it had erected a tight tent out of my jeans. She kept her eye on the road, but grinned as she rubbed my erection with her palm. Oh fuck! We're gonna fuck again! Yeah!\n\nI cleared my throat, trying to sound nonchalant. \"How were the pictures?\" My voice cracked a bit on the last word.\n\nShe grinned. \"I haven't looked at them yet. I wanted to look at them with you. By the way, when do you have to go home?\"\n\n\"Dang. I forgot to call my mom.\"\n\n\"Then you better do it, genius.\"\n\nI took out my cell phone and dialed home. Just as the phone stared ringing, Rona unzipped my fly and let my raging cock free.\n\n\"Hello?\" said my mom, right at the moment when Rona wrapped her hand around my naked shaft.\n\n\"Oh, uh... hi, Mom. I'm going over to a friend's house to study tonight. Is that okay?\"\n\nRona started stroking my cock, sending a rush of endorphins to my brain. I'd been hoping we might hook up again... someday, but I never dreamed she'd just whip out my cock within minutes of being alone with her!\n\nMom was saying, \"Honey, did you hear me?\"\n\n\"What?\"\n\n\"I said, which friend? Jason?\"\n\n\"No. Just someone from the camera club. You don't know her.\"\n\n\"Her?\"\n\nShit, I didn't mean to say I was going to a girl's house, but I could barely think with my cock in Rona's hand.\n\nThere was a happy tone in Mom's voice. \"Louis, are you going out on a date?\"\n\n\"Not exactly... uhhh,\" I moaned. Shit, Rona's hand felt good! She spit into her palm and started jerking me aggressively with her lubricated hand. I moaned again.\n\n\"Are you okay, Louis?\"\n\n\"Fine, I just... have to... uh... I dropped something.\"\n\n\"Well, Louis, I hope she's a nice girl. Maybe you can invite her over for dinner sometime.\"\n\n\"I dunno... Mom... maybe...mmff!\"\n\n\"Honestly, Louis. I don't know where you get your shyness. When I met your father, he was a real Casanova...\"\n\nMom kept talking, but I totally zoned out because right at that moment Rona took my left hand and put it on the wheel and said, \"You steer.\" Then she leaned over my lap and took my raging cock into her hot mouth. The car lurched forward, because her foot was pushing too hard on the accelerator.\n\nMy mind was exploding! I was trying to steer down a twisty road, as the car went faster and faster, while Rona sucked my cock with her amazingly perfect mouth. She was applying major slurping action, as she plunged her head up and down on my shaft. Meanwhile, my mother's voice was chattering away in my ear, oblivious to my gasps of pleasure.\n\n\"All you need is to show a little confidence. You're a very good-looking boy. If this isn't a date, you should definitely ask her out.\"\n\n\"Oh... kay... Mom... maybe... uh. Ohhh.\" I could feel my balls tightening, and a warm sensation spreading through my abdomen, as I began to feel the first warning surge of my impending orgasm.\n\n\"Promise me you'll ask her out.\"\n\n\"Oh.... Kay...\"\n\nI held my hand over my mouth as a jet of semen shot out of my cock into Rona's mouth. I jerked the wheel sharply and we swerved onto the shoulder, kicking up a cloud of dust and pebbles. I eased us back onto the road as Rona sucked and slurped and swallowed my cum, completely trusting me to keep us alive. We were now doing about 80 by this time, in a 45 zone. But the nearest car was still pretty far ahead of me, so I wasn't ready to panic just yet.\n\nI heard Mother's voice as if it were coming out of a fog. \"Louis? Louis? Do we have a bad connection?\"\n\n\"Sorry,\" I said, breathing heavily, \"I guess so. What did you say?\"\n\n\"I said, what time will you be home?\"\n\n\"Uh... by midnight, I guess... would that be okay?\"\n\n\"Well... okay. Do you need me to pick you up?\"\n\n\"I don't know... no... she'll drive me home I guess.\" Rona made a nodding motion on my cock.\n\n\"Okay, Louis. Have fun. Treat that girl right, and there's no telling what might happen.\"\n\nI laughed, \"Okay, Mom. Bye!\" I flipped the phone closed, just as Rona finished slurping the last drop of cum out of my cock.\n\nRona sat up and took hold of the wheel and slowed us back down to the speed limit. She wiped the drool and cum out of the corners of her mouth with her delicate fingertips, just like a well-trained lady should. She turned to me and said, grinning, \"Sorry, Louis. I couldn't resist. I've been wanting to suck your cock all day!\" She laughed a happy little laugh.\n\nThat's the exact moment that I fell in love with Rona Barrett. I would follow her to the ends of the earth. I would throw myself in front of a bullet for her. I would be her abject slave for all eternity.\n\nShe turned into Malvado Estates, a neighborhood made up of beautiful multimillion-dollar beach houses. Wow, if she lived out here, I was going to be impressed. I guess I had always assumed, based on the stories I'd heard, that she was rich, but this was more than rich. It was movie-star rich. But she passed through the area and headed out along Shoreline Road, then turned into Playa Dunes Park where she pulled to a stop in the little parking lot.\n\nShe opened the door and said, \"Bring the camera, Louis. Maybe that flash kit thing too.\"\n\nI followed her down the twisty, sandy path for a minute, my camera bag and the flash kit slung over one shoulder. After a few steps she stopped and looked back at me and held out her hand. I walked up and took her hand in mine, my heart all-aglow. Now we were walking hand in hand down a beautiful path shaded by twisty, windswept eucalyptus trees. It wound through rolling sand dunes, which were beautifully overgrown with iceplants. I could smell the ocean. It was early October, but it was pretty warm for autumn. People in bathing suits passed us on the path.\n\nAlthough I'd already had sex with Rona, I was surprised how intimate it was just holding her hand. I realized that I'd never actually held a girl's hand since I was a little kid. It felt awesome. We were taking our first romantic stroll together. I was glowing with happiness. She flashed a smile at me from time to time, so I hoped she felt the same.\n\nI was also hoping she'd pull me to her and give me a kiss. Then it occurred to me, quite suddenly, that I didn't have to wait for her. I could do it myself. So, I stopped, pulled her to me and planted my lips on hers. She kissed me right back, as if she'd been waiting for me to make a move the whole time. It was a sweet, long kiss, with lots of tongue and heavy breathing. It made my whole body tingle. Several beachgoers had to dodge around us on the narrow path, probably thinking what a strange couple we made. Rona, as I've said before, is a stunning beauty. Me? Not so much. I was about the same height as her, but scrawny. My nose was a little too large, my ears stuck out a little too far, and my rough brown hair was a little too unruly. I was an obvious nerd. But Rona didn't seem to care. She held me tight, pressing her thigh against my growing erection and kissed me so sweetly, I dared to hope that she loved me as much as I loved her.\n\nAfter a while she broke away from the kiss, saying, \"I don't want to lose the light.\"\n\n\"Okay.\" Lose the light for what, I wondered?\n\nShe led me a little farther. Then she slowed down, looking around. \"I think it was right around here somewhere... Hmmm... Oh, yeah, through here.\"\n\nShe led me off the main path, through a dense copse of low bushes that tugged at our clothes. We came into a pretty little horseshoe-shaped clearing. At the western end of the clearing there was a hump of sand, sitting in full sunlight. In the center was a beautiful, arching skeleton of an ancient sun-bleached tree, rising out of the sand on one side, and diving into it on the other. Beyond, was a perfect view of the beach below us. The bluffs of Playa Norte loomed in the distance, jutting out into the glittering, blue Pacific. Even though we were only a few feet off the main path, there was a quiet hush of seclusion.\n\nRona said, \"I came across this place last summer. I gave a Rory Jones a blowjob right on that dead tree. How's my hair?\"\n\nHer hair was a mess, but hearing about her giving Rory a blowjob sort of made me pause for a second. Rory was the class clown, or at least he thought he was. In the locker room after gym class he was always bragging about girls wanting to suck his rather large cock, but we all thought he was making it up. Now I knew better. That kind of thing actually happened.\n\n\"Your hair's not too bad. Just needs a little fluffing.\" I stepped up and ran my fingers through Rona's auburn locks; working out the kinks and making it flow beautifully across her shoulders. When I was done, I boldly lowered my hands to her breasts.\n\n\"These need a little fluffing too.\" She smiled and let me feel her up. I couldn't believe how easy it was to just reach out and fondle her boobs. But why should it be surprising? I may have been a virgin yesterday morning, but I wasn't anymore. I was Rona Barrett's lover. I had a free pass to her breasts, and I was going to take advantage before she inevitably lost interest in me. I gave her another kiss and backed off. The light was too beautiful to waste. I quickly readied my camera, setting up one small flash, just to fill in a bit, since the sky beyond was pretty bright.\n\nShe posed all over and around the dead tree, removing articles of clothing one at a time. I didn't have to coax her into poses. She ran the whole show, coming up with different and interesting ways to luxuriate across the various silvery shapes of the tree. I went through hundreds of digital photos over the next half hour, but I had enough memory on my flash cards to take thousands of pictures, so I just snapped away like crazy.\n\nBut I was terrified the whole time. Anybody could have walked into the clearing at any time. We could hear beachgoers and surfers rustling through the bushes as they walked up and down the main path. But Rona didn't seem to care.\n\nShe was down to only her bra and panties, when I said, \"Aren't you afraid someone will bust in on us?\"\n\nShe giggled, \"I guess so. But that's what's turning me on so much!\"\n\nShe leaned on the stump and pulled her bright pink panties aside, showing me her dripping wet cunt. God, it was so beautiful. Last night I'd been sadly thinking I'd never see her auburn pubes again. I knelt down in the soft sand and took close-ups of her glorious pussy in the warm sunset. She opened the delicate pink lips with her fingers for me. The flash illuminated the inside of her pink tunnel in the most amazing way. My cock was throbbing in my pants, but I ignored it. The photos were much too beautiful for me to worry about fucking right now.\n\nThen she stripped out of her panties, with her backside to me, as I captured the beautiful play of orange light across her shapely cheeks and back. She had a fine layer of peach fuzz on her skin that was normally invisible, but was sparkling in the light of magic-hour.",
        "Lastly she stripped out of her bra, pulling it down to expose one breast at a time, before opening it up all the way. The lust I felt seeing her breasts again almost choked me. I had to step in close for just a moment to touch her breasts, almost as if to assure myself that they were really there, running my fingertips delicately across the adorable black mole just under her left areola. Her nipples tightened and grew at my touch.\n\n\"Hey,\" I said, \"they look better a little harder.\"\n\n\"Suck them and they'll look even better.\"\n\nShe didn't have to ask twice. I bent over and suckled her nipples tenderly. I stepped back and now they were glistening hard with my saliva. I took several pictures as she climbed to the top of the dead tree. If anyone down at the beach had noticed the flashes of my camera, they'd have had a perfect view of her naked body right then.\n\nWhen she got to the top of main arch of dead wood, she sat and stared at my camera with an expression so intense that I was afraid it might melt my lens.\n\nShe opened her legs and said, \"I read somewhere that porn stars have 'fluffers'. Someone to suck their pussies to make them look their best.\"\n\n\"Oh, you need a little more fluffing, do you?\" Her pussy was right at mouth level, so I stepped up wrapped my lips around hers and fluffed her good and proper. Holy shit, she tasted good. When I stepped back a minute later, her vagina was swollen and dripping wet. I took more photos of Rona's glory, as the setting sun filled the very air with magic. It was sinking below an amazing array of glowing clouds on the horizon, casting an orange halo around Rona's angelic body.\n\nI took photos as she slipped a finger into her pussy and then sensuously licked the juice off of it. Right about then, I noticed a couple of surfer dudes way down on the beach pointing up at us. They started walking our way, but it was quite a distance, so we had time to take a few more pictures with the last bit of light rimming Rona's perfect body, before the sun finally was snuffed by the clouds.\n\nThen I said, \"We've been spotted. Let's bug out.\"\n\n<br> Rona looked, seeing the surfers approaching, \"We should stay and let them fuck me while you take pictures.\"\n\nFor a second, I thought she meant it. And weirdly... the idea excited me. But Rona was only joking. She pulled on her pants and yellow T-shirt and stuffed her underwear in her pockets. As we ran back up the path, giggling, her breasts were bouncing around like crazy in her shirt. I couldn't look away, so I tripped and tumbled into one of the dunes.\n\nShe pulled me to my feet and said, \"Keep your eyes on the road, mister.\"\n\nI gave her tit a squeeze and said, \"You make it so hard.\"\n\n\"I bet I do,\" she said, squeezing my erection. We heard the surfer dudes coming up the path so we ran the rest of the way to the car. When we got there she told me to get ready for another picture. I didn't know what she had in mind, but I lifted my camera to my eye.\n\nThe surfer dudes walked out into the parking lot. The second they saw Rona standing by her car, illuminated by a bright halogen light, they stopped. Rona winked at me so I started taking pictures. Rona lifted up her yellow shirt and gave the surfer dudes a nice long look at her naked breasts. My heart was racing. I had Rona and the dudes framed up nicely in the shot. Their expressions were priceless, as was the side-view of her beautiful tits. She turned toward me to take a few more shots with them ogling her in the background. Then she turned her back to them, dropped her pants, and bent over to let them see her ass and pussy. I was snapping away like crazy. The dudes were smiling and blushing. But then they took a step toward us, and Rona said, \"Time to go!\" We jumped in the car and peeled out before the dudes had a chance to get much closer.\n\n\"That was fun!\" she said, laughing, as she drove us back into town. She saw me looking through the pictures on the little display on the camera, and said, \"Nope! Hand them over.\" I took out the flash card, and she also took the one I'd put in my pocket and put it in hers. Damn!\n\nShe took us to the drive thru at the Dairy Bell to get some burgers. I was about 51 percent certain that she was my girlfriend now, so I figured I ought to act like it and pay for the food. Luckily I had just enough money in my wallet. She knew the girl at the window, a girl with pink hair and dragon tattoos on her arms named Sally. She looked familiar to me, but I couldn't place her. Rona didn't introduce us, even though they were obviously friends. Maybe I wasn't really her boyfriend after all.\n\nAs we were waiting for our order to come up, Rona gave me back the flash card for a moment and flashed her tits at me. Man... I could never tire of taking photos of those amazing tits of hers.\n\nWe ate as she drove over to the north side. It had been relatively easy for me to grab her tits, but I found it difficult to work up the courage to ask her the question I'd been dying to know. Was she my girlfriend, or not? But I just couldn't bring myself to ask, afraid the answer would be 'no'.\n\n\"So, who was that girl at the drive-thru? She looks familiar.\"\n\n\"Sally Nazarian. You probably know her. She dropped out a few months ago, right after she turned eighteen. She used to have black hair. You know... always dressed super conservative?\"<br> <br> \"Yeah! I remember Sally! Wow! And now she has tattoos on he arms! No wonder I didn't recognize her!\"\n\n\"People have their public selves and their secret selves. Sally just decided one day to make her secret self her public self. Pretty brave, if you ask me.\"\n\nWe'd scarfed down our burgers as she drove to a big electronic store. I followed her inside, wondering if she intended to flash a few more people, but instead, we went to the computer area. She said, \"My computer doesn't have enough memory for all those pictures. I need to get a hard drive or something.\"<br> <br> \"What kind of computer do you have?\"\n\nShe told me. It was a third rate brand of P.C. Not knowing much I suggested a large external hard drive. She was disappointed by the prices, but she finally picked the one that had the most memory for the least money. She was nervous as she paid with her credit card. As we were leaving she said, \"I was worried they'd reject the charge. I'm a bit behind on my payments.\"\n\nI wouldn't have thought Rona was strapped for cash. That was a bit of a surprise.\n\n\"I work part time over at the outlet stores, but most of my salary goes into the care and feeding of my car.\"\n\nAs we were about to leave the store, Rona's eyes opened wide and she suddenly pulled me aside and behind a display. We hid there as Sandra McQueen came into the store followed by a large group of friends. Sandra and Rona had been rivals from elementary school all the way up until the moment Sandra graduated last year. Not that they fought or anything. In fact, I'd only ever seen them be nice to each other, as if they were great friends. I didn't have any idea what their relationship was, but I could see the bad blood all over Rona's face as she watched Sandra disappear into the crowded store.\n\nWhen we got to the car, Rona said, \"Sorry. I just didn't want to talk to 'the Queen' right now.\"\n\nRona brooded in silence as she drove us into Playa Norte, which was the rattiest neighborhood in town. I started to realize that Rona's whole image as a rich kid was nothing but smoke and mirrors. She came to a stop in front of the dilapidated, two-story disaster zone she called home. It was shocked. Rona was poor? Her car wasn't new, but I'd figured it was a hand-me-down from an older sibling or something. But it was actually better than the crappy Junkers that were parked in the weedy yard.\n\nHer house was just horrible. It looked like it hadn't been painted since the seventies. And the inside was just as bad as the outside. It was crammed full of shabby furniture, and piles of worthless junk, and stacks of old newspapers lining the walls from floor to ceiling. There weren't even any curtains in the windows, just bed sheets, which had been stapled to the crumbing window frames. The place reeked of bug spray.\n\nTwo lazy looking, twenty-something girls were lounging on the cruddy looking couch staring dumbly at a flickering old television. They were obviously twins. They looked a little like Rona, but with smaller breasts, and their auburn hair was pulled up in ponytails. They were dressed in ripped-up Black Sabbath T-shirts and jeans shorts. They looked angry and depressed, but quite sexy, in a slacker sort of way. They didn't even look up at Rona or me, but just stared at the TV, holding hands. She whispered to me, \"My older sisters Tab and Tam\".\n\nRona's mother came out of the kitchen, and looked slightly annoyed to see me standing there.\n\n\"Mom, this is my friend Louis. He's helping me with my homework.\"\n\nLooking at Rona's mom was like looking at her worst possible future. Mrs. Barrett had all of Rona's physical features, but with about fifty extra pounds added, and the gravity of defeat pulling down every inch of her frame. She smiled a dull, pleasant smile, but there wasn't even a hint of Rona's vibrant personality in her at all. Still, Mrs. Barrett had the remains of beauty about her. If she dressed a little nicer and took some self-esteem classes, she'd probably have been quite a BBW. As it was, however, her very presence sucked the life out of the room, what little of it was there. She didn't offer me anything to drink or eat, but just stared at me, a wan smile on her faded face.\n\n<br> As we went upstairs Rona rolled her eyes, and muttered, \"Sorry you had to meet the gorgon.\" She unlocked her bedroom door.\n\nI was happy to see that Rona's room was an oasis of beauty in the flea-ridden house. It was colorfully decorated and filled with excitingly girlish stuff. I don't think I'd ever been in a girl's bedroom before, but this was exactly what I imagined they were like. It smelled of lotions and potions, which barely covered the faint odor of mildew.\n\nThe second we walked through the door she shut and locked it. We started kissing immediately. She pulled me down into the huge pile of stuffed animals that was covering her entire bed, causing them to cascade all around us. She stopped kissing me when she heard a thumping sound on the staircase, and sat up, holding her finger to her lips. The footsteps clumped by the door, continued down the hall until a door slammed shut.\n\n\"That was my father going to his 'office' to get plastered. He won't come out again tonight, so you don't have anything to be worried about.\"\n\n\"Worried about?\"\n\n\"He likes to bully my boyfriends. Why do you think I don't have a regular boyfriend? He just chases them off.\"\n\n\"So...\" I said, \"Does that mean I should be afraid or shouldn't be afraid?\"\n\nRona ignored my clumsy attempt to find out if I was her boyfriend or not. Instead, she excitedly opened up the hard drive box and started unwrapping the components. I helped hook it up to her ragged, out of date computer. Then she took out the flash cards and said, \"Let's take a look at what we got!\"\n\nI helped her download the flashcards from the previous night and the ones from earlier in the day. She sat in my lap the whole time, her body vibrating with excitement. I'd taken a lot of pictures, so we passed the time making out. I ran my hand up her shirt as we kissed, to fondle her naked breast. Every time I touched her I was a little bit afraid she'd be offended, and every time I was thrilled to discover, once again, that I had a free pass to boob city. It was heaven!\n\nWhen we had all the pictures copied, she said, \"What about the video we took on your camcorder?\"\n\nI banged my forehead, \"Dang! I forgot to bring the camera. We need to have that and a cable, to transfer it to the computer.\"\n\n\"That's okay. We'll look at those another day. I don't have any video editing software anyway.\"<br> <br> I was actually a bit worried that her crappy old machine wouldn't even be able to view the pictures, but it worked okay if we didn't open too many at a time.\n\n<br> Looking at those pictures with Rona was insanely exciting. My hard-on was pressed up into her ass the whole time. We were both pleased with how nicely my primitive lighting job turned out. Her body... heck, both our bodies looked amazing. I'd been worried all night long that most of the pictures would be blurry, but thanks to our patience and willingness to take things slowly, they were mostly sharp and focused. Rona was thrilled beyond belief.\n\nThe first set of shots were the ones she'd taken of me disrobing and then masturbating for the camera. I was thrilled with how turned on she was by the shots of me. I wasn't that happy with my nerdy face, or scrawny chest, but even I had to agree that my seven-inch cock looked amazing, particularly with her hands and lips wrapped around it.\n\nAfter Rona joined the photo shoot, the photos got even better. She was stunning, erotic, sensual and sweetly innocent, all at the same time. An absolute, fucking wet dream. She made love to the camera with her eyes, even as I was making love to her body.\n\nThere were also several small movies that I made with the camera's movie mode. They were low res, but thrilling to watch. The first movie showed my fingers touching Rona's vagina. Rona was so turned on looking at this movie that she started rubbing her crotch. But a second into it, she stopped the movie and said, \"Make a movie of us watching the movie.\"\n\nI loved the way she thought! I hopped up and went to work. Then I realized I'd foolishly forgotten to bring a tripod. But there was a lighting stand in the flash kit that made a good substitution. Once I had the camera pointed at us, she sat in my lap and started rubbing her crotch again as I played the movie. I reached up to fondle her tit again, pushing her yellow shirt up, to expose her breast for the camera. She moaned as I pinched and played with her nipples. We did that for a while, watching the rest of the movie in which I went down on her for the first time, giving her a screaming orgasm.\n\n\"You tasted amazing, Rona.\"\n\nAfter that we looked at the pictures and movies of her giving me my first blowjob.\n\n\"You tasted amazing too, Louis.\"\n\nAs we looked, she stood up and leaned forward on her computer table, presenting her ass to me. I stood up behind her and, looking over her shoulder at the monitor, began to grind my hard-on into her ass.\n\n<br> Then, feeling bold, I reached around and unbuttoned her pants and lowered the waistband halfway down her thighs. She hadn't put her underwear on after the beach shoot, so moments later I was looking at her glistening slit. I did what comes natural in that kind of situation. I dropped my pants.\n\nI took my throbbing cock in hand and placed the head right between her beautiful pussy lips. Then I said, \"Shit. I forgot. I haven't had a chance to buy condoms yet.\"\n\n\"Don't worry about it. I'm on the pill.\"\n\n\"Really? You had me wear a condom last night.\"\n\n\"Yeah, I forgot to take my pill a few days ago. That fucks things up for a day or two, so I was just trying to be safe. Well? What are you waiting for? An engraved invitation?\" She giggled then groaned as I slid my cock into her pussy. I felt like the king of the world. I'd been worrying all day that she'd never want me to do this again, but here I was, fucking Rona Barrett again, and without a condom even. I looked over her shoulders at the movie she was watching. In it I was fucking her tits. I couldn't believe it. I was fucking her while watching myself fuck her. Does it get any better than this? I slammed into her faster and faster, matching my speed in the movie, watching her beautiful tits bounce and quiver around my cock, as I slid my cock in and out of her tight, wet pussy. Then, in the movie, I began to cum. Jets of semen shot out between her tits, splashing her face with white drops.\n\n\"Fuck, Louis. Look at that!\"\n\nThen she looked through the close-ups I'd taken of my cum on her tits and face, and it pushed me right over the edge. I grunted and started slamming my cock into her pussy with a vengeance.\n\n\"Oh you like that, do you? You like cumming on me?\"\n\n\"Yeah...\"\n\n\"In that case...\"<br>\n\nRona pulled off me and turned, kneeling and pulling her shirt up just as I started cumming. I jerked jets of white across her perfect tits, thrilled with the knowledge that the camera was taking a movie of the whole thing. I looked down in wonder as Rona laughed and giggled, and I shot one last blast, catching her right on the nipple.\n\nShe said, \"Get the camera.\"\n\nI got the camera, but I left it in movie mode and just got in closer to make a video of her sucking the cum off my softening cock. Then, looking up with innocent eyes at the camera, she spread my cum all over her tits. \"I hear this is good for the skin.\" But after rubbing it in for a minute, it began to form into little globs. She giggled, and grabbed a towel to wipe the residue off.\n\nWhen she was done, she said, \"Thanks, sweetie. Now lets look at the rest of the pictures.\"\n\nWe pulled up our pants and she sat in my lap again. I was about as happy as I'd ever been in my life. We panted while looking through the rest of the previous day's shots. They were so fucking insanely hot that within minutes my cock was raging hard again. I stuck my hand down her pants and started rubbing her pussy. We did that through the final sex shots of the previous night, at the end of which I rubbed her pussy long enough to give her a vibrating orgasm in my lap. She covered her mouth to keep from being too loud, since her dad might not be asleep yet.\n\nAfter that, we looked at the beach photos. They looked better than any of the previous pictures. Rona was stunned. \"Holy, shit, Louis. I thought that would be a good location... but I really had no idea. These are... they're professional! I look fucking amazing! A fucking rock star! How did you get the balance on the flash so perfect?\"\n\n\"Practice, I guess. Mr. Hanners is a good teacher\".\"\n\n\"Goddamn it, Louis... you're amazing. I'm so glad you're my guy.\"\n\nI grinned. I'm her guy. Is that the same thing as being a boyfriend? Does that mean she loves me?\n\nRona hugged me again and said, \"I need to get some sort of editing software. I want to edit that movie we made last night.\"\n\n\"Okay... but your computer can't possibly handle it. Mine can, though. We could do it over at my place tomorrow. You can bring your hard drive, and we can work on it together.\"\n\nShe smiled wickedly and said, \"Nice try. I'm keeping these photos in my control. At least until I know for sure that I can trust you.\"\n\n\"You can trust me.\"\n\nShe smiled. \"That's what my father told my mother before he ruined her life. And the thing is, he loves her like crazy. Love doesn't stop people from doing stupid things, or being assholes. No, these pictures are mine and that's that. I'm not letting them out of my control. I'll just have to figure out some way of making enough money to buy a new computer.\"\n\n\"Okay. Whatever you want Rona.\"\n\n\"What I want, Louis Blackburn, is to do another photo session tonight. Right here. And it will involve fucking. You okay with that?\"\n\nI gulped, filled with excitement, but a little dread. \"Yeah... but... there are a lot of people in this house. That door of yours looks pretty thin.\"\n\n\"I know. It's weird... but I've had sex in here five or six times and nobody has said a thing. I don't think they care what I do. You should hear my sisters going at it sometimes. \"\n\n\"They have boyfriends?\"\n\n\"No, with each other.\"\n\nI laughed. But Rona said, \"No, seriously. They're lovers. Fucked up house I live in, huh? Anyway, don't worry, by now my dad's too drunk to hear us.\"\n\nI had no idea if Rona was pulling my leg or not about her sisters being lovers. But if it was a lie, it was a pretty weird lie to tell.",
        "\"So... what do you want to do?\"\n\nShe smiled wickedly, \"What do you want to do?\"\n\nI was smiling now. \"I want to fuck you in that big pile of teddy bears.\"\n\n\"Yeah!\" she said. \"That's perfect! What should I wear?\"\n\n\"I don't know, what have you got? Something girlish, I guess.\"\n\nWe walked to her closet and dresser and we looked through her stuff. My heart was racing hard. It was exciting to look through her clothes, particularly her underwear drawer. I tried to act professional, but my hardening cock gave me away. Rona rubbed it playfully, \"You like looking at my underwear, sweetie?\"\n\n\"Who wouldn't?\"\n\n\"Louis, I want you to dress me before you undress me. I'm in your hands.\"\n\nI was like a kid in a candy store. I had no fashion sense, but it was easy to find silly, girlish stuff in Rona's wardrobe. I picked out a silly t-shirt with a big smiling bear on the front and pink sleeves that she probably hadn't worn since she was fifteen. I also found a sexy little pair of silky pink shorts with white stripes on the sides. I added to that a pair of long socks with pink and white horizontal bands. She had a lot of pink stuff, so I also picked out a pair of sparkly pink sneakers. For underwear, I went with the whole pink theme and picked out a matching pair of panties and bra, with a pattern of pink hearts on them.\n\nShe told me to step out of the room while she dressed, so that I would be surprised for the unveiling later. I didn't like going out into the dark, smelly hallway, but at least I heard the comforting sound of her father snoring in the room down the hall. That meant that he wouldn't bust in on us and throw me out the window. As I was waiting there, my cock throbbed in anticipation.\n\nOne of Rona's sisters, I'm not sure which, stepped out of the nearby bathroom. She was zipping up her cut-off shorts. Before I could cover my erection, she'd already seen it. She walked up to me with an impassive look in her face. She was a few inches taller than me. She walked right up and stood with her tits just an inch from my chest.\n\n\"You gonna fuck my little sister?\" I didn't answer. I just looked at her face... it was freaky. She was a harsh, alternate-reality version of Rona. Sexy as hell, but very intimidating and somewhat scary. She had the same blue eyes with brown flecks that Rona had, and the same full lips and auburn hair. But she was a little skinnier and her face more angular, and her hair was a little shorter and scruffier.\n\nI jumped as she started rubbing my erection with her hand. \"You gonna fuck my little sister with this fat cock of yours?\" I nodded, petrified that if I didn't answer she might do something even weirder.\n\nShe leaned in closer, pressing her firm breasts against my chest. She brought her mouth up to my ear and whispered, \"Fuck her good and hard for me. And when you're done, our room is right over there. You can fuck me and Tam, if you have the balls.\" She left her hand on my erection and just breathed into my ear, as I inhaled in her cheap perfume. I totally wanted to fuck her, but at the same time, I was terrified by the very idea of it. I was completely certain she was just toying with me, like a cat plays with a mouse before eating it.\n\n\"I'm ready,\" said Rona.\n\nTab gave my cock as squeeze and said, \"Well. Don't keep her waiting.\" I fumbled for the doorknob and spun into the room, shutting the door and locking it, as Rona had done earlier. Now I knew why she kept it locked.\n\nRona looked adorable in the little girl outfit. But before I could compliment her, she saw the look of dismay on my face.\n\n\"Did you run into someone out there?\"\n\n\"Your sister. Tab, I think...\"\n\n\"Did she tell you to come to her room later?\"<br> <br> I nodded.\n\n\"She means it too.\" Rona smiled, \"But I wouldn't do it if I were you. Those girls are man-eaters. David Spruce went in there after he finished with me. His back was scarred up with scratches for weeks. Anyway, when I'm done with you, there won't be anything left for them.\" She giggled sweetly. I couldn't believe she'd just told me about having sex with David Spruce. That guy was one of the most handsome guys in school. And here she was fucking me too. Maybe I was better looking than I gave myself credit for.\n\nRona looked as cute as a bug. She'd put her hair up in two ponytails, with colorful pink scrunchies. And she'd put some blush on her cheeks and pale pink lip stick on to make herself look younger.\n\n\"So, why don't we try and do something more story-based this time?\"<br> <br> I smiled, my heart pounding in excitement, \"Sure.\"<br> <br> She waited for a few moments, and then said, \"Well, you're the director, Louis.\"\n\nI thought about it. \"How about... uh... maybe...\" I had an exciting, dirty thought, but I blushed and shook my head, \"No, no... too weird.\"\n\n\"What? What were you thinking? I saw that wicked look in your eyes. What is it?\"\n\n\"You're going to think I'm a creep.\"<br> <br> \"I already think you're a creep. That's what I like about you, sweetie.\"\n\nThat's the third time she's called me 'Sweetie'! I'm Rona Barrett's sweetie!\n\n\"Okay, well... uh, how about... you're a girl... a sweet innocent type girl and I'm... uh... your brother.\"\n\nRona grabbed my face and kissed me. \"You are so fucking wicked! I love it!\"\n\nNow my mind was racing, \"Okay... so, this will be photos only. We shouldn't waste time on that crappy little movie mode.\"<br>\n\nShe nodded, \"Next time we'll use your parent's camcorder.\"\n\nI blushed. Fuck... there's gonna be a next time!\n\nI gulped and continued, \"Uh, you'll be... I don't know... what do little girls do?\"\n\n\"Playing with my dolls, maybe?\" She dragged a pink, toy mansion out of her closet and a bunch of fashion dolls. \"I haven't played with these for years, but I used to pretend they were my real family. This one is me... this is my mommy... oh, this one's my brother. I don't have a brother, but I always wanted one.\"\n\nI felt a little tug at my heart as she told me this. There was a deep well of sadness in Rona Barrett that nobody knew about. Nobody but me, that is.\n\nI placed the flashes around the room. They would all flash at the same time, reacting to a signal from my camera. Meanwhile Rona set up the doll mansion and moved stuff out of the way that looked too old for the setup. When she was ready I took some sample pictures to make sure the flashes weren't too bright. I just wanted to make sure the exposures could be nice and fast, and that her eyes would light up nicely.\n\nI was also thinking how wonderful it would be to not have to worry about holding still every few seconds, as we'd had to do the night before. That was no way to make love!\n\nWhen she was ready I hand-held the camera as she played with her dolls, trying to make her face ooze with innocence. Man, she was good at that. Her eyes were so moist and her lips so rosy and cute... and her ponytails bopped about so damned playfully... I was already getting hard in anticipation of seeing this 'little girl' get naked for me. I'd already cum twice since she picked me up after school, so I wasn't sure I had the stuff in me to cum again, but that wouldn't stop me from fucking her long and hard!\n\nRona had an instinct for the dramatic. She had the brother doll drive up in his plastic car and come up the plastic elevator to his plastic sister's room. Then Rona started mashing their hard little faces together. Soon they started undressing each other, as Rona's made cute little kissy faces.\n\n\"Yeah. That's great, Rona!\"\n\nHer face was blushing with intense interest as the brother doll pulled down the sister doll's panties, and then Rona put his face up under her skirt, between her legs. Then she bashfully stripped the brother doll naked; wistfully touching the blank spot between his legs with the sister doll's hard little hands. Then Rona had him take off the rest of his sister's clothes and carry her to the little plastic bed, where Rona opened the sister doll's legs so the brother doll could 'fuck' her. Rona's face was amazing throughout. She was really turning herself on with this little game... and me too. As she played, she touched her breasts longingly and rubbed herself between the legs. Then she looked up in surprise.\n\nI knew exactly what Rona had in mind.\n\nI handed her the camera and went to the door. I unlocked it and opened it and pretended that, as the brother in this scenario of ours, I'd been standing in the doorway watching Rona play with her dollies long enough to see her doing dirty things with them.\n\n\"Oh, yeah, Louis,\" said Rona, \"Your erection looks amazing. But make your face look more shocked... now interested... now walk in and close the door. That's it. Now walk toward me.\"\n\nAfter she took those shots, she handed me the camera and I took pictures standing up, as if I were the brother looking down at my naughty little sister. I switched to a wide-angle lens so I could have my crotch in the foreground as she looked up at me with wonder and surprise. Then I unzipped my fly, taking several shots of the process, my bulging underwear emerging as Rona looked up at my boner in innocent amazement.\n\nI dropped my pants, stripping to my underwear, but leaving my shirt on. I was happy I had decided to wear my best pair of undies today. I'd put them on in the morning when I was certain Rona was never going to talk to me again, but hoping against hope that I was wrong. Good instinct!\n\nI talked to her, \"Now, reach for your brother's cock. Slowly, tenderly... it's something you've always wanted to see...\" She reached for me, her eyes wide with curiosity and touched my erection, wrapping her fingers around my girth through my bright blue underwear. Then slowly, Rona pulled the waistband down, revealing my huge cock to her wonder-filled eyes. She even looked a little scared.\n\n\"That's a good little girl,\" I said softly. I reached out and took one of her ponytails in my hand and drew her forward, slowly, as I snapped picture after picture, until my cock was right on her nose, making her cross-eyed in wonder. She reached up with her hands to touch my amazing man-meat. She had a way of really making me feel impressive. Damn... I'm doing a real, authentic porn-shoot, with the most beautiful girl I've ever known... and she's about to suck my cock! I feel like I just won the lottery.\n\nHer mouth opened and my shaft slipped in to those moist, rosy lips of hers. It was an amazing thing to take pictures of. Just amazing. And it felt amazing too, the way she swirled the tongue around the head... but I had to keep a little detachment in order to frame the shots properly. I guided my cock in and out of her mouth with one hand tightly gripping her ponytail.\n\nThen I put the camera on the improvised tripod and aimed it in our direction.\n\n<br> She said, \"Wait. That's not right. Here.\" She put a pile of books down for me to stand on. \"You're my big brother, after all.\" Now my head was slightly out of the frame and she was looking up at me innocently from her knees. I set the camera to automatically take shots.\n\nI had her suck me some more in this angle, and I even grabbed both her ponytails to make it look like I really had control of her. It was liberating not to have to hold the camera. Now I could concentrate on how fucking great it felt to have my cock in Rona Barrett's mouth. Oh shit... if I hadn't already cum twice already, I'd be cumming in her mouth by now!\n\nThen I pulled her to her feet by her ponytails, making her laugh. We had to do it a second time so she wouldn't crack up. Then I pulled up her shirt to reveal her pink, heart-dotted bra as she looked at me in embarrassment. I fondled her tits and she rolled her eyes back in pleasure. Then I unhooked the center hook between her tits, so her breasts fell free. She covered them coquettishly in embarrassment, but I pushed her hands open and fondled those amazingly round and delectable boobs of hers. Fuck yeah. I loved that they were bigger than my hands. Then I pushed her down to suck my cock some more, while I leaned over to cup her tits, feeling their impressive heft.\n\nI was having an amazing time. The previous night she'd been mostly in charge, but now I was! Rona Fucking Barrett was gleefully doing any filthy dirty thing I wanted her to. It was almost more than I could wrap my head around. I felt so powerful. This is what jocks must feel like all the time!\n\nAfter more cock sucking, I repositioned the shot to have her standing by her bed, her shirt pushed up so her boobs were delightfully exposed. Then she took off her pink shorts and stripped down to her panties, as my hand pointed into the frame as if the brother were commanding her to strip. I had her leave on the pink panties, socks and sneakers for the rest of the shoot. Then she sat on the bed and leaned back into the pile of teddy bears, with her legs open. I moved the camera in closer and took shots of her panties up close, with the tantalizing shape of her pussy mound inside the soft heart-dotted fabric. A few stray pubic hairs were sticking out the side... I don't know why I found that so awesomely sexy, but I did.\n\nThen I had the camera take more automatic shots of me licking her pussy through the fabric of her panties until they were good and wet. The scent of her pussy was driving me wild. I prolonged this longer than necessary, because I was just enjoying it so damned much. But eventually, I pulled the panties open to reveal her beautiful pussy, with the delicate lips and delightful fan of fluffy, auburn pubic hair. I leaned in close and tongued her clit lightly. She gave a gasp of pleasure. I started swirling my tongue around, playing with the hard little lump, making her moan and writhe about. She wasn't acting. She loved how my tongue felt on her silken pussy.\n\nI started slowly licking up and down, feeling the subtle, wonderful shapes of her lips sliding across my taste buds. I wanted to memorize every detail of her amazing cunt, every little silky flap and fold of her. I sunk my tongue as deep into her well as I could, releasing a little flood of her delicious pussy juice onto the top of my tongue. She was so wet, it started dripping out of her, darkening her bedspread.\n\nI'd been wanting to suck her pussy again since my brief taste of it on the beach. I think that was my favorite thing about sex with Rona, so I savored every moment of it, burying my nose in her fluffy pubes and inhaling her scent, as I lapped her again and again from bottom to top, making her gasp with each movement. I stuck my index finger inside her silky canal and began to masturbate her, trying to respond to her movements and sounds to let me know where to touch her and what rhythm to take. I worked her up to a loud, throaty orgasm. She was no longer trying to be quiet. I was surprised how loud she was being, knowing that her sisters and mother could probably hear. But I didn't shush her. It was her house. It was none of my business.\n\n\"Oh, god, Louis! You're so fucking good at that!\" She was looking at me in amazement. I smiled, proud of my accomplishment. But really, I owed my skill to her communicative nature, not to any knowledge I possessed. I was making it all up as I went along, trying to learn how to play her like a musical instrument, and my lessons were coming along nicely.\n\nMy cock was throbbing with anticipation. I couldn't wait much longer. I moved the camera back a bit. Then I opened her stockinged legs, as she looked up at me with fearful anticipation in her eyes. I didn't take off my clothes. I placed the throbbing head of my cock right between her swollen pussy lips and worked it up and down the opening, spreading her juices all over, and making her jump each time I flicked it across her clit. Then I moved the camera closer and slid my cock all the way into her pussy, as she moaned happily, trying to pretend that she was virgin who'd just had her cherry popped.\n\nSeveral teddy bears tumbled off the mountain onto her naked breasts as I started fucking her slowly and deeply. I didn't need to pause as much as the previous night because the flashes were giving me pretty fast shutter speeds. So I was able to screw her in a more natural way. All the while we were both intensely aware of the camera. Every few seconds the flashes would snap, and then they'd start whining as they powered up again. It was so fucking erotic!\n\nThe whole time we did this, we barely spoke. I didn't need to direct her. She just seemed to know what I was going to ask for as soon as I thought of it.\n\nI was glad now that I'd cum twice already, because I wanted this to last a long time. In the back of my mind I still feared that this would be my last encounter with Rona Barrett, so I wanted to enjoy every instant and draw it out as long as possible. But I needed other angles so I flipped her over sideways and fucked her that way for a while, as I kissed her and fondled her insanely perfect tits. She looked up at me with an excitingly innocent expression. Even though she was going through another orgasm, she never stopped acting the character.\n\nOne thing that really turned me on was the fact that she still had those adorable pink sneakers on. There was something about fucking a mostly clothed girl that was almost more erotic than when we'd fucked totally naked. It really felt like she was the virgin this time around.\n\n\"Oh fuck, oh fuck, Louis. Oh god, your cock is so hard! Shit!\"\n\nI flipped her onto her belly and made her crawl up onto her knees so her chest was buried in bears. She looked back at me as I fucked her doggy style, pushing her down into the pile of plush. I grabbed the camera to get some close-ups of my cock sliding in and out of her tight, velvety pussy. I loved the way the fine fold of flesh between her pussy and asshole moved and stretched as I slid in and out of her warm embrace. She was so wet that my cock was glistening beautifully with her juices. She moaned with each long, slow thrust, as I pressed myself as far into her as I possibly could, slowly building the pace up the way I was learning she liked it best.\n\nI aimed the camera at her face and fucked her hard. I wanted pictures of her having an orgasm, and I got them. Her mouth opened in a wordless O, and her eyes rolled back in their sockets as I pounded her as hard as I possibly could. She was slowly sinking down into the pile of bears.\n\nI flipped her on her back again. Now she was completely buried in bears, with only her lower half sticking out. I took some great shots of her wide open legs, then I climbed up on the bed and I fucked her some more, getting shots of her face down there in the bears looking up at me in amazement.\n\n\"How the fuck are you lasting so long? I've never had a guy last this long before Louis! You're a fucking beast!\"\n\nAlmost as if on cue, I felt my balls constricting, \"Funny you should say that... I think I'm going to cum soon.\"\n\nShe grinned up at me, \"How do you want to do this, Mr. Director? In my pussy, or on my face?\" She giggled.\n\n\"Well... let's go for the money shot. On your knees, if you don't mind.\"<br> <br> \"My, aren't we being professional?\" She giggled as I pulled out of her. She immediately got on her knees. I hand-held the camera, aiming it down at her obscenely cute, little girl face.\n\n\"Now, make me cum Rona.\"\n\n\"Yes, sir, Mr. Director, sir,\" she said playfully. Then she started sucking my cock again, this time much harder and deeper than before. She even tried swallowing me in the back of her throat. It made her gag a little, but it made the head of my cock swell and throb delightfully.\n\n\"I don't know what you're doing Rona, but it feels fucking awesome... Oh shit...\" I grunted, \"Here it comes...\" She pulled out and looked up at me, stroking my cock with her left hand, her eyes wide open as if 'little sister' had no idea what to expect. Then I pushed the shutter at the exact moment the first jet of cum shot out onto her face. It got her right in the eye. She cracked up, squeezing her eyes tightly shut, but I kept taking pictures. It was so fucking real. I felt like a porn star. I just blasted my cum into Rona Barrett's eye!!",
        "Then I took pictures of her licking my cock clean. Afterwards, I took more shots of her innocent, cum covered face. She had one eye closed. It was so raunchy and so wrong. I had her take my picture as the 'brother' left the room, pulling his pants back up. Then I took pictures of her sitting by her doll mansion, looking at her dolls, her face still dripping with cum, with a dreamy expression on her lovely, innocent face.\n\n\"Okay,\" I said, \"That's a wrap!\"\n\nShe clapped her hands excitedly and said, \"Download them! Let's look! We need to see if we missed anything or need any retakes.\"\n\n\"Good idea.\" While I downloaded the pictures, she left the room to go clean the cum off her face. I couldn't believe she went out into the house looking like that. This was one weird family.\n\nShe came back, glowing and fresh faced, although the eye I'd cum in was a little bloodshot. After locking the door she sat on my lap and we made out. It was amazing. Every time we kissed, we were getting better and better at it. It was every bit as sexy as full on intercourse.\n\nThen we looked through the pictures I'd just taken, and we were both impressed with our work. Some of the shots would have to be trimmed or cropped, but really, nobody was ever going to see them, so I doubted we'd ever bother doing that pointless work. We were particularly thrilled with the cumshot. In the shot, a looping tendril of cum is frozen in space, jetting out of my cock, hovering just millimeters away from her open eyeball. If it hadn't been porn, it would have been an amazingly artistic shot.\n\nShe kissed me again, \"Louis. You are my god.\"\n\nAll I could think was, who is this girl? What does she see in a dork like me?\n\n\"I love you, Rona.\"\n\nGulp. I just blurted it out, I don't know why. She tensed up and I instantly realized it was a bad move. But then... I saw something in Rona's eyes. A little flash of happiness that gave me enough hope to ask the question that I really wanted answered. \"Do you love me too?\"\n\n\"Louis... shit. We're just getting to know each other. Do we need to start with the labels?\"\n\nI hugged her. \"Be honest Rona, please. I don't care what you tell me. Just tell me the truth. I can't stand not knowing how you feel about me.\"\n\nShe pulled back from me a bit, and the light-hearted expression left her face. \"Shit, Louis... I didn't want to get into this tonight. I wanted to think about it some more... I stayed up all night last night thinking... thinking... thinking... I was confused by my feelings. I thought maybe I'd wake up and I'd feel differently... but I didn't. I felt... I feel just the same as I did last night.\"\n\n\"How?\"\n\nShe took a deep breath, \"I feel... like I can trust you. I can't tell you how many boys have asked to take pictures of me. You know, nude pictures, or pictures of me sucking their dicks. They're all alike. I'm not shy... hell I love cameras, but I've always said 'no'. If there's anything my parents taught me is that you can't trust anybody. Sooner or later any nude picture of me will end up on the Internet. That's a fact. Just ask my mom. If you should ever want to see her raggedy, worn-out pussy I'll send you the URL. She trusted dad, but he trusted the buddies he sent them to. Now anybody can see them for free on a dozen different sites. They'll never go away.\"<br>\n\n\"That's messed up,\" I said. But perversely, I was very interested in seeing Mrs. Barrett's pussy photos, though I would hardly tell Rona that.\n\n\"Anyway, I never thought I'd trust anyone to take nude pictures of me... until yesterday. I always thought that if I ever caught a guy trying to sneak a nude photo of me I'd kill him... but then yesterday... I saw you sneaking pictures of me with my tits totally hanging out... and damn... I felt a rush you wouldn't believe. Like nothing I've ever felt before. I didn't stop you... I didn't smash your face in. I just... let you take them. I thought you were cute, I guess. I always have, really.\"\n\nI was amazed. Rona Barrett thought I was cute? That's news to me!\n\n\"I didn't think you were hot or sexy or anything. Just cute. Still, it was enough for me to let you continue taking my picture. Then as we progressed, and you took the fur wrap pictures... it was like you were making love to me with your camera.\"\n\n\"I was. I'm glad you noticed.\"\n\nA wide beautiful grin broke on her face, \"By the end of that bit, my panties were dripping wet, and I thought you were more than cute. I thought you were a fucking hottie, and I wanted to show you everything. So when your back was turned, I did just that. It was scary... trusting you like that. Between the photo session and the time I showed up at your house you could have done anything with them. You could have sent them to all your friends or posted them on the Internet... you could have totally fucked me over.\"\n\n\"I'd never do that. But you didn't really trust me enough to keep them without blackmailing me,\" I said, smiling\n\nShe had a very thoughtful expression. \"You know what? That blackmail thing was the best idea I think I've ever had in my life. Not only did I get to have the greatest night of sex in my life... but I finally found someone I can truly trust... because he has to trust me too. I don't think you realize how important that is to me. You're the only person I've ever known that I can really trust.\"\n\n\"You can. Forever.\"\n\nShe kissed me again, deeper and longer. But I could sense she wasn't done talking yet. \"When I went over to your house that night I was intending to confiscate the flash cards and delete the originals off your computer... but, damn it, Louis, those were amazing photos! I mean... I always thought I was pretty, but I got turned on just looking at myself. It would be a shame to delete them. And... I suddenly wanted you to keep them. I wanted to know you were looking at them and jerking off when I wasn't around... did you jerk off to them this morning?\"\n\nI nodded. She grinned and kissed me deeply.\n\n\"Yeah, I thought so, sweetie. Anyway, I came up with the blackmail thing just so I had some way to trust you with them. All I intended was to take some nude shots of you, but sweetie, the second you took off your shirt, I knew I wasn't going to stop there. I knew I was going to fuck you in front of your camera. But even then, I had no idea how utterly awesome it was going to be. Usually guys just fuck me until they cum, but you took your time, making sure every moment, every detail was properly photographed. It was insanely sexy! Even when I was sucking your virgin cock you had the presence of mind to make sure the shot was in focus and properly framed. Do you know how crazy hot that is to me? Fuck!\"\n\nShe slipped me some deep tongue this time, before talking again.\n\n\"And we were like a team, you know? Working together... right on the same page the whole time. I've never been fucked like you fucked me last night. Actually... I don't even think we fucked at all. We made love. Now that I think about it... that was the first time I ever did that. \"\n\n\"So,\" I said, hugging her tight, \"you were a virgin too, in a manner of speaking.\"\n\nShe put her hand on my cheek and her eyes misted over. \"Goddamn it, Louis. I've never felt this way about anybody before. And I've fucked a bunch of guys... thirteen, not including you, and I've given blowjobs to seven others. But it was never like that... neh-ver. Holy shit! It was like the skies parted and the finger of God came down and pointed at you and a big booming voice said, 'he's the one. That nerdy guy right there! The one with the camera and the beautiful cock! He's going to change your life!'\"\n\nShe paused. Her expression was intense. Her eyes roamed all over my face, looking at every detail of me, as tears welled up and spilled down her cheeks.\n\n\"I love you, Louis,\" she said, her voice cracking with emotion.<br> <br> I knew it! I almost jumped out of my skin from the happiness. I gave her a huge kiss.\n\nThen she pushed me away gently, saying \"But...\"\n\nI was crestfallen. \"But. There's always a 'but'.\"\n\n\"No, honey, it's not that bad. Hear me out.\"\n\n\"Okay.\"\n\n\"Look, Louis... I know I look all happy and shit at school, but really... I hate my life. Or at least, I hate what my life is inevitably going to become if I don't escape this shit-hole. I've always had a dream of going to Julliard... you know, the performing arts school.\"\n\n\"Oh, man, that's perfect, Rona! You're a great singer!\"\n\n\"Yeah, but... I'm a terrible student. My grades are almost straight C's. Mr. Brickley tells me there's really no way for me to go to Julliard unless I pay my own way. It costs something like fifty thousand dollars a year! I mean... it's totally impossible. Look at my family! They don't have two pennies to rub together.\"\n\n\"Wow. I always heard your parents had a lake house.\"\n\n\"Yeah, I've heard that rumor too. The lake house we have orgies at, right? Sorry to disappoint you. I've never had a lake house... or an orgy, for that matter. I'm poor, Louis. I'm poor.\"\n\n\"Sorry, Rona... gosh...\"\n\n\"And tonight, when I saw Sandra McQueen... well.. I felt this incredible chill run through me. It was like I was looking at my own future. She used to have hundreds of friends and was always talking about her amazing future. But now she's only got a handful of friends, and she's stuck at the shitty local college, and she hasn't figured out that her life has already peaked. It's never going to be as good again as when she was eighteen. I am not going to let the same thing happen to me.\" Rona suddenly started sobbing with emotion,\" The only fucking college I can afford to go to is the same fucking college Sandra McQueen goes to. And their music program is total crap.\"\n\nI hugged her and she sobbed into my shoulder. \"Rona... I don't know what to say. I wish I could help you somehow.\"\n\nShe sniffed and a hopeful, desperate look came over her face. \"Louis. Maybe you can help me.\"\n\n\"How?\"\n\nShe stared at me the longest time, her eyes glistening with tears. Then she said, \"Louis, I've been having crazy thoughts all day... particularly when we were at the beach earlier... and all night actually... I can't help but think... well...\"\n\n\"What?\"\n\nShe held my hands tight and stared at me with amazing intensity, \"I can't believe I'm going to tell you this... Oh, shit. No. It's too crazy. You'll think I'm a lunatic.\"<br> <br> \"You can tell me anything, Rona. I won't judge you. What can I do?\"\n\n\"Louis... I want you to make me a porn star.\"\n\nSilence filled the room. I was looking into her eyes as she said it. And you know what? It made perfect sense to me.\n\nI smiled. \"That would be awesome, Rona. I'm gonna make you a fuckin' porn star.\"<br> <br> Tears fell out of her eyes, and she smiled like a crazy woman, \"You mean it? You don't think it's a creepy idea?\"\n\n\"Rona, you're so beautiful that if you decide to go into porn, you'll be a millionaire by the time you're twenty. Then you can go to any school you like.\"\n\n<br> She hugged me so tight, it felt like my bones were going to snap. I said, \"But... why the change of heart? I thought you didn't want your pictures on the Internet.\"\n\n\"That's not me. That's my mom. Knowing those pictures are out there has made her a recluse. She can't stand the thought that everyone she meets might know what her snatch looks like. It ruined her life. But me... I don't give a shit who sees my snatch. I actually kind of get off on the idea of people wanting to see it. But I need to control it. I need to own the website and decide what goes up and what doesn't.\"\n\nI nodded. \"Sure... that's smart. But you know... everybody... all your friends... all your teachers... they could all see you naked... having sex even, if that's the kind of porn you wan to do.\"\n\nShe grinned. I saw a twinkle in her eyes. \"Yeah? People think I'm such a goody-goody... so sweet and pure and virginal... everybody except the guys I fooled around with, and some of them have this idea that I'm some kind of saint or something. I'd love to see the look on everyone's faces when they realize I'm not who they think I am.\"\n\n\"Okay,\" I said, \"In that case, let's show them!\"\n\nShe kissed me desperately, with overflowing emotion and love. I was amazed by the feel of her tears rolling down onto my cheeks and mixing with my own. It was the craziest thing. Rona Barrett, Student Council President, wanted to be a porn star.\n\nBut, after all, what's so crazy about that? Every porn star started out as just another pretty girl. They all went to high school, and everybody thought they were sexy and beautiful, but at some point they all chose to take that path less traveled by, often at the age of eighteen. And now Rona had chosen it. She had good reasons and the right disposition, so why not?\n\nAnd, hey, I loved porn. And I loved photography. So why not be a pornographer? I hadn't actually decided exactly what to do for a living. Heck, I'll make an awesome pornographer!\n\nShe grabbed my shoulders tight, \"Now what?\"\n\nI looked at my watch. \"Now... I guess you better drive me home. It's almost midnight.\"\n\nShe nodded. \"I guess it's too late for you to fuck my sisters. They'll be so disappointed.\" She giggled. I still had no idea if she was joking or not. What a weird, wonderful girl!\n\nShe helped me pack up my camera stuff, making sure to delete the files off the flash cards before handing them back to me. I held the cards and thought... there are ways to recover deleted images from these things.\n\n<br> But I felt it would be a betrayal not to tell her. \"Rona. You know, deleted images can be recovered from flash cards. Let me show you how to reformat them so they can't be recovered.\"\n\nShe looked at me with an amazed expression. \"You know what, Louis? I take back everything I said earlier. I fucking trust you. Here.\" She started to disconnect the hard drive to hand it to me.\n\nI said, \"No, no. You keep it. I don't need naked pictures of you. I have you.\" She hugged me tight, \"Here, let me put encryption on that for you. That way your weird sisters can't access any of the photos.\"<br>\n\nShe was more amazed than ever, \"I didn't even think of that. You're right. They probably would try to look. Man... its great having a nerd watching out for me.\"\n\nI downloaded an encryption program from the internet and set her up. When I was done, she kissed me softly and said, \"I love you, sweetie.\"\n\n\"I love you too, Rona.\"\n\nWeird. I'd only really known her for two days, but we loved each other as if we'd been dating for weeks. I guess that's how love is sometimes.\n\nAs she was driving me home we tried to figure out the basic plan for our porn venture. Neither of us knew really where to begin. But I had an idea. \"You know what? My friend Jason knows all about this stuff.\"\n\n\"Jason Indrani? The Indian kid?\"\n\n\"Yeah. He's a computer genius, and he claims to be some kind of expert on the porn business. He's always talking about how he could make a million dollars selling Internet porn if he only had a bunch of 'bitches' willing to drop their drawers for him.\"\n\n\"Colorful language.\"\n\n\"Oh, he's a good guy. A little nervous, and weird... and crude... but I've known him all my life. I really don't know enough about computers or websites to even know where to begin. I think we need someone like Jason to help us.\"\n\n\"Yeah? I don't know...\" She looked very doubtful.\n\n\"Yeah, Jason's a mega-dork... a total spaz, but hey, he's my best bud. If we hope to earn a dime on this thing, we're going to need partners we can trust.\"\n\n\"Well... if you can come up with a way to convince me he's the man for the job...\"\n\n\"I will.\"\n\nAs we were driving into my neighborhood, Rona saw a little park with a swing set brightly illuminated under a sodium lamp. I'd spent half my childhood in that park. It was only three blocks from my house.\n\nShe stopped the car and got out. \"Bring the camera. Leave the flash stuff.\"\n\nI obeyed, following her into the park nervously wondering what she was up to now. She looked around. It was right around midnight. Some nearby house lights were on, but the cold streets were dark and empty.\n\nShe smiled wickedly, \"One thing's for sure, if we're going to be pornographers, we need to take a shit load of shots. So lets do one more setup before I take you home.\" She started taking off her clothes. \"These will be nude art shots. Do you think there's enough light?\"\n\n\"Wow. Well, it's pretty bright right here on the swings, but people walk their dogs all over this neighborhood. Somebody will see us...\"\n\n\"Not if we do this fast.\" She stripped totally naked in record time and sat in the swing, her glorious body gleaming in the cold night. She shivered, but didn't complain as I moved around snapping shots. She opened her legs to show her pretty pussy and fingered herself, pretending to have an orgasm. She mimicked it pretty good, but I'd seen her have real orgasms. Still, there was something stark and amazing about the shots I took of her on that vividly illuminated swing-set. I totally got a boner at the sight of her. The expression on her face in these shots was utterly different from the 'little girl' shots. Now she looked older, more... artistic, I guess. More like a real, professional model. Her face shone with intelligence and beauty.\n\nAfter posing in the swings in every way she could imagine, she ran over to another pool of light, which was shining down on a rocket ship slide. We went around to the far side and she laid down with her back on the cold metal slide. Her body was now shivering so much that her tits were quivering. Right about then, a police car slowly cruised by on the street we'd parked on. Luckily she was hidden from their view now. Wow... if they'd come by just a minute earlier they would definitely seen her naked on the swings! Would they have arrested us? We need to be more careful!\n\nI took several pictures as she posed all over the slide. She was shivering like crazy, but she put up with the cold like a pro. Rona kneeled on the slide and looked over her shoulder and said in her shivery voice, \"F-f-fuck me, L-Louis.\"\n\n\"I thought this was supposed to be art shots,\" I snickered.\n\n\"Fuck art. I want your c-c-cock in my p-pussy.\"\n\nNever one to complain, I dropped my pants, and whipped out my trusty cock, and stuck it right into her, marveling at how cold her pussy lips felt. She moaned, and a puff of steam came out of her mouth. It was really starting to get frosty.\n\nI felt her whole body shivering around my cock. \"You must be freezing, Rona!\"\n\n\"F-f-f-fuck m-m-me, f-f-fuckwad!\"\n\nSo I pulled out and put my camera on a nearby rocking horse, aimed it at us and set it to take pictures every second. Then I fucked her hard and slow, so the photos wouldn't be too blurry. I was standing with my legs straddling the bottom of the slide. It gave me an amazing angle into her, and since she was kneeling with her hands gripping the edges of the slide, I had easy access to her tits. I pinched her nipples and ran my finger around that delicious mole on her areola that so fascinated me. She grunted and moaned as I slid my pole in and out of her freezing cold pussy lips. But she was hot as fire inside. I realized that I could fuck Rona Barrett every day of my life, all day long, and I'd never get bored of her. My hands groped the freezing cold flesh of her ass. The sodium lamp above so brightly illuminated Rona that her beautifully round bottom was leaving an afterimage on my eyes.\n\nShe turned over onto her back and I straddled the slide higher, holding her ass up so I could fuck her good and deep. The slide was nicely shaped for fucking, although it was cold and making her shiver more crazily than ever. But she didn't complain. God, her tits looked amazing bouncing up and down under me. I leaned forward and suckled her freezing nipples.",
        "\"Oh, shit, your mouth is so warm... ah... oh shit... you're making me cum again, Louis!\"\n\nI started really pounding her then, to intensify her orgasm. She riveted her eyes on mine as she moaned and panted and her body spasmed around my cock. The vibrations, plus her deep core shivering, was having an amazing effect on me... I felt my balls tightening again.\n\nShe saw the amazed expression on my face, and panted, \"Yes...Louis... cum with me... cum with me!\"\n\nI started grunting and an ancient power shot out of me into her for the fourth time that day... fifth time counting the jack-off session I'd done before going to school in the morning. There was something about fucking her in this weird, awkward position that made my orgasm feel more powerful than I'd felt it before, or maybe it was how tight and shivery her pussy was around my cock, or maybe how freezy cold her thighs felt on my shoulders as I pounded her... but whatever it was, I shot my cum deep into her orgasmic pussy, feeling her vaginal muscles rippling around my shaft, even as I filled her up with my seed.\n\nWe both tensed up and our bodies vibrated and shivered together. Then, when my legs stopped spasming, I pulled her up off the slide and hugged her, my cock softening inside her. I could feel my cum leaking out around her pussy lips as she moaned and shook in my arms. Her orgasm went on and on, interspersed with crazy shivering spasms, sudden little shocks, and powerful twitches. I was a scrawny guy, so it took every bit of my strength to hold her up, but I did, for a good three minutes before she started to come back to her senses.\n\nRona Barrett whispered, in a shivery voice. \"Louis. You're the b-b-best fucking lover I've ever had. N-n-now, find my c-c-c-clothes before I freeze to d-d-death!\"\n\nI found her clothes and pulled them onto her because she could barely control her shivering arms and legs. Then we ran laughing to the car, where I hugged her chilly body with the heater running full blast for ten minutes before she was able to drive me home.\n\nOn the way, Rona said, \"So... what about you? Would you mind having your nude pictures on my website? I love the pictures we've taken together.\"\n\nShit... I hadn't thought of that. A sudden thrill of fear went through me. \"Well... I'm not much of an exhibitionist. And my parents... boy... I wouldn't want them to see me naked... much less doing it. No offense, Rona, but... I don't think....\"\n\nShe looked a little disappointed. Then she said, \"Well, what if we just crop your face out. How about that?\"\n\nI nodded, \"Yeah. I guess we could. I've seen a lot of porn like that... with the guy's face not visible. I guess... as long as my face isn't in there, nobody would know.\"\n\nRona smiled. \"Good. I want everyone to see how beautiful your cock is.\" She giggled.\n\nI smiled at how gleeful she looked. Then a sudden, sickening thought occurred to me. \"Rona. Shit. If you do actually become a porn star... and I think you probably will, unless you change your mind... then... well... people would guess those pictures were me.\"\n\nShe looked consternated for a while. \"Okay... I guess we won't use those shots.\"\n\nThen I realized something even more disturbing... so far every time I'd had sex with Rona there had been a camera pointed at us. I wondered... what if that's what Rona likes about me? What if she stops having sex with me and finds someone else who doesn't mind their pictures being taken and posted on her website? What... what if she falls in love with that someone else? Shit... that would be horrible!\n\n\"Rona... maybe... maybe we should keep our... you know.. our relationship a secret.\"\n\n\"Really?\"\n\n\"Actually... if we're going to make it work, we need to keep our whole porn project a secret, at least until we graduate. Have you told anyone... about us?\"<br> <br> \"Not yet. I was planning to make a big deal about it tomorrow. I thought I'd hold hands with you all day, and sit with you in the lunch room. I wanted to see the looks on everyone's faces when they realized that my guy is a nerd.\"\n\nI felt another chill. I didn't really relish that kind of attention anyway. \"If people know we're an item, everyone will be watching us. Then they might figure out what we're up to. That could get us expelled.\"\n\n\"You think so?\"\n\n\"I don't think they'd put up with students making porn. But if we keep it a secret, then I wouldn't mind being on the website with my face hidden.\"\n\n\"Okay, Louis... Maybe you're right. But...\" Rona's eyes misted over. \"I don't know if I can pretend I'm not in love with you.\"\n\n\"Well... at least we can try to keep it secret for a while... until we figure out a plan.\"\n\nShe pouted adorably, and said, \"Okay, sweetie. We can try it. For a while.\"\n\nShe drove by my house. The light was on inside. \"Looks like your parents are waiting up for you. I'll drop you off up the street so they don't see me kissing you goodnight.\"\n\nAs we kissed, the worry I'd felt over the last ten minutes faded away. I felt the love pouring out of Rona Barrett. My girl. My sweetie. I drifted home on a cloud of love. I just knew it was all going to work out okay.\n\nWhen I walked in the house it was almost one A.M. Mom was waiting for me in the living room.\n\n\"Sorry I'm so late. I lost track of time.\"\n\nMom didn't look mad. She was smiling expectantly. \"So?\"\n\n\"So? So what?\"\n\n\"So, Casanova... did you ask her out?\"\n\nSomething about the hopeful look on her round little sface, contrasted with the vivid memory of all the crazy sex I'd been having for the last few hours... well, it just tickled the shit out of me. Mom stared at me like I was crazy as I collapsed to the floor with laughter.\n\n...To be continued!\n\nThanks for reading! Please check out my page for more stories of nerds and the hotties who love them. Delayed Action is about one of Rona's best friends, Laurie Bonner.\n\nRona and Laurie will also make appearances in my series, Field Trip Follies chapter 4 and 5 (when I get around to writing them).\n\nIf you enjoyed the story, please vote! And leave a comment! I think the main reason I write this stuff is the rush I get from reading comments. Thanks for your support!\n\nC.B. Summers"
    ],
    "authorname": "cbsummers",
    "tags": [
        "nerd",
        "beach",
        "virgin",
        "stuffed animals",
        "photography",
        "public sex",
        "high school"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/camera-buff-exposed-ch-01"
}