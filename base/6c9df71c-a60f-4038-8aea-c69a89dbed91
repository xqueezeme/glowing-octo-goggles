{
    "title": "Lactation Loving Lesbians",
    "pages": [
        "When I was 23 years old, it started out to be one of the darkest periods in my life. I had just graduated from college with a degree in graphic design but I had been slow to find a quality job in the field. Where I lived, there just wasn't anything available. To top off my despair, I had gotten pregnant after a drunken one night stand at a local pub nine months prior.\n\nSo possessing little money, living at home with my parents and supporting a huge belly, I was a far cry from my usual spunky self with a 115 pound tight figure. Even my dark blonde hair had seemed to dull in my eyes. When I had the baby, he was a beautiful boy that I named Allen after my father and I was overjoyed. However, my joy didn't last long as I knew I would not be able to financially take care of him, at least in the beginning. My father had gotten a job way up north in an oil field and would spend months at a time away from the family. I loved my son but struggled with postpartum depression that eventually led my mother to suggest a plan. \n\n\"Your father's company has an opening and they need to hire someone during the busy season. Britt, I think you should go for a few weeks to get away and get yourself together. Your aunt and I will watch the baby while you make some good money and heal. I really do think you should consider it,\" my mother advised. \n\nAfter a several hour discussion and even though I would miss Allen terribly, I agreed with her logic. So by that next weekend, I was packed and with airline ticket in hand, was soon on a jet, heading to a small prairie town many miles from my home. When I landed at an airport nearly an hour away, my father picked me up and drove me to the small town in which we were working. The company had supplied me with a small one bedroom apartment on the second floor above a garage. On the outside of the building, there was a rickety metal staircase leading to an entrance door. \n\nThe apartment was furnished and even though it wasn't out of this world amazing, it wasn't bad. My dad helped me carry in my things and as soon as I settled in, we went out for dinner. It was nice to see him and the evening felt more normal than I had felt in a while. After I returned, I put things away while listening to music. I was alone but I considered it a positive isolation to find myself. \n\nThat Monday morning, I started working and my job was to drive a pickup truck so that I could run errands, make deliveries, and anything else needed for the workers in the field. It wasn't physically difficult and it afforded me many freedoms throughout the day. One such needed freedom was to pump my boobs on two separate occasions during my shift because they would fill up with milk and ache. My 34C breasts had already ballooned to a D cup and the leaking and heaviness was hindering my performance. I would either perform that task in the break trailer provided on site or I would run home to my apartment. It was an annoyance but a necessary evil. \n\nI soon developed a routine in my day. I would wake up early before work to exercise on my treadmill then yoga. I would pump my breasts during lunch and before I went home. In the evenings I would fix a healthy meal, drink some red wine, Facetime my mother to see my baby before writing in my journal. Within the first week, my spirits were improving dramatically and during the second week, I was gaining self confidence in knowing I was transforming my body back into its old form. \n\nOne day, I was driving to town to get lunch for my coworkers and I noticed the power company working on a transformer high on an electric pole in the middle of town. Their truck was blocking half the street while a lineman worked diligently in the bucket trying to resolve the problem. I was fascinated by that so I pulled my truck over on the side of the street to watch. Within ten minutes, the task had been completed, and the bucket descended until the worker stepped out. That is when I noticed it was a young girl that had just performed that chore. \n\nWhen she removed her hard hat to wipe the sweat from her forehead, I could see that her dark natural red hair was cut short around the sides and her long matted swoopy bangs were dyed in many colors ranging from purple to yellow. As she placed her tools into the truck, she seemed strong considering she stood about 5'8 and supported a thin but muscular build. When the girl turned around, she spotted me staring at her and I quickly tried to play it off by turning my head. When I glanced back, it was too late as she began walking across the street to my truck. I became nervous and trying to decide my next plan of action. Stopping at my window, she motioned for me to roll it down. \n\nAs soon as it was down, she bluntly asked, \"Hi. I noticed you were looking my way. Are you new to town?\" \n\nI was relieved that she was not upset at my ogling when I responded, \"Yes. I have been here a couple of weeks. I'm working for Aldon Oils, doing odd jobs.\" \n\nShe reached her hand inside my truck and as I shook it, she introduced herself, \"I'm Lindsey and as you can see I work for Touchstone Energy. I have been here for a little over a year.\" \n\nI detected a slight northern accent but what really struck me was her natural beauty. Lindsey looked rough with a diamond stud nose piercing, a small silver hoop through her eyebrow and supporting several colorful tattoos including a full sleeve. However, her self-expression didn't detract from her gorgeous face with full lips, big hazel eyes covered by attractive long eyelashes. \n\nI responded, careful not to offend, \"Don't take this out of context but you look too young to be doing that. But don't get me wrong...I think it is pretty cool that you can.\" \n\nLindsey laughed, \"I get that a lot. I'm only 20 years old but since my dad works for the company, I have been around this my whole life. The guys I work with say I'm just a natural.\" \n\n\"From what I could tell, I would agree with them.\" \n\n\"Awwww...that is nice of you to say. Hey listen, I'm not usually this forward but when I see a blonde haired stranger sitting in her truck staring at me, I just feel the need to ask her out for a cup of coffee or dinner or something. We don't get many strangers around here.\" \n\nI laughed, \"Oh really? I guess that would be OK. How about tonight? We could go to that little diner on Park Avenue.\"\n\nShe nodded, \"Great. I will see you there at seven. It's a date.\" \n\nAs she walked away, it hit me that she probably meant a date...date. I was not a lesbian and had never been with a girl in that way. I also didn't want to assume just because of her appearance that she was a lesbian so my mind was jumping all over the place. I soon rationalized that it didn't matter and I would go out to spend an evening with a nice person and enjoy someone's company for a change. \n\nIn my detraction from my usual work routine, I was unable to pump my breasts a second time. I got home late and immediately jumped into the shower. My boobs were so full, I manually squeezed some milk down the drain for some temporary relief. Using both hands, I was spraying it like I was holding two guns but only had time for a quick milking and go. \n\nBecause of my consistent exercise regiment, for the first time in a long time, I felt good about my body so I decided to wear a short sky blue summer dress and high heel wedges. I could barely get my massive boobs into the dress but it didn't hinder my decision. After applying my makeup and throwing a couple curls in my hair, I was out the door. \n\nAs I drove the truck, I thought to myself, am I subconsciously fixing myself up as if I'm going on a romantic date? Am I just lonely? She is very pretty...do I find her attractive in that way? Maybe I just want to look good and go out. What if she thinks I'm leading her on? I was driving myself insane with all those thoughts. \n\nWhen I pulled into the diner parking lot, I could see through the window, Lindsey sitting in a booth, sipping her coffee. As I entered the restaurant, she lifted her hand to signal me. She looked really cute with her colorful styled hair. When she stood up to warmly greet me, I could see she was a muscular 120 pounds wearing skinny jeans, a tight white tank top tucked in, showing off her perky B cup breasts. \n\nWe both sat down across from each other and once we started talking, our conversation felt so organic. She shared information about herself as a person and things from her past as I did the same, including having a baby recently. I felt at ease talking to her and believed she was much more mature than her 20 years. At times, she would flirt with me and because it felt so right, I flirted right back.\n\n\"When I saw you in that truck watching me, I couldn't believe how pretty you were,\" she smiled.\n\nI responded, \"It takes one to know one. I thought you working up on that pole was pretty hot. The fact you have that kind of skill is so cool.\" \n\nLindsey looked for the waitress before telling me, \"Where did she go? I need some cream in my coffee.\" \n\nFor some reason, I immediately thought of my lactating boobs so I giggled like an immature teen. She gave me a curious grin and asked, \"What is so funny?\" \n\nI giggled again, \"Oh nothing. It is inappropriate.\" \n\nAfter insisting a couple of times, I finally told her, \"My boobs are lactating pretty hard and I just thought of my milk when you said you needed cream for your coffee.\" \n\nExpecting her to make a sour face, her eyes and mouth opened wide and she just froze. I thought sure she was going to be disgusted by my off-color joke but her reaction was quite the opposite. Lindsey leaned in and whispered, \"You just made my va-jay-jay twitch with that statement. That is so hot! I have always had a secret thing for that.\" \n\nI, half-jokingly and half seriously, laughed, \"I have plenty here if you are serious?\" \n\nLindsey called my bluff and slid her coffee cup over directly in front of me. I looked at it as to call her bluff and she lifted one eyebrow as if to say, go on.\n\nI have no idea why I did it but I turned to face the window and could not see anyone in the parking lot. I slumped down in my seat and on one side, I inconspicuously lifted my blouse and bra at one time. Taking the coffee mug and while holding it steady, I held up my shirt with my wrist so I could use that hand to pinch my elongated stiff nipple. Once I squeezed, the milk sprayed out in several tiny streams like a miniature shower head. Nearly missing the cup's rim, I repositioned my aim and shot three quick squirts into the steamy java. \n\nJust as I was about to pull it away, Lindsey halted me, \"Not yet. I like my coffee really sweet. I will take a few more squirts please.\" \n\nI brought the cup back under my breast and fulfilled her request before handing it to her. Almost thinking it was still a joke, Lindsey took a big sip of the coffee before releasing, \"Ahhhhhh. That is good. Nice and sweet like I like it.\"\n\nWe continued to chat like what we had done was routine. The more she drank, the more aroused I became. I believed that excitement arose from her nonchalantly consuming every ounce of my lactation as if it were common practice and she sincerely enjoyed it. I continued to get wetter as the coffee disappeared. \n\nOnce my arousal reached that critical level, I wanted to discuss what had just occurred at length when I asked her, \"How was your coffee?\"\n\nShe smiled while she winked, \"It was delicious. I might need your sweet cream for all my cups.\" \n\nMy pussy was soaked causing me to get bolder with my comments when I suggested, \"I bet it is so much better straight from the source. Would you like to go somewhere and find out?\"\n\nExpecting her to laugh it off, she enthusiastically replied, \"Fuck yes! Do you want to go to my place or yours?\"\n\nSince my place was the closest, Lindsey jumped in my truck with me and we headed to my apartment. So many exciting thoughts of anticipation began racing through my head. There were no more labels for myself. I wanted Lindsey as much as I had ever wanted a man and the gooey squish between my legs proved it. At the first stop sign, I enticed, \"If you want to come over here and get an early start on these, I have some room right here on my lap. Come on and feast on that cream you love.\" \n\nShe was all too happy to accept my invitation. After the click of her unbuckled seat belt, Lindsey fit her upper body on my lap between me and the steering wheel while her legs rested comfortably down the bench style seat. Continuing to drive with one arm, I used my free hand to lift my shirt and bra to allow her access to the boob of her choosing. Both nipples supported small beads of milk leakage. \n\nLindsey quickly slurped off the dollop from my left nipple before latching onto the right one. Her mouth formed a perfect seal and the sensual suction caused me to gasp. The milk flowed into her mouth like she was a starving infant and I could feel the compression of her lips with every suck. When I could feel my sensitive nipple expel that warm liquid onto her tongue, my pussy twitched with lust. She continued to feed and it was extremely difficult to concentrate and arrive at my destination without running the truck off the road. \n\nI parked in the small drive next to my apartment. Once the engine went silent, the sound of her erotic sucking filled the truck. At that point, I craved sex. Temporarily reaching over her face, I cradled the back of her head with one arm and frantically tried to lift my short dress with the other. When it was above my waist, I thumb hooked my panties to half shimmy them down against the seat the best I could. With access, my finger soon slid between my gooey folds until it disappeared inside myself. \n\nThe pleasure was palpable and I sighed in relief, \"Mmmm...yeah!\"\n\nWarming myself up was unnecessary as my libido stood on high alert. I immediately formed a pattern to get myself off as quickly as possible. Dipping my finger inside my pussy as deep as I could manage before pumping it in and out several times only to use that natural lubricating nectar to pressure-rub my own clit was the sequence of choice. Using the sensation of Lindsey sucking my tight spraying nipple and the repeat of my masturbatory technique, I soon found myself bucking in the seat underneath her with a strong orgasm. My body clenched and her slurping only strengthened my pleasure. \n\nI was on fire and kissed Lindsey's forehead before suggesting, \"Let's go inside and continue.\" \n\nShe broke her seal from my thick nipple, allowing a stream of warm milk to trickle down her cheek to respond, \"Oh, yes. Let's do it.\" \n\nWe clanked our way up the steps to my apartment door. Once inside, we wasted little time as my dress was the first article of clothing to be tossed onto the floor aside from our shoes. Just as quickly, Lindsey's nude toned tattooed body was exposed as her clothing laid in a corner pile. After slipping my panties off, we both crawled onto the cool sheets of my bed. \n\nI shifted over so that I could sit up against the headboard with my legs spread into a V. Using her hands, Lindsey inched her ass forward until one leg rested under my thigh and her second laid on top. Our legs were intertwined and my pussy was so gooey that it was starting to ooze onto the bed. Once she got close enough, I leaned in for a kiss. \n\nWhen our lips met, the excitement induced a twitch. Lindsey may have looked hard core on the outside but her lips were as velvet as they come. Our lips were perfectly connected even as they opened and closed while we kissed. Once my tongue outlined the inside of her lower lip, her hands wandered up to my heavy boobs. She pinched my tire stim-like nipples and milk squirted all over her own breasts and dripped onto her lap. She moaned as though she was bathing in warm sweetness. \n\nWhile scooting her ass even closer, our pussy lips met each other's with an emphatic squish. Lindsey's labia was smooth and silky while creaming profusely. Our juices mixing together heightened my sensation and we both began to rock up and down simultaneously. I never realized how amazing that sensation felt and I immediately began to get that build-up. To add stimuli, I put my hands on the bed so I could lift my ass and really create the proper friction needed to put me over the top. \n\nLindsey, was doing the same. She might have been grinding slightly harder while both of us were very loud with our grunts and moans. I huffed, \"Oh yeah, harder baby! I can feel your cream! It's so warm and slippery that you are going to make me cum!\"\n\nWhile I was spewing my sex talk, I was thinking how hot it would be for our juices to mix inside me, if that was even possible of two women. I had always loved when guys shot their loads in me but tribbing this girl seemed even hotter. I was on fire. I grabbed the back of her head and forced her face to my boob while ordering, \"Suck it! Suck my fucking tit! Drink that warm sweet milk!\"\n\nOnce her mouth opened and she began to suck it, I mashed her even deeper out of lust. My entire breast was pressed around her cheeks as if I were forcing her to deepthroat my oversized nipple. This caused both of us to juice more. I was so loud and if not for her mouth full of boob, we both would have disturbed the neighbors, anticipating a powerful orgasm. Lindsey was the first to climax and she pressed her lips tightly against my spraying nipple while clenching her entire body in one huge spasm. She grunted so hard into my areola that I felt the vibrations as if she were humming. I instinctively pressed her even deeper on my lactating jug where I could no longer see any part of her face. She shook and quivered forcing her teeth to graze my sensitive tip.  \n\nJust as Lindsey was completing her orgasm, I released a long extended squeal to start mine, \"Ooooooooooo...yeaaaaaahhhhhhh! Aughhhhhhhhh!\" My entire face contorted and felt as though pleasure had ripped through my entire body. I trembled for several seconds trying to recover. \n\nIt was at that moment, I realized that Lindsey was a heavy cummer. Her thick white goo had oozed from her slit and completely covered mine. It was so warm and sticky and highly erotic especially since the friction had pressed a large amount into my opening. I had went from never having sex with a woman to enjoying her juice inside me. \n\nFrom her amazing climax and me inadvertently trying to asphyxiate her with my boob, poor Lindsey pulled off my nipple gasping for air. Briefly, my milk continued spewing down her chin and onto her tight stomach. It was very intense and she needed several big breaths to regain her composure. \n\nShe huffed, \"That was amazing! I have never cum that hard in my life. I'm still shaking.\" \n\nI had never had an orgasm that strong as well and I wanted many more. I was on fire and needed to experiment in the worst way. I desired to taste my first pussy so I helped lay her down on her back. I crawled between her legs as my large boobs swayed back and forth, slapping one another. Positioning myself on my stomach, I used my palms to push upward from under her knees and lift her legs higher. This tilted her smooth pussy towards my face, giving me a great view of her heart shaped meaty lips. \n\nFirst, I needed to smell her scent so I inhaled deeply to absorb her natural musk. I had smelled my own as well as tasting it several times while masturbating but to be in the presence of another woman's pussy was a sexual thrill. It was intoxicating so I proceeded to inhale several more times before I gently added my tongue. Using the techniques that felt good to me, I tried to apply them to Lindsey. In the beginning, I just wanted to taste her leaking nectar as I made every effort to lick up any white slimy strands that may have connected her lips. I enjoyed the sweet tangy taste it provided. After getting lost in the moment of enjoying my first lesbian oral, I soon began to focus on making her cum again. I slowly licked up between her folds before alternately sucking them. When I quickened the pace and darted my tongue deep inside her, she shifted in the bed and grabbed a handful of my hair. ",
        "She grunted while lifting her ass off the bed, \"Unggggggggg! Yeah like that!\" \n\nWith a quick tug, she moved my head to her clit and I quickly took the hint and latched onto it with my powerful suctioned lips. I flicked my tongue as I sucked it roughly. I inserted two fingers into her wet slit and pumped them with a smooth pace to ensure g spot friction. I did not mind her yanking my hair as it led to her releasing a title wave of gooey cum into my mouth. I hungrily swallowed all that I could feel while continuing my assault on her pussy for three additional climaxes. When I had finished, Lindsey lay on her back gasping for air while trying to recover allowing me time to clean my shiny lips with my tongue. I was proud of myself for being able to make her orgasm. \n\nI was in desperate need of some relief and crawled up over the shaking Lindsey, straddling her mouth between my legs. In hindsight, I should have delayed until she was fully ready but in my condition, I sat my dripping slit directly on her face. My clit pressed snugly against her nose, and she brought her arms up around my thighs to hold me tight with my pussy spread over everything like a mask. Her warm breath sent sensations inside me that were electric but when she started licking with her skillful tongue, I knew I wasn't going to last long. \n\nLike a cowboy on a bucking horse, I grinded her face and used it to my advantage to provide sexual relief for myself. I could only see her eyes and her forehead peeking up through my spread thighs. I dug my toes into the mattress and used her face properly until I squealed my first climax. A gush of liquid splashed her face like I dumped a glass of liquid. I felt like I was asphyxiating poor Lindsey again but I knew her pussy eating experience would allow her to sneak breaths when needed. \n\nLike she had shown me, I held her hair tightly so I could move her to the exact spot needed to cum again. Whether I wanted her nose or mouth on my clit or I needed her tongue or chin fucking my pussy, I was going to locate her to where it made me blast again with just a quick tug of the hair. I continued to grunt and let loose a torrential squirt stream all in her mouth and on her face. When I had finished, I believe I had cum six or seven times and her hair was as wet as if she had taken a shower. During my last orgasm, I sat, leaned forward and basically collapsed off her face onto the bed trying to regain my composure. After my recovery jerks had subsided, I pulled her into my arms and we laid panting before conversing.\n\n\"Wow! That was amazing! I have never experienced anything like that. Is that how it is with lesbian sex all the time? If so count me in.\" I gasped. \n\nLindsey kissed my neck with her juice covered lips before responding, \"I have fucked a lot of girls but this was the hottest experience ever. We need to do this again.\" \n\nAt first I was thinking, Yeah of course, but then I transformed that thought into a plan when I suggested, \"I agree. Let's do it tomorrow. I can meet you on your lunch break and you can drain my tits while we fool around. Is that ok?\"\n\nShe laughed, \"Fuck yeah it is. I love that plan.\" \n\nWe both lay in each other's arms, talking and getting to know one other better until we drifted off to sleep. Upon waking up we were both scrambling to get dressed so I could take her to get her car so she could go home and get dressed for work. It was pretty hectic but we both made it to our jobs on time with my only thought on meeting Lindsey for lunch. Thoughts of sex with her consumed me more than my duties for the day. \n\nEventually break time arrived and I drove home to get my one and only dildo. It was 7 inches and supported a decent girth. It was not huge by any means but nothing to laugh at as well. My boobs were full of milk and in need of relief. Lindsey was working on the south side of town when I pulled up. She was putting her hard hat in her truck and while her coworkers were about to head back to the shop, she spotted me and signaled them on. Jumping in my truck, she directed me to a little clearing next to a clump of trees about a mile away. Once we pulled into the secluded spot, I shut the truck off. \n\nLindsey removed her clit vibrating stimulator out of her lunch bag before giggling, \"This is what I call a healthy lunch.\" \n\nI lifted the rubber dong off the seat, shook it and laughed, \"Yes I brought my lunch too. It's very low carb but satisfying.\" \n\nAlmost in unison, we both shimmied our pants down to our ankles and left them there just in case we needed a quick getaway. Cleverly, Lindsey positioned the vibrator on her clit, then pulled her tight cotton panties up over it to hold it snugly in place. I, on the other hand, was spreading my legs, attempting to slide the dildo inside my pussy. With my pants restricting the width of my knees, I was expecting a difficult time trying to insert it. Much to my surprise, when I pushed, the dong disappeared entirely without much effort. It felt good but not great which made me realize that my vagina had not fully contracted back to its original size after childbirth. I would make do with what I had to work with. \n\nI slipped my work shirt off over my head and unhooked my bra before tapping the full length banana style seat in my work truck while I seduced, \"Come on and get some of this warm milk. I bet working up on that pole has made you very thirsty.\" \n\nShe smiled, nodded, leaned over and put her head in my lap, facing my stomach. I figured it would be better for her to start on my left tit since it was furthest away from her. Gripping the steering wheel with my left hand, I cradled her head up into my sturdy elbow. \n\nI guided her head and hunched my upper body to align my nipple with her mouth while softly speaking, \"There you go. Get some. That's it...latch on. Almost. Almost. Ahhhhh...there it is.\" \n\nWhen my leaking nipple was clamped upon, I instantly felt the flow and release, \"Mmmmm. That feels great. Drink it down. Oh god...you are good at that...look at you go! Suck it down, girl!\" \n\nMy words were ringing true. It was like Lindsey was a natural. She would suck and suck until her mouth filled up then swallow it down without missing a drop. The sensation on my boobs was reverberating straight down through my pussy. I needed to cum while she nursed so I began to fuck myself with the inserted toy. It slid very easily and provided minimal relief but not to the extent to what I was expecting. Her vibrator was buzzing along in her panties and very quickly her entire body jerked in orgasm causing her to clamp down on my nipple and allow it to flow without sucking. She was in full spasm and stopped to reap the rewards of her pleasure. \n\nSwitching to my opposite nipple, a trail of warm milk trickled down her cheek and dripped on my leg. She quickly locked on and started sucking before she had lost another drop. Feeling her warm mouth on my previously neglected nipple sent shivers down my body. They were swollen and sensitive. The lactation relief was wonderful and I began to buck in my seat in orgasm despite the undersized dildo. My ass shifted back and forth in a total clench while I shoved the dong up against my cervix. That ensured the strongest spasm because of the head friction needed for my loose pussy. \n\nUsing my thumb, I wiped the excess milk from the corner of her mouth, \"All clean. You are making a big mess my milk slut piggy. You need to slow down so you don't get a stomach ache.\"\n\nLindsey was actually performing wonderfully but I wanted to slow her down so it would last longer for my pleasure. She grunted again and cum violently. Crushing her legs together over the vibrator and brought her top leg over heavy to increase sensation, she quivered. At one point, she had to stop sucking, close her eyes tightly and open her mouth. Watching the milk flow into her mouth forced me into another orgasm. We were both grunting and writhing on the seat simultaneously, enjoying our pleasure. \n\nBy the time my breasts were drained, I had cum 4 times and Lindsey 6. Our lunch time had all but evaporated and I drove her back to her site before heading back to my own work. I kissed her goodbye and gave her a few napkins I had stored in my glove compartment so that she could wipe her mouth properly. When I reflected on what we had just done, it seemed a little strange but hot as hell. It seemed as though Lindsey's fetish had become my own and also was very practical. My boobs were lighter and felt great the rest of my shift. \n\nThat night while in my apartment, I used the same dong on myself just to make sure I wasn't imagining the size difference in my pussy to what it was before having my child. Sure enough, I was so gaped, I had to abandon the penetration and finish myself off with a finger clit rub. I needed size and I needed it soon. Lindsey had brought out my sexual feelings that had been missing for so long and I was quickly reaching lust mode. I worked out and exercised for over three hours that night to burn off that sexual energy. \n\nBefore I settled in my bed for the night, I scanned the internet for the best sex toys on the market. I wanted a real feel dildo that felt just like a man's dick. I would not settle for anything less than 9 inches long and 10 inches in circumference. The girth mattered more to me than the length but I had all these prerequisites in my mind and I was not going to stop until I found the perfect dong. Twenty minutes into my search, I had my choices narrowed down to two. The king dong had nine insertable inches and ten inches around which met my criteria but when I found the king dong deluxe that was 10 inches long and 12 inches in circumference, my decision had been made. Go big or go home was my motto. It was pricey but since I was now making money, I splurged and ordered it with overnight shipping. My hope was that it would arrive before lunch the next day with Lindsey. \n\nThe next morning, I showered and shaved my pussy smooth as glass. I dressed and headed for work. I had many deliveries and pickups which kept me busy. My pussy was wet in anticipation for our mid-day rendezvous along with sore milk filled jugs that needed relief. Driving to see Lindsey, I swung by my apartment and screamed like a child at Christmas when I saw the package sitting on my step. I parked, jumped out and grabbed the box before getting back into the running truck. Using my utility knife, I opened the package and gasped at the size of dong. \"Wow! If this thing doesn't do the trick, nothing will,\" I spoke aloud to myself. \n\nIt looked and felt even bigger in person which induced some anxiety within me. Lindsey was in the bucket finishing up on a transformer when I arrived. I pulled off to the side and waited until she finished and climbed into the passenger side. After exchanging hellos and pleasantries, she directed me about 2 miles away behind an abandoned hospital. Shutting the truck off, I stepped out of the vehicle, removing my clothes while she removed her pants like we were both making a business transaction. Once back inside, I leaned against the door facing her with my filled boobs pressing hard against my chest and my knees up with my legs spread wide. My large pussy was opened for her viewing pleasure. \n\nI pulled out the dildo and Lindsey laughed, \"Where did you get that fucker? It is huge!\" \n\nWith a return laugh, I responded, \"I needed something a little more my speed. That other thing wasn't getting the job done. Now get over here and suck these tits dry.\" She was adjusting her vibrating clit stim and putting her tight silk panties back on to keep it in place like she had done yesterday. \n\nShe crawled to me and laid more straight on, facing me unlike the day before where she laid across my lap. Lindsey looked up and put her face between my boobs. Trapping her cheeks inside my cleavage, I pressed my heavy jugs together and moved her head side to side. \n\nShe cooed, \"Mmmmmmm...they feel full. I bet you are excited for me to empty them?\" \n\nI moaned my approval. Gently raking her colorful hair back above her forehead with my fingers, I whispered, \"Oh yes...they are extremely full and have been waiting for your mouth all morning. I know you probably skipped breakfast and need lunch. I think it is time to get busy.\" \n\nShe liked me taking charge and verbally taunting her. Almost on her stomach, I slid down so she could get access to my leaking nipples. Lindsey started buzzing her vibrator, latched on to one of my tits and used both hands to hold it steady like she was trying to squeeze it out quicker than possible. I wrapped my arm around the back of her head and closed my eyes so that I could enjoy the sensation. My nipples were really swollen so the extra size caused Lindsay to pop and smack when she would shift her sucking technique. She sucked down the sweet milk until she erupted into her first climax.\n\nShe clenched her legs tightly together and clamped my nipple until her spasm subsided. After releasing a large breath, she decided to switch boobs. That is when I decided to see if the King Dong Deluxe was going to do the trick. With a swampy pussy, I was hoping I did not need lube but I wasn't sure. I nudged Linsey to her side so that I could get to my slit. Placing the monster head inside my folds, I twisted and pushed expecting it to hurt tremendously. Again to my surprise, it began to slide in and fill my pussy to capacity without any discomfort. The dong was huge and my stretched walls were up to the task and ready to be pleasured. That much needed size was hitting all the correct spots as I fucked myself with it. \n\nI commanded Lindsey, \"Suck it harder! Drink that milk! Make me cum!\" Within minutes, I was grunting and cumming so hard I bumped my head against the truck door. I convulsed for several seconds before we both burst out laughing and milk ran down Lindsey's chin. We both continued until we each added a few more orgasms and my heavy boobs were manageable to return to work. \n\nLindsey and I had planned a date on Friday night but I had hit beast mode with my new found large friend and masturbated with it all through the night, nearly oversleeping the next morning. The largest dick I had previously taken was my second boyfriend in high school and I remembered struggling to take his nearly 8 inch cock and half the girth with pain. I was now taking all ten inches and that thickness with ease while cumming over and over. I was like a teen discovering sex for the first time. My bed was a mess and my pussy was finally satisfied. \n\nI was insatiable and one might think that I would have been too sore the next day for something so large pounding my vagina but I actually woke up just as horny and looking forward to lunch with Linsey. It was an uneventful day at work all morning and when I found out that Lindsey was working light poles next to an old farm her grandmother had owned, I was excited. \n\nShe had driven onto the land and was waving at me as I pulled up. I parked and got out of the truck. We kissed in the warm outdoor air under the sunshine. When pressing her boobs against mine, she pulled back the kiss and giggled, \"Right on cue, those things are full and need my assistance.\" \n\nI laughed but with our lunch minutes quickly dissipating, there wasn't much time to waste. I wanted to get right into it as my jugs were sore and my pussy wet. I kept a nice thick blanket in my truck for such an occasion and we decided to have sex in the bed of the pickup truck. Both of us stripped and jumped up onto the flat tailgate. We had our toys in hand and started with a passionate kiss while we laid down. With our arms and legs intertwined, we squirmed and kissed like we had not seen each other in years. \n\nLindsey ended up on her back and I, on top of her with my heavy tits resting on her chest. I needed them sucked so I spun completely off of her and positioned myself with my face over her face with my head pointing toward her feet. I lowered my boobs to her face and playfully slapped them back and forth. She smiled and I drug my nipple across her cheek, stopping it on her lips. With palms up, I used my thumb and index finger to pinch my nipple causing it to squirt inside her mouth. She opened wider and I moved my boob back and forth like I was spraying her tongue with a hose. The milk would disappear in the back of her throat and she would swallow it down. \n\nI stopped long enough for her to say, \"Mmmm. That is so good and extra sweet today. I need more! Put it in my mouth.\" \n\nI sunk my boob to her face, dropping my nipple as deep as it would go into her mouth then sighed, \"Oh, there we go. Take it deep. Come on girl...latch...latch...yeah! Now you got it. Whoa you must have been thirsty again, you are really going to town. Fuck that feels amazing. I need to cum!\" \n\nI lifted up to my knees while my upper body remained down to allow Lindsey to suck my milk filled boobs. She was on her back and I looked up to notice she didn't have her vibrator in place on her clit, I would have to do it manually for her if I could. But first, I needed to relieve myself.\n\nWhile on my hands and knees, I took my huge dildo and brought it around my ass to insert it from the rear. The girth was so thick, I had to spread my legs wider before it could penetrate my gaping folds. Once the head slipped past my slit and stretched my labia, it slid in pretty easily, deeper and deeper until it bottomed out against my cervix. I let out a pleasurable sigh, \"Ahhhhhhhhhh!\" \n\nWith one hand supporting me so Lindsey could drain my lactating jugs, I began fucking my pussy from behind with the other one. I used a ton of wrist action while holding the dong by the end that way I could force feed it into my cunt after it wanted to stop. I needed every inch of that thing to get me off and when Lindsey reached up around my back as if to hold me steady, I shrieked in orgasm, \"Eeeeaaaaaahhhhhhhhh I'm cuuuuumin! Aughhhhhhhh!\" \n\nOnce I started cumming, I shoved the dong deep and held it still so I could enjoy each twitch of my walls around it. It felt amazing and I needed a few more. At one point I reached between my legs and held the base as I thrusted it hard. Every couple of minutes I would squeal with another eruption, knowing full well I would not be able to go back to small cocks. The stuffed sensation was so intense, I began squirting all over the bed of the truck. I would fuck my pussy harder then as the pressure built, I would yank it out and shoot a stream past the flat tail gate of the truck. There were standing puddles in the bed before I was satisfied. \n\nPoor Lindsey never stopped switching back and forth feeding on my boobs but had nothing to provide herself with relief. Her smooth pussy was covered in clear nectar and pooling under her ass. Not wanting to stop getting my tits drained, I decided to try the big dong out on her, hoping she would also love it. My only problem was the uncertainty it would even fit inside her. \n\nWhile her mouth continued to suck the milk from my boobs with slurping popping sounds, I eased the huge dildo to her dripping slit. Taking my time, I snuck the bulbous head between her gooey folds and twisted while pushing. Using her own precum and all my cum that was smeared up and down it, I hoped that was enough lube. As it stretched its way inside and created space that wasn't there, Lindsey winced in pain with a series of flinches. I stopped inserting, allowing her walls time to get acclimated. Just seeing her stomach puff out as that thick dong entered her vagina confirmed just how large it really was. \n\nI continued to push, assuming it was OK until she stopped me which she did not. She raised her knees and spread wide so that I could get as much in her as I could. There was no way that she could anatomically take all ten inches with her sleek build but I had gotten just past eight, giving me room to hold the base. ",
        "I didn't want the monster dick to hurt her, so I verbally took control for auditory stimulation, \"Oh my! I thought there was no way your pussy would take this big fucker but it proved me wrong. I wish you could see how stretched out you are. When we are done, we will both have ruined flabby cunts instead of pussies.\" \n\nI had only begun fucking her with a few strokes and just as those words escaped my lips, Lindsey bit down on my nipple with a long extended grunt while she went into a full body orgasmic seizure. Her legs could barely close around the huge dong but she gave it her best effort. It lasted for several seconds but when her spasms had subsided, I knew that my verbal taunting was just what she needed in addition to being reamed out. Though difficult to move, I began fucking her slightly faster. While up on my knees, I could feel the warm outside breeze blowing against my gaped out pussy and was hoping that when finished, she would be able to feel the same thing. \n\nI could see that because of the sheer size, when I pushed the dick in, her entire outer lips would stuff inside her pussy and when I would pull it out, the inside of her vaginal walls would come out about an inch. That big hog was literally turning her pussy out. That did not detract from my quest to fuck a few orgasms out of her. My only problem was the awkward position of the way I was laying over top of Lindsey, not only trying to hold myself up, but also trying to fuck her with a dick I could only get my hand half way around it. \n\nI giggled, \"Wow girl...you might be a regular with this size! You never knew that all you needed was such a fucking huge dick to make you cum so hard. Go on...let it out! See how hard you can cum!\" Just then, she grunted and erupted again. \n\nI continued this and every time she climaxed, I would cease the thrusting to allow her to enjoy her pleasure. As I was nearing the draining of my boobs, a kinky idea entered my mind for an earth shattering finale. I pumped it faster and slightly harder while listening to her verbal cues as to how it felt. She was building again and her thick white cum began to ooze and pour out down her inner thigh. Her orgasm was so close and that is when I implemented my idea.\n\n\"Here take over for me! Use your hands to fuck yourself...hurry...grab it! Fuck your pussy for me!\" I instructed. \n\nLindsey extended both arms and took hold of the oversized dildo with both hands. She plunged it deeper and harder than I had been doing. I rose up on my knees, popping my swollen red nipple from her puckered sucking lips. Before a large amount of milk began to leak, I grabbed both of my nipples, pinching them roughly. Milk began to jet out of both of them and I quickly rotated my chest back and forth to squirt it all over Lindsey's face. \n\nI taunted, \"Oh fuck! Take that you slut! Take all that milk on your face! You like having me give you a facial, don't you? Oh yes you do. Look at you smile!\" \n\nLindsey was sent over the edge. She had to close her eyes to prevent the milk from raining down in them but dug her bare feet into the blanket and lifted her ass off the bed of the truck. She screamed at the top of her lungs, \"Aughhhhhhhhhhhhhhh!\" Then released a squirt of her own which was more like a huge gush. She yanked the dick out of her spasming cunt and it looked like someone threw out a bucket of water. The huge splash landed on the blanket and part of the back window while she tossed the dong to the side and convulsed harder than I had ever seen anyone in orgasm. Locking her knees together, she turned onto her side trying to recover. We had little time for anything else so we dressed and went back to work, keeping the blanket spread in the back of the truck so that it would dry. \n\nThe rest of the time I was in that small town, Lindsey and I would masturbate while she drained my full boobs. On the weekends, we would go out on dates and have mind blowing sex when we returned. Our relationship blossomed into love and when it was time for me to return, I remained home only a week and moved back with my son to that small town up north. Now we are married and not only enjoy fetish sex but love making as well and it all started when I left home to find myself. Now I have found so much more."
    ],
    "authorname": "Brittni4u",
    "tags": [
        "cum eating",
        "huge dildo",
        "lactation fetish",
        "lesbian masturbation",
        "lesbian pussy eating",
        "lesbian tribbing",
        "nursing",
        "size queen",
        "tit sucking",
        "toys"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lactation-loving-lesbians"
}