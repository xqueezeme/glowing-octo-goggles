{
    "title": "Home for Horny Monsters Ch. 65",
    "pages": [
        " Hi all! I'm back with the next chapter of HFHM!\n\nNew reader? Before you jump in, keep in mind that this is the 65th chapter in an erotic harem fantasy that has spawned two spin-off novels. It's like when I was a kid and tried to understand what was happening in my grandmother's tv shows. Unlike my Grandmother, I'm not about to make you go play outside after asking \"who is that?\" for the fifth time.\n\nReturning reader? Welcome back, I missed you! I am temporarily going back to two HFHM posts a month, so make sure you check the bio for release dates so you can plan your reading schedule accordingly!\n\nI can't believe it's May. This year is going fast for me, I've been very busy in real life. Thanks for taking the time to leave comments and reviews, they not only keep me inspired to continue writing, but they also serve to raise my spirits when I'm having a bad day (and last month was saturated in them).\n\nAnyway, to recap: Mike is in Oregon while Beth housesits. It is already going poorly as the next door neighbor is shrieking to the Heavens for, well, nobody knows. Velvet has the hots for Mike, Abella hates Velvet, and Emery just wants a shiny silver coin. So what's next for the Radley family?\n\nRead on!\n\nVisitors\n\nAn early dinner had come and gone, and Beth sat in the living room, her eyes fixed on the man in her front yard. Murray was still out there, and every few minutes, someone would crack a window to see if he was still screaming.\n\nNot only was the sound disorienting, but an ominous fact had been revealed later. While the house was closed up, his scream couldn't be heard, but the outside world still could. A disoriented bird had bumped into the glass, and Tink had braved the outside world to go rescue it. A strong breeze could be heard rustling the bushes, but the noise from Murray only penetrated the home when the door or a window was open.\n\nRatu, through her crystal ball, theorized that the sound's disorienting effect couldn't penetrate the home's exterior due to the geas. The sound didn't carry through the crystal ball either, even when Beth took it outside for a minute with ear plugs in. Without being able to hear it, the naga had little to offer in terms of advice.\n\nWith no ideas, the household was busy making preparations for whatever siege was coming their way. Sulyvahn had gone through the greenhouse to coordinate with the centaurs, and Sofia had retreated to the Library in hopes of finding information. Eulalie had gone with her, ecstatic to see such a place.\n\nCecilia hovered by the window, her hands held over her chest. On occasion, she would flicker and vanish, only to reappear minutes later.\n\nThe front door opened and Lily came in. She was wearing Mike's face, and carrying Kisa on her back. When she set the cat girl down, Kisa made a retching noise. \"If you cough up a hairball, you'd better clean it up yourself,\" Lily warned.\n\n\"Eat dicks,\" Kisa hissed, then wandered off toward the kitchen.\n\n\"Success?\" Beth asked.\n\n\"Yeah, we totally pretended to turn our magic sundial which apparently doesn't give two shits about what's happening out there.\" Lily flopped down on the couch, her body reverting to normal. Her arm was still wrapped in spider silk, the wound reeking of sulfur. \"You know, he's giving our resident screamer a run for her money.\"\n\nCecilia chuckled, but said nothing.\n\n\"Any word from Romeo yet?\" Lily shifted uncomfortably on the couch, trying to find somewhere to rest her arm.\n\nBeth picked up her phone and turned it on. \"He still hasn't read any of the texts I sent him,\" she said. She gave it a moment, then turned it off. With no way to charge it, she was only checking every half an hour.\n\n\"We might need to find a different way to do it,\" Lily said, then looked over at Cecilia. \"How about you, dream girl? I know you were popping in and out of his head while you were in fairy land.\"\n\n\"Tis true,\" Cecilia admitted. \"But it often took me a long time to connect. I am happy to try, though.\"\n\n\"Get on it then.\" Lily flopped back on the couch, then looked at Beth. \"While I was out there, I tried to get a good look at the edge of the yard.\"\n\n\"And?\"\n\n\"Nothing. No people, no traffic. It was almost as if\u2014\" Lily turned her head toward the office as Death stepped out of it.\n\n\"I say,\" he announced while rubbing the top of his skull. His hood had been pulled down and he was wearing a giant pair of earmuffs. \"That racket is even louder here than it was in the Library.\"\n\n\"Excuse me?\" Beth stood. \"You can hear that?\"\n\n\"Of course, I can.\" Death fiddled with his earmuffs. \"I was in one of the deeper sections of the Library when I discovered this amazing book about a man named Waldo. It was demanded of me that I find him, and so I got caught up in his many adventures when I heard that ghastly sound.\"\n\n\"And you didn't think to investigate?\" Lily's voice had an edge to it.\n\n\"Oh, I did. I wandered through the Library for hours, but couldn't pinpoint its source.\" Death approached the window and placed his fingers on the glass. \"Ah, I see. So, there's our culprit.\"\n\n\"His name is Murray,\" Beth explained. \"He started doing that and we don't know why.\"\n\n\"Well perhaps I can persuade him to stop.\" Death stuck a hand in his robe and withdrew a long staff that unfolded into his scythe. The edge gleamed wickedly as he gave it a test swing.\n\n\"You're going to kill him?\" Beth asked incredulously.\n\n\"Certainly, not! I cannot go around harming mortals, it's poor manners.\" He took off his earmuffs and pulled up his hood. \"I merely intend to displace his soul for a moment. It won't cause permanent damage, but he will likely lose consciousness.\"\n\n\"Be careful,\" Lily warned while holding up her arm. \"We don't know what we're up against.\"\n\n\"What do you think will happen?\" He placed his hand on the knob of the door. \"Do you suppose I will arrive to collect myself?\"\n\nHe stood there, waiting for a reaction. When none came, he chattered his teeth comically, opened the door, and went outside. Death went halfway across the yard before he stopped and stuck the butt of his scythe into the ground. His eyes blazed with light as he waved a hand around, his mouth moving. Beth, watching through the window, could only pick up bits of what he was saying.\n\nLily had pressed her ear to the glass of the window. Her face was scrunched up in concentration.\n\n\"What's he saying?\" whispered Beth.\n\n\"Hard to tell. Something about consent...wait...\" Lily held up a finger. \"He's giving him till the count of ten to leave.\"\n\n\"Oh dear.\" Beth watched as Death dramatically held up a finger, followed by two fingers. Murray seemed oblivious, and when Death got past five, he switched the hand holding the scythe and continued counting on his other hand.\n\n\"C'mon, get on with it,\" muttered Lily.\n\nDeath casually spun the scythe around and placed it so that the curve of the blade was behind Murray's spine. With a tug, he yanked the blade through Murray's chest. It passed through the man's flesh harmlessly, and Murray continued to scream.\n\n\"That was anticlimactic,\" noted Lily.\n\nBeth felt her heart fall in her chest.\n\nDeath swung his scythe again, then repeated the process. When nothing happened, he used the tip of his blade and poked it into Murray's skull. He even tried forcing the man's jaw closed, but nothing happened. Death marched back up the house, then tucked his scythe away as he came inside.\n\n\"Well?\" asked Beth.\n\n\"That man has no soul.\" Death put his earmuffs back on and walked toward the kitchen.\n\n\"Excuse me?\" Beth followed him, and watched as he nonchalantly started prepping a pot of water.\n\n\"It is rare, but you see it from time to time. Souls are a precious commodity, after all. Why do you think the universe is so keen on recycling them?\" Death turned on one of the stove's burners and set the pot down. \"It's a fascinating subject, really. When your soul passes on, there's an excess that gets left behind. I'm not entirely certain who's in charge of that, but\u2014\"\n\n\"Why wouldn't he have a soul?\"\n\n\"Oh, I have no idea. That really isn't my area of expertise, but there can be any number of reasons. For instance, it could simply be an error. Humans born without souls often find themselves with a poor moral compass. Some of them have become quite famous for their capacity for murder.\" Death pulled down a box of teabags. \"I always found it fascinating that I would get to meet them so many times, yet never personally collect them. Oblivion is such a strange concept to me.\"\n\nStunned, Beth leaned against the counter. \"Are you talking about serial killers?\"\n\n\"Ah, yes. I had forgotten the term.\" Death picked through his tea collection. He had over a dozen tins of loose-leaf tea. \"But they are on the extreme side of things. No, I suspect that the mortal in your yard is simply being used as a vessel. His soul has been temporarily misplaced while some other entity uses his body.\"\n\n\"Like what?\" Beth moved around the counter so that she stood next to him. He looked up from his tea bags, revealing the tiny blue fire that sat in the back of his eye sockets. Despite being lit from within, the inside of his skull was darker than night. There was no bone to reflect the tiny lights that he used as eyes. \"What kind of entity, Death?\"\n\n\"A loud one.\" Satisfied, Death picked out one of the tins and set it on the counter. \"Would you like some?\"\n\n\"No.\"\n\n\"Shame. It's going to get quite busy around here, you really should take the time to drink something.\"\n\nBeth grabbed Death by the front of his robes, her hand immediately going numb. \"What do you mean it's going to get busy?\" She was practically shouting now.\n\n\"Are you still upset with me over your money? I did apologize.\" Somehow, he was able to frown, the bones of his face shifting.\n\nShe sighed, then let go of his robes. \"No, I'm sorry. I'm just freaked out by whatever he's doing out there, and I feel like you're not telling me what you know.\"\n\n\"Oh. I see.\" Death looked down at his feet for a moment. \"I must apologize, I was under the impression that you had figured it out already.\"\n\nBeth put her numb hand on the counter, her fingers tapping impatiently.\n\n\"Figured out what?\" she asked when he didn't continue.\n\n\"If that man out there is making so much noise that I can hear it from a dimension away, then clearly he is calling out to someone.\" Death picked out a teacup and then loaded his diffuser. \"Or something. The reason he's still screaming is that whatever is coming has to come from really far away.\"\n\n\"Oh shit,\" she whispered in horror. She figured that Murray was part of a society plot, but never that he was acting as a beacon. What sort of being took most of a day to travel across the world? And why did they need a beacon to lead them?\n\nDeath smiled smugly, then pulled an extra teacup out of the cupboard.\n\n\"I'll make you a nice chamomile. It'll help warm up your hand. Now would you like sugar or do you prefer honey?\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe door of the cabin creaked when Velvet pushed it open. Inside, she saw Quetzalli sitting on the couch with Bigfoot, who was sitting up.\n\n\"Uncle Foot!\" She ran to his side and crouched down so he could see her better. \"I didn't know you were awake!\"\n\n\"Hey there, fluffy girl.\" Bigfoot smiled weakly and put his hand on her cheek. \"Sorry I worried you.\"\n\n\"If I had known you were up, I would have come sooner.\" It was late, the hour nearing midnight. She had spent all day checking the woods for any further hint of the Nirumbi. Dana had gone with her, allowing the two of them to catch up. It was amazing to hear just how much had happened to Dana in such a short time, and it reminded her more than once of the tabletop games she played with Bigfoot and her sister.\n\n\"I haven't been up long,\" he confessed. \"Whatever was on those arrows was nasty. The good news is that they won't affect me the same should it happen again.\"\n\n\"We've had a great time catching up.\" Quetzalli had pulled her legs beneath an oversized sweater and held a large cup of hot cocoa. \"Did you know that we met before?\"\n\n\"What? When?\"\n\n\"Over a thousand years ago.\"\n\nBigfoot stretched his arms and winced. \"She was a lot bigger then. She's a storm dragon, trapped in a human body.\"\n\nVelvet's jaw dropped. When Dana had said Quetzalli was a dragon, Velvet had assumed that she was a hybrid. Bigfoot had spoken often about the elemental dragons that used to control the American continent. The story about the one under Yellowstone fascinated her the most, but he rarely went into details about it.\n\n\"It was brief. I stumbled onto one of his meetings and was invited to join them.\" Quetzalli sipped at her cocoa. \"That was before I started working for the Fairy Queen.\"\n\n\"Wow.\" Velvet could only stare. \"Did you have wings?\"\n\n\"Big ones. I would ride amongst the clouds all day, summoning lightning and bringing rain. Do you want to hear about how storm clouds are formed?\"\n\nFrom the corner of her many eyes, Velvet saw Bigfoot shake his head ever so slightly.\n\n\"No, but thanks. I'm probably going back out soon, anyway.\" From where she stood, she could smell Mike's scent. She assumed he was in her dad's bedroom, and wanted to stay away if she could. \"I just wanted to check-in. Can I get you anything before I leave?\"\n\n\"I wouldn't mind a beer.\" Bigfoot raised his eyebrows hopefully. \"And some cheese, if we have any.\"\n\n\"On it.\" She walked to the fridge and opened it up. Her uncle's beer selection was running low, so she grabbed him an IPA. In the process of retrieving it, her eyes settled on a small cooler toward the back of the fridge. The hairs on her arm stood on end as a sweet scent tickled her nostrils.\n\nWith trembling fingers, she slid the cooler forward and opened it. The scent from within was overwhelming. It reminded her of earth, rainstorms, and something slightly floral. There were about ten capped shot glasses, each one filled to the brim with a milky white fluid.\n\n\"You okay?\" This came from Bigfoot. He was watching her from the couch.\n\n\"Yeah, just trying to decide which beer pairs with recently poisoned.\"\n\nHe chuckled, then turned his attention back to Quetzalli. While he spoke with her, Velvet grabbed a few of the shot glasses and tucked them in her pockets. She was a couple steps away from the fridge when she realized that she had forgotten the beer, so went back.\n\nShe stood behind the couch, afraid that Quetzalli or Bigfoot would know what she had done. When she handed over the beer, Bigfoot gave her a huge smile.\n\n\"Be careful out there, bug.\" He popped the cap off with his thumbnail, then sucked down half the bottle. \"Oh, I needed that.\" Bigfoot furrowed his brow and let out a rumbling belch.\n\n\"I will.\" She scuttled away and then out the front door, her heart pounding in her chest. Outside, she saw that Yuki was over by the barn, so she wandered around the side of the house, toward the back. Her fingers had closed on the glass in her front pocket when she nearly ran into Mike.\n\nHe was leaning against the back wall of the cabin, his eyes on the woods. It looked like he had been concentrating on something, but relaxed when he saw her.\n\n\"Good evening,\" he said.\n\n\"Oh. Hi. I didn't think you were up.\"\n\n\"For just a little bit longer.\" He gestured at the night sky. Even through the dim lights of the cabin, the Milky Way blazed in all its glory. \"I don't often get to see the night sky like this. It's beautiful, isn't it?\"\n\n\"It is.\" She took a deep breath and turned her attention toward the sky. A streak of light crossed, and she closed her eyes.\n\n\"Making a wish?\" he asked.\n\nHer eyes popped open. \"If I tell you, it won't come true.\"\n\n\"I was just checking. I didn't want to wish on the same one and steal yours away.\" He winked at her, and her heart skipped a beat.\n\n\"What would you wish for?\" she asked. \"Since you aren't wishing, it should be fine.\"\n\nHe laughed. \"I honestly don't know. This will sound weird, but I'm pretty happy these days. Can't think of anything I really want, nothing big anyway.\"\n\n\"What's it like? Living at the house?\"\n\n\"Hmm.\" He screwed up his face in concentration. \"I'm trying to think of a good analogy for you. I guess it would be like if you had twenty sisters, but you were all different types of spiders. I'm kind of making an assumption, since you look different than your sister does.\"\n\n\"It's a fair assumption,\" she replied. \"Our body type gets determined by where we were conceived and the rest of the colony. The idea is that it allows us to adapt to our environment. My spider body is complementary to my sister's, and it makes more sense out here. It's far harder to hide a web from human prey in the forest. People don't generally wander off trail. Hence why I have a hunter's body.\"\n\n\"Human prey?\" She heard his voice rise an octave.\n\n\"If I hunted humans,\" she corrected. \"I may be different from my ancestors, but that doesn't change where I came from.\"\n\n\"We all come from darkness. It's our job to rise above it.\" The wind caught Mike's hair and blew it in front of his eyes. His scent permeated the area, which caused Velvet to drool so much that she had to swallow. \"So yes, the many-sisters theory. Imagine having that. All the women in the house are different. We also have magic rats and centaurs. It's always busy, but then something like your goblin war will pop up, and it usually ends with house repairs. Granted, I know nothing about your goblin war, and would love to hear more.\"\n\nVelvet relaxed. \"There isn't a whole lot to tell. We discovered a cave system in the distant hills teeming with goblins. They started prowling around the area and even attacked my dad's jeep one day when he was coming home. My mom tried to contact Aunt Emily, but she never came. Emery said that she had sealed them away, but didn't know how.\n\n\"My dad decided that he and my mom were going to set traps and try to take them out. They were kind of like the Nirumbi, only a bit bigger. The one thing they had that the Nirumbi didn't was sheer numbers. My parents killed almost a hundred of them in a week, yet they just kept coming. The yard was riddled with spears and flintknap weapons. Goblins are notoriously difficult to kill.\"\n\n\"I'm aware,\" Mike replied. \"The one I live with, Tink, has had a bunch of close calls. Almost eaten by a Jabberwock once.\"\n\n\"A Jabberwock? Like from Wonderland?\"\n\n\"That's a long story of my own, but yes.\" Mike grinned.\n\n\"My dad shot a goblin in the head once. Almost point blank.\" She tapped her forehead. \"It broke the skin, but that was it. It tried to bite him, so he put the gun in its mouth and pulled the trigger. That finally did the trick. Guns didn't work very well, but my sword and the traps did. Log traps, boulder traps, you name it. Well, that, and my mom was strong enough to snap their necks if she could get her hands on one. My parents finally got desperate enough that they tried poison. They started with rat poison and worked their way up to something my dad learned about in the military. Uncle Foot was gone almost a week trying to find us a barrel of the stuff. Guess what we learned?\"\n\n\"Tell me.\" There was excitement in his eyes.\n\n\"Goblins are immune to poison. There's actually a part of the forest we aren't supposed to go to anymore, because my parents found a way to aerosolize the stuff in the barrel. Killed a bunch of vegetation.\" She smiled, thinking of her parents working together. The two of them had been an amazing team, but their ruthlessness when it came to their daughter's safety had been on another level.\n\n\"So how did they do it? End the goblin wars?\"\n\n\"I'm not entirely sure.\" Bigfoot had taken her and Eulalie to a cave hidden deep in the woods, with instructions to remain inside until he or their parents returned. \"I do know that they found a way to drive the goblins back into their cave, but that's it. My parents would never tell me what happened, and we knew better than to ask. They did tell me that the goblins were gone for good, so I can only assume they killed them.\"",
        "Mike frowned. \"Seems a bit extreme, but the only goblin I've met is Tink. She's nothing short of amazing.\"\n\nTo hear him refer to a creature like a goblin as anything other than disgusting awakened all sorts of feelings inside of Velvet. Would he ever see her as something other than an eight-legged freak? She was perfectly aware that he had a touch of arachnophobia, she could smell his fear when they had first met. That scent had already disappeared, and she wondered if it had to do with the other night when he had touched her.\n\nShe thought about the strange moment they had shared. A sexual current had run through her whole body, and it had taken everything in her power to keep her hands off of him. If she hadn't heard the gargoyle's arrival, she didn't know what would have happened.\n\n\"The house sounds interesting. Dana told me about your spat with the fairy queen. And did you really tame Cerberus? How did you manage that?\"\n\nHis cheeks turned red. \"Quite by accident. Yuki cast the wrong spell on Cerberus and...\" he waved his hands around as if trying to come up with more words, but failed. A yawn escaped his lips, and he rubbed his eyes. \"Sorry, I promise that you aren't boring. Just need sleep. I'm only a weak human after all.\"\n\nI don't think that, she thought. \"Have a good night, then.\"\n\n\"You, too.\" He gave her a little wave and then disappeared around the corner. She waited a minute for him to come back, but it wasn't meant to be.\n\nThe tree line was almost a hundred feet from the cabin, but she reached it in moments. Hidden in the darkness of the pines, she pulled out the shot glass in her front pocket and examined it.\n\nIt was Mike's semen. Preserved for Dana as a means of keeping her sane, it contained his viable sperm. Spittle had formed in the corners of her mouth as she pried the cap off, her brain no longer in control of her limbs. She inhaled its scent, and her human eyes rolled up into her head.\n\nSynapses that had never fired before lit up her brain, and she saw flashes of children. They were all daughters, but had Mike's hair and his goofy grin. She saw dozens of them, each one a possibility. Some were lifting giant stones while others built intricate webs. It was like standing in the middle of a storm, but each blast of lightning was illuminating the future.\n\n\"Oh gods,\" she muttered, then held the cup to her mouth and sucked down the contents. The cool liquid warmed her belly, and the flashes intensified. Some offspring moved with lethal grace, others struck from the shadows. His children would be powerful, their combined biology a perfect match.\n\nHer mind focused on a little girl who looked different than the rest. Her hair was willowy and twisted about in the wind. She looked up at Velvet with deep brown eyes that were a mirror image of her own father.\n\nShe gasped, the shot glass forgotten as it fell and landed in the snow. The image was gone, and she had to see this girl again. Would her child have her father's humanity, or her mother's ruthlessness? Without hesitation, she removed the lid of the next shot glass and slammed its contents.\n\nThe images came anew, but now she saw the girl standing over a fresh kill. It was a brown bear, and she was sinking her fangs into it. Now the girl was climbing a tree without making a sound. Now she was\u2014\n\nGone. Blinking rapidly, Velvet hurried to drink the next one. Several minutes passed as she contemplated this mystery child, an ethereal being that reminded her of both Mike and her father. Her heart swelled with pride to see her standing defiantly above a giant chasm with a meticulous web built beneath her.\n\nWhen she ate the last of Mike's semen, she had one final vision. It was her daughter, standing inside of a large building filled with books. She was an adult now, and she was standing on the ceiling with her hair hanging below her and a book in her hand. The Arachne looked up and their eyes locked. Startled, Velvet's daughter dropped her book.\n\nThe book fell almost twenty feet before the Arachne reached out with glowing fingers to summon it back to her.\n\n\"What is this?\" She was back in the forest now, and she knelt down to examine the shot glasses, hoping for just a little more juice. This new Arachne had been using magic! Was such a thing even possible?\n\nShe had to know more, to see her offspring again. Was this how her mother had experienced it? Had she seen her daughters so perfectly in her mind's eye?\n\nWhat, then, of the others she had seen? For decades, they had spoken about how it would be up to Velvet and Eulalie to decide whether the Arachne went extinct. She was aware that her mother had willingly smashed hundreds of her own eggs to ensure children able to resist the instinct to hunt humans for food. Would she have to do the same?\n\nHer belly churned as she stumbled around the side of the house. She felt drunk, a sensation she tried to avoid at all costs. Alcohol never mixed well with her spider biology, and she felt more sick than relaxed. Only it wasn't booze that had her all messed up.\n\nIt was him. She could smell his scent, sense his presence through the walls of the building. Standing outside her father's bedroom window, she could see Mike in bed, his face buried in a pillow. The door had been closed and it was dark inside. If she opened the window, she could get inside.\n\nSomething shifted at the foot of the bed. She shook her head in surprise, wondering how she could have missed the three-tailed fox curled up at the foot of the bed. She had no idea that Yuki could change shapes like that, though she had wondered. Wouldn't it be nice if she could become human and walk among them as an equal rather than an abomination?\n\nShe was panting, and her heart hurt. Tears formed in her eyes as she watched him shift beneath the blankets. Something inside of her had snapped in the last couple of days, and her entire world now swirled around this man that had walked into her life.\n\nHer mother had warned her multiple times about the drive to mate. It would be an overwhelming urge that would eat her away from the inside as she lost control. However, it wasn't only Mike that she was fixated on, but the girl from her vision. This unborn child could be her father's legacy, and she refused to let that die.\n\nIf she bit Yuki while she was a fox, would it be enough to knock her out? Maybe she could mate with him, then run away after. If Quetzalli and Bigfoot didn't catch on...\n\nUncle Foot. He would know, and he would come looking for her. Eulalie could be made to understand, but her uncle never would.\n\nShe let go of the window and ran. It didn't matter where she went, she just needed distance. The air was cold, and she held her jacket tight against her body as she sprinted through the woods. The long branches of the pines hungrily grabbed for her flesh, but she twisted through the gaps in their foliage with ease.\n\nWhen she was almost a mile from the house, the trees in front of her exploded as Abella dropped through them from above. The gargoyle's face was twisted up in anger as she opened her wings wide, blocking Velvet's path.\n\nVelvet came to a stop, her feet sliding in the snow.\n\n\"I saw what you did,\" Abella said. She held up an empty shot glass accusingly. \"Tell me why I shouldn't crush you.\"\n\nInstead of answering, Velvet bared her fangs and bull-rushed the gargoyle. Abella looked surprised, but held her ground. When they collided, the two of them crashed through the trees and tumbled down a hill.\n\n\"Leave me alone!\" Velvet didn't bother striking Abella. There was nothing her fists could do against her stony hide. Instead, she twisted around the gargoyle and pinned her wings together with a pair of her legs while covering Abella's eyes. Abella stumbled around, her swishing tail pounding through the nearby bushes. Once the gargoyle was off balance, Velvet swung forward and down, executing a throw that tossed Abella into a nearby tree.\n\nOn impact, the snow in its branches fell, burying Abella. Velvet scrambled to get away, but the gargoyle burst free and tackled her from behind. Stony fingers closed around Velvet's neck and squeezed.\n\n\"You were ready to fuck him, weren't you?\" Abella's breath was hot against Velvet's ear. \"And when you were done, you were going to eat him!\"\n\nVelvet pulled out her sword. In its collapsed state, she drove it down into Abella's thigh. Sparks flew when the sword slid across stony flesh, and Abella howled in pain. Velvet twisted around to put the blade between them.\n\n\"I was not going to eat him!\" she yelled, the blade held to Abella's throat. \"Please, just let me go!\"\n\n\"No!\" Abella's eyes flicked to the blade. The magical blade was capable of injuring her, and she was wary of it.\n\n\"If you think you can choke me out before I use this on you, you're sorely mistaken.\" Velvet's whole body was tingling now, fire burning in her limbs.\n\n\"I'm not worried about a little scratch.\" As if to emphasize her point, Abella tilted her face to reveal the large crack that went over her eye. It glittered in the moonlight, as if filled with dark crystals.\n\nVelvet pointed the blade at herself and unfolded it. They were close enough to the ground that the point of the blade buried itself in the snow. The sword tried to unfold, but the handle got caught in Abella's open mouth and pushed her off the ground.\n\nWhen Abella let go, Velvet slid behind her and grabbed the sword. She pinned Abella to the ground and placed the tip of the blade at the base of her skull.\n\n\"if you try to get up, all I have to do is press.\" To emphasize her point, she leaned on the blade. \"It's called leverage.\"\n\nAbella went still, her wings relaxing.\n\n\"All I want is to leave,\" she said. \"To get some fresh air, some perspective. You don't know me, but I'm guessing you know my kind. Well, guess what? I don't even know my kind. My mother made sure of that, bless her hearts.\"\n\nAbella growled down in the snow.\n\n\"And you know what else? My mother would want me to kill you. Because despite her enlightenment, she was still a killer, because it's what she needed to be.\" More tears now, hot in her eyes and cold on her cheek as they froze. \"And so was my father. He was a killer, too. Never wanted to talk about it, but it's true. Both of them did it, and they would do it again to keep us safe.\n\n\"But you know what? Because they had to kill, they spent their whole lives teaching me to be better than them. To live a life where I didn't have to make that decision. And right now, I am so confused, everything is spinning. Yes, you're right. I do want to fuck him, I can't help it. But kill him? Take his life just to eat? He called a goblin amazing. Have you ever seen one? Of course, you have, you live with one. Right now, all I can think about is mating with him and letting him fill my belly with his seed, and that's fine, it's whatever. But do you know what I want even more than that?\"\n\nAbella tilted her head, as if to hear better.\n\n\"I want him to think I'm amazing, too.\" She lifted the blade and stepped off of Abella's back. Before the gargoyle could say anything or move, Velvet folded up the sword and ran.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nMike opened his eyes and let out a sigh. He almost didn't want to know what time it was. Once he knew, he would start that mental countdown about how many hours he could still sleep and feel rested. He wanted an early start, because he planned to hike to the edge of the boundary and try to get some cell reception. It wasn't unexpected for him to be gone this long, but he definitely needed to check in.\n\nWhen he picked up his phone, he squinted when it lit up.\n\n\"Ugh.\" He set it back down. It was almost one in the morning, and he was no closer to sleep than he had been an hour before.\n\nPart of the problem was his current bedmate. While Yuki was able to collapse herself into a cute little fox, Quetzalli was an absolute bed hog. The cabin only had one queen-sized bed. With Bigfoot on the couch, he'd offered to sleep on the floor, but Quetzalli had insisted they share.\n\nHe held still for a minute, listening. There was a slight breeze outside, and he occasionally heard the creaking of floorboards. His best guess was that Dana was pacing. He felt bad that the poor girl could no longer sleep, and wondered what he would do if saddled with so many extra hours.\n\nQuetzalli shifted in bed and said something in her sleep. Though the words were unintelligible, he felt the hairs on the back of his neck rise just before he got zapped. Suddenly wide awake, he slid out of bed and put on his pants and shoes.\n\nYuki opened her eyes and sat up. She tilted her head out of curiosity.\n\n\"Can't sleep,\" he explained. \"But don't worry, I won't go far.\"\n\nShe yawned, then set her head back down and watched him with one eye as he walked out of the room.\n\nOut in the living room, he saw that Bigfoot was asleep on the couch. Several empty beer cans had been stacked in a pyramid on the nearby table and an old VCR had been hooked up to the TV. Harry and the Hendersons was playing on mute.\n\n\"He thinks it's hilarious.\" Dana stood in the kitchen, an e-reader in her hands. \"Trouble sleeping?\"\n\n\"A bit. Quetzalli keeps taking the blankets.\"\n\nShe nodded, then set her reader down. \"I'm not surprised. I've seen her sleep. She tosses and turns a lot. I think she dreams about flying around and chasing storms. She's totally into you, by the way.\"\n\n\"I kind of figured.\" He smiled and sat down next to her.\n\n\"If you know, then why haven't you fucked her?\" Dana raised an eyebrow.\n\nTaken aback by the boldness of the question, Mike felt his cheeks begin to burn. \"I kind of thought that you two were a thing and didn't want to cross any lines.\"\n\n\"I appreciate that. But we're not officially anything. My heart belongs to Alex.\" She sighed and shook her head. \"I sometimes wonder if I'll ever fall in love with someone else. Coming to grips with my situation was difficult enough, but I find myself wondering if romantic emotions are frozen in time like the rest of me.\"\n\nMike frowned, old feelings of guilt regarding Dana bubbling up to the surface. \"I wish I could help,\" he told her.\n\n\"You help plenty. It can be weird sometimes, but I know your heart's in the right place. As for me and Quetzalli, that's just for fun. Lily helped me fill that void for a while, but Quetzalli likes to cuddle after.\" She leaned forward and lowered her voice. \"This will sound silly, but when I'm holding her after sex, I like to pretend that I'm feeling the same things she does. Practicing for when I have those feelings again.\"\n\n\"I don't think that sounds odd at all. You're doing the best that you can in a shit situation, it's all you can hope for.\"\n\n\"I guess.\" She looked over at Bigfoot. \"I'm guessing a couple more days will see him on his feet. Then we can figure out who is going and who is staying. As far as the Nirumbi are concerned, they seem like a done deal.\"\n\n\"Maybe.\" Mike thought back to that intense feeling he had experienced outside. He had his doubts, but had no evidence.\n\n\"If you rub her back, it will help her relax,\" Dana offered. \"She's really into getting rubbed, in case you were wondering.\"\n\nHe laughed. \"I feel like you're trying to sell me on having sex with her.\"\n\n\"Have you ever seen those movies where a teen girl talks about her crush all the time and it's super annoying? I've been living in that movie, but all the talk is about sex with you. I could use some peace and quiet.\"\n\n\"And you'd be fine with that?\"\n\n\"Would I have brought this up if I wasn't? Seriously, Mike. Please fuck her. I'm tired of answering questions about heterosexual sex. Oh, but a warning. She gets extra zappy when she comes.\"\n\nSo do I, he thought.\n\n\"So other than a dragon-sized bed hog, what's the real reason you're still awake?\"\n\n\"I don't know what you mean,\" he replied.\n\n\"I know your scent. You've smelled differently all day, and I'm getting a whiff of something else right now. It smells a lot like pepperoni burps, but I think it's anxiety.\"\n\n\"Oh,\" he replied. Dana was right, there was something else keeping him up. Ever since that moment in the barn with Velvet, he had been unable to get her out of his mind. In fact, he had walked away from their conversation about goblins only to get some distance. He hardly knew her, and the intense attraction was a little frightening.\n\n\"Oof, there it is. Whatever the problem is, you're thinking about it right now.\" Dana waved a hand in front of her nose and scrunched up her face. \"Is it something I can help with?\"\n\n\"I'm not sure.\" He pictured the way that Velvet looked when she had been standing next to him outside. She had absent-mindedly twirled her hair in one finger while they talked. When she looked at him, he felt like he was getting lost in her eyes. She was his perfect tomboy fantasy. A woman who had lived her life in the forest, with beautiful auburn hair and a sweet smile that made his knees feel weak.\n\nFrom the waist down...he didn't even mind so much. He supposed part of that was due to the fact that she was covered in soft hair. Her sister's sleek, shiny body was far more intimidating to him.\n\nAnd what about when he had touched her and his entire body had become ultra-sensitive? His magic had never done that before. In the last few months, he had experimented with his own abilities, but it was definitely limited.\n\nHe called the abilities and traits he had gained from the others his extra-human abilities. The banshee scream was the most obvious, and the endurance he had received from Zel had been a godsend on their hike. He attributed his strength in the Dreamscape to Lily, and the fact that his cum practically sparkled now was definitely the fairies.\n\nBut there had to be other traits hidden away, ones he hadn't discovered yet. Having no fear of heights was something he had received from Abella, but he would never have known about it if he hadn't taken a ride on the Jabberwock. Was this weird sensitivity related to one of those? Perhaps one of his gifts was reacting to Velvet's presence? It was impossible to know.\n\n\"Where does Velvet sleep?\" he asked. They had been given a tour of the downstairs, but he hadn't bothered going upstairs yet.\n\n\"That's...not the question I expected. The Arachne sleep upstairs.\" Dana pointed at the loft. \"It's weird up there, kind of like the house. That whole bigger on the inside thing. When you go up there, stay out of Eulalie's room. She'll get pissed if she finds out you messed with her computers.\"\n\n\"Is she some kind of\u2014\"\n\nDana practically leapt across the table to push her finger against his lips, preventing him from saying webmaster.\n\n\"Just don't. It's too obvious,\" she warned.\n\nHe snorted and stood. Dana watched him ascend the spiral staircase to the loft. Somehow, despite climbing the stairs, the ceiling didn't seem any closer. In fact, the space in the rafters looked large enough for several Arachne to move about. He wondered if Eulalie and Velvet had used the area as a playroom, able to move about without disturbing the earthbound residents below.\n\nFrom where he stood, he could see into the first floor. Bigfoot was snoring now, and Dana had put on headphones. He walked along the railing, trying to picture what it was like to grow up in such a place. In a dark nook along the far wall, he saw Emery tucked away in something that looked like a nest. The little imp was asleep, the silver dollar Mike had given him clutched in his tiny claws.\n\nAn entire life had been lived here by the Arachne family, and he wondered what the next step for the daughters would be. If the Nirumbi had been dealt with, they could return to their normal lives. He suspected that Eulalie was interested in the house, but Velvet had too many emotional ties to this place. It wouldn't be hard to connect the two by portal, but that was a discussion for another time.",
        "The rooms were at the end of the hall, laid out side-by-side. As he approached, he realized that he didn't know what he was going to do or say. Waking Velvet up to tell her that he couldn't stop thinking about her was not the most tactful way to approach the situation. Confessing that it was somehow magic related was also a terrible idea.\n\n\"What am I doing?\" he muttered to himself, then turned to leave.\n\nWhen he came back down the stairs, he saw that Dana was pacing while reading her book. She looked up at him briefly as he walked back to his room.\n\nOnce inside, he slid his feet out of his shoes and took off his pants. In just his shirt and boxers, he lifted the blankets and tried to slide in without making too much ruckus. The light of the moon was amplified by the reflective snow, which provided the room plenty of illumination. The room seemed colder than usual, and he swore he saw frost forming along the edges of the glass.\n\nNow in bed, he tried to pull the blankets around his head and shoulders in an attempt to snuggle down and get warm. When they wouldn't move, he lifted them up and rolled over to see what they were caught on. Expecting to discover them pinched between Quetzalli's arms, he was instead greeted by the sight of the blanket being tightly clutched in her hands.\n\nHer purple eyes sparkled from within as electricity crackled along her eyelids. Once they were looking at each other, she let go of the blanket. The tension on the fabric caused the blanket to pop up, and a cascade of static shocks along her body illuminated the dark space.\n\nShe was completely naked.\n\n\"What's a girl gotta do to get your attention?\" she asked in a quiet voice.\n\n\"Quetzalli, I\u2014\" He caught just a glimpse of her bountiful breasts before the blanket settled back down, and he suddenly couldn't process his own thoughts. The events of the day had become a yawning void, filled with thoughts of the beautiful woman before him.\n\nBeneath the covers, a warm hand grabbed his cock through his boxers.\n\n\"What about Yuki?\" he whispered.\n\nYuki, in fox form, let out a laugh, then jumped off the bed. He saw her move across the room, leaving a frost trail in her wake. Once at the door, she got up on her hindlegs to pull it open, then strolled out and shut it behind her.\n\n\"Even dragon's need a wing fox, sometimes.\" Quetzalli's eyes lit up as she lifted the blankets and pressed herself against him. \"I've been practicing with my electricity. So I don't shock you.\"\n\n\"You've already shocked me,\" he told her, then moved his hand onto her hip and slid it behind her to squeeze her ass. He felt a subtle surge of electrical energy as she sighed.\n\n\"You touch me differently than Dana does,\" Quetzalli said. \"There's a certain...roughness that I like.\"\n\n\"Do you like it rough?\" he asked her, his nose almost touching hers.\n\n\"I'm not sure yet,\" she replied. \"Maybe you should show me?\"\n\nHe slid his hand beneath her jaw, which allowed him to cradle her head. When he pulled her in for a kiss, the resulting spark lit up the dark space beneath the blankets. It was bright enough that he saw it through closed eyelids, but the pain was only brief.\n\nWhen they parted, he licked his lips. \"I have a similar trick,\" he told her, then allowed his magic to manifest along the hand on her ass. The steady blue glow illuminated them both, and her eyes widened as his magic sank into her body.\n\n\"It feels so warm,\" she whispered. \"I can feel your lightning traveling through my veins.\"\n\nHe pulled her thigh forward so that her leg wrapped around his hip. Once she was positioned correctly, he kissed her again. This time, he moved his hand around the thick curve of her ass and teased her puffy pussy lips with the tips of his fingers. More sparks popped between them when Quetzalli stuck her hand down the front of his boxers and he received a zap at the head of his dick. The shock was barely noticeable, and he let out a sigh of relief.\n\n\"Told you I've been practicing,\" she explained, then pressed her body against his. They were pressed together just right that she could still stroke the upper half of his erect cock while he teased her.\n\nHe slid his hand from her neck to her breasts. They were supple, and he ran his magic along the edge of her nipple until it was rock hard. Whenever she moaned or gasped, her eyes lit up with electricity.\n\n\"I never understood why they do that,\" she muttered just before he moved his head and sucked her nipple into his mouth. He teased her areola with his tongue and bit her playfully as she continued to stroke him beneath the blankets.\n\nQuetzalli groaned and shifted, trapping his thigh between her legs. She was partially on top of him now, and was rubbing her crotch along the length of his thigh. She left behind a trail slick with her fluids as she touched his chest with her free hand.\n\nThe first zap he received startled him, but only because she teased him with it first. It was strange feeling all the hairs on his body react just before the spark lept between them, and she managed to hit him with it right on his own nipple. The second zap let him know it was deliberate, and he let out a gasp, her nipple popping free of his mouth.\n\n\"Oh, it's cold out there!\" she cried, then tried to adjust the blankets as he sucked her back into his mouth. The fabric kept catching on the edge of her horn, and he nearly laughed when he imagined sticking a cork on it for safety reasons.\n\nHer horn was actually glowing with an eerie purple aura. She continued to hump his leg, her little moans becoming more desperate as she pressed into him. He loved the feel of her skin beneath his hands, the feel of her weight on top of him. Her body was covered in random patches of scales that were smooth to the touch and hummed with energy of their own.\n\n\"I want to feel it,\" she told him. \"Your cock. I need it inside me before I burst.\"\n\n\"Before you burst?\" he asked around the edge of her other breast. He had spent enough time on the first one that he worried that the second one was feeling neglected.\n\n\"It's a full feeling, deep in my belly,\" she explained. \"Like a cloud full of rain, but it just keeps building, the moisture piling higher...\"\n\nMore than happy to move forward while avoiding cloud metaphors, he grabbed her hips and pulled her up his body. Her thighs spread wide to slide out and around his own legs, and he now felt her wet labia rubbing along his shaft. Though he hadn't penetrated her yet, he could feel the hum of magic being established as her magic mixed with his own.\n\n\"Are you vibrating?\" she asked him in a hushed tone.\n\nHe held still to process her question. Between the steady sparks leaving her body and his own magic, his dick was actually vibrating while pressed between them.\n\n\"Apparently I am,\" he said. \"This is new territory for us both.\"\n\n\"Maybe we should play the wizard and the dragon.\" She smiled mischievously. \"I'll threaten to eat you and you can slay me with your mighty wand.\"\n\nHe stared at her in amazement. \"Is that...something you actually want?\"\n\n\"No.\" Quetzalli grabbed the base of his dick and held it in place as she moved her body to take him inside. \"But Amymone said you would make a funny face. She was totally right.\"\n\n\"That little\u2014\" The words were conscripted to the void as he entered her. The vibrations in his body intensified, and his magic was now openly streaming inside of her. At the same time, her horn was beginning to shoot sparks, and he shifted the blankets away from her head before she burned something.\n\n\"Oh! Gods!\" Her voice was a quiet hiss as she snaked her legs beneath his ass and pinned herself in place. \"You feel soooo good inside me!\"\n\nHis cock was pressed up against the far wall of her vagina, but his whole crotch was tingling with pleasure. His own magic seemed to be mixing with hers and the intensity of the exchange was building between them.\n\n\"I never thought it would feel so hot,\" she muttered. The air was crackling with electrical streamers that came off of her horn and fingers. Mike's magic was manifesting all along his belly and thighs as sparks that rose into the air and hovered between them.\n\n\"You feel wonderful yourself.\" He loved the sheer weight of her pressing down on his hips, the feel of her thick thighs beneath his fingers. His magic was now caught up between their magical fields, the room taking on the appearance of a snowglobe made out of electricity.\n\n\"Oh!\" Quetzalli adjusted her hips. \"When I move like this, I can feel you pressing against my clitoris!\" She grunted as she rolled her hips against him, grinding her pelvis hard against his. Sparks jumped between them now, each one lighting up the room.\n\nHe closed his eyes and moaned. Whenever she was sliding off of his shaft, he could feel the head of his dick vibrate inside of her. As she sank onto him again, she was tight enough that her vaginal walls held him still. The sensation of his cock vibrating off and on was sending massive surges of pleasure up his spine.\n\n\"I thought you said you were gonna be rough with me,\" Quetzalli told him, her eyes dazzling in the darkness.\n\nMike's eyes snapped open and he lifted his hips into the air. She groaned and put her hands against his chest. The connection between them intensified, and he managed to sit up and pull her torso against his face. Her breasts were big enough that his face was properly buried between them. There was a brief moment when he realized that he couldn't actually breathe.\n\nI wonder what Cecilia would think if she had to collect me like this, he wondered. Or Death. He would probably make me answer a bunch of questions.\n\nHis hand snaked up along her back until he got a handful of her hair. He twisted it around his hand and yanked, forcing her head back.\n\n\"Gah!\" Quetzalli had to put her hands behind her to prevent from falling over, but now her breasts were defenseless. Mike licked and bit his way along them while she gasped, her hips shifting about above him. The more he bit, the more he wondered if it was a habit he had picked up from Tink.\n\nQuetzalli was letting out sexy little cries every time he bit a nipple. There was a delicate art to inflicting just the right amount of pain, and his magic let him walk that line perfectly. His magic surged, and the streamers along Quetzalli's body turned a deep crimson.\n\nThis is new. Unconcerned, he used his free hand to anchor her shoulder and pull her down, allowing him to penetrate her more deeply.\n\n\"Oh, gods!\" she cried. The singular light in the room had a fluorescent bulb in it, which was now lighting up on its own. It flickered in time with the steady hiss that emanated from the streamers on Quetzalli's horn. \"This feels so much different than it does with a woman!\"\n\nEncouraged by her words, he fucked her. He kept his hand in her hair, but placed the other one on the small of her back, allowing him to hold her in place as he thrust his cock into her. Whenever they were pressed together, he could feel a tremendous amount of magical energy shift and build up while every hair on his body stood on end. Quetzalli's hair was now sticking out in every direction, the air filled with the sound of steady crackling.\n\nIt was so easy to let the world around him fall away, to let this beautiful woman become his entire reason for being. He grabbed a handful of her ass and pulled as hard as he could. His dick was now pulsating inside her, and he could feel a steady stream of precum leaking from his body.\n\nShe was calling his name. Bits of his magic had stuck to her, but others were now floating around the two of them, creating a spherical grid that rotated around them like a globe. Each one acted like a node, sending streamers to its closest neighbors.\n\n\"Uh...\" Despite being buried balls-deep in a dragon, it suddenly occurred to him that they were in the middle of a massive electrical charge. Was his magic technically even electricity? It wasn't like he had ever bothered to fuck someone with a lightbulb in his mouth.\n\n\"Oh, yes!\" Quetzalli's eyes were now shimmering purple orbs, and she grabbed onto his shoulders. \"Fuck me, Mike Radley! Fuck me!\"\n\nShe yanked on his hair, which pulled his head back. This allowed her to kiss him. When their tongues met, the direction of the orb changed, and he felt his magic surge back into his body. His cock was so hard it almost hurt, and he felt that pressure building deep inside his balls as they pulled into his body harder than ever before.\n\nWhen he came, the magic shifted and he poured massive amounts of semen into Quetzalli. Upon splashing her insides, the sphere shrank down onto her body, bringing all those nodes into contact with her skin. As if electrified, she tensed up so hard that he let go of her hair and put up a hand to keep her from falling over.\n\nQuite by accident, his hand slid across her forehead and hooked onto her horn.\n\nThe field exploded outward, spiraled, then came back in. It pulsated in time with Quetzalli's ragged breaths, and she opened her mouth wide and let out a high-pitched hiss. He could feel her pussy tighten up on his cock, but then his whole body jerked as the field manifested again and settled on him.\n\nWhat was usually a diminishing back and forth had somehow intensified. His orgasm was almost immediate as he blew his load once more. Quetzalli tensed up, squeezing his previous deposit out and all over him as the magic swung back to focus on her.\n\nHe tried to let go of her horn, but his next orgasm came before he could act. Quetzalli shifted her weight back, causing more semen to squirt all along his belly. In between orgasms, he managed to regain control of his hand long enough to let go, but it was too late.\n\nThe electrical field was large enough now that it crawled along the walls of the room as if trying to escape. The whole room was ablaze in blue and purple light, and the tiny desk light was dwarfed by how bright it was. Quetzalli's eyes had become molten stars as she screamed silently above him, continuing to ride him like she was going for a world record. The edges of his vision were going black as she continued to drain his body of cum.\n\nHe needed to break the connection before he passed out. Each load he put in her was strengthening the feedback loop rather than weakening it, and she was leaking so heavily now that all he had to do was give her shoulders a push. She tipped over backward and fell to one side, causing her to twist and pop off of his cock.\n\nThe storm broke, and the field exploded along the walls of the room. Electrical energy crackled as it crept around the room and eventually vanished into the floor. Quetzalli's hands were clenched tight as she twitched on the bed next to him, and he came one last time, covering his belly in spooge.\n\nThey lay there silently, their frantic breaths the only sound that could be heard.\n\n\"Do you...think they...heard us?\" Quetzalli asked.\n\n\"If not, they definitely...saw the...light show.\"\n\nOnce he caught his breath, he took off his shirt and used it to mop up the mess on his belly. There was so much cum all over both of them that there was no way either of them would avoid the wet spot tonight.\n\nQuetzalli didn't seem very mobile, so he helped her beneath the blankets once again. When he slid into bed with her, he spooned her from behind. His arm fit perfectly over her waist, and he rested his hand on her belly, his fingers tracing circles just beneath her belly button. His semi-hard cock rested between her buttcheeks, which she pressed playfully against him.\n\n\"That was wonderful,\" she whispered. \"I was sure sex with a man was interesting, but sex with you? Pure magic.\"\n\nShe said nothing else. Other than the occasional contented purr, she was soon asleep in his arms.\n\nExhausted, he closed his eyes and felt consciousness slip away. When the dreams came, he found himself slipping through the clouds on silvered wings as he herded them together to make a proper storm.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe weak, fog-filtered light of morning illuminated the living room of the Radley house, and Beth let out a sigh of relief. A small fire crackled in the fireplace\u2014Tink had spent part of her evening getting leftover timber from rebuilding the Labyrinth in an attempt to keep the house warm.\n\nBeth had spent most of her evening sitting on the couch. Determined not to take her eyes off of Murray, she had taken a few cat naps while Cecilia and Lily watched. It wasn't that she didn't trust them to wake her if something happened. It was more that she was afraid she wouldn't be ready to spring into action.\n\nNot that she knew what that would be. Sofia had dropped by in the middle of the night to announce that they hadn't found anything of note. Even with the information that Murray was acting as a beacon, their search had turned up too much material to go through in such a short time. The problem with legends was that it was usually hard to tell if they were real until they were staring you in the face.\n\nKisa and Tink were curled up together on the loveseat. Tink was out cold, her goggles sliding down over her nose. Kisa was lying across the goblin's lap, her arm hanging off the side and touching the floor. Tucked between them was Jenny, the little doll's eerie features staring out the window.\n\nLily stood at the window with her arms crossed. Her tail swished from side to side in annoyance.\n\n\"Oh good. Now we get to see his ugly face again even better.\" She looked over her shoulder at Beth. \"Is it time to check your phone again?\"\n\nBeth turned it on and frowned. \"Still nothing. Literally.\" There was no signal, and her battery life had drained substantially overnight. She wondered if she forgot to turn it off. \"This reminds me of snowstorms when I was a kid. Stuck in the house all day, and\u2014\"\n\n\"I don't wanna hear about it.\" Lily turned to face her. \"This isn't a snow day, and it certainly isn't something I can relate to.\"\n\nUndeterred, Beth turned her phone back off and picked up her teacup. With nothing better to do, she stood and headed for the kitchen.\n\nAs she walked into the kitchen, she saw Reggie standing on the counters. His nose was twitching, and a group of rats had clustered on the floor beneath him.\n\n\"Everything okay?\" she asked.\n\n\"It is not, Lady Beth.\" Reggie bowed in greeting. \"I have just received word that we've lost track of the colony.\"\n\n\"Excuse me, what? You mean, like...\"\n\n\"The rest of us, yes.\" Reggie moved to the edge of the counter. \"Sometime in the night, all of our portals slammed shut. I've been out here monitoring the situation with this man, and when it was time to change the guard, they never came.\"\n\n\"Reggie, that's terrible!\" She set the cup down and took his paw in her hand. \"What can we do? Are they okay?\"\n\n\"I do not know, but I fear the worst. The colony has been living in the space between worlds for centuries, we are survivors. But I don't know who could have cut them off so suddenly.\" Down below, one of the rats chittered at him. \"I agree, but don't think that's what happened.\"\n\n\"What did he think? Or she?\" Beth frowned when she looked at the rats.\n\n\"She said that it could have been an insurrection and we were closed off on purpose. I doubt this only because there have been no rumors of displeasure with the current status quo. My kind have rather enjoyed being official members of this home.\" He shook his head. \"Between the man in your yard and my missing colony, I am at a loss right now. Please excuse me.\"\n\nWith that, Reggie hopped off the counter, and his retinue followed him as he disappeared. Troubled, Beth navigated the kitchen in the dim light and set her cup in the sink. When she turned on the water, it came out at a bare trickle.\n\n\"Shit!\" She smacked the faucet, then realized it would be better to have Tink look at it. On her way back into the front room, a dreadful thought occurred to her. The electricity was out, and the water was no longer running. Now Reggie's portals had closed.",
        "Were they being cut off?\n\n\"Where's the crystal ball?\" she asked when she entered the front room. It sat on one of the end tables on a small golden ring that cradled it. She picked it up and blew her hot breath on it.\n\n\"Ratu? I need to speak with you right away.\" Every time she had used the ball until now, the naga had appeared in a matter of minutes. There would be a swirl of purple smoke as the crystal connected to the other side, and then she would appear.\n\n\"What's wrong?\" Lily asked. Beth held a finger to her lips.\n\n\"Ratu? Can you hear me?\" She gave the ball a shake. For just a moment, there was a wisp of smoke, followed by the sound of a distant voice. Then nothing.\n\n\"Lily, we're being cut off,\" she said, then set the ball down. \"Whatever that thing is out there, it isn't just calling for help. It's isolating us!\"\n\n\"Fuck!\" Lily's shout startled Kisa awake. As she rolled off of the couch and onto the floor, Tink was also startled awake. The goblin tumbled to the floor and landed gracefully on her face.\n\n\"We need to check on the others.\" Beth pointed at Lily. \"I need you to see if you can get to the greenhouse. Kisa, check the Library. I'll see if I can open the Labyrinth.\"\n\nShe shot up the stairs before anyone could object, her heart pounding. Once in her room, she felt the first hot tear roll down her cheek as she grabbed the knob of the closet and entered the secret combination that would activate the magic and allow her to enter the cave.\n\nWhen she opened the door, it was still just a closet.\n\n\"No,\" she whispered, taking a step back. Frozen in terror, she heard Kisa yell from down below.\n\n\"It's not opening,\" she cried up the stairs. \"When I pull out the book, nothing happens.\"\n\nNo no no no no. Beth practically threw herself down the stairs and slid across the floor as she entered the office. Kisa was pulling down books frantically as Tink stood by, her features twisted up in horror.\n\n\"Magic book is broken,\" she whispered, then handed it over to Beth.\n\n\"How? How is this even possible?\"\n\n\"How is what possible?\" Death strolled out of the sitting room, his face buried in a Highlights magazine from the late nineties. He set it down on the desk, then looked at the books Kisa had thrown on the floor. \"Did you know that they have hidden pictures in these? I find them quite enjoyable.\"\n\n\"We're closed off!\" Kisa stood on a nearby chair so that she was eye level with Death. \"Something happened to the house and the Library is closed. Do you know what that means?\"\n\nDeath paused for a moment, then looked at the magazine he had set down. \"It means I must ration my reading materials,\" he said, then picked up the magazine once again.\n\n\"Death?\" Beth looked at the grim reaper with suspicion. \"Why aren't you wearing your ear muffs?\"\n\n\"Because that dreadful man out front has stopped shouting.\" Death lifted the magazine to look in it, but Kisa ripped it out of his hands.\n\n\"You can be so infuriating sometimes!\" She ripped the book in half and threw it to the ground. \"We. Are. All. In. Danger!\"\n\n\"Oh.\" He scratched the top of his skull, which caused a scraping sound that reminded Beth of fingernails on a chalkboard. \"I see. Perhaps we should check on our gentleman caller? I shall accompany you.\"\n\nBeth nodded, then looked at the others. Tink made a face as if she remembered something, then she bolted out of the room.\n\n\"Let's go then,\" she muttered, then led Death to the front door and opened it.\n\nMurray was hovering above the ground, his face stretched out in a soundless scream. She and Death moved down the stairs together as he unfolded his scythe. Cecilia appeared, hovering just off to the side as they walked toward Murray.\n\nOff in the corner of the yard, the Jabberwock let out a hiss. The beast had been sitting there ever since it had gotten knocked away, and its attention was now upward. The fog was impenetrable, hiding away the sky.\n\n\"Murray?\" She called out to him from a distance, but there was still no recognition. When she looked back over her shoulder, she half expected the house to be gone. \"Murray, can you hear me?\"\n\n\"He is not present.\" Death poked the man in the shoulder with his scythe.\n\nCecilia put a cold hand on Beth's arm. \"Who are they?\" she asked, then pointed out into the fog.\n\nBeth felt like she was going to be sick. She didn't see anybody, which meant that Cecilia was seeing spirits of some sort through the mist.\n\n\"What do you see?\" she asked.\n\n\"There are three of them,\" Cecilia answered. \"They're so bright, it almost hurts to look at them. And it looks like they're riding\u2014\"\n\n\"COME!\" Murray's voice was like a blast of thunder, sending a shockwave out through the fog. Beth cried out and covered her ears as her dress billowed out behind her.\n\n\"That was rather rude, don't you think?\" Death closed his scythe and smacked Murray on the head with his staff. \"You could at least give us a warning.\"\n\nA dark shadow appeared in the fog, standing nearly ten feet tall. Beth's heart raced as it came toward them with the sound of clopping hooves. The fog parted to reveal a large horse with fiery eyes, but her attention was caught by the rider. The figure looked to be wearing a high-tech space suit with a gold, mirrored visor. When the horse came to a stop, the figure reached over its shoulder and drew a bow. A black cloud circled the figure, then dispersed when it lowered its bow.\n\n\"Death,\" she muttered, taking a step back. There were a lot of things she was mentally prepared to deal with, but a horse-riding spaceman hadn't been one of them.\n\n\"Now this is a surprise!\" Death put away his staff. \"I didn't expect\u2014\"\n\n\"COME!\" Murray's eyes were blazing with light, and Beth let out a shriek of alarm. Glowing eyes appeared in the mist, and a red horse emerged. Its mane and tail were made of fire, and a large man sat on the back, carrying the thickest blade Beth had ever seen. The horse snorted, sending flames along the ground. When they stopped, the man held the enormous blade in one hand, blade down, and dropped it. The sword slammed into the ground and stuck, like a giant stake.\n\n\"Oh my God,\" she muttered, then covered her ears just as Murray shouted again. This time, a black horse came from the fog, and its rider was carrying a pair of scales. His features were gaunt, and when he smiled, Beth could see far too many of his teeth. The horse was carrying assorted goods that emanated a dark aura.\n\n\"This is such a surprise!\" Death looked at the riders in excitement. \"I never expected to see my siblings so soon! What are you doing here?\"\n\nAs one, they raised their hands and pointed at Death.\n\n\"What the actual fuck is going on out here?\" Lily's voice was incredulous, startling Beth. The succubus stood at the bottom of the steps, her hand still on the railing. \"Who invited the sexy cowboys?\"\n\nCecilia, who was looking skyward, let out a gasp. She shot across the yard like an arrow and tackled Lily hard enough that the succubus crashed into the front door with a loud protest.\n\nThe air around Beth was suddenly heavy, and a shadow formed over the group like a giant cloud. When she looked up, she saw a swirling mass of wings, eyes and gears descend from the sky. The being was larger than the house, and no matter where she looked, her brain struggled to make sense of what she was seeing. What initially looked like an eye became a wing, then a gear, then a mouth.\n\n\"DO NOT BE AFRAID!\" The voice sent a blast of pressure that forced Beth onto her knees, her hair swirling around her face. She let out a gasp as all the air was forced from her lungs, and she collapsed onto the ground. The house shuddered as if caught in a windstorm, and when she looked up at it, she saw Lily push through Cecilia and throw herself into the house. Her skin was smoldering.\n\n\"Oh. Oh my.\" Death knelt and offered Beth a hand. Her legs wobbled beneath her. \"I'm afraid that we have a problem here.\"\n\nOnce she was on her feet, she cast a wary glance at the being up above. \"This isn't a social visit, is it?\"\n\n\"No. No, it is not.\" Death pulled his cowl over his face, then turned to look at her with fiery eyes. \"It would seem that the Apocalypse is upon us.\"\n\nThe swirling mass of wings up above roared. Murray tipped his head back and opened his mouth, and a beam of light briefly connected him with the angel. Bands of golden light appeared, each one blazing with runes as the creature sent beams of energy into Murray's body. He shuddered as they brightened, and Beth wondered if he would explode.\n\nWhen the bands dispersed, they sent a shockwave out that chased away the nearby fog, revealing the stone walls of the yard. Murray stood on his tiptoes, a quartet of blazing wings made of fire spread wide behind him. When he tipped his head forward, his pupils were widely dilated and one eye was stuck looking to the right while the other looked at Beth.\n\n\"That, my dear Grim Reaper, remains to be seen.\" When Murray spoke, his voice was deep and booming, but his lips didn't move. Instead, his mouth was frozen in a macabre grin that showed all his teeth and his tongue. \"But yes, dear child, this is no social visit. For I am Mehkhkahrel, and I have gathered us here today to determine if the end is nigh.\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThank you so much for reading my story, I hope you enjoyed it! Don't forget to leave me some stars, they actually do help!\n\nWith the End of the World at hand while Mike is off playing house with the others, things are about to get crazier than ever! Will Mike breed Velvet? Will the roof of the house survive? Will Death start a heavy metal band with his siblings?\n\nStay tuned, and stay happy!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "massive creampie",
        "dragon girl",
        "mike has a crush",
        "angels in the outfield",
        "quetzalli used thunder wave",
        "it was super effective",
        "problems with the neighbor",
        "gargoyle vs arachne"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-65"
}