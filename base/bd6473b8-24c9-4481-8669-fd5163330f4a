{
    "title": "A Big Shiny Blue Marble Ch. 39",
    "pages": [
        "***A long time ago, I saw a documentary about a tribe of people on an island in the Pacific. They'd lived simple lives until World War II, when an army came to occupy the place. The tribe suffered and prayed to their deity, and as if in answer to their prayers, huge birds glided down out of the sky and disgorged men who fought the other men and defeated them. Even more, those friendly and kind men provided food from metal containers and medicine to heal the sick and injured among them. Then the mysterious saviors left.\n\nFor the next 30 years, those islanders worshiped large idols of the huge birds who had brought the other men and they prayed for their return.\n\nThat's what inspired me a little in this chapter. It has nothing whatsoever to do with history or any actual events in the past.\n\nSo we turn westward once more to the ruins of Lozenjellis. It's a rather dark place now. \n\nBut there are bright spots - if you look really hard. 0_o\n\n---------------\n\nBook of the Merren Part 16\n\nHe lifted off slowly in just the way that it irked him to do it. He'd never throw the throttles to the stops and blast away as if he was back at a forward operating base or in a hot landing zone, but these 'regal' liftoffs and climb-outs were just wasting fuel cells to his mind. It bothered him to no end working at this job. But his meal ticket insisted on 'majestic' handling whenever he was aboard.\n\nTirran sarcastically translated the term in his mind for the hundredth time, adding the Merren's tired and creaky voice to it as a soundtrack.\n\n\"'Majestic handling' means take off and fly so smoothly near the ground and at slow speed so that I can look out of the window and not fear to spill a drop of the expensive and hard to obtain liqueur that I like to sip while my latest trophy pretends to enjoy sucking my withered old stick -- and The Balance save you if I actually get hard and you do anything after she climbs on, because if you do anything to upset that blessed event, I will see to it that you fly refuse trips for the rest of your worthless life.\"\n\nThe military Xer pilot kept stealing glances at the camera feed from the passenger compartment. If he saw this fucking miracle beginning to happen, he'd make sure that he'd magically encounter enough turbulence to cause the Merren ex-dancer and part-time whore to end up across the cabin with a broken arm and cracked ribs.\n\nJust like the last one.\n\nHe was sarcastic and irreverent in his dealings with his assignment -- knowing just how much insubordination to toss into it at all times. They hated each other.\n\nHe'd spent his teenage years in the flight academy, pulling top scores every inch of the way, two more years in combat flight training and three tours in the duty. He'd flown it all, from transport to interception to heart-stopping 'ground-pounding' as the close air support role was termed. But the wars were dying down for a time as they always did now and then. Faced with too many pilots, there had been cuts made and though he couldn't prove it, Tirran knew who it had been that had ended his combat ride.\n\nHe'd been summoned to an office in a part of his unit's headquarters where he'd never been before for a meeting. It wasn't usually where the kiss-off came, but ...\n\nHe'd been told that he would be remaining on-strength but that he was being assigned to 'indefinite special duty', some of it covert and the request had been for him alone by name. If he accepted this assignment, he would be as classified as the missions so that meant that he was not to associate with anyone on the base. He couldn't understand that, but he went along with it because he had to. Any other answer but 'yes' would see him out on the street like so many other ex-pilots and Tirran needed to fly.\n\nThe 'Top-Secret' assignment had turned out to be flying an old hack Merren bureau chief around as his personal pilot for the most part. He'd been recommended when the Merren government minister had asked for the best. That meant little to Tirran's CO. He was another jock in a too-full crayon box and while Tirran really was his best fast-mover pilot, he'd also become a bit of a problem.\n\nTirran liked males, and his CO found a latent desire for the young officer within himself. It had gone on for half a cycle and had to end sometime. The CO had a career to protect and a wife who knew nothing of her husband's predilections. He was looking for a way to break this off which offered better odds that his young lover might survive, though he knew that Tirran would never have understood. \n\n\"It's the best I can do for you,\" the CO had said, \"This way, you'll still get your rate and some hefty hazard pay because if something goes wrong - unless you manage to set it down near our units anywhere, there's nobody gonna come and get your ass out of the sling. There's even a bonus for every landing - if it's anything like you'd call hazardous, and that's up to your judgement alone since you're the crew. \n\nLook, just fly this ticket wherever the hell he wants to go, because unless there's a war soon, when this ride ends, you're looking for another job so bank your pay while you're making good gold.\"\n\nWhen the senior officer tried to explain why he was ending their relationship, Tirran's face had turned to stone as he stood waiting for his commander to finish speaking before he said a very cold thank you and saluted by the book, saying that he'd take the ride. Tirran had walked away then with something and someone else to hate.\n\nThe ride turned out to be a bit of a surprise in itself. It was a Xer frigate, almost new but retired and pulled out of the line of a rather covert squadron for this. It had been refitted and modified for single pilot operation, though the co-pilot's seat was still there. As it sat, it was all-business, a rather large but very capable hot-rod, stripped down to save mass and this variant had been made to engage multiple threats with ease - if one could survive the gut-wrenching and vision-darkening moves that a pilot like Tirran could put it through. That was why he'd been amazed to see one like this in the first place. This variant was classified out the ass. He'd heard of them - but he'd never seen one until then.\n\nAll of the insignia and unit markings were gone and it sat alone in a guarded hangar in new paint, as dull and black as a piece of bituminous coal -- looking as though it absorbed the light around it. Tirran had stared and wondered just who the fuck this old weasel was that he could command something like this to happen. As he'd stepped aboard, the first thing that he's done was look at the weapons compartments. He'd felt his jaw fall open then.\n\nA Xer frigate for him to fly, armed and carrying a light combat load. No bombs of course, but there were missiles on the racks in the compartments, mostly what he'd have called defensive capability. The retracted gun pods weren't empty either.\n\n\"Do you like it?\" the Merren asked as he walked up behind his new pilot, \"I looked over your records and I found that this type seems to fit you the best out of them all, and it will do nicely for my needs after the cabin is refitted a little more comfortably for me. You have overcome up to nine of the fastest interceptors at once in one a little like this, flying it just as your opponents flew their own and you were all that was left in the quadrant when you were done.\"\n\nTirran nodded, \"I read the specs well. This model can handle the same stresses or better, and with the right engines -- \"\n\n\"Which I made certain that it would have,\" the old bureaucrat chuckled, \"Its only disadvantage is its size, though for short trips if I need it, there is a small and quick little cutter aboard for the purpose.\"\n\n\"And very little else,\" the Xer said, \"I've only heard rumors about this variant. I've never seen one. They're held on-call, show up out of nowhere and wipe the space around them. Then they're gone. Who are we going to kill? This is pretty fast and heavy on the guns for diplomatic duty.\"\n\n\"I have things to do for Mer,\" the minister shrugged, \"Places to fly where I might need you and this craft. I am told that you are light on the controls. I need a pilot who can set this down and takeoff again with little fuss and no lights in darkness if possible a lot of the time. I wish to have the best ship and the best pilot. When you get to my age, it becomes a little important that you stay alive.\"\n\nThey had a short meeting then and the duties and responsibilities were laid out a little proudly by the bureaucrat, but at the end, he'd been asked if he understood it all. Tirran had nodded and said his piece then.\n\n\"I think that I can see that the way that this bird sits here, there's a reason why it's blacked-out. There are no marking, not even a registration number anywhere. I looked around a little and I didn't find one serial number on anything inside. To me, that means that whatever you want this thing for is very likely as illegal as hell on your world. You obtained this ride expressly for the purpose of breaking Merren laws, and you need deniability if something hits the tank.\n\nThat's also why this thing isn't a Merren bird, and why the pilot that you just had to have is a Xer. You need me, don't you? Well I can tell you that I'm pissed off that I was chosen and quietly fucked over so that I'd take the ride, not having any other choice.\n\nSo I'll fly your ass wherever you need to go, but I don't have to like it -- or you. So cut the shit and stop trying to win me over, since that's not going to happen - ever.\" \n\nSince then, their relationship was little more than businesslike and rather quiet. It was the level of clearance which still amazed Tirran every time.\n\nThere were times when they flew into restricted space and nobody questioned them or their intent. The few times that they were queried, all that Tirran had so say was their call sign, identifying themselves only as \"Redblade One-one\" and though there might be a moment or two of confusion as the controllers frantically looked up that little-heard call sign, they were always cleared a moment later and all other questions ceased as if by magic. \n\nLanding spaces in busy ports miraculously opened to receive them where only moments before, they'd been told that there was no space for them and Tirran didn't even want to think too hard about some of the people that they'd carried -- without clearance or paperwork. They'd even flown into and out of a war-zone to deliver one person. Tirran still wondered about that. \n\nWhen he'd asked about the rules of engagement, all that his ticket had said was, \"Your job is to get us in and out while keeping me alive. Engage anyone that you think needs killing,\" he'd said as he'd turned to head for his seat to strap in. He placed his ancient Merren hand on Tirran's shoulder and said, \"From the instant that you receive clearance for your approach, you are authorized as weapons-free. Destroy anyone who might interfere. Anyone.\"\n\nTirran had nodded then and activated the automatic acquisition systems. As he'd flown in and out again a half an hour later, even so much as an angry gopher who raised his head was dead and Tirran flew back to the base on Xer with most of his weapon load-out expended.\n\nOne of the minister's pet projects had turned out to be Earth, not that the Xer could give a damn, he thought. It was just another place which was in the early stages of being prepped for total Merren fuck-over to him.\n\nThey spent a fair amount of time on Earth, the old bastard liking to live at what had once been the Merren outpost on that world. Tirran flew him back and forth to one of two places to the west -- either in Lozenjellis or to a large deserted base north of there. For the first few trips, the Xer had been bored out of his mind, because once the old office maven was off and gone to wherever he had to be, Tirran usually had a few days to kill all by himself.\n\nLike a lot of aircrew who'd spent much time in combat zones in their past, time often weighed heavily on him, and like a lot of those people in that situation, he'd picked up the absurd habit of smoking, since a plant much like tobacco grew on Xer. He usually made sure that he had plenty for these runs. He didn't smoke while he was flying, but once the boredom set in ...\n\nBut his life changed when they'd made a quick and unexpected run into Lozenjellis one night and as soon as the self-important old buzzard had figured that he'd be a while, he'd told Tirran they'd be here for at least five days. Tirran wasn't pleased since he was almost out of something to smoke. He hadn't exactly been told that they'd be out here for long, so he'd brought little along with him.\n\nBut he knew enough about the customs here to know that he ought to be able to purchase some of the local equivalent. Nobody had told him that he wasn't to walk around in the ruined city, so he packed a personal sidearm and decided to go for a walk. It was the middle of the night, but ...\n\nIt was also one of the relatively few nights out of the year when it rained in Lozenjellis. Cursing his amazing lack of luck, Tirran had set off, walking through the almost deserted streets of the warehouse district in a part of the place that had once been called Riverside. He saw almost no one, and anybody that he did run into took one look at him and ran.\n\nTirran wasn't large by Xer standards. He stood a little over six feet, three inches tall, and though he was fit and looked it, he wasn't exactly rippling with muscles. But to the eyes of most humans, he didn't need to be. He could see that this little adventure was going to be a bust as he stood not far from a street corner in the rain, wishing that he knew somebody here who could tell him just where in the hell he could buy something to smoke.\n\nHe was about to retrace his steps when he noticed her, a rather thin human female standing on the opposite corner as she regarded him very nervously from under the hood of her cloak. He was mildly curious as to why she was still there after a minute or so, so he waved a little.\n\nShe approached him slowly -- as though she was prepared to run if he made the slightest move. Tirran wanted to chuckle at the thought. She obviously knew nothing of Xer and how fast they could run if they wanted to.\n\nIn a minute, she stood in front of him, looking up \"Habla Espanol?\" she asked quietly. In this neck of the woods, many of the werewolves had been Hispanic before they'd been turned. She didn't think that he was one, but she'd learned to be cautious. It was why she was still alive.\n\nTirran could speak several languages, and English wasn't his best, since he'd never thought that he'd ever be here, but he could manage it fairly well. Whatever she was talking about disappointed him slightly. He doubted that he'd get any directions to something smokeable out of this.\n\nHe shook his head with a shrug, \"I don't know what you're saying.\"\n\nThe young woman was amazed, \"You speak English? What are you, ...\" she looked down to his midsection for a moment to determine his gender for certain, \"hombre? You don' look like anybody from aroun' here. I never see somebody like you before.\" She looked at his face as though she was trying to see how this outlandish costume might be put together as she reached out very carefully to touch his fur, \"You look like a perro -- a dog.\"\n\nShe stood maybe five foot six or seven inches tall, not that he was acquainted with human measurement. He only knew that she came up to below his chin or thereabouts. He thought about what he felt as well as what he saw. He'd never heard this dialect before, but he knew that it was an affected accent. \n\nHe chuckled quietly for a moment, \"I think I know what a dog is,\" he said, \"but I am not trying to look like anything but what I am, and if you want to talk to me, then please drop your pretense at being what you are not.\"\n\n\"You don' know me, Hombre,\" she said, trying to sound at least a little dangerous, \"You don' know anythin' about me.\"\n\n\"No,\" he said, \"and if you keep speaking that way, you can go back to your corner there and I'll leave. This is a waste of time.\"\n\nShe seemed to shrink a little before him as she looked at him and obviously thought about something for a moment, \"Ok,\" she said with no accent whatsoever, \"Look Mister, or, ... whoever you are, I'm just a girl who's really in need of a bit of coin right now.\"\n\nTirran knew that she had a knife under that cloak and he also knew it as she abandoned the attempt at robbery. She was plainly desperate, but she was still somewhere that she hadn't left behind yet.\n\nShe looked at him and squeezed her eyes shut for a second until the pain of her hunger passed. He could see that she was struggling with something as she took a breath. \"If you've got any coin on you, how about I suck you for a little of it. I need some food bad.\"\n\nTirran had never been one who could be accused of being very charitable toward others in any regard, and if he had to be, then his first thought might have been toward helping another Xer, if anything. But he could see that she was shaking with hunger and weakness.\n\n\"How much?\" he asked and he could see her thinking about it.\n\n\"Fuck, I'll take anything,\" she said, \"There's no use trying to be proud anymore. I'm starving. I'll take whatever you'll give me for it.\"\n\nHe looked at her and he could see that she'd seen better days, as young as she looked to him, not that he was a great judge of human females. She was a little pretty -- what he could see of her under that hood, he thought, and she didn't look to be diseased. She just looked to be nearing the end of her rope.\n\n\"I'll tell you what,\" he said, \"To be sincere or ,...\" he sought for a better word,\" - honest with you, I like males. But I can see that you're in need. I don't want to take advantage of you at all.\" He reached into the pouch that he wore on his gunbelt and pulled out a single gold coin and her eyes almost fell out of her face.\n\n\"You need something in you soon,\" he said, \"Give me your hand. I won't hurt you.\"\n\nShe held out her hand and he placed the coin in it, closing her fingers and then holding onto her fist just tight enough to make his point. \"It's been a while for me, and I don't even know if you can do it for me anyway, but you can have the coin for nothing. If you want to try, I think I would like that, and I might even be able to give you a meal if you want to swallow. At least you'll have something in your stomach.\n\nKeep the coin no matter what you decide. And this is not any form of clothing. I'm not human and I'm naked, but as I said, I won't hurt you. If you need to know, what you'd get is about the same as what you'd get out of a human male -- just a bit more of it, I've heard.\n\nAnyway, it's your choice as soon as I let go of your hand. Do you understand?\"\n\nShe looked up at him in a little fear and he shook his head, \"I'm not going to hurt you,\" he repeated softly. He really wanted to see what she'd do, more than anything. He expected her to run off with his coin. He found that he didn't mind.\n\nHe let go of her hand and she opened it to look at the coin for a moment. \"I -- I can just ... go if I want?\"\n\nHe nodded, \"Buy some food with that in the morning and take care of yourself. I do not know what brought you to these circumstances, but I wish that they improve for you.\"\n\nShe looked at what he had between his legs for a second, \"But -- I don't want to go, I -\" \n\nShe swallowed hard for a moment, \"I mean, thank you, Mister. Thanks for this, but you said, ...\"\n\nShe exhaled, \"You said that you'd feed me. For this much money, I'd like to try to please you if I could.\"\n\nBefore he could refuse as he now thought to do, she sank to her knees on the wet and dirty sidewalk and brought her face to him. He felt her breath against his genitals and he was a little surprised that he was beginning to wish that she might do this for him after all. It came as a surprise to him when he felt her kiss him very softly.",
        "He watched as she reached to caress him a little and she lifted herself a little bit higher as she kissed it softly, slipping her tongue into the end of his sheath for a moment before she leaned back to look up at him. \"It's a little different, but I think I want to do this.\" \n\nShe held up her fist, \"Please hold my hand like before and I'd like to know your name. My name is Rosa.\"\n\nHe actually smiled, and it felt as though he hadn't done that in months. He probably hadn't for all that he knew. \"I'm not sure that you'd be able to pronounce my name, but the short form for it is Tirran.\"\n\nHe wondered what she'd do with that -- what comment she might make, but she just held up her closed hand to him as she looked up and placed it against his thigh. Tirran closed his hand over hers and she opened her mouth to hold the end of him between her lips as she repeated what she'd done earlier, though now she was bent on teasing it from the sheath.\n\nAs more and more of the dark pink warmth of him emerged, Rosa found herself with the beginnings of a hopeful problem. She was beginning to find someone like him in a dim racial memory and even without that, she found herself liking him, so doing this for him was becoming very pleasing to her on a few levels. Now that she had the rather pointed tip in her mouth, she felt better somehow and she liked the warm way that it tasted to her. She didn't know the name for what he was, other than the one that she'd heard in some whispered teachings when she was a girl, but she had a rather strong feeling that the females of his kind didn't have much to fear with one of these males in their lives. \n\nShe knew that there was more to him in some way. As she stroked him with her right hand and her little finger found the hardening knot near the base, she found that he felt so solid to her touch in a rather strange way, as though the men that she'd done this for had been less solid somehow. She felt that through the fingers and palm of her other hand as well against his muscular thigh.\n\nCompared to him, any other men felt a little like ghosts to her hand.\n\nShe placed her hand against his belly and to her, he felt like warm iron with a soft covering of wet fur. She saw the surprise in his eyes as he watched her run her hand over him. She didn't notice that her exhalations had become very quiet sighs as they exited her nose.\n\nHe sighed, \"Would you please pull back your hood, Rosa? I know that your mane will get wet, but I'd like to see more of you, if I could. I didn't see it at first, but now I see that you are really lovely -- and I have never seen someone like you.\"\n\nShe nodded a little as she stopped, and then he stared at her as she bowed low to him on her knees for only long enough for him to have known that it hadn't been something that he'd thought that he'd seen. \"I don't have a mane like you do, but I know what you mean. Ok, would you please move your feet apart a little for me, Tirran? I want to try to do this better for you if I can.\"\n\nHe didn't know what she was talking about, but he nodded and complied. Rosa tried to make a bit of a slow show of taking him back into her mouth again. It had been her intent to appear to want him there, but she found that she suddenly didn't need to put any acting into it at all. The only unpleasantness about this was the way that her stomach now seemed to have heard the news that there might be something for it to digest and it was making her want to hurry this.\n\nShe fought off the pain as she pulled her hand out gently from under his to place the coin in her pants pocket as far as she could. She didn't need to remind herself as she'd had to before. She'd done it to keep her knife hand out of the play in case she'd been too tempted out of her hunger and because she knew that she'd only have failed and -- \n\nIt would have been sacrilege to even reach for the blade, now that she knew for certain.\n\nThat faint racial memory was back far more strongly now. She guessed that it was the reason that she'd stepped out of her hiding place to begin with. She'd been watching him as he'd stood there for far longer than any of the ones who bore some resemblance to him would have had the attention span for and she knew the reason for that.\n\nThey were all pale imitations of the ones who had created the first of them so long ago.\n\nThey all looked a little ragged in comparison. This one stood in the rain and even soaking wet, he looked so good to her. That was what had pulled her out of hiding -- to see and be a little close to one who had not been seen by her people for so long.\n\nShe was a little sad that it was here in the middle of this shit and not where she was from. Her heart would have sung even louder in her breast to find him standing where freedom was all around them. If this was there on a fine summer day, Rosa would have done this a little differently. She'd have removed her clothing and walked to him to bow before one of the Wolf People, a fine male like him and humbly asked him to allow her this same privilege.\n\nBut they were here and she considered it her own good fortune to know him for who he was. She didn't hope that her luck would improve out of their meeting.\n\nShe knew that it would.\n\nThe gold in her pocket had been a gift to her. The seed inside of him was another gift which would mean much more to her and she wanted to cry as she ached to thank him for the chance to draw it out of him.\n\nLike many of the plains people, her tribe had spoken one of the Athabaskan languages and they'd settled in the mountains and were safe for a long time before the coming of the unstoppable tide of the white man. Early on, they'd been found by these large gods and been blessed for a long time, because after that, they'd lived in isolation and no one came near to them to trouble them. \n\nBut the Wolf People had gone after a while and no one knew the reason. All that they knew was that they longed for their return. Without that, they'd fallen in with the other tribes and the memory of their benefactors had faded. All that was left were the legends told by word of mouth and the way that some of the other tribes referred to them as the children of the wolves.\n\nShe took him in her hand and stroked him as she caressed his scrotum, thinking to herself while she kissed his balls and licked a little experimentally to see if she would mind the fur. Not finding that it put her off at all, she opened her mouth and licked, sucking very gently to hold one testicle against her lips. Because of the fur, it was difficult, but it was what she wanted to do, so she put a lot of saliva into it. Her mouth was watering like crazy anyway from her hunger now.\n\nShe listened to his very quiet groans for some feedback and decided that she was doing it right -- at least a little. Rosa tried not to think too much about him wanting males. She wanted to please him for giving her that much money. With a gold, if she was careful, she could eat for a few weeks. But the thought of him liking men better seemed to be an obstacle to her -- as though it was a barrier to her. \n\nShe slid her fingers past his scrotum and wished that there was a way to find out which way he was. She knew that some males preferred to get and some males preferred to be on top. There was nothing much about him to her that spoke of wanting to be fucked very much, but then he wasn't human, so what did she know?\n\nAll she could do was try, she told herself, so she shifted herself to place her knees on either side of his large right foot.\n\n\"What are you doing?\" he asked.\n\n\"You said that you like males, and I'm not one,\" she shrugged, \"but I do suddenly wish that I could be that for you, Tirran. Do you like to get or would you rather give -- if I was what you wanted and, ... am I good for you so far?\"\n\nHe smiled. He actually smiled, she thought.\n\n\"Both,\" he said, \"I probably like to give more, but I don't think that's important here. You're doing just fine for me. Please don't stop now, Rosa.\"\n\nThe way that she smiled lit his heart somehow and it surprised him. He knew that he was jaded and bored with everything. He'd have been the first to admit it. But he sensed something here, knowing somehow that Rosa didn't do this for a living. She was just down on her luck and desperate to survive. What he felt in a strange sort of way told him that while she was very good at fellating a male of her species, she likely hadn't done it for too many. Very likely, she'd only done it for her lovers.\n\nShe nodded before she licked him wetly with a groan and then she seemed to come to some sort of a decision and looked back up at him. \"Tirran, could you please do me a favor and touch my head a little? Please don't jam into my mouth, but ... I like you and if it's alright, I'd like to pretend a little that you're mine. I know I'm not, ...\" \n\nShe looked away then and began again, telling herself to shut the fuck up before she ruined her own enjoyment and his. He wouldn't want to hear this sort of drivel. In her limited experience, this sort of male had very little use for somebody like her. The thought was a passing one, but it almost ruined everything for her and she wondered why.\n\nWhen she felt his large hand on her head, she felt much better again and she whimpered as she sucked, suddenly needing him for more than to put something into her gnawing gut. Her aching stomach screamed at her to hurry this, but it wasn't what she wanted to do.\n\nShe reached underneath him and her fingers found the bottoms of his cheeks, warm and fur-covered. She was careful not to tickle him, so she made her teasing in a more solid way, though she didn't press her fingers between those cheeks. Instead, she brought her left hand around the other side of him to caress his hard buns. \n\nShe almost smiled. There was nothing finer to her than to toy with a nice male ass a little, though few of them allowed it in her experience. Tirran did, and she found another thing to like about him. She knew this had to end soon, but she wished that there was a way it wouldn't have to. The way that the weight of his tail felt as it rested on her hand made her want to do this for hours someday.\n\nShe suddenly noticed that he was saying her name in a slightly tortured sort of way and she moaned a little loudly to answer him. Moans could be wonderful ways to tell another person something, but right now, she was up against the limitations of them. One single syllable -- no matter how long or loud you made it, just couldn't vocalize what she felt and wanted to say to him right then. \n\nShe didn't know if he knew anything of what had happened do long ago in those windswept mountains when maidens gave themselves willingly to the males of his kind and bore the marks of the mating with pride for the rest of their lives -- those who were worthy and hadn't died or become crazed fur-covered things who ran off to die in the destruction they caused. Men were taken too by both genders of the Wolf People and those who lived went on to become the best warriors.\n\nRosa got up a little higher on her knees and she rested the side of her head against his hard stomach, his navel against her temple as she whimpered and moaned to him quietly. She didn't bob her head much right then; she was concentrating on suckling him, and loving the way that he caressed her head and ran his finger over the rim of her ear so softly. Tirran looked down and was a little shocked to see something that he'd never have expected to see from her -- if she was a street whore long past feeling anything for the males that she serviced for money.\n\nRosa was squirming, trying to get a little pleasure for herself without having the hands free to use on her body. It told him a little about her and he suddenly wanted to see her naked. The thought suddenly moved him a little farther along in this.\n\n\"Rosa,\" he whispered quietly, \"Oh, Rosa, ...\" he sighed, \"nobody has ever, ... Ohhh...\"\n\nSomewhere in this act, he'd gone through a few phases. He'd been a little suggestive at first, knowing that she needed food. His offer hadn't been made to imply any sort of smugness, dominance or superiority at all. He knew that while it wouldn't exactly be a meal to her, his semen contained protein, like any other semen did. \n\nHe was just offering her something for her poor stomach. If he could have just commanded his body, he'd have given it to her in his hands without all of this. But that was then, before he saw and felt the way that this simple act was changing them both. He doubted that he'd want to become a breeder any time soon, but he now wanted to get to know Rosa a lot better.\n\nShe went back to taking him into her mouth and throat deeply. She couldn't really take him into her throat as far as she wanted to in this position, but she crossed her eyes a little to look at that knot in his shaft. She'd seen dogs fucking everywhere her whole life and she knew how they stood together afterward for a while, still connected. She thought about that and decided that he was a lot like that somehow, if he had the same bulge.\n\nIf dogs did that, then she knew enough about nature to know that it wasn't just something with no purpose and she could guess what that purpose was and it led her to her next thought. She didn't know if nature -- where he was from - was any different in how it worked here, but Rosa doubted it. Everything has a purpose, or it wasn't around for long.\n\nAs she went on, Rosa thought that, other than it feeling good to push as far into a female as possible, there had to be a reason to make males of his kind or his species want to do that -- and if she was right, then she thought that there must be nerves there to make him want to be in that deeply.\n\nRosa wanted to laugh then, knowing that she just might have found a key. She lifted her head.\n\nTirran looked down and he saw her eyes, as she looked up at him. He watched her take his hardness in her hand rather carefully as she licked her thumb and began to rub under the tip while her fingers and hand began to stroke him just a little, but that wasn't the main thing here. He groaned as he watched her open her mouth to take as much of his knot as possible into her mouth around his shaft, licking as she squeezed him rhythmically with her other hand. Her head was a little tilted, but her eyes never left his face as she did it, hoping that her squeezing wasn't too hard or soft. She based the timing on her memories of the way that she contracted when she came.\n\n\"Oh!\" he groaned, \"Ohhh Rosa! Ahhh, you should get ready, I --\"\n\nRosa took her hand away from his balls and licking her thumb and fingers once to wet them, she took the end of his wonderful shaft into her mouth and sucked while still massaging him with her thumb as much as she could as she continued to try to imitate the contractions that he might feel from someone more like him.\n\nShe felt the first contraction from him as it began and took her thumb away, her eyes begging him now with more than one hunger.\n\nTirran hissed loudly and Rosa knew that she'd won her meal. As his hot seed shot into her mouth, Rosa sucked and swallowed for all she was worth, feeling the warmth as it slid down her throat and Rosa wasn't quiet as she expressed her thanks, either. \n\nShe mewled and whimpered loudly as she took what had gone from his thought of a kindness to her to becoming something of a gift from him to her that she'd wanted so badly to receive. Her eyes closed in joy to feel something in her stomach, but she kept trying to open them again, wanting to remember him for this forever.\n\nAs the gush slowed and faded, she hung on to get it all and when he stopped, she let him go very reluctantly, very sorry that it was over. \"Thank you, Tirran,\" she said, \"I sure hope that whoever has your heart knows his luck. I've never enjoyed doing that as much as I did just now. I wish there was some way to ...\"\n\n\"Please, Rosa,\" he whispered, \"Suck a little more for me? I have more for you. You only need to be a little patient with me.\"\n\nShe kissed the end of it, suddenly noticing that he hadn't softened at all, \"More?\"\n\nTirran nodded, \"If you keep helping me, I can give you more for a while, every few minutes. Not as much as the first time, but I have more to give if you want it.\"\n\nRosa was a little puzzled, the legends said nothing of this, but she nodded with a smile, \"Sure I want it. I wanted to say that I'd love to do this for you again.\" She opened her mouth and went back to it.\n\nThey were there for the next twelve minutes, Rosa actually sucking him happily and greedily taking all that he had for her. He gave her five more, though as he'd said, there wasn't as much for her in them, but Rosa didn't care.\n\nShe didn't mind a bit for a few reasons. She could keep sucking because she really liked it. He wasn't as he'd been before. He knew that she'd take everything and he liked that about her. Knowing that she wanted it made this easy as he began to speak to her quietly and she listened as she looked up and they waited for the next gush. Another reason for her was that she loved to listen to him as he told her that there was no one in his life. As she got to know him a little better, she realized that he was really quite lonely and she thought of her own loneliness then and wanted to get to know so much more about him.\n\nWhen she thought that she could, she carefully framed a question to ask him before she said it and went back to what had to her turned into making love to him with her mouth now. For the first time in weeks, Rosa wasn't hungry at all and though she was well-soaked from the rain, it felt pretty good to be feeling pretty good.\n\nWhen he realized it, Tirran was astounded.\n\nWhen the Xer finally had no more to give to her, he reached down and Rosa was surprised at the strength that she felt in him as he picked her up and moved his arms to hold her. \"You shiver,\" he said, \"Please hold tightly to me. I will try to warm you.\"\n\n\"Aren't you going to shake the water off yourself, Tirran?\" she asked with a little smile, \"I know you're not a dog, but still, you're all wet.\"\n\nHe laughed a little, knowing that to her there were some rather strong similarities to animals here which had a few things in common with him, but really little else. \"Would you like to see that?\"\n\n\"Actually,\" she grinned, \"I think I would.\"\n\n\"Then I have to warn you that I won't look much like this then,\" he said, \"We have two shapes, but I'll still be the same person like that. Just please don't run away then.\"\n\n\"Why?\" she asked, sensing something in the feel of his words.\n\n\"Because I suddenly do not want to be very far away from the first person that I've met in a long time. And you cannot touch me then without my knowing before, or you may be cut.\"\n\nShe nodded and waited, wanting to see this very much now. She knew of this from what she'd been told, and to see it would mean that she'd been right about him, for none of the others could do this. They could only be one way or human. To see one like him in his other shape was a great honor to Rosa but even though she'd had a warning that it was coming, she doubted whether anything could have prepared her for it, once she'd seen him that way. \n\nHe was huge as he stood on four feet with his eyes glowing a little hotly. His fur looked more like large wet flakes of flint and she could see that they were rather sharp-looking before he shook himself off, the water flying off him in sheets, doing this just as a canine would before he quickly turned back to pull her to him.\n\nShe looked up and her next thought was that he was so ruggedly good-looking to her like this. She reached for him. Placing her hand on his shoulder and touching his face, she stared in wonder. Those were the same wickedly long teeth that she'd seen in that face all along, but now they weren't anywhere near as cruel-looking.",
        "\"Please Tirran,\" she almost stammered, \"I know I'm not what you'd want, and I know that I'd probably taste like that beautiful thing of yours right now, but, ...\"\n\nShe looked down at his wide chest then for a moment, not having it in herself to finish. This had just been him being kind to her and likely very little else. She knew it, and so she placed her hands on his chest and began to push herself away from something that she'd never wanted so much in her life.\n\n\"Stop, Rosa,\" he said and she could hear the faintest whine in his low voice, \"You were about to ask me if I'd kiss you. I want to kiss you. Why are you trying to push me away?\"\n\n\"I didn't think that you'd want to kiss me,\" she said looking up with a little hope, \"You mean you'd want to?\"\n\nHe didn't even answer. He just kissed her.\n\nRosa loved the way that he could kiss and after a few moments of her feeling as though her knees wouldn't hold her up for much longer, she just gave in and slipped her tongue into his mouth to find his. It wasn't a very long hunt before his mouth opened and Rosa moaned and whimpered as she felt those teeth almost all the way to her ears. They went on, two lonely and very different people lost in one very long and wet kiss for a very long time.\n\n\"Please don't tell me that you have to go and get on your spaceship or whatever brought you here,\" she said afterward, \"I don't have much magic in my life, and tonight is something that I don't want to end yet.\"\n\nHe shook his head with a little shrug that looked as though he was pleased in a surprised way, \"As far as I know, I've got five days here to kill this time. Lately, I'm here for at least three days almost every time. I'm a pilot and I usually stay in my craft. I just came out here tonight to see if I could find somebody who might sell me a little of that stuff that some people around here smoke. I'm dying for a cigar or better yet, for a cigarette.\"\n\nRosa's mouth fell open and she laughed, \"You smoke?\" she shook her head in amazement, \"You mean you smoke? Really?\"\n\n\"Yes,\" he said, failing to see what was all that funny , now that he'd been reminded that it was the reason why he'd come tramping around in the rain in this large toilet bowl in the first place, \"What's so funny?\"\n\n\"Nothing, \"she said, \"You looked like a werewolf to me when I first saw you, but I could see that you weren't one after a few seconds and I knew it for sure when you waved to me. There are a few around here. I'm just having a little trouble trying to imagine you smoking. Let go of me for a minute.\"\n\nRosa reached for a pocket in her cloak and pulled out a small waterproof pouch. Reaching inside, she removed two cigarettes and took a match from another pouch inside that. She looked around for a dry surface and found some fairly dry cement close to a nearby doorway. There was a flare of light and then she was back, offering him a lit cigarette while keeping one for herself.\n\nTirran stared, but he took the smoke and when he exhaled, he smiled, \"This is very different from what I've tasted here and it's a world away from the stuff they make where I'm from - which is more than a world away.\"\n\nShe was still chuckling as she looked at him holding the thing so carefully. He made a cigarette look like a tiny little white stick. \"I think I've got some good news for you,\" she smiled, \"I made these. I learned how from my grandmother back where I come from. I'm almost out of leaves though, and I didn't have the coin to go and buy more. I think mine are a little better than what you'd usually find. People in my family have made them for generations. They're alright, but they're not the sort of thing that you'd want to smoke one after the other. They're not made for that.\"\n\nHe wrinkled his eyebrows and Rosa wanted to kiss him for it, \"What are they made for then?\"\n\n\"Moments,\" she smiled, \"They're made for moments, like when you've eaten a really fine meal -- if you're wealthy enough to afford that. These are made for afterwards, when you have a little brandy.\n\nThey're made for when you've done something a little bit special, like after you've climbed that big mountain that you've thought about walking up for a while, or when you've just made love to somebody special. That's why you need more than three minutes to smoke one. They're really cigarillos, not cigarettes.\n\nYou smoke them like cigarettes, they'll kill you even faster than cigarettes will. I make these by hand, the old way, out of cut-up leaf, not shredded tobacco.\"\n\nShe looked away across the dirty street, \"I make them for other people's moments; the kind I never have myself.\" She smiled a little softly,\" though I am having one right now.\n\nI came here with my parents and my brothers, but I'm all that's left. The gangs, demons, werewolves and the vampires, they all took the rest. It's only a matter to time before they get me too, I guess.\"\n\nAfter a long and quiet talk, Rosa climbed onto his back after he'd changed to his other shape again and told her that his back and sides would be safe for her like this and she'd ridden him with her feet not that far above the ground, directing him to a park where they could wash not far from where she lived. It was dark, though there was a sliver of a moon whenever the clouds allowed it. Rosa was self-conscious about her body most of the time, but tonight, she threw that away as she allowed him to see her with more than just a little hope in her heart.\n\nTirran gazed at her with a soft smile. She made a bit of a fuss until he shut her up with a kiss, telling him that she was a little short in the charms department. \n\n\"I've was born a little cursed, I guess,\" she said, \"I've got no tits and the spirits must have been drinking or something that day, I dunno. That's the only reason that I can see for why they gave me a man's bum. Either that, or they were working out of a spare parts bin that afternoon.\"\n\nIt was true -- at least it could be looked at that way, he thought. Her breasts were the slightest swells and she had very small nipples and her backside did sort of evoke thoughts that she might be able to pass as a male from the back -- but if she moved at all, it was gone and she looked softly feminine in the thin moonlight. He sat down in the water with a splash and she'd laughed at him. \n\n\"I know,\" she'd said grinning. \"The way that I'm made, you'd think I ought to be out on the prowl for another girl. I tried that once and it wasn't terrible -- it just wasn't what I really wanted, and the first time that our periods overlapped a little, we almost killed each other.\"\n\nHe shook his head, \"I really like your body -- and it's not for the reason that you probably have in your mind. I don't see what you think you look like very much. I see a very beautiful female. I'm just a little surprised that I can feel the way that I do. I've seen human males and I don't see a thing that interests me. I like males of my kind, Rosa. That's what I've always been drawn to. I just remembered reading something once about this world and now it makes sense.\" He put his arm around her and he kissed her again for a moment before his attention was drawn to stare at a being standing on the shore looking back.\n\nHe stood then, pushing Rosa behind him protectively. His hand reached to slowly touch the sidearm strapped to his thigh. He knew that he had plenty of time to get to it if he had to, but he'd never seen one of these things before -- he'd only heard of them and how they were to be killed if they were encountered. But the abomination only stared, and Tirran growled deep in his throat once in warning.\n\nTo his amazement, the werewolf dropped to his knees and bowed. After a moment, it rose and backed away, bowing once more before it was gone.\n\nRosa stepped around him and looked up, watching as the hackles on his neck and shoulders fell slowly. Her mouth was open in wonder. \"Y- you were protecting me,\" she stammered.\n\nHe nodded, \"Yes. Why? Was I not supposed to?\"\n\nRosa didn't answer. She was looking around them. \"Tirran,\" she whispered as she pointed.\n\nHe looked around and saw the others, five more werewolves who had likely seen them as they'd come here with Rosa on riding on his back. As he looked, they fell to their knees as well, not daring to look up.\n\nHe made a sound from his throat and they all looked up then. Rosa supposed that what she heard were words, and he didn't say many, but she saw the way that they all nodded and backed away.\n\nHe barked once low and quietly and Rosa watched as two of them stopped and looked back attentively. The next sounds from him had the tone of a question and a female nodded and answered in a soft bark, nodding her head. Tirran made more sounds then, indicating Rosa and all of them nodded and bowed again before they left, each one making some quiet sound as they turned away.\n\n\"What was that all about?\" She asked as she watched them go.\n\n\"I thought that they must have seen us and followed,\" he said, \"At some point, I'll have to leave and I doubt that they'd just walk away and forget, the way that they were looking at us, so we'll probably be followed sort of discretely. I thought to turn that to your advantage to keep you alive, since they seem to see me as supreme in some foolish way.\" He shrugged as though he was a little mystified, \"They called me 'lord'.\"\n\nHe looked down at the human girl who seemed to think rather highly of him in her way and he smiled with a shrug, \"I really hope that it was not the wrong thing to do, but I told them all that you are my bitch -- which is not the way that it is meant here,\" he added hurriedly. \"I said that you were my female and that they were to tell others that you are not to be harmed in any way, because if that happens, I told them that I would wipe this foul place from the ground and all of them with it. I hope that I sounded imperious enough for them to believe it.\"\n\nRosa was silent for a moment, but then she looked up, \"You could really do that, couldn't you?\"\n\n\"I suppose that I could,\" he nodded, \"but not with a wave of my paw,\" he said with a chuckle, \"I've got enough things in my craft to level a lot of this place. It was just a threat. They seem to respect threats, I'd guess. If anything happens to you, I think that I'd probably do it, too.\"\n\nRosa nodded absently as she looked at him, \"What about the other part?\" she asked, \"The part where I'm your female?\"\n\nHer question and her searching gaze took him by surprise. \"Why? Is that what you want?\"\n\nShe nodded with no hesitation, \"Yes. I'd love to be your female. We'll just have to see, won't we?\" \n\nShe laughed a little then as she pulled him to the shore by the hand and he went along, though he was still puzzled, \"I am so confused now,\" he chuckled, \"I was afraid that the things that I said might have made you angry with me.\"\n\nShe stopped then and turned back to him with a look that told him that she was astounded that he'd have even asked, \"I guess that I've got some things to tell you, Tirran, and I'll try my best when we get to where I live, but I'm not angry. I know the reason why you said it and I'm thankful that you did if it keeps me safe, but ... why would you think that I'd be upset? I've been saying little prayers to spirits that I haven't said them to in a long, long time. I know a little bit about you and maybe I know more than you do about the people that I come from. I guess that we must have faded from the memory of your kind, and you've faded from ours mostly, but not from mine. Tirran.\"\n\nShe smiled at him softly and he had to smile back as he pulled her to him and held her for a moment, so taken with the look that he saw there.\n\n\"You just give me a chance to try like I know that I want to,\" she said very quietly, \"I know the way that the word is meant to you. I'd love to be your bitch that way. After so long and with almost none left to hear of it, I'd love to be the one that you choose as your female here.\"\n\nTirran didn't know what to say in answer to her and it made her giggle a little, \"I'm guessing that your silence means that I'll get my chance?\"\n\nHe threw up his hands and laughed for a moment, but then he became serious and he bowed to her. \"We are different,\" he said, \"but I know that you try to show me honor here. So it is my honor to accept. I have no mate for me. There is no one who waits for my return where I am from. I don't even know if it can be done, -\"\n\n\"I did something that surprised you, didn't I?\" She asked a little proudly and he nodded.\n\n\"Good,\" she said, \"then I'm your girl or -- whatever you need while you're here.\"\n\nShe'd said it with such certainty that he knew that to disagree was pointless. He was a little amazed at the way that she was winning him. He felt as though he was a little powerless in this, but he could see her determination and so he'd allow her the chance that she wanted. \n\nAs he waited for her to get dressed, he thought about a few things. She was a woman, but he liked her quite a lot anyhow. He liked talking to her much more than he'd ever liked talking with any of the few boyfriends that he'd had. He wondered how far they could go, and though he thought that it might not be all that far, he hoped that however far it turned out to be, that Rosa enjoyed it, because if he was given the chance to please her, he found that he suddenly wanted to.\n\nShe told him not to change again for her since they were close to where she lived in a small and rather strange little bunker. It was a bomb shelter, left over from the paranoia at the height of the Cold War, but because of that, it was a safe pace for her to live, since it had been made forty years before that as a bank vault. The mechanism had been altered so that she could lock it from the inside. They walked there together, her hand in his as they spoke quietly.\n\nOnce she had the lock open, she led him inside, closing and bolting all of the others that led here. She lit a candle and set it on a ledge. \"You said you have at least three days --\"\n\n\"Maybe five,\" Tirran said, \"But I'll have to check in after three to know better.\"\n\n\"Good,\" she said as she began to get undressed again. \"I'd have sucked you for nothing once I knew that you weren't a werewolf or a vampire. I'd have been happy with only two coppers. But you gave me a gold and I can't remember feeling the way that I felt while I did it. If you think that you can get over what I'm not, then if it matters to you that we keep that relationship, you can stay here with me until you have to go, and I'll suck you as often as you want. I'd even let you fuck me a lot for that one gold that you gave me.\" \n\nShe looked up and saw him behind her in her mirror. \"But I'm really hoping that it's not the relationship that we have, Tirran. I want to make love with you tonight, and I think that maybe I might be a little closer to what you'd want. I'm just hoping that you can pretend that I am what you want -- at least a little bit.\"\n\nShe kept looking at him as she'd spoken and now she saw that he was looking at her ass, so she said, \"I know what you want there, and you can fuck me there too.\"\n\nShe watched his eyes come up to look at hers in the mirror as she nodded, \"I'm a little different, I guess,\" she said as she shrugged, \"When my momma was teaching me about being a woman, she said that I had to protect my ... virginity as much as possible. Well that's what was done where she grew up, I guess. She said that girls who had boyfriends used to let them fuck them in the ass as a way to stay virgins. She said they all hated it, but they put up with it if the guy was good to them.\"\n\nHe watched her shrug again, \"Well I tried that. I tried it both ways and I like it in my ass too. So as long as you don't tear me up, I'd really like for you to try me there. It's probably not quite the same, but it's the same hole and ...\"\n\nShe looked at him and he was chuckling softly. \"I'm trying to be a little heartfelt here,\" she said, \"so I don't really want to see you laughing at me. Does that mean that I don't even have an ass like you'd want to fuck?\"\n\nHe reached for her and pulled her to him, \"That's not it. I am very attracted by your body. I was about to say that I've never wanted a female, and as far as that goes, then I guess that I'm a virgin. But I've already decided that if you would like to let me try, then I'd do my poor best for you, but you don't have to worry about me wanting you. \n\nI still mean what I said before. I will not hurt you, but I am trying to guess your age. I have no measure for the ages of humans.\"\n\n\"I hope it doesn't make any difference to you,\" she said, \"but I'm eighteen. I'll be nineteen in less than a week. I've been on my own here for almost a year. I used to live in Riverside where I met you. One day I came home and the place looked like the back of a butcher's shop. I found most of the pieces of my brother and I was afraid to look in places like closets in case I found my mother. I just couldn't bear the thought. So I took our stuff for making cigarillos and I ran. \n\nI didn't stop running until I got here and saw this old bank. I remembered reading about them in a book, so I looked down here and found this. As far as I can tell, it was bought by a man who was afraid of a war a long time ago. He used the bank as his home and kept this in case the war ever started. I found him in the corner over there, all dried up over all of that time. He was mostly dust and I just swept him up and tossed him over what's left of the fence. I'm really careful, but I've been here ever since. How -- how old are you?\"\n\nHe did a little mental calculation, trying to fit the difference in the length of a year on Xer to the three hundred and sixty-five and one quarter solar days in the year here. \"I think it works out to twenty three of your years, or just under. Is this a problem for you?\"\n\n\"No,\" she laughed, \"I like older men -- not that I've had many.\" She opened a drawer and pulled out a pair of hand clippers, \"See that mirror there on the floor against the wall? I'd like it if you could pick that up and hold it behind me a little. I'm going to need two mirrors for what I want to do.\"\n\n\"What are you going to do?\" he asked and he loved the smile that she returned to him.\n\n\"I'm going to get a little closer to the ... what are you? You never told me.\"\n\nHe sighed, hoping that it might not ruin this, \"We call ourselves Xer. As far as I know, I'm the only one here now, but there have been others. That's how the ones that you call werewolves began here, likely from the mating bite of a male as he mated with a human female. It is passed on now from one human to another by any sort of bite which breaks the skin and touches blood. But I will not bite you, Rosa.\"\n\n\"I almost don't think that it matters. Tirran,\" she said, \"You were right about me from the start. I'm not a Latina girl, though I know that I look like one with my hair long, and I can speak Spanish well enough to pass myself off as a Chicana. But I'm really one of the very few pureblood people of my tribe left. I come from a tribe who lived in the mountains. We came here for a better life than we had scratching around in the dirt back home, but I'd love to go back there any day to get away out of this shit bucket. I only had to keep an eye out for bears then. Here, if they're not after your money, they want your blood or if you're really lucky, they only want to rape you and they MIGHT not kill you afterward.\n\nBut back there, we have legends about things like you. There have been females in my family who were bitten and lived but not all of them turned and died afterward. I don't know if it's possible to have any sort of immunity to the bite, but it if is, then I think I've got some. I've been bitten before and I didn't turn.\"\n\nShe lifted her arm and he saw the scar of an old bite. \"What happened?\" he asked.",
        "She shrugged, \"He came at me from out of nowhere in an alley, and before I knew it, he'd bitten me.\" \n\nShe reached into her cloak where it hung drying and pulled out a very short sawed off shotgun and laid it on the shelf near the candle. \"I managed to get this out and I blew most if his head off for him, and I was long gone before he healed that, I can tell you. I washed the wound really well and then I waited. I got a little sick, but nothing came of it, so ...\"\n\nShe looked down for a moment and took a long breath, \"I've never met anybody like you before, and I've seen lots of werewolves. I keep finding things about you that I love -- things that drive me a little nuts wanting you.\"\n\nShe looked into his eyes, \"I know the difference. I've watched it when two werewolves try to live some sort of life together. I know that you're not a werewolf. You're a lot more, ... powerful, and I feel so much better when I'm touching you. So if you want to do more than just fuck me, Tirran, then I'd love to at least try to be more than just a fuck to you. You can give me your mating bites, and if they don't kill me, then I'd be proud to be yours.\"\n\nShe looked down again before he could say anything and then she turned around, \"But I think that's only a little more than the nice daydream that I'm having at the moment, so can you pick up that mirror and hold it for me?\"\n\nHe puzzled over it as he did as she asked and was very careful to follow her requests whenever she asked for him to move it. He watched a little spellbound as her long dark hair fell from her. When she had it a little close to what she wanted, she took a pair of barber's shears to continue. When she was done, she swept the hair from her shoulders and looked carefully to see if she'd missed anything, snipping here and there with a judicious eye in one mirror or the other. She didn't say anything to him the whole time. When she was satisfied, she grabbed an old broom and swept up her hair in a minute.\n\nHis soft gaze at her whenever she'd looked at him in the mirror told her everything that she needed to know.\n\nShe turned around, \"There. Closer now?\"\n\nHe looked at her and smiled, nodding. It didn't make that much of a difference in some ways, but in others, her new boyish haircut lent her the look that she'd been after. She smiled a little shyly and her hopefulness almost broke his heart.\n\n\"You -- you wished to look like --\" \n\nHe saw her intent now. He couldn't believe it.\n\nShe nodded, \"I know that it probably doesn't make that much difference to you, but I wanted to get as close as I could and still keep a little bit of a girl look. But really, the one that I want now is a boy who would want another boy. Well I can't be that for him.\n\nBut I thought that I'd try to look as much like a boy for that boy as I can and, well, I'm really hoping that I might be close enough for him.\"\n\nTirran took her in his arms and kissed her softly, \"You didn't need to do this, Rosa. I want to try this with you anyway.\"\n\n\"I KNOW that. Tirran,\" she laughed quietly in his arms for a moment, \"I don't know how I know it, but if there's such a thing as a human who can stand to be bitten by what I think that you are and live, it just has to be me.\"\n\nTirran tried to understand it, but he couldn't, \"I -- I do not see what you are trying to say to me.\"\n\n\"Those women, Tirran. The ones that I said were bitten and lived. Maybe I didn't make it clear to you when I said it, but, ... well let's just say that they weren't exactly bitten while they were trying to escape.\" \n\nShe watched his eyes open and she chuckled, \"Oh, so NOW I've got your attention, huh? The legends are told, but not all of them to all of the people. To hear them all, you have to be a girl among my people and hear your mother and your aunt tell the legends as they teach the young ones the beginnings of beadwork.\n\nI've heard of the ones who lived, coming back to the people with large and bloody bitemarks and there were more in my bloodline than any other. So if there's such a thing as a human female for what you are, it's me. If I'm right, then you are one of the ones that we called the Wolf People. The time when they were near to my tribe marked the height of prosperity and happiness.\"\n\nShe looked down at his chest and laid her head against him with a sigh. \"And if I am right, and those weren't the fanciful stories of generations of women, then I'm a descendant of the ones called 'the children of the wolves'. There never were many of us and after the Wolf People left, it all faded and they joined other groups and faded among them, but some still know. You might think that you're a slightly lost spaceman, but down here with me, well I'm one of the last who were made for you.\n\nAll that you need to do is want me.\"\n\nShe took his hand then and led him to her bed. They began just like any of the millions of ordinary people who feel enough love or lust or whatever attraction is enough to trigger the desire in them both. Tirran found that though it was very different, he enjoyed it because it was Rosa and he liked to do anything with her. It led to some comic moments that surprised them after they'd laughed.\n\nThey were on their sides, talking as Rosa playfully managed to get him to use his hand on a female as she stroked him. Tirran was an attentive student. He was interested, wanting to know the female body better than he did -- again mostly because it was for Rosa, but it helped when he thought that this was about pleasing bodies and having fun and that took it farther for him.\n\nHe found that he couldn't stop kissing her and he loved the feel of her body against his.\n\n\"I could fuck you, you know,\" she'd suggested to him as they were copulating slowly with him on top of her.\n\nThe remark came at him a little out of left field and he stopped to look at her curiously.\n\nRosa bucked against him, \"Hey, I didn't say anything amazing enough for you to stop. Keep going, please, but just go real slow -- just enough to stay hard for a minute. I don't want you losing interest.\"\n\nHe chuckled and began again, \"What did you mean?\"\n\n\"Well,\" she said a little dreamily in a soft little voice that forced him to listen, \"I was on my way home one time, far too long after dark. I wanted to go through the park because I can at least get a sense if I've been spotted. Moving through buildings brings the time that I have to react down and then all I can do is hide. That's a losing game most times.\n\nAnyway, I was going through the park and I heard somebody being hunted. I thought it was me at first, but I was wrong, thank God. I froze anyway until I could figure it out. It was a werewolf chasing a human.\n\nIt was a short chase, and I might have helped with my shotgun to give the person a chance to get away, but they were too far away from me where they struggled and I knew that by the time that I got up and got over there it would have been too late anyway. \n\nAt first I was cursing that I had such a good view of something that I sure didn't want to watch. I saw that the one being chased was a young guy, and the werewolf was a male as well. It turned out that they knew each other before the one guy had been turned. The one who had been chased was out of breath and out of his mind in fear and crying. But the werewolf wasn't after him to eat or just to tear him apart.\n\nI had to think about it afterward, but I did figure it out. The werewolf had always liked the other guy, but he never had the courage or the chance to let him know. I guess that he thought that it didn't matter anymore.\"\n\n\"What happened?\" Tirran asked, his interest rising.\n\n\"Well,\" Rosa began a little coyly, noticing that her story was having an effect on him, \"It went from a hunt to something else and I had to watch. The guy tried to fight and get away, but he pretty much had himself scratched up a little and his clothes torn off.\n\nBy then, I was getting a clue that this was going to be more of a rape but I was wrong again,\" she sighed as she put a little more into the motions of her hips to match him. She wondered how she was going to get anywhere near the end and be able to speak. \n\nShe sighed and smiled at Tirran, \"So what I ended up seeing was a werewolf pinning a man to the ground and it looked to me like he was about to chew the guy's stuff right off, but that wasn't what he was doing. It took the guy a little while to calm down, but the werewolf was doing his best to please him with his mouth. Well when the guy finally got the idea, it was actually something to see.\"\n\nThey fucked quietly for a few minutes before Tirran slowed and asked her to continue. She kissed him and grinned, \"You like my little story?\"\n\nHe nodded and Rosa continued, \"Well, when the human finally got the idea, he loved it. I guess that there was also a lot of uncertainty to it -- not knowing if he'd live afterward. But the werewolf seemed to know what he was doing, well at least to me, anyhow. When the human shot his load, the other one didn't miss a drop, but then he lowered his head further and in a second, the guy on the ground was into it with his legs up and everything.\"\n\nRosa sighed then, smiling up at him as he picked up the pace and they fucked as she looked up at him and moaned at the way that he looked down at her, his eyes staring at her intently.\n\nShe couldn't keep her hands off of him and she touched and caressed him everywhere that she could reach as she spoke very softly under her breath.\n\n\"What are you saying?\" he hissed at her as he went.\n\nIt felt to her that if she smiled only a little more, she was bound to get face cramps or something. \"They prob -- ably doWOHN't mean any-thing to y-you,\" she groaned to him, \"I'm j-just saying some stuff... T-to my an-cestors about wanting t-to be one of the WooOlf People's women, that's ... ah, ...ah...AH..AH. AAAHHHHhh!\" Her cry turned into a laughing wail and she thrashed under him, still shouting afterward.\n\nShe was just settling a little when his orgasm came to him and it caused her to cry out as though his thrusts stirred the ashes of a fading fire to add more fuel to it. When he'd given her the first part of it and they settled back to fucking, she tried to thank him, but she found him staring at her.\n\n\"What, Tirran? And if you feel anything at all for me, then please don't stop now, I want it all.\"\n\n\"You cried out,\" he said.\n\nRosa chuckled, \"Well,\" she said with a sigh as she tried to work her internals a little to get more out of him, \"I loved it and around here, that's what we do sometimes if we really like it.\"\n\n\"That is not what I meant,\" he groaned and she whimpered as she bucked against him, while he gave her a second ejaculation. They paused then, waiting as they moved together through it.\n\n\"You said that you love me.\" The look of wonder in his face almost made her cry then.\n\n\"People say all sorts of things when they fuck,\" she said, \"but you have to think about who I am -- if this is right. \n\nTirran, I love you because I was made to love you - because it's in me to love you. I come from people who adored your kind and have missed what I have here for so long. But while that's a little easy for me to say as if I was glossing over it, there's something else.\n\nNever mind all of the old ways, Tirran. I found you and you gave me money out of kindness and only a little hope for me. You fed me. The more that I touch you, the more I want to touch you. \n\nI was nobody and nothing when I woke up this morning. Now I'm with somebody that makes me happy just to touch. I know that you'll have to go away sometime, but until then, I have a male like I've never had - you're something out of legend to me, but you're more than that.\n\nHandsome,\" she nodded, \"I'm yours -- any way that you want me. I can't help but love you with everything I've got.\"\n\nHe almost stopped then, but he didn't, knowing that he wanted to give her everything and also out of a little fear that he'd see her disappointed face if he did -- that and her saucy complaints as she tried to hide it.\n\nHe gave up, beginning to fuck her hard again as he felt more on the way for her. The way that she writhed and moaned to him made him suddenly feel like one of the ones that she'd spoken of. When it had passed and he wondered if he had another one for her, more than a little surprised that a female could cause this much passion in him, he looked at her face as she grinned up at him with her short and boyish hair completely tousled.\n\n\"You love me too, don't you?\" she asked, \"I can see it in your eyes.\"\n\nHe nodded a little seriously, and then he smirked, \"Maybe it is nothing more than an infatuation. Rosa really, did I have any choice?\"\n\n\"Ah, ... no.\" she giggled a little, but then she looked a little more and she grinned then, \"Jesus, you really do! And don't worry. Around here infatuation is usually as good as it gets, with the life expectancy down in these streets.\"\n\n\"I still want to hear about the story,\" he said with a couple of hopeful thrusts into her.\n\n\"Oh yeah,\" she smiled, \"So, if you think about it, watching the way that the wolf-guy used his tongue was a real turn-on for me, but I really didn't think that I'd like to stick around and watch two guys do it.\n\nWell I didn't have much choice. If I stuck around, I might be noticed and not only by that one. They were starting to make a lot of noise and the longer that it went on, the more chance that it might have been heard and the last thing I needed was that it might attract someone else. So I was a little stuck, wanting them to really get into it so that I could sneak off, but not thinking that I wanted to see much of it either -- and yet dying to see it all.\n\nThe thing is, that before too long, I could see that it was kind of nice to watch, because it wasn't anything brutal. When they were really into it, I saw my chance and I snuck away. I was all the way to the top of my street here when I heard the scream and I knew that the guy had been bitten.\n\nBut I know that he must have asked, Tirran.\"\n\n\"How do you know that?\" Tirran asked.\n\n\"They're still around,\" she smiled, \"and I guess that they're still going strong, since I see them around even when they turn back into human guys. They were there tonight.\"\n\nHer words finished him and he gave her another set of contractions.\n\n\"What do you think?\" she grinned as she kissed the side of his face while he lay on her very carefully, \"You've just lost your other virginity to a human girl, and I'd like to know how it was.\"\n\nHe lifted his head and looked down at her, knowing the next thing that she'd say.\n\n\"Was I good enough?\"\n\n\"Half,\" he laughed at her, laughing harder as she saw what he meant, and the way that she laughed back.\n\n\"Ok,\" she chuckled, \"I get it, but for THAT part of the audition, how did I do?\"\n\nA thought crossed his mind and he looked at her seriously, \"Hold still for a moment and close your eyes. Remember, you cannot move until I say.\"\n\nRosa closed her eyes and felt the heat against her forehead and face for a minute or less. When she opened her eyes, she saw him looking down at her with a pleased little smile, \"You can move now.\" \n\n\"What did you do?\"\n\nHe sighed, \"Something that I never thought that I would ever do,\" he smiled as he leaned down and kissed her softly, \"I hope that it proves useful to you and not a hindrance -- since it will last for a time.\" He pulled the last of the way out of her and listened to her quiet complaint as he walked across the room to bring her the mirror. \"I have marked my female.\"\n\nHe handed her the mirror and she stared at the delicate lines and patterns on her face. She lowered the mirror, \"These are beautiful,\" she gasped before she looked again, \"I've never seen anything like these. How did you do this -- and they won't last forever you said, right?\"\n\nTirran laughed a little, \"No, they might last perhaps twenty days or so. It is a little rare, but it comes from my family. There was a time long ago when there were kings and queens among us, and the males of my family have the ability to mark the ones that we choose as our mates. It is something long forgotten by most and on the rare occasions when it happens, it makes news on my world. Here, it is my gift to you and I hope that it helps you when I am not here. I do intend to return.\"\n\n\"You do?\" Rosa asked hopefully. \"You know that you did say that I'm your female. I heard you say it, fair and square.\" She couldn't help herself, \"Am I really? Did you mean that?\"\n\n\"Yes,\" he smiled, \"You are not the only one who feels better when we touch. I never meant what has happened, but I have been taken from not caring about anyone but myself -- and being miserable as a way of life to feeling something that I have never felt.\" \n\nHe tried to heave a rather theatrical sigh, but it failed on him in large measure, since some expressions didn't transfer too well, but Rosa got it and the jumped up to throw her arms around him and pull him back onto the bed.\n\nHe was a little amazed, so she kissed him very softly and chuckled as she rubbed her face against his, \"I've always loved a good love story.\"\n\n\"I think that you have one to live in now,\" Tirran smiled. \n\nThen his smiled faded and he looked curious, \"What did you mean when you said that you could fuck me?\"\n\n\"Oh yeah,\" she laughed, \"Lift that other pillow.\"\n\nHe looked at her and seeing nothing but her coy little grin, he picked up the pillow and stared.\n\nHe was looking at an arsenal -- of dildos. He looked at her and she grinned, \"Well I'm a lonely girl, ok? I find these now and then when I'm in an old house that I know there's nobody living in. This is just the tip of the iceberg -- whatever that is -- 'cause I guess that I must have found hundreds. I only keep the ones that I think might interest me. I've used every one, too,\" she said a little proudly, \"Most of them front AND back.\"\n\nHe picked up something that gave him chills to think about, trying not to imagine her using it there.\n\n\"Uh-huh,\" she chuckled, \"That one was a struggle.\"\n\nAs his jaw came down, she giggled, \"I did say that I was lonely and I also told you that I like it there.\"\n\nShe continued to amaze him all night long. Even coitus in the missionary position went from something that he would never consider doing to something wonderful for the way that they could look at each other when they were slow about it, and to Rosa, everything that they did together told her that she'd been right.\n\nThey just had to prove it.\n\nThat came just as dawn was breaking. A little before that, Rosa had gotten out of the bed and said some words to her ancestors before she's knelt lower and offered herself to him again. She told him that she would ask him for his mating bite this time -- if it felt right to her. Tirran reminded her that most bitten humans either died or they became at best, what to his kind were abominations, creatures which were killed on sight by any others of his kind here. She asked him to hold her and lean his head over her shoulder. \n\nWhen he did that, they both felt his hardness begin to slip inside of her and neither of them tried to make the insertion go any quicker than it seemed to want to be made just by the closeness of their bodies. They both knew that where they were would bring it about halfway into her before either of them did anything to get them closer together. \n\nShe kissed him softly, \"You don't get it, and I understand, Tirran. We were promised that one day, one of us would be taken and made into one of the Wolf People. It's never happened. \n\nBut I've always believed, Tirran -- ever since the legends were first told to me, I've always believed it. And look where I am now. I've found you. It's just one of the reasons why it's so easy for me to love you. I know that to you, I must be just a poor girl who's infatuated with a legend and the personification of it, but I have to believe.\"",
        "He disagreed, \"You are no such thing to me, Rosa. I've hated my life for a long time and I had no way to change it and no reason to want to. I have that now. You gave me the reason, Rosa. In the middle of a ruined city on a world where I would have never wanted to be, you gave me everything -- all of the reasons that I need, and at the center of it is a wonderful female who I have marked because I want her. I think that you're wrong about a few notions about me being a god or something like that and I've tried to show you gently that I'm no such thing. But I believe in you, Rosa.\"\n\nShe smiled from behind her closed eyes, \"I love you, Tirran. I understand how you think that I'm mistaken, and I don't think that you're a god -- not the way that my people did so long ago. It's all in the level of technology. I see that now, but I still know that I'm right. \n\nI know the difference between those werewolves out there and you. The people were never promised that one of us could be a werewolf. That happened anyway. They were promised that one of them would be taken by the Wolf People and accepted as one of them -- to be one of them. I'm about all that's left now -- who's under like eighty years old. If I'm not the one then there never will be, and it's enough for me to want to be what you are and if I can have just one more wish, then I want to spend the rest of my life with the one that I met today. So if that sounds good to you, then come on and fuck me.\"\n\nTirran mounted her and as he took her and their passion rose once more, she begged him for his bite. \n\nShe put everything into it that she had, as tired as she was, and when she felt his thrusting becoming more urgent, she called out to her ancestors and any of his that might have been listening as she gave herself to the one person who had been able to touch her heart so easily.\n\nShe screamed out her pain and her joy to see his head next to hers with her shoulder in his teeth and her blood running. \n\nAs soon as she had the brain cells to devote to the task, Rosa began to chant, saying the prayers that she'd been taught since she was a girl. They'd been in with all of the other ones that she'd learned then, part and parcel of the liturgy of her people, but this part was what had been passed down from one generation to the next, from mother to daughter alone and never committed to buckskin or paper. \n\nIt was not expected that a girl meet and mate with one of the Wolf People as her tribe had called them. That hadn't happened in more than half a millennium, but the chants were still there, and Rosa drew on them now. Though she was in pain, she had several quick orgasms. They weren't as hard as the ones that she'd had with him before, but they were very satisfying to her all the same -- given that he'd opened her shoulder. She asked him to stop and then she'd moved to put her head and her arms onto the mattress as she offered him another place now.\n\n\"Rosa\" he said, \"Are you sure?\"\n\n\"Yes,\" she groaned, \"I've promised you this in my joking way all night. I want it now. If you still have anything left for me in there, then do this for me and give me the last now. I'm sure that I'm the one, and I'm just as sure that I'm the one for Tirran.\" \n\nShe smirked at him over her shoulder, \"You get me lit the right way Handsome, and you can even give me that knot of yours if you think you can be nice to me about it.\"\n\nRosa was thankful that his hardness was well-lubricated and even more, she was thankful for the shape of it. As he entered her very carefully, hoping only to please her with the last gushes from the coupling that they'd just had, Tirran found that they fit together a lot more easily than he'd have thought. The first few long strokes made him happy and more sure of her than ever. He only knew that he wanted to be done before the onset of the change -- if it came to her. \n\nHe didn't think that he could bear it if her heart failed her while he was still inside of her. \n\nBut it didn't happen that way. He found himself feeling as though he was back at the beginning and no matter what he'd wanted, this wasn't going to be an abbreviated coupling under any circumstances. He was gentle and Rosa whimpered and cooed to him, telling him that this was better than anything that she'd ever experienced like this. Under other conditions, he's have been overjoyed, since she felt better to him that anyone that he'd ever done this with. The ramp to the top was a long gentle incline and they did get to the top of it in good time.\n\nHis hips were slapping hard against her incredible bottom when he felt his seed coming. He told Rosa, but she made no reply other than a high keening sound, so when he was at the point that he knew within a few strokes, he slid his pawed hand around her and down her belly, reaching for her sopping wet folds to find her nub. When he felt the first rush, he bit Rosa's other shoulder and growled as his fingers worked to help her -- and they did. She almost jumped and her pleasure took her over as she cried out while he was filling her and then he was working his way to the next load as fast as his testicles could make it for delivery. But when he looked over...\n\nHe saw her eyes, and knew that she was in the beginnings of it from his first bite. Her breath heaved in and out of her and she started to growl and snarl at him, while still keening her joy. He watched as her snout grew right alongside his and when she opened her mouth to howl and bay, he watched as her long teeth emerged. She was growing very difficult to hold onto - even though he knew that she wasn't trying to do anything other than take his seed.\n\nTirran had to devote more and more of his concentration on keeping her still so that he could give her everything, because when his next contractions came and he held himself still, she paused only long enough to realize what he was doing for her before the threw herself against him for more. \n\nHe finally found a way to hold her, both of them bucking and panting but by then, Rosa was already well into growing her fur. He remembered thinking that it was a nice pelt that she wore and he liked the color -- a rich gray with hints of red in it when he suddenly knew that her shape had changed and his had changed to meet it. When the last of his contractions had come and gone, he stopped and they stood for a time holding still and quivering together. \n\nRosa changed then and he was back to holding his woman. He slid out of her very slowly and he picked her up and took her to the bed before he found the sink with the half-barrel of water above it with a hose running down to the tap. He washed a little and then he searched for something to let her drink out of.\n\nRosa watched him from the bed, more in love with him than ever. \"Just use the bowl,\" she whispered weakly, \"I don't know what I'm gonna turn into next.\"\n\nHe sat on the bed and wiped her face with a wet washcloth before he tried to clean up the places where he'd bitten her and she winced at his touch. \"Are you happy?\" he asked, \"I think that I saw that you went through three changes. I only have two myself.\"\n\n\"I did it,\" she said, \"didn't I? Now I have to see if I'm only an, ... abomination or it I'm true.\"\n\nHe stopped and looked at her, \"Forgive me, \"He said, \"I want to know only if you will live first. You have made me share your dream, Rosa, but I can only feel comfort now if I know that you will live. Anything else, I can take in my stride, but I want you to live more than anything.\"\n\nHe leaned down and kissed her for a moment, \"To you, this is a large thing and I understand why, but to me, it is large that you are still mine and breathing. You are true, you know. At least I think so.\" He put his hand in the middle of her chest, \"Change now.\"\n\nA moment later, she was as he was, still looking up at him calmly, \"I like it, but what is your hand there for?\" \n\nHe patted her breastbone softly, \"Only to feel the beat of your sweet heart, Rosa. It did not change at all. No skipped beats, nothing. I think that you have what you wanted, though you may lose this wonderful human shape soon if the memory of it fades from you.\"\n\n\"Welcome to the Xer, sister,\" he said with a smile in the Xerian tongue as he watched her eyes and his heart pounded in his chest to see that she understood him.\n\nShe didn't see that the hand that he placed on her chest was there to feel it if she was unstable. Since she showed no sign other than her calm and weary happiness to have managed something wonderful, he let go of the weapon that he had his other hand on, just as hidden from her view because of that hand on her chest. It would have killed him to see it, but if she'd become an unstable thing, he'd have killed her out of mercy. Most of the ones who were turned perished after doing great damage to everything around them in their agony. He'd read of some who had exploded.\n\nTo his great relief and to her happiness, Rosa had managed the impossible, to go from a human girl to a fine Xer female and survive it.\n\n\"Can I see what I look like?\" she asked and he nodded as he stood up to bring her the mirror. She sat up a little unsteadily and looked down at herself. \"I think that I like me,\" she chuckled. \n\n\"Hey, ...\"\n\nHe looked at her and grinned. \"You must have had your hair long for most of your life,\" he smiled, \"Your body has a self-image and that image has long hair. It's just as well,\" he chuckled, \"That's a nice mane that you have and I think a short one would look a little odd. Your hair is still short in the human shape -- for as long as you can remember it, so change to it often, maybe, though I don't know if that will help anything.\"\n\n\"But I cut it for you,\" she said a little sadly.\n\n\"And I love it, but I also love you like this. Look down.\"\n\nRosa gasped, \"But, ... \"\n\n\"You have always had more on your chest than you gave yourself credit for. Your lovely fur makes you fill out more now. If it matters to you, I have learned that I like what you have. Here, look at yourself now.\"\n\nRosa almost felt faint as she stared, \"I'm ... \"She looked at Tirran, \"I'm - beautiful.\"\n\n\"You were beautiful before,\" he chuckled, \"I'll have to learn to live with it.\"\n\nShe smirked at him and tried to jump from where she sat to pounce on him, but her new center of gravity and the difference in her legs were almost her downfall in a literal sense. Tirran caught her and helped her back onto the bed. \"Save your exuberance until you have re-learned the art of walking.\"\n\nBut she watched as his face clouded over then. \"What's wrong?\"\n\nHe was kicking himself, but he smiled, \"Nothing for now, Rosa. But you are a Xer now. On Xer, you have no identity, so you cannot go there with me. I've forgotten, since it really didn't mean much to me, but you and I now have a problem.\"\n\nHe began to tell her about the Merren demon that he worked for and some of the things that he'd seen when they'd come here before. Rosa's mouth fell open.\n\n\"That's where you fly to?\" she asked, \"Tirran, that whole place, ... man, there's nothing there but bad ju-ju. I've seen people walk in there, but I've never seen one walk out again. You work for them?\"\n\nHe shook his head, \"No. I'm a member of the Xer military. I'm on loan to that old creature, and I fly his craft for him. It's not even his. It's a Xer craft, but he's got some connections someplace -- strong ones if he can pull the strings that I've seen him pull.\n\nThey usually pick worlds apart for something, some resource in the ground -- something that they want. This world was chosen a long time ago, but something went wrong and they've left it alone -- officially. But the one that I fly around has other ideas somehow. I just don't know what they are -- yet, anyway.\"\n\nHe looked at her, suddenly finding himself looking at a reason to care for an entire world, \"Where did you say that you were from?\"\n\n\"I'm from Colorado, why?\" She asked.\n\n\"I might have to hide you there for a while,\" he said, \"Not yet, but maybe in a few weeks, once I figure out how. You'll be safer there while I try to find a way to get you off-world. But I'm also thinking that it's about time for that creature that I fly around to have a mishap. I can't see that they'd replace him any time soon. I don't know any details, but I know that what he does is against a whole lot of Merren laws.\"\n\nHe watched as she sat up slowly, pulling herself up by using the weight of his body. \"Move over a little, Tirran,\" she groaned, \"I've just thought of something.\" \n\nShe struggled and got her new feet on the floor and she pushed on his shoulder as she stood up a little unsteadily and then worked her way very carefully to where he cloak hung on its peg.\n\n\"What are you doing, Rosa?\" He couldn't figure out what her intent was here.\n\n\"I think that we have at least a little time to think about things,\" she said, \"In the meantime, I've gotten what I'd always wanted.\"\n\n\"You mean that you are a Xer now?\"\n\nShe shook her head, \"Yeah, and that's wonderful, but I'm not going to lose sight of how it came to me, through you -- something that I've always wanted. I think that we're having a moment for one of these smokes if there ever was one.\"\n\nHe was still uncertain as he watched carefully while she worked her way back to the bed to sit next to him.\n\n\"You mean that you have the love of a Xer now? Is that it?\"\n\n\"No,\" she laughed a little, \"well, yes and no. For the first time in my life, I've got somebody who loves me and there's no way that I can mistake what I see. I'm in love, Tirran.\" \n\nShe laughed a little, \"I'm in love and it's the best thing ever.\" "
    ],
    "authorname": "TaLtos6",
    "tags": [
        "demon",
        "werewolf",
        "vampire",
        "combat",
        "covert",
        "special",
        "tribe",
        "voyeur"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-39"
}