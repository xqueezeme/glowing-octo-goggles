{
    "title": "Damn Dress: A Love Story Ch. 07",
    "pages": [
        "Chris sat there in his car after Lori told him the shocking news. He had almost veered off the side of the road, so he had to pull over to avoid an accident. He couldn't think. Pregnant? How could she let that happen? Sienna was leaving for Spelman in just a few weeks. Only plan that was making any sense to him was that she was getting an abortion. Yes, that made sense. She couldn't possibly have a baby with all that was going on.\n\nHe had to speak with her. He was sure she'd make the most sensible choice, but he still needed to know where her head was. Chris felt like he had been punched violently in the gut. He felt as though he were physically getting sick. God, he wanted her so bad, and now she was pregnant. She was only 18. She wasn't even married! Brandon was going to fuck up her life! \n\nAt this moment Chris knew he was going to confront Brandon. Fuck it if everyone else was too afraid to give him a piece of their mind. He would damn sure hear from him before this summer was over.\n\nChris was supposed to have left for home awhile ago, and from there, returned to Annapolis, but he called his father and told him he was extending his visit with Commander Branson. He hadn't yet asked the Commander if he could stay longer because he figured he'd always made himself useful around the house and stayed out of his way. But he couldn't leave just yet. Not until Sienna knew exactly how he felt about her.\n\n*****************\n\nSienna awoke in Brandon's bed and it was already dark outside. At first she thought that the entire day had just been a crazy dream, until her stomach flip flopped, forcing her from the bed to the bathroom. \n\nWhen she was done hugging the toilet, she raised up and washed out her mouth. Sienna stared at herself in the mirror. She didn't look any different. At least not her face. She slowly slid her hands down to her breasts, which felt a little tender and then down to her stomach and lifted her shirt. That didn't look any different either. Still flat. She turned to the side and stared at herself in the mirror. Nope, no bump. This was all like a dream. Good or bad dream, she didn't yet know. She wasn't sure she would believe it until the thing popped out. She still couldn't believe she had managed to skip her period and not even notice. But she guessed with all that was happening so quickly in her life, perhaps it wasn't as unlikely as she thought.\n\nShe walked out into the living room to find Lori sleeping, mouth open, on the couch. She sat down at the kitchen table. She was going to fix some dinner, but just the thought of it made her want to vomit again.\n\nShe thought about her life and her family. Her mom had been young when she was born. Twenty years old, if she remembered what her father had told her. Only two years older than she was now. She knew she had several options, but she wasn't sure which she would choose. Truthfully, she didn't want to think about it. Ever.\n\nShe heard Lori yawn and rustle the covers, so she got up from the table and sat down beside her on the couch. \n\n\"How do you feel?\" Lori asked, stretching her arms and legs out.\n\n\"I'm okay, I guess,\" Sienna answered. \"What would you do if you were in my situation?\"\n\nLori rubbed her hand over her face and thought about it for a moment.\n\n\"Honestly Sienna, I would get an abortion. I just think it's the smartest thing to do. That way you don't have to miss a beat when we get ready to fly to Atlanta for school.\"\n\nAbortion. She was after all, eighteen; no one could stop her if that's what she wanted to do. But then she thought about Brandon. Would he be happy about all of this, or mad? He had never expressed any feelings about being a father and she had never seen him hold a baby. God, she was going to be a mom. It finally hit her. She felt the stinging pain piercing her eyes, and then she burst into tears.\n\nSienna felt Lori's arm wrap around her and pull her tightly toward her. Sienna felt like she couldn't catch her breath. Her life seemed to be spiraling out of control and damned if she knew what to do. She wished so badly she could talk to her father. He always knew the right things to say. But she was just as nervous about having him find out as she was Brandon.\n\nLori let Sienna have her cry while she prepared dinner for them. Sienna scarcely ate anything. She just felt so overwhelmed. So many things were happening at once, and decisions that she dreaded, needed to be made. Her head was pounding and her stomach was in knots. She started feeling dizzy and she swore she could hear her heart rapidly beating.\n\n\"Do you want to talk about it?\" Lori asked, breaking Sienna out of her mini panic attack.\n\nSienna took a deep breath and exhaled. \"I just don't know what I feel right now. I guess the best thing to do is just tell Brandon when he returns.\"\n\n\"Hmm,\" Lori moaned. \"I'm not so sure I would do that just yet.\"\n\n\"Why?\"\n\n\"Well, if you did want to get an abortion and Brandon didn't want you to, who do you think would win that fight?\"\n\nSienna thought about that. Lori was right. Brandon seemed to always get his way. He would find some means to make sure she caved. It's partly the reason she was in the predicament to start with. He made her head whirl, and she would forget little things, oh, like birth control!\n\nThinking about him made her yearn for him even more. She couldn't wait to set eyes on him again. She longed to talk to him about all of this, but she wanted to make the right decision for herself. But for now, she thought it best to keep this between Lori and herself.\n\nThe rest of the week pretty much went by the same routine. Lori stayed with her and every night tried to persuade her to go out and have some fun, although Sienna's idea of fun was never club hopping. What was so wrong with bowling? Or Putt-Putt? Or an arcade? Sure that stuff was corny and mindless, but it was more pleasurable doing those activities than letting some strange, sweaty man grind up against her in a stifling, packed club. So, she and Lori ended up compromising. One night they went to a friend's house for a party, the next night they went bowling. Although Lori flirted with cashier more than she bowled, but Sienna had a blast.\n\nAnything to keep her wandering mind from pining over Brandon.\n\n***********************\n\nBrandon was worn-out. Dead tired. He was starving, aching, dirty and horny as hell. He didn't even feel like unpacking his shit from the Jeep. For seven days, he'd slept a combined amount of 10 hours and now his body was suffering from exhaustion. He managed to pull his bruised legs out of his Jeep and trudge up the front steps. He felt like he had collided with a mack truck. He just wanted to see her. Embrace her. Breathe in her scent and fall into a deep sleep.\n\nHe unlocked the door and staggered inside. It was pitch black and he tripped over something in the middle of the floor. Felt like a suitcase or bag. He sauntered over to the kitchen, opened the refrigerator door and got out a bottle of water. He needed a hot shower too, but he just didn't think his body could remain standing long enough to wash.\n\nHe walked over to his couch, turned on the TV and eased down, groaning from his sore tailbone. \n\n\"Ouch, fuck!\" he heard someone say.\n\nBrandon rapidly jumped from the couch. \"Jesus-fucking-Christ!\" He turned on the light near the door, to find Lori smiling up at him while rubbing her legs. \n\nShe laughed at him, \"Damn, BT, you almost crushed my ankles.\"\n\n\"Fuck, Lori! What the hell are you doing here?\" Brandon whispered.\n\n\"Take it up with Sienna, she invited me,\" she smiled at him, as she lay back down and threw the cover over her head.\n\n\"Goodnight, Lori,\" he said sarcastically, as he picked up a pillow and flung it at her head. He heard her giggle as he walked down the hallway. \n\nWhen he reached his bedroom, he quietly opened the door. There she was. His baby. Sienna was lying in the middle of the bed on her back. She had on a flimsy tee shirt, and he could see her tits rising and falling with each breath. He wanted to caress them with his hands. Or mouth. As he walked over closer to her, he had to pinch his lips shut to keep from laughing. She had placed one of his shirts over a pillow, and had it resting beside her. God, she was so cute.\n\nHe leaned over the bed and kissed her forehead. She immediately awoke with sleepy eyes. \n\n\"Brandon!\" Sienna shrieked, when her eyes focused on him.\n\n\"Hey baby, sshh, go back to sleep. I need to take a shower,\" he said, pushing her soft hair away from her face.\n\n\"No, please stay,\" she whispered, clutching at his shirt.\n\n\"Baby, I'm dirty,\" he said, lightly kissing her full lips.\n\n\"I don't care,\" she said, as she wrapped her arms around his neck.\n\nBrandon pressed his lips firmly against hers. His tongue invaded her sweet mouth. Something about her always reminded him of honey. He leaned over her and started groping her underneath the sheets. Her body was so warm and soft, and she smelled like that damn shampoo or body wash that drove him wild. This is the kind of relationship he had been missing all of his life. Someone who would actually miss him when he was away. Someone who would mourn him if he didn't come back. Someone who loved him deeply.  \n\nFuck it, he'd have to stay dirty. \n\nHe ripped the covers off of her and pulled off his shirt. He hoped she hadn't notice him hesitate a moment. His body was killing him, and he was sure if the light was on, she would stop him from his goal of making love to her all night long. She'd probably start crying, knowing how emotional she could get.\n\nSienna lay there, eagerly awaiting his touch. She instinctively pulled down her panties and opened her legs. The coolness of the air connecting with her moist pussy made her shiver. She pushed her shirt over her head and threw it across the room. She was so ready for him. \n\nBrandon pushed his pants and underwear down and took in the sight of her on his bed. Her body was perfection in his mind. She had beautiful, ample tits and a small torso that tapered down to her tiny, toned waist, which then flared out beautifully to her full, divinely fuck-able hips. It was driving him insane! Just that image alone caused his manhood to stand at full attention. Coke bottle my ass, Brandon thought. That was inadequate to describe her delicious shape. Goddamn, this girl was perfect. And his...all his.\n\nSienna watched as Brandon climbed on top of her. He didn't bother with any type of foreplay, and she was glad for that. She just wanted him. Inside her. He placed the head of his dick at the damp opening to her pussy and pushed.\n\n\"Ooh, Brandon,\" Sienna whimpered into his ear. She wrapped her legs around his firm hips as he began to deeply penetrate her willing center.\n\n\"Did you miss me, baby?\" Brandon whispered back, as he savored the unbelievable feeling of her snug pussy walls gripping at his cock.\n\nShe shook her head while rolling her hips to meet his powerful thrust.\n\n\"What?\" he said, as he bent his neck to lightly bite her nipple. \"I didn't hear you.\"\n\n\"Yes, baby, I missed you,\" Sienna sighed. God, she had missed this so much. She felt as though they were one being when he was so deep inside her, heart to heart.\n\nBrandon began picking up the pace, driving in and out of her. He knew his body would pay for this workout in the morning, but he couldn't stop. The moonlight was dancing off of her face, and her expressions of pleasure were turning him on to the fullest.\n\nSienna felt so full and powerless against him. She reached her hands around him and grabbed his firm ass. She could feel the muscles flexing as he impaled her again and again. She raked her fingernails across his toned rump, and he groaned into her neck, while delicately biting it. He was reaching places inside her that the doctor damn sure couldn't reach with his vulgar equipment. Nothing could equate to this breathtaking feeling.\n\nHe lifted his chest from hers and stared down at her as he pulled the majority of his thick penis from her pussy. She tried to push his ass back down with her hands, but he wasn't budging. She felt so empty. She gripped her legs tighter around him, and pressed down, but he still wouldn't shift.\n\n\"Sienna?\"\n\n\"Yes,\" she replied, still trying to get him to move his hips.\n\n\"Tell me who you belong to,\" he said in a raspy, seductive voice as he stroked inside her once and pulled out.\n\nSienna's eyes rolled back with that one insertion. He was driving her mad. \n\n\"Tell me,\" he demanded again, in a harsher tone.\n\n\"You, Brandon. I belong to you,\" she croaked out, barely keeping it together.\n\n\"Damn straight,\" he said as he thrust inside her and withdrew again. Ugh, he was killing her!\n\nHe grabbed her hand and placed it flat against his chest. He gazed so deeply into her eyes; she swore he could see her soul. Perhaps even her thoughts before she knew what they were. He just held his hand over hers, against his beating heart.\n\n\"And this belongs to you,\" he said, not once breaking eye contact with her.\n\nSienna froze. Everything she was thinking he could have said, completely missed the mark. She had never in her life met a human being more intense than Brandon Temple, and God help her, she loved that about him. She obsessed over this beautiful, dangerous man.\n\nBut the moment her brain thawed out and the realization of what he had just said completely struck her, she gripped his neck tightly and slammed into his face. She was so hungry for his kisses, she couldn't think about anything else. Brandon wasn't an emotional person, but when he did do something, even as subtle as what he had just done, it sent her over the moon.\n\nBrandon returned her kisses as he vigorously drove his cock into her with a desire he hadn't felt before. He wanted to inhabit her insides to ensure himself that she did indeed, belong to him. He knew from the moment he had taken her from the Veterans Ball, he couldn't be apart from her. And now more than ever, he knew this was it for him. The only woman he would ever want again. He couldn't lose her. Ever.\n\nSienna felt the lower half of her body begin to quiver. She felt her pussy spasm as she threw her head back and let an intense orgasm roll through her body. \"Oooh, Brandon, mmm..baby!\" she cried out.\n\nBrandon tightly grasped her, as her legs slid down from around his hips and on to the bed. He began thrusting harder into her, feeling his own release building. Fuck the condom, he thought. He loved her more than anything, and would welcome any responsibilities that came with.\n\nHe held her tight as he started to fill her womb with his seed. \"Shit,\" he hissed by her ear. \"Fuck, Sienna. I love you so much,\" he said, still feeling his come release inside her.\n\nWhen he felt completely empty, he rolled onto his back and took her with him, so that she was now resting on top of him.\n\nSienna couldn't lift her head just yet, but she whispered into his chest, \"I love you too, Brandon. Always.\" And then she fell into a deep sleep.\n\nBrandon stayed awake for awhile, listening to her breathing. Her body was lightly rising and falling with his breaths, so he tried to breathe smoothly so he wouldn't jostle her. He gently caressed her back. Since he had been with her, he couldn't manage to keep his hands off of her. He felt the need to always touch her in some way.\n\nBut soon fatigue, and the lack of sleep in seven days caught up to him, and he passed out.\n\n***********************\n\nWhen Sienna awoke, the sun was shining brightly into the bedroom. A smile crept across her face, thinking of last night's little homecoming with Brandon. She reached over for him but the covers were empty. She rolled over and picked up her small tee shirt from the floor and put it on. She grabbed a pair of shorts from her suitcase and walked out of the bedroom.\n\nWhen she reached the kitchen, she noticed Brandon standing over by the sink with both hands braced on the counter. She turned and saw Lori lying on the couch, flipping through different channels.\n\nHer attention flew back to Brandon. She was sure he had heard her enter the kitchen, but he had yet to turn around to greet her. Oh no, what had she done now.\n\n\"Brandon?\" she tentatively asked, as she walked over towards him. He quickly turned around and spewed water from his mouth like a fountain, at her.\n\nSienna sputtered and coughed when the water splashed her face. Her mouth dropped open as she stood there in shock. She couldn't believe he had just done that! And he stood there laughing his ass off and wiping his mouth.\n\n\"You asshole!\" she screamed, as she playfully attacked him. She ran to the sink and turned the faucet on and started throwing handfuls of water at him, soaking everything in her path.\n\nBrandon couldn't help himself. He had just taken a sip of water when he heard her coming, and he knew the look she would give him would be priceless if he did it. And he was right. She had stood there with water dripping from her face and a look that could kill. \n\nHe quickly ducked to avoid the water she was trying to toss on him and picked her up. She started squealing and laughing. He gently placed her on the kitchen floor while she pushed and fought him off. He grabbed his bottle of water and started spraying more onto her body as she twisted and turned to avoid it.\n\n\"Aah!!\" Sienna screeched, as the cold water hit her flimsy shirt. She grabbed his pant legs and yanked them as hard as she could.\n\nBrandon almost lost his balance, but caught himself right before he would have fallen on top of her.\n\n\"BT, stop!\" Lori called from behind them.\n\nHe and Sienna both stopped and looked at her. \"Why?\" he questioned, cocking his head to the side.\n\n\"You could, um...you could hurt her doing that, you know,\" Lori offered, trying to not look guilty.\n\nSienna started to get up and playfully smacked his face. She walked over to Lori with her eyes wide, signaling Lori to shut up before she gave them away.\n\nBrandon stared at the two of them. Something was up, but he wasn't sure what. Maybe it was all in his head, because he still wasn't one hundred percent since returning from the mission. That morning, in the shower, oh, he felt the pain. His ass should have rested as soon as he got home, but as long as she was anywhere near the same vicinity as him, he could forget about resting.\n\n\"Oh, guess who I saw the other day at a club?\" Sienna asked smugly, turning around and pinning him with her glare.\n\nBrandon's brow furrowed. \"You went to a club without me?\" he returned.\n\nSienna's mouth opened, and then quickly closed. She went to stand behind Lori and pointed her finger down over Lori's head.\n\nLori laughed, \"Oh great, now I know that you'll throw me under the bus.\"\n\nSienna hugged Lori from behind and rested her head on her shoulder. \"Rachel. Your red headed friend,\" Sienna told him.\n\n\"Fuck,\" Brandon muttered, as he grabbed a piece of bacon.\n\n\"And guess what?\"\n\nBrandon started to chew and stared at Sienna waiting to see what crazy shit Rachel had exposed about him.\n\n\"She wants me to come see her when I get tired of you,\" Sienna replied, smiling at him.\n\nBrandon's eyes widened, then he rolled them. Fucking Rachel.\n\n\"Well, I guess I never told you she swings both ways,\" he said, as he went to grab another piece of bacon.\n\nSienna thought for a moment. She really didn't want to know the answer, but she had to ask anyway. She was a glutton for punishment.\n\n\"So...in all this swinging both ways, did you and she ever add another woman to your little hook-ups?\" Sienna asked, while walking to the refrigerator, trying to act uninterested.\n\nShe looked back at Brandon, and one side of his mouth curled up into a cat-ate-the-canary grin. \"You know, in the military, we have a don't ask, don't tell policy. So I'm sticking to that,\" he replied, as he turned and walked down the hallway.",
        "Sienna picked up the dishrag and threw it in his direction, missing by a few feet.\n\n\"Asshole,\" she muttered under her breath.\n\n\"I heard that,\" he hollered from the hallway.\n\n\"Meant for you to!!\" she yelled back.\n\nLori laughed. Those two were crazy.\n\n\"Hey, open up,\" Lori and Sienna heard Darren say through the front door. Lori skipped over to the door to open it. She had always thought Darren was sexy as hell, with his shaved head and dark chocolate skin. \n\nOriginally, Lori had also had a crush on Brandon, but Sienna had called dibs on him early on, and that girl was a total lost cause when it came to Brandon, so Lori knew she had to back off. \n\nBut Darren, oh, he was fine too. She had tried flirting with him over the years, but nothing seemed to work. She had seen his girlfriends. They were all gorgeous, and most of them had been a little older than him. Funny, Brandon picks the girl ten years younger, while Darren chooses the women about ten years older. But in this case, she would prefer he be more like Brandon in that respect. Even though she was older than Sienna by a few months, she was also still, only eighteen.\n\nWhen Lori finally opened the door she gasped. Darren looked like shit run over--twice. \n\n\"Well, hey to you, too,\" Darren retorted, grinning at her reaction to his beat down body.\n\nHe knew he looked terrible. And the shit hurt even worse. He limped in towards them and sat down at the kitchen table. He noticed Sienna and Lori still staring at him.\n\nHe got a piece of toast and bacon off the tray and bit into it.\n\n\"What?\" he asked, shoving the rest of it down his throat. He was starving.\n\nSienna was the first to speak. \"What happened to you?\" she asked, taking in his limp, his busted lip, black and blue eye, and large bandage wrapped around his left elbow.\n\n\"Oh, that,\" he laughed. \"Just another day as a Seal.\"\n\n\"Seriously Darren, what the hell happened?\" Lori chimed in.\n\n\"Well, I can't really tell you guys where we were, but it was me, BT and one of the bad guys. All three of us had run out of bullets after this crazy shoot out on top of this building,\" Darren explained, while he inhaled more food.\n\n\"So, with no bullets left, this asshole launched toward me like a fucking lunatic and hits me head on. Well, we both were about to go flying over the edge until BT grabbed me at the last second. But the weight of me and the other guy was too much, and all three of us went over,\" he said, as he grabbed some more bacon.\n\n\"Over what?! The side of a building?!!\" Sienna shrieked. She felt herself trembling.\n\nDarren looked up at her. \"Yes. But it was only two stories high,\" he stated, matter of fact.\n\nSienna felt sick. She wanted to throw up. He could have been killed. She had to sit down. \n\n\"Holy shit!\" Lori shouted. \"I always knew BT was crazy, but you too, Darren?\"\n\n\"Well, BT might be crazy as hell, but I love that asshole like a brother. He could have let go of me, you know. But he didn't, and went over the edge with me,\" Darren said, as he scanned the table for more food. \n\nLori stared down at Darren. \"Shouldn't you be in the hospital or something like that? You look like a walking ad for what happens when you drive drunk.\"\n\nDarren laughed. Lori was funny. She had a smart quick mouth, that he was sure would drive him crazy if he was around her all the time, but here and there, she was okay.\n\nBrandon heard his friend's voice and came back down the hallway and into the kitchen to find Darren sitting at the table stuffing his face.\n\n\"Fuck, you look like shit,\" Brandon said, as he went to sit down by Sienna. He noticed she had her head resting on the table.\n\n\"Baby?\" Brandon asked, as he stroked her back.\n\nShe lifted her head and turned to look at him. Her eyes were weak and wet.\n\n\"You didn't tell me you fell off the freaking roof of some building after a shootout,\" she said to him.\n\nBrandon turned to Darren.\n\n\"Fuck, man! Why did you tell her that?\" he said, throwing a piece of toast at him.\n\nDarren caught the toast, and started eating it. \"I didn't know I wasn't supposed to.\"\n\nBrandon faced Sienna again. \"Look, I don't know what he told you, but trust me, it wasn't that bad.\"\n\n\"Were you involved in a shootout?\" she asked.\n\n\"Yes.\"\n\n\"Did you fall or get pulled off of the roof of a building?\"\n\n\"Yeah.\"\n\n\"Than it IS that bad,\" she stated, getting up from the table.\n\nHe pulled her back down and onto his lap. She tried to get up again, but his hands wrapped securely around her.\n\n\"Baby, we get close calls sometimes, but I'm okay. And we accomplished our mission. But trust me, that asshole who knocked us over the side...the fall was the least of his worries,\" Brandon said, nuzzling her neck.\n\n\"Hooyah,\" Darren muttered as he piled more food onto an empty plate.\n\nSienna started to say something, when she noticed something black on the side of Brandon's neck.\n\n\"Oh shit,\" he said, trying to hide that side of his neck.\n\n\"What the hell is that?!\" Sienna asked when she ran her fingers over a small set of stitches in his neck. She hadn't noticed them last night or earlier this morning.\n\n\"I um, I got grazed by a bullet,\" he sheepishly said, while pretending to duck from whatever it is she was about to unleash on him.\n\nSienna felt nauseated. Her stomach started gurgling and the smell of the food on the table made her feel like she was going to gag. And now, hearing this. He was almost shot in the throat!!\n\n\"A bullet almost, it almost hit you in the--,\" was all she could muster, as she felt the bile rising up her own throat. She tried to jump from his lap, but he held her firmly against him. She pushed hard, and just as she broke free, she puked all over the floor.\n\n\"Goddamn,\" Darren said, as he jumped up on his good leg, scooting his food out of the way.\n\n\"Sienna?!\" Brandon shouted, as he kneeled down beside her. \"Baby, what's wrong?\" he asked, his voice laced with concern.\n\n\"Oh, I'm sorry, I\"m fine...I just didn't feel well this morning. I'm so sorry,\" she weakly said, trying to find some paper towels to clean up her mess.\n\n\"Fuck that, leave it,\" he said as he scooped her up in his arms and carried her toward the back.\n\nLori, who had also jumped up and ran to stand beside her, decided to make herself useful by wiping up the mess.\n\nDarren stood over her, still eating, but slowly chewing. Lori noticed Darren staring at her, but she didn't say anything to him. She just mopped up the floor and then washed her hands.\n\nAs she was drying them off, Darren came to stand next to her.\n\n\"She should be okay,\" Lori said to him.\n\n\"You know,\" he stated thoughtfully, \"she was throwing up like that while BT was locked up.\"\n\n\"Oh, yeah.\"\n\n\"She's been sick like that for awhile,\" he said, more as a statement than a question.\n\n\"Yeah, must be some kind of bug,\" Lori said, while trying to look anywhere but at him.\n\n\"Nine month bug, huh?\" Darren said, while his gaze penetrated Lori's, trying to read her.\n\n\"What? No. I don't know what you're talking about. She's just been really stressed, and obviously hearing about Brandon's near death caused her to feel bad again,\" Lori stated, as she walked over to the couch and sat down. She pretended to flip through the channels again, but she knew Darren was still staring at her.\n\n\"Is there anything BT should know?\" he asked, clearly pissed off.\n\nLori ignored him. Shit! She didn't know what to do. She was sure that Sienna didn't want Darren knowing about her situation. He would tell Brandon, and Sienna hadn't even decided what she was going to do with the baby.\n\n\"Lori?\" he asked again, raising his voice.\n\n\"Look, I don't know what you're talking about. And anything between them, is their business, not mine or yours,\" she said. But then she felt guilty, because she had told Chris about the pregnancy. \n\n\"Right,\" he said sarcastically, as he sat back down at the table and continued to eat.\n\nIn the bathroom, Brandon had Sienna leaning over the sink, splashing water on to her face. Commander Branson had told him years ago that Sienna had a weak stomach, but Brandon had never actually seen her throw up.\n\nShe raised up from the sink and he handed her a towel to dry her face. He stood behind her staring at her reflection in the mirror. Even in the fragile state she was in now, she was still stunning. \n\nSienna felt like shit and was embarrassed that Brandon had to see her like this. She reached for her toothbrush and cleaned her teeth and tongue. She gurgled some water then repeated with mouthwash. She looked up into the mirror at his eyes and gave him a weak smile.\n\n\"You alright, baby?\" he asked.\n\nSienna turned around. \"Yes, I'm fine. And I'm sorry about the mess, I'll--\"\n\nBrandon put his hand over her mouth. \"I don't give a shit about the mess. I just want to know if you are okay. That's all that matters.\"\n\nSienna nodded her head with his hand still covering her mouth.\n\n\"Okay then,\" he said, as he removed his hand and leaned down to kiss her.\n\n***********************\n\nSienna knew she had to see the doctor this week. She would be seven weeks now, and she still didn't know if she were keeping the baby or not, but if she did, she wanted to make sure she was doing everything right for him. Or her. It.\n\nShe informed Brandon that she and Lori were going to the mall to shop, which technically wasn't a lie, since Lori was returning some merchandise, but then from there, they traveled back to Dr. Carlson's office.\n\n\"Alrighty, Sienna. We're all done for the day. The nurse will schedule your follow up when you pay,\" Dr. Carlson said in his normal cheery manner, after examining her and handing her tons of paper about pregnancy expectations. \n\n\"Thank you, Dr. Carlson. Hey, can I ask you a question?\" Sienna said, nervously.\n\n\"Of course. Shoot.\"\n\n\"When's the last week I can have an abortion?\" she said, looking down at her feet.\n\n\"Well, Sienna our clinic doesn't perform abortions, so I'd hate to give you the wrong information. But I believe it's up to 24 weeks, although many physicians that I know of don't really think it's healthy for the woman to wait so late. But I'd prefer you talk to another doctor who deals directly with that procedure, okay? I wouldn't want to misquote anything. But if you are looking to go that route, I can have the nurse recommend some top clinics.\"\n\n\"Okay,\" she said as she followed Dr. Carlson out of the room. As soon as she and Lori reached the car, Lori turned to her. \"Okay, tell me everything.\"\n\nSienna surprised herself at how eager she was to tell Lori. \"Well, he asked if I wanted to know anything about the baby, and I said yes. He said that the baby is about the size of a pencil eraser, has a heartbeat and it's starting to develop facial features.\"\n\n\"Wicked! That's so weird but cool.\"\n\n\"And...he told me my due date,\" she smiled over at Lori.\n\n\"So, you're going to keep the baby?\"\n\nSienna sighed, \"I don't know. I kinda want to. But with so much going on and my age, I know everyone would think I'm a fool to.\"\n\n\"Well, when is your due date?\" Lori asked, trying to change the subject. She knew that this was difficult for Sienna.\n\n\"April 10th! Brandon's birthday is on the 9th!! How crazy is that?!\" Sienna asked all excited.\n\n\"Well, you know when his parents were getting busy too,\" Lori laughed. \"That is really neat Sienna.\" \n\nLori began to think about that date. \"Hey, April is pretty close to the end of the school year, you know. That's not bad. Maybe...just maybe you would barely miss any school work, if you still wanted to attend a college.\"\n\nSienna pondered over it too. Well, Spelman was out of the question, but just maybe she could still attend college. She knew girls in her high school that had come every day up until their child's birth, maybe she could do the same. It was definitely worth investigating, because she really did want to go to school. She would make that her new task.\n\n***********************\n\nWhen Lori dropped Sienna back off at Brandon's, she walked in and found him lounging casually against the counter in his Dress Blues. He looked so damn fine right then, that if the Navy put this exact freeze frame on their brochures, they'd have all kinds of women wanting to join. \n\nShe didn't know how the hell he managed to do it, but already, she felt a slight tingling between her legs. A quick jolt to her pussy, by just staring at him.\n\nBrandon drank in the sight of her body. She was wearing a white strapless shirt or tube top, or whatever they were called and a pair of really short denim shorts. Really short. His gaze finally made its way back to her face. She had her hair pulled back into a messy ponytail and had yet to remove herself from the door entrance.\n\nSienna watched as he lifted his hand and flexed his finger for her to come to him. And of course, she did. She walked over to him and he stared down at her. She realized she was much shorter than him, but wearing her flat white flip flops, she felt that he towered over her. And being this close to him, he smelled heavenly. Oh, it must be pheromones or something, because she was ready to rip his clothes off.\n\nBrandon took in her wide seductive eyes and kissed her tender mouth. He then slowly turned her around and lightly pushed her back down, so that she was bending over in front of him.\n\n\"Hmm,\" was all Sienna heard him say. What? Did he not think her ass looked good anymore? She tried to rise up, but he held her down firmly.\n\n\"So, this is the image that people will have in their head if you drop your keys or something,\" he said, finally letting her up.\n\nSienna spun around and nervously laughed, while Brandon's expression remained flat.\n\n\"BT, they're not that short,\" she said.\n\n\"Right,\" Brandon said, scanning over her delicious curves again.\n\nSienna always felt naked when he looked at her like that. The way he would survey her body and lick his lips, like she were a tasty dish.\n\n\"These are the same type of shorts you used to parade around in front of me with, and I knew what I was thinking then, and I know what guys are thinking now,\" he said, pulling her closer to him and seizing her ass.\n\n\"Well, speaking of dress code, why are you in your dress uniform?\" Sienna asked.\n\n\"Because Miss Branson, you made a deal with me. Get your pretty little ass dressed, we're going on our official date,\" Brandon said, while smacking her bottom.\n\nSienna jumped. \"Date, what date?\"\n\n\"For teaching you how to fight, remember. Now move your fine ass, before I forget about the date, and have you on this floor in ten seconds.\"\n\nSienna giggled and stood up on her tip toes and wrapped her hands around his neck. She kissed his lips, while she pushed her entire body into his. Then she quickly turned and sprinted down the hallway and in to the bedroom.\n\nShe opened his closet and smiled to see her articles of clothing hanging next to his. She pulled out three summer dresses. One was black with a plunging neckline and angled cut at the bottom. About knee length. The white one was strapless, with a little blue flower at the bust. Maybe not dressy enough? And then there was the red dress. It had thin spaghetti straps and was short. \n\nShe was contemplating her choices when she felt his arms snake around her waist.\n\n\"Hey, which one should I wear?\"\n\nBrandon snuggled his lips against her neck. \"How about you don't wear anything, and I follow suit,\" he said, nibbling on her neck.\n\nSienna laughed. \"Which one?\"\n\nBrandon looked over the three dresses, but the red one caught his eyes first. \"That one.\"\n\nSienna picked up the red dress and held it against herself. This dress was tight last she remembered. She hoped she could still squeeze into it. Suddenly, she became extremely self-conscious of her body. Brandon hadn't made any moves toward the door, so she figured he was going to stand here while she dressed. Shit.\n\nSienna walked over to his dresser and removed a black thong and then she grabbed her strappy sandals from the closet.\n\nShe stood there by the bed, wondering how she was going to tell him she needed to change in the bathroom, when he had already seen every part of her body.\n\nAnd then the way he stared at her, made her feel even more self-conscious.\n\nHe strolled over to her and started kissing her again. He then unbuttoned her shorts and slid them down her legs. He did the same with her panties. Then he pulled her top over her head and removed her strapless bra.\n\nSienna was standing completely naked in front of him. It took a great amount of will power to keep her hands by her side. She desperately wanted to cover her midsection. She figured she was probably being paranoid, but she felt fat.\n\nBrandon pulled the thong out of her hands and kneeled down in front of her. He held the thong for her to step into it, and when she did, he slowly slid it up her smooth brown legs. Before he covered her completely, he gently kissed her soft mound, and pulled them up.\n\nWhile still kneeling, Brandon wrapped his hands around her waist and kissed her tummy. First below the belly button, then above.\n\nSienna was so nervous. She just knew that he would realize she was pregnant. But he didn't linger there too long before he made his way up to her tender breasts. He took a hard nipple into his mouth, causing her to wince in pain. Even though they were sore, she didn't stop him. She didn't want to give anything away.\n\nWhen Brandon had given both of her succulent nipples the same amount of attention, he trailed further up and his lips attached to her neck, causing her to moan into his ear.\n\nHe pulled the red dress from her grasp, and lowered it gently over her head. Sienna stuck her hands through the straps as Brandon pulled the snug dress over her body. Brandon knew he had to get her out of the door, or else he'd push her on to the bed and they'd never leave.\n\nWhen they pulled up to the nice Italian restaurant with an ocean view, Sienna checked herself in the mirror. Brandon had barely given her ten minutes to fix her hair and apply makeup.\n\nSienna noticed the hostess kept her eyes on Brandon. Sienna smirked to herself. 'That's right bitch! Keep looking, because that's all you'll ever do'.\n\nWhen they sat down, Brandon gave their drink order. \"I'll have a glass of wine. Doesn't matter, whatever is good. And she'll have water and a coke.\"\n\nWhen the waiter left, he laughed at her. \"Damn, you got another 3 years to go before you can take a drink.\"\n\n\"Screw you,\" Sienna whispered to him.\n\nHe winked at her. \"Any time, any place.\"\n\nSienna looked out of the window at the waves crashing against the sand. There was something she loved about the ocean. She never thought she could live in a state that didn't border an ocean. She cherished the smell of it and the way the wind blew powerful gusts of cold air that seemed to come from the middle of the Pacific.\n\n\"So...about school,\" Brandon asked, bringing her attention back to him.\n\nShe sighed, \"Yeah, I guess I've been avoiding that too.\"\n\n\"How are we going to do this?\" he said, taking a sip of his wine.\n\nSienna wasn't ready to go there. She didn't even know if she was having the baby, or going to Spelman, or going anywhere for that matter.\n\n\"I guess I could do a lot of flying back and forth. Maybe once a month or something. We can make it work.\"\n\nBrandon continued to stare at her, but she wasn't looking at him. His mind immediately started thinking that maybe she hadn't planned on continuing their relationship after she left. He pulled at his collar; it seemed to be getting tighter. He was trying to keep his mind from imagining the worst, but it was failing.\n\n\"So, what do you mean you 'guess' you can do a lot of flying back and forth? Are you not sure or something?\"\n\nSienna looked up at him. \"No, that's not what I meant, I just mean, that whatever it takes, I can make it work.\"\n\nBrandon relaxed. \"Okay. Thought you were trying to throw me overboard for a minute.\"",
        "Sienna smiled at him, but she didn't like this topic of conversation. Luckily the waiter came back just in time to take their order.\n\n\"So, what can I get for you this evening,\" he asked.\n\n\"Um, I'll take the Chicken Marsala, but no mushrooms, just that gravy shit,\" Brandon said, passing him his menu.\n\nSienna giggled. \"I'll just have the fettuccini and a side garden salad with the house dressing. Thanks,\" she said.\n\n\"Hey, are you still going to study business management at Spelman?\"\n\n\"Oh, I don't know. We'll see. I really like literature and creative writing though, so maybe I'll do something there. Plus, business management requires advanced math classes, and I suck at math.\"\n\nBrandon chuckled. \"Yeah, I remember. You were too funny when I was trying to tutor you on the fucking number theory and integers. You were pissing me off so bad that day.\"\n\n\"It was boring as hell, and you looked fine as hell. How did you expect me to concentrate?\" Sienna playfully whined.\n\n\"So business is probably out then, huh?\"\n\n\"Probably.\"\n\n\"Well I'm glad you finally grew out of your phase of wanting to be an actress,\" Brandon said.\n\n\"What makes you think I still don't want to be?\" Sienna asked, smiling at him.\n\n\"Because, that's just not going to happen. You think I'm going to set you loose in Los Angeles, to be hugging and kissing all over these fucking guys in a movie? Hell no.\"\n\nSienna rolled her eyes and smiled. \"Well, that's why they call it acting, BT.\"\n\n\"Yeah, well I won't be acting when I beat their ass.\"\n\nSienna laughed out loud. \"Didn't anyone ever tell you that violence doesn't solve problems?\"\n\nBrandon thought about it for a moment, \"No, but I'm sure the person who came up with that, got their ass kicked on a regular basis.\"\n\nShe laughed again. Brandon loved hearing her laugh. The way she threw her head back and closed her eyes when something was really funny to her. He made her laugh so hard one time, that she couldn't speak for a minute straight. He would love to spend the rest of his life listening to that musical laugh.\n\nFor Sienna, this was like a dream come true. She had obsessed over and worshiped Brandon for ten damn years. Her prince charming, and she was finally with him and having a wonderful date. She started feeling sentimental.\n\n\"Can I tell you something?\" she asked.\n\n\"Of course.\"\n\n\"Okay, I don't know what kind of power you have over me that makes me divulge embarrassing things about myself, but I feel like telling you this one thing.\"\n\nBrandon leaned back in his chair. \"Alright.\"\n\n\"Okay, don't laugh at me though, but remember the night we first met? I was eight, remember?\"\n\n\"Yeah, of course. You ran into me.\"\n\n\"Um, no, you ran into me,\" she teased. \"But anyway, later that night...oh, this is so embarrassing. Okay, later that night, I wrote my name with your last name over and over on a piece of paper. Sienna Rose Temple. Even at school, I signed my papers like that, and my teachers would get sooo pissed at me,\" Sienna laughed, while covering her face.\n\nShe expected to hear Brandon's laugh mingle with hers, but he was silent. When she removed her hand from her eyes, she saw him staring out of the window.\n\nDid she say something wrong? She ran back over in her head what she had said, but she didn't think she had said anything awful.\n\nBut before she could question it further, the waiter brought their food. She quickly looked down at her plate and began eating through the awkward silence.\n\n\"Sienna,\" she heard him say. She looked up and he was staring at her.\n\n\"Yes?\"\n\n\"In the near future, would you like to have my last name for real?\"\n\nSienna almost choked on her salad. She began coughing and had to quickly drink her water. Smooth, really smooth, she thought.\n\nShe looked back at Brandon. His intense stare was causing her to lose her train of thought. Was he asking her...? Oh God, don't start crying like a loser. Don't. It's not like he was asking her to marry him right then, but still... Sienna tried to think of some cool profound answer to give him. Something that will knock his socks off, and take his breath away for a change.\n\n\"Yes,\" she quietly answered. So much for profound impressing reply.\n\nBrandon nodded his head and began eating. Sienna couldn't eat if her life depended on it. She felt butterflies in her stomach. Or maybe that was the baby making her sick again, but either way, she just wanted to shout to the world how amazing he was. Her arms felt like putty and her mind was spinning. \n\nAfter he finished eating, Brandon stood up and grabbed Sienna's hand. He led her to an open space near the house band and twirled her around.\n\n\"Brandon! No one else is dancing,\" Sienna whispered, as she looked around at the customers, who had stopped eating, to watch them.\n\n\"Like I care,\" he whispered back to her, as he pulled her in close and the two began to slow dance. \n\nSienna looked up at him and wished this night would never end. \n\n\"I love you,\" she said, as she leaned her head against his chest.\n\n\"I love you, more,\" he said, as he kissed the top of her head.\n\n***********************\n\nLater that night, Brandon and Sienna lay in bed together after another exhausting, yet unbelievably satisfying night of lovemaking. Both of them were worn out. But Sienna's mind was still very much awake.\n\n\"Brandon?\" Sienna asked, while rubbing his back.\n\n\"Yeah?\" he said into the pillow.\n\n\"Do you have any baby pictures?\"\n\n\"What?\"\n\n\"You know, pictures of you when you were a baby.\"\n\nBrandon turned over and looked up at her. He was so fucking sleepy, but he was trying to figure out where this was going.\n\n\"No, why?\"\n\n\"I just wanted to see you as a little boy.\"\n\n\"Oh. No, I don't have any,\" he said closing his eyes and laying his head back down.\n\n\"Why not?\" Sienna asked.\n\n\"Because no one ever took any,\" he replied, while burying his face further into the pillow.\n\nShe knew he was tired, but her mind was going a hundred miles a minute. There were so many things she was thinking about at that moment.\n\n\"Not even one?\"\n\nHe turned over and looked at her again, his eyes half closed. \"If my mom has any, great, but I don't know where she is, so it doesn't matter. And my aunt and uncle would probably rather forget I even existed, and the feeling is mutual, so none there either.\"\n\nThat halted all of Sienna's thoughts. \"Oh God, that's so sad!\" she said, hugging him.\n\nBrandon laughed, \"Well damn, don't make me feel bad about it.\"\n\nSienna couldn't imagine what that must be like to not have anything from your childhood. But maybe it would only be a painful reminder to him. Her father's house was littered with pictures of her when she was a newborn, toddler, and every other age. Her high school graduation picture sat on her father's desk now. And Brandon had the same one tucked in the frame of the bedroom mirror. \n\nShe imagined what Brandon would have looked like as a kid. What their child could look like. Brandon's skin was naturally more pale than it was now, but due to summer, he inherited a light beautiful tan. She ran her fingers over his dark brown hair, which lightened with the change in the seasons. He was 6'3, body that resembled the Adonis, a face like an Abercrombie Model with striking green eyes. How could their child NOT be beautiful? \n\nBut she was jumping too far ahead. She still wasn't even sure if she was going to have the baby. But in the end, she finally drifted off to sleep with the image of a gorgeous baby boy in her head.\n\n*******************\n\nThe next morning, Brandon was outside washing off his Jeep. For the life of him, he didn't know why he had chosen black. Shit gets so dirty too easily. He was spraying it off, when Sienna came out of the house.\n\nShe was wearing a cute little light blue dress. Jesus, how many dresses did this girl own? And he'd be damned if each one of them didn't give him a hard on.\n\nShe plopped down on the steps and leaned back. Brandon contemplated spraying her with the hose, but she looked too damn beautiful to violate. Instead he smiled at her and continued washing the Jeep.\n\nSienna couldn't hide the lust in her eyes. He was wearing a pair of loose dark blue cargo shorts that came to his knees and a pair of low cut sneakers. He wasn't wearing a shirt, and his body was banging. She could still see the light black and blue marks from their last mission, but with his toned abs and tight chest, she didn't give a damn. She was already feeling like a female cat in heat.\n\n\"Want me to put on my bikini and wash it for you?\" she offered.\n\n\"Fuck, would you?\" Brandon asked, smiling at her. \"I'll go grab my camera.\"\n\nSienna laughed. She knew she was being devilish, but she couldn't help herself.\n\n\"Hey Brandon,\" she called out.\n\nHe turned to look at her again as she slowly spread her legs. She wasn't wearing any panties, and he had a straight upskirt shot of her beautiful smooth pussy. \n\nHe lowered the hose in front of his shorts as the water continued to shoot out. Sienna giggled at the position of the hose and the hunger burning in Brandon's eyes. \n\nShe slowly strolled over to him and pulled the hose out of his hand and dropped it. She pushed him up against the Jeep door and dropped to her knees. She removed his rigid cock from his shorts and began licking and sucking the head.\n\nBrandon leaned his head back and moaned. He felt her grab his balls and massage them as she took more of him into her mouth. \n\nHe tightly gripped her head and stared down at her. \"Hey, look at me,\" he commanded.\n\nShe looked up into his face with those huge sexy, soulful eyes and dark long eyelashes, while his hard dick was buried in her mouth. She continued to please him as he watched himself disappear between those full sensuous lips. \n\n\"Ugh, fuck Sienna,\" he whispered as he felt his balls tighten. Shit, he was about to explode.\n\nSienna quickly worked her mouth over his dick until she felt the first wave of come spray her tongue. She continued to suck on him as she swallowed the salty delicious taste of his seed.\n\nWhen she was done, she got up, wiped the last little bit of his pearly liquid that was on her lips into her mouth and tried to turn and walk away.\n\n\"Oh, not so fast,\" he breathed heavily, as he roughly grabbed her and opened the Jeep door. He forced her down, so that she was bent over the front seat, while her feet were still touching the ground. Brandon slid her legs apart with his foot. He raised the back of her dress and bent down between her legs.\n\nBrandon stuck his middle finger in his mouth and wet it. He then eagerly licked her sweet center as he slowly inserted his finger into her tight ass.\n\n\"Aah, oh shit!\" Sienna squealed, as she felt an extraordinary and bizarre tingle moving up her legs and to her pussy. Oh, this was a new sensation. She lost her breath. She felt his tongue plunging in and out of her pussy while his finger penetrated her other hole.\n\n\"Oh, God!!\" she gasped as she began coming. That was the fastest it had ever happened. She couldn't comprehend what was happening to her body at this moment. \n\nBrandon stood up and pulled his shorts down. Sienna couldn't move. Her legs felt like jello. She prayed his neighbors couldn't see, but something told her that Brandon wouldn't really care.\n\nShe felt his dick resting at the entry to her vagina as he mounted her. He thrust hard and deep into her. From her angle, she couldn't see much. Just the pedals on the floor of the Jeep as she was pushed further and further into the seat. She felt her own juices trickle down her legs.\n\nBrandon knew this was going to be quick. He was fucking her fast and hard, and was ready to come inside her. He placed her arms behind her back and held them there while he continued to assault her tender pussy. And the thought that someone could walk by them in this position, turned him on even more.\n\nSienna loved it when Brandon got rough and dominant. She lost count of the orgasms she was having. They were just running into the next. She was panting and grunting while the sound of his body slapping into her ass loudly invaded the quiet neighborhood. \n\nBrandon quickened his thrusts as he came inside her. When he was done, he fell over onto her back. \n\n\"Damn, baby,\" he whispered into her ear as they both laid there breathing hard. \n\nAfter their hot and dirty escapade in the Jeep, they decided to shower off together. \n\n\"Brandon, will you go to my father's birthday party on Saturday?\" Sienna asked him while she was washing his back.\n\nBrandon turned around and stared down at her. Fuck, he had forgotten about that.\n\n\"Sienna, I don't think that's a good idea.\"\n\n\"I'll warn him ahead of time. I think it's good for you to go and show no hard feelings.\"\n\n\"But there ARE hard feelings, that's kinda the point,\" he said, as he turned back around to continue washing his hair.\n\n\"Please, for me?\" she pleaded while placing her arms around his waist.\n\nBrandon sighed. He really didn't want to go. Commander Branson had already made it perfectly clear that he didn't want Brandon back in his home ever again. But for Sienna, he would try it, no matter how disastrous he figured it might be.\n\n********************\n\nBrandon turned off the engine and laid his head on the steering wheel. Sienna rubbed his back.\n\n\"Come on, baby. It will be fine. There will be other people there that will keep you busy. And Darren will be here. You don't have to talk to my dad if you don't want to. I mean, you signed his birthday card, right?\" Sienna offered, hopeful.\n\nBrandon didn't think he could do it. Already half of the people in that house disapproved of his relationship with Sienna and the other half probably disapproved of his feud with the Commander. He really didn't know why he was here. If one person said the wrong thing to him, he was going to lose it.\n\nAnd what was worse, is that he had planned on throwing the Commander's 50th birthday party. He had never wanted to do sentimental shit like that before, but Jackson was like his father. Was, being the key word.\n\n\"Are you sure he knows I'm coming?\" Brandon turned to her with his head still resting on the steering wheel.\n\nSienna bit her bottom lip. She had never actually gotten around to informing her father that Brandon was coming. She had meant to, but then she was side-tracked with the state of her condition. Yet another thing she hadn't told him or her father. \n\nThe front door opened and Lori came skipping out. Brandon and Sienna collectively blew a sigh of relief.\n\nLori walked over to Sienna's door. \"You know, the party is inside, right?\" she asked, with a grin. She looked over at Brandon. \"And you look a little pale there, sir,\" she said, making fun of him. Brandon stuck his middle finger up at her, \"You know what you can do with that, right?\" he asked.\n\nLori laughed and pulled Sienna's door open. She tried to help her out of the car, but Sienna swatted at her hands and nervously stared back at Brandon.\n\n\"Stop it, before you give me away,\" she whispered to Lori.\n\n\"You two go ahead, I'll be inside in just a minute,\" Brandon said as he laid his head back against the head rest.\n\n\"You sure BT, I can wait on you,\" Sienna suggested.\n\n\"No baby, go ahead. I just need a moment to myself.\"\n\nLori started pulling Sienna's arm, and reluctantly she followed. She was worried about him, but she turned and entered the house.\n\nOnce inside, she immediately came in contact with several of her dad's friends and Navy personnel. After greeting different people, she escaped to the kitchen and saw Darren standing against the counter with his date.\n\n\"Hey, gorgeous,\" Darren said, while his date glanced at him with an evil eye.\n\n\"Hi Darren,\" she said, while turning to the woman waiting for Darren to introduce them.\n\n\"Oh, this is Tasha,\" he said, getting the hint.\n\n\"Hi Tasha, hope you're enjoying the party,\" Sienna tried to offer as condolence for Darren's rude greeting.\n\n\"Yes, I am. So it's your dad's party?\" Tasha asked.\n\n\"Yep. The big 5-0.\"\n\nSienna really wasn't in the mood to deal with any of this. Plus she felt dizzy again. She excused herself from the couple and walked outside into the backyard where the party was taking place.\n\nShe spotted her father over by the grill talking to LT. Dennison. She liked Nick. He always seemed so serious though. Her father saw her walking toward him. She noticed that he tensed for a second, but then smiled and waved.\n\n\"Hey daddy. Happy birthday,\" she said to him while delivering him a big hug.\n\n\"Thanks baby. I'm glad you came. I wasn't sure if you would or not, but I'm glad you did,\" Jackson said, as he hugged her back and kissed the top of her head.\n\nThat hurt Sienna. For her own father to think she wouldn't come to his birthday party. She had to get this thing with he and Brandon resolved. The two most important people in her life couldn't stand each other, and that was a source of a lot of her stress.\n\nBrandon felt ill. He wanted to be anywhere in the world except right here. But he eventually got out and walked inside. There were only a handful of people in the house, which is where he preferred to stay. He figured everyone else was in the back yard. A yard he had helped with the landscaping two summers ago.\n\nHe noticed Darren walking toward him. Thank God.\n\n\"Damn man, you look bad,\" Darren told him as he looked him up and down.\n\n\"Thanks,\" Brandon replied, looking around him.\n\n\"He's in the backyard,\" Darren said, knowing who Brandon was searching for. \n\n\"Man up,\" Darren said while patting him on the back and pushing him towards the deck doors.\n\nWhen Brandon and Darren walked out into the backyard, for the briefest of moments, everyone was silent. The chatter started back up instantly, and Brandon assumed it was about him. Fuck, he needed a drink.\n\nHe scanned the back yard looking for Sienna. He spotted her by her father and the LT. They had both stopped talking to look at him. Brandon quickly looked away and went to tag along with Darren as he entertained a new group. \n\nChris considered himself a reasonable person. He had always remained calm and tried his best to be fair in all situations. BUT, he knew that Brandon's presence was causing the Commander's party to become awkward. Chris wanted him to leave. Maybe more so for his own personal reasons, but he felt that Brandon didn't belong here.\n\nPlus, he was little more on edge than he normally would be after finding out about Sienna's pregnancy. He was sure that Brandon was over the moon about it, since that now meant she wouldn't be leaving for school. Well, fuck that!\n\nHe got up from his chair and started making his way over toward Brandon. \n\nSienna noticed out of the corner of her eye, Chris easing closer and closer to Brandon and Darren. She tried to listen to what her father was saying, but her eyes kept drifting towards what was unfolding.\n\nChris stepped up directly behind Brandon and tapped him on the shoulder. Brandon slowly turned around, narrowing his eyes at him and frowning. Chris swallowed hard at that moment. He didn't really know what he was going to say, but he felt someone should confront the pink elephant in the room.\n\n\"What?\" Brandon asked him.\n\n\"So, when does Sienna leave for Spelman?\" Chris asked. He had no idea where the direction of this conversation would be going.\n\n\"She's over there, why don't you ask her?\" Brandon retorted, and turned back around.\n\n\"Because, I'm asking you,\" Chris countered.\n\nDarren's eyes widened. Brandon slowly spun back around with a confused look on his face.\n\n\"Chris, that's your name, right? What the fuck do you want?\" he asked heatedly.\n\n\"School is important to her. And I don't want her throwing it away. Maybe you can persuade her not to.\"\n\nBrandon squared his shoulders with Chris, \"Maybe you can mind your own fucking business.\"\n\nDarren started scooting in between them. \"Hey, it's the Commander's party. Let's keep it friendly. Chris, why don't you see if they are ready to eat now, okay?\" he said, trying to make peace, while giving Chris a stern look.",
        "Sienna and Jackson ceased their conversation to see what the commotion was over by Brandon's group. Sienna started making her way towards them, and Jackson followed.\n\nChris ignored Darren's warning look. He wasn't going to let Brandon go that easy. \"I just think that she should make the right decision regarding her future.\"\n\nBrandon was trying his best to keep it together. He was barely holding on, due to the situation with the Commander, Sienna leaving to attend school, and a million other thoughts floating around in his head. He really didn't feel like dealing with this kid's bullshit right now. \n\nSienna reached the crowd, \"What's going on?\" she asked, standing beside Brandon and taking his hand in hers. Brandon's hand squeezed hers tightly. She knew he was trying to calm his temper. She looked up at her dad standing beside Chris. He was also staring at Brandon. Shit.\n\nShe really didn't want this to turn ugly in front of her father's friends and colleagues. But she knew Brandon wanted to punch Chris. Hard. What the hell had Chris said to make him so upset?\n\nChris turned in Sienna's direction. He was aware of the fact that the murmurs had died down, and everyone was silently watching them.\n\n\"I, um, Sienna, I just wanted to make sure that you were making the right decisions for yourself regarding school,\" Chris nervously stated.\n\n\"That's none of your business!\" Sienna hissed at him, her own temper flaring.\n\n\"I know, but I care about you and your father, and I know in your circumstance you might make irrational decisions. Actually, especially in your situation.\"\n\nSienna's eyes widened. Her mouth almost dropped. How did he know? Please God, don't let him say anything!\n\n\"Chris, don't...\" She trailed off, trying her best for Chris to pick up on her signals.\n\nChris ignored her. He stared right at Brandon, \"We both know that when she has the baby, she won't ever leave to pursue her studies. And I'd like to prevent that, and I'm sure you would too.\"\n\nSienna froze. Everything around her began to move in slow motion. She couldn't move, she couldn't talk. She could only stare straight at Chris with anxious eyes. \n\nChris noticed two new things in that moment. Brandon's pissed off expression was wiped clean, replaced by a look of utter shock. And he also took in Sienna's wide frightened eyes starting to glass over. The light bulb clicked, and he realized then that she hadn't told them. Probably any of them. Fucking hell, he was the world's biggest idiot!\n\nJackson glanced down at his daughter, and saw in her tearful eyes that what Chris had just divulged was confirmed. Damn.\n\nJackson turned and walked past everyone, and entered the house, slamming the door behind him in the process.\n\n\"Daddy, wait, I...\" Sienna tried to yell, following her dad, when Brandon pulled her back to him. He stared down at her, but didn't say anything.\n\nSienna knew he would be pissed, but she shrugged him off and ran into the house after her father. She found him in his study looking out of the window, his back tense and arms braced against the frame.\n\n\"Daddy?\" she whispered. He didn't turn around.\n\n\"Goddamn it, Sienna. Are you so set on ending up like HER? Over a fucking man,\" Jackson muttered to himself, shaking his head.\n\n\"Daddy, I--,\" Sienna started, but stopped when she heard Brandon enter.\n\n\"Sienna, let's go. I have to talk to you now,\" he said. His tone was clipped and cold.\n\n\"Sienna, you don't have to move from that spot,\" Jackson returned, spinning around to face Brandon.\n\nAt that moment, Darren and Lori came rushing into the study. Darren took in the scene unfolding before him. He hated to see them squaring off like this. He knew this was killing Brandon. Brandon used to tell him all the time when they were younger different things that the Commander had passed on to him. Rules to live by and just tid bits that a father would impart upon a son. And Brandon would report them back to him as if it were the Gospel. He stared between the two of them now, not believing that it had come to this.\n\nBrandon narrowed his eyes at the Commander as he grabbed Sienna's hand about to pull her away.\n\n\"Let. Go. Of her,\" Jackson quietly said. \"She's MY child.\"\n\n\"And she's carrying MY child!\" Brandon spat back at him.\n\nJackson opened his mouth, then closed it back. He had let one man come in between his family before, and that one took his wife. He would be DAMNED if another came in and took his daughter. This was going to end now!\n\n\"Darren, Lori and Sienna...you can leave. Brandon and I are going to handle this once and for all,\" Jackson said cooly, never removing his burning glare from Brandon.\n\n\"Daddy, that's not--\" Sienna tried to get out, but Darren practically picked her up and pushed her and Lori out of the study.\n\nSienna stared at Brandon's back as it disappeared through the slit in the door. God, she felt so miserable at that moment. Her body felt like a thousand pounds had been piled on top of her.\n\nChris felt like an A class douchebag. He couldn't believe he had started this whole thing. He never thought for one second that Sienna would have kept this a secret from Brandon. If only he would have kept his fucking mouth shut.\n\nHe stood staring at the group of three huddled by the study doors. As soon as Sienna saw him cowering over in the corner, she walked up to him. He noticed the large tears brimming on her eyelids, threatening to slide down.\n\n\"Sienna, I'm so--\" was all that left his mouth, before her hand came swinging across his face with a loud crack. His head snapped to the side and his cheek immediately began to sting.\n\n\"Don't you ever talk to me again!\" Sienna yelled at him. She turned on her heels and joined the group again.\n\nChris looked over at Lori. She had a forgiving look on her face as she shrugged her shoulders. Darren was also staring at him like he wanted to do the same thing Sienna had just done, but worse.\n\nShit, maybe it was time for him to go home, now that he had made a mess of things. Chris slowly walked up the stairs to the guest room and began packing.\n\nJackson stared at the young man before him. So much had changed about Brandon, yet so much had stayed the same. He remembered when he had patience with him and would talk to him through his problems. Perhaps that is what needed to happen now. The two of them shared a common bond in his daughter, and they both knew that this was causing Sienna a great amount of pain. He loved her much more than he loved his pride.\n\n\"Have a seat,\" Jackson said, while going to sit behind his desk.\n\nBrandon hesitated for a moment, but then sat down.\n\nJackson sighed, and tapped his fingers on his desk. \"Brandon, you have to understand where I'm coming from. A little over two and half months ago my daughter was turning 18, she was living at home with me and we had a great relationship. She was heading to Spelman in the fall and only had an innocent crush on you. Now she's moved out, hates me, pregnant and obviously not going to Spelman and her sex life with you has been the hushed topic of conversation on the base. So you have to understand, this has all thrown me so quickly.\"\n\nBrandon leaned back in his chair. He was trying his best to take in what the Commander had said and see his point of view. But Brandon no longer wanted to argue with him. He was going to lay it all out on the table, and see where that placed their relationship. \n\n\"Sir, I don't really know what to tell you other than I love her. More than anything in my life. I would do anything for her. And I'm sorry that everything has turned out this way. It was never my intentions. And I tried to stay away from her, sir. I really did. But it didn't work, and now I can't be without her. And I'm sorry this was done behind your back. I really was going to sit down and have a man to man discussion with you, but I'm guessing you found out before I could.\"\n\nJackson listened carefully as Brandon spoke. This was all information he should have listened to first before he went on a crusade against him and banning him from his house and his daughter's life.\n\n\"Brandon, I just want her to have the best life possible. One very different from her mother's,\" Jackson said quietly.\n\n\"I know you think I'm trying to take her away from you, but I'm not. She loves you and you have no idea how this is killing her. She's not her mother, sir. I spent more than half my life trying to push people away, because it was easier than having them leave me. Because I knew they would eventually. They all did. Abandonment is a feeling you just don't shake once it's happened to you. So I know how you feel, sir, considering that's exactly what her mom did. But the way I look at it is, you wouldn't be losing a daughter, you'd be gaining a 'sorta' son and grandchild.\n\nJackson looked up at Brandon when he made his last statement. Jackson had never really thought of that. He was surprised how quickly that put his mind at ease. He would love to welcome his 'son' back into his life. And a grandchild? Man, this was all happening so fast. But then he thought about the fact that Brandon's look of shock outside mirrored his own.\n\n\"Did you know?\" Jackson asked.\n\nBrandon shook his head. \"No fucking clue, sir. But can I ask your permission to find that Chris kid and punch him in his fucking face?\"\n\nJackson chuckled, \"Well, I have to return him in one piece to my friend, so probably best to leave him alone.\"\n\nBrandon stood. \"So sir, is everything okay between us? If I come back over here, you won't call Shore Patrol on me, right?\" he joked.\n\nJackson thought about it. \"Yes, if you promise not to break my door again.'\n\nBrandon lowered his head and laughed. \"Fuck, sorry about that sir. I swear to God, I barely remember doing it.\"\n\nJackson smiled up at him. \"That's alright. I'm going to be adding a pool to the backyard next year. You stop by and help every now and then and keep me company...and we'll call it even.\"\n\nBrandon smiled, and shook the Commander's hand. \"Deal.\"\n\nAs Brandon turned to leave, Jackson called his name.\n\n\"Yes, sir?\"\n\n\"May you have a healthy, beautiful baby\u2014girl,\" Jackson said with a knowing grin.\n\nBrandon wiped his hand over his face and groaned. A girl? Oh fuck no. He probably really would then go to jail later in life. He gave the Commander a weak smile and then walked out.\n\nSienna, Lori and Darren, all had their ears plastered to the door when Brandon opened it and walked out, but the thick oak door hindered any conversation they could have overheard. Darren had tried to listen out for any punches being thrown and furniture being pushed, but luckily, it seemed it hadn't come to that.\n\nSienna tried to smile up at Brandon, but it quickly faded when she saw the expression on his face. He narrowed his emerald eyes at her. \"Let's go,\" he barked, as he sped past them and out of the front door.\n\nIn the Jeep, Brandon hadn't uttered a word to her. He just kept speeding by everything. She knew it was only a short trip from her house to Brandon's, but he seemed to be taking a longer route. She turned to say something to him, anything to break this painful silence, but she looked at the hard set of his mouth and jaw, and she thought it best to close her mouth. She noticed that his knuckles were turning white from gripping the gear shift so tightly. Yes, it was best she not say a word.\n\nAfter a few minutes of circling around his neighborhood, Brandon pulled into a large empty parking lot behind a shopping center. He parked the Jeep, removed the keys and got out.\n\nBrandon was trying his best to keep it together. He didn't know what he felt at the moment. He was shocked and ecstatic about the news of his baby, but on the other hand he was beyond pissed off because she had apparently told others about it, including that Chris asshole, but had failed to mention it to him.\n\nHe placed his hands behind his head and blew. Counting backwards was definitely not going to work this time. \n\nHe heard the Jeep door open and close and her high heeled sandals clicking on the pavement toward him. When he felt her right behind him, he turned around to greet her unsure eyes.\n\n\"So, you're pregnant.\"\n\n\"Yes.\"\n\n\"How far along?\" he asked, lowering his gaze to her midsection.\n\nShe placed both hands on her stomach by reflex, \"8 weeks now.\"\n\nBrandon jerked his head up. Two months. Two fucking months. \"And how long have you known?\" Sienna glanced over to the side of the building where a few employees were walking out laughing. She didn't want to look at him. She couldn't. \"I found out the day after you left for your mission.\"\n\nBrandon slowly shook his head. \"So you've known for over two weeks now, and you never thought to tell me? I mean, you obviously found time to tell others. Just not me.\"\n\nSienna stared down at her feet. She was trying to scroll through her brain what her reasoning was for NOT telling him. But the only reason she had, she was scared to death to tell him that one. \n\n\"Sienna, look at me,\" she heard him say. She glanced up. \"Why didn't you tell me?\"\n\n\"Brandon, so much was going on. I was still trying to deal with it all, and I was worried about you being gone on assignment, and I was worried about my dad. Plus, trying to figure out the whole school thing, and--\"\n\n\"Why--didn't--you--tell--me?\" Brandon asked, cutting her off.\n\nSienna could feel the sweat beading above her brow. She was starting to feel sick again. But she had lied to him enough and now she wanted to be open with him, even if that meant he would hate her. God, she really didn't want to say it though. But she really didn't have a better excuse to give him. Her heart began to thump in her chest. Here goes...\n\n\"Because I--I, wasn't su--sure, um, I mean, I'm not sure if-if I'm keeping it,\" she said so low, she was sure Brandon couldn't hear her.\n\n\"What did you say?\" Brandon asked, folding his arms across his chest and taking a step closer to her. He knew he couldn't have heard her right.\n\nSienna knew Brandon would never hit her, but she instinctively took a step back and looked up at him.\n\n\"I, uh, I'm not sure if I'm going to have the baby,\" Sienna repeated, searching his eyes for any sign of understanding.\n\nBrandon's mouth dropped. He tried to say something, but no words came out. He glared at her for what felt like forever. But he didn't say anything. He just stared. After a few moments, his mind registered what that meant exactly.\n\n\"You weren't going to tell me at all?\" he whispered to her, while his throat began closing on him.\n\nSienna saw all of the hurt she had just caused him on his face. His pained expression was killing her. He looked as though he had just been stabbed in the back. Like he had caught her red-handed with another lover or something. \n\nSienna sighed. \"If I got the abortion, no, I wasn't going to tell you. I'm so sorry Brandon.\"\n\nBrandon stared at her again, his eyes pleading, praying that this was some sick, twisted joke. That she couldn't be that heartless. But after a few more minutes went by, he knew this was for real. He felt his chest tighten. He swore he was suffocating. He lightly rubbed his hand over his chest and stepped back. \"Wow,\" was all he could think of to say. \n\nSienna felt like shit. No, worse. She wanted to hug him and tell him that she was so sorry, but sorry just didn't seem to really cover it, judging by his reaction. He turned from her and marched back to the Jeep.\n\nHe didn't say a word to her on the way to his house. He didn't so much as glance in her direction.\n\nWhen they got back, she got out, but before she could even say anything he backed the Jeep out of the driveway and tore out down the street. \n\nSienna stood there, as she saw his Jeep disappear around the corner. Finally, the tears started pouring.\n\n**********************\n\nSienna was sitting at the kitchen table, staring at every dark line in the wood. She hadn't eaten or slept since she last spoke with Brandon. It was now 2:15 in the morning, and still no word from him. She was slowly driving herself crazy.\n\nShe had called his cell phone several times, but it would ring and ring and then force her to leave a message. After the seventh time she called, it no longer rang. Just went straight to voicemail. \n\nBut now, it was so late, she couldn't take it anymore. She had to talk to him. She decided to call Darren. Her heart skipped a beat when he finally picked up. She could barely hear Darren above the noise in the background, but she got enough information to piece together exactly where they were. A small bar & grill on the outside of town called Sweeney's. \n\nSienna tried to wait patiently in the driveway for Lori to come pick her up. She had gotten used to bumming rides off of Lori since her dad had taken her car when he first found about her relationship with Brandon. But now, it had just been sitting in her father's driveway, and she kept forgetting to bring it over to Brandon's.\n\n\"Do you want me to go in with you,\" Lori asked, as they pulled up at the dark dingy bar.\n\n\"No, I'm fine. I'll ride home with him.\"\n\nWhen Sienna entered the bar, she immediately spotted Darren and Brandon. They were sitting at a booth in the back with another Seal she had seen at her father's birthday party earlier, and two women. Sienna's eyes lingered on the woman sitting next to Brandon. She was sitting a little too close and laughing loudly at something he was saying to her. Sienna's skin felt like it was crawling. \n\nShe walked over to the booth with her head held high. She saw Brandon look up at her as she approached the group.\n\nBrandon chugged down the last of his beer and chased it with a shot, then called the waiter back over to the table.\n\n\"Hey, we need another round for the whole table. Jack, this time,\" he said, as he slammed some money down.\n\nSienna could tell by the redness around his eyes, that he was getting shit faced. Completely. Which made her feel even worse about everything.\n\n\"Brandon, can I talk to you?\" she tried to shout above the loud music.\n\n\"Well, I don't know Sienna, can you? I mean, can you really talk to me?\" he retorted, while taking down another shot. \n\nSienna glanced over at Darren, who was sitting on the other side of Brandon. He looked really uncomfortable. The woman who sat closest to Brandon, had dark brown hair, and a thin face with icy blue eyes. She was staring at Sienna with a bored expression, while she tapped her long fake fingernails on the table.\n\nSienna tried to ignore her. \"Brandon, I really want to--\"\n\nBrandon slammed his hand down on the table again before Sienna could finish her sentence. \"Okay, I want to take a quick little survey here. I'll start with you lovely ladies, um..what were your names again?\" he asked, while smiling at the two drunk females.\n\nBoth of the women giggled and looked at each other, as if they were trying to remember their own names. The brown headed one spoke first. \"I'm Lisa and she's Carrie. And you're BT,\" she squealed.\n\nBrandon snapped his fingers, \"That's right! Lisa and Carrie. Okay, I'll ask you girls first, then I'll ask my boys over here.\"\n\nLisa shook her hair back, and leaned in closer to Brandon, as she appeared to pay close attention to him.\n\n\"Okay...if you found out you were pregnant, would you tell your boyfriend? Let's say this boyfriend loved you more than anything! I mean this fucker is crazy about you! Pretty much already proposed to you. Would you consider sneaking off and having an abortion behind his back and not tell him?\" Brandon said, as if he couldn't believe it.\n\nLisa immediately answered, \"No, absolutely not. If I had a man like that, hell no. No real woman would.\" And she turned to sneer at Sienna. \n\nSienna felt like her face was on fire.\n\n\"I don't think I would, but guess it just depends on the circumstances,\" Carrie chimed in. She didn't seem as enthusiastic as her friend.",
        "\"Great answers. Okay gentlemen, you're up. Same situation...would you be pissed if your girlfriend who you are so fucking in love with thought about getting an abortion behind your back and not even tell you?\"\n\nJohn looked nervously at Sienna and then back at Brandon.\n\n\"Um, yes, I think I'd be pretty pissed.\" \n\n\"Yep!\" Brandon said, as he took another shot. \"Okay Darren, you're up.\"\n\nDarren stared at Brandon and then looked at Sienna. Her eyes were glassing over and she stood there so fragile and hurt, he felt himself getting angry.\n\n\"I'm not answering,\" he said, as he took a sip of his beer and stared over at the bar.\n\n\"Yes, you have to fucking answer.\"\n\n\"No I don't, and I'm not. It's none of my fucking business.\"\n\n\"Fuck it, we are 3 out of 4 at this table, and including my vote, that makes if 4 out of 5,\" Brandon said, while looking around the booth.\n\nThen he glared up at Sienna. \"Because I just wanted to make sure I'm not overreacting. You know, that I'm not a fucking lunatic to think that the woman I'm so fucking in love with could even think to do to that to me. Just checking.\"\n\nEveryone at the table remained silent. The tense atmosphere caused Carrie to nervously snort, but then she quickly looked away. \n\n\"But now that it's all been cleared up,\" he said, while kicking the chair at the end of the booth out toward Sienna, \"take a load off.\"\n\nSienna stood there digging her nails into the palm of her hand. She was so hurt and embarrassed. She couldn't bear to look at the faces of the others crowding the booth, so she continued to stare at Brandon. She knew the second she blinked; they would all see a huge tear roll down her saddened face. She was trying her best to keep it together, but she was quickly losing that battle.\n\nShe wasn't sure what to do. Should she turn and walk out? Or stay, and fight through the tears and explain to him her thinking. Or just apologize? She opted for choice number one.\n\nSienna quickly turned and walked to the exit. As soon as she did the tears started cascading down her face. She felt her breath getting caught in her throat as she hiccupped a string of cries all the way outside into the parking lot. She had no ride, but she didn't even care about that right now.\n\nShe tried to cover her mouth to muffle her cries, but it didn't do much good. Her whole body was shaking from the momentum of each heaving breath. \n\nShe felt someone grab her from behind, and for a moment she prayed it would be Brandon, but when she turned around, it was Darren.\n\nShe didn't mean to, but she grabbed him and buried her tear streaked face into his chest. He lightly hugged her back.\n\n\"Sienna, he's fucked up and hurting right now, okay,\" Darren tried to offer her, in a soothing voice.\n\n\"I'm--, I'm so\u2014so sorry,\" Sienna choked out.\n\n\"Hey, he'll get over it, okay,\" he said.\n\n\"Ah, now that's a nice picture.\"\n\nDarren and Sienna both turned to see Brandon walking out of the bar heading toward them.\n\n\"Darren, my man, always taking care of her for me,\" Brandon spat sarcastically, as he gave them a smile.\n\nDarren let go of Sienna. \"I'll head back in and let you two talk.\"\n\n\"No, stay, I'm sure Sienna would want you to,\" he said to Darren as he stared at Sienna.\n\n\"Oh man,\" Darren muttered to himself. He knew where this was going. Fuck, he knew he shouldn't have come outside to follow her, but he wanted to make sure she was okay. \n\n\"I mean, she tells you more than she tells me. Maybe you have some new info for me. Did you know she was pregnant?\"\n\n\"No,\" Darren answered.\n\nBrandon stood there staring back and forth between the two. He couldn't begin to tell them how much pain he was in now. This was worse than anything he had ever felt in his life. His mind was spinning in several different directions at the moment. He wanted her to feel as much hurt as he had.\n\n\"Brandon, can we go home and talk about it, please?\" she asked him in a small voice.\n\nBrandon felt crazy at the moment. A small grin made its way to the corner of his mouth. \"If we went home together right now, what would you do for me to make up for being a lying bitch?\"\n\n\"Hey,\" Darren said. Brandon ignored him.\n\n\"Seriously, what would you do for my forgiveness right now? I can think of a few things. None of them too pleasant for you, but I would enjoy it. Come on, I'm sure you can think of something. You offered sex to me last time you lied to me, so don't act like it's something new.\"\n\nSienna quickly glanced at Darren and lowered her head. She didn't want to do this in front of him. \n\n\"BT, come on man,\" Darren said, trying to stop this attack on Sienna's character.\n\n\"Nah, you should see this girl in action. Come on Sienna, tell me how you would fuck me to make up for being deceitful.\"\n\nSienna couldn't believe what he was saying. She had never been more humiliated than she was right now. Brandon usually protected her from people saying things like this, but now he was saying them. She felt so confused and hurt. She didn't know what to do. So she stood there, biting her lip and wiping at her tears.\n\nBrandon shook his head and pulled his keys out of his pocket. He knew he had crossed the line, but whatever. He wanted to. To make her feel like shit, so she could join his club.\n\n\"You know what's crazy? There isn't a single Goddamned person who shares the same blood as me that gives a shit about me. Not one. And you know what, I'm okay with that. Whatever. But, I find out that I could have that, someone who's related to me who could actually care, and you want to take that away from me? The fact that the thought even crossed your mind NOT to tell me, is what fucking slays me,\" Brandon said.\n\nSienna felt the tears welling back up again. She couldn't feel any lower than she did right now.\n\n\"But you know what, it's your body, right? So fuck me,\" he said as he turned and walked toward his Jeep.\n\nDarren and Sienna watched in silence as he sped off. Sienna turned and threw up on the ground. \n\nShe felt so sick, but in her mind, she felt like she deserved it. Or worse.\n\n*\n\nHope you all enjoyed, and looks like it will be 8 chapters after all. Maybe even 9:-)\n\n--Soular "
    ],
    "authorname": "soular",
    "tags": [
        "navy seal",
        "interracial romance",
        "interracial novella",
        "commander",
        "interracial drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/damn-dress-a-love-story-ch-07"
}