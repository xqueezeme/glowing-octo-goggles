{
    "title": "Damn Dress: A Love Story Ch. 05",
    "pages": [
        "The car ride on the way home from the Veterans Ball was a quiet one for Jackson and Chris. Neither one knew what to say to the other. Chris stared out the window and Jackson kept his eyes on the road.\n\nJackson remembered the first day he had seen Brandon. Tall, lanky kid who literally got off the bus with a scruffy bag on one shoulder and a huge chip on the other. Jackson couldn't figure him out. He had volunteered, yet he acted like being there was something he didn't want to do.\n\nJackson believed that is what initially intrigued him about the young man. He looked over Brandon's files. Born and raised in Boston, father unknown, mother gave birth rights over to her sister and her husband when he was six. He had a few hospital records. Broken arm, bruises, stab wound to the left shoulder. Jesus, this kid had been through quite a bit.\n\nSo instead of going the old \"hard ass\" Lieutenant route, Jackson was nice yet stern with Brandon. It seemed to break down a few walls this kid had up that no one else could get through.\n\nJackson had never had a son, and figured if he had, his would have been very different than Brandon, but there was something about this kid that touched him. And he was so serious all the time, but when he smiled, it would make whoever was around want to smile too. Why the hell had everything gone so wrong?\n\nWhen Jackson and Chris reached the house, Chris turned to him and asked, \"Do you want me to go look for her?\"\n\nJackson sighed and shook his head 'no'. \"She's with him. And he can get out of control sometimes. I wouldn't want anything to happen,\" he said, exiting the car.\n\nThis was killing Chris. He wanted to go find her. He didn't want her being hurt. He had seen how she crumpled to the floor when he had taken the phone away from her at the hair salon, and how devastated she had looked when she saw Brandon earlier tonight with another woman.\n\nWhen they entered the house, Jackson walked into his study and shut the door. He sat down and put his head into his hands. He just wanted everything to stop. Or for things to go back to a more comfortable time. When Sienna was a young girl, and Brandon was a young hot headed kid who would listen to his every word.\n\nWhy couldn't he turn back the hands of time to those days? Before shit got so complicated.\n\nBut there was something else plaguing Jackson. He had tried to block it out, but he had heard Brandon say it loud and clear. 'You don't want me as a part of your family anymore, huh?! Well, I just might be in nine months, motherfucker!'\n\nJesus, all of this was happening way too fast. Sienna had just delivered a massive string of tantrums because he threatened to pull her tuition, yet obviously, unless Brandon was bluffing, she might not even be going to school due to other complications. He was so confused. He couldn't think about that anymore.\n\nBut deep down Jackson had to face what he feared the most. Why he objected to Sienna and Brandon's relationship. In Sienna, he saw his ex-wife. Someone who made impulsive decisions without thinking and ruined their family. Over his dead body, would be the only way Sienna would follow that path.\n\n***********************\n\n\"Screw your stupid ass friend!\" April hollered across the crowded bar to Terry.\n\n\"Honey, in this crowd, you're going to have to be a little more specific,\" he laughed in her direction, while taking another sip of his beer. He had a lousy time at the veterans ball, and stopping at the usual dingy bar seemed like a welcome change to the stiffs he was forced to be with earlier that night.\n\nApril staggered over to him, obviously drunk out of her mind. She tried to lean against the counter but fell more on Terry than her intended target.\n\nTerry gazed down at April's sweaty smiling face. She was a pretty woman. Well, when her hair wasn't matted and her eyes weren't blood shot red from drinking.\n\n\"So what's new, April?\" Terry asked, taking another sip.\n\n\"I hate BT. He's such a piece of shit!\" she slurred, while almost slipping off the counter again.\n\n\"What has captain crazy done to you now?\" Terry inquired, turning back to nurse his beer, completely uninterested. Nothing April ever said was worth anyone's time. Now if she took her top off and told him, maybe he'd be a little more enthusiastic to hear.\n\n\"I can't believe, he is--he is, um, so fucking stupid. He kicked me out of his house for--for that young black bitch! Ain't she related to someone high up or somethin'. Little slut,\" she slurred, eyes half closed.\n\n\"What are you talking about?\" Terry turned to her a little more interested since he believed that it was Sienna she was referring to.\n\n\"She shows up at his doorstep (hiccup), no doubt a few minutes too early for their little(hiccup)--little, whatever the fuck they have. I think it was her birthday. Yeah, eighteenth. Anyway, after that asshole fucks me, he picks her up and walks her back to his room and kicks me out!!\" she yelled.\n\nTerry's mind started rotating and plotting. He remembered all those years ago when he first met Brandon Temple. Immediately, he didn't like him. He just seemed too fucking cool and crazy. That kind of guy you wish you could be if you weren't scared of consequences. Terry knew it was probably jealousy that coursed through his veins, but he didn't care.\n\nAnd for some reason, girls seemed to love BT. They would flock to him in any bar, in any country they traveled to. He'd act so uninterested in them, but their panties seemed to drop. Clever, how that worked.\n\nBut most of all, Terry hated the way the Commander seemed to love everything about Brandon. He'd seen BT fly off the handle more times than he could count due to his temper, but Commander Branson was always there to back him up.\n\nOnce they were on a mission, and they had been given direct orders not to get involved in any civilian warfare. They were there for a specific reason, and they had to get out once their mission was complete.\n\nThey had come across two men who were beating this young female and ripping her clothes off. Terry wasn't going to lie, it was hard to watch, but that wasn't a part of their mission. Commander Branson told them not to engage.\n\nBut out of the corner of Terry's eye, he saw Brandon raise his gun slightly and pulled the trigger twice. In an instant, both of the men's brains exploded onto the back of the wall and the young girl took off running and screaming.\n\nCommander Branson had seen it too, but when they got back to base for their debriefing, Brandon got away scott free. That had bothered Terry. A lot. He figured if another man had done it, the Commander would have had his ass for disobeying a direct order. But BT was special for some fucking reason. He truly resented that.\n\nAnd it wasn't just those moments. Terry recalled another time when he had been flirting with this hot little waitress at a local bar. He was checking his jeans to make sure he had a condom, when he saw BT walk up to her, whisper something in her ear, and the girl followed him out. Terry was literally standing there with the world's hardest hard on watching Brandon score with the woman of his dreams. Or at least the woman for that night.\n\nOh yes, that happened more times than he wanted to admit. Including with Terry's own on and off again girlfriend, Alice. She had wanted BT, but settled for him instead. But he still believed that Brandon had fucked Alice. He couldn't prove it, but she seemed to get flustered whenever she saw BT or when Terry mentioned his name. Slut probably did, now that he thought about it.\n\nHe wished he could just grow some balls and confront BT, but that was easier said than done. BT was an intimidating guy. When you call his name, and he turns to you, nailing you with his glare, you forget what the fuck you were going to say. So Terry never got up the nerve, and BT thought the two of them were friends, so probably better left unsaid.\n\nMaybe they were friends, but Terry wanted for once, Brandon to get what should have come to him a long time ago. Payback was definitely a bitch.\n\n\"So, you sure this was the day of her eighteenth birthday? Could it have been earlier?\" Terry asked, bringing his wandering mind back to the present and April's long, rambling story.\n\nHe looked down at her, and she was asleep on his shoulder and drooling. He quickly nudged her off. \"Wake the fuck up.\"\n\n\"Hey, what the hell?\" April yelled, almost tipping over.\n\n\"Could it have been before her eighteenth birthday?\" he asked again.\n\n\"Um, no, I don't think so. I don't know, I was kinda out of it, you know. No, it was definitely her birthday. Or someone's birthday,\" April answered, scrunching her nose up trying to remember.\n\n\"But it COULD have been earlier, right? I mean, did the two of them seem to already have a relationship? Did he sleep with her that night?\" Terry prodded on.\n\nApril just stared at him as if she didn't understand the question.\n\nTerry continued, \" I mean, you said he picked her up against her will and drug her into his bedroom and slammed the door, right?\"\n\nApril furrowed her brow. \"Um, did I say that? I don't think she didn't want him to though. I don't think anyway.\" April was officially confused at this point.\n\n\"But she could have said no though, right? And it MIGHT have been before her birthday. I mean, if she's coming to his place in the middle of the night, that was probably more than a one time type of deal, right?\" Terry encouraged.\n\nApril just stared at him blankly. \" I guess so,\" she said.\n\nTerry also thought about BT fucking Sienna. That made him angry and horny. He had a thing for the Commander's daughter, even when she was underage. He had known that Sienna had a crush on Brandon. Hell, they all did. But Terry wouldn't have minded spending a few nights with her. She just had that thing about her. Like she was wanting it. And Terry was more than willing to give it to her.\n\nSure, he pretended to be her friend, but mostly he would just stare at her when no one was looking. And a few months ago, he had blocked his number and started dialing her cell phone several times. She would answer and he'd hang up. He knew it was crazy, but he didn't care. It didn't have to make sense. But now that little bitch would pay for driving him crazy all of these years.\n\nThe wheels in his head were turning in overdrive. If he could pull this grand scheme off, and remove Brandon from the picture, then maybe Sienna would come running into his arms for a change. \n\nHe thought it might not be a bad idea to take poor April to a hotel for a few hours tonight, before he made an early trip to Shore Patrol.\n\n*****************\n\nOfficer Silas was sitting at his desk about to pour a shot of bourbon into his early morning coffee when the receptionist said he had a visitor.\n\n\"Fuck,\" he muttered under his breath. He just prayed it wasn't his ex-wife. It was 5:30 am. Way too early in the fucking morning to be dealing with her never-ending array of bullshit.\n\n\"It's Terry Winstead, sir,\" his receptionist yelled from the front.\n\n\"Who? Oh, nevermind, send him in,\" Silas said, while swishing around his 'coffee'.\n\nTerry entered into Silas's office like a man on a mission. This had to work, because if it didn't, this would be his ass on the line.\n\n\"Hi, son, come on in,\" Silas said while putting his feet up on his desk. He noticed Terry was still in his Dress Whites from the Veterans Ball the previous night.\n\n\"Thank you, sir,\" Terry said nervously.\n\n\"So, what can I do for you?\"\n\nTerry was about to get up and walk out. This was crazy he thought. He wasn't sure if he could go through with it. But then he thought of that prick getting everything he wanted, AND getting Sienna on top of that.\n\nFuck that. Yes, he could do this.\n\n\"Sir, this might come as a shock to you, but I have some pretty damaging information,\" Terry said.\n\nThis piqued Silas's curiosity. Most of his work consisted of drunk naval officers, never anything worth getting out of bed over.\n\n\"Shoot,\" Silas said as he took a sip of his drink.\n\n\"Well sir, do you know of Brandon Temple?\"\n\nSilas rolled his eyes. Prick. He didn't dislike the kid, but that scene he had pulled in the Commanders yard was unacceptable. And his fucking car window!\n\n\"Yeah, I know about him. What's he done this time?\"\n\nTerry cleared his throat. \"This is hard to say since he's a friend of mine, but I can't hold this in any longer. He has been having a sexual relationship with Commander Branson's daughter, Sienna,\" Terry quickly said, while shaking his head.\n\n\"Well, that's a personal matter between the Commander and Brandon. None of my business.\"\n\n\"Would it be your business if she were only 15 or 16 when it started?\" Terry asked.\n\nSilas stared at Terry for a moment. He slowly removed his feet from the desk and sat up straight in his chair. His eyes narrowed at Terry.\n\n\"You know, this is a matter for the local police. I mean, we help out when we can, but our main objective is to keep sailors from getting too rowdy. Not something this heavy.\"\n\n\"I know sir, but I kinda wanted to keep it with us, you know. Plus, I know you can use a little discretion, unlike the police,\" Terry said.\n\nSilas leaned back in his chair. \"That's a pretty harsh accusation there, son. You have proof to any of that?\" Silas asked.\n\n\"Well, I have a witness. She saw Brandon drag Sienna to his room after a party when she was underage,\" Terry said with disgust.\n\nSilas raised an eyebrow.\n\n\"I mean, he's my friend,\" Terry continued sadly. \"But I can't let him get away with hurting such a sweet, innocent girl like Sienna.\"\n\n\"Do you think you could get this witness to come in and recount their story to me?\"\n\n\"Yes, absolutely. I can send her in now, if you want. She's here with me,\" Terry added.\n\nSilas nodded his head, \"Send her in.\"\n\nSomething seemed really weasley about that kid. He didn't want to say he was lying, but if Brandon was his friend and comrade, he wouldn't have snitched on him.\n\nSilas wasn't sure what was going on, but those allegations were serious enough that he couldn't sweep them under his desk. He had to deal with them. And that meant bringing that prick into his office, and he was sure Brandon wouldn't come in without a fight. Shit.\n\n**********************\n\nJackson couldn't sleep. He had been tossing and turning all night. He looked at his clock. It read 6:32 am. Damn.\n\nHe decided to get up and and go downstairs. He fixed himself a hot cup of coffee. He leaned against the counter about to take a long sip contemplating on his next step to handle this whole Brandon/Sienna situation, when his phone rang.\n\n\"Hello?\" Jackson said.\n\n\"Hi sir, it's Silas over here at Shore Patrol. I have a situation on my hands, but I wanted to run it by you so you'll know what's going on. And sir, I need to tell you now, I can't cover his ass on this one. I have to report it due to the seriousness of the matter. And truthfully, if it all rings true, I'll have to hand this over to the police.\"\n\n\"You have to report what?\" Jackson asked, slightly irritated that he was receiving this call so early in the morning.\n\n\"Well sir, Brandon has been accused of statutory rape, and sexual assault.\"\n\nThe Commander shook his head for a moment, stunned.\n\n\"What?!\" he asked\n\n\"He was accused by someone with rape of a minor,\" Silas said cautiously. \"And sir, they are claiming that the person he raped was Sienna.\"\n\nJackson couldn't say a word.\n\n\"Hello? Commander?\" he heard Silas say on the line, but he couldn't talk just yet. It can't be true. Someone who knows for sure? Brandon had said that he never touched her until she turned 18. Not that knowing that was comforting. But deep down Jackson had believed him. And now it might have been forced? Oh God, the shit was about to hit the fan. No, break the fucking fan.\n\nThe Commander was a good man. He respected all people. And if it were up to him, they would all be out of the job if he could enforce world peace. He believed in all of that corny doves and holding hands stuff. But...if that son of a bitch hurt his baby...especially when she was too young to do anything about it, under his own roof, no holding cell would keep him out and he would rip his fucking balls off and shove them down his throat.\n\n\"Commander?\" Silas asked again.\n\nJackson could feel the negative energy flowing through his body. \"I'm here. I'll be down there in a few minutes. Is he there now?\"\n\n\"No sir, but I'm having my men pick him up as we speak. I'll try to keep it with our department as long as possible until I can figure out what the hell is going on, but I may not have long. See you when you get here.\"\n\nWith that, Jackson hung up the phone, grabbed his jacket and walked out.\n\nChris hadn't been able to sleep either, and when he heard the Commander downstairs, he was about to join him until the phone rang. He wasn't sure what was said, but whatever it was, he didn't think it was good. \n\nChris ran downstairs and grabbed his keys. He knew the Commander didn't want him to, but he was going to drag Sienna back here, Brandon be damned!\n\n*******************\n\nBrandon was sitting in the small cell area. He was brought in without a shirt, but they supplied him with some ugly brown shirt with numbers on it, but at this point, he really didn't care. He was thinking about the fact that he had actually planned on apologizing to the Commander for his behavior earlier that week. But now...fuck that.\n\nBrandon was trying to think of so many ways to fuck up the Commander's life, it wasn't even funny. He couldn't believe that Commander Branson would stoop so low. To call him a rapist? Oh, his evil mind thought of so much shit. But nothing could fuck with the Commander like his daughter.\n\nIf Brandon didn't love Sienna so much and value his career in the Seals, he would have video taped himself fucking her in every way he could, coming in all 3 holes, and send that shit in an email file to the Commander along with his superiors email addresses. Oh yes, he would think of some way to fuck him up. Was it immature? Yes. Did he give a fuck? No.\n\nBut he'd never in a million years do that to Sienna. That was his heart and he couldn't stand to see her hurt.\n\nAs Brandon was contemplating his master plan, Officer Silas came to his cell.\n\n\"Alright son, you're up,\" he said opening the cell door.\n\nBrandon stretched and walked out. He was so tense, that his back felt like a spring coil. Officer Silas lead him into an interrogation room. Plain, simple white room with bad lighting and a weird mold smell.\n\n\"Water?\" Silas offered Brandon.\n\nBrandon just stared at him.\n\n\"Okay, so let's get to it,\" Silas said, reading Brandon's hostile mood.\n\n\"So, we have a dilemma here. Someone is accusing you of rape. Do you know who would do that?\"\n\nBrandon continued to stare.\n\n\"Well, they are saying you raped Sienna Branson when she was underage. Is that true?\"\n\nStill nothing.\n\n\"Did you have a sexual relationship with her before she turned 18?\"\n\nSilence.\n\nSilas realized he was going to have to go about this another route. He knew Brandon wasn't going to offer anything to him. So, he knew he had to hit a little below the belt to get him to open up.\n\n\"Well, you know when we checked you in, we noticed that you had a white lace thong in your pocket. l'm assuming that belongs to her. Bet you've seen many of hers, right? Now the question is...were the panties for a younger girl or older girl?\" he said smiling.\n\nSilas saw Brandon's jaw twitch and tighten. He knew he was getting to him.\n\n\"I mean, I've seen Sienna. Whew! She's hot! I totally understand the connection there, son. Trust me,\" Silas laughed. \n\nThen he leaned back in his chair and continued, \"I remember this one time, I was on base helping the Commander with a problem, and she came bouncing in. And do mean bouncing.\" He made the emphasis with his hands rounded and over his chest.",
        "\"She ran up to her father to get some money from him and she had on the shortest, tight, white shorts I had ever seen. And the contrast with those soft-looking milk chocolate legs, Goddamn! If someone could have poured some cold water on my crotch right then, I wouldn't have felt a thing!\"\n\n\"What the fuck do you want?\" Brandon gritted through his teeth, finally breaking down.\n\nSilas straightened back up and dropped the smile. \"I want you to tell me what the fuck is going on. Do you have a reason to be here or not?\"\n\n\"That's a question for Commander Branson, not me,\" Brandon answered tightly.\n\nSilas leaned back again. So, Brandon thought the Commander was behind this. This kid needed to keep his enemies close, but his friends closer. Shit, he kinda felt sorry for him for not knowing it was Terry who turned him in.\n\n*******************\n\nChris finally made it to Brandon's house. He had gotten lost along the way, but with the help of a gas attendant and a phone call to Lori, he made it.\n\nWhen he pulled up, he noticed Brandon's Jeep parked there. He was so fucking nervous all of a sudden, but he was determined to knock on the door and give Brandon a piece of his mind.\n\nChris's palms got sweaty and his feet seemed heavy. Okay, you can do this he told himself over and over again.\n\nWhen he reached the front door and knocked, it swung open immediately. But instead of looking up like he was expecting, he looked down at Sienna's tear streaked face. Immediately he went into protective mode.\n\n\"What the hell, are you okay?\" he asked, grabbing her shoulders.\n\n\"They took him!! I don't know where and they wouldn't tell me anything!!!\" she screamed at him as she grabbed him for hug.\n\nChris stood there holding her in his arms for a few minutes trying to figure out what she was talking about. He stroked her back until her sobs died down.\n\n\"Okay Princess, what happened?\" he asked, leading her back into Brandon's house.\n\nSienna sat down on the couch totally distraught over everything that had just happened. She tried to recount for Chris what had just taken place through her heavy breathing and light sniffles.\n\n\"He, he went outside and there were some Shore Patrol officers waiting on him. They said he had to come with them. But they wouldn't tell me anything! They handcuffed him!!\" she said getting upset again.\n\n\"I was going to follow them, but I don't know how to drive his Jeep. It's a stick shift. Can you take me to their offices?\" she asked Chris, her wet eyes full of hope.\n\nThis was not the position that Chris wanted to be in. He was trying to keep her AWAY from Brandon. Not encouraging her to see him. But the way she was looking at him right now, he knew he would cave and take her anyway.\n\nHe at least he could try to stall her. He knew she couldn't be comfortable in the same long gown from last night.\n\n\"Hey, do you want to stop by your house first and change?\" Chris offered, as he opened the door to his car for her.\n\n\"No! I want to get to Brandon,\" Sienna said, buckling her seat belt.\n\n\"Sienna, please, they just took him, right?. Let's just stop by your house first and see if your dad is back. Maybe he can help in this whole situation.\"\n\n\"Or maybe he caused this whole situation!\" she spat back at him.\n\nBut then Sienna thought about it. \"Yes, actually. Do take me to my house.\"\n\nChris didn't understand the sudden change, but he wasn't going to disobey.\n\nAs soon as they reached the Commander's house, Sienna jumped out of the car. She ran up to her room and started packing her clothes. She would not spend another night in her father's house if he was going to play these horrible games. She changed quickly out of her gown and threw on the first thing she could find, which was a teal, thin summer dress.\n\nWhen she came wobbling down the stairs with two heavy suitcases, she saw Chris's face drop.\n\n\"Sienna, this isn't right,\" he quietly said.\n\nSienna walked right past him and threw her bags in the trunk. They passed Brandon's on their way to the Shore Patrol Offices, so she dropped her bags in his room, to complete her mini independence.\n\n*********************\n\n\"Well Brandon, since you said that was a question for the Commander to answer, maybe we should let him. He's here and wants to speak with you. Of course, strictly off the record,\" Silas told Brandon as he stood up and opened the door.\n\nBrandon smirked, \"Well, well.\"\n\nCommander Branson entered the room, staring down the young man, clearly not amused. He was running off of less than 8 hours of sleep in the past 3 days and even less patience. As soon as he sat down across from Brandon, he laid into him.\n\n\"You son of a bitch. Did you--,\" Jackson didn't even want to say it. He wasn't ready to deal with this. \"Did you r-rape my daughter?\" he growled at him.\n\nBrandon just sat there staring at him. Brandon's eyes narrowed. This man who he had treasured and respected for 10 fucking years was turning out to be his biggest enemy. What he did to Marcus was nothing compared to what he wanted to do to the Commander. His ass would be locked up forever, but fuck it, he could think about it.\n\nBrandon had to relax his jaw. He was biting down so hard he could hear his teeth scraping together.\n\n\"What do you think?\" was Brandon's answer for the Commander.\n\nJackson lost it. He jumped up and flipped the table out of the way about to attack Brandon before Silas grabbed him and pulled him away.\n\n\"Stop! This isn't why I let you come in here! Come on, Commander,\" Silas warned.\n\nJackson put his hands up. \"I know, I know, I'm sorry. I'm sorry,\" he said shaking his head. \"I shouldn't have done that. Shit.\"\n\nSilas released him and kept his body between Jackson and Brandon. Brandon remained seated and calm, but Silas noticed the veins bulging in the side of Brandon's neck along with the balled up fists gripping his pants.\n\nJackson stared down at the floor for a few minutes, composing himself. He took a few deep breaths and turned and exited the room without looking in Brandon's direction again.\n\nSilas turned to Brandon. \"Hmm, that didn't go well.\"\n\n************************\n\nOnce Sienna and Chris reached the Shore Patrol offices, she gave her statement to Silas. Unfortunately the Commander had seen her come in and a shouting match ensued between the two of them. Or actually, more Sienna than the Commander. Chris tried to break it up, but Sienna blamed her father for Brandon being held there. Even though the Commander denied it, Sienna wouldn't listen.\n\nTerry had been back in the offices, about to follow up on Brandon's case, when he saw the event between Sienna and her dad unfold. And the poor kid stuck in the middle of it, looked so uncomfortable.\n\n\"Hey, hey, Sienna, calm down,\" Terry said as he barged in on their group.\n\n\"Sienna, I didn't say anything to Silas about Brandon. I've been trying to help him this whole time. But I'm upset with both of you for lying to me,\" Jackson tried to reason with his daughter.\n\n\"Why should I believe you?! You called SP on him once already!\" Sienna screamed back at him.\n\nTerry grabbed her waist and pulled her away. Sienna was crying again. God, she hated being so emotional. She just didn't want to deal with her father right now.\n\nChris saw Terry pull her away, and was two seconds from pulling her back, until she glared over at him and Jackson.\n\n\"Hey, Commander, I'll take her to her a friends house or something to cool down, alright?\" Terry asked, rubbing Sienna's back through her sobs.\n\nJackson felt that maybe that was best. He was so sick and tired of this whole thing. He just wanted to go home and finish some work to take his mind off of all of this.\n\n\"Fine, thanks Terry,\" Jackson said, and he turned and walked out of the offices. Chris hesitated, but then followed the Commander out.\n\n***************\n\nTerry and Sienna were quiet on the way to Lori's house. Sienna was still so upset. She told Silas that Brandon had never touched her, until she was older and legal, but he said since she was the alleged victim and in a relationship with the accused, her statement wasn't necessarily credible enough to let him go. Her mind and body felt so heavy. She knew she was stressed out to the maximum.\n\n\"Hey, do you mind if we stop by my apartment first,\" Terry asked her.\n\nSienna really didn't want to. She just wanted to go to Lori's and cry on her shoulder. But since he was generous enough to drive her, she shook her head 'no'.\n\n\"Thanks, I just have to stop by for something really quickly.\"\n\nWhen they pulled up to Terry's apartment, he got out and ran around the car to open her door. Sienna stared up at him but didn't move.\n\n\"Um, well I actually have to look for something, so I didn't want you to have to wait in the car for a long time,\" Terry explained to her.\n\nSienna didn't say anything, but she got out of the car and followed him to his apartment.\n\nInside, she noticed how everything was very neat and organized, much like Brandon's room. She tried to feel at ease since she had known Terry for just as long as she'd known Brandon, but she had never been alone with him, and that was unsettling.\n\n\"Would you like something to drink?\" Terry asked, watching Sienna.\n\n\"Um, sure. Thanks.\"\n\nTerry went around the corner to the kitchen. Sienna took that opportunity to search the room. She shivered for a moment. Something about his living room was so cold. No pictures on the wall and just a bland white color.\n\nTerry came back from the kitchen with two glasses of wine.\n\n\"Here you go,\" he said, and handed her a glass.\n\nSienna stared at it for a moment, but didn't want to be rude. She wasn't old enough to drink, but she figured Terry would keep this little secret.\n\nTerry took a sip of the wine while keeping his eyes on Sienna. He noticed how she delicately sipped the wine while avoiding eye contact with him. That bothered him. He could easily read her expressions, and she was growing more uncomfortable by the minute.\n\n\"Excuse me, I'll go look for it now,\" Terry said and walked toward the back of the apartment.\n\nSienna stood there holding her wine glass in both hands and staring at her feet. She didn't feel well. Her head hurt and her stomach was in knots from all of this stress. She had barely known a few days with Brandon that weren't full of stress. Why didn't everyone just leave them alone!\n\nHer thoughts were interrupted as she heard a loud thud coming from the back room.\n\n\"Terry?!\" she said, as she sprinted to the location of the noise.\n\nShe followed the sound into the back room and saw Terry piling some boxes back up into a closet.\n\n\"Are you okay?\" she asked.\n\n\"Yeah, just dropped some things.\"\n\n\"Oh.\" Sienna said, realizing she was in his bedroom. She turned to leave when he grabbed her wrist. Sienna slowly turned around with wide eyes.\n\n\"Can I ask you something?\" Terry said, gripping her tighter.\n\nSienna slowly shook her head 'yes' while she stared down at his hand wrapped around one of her wrists.\n\n\"Why him? Why Brandon?\"\n\n\"What?\" she asked, looking up at him confused.\n\n\"Why do you want him? You know, as opposed to someone like me?\" Terry said, staring in her eyes.\n\nSienna felt a cold chill creeping up her spine.\n\n\"I, uh, I don't know. I was just drawn to him. Always have been,\" she smiled, trying to make light of this awkward situation.\n\n\"So you can't be drawn to me?\" Terry asked, while his eyes slowly roamed over her body.\n\nIn that instant, Sienna felt dirty. She tried to pull away, but it made him squeeze her tighter.\n\n\"How can you want to be with him with what he's done to you?\" Terry asked with disgust.\n\n\"What? He hasn't done anything to me. Those are lies and you know that! He's your friend,\" Sienna spat back at him.\n\n\"Is he?\" Terry said slowly, as one side of his mouth curved into a smile.\n\nSienna shivered. She knew where this was going. She tried to jerk her hand away, but that caused Terry to swing her back toward him. Her body slammed up against his chest.\n\n\"Terry, let go of me!!!\" Sienna screamed as she swung at him.\n\nTerry caught her other hand and pushed her backwards toward his bed. He flung her down so hard it caused her to violently bounce, jerking her neck in the process. But Sienna immediately started kicking at him and screaming.\n\n\"Nooo!!! Terry, stop!!!\"\n\nHe caught her foot and pulled her off of the bed and onto the floor with a thud, causing her dress to slide up in the process. Sienna felt her back hit the floor and it knocked the wind out of her.\n\nTerry took this opportunity to quickly lay his entire body on top of her covering her mouth. He had been waiting for this moment so long. He would show her that he could be much better than Brandon.\n\n\"Sssh...please, just listen to me,\" he tried to persuade, as Sienna kicked and thrashed underneath him.\n\n\"Sienna, sshh, listen to me, sweetheart. I can make Brandon's charges go away,\" he whispered to her.\n\nSienna continued to kick, push and scream a muffled yell into his hand, while his other hand roamed between her legs. Sienna felt him rip her panties off in two quick tugs. The fabric dug into her skin and burned.\n\n\"Listen! I know the girl who accused Brandon. I can tell her to take it back if you just make this easy on me, honey.\"\n\nSienna knew tears were pouring out of the corners of her eyes. Her whole body was trembling. She never thought this would happen to her. She never thought she would be the kind of girl who got herself into this type of situation.\n\nAfter ripping her panties, he pinned her wrists above her head with his free hand.\n\nHer sobs were heavy and deep in her body. She couldn't move him one inch. He was pressing her hands down into his carpet so hard, she felt her wrists were going to break.\n\nTerry was steadily pleading with her, \"Listen, just don't tell anyone about this, and I'll have Brandon out by tomorrow, okay? But if you tell, I swear, they will turn him over to the police, and he'll be in prison for a long time. I have Officer Silas wrapped around my finger. I mean it,\" he said, while trying to pull his pants down.\n\nShe felt his bare skin touching her and she thought she would vomit. She struggled even harder, but he didn't budge. Her body felt like a ton of bricks. Her vision was blurred through her tears and she couldn't think straight. But she knew she had to do something.\n\nShe bit Terry's hand with all of her might, trying to break the skin.\n\n\"Shit!\" he screamed, and jerked his hand away. \"Fuck Sienna,\" he yelled as he smacked her across the face. But before he could get his hand back over her mouth, Sienna screamed with all the power she had left, the only name her brain could register at the moment...even if he was no where around.\n\nBraaaandddooon!!! Hellpp!!! Brand--\" was all she got out before Terry covered her mouth again, with more pressure than before. She could feel him prodding her entrance and she felt sick again. She would have started dry heaving if he removed his hand.\n\nTerry didn't want it to happen like this, but this little bitch was going to quit driving him crazy. He didn't want to think about any consequences right now, he just wanted to feel her wrapped around him. Yes, he would be like Brandon. No consequences, right?\n\nHe released his hand from her wrists to try to guide his dick toward her pussy, when Sienna grabbed his hair with both hands and yanked with all her might.\n\nTerry's head jerked roughly to the side. \"Fuuuckkk!!\" he screamed, trying to pry her hands from his hair.\n\nHe barely had two seconds to lean up before Sienna kneed him in the balls. Terry immediately turned her loose and dropped to the ground beside her. He felt nauseated. He started seeing stars instantly. His stomach felt like it was in his throat. He tried to grab her as she got up, but he was dizzy, and only caught her sandal.\n\nSienna knew that was the only chance she would have gotten. Once she kicked him in the nuts, she rolled away from him and tried to take off running. He grabbed her foot, but she kicked him loose and took off down the hallway.\n\nShe didn't know where she was going but made it to his door and fumbled with the lock but somehow managed to get it open, and then sprinted down the steps of his apartment building.\n\nTerry stumbled out of his bedroom and tried to scream her name again, but he thought he was going to throw up. Then an uneasy feeling started creeping up. She was going straight to Brandon. Fuck! Now, he felt sick again. Shit, he had fucked up so bad. His plan had gone horribly wrong.\n\nShe wanted to scream 'help' but something told her to just run. Don't stop. So she didn't. She wasn't sure how far she had run, but she eventually felt the burning in her lungs so she stopped and bent over to catch her breath.\n\nSienna had left her handbag in Terry's car and she wasn't even sure where she was, but she found the nearest gas station. She went inside and used their phone to call Lori to pick her up.\n\n\"Oh hell no!!\" Lori screamed, when she and Sienna had finally made it back to Brandon's place. Sienna had refused to talk about it in the car ride back. Plus she was too busy hyperventilating.\n\nSienna was sitting in the bathtub with her hands wrapped around her knees, in luke-warm water. Lori was pacing back and forth.\n\n\"Oh, fuck no! Oh my God, I'm going to kill that bastard!\" she screamed, causing Sienna to jump.\n\nLori suddenly stopped pacing. \"Oh!! Wait until I tell Brandon. He is going to fuck him up so bad!!!\"\n\n\"No,\" Sienna whispered from the tub. \"I don't want him or my father knowing. It's only going to cause more problems. Brandon has enough to deal with sitting there alone in that place anyway.\"\n\n\"What?! You're not going to let him get away with this, are you?\"\n\n\"I don't know. Just give me a minute,\" Sienna said. She still couldn't think straight. It all just seemed like a bad dream. A nightmare. She started feeling the bile rise up in her throat.\n\nSuddenly she launched up out of the tub and leaned over the toilet. She started vomiting.\n\n\"Jesus!\" Lori exclaimed, while trying to hold her hair back.\n\n\"I'm sorry, my nerves. First off my dad and Brandon, then Brandon gets arrested, and now this!\" she weakly laughed while wiping her mouth. She got out of the tub and wrapped a towel around herself and walked to Brandon's bed and plopped down face first.\n\nLori heard the first big sob and she quickly walked over and laid down beside her.\n\n\"It's okay, we'll figure something out,\" Lori promised her.\n\n**********************\n\nSienna wasn't ready to do this. She didn't know if she could fully trust Officer Silas with her secret. Plus, she wasn't sure if Terry was bluffing about having him wrapped around his finger. But her dad seemed to think highly of Officer Silas, so Sienna would take her chances.\n\nShe had been scared to go to the police or Shore Patrol the day Terry attacked her, but Brandon had been in holding for two days already, and she was withholding some key information that could release him.\n\nWhen Sienna stepped into Officer Silas's office, it smelled of burgers. He was trying to gobble down what was left of his lunch. He motioned her to sit down while he was trying to swallow and drink a coke at the same time.\n\n\"Hey Sienna, how are you holding up?\" he finally asked, when his airway was no longer blocked.\n\n\"I'm okay,\" she answered.\n\nThe two sat in silence for a few moments until Officer Silas spoke.\n\n\"So, what can I help you with?\"\n\nSienna chewed on her bottom lip. She wished so bad she could ask for her father's guidance in this matter, but she didn't want him to know either.\n\n\"Um, I just wanted to tell you again, that Brandon hasn't done anything wrong,\" she said shakily.\n\nSilas let out his breath. He figured this was why she was here and why she was so skittish.\n\n\"Look Sienna, I already took your statement. I know you want to help him, but let me do some more investigating and--\"",
        "\"He is innocent! I know Terry turned him in. But Terry lied about all of this!\" Sienna yelled through tears. She couldn't control herself. She was sick of being this emotional. She had cried a river right before she even came to his office.\n\nSilas stopped mid sentence with that accusation. He cocked his head to the side and tapped his fingers on his desk.\n\n\"What do you mean?\" he asked.\n\n\"He told me. Some girl that accused Brandon, was told to do so by Terry,\" Sienna explained.\n\n\"And why would he tell you, of all people,\" Silas questioned.\n\nSienna wasn't ready for this, but she had to get it off her chest if it meant saving Brandon.\n\n\"He, uh...he attacked me,\" she whispered, while staring down at his desk.\n\n\"Excuse me?\"\n\nSienna looked up at him and told him again. \"He attacked me at his apartment, two days ago. The day Brandon was arrested.\"\n\n\"Have you reported it to the police?\"\n\n\"No, and please don't say anything to anyone,\" Sienna begged sliding to the edge of her chair, leaning on his desk. \"I can't have my father or Brandon knowing. Especially Brandon. He would just get into even more trouble.\"\n\nSilas leaned back. He was so sick of this shit. He truthfully just wanted it to all go away.\n\n\"Sienna, you understand the conundrum I'm in, right? Terry accuses Brandon of rape, and now you accuse Terry? See where I\"m going with this?\"\n\nSienna sighed. \"All I'm asking is that you ask this girl again if Terry made her tell you that Brandon raped me. Because she's lying, and he asked her to.\"\n\nAnd with that statement, she grabbed her purse and stood.\n\n\"Sienna?\" Officer Silas called to her before she could walk out.\n\n\"Yes?\"\n\n\"If Terry is lying about all of this with Brandon, and he did attack you, I will call the police and have them haul his ass to jail. And it won't take long for word to get around about what he's done. I just wanted to give you a heads up on that.\"\n\nSienna shook her head. She would pay that price later, but she wanted Brandon out of there.\n\n*********************\n\nApril tried to swing the door back, but caught it when she realized that would not be good to do to a Shore Patrol Officer.\n\nSilas stood there, not moving and looking amused at her last minute decisions to not slam the door in his face. He didn't bother with any formalities, he just pushed right past her, walked into her kitchen and sat down.\n\nApril just stood there, scared to death. Her face was turning whiter by the minute.\n\nSilas leaned back in the chair and put his hands behind his head.\n\n\"So April, I heard something, and I wanted to run it by you. Crazy little idea, but what the hell. The other day when you came into my office crying, saying that Brandon was a rapist and you were tired of holding this secret, yada, yada, yada...you were telling me the truth, right?\n\nApril's face turned even whiter if that were possible. She finally shook her head 'yes'.\n\nSilas leaned back and stared at her for a moment. He yawned and stretched his arms above his head.\n\n\"Because, see here's the thing. If someone TOLD you to say those things about Brandon, perhaps someone like Terry, then that person would be in a lot of hot water. I mean a lot. And if you admitted the truth now, then I would easily spare you, and say you were just a little pawn in this twisted game. Just a small slap on the wrist would be all that you received,\" he said with a smile.\n\nApril bit her bottom lip thinking about it.\n\n\"So, I'm giving you an out just in case you could have been mistaken in Brandon's case. I have nothing to gain in this. I think Brandon's an asshole and I think Terry is a schmuck, so I don't care either way. But if you swear by your word, then fine. Brandon will stay locked up until I turn this over to the police, no harm done. But...,\" he said slowly, \"if I find out you did lie, so help me, I will see that you pay,\" he threatened.\n\nSilas stood up, tipped his hat and walked to her door. \"So you have a good day now, and keep in touch.\"\n\n**************************\n\nBrandon still didn't know that the fuck was going on. One minute he's being interrogated and sitting for four days in a cell on some bogus charge that everyone seemed to believe, and now he was in his Jeep on his way back to his house with Sienna.\n\nHe looked over at her. She seemed worried. Upset even.\n\nWhen they reached his house, both got out without speaking a word. She was walking in front of him when he grabbed her hand and pulled her back for a kiss. She grimaced but quickly tried to compose herself. But it didn't go unnoticed.\n\nBrandon looked down at her arms. He saw the light purplish-blue ring around her wrists.\n\n\"What the fuck?! Who did that to your wrists?\" Brandon stopped, suddenly examining them closer.\n\nSienna wanted to jerk them away, but it was too late. He had already seen.\n\nBrandon looked up at her waiting for an answer.\n\n\"Um, I really don't remember,\" she said while staring at her wrists. Anything to avoid looking into his eyes at that moment. She could feel him staring at her. His eyes always seemed to scorch her skin and dig for the truth behind her words.\n\nAfter a few seconds, he finally spoke again. \"You have bruises all the way around your wrists, and you don't remember how you got them?\" he asked, skeptical.\n\nSienna had to play this off. \"I know that sounds weird, but with everything that has happened in the past couple of days, hell, weeks, I have been stressed out and I don't remember.\"\n\nShe gently pulled her hands away from him. She stood on her tip toes and wrapped her arms around his neck, and kissed him. At first he continued to stare into her eyes and didn't kiss her back. But then he gave in and kissed her long and deep.\n\nWhen she pulled away, and walked up the steps, she noticed he didn't follow. She turned around and he was still standing there.\n\n\"What?\" she asked, already knowing what the problem was.\n\n\"You know what.\"\n\nSienna sighed, \"Brandon, I don't remember, okay? I'm sure I probably did something in my sleep.\"\n\nBrandon didn't know what was going on, but he she looked tired and he didn't want to make her feel worse. But he was determined to get to the bottom of that issue. She hadn't heard the last of that.\n\nHe walked up the steps and followed her inside. Sienna sat down at his kitchen table and Brandon walked toward the back of the house.\n\nAll he wanted was a shower. That was it. Nothing else. Well, when it came to Sienna he could always use 'something else', but seriously, he just wanted a hot shower. He entered his bedroom, took off his shirt, and was about to yell for Sienna, when he noticed pink suitcases on his floor. Some designer cases with LV written all over them. He assumed that expensive ass, Louis Vuitton shit.\n\nHe walked out of his bedroom about to ask her about the suitcase when he noticed she wasn't sitting at the table. He looked over toward his couch and saw her sound asleep with her legs pulled up in a little ball.\n\nGod, she was so beautiful. He could hear her lightly snoring. He quietly walked over toward her and kneeled at her side. He moved some of the hair from her face and kissed her jaw line. He didn't understand this. Everything happened so quickly. At least for him anyway.\n\nHe smiled to himself when he realized that this did not happen quickly for her. That it had been 10 years in the making for Sienna. But for him, he knew the emotion had been bubbling underneath the surface for a year or so, but when she looked at him that night on the dance floor, when she was in that damn dress...not like a little girl who had a crush, but like a grown woman with desires, it hit him like a sledge hammer.\n\nHe knew then, he was a goner. Completely. Everything that he had been wanting to feel for her was finally allowed to be released, and boy did he release it. That night had shaken him so bad. He could barely think straight and almost missed the turn off to his house had April not told him.\n\nAt first he figured it was just lust, because he couldn't get enough of Sienna. But for some reason when he was apart from her, he felt a physical ache in his chest. Maybe it was mental, but whatever it was, it was painful.\n\nIn his mind, their relationship wasn't logical. Meaning, the two of them couldn't be more opposite, even though they had been close all those years. Their backgrounds were very different, although they had both been abandoned by their mothers.\n\nHe thought about the Commander trying to raise a daughter like Sienna. He knew if he ever had a daughter that looked half as good as Sienna and had her spirit...oh yes, she would be wearing a chastity belt until her thirtieth birthday, and even afterward, he'd keep a gun close by. For that thinking, he hated himself because he could almost understand the Commander's resentment.\n\nBrandon scooped her up gently in his arms and carried her to his bedroom. She opened her eyes for a few seconds, then closed them back. He laid her down and pulled the covers around her. He felt his phone vibrating in his pocket, so he quietly rushed out and answered it.\n\n\"Hello?\"\n\n\"Hey man, it's me,\" Darren said on the other end. \"Did you hear?\"\n\n\"Hear what?\" Brandon asked, stepping out onto his porch.\n\n\"SP got Terry and turned him over to the police.\"\n\n\"What? What the fuck is going on? Why did they drag him in?\" Brandon asked, still trying to keep his voice down.\n\n\"I don't know, they aren't saying,\" Darren replied.\n\n\"Alright, well keep me posted,\" Brandon said, and hung up his cell.\n\nWhen Sienna awoke, for a moment she forgot where she was. But then the smell of good cooking made her get up and smile.\n\nAs she made her way down the hallway, she noticed it was dark outside. 'How long was I asleep,' she thought. She saw Brandon standing over the counter fixing two plates.\n\n\"Hey there, sleepy-head. Hungry?\"\n\n\"Mmm...very!\" she said excitedly, staring at the amazing meal he had prepared.\n\n\"Bon appetit, baby,\" he said as he sat her plate in front of her.\n\n\"This smells so good! Where did you learn to cook like this?\" Sienna asked.\n\nBrandon raised one eyebrow. \"Cook? Fuck no, you know me better than that. I can't cook worth shit, but I can dial take-out like a motherfucker,\" he said, while digging into his food.\n\nSienna laughed. She had gotten used to Brandon's colorful language as a kid. He would be talking to her about something and slip up and say 'fuck' or motherfucker' more times than she could count. Her father would always clear his throat and give Brandon a harsh look.\n\nBut nothing ever worked. It was just his vocabulary. And he could use the 'f' word in almost every grammatical way. Funny how she knew so much about him. Ten years of semi-worship will do that to you.\n\n\"So,\" Brandon said interrupting her thoughts. \"I saw your bags in my room. Want to tell me what's up with that,\" he said, taking in another large mouthful.\n\nSienna loved his accent accompanied with his deep sexy voice. The way Bostonian's dropped their R's and blended certain words together. It created this tough guy edge. She noticed when he got really excited or really relaxed, his accent became much thicker. Like when he's angry or... about to come. But right now, he was actually relaxed, and it was starting to grow more pronounced.\n\nShe was about to take a bite, but just as suddenly as the food had smelled delicious to her, that smell turned sour, and her stomach flip flopped.\n\nBrandon dropped his fork and stared at her, waiting for her to answer his question.\n\n\"Um, I was so pissed at my dad. I thought he sent SP after you, so I moved out that day,\" she said nervously.\n\nThen she quickly added, \"But if you want your space, I totally understand. I should have asked you first, but I just didn't have a way.\"\n\n\"Not hungry?\" Brandon asked, ignoring her comment.\n\nSienna shook her head. \"I'm still not feeling well from all of this. I'm sorry. It looks good though.\"\n\nBrandon pushed his chair back from the table. \"Come here,\" he softly commanded.\n\nSienna stood up and walked over to him. He pulled her down on him so that she was now straddling his lap. He stared at her for a few moments, before bringing his attention back to her wrists.\n\n\"You gonna tell me what happened?\" he asked her again. She hated when he stared at her like that. Like he could see everything she was trying to hide. Perhaps this mystical power that would make her do whatever he wanted.\n\n\"I told you, I really don't know, Brandon,\" Sienna pouted, trying to look as innocent as possible.\n\nBrandon gently wrapped one of his hands around both her wrists, laying it gently on top of the bruises. It matched perfectly. Sienna started to squirm as he stared back up at her.\n\n\"Give me a little credit, Sienna. This is a hand-print. But what I want to know, is why the fuck is the imprint on your wrists?\" Brandon said, slightly raising his voice.\n\nSienna knew she had to think fast. She knew Brandon. She knew him like the back of her hand, and if he found out about Terry...\n\n\"Well, when I went to see Officer Silas, I got pissed at them for not believing that you were innocent. So, I caused a mini tantrum and they had to restrain me. They were nice though, I shouldn't have gotten carried away.\"\n\nBrandon searched her eyes to see whether or not he believed that story. But then a huge smile broke across his face. His baby was a fighter. Something turned him on about that.\n\nSienna relaxed a little when Brandon smiled. At least he bought it. She didn't know where the hell that story had come from, but she was sticking to it.\n\n\"So, you moved out, huh?\" he asked, getting back to their original conversation.\n\n\"BT, what if my dad, you know, what if he wasn't the one who sent SP here,\" Sienna said.\n\n\"Of course he did. Who the fuck else would?\"\n\n\"I don't know, but my father may hate our relationship, but he wouldn't lie on you like that.\"\n\n\"Anyone else would have gone to the police. Your dad called SP because he has some pull with them, and he knew they could drag me away then, without questioning it,\" Brandon angrily spouted.\n\n\"Okay, I don't want to talk about it anymore,\" Sienna said while wrapping her arms around his neck. She leaned her head onto his shoulder and closed her eyes. She could easily take another nap, because she was dead tired.\n\n\"I'll drop it if you do something for me,\" Brandon whispered in her ear.\n\n\"What?\" she asked, with her eyes still shut.\n\n\"Come for me.\"\n\nShe leaned up and looked into his eyes. He slid one hand underneath her skirt and pushed her panties aside.\n\nAt first, Sienna tensed, but then relaxed when she remembered that the fingers that had lightly brushed against her sex were Brandon's and not that asshole, Terry's.\n\nShe closed her eyes and moaned when she felt the first two fingers enter her wet pussy. She started to roll her hips on his lap. Then a third finger. He was moving them in and out at a steady pace while his thumb massaged her clit.\n\n\"Mmm, Brandon. Ohh, hell,\" she groaned into his ear.\n\n\"Do you like that, baby?\" he asked her in a low seductive voice.\n\n\"Yes.\"\n\n\"Should I stop?\"\n\n\"No, please don't,\" Sienna begged.\n\n\"Ask me for it,\" Brandon commanded.\n\n\"Please?\"\n\n\"Beg me,\" he hissed in her ear as he moved his fingers in and out of her soaking pussy.\n\n\"Please, Brandon. I need it, don't stop,\" Sienna pleaded as her pussy started tingling.\n\nBrandon continued to finger her, while he kissed up and down her soft neck. Then he felt her body vibrating to his touch. She started to shake and he felt the wetness dripping from his fingers as she panted out an orgasm.\n\nBrandon removed his fingers from her warm vagina, and brought them to her lips. Sienna stared into his eyes as she slowly sucked all of her juices from his fingers, and then kissed him hard on the lips.\n\nBrandon growled into her mouth and picked her up pushed everything aside as he gently laid her on the table.\n\nHe pulled down her top and began to lick and tease her nipples as she ran her fingers through his soft dark brown hair.\n\nHe leaned back and dropped his pants. He quickly slid off her panties and locked her legs over his shoulder.\n\nSienna felt so open and wet with her legs spread this way, waiting for him to enter her body. Brandon pushed inside of her in one long fluid motion. He leaned over her body and placed his hands flat against the table on either side of her head.\n\nThis caused Sienna's knees to almost touch the table. Brandon began fucking her gently. Making sure she could take him in this position. When her eyes closed and she started grunting he realized, not only could she take it, she wanted it!\n\nHe began fucking her harder and with more need. With every thrust, Sienna moaned louder. He hoped his small table could support their weight.\n\n'Damn, she feels so good,' he thought to himself. He looked down between their bodies and saw his pale thick cock sliding in and out of her smooth brown pussy.\n\nFuck, he wanted it to last longer, but that sight made him lose it. He began thrusting harder and harder until Sienna screamed her orgasm. His balls began to tighten and he shot load after load of his milky come into her pulsing core.\n\nWhen he felt completely empty, he let her legs drop and kissed her.\n\n\"I'm so in love you,\" he whispered against her ear.\n\nSienna smiled up at him and kissed him again. She had never really given it much thought before, but she figured they should probably start using condoms. Next time, perhaps she would suggest it to him. But if he got her again like this...she knew the condoms would be the last thing on her mind.\n\n************************\n\nSienna awoke with Brandon's arm wrapped around her. She started feeling sick again. She quickly removed his arm and ran to the bathroom. She always knew she had a weak stomach, but this was ridiculous. She knew she would feel better if she just got it all off her chest.\n\nShe wanted to tell Darren. He had been talking to Brandon about Terry being locked up and she felt he would know what to do if word got out.\n\nShe grabbed her cell phone and went outside. She walked all the way to the edge of the driveway and dialed Darren's number.\n\nWhen Darren picked up she started crying and telling him everything that had happened. Darren quietly listened to her until she was finished with her story. She felt better knowing he had this information. She hated lying to Brandon, but she knew him too well. He would flip out.\n\nDarren assured her that he would think of something and make sure that this didn't get back to the Commander or Brandon. He told her that he would talk directly with Officer Silas.\n\nSienna thanked him and went back inside.\n\nShe heard the shower running and walked into the bathroom. The shower door was open and Brandon was washing, but water was splashing all over the bathroom floor.\n\n\"Brandon! You're getting water everywhere!\" she shouted at him. She reached to slide the shower door closed, when Brandon blocked it and pushed it back open.\n\n\"No, door stays open,\" he said to her. Then he turned around and continued to wash.\n\nSienna couldn't help but marvel at his body. Damn. He had a light tan and his body looked like a marble statue of David. His back muscles flexed and his ass was perfect. She let her eyes scan down to his toned, muscled long legs. Damn, yes she was lucky.\n\nShe tried to bring her attention back to the matter at hand as she watched even more soapy water soak the bathroom floor and mat.\n\n\"What? Why?\" she asked.\n\n\"Because I don't want it shut,\" he answered back, without bothering to turn around.\n\n\"But you're making a mess.\"\n\n\"Well, I'll clean it up later.\"\n\nSienna put her hands on her hips wondering just what the hell was wrong with him. She reached out and tried to close the door again, when he stuck his hand out behind him and stopped it. He turned his head toward her and narrowed his eyes.",
        "\"You close this Goddamned door one more time, I'm going to wear your cute little ass out.\"\n\n\"Are you...claustrophobic?\" Sienna asked with a grin.\n\n\"No,\" Brandon quickly answered. He looked at her non-believing face. \"Fuck, yes, okay, I'm don't like small spaces. Shit, you happy?\"\n\nA big smile spread across her face. She just found that amusing. Small spaces could terrify big, bad BT.\n\n\"So, you do have a weakness then?\" she asked laughing.\n\n\"Two actually, smart ass,\" he said, smiling at her.\n\n\"What's the other?\"\n\n\"You,\" he responded and turned his back to her.\n\nShe took off her shirt, pulled down her panties and got in the shower with him. She put her arms around his waist and kissed his back.\n\nBrandon eventually turned around and stared down at her. Her skin was lightly misted over by the water cascading behind him.\n\n\"Can I close the door now?\" she asked him, delivering small kisses all over his chest.\n\nShe felt him laugh. \"No.\"\n\nShe reached up and grabbed his face with both of her hands.\n\n\"Just look at me. Don't look at anything else. Just me,\" she whispered.\n\nBrandon took a deep breath and looked deeply into her eyes. He could get lost in those beautiful dark pecan pools, framed by the longest jet black eyelashes he'd ever seen.\n\nSienna grabbed the shower door handle and was about to close it when Brandon grabbed her hand.\n\n\"Just look at me, baby,\" Sienna whispered to him, while she licked and lightly bit his bottom lip.\n\nHe did. He stared into her eyes and kissed her back. And when he let go of her hand and heard the sliding door hit the latch, he realized he was okay. As long as he had her, he was okay.\n\n***************************\n\nSienna wanted to go visit her father. She hadn't spoken to him since she had blown up at him at the Shore Patrol offices. She felt horrible about accusing him of turning Brandon in and then moving out.\n\nShe was sitting on Brandon's couch when she heard a knock at the door. She knew it was Darren. He and Brandon had planned to go out with the guys that afternoon.\n\nWhen Darren walked in, he looked around for Brandon. He didn't see him so he pulled Sienna aside.\n\n\"How are you holding up?\" he asked her, giving her a quick hug.\n\n\"I'm alright,\" she lied.\n\n\"Where's BT?\"\n\n\"He's in the shower, he'll be out in a second.\" Sienna mentioned, smiling at the thought of the shower door being closed from now on. Although, she didn't mind the view when it was open.\n\n\"Well, Terry is out on bail. Just found out today. I feel that he'll find out sooner or later, so maybe best if we tell him,\" Darren whispered to her.\n\n\"Tell me what?\"\n\nSienna and Darren both looked up to see Brandon staring at them while his hair dripped onto his dark grey shirt.\n\nDarren glanced back at Sienna's wide eyes. Damn, she had no poker face at all!\n\n\"Um, nothing. It's nothing, we were discussing something else,\" Darren said, knowing he sounded like an idiot.\n\nAnd Brandon's facial expression made him feel like one.\n\nBrandon had barely dried off and changed his clothes when he heard them whispering. He leaned around the corner of the door, but when he couldn't hear anymore he decided to ask them what the hell was going on.\n\nBrandon's eyes zoomed in on Sienna's. \"Tell me what?\" he repeated.\n\nSienna couldn't move. She couldn't talk. She couldn't think of a good quick lie. Everything was escaping her.\n\n\"You know, from my point of view, it's never good to find your girlfriend and your best friend whispering about something behind my back. And it damn sure ain't close to my birthday, so what the fuck is going on?\" Brandon asked.\n\n\"Look man, calm down okay. I'll tell you, if you just calm down,\" Darren said stepping closer to Brandon.\n\n\"I'm calm. But if you don't tell me, I can't say I will be in 30 seconds,\" Brandon remarked, crossing his arms over his chest. He could feel his anger starting to rise, but he was trying hard to keep it down. He could control his temper.\n\n\"Can you sit down first?\" Darren asked.\n\nThe look on Brandon's face told Darren his answer.\n\n\"Okay. Well, this is really hard to say, BT. I don't know how to tell you this.\"\n\n\"Why don't you start with why you're whispering to my girlfriend,\" Brandon said, irritated.\n\n\"Man, it's not like that. You know me. It's actually about you getting arrested. I know you think Commander Branson called SP on you, but he didn't,\" Darren said carefully, watching Brandon's expression.\n\n\"Of course he did.\"\n\n\"No he didn't BT,\" Sienna finally spoke.\n\n\"Then who?\"\n\nDarren really didn't want to get into this now. He needed a moment to think. He knew if he told Brandon about Terry, he would ask why. And it was the 'why' that Darren didn't want to answer. But he knew Brandon wasn't going to stop.\n\n\"Terry.\"\n\nBrandon's brow furrowed for a second. Terry?\n\n\"What the fuck? Why would Terry call SP on me? That makes no fucking sense.\"\n\n\"I know, but he did. And that's why they took him and turned him over to the police. But he's out on bail now. But he lied or got someone to lie on you,\" Darren answered.\n\n\"Wait a minute, this makes no sense. How the fuck do you know this?\" Brandon said, shaking his head. What the hell was going on?\n\n\"Well...he told Sienna his plan,\" Darren said, not wanting to directly lie to Brandon.\n\nThat stopped Brandon immediately. He stared down at her. Her eyes were wide with fear and glassed over. Brandon felt the hairs on the back of his neck stand up. His heart started beating faster than normal. Keep temper in check...keep it together.\n\n\"Why would he tell you that?\" he asked in a low, cool voice.\n\nSienna was frozen again. She was scared to death.\n\nDarren tried to interrupt the stare down, \"Hey BT, let's just---\", but he stopped when he saw the look Brandon cut in his direction.\n\nBrandon stared back down at Sienna. She opened her mouth to say something, but nothing came out.\n\n'Fuck it', Darren thought. He'll find out sooner or later, and he would hate him forever if he knew that his best friend had known what went down and was the last to tell him.\n\n\"Terry attacked her,\" he rushed out really quickly.\n\nDarren noticed Brandon's head jerk up towards him.\n\nBrandon stuttered for a moment, \"Wha--,what?\" He knew he couldn't have heard Darren right. He knew he couldn't have. It must have been a mistake.\n\nDarren turned to Sienna, \"You might as well tell him, so he'll understand.\" Then he turned to Brandon, \"But please man, keep your cool, okay? Please!\"\n\nSienna couldn't breathe. \"I was--oh God.\" She finally took a breath, blew it out, took another, and started again. \"I--I was upset at the Shore Offices so Terry offered to take--take me to Lori's. But he said he had to stop by his place first and wanted me to come---come inside---I didn't want to though,\" Sienna quickly added. She could see the red creeping through Brandon's face.\n\nHis arms remained crossed over his chest and he bent his head down as he listened.\n\nSienna continued, \"Well, I...okay, I went inside and he thre--threw me down and told me if I didn't do what he wanted, he wouldn't tell SP the truth, and you would stay locked up.\" \n\nThe rest, Sienna tried to rush out so quickly as if to lessen the blow. She took a deep breath and looked up at Brandon.\n\nHis eyes were still closed. He hadn't moved a muscle. Just one unmoving statue.\n\nDarren couldn't read his mood. \"She got away from him though, before he could do anything BT. So she's okay, you know.\" He felt he should add that part.\n\nBrandon opened his eyes. \"But he hurt you?\"\n\n\"My wrists and back were sore, but I'm okay,\" Sienna said, hoping that would calm him.\n\nBrandon shook his head slowly and then turned around. \"But he tried to rape you. And he hurt you in the process, right?\"\n\nShe didn't answer. She felt this uneasy feeling again.\n\nDarren and Sienna stared at each other and then back at Brandon's back. Everything in the house was still. You could only hear a bird outside of his window. The bird's chipper mood was a stark contrast to the vibe inside the room.\n\nBrandon turned back around. \"Are you sure you're okay?\" he asked Sienna.\n\nShe shook her head 'yes', but she noticed the dead look in his eyes. Brandon stared at her for a moment longer and then walked towards his bedroom.\n\nThey both just stood there, wondering what the hell Brandon was thinking. She heard a click in the distance, and suddenly Darren screamed, \"Oh Shiiitt!!\" as he rushed down the hall leaving Sienna confused about what just happened.\n\nShe jumped as she saw Darren being shoved back out of his room and onto the floor, and Brandon quickly walked around him.\n\nThen Sienna saw it and screamed.\n\n\"Brandon, nooo!!! Don't you dare!!! Please!!!\" she screamed, grabbing at his arm.\n\nHe shook her off and sprinted out of the door with an M11 handgun in one hand and his keys in the other.\n\nDarren scrambled up from the floor and tried to catch him, but Brandon was already in his Jeep and pulling off.\n\n\"Fucckk!!\" Darren screamed. He called for Sienna, and she raced out of the house and hopped in his car. Darren was freaking out. He was trying to dial several numbers on his cell phone but Sienna's panicked cries weren't helping him concentrate.\n\n\"Commander!! Oh, thank God I reached you. Please, you have to get to Terry's apartment right now! Please, BT is on his way there with a gun! Now, please! I'll explain everything later, just please hurry!\"\n\nDarren hung up with him and called another number.\n\n\"Officer Silas please. It's an emergency!! I don't care if he's busy, it's an emergency!!\" Darren screamed into the phone. He was weaving in and out of traffic, but he still couldn't keep up with Brandon.\n\n\"Officer Silas! Please head to Terry's apartment. BT is on his way there right now. He knows everything, and he has a gun. Please hurry!!\"\n\nHe hung up and stepped on the gas, punching it all the way to the floor.\n\n\"Shit, shit, shit!!\" he shouted when he couldn't locate Brandon's Jeep. And Sienna was no help at all. She was a pile of tears and apologies, trembling beside him. He couldn't even understand what she was saying, but he knew this was not going to end well. For the first time in a long time, Darren was scared shitless.\n\nHope you enjoyed and chapter 6 is on the way!\n\n--Soular "
    ],
    "authorname": "soular",
    "tags": [
        "navy seal",
        "commander"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/damn-dress-a-love-story-ch-05"
}