{
    "title": "Across the Pond Ch. 03",
    "pages": [
        "Sydney \n\nI: Temporary Love. \n\n\"Eli, monster!\" \n\n\"Rawr!\" \n\n\"Eli, smile!\" \n\n\"Cheeeeese!\" \n\nI shook his long, chubby body in my hands and he squealed in pure joy. Lying on my back in the Thomas' living room I had the toddler raised above my head, enjoying how absolutely adorable he was. If I wasn't 100% certain I'd turn him into a complete delinquent I'd kidnap him and raise him as my own; I like playing with diecast cars and it's not like I sleep much anyway. \n\nI lowered him down onto my chest and he gave me a sloppy kiss on the cheek before rolling away, running off to play with his toys. Jumping up I headed to the kitchen where Tess was making dinner, chopping vegetables with controlled concentration. \"Mini-Hellbeast has been tamed for now.\" \n\n\"Oh, thank you. I can barely remember what it's like to cook without tripping over him or trying to keep him away from the stove.\" You couldn't miss the tenderness in her features whenever she talked about her rambunctious child. As for me, turns out I didn't completely hate not working every day. It meant I got to hang out with my best friend when she got off from work, even if it was only for an hour or so. I snatched a baby carrot off the cutting board before she smacked my hand away. \"Stop that, you're worse than Shane. Do you want to stay for dinner? I'm making chicken pot pie.\" \n\nI chewed on the stolen vegetable and thought about it. Normally I would have said yes, because they happen to be three of my favorite people in the world and I do love a free meal. A quick glance over at the clock on the microwave displayed it was already 4:00 so I knew what my answer would be. \"Nah, thanks though. I'm expecting a phone call in an hour.\" \n\nTess pointed the sharp tip of her chopping knife in my direction. \"Okay, this is the third time you've passed on food for some phone call. Are you at least going to tell me who you've been talking to?\" \n\n\"Well not right now, I gotta go.\" She gave me an exasperated look and went back to preparing her meal. I tapped on the corner of the island to get her attention. \"Look, it's nothing to worry about, okay?\" \n\n\"Uh huh. Are you still coming to the beach with us or are you going to bail on that too?\" \n\n\"I mean I was, but if that means spending a week with that attitude of yours I don't know - \"A piece of celery hit me in the nose and I flung some parsley at her. It's not like I was keeping my whatever-relationship with Holland from her for any sketchy reason other than I didn't feel like getting the third degree. \"I'll see you guys on Wednesday, okay? I'll drive down after my shift so I'll probably be there sometime around sunrise.\" \n\n\"Okay. Please be careful, pull over and nap if you have to.\" \n\n\"Sure thing, Mom.\" I skipped out of the kitchen before she could hit me with anymore produce, kissing my handsome nephew on the head before heading to my car. I rushed home like an amped-up teenager waiting for a phone call from her crush and I just barely pulled Holland's Jaguar into the parking spot when my phone buzzed three staccato bursts in my purse. I groaned unhappily, because I knew what it meant. \n\nIt meant while being a responsible driver I missed Holland's call, again. \n\nBecause he called half an hour early it also meant he was right about to hop on a plane for work, again. \n\nWhich made this day six in a row I hadn't talked to him, which made this day six in a row of grumpiness on my part. \n\nIt was easier to groan and curse in the privacy of the vehicle than to give him shit because it's not like the man can just stop working to talk to me for five minutes. I made sure all the voicemails I left for him in return were as cheery and lighthearted as I could make them because I didn't want to lay on a guilt trip. He had enough going on. That being said, it didn't make me feel any less sad about not being able to have a normal conversation with my boyfr... person, whatever. I don't know why I was moping so hard, I never worried about things like phone calls or holding hands, or being able to fall asleep next to the body of a beautiful blonde boy. \n\nProbably because you've never been in love before. \n\nI looked around the empty car searching for the chick who just thought that because it sure as hell couldn't have been me. I ignored my stupid brain and dug my phone out of my bag, bypassing Holland's voicemail and opening my recent messages. I sent out a text to Colin: Are you alone and dressed? \n\nIt only took him fifteen seconds to respond. Give me an hour and a shower and I can be both. Vodka and venting? \n\nGrigio and griping. See you then, happy humping. I dropped the phone back in my purse and, even though I wasn't dressed for a workout, decided to go ten rounds with the punching bag in the basement before he finished up and came over. \n\n*** \n\nII: Boyz n Poizn. \n\nThe scorching water cascading down my back felt amazing on my skin, the massaging head beating on my overworked muscles as I lathered myself up. Starting at my neck and working my way down my body I got lost thinking about the voicemail I finally listened to once my workout was over: \n\nSydney. I know we had a...I received a last-minute call from Paris and need to board in a few minutes. I won't bore you with the details...Christ, it feels as if this is the tenth time I've said that since I left. I know you're at the very least annoyed with me, as pleasant as your messages have been you're a bit of a terrible actress. I'm sorry. It doesn't make it better, but I am. I want to be there, I hope you know I want that and so much more. I'll try to ring you tomorrow. \n\nI couldn't lie, I was kind of irritated: not at him, not really, more so at myself. I grew up with corporate lawyers for parents, I saw how much pressure and dedication it took to be successful. I'd had lovers before with actual, grown-up careers. I'd had plans canceled on me more times than I could count. So why did I feel so left behind this time? \n\nA cautionary knock at my shower door interrupted my contemplating. It swung open and a pale hand popped in holding a Sam Adams. \"I was out of wine, it's gonna have to be a 'beer and bitch' night.\" \n\n\"Ooh, yay.\" I took the bottle and had a good swig of it before setting it down away from the water so I could rinse off. \"How's your penis?\" \n\n\"Sir Topem Hat is doing just fine, thank you.\" I giggled at his ridiculous nickname for his dick and turned around to wash the suds off my back. \"So what's going on, Syd? We haven't had a girl's night out in a while.\" \n\nI didn't even know where to start. I went the random question loop. \"Have you ever been in love before?\" \n\nColin snorted in response. \"Is this a legit question or am I supposed to throw out the stereotypical line, \"Oh honey, I fall in love every weekend,\"?\" \n\n\"Honest-to-God question.\" \n\n\"Oh. Well, you remember that guy Ricky from a couple years ago? That's probably as close to love that I'm gonna get.\" \n\nI thought back to the guy Colin was referring to. They had dated for almost six months, which was about three times longer than Colin usually stuck to one guy. \"How'd you know? What did it feel like?\" \n\nHe exhaled thoughtfully. \"I don't know. I guess the regular feelings: I couldn't stop thinking about him, and when I was with him my brain turned into mush. It was kind of a mild high, it was cool. At least until I caught him fucking that queen from Bristol.\" \n\n\"God, we suck at picking men.\" I turned the water off and opened the door to grab my towel. Colin's seen me naked a thousand times, doesn't even bat an eye...even the bloodshot, baggy ones he was sporting. \"Eww, why do you look so tired?\" \n\n\"Fuck you too. Why are you asking? This have anything to do with Holland?\" I stopped right as I was drying under my boobs and stared at him slack jawed. He gestured toward the door. \"I saw the flowers in the kitchen and read the note, 'cause I'm nosy. Mr. Darcy picks out a good bouquet. So what's going on?\" \n\nDamnit. I forgot to tuck the note with the others, in the farthest corner of my nightstand drawer that I pulled out to read every night. He'd sent me a different arrangement every other day he'd been gone. I grabbed the body butter and got to slathering it on my skin. \"Nothing. I mean, we kissed, but nothing other than that. It's not a big deal.\" \n\nIt was Colin's turn to drop his jaw. \"Are you kidding? This is the definition of a big deal. When did it happen, how many times and exactly where did he kiss you?\" \n\n\"It started a couple of weeks ago. Only a few times, one was a pretty heavy make-out session in his bed, and above the neck, you pervert. Please don't tell anyone, I'm not sure I was even supposed to tell you.\" \n\n\"Wow. Go Mr. Darcy.\" My friend smiled wide and there wasn't even the tiniest bit of mockery in his expression. \"I don't know if I can see you guys together, he's ultra-serious and sexy and you're...well, you.\" \n\nFlipping him the bird I headed to my room to change and he followed, steering immediately into my closet while I found a thong and bra set to slip on. \"I think that's why I like him, though. When I'm with him it feels almost normal, like I don't have to clean up my language or act prim and proper. I can kind of tell he's into me for me, you know? Which means he should probably get his head checked.\" \n\n\"Hey, stop that,\" Colin scolded when he emerged from my closet with the fitted olive-green romper with a lace back that he bought for me during our last shopping trip, that still had the tag on since I tend to lean towards black clothing. \"Don't go being all self-deprecating, I know I joke but you're a catch, babe. Holland would be lucky to breathe the same air molecules as you.\" \n\n\"Eh. If you say so.\" I got dressed and looked at myself in the full-length mirror while he zipped me up. The color didn't look as bad I thought it would, and when I turned to view my profile my big booty looked phenomenal in it. He gathered my hair behind me and helped French braid it away from my face. \"I think I'm waiting for him to wise up and figure out he could do so much better than me.\" \n\n\"That's just impossible.\" When he was done Colin hugged me from behind and I stiffened...but I didn't pull away in panic like I usually did. It was unpleasant, but bearable. When his green eyes bugged out and met mine in the reflection he spoked the same sentiment I thought. \"Holy shit. I'm touching you. You're actually letting me touch you.\" \n\n\"Guh, yes, okay. Get off me now.\" He let go and I shuddered off the feel of his skin on mine. While Holland's hands were usually cold and comfortable, Colin ran warm like I did and the heat from him made me feel like I was going to spontaneously combust right then and there in my bedroom. His goofy ass just kept grinning even as I dragged him out of my room to hit the town for the night. \n\n*** \n\nIII: Nobody Else but You. \n\nOur arms and legs were tangled in a familiar way, our bodies slick with sweat mixed with lingering pulses of pleasure and there was no other place I'd rather be. I didn't remember the sex by details but by the way my body felt; worn and warm and happily fatigued. \"I like this,\" I whispered against his chin before placing a kiss on the stubble that lay there. \n\n\"Mmm,\" the gentle rumble from his chest passed into my own. \"I'm sorry I made you feel badly, little one. I truly didn't mean to upset you.\" \n\n\"You certainly made up for it.\" He chuckled, sweetly kissing my forehead while his fingers traced delicate patterns over my back. I mustered up the courage to ask \"Is this real? It feels real even though I know it's not, but I wish you were here. I want to keep this feeling.\" \n\nWith a careful push on my hip I found myself flat on my back with his hard body covering mine. He blanketed me underneath his firm muscles and surging heartbeat, his cheek grazing mine until I offered my lips to his in what he called a gift. \"It's real to us and that's all that matters,\" he whispered against mine, \"It's easier this way. You can be yourself here, give yourself freely without being lost in your own head. I can love you the way you need here.\" \n\nI ran my hands through his sweat-soaked hair, damp from the vigorous lovemaking we'd engaged in for what felt like hours. \"I want this all the time. I don't want to go back to my life before. I need love and whispers and you.\" \n\n\"You have me.\" His eyes lifted to mine, pain teetering with pleasure and a thousand emotions I couldn't name if I had until the end of time. \"Every moment of every day, even if I'm not able to be here. I swear to you. You have all of me.\" \n\nA piercing ring snatched me out of dreamland and into the waking world, at least enough for me to slide one eye open with a dramatic pout. Pulling my phone from underneath my pillow I saw the person interrupting my sleep at three in the morning and I hesitated in answering it. I forced myself to turn over and sit up, right as the last ring was to send the caller to voicemail I swiped the green button across the screen and held the phone up to my ear. \"Hey Boss.\" \n\n\"Sydney.\" The sound of my name was followed by a relieved hum. \"My apologies, I know it's late. You have no idea how good it feels to hear your voice.\" \n\nI wasn't sure how to respond to that. \"How's Paris?\" \n\n\"Paris is...I'm sitting on the balcony of the penthouse suite of a hotel I own, drinking ridiculously overpriced espresso with a scenic view of the Eiffel Tower and I can't enjoy any of it because I'm positively miserable without you.\" \n\nI pinched the bridge of my nose and shut my eyes tightly. The words were there, they sounded good and all, but they didn't do anything to alleviate the ache I felt in my stomach. \"It's fine, Max. Work comes first, I get it.\" \n\nAn unexpected pause followed. \"Don't. Don't do that.\" \n\n\"Do what? I'm trying to be understanding - \" \n\n\"No, what you're trying to do is placate me so you don't have to tell me how you're actually feeling. You will be honest with me, Sydney. Don't sit there and tell me everything is fine when I can practically hear the ire in your voice. Do. Not.\" \n\nI gripped my phone so hard in my hand I swear I could have crushed it if I really tried. \"What do you want me to say? I hate that you had to leave? Even though you're divorcing I'm jealous that you left to deal with her? Or that I haven't talked to you in almost a week because you've been living on a damn plane and I'm fucking wrecked without you and the worst part is I'm falling for you and I don't even know if you're ever coming back! Because that's what it feels like!\" \n\n\"Christ,\" he whispered gently. \"Is that truly how you feel? That I'm never to return to you?\" \n\n\"No. Or, I don't know.\" I drew my legs up into my chest and rested my forehead on my knees. \"It feels like my insides are burning to the ground. I miss you, Max, but I can't say that without sounding whiny and desperate. I really do understand that business comes first. I understand it, but it doesn't make it any easier.\" \n\nI heard a series of dings in the background and Holland swore in response. \"I'm sorry, I have a conference call I have to - \" \n\n\"Got it, Boss. Talk to you later.\" I hung up before he could, shoving the phone back under my pillow before squeezing my legs tightly in my arms. I felt the first droplet slide down my face and another before I could stop, with a strained sob I gave in and cried out all my frustration and pain. Alone, as I always seem to be. \n\nIV: Consideration. \n\nPulling up to work in the world's shittiest mood was not how I wanted to spend my last shift before heading to the beach. I was sleep-deprived and pissy and the last thing I wanted to do was sling drinks to a bunch of assholes for six hours. When I made my way to the front door every employee was out on the sidewalk, talking animatedly in the afternoon sun. I approached the weekday dishwasher Armando and tapped him on the shoulder. \"Hey, what's everyone doing outside? Gas leak? Dead body?\" \n\n\"Worse, mami. Somebody took money out of the safe last night. Tony's pissed man, goin' through everyone's locker, says he's gonna shut down 'til someone fesses up.\" \n\nI looked around at my fellow coworkers. Everyone was all atwitter at the mention of a scandal at Antonio's...except for Colin, who wasn't even scheduled to work that night. \n\nColin, the world's biggest drama queen, was standing against the wall alone, sunglasses over his eyes and his foot tapping nervously against the brick. \n\nI stomped over to him and snatched the bottom of his shirt, dragging him back over to my car and pushing him against the door. \"How much did you take?\" I hissed quietly. \n\n\"What the fuck, Syd?\" He spat out, but his voice trembled. In fact, he was shaking all over. I hadn't seen him shake so much in a couple of years, not since the last time. For the second time that day my heart broke. \"It's...I...\" \n\n\"Just tell me, Colin. How much did you take?\" \n\n\"...1,900.\" \n\nIn my head I did a quick take on my finances. I just paid all my bills, so my bank account was laughing at me. I had a couple hundred stashed in my condo but that wasn't nearly enough. I could ask my parents for a loan, but I didn't want to deal with the questions that came with it. The only thing I could come up with was... \"I'll be back in five minutes.\" \n\n\"Syd - \" \n\n\"Fucking don't, dude. Just move.\" He stepped away from the driver's door I snatched open, slammed shut and angrily drove off in the opposite direction. Three streets down I parked in front of the only respectable pawnshop in New Haven. The ding from the metal bell above the door made me feel sick to my stomach, for it was not my first time walking into this shop. A stocky man with short hair and a lumberjack beard made his way from the closed curtains in the back to the shop, shaking his head at me. \"Who'd Colin piss off this time?\" \n\n\"Not now Terry, I'm in a hurry.\" I walked up to the counter while the massive man gave me a look of pity. Unfortunately, Terry knows all about Colin's little problem; I'd hoped the last time was the last time, but here I was again. I wrapped my hand over the only thing I had worth the money I needed; I didn't want to go through with it, but it was all I had. I unclasped the 18k rose gold and diamond-encrusted watch Dad gave me as a present when I left the hospital and reluctantly handed it over. \"It was bought for 19 grand at Tiffany two years ago. I just need two.\" \n\nTerry went through the necessary steps to verify its authenticity before opening the register and counting through bills. \"Look, 'cause I love ya, I'll give you three. Something like this goes fast, Syd, are you sure you want to? I can't promise it'll be here when you come back for it.\" \n\n\"I know. Thanks Ter.\" I separated the money before tucking the bills in my purse and left before I started to cry. I got in my car and made my way back to Antonio's where everyone was still congregated on the sidewalk. Pushing past them I walked past the oddly silent bar, taking the stairs two at a time until I reached the office. I was hoping Tony was downstairs somewhere so I could just leave it on his desk and bolt but there he was, angrily digging through the drawers in the desk. \"Not now, Sydney,\" he snarled at me. \n\nI pulled the money out of my bag and tossed it on the desk with a smack. \"Two thousand.\" \n\nTony straightened and just looked at me. \"I know you didn't take it - \" \n\n\"And yet, it's there. I'm leaving, Colin's gonna take my shift.\" \n\n\"I can't - \" \n\n\"Just take it!\" I yelled, then took a deep breath. Don't take it out on him, he's not the one you're mad at. \"Tony, please. I fixed it. I know I ask a lot, but I'm begging you. Just take it.\" ",
        "Dark eyes fixated on me until I watched him slump his shoulders, out of respite or fatigue I didn't know. \"I'll see you when you get back from the beach.\" \n\nI turned to leave but in a split-second decision I spun on my heel and gave Tony a hug around the waist. His hands stayed immobile for a long minute, probably out of shock, then I felt his hand smooth down my hair. \"Take care of yourself, kid. And I mean, yourself. I'll see you next week.\" \n\n\"Thanks Tony.\" Another quick squeeze and I left the office. Everyone started to pour back in, still talking, no doubt blaming me for the theft. I didn't care. I was past caring. Colin tried to talk to me when I got to the parking lot. \"You're leaving?\" \n\n\"You're taking my shift, and you can kindly go fuck yourself right now,\" was all I told him as I unlocked the car. \n\n\"Syd - \" \n\n\"Goddamnit Colin!\" I whirled around and pushed at his chest. He stumbled backward and I shoved him again, but he just took it. \"Why? When? I thought you were doing okay!\" \n\nHe finally removed his sunglasses and his eyes were still sleep-vacant and red. \"I was. But lately, I don't know. I've been feeling shitty, and you've been off dealing with your Holland stuff - \" \n\n\"Don't put this shit on me! Just because I start dating doesn't mean I'm not there for you! You promised, you swore you were done with this coke shit!\" \n\n\"I know! And I'm sorry.\" \n\nI scoffed and looked up to the sunset. My bright and breezy summer was rapidly falling apart. \"Look, I'll go to NA with you tomorrow night, right now...I love you more than life itself, Col, but I am so unbelievably pissed at you and I need to go before I say something I regret. Just go inside.\" \n\n\"...okay.\" With his deflated voice he made his way back to the building while I settled in the seat of my Porsche, brimming with anger and sadness. Colin's gone through his episodes with cocaine in the eight years we've been friends but even though the bad times he never hid it from me. Maybe he's right. Holland has you too distracted. It wouldn't be a wrong assessment. I decided to take my pity party home for the night so I could sort out my priorities, and what the hell I was going to do with them. \n\n*** \n\nV: To Be Alone \n\nI sat in the New Haven Pride community center parking lot at ten before seven, staring at the lobby doors. Well, to be honest I'd been there since six-thirty, it was taking me a while to go in. This specific community center held support groups for those who were LGBT+, and though I wasn't looking forward to going into yet another Narcotics Anonymous meeting with Colin I was eternally grateful that such a safe meeting space existed. \n\nI thought back to all the signs I'd missed over the last few weeks. The jittery movements, flaky habits and supercharged promiscuity even to Colin's standards. There had been a few times he'd called I didn't answer because I was with Holland, which only fed into my guilt that I'm a shitty friend. And because the universe hates me, that's when my phone started ringing. I stepped out of the car and answered as flatly as I could. \"Hey Boss.\" \n\n\"Where are you?\" he asked informally. \n\n\"Uh, I'm in Connecticut?\" \n\n\"I've just arrived at the flat. I need to speak with you urgently.\" \n\nI shut the door and hit the lock button on my keychain before making my way inside the building. I couldn't even have time to be excited he was back in the area. \"I can't right now, I'm busy.\" \n\n\"Whatever you're doing can wait. I want to speak with you, now.\" \n\nThe fuck? The audacity of this dude. \"Actually, it can't. I'll be home later, glad you're back, see you soon.\" I hung up and didn't give it a second thought, making my way to the meeting. The last door on the left on the second floor was the designated room, and I tried to project an aura of bravado before walking through it. \n\n\"Sydney, you made it!\" I smiled at the friendly greeting of Malcolm the group leader, who gave me a wave from his chair. A giant, Black big bear type he always gave out positive, loving vibes. One could really feel at ease when he was around which I guess is why he made such a good drug counselor. Well, everyone but Mr. Patrick who was smoking by the only open window in the room. \"Whoopee, Mom's here,\" he muttered under his breath. \n\nOh, okay. This is how it's gonna be today. I took a seat next to one of the other five people in the room, a skinny blonde girl who gave me a shy smile. Malcom rang his gold waiter's bell to signify the start of the meeting and Colin flicked his butt out of the window and joined us. \"Alright, welcome everyone. This is Narcotics Anonymous, and since I don't see any new faces I'll skip the spiel. Who would like to share first?\" \n\nThe timid blonde raised her hand and introduced herself as Stacy, painkillers were her drug of choice. I kind of phased out while she was talking, taking note of how cold Colin was being toward me. His right leg was bouncing up and down aggressively and I could practically feel anger pouring out from him. When Stacy was finished two other people offered their testimonies and Malcom thanked them for sharing. \"Who's next?\" \n\n\"Oh, I'll go,\" Colin spat out suddenly, shifting in his chair until he was staring daggers straight at me. \"I got suspended from my job today. Indefinitely.\" \n\nMy expression went from shock to confusion. \"I'm...is that supposed to be my fault?\" \n\n\"Fuckin' right it's your fault. If you wouldn't have stuck your nose in the middle of it Tony never would have known who took the money.\" \n\n\"Hold on,\" Malcom interrupted. \"Colin, you stole from your job at the bar?\" \n\n\"I didn't steal it, I borrowed it.\" He shoved his hand through his hair and grunted. \"Look, I owed some guys, and I already had jobs lined up to make the money back. I was going to mail it in anonymously so Tony wouldn't know who it was. Everything would have been fine.\" \n\n\"Fine? Everything would have been fine?\" I barked out a hard laugh and glared at this fool. \"Are you so goddamn reckless with your life that you would risk your sexual health as well as your job? You could have gotten Tony fired and he doesn't deserve that. He may act like a shlub but he's not stupid, he would have found out eventually and then where would you be?\" \n\n\"Where I would be is none of your business, Syd! I didn't ask you for your fucking help!\" \n\n\"No. No, you don't ask. You never ask, but you sure as shit take when it's beneficial to you. Do you ever stop to think about who your actions affect, Col? I am always here for you, and I'm always the one to bail you out of your shit. You went way too far this time; not only did I risk my own fucking job and pawn the one thing that means the world to me, but when Holland finds out about this I'm probably going to lose him too. Do you even care about that?\" \n\nCold green eyes didn't even blink. \"No. I don't care. Maybe if you were a little more concerned about getting some dick of your own you'd have something going on in your own life and stay the fuck out of mine.\" \n\n\"Colin, that's enough.\" Malcolm interjected. I just stared at this person, this shell of man that I couldn't even recognize in that moment. Colin turned his head and stared at the wall, not acknowledging me or anyone else for the rest of the meeting. I just sat there, embarrassed and seething. \n\nWhen the hour was up the first person out the room was Colin, ungrateful little bitch. The others piled out slowly while I stayed back to talk to Malcolm. \"I don't know what to do, he's so mad at me.\" \n\n\"He's feeling a heavy dose of shame I don't think he's felt before. He's lashing out because he's in pain, you know he didn't mean any of it.\" The older gentleman handed me a folder as we walked out of the classroom and patted my shoulder gently. \"These are some really great rehab centers right here in Connecticut. If you and Colin need help deciding, don't hesitate to call me, okay? And don't worry - he's angry now, but you did the right thing by getting him back here.\" \n\n\"Thanks, Malcolm.\" He went back into the room and shut the door. I turned to leave and got stuck to the floor. \n\nHolland was sitting on the bench in front of me. Casually clothed and looking pissed. \n\nHe stood and took a few steps toward me. He looked like he wanted to yell and scream, which he had every right to considering the circumstances. Instead, he reached his hand out to brush my bangs away from my eyes. This isn't how I wanted to see him. This isn't how I wanted him to see me. My bottom lip started to quiver. \"I'm sorry,\" I mouthed silently as I looked up at him. \n\nMax inhaled deeply, cupping the back of my neck in his hand and placing a kiss in the middle of my forehead. \"Let's go home.\" His fingers slid down my arm until they found mind, interlocking them together we walked in unison toward the exit. \n\nVI: Blowback \n\nAn hour later I was sitting against the headboard on Holland's bed, waiting for him to come in so we could get this breakup over with because I knew it was coming. At least I'd be taking the Ramones shirt he gave me to change into after my shower as a parting gift since he was taking his sweet time coming back to give me my walking papers. I closed my eyes and waited. \n\nThe bed dipped beside my leg and fingertips brushed against my forehead, before pressing his palm flat against my skin. \"Sydney, you're burning up, are you alright?\" he asked with alarm in his accent. \n\nMy eyes slid open, damp and a little unfocused when I tried to give him a smile. \"Yeah. I run hot when I'm stressed, I'm okay.\" Reaching up I pulled his hand into my lap and closed my eyes again. \"I'm sorry, Max. I should have told you about Colin.\" \n\n\"Shh. We can talk it over in the morning.\" \n\n\"No, I have to get it out.\" I swallowed thickly before I started explaining. \"Tony went on a rampage at the bar yesterday, accusing everyone from the servers to the dishwasher of stealing the money. Everyone was gossiping over who could have taken it, except Colin was oddly quiet, and he's never quiet. After threatening to kick his ass he confessed he'd been getting coked out every night for the past few weeks, back-to-back benders with a bunch of rich-kid assholes on the east side and was in the hole. Tony's dumbass left the safe open the other day when he ran out of the office to take a personal phone call and, well.\" \n\nHolland's jaw ticked angrily. \"I'll be installing cameras first thing in the morning. However blaringly idiotic, Tony's error in judgement isn't an excuse.\" \n\n\"No, I know. Colin felt terrible once he sobered up long enough to remember what he did, and tonight he said he was ready to start escorting again just to pay it back. He loves his job, he was just desperate. I tried to sneak in the office and leave the money on the desk but Tony caught me. I figured you hadn't come back yet and the money was returned in full so you didn't need to know.\" \n\n\"I didn't need to...honestly, Sydney. Colin stole from me and you didn't think I needed to know? That is the most asinine line of thinking, how am I to trust you if you keep something this serious from me?\" My eyes started watering over while he scolded me and he shook his head. \"This is absolutely unacceptable. First off, I'm suspending you for two weeks, and you are off weekends for the next two months. Don't you ever lie to me about something like this again, do you understand?\"  \n\n\"Yes. I'm sorry.\" A tear escaped my eye and he swept it away with his thumb. I felt horrible, but at least the anger in his eyes was melting away. \"What about Colin?\" \n\n\"Oh, as of this moment Mr. Patrick is no longer employed. He's fortunate I'm not contacting the authorities.\" \n\n\"But,\" He narrowed his eyes at me while I pathetically pleaded for Colin's job, \"You got your money back. He clearly has a problem, can't you just - \" \n\n\"No. Do you have any idea how it would look if I were to allow him to continue working for me after this?\" He reached for my face and I turned away from his touch. \"I understand he's your friend, little one, but I can't.\" \n\nI nodded, the dark strands of my hair covering my profile so he didn't have to see how embarrassed I was. \"He really fucked up this time.\" \n\nReaching for me a second time he tucked my hair behind my ear and I didn't shy away. \"It's much more than that. He stole funds to support his narcotics habit. He deceived his employers, and you. You sold the most prized possession you own the cover his tracks,\" I rubbed my bare wrist at the mention of my missing watch, wondering how he was so observant, \"You're now being suspended and placed on restriction, not to mention the fact this would have effectively ended our relationship had I not been so understanding. To top it all off, now you're ill. Yet you're still defending him. Why?\" \n\nI stared at him for a moment, then scooted closer so our knees were touching. \"When I left home at sixteen, Colin was who I moved in with. He used to throw these wild parties almost every night of the week, which, trust me - as an angry teenage girl hanging out with a bunch of bombed twenty-somethings was the highlight of my life. But every morning he would kick my ass out of bed so I made it to class on time. He'd say, \"You need to get up and make something of yourself, so you don't end up a twenty-year-old girl turning tricks living with some asshole roommate that steals your haircare products!\" I couldn't help but to laugh at the memory. \n\n\"Every cheerleading competition, every awards ceremony he was in the stands cheering me on. For a month he slept with some of the nastiest fucking guys just so he could pay for a trip to Greece when I graduated from Yale. Hell, he was the one who got me this job when I decided not to go to law school. I know he has problems, but so do I, and he's always done his best to help me out. I know him better than anyone and I feel guilty as hell I was so wrapped up in my own stuff that I didn't see he was struggling. So I can't just sit back and watch him spiral and do nothing. He has no one else in his life looking out for him. He's family, and if you and I are going to do...whatever it is we're doing, now he's your family too.\" \n\nHolland didn't respond to my little speech right away, drumming his fingers on the duvet as he thought. \"He goes to an inpatient rehabilitation center for thirty days. If he completes the program to my satisfaction I will consider reinstating his employment.\" \n\n\"He can't afford that.\" \n\n\"But I can.\" He pulled his tie from his hair as I watched at him with wide, hopeful eyes. \"He goes, and you two sever ties for the entire time he's there. When he comes out he stays clean. If I hear him mucking it up once, that's it - the job, you, it's all gone. That is nonnegotiable and there is no second chance. I acknowledge you want to help but I will not allow you to sacrifice any more of yourself to do so. You need to worry about yourself a little more, alright? And if you need help with anything in future, please ask me. I don't want to have to do this again.\" \n\nI leaned forward and wrapped my arms around his neck, resting my cheek on his shoulder as he drew me into him. I only pulled back enough to ask \"Hey, how'd you know where I was anyway?\" \n\nHis eyes flickered up to the ceiling before finding mine again. \"I knew you didn't take the money, figuring you were covering for someone. As Mr. Patrick is your friend...I've done the same for McKenzie when he was going through his addiction. I assumed your next steps and went from there. A bit of blind luck, I suppose.\" \n\n\"Oh. Thank you.\" \n\n\"You're welcome. Now, it's time for bed, you need to rest.\" He helped me get settled underneath his sheets before he laid on top of them, curling a long arm around my body when I snuggled into his side. \"I'll stay until you fall asleep. Would you like me to retrieve Vincent for you?\" \n\nI felt my heartbeat start to relax for I was finally going to fall asleep with my beautiful blonde boy, if only for a little while. I moved my face up right underneath his chin and closed my eyes. \"No. You'll do.\" He was home. I, was home. \n\n*** \n\nVII: Get You. \n\n\"Hmm. Is it here?\" Lips connected with my fingers while oceanic eyes kept steady on mine. I shook my head and tried not to laugh when teeth nipped the tip of my fingernail. With a determined look Max tucked my hand back into my lap and lifted my right leg that was comfortably tangled with his left where we sat in the middle of the bed. He kissed the little piggy at the end of the line. \"Here?\" \n\n\"No, and you better not have a foot fetish.\" He hid his smile behind my foot but the dimples in his cheeks were clear as day. Even though he'd slept in the second bedroom I was woken up in the best way that morning - with sweet kisses and a hot cup of coffee. We'd spent about an hour playing twenty questions where, among basic things I discovered his favorite color (orange), his favorite way to be touched (my fingers dragging through his hair) and most overwhelming feeling (\"I'm not sure, though I do have affinity for rebellious apathy.\"). For his recent turn he asked me where my favorite place to be kissed was and he'd used two of his three guesses. I pushed at his chest with my toes before he tickled my heel and I laughed loudly. \"Okay, okay. I'll give you a hint: next to the obvious dirty answer it is the one place on my body no one has ever thought to kiss.\" \n\nHis eyes did that spectacular blinking thing and I swear I could see the light bulb going off above his head again. His left hand caressed my jawbone before his thumb lifted my chin, tilting my head back. He made me wait for it, warm pants of air traveled from my cheek, to my clavicle, before he gave the hollow of my throat a lingering kiss. \"Here,\" he stated definitively. \n\nI moaned quietly, gripping his forearm in my hand. \"How did you know?\" \n\n\"It is underestimated, overlooked and perfect. Just as you are.\" He spoke against my skin in a whisper that sent a chill through my body. \"I rather like the idea of being the only one with this knowledge. It feels like mine.\" \n\n\"It's yours. I'm yours. Which I'm not gonna deny makes me uncomfortable, but in an authentic way. If that makes sense.\" \n\nMax let his fingers roam on my exposed skin. \"I haven't done a very good job of emphasizing how much I desire you. Not solely your body, but you, your entire being. I was never fortunate to indulge in the romantic side of things. I want all of you. I want everything.\" \n\nI chewed on my lip while I processed what he was saying. \"I don't know how to give you that. Everything is...a lot. God, I'm the dumbest person around you.\" \n\n\"Not in the least, and it doesn't have to be all at once, Sydney. I desire every part because I am selfish when it comes to you, but I don't mean at one time or even at this specific moment. I think you have this 'All or Nothing' expectation and it can't realistically work that way. There will be times where you feel you need to guard yourself, such as,\" he bumped his forehead against mine, \"such as when I'm travelling so much I may have to go a week or two without so much as a five-minute phone call.\" \n\nI ran my nails over the skin of my ankle nervously. I really wasn't good at the emotional stuff. \"I'm finding it hard to not feel abandoned when you leave. Yes, I know you don't live here, I know you have a million things on your plate and I guess...I guess I don't want to feel like I'm just one more thing you have to deal with out of obligation.\" \n\n\"Where is all this coming from? I've never known you to be anything but exceedingly self-confident.\" \n\n\"Yeah well, I...\" A thought struck me, one I'd been pushing down and couldn't quite bring myself to say out loud. \"I'm uh, having the big kid feelings. I've never felt them before, it's weird.\" ",
        "Max dropped his hands and rested them on either side of me, slightly raising his eyebrows. \"Weird in a good way, I hope.\" \n\n\"Yeah, it's like...it's like there's a million tiny firecrackers inside me, right? And when you smile at me or when we're just talking about nothing, one or two go off and leave this cozy, pleasurable feeling in my heart. But when I get mad at you or I'm hurt it's like a hundred light all at once and it burns, like I'm being lit on fire from the inside and it fucking kills. But eventually the fire goes out and it's back to the happy little sparklers. Does that make sense?\" \n\nHe looked up at the ceiling in thought. \"Absolutely. Except it feels the opposite for myself - being with you feels like the Big Bang, an absolute celebration of color and sound and creation. When I'm away - when you push me away - my heart reduces to those few sparks and it's not enough. That's what hurts me. I am overwhelmed by your presence all the time and I despise when I don't feel that way.\" \n\n\"Oh. Does that mean you're having the big kid feelings too?\" \n\n\"Yes. I, ah, big-kid-feel for you madly, wicked girl. I know this isn't easy for you. It may not always feel as such, but I swear you are my utmost priority. I need you to tell me if you're upset, if I'm not doing enough to make you feel wanted. You are wanted, more than I could ever express in my lifetime. I'm not used to someone showing concern over my schedule so I'm sure I can be obtuse in realizing so, and while it can be unpredictable at times I will do my best to keep you better informed.\" \n\n\"And I'll stop acting like a crazy robot person.\" Our connection was suddenly broken by the ringing of his cell phone. Sadly, it wasn't a phone call, it was his alarm. He reached over the bed and switched it off before tucking it in his front pocket. \"I have to leave for the airport, little one,\" he apologized. \n\n\"I know.\" I didn't even try to hide my disappointment. He rose off the bed and zipped up his carry-on suitcase while I sat there trying not to pout. He turned and motioned for me to come to him, in half a second I was off the bed and in his arms while he held me tightly. I didn't want to tell him how much I was going to miss him, how much I wish he wouldn't go. How one night wasn't enough time with him. All I said was \"Don't die in a plane crash or disappear in the ocean, okay?\" \n\n\"I'll do my best,\" he chuckled while pushing my hair behind my ear, bending down to whisper \"Enjoy your time at the beach. I'll try to return in no more than a week's time. I'm not leaving you, I'm simply leaving. Please tell me you understand.\" I nodded against his chest because the words got stuck in my throat. Max tried to get me to look at him and I refused, trying not to let my emotions get the best of me. He threaded his hand through the back of my hair and pulled, my reluctant face meeting the firm mask of his. \"Tell me you understand, Sydney,\" he repeated, firmer this time. \n\nMy lips parted in a seductive inhalation. Why the fuck am I liking this? \"You're not leaving me, you're just leaving.\" \n\nHis grip didn't tighten but he didn't let go either. \"Stay. Here if you'd like, when you return; I know you don't like being in your flat alone at night. I need to...\" he paused before practically forcing himself to say what was on his mind. \"I need to know you're alright. I can't leave if you're not.\" \n\nI placed my palms flat on his chest and raised on my toes. Resting my lips against his I just stared up at him and his eyebrows lifted again in question. I kept looking at him, then I crossed my eyes and puffed out my cheeks until he grinned. Funny face is always a winner. \"You're so silly,\" his hand came around the back of my neck and squeezed with the lightest of pressure, \"and you're all mine.\" \n\nWell, shit. \"Oh. I think my panties just fell off.\" \n\n\"Hmm.\" Max let go of the suitcase handle and dropped down on one knee in front of me. His fingers tickled my outer thighs before slowly sliding up my legs, just as his fingers disappeared underneath the hem of the shirt my breath hitched. He stopped moving and looked up at me, waiting. I swallowed and nodded once, though I was sure I was going to hyperventilate and pass out. His search was fruitful from the moment his fingers grazed cotton to the tortuous slide of fabric from my hips to my ankles. I stepped out of the legs and he stood, casually folding my underwear in his hands and sticking them in his pocket. \"Since they were to fall off I'll be keeping them. The fact they have tiny cat faces on them is so positively you and just makes my big-kid feelings that much bigger.\" \n\n\"That was so hot what the fuck!\" I shouted while jumping up and down dramatically, and when he scooped me up mid-jump in his arms I wrapped my legs around his waist and kissed him with everything I had. When I dismounted and let him go, I felt...okay. I was okay. \"Call me when you get settled?\" \n\n\"Of course, I'll check in as often as possible. Be well.\" He squeezed my hipbone firmly, swiped my bottom lip with his thumb, threw me the most handsome of winks and left for his flight. \n\n*** \n\nVIII: Nights. \n\nThe temperature in my body had risen to an uncomfortable level, sweat covering every inch of my skin as if a rainstorm had entered the room and shot me full of lightening. A heavy moan flew from my mouth, a pair of silk panties blocking my tongue from forming any intelligible words. My head lolled back and hit the damp pillow. I prayed for what was coming, the barrel of pleasure I'd been denied for so long. \n\n\"Sydney. Look at me.\" \n\nI gathered the sliver of strength I had left and willed myself to comply. Through heavy eyelids I studied my captor in the candle-illuminated room, the sweet torturer whom I desperately needed to please. Who I needed to please me. Blue eyes roved over my bare form while strong hands with exploring fingers studied goosebumps, every faint stretch mark, leaving no inch of me untouched. \n\nA dark laugh burned through my body like hot coals. \"I see we've forgotten the rules again, hmm?\" Two skillful fingers gently rubbed the slippery flesh between my thighs, barely connecting with swollen nub that was my lever to release. \"Quite a shame, really. I was so close to letting this pretty little pussy come so I could fuck you. Now we must start all over again.\" \n\nHe stretched his body over mine and removed the soaked fabric from my mouth, his own lips crashing down on mine before I could urgently plead for forgiveness. The canines of his teeth bit down on my bottom lip just enough for a taste of blood to mingle with my scent and his. He moaned and lapped up hints of red wine and tears. His mouth left sweet kisses of deception down my neck. \"Tell me the rule, Sydney.\" \n\nI whined, wanting to cry but needing to please him more. He rocked his steel flesh against my hungry slit, grinding down even harder as a tease when my hips attempted to lift to meet his. \"My eyes on you when you let me come.\" \n\n\"This is the fourth time you've slipped. I'd really love to be inside you, but not until you do as you are told.\" His face rose over mine, the vast shadow of his face plunging me into the depths of longing and loss. \"Are you going to submit to me?\" \n\n\"Yes.\" It wasn't a question of if I would, or if I could. It was when. \n\nNuzzling my nose with his, a long arm reached over to the nightstand to grab the digital kitchen timer and punch in five minutes. One minute more than the last time. Four minutes more than the first. Replacing the reminder of my disobedience on the table my panties were then shoved back into my mouth. A cocky grin and a swift return of his head between my legs, I prepared myself for the storm he was once again brewing in my body... \n\nMy eyes opened to twilight outside plantation shutters and I had to blink a few times to focus. The light bounced off the soft peach walls, illuminating the colorful throw I was lying on top of on the sole queen bed in the room. I sat up and rubbed my eyes with the heels of my hand to try and wake up. When Holland left that morning so did I, making the four-hour drive to Shane and Tess's vacation home in Bethany Beach. It was one of the quieter and family friendlier beaches in the area; the perfect place to chill, but if I felt like getting a little rowdy there were plenty of bars and nightclubs at some of the livelier surrounding areas that were only a cab ride away. \n\nChilling out was definitely on the menu this trip around, especially whenever the Thomas' decided to show up. It wasn't like Tess to be late. I grabbed my phone to call and see where she was, but it started ringing in my hand as soon as I unlocked the screen. I grinned and answered. Tess could wait a few minutes. \"Well hey there, Boss.\" \n\n\"Have I confessed how utterly erotic your voice sounds when you've just woken up?\" Max growled playfully in my ear. I was feeling infinitely better after our conversation that morning, and getting to talk twice in one day made it that much better. \"Did you rest well, sweet girl?\" \n\nI yawned and stretched out my limbs. \"Oh yeah, the sea air is like nature's Ambien to me. Hey, you're still alive!\" \n\n\"Well I did say I'd try my best and I tend to be a man of my word.\" \n\n\"Ooh, I like that. So where'd you jet off to this time? Sounds noisy.\" \n\n\"It is, I'm...Oh, thank you,\" he said to whomever was on the other end of the line. \"I'm in Manhattan until the end of the week then it's back to London. Simone's attorney's contacted McKenzie and Charlie, seems they're a bit more open to a civil mediation when I return.\" \n\n\"Looks like your plan worked.\" Max had no physical proof Simone hired the person who broke into his home but when he got back he threatened her with releasing some very personal and damaging information to the press if she didn't cut the bullshit and start playing ball. He never told me what the thief was after but it must have been bad enough to scare the bitch. \"Does this mean we'll actually get to *gasp* have a real date?\" \n\n\"Of course. We can do anything you'd like.\" \n\n\"Mmm, something I've never done before. Like going to Las Vegas in a hot air balloon, or bullfighting.\" \n\n\"...this date is going to cost me dearly, isn't it?\" I trapped the sleeve of my shirt between my teeth and nodded, even though he couldn't see it. \"You're certainly worth it, you know. I'd spend every cent I have on whatever would make you happy.\" \n\nMy smile faded a little. \"But you know you don't have to, right? I was just kidding Max, you know I don't care about your money.\" \n\n\"Yes, I know. That's why I would.\" And just like that, the smile was back. \"I have to go prepare for dinner with a few fellow investors. I'm mostly visiting hotels and properties I own during my time here, if all goes according to plan I should have the entire evening free on Friday if you'd have time to Facetime for a bit.\" \n\n\"I'm all yours, Boss.\" \n\n\"Words from an angel. Relax tonight, I'll ring you tomorrow.\" We said our goodbyes and hung up. I couldn't help but feel giddy. He was trying. Despite not officially being together the fact that he was trying sealed the deal for me. \n\nThere go those love thoughts again. \n\nWhich seemed so ridiculous to think about, because I'd known him all of five weeks and I've only physically seen him half that. Still, to let the feeling settle in my body was foreign and exciting. I'd never been in love before, and even though my track record with guys left a lot to be desired...I don't know. Max seemed like maybe he'd be the one to experience that first with. Well, when I told him, which wasn't going to be any time soon. I'm not crazy. \n\nI mellowed in the feeling until I head the front door open and slam shut. I rolled off the bed to greet my friends and snatch up my nephew for cuddles but when I made my way down the stairs it was only Tess tossing her bag on the white couch. \"Hey Tessy! Where's the rest of the brood?\" \n\nHer eyes purposefully avoided mine and she shrugged. \"They're coming tomorrow, maybe. I don't know.\" \n\n\"Ruh roh. Raggy want rine?\" She nodded at my Scooby Doo impression and met me in the kitchen, her pulling a bottle from the wine fridge and me locating the corkscrew. I started opening the bottle when I guessed \"What are you and Red fighting about this time?\" \n\n\"My dad wants me to relocate to Seattle.\" I stopped twisting and watched her rub her arm nervously. \"He's trying to tap into the technology game, get tech startups investing in our firm. I'd run the whole operation out there, hire my own people and obtain my own contacts. It'll be mine to build up and the money would be ridiculous, theoretically.\" \n\nI popped the cork and tried to keep all emotion out of my voice at the thought of my best friend moving three thousand miles away. \"So, Shane doesn't want to go?\" \n\nTess slumped forward, rubbing her temples with her forefingers. \"No, he wants to go. I don't. I have enough accounts as it is, not to mention school. Shane has projects here that need to be finished, and Eli loves his preschool - \" \n\n\"Okay, yes, everyone's busy,\" I grabbed two wine glasses and poured a hefty amount of pinot grigio into both. \"Seattle has business schools, houses that need flipping and plenty of hipster-baby preschools. Now, what's the real reason you don't want to go?\" \n\nShe sighed before draining half her serving in one gulp. \"I'd be running the whole show,\" she confessed when she set the stemless glass down. \"I screw up, that's on me. It fails, that's on me. It's a lot of pressure I don't know that I'm ready for. When I talk about it with Shane he says, \"You're great and can totally do it\" but he has to say that, you know?\" \n\nI mulled it over through my own sip. \"So, what's the worst that happens? You go, you fail, you move back and continue working for Byron. You're the boss's daughter, you literally have nothing to lose. These are not problems, Tess.\" \n\n\"Shut up. Anyway, they're not coming tonight so you can finally tell me what's going on with you lately.\" \n\nI tried and failed miserably at keeping the idiotic lovesick puppy look off my face. \"I kissed Holland and he stole my underpants.\" \n\nA blank stare greeted me before she shook her thick hair around her shoulders. \"Well, screw it. Grab another bottle, we're going down to the beach.\" I bounced happily and gathered our supplies for a good ol' fashioned gab session. And gab we did, draining the first bottle and most of the second while we gossiped loudly into the night air. I couldn't stop laughing and Tess couldn't sit upright to save her life. \"Okay, oooookay!\" she slurred slightly while she wobbled in her seated position. \"So, when are you gonna sleep with him?\" \n\n\"What!\" I screeched and I swear the loud noise knocked her over again, she's such a lightweight. She gave up trying to sit up and rolled over on her back. I laid down next to her and propped myself up on my elbow. \"I dunno. I guess when he gets divorced.\" \n\n\"Yaay. Sex is awesome.\" \n\n\"I dunno man, we were kinda dry humping on his bed and homeboy is big. Like, Brazzers big. I'm a little freaked out.\" \n\n\"But porn is awesome too! If it's ethnic...ethically shot. Did I tell you about this documentary I saw - \" \n\n\"Don't nerd out on me Thomas, I need help!\" I closed my eyes and rested my cheek on my bicep, the sound of the waves washing my insecurities and stress away. \"What if I feel weird? Or lost my mojo? It'll suck if he has a big dick and I can't play with it right.\" \n\n\"Oh, you'll be fine. Sounds like he loves you so it can't be bad.\" I cracked my eyes open just enough to see Tess all the way down on her towel, falling more unconscious by the second. \"Sounds like you love him too.\" \n\n\"Yeah.\" I sat up and tucked my legs underneath me, watching the water ebb and flow against the sand. I reached over and grabbed her hand right before she fell asleep, and when she squeezed my fingers I squeezed back. \n\n*** \n\nXIV: 9. \n\nSomething warm, rough and wet ran across the back of my shoulder repeatedly, which was not how I wanted to wake up the next morning. I turned over on my back and opened my eyes to Austin, the Thomas' Black Labrador, breathing sticky hot breaths directly in my face. \"Ugh, dude, no,\" I complained but scratched him behind the ear anyway. He barked once then jumped off the bed and scampered out of the room while I thought about taking a nice hot shower to get the feel of dog spit off my skin. Figuring I'd go for a run first I got up and threw on my workout gear, a pair of spandex shorts with a matching sports bra top. Socks and Adidas was the last of my outfit and once I grabbed my phone and earbuds I was good to go. \n\n\"Well good morning, Princess,\" Shane greeted me when I jogged downstairs into the living room, peering at me from the kitchen over his oversized coffee mug. \"Y'all have fun last night?\" \n\nI smirked at the big hunk of a man that seemed to dwarf everything in the room. \"I have complaints about your wife, Red. I had to haul her dead-weight drunk ass back here from the beach last night.\" \n\n\"You don't have to tell me, shit. You know that girl can't keep up, it's your dumbass fault for gettin' her drunk in the first place.\" \n\n\"Whatever. And what is with her and porn? It's all titties and ass with her.\" We shared a laugh at his kinky little bride before his expression sobered. \"She tell you about Seattle?\" he asked. \n\nI shrugged and looked out of one of the bay windows. \"Yeah. I think she wants to go, she's just freaked.\" \n\n\"So am I, to be honest.\" I turned back and he was running a large hand down his face. \"It'll be good for her to get out of her comfort zone. She won't admit it but she's gettin' restless here, she thinks it makes her sound ungrateful or somethin'. It's hard to figure out what the hell she's thinkin' when she's screamin' nonsense at me.\" \n\n\"I get that feeling. Keep working on her, she'll come around.\" I once again pushed aside the sadness that came with thinking of them leaving. \"I'm gonna go for a run, you want to come?\" \n\nShane shook his head, filling a matching mug with coffee for his comatose wife. \"Nah, the boy's still sleepin' so I should probably go talk to her. Before you go, you got a delivery. It's on the table.\" \n\n\"Thanks. Hey, when did you fall in love with Tess? I'm doing a poll of sorts.\" \n\nHe started beaming like an idiot and I joined in, it was infectious. \"The first time I made her laugh. The porn thing is just a huge bonus.\" I snickered and he made his way up the stairs while I searched for my package. A plain silver gift bag was set in front of one of the white dining chairs and I pulled out a black box with the Rolex crown insignia on the top, along with a note. Tearing into the small envelope I pulled out a card with handwritten script etched into it: \n\nThough I know nothing can replace the gift from your father I only hope this is an acceptable substitute. I am endlessly counting down the minutes until you are in my arms again. \n\nBig kid feelings, \n\nMaxwell \n\nTucking the note underneath the box I clicked it open and almost dropped it when I looked inside. An Everose pink gold watch with a diamond paved dial and pearl master bracelet, rounded links covered in ruby stones stared right back at me. It was the most opulent and most gorgeous piece of jewelry I'd ever seen in my life. I almost didn't want to touch it. I set the open box back on the table and pulled my cell phone from my armband, snapping a picture of the watch and typing out my thanks to Max. Are you trying to get laid? Because this is how you get laid. \n\nI watched with anticipation as he typed his response, mere seconds passed before it came through. Well, goodness. If I had known, I'd receive such a positive reaction I would have doubled the salesperson's commission. I leaned back slightly with a hardy ha! and left the house for my run. ",
        "*** \n\nX: Electric Love. \n\nIs it wrong I'm jealous of your leisurely afternoon, James? Not for your lack of responsibility while I'm stuck in a meeting but almost entirely because others are able to spend time with you and I'm not. \n\n\"Who's she been textin' all afternoon?\" \n\n\"A boy, I think.\" \n\nWell whenever you get back hopefully you can come with me. I mean, come to my friend's beach house, not come, like, orgasm with me. Though I wouldn't mind that either, if you wanted. It's not a requirement...or maybe it is? Damn you for frying my brain with your dashing good looks and quick tongue. \n\n\"Aww, does our little Sydney have a boyfriend?\" \n\n\"I hope so, she really needs to get laid.\" \n\n\"You dipshits know I can hear you, right?\" I looked up from my phone - that, admittedly, I'd been on all afternoon - to Tess and Shane sitting across from me grinning from ear to ear. We were sipping beers on the back porch, the covered patio giving us a little relief from the blindingly sunny Delaware day. Holland and I had been texting non-stop since I received his gift, making my morning run and his afternoon meeting almost impossible to get through. \"You guys are like teenage girls, and may I remind you that you were so much worse when you were dating?\" \n\n\"Which your ass stayed meddlin' in, so don't ruin our fun,\" Shane teased. \n\nMy phone vibrated and I unlocked it to read Holland's latest message. I would be glad to meet your friends. I'm curious to see what sort of people can put up with you, wicked girl. \"And you are now married with a kid, so really you should be worshipping the ground I walk on.\" \n\nTess balanced her beer on the arm of her chair. \"Will you settle for occasionally calling out your name in bed as tribute?\" \n\n\"Deal.\" Excuse you babe, I'm fabulous. Not everyone is lucky enough to be in my presence, even these assholes who keep making fun of me for texting you. I peeked up to find them with smug looks on their faces. \"Stop staring at me.\" \n\n\"Daaaaaddy? Daddy! Daddy Daddy Daddy!\" Eli - my saving grace - was up from his nap, his sweet voice coming through the baby monitor. Shane glanced over at Tess as she pulled her baseball cap low over her eyebrows. \"Hey, he called for Daddy.\" \n\nShane groaned as he stood, his muscular frame casting a large shadow across the octagon-shaped wooden table. \"I'll remember that at three in the mornin', woman.\" He bent down to kiss his smiling wife before disappearing into the house. My phone buzzed again. Ah, so it's not just me. McKenzie has been mocking me endlessly each time I mention you, which is so very often. You're not the only one with a fried brain, love. Have I mentioned how much I miss you? \n\nMy fingers rested on my lips as I tried to hide my smile. I miss you too, Boss. I don't do the feelings thing too well but I'm so wrapped up in you, it's tortuous. You keep it up with the sweet words and you'll be stuck with my ass for the rest of your life. I dropped my phone in my lap and raised my eyes up just in time to see Tess laughing at me. \"Shut up.\" \n\n\"You are so in love right now!\" \n\n\"Shut up. Shut up shut up shut up.\" I took a deep swallow of my beer, the fizzy liquid flowing smoothly down my throat. \"Lemme ask you something. When did you realize you were in love with Shane?\" \n\n\"Oh yes, he mentioned you might ask that.\" Her eyes followed the surf as I watched the pleasant memory wash over her face. \"If I'm honest, it was probably the minute my eyes met his. At least, that was the start of it. My fate was sealed when I kissed him, though.\" \n\n\"Aww. That's gross.\" She picked up a tortilla chip on her mostly empty snack plate and chucked it at me, and right when I threatened her to throw one more damn thing at me Shane appeared with Eli tucked under his arm as if he were carrying a log. \"Someone take this kid before I throw him in the trash.\" The toddler shrieked with delight as Shane shook him before setting him down. I opened my arms wide as he ran over to me, climbing onto my lap and hugging me as tightly as his little arms could. 'Hi Auntie S'ney! Gimme kisses!\" \n\nI did just that, kissing all over his fat cherubic face. He had his mother's facial features and smooth brown skin, his greenish-brown eyes and dark red hair was all from Shane. Tess faked a pout. \"Hey, what am I, little boy? Chopped liver?\" \n\nI cradled the sweet boy in my arms while he stuck two fingers in his mouth. \"Oh don't worry, as soon as he gets hungry he's going right back to you. These D-cups are for decoration early.\" \n\nShane stood behind his wife and her shoulders. They clearly solved their argument from earlier, being all lovey-dovey and shit. I liked it. \"Oh no. That boy is weaned and I'm tryin' to get started on baby number two.\" \n\n\"Oh yay! I hope you have a girl this time so Eli doesn't get too jealous. Then have another boy. Ooh, or twins!\" \n\n\"Um, excuse me.\" Tess interrupted with a disinterested face. \"Are either of you carrying all these freakishly large children?\" \n\n\"Sorry, but I love my vagina too much to do that to myself.\" The couple laughed and my phone buzzed with a new text. \n\nYou say that as if it would be a negative thing. You've consumed me. Which has come as a shock and is quickly becoming a vicious need to be near you. Touch you. Kiss you. Show you just how quick my tongue can be. In fact, I'm certain talking is the last activity we'd be indulging in were we in person so perhaps we should get that out of the way now. Are you available to talk for a few minutes? \n\n\"Oh...guys, I have to make a phone call.\" They started making exaggerated kissy faces and Eli started copying them. \"Yeah yeah, I'll be back in a few minutes.\" \n\n\"Hey, you got another package,\" Shane said when I stood and handed his kid off. \"This dude must really like your evil ass.\" \n\n\"Don't act like my evil ass isn't amazing.\" I smacked my left buttcheek for emphasis while I ran into the house, to the kitchen table where my last gift was left. This one wasn't from Holland, though. It had a Connecticut P.O. Box address on it and it was wrapped in plain brown paper. I tore it open and a piece of ripped college-ruled paper was taped face down on a worn leather square box. I turned it over and read the chicken scratch handwriting. \n\nTalked to Mr. Darcy. Taking his offer. \n\nSorry for being such a dick. \n\nDon't ask how I bought it back. See you in a month. \n\n-Colin \n\nOpening the box, nestled in an off-white cushion was the watch Dad gave me. \n\nMy hand flew to my chest as happiness bloomed inside me so suddenly it was overwhelming. Colin was going to get help, that was the most important thing to me. Having my watch back was simply icing on the cake. I left the box on the table and dialed Holland's number, making my way back to my room as it rang. Maybe my bright and breezy summer could be salvaged after all."
    ],
    "authorname": "Swig",
    "tags": [
        "black woman",
        "british man",
        "romance",
        "interracial romance",
        "drama",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/across-the-pond-ch-03-1"
}