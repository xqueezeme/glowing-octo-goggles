{
    "title": "Amy's Anal Adventure with Alice Ch. 02",
    "pages": [
        "Amy couldn't believe the week she'd had. Her boyfriend, Todd, had been busy with studying. So, she and her roommate Alice, were free to continue Amy's exploration into anal sex. Amy was still feeling a bit guilty about doing all of this behind Todd's back. However, she thought that when she was able to surprise him, for his birthday, and offer up her ass, he'd understand and forgive her. Alice still planned to come along and help explain the situation as well as participate in a threesome that Todd still was completely unaware.\n\nAs the day of Todd's birthday grew closer, Amy became more anxiety ridden about revealing what she and her roommate, Alice, had been doing at night. Alice assured her that once Todd understood that what they had been doing was to make Amy enjoy anal sex with him, his anger would melt away and he'd understand. \n\nAmy decided to call Todd to make plans for Friday night. His exams would be completed, her schoolwork would be completed as well as Alice's. The three of them could get together and talk things through, then she'd have to see what his reaction was.\n\nShe dialed his number; she was so nervous as it rang and even more so when he picked up after the first ring.\n\n\"Hey stranger, how you been?\" He said with an audible smile.\n\n\"Hey baby, I'm gooooood.\" She stretched out the o's in good. She didn't want him to think something was up even though, it indicated the opposite.\n\n\"Uh-oh, what's wrong, what happened?\" Todd asked, she knew he knew something was afoot.\n\n\"I was just calling about your birthday, Friday night sound ok. Maybe seven o'clock?\" she asked him.\n\n\"Ok, do you have any special plans?\" Todd knew there was something, but he didn't know what it could be.\n\n\"I have a bit of a surprise for you.\" She informed him. \n\n\"I hope it's a good one.\" He smiled into the phone.\n\n\"Yeah, that makes two of us.\" she muttered.\n\n\"Wait, what?\" he asked curiously.\n\n\"Todd, you know I love you, right? I mean I love you so much, I want you to be happy, I want us to be happy.\" Amy knew she was over playing her hand. \n\n\"Err, Amy, this is sounding odd. I'm not sure I'm liking where this is going, babe.\" Todd sounded ab bit nervous.\n\n\"Would it be ok if you come to my room on Friday night? Alice will be here.\" Amy asked innocently.\n\n\"I still don't think I like where this is going, but sure. I hope you don't have something awful to tell me and you're having Alice there just to calm the situation.\" Todd sounded more curious and more nervous.\n\n\"I love you baby. This isn't a bad thing, ok, really.\" Amy reassured him all the while her guilt was rising in her stomach.\n\n\"Ok, I love you, I'll see you Friday night. I can't wait to see you, I know it's been a week, but it feels like a month.\" Todd replied; he was regaining some of his composure. He was reassured by her last comment as he hung up.\n\nAmy lowered her head, \"oh God, I hope he understands.\" Amy was happy that she was going to give Todd what he wanted, but she was nervous about telling him about the things she'd done with Alice.\n\nAlice looked across the room at Amy, she could see her roommate struggling. She didn't ask why, she didn't ask what was on her mind or how she felt, Alice already knew. There was some part of her mind that questioned whether or not she had done the right thing by showing Amy everything that she knew about anal. She knew that she didn't want Amy to have a bad experience, which so many people who are not introduced to anal sex have. She thought maybe joining in with Todd and Amy, if Todd was ok with that, may just help smooth out the situation. Who could resist two girls at the same time? Hopefully, not Todd, she thought to herself.\n\nAlice got up and walked over to Amy's bed where she lay on her side, knees curled up to her chest. Alice put a hand on her shoulder.\n\n\"Hey, it's going to be ok, you know.\" Alice rubbed her roommate's shoulder.\n\n\"I wish you could know that for sure.\" Amy smiled up to her roommate. \n\nAlice's hand continued to rub Amy's shoulder and Amy stretched out her legs. Alice could tell that her presence and her touch was soothing to Amy, and she was delighted that she could offer her roommate a way to ease her mind.\n\nAmy turned onto her stomach; Alice moved her hand from Amy's shoulder to her back. Amy was wearing a light brown t-shirt top that didn't quite cover her stretch pants bottom. Alice rubbed her back up and down, she lifted her hand a bit each time she got to Amy's bra strap across her back. Amy eventually reached her hand behind her and pulled up her shirt, she unhooked the bra. Then, in one swift motion, she pulled the shirt and the bra off over her head leaving her bare back exposed for Alice to rub.\n\nAlice immediately returned to rubbing her roommate's back. She started pressing harder on Amy's back, massaging the muscles that Alice could feel were tight due to the stress about Todd. Alice moved her hand up and down Amy's back, each time stopping at the top of the waistline of Amy's black yoga pants. \n\n\"Mmm, this feels nice, thank you, I really need to relax.\" Amy said with her head on her pillow and her eyes mostly closed. \n\nAlice continued to move her hand up and down Amy's back stopping at the waistline as she had before. Eventually, Amy hooked her thumbs into her black pants and pushed them down a bit, exposing the top of her silk, purple panties. The panties almost covered her alabaster, smooth bottom. Alice could see some of her left cheek exposed where her panties ended, moving in a \"V\" toward her inner thighs. Alice got a little excited just seeing Amy's flesh.\n\n\"Ali, pull my pants down, please.\" Amy moaned to Alice.\n\nAlice was more than eager to comply. As Amy lifted her hips off of the bed, Alice tucked her fingers under the waistband of Amy's tight pants, she could feel Amy's silky, smooth panties on her fingers as she gently pulled her pants down, revealing all of Amy's silk covered bottom and her firm inner thighs and legs. She got up and pulled the pants from Amy's bare feet. Alice smiled at Amy's feet, they always looked so perfect to her. \"She has such cute little feet\" Alice thought as she removed the pants from them. She walked back up and sat down on the bed by Amy's hips again. She continued to rub Amy's back and she could tell that Amy was enjoying it by the groans of releasing tension coming from Amy's throat.\n\n\"Pull my panties off too baby.\" Amy said to Alice. Alice felt a flutter in her groin from Amy's words and sultry, sexy voice asking her to take down her panties. \n\nAgain, she got up, leaned over Amy, who once again lifted her hips off of the bed, tucked her fingers under the waist of Amy's silky panties and gently pulled them down. Her fingers brushed down Amy's cheeks as Alice removed her panties, exposing her body fully. Again, Alice pulled them down and off of Amy's little feet. Amy lifted her left leg at the knee, he panties on her big toe. Alice took them and put them with Amy's pants. \n\nAlice stood up and removed her shirt, she unfastened her own bra and removed it, tossing it on her own bed. She unsnapped her jeans and pulled them down with her panties still inside of them. She tossed the pair onto her bed on top of her bra. She then turned back to Amy, still laying on her bed, she walked over to her and lay her body on top of Amy, her breasts pressing into Amy's back, her pubic bone pressed to Amy's ass. \n\nAmy moaned feeling Alice's body cover her own. She loved the feeling of Alice's breasts against her back.\n\nAlice kissed Amy's neck, and Amy moved her head up in response, giving her friend more clearance. Alice continued to softly kiss Amy's neck. \n\nAlice whispered into Amy's ear, \"I love this so much, and please believe me when I say, Todd will too.\"\n\nAlice kissed down Amy's neck and in-between her shoulders. She dragged her lips down Amy's spine kissing and using her teeth to nip at her flesh as she made her way down Amy's back. Alice raised her body up just enough to let her nipples drag across Amy's skin, down her back, to her waist where she stopped and moved back up her body just an inch or so before moving down again. She could hear Amy moan with pleasure as she moved up and down her back. Alice continued down Amy's back again until she reached the beginning of her cheeks. Alice kissed down the center of one bum cheek, then up to Amy's waist, then kissed down the center of the other cheek. She moved her mouth back to Amy's waistline and used her tongue to lick down the center of Amy's bottom. \n\nAmy gasped as she felt Alice rubbing her, kissing her, and licking her bottom. She loved this feeling and the feel of Alice's nipples running down her back and over her butt drove her wild. Alice hadn't even touched her pussy, and yet she was already wet with anticipation. When Amy felt her tongue run down the seam in her ass a quick 'eep!' escaped her mouth. Her senses went wild. She knew she loved Todd, yet she was starting to fall in love with Alice as well. She couldn't think about that right now, her body made sure to take control of her mind and focus on what her roommate was doing to it. \n\nAlice's tongue reached the end of Amy's bottom, where her legs began. Amy opened her legs and arched her back just enough so present her waiting holes to Alice to do whatever she liked to them. Alice adjusted herself so that Amy could arch just a bit more and she went to work on her roommate's intimate parts.\n\nAlice spread Amy open, she felt Amy's body jump a little.\n\n\"Don't worry baby, mama won't hurt you.\" Alice soothed Amy. She didn't know where the 'Mama' came from, but she liked the way it sounded coming out of her mouth, so she kept it.\n\nShe moved her tongue between Amy's lips and stroked each puffy lip up and down to the sound of Amy squealing in delight and frustration. Alice smiled and flicked her tongue across Amy's clit, she could hear the intake of breath from between Amy's gritted teeth. She decided to torture her roommate no further and plunged her tongue deep into Amy's moist pussy, tasting her sweet nectar again. Alice spread Amy's ass wider, stretching out the tight hole just above her nose. She could have buried her nose right in Amy's ass. She always smelled so clean, so pretty, so girly. Alice drank in Amy's wetness, replacing it with her own as her tongue darted in and out of Amy's pussy, her fingers moving closer and closer to her tight butt hole. \n\nAmy was writhing in pleasure on her bed. She loved Alice's mouth and her tongue inside of her. She knew she could cum right now if she just let go. However, she wanted this moment, this feeling to last. Amy rocked her hips upward as Alice's tongue fucked her pussy and fingers moved closer and closer to her tight hole just above her pussy. She wanted this so badly, she wanted to be taken, she even loved hearing Alice call herself her Mama, knowing that Alice would look after her and never hurt her.\n\nAlice slid her tongue in and out of Amy a few more times before withdrawing it. She could have sworn she heard Amy moan with disappointment. However, she heard her squeal again as she swirled her tongue around Amy's bottom hole. Alice used her fingers to move in and out of Amy's pussy, rubbing her clit with her thumb as she finger-fucked Amy's pussy and pushed her tongue into Amy's ass to fuck her. Alice loved the taste of Amy's ass, she could lay here all day with her roommate and her friend, just driving each other wild, fucking each other until they both came. She wanted to fill Amy's pussy and ass, so she removed her fingers and her tongue and got up.\n\nAmy whined a bit in disappointment feeling her holes emptied at once. She couldn't believe the ecstasy she was in with Alice in control of her body. She loved it, she needed it, she wanted it. She wondered where Alice was going, and what sort of pleasure she had in store for her next. It wasn't long before she found out as she watched Alice come back to bed with a bottle of lube and her other hand behind her back.\n\n\"What do you have there, mama?\" Amy said keeping with the theme Alice had proposed earlier. She moved over a bit to give Alice a bit more room.\n\n\"Oh, you'll like it my little girl, I promise.\" Alice smiled in reply. \n\nAlice used her thumb and first finger to spread open Amy's butt cheeks, she opened the cap of the lube putting the other 'things' on her side, out of view. She tipped the bottle, giving it a light squeeze and watched as a small stream of lube dripped from the bottle and onto the space she had opened between Amy's cheeks. She watched as the lube gathered on her white skin and flowed down over her tightened butt hole, she watched as Amy used her muscles to make her hole wink at her lover. Alice was impressed with her control, her ass almost seemed to be drinking in the lubricating liquid.\n\n\"Very good baby, let the lube in, let it all inside.\" Alice cooed.\n\n\"Ok, mama.\" Amy replied loving the role play they had invented.\n\nShe was a bit shocked as the cold lube touched her bottom. She'd had enough experience now that she knew her bottom needed to be lubricated to allow easy passage of anything that Alice decided to insert in her. She pushed out and in with her sphincter muscles, just as Alice had taught her, winking her butt hole. She liked the way it felt. She could feel the lube running down her ass to her pussy and finding its way inside and around to her clit. She used her fingers to rub it into her clit before it started to hit the bed.\n\nAlice watched Amy rub her clit and started to get wet herself just watching her. She righted the bottle of lube and placed it on the table near the bed. Then she gathered the things to her side. She could feel Amy's eyes watching with curiosity. Alice took a vibrator with a clit teaser on it and turned it on. She helped to open Amy's legs a bit and teased around her pussy with the vibrating toy. \n\nAmy moaned with pleasure feeling this soft, but firm, toy touch her pussy and felt the vibrations on her pussy. She removed her hand to let Alice play with the new toy. Eventually, she inserted it inside of Amy and she gasped as her tunnel widened to take the width of this new vibrator. She moaned softly and then more quickly as Alice pushed the vibrator deeper into her pussy and the teaser on the top contacted her clit. She could explode right now, but she knew there was more to come, so she stuffed her orgasm back down and rode the vibrations in her body. \n\nAlice watched the toy disappear into her friend, she smiled knowing that Amy wanted to cum, but held back, despite her hips grinding the bed in response to the vibrator. She picked up the next toy, grabbed the lube and covered the tip of what looked like a small vibrator, except it started off like a tiny ball and each notch in the toy, the ball got larger and larger.\n\n\"These are vibrating beads my girl; they'll go into your bottom and I will pull them out and push them into you. I think you'll love the feeling. Alice said and widened the space between Amy's cheeks again. She helped get the first bead into Amy's butt and then the next two, but now she could use the ring of the toy at its base to push it deeper into Amy's bottom. As she got almost halfway inside of her, Alice pressed the space to turn on the vibration. Amy moaned loudly as the vibration rocked her body, from deep within. \n\n\"Ughhh... Oh god, wow, that's ... that's amazing Alice... please don't stop, please fuck me, fuck my butt Mama.\" Amy said, her body rocking up and down.\n\n\"Yes honey, I will.\" Alice replied.\n\nAlice took hold of the beads and let each one enterAmy slowly before pushing another one inside. She was nearing the end of the chain when Alice took the vibrator inside of Amy's pussy and pulled it out a bit and pushed it back inside. She alternated the toys in and out motion as Amy's body began to buck up and down and her cries of pleasure were muffled by her pillow so that no one thought she was screaming. Her orgasm ripped through her body; she shook with pleasure. \n\nAmy couldn't believe how intense her orgasm felt. Her body was still shaking as Alice started to remove the vibrators from deep inside of her. \n\n\"Slow baby, go slow please.\" Amy told Alice.\n\nHer body felt like it was attached to these two devices filling her holes. As they were removed, she went from feeling very full, to feeling almost empty. Her bottom felt a little sore, but it was the good kind of sore. The kind of sore that told her that she had had a good time. Eventually she rolled onto her side and beaconed for Alice to lay next to her. Alice lay down next to Amy and pressed her body to Amy's and kissed her deeply. \n\nAmy returned the deep kiss and rubbed Alice's back up and down, sliding her hand down to her bottom. Amy moved back a bit on the bed and rolled Alice onto her stomach. Amy then proceeded to kiss down Alice's back, much in the same way as been done to her. When she reached Alice's butt, she placed her hands under Alice's hips and pulled her waist up so that her cheeks parted slightly, and Amy could see Alice's beautiful holes. Her pussy was glistening with wetness from earlier. Amy put her head down and licked up the slit of Alice's pussy and then wriggled her tongue over Alice's butt hole. She made circles with her tongue around the opening and began darting the tip of her tongue in and out of the tight hole. Amy used one hand to keep herself up and with the other hand she inserted a finger into Alice's slick vagina, with her thumb she was able to manipulate her clit back and forth and up and down. Amy started pushing her tongue deeper into Alice's behind, she liked the feeling of Alice's cool cheeks on her face. Her skin felt so soft against the skin of her face. She kept licking and pushing her tongue in and out, fucking Alice's ass. \n\nAlice began moaning and sucking in air over her teeth. \"Oh god baby, you make me feel so good. Just don't stop, oh oh please don't stop.\" \n\nAlice couldn't believe how good it felt to have Amy's tongue inside of her butt and her fingers fucking her pussy. She didn't want to cum, but she knew there wasn't much that she could do to stop it. She could feel it rising in her body, she was starting to tingle all over, her muscles started to become rigid as the endorphins raced through her bloodstream. As it rose, she could feel her insides fill up, the movement of Amy's tongue alternated with her fingers in Alice's pussy were too much and started to tip her over the edge. As she lost control of her body, she could feel fluid deep within her start to gush. \n\n\"I'm cumming, I'm cumming hard, I'm going to squirt.\" Alice screamed into the pillow loud enough for Amy to hear.\n\nAmy could feel Alice's butt tighten around her tongue, as well as her pussy tighten around her fingers. In an instant, Alice's body went stiff as a board and bucked up and down a bit as the juices from deep inside of her came out in a gush over her hand. She smiled, removed her tongue, and kept on rubbing Alice's clit. It wasn't until Alice's moaning, and body thrashing stopped that she removed her fingers and pulled Alice close to her.\n\n\"I think I've ruined your bed.\" Alice said to her.\n\n\"It doesn't matter to me.\" Amy replied. \n\n\"Come, sleep with me in my bed, we'll clean up yours in the morning.\" Alice replied.\n\nAmy did as Alice suggested. They both got up and made their way over to Alice's bed, both had wobbly legs, a product of their intense love making. They fell into bed, held each other's naked body and drifted off to sleep almost immediately. \n\nThe next morning was Friday, the day of the big reveal to Todd. Alice and Amy woke up, they got ready for their classes. Amy stripped her bed of the soaked linens and threw them into the laundry as she left for class. She had a break between two classes and had time to run back to the dorm and throw the bed linens into the dryer so they would be fresh for tonight. She was hoping that they'd need to be washed again the following morning. ",
        "She and Alice continued with the remainder of their classes for the day. They ate supper together, though Amy barely touched anything, she was far too nervous. They made their way back to their room and started prepping for the night. They showered together and used the water enemas to clean out and clean up. Amy and Alice both felt an attraction to each other, and it was difficult to restrain themselves from having another session of sex while in the shower together. Amy's stomach was still in knots over Todd. She really hoped that they would make it through the night together, yet something was bugging her.\n\nShe had conflicting thoughts. She loved Todd, wanted their relationship to last. Yet, she didn't want to lose this new relationship she had with Alice. She felt like she loved them both, and she wanted to keep them both in her life. \n\nAs they were drying off and gathering their things Alice and Amy wrapped themselves in towels and walked back to their room. As they entered, they put things away and started dressing for the night. Amy wondered if Alice would be interested in keeping their relationship going.\n\n\"Ali, can I ask you something?\" Amy started off.\n\n\"Sure babe, what's on your mind?\" Alice asked, getting herself dressed, she was wanting to wear clothes that were pretty. She mostly had jeans and t-shirts because it pissed her family off to see her in what they called 'guys wear'. Now, she was interested in looking nice for Amy and for Todd. \n\n\"Would you, well, umm, be interested in being with me and Todd together, more than just tonight? Amy asked in a squeaky high voice.\n\nAlice laughed and was going to reply with a resounding \"No.\" Then, she stopped right before the no fell out of her mouth and really thought about it. She was falling for Amy, there wasn't any doubt. Though, she'd never shared someone before. She wasn't sure if she could do that. Todd, not the ugliest guy around by any means, was nice and warm and she could see herself with them. She thought that she would be sort of the third wheel in the relationship. She didn't like feeling that way, but she liked the thought of being able to continue fucking Amy. She even liked the thought of doing things to Amy while Todd was fucking her. Even still the thought of Todd fucking her wasn't totally unpleasant. She decided to play it safe, at least for now.\n\n\"Let's see how tonight goes. Then, we can figure out the details. Sound ok?\" she finally replied.\n\nAmy nodded and continued to dress. She put on her silky panties, put on white nylons and a pretty skirt that wasn't too short, but that her parents probably wouldn't have like the hemline. She was ready, she looked at her clock, ten minutes to seven. She knew it would probably be the longest ten minutes of her life. \n\n\"It's going to be ok.\" Alice assured her. \"Don't be surprised if he freaks at first, just let him settle into it and he'll calm down\" she continued.\n\nFinally, the moment arrived, a few minutes before seven, there was a knock on the door. Amy froze and Alice could visually see that she wasn't motioning to get up. So, she decided to answer the door. Todd was standing there, handsome as ever. Freshly showered and shaved, Alice could smell his soap and aftershave. \n\n\"Hey Alice.\" Todd said.\n\n\"Come on in\" Alice replied with a bit of a smile. \n\nAmy did her best to maintain her composure when Todd walked through the door. Todd looked at her and he could tell something wasn't quite right with her. Something was up, and he walked over to Amy's bed and knelt down in front of her.\n\n\"Hey, babe, what's wrong? Are you feeling sick or something?\" Todd questioned.\n\n\"No, not sick, just ... well, do you remember what you told me you wanted for your birthday?\" Amy replied still trying not to get upset.\n\nAlice walked over and sat on Amy's bed and started rubbing her back. Todd looked up at her. He'd never really seen Alice touch Amy before. He didn't mind it, but it was another thing out of place.\n\n\"I think I jokingly said something about, well, uh, anal. Why?\" Todd stumbled on his words a bit because he wasn't sure how Alice felt about open discussions of sex. \n\nAlice smiled at him to let him know that it was ok, and that they had probably discussed this a lot more than he thought.\n\n\"Well,\" Amy continued. \"I really wanted to give it to you, but, I knew I didn't know what to do so that I wouldn't hate it. I know you like anal play and I didn't want to hate it, I didn't want to only give it to you once. Mostly, I didn't want it to hurt.\" she said.\n\n\"Ok?\" Todd said and then added \"Please tell me you didn't sleep with some guy to try it out while I was busy.\" he started to flush a bit and his voice rose just a tad. Todd wasn't one to get upset easily and he took a breath to calm himself.\n\n\"No, I didn't sleep with another guy.\" Amy answered, her voice shaking a bit. \"I asked Alice to help me try it out.\" she managed to say.\n\n\"Alice?\" Todd said and looked over at Amy's roommate. \n\n\"Yes, she wanted to make sure I was able to give you what you wanted without it hurting me, so that I'd want to do it with you more than just the once. She helped me train it so that I could take you. She'd also like to help me take you into me tonight, if you're still interested. She wants you to take her as well.\" Amy explained.\n\nTodd stood; he wasn't sure what to say. In a way he felt betrayed, he could have helped Amy to like anal without just plowing his cock into her ass. He should have been here during this session they had, or was its sessions? Yet, the thought of being able to take Amy's ass without her being in pain excited him. She had done this to him, and also done it for him. \n\n\"Please baby, say something. I wasn't trying to hurt you; I wasn't trying to cheat. I just wanted to be able to give you something special for your birthday. I know how it looks, but really I just wanted to make you happy without hurting myself.\" Amy started to cry.\n\nTodd hated to see her cry. On the other hand, he was angry, and he was hurt. He could have been here for their sessions together. He knew he needed to talk to David, his older brother, he was two years older than he, and a senior at a different school. He knew he couldn't do it here. He needed a walk, just to clear his head. He wasn't sure if he wanted to take them both up on their offer, or if he wanted to walk away and not look back. The thought of never seeing Amy again upset him more than he was angry. He knew he needed air and to talk to David.\n\n\"I'm going for a walk.\" Todd said\n\n\"Are you leaving me?\" Amy squeaked out with tears in her eyes.\n\n\"No, I just need a minute to wrap my head around all of this. Ok?\" he replied getting up and walking toward the door.\n\nAs he walked Todd could hear Alice consoling his girlfriend, telling her not to be upset and that it would be ok. He thought that should be him rubbing her back. He didn't want to make a bad decision. So, he left the room and closed the door. He made his way downstairs and outside into the cool night air. \n\nHe dialed his brother's number. It rang several times and went to voicemail. He texted David that he needed to talk quickly, and it was an emergency. He waited a few moments and his phone buzzed. It was David, Todd picked it up on the second buzz.\n\n\"Hey Todd, you ok? I just got to a party, I can't talk too long, it's going to get loud in here.\" David said.\n\n\"I'm not sure if I'm ok.\" Todd replied, and proceeded to tell David everything that he had learned about Amy and Alice and their exploits. \n\nOnce Todd finished, David thought for a second and asked, \"do you love Amy?\"\n\n\"I do.\" Todd replied.\n\n\"Ok, then let me see if I can get this straight. You jokingly said to your girl that you wanted anal sex for your birthday. Something she'd never done and had heard nightmares about. She, wanting to give you what you wanted without hurting herself and maybe getting a little pleasure out of it herself, asked her cute roommate to stick things in her butt to help her get ready for your dick. Then, when you get there, she feels guilty for cheating on you with said girl, but they now both want to fuck you and give you anal in a threesome, possibly to continue into a three-way relationship. Now, you feel upset, why exactly? Most guys would give their left nut to be in your position. Hell! I'd give my left nut to be in your position. If Amy's half as cute as the pictures you texted me and if the roommate isn't half bad and you're not interested just send me the address.\" David exclaimed.\n\n\"But she gave her anal virginity to someone else.\" Todd said.\n\n\"Oh, get over yourself Todd.\" David said. \"You're the first actual guy who will penetrate her ass, does that make you feel any better? She trusted another girl who'd done what you wanted before and the girl showed her what to do with some toys. Toys that you may get to use on one of them, or even both of them. You mean to tell me that Amy hadn't used any sex toys before you had sex? Yeah, ok, maybe not with someone else, but who cares. This situation is hot as hell. Like I said, plenty of guys would kill to be where you are now. Where are you now anyway?\" David replied.\n\n\"I left their dorm and I'm outside.\" Todd explained.\n\n\"You moron, get back in there and have the time of your life. Hopefully, they haven't changed their minds by now since you killed the mood. Honestly.\" David yelled.\n\n\"Thank you, David, I just needed to talk it out.\" Todd said as he started to walk back toward the door.\n\n\"No problem dummy. Heh... I'm off. Take pictures for me, will ya?\" David chuckled.\n\n\"Goodnight, brother.\" Todd said and heard David say \"aww, come on!\" as he ended the call and hurried back up to Amy and Alice's room. He knocked on the door and Alice answered. She didn't look pleased.\n\nTodd walked right over to Amy who was slumped on her pillow and threw his arms around her. He pulled her back up to a sitting position and leaned her body against his. Alice sat down on the opposite side from Todd, next to Amy and Todd moved his arm so that Alice's body touched Amy's. He rested his hand in the middle of Alice's back and she made no move to remove it.\n\n\"I'm sorry.\" Amy sniffled.\n\n\"No, I'm sorry.\" Todd said and Amy looked up at him.\n\n\"I just needed to wrap my head around everything you said. I needed some air.\" Todd explained.\n\n\"You called your brother, didn't you?\" Amy asked.\n\n\"Yeah, I did.\" Todd said.\n\n\"What did he say?\" Amy asked.\n\n\"He called me a moron for not being with two hot girls who have been practicing anal sex to get ready for me to take them.\" Todd said with a smile.\n\n\"I like the way your brother thinks.\" Alice said. She still wasn't sold on being fucked by Todd, but if it meant she'd still get to do Amy, she could live with it. Heck, she might even enjoy it.\n\nAlice looked down at Amy. \"See, I told you he just needed a little time. It all worked out.\" she said in a soothing voice.\n\nAmy looked up at her and leaned her body over to kiss her roommate. Alice met Amy's mouth with her own and they kissed breathing deeply as their mouths and tongues made contact. \n\nTodd felt a little strange watching Amy kiss someone else that wasn't her family. That feeling turned into heat as he watched the two girls making out next to him. He watched Alice's hand move to fondle Amy's breast through her blouse. He didn't feel like he owned Amy or anything, but there was a certain jealousy that he felt watching his girlfriend being felt up by another person, even if it was a cute girl. He stifled the feeling and continued to watch the two girls. His jealousy started to fade when Amy reached for his leg and moved her small hand up his thigh. He could feel himself getting erect. \n\nTodd unbuttoned his shirt and took it off. Alice started to pull Amy's blouse over her head and arms, revealing a sexy white bra underneath. Todd got up and made sure the door was locked. He wasn't entirely sure what was going to happen tonight, but he was sure that he didn't want someone accidentally walking in on them. As he returned back to Amy's bed, Amy was clawing at Alice's shirt, trying to expose as much of her flesh as she could. He was satisfied just watching the pair tearing each other's clothes off while he sat. \n\nEventually, Alice got up, took off her shirt and removed her pants. She wore pink panties and matching bra. Todd looked over at her and was aroused by the sight of her. She stood and inch or so taller than Amy. She had dyed her shoulder length hair pink which she had put into a ponytail. Her breasts were larger than Amy's, not that he ever complained about Amy's body, he loved her just the way she was. Where Amy was a thin build, Alice was a medium build, not overweight, just curvier. The black and grey tattoos on her upper arms and lower back, that he'd seen previously, stood out on her pale skin. The more Todd looked at Alice, the more he wanted to touch her. He loved her full lips and wanted to feel them around his cock. He knew she was more into women than men, but, he thought, he might be able to change her mind.\n\n\"You're really beautiful, Alice.\" Todd said and he could see her face flush instantly. With her skin color, there was no hiding her embarrassment. \n\nAmy smiled at Todd; she liked the fact that Todd accepted Alice. She decided to get off of the bed and remove the rest of her clothing. She slid the skirt off of her hips and let it fall to the floor. She revealed her white silky panties, matching bra, and white nylons. She walked over to Alice and started to unhook her pink bra. Alice let it slip through her arms, exposing her full chest. Amy bent down and took a soft pink nipple into her mouth and sucked on it, like a baby would feed. As she did, she hooked her fingers into the sides of Alice's panties and slowly drew them down her legs. Todd watched as his girlfriend pulled Alice's panties down. Any feelings of jealousy melted away. Yeah, she'd clearly done this before, but now she was putting on a show as much for Alice as for him. He stood up and removed his clothing down to his boxers and sat back down. He continued to watch his girlfriend, who he always thought was so innocent and green to the world of sex, suckling on her roommate's breast, stripping her underwear off and watched as she removed her own bra and panties. His cock jumped to attention, tenting his boxers straight up. Once they were both naked, Amy turned her back to him and bent over at the waist showing off her parting butt cheeks and the glistening slit of her pussy. She ran a finger over both holes, paying particular attention to her ass. \n\nAmy wanted Todd to enjoy this show, she wanted Alice to enjoy it. She felt like she was stuck between two worlds that were in the midst of colliding. She had her boyfriend's world of a relationship, and now she had her new lover's world of role play and anal sex. Amy wanted to mix those two together and make them one. She felt that suckling on Alice's breast was a good ice breaker for Todd to see. By following it up with removing Alice's underwear, she could show Todd that she wasn't a little girl, though she did enjoy playing one for Alice. She really loved that feeling of being dominated by her and hoped that, somehow, Todd could fit into that. She wasn't sure how into role play he would be, but maybe, just maybe, he'd like it. As Alice and she were both undressed, Alice moved toward her side of the room for a moment. Amy decided to take a peek into Todd's shorts. \n\n\"Well now, this looks so uncomfortable. May I take them off for you? She asked in a high sultry voice.\n\nTodd flushed with excitement and nodded at the doe-eyed girl he now wondered where she'd come from. \n\nAlice returned with what looked like some vibrating toys, a couple of condoms, and a bottle of lube. Todd looked at her with a curious look in his eye. He looked down and Amy had her hands hooked into his boxers and was tugging them down. He stood to make it easier for her. Once they were off, Amy pushed him onto the bed. \n\nAlice stopped and said \"One rule, nothing is off limits until someone says its off-limits. Ok?\"\n\n\"Keep an open mind about all of this Todd. Also, it's been a while since I've been with a man, so if we get to doing anything, just take it easy, deal?\" she continued.\n\n\"Deal.\" Todd said.\n\n\"Yes Mama\" Amy cooed. Todd looked at her with eyes wide. This was new to him. Clearly, they had an established role play here. \n\n\"If she's Mama, who am I?\" Todd asked.\n\n\"Oh, that's easy.\" Amy said kissing his mouth deeply and swirling her tongue around his. As she broke their kiss, she dragged her breast across his chest and put her bottom in his face. \"You're Daddy.\" she smiled.\n\nTodd melted and instantly pulled Amy's bottom over to his mouth and started to lick the entrance to her butt with eagerness. \n\nAmy eep'd in response. \n\n\"That's right baby, you let Daddy lick you\" Alice said taking Todd's stiff cock in her hand and stroking it slowly up and down. She heard him breath in and tense up, but then relax as she continued to stroke him. She leaned forward and kissed Amy deeply who moaned into her mouth, filled with pleasure from Todd's mouth which had moved from her ass to her pussy and back to her ass.\n\nAmy broke from Alice's mouth \"I want you to try taking him inside of you\" she said.\n\nAlice wasn't sure. She wasn't having a problem stroking Todd's cock, it felt nice and warm in her hand, unlike the cold toys she'd used over the past few years. She wasn't afraid or anything, she just didn't want to be hurt by another guy. She didn't know where this was all going. She trusted Amy, she didn't know if she could trust Todd, but after stroking him for a minute longer and watching Amy writhing on Todd's face, she decided to risk it. \n\nAlice threw a leg over Todd and lowered her body onto his. She paused as the tip of his cock touched the lips of her pussy. She raised her hand, licked her palm and rubbed her sex. She then took hold of Todd's cock again and rubbed it against her pussy. Up and down she moved the deep red, almost purple, head of his cock. She could hear Todd moan into Amy's body. She let the head of his cock find the beginning of her tunnel and started to lower herself slowly onto his cock. Just a little at a time, then she would stretch her legs up before lowering herself down a bit more. Finally, she sat on his hips, his cock was fully inside of her. She was surprised how much more natural it felt to have a live cock inside of her instead of plastic or silicone. She leaned forward and kissed Amy again. Amy reached out and fondled her breast as Alice started to rock back and forth on Todd's cock. She started breathing heavily and making high moaning sounds into Amy's mouth as their tongues explored each other's mouths. \n\nAmy wasn't totally sure that she'd like to watch Todd fuck another girl. It ended up turning her on more than she thought it would. She could feel her juices flowing inside of her as Todd's mouth continued its migration from her pussy to her ass and back. She enjoyed this new freedom; nothing was off limits. She felt safe with these two. Todd's tongue slithered up her bottom and she squealed with delight. As it withdrew and he started to move toward her pussy again, she knew she'd cum if she didn't actively try to stop it. Soon, it would be time for her to offer her ass to Todd for the first time.\n\nTodd couldn't believe how he was feeling either. From feelings of anger and resentment to lust, to ecstasy. His view of Amy's bottom and pussy were turning him on so much it made it cock rock hard, almost to the point of hurting. Then, when Alice started to stroke him with her cool touch, it made him jump a bit. Whenever she took his cock into her pussy, he was actually shocked at how good it felt. He'd only been with Amy for the past couple of years, he was hoping that she wasn't jealous of his cock being inside another girl. He figured she told Alice it was ok, but he couldn't quite hear over his own moans and Amy's thighs by his ears as he continued to feast on her holes. God, she was so warm and tight. She started to move up and down on him and between that sensation plus the vision of Amy's back side in his face, he had to struggle not to cum. ",
        "Alice decided it was time for Amy to experience what they were all there for, despite it evolving into much more that would need to be figured out later. She lifted herself off of Todd's cock and took Amy by the hands and pulled her off of Todd's face. Amy sighed a bit, no longer experiencing the pleasures of Todd's tongue. \n\n\"Ok, let's see how we can do this on a small bed.\" Alice said looking at Todd on Amy's bed. \n\n\"I have an idea, why don't we take the two mattresses off of the bed frames and put them together on the floor.\" Todd replied.\n\n\"Wow, you're pretty smart.\" Alice quipped back as she started to remove Amy's mattress and Todd went to fetch Alice's. \n\nAmy laid some extra blankets on the floor so that the mattresses weren't directly on the dirty floor. They dropped the mattresses onto the floor and spread the blankets out so that there was enough for everyone. Alice then sat on one side of the mattress and told Amy to come to her face first and on her stomach. Once she was down, Alice asked her to spread her bum open. Amy did as she was told, and Alice motioned for Todd to come closer. He was a bit awestruck watching the two girls interact, but he eventually came to and moved closer, getting down on his knees on the mattress, straddling Amy's legs. \n\n\"We want to make sure this is a pleasurable experience for her, right?\" Alice asked.\n\nTodd nodded in agreement and listened despite the fact that he was still rock hard and aching for release.\n\n\"Ok, well, you need to make sure that she's lubed up before you try to enter her bottom. It helps if you've cum once already since you won't have that desire for immediate release and thrust into her too hard. It's all about being slow and taking your time and making sure she's comfortable before moving on. Once you've started to enter her, just go in a little bit and wait for her body to adjust, then you can proceed. If she complains or says to wait, then we wait. If she asks you to take it out, then take it out. You understand, right?\" Alice explained.\n\n\"Yes, completely.\" Todd replied. \"I really want her to love this, not hurt her.\" He continued.\n\n\"Good, that's good.\" Alice said. \"I'll show you how to get her lubed up, then you get your cock lubed as well, ok?\" She explained.\n\nTodd nodded. Alice took the bottle of lube and opened the flip cap. She poured it just above Amy's tight entrance to her bottom that was already slick from Todd's mouth. He watched it drizzle down her butt and into her pussy. The sight alone made his cock throb. Alice put the bottle of lube down and picked up a butt plug. She coated it with lube and handed it to Todd.\n\n\"Here, we want to start with something to get her bottom to open up before we try your cock in there. Ok?\" Alice asked him.\n\n\"Got it.\" Todd said taking the plug from Alice and lowered it to Amy's butt. He slowly touched the tip to her hole and played with it around the wrinkled opening. He teased it in and out of her opening, listening to her moan and squeak as he did. Alice reached under Amy's leg and started to rub her clit with her fingers which caused Amy to moan even louder with delight. \n\n\"You're doing great, Todd. We're going to get her up on all fours, then you can start to insert the plug into her slowly.\" Amy told him.\n\nTodd nodded again and helped Alice lift Amy's hips up until she was on all fours. Amy was feeling lightheaded from all of the pleasure she'd experienced. Now, with the two people she felt the most for playing with her body, she was in carnal heaven. She moved up so that her head was level with her butt, and she was on her hands and knees. She felt Todd spread her open, she was totally exposed to him now. She felt the tip of the plug start to touch her bum and she tried her best to loosen the muscle as Alice had taught her. She was impressed with how gentle Todd was with her. He pressed it inside, but not too fast, just the right amount went in her. She could feel her butt stretch and get that great feeling of fullness. Then it hit the widest part of the plug. She knew that Alice had chosen this one because it would help her open up to the width of Todd's cock. She hissed a little bit as her hole stretched open, then she felt her body pull the plug deeper inside of her ass as it rounded back down to the base of it. Alice rubbing her clit helped immensely. She was curious what would happen now that the plug was inside of her and Alice took her hand away from her clit.\n\nAlice loved to watch Amy's ass stretch open and accept the plug that Todd was pushing inside of her. She was really pleased to see him taking it slow and now just pushing it right inside the way porn actresses can take it from years of practice and prep. She used her hand to rub Amy's clit and the other hand to help keep Amy's butt spread open. Now, she reached out and took the lube in one hand, lubing up the other that she took away from Amy's clit. She put the lube back down and proceeded to stroke Todd's cock with her lubed hand. She was liking the way he felt in her hand. He was hard and warm and as she stroked, she could feel Todd flex his cock. Once the plug was all of the way inside of Amy, he had a hand resting on Amy's bottom and he used the other to fondle Alice's nipple and give it a pinch or two which made Alice purr. She liked that line between pleasure and pain. \n\nAlice then pulled Todd by his cock toward Amy's dripping pussy. He was all too happy to move closer to his girlfriend bent over waiting for him. Alice used her hand to stroke Todd's cock up and down the slit of Amy's tight pussy. She heard Amy moan as she rubbed the head of Todd's cock against Amy's clit. \n\nShe looked up at Todd, \"now fuck your little girl slowly, Daddy.\" She smiled at him with lust in her eyes.\n\n\"Daddy, fuck me. Please?\" Amy looked back at Todd and had said with her sweetest voice.\n\nTodd didn't know if he'd last two second inside of her with all of this role play and foreplay. He took hold of his cock and, using his free hand to spread Amy's pussy lips apart, slowly started to enter her. He breathed in deeply from the feeling of her familiar sweet pussy. His cock was surrounded by warmth and fluid that felt amazing. This time though, he could feel the bump of the butt plug that was inside her, it was right on top of his cock and it made her feel even tighter than usual. \n\nAlice moved toward Amy's head and sat in front of her, on the edge of the mattress. She spread her legs and lowered Amy's head to her shaved pussy. Amy took her queue immediately and started to make quick licks at Alice's clit and opening. Alice threw her head back and Amy moaned into Alice's pussy as Todd inched forward inside of her.\n\nAmy couldn't believe the feeling of Todd's cock inside of her while the butt plug was in place. She felt that her pussy gripped him even better with the plug. Because it pressed him down toward her G-Spot, she could really feel each time he pushed further into her. Then, when Alice sat in front of her and opened her legs, she wanted to taste her roommate. Her eyes rolled back into her head as she felt Todd's body on her ass as his cock bottomed out inside of her and he began his first motion back out of her. She felt Alice's hands move to the top of her head and motioning her head toward her waiting pussy, which Amy was happy to lick. She started with a few quick licks of Alice's clit and vaginal opening before taking her clit into her mouth and sucking on it, followed by dipping her tongue in and out of her.\n\n\"Fuck, baby, you eat me so good!\" Alice moaned. She could now feel the rocking motion on the mattress from Todd fucking Amy from behind. This made her mouth lift off of her pussy followed by it being forced back on by the rocking motion of their lovemaking.\n\nAmy smiled and moaned as Todd started to find a gentle rhythm inside of her. He was so gentle with her, and she really appreciated that. She loved him so much and now she felt she was falling in love with Alice. She was in love with their threesome. She didn't want it to end. \n\nTodd reached down to rub Amy's clit as he started to thrust in and out of her gently. Eventually, he would start thrusting into her and little faster, but made his withdrawal slow. This way, he watched Amy's head bounce and hit Alice's pussy that she was licking, which turned him on more than he could have imagined. He loved to look to her side and see her breasts bounce each time he pushed his hips forward and made contact with her ass and thighs. He loved watching Amy's mouth on Alice. He didn't know how this could work going forward and at the moment he couldn't really take his mind off of the pleasure he was feeling. He knew he loved Amy, and he was developing feelings for Alice as well. He felt like he gained another girlfriend in a way. Yes, he thought, he liked this very much, as he got more excited, he increased his speed in and out of Amy, making her moan louder into Alice's waiting pussy. He increased his speed of rubbing her clit as well. He felt Amy start to push back on his cock, meeting his strokes. His cock was fully enveloped by her pussy now, he was in heaven.\n\nAlice lifted Amy's head from her pussy, Amy looked at her with innocent eyes. \n\n\"It's time, my girl.\" Alice said to her and moved toward Amy's rear where Todd was still thrusting in and out of her.\n\n\"Ok Todd, take it out slowly.\" Alice said. \n\nTodd did as he was instructed and held his cock as he pulled it out of Amy's pussy. His cock was covered in her juices. \n\n\"Now, let's remove the plug slowly from her bottom.\" Alice continued explaining to him.\n\nTodd tapped the base of the toy which made Amy gasp. He smiled and took the base and slowly started to pull it out. \n\nAmy really liked the feeling when Todd tapped on the plug in her bottom. It sent a bit of a shock through her whole body. Then, she could feel his fingers slowly start to pull the plug from her ass. Her hole had a mind of its own and it was not eager to give up the plug which it had been fed. She could feel Todd turn it and pull, as Alice was telling him. Eventually, it popped out of her in a single movement her bottom was empty again. She reached back and used her finger to feel the gaping hole of her butt left by the plug. \n\nTodd watched her feel her tight ass and her hole started to close back up to its original size almost immediately after the plug was removed.\n\nAlice reached down and started stroking him to keep him hard. She pushed down on the base of Amy's spine to make her lie down. Amy did as she was directed. \n\nAlice once again spread her bottom open and lubed up her hole. She motioned for Todd to straddle Amy's hips and he moved up and followed her instruction. Alice then took her lubed hand and stroked Todd's cock again.\n\n\"Remember, nice and slow, push in a little then wait for her to adjust and then proceed more. If she says it hurts or it's too much, back out slowly, don't just pull it straight out, that'll actually hurt more.\" Alice explained.\n\nTodd nodded.\n\n\"Daddy, are you ready to take your girl's bottom? Fuck my ass Daddy, just please be careful with me, don't get carried away, it's my first time.\" Amy said softly looking back at her lovers. She was so excited by this role play. She was a bit nervous about taking a cock inside of her ass, but she knew that Alice and she had practiced and trained her bum. She thought that if it felt half as good as the toys she'd been playing with, it'd be amazing.\n\nAlice, once again, guided Todd's cock to Amy's bottom. She spread her roommate open with one hand and stroked with the other. Once the head of Todd's cock reached Amy's tight, wrinkled entrance, she rubbed the head of his cock up and down the tiny hole and then made circles around it. \n\nAmy bucked with pleasure and reached under her body to play with her clit.\n\n\"Good girl, play with your clit, that way you'll enjoy Daddy's cock.\" Alice said smiling. \n\nTodd watched as Alice brought his cock closer and closer to Amy's spread bottom. He wanted this badly, but he didn't want to hurt Amy. Alice was doing such a great job of helping him fuck Amy. He'd wished they'd formed a threesome a while ago. The tip of his cock touched Amy's hole; his cock flexed in Alice's hand. She moved it in a circular motion to make Amy's hole open to him. As Alice made his cock move around, he could see Amy using her muscles to make her tight entrance open to him, like she could control it. This vision drove him wild. He started to center himself and push into Amy's opening hole. It was so tight at first, he didn't want to press in, but then he felt Amy open up like a flower and very quickly the head of his cock was in her ass. He waited without pushing at all so that she could become accustomed to him being inside of her. After a moment, he could feel her ass loosen up a bit, so he pushed a bit more of his cock inside of her. He could hear her moan and knew her fingers were dancing on her clit. He let go of his cock and did just as Alice had instructed him. He pushed in a little, waited, felt Amy's bottom relax and pushed in a little more. Eventually, he was inside her ass and his hips were on the cheeks of her bottom. \n\nAmy felt full, probably fuller than she'd ever felt. She liked this type of full. Because it was Todd, because he was warm and she could feel his cock throb and flex as she tunneled inside of her bottom, she figured out that she liked him inside of her ass even more than the toys. It felt natural and good to have him in her. She still liked the toys, but they were a distant second. As Todd started to pull out of her and push back in she moaned loudly. It hurt, but it felt so good at the same time. The more he was in her, the better it felt. With him being so patient and not just thrusting inside, that definitely made the difference. She knew she had Alice to thank for all of this. \n\nAlice resumed her place in front of Amy after letting the cheeks of her butt go and she took her same position with her pussy under Amy's mouth. She reached up and stroked her roommate's face, proud of her for taking Todd's cock so well. She felt a certain pride that she helped to train Amy to take it so well.\n\n\"Are you ok, does it hurt?\" Alice asked.\n\nAmy shook her head \"It hurts, but not a lot and it feels good more than it hurts.\" Amy explained.\n\n\"That's good, that means we taught your bottom well.\" Alice smiled and spread her legs again.\n\nAmy arched her back up so that Alice could fit her pussy under her head, knowing that she would want her to put her mouth back where it was. She wanted to make her friend cum while Todd fucked her ass. She felt Todd start to increase his thrusting in her bum, it was feeling better and as Alice placed herself underneath her, she lowered her mouth and moaned into Alice's pussy each time Todd bottomed out in her ass. Amy moved her mouth up to the mound of Alice's pubic bone and sucked her clit into her mouth. She flicked her tongue over Alice's clit as she sucked and could feel Alice's juices leak into her mouth, she enjoyed her sweetness as her chin dripped with saliva and juice. She took two fingers and plunged them into Alice to make sure they were wet, she withdrew one finger and pressed it to Alice's rear entrance, putting some pressure and rubbing it in circles before dipping it inside. \n\nAlice's head fell backward, and she lifted it up, enjoying her roommate's mouth licking and sucking on her. Once Amy's fingers entered her, she lifted her head to watch her friend's head work her pussy and could see Todd fucking in and out of Amy's little bottom. She started her own series of moaning which increased once Amy's finger started playing and dipping into her bottom. Alice lifted her legs a bit so that Amy had complete access to both holes. \n\nTodd didn't know where to look, his gaze went from Amy's ass that he was fucking just a little harder and Amy's head moving back and forth across Alice's pussy. Watching Alice lift her legs so that Amy could play with her pussy and her ass was sexy as hell. He started to feel his orgasm build to a point where he couldn't control it. He didn't want it to stop, he wanted it to continue, Amy's ass was so tight around his cock, and she knew how to lift up just a little as he thrusted into her bottom. He could feel her playing with her clit and every once and a while she would take two fingers and lift them to glide on the sides of his cock moving in and out of her bottom. The pulses of her anal tunnel told him that she might be close as well. He couldn't help really pumping into her bum.\n\n\"Ohhh... easy Daddy, but you feel so good in my little bottom. Cum in me Daddy, cum in my ass.\" Amy moaned to Todd.\n\n\"Mama, I want you to cum in my mouth while Daddy cums in my bottom, can you?\" Amy said resuming her sucking of Alice while her fingers fucked Alice's holes.\n\nAlice didn't know if she could hold on much longer. \"Fuck baby, your mouth is so good. I'm going to cum, I'm going to cum in your mouth. Alice's body started to buck against her roommate's mouth. She could manipulate her butt hole to draw Amy's finger inside, then release to easily allow Amy to withdraw before her next thrust. She felt her body go rigid and start to shake with that familiar feeling of cumming. \n\n\"I'm close. I'm close. I'm close! Here I cum baby!\" Alice shouted as her orgasm ripped through her body and her pussy went even wetter, feeling her juices flow. As she screamed out, Amy moved her fingers from Alice's pussy and into her ass. Amy sucked on her pussy as she came, and the juices flowed into her mouth. Alice knew she was cumming again, right as the first orgasm ended the second one began, and she screamed out in pleasure and collapsed onto the mattress.\n\nTodd, hearing Alice scream out about her orgasm couldn't control his own. \"Fuck baby, your ass is so tight. I can't, I can't, I can't hold on!\" He yelled out and grunted while he jerked in and out of Amy's ass. He felt his balls tighten up, he felt his body stiffen and the feeling of electricity flow through him as he buried his cock deep in Amy's ass and his cock exploded and throbbed as he pumped spurt after spurt of his seed deep inside Amy's bottom. It felt like 10 minutes worth of cumming, and he could feel Amy buck against him as her orgasm rose.\n\nAmy was used to Todd's cock now. She moaned each time he bottomed out, but it felt good. Alice came in her mouth; she loved the flavor and was proud of herself for making her roommate cum by using her mouth. Then Todd came in her bottom. She could feel his cock throb as he pumped her full of his cum. She moved her fingers in and out of her pussy and felt his cock moving in and out of her ass. She wanted to cum and she let her body go, she screamed out.\n\n\"Fuck me Daddy! Fuck my butt, cum in me I want you to cum inside me! Oh, oh, oh God, I'm cumming, I'm cumming!\" Amy screamed as she lost control of her body. She shook as her orgasm took over her body, her ass spasmed against Todd's cock, milking him of cum. She gripped the mattress as her body shook and went rigid. As she fell to the mattress, she released her hand from her pussy, Todd's cock was working in and out of her ass more slowly. Finally, she felt him soften after her bottom was full of his cum. Eventually, he withdrew from her ass, which hurt a little bit as her ass was now empty. Her legs felt like jelly and she didn't dare stand. Todd layed down beside her, Alice lay on the other side. They pressed their bodies to hers. She rolled onto her back and Alice and Todd placed a hand on her stomach, eventually they placed their hands on each other's and on her stomach. Amy liked seeing that. She was so content. Her bottom was full, she had reached one of the best orgasms she'd ever felt. She was surrounded by two people she loved most. \n\nAlice felt happier than she had in a long time. She was so happy to be with Amy, and she was surprised to be happy to be with Todd. She knew she was bisexual, but she had confined herself to only women for a long time. She hoped she would stay a part of this trio, she hoped to do more with Todd and with Amy.",
        "Todd couldn't speak. He still felt the effects of orgasming in Amy's ass. He leaned over and kissed her cheek, then her mouth. He could taste Alice on Amy's tongue and he enjoyed that taste. He dared to prop himself up further and leaned over Amy to kiss Alice, who was a little taken back, he knew by her eep noise. She settled into his kiss and their tongues danced for a moment before he laid back down beside Amy.\n\n\"That,that was amazing.\" Todd finally spoke first.\n\n\"Yes, it certainly was.\" Alice agreed.\n\nThey both looked at Amy. They had concerns on their faces as she hadn't agreed with the other two.\n\n\"I made Mama and Daddy cum in me.\" she finally smiled and they both sighed a breath of relief.\n\n\"So, what now?\" Alice finally asked the question.\n\n\"Are you ok with me with being in a relationship with you both?\" Todd asked.\n\n\"Let's just keep doing what feels good. We'll make it up as we go, but yes, we're a trio now.\" Alice said.\n\n\"Yes, and let's make sure we don't leave anyone out. We'll do this together or not at all.\" Amy said.\n\nTodd wasn't sure how he was going to explain all of this to his family, but he decided to go with what Alice said and just keep doing what feels good.\n\nOver the next couple of weeks, they moved Amy and Alice's beds together permanently. They kept sleeping together as much as they could, even without having sex. \n\nAlice didn't know what to do. She had been walking to class one day and bumped into a girl. She said excuse me and helped the girl pick up her books. As she did, she felt the girl's hand run under her skirt and up the underside of her leg and cup her bottom. She shot a look at the girl who looked at her with carnal thoughts in her eyes. \n\n\"Are you dating someone?\" the girl asked.\n\n\"It's a bit complicated.\" Alice said to her. \"How do you feel about sex with men and women?\" she asked.\n\n\"I'm open to exploring things. My name is Sarah.\" The cute blonde said to Alice.\n\n\"Come with me, let's talk. You may like what you hear.\" Alice said to Sarah and they held hands on the way to class.\n\n~To be continued~"
    ],
    "authorname": "greywolf393",
    "tags": [
        "lesbian",
        "straight",
        "anal",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/amys-anal-adventure-with-alice-ch-02"
}