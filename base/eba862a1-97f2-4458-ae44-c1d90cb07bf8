{
    "title": "A Shepherd Afield Pt. 02",
    "pages": [
        "Author's Notes:\n\n'A Shepherd Afield' is a continuation of 'A Shepherd in France' which continued the story of 'The Shepherd of Ashburn Court'. Minimal effort is made in this tale to explain the backstory so please read the other stories first.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 8\n\nBen stood in the open lobby of the Costa Rican resort and enjoyed the ocean breezes passing through the access way. The fresh air carried the scents of the lush greenery and beautiful flowers from the gardens on the grounds. He smiled serenely at Rochelle and Trish who smiled happily back at him.\n\n\"It's the rainy season and I've been told that this means we'll get thunderstorms in the afternoon for a few hours. We'll get sun and cloud earlier in the day. Afternoons would be a good time to spend a little time in the spa,\" Ben suggested and got grins from the ladies. \"Do you want to see what's available for this afternoon? It looks like today's storm is about to get underway,\" Ben said peering up at the dark clouds passing over the countryside.\n\nWith a smile and a twinkle in her eyes Rochelle walked briskly back to speak with the woman at the reception desk.\n\nTheir luggage had been taken to their rooms and Ben was assured the two adjoining rooms had a lovely view overlooking the pool.\n\nTrish leaned against his chest and grinned up at him. \"Thank you so much for this Ben. I'd never be able to afford to come to a place as nice as this.\"\n\n\"Thank you so much for joining me! I'm just getting used to travelling and I'd never do this on my own,\" he said as he gave her a hug.\n\nShe got a mischievous look in her eyes. \"So who are you going to have in your bed tonight?\"\n\nHe felt his face pink up as she made him sound like some kind of playboy. \"I leave that decision up to you and Rochelle. Neither of you has to sleep with me you know!\"\n\n\"Aw Ben, I'm just teasing you. I know you aren't like that. You are such a sweet man... with the body of a sex god!\" she purred a little too loudly. A group of older ladies passing by looked back at them in shock.\n\n\"Could we try to maintain a low profile on this trip?\" he whispered to her.\n\n\"Sorry Ben,\" she said contritely.\n\n\"Are you already causing trouble?\" Rochelle said to Trish as she rejoined them.\n\n\"What can I say, Ben brings out my inner imp!\" Trish grinned.\n\nRochelle just shook her head at the redhead. \"Ok, here is what I got us so far. In about an hour we all get a full body massage in the spa with the steam room beforehand. Tomorrow at 2pm we all go back to the spa for mud wraps then the steam room followed by another full body massage. Then Trish and I are booked for manicures, pedicures, and facials finishing off with having our hair done. You will have to find something to do with yourself while we are made all pretty. I've booked us a nice table at their fine dining restaurant tomorrow night.\" Trish was looking at her in surprise. Rochelle suddenly realized she was spending Ben's money for him and she looked at him nervously. \"Is that ok?\" she squeaked.\n\nBen laughed and pulled her into a hug. \"Of course it's ok! That's what we are here for! Relaxing, being pampered, and enjoying ourselves! That and keeping me from using my finger so it can heal.\"\n\nRochelle hugged him back and looked up at him. \"We should go check out our rooms and get into our swimsuits to prepare for our massages.\"\n\nBen nodded and released her so they could make their way up the stairs to the second floor. Their rooms were half way down the hall. Just as they were getting close the door to the room next to theirs opened and a man stepped out quickly without looking. He collided with Ben's chest and bounced back. Ben managed to catch him before he fell.\n\n\"Unhand me you big oaf!\"\n\nBen released the man once he was sure he wouldn't fall. He looked like he was in his sixties, maybe. He looked fit but his hair was shockingly white and his skin showed the damage of too much time in the sun. From his attire that exposure might have been from golf courses. The man had sharp features with small dark eyes set just a little too close together. Ben found his angry expression to be almost comical but managed not to smile.\n\n\"Please be careful when stepping out into the hall, sir,\" Ben said.\n\nNow the man looked really angry. \"You bump into me and I'm to blame for it? You just keep track of where your big feet are carrying that meat on your shoulders and maybe you wouldn't be such a hazard in the hallways!\"\n\nBen sighed and looked past the angry man to his pretty wife who was standing in the entrance of their room. She also had white hair in a stylish pixie cut but she obviously took much better care of her skin. She had an old school wholesome beauty and class that immediately put Ben at ease. She gave him an apologetic smile.\n\n\"Good day,\" Ben said as he moved aside.\n\nThe man sputtered in irritation then stormed off with his wife in tow.\n\nTrish watched the man head down the stairs and turned to Ben. \"Who put the pickle up his ass?\"\n\n\"The man seriously needs to learn how to relax!\" Rochelle agreed.\n\nBen used his keycard to open his door and stepped inside. A large modern bathroom was to his immediate right. Walking further into the room he saw it was pretty standard as hotel rooms went. Queen size bed and a large dresser with a TV on top for watching movie's in bed. Sofa sitting area beyond the bed. Next was the large sliding glass doors leading to the balcony. He walked through and stood on the wide terrace looking down at the pool. Only a few people were currently swimming though there was a group of young people hanging out by the pool bar.\n\nHe felt arms wrapping around him from behind and from the feel of her body pressing up against his back he knew it was Trish. He gave her arms a squeeze.\n\n\"Come on Ben, we've been commanded to get into our swimsuits and robes to report to the spa,\" she teased.\n\nThey went back inside and Ben opened his suitcase to pull out his board shorts and sandals. He stepped into the bathroom to change. Once ready he tried to put on the robe he found on the back of the bathroom door but discovered it was too small.\n\nHe draped it over his shoulders and stepped out into the room. Trish and Rochelle grinned at his cape and they headed down to the spa.\n\nBen followed the ladies down through the lobby to the spa entrance where they were met by a lovely, tall blonde woman in a white sarong.\n\n\"Good afternoon! My name is Greta. Am I addressing the Shepherd party?\"\n\nBen looked at Rochelle and smiled. \"Yes, that's us.\"\n\nGreta's eyes were drawn to the scars on his chest which were clearly visible due to his open robe. Her eyes flicked up to his and he saw a dawning recognition in them. However, she was a professional who had met her share of celebrities in the spa so she simply nodded with a smile. \"It's an honor to have you visit us. The steam room is just this way.\"\n\nBen breathed a sigh of relief and gestured for Rochelle and Trish to proceed him. They stopped before the entrances to the change rooms.\n\n\"You will find lockers inside and towels to wrap yourself in once you remove the bathing suits.\" Greta instructed.\n\nThey went into their separate change rooms and moments later returned wrapped in white towels. Once more Greta's eyes flashed to take in the damage evident on Ben's skin. She gestured to the glass door across the hall. \"I will return to collect you for your massages. Do you have a preference for your masseuse? Male or female?\"\n\n\"Male!\" Rochelle blurted with a grin.\n\nTrish shook her head seeing the twinkle in her friend's eyes. \"Either is fine with me.\"\n\n\"Female,\" Ben said with a blush and Greta dipped her head to indicate she'd noted their preference.\n\nThey found spots to sit in the steamy room. There were only two other people in the room, both elderly men who did their best to hide their delight at seeing the female flesh on display.\n\nBen closed his eyes and let the heat soak into his body. He felt the release of tension he hadn't been aware he'd been holding.\n\nBefore he realized it he felt a gentle touch on his arm.\n\n\"Mr. Shepherd, it is time for your massage,\" Greta said gently.\n\n\"Ben.\"\n\nShe smiled. \"It is time, Ben.\"\n\nHe saw Trish and Rochelle on their feet so he stood and followed them out. Greta led them down a hall and outside to a patio overlooking the ocean. There were four massage tables arranged so they all faced the surf below. The patio was covered by a sturdy roof but was open on the sides to allow the ocean breezes to flow through. Ben saw three well built men waiting beside three of the tables. He caught Rochelle's grin and Trish's answering smirk. Ben began to feel a little uncomfortable as he didn't want a massage from a man. He knew Dr. Granger would ask him to examine his unease but he wasn't ready for that at the moment.\n\nHe turned to ask Greta about it and saw the woman from the room next to his joining them. She smiled happily when she saw Ben and nodded to him. Greta directed her to the third man as Rochelle and Trish got situated with the other two. This left the final table which Greta gestured to.\n\n\"I will be your masseuse today,\" she said.\n\nBen nodded with a smile and climbed up on the table. Suddenly his towel seemed terribly inadequate.\n\nHe laid on his stomach with his head turned to the right. He saw his room neighbor smiling back at him as she also laid in her stomach.\n\n\"Hello! I'm Susan,\" she said with a grin.\n\n\"Hello Susan. I'm Ben.\" He returned her smile.\n\n\"I just wanted to apologize for my husband's rude behavior earlier. Ted really can be a total prick at times. Well, most of the time.\"\n\n\"That's very nice of you! Apology accepted. Thanks.\"\n\n\"Are you here for the Eco-tourism thing? Zip lining in the rainforest? Jungle hikes?\" Susan asked.\n\n\"No, this is as adventurous as I'm going to get this week!\" Ben chuckled.\n\nSusan lifted her head to look at Ben's two companions then turned back to give him a devilish grin. \"Really?\"\n\nBen was saved from having to answer as their massages had begun. It felt so good speaking was too much effort.\n\nGreta had very strong hands and Ben couldn't help releasing a few moans of relief as she found some knots and worked them out with her thumbs.\n\n\"Hey Ben! You going for the happy ending over there?\" Trish laughed.\n\nBen missed the reference. \"Greta has incredible hands and they are making me very happy!\"\n\nTrish and Rochelle burst out laughing and Ben realized he'd missed something.\n\nHe looked back at Greta and saw her cheeks were very red. \"I don't get the reference but I guess that was an inappropriate thing to say. My apologies. Trish, behave!\"\n\n\"Awww! That takes all the fun out of- ooohhhhh!\" she groaned as her own masseuse vanquished a knotted muscle.\n\nRochelle snorted.\n\nConversation was kept to a minimum during the first part of the massage. Greta worked her way through Ben's muscle groups and complimented him on his workout routine for the symmetrical development of his muscles. She asked if he had any residual tightness or pain from the scarring on his back and he said no.\n\nThen it came time to turn over.\n\nBen had begun to tingle down there just a little as the massage felt good and he'd been applying pressure to the area by lying on it. While it wasn't erect it wasn't completely relaxed either.\n\nSensing his discomfort Greta smiled. \"It's ok Ben, it happens. We're all adults here,\" she said quietly and calmly.\n\nHe gave her a grateful smile and rolled over as she held the towel up over him. As she lowered the towel it tented as he expected it would.\n\n\"Oh my, yes!\"\n\nBen and Greta looked over at the next bed and Susan was a little red faced. She was looking at the sizable bump in Ben's towel. When she realized she'd made her little outburst out loud and they were looking at her, she blushed harder.\n\n\"My apologies, Ben. That was rude of me,\" she exclaimed.\n\nIt had been so out of character, or rather, his expectation of her character based on her looks, Ben was a little flustered. It was like spotting a classic American sitcom Mom from the 1950's starring in a porno. He just nodded and watched her struggle to not look at his towel. He closed his eyes and tried to relax back against the mattress.\n\nGreta began working his muscle groups on the front of his body. Again she complemented him on his symmetry and asked about residual pain and tightness under his scars. He informed her he had none and she smiled and continued.\n\nHe relaxed under her skilled hands and when the session was over he was feeling wonderful. He smiled at her once she helped him sit on the edge of the table. \"That was amazing! I don't often go for massages but this one really opened my eyes to how good they can make you feel! Thank you!\"\n\n\"You are most welcome, Ben. I understand you have another massage scheduled for tomorrow. Would you like me to add that to my schedule?\"\n\n\"Yes please!\"\n\n\"Great! I will see you then.\"\n\nBen stood and fastened his towel tight around his waist. He saw the others sitting up and preparing to leave.\n\nSusan approached him and leaned in to speak quietly with him.\n\n\"I'm terribly sorry if I made you uncomfortable,\" she said.\n\n\"It's alright.\"\n\n\"When you get to my age and you find yourself living with... someone like Ted, finding something to be excited about is a real treat!\" She smiled at him and glanced down at the bump in his towel. She bit her lip then made her way towards the locker rooms.\n\nBen felt Trish's big tits squeeze against his back and his cock began to wake up.\n\n\"You have a new fan Ben!\" Trish said with a grin.\n\n\"Stop teasing the man. He can't help being so irresistible!\" Rochelle joked.\n\nBen turned his burning face towards them. \"Are we done here?\"\n\nTrish saw his reaction to her and a wide satisfied smile spread across her face. \"Oh my, yes.\"\n\nBen rolled his eyes and thanked Greta once more before setting off for the locker room. Susan was exiting as he arrived and she caught a glimpse of his recent development. Her eyes lit up with excitement and she gave him a thrilled smile as he passed.\n\nAs he stood before his locker he let out a heavy sigh. He pulled out his board shorts and pulled them on. He heard someone clearing their throat as he pulled the undersized robe from the locker. He turned to see one of the male masseuses standing there with a robe in his arms.\n\n\"You could probably use a larger size robe,\" he said and handed it to Ben who handed his smaller one over.\n\n\"Yes! Thank you very much!\"\n\nBen pulled on the robe and while it was still tight he was able to close it around himself. His broad chest was still showing a little but the robe was closed from his waist down and that was good. He smiled at the man and left the room to wait for Trish and Rochelle.\n\nHe was doubly thankful the robe was closed at the bottom as Trish was showing a lot of cleavage in hers and she had a naughty look in her eyes. He felt himself throb in anticipation and her smile widened as its heat went up.\n\n\"At least get him to the room before you jump him!\" Rochelle teased and Trish moved forward to take Ben's arm as they headed towards the lobby.\n\nAs they approached they heard a lot of loud but happy voices and laughter. A new group was coming in.\n\nThey stepped into the lobby into a group of at least twenty people, all milling about with their suitcases, obviously checking in, and the harried staff trying to process them as quickly as they could. There was a lot of gold chains and large rings on display. Ben recalled this would be called 'bling'. Now that he was closer Ben saw the group was comprised of around eight black men and at least a dozen beautiful black women. One member of the group didn't seem to fit in and was being largely ignored by the others. She was a petite Hispanic woman, maybe 5' 3\", with long flowing chestnut hair and full sleeve tattoos.\n\n\"Hey! I recognize those two! That's Dream and Killah! And that's Jarome and Millionz! Jayden loves their music!\" Rochelle blurted as she suddenly stopped in surprise. Ben and Trish stopped to look back just as a finely dressed man turned and bumped into Rochelle. He caught himself and apologized.\n\n\"I- I'm terribly sorry. I wasn't paying attention to where I was going!\" he said, looking into Rochelle's eyes.\n\nRochelle was frozen, trapped by the man's hazel eyes. She seemed to finally snap out of her daze. \"It's ok. I'm good,\" she said softly.\n\n\"I'm Thomas. Thomas Powell.\" He couldn't seem to look away from Rochelle.\n\n\"Rochelle King. Nice to meet you.\"\n\n\"Where's my big brother?\" boomed a voice from the right. This broke the moment and all turned to see a slim, shorter man striding over towards Thomas with a much larger man in his wake.\n\n\"Danny, this lovely woman is Rochelle King.\" Thomas said in introduction.\n\n\"What did I say about using that name?\" Danny said crossly.\n\n\"It's nice to meet you Dream,\" Rochelle smiled and Danny's face lit up.\n\n\"Well it's a delight to meet you!\" the man beamed.\n\n\"These are my friends Trish Campbell and Ben Shepherd,\" Rochelle continued.\n\nDream admired Trish's exposed flesh then took measure of the big man at her side. His size, the scars on his arms, chest and... face. Recognition began to spark in his eyes.\n\nBen saw excitement then resentment flash by on the smaller man's face. He wasn't sure what that was about but he didn't need any more drama. Following Rochelle's lead he nodded to the man. \"It's very nice to meet you Dream.\"\n\nThe balance shifted to excitement as Ben's acknowledgment was accepted. \"Ben Shepherd of the 'Bronze Man' Ben Shepherd?\" Danny asked to confirm.\n\nBen winced and nodded.\n\nDanny's grin widened and he looked over his shoulder at the big man behind him. \"Killah, you have some local competition for having the biggest-\"\n\n\"DREAM! Please!\" Thomas gasped and his younger brother grinned in victory. Getting his brother to use his new name was always a battle.\n\nDream pointed over his shoulder. \"You know he used to be called Killah D because of the size of his-\"\n\n\"Seriously, stop!\" Thomas barked in frustration causing Dream to grin.\n\nA tall slim mocha beauty wandered over and slid her arm possessively around Danny as she fitted her svelte body against his. \"Who are our new friends?\" she asked with a smooth rich voice.\n\nThomas took up the introductions and Ben learned this lovely woman was La'Shia, an equally famous celebrity. She was R&amp;B/Pop/Dance-Pop to Dream's Hip Hop/Rap.\n\n\"My big brother is going to be officiating our wedding this week,\" Dream said with a big smile.\n\nRochelle's face showed her surprise. \"You're a priest?\"\n\nThomas smiled and held her eyes with his, \"No, I'm a Justice of the Peace back in California. I've just made all the arrangements through the local legal process to be able to perform the wedding here.\"\n\nRochelle's delighted smile was priceless. Ben and Trish both grinned at their friend's obvious interest in the man but Trish glanced at Ben when she suddenly realized what it might mean.\n\n\"Would you be able to join us for dinner tonight? I mean all of you?\" Thomas asked.\n\nRochelle suddenly realized she was acting like a love struck school girl with this stranger while the man who brought her to the party watched. She cast a guilty looked towards Ben which made Thomas, Dream and La'Shia all look towards him too. Thomas' eyes held confusion in them.\n\nBen needed to shut this awkward moment down. \"That would be lovely! What time?\"\n\n\"9 PM in the Silver Moon restaurant.\" Dream said with a grin.\n\n\"Perfect, we'll be there! See you then,\" Ben said then turned to leave.\n\nRochelle smiled once more at Thomas and followed after Ben and Trish. When they got to their room Ben asked Rochelle to join him for a moment. Trish gave Ben a curious look but went into the other room and closed the door when he shook his head.",
        "Ben guided Rochelle to the couch where they sat beside each other. He took her hands in his and he noticed tears beginning to well up in her eyes. \"Hey! No tears. There's no need for tears!\"\n\n\"I'm sorry Ben! You bring me on this lovely holiday and the first thing I do is start making eyes at another man! What kind of bitch does that make me?\" she blurted.\n\n\"Hey! You are not a bitch! Don't you ever say that! You're a beautiful, vivacious woman! When I invited you on this vacation I just didn't want to travel alone. I had no expectations that you'd have to stay glued to my hip or that you'd share my bed. You know it was Trish who suggested we get two rooms, not three. Rochelle, you know how I feel about you. That's never going to change. I'll always be there for you!\"\n\nRochelle threw her arms around Ben and a few tears were shed. He pushed her back gently and wiped the tears from her cheeks as he looked in her eyes.\n\n\"I'm not surprised Thomas is attracted to you,\" he smiled gently. \"I'd have to be blind to not see you're attracted to him as well. I think you should see what develops. He seems like a nice man. I'd never hold you back from a chance at love. I only want your happiness.\"\n\nRochelle smiled at him with tears welling in her eyes.\n\n\"I don't want you to hold back because of me. That's not fair to you or him. Be warned though. If he hurts you, I'm going to hurt him.\" Ben said with a raised eyebrow and a serious look.\n\nShe started to laugh and he hugged her tight with a grin on his face.\n\nShe pushed back suddenly. \"What time is dinner?\"\n\n\"9 PM.\"\n\n\"I have to get ready! I don't know what I'll wear!\" she gasped.\n\n\"There's a really nice boutique off the lobby. Maybe you can find something there? Just charge it to the room.\" Ben suggested.\n\nRochelle grabbed Ben and kissed him. She jumped up and ran to the door of the adjoining room and turned back. \"Thank you Ben. You truly are a wonderful man!\" She rushed through the door.\n\nBen got up and walked out onto the room's balcony overlooking the pool. The rain was coming down hard now but he was sheltered from it by the roof above. Looking out at the forest beyond the hotel grounds the lush greenery was almost gleaming in the downpour. The grounds were empty during the height of the rainfall and it felt like he had the place to himself.\n\nHe thought about Rochelle's confession. While he felt sad about whatever it was that prevented her from being able to return his feelings he realized he had so much love in his life now that this pain was eased by it.\n\nHe felt arms wrap around him, breasts press against his back and Trish's cheek rest there.\n\n\"Hey big guy. How are you feeling?\" she asked gently.\n\n\"I'm ok. I really am.\"\n\n\"I don't understand her,\" Trish said rubbing her cheek against his back.\n\n\"You can't explain love. It's either there or it isn't,\" he said with a slight shrug.\n\n\"You still love her?\" Trish asked, curious.\n\nHe was quiet for a moment then sighed. \"Yes... I always will.\"\n\nTrish was quiet for a time then she squeezed him tight. \"You know that just makes me love you more.\"\n\nBen smiled and turned to face her. Large pale green eyes looked up at him and he saw her love shining through. He took her face between his hands and dipped his face to kiss her tenderly.\n\n\"Mmmm, you kiss good!\" Trish grinned as she pulled back from his lips. She ran her hands over his chest. \"So... looks like I should be bunking with you. That alright with you?\"\n\n\"I suppose I could tolerate it for a bit,\" he nodded thoughtfully and she playfully slapped his chest. \"I'm an early riser,\" he warned.\n\n\"As am I. I'm hoping to do some running on the beach in the morning. Care to join me?\" she said with a twinkle in her eyes.\n\n\"I'm not really a runner. Too heavy. I will go for a walk on the beach in the morning though. Since I can't do any heavy lifting until my finger is healed up the gym is out. I tried at home but it just aggravated it.\"\n\n\"Poor baby is going to get all flabby!\" Trish teased and poked Ben's stomach with a finger but just hit hard muscle. \"Fuck! You're not flabby at all!\" Her eyes flashed with the thrill she was feeling. He was so ripped!\n\nBen ran his hands over Trish's stomach as well, feeling her hard muscles. \"No flab here either.\" Her eyelids closed a little as tingles rushed through her body.\n\n\"You keep touching me like that I'm going to release this beast and take it for a ride!\" Trish groaned as she rubbed her hands over Ben's waking cock. Ben's hands rose to her tits and he gave them a firm squeeze as she liked. His fingers strummed over her nipples pressing against the cups of her bikini.\n\n\"FUCK! You're such a tease!\" she gasped pulling away from his hands and dropped to her knees before him. She tugged his board shorts down and his growing cock swung free. \"Oh Ben! Fuck! I love your cock!\" She wasted no more time and stuffed as much of his hot flesh into her mouth as she could.\n\n\"Trish! That's so good!\" Ben moaned.\n\nShe managed to force his hardening cock into the back of her mouth and she moaned with the sexiness of it. Her mouth was filled with his hot throbbing flesh which was getting harder by the second. She felt her pussy tingling with need so she began to slowly pump him in and out of her mouth, each time forcing the thick head in as far as she could. By the fourth stroke his cock was too hard to bend downwards. Still she tried to pull him deeper, her hands gripping his ass. Finally she pulled him from her mouth and ran her tongue the length of his shaft from his balls up to the sensitive head.\n\n\"GEEZUS!\" Ben cried out and Trish grinned up at him.\n\nShe pointed to the lounge chair behind him. Ben stepped out of his shorts and sat down shakily. Trish stood and slipped her bikini bottoms off before prowling towards him. She straddled his legs on the chair and reached down to lift his hard cock up towards her descending pussy. When her wet lower lips kissed the hot tip she gasped and let her legs relax, driving him deep into her body.\n\n\"AAAAAHHHHHH FUCK BEN! You're so fucking hard and so... big!\" Trish gasped as he spread her wide with his thickness.\n\nBen moaned with the amazing feeling of her silky soft inner walls squeezing his cock so tightly. \"You feel incredible!\" he sighed. He wrapped his arms around her and pulled her lips to his as he kissed her deeply. She whimpered into his kiss as she rocked her hips a little to get all of him inside her. Her body was trembling.\n\nHe moved his hands down to her ass and squeezed the firm muscles. She pulled back from his mouth to gasp. He began to slowly lift her up his cock only to slam her back down, slapping their bodies together.\n\n\"AHhhh! Fuck me! Ohhh! God Ben! So! Fucking! Big!\" she cried out a word with each impact. Her face flushed as the sensation of him filling her so completely threatened to overwhelm her.\n\nThe lounge was sturdy but it was creaking with the effort of supporting them both. Ben wrapped an arm around Trish, holding her firmly against him and stood. She wrapped her arms and legs tight around his body. A quick glance over the balcony rail showed him they still had their privacy.\n\nHe reached behind himself and pulled the lounge chair cushion off to drop it on the floor behind Trish. He gently knelt and lowered them to the cushion. Trish's hands slid down to his ass as she pulled him deeper.\n\n\"Ohhhh fuck Ben! Your cock is so fucking deep! I can feel it pressing against the bottom,\" she moaned as she gripped his ass cheeks.\n\nBen rocked his hips which made him grind against her clit.\n\n\"AHH! OH FUCK! SHIT! FUCK! FUCK! FUCK! FUCK ME BEN! FUCK ME HARD!\" she cried out as sparks shot through her body from her overcharged clit.\n\nBen pulled his hips back and drove himself deep, slapping their bodies together.\n\n\"YES! FUCK YES!\" she gasped.\n\nThe bliss Ben was feeling was overwhelming his senses and he set up a rapid pace of pounding her pussy with his cock. She lost the ability to speak coherently as she clung to his body. He was getting close and from the sounds she was making so was she.\n\nHe pushed her bikini top up and took her thick nipples between his fingers.\n\n\"YES BEN! DO THAT! THAT'S IT! OH MY GOD! I'M GONNA CUM! SO GOO... IT'S HAPPENING! CUMMING! CCUUMMMMIIIINNNGGGGGG!!!!!!\" Trish howled.\n\nHer cries pushed Ben over the top and he growled as he drove himself deep one last time to shoot stream after stream of cum into her depths. He rocked against her and she whimpered with the intensity of the pleasure.\n\n\"Oh Sweet Geezus! Oh yes! Ohhhhhhhh... fuck!\"\n\nBen looked at Trish in surprise and she looked back at him with wide eyes. Those last cries didn't come from them.\n\nThere was a sudden thump from the divider wall between their balcony and the next one. Quiet panting could be heard. Ben and Trish arched their necks to look at the wall. The balconies were separated by ornate wood lattice work sandwiching a translucent pane of glass. A small table with a flower box stood against this. Ben's eyebrows went up as he caught sight of a shock of white hair showing between the flowers in the box.\n\nHe gently pulled from Trish and looked around for his board shorts. Unable to find them he helped Trish up. She adjusted her bikini top and looked for her bottoms.\n\nBen walked over to the divider and lifted the small table aside. There was a large crack in the glass panel and a chunk missing. This had been easier to cover with a plant than repair he supposed. On the other side of this hole was a head with white hair.\n\n\"Susan?\"\n\n\"EEEP!\" she squeaked as she pulled back from the divider.\n\n\"What are you doing?\" he asked, covering his cock with his hands. Trish lifted the cushion and spotted Ben's swimsuit and her bikini bottoms. She slipped hers on and handed Ben his. He had to move his hands to put the shorts on and he heard Susan moan as she watched from the other side.\n\n\"Susan!\"\n\n\"I'm sorry! I was just relaxing on the lounge when I heard a woman's voice swearing. I noticed the hole in the panel and when I realized I could see you as well... it... it was mesmerizing! I haven't witnessed anything like that... ever,\" she finished with a gasp.\n\nBen's face was hot with embarrassment. \"That was... a very private moment!\"\n\nThere was a pause. \"You didn't choose a very private place for it nor were you trying to be very quiet.\"\n\nTrish grinned at him and he begrudgingly had to acknowledge the truth in that.\n\n\"I didn't mean to spy on you but I must admit I'm not sorry I did. That was one of the most erotic experiences I've ever had in my life,\" Susan admitted.\n\nTrish's grin just got wider and Ben scowled. He was tired of getting this kind of attention from strangers. \"I'm going in for a shower,\" he said to the redhead. She stayed behind to speak with their neighbor.\n\nAs Ben rinsed his body under the spray his thoughts turned inwards once more. He just wanted to go back to the anonymity of his past but more and more that seemed like an impossibility.\n\nHe wasn't sure if dining with the celebrities tonight was going to make matters better or worse.\n\nChapter 9\n\nThe Silver Moon restaurant was lovely and at the moment loud with the laughter and chatter from the arriving celebrities. Not all the patrons were happy about this.\n\nDream's entourage had arrived and a large section of the dining area had been set aside for them. The men and women were dressed in their best tropical evening wear and once again plenty of gold chain and rings were on display.\n\nBen wore a black silk shirt over dark grey slacks and Trish wore an off the shoulder sleeveless red sheath dress which showed a lot of skin. This display made Ben's grey slacks too tight in the groin area much to her delight.\n\nRochelle had been successful in finding a lovely gold dress in the boutique. It too showed a lot of cleavage and leg and she'd grinned when she saw Ben's appreciative look. She'd given him a big hug and thanked him again. Trish just shook her head and watched Ben from behind her friend.\n\nThe moment the three of them entered the dining room Thomas stood and walked over to meet them. He gave Ben and Trish a smile and a hello but his eyes were drawn to Rochelle as hers were drawn to him. He led them back to the main table where they'd reserved some seats for them.\n\nThomas looked to Ben to see his reaction at Rochelle's chair being next to himself. He relaxed when Ben simply moved to the chair he was offered, across from Dream. Trish sat across from La'Shia whose black shimmery dress clung to her toned body like a second skin. Her nipple piercings were immediately evident. Ben glanced at Dream after pulling his eyes from his fianc\u00e9 and saw the man was smiling.\n\n\"Yes, she's captivatingly beautiful isn't she!\" he boasted.\n\nLa'Shia smiled indulgently at her man and took his hand in hers.\n\n\"Truly lovely! You're a lucky man!\" Ben nodded and Dream's smile widened.\n\n\"That's a beautiful ring!\" La'Shia said admiring the large ruby on Trish's finger. The redhead beamed a smile and presented her hand for the other woman to get a better look. La'Shia's slim eyebrows rose as she took in the quality and quantity of the stones.\n\n\"Ben chose it for me when he was in Paris,\" she said with a smile.\n\n\"We just got back from doing a show there. Did you two enjoy Paris?\" Dream asked.\n\n\"Oh, I wasn't on that trip. I was working,\" Trish admitted.\n\nLa'Shia smiled at Ben. \"You have excellent taste in jewellery!\"\n\nDream looked confused. He looked over at Rochelle. \"Were you with Ben in Paris?\"\n\n\"No, I was working as well. Ben went with a few other neighbors and Tina.\"\n\nDream's eyes swung back to Ben. \"Who's Tina?\"\n\nBen paused. He could feel this conversation sliding off the rails but there was nothing he could do. \"She's the woman I live with. My fianc\u00e9.\"\n\nLa'Shia released Trish's hand quickly and leaned back in surprise. Dream's eyes widened and Thomas looked a little upset.\n\nTrish held up her hands. \"Before everyone jumps to the wrong conclusion, Tina is aware of Ben's relationship with the other women in his life. He is deeply in love with Tina as she is with him. He also loves me... and a few others.\"\n\nThomas looked at Rochelle in confusion.\n\n\"Rochelle is a very dear friend of mine. That's... the extent of our relationship.\" Ben said uncomfortably but saw Thomas relax somewhat as Rochelle smiled tentatively at the man.\n\n\"I suppose I should have expected your status as a player considering the statue-\" Dream grinned.\n\n\"I'm not a player and I wish I'd never posed for that damn statue,\" Ben growled with a scowl.\n\nTrish took Ben's hand as Rochelle jumped to his defense. \"It's true Ben's in a relationship with multiple women but he's anything but a player. He's in love with these women and each is fully aware of his relationships with the others. He respects them and is there for them when they need help. He wouldn't do anything to hurt a woman.\"\n\nLa'Shia was watching Ben's expression and saw the truth written there. \"Why did you pose for the statue?\"\n\nBen looked at her in surprise and saw her curiosity. He could give her an answer. \"The artist had recently experienced a... horrible and traumatic event and lost her desire to make art. She's the cousin of Gabriella, one of the women I love. The artist is blind but she's incredibly talented. Her previous sculptures were far more abstract. When I agreed to let her sculpt me it was to help her rekindle her love of art and I was really expecting it to be abstract, not such a freaking accurate copy of me! I mean, she's blind!\"\n\n\"You don't like the sculpture?\" La'Shia asked.\n\n\"As art goes, I suppose it's good. But I hate what it's done to my privacy! I want nothing to do with fame or notoriety yet I have the press chasing me and anyone associated with me.\" Ben growled.\n\nThe table went quiet and Dream began to laugh. Ben looked at him in confusion.\n\n\"We couldn't be further apart if we tried. Polar opposites! Black and white!\" Dream blurted and the table erupted in laughter. Even Ben couldn't keep the smile off his face at that one.\n\nBen nodded. \"Ok, I get it. Your business is driven by public attention so any kind of attention can drive revenue. You can make it work for you. But I'm a mechanical engineer. My business doesn't require fame and I didn't get famous from my work.\"\n\nOne of Dream's group was standing by the table and leaned in towards Ben with a smile that showed off at least three gold teeth but didn't seem to reach his cold eyes. Tall, with a well-muscled but lean frame, the dark skin of his bare arms was tattooed with black bands and swirls. He also had some facial tattoos which could have been warrior tats. \"You're fame began when you wasted the motherfucking slavers in Paris.\"\n\nBen turned to face the man more directly and saw he was holding his hand out. Ben took a grip and shook it.\n\n\"Name's Night and I'm a fan of your work. Iced six of the bastards to save the bitches.\" the man said emotionlessly and Ben felt the hair rise on the back of his neck. He released the grip.\n\n\"There were only four slavers and I saved women, not bitches,\" Ben replied as he held the man's unwavering gaze. Finally Night shrugged and moved off but not until he'd taken a good look at Trish's tits.\n\n\"OH MY GOD! That was you?!?\" La'Shia gasped.\n\nBen turned his attention back to his dining companions and nodded reluctantly. Trish took his hand once more and he immediately felt himself relax. He glanced at her gratefully.\n\n\"Ben doesn't like to talk about it. He did save three young girls who'd just been kidnapped and two who were in their twenties and had been slaves since they'd been kids themselves. He adopted the two older girls and is helping them get their lives back. They're really sweet girls,\" she said. The others looked back at Ben excitedly. He needed to change the subject.\n\n\"What's Night's story?\" Ben asked Dream. The man shifted uneasily.\n\n\"He's a creep-\" La'Shia began but Dream gave her a sharp look.\n\n\"He's one of my crew. We go way back. He's had a harder time than the rest of us. Leave it at that,\" he said gruffly.\n\n\"I'm sorry. I didn't mean to start anything. If you don't mind I'd love any advice you have on what I could do to protect my privacy. I'm sure you have to deal with that,\" Ben asked.\n\nDream nodded, feeling more comfortable now that Ben was looking to him for advice. \"I have a publicist who manages my exposure and lets me know when there are good opportunities to maintain my position in the public's attention. We wanted a little privacy for this wedding so we chose this location. Off-season but still beautiful. Less people here to leak out the story.\"\n\nA short man with a close cropped beard walked over to their table. \"Dream! Me and the boys are signing up for ATV riding tomorrow. You in?\"\n\n\"Fuck yeah, I'm in!\" He looked over to his brother but Thomas just shook his head with a smile and went back to talking with Rochelle. Dream looked across the table. \"Ben? Care to join us?\" he asked.\n\n\"Only if Trish is going. She's ridden them before,\" he replied.\n\nDream looked at her with raised eyebrows. She grinned.\n\n\"My husband and I used to do all of the outdoor sports, the riskier the better.\"\n\n\"Husband?\" La'Shia asked.\n\n\"Died in a plane crash almost a year ago,\" Trish said. \"Wait, what time would we be back? We have a spa session at 2PM.\"\n\n\"It's from 11 until 1,\" the bearded man replied. \"\n\n\"That works. We're in. Any other ladies along for the ride?\" Trish looked across at La'Shia who laughed.\n\n\"No, I'm not going out to play with the boys,\" she chuckled then paused. She turned her eyes to her fianc\u00e9. \"Why don't you take Boca?\" she suggested, challenge in her eyes.\n\nDream's eyes flashed to the beauty next to him. He saw the message in her eyes and nodded. Without looking away from her he spoke to his friend. \"Style, tell Boca she's coming with us tomorrow.\"",
        "The man, Style, grinned and headed away to speak with the Hispanic woman. She looked up in surprise as Style delivered the message then looked over to their table afterwards. She nodded without smiling then shied away from La'Shia's intense stare.\n\nBen could see there was an undercurrent of tension, maybe even hostility, between the mocha skinned woman across the table and the petite tattooed woman. He really didn't want to get involved in the drama. That seemed to be something else those hungry for fame craved. Some used this drama in their art.\n\nThe waiters arrived and saved him from having to deal with it.\n\nThe meal was excellent and conversation returned to simpler, less volatile topics. Travel, family, home life, art, and musical tastes. Rochelle was quick to describe how her son was a fan of Dream's music and her daughter was a big fan of La'Shia.\n\nBen saw that Rochelle and Thomas were clicking and he felt better.\n\nThey were still talking at 11:30PM and enjoying some ice cream as the dinner ran out of steam. Most of the 'crew' had already retired for the night, all of them leaving with one of the ladies with the exception of Night who left early and alone. He also noted that the 'extra' ladies with the exception of Boca had left. The woman had spent most of the night speaking with no one but with her face buried in a worn paperback. The other women seemed to be shunning her. He recalled La'Shia's reaction to her.\n\nDream and his fianc\u00e9 finally announced they were going up to their room so everyone stood and said their good nights. Rochelle and Thomas wandered off to the bar to continue their conversation. Ben noticed 'Boca' was still alone at her table still reading. He looked at Trish. They wandered over to speak with her.\n\n\"Hello,\" Ben said.\n\nLovely brown eyes looked up at him over her book. When she folded the page corner down and closed it Ben noticed it was Vladimir Nabokov's 'Lolita'.\n\n\"Hello,\" she responded with a surprisingly gravelly voice and he recognized a distinct Spanish accent.\n\n\"I'm Ben Shepherd and this is Trish Campbell.\"\n\n\"Rain Palomo.\" She held out her hand so Ben shook it and Trish did as well.\n\n\"La'Shia said your name was Boca,\" Ben said curiously.\n\nRain looked at the table surface, sighed and nodded. \"Yes. That's the name they gave me.\"\n\n\"Why would they give you a name? Are you a member of the band?\" he asked.\n\nRain looked up at him with a tired expression.\n\n\"I'm sorry if I've said something wrong. I just noticed you arrived with Dream's group but you seem to be separate from it somehow.\"\n\nShe grimaced and nodded. \"I guess I work... freelance for the label. His manager... hired me to come along. I'm not exactly... popular with the other women.\" She stood. Ben saw her 'dress' was just a long sleeveless t-shirt with a belt. \"I should be going. It was nice meeting you.\"\n\nThey all left the restaurant and walked back to the lobby. Rain stopped to speak with the reception clerk while Trish spoke with the concierge to find out about where and when they'd join the ATV group in the morning. The clerk went into the back room and returned with a dusty green army duffle bag which had been mended multiple times. He passed it over the counter to the woman.\n\nBen overheard Rain asking if a room key had been left for her and the clerk said no. Rain's shoulders slumped.\n\n\"Are there any available rooms?\" he asked and Rain looked at him in surprise.\n\n\"I'm afraid not sir. The rooms of the north building are being renovated during the slow season so our available rooms are restricted to the south building and we're booked solid.\"\n\nTrish looked at Ben with a grin. She knew Ben was in rescue mode. \"The couch in our room folds out as a bed,\" she suggested.\n\nRain looked at Trish next. \"You don't have to-\"\n\n\"Are you planning on sleeping on the beach?\" Ben asked. \"You can crash on our fold out until we can make alternate arrangements.\"\n\nRain was looking at him with a nervous frown.\n\n\"No strings attached.\" Trish offered. \"Ben just does this kind of thing.\"\n\nLooking out into the darkness of the forest outside Rain saw she really didn't have much choice. Ben was a really big guy and his scars were a little scary but his eyes...\n\n\"Ok, sure. Thanks!\" Rain said watching his reaction. Her creep radar didn't go off at all so she felt a little better.\n\nBen led the way up the stairs to their hallway. He saw Susan trying desperately to get Ted up the last flight of stairs. He moved forward quickly when he saw the older man suddenly begin to wobble on the stairs. It was all Susan could do to keep them both from falling. Ben gently braced them both then took Ted from Susan's arms and she smiled gratefully in relief.\n\nHe was about to ask if the man needed medical help when he smelled the alcohol on him. The old bastard was shit faced. Ben frowned.\n\n\"Go on ahead and get your door open and I'll bring him inside,\" he said to the woman. With a nod she climbed the last flight and moved down the hall to her room as Ben lifted the drunk man in his arms. Rain looked on in astonishment as she and Trish followed them up the stairs.\n\n\"He really does do this stuff all the time!\" Rain said quietly to Trish.\n\n\"Yup,\" she replied with a grin.\n\n\"He have some kind of hero complex?\" she whispered and Trish stopped her in the hall to look at her seriously.\n\n\"We think it may be something like that but Ben doesn't like to be called a hero. For him he does good things because they need to be done and he can do them. We've learned not to make a fuss or praise him too much as that just upsets him.\" Trish explained.\n\n\"Upsets him? Is he dangerous? To women?\" Rain said in a worried tone.\n\nTrish snorted and Rain's eyes widened. \"Sorry. No, Ben would walk through a burning building before he'd hurt a woman. If someone else hurts a woman though, he'd better hope Ben doesn't catch him. Ben can be violent but only in response to violence.\"\n\n\"Still, that sounds like something he should be speaking to someone about!\" Rain pushed.\n\nTrish nodded. \"He has been and will be again once we return from our trip.\" She paused to look at Rain. \"If you're wondering if you're safe with Ben I can honestly say there is no safer place to be.\"\n\nBen carried Ted through the doorway and set him down carefully on the bed. The older man tried to punch Ben ineffectually once he was on the mattress but Ben just leaned away and the flailing limbs missed.\n\n\"Fucking bgg mther...\" Ted mumbled then promptly fell asleep.\n\nSusan stood next to Ben and looked down in disgust at her husband.\n\n\"Does he normally drink this much?\" Ben asked.\n\n\"No. He lost the golf tournament against his partner. They play every year and this year, the first time ever, Ted lost. He spent the rest of the day in the bar. That's why he was so nasty when he first met you in the hall. Truthfully though, Ted's a fucking asshole.\"\n\nBen looked at her in surprise.\n\n\"What? Can't a lady swear from time to time?\" Susan asked with a grin.\n\n\"I'm not judging, it just seems odd to hear those words coming from such an elegant and classy woman,\" Ben admitted.\n\n\"We all have our secret sides though, don't we,\" Susan teased. She looked up at Ben. \"Thank you again.\" She stepped forward and pulled him into a tight full body hug. Her hands were a little lower than he was comfortable with and she squeaked oddly when he wrapped her in his arms and put his hands on her but she released him after a time with a happy sigh.\n\nBen stepped back out into the hall and saw Trish and Rain waiting for him. \"Didn't you bring your key?\"\n\nTrish looked at her tight dress and smirked. \"I didn't have room for it.\"\n\nHe let them into the room and when the door closed Trish looked back at him with a grin. \"So, did she try to thank you with a blow job?\"\n\n\"What?!? No!\" Ben exclaimed as his face burned.\n\nTrish turned to Rain. \"That nice lady peeped on Ben and I when we had hot sex on the balcony. She 'played along' and scored the best orgasm she'd ever had.\"\n\n\"TRISH!\" Ben cried out in shock, his face getting hotter by the second.\n\n\"It's ok Ben. Susan and I had a good talk when you went inside. She's a lovely woman and today she learned she's a voyeur! Her husband's lost all interest in her and she's found a new way to get a little happiness! I think that's wonderful!\"\n\nRain was smiling at Trish and watching Ben's flustered expression.\n\n\"I'm... I'm happy for her. Well, I'm going to get ready for bed,\" he said as he pulled some boxers from his luggage. With his new room guest he couldn't sleep in the buff as he'd become accustomed to. He made his way into the bathroom and got ready for bed. He'd wear the finger brace as he slept as it protected him from hurting it in his sleep.\n\nWhen he came back out Trish was unfolding the sofa bed and Rain was helping her. That was fine except that both were only wearing their panties.\n\n\"Geezus!\"\n\nRain looked up. \"Sorry, I can't wear anything more than this when I sleep. It feels too constrictive.\"\n\n\"I have no problem with it.\" Trish said as she continued to set up the bed, her heavy tits swaying under her body as she leaned over the sofa bed.\n\nRain's body was all lean muscle and she was almost as petite as Tina and Tina's breasts were larger.\n\nTattoos. So many tattoos. They didn't end at her arms but were on her chest, stomach, back and legs. Unlike Lucy's Japanese theme, Rain's art contained a number of different styles. Multiple artists with different skill levels had worked on these.\n\nBen realized he was staring at her chest and Rain was staring back at his.\n\n\"So many scars!\" she breathed. \"What happened?\"\n\nBen grunted and climbed into the bed. He didn't want to talk about it.\n\n\"A knife wielding drunken lunatic attacked Ben at home. We almost lost him but he's a survivor.\n\nHe flipped on his side facing away from the ladies and Rain gasped. \"What happened to his back?\"\n\n\"A shotgun wielding drunken lunatic attacked Ben in France.\"\n\n\"He is a survivor!\" Rain exclaimed.\n\n\"Could we not talk about this, please?\" Ben pleaded.\n\n\"Sorry Ben,\" Trish said contritely.\n\n\"Sleep well, Rain,\" Ben called out.\n\n\"Are you an early riser?\" Trish asked her quietly.\n\n\"Yes, I usually go for a run,\" Rain admitted.\n\nTrish grinned. This was going to work out better than she thought.\n\nChapter 10\n\nBen walked along the beach feeling the wet sand squish between his toes and the gentle waves dance over his feet. He felt at peace. In the far distance he could just make out Trish and Rain jogging along the shore.\n\nHe had company as well. When they got to the beach they found Susan standing at the edge of the water. She'd accepted his invitation to walk with him as the other two ladies jogged away. She was wearing a white two piece bikini with a gauzy wrap around her hips. Aside from her full breasts, round ass, and a slight belly her body was fairly toned. Best of all, she was comfortable with her body and her self-confidence was refreshing.\n\nHe'd worn a pair of board shorts and a sleeveless t-shirt. They carried their sandals as they walked in the water.\n\n\"You seem to have a new companion this morning,\" Susan noted.\n\nBen glanced at her and saw the slightest of smiles on her lips. \"Uh, yes. We met her at dinner last night. She discovered she didn't have a room so we let her use our sofa bed.\"\n\nSusan looked at Ben in surprise. \"You just met her last night and you gave her a place to sleep in your room?\"\n\nHe looked back. \"Yes. Why is that surprising?\"\n\n\"She's a stranger!\"\n\n\"So are you!\"\n\nSusan smiled gently. \"Yes, of course you're right. Somehow though, it doesn't feel like that for me.\"\n\nBen blushed and looked out at the waves.\n\n\"I'm sorry if I upset you by watching yesterday. The fact that you were outside on the balcony and being so loud gave me the wrong impression. It seemed like you two were comfortable with being seen,\" Susan said.\n\n\"The grounds were so empty in the rainstorm it felt like we were the only ones around. Then Trish got me going and I couldn't think of anything else,\" he said with a shrug.\n\nSusan smiled. \"She has a lot of energy.\"\n\nBen grinned fondly. \"Yes, she's a live wire.\"\n\n\"Did she tell you about our conversation?\" she asked.\n\nHe nodded, unsure how to respond. He was still a little unnerved to hear someone so... wholesome looking speaking about her sexual needs.\n\n\"I've never been a risk taker, dynamic like Trish. I lived a very comfortable and dull life with the wrong man. Too many years lost to that cold fish. When I get home I'm filing for divorce.\" Susan said firmly.\n\nBen looked at her and saw she was excited by the prospect. \"Good for you!\"\n\nShe smiled up at Ben. \"I have you and Trish to thank for my new decisiveness. What I experienced yesterday woke something in me. I learned things about myself. I like the new me.\"\n\nHe smiled at her. \"That's a very positive attitude!\"\n\nThey smiled at each other and walked in silence along the beach, soaking in the wind, waves and the beauty of the early morning sunrise. They reached a natural turn around and began to head back.\n\n\"Would you care to join us for breakfast this morning?\" Ben asked.\n\n\"It would be lovely to have company for breakfast! Thank you! Ted's in miserable pain from his hangover so he won't leave the room until after lunch,\" Susan explained.\n\nBen nodded and they continued on their way.\n\nAs they approached the grounds they heard the thump of fast moving feet and breathless giggling and looked back to see Trish and Rain sprinting towards them, racing to be first. Trish's legs were so much longer than Rain's but the smaller woman ran like the wind. They both reached Ben at the same time and the three of them went down in the sand in a big giggling, panting pile.\n\nBen felt the two women lying across his body which began to react. \"Ok, that's enough. Let me up!\" he gasped. In the scramble to get to their feet, areas of his body were touched and squeezed but he couldn't tell by whom. Susan watched with a delighted grin on her face.\n\nHe shook the sand from his trunks and shirt as he scowled at the grinning faces of the panting ladies. \"So, you enjoyed your run?\"\n\n\"Yes! It was amazing!\" Trish gasped.\n\n\"Very much!\" Rain said.\n\n\"Rain's a psychologist!\" Trish gushed. Rain smiled at the woman.\n\n\"But... you're so young!\" Ben said in confusion.\n\nTrish laughed. \"I said the same thing. How old do you think she is?\"\n\nBen looked at her again. \"...Twenty... one?\"\n\nRain grinned. \"Twenty eight.\"\n\nBen blinked in surprise. \"I never would have guessed that.\"\n\nRain's smile dimmed. \"Yes, well, that's one of the reasons I'm here instead of working in a clinic or a hospital.\"\n\n\"Nobody believes you are old enough to have the credentials?\" Susan asked and Rain nodded.\n\n\"This is Susan...\" Ben looked at her as he realized he didn't know her last name.\n\n\"Tate.\"\n\n\"Susan, this is Rain Palomo,\" Ben finished.\n\nThe two women shook hands.\n\n\"Everyone ready for breakfast?\" he asked and got smiles all around.\n\nThey made their way back to their rooms. Trish sent Ben into the shower first.\n\nHe was shampooing his hair when he felt Trish's tits press against his back. \"Trish, I'll be finished in a moment. We don't have time for this.\"\n\nHe was unable to see with the shampoo in his eyes but he felt her hands slide down his stomach and cup his balls.\n\n\"Geezus Ben! Your balls are so heavy! Are they full of cum for me?\" she breathed in his ear as she pressed her body against his back. His cock began to thicken and she purred as she felt it grow.\n\n\"Trish! Fuck, we don't have time!\" Ben said quietly, conscious of their guest in the next room, and tried to guide his hair under the shower so he could rinse the soap away and clear his eyes. He hadn't seen Trish redirect the showerhead downwards away from him.\n\nHer hand took a grip of his cock at the base and the other slid up towards the head.\n\n\"Gah! Oh fuck! Trish! Geezus!\" he moaned from the amazing stroking of his cock as her tits rubbed his back, the stiff nipples pulling against the roughness of his scars.\n\nBen's mind was flooding with the bliss of her hands on his cock until it reached maximum hardness. He couldn't think straight. When she took him all the way in her mouth, forcing his thick hard flesh down into her tight throat Ben's mind whited out. He groaned and his body shook with the intensity of the sensation. Again and again his cock was forced down the tight passage. He could feel his balls tighten in anticipation.\n\n\"FUCK! OH FUCK! TRISH! WAIT! Wait... wait... what?\"\n\nTrish's tits were still pressed against his back... so how...\n\nBen reached up and roughly wiped the soap from his eyes and blinked blearily down at the chestnut hair bobbing over his cock, swallowing it deep one final time. It was too much and his balls said now!\n\n\"AAAAHHHHHH!!!!!\" Ben's body tensed and he pulled back from the petite brunette but she had a double handed grip on his throbbing cock just as streams of cum shot out to splash against her tongue and across her face.\n\nRain milked him aggressively, her soft lips caressing the sensitive head, and his muscles jumped and shook as Trish hugged him tight against her body, kissing his broad shoulders.\n\nAs his orgasm subsided he reached up for the showerhead and redirected it at his hair. He rinsed the shampoo away and wiped his face to clear his eyes.\n\nHe looked down and saw Rain smiling uncertainly up at him. \"Trish,\" he growled.\n\n\"Rain just wanted to thank you for taking her in last night. We got to talking as we ran and we both thought it would be so hot to share the shower with you. She told me about her talented mouth. That's why they call her Boca, by the way. It means mouth in Spanish.\"\n\n\"A simple thank you would have sufficed,\" he grumbled and twitched as the woman sensually kissed his semi-rigid cock. \"Stop!\"\n\nRain stood up and pressed her small body against his chest, her warm brown eyes looking up at him with a desperate need in them. His cock was trapped between them and throbbed as it thickened once more. Rain's thick eyelashes fluttered as she felt that. \"Please,\" she pleaded softly. She gently bit her lip.\n\nBen was trapped between his discomfort at being naked before yet another stranger, his need to give her what she needed, and his own lust.\n\nTrish stepped back as he bent his knees and cupped his hands under Rain's muscular ass cheeks. He lifted her light body and her legs automatically wrapped around his hips.\n\nHe slid two fingers over her pussy lips and found her to be very wet. She gasped and her mouth was on his, her tongue exploring deep. He tangled her tongue with his and sucked on it and she clung to him even tighter, grinding against his cock.\n\nHe lifted her higher and he felt Trish's hand on his cock as she knelt beside them, guiding him into Rain's wet pussy. He lowered her down slowly and felt the head force its way inside. Rain pulled back from the kiss and her mouth dropped open.\n\n\"Ohhhh Ben! Oh god! You're... Fuck! You're big!\"\n\nHe raised and lowered her in small increments, slowly easing his cock into her incredibly tight pussy. He started to doubt he'd get more than a few inches inside. Finally he stopped with just the head and two inches of his shaft inside.\n\n\"OhGodOhGodOhGodOhGodOhGodOhGod...\" Rain wailed as her entire body trembled atop his cock. \"So full!\"\n\nTrish saw she'd only taken a small amount of it so she stood and leaned close to Rain's ear. \"Angel, you've only got the tip.\"\n\nRain's eyes flew open and she turned to look at Trish in dismay. \"Qu\u00e9? N-no! Es imposible! He's so deep!\" Her trembling got worse.\n\n\"Shhh, it's ok. We don't have to go any further,\" Ben said calmly and kissed her cheek.\n\n\"I- I don't understand. I can feel you filling me completely!\" Rain gasped.\n\n\"How big are the cocks of Dream's crew? Have you had difficulty taking any of them deep?\" Trish asked and Ben's face began to burn as he stared incredulously at Trish's curious expression.",
        "\"No- I- I don't do this with them. Only oral,\" Rain said with a shaky voice. She tried to lift herself so Ben helped her until only the head was inside.\n\n\"F-F-F-F-F-F-F-F-F-Fuckkkkkk! Ohhhhh!Ohhhhh!Ohhhhh!Ohhhhh!Ohhhhh!Ohhhhh!\" Rain began shaking so he lowered her down a little until he reached the same depth as before. Her trembling slowed.\n\n\"I think we should stop. I don't think you're ready for someone my size,\" Ben said cautiously.\n\nTrish knelt behind Rain and tilted her face up.\n\nBen suddenly felt a tongue lapping against his cock and he moaned as it felt so good. Trish began licking where his cock met Rain's pussy and she cried out in bliss but Ben felt her tightening up on him. Not the route to go.\n\nTrish moved her tongue up to Rain's tight little asshole and she began to fuck her with her tongue.\n\n\"AAAAHHHH!!! OOHHH GGOOOODD!!! FFFUUUUCCCCKKKK!\" Rain cried out and Ben felt an odd rippling sensation in her pussy then she sunk another inch down his shaft.\n\nHer tongue forced deep into the brunette's ass, Trish rubbed her own clit in rapid circles. This was so fucking hot!\n\nWailing constantly now Rain clung to Ben as he began to lift and drop her on the top half of his cock. It felt incredible for him but considering Rain's eyes were rolling back she was going to reach her limit first. Sure enough three strokes later she went into convulsions and Trish had to pull away. He lifted Rain clear of his cock and ground her against his body while she shook and trembled through her release.\n\nShe finally slumped forward to rest her head on his shoulder.\n\n\"Oh my god Ben, Trish! That was intense! All my muscles are limp,\" she moaned.\n\nTrish turned off the shower and he carried the brunette out of the shower stall. There was an odd thump sound outside the bathroom door and Ben looked to Trish.\n\n\"Maybe Rochelle is back?\" she suggested.\n\nBen frowned and wrapped some towels around Rain. He carried her out into the room but Rochelle wasn't there. He gently laid the beauty down on the bed and spread a towel out on the bed next to her. Trish followed them out and Ben turned to face her. She looked down at his cock and bit her lip anxiously. He was still hard as iron.\n\nHe pulled her to him and kissed her deeply and she moaned feeling his need pressing against her. She squeaked when Ben lifted her and laid her out on the bed next to Rain. He pushed her legs up to her chest causing her hips to raise off the bed. He ran his tongue roughly across her wet pussy and she cried out.\n\n\"Oh FUCK! Ben! Yessssss! So good!\"\n\nBefore she could prepare he knelt on the bed and pressed the head of his cock against her wet lips. The moment they parted and accepted him he slammed forward until he was as deep as he could go.\n\n\"FFFFUUUUUCCCKKKK!!!! OH BEN! YES!\" Trish cried.\n\nHe began to drive himself into her with long, fast thrusts as she clung to the sheets. Ben's pelvis slapped Trish's clit with each stroke and she was in heaven. She was so close!\n\n\"Yes Ben! Yes! So FUCKING GOOD! MOTHERFUCKER! POUND ME!\" she growled and his thrusting sped up to a brutal pace. She began to wail incoherently as he rapidly slapped her clit against himself.\n\n\"FFFFUCKING CUMMINNNNNGGGG SSSOOOOOO HHHAARRDDD!!!! MOTHERFFFFUUUUCCKKERR!!!\" Trish cried out as her release tore through her.\n\nBen drove himself in and rocked his hips against hers, over stimulating her clit, as he shot his cum deep inside her.\n\n\"AAAAAAAAAAHHHHHHH!!!!\" Trish screamed as she overloaded.\n\nThey gasped for breath as they came down from their mutual highs.\n\nThere was a sudden pounding on the door. Ben looked at Trish as his breathing came in big gulps. There was a second series of bangs on the door. Ben pulled his semi-rigid cock from Trish and made his way to the closet to get his robe to answer the door. He slid it open and jumped back in surprise as Susan was inside. She looked up at him with a hot smile as she tried to catch her own breath. Her face was flushed and she was panting. The hammering on the door continued so she handed him his robe and he slipped it on as she admired his cock.\n\nBen cinched the robe closed and opened the door. In the hall was Ted, looking very queasy but also very angry. He couldn't open his eyes very far due to the pain from his hangover but he was trying to glare at Ben.\n\n\"If you are going to rut like fucking animals do it out in the jungle, you big fucking ape! Civilized people are trying to sleep here! No one wants to hear your disgusting sex noises!\" Ted barked.\n\nSusan slipped around Ben's side to step out into the hall and push Ted back as he stared at her incredulously.\n\n\"Speak for yourself, you old fossil,\" she spat. She looked back at Ben with a sweet smile. \"See you downstairs for breakfast in fifteen, Ben?\"\n\nBen just nodded. Ted looked back at him, his eyes wide as saucers. Ben shrugged and closed the door.\n\nThe breakfast buffet was huge and Ben had to restrain his urge to fill his plate with his favorites. Without his daily exercise routine he didn't want to blow his diet as well. He spotted Susan sitting alone at a table sipping tea as she looked out over the beach. Ben carried his plate over to her table.\n\n\"May I join you?\"\n\n\"Of course Ben! Please,\" she said with a smile.\n\nHe got himself situated across from her and looked at her smiling face. She seemed happy and content.\n\n\"So... Trish?\"\n\nShe nodded. \"After you went into the shower she knocked on my door and invited me over.\"\n\nBen shook his head with a frown. Trish the imp. Always pushing him outside of his comfort zones.\n\nSusan looked into her tea cup. \"I'm sorry. I'm aware that you aren't... happy about my... invasion of your privacy but... when she offered I- I just couldn't resist.\" She smiled cautiously at him. \"I've never felt like this before. For the first time in my life I feel truly alive!\"\n\nBen nodded but used his fork to push some fruit around his plate. \"I know it may not appear this way but I'm a very private person. Shy and pretty reserved. I'm not really that comfortable around strangers. Public intimacy is particularly difficult for me. Trish is the opposite of me and I know she means well. She's always trying to draw me from my shell. Unfortunately she sometimes uses rather extreme measures.\"\n\nSusan looked around the restaurant but couldn't find the woman in question. \"Where are Trish and Rain?\"\n\nBen looked at his plate. \"They're... recuperating. They'll be down later,\" he said quietly and Susan grinned at him over her tea.\n\n\"How did it go with Ted?\" Ben asked to change the topic.\n\n\"He flipped his lid but I told him I had no time for his noise.\" She smiled at the memory. \"He looked like a fish out of water, mouth opening and closing silently, eyes bulging.\"\n\n\"Your coming out of my room isn't going to cause you any grief with the divorce is it?\" Ben asked, worried.\n\nSusan caught his look and patted his hand with a smile. \"Don't worry. He made me sign a prenup agreement when we got married and I ensured it protected me as well. It's iron clad. The income from the company I inherited from my parents is completely in my name. He gets none of my savings when I cut him loose. He retains all of his personal holdings but the few debts we have are in his name too. I'll walk away from those as well.\"\n\nBen spotted Rochelle and Thomas wander into the restaurant. He waved and they walked over to the table.\n\n\"Good morning Ben!\" Rochelle smiled.\n\n\"Good morning Ben.\" Thomas said, watching for his reaction.\n\nBen stood and gave Rochelle a quick kiss on the cheek and shook Thomas' hand. \"Good morning to you both. May I introduce Susan Tate? She's staying in the room next to mine.\"\n\nSusan shook their hands and said her good mornings.\n\n\"Would you care to join us? It's a buffet so you just fill your plates.\"\n\n\"Where's Trish?\" Rochelle asked looking around.\n\n\"She's- she'll be down in a little while,\" Ben stuttered as his face warmed up and Rochelle grinned knowingly. Thomas was watching the interplay with a curious expression.\n\n\"We'll get our food and join you in a bit.\" Rochelle said.\n\nWhen they were alone Susan looked across at Ben. \"You aren't very good at telling little white lies.\"\n\nHe shook his head with a scowl. \"I don't lie.\"\n\nShe snorted. \"Oh come on! Everyone lies. Harmless little lies which smooth over social awkwardness.\"\n\n\"I don't believe any lie can be truly called harmless. I'd rather be socially awkward and maintain my integrity,\" Ben explained.\n\nShe looked at him with raised eyebrows. \"That must lead to difficulties.\"\n\nHe nodded and concentrated on his breakfast.\n\nRochelle and Thomas returned with their breakfasts and took the empty seats. Once they were settled Ben caught Thomas' attention.\n\n\"Do you know anything about the woman that flew down with your brother's group yesterday? Hispanic woman with lots of tattoos. Her name is Rain Palomo though the group calls her 'Boca'.\"\n\nThomas nodded. \"Yes, we met at the airport. Danny said his manager hired her to travel with them but he didn't tell me what she does. No one seems to talk with her. The women certainly don't.\"\n\n\"Yes, they don't like her apparently. Last night as we left the restaurant we spoke with her at the reception desk. She had nowhere to sleep last night. She slept on our sofa bed.\"\n\nThomas looked at Ben in surprise. \"You let her sleep in your room? A woman you just met?\"\n\nRochelle patted the man's hand. \"Ben is all about rescuing damsels in distress. Or anyone in distress for that matter.\"\n\n\"That's really nice of you. I'll speak with Danny to see if he can make arrangements for her to sleep on someone else's sofa bed. You shouldn't be put out on your vacation,\" Thomas offered.\n\n\"No, it's ok. I don't want to force her out into a hostile environment. Besides Trish has found a jogging buddy and they've become fast friends. I just asked as I don't understand why she was put into the situation in the first place.\"\n\n\"I think you should ask her yourself. She just arrived with Trish,\" Thomas smiled then it slipped from his face. \"I think they may have injured themselves when they went jogging this morning.\"\n\nBen looked over his shoulder and spotted the two ladies. They were indeed walking tenderly. Only he knew it had nothing to do with the jog.\n\nHis face warmed up and he waved them over. He flagged a waiter who slid a two seater table up against theirs. Trish eased herself down on the bench next to Ben and Rain carefully sat on the chair.\n\nRochelle was supressing her laughter. She knew exactly what this had been caused by and Ben's blush confirmed it. Susan's eyes were twinkling and she had the faintest of smiles on her lips. Rochelle wasn't sure what that meant.\n\nTrish stuck her tongue out at Rochelle which caused her to snort and spray crumbs from her muffin across the table. Thomas leaned back in surprise but the crumbs never made it to him. Rochelle gasped.\n\n\"Oh! I'm so sorry!\" Rochelle said.\n\n\"It's ok. You didn't get me,\" he said with a grin.\n\n\"I think you two should skip the ride this morning,\" Ben suggested.\n\nRochelle leapt from her chair and rushed away towards the rest rooms with her napkin held over her mouth as she lost control of her laughter.\n\nThomas watched Rochelle leave with a puzzled expression and turned to look at Ben whose face was red and he was avoiding his eyes. He looked to Trish who was smirking after her fleeing friend. She looked to Thomas and opened her mouth to explain.\n\n\"Trish!\" Ben growled and she shrugged at Thomas.\n\n\"How would we go about cancelling the ATV's for Trish and Rain?\" Ben asked trying to change the subject.\n\n\"Uh, I think Style was arranging it. You'd have to speak with him. I think I saw him over by the far side of the dining area as we came in.\"\n\nBen nodded and stood up to go find Style. If he remembered from the previous night the man was short and had a beard. He looked around and spotted a table of six of the crew. He recognized Killah, Night, the one Rochelle called Millionz, and Style. He wasn't sure about the other two. He walked up to the table.\n\n\"Good morning!\" Ben said in greeting. He received several nods from the others but Killah returned his greeting. That done he turned to Style. \"Excuse me, Style?\" the man turned in his chair to look up at him. \"Trish and Rain are not up to joining us for the ATV ride this morning. We'll need to cancel for them.\"\n\n\"Boca's coming,\" Night said.\n\nBen looked over at the man. \"Rain's not well enough to handle the ride.\"\n\n\"Not your call. She works for us. Boca comes.\" Night repeated coldly.\n\nBen looked at Night who stared back at him, daring him to start something. Ben looked at the others and they were all looking uncomfortable. Night snorted dismissively and went back to eating his breakfast.\n\nHe had no desire to get into a pissing contest with the punk so Ben walked back to his table. Rochelle was sitting next to Thomas and she spotted the frustration on Ben's face immediately.\n\n\"What's wrong?\" she asked.\n\n\"I asked Style to cancel the ATV tour for Trish and Rain and Night told me Rain had to come. I explained she wasn't well but he told me it wasn't my call and that she was going.\" He looked over at Rain and she glanced back nervously. She was almost panicked. Thomas had a sour look on his face. \"What the hell is going on? Why is everyone so scared of him?\"\n\nThomas answered. \"He's an old... friend of Danny's and... he gets his way. I don't know why Danny defends him. He's bad news, especially with women.\"\n\n\"Rain, you don't have to go. They don't own you,\" Ben said.\n\n\"Ben, I'm broke. I spent a fortune on my education but no one will hire me! I'm buried in debt! I need this paycheque! Yes... they do own me!\" Rain said, a tear welling in her eye.\n\n\"How much is your student loan? How much are they paying you for this trip?\" Ben asked.\n\nShe looked at him bleakly. \"I owe a little more than $82,000. They're paying me $15,000 to stay with the crew through the entire tour. I just have two more weeks to go then I get paid.\"\n\n\"How long have you been with them so far? Do you have a written contract?\"\n\nShe looked at the table. \"Three weeks. No, just a verbal one with Dream's manager.\"\n\n\"What do you do?\" Thomas asked as his curiosity was driving him mad.\n\nRain glanced at Trish. \"Physical therapy,\" she muttered.\n\n\"A euphemism for fluffer,\" Trish said.\n\n\"Trish,\" Ben admonished her with a frown as Rain bit her lip in pain. He knelt down next to Rain's chair. \"Listen to me. I'm willing to buy out your contract. It's not California but I have a friend who's a hospital administrator back home. I'll give her a call and ask if she has any openings or has contacts that can find you a job. You'll have to prove yourself to them and you'll likely start at the bottom. I can also offer you a place to live while you pay off your debts. I'm renovating a house for my daughters and it will have extra rooms in it. Help around the house to keep it clean and that will cover your rent. Trish lives a few doors over so you would have a local jogging partner. What do you say?\"\n\nRain looked into Ben's eyes in shock. Her mouth opened then closed. She looked at Rochelle's smiling face then to Trish who grinned at her.\n\n\"Say yes!\" the redhead pushed.\n\n\"The-the catch?\" she stuttered quietly.\n\n\"None,\" Ben said looking her straight in the eyes.\n\nRain struggled to swallow then looked at Ben cautiously. \"If you're buying out my contract, what do you want me to do for it?\"\n\nBen looked at Trish. \"Keep this one out of trouble while we're here,\" he said with a smile.\n\n\"Hey!\"\n\nBen caught Rain's eyes again. \"Seriously, I'm not expecting you to do anything except keep us company. I wouldn't mind picking your brain about some psychology questions I have. What do you think?\"\n\nAn enormous smile burst across Rain's face and she nodded quickly as tears pooled in her long lashes. Ben gave her a hug and she was trembling. He pulled back and smiled at her.\n\n\"I'll speak with Dream and let him know.\" He looked at Thomas. \"I assume that's who I should speak to.\"\n\n\"I have no idea. Sorry,\" Thomas shrugged.\n\nBen stood up and made his way back to speak with Style. He saw Dream standing next to the table with La'Shia. Perfect.\n\n\"Good morning!\" he said with a smile and the couple turned and greeted him in return.\n\n\"I wasn't sure who to speak to about this but I assume you have a direct line to your manager. Rain won't be continuing on with your group.\"\n\n\"THE FUCK YOU SAY! THE BITCH WORKS FOR US!\" Night yelled and stood up to glare at Ben.\n\n\"I do say as she no longer works for you. She works for me,\" Ben replied calmly as he looked Night in the eye. He saw the man wasn't totally stable. That could be a problem. Night stormed out of the restaurant as the group watched nervously. They cast warning glances at Ben.\n\nHe turned to address the couple once more. \"This is better for everyone involved as she wasn't happy and many of your group weren't happy she was along. We discovered last night that she had nowhere to sleep. Trish and I let her use our sofa bed.\"\n\n\"If she wasn't happy why did she take the job?\" La'Shia snapped, upset at how bad it made them look that one of the people they were responsible for had been neglected.\n\n\"Student loans. She's been unable to get work in the field she studied for and she's drowning in debt.\" Ben replied. La'Shia's face showed her surprise. \"It wasn't work she wanted to do but the payout would have made a big dent in her debt.\"\n\n\"If she quits, she doesn't get paid,\" Dream said stiffly. La'Shia looked at him in surprise.\n\n\"It was a verbal contract between her and your manager giving her no protection to get paid at the end at all. She must have been pretty desperate to take the job.\" Ben sighed. \"I told her I would buy out her contract. She can earn her money by keeping Trish company on her jogs. I certainly can't keep up with the woman. I'm going to try to get Rain a job in her field when we get home and she can stay in a spare bedroom of the house I'm renovating for my daughters.\"\n\nLa'Shia stared at Ben. \"Why are you doing this?\"\n\n\"Why wouldn't I? She's an investment in the future. Filling the world with smarter, happier people just makes sense doesn't it? Isn't that a world you want to live in?\" Ben asked.\n\n\"You gonna pay off her debts too?\" Dream blurted angrily.\n\nBen stared at the man for a moment. \"No. She'll pay off her own debts. She incurred them. By paying them off herself she'll earn a huge amount of self-respect. I'm just giving her the opportunity to succeed on her own.\"\n\nLa'Shia was glaring at her fianc\u00e9. \"What is wrong with you?\"\n\n\"Ben disrespected Night.\"\n\n\"If you can explain to me how freeing a woman from indentured servitude disrespects the man, I'm all ears,\" Ben said to Dream. He just scowled at Ben, pulled his arm from La'Shia's hand and left the restaurant, presumably to find his friend.\n\nKillah stood, walked over to Ben and gave him an evaluating look. \"A word of caution. Watch your back. Night's a crazy motherfucker. And dangerous. He'll get payback.\"\n\n\"For what? For preventing him from treating the woman as his personal sex slave?\" Ben said in frustration. The big man looked him in the eye and nodded. Then he headed back to the buffet.\n\nBen looked at La'Shia who was still watching the door Dream left through. He turned to Style who was watching him nervously. \"As well as Trish and Rain, you can cancel for me as well.\" Style just nodded.\n\nAs Ben turned to head back to his table La'Shia placed a hand on his arm. She had a pained expression in her eyes.\n\n\"I didn't understand until just now why Trent hired Boca.\"\n\n\"Rain,\" Ben corrected.\n\n\"Sorry, Rain. The ladies we invited along for the tour are in relationships with the crew or are friends. None will go near Night. Rain must have been hired for him as she... couldn't refuse.\"",
        "Ben scowled and his facial scar flared. La'Shia pulled her hand back from Ben's arm as he suddenly made her nervous.\n\n\"That's over. She's free of him.\" He held her eyes then glanced at the others at the table as they watched him.\n\nLa'Shia nodded to Ben. He turned away and went back to his table.\n\n\"That didn't look too promising.\" Thomas said seeing Ben's angry look.\n\n\"No, it's fine. Message delivered. Rain is free.\" He looked at the timidly smiling woman. \"Night is going to be a problem so please don't travel anywhere alone.\" Her smile dimmed but she nodded to him. Trish picked up Ben's anger.\n\n\"I'll be watching for him,\" she growled.\n\n\"Another damsel in distress rescued by the hero?\" Thomas teased but was surprised to receive an angry glance from Ben. Rochelle caught the look and took Thomas' hand making him look her way. She quietly explained Ben's aversion to the term as the big man's attention moved elsewhere.\n\nBen gave himself a little shake and noticed neither woman had any food in front of them. \"You haven't eaten yet?\"\n\nTrish winced and Rain bit her lip. Ben held up his hands. \"Sit. I'll get you each a plate. What would you like?\" The ladies smiled and gave him their order. A few minutes later he returned with their plates. They grinned as he served them like a waiter and dug in.\n\n\"So now that your morning is open what would you like to do with it?\" Rochelle asked.\n\n\"Relaxing by the pool sounds nice,\" Ben suggested. Rochelle and Thomas nodded in agreement. Ben looked at Susan. \"You are welcome to join us of course.\"\n\n\"Thank you!\" she smiled.\n\nOnce the two ladies had eaten their breakfast they made their way back up to the room to change into their bathing suits. They told Susan to knock when she was ready.\n\nBen used the bathroom to switch into his board shorts and sandals but when he came out he saw Trish had changed into her red bikini that barely covered anything. She was pouting as she looked at Rain who was wearing a plain green bikini.\n\n\"Ben, Rain needs a new swim suit! This one does her no justice!\" Trish complained.\n\n\"I think she looks lovely but there's a boutique in the lobby. No doubt you'll find some there. Charge it to my room.\" Ben said as he dumped their pool towels into a bag with the lotion bottles and looked for his sunglasses. He was surprised when Trish kissed his cheek and Rain tugged him down so she could kiss the other side.\n\n\"We'll meet you by the pool!\" Trish said as she rushed out of the room with Rain in tow as quickly as their aching allowed. Susan was in the hall in her white bikini so Ben stepped out and they walked down to the pool at a more sedate pace.\n\nThey found and reserved six chairs next to the pool. Ben laid out their towels on the chairs and pulled a bottle of sunblock from the bag. He looked up and saw they'd get plenty of sun, for now at least.\n\n\"May I help you put lotion on your back?\" Susan asked with a small smile.\n\nBen hesitated looking into her eyes then nodded. She gestured for him to sit so he sat at the end of a lounge chair and she straddled the chair a little further up behind him. She squirted some lotion in her hands and reached up to begin with the back of his neck.\n\nAs she rubbed the protection into his skin he worked the lotion over his face, the front of his neck then down his chest.\n\n\"Oh poo! You didn't wait for us!\" Trish pouted as she saw them rubbing lotion onto his skin.\n\nBen looked over and froze as he saw the shiny fabric of Trish's red bikini gleaming in the sun, her large tits pressing firmly against the small fabric patches. Then he saw the tiny, sexy leopard pattern bikini Rain was wearing. The fabric just covered the essentials and multiple black strings held it in place. She looked... very sexy.\n\n\"So you approve of our choice?\" Trish said with a smug expression. Rain's smile was dazzling. Trish had picked up new sunglasses, and sexy sandals for their new friend as well. She'd also bought gold dangly earrings for them both. Rain slowly spun in place showing Ben just how little skin on her back was covered. The bikini bottom was apparently a g-string as the black string disappeared between her firm ass cheeks. He swallowed and her smile just got bigger.\n\nShe leaned forward and gave him another kiss on the cheek. \"Thank you, Ben,\" Rain said breathily.\n\n\"You're welcome,\" he said. He dragged his attention back to applying sunblock on himself.\n\nThomas arrived with Rochelle on his arm and the group smiled at them. They settled in on the chairs next to Ben and began applying their own lotion.\n\nWhen Susan and Ben were finished applying lotion to him Trish wiggled a bottle of sunscreen between her fingers as she grinned at Ben. He got up from the chair and thanked Susan for her help as she began to apply her own lotion. She nodded and he walked over to Trish. She stretched out on her stomach and reached back to undo the strings on her top.\n\n\"Work that lotion in all the way down.\" Trish cooed.\n\nShe managed to keep a coy smile on her lips until his hands began to knead and rub the skin on her neck and shoulders. Then she surrendered to the sensations and moaned as he massaged the slippery stuff into her skin.\n\n\"Take notes and get busy,\" Rochelle said to Thomas as she laid out on her lounge chair. He grinned and rubbed his hands together. Soon both Trish and Rochelle were moaning in bliss as the men applied lotion to their bodies.\n\nWhen Ben was finished he turned to see Rain looking hopefully at him. He nodded and she squeaked with joy as she dropped onto her belly on the chair and undid the strings on her top. He worked the lotion into her skin as she bit her lips to stifle her moans as best she could.\n\n\"I didn't realize I was getting a massage too!\" she managed to say between the happy noises she made.\n\nWhen he reached her bottom he realized with so little fabric he was going to have to massage her incredible ass as well. He was already partially erect from the noises the ladies had been making and their silky smooth skin. There was nothing he could do about it. He poured some lotion on his palm and began.\n\nRain sucked in a breath as his large hands began to rub and knead her ass. When his fingers slid down into near proximity of her intimate places she struggled to contain her gasps and coos. She bit her lip and looked over at Trish who had a mischievous grin in her face. She knew! She knew Ben would do this to her! Trish really was an imp! She was so fucking close! As Ben's hands left her ass and moved down her legs she was trembling with need. She looked back at him and caught his eye.\n\nBen felt Rain squirming under his hands and he could tell she was really worked up. Truthfully he'd spent more time on her ass than was strictly necessary but it was so damn sexy. He saw her desperate look when he moved his hands down to her legs. She must have been closer than he thought. He glanced around but the pool area was becoming busy with other guests taking the chairs nearby and staff moving amongst the chairs to take orders. While Trish and Susan were watching with rapt attention they were also getting glances from the other guests. He realized there was nothing he could do for Rain at the moment.\n\nWith an apologetic look he moved his hands down her legs and she moaned quietly in disappointment.\n\nRain looked over at Trish who was doing her best to stifle her laughter. It had been her idea to get the g-string. She knew how worked up Ben would make her. Grinning wickedly at the smugly happy redhead Rain began to plot her revenge.\n\nBen got up and made his way back to his lounge. He was showing against his swimsuit and Susan admired the view.\n\n\"Would you like me to return the favor and get your back?\" Ben asked to distract her and she beamed a smile at him with a nod.\n\nShe laid on her stomach and Ben plucked the ties undone on her top, folding it open. She squeaked in surprise as she hadn't expected him to do that. She looked over her shoulder and saw Ben's embarrassment.\n\n\"I- I'm sorry. I assumed you'd want to avoid tan lines too,\" he said.\n\n\"It's ok... leave it open,\" she said, feeling a happy tingle spreading through her pussy. She felt so naughty! When his strong hands touched her skin bolts of electricity shot through her body deliciously but she managed to stifle her moans. Most of them.\n\nBen made his way from her neck and shoulders and worked downwards. She wasn't wearing a g-string so he didn't spend so much time on her ass but by the time he was finishing up on her feet she was purring. She smiled at him so he laid down on his own lounge chair and relaxed. He saw he was still tenting his trunks but he was fed up with trying to hide the damn overactive thing. He closed his eyes and just listened to the sounds around him. Soon he was lulled by the heat of the sun, the sound of the water lapping at the side of the pool and the quiet murmur of conversation around the pool. He dozed off.\n\n\"BEN!\"\n\nHe jolted awake to see concerned brown eyes looking down at him. It was Rain and Trish was standing behind her.\n\n\"What? What's wrong?\" he gasped. He realized he was sweating profusely and he was gasping for breath.\n\n\"You must have fallen asleep. You were having a nightmare. We heard you calling out in your sleep.\" Rain said. \"Can you recall what you were dreaming about?\"\n\nBen's head snapped to the side as images of fire and the sound of screams flashed through his mind. Then it was gone. He sat up and ran his fingers through his hair.\n\n\"What... what did I say?\" he asked hesitantly.\n\nRain's brows furrowed as she tried to recall. \"I think you said 'no' but angrily. Then you said it again but you were choking on the word like you were terrified.\"\n\n\"It sounded like that to me as well,\" Trish offered.\n\nBen shook his head then stood, avoiding their eyes. \"Time for a swim.\" They were situated near the deep end of the pool so he walked forward and just stepped off the edge, letting himself sink to the bottom. It was refreshing after the heat of the sun. He kicked off and swam towards the shallow end.\n\nTrish and Rain watched Ben jump in the pool and shared a worried look. Rochelle walked over.\n\n\"Was that Ben crying out in his sleep?\" she asked.\n\n\"Yes. He had a nightmare but he wouldn't tell us what it was.\" Trish replied.\n\n\"I don't think he remembered,\" Rain said.\n\nTrish looked out at the pool and saw Ben surface some distance away. \"He remembered. He just doesn't want to face whatever it was.\"\n\nChapter 11\n\nBen made his way back to the room after his massage in the spa feeling truly relaxed. He could get used to this spa treatment if he let himself. Trish and Rochelle were still there having manicures, pedicures, facials, and getting their hair done. They'd tried to add Rain but the spa had been booked solid. They promised her they'd include her in their next visit. Instead she went back to their room to read.\n\nBen let himself into the room and spotted her sitting on a lounge chair out on the balcony. He joined her and took the chair next to hers. She'd pulled a t-shirt on over her bikini and was reading Lolita though she put it down to smile at him.\n\n\"How was your massage?\" she asked.\n\n\"It was very relaxing!\" he smiled. \"Rochelle is joining Thomas for dinner tonight with his brother and his friends so it's just you, Trish and I for dinner.\"\n\n\"Susan isn't joining us?\" she asked cheekily.\n\n\"Not tonight... but she's always welcome,\" he added, pitching his voice to be overheard in case she was peeking through the wall divider once more.\n\nRain chuckled as she caught on.\n\nBen looked at the woman sporting a variety of tattoos and smiled. \"Do you have a story for each tattoo?\"\n\nRain looked at her arms with a thoughtful expression. \"Yes, I guess I do but not all of them are for sharing.\" She looked at the big man in the hotel robe. \"Much like how you don't talk about your scars.\"\n\nHe nodded then shrugged. \"What Trish told you last night pretty much covers the story of most of them. I don't really have much to say about them. Experience marks.\" He frowned then shook his head to clear it. \"This feels like I'm doing it backwards considering our activities this morning but who is Rain Palomo? You... have someone at home?\" he asked cautiously.\n\nShe smiled at his concern. \"No, I have no one at home. No boyfriends. No family for that matter. I'm an orphan.\"\n\n\"Foster parents?\" Ben asked.\n\nShe nodded and looked at her hands. \"I was really young when my mom died. I was moved between homes at the start. Had some bad experiences and it really messed me up. Then I was taken in by a really tough old lady and her sweet old man. They set me straight and treated me well. Like a real person. They got me some therapy and helped me catch up on my schooling. I learned I was smart and with their support I really started fast tracking. They saw me graduate high school and I won a bursary so I enrolled in University to be a psychologist. They were killed during a home invasion while I was out celebrating with a friend.\"\n\n\"I'm sorry,\" Ben said and she just nodded, still looking at her hands. She sighed and looked at him with a forced smile. \"How about you? I know you're with Trish and I'm getting vibes from Rochelle that you might have had something with her.\"\n\n\"I have people at home.\" Ben didn't feel up to explaining that complicated situation. To deflect he found himself making a confession. \"I'm an orphan as well. My parents were killed by a drunk driver when I was five. No other family so I was dumped into the foster care system too. It was... bad for me.\" Ben looked out over the grounds. The rain had begun in earnest and they watched it for a while.\n\n\"Are these the scars you don't like talking about?\" Rain asked gently.\n\nBen's eyes found hers and he saw the depth of her compassion there. He saw her pain. She knew. She'd been there. He nodded as his jaw clenched.\n\nRain nodded in return. \"It won't stay inside. It leaks out. For me, I was so angry! That rage made me violent. I- I hurt people. Bad. I was so young.\" she said quietly, watching the rain fall.\n\nThey were quiet for a while just... being.\n\n\"It's leaking out for me too.\"\n\nRain looked over at Ben. His cheeks were wet but he seemed unaware of it.\n\n\"I- I can't stop it.\"\n\n\"Then don't.\"\n\nBen looked at her. \"It hurts too much.\"\n\n\"It's only truly bad the first time.\"\n\nHis eyes widened as something replayed behind his eyes.\n\n\"NO!\" he yelled as he jumped to his feet and rushed back into the room. Rain jumped from her chair and ran after him. She caught her foot on the robe he dropped and fell hard. She heard the room's door close behind him as she tried to suck air back into her lungs.\n\nShe pushed herself to her feet and ran out into the hall. She thought she saw him disappearing down the stairs to the lobby. She ran to catch up still wheezing. He couldn't have gotten far. She took the stairs two at a time and ran out into the center of the lobby but no sign of Ben. Maybe he went to see Trish in the spa?\n\nRain ran across the lobby and down the hall into the spa. She looked around for Ben or Trish but only saw some of the ladies from Dream's entourage.\n\nThen she spotted someone out the window running down the path towards the beach. It could have been Ben!\n\nShe rushed back to the lobby and followed the same path to the beach. The rain was still coming down pretty hard and visibility wasn't good but she could run faster than Ben. She'd catch him.\n\n\"Trish?\"\n\nThe redhead heard her name called as she rested back in her chair at the back of the spa. Her mudpack was slowly hardening on her face. If she opened her mouth it would crack and all this work would be for naught.\n\n\"Mmm!\"\n\n\"It's La'Shia. Rain just ran into the spa looking panicked and ran back out. My girls spotted her running towards the beach.\n\n\"Shit!\" Trish sat up and pulled the cucumber slices off of her eyes. She saw La'Shia looking nervously at her.\n\n\"I don't know where Night is but it didn't look like she was being chased. She seemed to be chasing someone else.\"\n\n\"Ben. FUCK!\"\n\n\"What's wrong?\" Rochelle woke with a start. \"Something happened to Ben?\" She pulled the slices from her eyes and looked around.\n\n\"It's ok, I got it.\" Trish said and dropped her robe on the chair as she stood. She still had her bikini on but her shoes were upstairs. She ran barefoot through the spa and out through the lobby towards the beach. The rain began to soften the mud on her face and it ran down into her eyes and stung. She stopped when she reached the edge of the property and used the shower to quickly scrub her forehead clean. She shook her hands clean and wiped the water from her eyes. As she opened them she caught a flash of motion then a fist struck her in the temple. She crumpled to the ground stunned. She felt herself being roughly tugged off the path into the bushes.\n\n\"HEY! HEY!\" Rochelle screamed as she ran down the path towards them. The man leapt into the bushes and ran further into the jungle, crashing through the brush to get away.\n\nBy the time Rochelle got to Trish she was sitting up tenderly holding her head and her assailant was nowhere to be seen.\n\n\"Fucker sucker punched me,\" she moaned.\n\nSuddenly they heard screaming coming from the jungle. The women looked at each other as the screams went on and on becoming more shrill. Then silence.\n\n\"Ben. I hafta find Ben,\" Trish slurred but she couldn't stand on her own.\n\nRochelle helped her up and pulled her towards the lobby. \"You are in no shape to help anyone! I want someone to look at that cut on your temple! NOW!\" Trish let herself be guided back to the lobby. Thomas rushed out into the rain and helped Rochelle walk Trish back under the roof. La'Shia, Dream, Killah and one of the ladies were watching and staying dry.\n\n\"What happened?\" La'Shia asked with a frightened look on her face. Dream's expression was closed off and his body was stiff.\n\n\"Someone... someone hit me. My eyes were closed. Fuckin' hurts!\" Trish said. She was still slurring slightly.\n\n\"I only got a glance of the man as he ran into the jungle when I screamed. It was dark by the shower but he was pretty big and he was pulling Trish off the path,\" Rochelle explained.\n\nKillah pulled out a white cloth and gently dabbed the cut. \"Fuck. Dream. Look,\" he said, his deep voice rumbling in his anger.\n\n\"Could have been anyone,\" Dream said, his voice tight.\n\n\"Look at the SHAPE OF THIS MUTHAFUCKIN' CUT! IT'S-\"\n\n\"ENOUGH!\" Dream screamed at his friend. He turned and rushed off. La'Shia watched him go, her expression swinging between angry and confused.\n\nRochelle turned to Thomas. \"Do you have your phone?\" He nodded. \"Please take a picture of the cut and send it to me and Trish. I'll give you the addresses.\"\n\nThomas took shots from a few different angles. Rochelle helped him send the pictures to them.\n\n\"It's stopped bleeding but you are going to have a very large bruise. You might have a concussion.\" Killah said. The group looked at him. \"What? My dad was a boxer. I know things.\"\n\n\"The cut's from Night's ring, isn't it,\" La'Shia said to the big man.\n\nHe frowned but nodded. \"It looks like it.\"\n\n\"Whoever it was started screaming in the jungle shortly after he ran off. I think it was a man's screams.\" Rochelle said and Trish just nodded. \"If he shows up injured then you'll know.\"\n\n\"Ben and Rain. I need to look for them.\" Trish said. Rochelle felt better as her slurring was gone but there was no way Trish was going back out there.\n\n\"No, you are going to your room to rest. I will take you there myself. Rain can take care of Ben for now.\"\n\nThe woman in question was jogging down the beach towards a downed tree. She saw someone sitting on the log staring out at the ocean.\n\nShe slowed and walked cautiously forwards until she recognized Ben. He was breathing hard from his run.",
        "Rain walked around in front of Ben and saw the haunted look in his eye. \"Are you ok Ben?\"\n\n\"It's my fault they died.\" Ben's throat was tight, his words barely a whisper.\n\n\"Who?\"\n\n\"The boys in the foster home.\"\n\n\"How did they die?\"\n\n\"In the fire.\"\n\n\"Did you set the fire?\" Rain asked gently.\n\n\"No.\"\n\n\"How is it your fault?\"\n\n\"I was trying to be a hero,\" Ben's expression twisted.\n\n\"But you didn't set the fire.\"\n\n\"NO! I- I was trying to protect the girls from him. Protect Louisa.\"\n\nRain felt a chill that had nothing to do with the rain pouring down on them. She knew where this was going. She'd been on the other side. \"The house father.\"\n\nBen nodded shakily. \"Mr. Leparre,\" he forced out between his teeth.\n\n\"He abused the girls?\"\n\nBen nodded again. His eyes never left the waters. \"Louisa was... his favorite. I had to stop him.\"\n\n\"How old were you?\" Rain asked, rigidly controlling the quaver in her voice.\n\n\"Fifteen.\"\n\n\"What did you do?\"\n\nBen swallowed. It was so painful to talk about, like a knife in his guts. But she said only the first time. If he could get it out...\n\n\"I was in the girl's room at the top of the stairs on the second floor. I was standing guard, facing the door, waiting for him to try to slip in.\"\n\nRain felt her skin crawling and she wanted to scream at him to stop but she bit her lip.\n\n\"It was an old house. Floors creaked a lot. The Leparre's were doing some upgrades. Electrical. New baseboard heaters.\"\n\nBen jolted as the image of flames rushed through his mind.\n\n\"I- I heard him coming up the stairs. The creak. I braced myself against the door to keep it closed. The doors didn't lock.\"\n\nRain was shaking now but she remained quiet as she watched Ben.\n\n\"He tried to open the door but I was holding the knob tight and bracing the door. The girls... they were... whimpering in fear. He was a big man.\"\n\nRain's teeth chattered but she clamped her jaw tight. Ben glanced at her but she nodded and gave him a smile.\n\n\"He growled 'Let me in' but I shouted 'No!' and he knew then it was me. He'd hit me before. He got mad and started pounding on the door. I wouldn't let him in. I- I laughed.\"\n\nBen sucked in a deep breath as his eyes clenched shut. His chest hurt so much. He rubbed at it.\n\n\"He woke everyone up. Then there was a huge roaring boom. The roaring went on and on and the people in the outer hall were screaming.\"\n\n\"People?\" Rain jolted.\n\n\"The boys he'd woken from the other bedroom. They were in the hall when the fire broke out on the main floor. They screamed. God.\" Ben put his face in his hands and shook.\n\nRain wanted to touch Ben. Comfort him. But his confession wasn't done.\n\n\"What happened, Ben?\"\n\n\"They pushed against the door, screaming to get in. The roaring suddenly got louder. I could hear the flames racing up the stairs. The girls were screaming, clawing at me to let them in. I couldn't... I held the door, frozen in fear. The windows were nailed shut to prevent runaways. Nancy, the oldest, she broke the glass with an end table and got them outside onto the porch roof. They had to jump out over the flames into the snow on the front lawn to escape. The boys... they- they stopped screaming. Mr. Leparre stopped screaming. I couldn't hold the door anymore. The knob burned my hand. I climbed out the window and the porch roof collapsed as I ran across it. I found out later Nancy pulled me clear.\"\n\nBen heaved a deep breath.\n\n\"You saved the girls.\"\n\nHis head whipped to look at her in bewilderment. Didn't she hear? \"I killed the four boys and Mr. Leparre!\" he yelled.\n\n\"They died. That's truly tragic. But if the door had been opened the flames would have reached the rest of you. You know that, right?\" Rain said calmly and Ben's eyes lost a little bit of their desperation.\n\n\"Didn't your actions actually give the girls time to escape? It's true, that time wasn't free. It cost the lives of the others. Honestly, the circumstances had evolved so far beyond your original intentions they no longer mattered. There were just two options available at the time, save some or none. Which one do you believe was the right choice?\"\n\nBen's mouth worked as he stared into the compassionate eyes of the small woman next to him. She stepped forward and hugged him, his cheek resting against her stomach as his arms went around her. She ran her fingers through his hair as he shook, silent tears lost in the rain.\n\nThey remained like that until Ben's body calmed and his grip on her loosened. He pulled back to look up at her. She smiled down at him.\n\n\"Let's go someplace dry, ok?\" she smiled.\n\nBen just nodded and stood. He took another look at the ocean and filled his lungs with the fresh air. His mind still shied away from the images of that night but the pain that accompanied them, the guilt and the self-loathing, didn't rip through him with the intensity it once had. His chest wasn't hurting any longer. He smiled gratefully at Rain and took her hand. They made their way back, neither saying anything.\n\nThe resort was up ahead and Rain went up the path first as Ben stopped to scrape the mud from his feet.\n\nRain stopped by the shower to rinse the sand from her sandals.\n\n\"FUHKN BETCH!\"\n\nRain looked up and caught a slap on her cheek knocking her back onto her ass on the path. She looked up in surprise as a dark shape stepped out onto the path to tower over her.\n\n\"Gnnna cut yrr fFFUHKN CUNT up!\" the shadowed figure grunted.\n\n\"Night?\" Rain gasped as she finally saw his swollen face. He had sores or bites on his face and arms which were badly swollen. She shrieked when she saw the knife in his hand. He reached back to slash her but his arm stopped when Ben grabbed his wrist and squeezed.\n\n\"AAAAAAIIIIIIEEE!!!\" Night screamed in agony as bones snapped in his wrist. The knife dropped to the ground.\n\nRain looked at Ben and saw his eyes had gone cold, his expression blank. He yanked Night back and grabbed his throat in his other hand lifting the man off his feet to slam him up against the stone wall of the shower. Night tried to break the grip but Ben just slammed him against the wall few more times until Night began to choke out.\n\n\"BEN! Let him go! BEN!\" Rain grabbed his arm and his face turned to look at her. She saw his eyes begin to show some recognition. Then he saw the mark on her cheek. He looked back at Night and threw him across the path to land in a pile on the grass of the lawn. Rain grabbed Ben's arm to keep him from going after the man once more. She looked up into his eyes and saw he was blinking.\n\n\"Are you hurt?\" he asked.\n\n\"No, let's get out of this rain. He's not worth the trouble.\" Rain said as she tugged on his arm.\n\nBen let himself be led away. They walked up the path and into the open lobby. They were dripping on the tile floor. One of the ladies working the front desk approached them with some towels.\n\n\"Thank you very much!\" Ben said as he accepted the towel. The two ladies still behind the desk were grinning at him. Rain took one as well and they dried their hair.\n\nFrom under the towel Ben heard the front desk clerks scream. He yanked the towel down and spun towards the pathway just as Night leapt up the three short steps with the knife in his left hand. Ben grabbed Rain and leapt backwards as Night swung the knife at her in a wide slashing arc which tore through the edge of the towel, barely missing her face.\n\nWith a high pitched squeak Night's shoes lost their grip on the wet ceramic tiles and his feet shot out from under him. His legs went up as his torso went down and his head struck the edge of the top step. With a dull, wet crack sound Night's body twitched and a tremor went through his muscles before he went still.\n\nRain was gasping as she was pinned up against Ben's chest in his arms with her towel wrapped around her head. She'd heard the screams and she was terrified but she couldn't see anything. She heard shouting and more screams, running feet, then Ben gently carried her for a few steps and set her down on her feet. She yanked the towel off when he finally released her and looked around frantically. Ben's expression was grim. She looked back and saw Night's still body on the tiles. A male staff member was checking for a pulse but the shocked look on his face told her the man on the floor was dead. She saw his left arm outstretched and the knife still tucked into two of his fingers. She looked down at the towel in her hands and saw its new jagged rip. Her eyes went wide and she looked back at Ben. He just looked away to watch the front desk clerks who were on the phone. Presumably with the police.\n\n\"Wha- what happened, Ben?\" she whispered, afraid of his answer.\n\nBen's eyes returned to hers and she was pinned in place by their intensity. \"He jumped at us swinging the damn knife. He slipped when he missed and hit his head on the steps. I never touched him.\"\n\nHe then sat down on one of the couches in the lobby and wrapped his towel over his shoulders to wait. He knew how the process worked. He'd wait for the police to show.\n\nDream and La'Shia were descending the stairs with the rest of his group when they caught sight of Night on the floor. Dream yelled and raced down the stairs to run across the lobby. He gave Ben an odd look then rushed towards the body. The male clerk tried to keep him away but Dream shoved him aside and dropped down beside Night.\n\nLa'Shia reached the couch where Ben sat and they watched in shock as Dream started going through Night's pockets. Killah arrived with his date and they also stopped and watched the frantic searching.\n\nDream tossed Night's wallet aside after rifling through it and started digging in his front pockets. When he found Night's room access card he cried out, jumped up and ran past them on his way to the stairs.\n\nHe passed his brother on the way up and La'Shia called out for Thomas to follow him. He glanced at Rochelle who nodded and he rushed after his younger brother. Rochelle spotted Night's body then she rushed down to join them.\n\nEveryone was talking at once and Ben's face was turning red. \"ENOUGH!\" he yelled. The lobby went quiet and he had everyone's attention. \"Rain, tell them what happened.\" All eyes turned to her.\n\nRain nodded nervously and squared her shoulders. \"Night attacked me down by the beach shower when we got back from the beach. Ben was still on the beach when I rinsed my sandals. Night hit me,\" she showed the bruise on her cheek. \"He had a knife,\" she pointed to the knife on the floor next to his body. \"and was about to slash me when Ben stopped him.\" She looked at Ben who was looking at his hands while flexing his right one.\n\n\"Ben disarmed him and threw him down. We walked back to the lobby and were drying our heads when Night jumped up to slash me again. Ben pulled me away and Night slipped on the wet floor and hit his head.\" She held up her towel and everyone got a good look at the tear. \"This was over my head when he slashed at me. If Ben hadn't been there...\" She stopped when she realized she was leading him right back into his issue with being called a hero. He looked up at her and she mouthed 'thank you' to him and he smiled faintly with a nod.\n\n\"You can speak to the staff who witnessed the attack. I didn't touch him... here in the lobby.\" Ben glowered and nobody felt the urge to argue with him. He looked at Rochelle's relieved expression then noticed Trish wasn't there. He gave Rochelle a curious look and she came over to sit down on the couch next to him.\n\n\"Trish is upstairs with a nasty headache. It's more than a little possible that the dead man over there was the man who attacked her earlier today down by the beach shower and tried to drag her into the bushes.\"\n\nBen surged to his feet but the guilty party was already dead so he let Rochelle and Rain tug him back down to the couch. He looked at Rochelle. \"How- how badly hurt is she?\"\n\n\"She's got a nasty cut on her temple, probably from the ring her attacker wore, I'll take a picture of Night's ring momentarily, just for proof. There is a bad bruise there as well and we think she might have a concussion.\" Rochelle looked for injuries on Ben.\n\n\"What?\" he asked.\n\n\"Where did he cut you?\"\n\nBen blinked at her. \"He didn't cut me.\"\n\nRochelle grinned at Ben. \"Well that's a change for the better! Everyone who's attacked you before left their mark.\"\n\nThere was a commotion by the entrance so Rochelle stood up and moved away to take the picture of Night's ring.\n\nThe police cleared the lobby of the guests and interviewed the witnesses starting with the staff. By the time the police were done, satisfied that the death was merely an accident, the ambulance had taken Night's body away and it was too late for dinner so Ben and Rain made their way back up to the room.\n\nBen hadn't seen Rochelle, La'Shia or any of the others once they'd headed off to dinner. He wasn't even sure if Dream or his brother had returned at all.\n\nHe opened his door and Rain went in first. They found Trish asleep on the bed so they just went into the bathroom and got ready for bed. On went the finger brace.\n\nBen was exhausted from the day's events. His confession to Rain had been especially draining so he said his good nights, slipped under the covers and began to nod off immediately.\n\n\"Ben?\"\n\n\"Hmmah?\" he grunted as he surfaced.\n\n\"Could- could I sleep in your bed tonight?\" Rain asked tentatively.\n\n\"Hmmmyup,\" he managed before he began to slip back into slumber. He was vaguely aware of Rain carefully slipping under the covers. She snuggled in against his side and Ben was out.\n\nChapter 12\n\n\"Hey sleepyhead! You ever gonna get up?\"\n\nBen cracked his eyes open and stretched with a big grin on his face. He'd slept so deeply! He hadn't felt this well rested in... months! Trish and Rain were standing at the end of the bed and he could see they'd already been out running.\n\n\"How's your head?\" he asked.\n\n\"Just a little achy this morning. Nothing a run on a beautiful beach couldn't fix. I heard the story of your run in with that thug last night. I can't believe he's dead!\"\n\n\"Yeah,\" Ben grunted. \"Stupid accident.\"\n\nRain nodded and smiled at him. He smiled back.\n\n\"We were just going to take a shower if, you know, you felt like joining us.\" Trish said with a coy grin.\n\nBen shook his head but threw back the sheets and climbed out of bed. With a little spring in her step Trish moved to take her damp runners out to the balcony and Rain took the opportunity to whisper in Ben's ear. He nodded and moved quickly into the bathroom. He dropped his boxers and stepped into the shower to get the water going. He quickly soaped up his body as Trish and Rain finally entered the bathroom struggling to get out of their tight running gear. Rain was giggling as she prevented Trish from pulling her top all the way over her head. Ben nodded to her so she let go. Trish scowled playfully at Rain as they tugged their running shorts off.\n\nTrish looked over at Ben's wet muscles and smiled hungrily. He'd finished rinsing the shampoo from his hair as they finally stepped in.\n\n\"I'm done,\" Ben said.\n\n\"What?!?\" Trish exclaimed.\n\nRain was hiding her grin. From their conversation during the run she knew Trish was aching for a little Ben time, much like she'd been when he'd massaged her ass the day before. \"See you downstairs?\" she asked with an innocent smile as she stepped under the spray.\n\n\"Sure, I'll get us a table,\" he said as he stepped out and toweled himself dry. He walked out of the bathroom and allowed himself to smile as he'd helped Rain get her revenge. He'd caught the look in her eyes yesterday and Trish's smug little grin. He knew exactly what she was up to when she'd whispered her request. Besides, he'd give Trish what she wanted, just later.\n\nHe slipped on his board shorts swimsuit, a black wicking t-shirt and his sandals. Then he went downstairs to fill his empty belly.\n\nThe front desk clerk caught his attention and handed him a sealed envelope with his name printed on it. He opened the letter on his way to the restaurant and saw it was from Susan. He found a chair and sat to give the note his full attention.\n\n\"Dearest Ben,\n\nI'm sorry I didn't get the chance to say goodbye to you, Trish, and Rain this morning but our flight home was an early one and the taxi took us to the airport at the crack of dawn.\n\nTed is flying home with me and has finally agreed that our divorce is for the best. Not that he really has any choice but at least he isn't being a pouty nuisance.\n\nI wanted you to know how much I treasure the moments we had together and how important you and Trish are to me. I know I'm no longer a young woman but it feels like I've been given a new lease on life. I will always be grateful to you for that! You are truly beautiful people and I love you both dearly.\n\nTake care of yourself and each other.\n\nLove, Susan.\"\n\nBen smiled to himself, thinking of the lovely woman and the odd way she had come into his life. He hoped she found happiness in her future. The letter went back into the envelope so he could show it to Trish later.\n\nThe restaurant wasn't very busy yet so he got his pick of tables. He found a nice one by the windows and ordered some fruit juice from the waitress before he made his way to the buffet. Once more he was careful about filling his plate as his hunger was trying to get him to overfill it.\n\nHe sat at the table and sipped his juice, enjoying the feel of the sunlight on his face.\n\n\"May we join you?\"\n\nBen opened his eyes and looked towards the voice. It was La'Shia and several of her friends. \"Sure, just leave these two seats for Trish and Rain please,\" he said pointing to the two seats across from him. He was looking at La'Shia as he said it so she would know Rain was his guest. She nodded having received the message. The women settled in and the waitress arrived to get their drink orders, teas and coffees.\n\nKillah arrived with his lady and they said their good morning's to Ben and the group. They pulled a table up to the end of Ben's table. More of Dream's group arrived and they also greeted Ben and the group.\n\nBen looked over at La'Shia and saw she was smiling at his awareness of their inclusion of him in their group.\n\n\"I want to apologize for bringing our drama into your life. You came here for a relaxing vacation and we've interrupted that with danger, violence, and trouble,\" she said. Ben smiled and nodded his acceptance. She smiled in return.\n\nRochelle arrived with Thomas. She looked at the two open seats and noticed Trish and Rain were missing. Two of La'Shia's friends moved down two seats, pulling over an additional table so Rochelle and Thomas could sit closer to the center of the now very long table.\n\n\"Where's Dream?\" Ben asked.\n\nLa'Shia gave him a sad smile and tilted her head. \"He went back to L.A. last night. Or rather, he went to the airport to catch a flight back this morning.\"\n\nBen looked at her in surprise. \"The wedding!\"\n\n\"There isn't going to be one,\" she said. \"His behavior this trip has been eye opening and we can't be a couple if he's keeping secrets from me. Whatever he was trying to find on Night's body and in his room last night he didn't find it. He won't talk to me about it. He won't trust me with the truth.\" She shrugged though her eyes remained sad. \"Maybe one day our paths will cross again,\" she said with a forced smile.\n\nTrish and Rain arrived and took in Ben's position at the center of the long table. They took the two open seats across from Ben and Trish gave him a pout.\n\nBen leaned forward to whisper to her. \"You'll survive until tonight.\"\n\nThat earned him an impish smile. \"Unless I can get you alone earlier,\" she replied.\n\nBen blushed as Trish wasn't even trying to be discreet and eyes turned in his direction. He found something interesting to look at on his plate as Trish enjoyed his reaction."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "threesome",
        "voyeurism",
        "mature",
        "oral",
        "romance"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-shepherd-afield-pt-02"
}