{
    "title": "Home for Horny Monsters Ch. 59",
    "pages": [
        "Welcome back!\n\nI hope everyone had a wonderful Halloween, because I've decided to drop this a week (or so) early. With holidays coming up, I know I'm gonna get busy, but wanted you to have something fun to look forward to this week.\n\nNew reader? Welcome to the jungle, we've got fun and games! \n\nWe've got monster girls you want, honey, and the plot's never the same\n\nBut there's a lot that's going on, and it might not make much sense\n\nyou should start at the beginning, honey, and then we shall see you hence\n\n(or just do what you want, I'm not your parent. Also, this concludes my music career)\n\nReturning reader? The beatdown continues! This is the second to last chapter of book four, but don't you fret! I intend to wrap things up as nicely as possible and then prep your eyeholes for book five, which will start releasing either late this year or first thing next.\n\nI won't bore you with a recap, because shit is going down! Let's jump right in, shall we?\n\nBattlegrounds\n\nThe technicolor clouds of the Dreamscape parted as Mike fell through them, and he flipped himself over in an attempt to finally stick the landing on the beach. For a moment, he thought he had it, but at the last second his feet swung out from under him and he slammed into the ground hard enough that the beach crumbled beneath him. He fought to stay above the flowing sand that rushed in to fill the gap, and was busy pinwheeling his arms when a golden ray of light broke through the sky above to illuminate him.\n\nThe fairy queen descended slowly, her diaphanous wings spread out behind her. The regal attire she had worn in the court had been replaced with resplendent armor that glistened in the light of the Dreamscape. The clouds parted, and a choir of angels hummed a battle hymn as she landed on the beach, her bare feet pressing into the sand.\n\nShe looked around the island, her eyes scanning the water, then turned to look at the house and frowned. Curious, he followed her gaze and saw that the house was in a state of disrepair that made no sense, and the roof of his porch had collapsed.\n\n\"And so we see the inner workings of your mind,\" she said. \"I can't say I'm disappointed. This is roughly what I would expect from a mortal.\"\n\n\"Yeah, well\u2014\"\n\nHe tried to pull his foot out of the sand and fell on his face, getting a mouthful of grit. There was a rush of air, and a strong hand grabbed him by his other leg and yanked. He was pulled free of the sand, and now dangled upside down in front of the queen. She seemed bigger than she had been just a second ago, and his breath caught in his throat when another pair of arms unfolded from her torso.\n\n\"Let's see what you're made of, Caretaker.\" She spun in place and hurled him through the air, and he careened across the beach and then slid across the sand.\n\nHe bounced over an errant boulder and landed in a tide pool, which caused the crabs inside to stand up on their hind legs and flee. A fat starfish cartwheeled behind them before performing a belly flop off of a large rock on the shoreline. Mike was almost back on his feet when she grabbed him by the hair and yanked him backward, then slammed him into the ground and placed her foot on his chest.\n\n\"Feel free to wake up when you're ready,\" she told him, then held up a hand full of purple fire. \"But try to last. I want to carve you up first.\"\n\nPain radiated through his body, but now that he had a moment to concentrate, he was able to disperse most of it. She had gotten the drop on him, that was true, but this was his Dreamscape, and he refused to let her get to him.\n\nHe caught movement off to his side and saw a crab within reach. The damn thing was wearing a top hat and a monocle, but he grabbed it by the face and smirked at the queen.\n\n\"Feeling crabby?\" he asked, then threw the crab at the queen.\n\nWhen it hit her in the face, it exploded into hundreds of tiny crabs, each one wearing a top hat or a monocle. She jumped away from him and shook herself off, the tiny crabs scurrying away in a hurry once they hit the ground. When she stomped on them, they burst into smears of blue and pink paint.\n\n\"Is that all you have? Mortal puns? Stupid jokes?\" Her arms and torso were covered in red and white paint smears now, and Mike suppressed a grin. When she tried to rub it off, it just created long streaks of grime that sparkled when the light hit the smashed monocles just right.\n\n\"I'm just trying to buy myself some time,\" he said, then struck his best martial art pose. Though inexperienced in the art of self defense, he dug into the mental intent of the act, and felt his mind connect with the beach around him.\n\nWhen the queen ran toward him, he swept his hand dramatically in front of him. The sand of the beach erupted, blasting into the queen and smashing her into a grove of nearby palm trees.\n\nHe dramatically made a fist, and the beach followed suit. It was almost ten feet across, and as the queen pulled herself out of the trees, it slammed into her hard enough that one of her wings crimped, and he heard her shout something he couldn't understand. He summoned another sand hand and then put his palms together, willing the beach to grind the queen like a stone in a rock polisher.\n\nA blast of lightning hit him in the chest and blew him across the ground. He tumbled backward and landed on his feet, raising his hands for the inevitable followup. It was another blast of lightning, but he summoned a steel rod from the sand, and the lightning hit that instead.\n\n\"So, maybe I was hasty,\" the queen muttered, her upper body free of the sandy prison. She had her fingers pointed like a gun at him, and a nasty looking storm cloud swirled overhead.\n\n\"Did you think this would be easy?\" he asked her.\n\nThe queen ignored him, her eyes scanning the beach. He sent another sand fist at her, but she raised her own hand and created a barrier of stone. He tried a stone fist, but she countered with a piece of paper that covered the fist and caused it to implode.\n\n\"Clever girl,\" he muttered with a hint of annoyance.\n\n\"I am older than the Dreamscape,\" the queen said, then summoned a bubble to surround her. \"What you do here is nothing more than cheap parlour tricks compared to its true potential. I thought I could pressure you a little at a time, make you think you had a chance, then frustrate you to no end.\"\n\n\"So you're toying with me.\"\n\nThe queen smirked. \"I believe the cliche you would use is 'blowing off steam.' I have taken your measure, Mike Radley, and know what you are capable of.\"\n\nMike lowered his hands. \"So...does that mean you give up?\"\n\nThe queen rolled her eyes. \"Your arrogance is tedious.\"\n\n\"It isn't arrogance. I am going to win.\"\n\n\"You have no idea how sad it is that you believe that.\" The queen vanished, then appeared right next to him. \"I'm tired of listening to you.\"\n\nA band of metal slammed against his mouth, and when he tried to pull it free, she yanked his hands away and then slammed him into the ground. He grunted, and she lifted him up and threw him hard into a nearby palm tree, causing the tree to snap and fall. Even though his pain was diminished, he was in agony as the bones of his body shattered and healed in seconds. She paused to lift him up, her extra hands pinching his face as if he was a cute child.\n\n\"I wanted to hear you beg, but this is far more entertaining.\"\n\nShe grabbed his skull and slammed him into a nearby rock. The rock broke apart, so she summoned an even bigger rock. He whimpered when he saw it, and when she smashed through him, his whole body distorted like jello, then bounced back into shape.\n\n\"You have no idea how much I've wanted to do this to you,\" she growled, then grabbed his arm and yanked it off. He stared in horror as she tossed it away, and then yelled when she grabbed the new arm that had formed and repeated the process.\n\nHe closed his eyes and tried to focus, but her onslaught continued. He was her hammer, and the whole world had become a nail. He was so distracted that he was unable to bend his own Dreamscape to his will. He reached out to try and find Naia, his ace in the hole, but she was centered in the middle of the house. Until the queen decided to go inside and smash some furniture with his head, he would have to hold on.\n\nThe queen was now over twelve feet tall and was casually smacking him into trees. He let the pain wash over him, his mind holding onto the idea that his real body was perfectly fine, and that nothing she did to him would leave lasting harm.\n\n\"You dare to defy a queen in her own court?\" She slammed him into the ground, then pressed his face into the sand. \"You miserable miscreant. I have lived many thousands of years on this plane of existence, and no creature would dare to say the things you have!\"\n\nShe emphasized her point by picking him up and flying across the beach like a stealth bomber, only she shoved his face into the sand, using the beach as an industrial sander. When she lifted him up, she scowled at his appearance, then dropped him and stomped him into the ground hard enough that the world went black as he was buried beneath a foot of sand.\n\nWhen she pulled him back out, she was still ranting, but in a language he didn't understand. The sand beneath her feet was turning black as if scorched with heat, and she lifted him into the sky before slamming him down again. However, the longer she went, the easier it was to disconnect his mind from the sensations of his body. After another couple of minutes, he was only along for the ride as she took out her frustrations on him.\n\nAt some point, she must have noticed, because her assaults were now less ambitious, and she finally tossed him in the sand.\n\n\"It's that damned succubus,\" she told him. \"I was aware she was training you, but no mortal should have a grasp on this place like you do.\"\n\n\"Mmph,\" he replied. It wasn't a very kind thing to say to a queen, but he figured it was lost in translation anyway. He stood on wobbling legs and yanked at the metal on his face. It didn't come off, so he held up his right hand as if he was wearing a sock puppet and mimed talking with it.\n\n\"You fucked up bringing me here,\" he told her, his voice coming from his hand. \"If I give up, I die. You can slow time, trap me here, but I'm aware that this isn't my body. My real body is with Cecilia, and even if you trap me here forever, you'll be trapped, too. So you can slap me around, set me on fire, whatever, but it's far better than the alternative. Your show of power is meaningless, Your Highness, because this isn't air we're breathing, there is no fucking spoon, and you have no real power here.\"\n\nThe queen's face turned a dark green and she took several deep breaths, her eyes radiating with power.\n\n\"You will regret this,\" she said, and the air on the beach went still.\n\n\"Wakka wakka, bitch,\" he said with his hand, then gave her the finger.\n\nWhen she teleported this time, she picked him up by his skull and pressed her fingers into his eyes. The assault on his mind was immediate, and he felt her tear through his memories as if desperately seeking a page from out of a book. His memories appeared and disappeared in a flash, and she aggregated many memories of his mother, literally ripping them from his head and tossing them onto the beach where they expanded and formed.\n\nThey were all yelling now, and the screams felt like knives against his flesh. He fought to tune them out, but now they were descending on him with raised hands and shrill cries. The queen dropped him onto the ground and he tried to fight back against the copies of his mother that attacked him, but it was no use. They were taking turns screaming in his face, and he could see their words appearing in the air before slamming into him and sinking into his skin.\n\nIt felt like he was on fire, and suddenly he was stuck in that burning car with his mother once more, the one that had killed her and left him with a lifetime of scars, literal and emotional. She screamed in agony as he tried to fight his way free of his seatbelt, for he was hanging upside down as dripping gas from the car ignited. The other memories of her kept pushing him back in as he tried to escape, their fingernails scoring his skin. Panicking, he sank his hands into the roof of the upside-down car, willed it to bend like clay, and then tried to dig his way to freedom. The hands grabbed his feet and pulled him back inside the car to allow the flames to consume him.\n\nA strong hand grabbed him by the leg and pulled him out, and it was the queen. She snarled and threw him into the sand nearby, and he tried to squirm away, but his mother found him again.\n\n\"Did you think I wouldn't use her against you?\" the queen asked as she stomped toward him. He tried to scramble away, but his mothers were grabbing at his clothes and pulling him in every direction, their words now written on his skin.\n\nWorthless. Disgusting. Nasty. \n\nWhen he read the words, they swirled around, feeling very much like ants. In his fight to be free, he shoved his hands deep into the sand and felt something brush against his fingers.\n\nWhen the queen grabbed onto him, he held onto the object out of reflex. As she dragged him free, he pulled a door wrapped in thick vines from beneath the sand. It had an ornate doorknob with a very big keyhole beneath it.\n\n\"Oh? What have we here?\" The queen pushed the door away and it lifted up as if suspended by wires, then hovered above the sand. She looked at Mike, then looked at the door. Even with his mothers screeching at him from every direction, he had no trouble hearing the queen's voice.\n\n\"Mmph,\" he replied.\n\n\"I sense...hmm.\" She placed a hand against the door, then looked at him. \"This was generated by your mind, wasn't it? It's an anxiety. You know what's behind this door, don't you?\"\n\nHe shook his head vehemently, very much aware that she knew he was lying.\n\n\"Anxieties are a fickle thing. They tend to trap you in your own personal hell until you wake up.\" The dark green of her skin was fading, and she now wore a huge grin. She grabbed the door with her hand and started turning the knob. \"I can't wait to see\u2014\"\n\nShe was cut off by the surge of water that blasted the door open and sent Mike, his mothers, and the queen tumbling across the beach. Now free of the queen, he kicked his feet and swam sideways along with the flowing current of bathroom water that had created a raging river that ran out into the ocean. Once free of the river, he sprinted toward the house, knowing it was his best chance at freedom.\n\nThere was a cry of rage from the beach when Mike reached the front yard, and he was almost to the door when he was tackled from behind. The two of them crashed against the shattered remnants of the porch, but Mike was able to grab a plank and smack it against the queen's temple. She snarled and took the wood away from him, and he sent his mind and heart into the home, hoping he was close enough to summon Naia. The part of her soul that was bound to him had all of her power here, and he knew she would be able to help.\n\n\"Enough!\" The queen picked him up and slammed him against the nearest wall, choking him with two hands while pinning his arms with the other two. Her body was dripping with sewage, and the curls of her hair had come undone, making her look like a drowned rat. \"If I have to spend the next hundred years in here ripping you to pieces, I will!\"\n\n\"Mmph!\" he called out to the house, hoping that Naia would hear. Already, the memories of his mother were beginning to circle the yard, their words reaching out to him like clawed hands. He had no offensive plan, and his defenses wouldn't hold up against the emotional assault of his mother for much longer.\n\nThe queen leaned in close, revealing that her teeth had become fangs.\n\n\"I will chew your goddamn face off,\" she whispered in rage. \"I will run my fingers beneath your skin, I will\u2014\"\n\nHer eyes went wide and she leaned back to reveal that a thick, black tail had wrapped around her throat, choking her off. When she shifted to see her attacker, Mike was surprised to see Lily standing there.\n\n\"Oh, you must be the new girl,\" Lily said. \"Sounds like you're into some kinky shit. The safe word is chucklebunny, by the way.\"\n\nLily pulled with her tail, and the queen let go of Mike. The queen put her hands at her hips and drew a quartet of golden blades that appeared from nowhere.\n\n\"Treachery,\" she growled. \"No outsiders are allowed!\"\n\n\"Mmph mmph, mmph,\" Mike agreed, even though he was glad to see the succubus. Had she simply waited in the Underworld, and had now stepped in to intervene? And where was Naia?\n\n\"Hardly.\" This voice came from the side of the house, followed by the sound of hooves on stone. Zel appeared, and she held what looked like a golden scroll in the air. \"According to the terms of your agreement, his entire soul is eligible for this contest. After all, that's why you're able to use his own mother against him, isn't it?\"\n\n\"What? How?\" The queen looked at Zel, then Lily, then Mike. Behind him, he heard movement in the house, and looked over his shoulder to see Ratu appear, carrying a large ball of fire in her hand that pulsed hungrily.\n\n\"It's complicated,\" Ratu informed her, and then threw the ball of fire.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nBeth realized she was holding her breath, then let it out in a quick burst. Marco's face was covered in black lines that looked like bulging veins, and she wondered if her former co-worker was even still alive.\n\nKisa, on the other hand, looked just fine, save for her crystalline blue eyes and the necklace around her neck. Beth recognized it right away; it was the same necklace Ratu had been studying.\n\n\"Well?\" Marco pointed his wand at Kisa. \"I can assure you, no matter how many lives she has left, she won't survive a direct hit from this.\"\n\nUp on the roof, Abella stood with her fists clenched, her eyes now on Beth, awaiting instructions. Far above the house, the fairies had descended, most likely for a closer look. The spirits had pinned Sulyvahn against some bushes, and he had dropped his own head on the ground.\n\n\"You have nowhere to go,\" Beth said. \"Right now, your castle is under siege by demons.\"\n\n\"I'm aware,\" Marco replied. \"I'm aware of everything. I've been watching everyone in this house for the last month, following your every step, predicting your every move. I put ideas in your heads, allowing you to go about your days thinking you were in control.\"\n\n\"You couldn't have known Lily was bringing an army,\" Beth protested.\n\n\"Please. Even chaos is predictable. She was aware that I told the fairie queen when he was coming. I knew she would go with him, which gave her the opportunity to round up some friends on her return trip. Nothing that happens here happens without my approval.\" His tone was smug, and she had never seen a shit-eating grin so big. \"All they will find in that tower is a bunch of delays.\"\n\nKisa looked over at him with disapproval, her mouth twisted into a grimace. Her left hand moved to the necklace, touched it briefly, then went back in the air.\n\n\"So you knew about Samhain?\"\n\n\"Poor, simple Beth. Who do you think dropped that book in front of you?\"\n\nShe gasped. The pieces were coming together, but she wasn't about to admit it. Something was going on with Kisa, maybe something the shadow couldn't predict, and he seemed very eager to chat about it.\n\n\"That was you?\" she asked, feigning innocence.\n\n\"Of course it was. I've been watching all of you ever since the box was opened.\" He tucked the book under his arm and took a step forward. \"This place used to be my home, and I know all of its secrets. Granted, I have to wait until the Caretaker discovers them, but once they do, I have years of insights to pull from. Once this useful meatsuit delivered the box containing the observatory, I knew that the Grimoire would be mine again. All I needed was time.\"",
        "\"But surely you couldn't have planned for everything?\" Beth put the palms of her hands against her chest, as if surprised.\n\n\"But I did!\" He took another step forward. \"Granted, Death and the dullahan were a nuisance, but easy enough to dodge. I whispered tales of Halloween in the goblin's ears as she worked, had Marco post pictures of the Jabberwock on the internet to draw a crowd, all of this was me!\"\n\nKisa threw another nervous look at Marco. \"Let's go,\" she growled.\n\nBeth couldn't believe it, but the shadow was actually monologuing. Mike had mentioned how chatty the shadow was, but seeing it in person, she knew she could use it to her advantage.\n\n\"What about Kisa? There's no way she would betray the house. What have you done to her?\" Beth laid it on thick, knowing that whatever possessed the cat-girl saw right through it. However, the way that the hand kept reaching for the necklace made her think that Kisa was still in there, and she was fighting.\n\n\"Ratu always thought she was so smart, but it never occurred to her that the spirit inside the necklace may be one of your most dangerous enemies. She found it in the lake in the Labyrinth, and\u2014\"\n\n\"Stop talking,\" Kisa said. \"Let's go.\"\n\nBeth moved her hands away from her chest, and while moving, used sign language.\n\nGet the book, she signed, hoping Daisy was looking at her. On signal.\n\n\"How do we know you won't just kill her when you leave?\" she asked, then signed again. She tried to make it natural, hoping that the shadow or Kisa wouldn't realize what she was up to.\n\n\"We need to go,\" Kisa repeated, and her hand touched the necklace again. She swatted it away and hissed.\n\n\"Yes, right.\" He held the wand at Kisa. \"Get out of our way.\"\n\n\"No.\" Beth crossed her arms and rolled her eyes, catching a glimpse of the fairies. They were hovering in a circle about twenty feet above Marco, and she locked her eyes on Kisa. \"Not moving.\"\n\n\"I will kill her,\" Marco threatened. \"Mike Radley will be devastated to know that you could have saved her and didn't.\"\n\nBeth held her breath, hoping she was right. The shadow had manipulated everything up until this moment, causing nothing but violence and chaos. Why not just blow Kisa to smithereens and escape in the carnage? Or even better, use the wand to clear the way and leave?\n\nEverything he had done, he had done for a reason. He needed to leave, but there was something she had overlooked, a reason he couldn't just blast his way out. She would understand if he was facing an army, but it was just her right now. Whatever decision she made, she would have to make it soon. Part of her wanted to move aside, to just hide and live to fight another day, but a huge part of her was indignant that her decisions had all been predicted, that this bastard was about to win so easily.\n\nWas this how Mike had felt when he faced down the queen by himself? Was this how he always felt? The responsibility for the house was a heavy weight indeed, and right now, it was hers alone.\n\n\"No,\" she told him. \"If you want to get out, you're gonna have to get out through me.\"\n\nMarco aimed the wand at Beth. \"Do you think I won't kill you?\"\n\n\"If so, you would have done it when you broke in.\" She narrowed her eyes, deciding to push her luck. \"Is it because of the deal you made with Marco? What you used to trick him? You can't hurt me, and I'm guessing you can't hurt her either, not without killing your new bestie.\"\n\n\"Fuck this.\" Kisa snagged the wand from Marco's hand and pointed it at Beth. \"I'm not dying in this damn place again.\"\n\nThe wand lit up, and for a moment, all Beth saw was the burning ring of light that expanded rapidly before coming toward her. The air roared with energy, then somebody tackled Beth from behind, slamming her face first into the ground. The spell passed over her, making her ears pop, and she let out a scream, then curled her hands up and frantically signed the word for now.\n\nMarco yelled, and Beth looked up to see that the fairies had descended on him, swirling around his face and blasting him with glitter. Kisa tried to snatch the book out of his hands, but Cerulea grabbed onto her face and shoved both her arms up the cat girl's nostrils to brace herself. When Kisa tried to rip her away, the fairy's body stretched like latex, then snapped back into place, rocking Kisa's head backward.\n\nBeth groaned as she tried to stand, but there was a heavy weight on her hips. She looked back to see Tink, her face covered in chocolate and bits of candy, wearing a big grin.\n\n\"Tink see bad magic, make good run,\" she said, then turned her attention toward the house. For a moment, Beth wondered if the goblin might cry, but then frowned when she realized that Tink's cheeks were turning red. Tink adjusted the goggles that had been twisted about on her head, and the lenses all clicked into place.\n\n\"Tink gonna kill someone,\" she muttered, then ran back down the walk to where her club lay on the ground.\n\n\"Gah!\" Kisa was being pulled around by her face now, and the wand went off, catching Abella in mid-air. The blast sent the gargoyle tumbling through the air and into one of the second-story windows, where she disappeared. Kisa grabbed Cerulea and yanked her away from her face, then threw the fairy on the ground and stomped on her.\n\nMarco succeeded in slapping Daisy out of the air and then swatted Olivia with the Grimoire. Carmina fled back into the sky as a few nearby spirits made a grab for her, leaving Marco alone. He opened the Grimoire, his mouth twisting up as he read words of power that surrounded him in a crimson aura that turned Beth's stomach. The hood of his sweater had fallen back, and she watched as Marco's black hair turned grey from front to back as the spell drained more of his life away.\n\nWith a grin, he finished the spell he was casting, and then took a crossbow bolt to the forehead.\n\n\"Tink!\" Beth looked to her left to see that the goblin had transformed her club into a crossbow and was lying on her back, using her feet to aim it.\n\n\"Bastard break house, earn goblin wrath,\" cried the goblin, then jumped up from the ground.\n\nMarco toppled over backward, but a dark silhouette remained standing in his place. The shadow held out his arms while letting out a screech, and his soldiers obeyed. They moved toward him and became motes of light, which he absorbed, his silhouette darkening until he seemed solid.\n\n\"No mercy indeed,\" said the shadow, and he picked up the Grimoire. The crimson aura swirled around him and then coalesced into a pulsing sphere of energy that hovered just over his shoulder. The light from the sphere was bright enough to illuminate the features of his distorted face, sending chills down Beth's spine.\n\nShe looked at Marco's corpse, and a sick feeling filled the pit of her stomach. This was somebody she had known, someone that had sat across from her for years, and he had just been snuffed out in front of her.\n\nA drop of rain hit her on the nose, disrupting her musings, and she looked up to see that ominous clouds had formed overhead. Puzzled by the sudden shift in weather, she was further surprised by the large creature that landed on what remained of the roof with a heavy thud.\n\nThe ball of energy buzzed excitedly, and then a beam of light arced out across the lawn, incinerating the yard and spirits alike. Beth ran from the beam as it chased her, and then collided with Kisa, who was also trying to flee.\n\nThe beam stopped just short of incinerating the both of them, and Beth looked up in time to see Kisa staring back, her eyes wild.\n\n\"Get out of my way,\" she shrieked, then jumped to her feet. She didn't make it far, because Tink launched herself at Kisa, and both of them became a tumbling mess of teeth and claws.\n\n\"Tink see nasty bitch ghost, get out of stupid cat!\" She was on Kisa's back now, and grabbed the cat girl's ears and yanked. Kisa howled in agony, then grabbed Tink by the hair and smashed her into the ground.\n\n\"Get the fuck off of\u2014ow, you fucking bit me!\"\n\nKisa's forearm was in Tink's mouth, and Beth could see blood running out of the wound. She moved to help, but Kisa tried to use the wand on Tink, but only succeeded in pointing it straight down.\n\nThe blast sent the two of them flying apart, and Beth was tossed onto her back. She smacked her head on the ground and fought to keep her wits about her as the world tilted sideways.\n\nFrom where she lay, she saw the shadow move toward her, his hands raised in excitement.\n\n\"Your world is about to\u2014\" the shadow's proclamation was cut off when lightning lit up the sky to reveal the biggest bird Beth had ever seen in her life. It was clutching the remaining turret in its claws, and massive streamers of electricity flowed all along its feathers.\n\nA second blast of lightning revealed Quetzalli, who stood nude on the edge of the roof. Her horn glowed an ominous blue color, and her arms were stretched wide. Nearby, Dana was hiding in what looked like a metal cage that had been attached to one of the iron beams.\n\nYeah, sure. Whatever. Beth only had so much brain power left, and asking questions would have used what was left up.\n\nSeveral blasts of lightning struck the dragon girl, and the air became charged with electrical energy. Her face was a mask of concentration as she manipulated the powerful electrical arcs along her body, and everything in the yard lit up with filaments of electricity. Her outstretched arms blazed with flickering light as a loud hum filled the air.\n\nThe spirits in the yard came into focus, surprise on their suddenly human faces. The air around the shadow shimmered as he seemed to absorb the energy, but there was an outcry from inside the house as the second round of invaders was booted. Souls now flowed out of the building in rapid fashion, and the shadow turned his attention on the bird.\n\n\"No, stop him!\" Beth cried, but her own voice sounded far away. Had she even spoken out loud? The thunder was making her ears ring.\n\nA whip made of bones struck the shadow from behind, leaving a white mark that sparkled. The shadow stumbled forward, then turned his attention toward Sulyvahn. The dullahan's head was back on his body, and his features were twisted up in anger.\n\n\"Yer fucked.\" The dullahan brought the whip around and caught a magical barrier summoned by the shadow. With every strike of the whip, the bones glowed brighter as if they were heating up. After enough strikes, the magical shield shattered and the shadow tried to move toward the house, the pulsating sphere moving between him and Sulyvahn. \"Ye shouldn'a called yer minions home to roost, 'cause there ain't enough of them to hold me back now!\"\n\nAs electrical energy pulsed through the yard, a white figure teleported between broken windows and then appeared outside, revealing itself as Jenny. A pair of nearby spirits were startled, then ran away from her.\n\nJenny said nothing, but her body folded backward, as if she was going to crab walk. Once crouched down, she launched herself into the air and crashed into the shadow. Her head spun around so she could get a good look at him, then opened her mouth wide, as if to bite him.\n\n\"Gah!\" The shadow sidestepped Sulyvahn's attack and then used Jenny as a shield for the next one. When Sulyvahn's whip hit, Jenny cried out in agony. Her body turned to static and vanished.\n\n\"Time for you to go,\" said the shadow, then sent a beam of light at Sulyvahn. The dullahan bent over backward, and his head tumbled off, releasing black mist all along the ground. When the beam swept around to catch him, he tumbled out of the way like an acrobat.\n\nThe mist spilling from his neck formed into a magnificent black stallion with burning white stars for eyes. Sulyvahn jumped onto its back and rode hard across the yard, his whip trailing behind him. The beam vaporized many of the spirits it struck, and Beth stood just in time for Sulyvahn to reach down and scoop her up.\n\n\"You keep a horse inside you?\" she asked incredulously.\n\n\"Can ye think of a better place? Plug yer ears.\" He yanked off his head and swung it in a large circle overhead, then let out a keening wail. Nearby spirits stumbled about as if drunk and even the shadow clutched at his ears, causing his beam to go off course.\n\nEven with her fingers in her ears, it felt like someone was dragging a razor down her spine. Sulyvahn circled the yard a few times, doing his best to clear a path by the door. Once there, he stopped swinging his head.\n\n\"Go inside, lass!Ye'll be safe!\"\n\nHe kicked the flank of his midnight horse and raced across the yard. The shadow's beam prevented Suly from getting any closer, but the shadow's army was dwindling fast. This close to the house, Beth's hair was standing up on end, and she saw that the shadow's back was to her.\n\nShe sprinted toward the shadow, her eyes on the book in his hand. He may be incorporeal, but the book sure as hell wasn't. She grabbed it with both hands and yanked it free of the shadow as she passed through his body.\n\nHe was colder than any weather she had ever experienced, and her limbs all went numb. She stumbled forward a few yards and then regained her balance. The book felt warm in her hands, and she turned around, expecting to see that the shadow's energy sphere was gone.\n\nIt wasn't. The shadow turned his attention on her, and he pointed an angry finger in her direction. The sphere over his head glowed brightly and a beam of light came straight at her.\n\nOut of reflex, she held up the Grimoire to protect herself and was surprised when it absorbed the energy of the beam. Her fingertips burned, so she shifted her grip to protect them. She was being pushed back by the immense surge of energy but was able to remain standing.\n\nSulyvahn made his move. Riding in toward the shadow, he swung his whip in a wide arc and brought it down. The shadow caught the whip with one arm, allowing it to wrap around, then yanked Suly off his horse. The dullahan fell to the ground, and his horse tried to circle back but was cut off by angry spirits. The beam had Beth pinned in place, and she watched helplessly as the dullahan and the shadow got into it.\n\n\"Yer a fine shot with that spell, but can ye take a punch?\" Suly was up on his feet, his fists held up in a traditional boxer's stance. Spirits rushed in at him from every direction, and when his blows connected, they exploded into ash. The shadow closed the distance, and the two of them exchanged a few punches before Sulyvahn wound up and delivered a haymaker straight to the shadow's face. When it struck, the shadow's face was smeared out temporarily, and he flickered for a second.\n\n\"Ye got a big mouth, but nothing to back\u2014\" Sulyvahn was grabbed from behind by a pair of spirits, and the shadow ripped into him. By the time Sulyvahn was able to free himself, the shadow had grabbed the dullahan's whip and was using it to strangle him from behind. Suly pulled off his own head and used it as a club to clock the shadow in the temple, which seemed to knock both of them for a loop.\n\nThe shadow recovered first. He snatched Suly's head away and used it to beat his own body with it. Suly eventually went down, and the shadow tossed his head, and then his limp body into the bushes. When he turned around, his shoulders were slumped as if exhausted, and he paused just long enough to absorb a few more spirits.\n\n\"I am so TIRED of this godforsaken house!\" He was moving toward Beth now, and the orb followed him, its beam still hitting the Grimoire. \"I cannot wait to see the end of it, and the end of you!\"\n\nBeth swallowed the lump in her throat and took a cautious step back. Every step she took moved her closer to the stone lions, but then what? Should she take the book and run? It was the only thing protecting her from the magic beam, which sizzled hotly against the book in her hands.\n\nFrom above, lightning danced about and then dropped, striking the shadow. His whole body was outlined in energy, and the features of a man emerged, a man who looked like he had been stitched together from hundreds of different body parts.\n\nThe lightning may have purged the home, but the shadow was charging up. She looked around the yard and realized that several spirits remained, and they were all moving in on her. Whatever time she had bought was officially up, and she was out of options.\n\nAs the shadow strengthened, so did the power of the beam. The book was now vibrating in her hands, and her muscles were getting sore from holding it. Determined, she shifted her grip once more, but her fingers slipped on the Grimoire, and she lost her footing on the path. The beam forced her to topple over backward, the Grimoire flying out of her hands. She rolled over and army-crawled toward the Grimoire in an attempt to reclaim it when a dark shape appeared between the stone lions.\n\nHer heart skipped a beat when she saw the brilliant white skull tucked beneath a dark hood, with fiery blue flames set deep in his eye sockets. The beam of light that had knocked her over passed harmlessly through the silent figure, but the same could not be said for the large plastic bucket he carried in his hands like an excited child.\n\nIt had been decorated to look like a Jack-o-Lantern and was overflowing with candy. When the beam struck it, bits of plastic and candy exploded across the yard, spilling out onto the street behind the grim reaper. The geas caught the edge of the beam, preventing it from traveling across the street, but Beth couldn't take her eyes off Death as he slipped across the yard and then stepped into the path of the beam.\n\nThe beam faded and Death knelt down to pick up what may have once been a Butterfinger bar. He was illuminated only by the brief flashes of light from the sky above, like a specter in a strobe light.\n\n\"Hmm.\" He dropped the candy on the ground, then rose to his full height. He surveyed the house, then looked at Beth, and then his eyes settled on the shadow. \"I spent many hours collecting that candy. I am sorely disappointed that I will have to collect it again, as I believe the Everett family is out of full-sized bars. Simply dreadful.\"\n\n\"Fuck you and fuck your candy.\" The shadow waved his hands about, and the orb over his shoulder changed colors. It was now an intense green that was painful to look at, and he jabbed his fingers in Death's direction. The beam that came out made no sound until it struck Death, who held up a single hand to block it. It sounded like nails on a chalkboard but was far preferable to Sulyvahn's scream.\n\nThe bones of Death's hand started to smoke, but the reaper didn't seem to mind. He looked over at Beth. \"Did you happen to see what happened to all my maps? My home is in a state of disrepair, and I am now worried that harm may have befallen them.\"\n\n\"He destroyed all your maps!\" Beth yelled. She wasn't certain if this was true, but the grim reaper was officially her best chance at defeating the shadow. \"He came here to hurt Mike, and destroyed all of the maps in your office!\"\n\n\"Mike Radley has been a good friend to me, why would you wish to hurt him?\" Death looked at the shadow with childish curiosity.\n\nThe shadow hissed, and the orb shifted colors again. Death watched in fascination as the now-yellow beam caused his sleeve to catch on fire and his hand to glow.\n\n\"You have ruined my candy and damaged my maps. I didn't want to do this, but you've left me no choice.\"\n\nDeath stuck his free hand in his robes and dramatically pulled out a toy spider. He held it up to scrutinize it, then allowed it to dangle from the bit of elastic that had been tied around its middle, even giving it a few bounces for effect.\n\n\"Why. Won't. You. Die?!?\" The shadow seemed frustrated that Death was ignoring him. \"You are nothing more than a poor copy of something I have already defeated! And why are you back so soon? That map I left you was supposed to lead you to the other side of town!\"",
        "\"This spider was supposed to be part of a prank,\" Death informed Beth, as if letting her in on some big secret. \"Please do not tell Mike Radley, for I wish to prank him later.\" He looked at the shadow. \"And as for your map, the goblin Tinker ate it and introduced me to a fun joke involving toilet paper on someone's home. I would have been home sooner, but we got lost after running from a car with flashing lights. It was great fun.\"\n\n\"Uh...okay.\" Beth didn't know what else to say.\n\nDeath discarded the toy spider and stuck his hand back in his robes again while continuing to block the beam with his free hand. When he pulled it out this time, it was like watching a cartoon pull a hammer from its pocket. A long staff emerged, taller than Death himself, and when he tapped it on the ground, a curved blade appeared. He gave the scythe an experimental swing, and it made a soft whooshing noise similar to someone whistling in a graveyard.\n\n\"Ah, there we go.\" Death turned his attention toward the shadow. \"It appears that I missed you the first time, but I shan't miss again.\"\n\nThe shadow's features distorted, and he shouted something in a foreign tongue. The remaining spirits rushed in toward Death, yelling battlecries with their weapons held high.\n\nDeath moved so fast, it was like watching ink splash across the yard. He swung his scythe and tore through the warriors like paper, their faces frozen in shock as they shattered like glass and fell to the ground in pieces and then melted. The shadow's beam couldn't keep up with him as he danced around the yard, his scythe ripping through the shadow's remaining troops.\n\n\"No! No!\" The shadow spun around and pointed at the house. The surface of the sphere rippled before becoming a fiery orb that cast light much like the sun. Beams of light barreled into the house, and Beth caught a whiff of wood-smoke.\n\nThe bird on top of the house stomped its feet, and then tumultuous rain from above fell on the house, extinguishing the early flames. The shadow let out a cry of anger, and spun around in time for Death to cut him in half.\n\nInstead of evaporating like the other spirits, the shadow let out a shriek and fell apart like sand. Tiny pieces of his body hit the ground and sparkled like gemstones, many of them crumbling into ash. Death tilted his head in curiosity, then knelt down to pick one of them up.\n\n\"Is he gone?\" Beth had picked up the Grimoire and now stood next to Death. \"And I can see you. How can I see you?\"\n\n\"He was barely here in the first place, his soul was like a string that held these poor, trapped souls together. There wasn't even enough of him left to tell who he was.\" Death flicked the soul he was holding into the air, where it vanished with a pop. \"As for my presence, I think you already know that today is a special occasion.\"\n\nSulyvahn limped over, then knelt down to pick up one of the fragments. \"If ye dinna mind, this one technically be my responsibility. And kin I say, an honor meeting yerself in the flesh, as it were.\"\n\nDeath said nothing and just watched as the souls sparkled and then fizzled out. As the last one vanished, Sulyvahn's horse came over and let out a soft whinny.\n\n\"You have a very fine steed,\" Death said, then put his hand out toward the spectral beast. The horse pressed its nose into Death's bony hand and let out a huff. \"It is almost as big as my own.\"\n\nSulyvahn chuckled, and then moved next to Beth. \"Well lass, t'was an exciting night. Hopefully Lord Mike won't be too angry when he sees how ye left the place.\"\n\nUp above, the lightning and rain died down as the last trickle of souls left the home. Somewhere in the distance, Cerberus howled, and Beth let out a sigh as the night went silent. Unfortunately, she could hear water running inside the house, and hoped it was something Tink would be able to fix.\n\nTink!\n\n\"C'mon, let's go inside,\" she said. \"We can check on Abella, and I want to make sure Jenny is okay. Once we get Abella outside, she can help us find Kisa and Tink, figure out where they went.\" She knelt down and picked up Cerulea, who was covered in dirt but unharmed.\n\n\"The wee ghost should be fine, if not a bit startled,\" Sulyvahn added. \"That one can take more than a lash, I promise ye.\"\n\nShe nodded, then turned to Death, who was now wandering the front yard rubbing his skull anxiously. His scythe had disappeared, and he crouched down to pick something up.\n\n\"Everything okay?\" she asked, still amazed that she could see him.\n\n\"It is now,\" Death replied, then turned to face her while slipping something into his robes. \"I thought I had lost my spider and would be forced to give Mike Radley a treat instead of a trick.\"\n\nShe laughed, the trauma of the night suddenly overwhelming her. Hugging the Grimoire to her chest, she stepped away from the house so that she could look up at Quetzalli. \"Thank you,\" she shouted so that she could be heard. \"I think we've had enough lightning for the night.\"\n\n\"You can never have too much lightning,\" Quetzalli replied while adjusting her horn. \"But you are very welcome.\"\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nMike watched in awe as Lily attacked the queen while Ratu brought down balls of blazing fire. Lily was immune to the heat, and was whirling about in a tight leather outfit with a pair of black batons that she used to block the swords. Zel placed herself between Mike and his mothers, her hands going to her pouch.\n\n\"If you're going to make an appearance,\" she said, \"now rather than later would be great.\"\n\nAn eerie wail filled the air and Cecilia passed through the wall of the house, her shrieks causing his moms' voices to be drowned out. They tried to attack the banshee, but burst into smoke in the presence of her screams.\n\n\"Mmph?\" he asked.\n\n\"Tink fix.\" The goblin crawled up from under the porch holding a cutting torch. He shrugged and knelt down, allowing her to cut the metal off his face. It was a trick that wouldn't work in the real world, but as long as he didn't focus on specifics, it wouldn't hurt him in the Dreamscape.\n\nLily let out a yelp and was tossed through the air, allowing the queen to summon rays of golden light that circled Ratu, forcing her to dance about as the ground turned black around her. Seeing an opening, the queen raced toward Mike, her swords held high, only to be intercepted by Abella, who tackled her from above and knocked her to the ground.\n\n\"I heard you like it rough,\" Abella said, then punched the queen in the mouth. The queen shrieked in rage and blocked the gargoyle's blows with one set of arms while the others twisted about in a set of gestures. Thick vines wrapped around Abella and ripped her away just as Tink got the metal plate off of Mike's face.\n\n\"How?\" he asked, then moved away as the queen leapt over Zel and stabbed the door with one of her swords. She slashed him across his midsection and was about to hit him again when Tink crawled up her side and bit the side of her boob.\n\n\"Cursed goblin!\" The queen ripped Tink free and made to stab her, but the blade was blocked and then countered by Sofia. Though the cyclops was eclipsed by the queen's size, she was quick enough to dodge and deflect her blows with ease.\n\n\"I think you know how,\" Zel said with a smirk, then jumped away as the battle moved her way.\n\n\"Are all of you in my head?\" he asked.\n\n\"Not all of us,\" Zel replied. \"But it is getting rather full in here. Now, if you don't mind, could you help us out a bit?\"\n\n\"Absolutely.\" He jumped off the porch and fixed an object in his mind. It was difficult to make from dirt, but eventually a large, marble basin formed in the front yard and filled with water.\n\n\"You tricked me, Caretaker! I'll have your head!\" The queen's blades whirled in place as she summoned a series of glowing runes that blasted the cyclops out of the way. Once the path was clear, she grabbed her blades out of the air and came toward him. Cecilia rushed in and let out a scream, but the queen was unfettered by the aural assault and tore through the banshee like paper. It gave Mike an extra second, and he hoped it was all he needed.\n\n\"Naia!\" Mike jumped in the fountain. \"Naia, where are you?\"\n\nWhen the queen moved to attack him, she passed right through his body. Puzzled, he looked down at his hands and saw that he was made of water. The queen shrieked in frustration and tried to attack him again, but her blades passed through him effortlessly.\n\n\"Neat trick, right?\" It was Naia's voice just inside his ear. \"I can't do much to fight a queen, but I can do plenty to protect you here.\"\n\n\"She can't hurt the others, right?\"\n\nNaia giggled. \"No. This whole thing will be over soon. See?\"\n\nHe didn't see it at first, but Lily came back into the clearing dragging a large door behind her. It was the anxiety, and Abella had broken free of the vines and was helping Lily carry it over. Sofia was busy fighting the queen again, and Tink had become a literal ankle biter, tripping up the queen.\n\n\"I don't get it. Are they going to stuff her in my 'can't stop peeing' dream?\"\n\n\"No. Once she's in there, she will face an anxiety of her own.\" No sooner had Naia spoken did Lily open the door. Abella picked up the whole frame like a giant bug net and slammed it over the queen's head.\n\nThe queen vanished, gobbled up by the dream. Lily slammed the door and summoned a large key to lock it shut.\n\n\"Can't she just break out of there?\" Mike asked while stepping out of the fountain. His body solidified, and the others vanished from sight, except for Lily.\n\n\"Oh, she's having a very bad time right now.\" Lily smirked. \"Wanna see?\"\n\n\"I'm not going in there,\" he told her. His sudden reversal of fortune was too good to pass up.\n\n\"You don't have to go in there. This is all inside your head, remember? You just have to want to see it. Here, I'll show you.\" Lily extended her hand and Mike took it.\n\nThe home and the beach vanished, and he found himself back in the court of the faerie queen. Convinced he had woken up, his first clue that he was still asleep was that the court was in black and white. As he looked around, he saw that there were two thrones now instead of one.\n\n\"The humans need to be made to understand,\" said an elegant man with six wings and a scepter. \"We can no longer allow our people to suffer, my Queen.\"\n\nThe queen looked younger, somehow. Maybe it was the smile that reached her eyes, or the way she looked at the man, but Mike felt a sudden kinship with them.\n\n\"We must let the mortals work out their own problems, Oberon. Our kind are not meant to persist in their world.\" The queen moved close and laid her head on his chest when he embraced her. \"Besides, I will miss you.\"\n\nOberon chuckled. \"You will hardly know I'm gone. The time cycle is in our favor, a few days for you will be years for me in the real world. I just need time and the world's attention. I found a human I believe I could possess, the human world already refers to him as a king.\"\n\n\"You can't go about possessing the monarchy. They aren't like us.\"\n\nOberon laughed. \"Ah, but this one is! He sings and dances like one of our own, and I have made arrangements to meet him soon. Well, he doesn't know that we'll be meeting, but you catch my drift.\"\n\n\"You promise you'll come back to me? I couldn't bear the rest of eternity without you.\"\n\nTheir words were lost in a wail of grief, and Mike flinched when he realized that the faerie queen was on her knees next to him. Her extra arms were gone, and she was back to her normal height.\n\n\"No, please, don't make me watch,\" she cried, and covered her eyes with her hands. The skin of her hands became translucent, forcing her to watch as the sky filled with random images of a man known as the King. Crowds of adoring fans shrieked his name and cried out for him, and the scene changed to a dressing room.\n\n\"Holy shit,\" whispered Mike as he watched Oberon argue with his wife in his human form. The two of them were shrieking at each other in fast forward, and the conversation finally slowed down enough that he could hear it.\n\n\"You need to come back,\" she begged. \"The human world has poisoned you. This form has poisoned you.\"\n\n\"I'm so close,\" Oberon hissed, then picked up his guitar. \"I just need a little more fame, a little more time, please.\"\n\n\"Look at you. You're starting to fall apart.\" She took his hands in hers. \"You've even built yourself a kingdom here. Do you plan to stay in the human world?\"\n\nOberon simply winked at her, and now they were standing in a cemetery. The real queen was a blubbering mess, but her past self stood next to Oberon on the edge of a packed gathering. The mourners moved in slow motion, and her face was puckered in anger.\n\n\"But you failed,\" she said. \"Your human host couldn't contain you any longer, and you nearly died with him.\"\n\n\"It was an abject lesson in humility,\" Oberon confessed. \"A lesson which I will not need to learn a second time. I simply need a younger host.\"\n\n\"Don't you dare,\" she warned him. \"Oberon, you need to come home, our people need you.\"\n\nOberon shook his head. \"Our people need you to lead them while I try to save them from this side. For my next host, I will work on bringing the world together, and getting them to part with their parasitic ways.\"\n\n\"That hardly worked this time. You were so caught up in fame that you never once worked to better our people, my king.\" Her voice was harsh, and her cheeks had turned green. \"You squandered your time here, and for what? For them?\" She gestured at the mourners.\n\n\"I'm simply not used to human time versus our own. A human decade isn't that long as a fey, and I admit that time got the better of me.\" When Oberon turned to face her, Mike could see the deep lines in the brow of his forehead. He looked sickly, with heavy shadows beneath his eyes. \"But I am the king of the fey, and I will do right by our people. You have my promise.\"\n\n\"Your promise is meaningless if you fail to deliver.\"\n\nOberon scowled at his queen, but said nothing. They watched the mourners in silence, and the scene rippled once more. It was the queen, and she was sitting on her throne, and a fey with wings behind his ears knelt before her.\n\n\"What did he say?\" she asked, her eyes fierce, but her lower lip trembling.\n\n\"Your Majesty.\" The messenger looked nervous. \"He said that the human world deserves his gifts, and that he does not intend to return anytime soon.\"\n\n\"And has he addressed the plight of our people? Has he taught them to take care of the planet, to stop poisoning our streams and our air?\"\n\nThe messenger licked his lips, then shook his head. \"He said he will get around to it after his next world tour. He doesn't think his host's fame is big enough to make any changes, yet.\"\n\n\"Please. I've seen the humans and how they fawn over Oberon and his host. The king has fallen in love with the human world at the detriment of our own.\" She smacked her hand on the armrest of her throne and rose. \"What is it about the human world that seduces our kind, even our very own king? What can be so wonderful about them that he would willingly stay away?\"\n\n\"He says the people love him.\" The messenger ducked his head in fear as the queen's fist lit up with emerald light. She spun out of her throne and slammed her fist into the empty throne next to hers, causing it to explode.\n\n\"But I love him,\" she cried. \"Is my love not good enough? What of the love of our people, our children?\"\n\nOn the ground, the real queen was shrieking in agony as she was forced to relive her worst days. More images flitted by of another king of music, one who would drive people to scream in his very presence. Mike recognized the singer immediately, but also recognized the silhouette of Oberon superimposed on top of him. The faerie king did not look well, and the final memory showed the queen with dark tears streaming down her face, kneeling over the broken throne.\n\n\"Why?\" she whispered, clutching what was left of the throne. \"Why did you stay until he died? You couldn't control him and he couldn't comprehend you, and now you're both dead as a result. Why must I be cursed with the burden of eternity all by myself? Was I not worthy of your love?\"\n\nThe real queen was motionless now, and Mike watched as her body began to flicker as if she was about to vanish. She bit her lip hard enough to draw blood and came back into focus, only for Oberon to appear near her side.\n\n\"You weren't good enough,\" he whispered. \"Not enough for me to stay.\"\n\n\"Shut up,\" she whispered, and her body flickered again. Another Oberon stepped forward from the mist, then another, and all of them chastised the queen. Some pointed out her failings while others spoke of the wonders of the human world, and she flickered rapidly now, her shoulders hunched forward.\n\nShe was about to wake up. Mike was about to win, and he should have been elated, but all he felt right now was sadness. The queen may have treated him and Cecilia unfairly, but knowing now the true reason for her rage, he felt like he understood why.\n\n\"Let her out,\" he said, squeezing Lily's hand and hoping she was still there.\n\n\"What?\" Her voice echoed, but the queen didn't seem to hear it.\n\n\"Let her out, Lily.\" He couldn't see her, but he could feel the succubus' presence. \"Before she wakes.\"\n\n\"Romeo, are you fucking nuts?\"\n\nMike yanked his hand out of Lily's and now stood outside of the door. He hooked his fingers in the lock and yanked, ripping out the mechanism and the doorknob itself. When he let himself in, the queen was almost gone, and when he touched her shoulder, she spun on him, her eyes wide in terror.\n\n\"Come on,\" he said, then led her out of the anxiety and back into the front yard of his home. The others were waiting for him as if they were statues, all except for Lily, who looked very disgruntled.\n\n\"Is this some trick, Caretaker? Now that you've seen my shame, you would\u2014\"\n\nHe put a finger to her lips. \"Enough. Our fight is over.\"\n\n\"No, it isn't. Neither of us has awoken yet.\"\n\n\"It is.\" He looked over at the others. \"No more fighting. You can all relax.\"\n\n\"I...I don't understand.\" Her eyes moved back and forth between the others in suspicion.\n\n\"But I think I do.\" He took her hand in his, and she tried to pull away, but he held tight. \"All this time, I thought you just really hated mortals, but it was more than that. My world took something important from you, didn't it?\"\n\n\"Oberon knew better,\" she whispered, her hand relaxing in his. \"Yet he still went away.\"\n\n\"And it goes deeper. Cecilia fell in love with a mortal.\" He pictured her once more hanging over the shattered throne. \"It's not so much that she loves me, but that one day I'll be gone and her heart will be broken, just like yours.\n\nThe queen scowled. \"She doesn't deserve that.\"\n\n\"But that's life. You aren't used to the idea of losing a loved one, because your kind live forever. It's different for humans. Try as we might, we all move on, and we spend our brief lives learning that we will lose those we hold most precious.\"\n\n\"If you're trying to sway me with words, Caretaker, then it won't work.\"\n\n\"Not words. Actions. I challenged you to a duel, but there's a fundamental truth about me that you may not understand. I hate fighting. Maybe it would be easier to duke it out in here and make you miserable, but that wouldn't do anything to solve the fundamental issue here. If I win, you will still hate me, maybe even more so than before. Am I right?\"\n\nThe queen said nothing, then nodded.\n\n\"I assume that I won't wake up unless I want to, right?\"\n\nShe nodded again. \"We are in here until you choose to wake or your mortal form dies. I'll admit, that was my contingency plan, our agreement said nothing about keeping you alive.\"\n\n\"Lily?\" He looked over at the succubus. \"Can you stretch us out?\"\n\n\"Oh, always.\" She swung her tail around and stroked it seductively. \"It's pretty much a guaranteed fit.\"",
        "He rolled his eyes. \"I mean time. Can you stretch out time?\"\n\n\"You're no fun, but yes. Not like I did before, but that's your fault for being weak of mind and spirit.\" She released her tail and it whipped around behind her. \"I won't bore you with the math, but I'll toss this bitch back into her bad dream long before I think you might die. Whatever your agenda is, it isn't the same as mine, you got it?\"\n\n\"That's fair.\" When his gaze swept over the others, it stopped on Naia. She was smiling, and the runes tattooed on her body were glowing fiercely beneath her dress. \"I challenged you to a duel, but maybe we can do something more productive, find some common ground to stand on. Come on, Your Majesty. Come inside my home and learn what it means to live, and see what it means to love. See it from our point of view.\"\n\n\"What trap is this? Are you trying to seduce me, to convince me to join your harem of spiritual concubines?\" There was anger in her voice, and he felt her grip tighten like iron. \"I would rather fight and lose than indulge in your erotic fantasy.\"\n\n\"That's not what this is about. I want you to see what Cecilia sees, what the others see. Learn that it's better to have loved and lost than to have never loved at all.\"\n\n\"I hate human idioms,\" she muttered. \"I almost would have preferred live, laugh, and love.\"\n\nDespite her protests, when he pulled her toward the house, she went willingly.\n\nOnce they were inside, the home brightened as if it was a beautiful summer day outside, and he led her to the dining room where Sofia had laid out a feast for him.\n\n\"Look through my memories,\" he told the queen. \"See how I met her, how we connected. We didn't get along at first, but we found a way to connect. I'm an open book, I want you to have it all.\"\n\n\"But try not to linger on some of the memories,\" Sofia added, her forehead furrowed. \"They're a little embarrassing. Oh, and I hope you like pie.\"\n\nThe queen sat quietly and watched as the others came in and chatted with each other. None of them spoke to her, and Mike just allowed her to sit and observe. The meal proceeded with laughter and smiles as they all talked and had a good time. Even Zel and Abella were there, for his Dreamscape home could accommodate everyone.\n\nAfter dinner, they went for a walk out back by the fountain. Naia danced and sang for the birds while Tink challenged Lily to a game of horseshoes. It was clear that both of them were cheating, but nobody seemed to mind. At one point, Daisy appeared and swatted horseshoes out of the air.\n\n\"This is so saccharine that I'm going to be sick,\" noted the queen. \"There is no chance you actually live this way.\"\n\n\"When I'm not about to be murdered or fixing the house, it kind of is. I like spending time with everyone, and I love them all in my own way. Obviously, I love some of them differently, which is why the others aren't in here, so...\"\n\n\"Husband likes us best,\" Tink interrupted, then lined up a shot that rang the stake when it struck. The sound rippled into the sky, causing it to shift in color for a few seconds. Looking disgruntled, the queen wandered out into the Dreamscape, and Mike worried when she stayed gone.\n\nWhen the sun went down, Mike sat with Cecilia on the porch and watched the sky turn dark as technicolor stars dotted the sky like sparkling confetti. They were quiet, and held hands as he watched the sky, waiting for the queen's return.\n\nThe next day, she showed up around lunch and watched as Mike had a water fight with Naia, and then went fishing on the beach with Abella. The gargoyle was reeling in a massive fish that had no business existing in the real world, and when lunch came, Sofia made fish sandwiches for everybody. The queen was silent as she watched them, but Mike didn't mind. He was happy for the peace and quiet.\n\nWhen he went flying with Abella the next day, the queen came along, staying just out of sight behind them. Once they landed, she approached him with a frown on her face.\n\n\"Is it truly possible that you can love all of them? Do none of them suffer as you favor another?\"\n\nMike shrugged. \"I can only do the best that I can do.\"\n\nHe wasn't sure if the answer satisfied her or not, for she remained silent the rest of the day. The next morning, he was awoken by Tink, who was playfully biting his thigh. Figuring he should just be upfront about it, he made love to her for almost an hour before they migrated into the tub to join Naia. At one point, he looked up to see that the queen was in his bathroom watching them, but left her to her thoughts.\n\nDays passed, and then a week. The queen watched silently for most of the time, and he couldn't tell if she was gaining anything from the experience. She started taking long walks by herself, and he was wary that she might be planning something.\n\nHowever, one day she invited Cecilia to go with her. While the two of them were gone, he felt a slight pressure inside his head as the queen looked through the banshee's memories and his own. He could feel her silent judgment, but made no effort to disrupt her search.\n\nNightly walks with Cecilia became a tradition, and he was surprised when the queen asked Abella to go flying with her. The two of them made regular trips off the island, and he wondered how far they could go over the water before Abella was forced to turn back. He assumed that she was bound to the island much like he was.\n\nLily assured him that because of the sleeping powder, only a few hours had passed in the real world, but it made him nervous. At some point, his body would need water to survive. Would Cecilia spoon it into his mouth? Or was the queen playing the long game now, intending to turn his kindness against him?\n\nIt was something he would have to figure out if things went sideways. For now, it was peaceful in the Dreamscape. Despite the queen's foreboding presence, he wasn't actively fighting anyone, or repairing his house. He spent plenty of time with the women inside his head. Ratu taught him how to play Go, which was difficult at first, because the Dreamscape kept misplacing pieces when he looked away. Zel taught him about some of the plants, but the names sounded made up and would change from day to day. Such was the chaotic nature of the human mind.\n\nOne night, when everyone was at dinner, the queen picked up a fork and inspected it. \"Why bother with this?\" she asked.\n\n\"I'm trying to make a point,\" he replied between mouthfuls of roast beef.\n\n\"Not what you're doing here. I mean this meal. We are in the Dreamscape, you do not require sustenance here.\"\n\n\"It's nice to sit down as a family,\" Sofia replied. \"Don't be a bitch about it.\"\n\nMike thought that the queen was going to be angry, but a small smile crossed her lips.\n\n\"Like a tradition,\" she mused, and then became quiet for the remainder of the meal.\n\nThe next morning, when he got up, he noticed that the queen had finally removed her armor, and wore an intricately decorated dress and carried a staff made of wood that had been braided into shape. She was outside at the fountain, speaking in detail with Naia, and once the afternoon came, she went for another flight with Abella.\n\nHis plan was working, and this was the most relaxed that he had felt in a long time.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nKisa was sitting in the old man's kitchen. There was a storm outside, and rain was striking the glass of the windows hard enough to rattle them. She had no memory of how she had gotten here, but when she looked at her hands, she realized that this wasn't a memory. She was in control, and she stood to look outside.\n\nOut the window, there were rows of dimly lit buildings. Even though she could hear the rain, she couldn't see it, which was very odd. Even more striking was the dark cloud overhead that swirled down like a giant snake, circling each building before moving on to the next.\n\n\"Maybe we ignore that for now.\" The old man startled her, and she stepped away from the window as he lowered the blinds. He was holding a cup of tea, which he handed over to Kisa. \"In fact, stay away from window. Is bad idea to keep watching.\"\n\n\"Where am I?\" She backed away from him and went to the front door of the apartment. When she opened it up, she saw a long hallway that led to the stairs. At the end of the hall was a younger, human version of herself trying to climb the final step while using braces.\n\n\"What's going on here?\" She moved back into the room and saw herself as a human, lying on the couch with wary eyes cast at the old man's bedroom. There was another version of herself going through the pantry and emptying it out, preparing to run away.\n\nThey were her memories, but they were faded and translucent. The old man, however, was not a memory.\n\n\"This is safe place,\" he informed her, his accent as thick as ever, then sat at the table. \"Maybe last safe place for you.\"\n\n\"Who am I?\" she asked. \"Who was I?\"\n\nHe shook his head, sadness lining his features. \"I cannot answer what you don't already know. I am limited.\"\n\n\"Who are you?\"\n\nHe shook his head again. \"I cannot say. That part of you is lost, but what I am is self preservation, Kisa. Part of you that speaks from deep within, reminds you that you matter.\"\n\n\"Like my conscience?\" She sat at the table with him, wondering what was going on. \"If you're my conscience, am I asleep?\"\n\n\"No, not asleep. On brink.\" He pointed up at the ceiling. \"That woman, she has pushed her way in, wants to lock you away.\"\n\n\"Is that what the storm is?\" she asked.\n\nHe nodded. \"Your body is a temple, and she has invaded. Even now, she looks for you, but she didn't count on most important fact.\"\n\n\"Which is?\"\n\n\"You are more animal than human, Kisa. Normal human, easy to lock away. Animal? Much harder to cage. She is looking through memories in attempt to find real Kisa, but so much confusion has led her astray.\" He grinned. \"In this way, your body is mixed blessing.\"\n\nIntense pain radiated through Kisa's arm, and she looked down to see bite marks on it. Through the howling storm outside, she heard someone shouting in a high-pitched voice that reminded her of Tink.\n\n\"What's happening to my body?\" she asked.\n\nHe shrugged. \"Your guess is good as mine. If you\u2014\" he held deathly still, and Kisa felt it now, a heavy presence that descended over the building. She ducked away beneath the kitchen table as the window covering rattled itself open. From beneath, all she could see was the old man's legs, and he held perfectly still at the table as her memories manifested throughout the room.\n\nThere were hundreds of them. Kisa yelling at the old man, confiding in him, mourning the loss of her legs, and then crying on the floor, frantically trying to pull her collar off.\n\nShe grabbed at her throat, and briefly felt something around it, but was relieved when it was just the smooth fur of her neck.\n\nThe presence moved on, and when Kisa tried to come out, the old man cleared his throat. She stayed where she was, and the front door banged open. Based on the legs she could see, it was a woman in dark robes, and she stomped her way over to the table.\n\n\"Where is she?\" demanded the woman in an angry voice.\n\n\"Kisa is Kisa,\" replied the old man. \"Sometime wander, rarely come home. Have you come in from storm as well?\"\n\nThe woman ignored him, and wandered around the room and stopped next to Kisa's memories. She kicked at a few, grunting in disgust when her feet passed through them.\n\n\"I know you're in here,\" she said. \"Look, all I want is to get away from this damned house, and you're lack of cooperation is making it very\u2014\"\n\nThe whole world turned sideways for a moment, and if Kisa hadn't grabbed onto the table leg, she would have slid free. The old man, however, didn't budge, as if affixed to the universe itself.\n\n\"Fucking goblin,\" muttered the woman, and then she left.\n\nKisa pulled herself free from beneath the table and felt a searing pain on one of her legs. She looked down and spotted some fresh bite marks, and then spat when her mouth filled with the taste of blood.\n\n\"She wishes to wear you, Kisa. To wear you like a collar of her own.\" The old man stood, pushing the chair back. \"If you obey her, you will lose what is left of yourself. This much I know.\"\n\nKisa was about to reply to him when the woman reappeared in the doorway. The woman had blonde hair that was frayed at the ends, like she had just been in a fight, and her robes had deep scratches in them.\n\n\"Okay, look,\" she said, her voice desperate. \"We both stand to benefit from an agreement. I was planning on dumping your body as soon as a better replacement comes along, but what if I told you that I know some powerful people? People who could make you human again?\"\n\nKisa opened her mouth to say something, but saw the old man shaking his head. \"All the way human?\" she asked.\n\n\"Yes!\" The woman came closer, and her eyes were glowing. \"My mother is a powerful witch, and she knows one of the most powerful men on the planet. Not only could we turn you back, but maybe even find out who you were. I can see inside your mind, Kisa, and I know that you aren't happy here.\"\n\n\"I\u2014\" She looked at the woman. \"What would I have to do?\"\n\n\"Just...let me in. Stop resisting.\" She stared daggers at the old man. \"And quit listening to this one. He's not even real, just a manifestation of your conscience. You don't have to listen to him.\"\n\n\"Is true, Kisa.\" The old man sipped at his tea. \"The choice is always yours.\"\n\nShe thought about it for a moment. She really did want to know who she was, and maybe this woman could help. After all was said and done, maybe her place wasn't in the home after all. Her thoughts touched on Mike, and she felt a sudden betrayal from her thoughts.\n\n\"That's not real,\" the woman told her. \"You're his familiar now, you'll always be beholden to him. It'll be just like wearing that collar, and\u2014\"\n\n\"Stupid cat wake the fuck up!\" It was Tink's voice, but it had come from the old man. \"Tink no let go, make cat\u2014\"\n\nHe slammed his mouth shut and looked at Kisa with a raised eyebrow. \"She fights for you, not against you,\" he told her. \"Even when you were mean.\"\n\n\"Shut the fuck up,\" growled the woman, her face turning red. \"She doesn't want any of this, I know she doesn't. She just wants a normal life, and\u2014\"\n\n\"Bad bitch making Kisa wear stupid collar!\" Tink's voice blasted out of the old man again, and Kisa reflexively grabbed at her neck. This time, she felt her fingers close around something, and she pulled as hard as she could.\n\nThe entire world screeched like a car slamming on its breaks and then exploded into fragments of glass. Kisa was tangled up in someone's Halloween decorations, and was covered in blood. She was on the ground with Tink, and currently had a piece of fabric that looked like gauze wrapped around the goblin's neck. Tink was making choking noises, so Kisa pushed her away and fell forward on the ground, gasping for air.\n\nIn her left hand was the necklace. When she paused to inspect it, she had a sudden urge to put it back on, so tossed it away from her and went to check on Tink. The goblin was covered in scratches, and when Kisa rolled her over, Tink hit her in the face with a punch that knocked her teeth loose in her head.\n\n\"Owwww, fuck...\" Kisa grabbed her mouth and rolled away.\n\nPanting, Tink stood, moving as if in slow motion. \"Tink no let stupid bitch take Kisa.\"\n\n\"Ith me,\" Kisa said through her fingers. When she looked at the goblin, Tink had adjusted her goggles and appraised her now, then let out a grunt and fell backward on the ground.\n\n\"Stupid cat run too fast,\" Tink said, then flopped over on her back. \"Witch girl make fast run, Tink follow, but just barely. Now Tink tired.\"\n\n\"Tink.\" Kisa moved over to the goblin and then felt that cold pit in her stomach again. \"We need to hide,\" she whispered, and then looked around.\n\nThey were in someone's front yard, and the whole place had been decorated like a giant spider's nest. Huge, bendable spiders had been put out in the yard, and the two of them squeezed beneath a bush covered in cobwebs just as a pale figure stepped around the corner.\n\n\"Sarah?\" It was the woman with the long braid, and she was holding a wand in her hand that glowed with a sinister light. She waved the wand over the yard, and the discarded pendant flashed in response.\n\nThe woman ran to the pendant and knelt down to pick it up while holding the wand at the ready. She tucked the necklace away in her pocket before backing out of the yard, her eyes scanning the terrain. Once on the sidewalk, she broke into a run and disappeared.\n\n\"That can't be good,\" Kisa said, then helped Tink out of the bush. \"We should get back before anyone sees you.\"\n\n\"Ha! Everybody love Tink, nobody want to see stupid cat girl.\" Tink let out a wheeze and then stood to her full height. \"But Tink glad\u2014\"\n\n\"Hey!\" The front door of the home they were near banged open, and a man with a flashlight stepped onto the porch. \"You kids need to go home, get out of my yard.\"\n\nTink blew a raspberry, then mooned him. Stunned, Kisa allowed Tink to grab her wrist and pull her away, and it wasn't until they were almost a block away that she realized that Tink was cackling like a madman.\n\nIn that moment, she had a flash, and dozens of memories blew through her mind. They were vague in nature, but all of them involved time spent with Tink inside of Emily's home. The two of them teasing the mandragora plant with tofu chunks, or catching the fairies in jars to squeeze lube out of them, or the time they ate all the ice cream in the house and tried to frame Abella. They had been thick and thin, back then, and Kisa realized how much she wanted to feel that way again.\n\nThe memories were few and far between and she was certain that Tink didn't remember them at all. But maybe, deep down, it was something that the goblin felt, and it explained why she always seemed to have Kisa's back, even when the two of them were at odds with each other. Maybe those memories could never be recovered, but as they ran down the street, all Kisa could think about was how much fun it would be to make new ones.\n\nShe laughed along with her friend.\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nHi all, I really hope you liked that chapter, it was a tough one to write, and I really hope I did it justice.\n\nThe next chapter is the last one for book four, and it is definitely the longest. Even though the fighting is over, there is still one final battle to be won, and you won't want to miss it!\n\nAs always, don't forget to leave a rating or review, so many of you are doing a phenomenal job of it, thank you! You can check my bio for release dates, and I plan to start posting the first chapters of book five once I get them written down! Thanks again for being the wonderful community you've always been, and I will see you next time!\n\nAnnabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "dreamscape brawl",
        "dont fear the reaper",
        "full sized candy bars",
        "whats the queens problem anyway",
        "that weird pee dream we all have",
        "harem fantasy",
        "mind control",
        "monstergirls",
        "pop culture references",
        "they did the monster mash"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-59"
}