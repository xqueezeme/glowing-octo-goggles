{
    "title": "Julie's Panties Ch. 05",
    "pages": [
        "The following Saturday was Julies Birthday and it was a major one, the big Two- O. Her parents had planned an afternoon family party and Julie invited me to attend. \"This will be a great time to meet some of my family members that have only heard about my Construction Worker Boyfriend. I want them to know what a great guy you are.\"\n\nThis created a dilemma for me as I wanted to take her out for dinner and drinks at a nice restaurant in the city. (The drinking age was 18 at the time, imagine that!) So I suggested that we celebrate a night early and she quickly agreed.\n\nFriday night rolled around and I put on my nicest pants, shirt and even a tie. I even drove my car, arriving at Julie's house at exactly 6:00 o'clock. She came to the door, kissed me and said \"Come on in and say hi to my folks.\" Julie's father had inherited a thriving insurance company fifteen years ago and had built it into an even busier office. Both parents worked hard in the office and while they weren't loaded, they had no worries. Julie was the spitting image of her mother and it was obvious where Julie learned how to dress. Every time I had visited her folks, her mom was always impeccably groomed, usually wearing skirts, stockings and a silk blouse if she was at the office or just getting home. Her dad greeted me warmly, shook my hand and we made chit chat about the condo project that I was helping frame.\n\nAs we walk out to the car, I couldn't help but admire how nice Julie was dressed. It was a fall evening and she wore a knee length navy blue wool skirt, a silk blouse and a navy jacket. Even after gabbing with her folks for far too long, we reached the restaurant in time for our 7:00 O'clock reservation and were seated immediately. I ordered a beer and Julie got some trendy wine, not sure what it was but she liked it. The meal was fantastic, I payed the check, tipped the waitress and we headed out. We had a warm glow from the drinks and I suggested that we go to my place. My mother still worked second shift and always stayed at her boyfriend's place on Friday nights after work. I would have the whole place to myself and I was already hoping to do a better job of lovemaking than last weekends rushed affair.\n\nWe got to my place and to create a little atmosphere, I put on a Donna Summer album that my sister had left behind when she moved out. I also had scored some fine weed and Julie and I fired up a nice fat joint, passing it back and forth a few times before snuffing it out for later if needed. As the weed mellowed us out, we sat on the sofa and I handed a little box to Julie. \"Happy Birthday honey, I saw these at the mall and immediately thought of you. She opened up the box, looked at the gold, heart shaped ear rings and cried out with delight \"they are beautiful, thank-you! Let me go put them on.\"\n\nShe returned from the bathroom, pushed her hair back, showing them off. \"What do you think? I love them.\"\n\nThey looked so perfect in her delicate ears, the light reflecting off of them. She plopped down next to me and gave me a long sensuous kiss. Next thing I knew we were in each other's arms making out as the disco music thumped and the weed created a profound buzz. I just had to see what was under her satin blouse and I untucked the hem and slid my hand up inside, discovering that she was just wearing a bra. Her skirt had ridden up and I caught a glimpse of a pale blue slip peeking out under the hem. \"Surprise!\" Julie called out \"What do you think now lover boy?\"\n\n\"I think that we should go upstairs\" I eagerly replied, \"let's go.\"\n\nI took her hand and led her up to my bedroom. Once inside the door, I took her into my arms and immediately kissed her, my head spinning in part from the weed but also from my desire for this lovely girl. As Julie un-knotted my tie, I reached back up under her silky blouse, cupping her ripe breast, gently squeezing it through the layer of satin and lace of her bra. Julie paused from kissing me \"Let me get this skirt and blouse off, I'm getting hot!\"\n\nI remember thinking about the double meaning of that phrase but got distracted as she unbuttoned her silk blouse, slipped it off her shoulders, shook her chestnut locks out and dropped the blouse onto the chair. Mesmerized, I watched as she slipped off her shoes, unzipped the skirt and added them to the pile, revealing her half-slip. All in satin and lace, the fabric shone in the dim light and she twirled around, the light blue half-slip slightly fanning out around her thighs. She was wearing stockings and as the slip settled down I could see the faint outline of thin garter straps under the silky lingerie.\n\nI quickly ditched my shirt, shoes and trousers \"Fuck, you look hot!\" I whispered as, still standing up, I took this heavenly satin goddess into my arms.\n\nMy penis was already fully erect as I held her close, absolutely delirious from the sensation of her satin slip rubbing up against my hard cock. I began caressing her back, shoulder, ass, breasts, and thighs. Anything that was clad in silky satin was sending erotic messages to my pounding heart and throbbing boner. \"I thought that you would approve!\" she giggled as we collapsed onto the bed, kissing, squeezing, and caressing.\n\nLost in intense passion, I couldn't decide what to feel first so I tried to feel everything. First her bra covered breasts, then her panty and slip covered ass, then her stocking clad legs. I slid my hand up under her slip to her stocking tops and then tracing the straps of her satin garter belt, then to the crotch of her satin panties. I was all over her as we collapsed in passion onto the bed. I reached into the cup of her silky bra, releasing one of her firm ripe breasts and gently rolled her hard nipple between two fingers. Julie gasped and sighed into my ear as she pulled down my underwear and began stroking my penis with her delicate hands. I was leaking lube and she smeared it over the head with her index finger. She cupped and kneaded my balls as I slid my hand back up under her slip and onto the wet silky crotch of her panties.\n\nUsing my middle finger, I pressed her panties into the outer lips of her pussy. Julie responded by grinding her pussy up into my fingers as I continued to push her soaked panties further into her hot juicy vagina. Her slip was now pushed up around her slim waist and I got a good look at her garter belt and panties. They were perfectly coordinated and I was almost certain that they were another Maidenform Sweet Nothings set, this time in a Robins Egg blue satin.\n\nI had to taste her juices so I slid down the bed, spread her legs and dove into her panty covered snatch. Inhaling her sweet smell, I licked the wet crotch of her panties, replacing my fingers with my tongue. Julie wasted no time and practically inhaled my cock into her mouth, bobbing up and down more than half of its length. I slipped her panty crotch aside and slipped my tongue into her heavenly snatch, lapping up her salty juices. We rolled around the bed, licking and sucking with the wild abandon that lovers share. Julies slip remained bunched up near her waist and I grasped her silky ass, feeling the puckered waistbands of her half-slip, her garter belt and panties. I ran my hands lower across her ass, now feeling the delicate leg openings of her panties through the satin of her slip. I reached up under her slip up towards her waist and she shivered as my fingers traced her garter strap downward and then moved between her legs to slip into her pussy from behind.\n\nJulie briefly stopped her blowjob and gasped, \"Oh fuck that feels good, lick me, lick my snatch, god that feels so good!\"\n\nJulie rarely swore and her dirty talk surprised me, but also added to my intense arousal. Always wanting to please, I renewed my focus on licking and fingering her as she continued slurping on my rock hard cock. Suddenly she stopped and asked \"Do you another of those rubbers? If so, get it and get it quickly!\"\n\nI reached over to the drawer in the lamp stand and grabbed one, now nearly an expert at ripping the package open and rolling it on, I was starting to get good at this!\n\n\"OK,\" she announced, \"Roll onto your back, I want to set the pace here, you rushed me last time.\"\n\n\"Lesson learned, Julie\" I whispered, \"Let's try again.\" Still wearing her half-slip, she raised the lacy hem up to her waist and straddled my legs, slowly lowering herself down, grinding the crotch of her panties against my cock, sliding up and down the length. Honoring her request, I lay there, perfectly content to fondle her bra encased breasts and let her control when and how we would fuck.\n\nGrasping my penis and using it slip her panty crotch aside, she slowly sat down on the head of my cock and wiggled a little to get used to its size. I lay there, still gently caressing her breasts and quivering in anticipation as she got used to me.\n\nSlowly she rose up, almost coming off of me and then slowly she lowered herself back down. Each time I could see and feel her taking a little more of my cock, her juices adding to the lubrication on the condom. The sight of her pussy with her panties shoved aside, the straps of her garter belt, her stockings and half-slip was the sexiest thing I had yet experienced. Her stocking clad legs rubbed against the outside of my thighs and I held her breasts, still covered by her satin bra.\n\nMy head was spinning from lust and the weed, I groaned as she slowly lowered herself down, pausing to get used having me inside her, then raised up, lowering herself back down, gradually increasing speed. I can't begin to describe how erotic it felt to be fucking Julie while she still wore her satin underwear. Her juices were seeping out and leaking onto my balls as she maintained her speed, purring and moaning as she fucked me. \"Oh fuck, now, fuck me, fuck me, now I'm ready to fuck!\"\n\nI slowly began thrusting upward into her snatch and we developed a slow steady rhythm, deeper and deeper until I finally had my entire cock buried into her sopping wet pussy. Donna Summer was moaning \"I love to love you baby\" from the stereo, matching our speed and adding to the sensuous atmosphere of our love nest.\n\nWe rolled over with her on the bottom, she spread her legs wide as I plunged into her pussy with all that I had. She began rising up to meet me and then she wrapped those long, nylon stocking clad legs around my ass, pulling me inward as far as she could. We both were moaning and groaning as our orgasms approached. Julie arched up her hips toward me, her pussy lips grasping my hard cock, and moaned\" oh God, I'm coming, fuck, fuck, fuck me, I'm coming!\"\n\nThis was more than I could endure, and I came, pumping several shots of semen into her tight pussy. I slowed down as our orgasms subsided and pulled Julie close, hugging her tightly in the warm afterglow of sex. Not wanting to break the spell, I whispered, \"I love you Julie, happy birthday sweetheart!\"\n\nMy heartbeat gradually slowed and my shrinking dick slid out of her pussy. We untangled ourselves, I peeled off the rubber, glad that it hadn't ruptured. I pulled Julie close, we wrapped our arms tight around each other and snuggled up, my face buried into her soft hair. Julie broke the ice, \"That was so nice, I love you. Thanks for being gentle with me, this is what I dreamed love making would be.\" \"And thank you for the lovely dinner and ear rings, this was such a beautiful night.\"\n\nI glanced at the clock, it was nearly midnight I knew that Julie's parents would have a cow if I brought her home much later. We reluctantly got up, dressed and headed to Julies house arriving about 12:30, late, but not deathly late. We kissed good night and I watched Julie walk into the house.\n\nI got home, still glowing from the awesome sex we had shared, went to my room and slid into bed. Trying to get comfortable, I fluffed up the pillow and turned it over to the cool side. Suddenly I felt something silky, that vixen Julie had snuck her light blue satin panties under my pillow! Fuck that was sexy, my girl loved giving me her panties. As I ran the satin through my hands, I noticed that they weren't as gooey as the white or pink ones that she had left behind in my car. I realized that the rubber had captured all of my semen that the wetness was from Julie's pussy and my saliva. I held them up to my face, deeply inhaling the aroma, my mind returning to our lovemaking. Tonight had been fantastic, we had made love as a couple with both of us enjoying the act and our resulting orgasms. I kissed Julies panties goodnight and shortly thereafter, fell fast asleep, once again dreaming of Julie, and her panties!"
    ],
    "authorname": "satinfreek",
    "tags": [
        "half slip",
        "oral sex",
        "panties",
        "slip"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/julies-panties-ch-05"
}