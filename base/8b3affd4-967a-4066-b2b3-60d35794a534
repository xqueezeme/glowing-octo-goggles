{
    "title": "Melody for a Long Weekend",
    "pages": [
        "Author's Notes:\n\n'Melody for a Long Weekend' is my contribution to the '50 Ways to Leave Your Lover' event. \n\nIt was also meant to be a quick little story to help me cleanse my palette, freshen my mind, and tickle my fancy (Oops! Overshared there a bit). Instead, it's a beefy tome which will have a sequel.\n\nIt's a little sexier than my normal fare as well. Be warned! \uf04a\n\nSpecial thanks to norafares and Bebop3 for creating this event.\n\nBig thanks to blackrandl1958 for enduring the ordeal of editing this beast.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 1\n\n\"What do you mean you're off? Where are you going?\" Melody gasped as her husband looked back at her in surprise.\n\n\"I told you last week I was joining Gerry and the gang for a golf weekend. I won't be back until Monday night,\" he said with an annoyed frown.\n\n\"But... the long weekend! I had plans for us--\"\n\n\"You'll just have to reschedule. I gave you a heads up--\"\n\n\"When?\" she blurted.\n\nHe sighed as he turned to walk to the front door while speaking over his shoulder. \"Wednesday. I told you on Wednesday. Listen, I have to go, or I'll miss my flight.\"\n\nToday was Friday. He hadn't spoken to her at all on Wednesday as it had been another day of grunts.\n\nMelody's jaw dropped. Wait! He was flying? He refused to fly anywhere with her. \"Where are you going?\"\n\n\"Scottsdale, Arizona! You really should pay attention when I'm speaking. Then you wouldn't make silly plans that conflict with my calendar.\"\n\n\"I'd like to visit Scottsdale with you,\" she said softly. She watched his shoulder slump.\n\nHe looked back at her. \"Some other time. I have to go.\"\n\nHe picked up his suitcase and golf clubs and left the house. She felt herself drifting after him, lost and powerless to stop his escape.\n\nBecause that's what this was. She had to be honest with herself. He was running away from her. Eighteen years of marriage and she'd become something he didn't want to face.\n\nShe'd tried to rekindle the spark that brought them together, but every year he grew more distant until he'd built up a wall around himself, and her only contact with him was through the services she provided as a housewife.\n\nCleaning service for his home. Food services to cook his meals. Laundry service, with ironing! She hated ironing!\n\nEscort service to warm his bed? She was kidding herself on that last one. The man had completely lost interest in sex. She paused for a second as she thought of Scottsdale and what he might be doing there other than playing golf. She immediately dismissed the idea that he was looking for a little sexual excitement. The man no longer got erections. His golf clubs would be the only stiff shaft he'd be holding in his hands this weekend.\n\nShe'd spent hours watching him sleep over multiple nights. She'd done her research. Men experienced nocturnal penile tumescence several times a night, but her husband didn't. She'd tried mentioning it to him gently, how she never got to see his morning wood any more, and he'd given her the dirtiest look.\n\nHe hadn't talked to her for days for mentioning it.\n\nThe biggest problem was that while his sex drive dried up, hers was racing down the runway for take-off. It took very little to start her engine, but all she was getting these days was frustration.\n\nAs her husband loaded his golf clubs and suitcase in the trunk, she looked down at herself. She had an attractive body that she kept in shape with regular visits to the gym. It was tight and pretty firm as she was only thirty-six years old, firmer than anything her forty-year-old husband had shown her lately.\n\nShe'd kept her hair long as she liked it that way. Her friends were all going with shorter cuts for the convenience of them, but she loved the look and feel of her long mahogany wavy locks. It reached mid-back, and she was keeping it! When she went to the stylist and spa, they had standing orders to leave her hair length alone. She didn't mind their adding bold colors to her nails, which were currently painted a dark chocolate brown to match her eyes.\n\nHer inner circle all said she had beautiful features with soulful eyes. She knew she was no fashion model and took her friend's compliments with a grain of salt, but she accepted she wasn't unattractive. She certainly received her share of attention at the fitness club but always turned them down. That was a recipe for disaster, and besides, the men she'd met there were bottom feeders.\n\nShe'd envied some of the ladies at the gym for their perfect breasts in their spandex until she saw them in the showers with their ripples and stiffness and realized they were fake. Hers, while not large, were nicely round and high, more than a good handful in a C cup, with minimal sag. She liked to put her girls on display, showing off her cleavage, but her husband showed no interest anymore.\n\nShe kept her body toned though she did have a little softness in her tummy and ass. Her legs weren't heavy or chunky.\n\nAll in all, she was a damn nice 5' 8\", 130 lb package.\n\nWhy was she in this situation? Why was she trapped in a loveless and frustratingly, sexless marriage with a man who'd become a eunuch, both physically and emotionally?\n\nWhen he opened the car door, he gave her the briefest of looks before getting in and pulling out of the driveway.\n\nThe morning sun had only risen an hour earlier, but its rays warmed her skin. A shiver ran down her spine as his car drove out of sight, and her warmth was gone.\n\nThat lost feeling sunk in a little deeper.\n\n\"Melody?\"\n\nShe turned her head to see her neighbor standing next to the family station wagon\n\n\"Hi, Jackie,\" she replied.\n\nHer friend's expression showed her concern. \"Is everything all right? You seem a little blue.\"\n\nMelody forced a smile onto her lips. \"No, it's good. Just a little tired.\"\n\n\"Gangway!\"\n\nA tall and slim man rushed from the house towards Jackie, who stepped back while rolling her eyes. He put the suitcases down next to the rear door then looked at his neighbor over the row of low hedges between their driveways. \"Hi, Melody!\" he called out with a silly grin.\n\nShe couldn't help but smile back. \"Hi, Keith. Getting ready for your annual camping trip?\n\n\"Yes! Gotta load the car!\" He looked to his wife. \"We're on the road in ten minutes!\"\n\nJackie patted his arm with a smirk as he rushed back inside.\n\n\"How many years in a row is this now?\" Melody asked.\n\nJackie smiled as she did the math in her head. \"This is... trip number ten! The last few have been extra special as we've gone to the same campsite in a theme park upstate. Several other families also get the same campsites, so we meet them every year. It's a lot of fun! The whole family loves it!\"\n\nMelody's son was in the army and... never called. He'd picked up his father's self-sufficiency, she supposed. Of course, he'd never been an overly affectionate child. Too much energy and too restless to sit still and just talk. The army was good for him as he now had an outlet to burn off that energy. She'd wanted more than one child, but her husband vetoed that idea. Frustrated and at her wit's end, she'd stopped taking her birth control without telling him. But with no sex, there'd be no baby. Now, the house felt as empty as her life was becoming.\n\n\"There's that sad look again. Are you sure you're all right?\" Jackie asked.\n\n\"Yes. So, your kids enjoy camping?\" she asked to change the subject and saw Jackie's face light up.\n\n\"They do! Even my oldest, but this year he'd not coming with us,\" she answered with a frown.\n\nMelody looked at her in question. \"Does he not want to go?\"\n\n\"Oh, he definitely wants to go and is very upset we told him he can't. He got into this fight at school, earned him a one-day suspension. Because of that, he missed an exam. He's staying home this weekend to study so he can write the make-up exam on Tuesday. Could I ask you to keep an eye on him this weekend to ensure he doesn't bring his friends over to the house?\" Jackie explained.\n\nMelody wasn't exactly keen on policing someone else's children, so she just nodded absently. She hadn't paid too much attention to the comings and goings of Jackie's kids. It reminded her too much of how she no longer had one at home. She tried to recall their names. David? Right, it was coming back to her! David was the oldest. Ricky was the middle child, and Suzanne the youngest. Now, if only she could recall their ages.\n\nThe two youngest came running out of the house with their luggage held above their heads. Both surprised Melody as she wasn't expecting them to be so tall. All arms and legs. \"I'm embarrassed to say they've grown up so much since the last time I saw them!\"\n\nJackie waved it off. \"They're all growing like crazy! I think it's something in the water,\" she grinned. \"David is a grown man now. He's 18 and as tall as his father but wider in the shoulders. Ricky is fourteen and going through a growth spurt, as is Suzie, who's thirteen. But girls mature sooner.\"\n\nMelody nodded with a smile as she watched the kids tease each other next to the car. They waved to her. Ricky had red hair like his mother, but Suzie was as blond as could be. Melody's heart yearned for a little girl of her own.\n\nShe caught the motion of someone else exiting the house, and her eyes widened in surprise. Wearing a tight plain white t-shirt, red board shorts, and leather sandals, the tall blonde man had muscles that threatened to tear through his shirt. \"David?\" she gasped.\n\nJackie smiled proudly at her oldest child as he walked out to join her. She pulled him into a hug, and he wrapped his thick arms around her. \"This one has been costing us an absolute fortune for the last two years as he grows out of his clothes so quickly. There's the food bill, too, of course. Football has stolen my small baby boy and replaced him with this big beefy man!\"\n\n\"Moooom!\" David groaned in embarrassment. He looked over to Melody and gave her a shy smile and nod.\n\nMelody returned the smile as she took in his powerful muscles. His biceps alone looked like they were the size of her thighs! Were he to flex, she was sure that poor t-shirt would explode! His board shorts were a little baggy for her taste. He was at least 6' and had to weigh in at 230lbs, but it was all hard muscle. He had a strong jaw, piercing blue eyes, and light blonde hair and brows. The hair was short on the sides of his head and only a little longer on top with a series of waves. She spotted a bruise on his chin and one on his cheekbone. Evidence of the fight? She caught herself staring.\n\nMom wasn't finished with her son. \"You're going to behave yourself this weekend. Study--\"\n\n\"I-I was hoping you'd change your mind about not taking me,\" he begged.\n\n\"You know that's not going to happen. You're writing a make-up exam. You've already lost points, so this test is critical. You'll stay home and study.\"\n\n\"I can bring my books and study on the way there and back--\"\n\n\"No, end of discussion,\" Jackie said firmly, holding his eyes.\n\n\"Davy just wants to do kissy stuff with Cindy Parsons!\" Ricky teased.\n\n\"Shut up, twerp!\" David snapped as his face and neck flushed red. Jackie had her hands on his chest to prevent him from lunging at his brother, but Melody could tell it wasn't her strength holding him back. His love and respect for his mother were far more powerful. She had to be a foot shorter than her son. He obviously got his height from his dad, and the blonde hair. Jackie's hair, tied back in a thick ponytail reaching to mid-back, was as red as a ripe tomato, but nature might have been getting a little assist there.\n\n\"Rick,\" Jackie growled, and the younger boy jumped into the back seat with a final glare at his brother. Suzie waved at Melody once more before following Rick into the car.\n\nMelody watched David struggle to hide his disappointment as his father returned with a final load from the house. The older man glanced at the upset on his son's face as he passed to load the items into the back of the car and close it up. He walked back to press his forehead against his son's as he looked into his eyes. They really were the same height, Melody noted, but David was... much bigger. The father rested his hands on the younger man's broad shoulders and whispered something to him.\n\nDavid frowned but nodded slightly. Keith smiled and threw an arm around his son's neck in a wrestler's move, pretending to overpower him. Melody caught David's eyes, glancing over to her in embarrassment as he easily broke the hold and gave his father a gentle push towards the driver's door.\n\nKeith tucked his smile away as he looked back at his son. \"Follow your mother's advice! You know she's right, and I stand behind all her decisions. Study hard so you'll ace the make-up exam as you need the points. Don't forget your chores, as well. I left a list on the kitchen counter. And most importantly, no parties this weekend!\"\n\nDavid rolled his eyes. \"Dad! I'm not going to have anyone over.\"\n\n\"No girls in the house!\" Jackie added, and David's embarrassment grew, his eyes darting to Melody occasionally as she watched the interplay with delight.\n\n\"Moooom!\" he groaned.\n\n\"Loser doesn't have a girlfriend anyway!\" Rick yelled out his window.\n\n\"I swear I'm gonna pound you into paste!\" David growled.\n\n\"David! That temper of yours is what got you in this mess in the first place. Rick, you just lost ride privileges in the theme park for day one.\" When the boy began to whine, she shut him up quick. \"You want to lose them for the weekend? If not, apologize to your brother.\"\n\nRick begrudgingly apologized, then rolled up his window to sulk.\n\nMelody watched David breathing slowly to calm himself. She was impressed. Jackie walked up to her son and pulled his face down to give him a kiss on the cheek. \"I'm sorry, but you have to do this.\" He dropped his eyes and nodded to her. Jackie got in the car and waved as Keith skillfully backed the car and tent trailer out of the driveway. David and Melody waved as they drove off down the road. Once it was gone, they looked at each other.\n\nDavid broke the gaze first as his face heated up again. \"Ha-have a good day,\" he mumbled quickly and moved back into the house. She watched him go, wishing the shorts were a little tighter so she could observe the powerful muscles in his ass shift as he moved. She broke her gaze with a start as she realized what she was doing. This was Jackie's child!\n\nNo, she couldn't use the term child for such a big man. Jackie's son was more appropriate.\n\nMelody walked back into her house, struggling with the impulses rushing through her mind. She had to push the images of David out. She gave herself a shake. He was half her age, and she needed to act her own! She must be experiencing some kind of emotional backlash from the neglect she got from her cold fish of a husband.\n\nTaking a deep breath, she moved into the kitchen to clean up the breakfast dishes.\n\nOnce she finished, she looked around at the neat and tidy room. While she enjoyed the benefits of a clean workspace, she needed more satisfaction than this. Thinking of the chores still waiting for her, she decided they could wait. Instead, she'd go sunbathe on the patio.\n\nShe went upstairs to her bedroom and looked in the bureau drawer for her swimsuits. She pulled out a one-piece she usually wore and held it up. Pursing her lips in disappointment, she frowned as the suit was about as appealing as a bowl of cold porridge. She needed... more. She needed excitement! She needed to feel sexy and desired!\n\nBack into the drawer went the one-piece, and she dug further back and found what she was after. She'd picked up a two-piece bikini a couple of years ago when she thought they might fly down to Barbados for a vacation, just the two of them. The trip never happened as he'd made excuses. She'd never worn the bikini except for a brief time in the fitting room.\n\nIt was dark red with shiny gold ring accents. The bra had minimal padding, so her nipples became apparent when they stiffened, and wearing such a sexy suit made her very excited indeed.\n\nMore scandalous, was the g-string bottoms which clung so snugly to her pussy and ass. She was sure the tight pucker of her asshole would be visible behind the string if she bent forward.\n\nShe felt so sexy when she wore this, but she knew her husband would turn away in disgust.\n\nShe looked at the beautiful swimsuit in her hands. Fuck him!\n\nShe quickly undressed and faced her full-length mirror, eyeing her body critically. She lifted her tits, ran her hands over the slight softness of her tummy, then turned to look over her shoulder at her ass. She sighed in relief as, while it wasn't tiny, it didn't look as massive as she imagined it did. She reached back and squeezed the fleshy orbs. There was definitely muscle under that soft layer of fat.\n\nAn image of David's big hands squeezing her ass flashed through her mind, and she actually squeaked. She released her grip as a shiver ran down her spine, sending tingles through her nether regions.\n\nShe slipped the bikini top on and frowned as it was just a little tighter than she recalled. Had she gotten bigger? Once she had the ties all in place, she looked in the mirror again, and her tits were straining slightly against the triangles of fabric. It wasn't uncomfortable, but not the best fit.\n\nThe tugged on the g-string bottoms, and again, the fabric was... clinging more than she expected. The delicious tightness across her ass fired up her excitement, and she began to feel a heat deep in her pussy.\n\nOnce more, she confirmed her look in the mirror and smiled to herself. Now this was sexy!\n\nTo finish the look, she collected from her closet a sexy pair of high heels she'd bought for this outfit; red leather with a tiny gold buckle, strappy, and tall!\n\nExamining the full ensemble in the mirror, she allowed herself a smile. She felt sexy as hell! Her smile slipped as she realized she had no one to share this with.\n\nDisheartened, she walked downstairs to the living room and poured herself a stiff shot of rum and tossed it back. As it burned on the way down her throat, she shuddered and realized to truly enjoy this outfit, she should be drinking Pi\u00f1a Coladas.\n\nShe brought the rum into the kitchen and found the drink mix bottle on the door of the fridge. Tossing lots of ice into the blender, she generously poured in the mix and rum before sealing it up. The noise was terrible, but after a short time, she had the large pitcher of the frozen drink in hand. This went onto a serving tray with a tall glass with a straw. Her sunglasses and her steamy romance novel went on next. Finally, she grabbed the suntan lotion and a beach towel from under the bathroom cabinet. She headed outside, carrying the loaded tray.\n\nThe sun was higher in the sky and just beginning to touch the lounge chairs. She set the tray on the small table between the chairs and set the towel down across the lounger. She looked out across their gorgeously landscaped back yard. With the tall privacy hedges running along three sides, no one would be spying on her. The patio had additional privacy from a pergola, so she could have been completely naked, showing off all of her skin, lightly tanned courtesy of some random ancestor, and no one would know. That was a little depressing to think about, so she pushed it from her mind.\n\nTheir home didn't have a pool like Keith's and Jackie's did as her husband wouldn't spend money on something he wouldn't use. She did manage to get him to pay for the lovely patio area she was about to enjoy.\n\nSitting on the edge of a lounge chair, she slipped her shoes off and began to put on her lotion.",
        "Once more, she wished she had someone here to apply the lotion for her. Just like in her raunchy books. Like a rough and ready landscaper or a sexy pool boy! Ooo! The image of David's powerful hands, touching every inch of her body slipped into her mind, and she flinched with the guilty pleasure it gave her. Still... fuck, that would be hot!\n\nSpeaking of hot, it was getting a little toasty, so she poured herself a drink from the jug and sipped at it. She realized she'd added too much rum, but she wasn't planning on finishing the pitcher. Besides, she was alone, so what did it matter.\n\nShe stretched out on the lounger, picked up her book, and rested back against the cushion to let her mind to travel to a place where the hero was a lusty man who took the heroine passionately.\n\nThe backyard was silent except for the small sounds of nature, the distant sounds of the city and Melody's soft breathless sighs.\n\nBetween the sexy literature and the strong drink, Melody's inhibitions were slipping away. She began to stroke her stiff nipples through the fabric of her bikini as she read. She graduated to gently squeezing and tugging them as her pussy began to drip with her excitement. She took a large mouthful of her drink then another.\n\nThe fingers that had been plucking her nipples now traveled south over the slippery skin on her trembling stomach. They slipped under her bikini bottom to find the treasures hidden beneath. She gasped and threw back her head as she found precisely what she needed. Her fingers stroked across her wet lips and her stiff clit faster and faster. She was making wet squishy noises as her fingers flew across her skin.\n\nFuck! Fuck! She was so close!\n\nA crashing sound came from behind her, and she bolted upright, yanking her fingers from her pussy.\n\n\"Damn it!\" a deep voice yelled.\n\nSlightly dizzy from teetering on the precipice of her orgasm, she looked to the tall hedges between the properties. That was David's voice! Had he been watching her? Did he see her rubbing her juicy pussy? Her fingers immediately returned to her wet flesh. Her tingles flared into an intense burst of bliss from the illicit thrill of the idea of David watching her. She gasped as she rocked slowly on the edge of the lounger. It took a few moments for her to recover. More thumps came from the other property.\n\n\"David? Everything okay over there?\" she called out tentatively when she got her breathing back to normal.\n\n\"Oh! S-sorry, Mrs. Dawson! I didn't mean to disturb you. I didn't know you were in your backyard,\" he blustered apologetically. She couldn't see him over the hedge, but his voice came through clearly.\n\nShe grinned to herself. Her little release had been caused by something that hadn't actually happened. All she'd needed was just the idea of it.\n\n\"What was that crash sound?\" she asked.\n\n\"Oh, my idiot brother packed a bunch of pool toys in the garden shed. That caused stuff to fall when I opened the shed door. Sorry for disturbing you. Are you going to be outside for a while? I can wait until you go in before I work on the yard,\" he called out over the hedge.\n\nShe sighed as she didn't want to go in and was actually enjoying their odd conversation. She hadn't realized how lonely she was. Of course, he was an eighteen-year-old boy, so they really didn't have much in common. Better to let him just get back to it.\n\n\"It's fine. Go ahead with the yard work,\" she said.\n\n\"You sure?\"\n\n\"Trying to get all your chores done on the first day?\" she asked with a grin.\n\nThere was a moment of silence, and her grin got wider. She'd hit the nail on the head.\n\n\"Uh, yes, I thought I might as well. I'll get started. Thanks!\" David answered, slightly defensively.\n\nShe heard him wheeling a lawnmower from the shed. The sound moved away as he walked out past the pool area. The engine roared to life, louder than she expected, and her peace was shattered.\n\nShe sighed and collected her stuff back onto the serving tray. She took another gulp of her drink, picked up her shoes, and headed inside once more. The residual tingle between her legs reminded her of her fantasy about the landscaper. The drone of the mower drew her eyes to the window, but she couldn't see him from the ground floor.\n\nGrinning, she hustled barefoot to the staircase and stopped at the bottom to grip the railing as her head spun slightly. Her drink had been more potent than she thought. The mower buzz reminded her again of her mission, and she climbed upstairs. The guest bedroom had the best, and only, view of the neighbor's yard, as she'd be able to see over the privacy hedge. She didn't want him spotting her as she watched him, so she pulled the sheer curtains closed.\n\nShe giggled excitedly as she saw his back as he pushed the mower towards the back fence. He wasn't wearing his shirt, and his smooth muscles gleamed with his sweat. He'd changed into a tight swimsuit as well. Unfortunately, he was too far away to see much detail, and she was looking through a curtain and a screen.\n\nWhile his back was to the house, she unlocked one of the window panels and opened it wide. She pulled the screen panel off and set it down inside, leaning up against the wall. All she had now between her eyes and his body was the sheer curtain.\n\nShe suddenly blinked at the bold actions she was taking to ogle his body. It wasn't right, was it? Her rum-soaked ethics melted under the heat of her need.\n\nMelody's eyes returned to watch David push the mower back and forth across the grassy area beyond the pool. It felt like a tease due to the distance. She could see his sweaty muscles of his torso, but from the waist down, there just wasn't enough detail.\n\nStill, she remained glued to the spot as her breathing became deeper. He truly was a beautiful man! Her hand slid down and into her bikini bottom once more.\n\nShe jolted when the mower's engine cut out, and he began pushing it back towards the shed. She moaned in disappointment as he seemed to be leaving, and she hadn't come yet!\n\nHe stopped at the far end of the pool. She was just beginning to make out some details on the front of his swimsuit. It was one of those Lycra swimsuits, much like bicycle shorts, and she could just make out a hint of contours. When he stretched his arms over his head, she moaned with desire. He paused and looked around as if he was trying to find the source of the sound. She froze when he spotted the open window, but he made no sign of having seen her.\n\nHe continued his stretch, then walked up to the edge of the pool and dove into the water to cool off. She pouted in frustration as she could no longer see him. Moments later, he surfaced halfway down the pool, much closer now. She noticed he was frowning as he threw a handful of leaves he must have collected from the bottom onto the pool deck. He put his hands on the lip and did a surge twist out of the water to sit on the edge.\n\nMelody's view was obscured by the hedges, so she quickly rushed into the master bedroom and grabbed the footstool by the chair in her reading nook. She stopped by her end table and collected her vibrating friend, quickly confirming the batteries were charged.\n\nWhen she got back to the window, David was nowhere to be seen, and the mower was gone as well.\n\nShe must have made another sound as David reappeared, his face just visible above the bushes. He looked around and up towards the window once more, but again, showed no sign of having seen her. He moved towards the pool, and she saw he was carrying a pool skimmer. He stopped at the edge of the pool and dipped the net deep into the pool and scooped out some leaves.\n\nShe grinned as David was now acting out her pool boy fantasy.\n\nShe quickly put the footstool up against the wall next to the window and climbed up. Now, she could see his entire body, and her breath caught in her throat. She could see the shape of his cock against the wet fabric. He appeared to be very well endowed... from what she could see from the window, and through a curtain.\n\nOnce more, the voice of reason in Melody's head asked her what she was doing. The boy down below was young enough to be her son. Besides, she was a married woman!\n\nA violent snort slipped free from her as a bolder voice made its presence known. Yes, she was married, but to a man who'd forgotten how good it felt to fuck! She was a woman with needs! Besides, she was hurting no one by satisfying her own urges while admiring that beautiful chunk of male fantasy down there. Truthfully, her husband didn't care what she did. The new voice told reason to SHUT THE FUCK UP!\n\nLicking her lips with satisfaction, she ran her spit covered tongue over the end of her vibrator. While she was really wet, she wanted this bad boy deep inside her now, while she still had a clear view of David!\n\nShe pushed her g-string to the side and pushed the tip against her opening. When the device slid between her nether lips, she turned the little motor on, and the delicious vibrations spread through her inner muscles. She watched David lifting and lowering the skimmer into the pool and matched his movements as she pushed and pulled the vibrator from her body. She bit her lip to keep from crying out and alerting him to her spying on him. She leaned against the wall as her body began to tremble. The vibrator was accelerating her release beautifully. A few gentle moans escaped her, and she saw David looking from side to side and fidgeting. She bit her bottom lip to contain her cries of joy. This release was going to be a big one!\n\nThen it happened.\n\nObviously thinking himself unobserved, David pulled the front of his swimsuit away from his body and reached in to adjust himself.\n\nMelody caught just a glimpse of David's cock in profile, and her earlier impression of it was both confirmed and destroyed. While the angle she was viewing from hid its actual length, she could see it had decent girth and was becoming erect.\n\nIt was too much! Melody gave the vibrator a twist, and the motor went to high speed. At that instant, the cushion topped footstool decided to slide out from under her feet. She'd pressed her body against the wall next to the window too hard.\n\nShe screamed and grabbed the curtains, but the rod pulled free and followed her down.\n\nShe landed hard, and the lights went out.\n\nChapter 2\n\n\"Mrs. Dawson! Mrs. Dawson, are you all right?\"\n\nMelody slowly opened her eyes and saw beautiful blue eyes filled with emotion, so many emotions, staring down at her. She was lying on the floor, staring at the ceiling. She went through a quick inventory of her senses and body.\n\nSight? Check. She could see the lovely young man leaning over her.\n\nHearing? Yes, she heard his panicked breathing as if he'd just been running. She could also hear a distant angry buzzing sound.\n\nTouch? He was holding her hand in his. She saw him pull his hand back, as there was something wet and sticky on her fingers. He raised his fingers to his nose and tentatively sniffed them. His face went a darling shade of red as he wiped his fingers off on his swimsuit. She realized that's all he was wearing, and a thrill rushed through her body.\n\nThat thrill was being picked up by an odd tingle and vibration. She wiggled her fingers then her toes. A stabbing pain shot up her left leg as her ankle complained about her moving it. She sucked in a sharp breath and closed her eyes tightly to ride out the pain. She relaxed her leg, and the pain quickly subsided into a background sensation.\n\n\"Can you hear me?\" David asked.\n\n\"Yes...\" Her eyes opened once more.\n\n\"Do you know where you are?\" he said, and her eyes went to his face curiously.\n\n\"On the floor of my guest bedroom. I'm not sure why, though. My ankle hurts a lot,\" she said with a grimace.\n\nShe noted his eyes kept looking down her body towards her bikini bottom. \"What's wrong?\"\n\nHis eyes darted to hers, then he was looking anywhere but at her. \"You-you're buzzing. Down there, I mean.\"\n\nShe blinked at him in confusion as her hand automatically went down to touch her pussy. She could feel it as her fingers slid over her wet lips.\n\n\"AH!\" she gasped, as she was also very sensitive. Then she realized her vibrator was inside her. She looked at David, but he was concentrating on the wallpaper. Biting her lip against her surge of pleasure, she forced her finger and thumb inside herself and managed to grip the end of the submerged device. She pulled it out, but it slipped from her fingers to drop to the floor, where it buzzed angrily against the wood floorboards. Another shot of pain rushed up her leg as she tried to move.\n\nWhen she opened her eyes again, David had the vibrator in his big hands and managed to turn it off. He tossed it up onto the bed and glanced down at her as he wiped his slick fingers against his swimsuit again. \"Uh, I'm going to call an ambulance for you--\"\n\n\"NO! No ambulance!\" Melody yelped.\n\nHe gave her a frustrated look. \"You fell. You may have hit your head as you don't recall how you got on the floor. You've obviously hurt your leg. You need medical attention.\"\n\nMelody thought back to what she was doing before she found herself on the floor. She'd been... oh. She looked at David. \"I fell off the stool.\"\n\nHe looked a little relieved that her memory might be coming back. \"What were you doing on the stool... by the window? It's open, you know! You might have fallen out!\"\n\nShe recalled what she was doing before and didn't really want to tell him about it.\n\nHis expression closed up as he saw she wasn't about to answer him. \"Ambulance and hospital, it is.\"\n\n\"No! You-you can take me to the hospital. I need to get dressed first, though. I can't go in my bikini!\" she asserted.\n\nDavid's eyes widened in surprise. \"That's a bikini?!?\"\n\nMelody blinked at him. \"Yes... what did you think it was?\"\n\n\"Sexy underwear,\" he mumbled, then looked away as she watched a flush move up his neck.\n\nMelody was stunned. He thought she was sexy? No, he said the underwear was sexy. That's all he meant. Compared to him, she was an old woman. She pushed the thought from her head but paused.\n\n\"David, how did you get in?\" she asked, images of his large body crashing through her front door flashed through her imagination.\n\n\"When I heard your scream and saw the drapes pulled down, I jumped over the fence into your backyard. Your patio door was unlocked,\" he explained.\n\nThat was far less dramatic than where her mind took her. The image of him mightily kicking in the front door faded away. She gave her head a little shake. She had to stick to reality. \"I need clothes. Help me up, please.\"\n\nShe squeaked when he slid an arm under her legs and one around her back and lifted her from the floor.\n\n\"You shouldn't put any weight on that ankle,\" he said gruffly as he gently carried her out into the hallway.\n\n\"Master..\" she sighed in shock, pointing to the master bedroom across the hall, then the word took on a different significance for her, and her pussy clenched with her desire. David showed no sign he'd noticed her reaction as he carried her into the room, carefully avoiding bumping her ankle on the doorway. He set her on the bed and looked at her expectantly. She blinked up at him in a lustful daze.\n\n\"Clothes?\" he prompted.\n\n\"Oh! Right! In the closet should be a pink tracksuit on the shelf,\" she said, pointing behind him.\n\nShe closed her eyes and shook her head again. She was acting like an idiot. Maybe that hit on the head rattled her more than she thought.\n\nShe felt something drop onto the bed next to her and opened her eyes. David had found the tracksuit and was standing before her in his tight swimsuit, one arm awkwardly held before his groin.\n\n\"I'm going to run home to get changed, and I'll be right back to get you.\" She nodded and picked up the jacket, slipping it on and zipping it up. She felt his eyes watching her tits as the zipper squeezed them closer together.\n\nHe grabbed the pants and gently slipped her dangling legs into them, pulling them up until she could take over. He spun and rushed from the room, but not before she caught a glimpse of the bulge in his swimsuit. He was sporting quite the erection!\n\nShe sat, staring at the doorway for a moment before shaking her head again. She was going to ask for a cat scan to look for brain abnormalities.\n\nMelody flopped back on the mattress to tug the pants over her ass by rolling her hips side to side as she pulled. This movement disturbed her ankle, so it was slow going. Finally, she just rested and stared at the ceiling, panting to catch her breath.\n\nIt wasn't long before she heard the thump of David running back up the stairs. He rushed into the bedroom and made a noise of dismay when he spotted her on her back. He jumped on the bed to look down at her face, but she just stared at his look of panic. Relief flew across his face.\n\n\"Oh, thank god! I was worried you might have hurt your head worse than I thought, and I'd come back to find you unconscious again.\" He was babbling in his relief.\n\nShe smiled up at him as his concern was so genuine and sweet.\n\n\"No, I'm fine, except my ankle,\" she replied.\n\n\"Okay... okay, I've got my truck in the driveway.\"\n\nDavid scooped her up once more, and she put her arms around his shoulders as he carefully maneuvered her out of the bedroom and down the stairs. Her head was spinning at how easily he carried her, and she trembled slightly, but he didn't notice.\n\nWhile she could still feel it, she was at the tail-end of her rum buzz, and her conscience was returning with a vengeance. She couldn't show him how embarrassed she was as he'd return to the question of what she'd been doing.\n\nAs they went by, she reached out to grab her purse and keys from the front table so they could lock the door, once outside. He gently sat her on the passenger seat of his truck then rushed around to the driver's door to get in.\n\nHe carefully drove them out of the neighborhood and to the hospital, right up to the entrance of the emergency department. He rushed out to get a wheelchair then extracted her from the truck and onto the chair. For her part, Melody was genuinely beginning to enjoy him handling her. She squeezed her thighs together to suppress the tingles and secretly chastised herself for being so naughty.\n\n\"I'm just going to park, and I'll be right back,\" he said to her earnestly.\n\nShe couldn't keep the smile from her lips. \"I'll be here.\"\n\nTrue to his word, he ran back from the parking area, and she finally got to see the outfit he'd changed into. Loose and baggy were the first terms that came to mind. He wore a big red hoodie sweater over a white t-shirt and gray sweatpants. He was hiding his body! Why would he do that?\n\nWhen he reached her, he immediately wheeled her into the emergency department.\n\nThey began the ordeal of filling out forms, followed by a long wait before an intern finally arrived to take her in to see a doctor. David had to stay in the waiting room as he wasn't family. As they wheeled her away, she saw him settle into a chair in the corner and rest his head back.\n\n-=-\n\nHours later, an orderly wheeled Melody back out into the waiting area and stopped in front of David, who was fast asleep in his chair. The orderly nudged David's knee, and he woke with a start.\n\n\"What!\"\n\nMelody giggled as the painkillers she was on made this wonderfully funny.\n\n\"Are you Mrs. Dawson's ride home?\" the man asked.\n\nDavid blinked and sat up. \"Yes, I'm her neighbor, David.\"\n\n\"You can take the lady home. She's not allowed to put any weight on her ankle for two days. Here are the instructions from the doctor,\" the man said, handing some papers to David. He was also transferring responsibility for the woman over to David, who rubbed his eyes quickly and stood. He glanced at her ankle and saw it was wrapped in a tensor bandage.",
        "Tucking the folded papers into his pocket, he wheeled Melody outside to the curb. \"I'll be right back.\"\n\nShe grinned at him. \"I won't run away.\"\n\nHe smiled at her, but there was concern on his face as well.\n\nShe sighed as she watched his ass hidden by those terrible sweat pants.\n\nWhen he returned, he lifted her and carried her to the truck. She relaxed in his arms and rested her head on his shoulder. He felt so good. She made a little sound of disappointment when he set her down and put her seatbelt on. He glanced at her in confusion, then closed her door and hustled around to the driver's side. He gave her another quick glance and a smile once he was in and got them underway.\n\nThey drove in silence for a while, then David cleared his throat. \"Where is your husband?\"\n\n\"Arizona,\" she sighed sadly. \"He can stay there. I'm sure he'll be happier.\"\n\nDavid glanced over at her, but she wasn't crying yet. \"There anyone else at your house to take care of you?\"\n\nShe shook her head. \"No one takes care of me,\" she said so softly that David almost didn't hear her.\n\nHis cell began to ring, so he fished it out of his pocket and glanced at the screen. \"Shit!\" He quickly put the phone in its dashboard mount and pressed the answer button and speakerphone buttons. \"Hi, Mom.\"\n\n\"Why aren't you answering the home phone? Are you driving?!?\" Her voice was climbing octaves in her outrage.\n\n\"Sorry, I was at the hospital all day--\"\n\n\"OH MY GOD! Are you okay? What happened?\" she shrieked, her anger instantly switching to fear.\n\n\"I'm fine! It was Mrs. Dawson--\"\n\n\"Oh my god! What happened to Melody?\" she shrieked again, and the woman in question began to cry.\n\n\"Who's crying?\" Jackie asked.\n\n\"I'm in my truck with Mrs. Dawson, now. She's had a rough day, and I'm taking her home. She was...\" He glanced uncomfortably at the crying woman. \"...fixing some blinds and fell off the stool. She knocked herself unconscious, and her ankle is hurt. The doctor doesn't want her to walk on it for two days. There isn't anyone home at her place but her. What should I do?\"\n\n\"What do you mean, what do you do? You take care of her! She needs you!\" Jackie barked.\n\nMelody just cried harder, and David looked at her in distress.\n\n\"Don't cry, Melody. David will look after you this weekend. Everything will be fine.\" Jackie said to console her. It seemed to be working as the woman's tears were slowing as she looked to the phone.\n\n\"Okay, Mom, I'll get my books and some clothes, and I'll stay with Mrs. Dawson until you get back,\" he said.\n\n\"That's my good boy!\" Jackie said with genuine warmth in her voice. \"Oh! Cindy says, hi!\"\n\nDavid's expression closed right up as Melody watched him. He seemed to be swallowing with difficulty. \"Say... say hi for me,\" he forced out.\n\n\"Will do!\" Jackie replied, unaware of her son's grim expression. \"I'll call you on your cell tomorrow. I love you!\"\n\n\"Love you, too.\" David hit the button to hang up.\n\nThey drove the rest of the way in silence. Melody watched him, but he kept his eyes on the road, and his grip was tight on the wheel.\n\nWhen they finally pulled into her driveway, Melody had recovered from her tears and was puzzling over David's reaction to the news of Cindy. His mind was miles away. He got out and came around to get her.\n\nHe lifted her out and kicked the door closed on his truck. He carried her to the front door and held her while she unlocked it. In they went, and she locked it behind them.\n\nDavid's stomach growled loudly, and she giggled. He smiled self-consciously. She pointed to the kitchen, and he carried her there to set her down on a chair by the table.\n\nMelody glanced at the clock and saw it was almost 9PM. \"Do you want to order pizza? You choose, and my treat!\"\n\nHis smile widened, and he nodded.\n\n\"There are some menus by the microwave. Bring the phone handset, too,\" she said, gesturing across the room. He collected them then sat down next to her to look them over.\n\n\"These guys make delicious pizza and wings,\" he said, gesturing to one flyer. She nodded and took the handset.\n\n\"What do you want to order?\" she asked, and he looked at her timidly. \"Speak up!\" she grinned.\n\n\"Large meat lovers and 20 wings, mild sauce?\"\n\nShe nodded. \"Any soft drinks?\" she asked.\n\n\"No. Water is fine,\" he responded.\n\nShe made the call and heard the food would be delivered within the hour.\n\n\"Uh, you seem... less giddy,\" he said cautiously.\n\nShe sighed. \"Yes, the painkillers are starting to wear off.\"\n\nHe looked at her in concern. \"Are you in pain?\"\n\nShe smiled. \"No, it's just the buzz that's fading, so far. I have a few pills in my purse for tonight, and I'll need you to pick up more from the pharmacy tomorrow if you don't mind.\"\n\nHe nodded, then he pulled the papers from his pocket. He quickly scanned through the instructions. He felt some relief to see she didn't have a concussion. His coach made them all aware of the dangers of those.\n\n\"So, you have a severe sprain of your left ankle. You need to elevate the leg and don't put any weight on it. Ice pack treatments for short intervals and the tensor bandage. I've dealt with this before, playing football. I have an icepack at home. I'll bring it over when I get my stuff.\"\n\nShe smiled cheekily at him. \"I had no idea you were a doctor, too!\"\n\nHe glanced at her in surprise and shook his head. \"No, but I do know a little physiotherapy. Kinda have to, in my sport,\" he said shyly.\n\n\"My health is in your hands,\" she teased, and he bobbed his head with a small smile.\n\nHe turned her chair and gently lifted her left leg to rest it on the seat of the next chair.\n\nShe loved the feeling of his hands on her, but she pushed that down.\n\nThey talked about his football career for a while, the successes and failures, the injuries, then she asked if he was considering it professionally. He shook his head.\n\n\"It's fun, and it's made me stronger, but it takes too much of a toll on a body. I'll continue to work out, but getting slammed, again and again, isn't my idea of a good time. This is my last year.\"\n\n\"What are you planning on taking in college?\" she asked.\n\nHe grinned a little self consciously. \"Physiotherapy. I was accepted by the local university, so I'm pretty psyched about that. I-I want to help people heal from injuries. To help them get their lives back on a healthy track.\"\n\nShe grinned widely. \"I'm going to be your first patient! We are playing doctor!\"\n\nThere was a moment of awkward silence, then Melody broke it.\n\n\"Can you tell me who Cindy is?\"\n\nOnce more, David's smile dropped away, and he shook his head.\n\n\"I'm sorry to bring up an uncomfortable topic, but I saw how the name seemed to upset you, and sometimes talking things out with a sympathetic listener helps.\"\n\nHe glanced at her. \"It's embarrassing.\"\n\n\"This was a girl you were to meet on the trip? You've met her before on previous trips?\" she asked, gently pressing for details.\n\nHe gave her an exasperated look, then nodded.\n\n\"You like her? Were you hoping to see her again?\"\n\n\"Yes,\" he blurted.\n\n\"She said hi to you, so she likes you--\"\n\n\"Yes! She likes me! I don't feel too awkward with her! I can talk with her! Other stuff.\" The last part was very quiet, but Melody heard and smiled.\n\n\"Kissy stuff?\" she asked, gently repeating Ricky's words from the morning.\n\nDavid's neck flushed red as did his cheeks. His jaw flexed as he clenched his teeth. He took some deep breaths, and he finally nodded. Then a crafty look came to his eyes. \"Maybe you can answer a question for me? What were you actually doing today in that bedroom upstairs?\"\n\nMelody wasn't ready to answer that question just yet. If her buzz hadn't worn off, she would probably have blabbed immediately, but instead, she just shook her head.\n\n\"So maybe we both have embarrassing things we don't feel like talking about,\" David said quietly.\n\nThe doorbell rang, and Melody handed some bills to David to pay the delivery man. He rushed away and came back with the food in short order.\n\nShe smiled to see the joy in his eyes. \"Do you want a plate?\"\n\n\"For pizza and wings?!?\" he scoffed with a grin. He grabbed some paper towels and glasses of water when she indicated she'd have one, too.\n\nHe lifted the lid, and the savory scents wafted up.\n\n\"That certainly smells good!\" she sighed.\n\nThey dug in, and neither spoke again until the last wing was eaten.\n\n\"Thank you for dinner!\" David said with his hands resting comfortably on his stomach.\n\n\"Thank you for rescuing me today and for all your help,\" she replied with a sincere smile.\n\nHe nodded then noticed she was looking a little uncomfortable. \"Do you need a pill?\"\n\nShe shook her head. \"Not yet. We have to work out the logistics of how this will work.\" He shook his head as he didn't understand.\n\n\"Case in point. I need to use the bathroom,\" she said.\n\nHe thought about that. \"You can stand on your right leg?\" he asked, and she nodded. \"I can carry you into the bathroom and stand you before the toilet. Then I'll step outside for you to... do it.\" His face warmed. \"Call me when you're finished.\"\n\n\"Okay. Can we do it now? Talking about it is making it worse,\" she said pitifully.\n\nHe jumped to his feet and scooped her up in his arms. He moved her down the hall to the two-piece guest bathroom and set her on her right foot before the toilet. She smiled at him as he stepped out and closed the door.\n\nHe heard noises he did his best to ignore, then a flush and water running. Finally, she called out when she was done. He opened the door and lifted her in his arms again.\n\n\"Could you take me upstairs to my bedroom? I think I'd like to just go to sleep now,\" she said with a small yawn.\n\n\"Sure.\" David carried her up the stairs as she clung to his neck.\n\nMelody was really enjoying being in David's arms and struggled to keep from purring. She bit her lip to prevent a disappointed moan from escaping as he set her on the bed.\n\n\"Is something wrong? Are you in pain?\" he asked.\n\nShe shook her head. \"I'm afraid I'm going to be a nuisance.\"\n\nHe shook his head as he frowned. \"Mom said I was to take care of you this weekend. Don't feel bad about asking me for help,\" he insisted.\n\nMelody gave him a sweet smile. \"Okay. I need to get ready for bed. I need fresh panties and a nightie from that drawer. I'll need help getting to the bathroom and back after I've brushed my teeth and washed my face.\"\n\nDavid blinked at her. \"You want me to get your panties?\" he mumbled.\n\nShe smiled at his embarrassment. \"Any pair will do. And a nightie.\"\n\nHe looked towards the dresser she'd pointed to and walked slowly to it and pulled the drawer open. Inside was a large selection of dainty unmentionables. His hand hovered over the satin underthings until his fingers dropped automatically to pluck up a shiny black g-string. His eyes widened in shock as he realized how little fabric the garment had.\n\n\"The nighties are in the drawer to the left,\" she offered as she bit her lip, seeing what he'd selected for panties.\n\nHe nodded to her without looking and moved to the nightie drawer. Once more, he was faced with a selection of sheer and sexy items, this time sleepwear, though by the look of them, he didn't think they were designed for sleeping. Again, his fingers paused above the sexy items and dropped to pick up a sleek little black babydoll.\n\n\"Mmmm, I like your choices,\" she purred as he brought them back to her. His face looked like it might ignite. He scooped her up again and carried her to the bathroom just off the bedroom, pausing in the doorway as he stared at the size of the room and the deluxe features.\n\n\"Whoa,\" he sighed.\n\nShe glanced at him then at the room. \"You like the renovations we had done to the bathroom?\" she asked.\n\n\"It's very impressive! That soaker tub is enormous!\" he gushed. He was imagining how good it would feel to relax in that after a game.\n\nShe looked at it and smiled wistfully. \"In happier days, we thought a two-person soaker tub would be romantic. My husband quickly tired of that... and me.\" She glanced up at the embarrassment on David's face. \"Oh! I'm sorry, David. I shouldn't burden you with an old woman's sad tale.\"\n\n\"You're not old,\" David grumbled. She hid her smile, though she felt very pleased with his response.\n\nHe carried her to the sink and gently set her down on her right leg before it. \"Are you okay from here?\"\n\n\"Yes, I'll call you when I'm done,\" she replied softly.\n\nWith a shy nod, he stepped out of the bathroom, closing the door behind him.\n\nDavid thought about how soft her skin was and how good she felt in his arms. He gave himself a shake, as she was a married woman and twice his age. He was just a kid to her. He wandered across the hall to the guest room. He assumed he would stay in here tonight as she called it the guest room.\n\nHe spotted the device she's taken from... inside her pussy. The vibrator was resting on the bed, where he'd tossed it earlier. Quickly glancing back across the hall, he moved to the bed and picked up the sex toy and stared at it. Mrs. Dawson had this inside her! Without thinking, he lifted it to his nose and inhaled her scent. His body reacted at a primal level, but his conscience slammed him for this breach of privacy. Shamefaced, he looked at the vibrator uncomfortably and carried it back into the master bedroom. He gently reached out to place it on the end table when she called out for him.\n\nHis hand jumped, and he dropped it. When it hit the edge of the table and fell down between the table and the bed. The switch tripped, and the device began to buzz aggressively against the hardwood floor, vibrating itself under the bed.\n\n\"David? Are you there?\" she called out again, and he froze.\n\n\"David?\"\n\nHe closed his eyes momentarily as he clenched his fists and took a deep breath to settle his nerves. Ignoring the buzzing device under the bed, he moved to the bathroom door. \"Sorry. I'm here. Can I come in?\"\n\n\"Yes, I'm ready,\" she returned with an odd tension in her voice.\n\nWhen David opened the door, he froze, unable to look away from Melody. She was leaning back against the counter; her left leg was raised slightly in front of the other as her weight was on her right one. Her expression was nervous, yet hopeful.\n\nHis eyes tracked downwards, taking in her raw beauty in the outrageously sexy black baby-doll. The bra cups were shiny satin, and impressions of her stiff nipples were distinctly on display. Her tits were lifted up and presented for his viewing enthrallment.\n\nThe wispy fabric of the baby-doll below the bra was sheer and showed off her mostly flat tummy and delightful curves. The garment ended just at the top of her thighs. Through the gauzy material, the tiny black panties he'd selected could easily be seen. They clung like a second skin to the contours of her most intimate place.\n\n\"Can you carry me to the bed now?\" she asked with a soft voice, and David's erection reached maximum rigidity. He nodded his head and moved into the room to lift her into his arms. The silky-smooth skin of her bare thighs felt like Heaven against his arm. She looped her arms around his neck and pulled herself close when he began to move to the bedroom. This pressed the side of one of her tits against his chest.\n\nMelody was tingling madly. It would have been perfect if the pain killers hadn't been running out at the time.\n\nDavid gently laid her on the bed, propped up against some pillows and the headboard. She winced as she shifted her leg and bumped it on the mattress. He looked at her in concern.\n\nShe nodded. \"It's time for my next pill. I left them in my purse in the kitchen. Could you bring it up?\"\n\nHe nodded and rushed off to thump down the stairs. He took the opportunity to adjust himself to a less painful angle in his underwear, then rushed back. He handed her the purse and caught her odd expression.\n\nThen he noticed the buzzing sound and recalled the vibrator. With a sigh, he dropped to the floor and wiggled under the bed to reach the gently bouncing toy. He pulled it out and stood next to the bed. A quick twist and it was quiet once more.\n\n\"Could you get me a glass of water from the bathroom... and rinse that off in the sink?\" she asked with the hint of a smile.\n\nHis cheeks glowing with the heat of his blush, he nodded and ducked into the bathroom. He brought her the glass of water first then went in to wash the device clean. Once he finished, he dried it off with a towel and brought it to her. She looked up at him with a smile on her lips and took it from his fingers. He grabbed a pillow from a nearby chair and gently slipped it under her left leg to elevate her ankle, then stood back and gave her a smile.\n\n\"I-I'm gonna get my stuff from my place, and I'll be right back.\" He couldn't stop his eyes from traveling down her incredible body. When they snapped back up to hers, he thought he saw a strange look of satisfaction in them. She was pleased about something. She gave him a nod, and he rushed away.\n\nHe let himself out of the house and ran next door. He wasted no time getting to his bedroom. Once his door was closed, he dropped his pants, took his rock-hard erection in his hand, and began to stroke himself off. He didn't need any further imagery to enhance his excitement as he still recalled how incredible Mrs. Dawson looked when he left her on her bed. An image of her partially naked on the floor with the vibrator buzzing inside her pussy flashed into his mind, and that was it. His orgasm struck hard and fast. The intensity caught him by surprise, and he dropped to his knees as his legs shook. He gasped for breath and shivered through a few mild aftershocks with his eyes closed.\n\nThen he recalled she was waiting for him, so he had to get moving. He opened his eyes and stared in dismay at the cum he'd shot across the floor. Groaning, he pushed himself to his feet and cleaned himself up, then the mess he'd made.\n\nNext, he packed some clothes for tomorrow in a duffle bag and shorts to sleep in. He tossed in the ice pack and grabbed his ointment for muscle strains as well. His earphone and his cell phone's charging cable went into the bag. He grabbed his books last. He really did need to study.\n\nHe locked up as he left his house and ran back over to the Dawson's, letting himself inside. \"I'm back!\" he called out as he locked the door behind himself.\n\n\"Okay!\" she responded from upstairs.\n\nHe carried his stuff upstairs and placed his bags in the guest room. He grabbed the ice pack and ointment. A quick trip downstairs to the fridge let him fill the ice pack with cubes from the freezer and ran back upstairs to face her. For some reason, he was sure she knew what he'd just done while thinking about her. He was sure the guilt was all over his face.\n\n\"David, I have a question for you.\"\n\nHe froze as he prepared for her to ask if he stroked himself off thinking about her. He managed to look at her and was surprised to see she looked a little nervous. That made him pause.\n\n\"How deep a sleeper are you?\" she asked.\n\nHe blinked at the question. \"Deep?\"\n\nShe nodded. \"Are you difficult to wake?\"\n\n\"Oh! Uh, I can be, I guess.\" He thought of how his Mom had to open his door every morning and call out to wake him. \"Yeah, I suppose I am.\" Her expression showed her unease. \"What's wrong?\"\n\nShe glanced at the bathroom door. \"I typically have to use the bathroom during the night. If you're over in the guest room asleep, are you going to hear me when I call out?\"\n\nHis eyebrows rose. Shit. This might be an issue, after all.\n\n\"I thought so,\" she said as she bit her lip. \"Would you mind very much sleeping in here?\"\n\nHis eyes widened, and he looked to the lounge chair in the corner.\n\nMelody shook her head. \"No, I meant on the bed. It's a king, so there's almost too much room. It was my husband's idea to get this monstrous thing.\" She looked away as she thought once more of how the man had been distancing himself from her for years.",
        "\"Uh, doesn't that seem inappropriate? Me, sleeping in your husband's place on the bed?\" he managed.\n\n\"He wouldn't care,\" she said dully.\n\n\"Ah... I'm sorry.\"\n\nMelody realized she was dumping her gloomy mood on this young man. She looked at David apologetically. \"No, I'm sorry about that. I shouldn't vent my issues at you. Seriously, though, you are welcome to sleep on that side as I'll need your help to get to the bathroom at least once during the night.\"\n\nDavid squirmed in embarrassment, but he realized it just made sense. \"Okay, fine.\" He looked at the pillow her husband slept on, and his skin crawled. \"Could I change the sheets first?\"\n\nShe smiled at him. \"That's a good idea.\"\n\nHe looked at the chair in the corner of the room then went to the guest room to carry the footstool back into the bedroom. He moved to the bed and scooped her up once more to gently place her on the chair in the corner, resting her ankle on the footstool.\n\n\"Sheets are in the linen closet in the hall. Second shelf up from the bottom,\" she said with a cute little smile on her lips. He tore his eyes away from her mouth and left the room.\n\nOnce David was in the hall out of her line of sight, he put his hands over his face in frustration. He had to get a handle on his reactions to her. She was dressed like one of his most erotic daydreams and behaving like she was enjoying his attention, but he was sure he was just seeing what he wanted to see. She was probably just amused as he was a kid in her eyes.\n\nHe took a deep cleansing breath, then he opened the closet and pulled out some sheets and pillowcases. The fabric was super high thread count Egyptian cotton. They were certainly softer than any he'd ever slept on, before.\n\nHe carried them back into the bedroom and placed them on the bureau, then moved to the bed and pulled the comforter down to pull off the old sheets. He added the new and switched out the pillowcases. He lifted the old sheets in his arms and looked to Melody.\n\n\"The laundry basket is in the bathroom.\"\n\nHe nodded and carried them inside to tuck them into the basket.\n\nReturning to the bedroom, he saw Melody holding her arms up in preparation for being carried. He smiled as he walked over to her.\n\nOnce more, being as careful as he could, he slipped his arms under her and stood with her braced against his body. God, she felt so good! He heard her make a noise, which sounded like purring.\n\nHe forced that aside and brought her to her side of the bed and eased her down, then put the pillow from the chair under her ankle. He took a closer look at the injured joint. It was a little swollen. \"I'm going to put the icepack on your ankle to reduce the swelling. I'll take the bandage off, ice the sprain, apply some ointment and re-wrap the ankle.\"\n\nShe smiled at him. \"Thank you, Doctor!\"\n\nHe looked up into her dark eyes, which were just beginning to get a little glassy from the drugs, then his eyes dropped to her lush cleavage before he forced himself to look away. His cheeks burned as he carefully unwrapped the ankle. There was bruising at the joint, and he gently held the icepack against the swollen tissues.\n\n\"Oh! That's cold!\" she gasped. The sensation pushed back the fog that was slipping into her mind from the pills.\n\n\"Yeah, sorry. It's necessary. Push through it as best you can,\" he said.\n\nTo distract herself, Melody looked to the purple smudges on his cheek and chin. \"How did you get those bruises on your face?\"\n\nHe looked up from her ankle. \"Stupid fight at school.\"\n\n\"What made it stupid?\" she asked.\n\nHe sighed. \"I just reacted badly to some comments from a mouthy jerk.\"\n\n\"Sticks and stones.\"\n\nHe snorted and nodded. \"Exactly.\" Then he frowned as he recalled the laughter from the other members of the team. That hurt, but worse was the shrill laughter from their girlfriends, and especially Becca. She seemed the most amused by Jeff's words. He thought she was better than that, and his humiliation was complete.\n\nThey were quiet for a while as Melody watched his face as he stared at nothing. She could see the pain he was carrying. \"The words hurt this time?\"\n\nHe sucked in a sharp breath, as his mind had been drifting. He glanced at her and shrugged slightly. He examined her ankle as he removed the icepack. The swelling seemed to be slightly less. He didn't want to overdo it, so he set the icepack aside and grabbed the tube of ointment.\n\n\"I'll try to be gentle, but the cream needs to be rubbed in. Let me know if I hurt you.\" He spread the cream on his fingers and ran them over her ankle.\n\nShe winced a little, but she was pleased to see his big strong hands could be gentle, too.\n\nOnce he'd ensured the cream was rubbed into her skin over the swollen area, he re-wrapped her ankle with the compression bandage, but not as tight for overnight use. He lowered it back to the pillow once more. \"How was that? Did I hurt you?\" he asked.\n\nShe gave him a grateful smile. \"No, you have a gentle touch.\"\n\nHe nodded as his cheeks warmed up.\n\n\"I'm exhausted, so I think I'll call it a night. Are you staying up?\" she asked.\n\n\"No, I'll just listen to my music for a bit in bed then go to sleep. I'll start studying for the exam tomorrow, after I get your pills from the pharmacy,\" he promised.\n\nShe smiled at him. \"Thank you, David, for going above and beyond to help an old woman--\"\n\n\"Stop! You're not an old woman! Besides, I'd be by myself all weekend if this hadn't happened. I don't like being alone,\" he admitted.\n\nShe smiled a little sadly. \"Me either.\"\n\n\"Then it's settled. We have each other for company this weekend. Your job is to rest and heal that ankle, and I will assist you, run your errands and study for my exam,\" he asserted with enthusiasm, drawing a happy smile from her. She nodded. Smiling, he walked over to the guest room to get his duffle. He brought it into the master and pulled out the shorts. Now he wished he'd brought a pair with a little more room in them.\n\nHe went into the bathroom and changed into his sleepwear. He used to sleep in the nude, but ever since his mom accidentally caught sight of his morning wood when she woke him one morning about a year earlier, he'd taken to wearing the shorts... and locking his door... when he remembered.\n\nHe folded his clothes from today and carried them out to his duffle. He heard an odd sound behind him and looked back to the woman who was staring at him oddly. Her eyes were wide, glassy, and her face was very pink. \"Are you okay, Mrs. Dawson?\"\n\nShe cleared her throat and gave him an embarrassed smile. \"Yes! Yes, sorry. Could you call me Melody? You're obviously no longer a child, and being called Mrs. Dawson makes me feel old.\"\n\nHis eyes widened in surprise. \"Oh! Sure, uh, Melody.\" He couldn't prevent the broad smile from slipping onto his face. It felt surprisingly good to be acknowledged as an adult.\n\nMelody felt a wave of heat rush through her body to hear this gorgeous man say her name. This was the view she'd wanted to have of him this afternoon. Almost all of his body was clearly visible, and he was powerfully muscled. His skin was also amazingly clear of any blemishes, not even a freckle, mole, or scar, and he looked baby smooth. She was surprised to notice he had no extra hair on his body. Even his armpits were free of hair. He shaved his armpits? Was that a football thing?\n\nWhen he began to fidget, she looked away and settled back against her pillow.\n\nDavid turned and picked up his earphones, cell charger and his cell and went to the far side of the bed. He knelt and plugged in the charger behind the bedside table, then pulled the sheets down.\n\nFeeling incredibly awkward, he slipped under the sheets quickly, then slowed right down as the sensation of touching the sheets was just too good to rush. \"Oh, my god! These sheets feel amazingly soft!\" he sighed.\n\nMelody chuckled. \"One of the luxuries I insisted on if I was going to be forced to sleep in this aircraft-carrier-sized bed.\" She grinned happily as David laughed at her comment.\n\n\"Are the sheets expensive?\" he asked quickly then realized that was rude. \"Sorry, you don't have to answer that.\"\n\n\"It's okay. Yes, the sheets are expensive. Especially for a king bed. What do you sleep on?\"\n\nHe snorted softly. \"I still have the single bed my parents bought for me when I was a kid.\"\n\nShe giggled, thinking of the big man in a kiddie bed. \"Is it one of those plastic race car beds?\"\n\nThat image hit his funny bone, and the bed shook with his big booming laughter. Melody watched him with a satisfied grin on her face. It felt so good to hear laughter again. It felt even better to be able to make someone laugh.\n\nWhen he got control once more, he chuckled. \"No, it's not quite that bad. It's just a basic single bed. I managed to remove the baseboard so my feet can hang over the end.\" He stretched out and sighed. \"This bed is perfect!\"\n\n\"Company included?\" she blurted with a grin as the pills relaxed her.\n\nHe looked over in surprise. \"Uh, of course,\" he said carefully.\n\nMelody closed her eyes happily. \"You're sweet. Goodnight, David.\"\n\nHe admired her lovely profile for a moment before he responded. \"Goodnight... Melody.\"\n\nHer lips curled up into a slight smile as she heard her name, and David watched as she slipped into slumber immediately.\n\nHe put his earbuds in and started up his music to relax his mind.\n\nRelaxing his body with such a beautiful woman next to him in bed was going to be far more challenging.\n\n-=-\n\nSometime during the night, he woke to feel someone pushing on his arm. He groggily woke and realized he had his earbuds in, music playing. He pulled them out and turned off his music. Melody turned on her bedside lamp.\n\nHe glanced over at her. \"Sorry. Fell asleep with the music playing. You need to use the washroom?\" he mumbled.\n\n\"Yes, please.\" She took another pill and drank the remaining water in her glass.\n\nDavid heaved himself out of bed and walked around to her side. She pushed the blankets down, and he slid his arms under her and lifted before she was ready.\n\n\"Yipe!\" she squeaked and clung to his neck.\n\nHe pulled her tighter against his chest to ensure she wouldn't fall. \"Sorry. You okay?\" he mumbled.\n\n\"Yes, I really have to go,\" she pleaded.\n\nHe turned towards the bathroom and made it through the door without bumping her leg. He set her down on her right foot before the toilet. He shuffled away to lean against the door jamb facing the bedroom.\n\nShe was going to tell him to wait outside, but she could no longer wait. Down went the panties, and she sat carefully, protecting her left ankle. Seconds later, the release was sweet relief, even though she was overly conscious of the big man standing in the doorway with his back to her. She could see his head dipping and bobbing forward, so she knew he was still half asleep. Her eyes widened when she noticed his shorts were riding a little low, and she could just see the tops of his butt cheeks. She smiled to herself as a tingle ran through her.\n\nShe cleaned up and was ready to go back to bed. \"Ready.\"\n\nDavid jolted awake and turned around to collect her. She could see his eyes weren't entirely open, but he was trying.\n\nHer eyes dropped and saw he was tenting his shorts. Shit! It was big! He brushed it against her thigh as he lifted her into his arms, and she barely stifled her moan. He was so hard!\n\nOnce more, he got her to bed and set her down gently. Her hand was automatically reaching for the front of his shorts, but he turned and moved to lift her injured ankle up onto the pillow. Then he walked around the end of the bed to get in on the other side.\n\n\"G'nite,\" he grunted and was soon breathing deeply and slowly with his back to her. She sighed and turned off her light. She rested back on her pillow and tried to get the image of that bulge out of her mind so she could fall asleep.\n\nIt took some time.\n\nChapter 3\n\nDawn's first rays of sunlight poured through the window and splashed across the bedsheets. Melody sighed in her sleep, and a slight twinge of pain broke her slumber as she tried to move her leg. Her eyes opened and blinked at the bright sunlight touching the bed. She smiled as sunlight always made her feel a little better. She glanced over to see if David was awake and froze.\n\nSometime during the night, he'd kicked the sheets down and off his body. The sheets weren't the only thing that slid down.\n\nShe recalled when she got up to pee that his shorts had been sagging. Now she could see the drawstring had come undone, and the shorts were currently around his upper thighs. David was sporting magnificent morning wood, and she had a clear view of it. She realized with a jolt that this was the first time she'd ever seen an uncircumcised cock outside of pictures. The head was entirely hidden by his foreskin. The tip was clearly outlined against his stretched skin, and she caught herself reaching out to slide the skin back.\n\nOnce she had control over her treacherous hand, Melody watched with fascination as it gently bobbed with his pulse. Her previous view of its girth had been from a distance. Up close, she could see it would definitely make its presence felt as it slid inside a woman, but it wasn't going cause injury. To the uninitiated, it might seem a little intimidating, but she desperately wanted to wrap her fingers around it to feel its heft. That wasn't the only thing she wanted to do to it.\n\nNow that she had a proper viewing angle, it had to be at least seven or eight inches long in its excited state. That was much longer than her husband's, and it seemed significantly thicker than his, as well. Her body trembled as she imagined what it might feel like inside her.\n\nShe noticed David's balls. She carefully sat up to get a better angle of view and was relieved she hadn't awakened him. She could see a gentle movement in the sack, but something was off. The testicles themselves seemed... swollen. She frowned in concern though there was no discoloration. They were a healthy pink and moved like they were pumping up and down. She found herself slightly mesmerized and once more had to pull back her hand.\n\nWhen she'd realized her husband's sex drive was diminishing, she'd researched root causes. One was testicular shrinkage and reduced testosterone. She'd finally managed to get a look at her husband's balls and determined they were roughly average in size.\n\nDavid's were definitely not average. They were larger than any she'd seen. Not huge, just noticeably larger than she'd ever seen. She wondered if they'd been injured in the fight.\n\nIt wasn't until she was admiring the smooth skin over his testicles that she realized his groin was completely hairless! This was no rough shaving job! He had no hair at all there, not even stubble.\n\nHow was this possible?\n\nHis legs were hairless as well. If it wasn't for his dense muscles, his wonderful cock, and heavy balls, his smooth skin was similar to that of an infant.\n\nShe wanted so much to touch him, but she realized she wasn't sure how welcome that would be. She recalled he'd been in a fight over some hurtful words. Could it have been about this? She knew he played football. They showered together, so maybe someone saw something they decided to tease him about. She sighed. It was all speculation.\n\nShe heard him making noises that indicated he was waking, and she froze. Should she try to lie down and pretend to be asleep? That felt dishonest. There were already too many unspoken secrets between them, so she schooled her expression to a friendly smile and watched his face.\n\nDavid's eyes fluttered, and he stretched every muscle in his massive body. Melody couldn't prevent herself from letting her eyes travel down his body as he did this. It was a glorious sight to behold. Her eyes returned to his as he gazed at her curiously in his sleepy state. She smiled again and pointed downwards. His eyes followed hers, then he was grabbing for his shorts and trying to leave the bed at the same time. Instead, he managed to roll off the bed to crash to the floor.\n\n\"David! Are you okay?\" she asked with concern.\n\nA short time later, David's red face appeared over the mattress as he looked back at her. Emotions were racing across his face, but she could tell he was very upset.\n\n\"Are you okay?\" she asked again, gently.\n\n\"Did you?\" he blurted.\n\nHer eyebrows rose. \"Did I what?\"\n\n\"My shorts-- did you... pull them down?\" he was beginning to build his anger.\n\n\"No, David. I didn't touch you or your shorts.\"\n\n\"But you saw!\" he snapped.\n\n\"David. Please don't get angry with me. We're both adults. It was just an accident. A pleasant one in my case,\" she said calmly, holding his eyes.\n\nHer words seemed to take some of the steam from his ire. He glanced at her in surprise, then he seemed to slump and lean back against the bed, looking away.\n\n\"You did see, didn't you,\" he said with a defeated tone.\n\nShe watched the back of his head. Something was upsetting him, but she didn't want to guess and make him more uncomfortable. \"What did I see that upsets you? Nothing upset me.\"\n\nHe looked back at her as if trying to see if she was lying. When she held his gaze, he nodded slightly and dropped his eyes. \"I don't have any hair down there,\" he muttered finally.\n\n\"By choice?\" she asked, and his eyes shot to hers once more but saw only curiosity.\n\n\"No. It fell out when I was younger, much younger.\" He sighed as if struggling with something, then he spoke again. \"The doctor thinks it might be something called Alopecia Areata. It usually shows up on the scalp, but so far, it's targeting areas below my neck,\" he explained in a subdued tone.\n\n\"Not life-threatening, I take it?\" she said with a smile and surprised a chuckle out of him.\n\n\"No, and no new areas have shown up in a long while, so I'm grateful for that.\" He looked at her, then his expression became serious. \"Can I ask you a personal question?\"\n\nShe smiled. \"Considering what I got to see this morning, that only seems fair.\"\n\nHe grinned at that, but it quickly disappeared as the serious look returned. \"You weren't... disgusted or disturbed by anything you saw?\"\n\nShe shook her head. \"No! I have to admit this is the first time I've ever seen an uncircumcised penis. That was interesting!\"\n\nHe twitched slightly as she spoke, but he was still looking at her as if expecting more. When she didn't offer it, he finally spoke. \"My balls. They're... big.\"\n\n\"Are they healthy? Testicle size increase can mean medical condit--\" she began.\n\n\"They are healthy,\" he asserted. At her curious look, he continued. \"I saw a doctor who said there was nothing to be concerned about. They're just larger than normal.\" His expression soured. \"Donkey balls.\"\n\n\"Oh my! Who called them that?\" she exclaimed.\n\nHis angry look returned. \"Some of my teammates call me that. One did it in front of the cheerleaders, and it got ugly when he started in on the freakishness of my huge hairless balls.\"\n\n\"Punches were thrown,\" she said gently, and he nodded. \"Someone you liked was present at the time?\" she guessed, and his eyes shot to hers, confirming her guess. \"Does this fellow also like this girl?\"\n\nIt was like a light came on behind David's eyes. He stared at Melody in surprise.\n\n\"If the girl didn't come to your defense, then they deserve each other,\" Melody finished. \"With that, I'd like to use the washroom, please.\"\n\nDavid blinked and stood with his back to her as he pulled up his shorts. She got a good look at his ass until his sleepwear was back in place. He came around to her side of the bed to gently lift her in his arms again.\n\nHe got her situated in the washroom and closed the door as he left the room.\n\nAfter a more extended period, Melody called out to him again.\n\n\"Is it safe for me to enter?\" he asked.\n\n\"Yes,\" she said, and he walked in to see her standing by the sink completely naked.",
        "\"Mrs. Dawson!\" he cried out, but he didn't turn away.\n\nShe smiled, though her face was almost glowing pink from her blush. \"Fair is fair. I got to see more than you expected to show. I-I have another favor to ask of you.\"\n\nMelody couldn't believe her audacity to even contemplate what she was about to propose! Except, from the moment she saw his erection, she knew she wanted to see it again and touch it! She was tingling madly with excitement and out of control!\n\nHis mouth was moving, but no sound was coming out. His eyes were taking in her magnificent tits with their stiff nipples; she was excited?\n\n\"I really want to shower, and I can't get in there and back out by myself,\" she explained reasonably, but she wasn't able to look him in the eye. She was afraid of his rejection.\n\n\"You-you need me to help you into the shower and out?\" he said with the slightest squeak in his voice.\n\n\"Please?\" she asked, her embarrassment giving her a little girl's voice.\n\nIt was the cutest thing David had ever heard, but coming from this grown and completely naked woman, the raw sexuality hit him like a sledgehammer. His hands moved to cover the front of his shorts as his erection returned in record time. He saw her watching his hands with fascination.\n\n\"I... that might not be such a good idea,\" he forced out.\n\nHer hands moved to hide her breasts and pussy. \"I'm sorry, David, for offending you.\"\n\nHe saw shame slipping into her expression, and he reacted. \"NO! God no! That's not it at all!\" he barked, and she jumped at his volume, so he raised his hands. \"Sorry, I didn't mean to yell like that. I just... don't want you to get the wrong idea. I'm not offended! At all! You're incred-- gorg-- beautiful!\" He paused to catch his breath and settle his nerves before continuing. \"You're so very beautiful, and I-I'm just a man. I can't help but appreciate... this!\" he vaguely gestured towards her body.\n\n\"Oh!\" she squeaked, unfamiliar with praise. Her husband no longer said the words... or felt the sentiment. Warmth rushed through her body, and she smiled at him, her arms moving away from hiding herself. She saw his eyes return to her nipples, which felt hard enough to cut glass.\n\nDavid heard himself moan slightly and clamped his jaw shut.\n\n\"So, will you help me with my shower?\" she asked again with a hesitant voice. \"I don't mind if you look.\"\n\nHis eyes locked onto hers, and he saw the hope in her gaze. He found himself nodding, though he still thought the idea was madness.\n\nHer smile obliterated any further rational thoughts in his head.\n\n\"Should we take the bandage off to keep it dry?\" she asked.\n\n\"Yis-- I mean, yes!\" His mind was spinning, and he dropped to his knees before her to undo the elastic bandage wrapped around her ankle. He gently removed the clips and unwound it. He checked for bruising, and the swelling definitely seemed to have lessened. So far, so good.\n\nWhen he lifted his eyes, he realized he was mere inches from her pussy. He'd never seen one in real life, so his eyes were trapped by the sight. He'd expected to see hair, but she kept herself clean shaven down there, so he could easily see the lips were slightly puffy and wet. He picked up the scent of her excitement. He unconsciously licked his lips, and he saw her tremble.\n\nHe looked up at her face, and he saw she was biting her lower lip. He felt a spark shoot through his cock, and this caused him to stand before he did something; he didn't know what. He was so confused. Was she embarrassed or excited? Maybe both? He had no experience with women.\n\nHe thought once more about this year's camping trip and Cindy Parsons. They'd become very good friends over the past few years. This year they'd planned on getting some alone time and learning about sex together. That might have helped him know what to do in this situation.\n\n\"Are you going to wear your shorts in the shower? You could take a shower at the same time, as there's room,\" she suggested casually, but he could see her nervousness.\n\nHe thought about that. She'd already seen him naked and erect. She'd said she wasn't disgusted by what she saw. Without letting himself overthink it, he pushed his shorts down to pool at his feet. He was hard as iron, and he saw her eyes widen as her lower lip was trapped by her teeth once more. His dick jumped.\n\nHe quickly scooped her up into his arms before he lost control. She squeaked in surprise. \"Sorry,\" he said contritely and moved her carefully into the large shower stall. He was overly aware of how incredibly soft and warm her skin was, and her tits were spectacular from this close. One was pressing against his chest, and he felt his cock throb with need.\n\n\"You can set me down here,\" she said, and he carefully eased her down onto her right foot. With a smile, she turned the shower controls, and the water poured from the spout on the floor. She lifted her dangling foot under the water to confirm the temperature. Then, once she was satisfied, she pressed a button on the wall.\n\nWater hit them from three directions, and David made a surprised sound. They chuckled at that, then let the hot water run over them to get good and soaked. She pressed another button to ease the water flow. Turning to the soap dispenser, she tried to pump some body-wash into her hand, but she needed one hand to brace herself. She looked at him, and without words, he reached out to get some soap in his hands. He ran them over her shoulders and down her back.\n\nMelody sighed at the feeling of his big strong hands touching her body. She'd just wanted him to press the nozzle on the soap dispenser for her, but this was so much better!\n\nHe got more soap on his hands and ran them down her right arm, then the left, ensuring he soaped up her armpits as well. More soap and he moved to her back once more and worked his way down. He ran his slippery hands over her ass, and she actually cooed. He smiled to himself as he moved down her legs. He was careful with her injured ankle then he stood up once more.\n\n\"My front... don't forget my front,\" she blurted breathily.\n\nHe froze. She wanted him to wash her tits? His hands were already moving to the soap pump before his thoughts caught up. From behind, he reached around and stroked her shoulders, throat and slowly moved his hands down her body. She leaned back against his chest, her slick, soapy back now washing his chest and stomach. He did his best to keep his pelvis back so as not press his cock against her.\n\nDavid's hands slipped down over the tops of her full breasts. He slid his hands down their sides, and Melody rested her head back against his shoulder as she sighed. He cupped her tits in his palms, and her free hand rose to guide his fingers to her nipples. Both of his hands picked up the motions until he was sliding his thumbs down and his fingers up to stroke and tug her nipples. Her ass was arching back to reach his pelvis, which was uncomfortable for both of them, so he straightened his posture, and this forced his hard cock between her thighs. She gasped at the heat and squeezed her legs together around his girth. God, he felt so good! The idea of this being driven up inside her sent thrills and chills down her spine.\n\nHer free hand moved down to cup the head of his cock, all pretenses of washing gone, as she pressed it up against the heat of her pussy.\n\n\"Oh my god, Mrs. Dawson--\" he moaned.\n\n\"Melody!\" she gasped as the strength of his hard cock was rocketing her closer to her release. This was so incredibly sexy! She hadn't felt this excited... ever!\n\n\"Melody! You're going to make me cum!\" he gasped in return as he squeezed her tits in his hands.\n\nShe was right there! His big hands were driving her crazy, and her hips rocked faster to stroke his hot cock against her pussy lips.\n\n\"Ah! David! So good!\"\n\nThat was all the encouragement he needed to begin pumping his cock between her trembling thighs. His left arm wrapped around her chest, cupping her right tit in his hand, fingers squeezing and pulling her nipple as his right hand moved down her body to take hold of her left hip. He used his stomach muscles to power his thrusts, which slapped her ass again and again. The hot, thick head of his cock was rubbing her clit with each stroke.\n\nMelody felt captured by his strength, and her mind was lost to her pleasure. \"Cumming, David! I'm cumming!\"\n\n\"Melody! I-- ffffuuuuuccckkk!!!!\" He wasn't able to say anything else as his hot cum splashed into her cupped hand. He ground himself against her ass as he gasped for breath.\n\nThe delicious pressure on her spanked ass was the final straw, and Melody lost herself to her orgasm, which crashed through her senses. When she began to come back from the bliss, she felt the heat of his cum in her fingers, so she lifted the hand to look at the sticky substance. Another man's cum! She'd only tasted her husband's once, decades ago, and he'd been so revolted she'd done it, he hadn't let her do it since. Rebellion surged through her as she slipped her sticky fingers into her mouth to suck them clean. She ran her tongue over her palm and between the digits to get all of it. There was so much! She felt so incredibly naughty! Her pleasure spiked again, and she moaned.\n\nWhen David's mind came back to him, he felt Melody clinging to his arms as most of her weight was being supported by him. Her entire body was trembling.\n\nHe realized he'd just had sex with a neighborhood mom! A married woman! He frowned as he considered those words. This had been closer to mutual masturbation, right? Still, highly irregular behavior. He supposed that he could still be considered a virgin as he assumed this didn't count as sex for that.\n\n\"Thank you, David. That was wonderful! Could you set me down on the bench so I can catch my breath?\" she asked as she panted softly.\n\nHe shifted her body in his arms and sucked in a breath as his semi-hard erection slipped out of the grip of her thighs. He carefully got her into his usual carrying position before taking her to the end of the shower, where he gently set her down on the bench.\n\n\"You're still hard?\" she gasped as he stepped back from her. She ran her eyes down his body, tingling at how powerful his muscles looked.\n\nHe looked down, and his erection wasn't as firm as it was before, but it didn't seem to be relaxing. He smiled hesitantly at her. \"I'm still in a shower with a beautiful naked woman. I've never experienced anything this exciting before. It's not likely to go away until tomorrow.\"\n\nMelody burst into happy laughter as she looked into his smiling eyes. \"You're such a charmer!\"\n\nGrinning, he moved back under the shower heads and got the water going again. Then he pressed the button to reduce the flow and washed his body from head to toe. He was conscious of her watching him, so his erection refused to calm.\n\nDavid found the shampoo and washed his hair. Then he got the water going once more and rinsed his hair and body. When he was done, he slowed the water and moved back to Melody. \"May I wash your hair?\"\n\nShe was watching his cock bob and sway, water dripping from it. \"Huh? Oh, yes!\" she blinked at him.\n\nHe returned her back under the shower's spray and wet her hair, then lathered it as he massaged her scalp. She purred happily under his hands. He loved how long and thick her hair was, so maybe he spent a little more time than was necessary. She didn't seem to mind as he finally rinsed the conditioner from her locks.\n\nWhen he turned off the water, she pouted slightly, but he carried her out, wrapped a thick towel around her and rubbed her dry as her happy smile returned.\n\nShe sat down on the toilet lid while he grabbed a towel of his own and threw it over his head to dry his hair. He vigorously rubbed until he felt the fingers wrapping around his cock. He froze and lifted his towel to look into Melody's eyes. She seemed a little unnerved by her own bold actions.\n\n\"May I?\" she asked quietly.\n\nHe nodded nervously.\n\n\"As I said, I've never seen an uncircumcised cock before. I've certainly never seen anything this big. It's wonderful!\"\n\nHe trembled at the feel of her fingers gently stroking his cock. When she slid his foreskin back to expose the head of his cock, he gave an involuntary moan.\n\nHer hand paused. \"Did I hurt you?\"\n\n\"No. That feels intensely good!\" he admitted.\n\nShe suddenly released him as she realized what she was doing, she sat back and rubbed her towel across her arms as a troubled expression settled across her features.\n\nHe looked at her nervously. \"What's wrong?\"\n\n\"You should be experiencing this with someone you like who's your own age. This isn't something you give away to an old housewife. I don't want to steal this experience from you,\" she said sadly.\n\nDavid frowned. \"I thought there was a possibility of that happening with someone I liked at school, until the day of the fight. Then I discovered my friends weren't real friends. My alternate plan involved the trip to the theme park to see Cindy, but that fell through. I only get to meet her once a year. Tuesday, I go back to school to face the people who treat me like some kind of freak. You aren't stealing anything away from anyone. More importantly, I don't think of you as an old housewife. You're more beautiful and far sexier than any of the girls I've met at school. If you'd be willing to spend some time with someone like me, that would be a dream come true.\"\n\nMelody's cheeks were burning from the compliments he'd given her, but she was still troubled by something he'd said. \"Someone like you?\"\n\n\"Hairless donkey balls baby boy,\" he said, using a term Jeff used to describe him.\n\n\"Perhaps I'm not the only one with a poor self-image,\" she said with a gentle smile. \"That's not at all an accurate phrase to describe you. You're dreamy!\" She giggled at David's surprised expression.\n\nThey finished drying themselves as they gave each other admiring glances. Melody dried her hair with her hairdryer and teased David by aiming the hot air at him from time to time. His hair was short enough that he didn't need to use the blow dryer.\n\nMelody winced and sucked in a sharp breath when she put pressure on her left foot without proper attention. David looked at her in concern. She gave him a weak smile. \"The pill I took during the night is fading.\"\n\nDavid knew that she was in no state to continue their intimacy at the moment, so he parked his desires. \"I'll get dressed and head over to the drug store, immediately. Uh, you should probably give them a call to let them know I'm coming. Before I go, I'm going to ice the ankle, then rub the ointment on it and wrap it once more.\"\n\n\"I'll need to get dressed, too,\" she said with a small smile, and he looked up from her tits with a guilty smile.\n\nHe once more picked her up in his arms and carried her into the bedroom to set her down on the bed to lean back against the headboard.\n\nWhen he stepped back, she saw he was becoming erect once more, and she marveled at his energy. \"Is that going to ever relax?\" she said with a grin.\n\nHe glanced down in embarrassment. \"Maybe when we're dressed?\" he suggested.\n\n\"Can you select some panties and a bra for me?\" she asked, trying to hide her smile.\n\nHe froze, then walked over to the bureau and opened the drawer of silk treasures. Once more, his hands automatically plucked out some of the sexiest lingerie he'd ever seen. Fire red this time. This did nothing to relieve the throbbing in his cock.\n\nWhen she saw what he'd selected, she couldn't contain her delighted smile. \"You pick all my favorites!\"\n\nHe gave her a nervous smile, then he helped her slip her panties on past her ankles. She took over when he reached her knees.\n\nDavid immediately turned his back and went to get clothes from his duffle. He tugged on the underwear, t-shirt, cargo shorts and socks.\n\nWhen he turned back to the bed, he froze once more. Her breasts were lifted and squeezed to show off a fantastic amount of cleavage. He felt himself throb once more. \"Damn!\" he gasped quietly, but she heard him, and a smile lit up her face.\n\n\"I'll be right back,\" he said as he grabbed the icepack and rushed out of the bedroom. He went to the kitchen, dumped out the warm water, and reloaded the icepack.\n\nBack up the stairs again, he followed through on the treatment he said he'd do for her ankle. Before rubbing the ointment on, he examined the swelling, and it seemed a little less puffy though the bruising was beginning to show up in all its technicolor glory. He gently rubbed the cream in, watching for signs he was hurting her, but it seemed he did a better job today as there was no flinching at all. He wrapped the ankle and sat back. He was relieved his erection had calmed during the process.\n\n\"Could you get me the tracksuit again?\" she asked.\n\nHe did, and helped her get the pants on. As she put the jacket on, he got her the phone handset.\n\n\"Do you know where McCleary's pharmacy is?\" she asked. He nodded, so she called and spoke to the pharmacist to let them know David was running this errand for her. He stuffed his wallet and keys into his pocket.\n\n\"Okay, they're expecting you. Can you take me down to the kitchen before you go?\" she asked, and got a nod.\n\nHe scooped her up in his arms and gently carried her downstairs, stopping by the washroom to let her go before he left. He set her up on a chair in the breakfast nook with her foot up on a second chair. He got her the phone handset and her tablet so she could catch up on the news while he was out on the errand.\n\n\"Oh! Could you turn the radio on, there on the counter? I don't like a silent house,\" she said.\n\nHe nodded and pressed its power button. Soft music began to fill the room.\n\n\"I'll try to get back as quickly as I can,\" he said.\n\n\"Thank you,\" she replied and noticed he was hesitating with a concerned look on his face. That brought another smile to hers. \"Go! I'll be fine here until you get back.\"\n\nHe nodded and headed out.\n\nMelody relaxed back against her chair and felt a warm glow fill her body. David was such a breath of fresh air for her soul... and libido! She hadn't felt this sexy in years.\n\nThat said, she really had to try to get a handle on her behavior. While David indicated he would welcome her attention, she had to be the responsible adult. She was twice his age, and married.\n\nGiving herself a shake, she powered up her tablet and pulled up the weather app. It looked like it was going to be another beautiful day. Maybe she could convince David to join her on the patio. He could put her lotion on with his big strong hands. Tingles cascaded through her body, then she snorted.\n\nSo much for being the responsible one! Shit! That hadn't lasted a minute.\n\nGlancing back at the tablet, she pulled up the weather report for Scottsdale and smirked. There would be record high temperatures for the next few days. So much for his enjoyable game of golf!\n\nThen she had an unpleasant thought.\n\nWhat if he decided to come home early?\n\nShe dialed his cell before she thought about what she was doing.\n\nAfter the third ring, he picked up. \"What?\"\n\nSuch a lovely greeting. \"I-I just called to see how your golfing weekend was going. I saw the weather was scorching there.\"\n\n\"That's why we're golfing early in the day. Your call is interrupting our game,\" he said curtly.\n\n\"Sorry, I'll let you get back to your play--\"\n\nThe sound of his phone being fumbled came through the earpiece as his voice moved into the background. \"Fuck! You see what I have to deal with? I'm in no hurry to get back to that--\" There was a burst of laughter from his friends, and the line went dead.\n\nShe stared at the phone as tears threatened to fall. Then came the anger. Fuck him!\n\nShe struggled to get her breathing under control as her throat felt tight. She'd had enough. Tuesday morning, she was going to her lawyer's office to file for divorce. She'd given too many good years to that cold fish!",
        "She sat and watched the morning sunlight paint the backyard as she took deep, slow breaths, trying to loosen the knot of tension in her chest. Her mind latched onto the lyrics of the song playing in the background.\n\n\"...But I'll repeat myself at the risk of being crude\n\nThere must be fifty ways to leave your lover...\"\n\nA slow smile spread across her face as she recognized Paul Simon's famous song from 1975, filling her kitchen with its timely message. It suddenly felt like the universe was on her side again. The knot eased, and her calm returned. Now that she'd made a decision to find her own happiness, and had a definite sign the Fates had her back, she felt a sense of... exhilaration? Yes! She was actually excited about what the future might bring. She sat back to enjoy the rest of the song.\n\nChapter 4\n\nDavid was on pins and needles. He desperately wanted to get back to Melody. He was worried she might try to move by herself and injure herself even worse.\n\nHe also wanted to get back to her as he knew she was wearing those incredibly sexy underthings!\n\nHe walked back to the pharmacy counter and presented the form to the pharmacist, Mr. McCleary, behind the counter. \"Hi, here's the prescription Mrs. Dawson received from the hospital last night.\"\n\n\"What happened to her?\" the older man asked in concern.\n\n\"Uh, she was standing on a footstool, fixing some drapes, and fell. She badly sprained her ankle,\" he explained.\n\n\"Poor dear,\" the man said then read the script. \"Just give me a few minutes.\" He walked to the back.\n\nDavid wandered back into the aisles and found himself standing next to the condoms. He suddenly reached out and plucked a twelve-pack of lubricated Trojans, extra-large, from the shelf. He went to the cash and froze as he saw the last person he wanted to see, working as the cashier.\n\nBecca.\n\nShit.\n\nIt was too late to back down as she saw him approaching. Her smile was condescending, but he felt oddly calm.\n\nHe suddenly realized how little she meant to him. She'd shown her true self last week, and it wasn't pretty. That just made it easier to ignore her smirk.\n\n\"Well, if it isn't David Donkey Balls,\" she remarked, obviously feeling quite witty.\n\nHe put the box of condoms on the counter, and her eyes widened. Then came the shrill laughter. It echoed across the store.\n\nDavid started to get mad then his mind flashed to this morning's time with Melody, a woman who didn't see him as a child but a grown man, who didn't see any fault or flaw in his body but believed it was sexy. What did she call him? Oh yeah. Dreamy.\n\nSuddenly, the opinion of this immature girl just didn't matter. His anger dissipated like mist. Becca's opinion no longer had any value. He didn't say anything as he waited for her to stop.\n\nAn older woman stepped out of the store's administrative office with a frown of annoyance on her face. David caught her eye, and the woman approached. When Becca saw who was joining them, her laughter choked off abruptly. Interesting.\n\nDavid spoke to the older woman. \"Are your employees always this rude to customers?\"\n\nBecca's eyes suddenly narrowed in anger and worry.\n\n\"Is there a problem, sir?\" the manager asked.\n\nBecca tried to salvage the situation. \"This is just David! We go to school together.\"\n\nThe manager looked at David. \"You're a friend of Rebecca's?\"\n\nDavid looked at the girl he once fantasized about having as a girlfriend. She'd killed that when she sided with Jeff to ridicule him in front of all of his friends.\n\n\"No. She's not a friend.\"\n\nBecca's eyes flared with desperation and anger as her manager frowned.\n\n\"But you know her?\" the older woman pressed.\n\nDavid sighed. \"Not at all, it seems. I thought she was better than this, but she's just a disappointment.\"\n\n\"Complete his purchase, with a ten percent discount, then come back to my office.\" The woman turned to David. \"I'm terribly sorry for the rude behavior.\"\n\nDavid smiled graciously at the woman. \"Thank you.\"\n\nShe returned the smile, and her eyes lingered on his broad chest for just a moment before she turned and rushed back to her office.\n\nBecca was staring daggers at him, but again, she didn't matter. \"Don't take all day about it.\"\n\n\"Such a dick,\" she mumbled.\n\n\"Excuse me? Did you say something to me?\" David asked politely.\n\nHis calm seemed to crack her nerve. \"I said you're a dick!\" she snapped, a little too loudly as the manager was still standing in her office doorway. Her frown became a glare.\n\nDavid reached forward and gently tapped the label on the condom pack. \"I'm extra-large.\"\n\nHer eyes widened, and she involuntarily glanced down at the front of his shorts.\n\nHe snorted quietly, and her face burned.\n\nShe quickly rang through his purchase, with the discount, and stuffed the box into a shopping bag.\n\n\"Thank you,\" he said as he accepted his change. He saw the unshed tears in her lashes, but she'd brought this grief upon herself. He felt no remorse for her.\n\nHe took his bag and walked back to the pharmacy counter, putting Becca out of his mind. He actually felt lighter.\n\nAfter a short wait, the pharmacist gave him a curious look as he approached. \"Everything okay, sir?\"\n\nHe smiled. \"Yes, everything is great... aside from Mrs. Dawson's ankle, that is. Thank you.\"\n\nThe man smiled happily and lifted the envelope containing the bottle of pills. \"These will ease her pain as she heals. No more than four a day.\"\n\nHe nodded thoughtfully and accepted the envelope.\n\n\"I've added this to her account. Please give my regards to Melody,\" the man said kindly.\n\n\"I will, thank you,\" he said as he dropped her envelope into his shopping bag.\n\nHe walked back to the front door and noted Becca hadn't returned to her cashier station. Probably still getting chewed out.\n\nOutside, he saw a police car parked next to his truck. He saw glass on the ground below his front headlight. He frowned and approached the police car. He stopped when he spotted Becca sitting in the back seat of the cruiser, crying. She busted his headlight?!? He looked at the curb next to his truck and saw the chunk of paving she'd likely used to break it. The police got out of the cruiser.\n\n\"Is this your truck?\" he asked.\n\n\"Yes, sir.\"\n\n\"Would you happen to know why Ms. Langley decided to bust your headlight as I was driving by?\" the officer asked.\n\nIt was easier to just shake his head as the truth was too stupid to repeat.\n\n\"I'll need your details,\" the policeman said, and David dug out his driver's license, registration, and insurance and handed them to the man who got back into his cruiser.\n\nTen minutes later, the officer got out and handed the documents back.\n\n\"I'm taking care of my neighbor, who injured her ankle. I've been away too long. Can I go?\" David asked.\n\n\"Yes, sorry, sir. We'll contact you once we've contacted Ms. Langley's parents,\" the man said.\n\n\"Thanks,\" David said and quickly got into his truck and drove away.\n\nHe'd have to get the headlight fixed soon, and Becca was going to pay for that. He recalled her previously mentioning how strict her parents were. Being driven home by the police was going to top off a shitty day for Becca.\n\nShortly, he pulled into Melody's driveway. He grabbed his shopping bag and rushed inside.\n\n\"I'm back! Sorry it took so long!\" he called out.\n\n\"I need to use the bathroom!\" she called out from the kitchen.\n\nHe rushed into the room and tossed the shopping bag onto the table. The condom pack bounced and slid free of the bag.\n\nMelody's eyes locked onto the package and then lifted to see his mortified expression. A smile slipped onto her lips. \"I didn't know you were a boy scout.\"\n\nHe shook his head in bewildered confusion as he saw her amusement in relief.\n\n\"Be prepared.\"\n\nHis face flushed. \"I-I don't have any expectations.\"\n\nShe just gave him a knowing smile, so he lifted her in his arms once more and carried her to the bathroom, where he waited for her to do her business.\n\nHe returned her to her seat in the kitchen and got her a glass of water so she could take her pill. \"No more than four a day,\" he said earnestly, and she nodded to him with a small smile.\n\nHe fidgeted then pointed to the stove. \"Would you like me to make us some breakfast?\" He glanced at the clock. \"Or brunch, I should say.\"\n\n\"What can you make?\" she asked curiously and saw him relax.\n\nHe grinned at her. \"I have a bunch of dishes Mom taught me how to make. Breakfasts are easy. Eggs and bacon, toast, and juice?\"\n\nShe nodded to him with a happy grin, so he headed for the fridge to get the ingredients. She had to tell him where her cookware was, then she watched him occupying himself with the preparation of their meals. She couldn't get over how big he looked standing before her stove.\n\n\"How did it go in the pharmacy?\" she asked.\n\n\"Oh! The pharmacist said he put the prescription on your account and sends his wishes for a speedy recovery,\" David said over his shoulder.\n\n\"Mr. McCleary is such a nice man,\" Melody agreed.\n\n\"I-I bumped into that girl from school I used to like. She was the cashier.\" He looked over to see Melody watching him with an interested expression. He turned back to the cooking food. \"When I went to buy the condoms, she laughed at me, loud enough to bring the store manager out to see what was going on.\"\n\nMelody's expression became worried. \"Mrs. McCleary has no sense of humor. How did that go?\"\n\n\"Not well for Becca. I got a discount, and I think she might have lost her job. Also, when I left the store, she was in the back of a police car because she broke my truck's headlight in front of the cop. She was obviously too mad to think straight,\" he sighed.\n\nMelody made a sound of dismay. \"Your truck was damaged, running an errand for me! Let me pay--\"\n\n\"No, that wasn't your fault. Becca will pay for the replacement, or her parents will. I'll take care of it,\" David said firmly as he transferred the food to the plates. With a satisfied smile, he carried the meals to the table and set hers on the placemat before her. He buttered the toast and poured a small glass of juice for Melody.\n\nThey ate their brunch as they appreciated the view outside the kitchen window.\n\n\"That's a perfect yard for a pool,\" David remarked.\n\nMelody nodded. \"Yes, but all I got was the patio, and that took years of cajoling.\" She wanted to change the subject before she got depressed. With the divorce, she was probably going to have to move. \"What exam are you studying for?\"\n\n\"History,\" he said with a grimace.\n\nShe clapped her hands together in delight. She was just a little giddy from the pain meds which had begun to kick in. \"I loved history in high school! I can help you with it if you'd like.\"\n\nHe looked at her gratefully. \"Any help I can get would be welcome. Some of it just doesn't stick with me. I mean, I've memorized a bunch of stuff and I'll likely get a passing grade, but my parents keep stressing that I need to bring my grade point average up to help me stand out amongst the other students when I graduate.\"\n\n\"I'd love to help you with this. When you're done, why don't you get your books and you can show me what you're struggling with,\" she suggested.\n\n\"Sounds good!\" David said and quickly finished up his meal. He cleaned up the dishes and table, then rushed upstairs to get his books.\n\nWhen he returned, he sat next to Melody and gave her a smile as he opened his notes.\n\nThey spent the next two hours reviewing the material, and Melody saw where he was stuck. She walked him through it and smiled when she saw the lights come on behind his eyes.\n\n\"Oh my god! I can't believe I missed how those events were related!\" he gasped.\n\nShe smiled. \"But you have it now?\"\n\n\"Yes! Thank you so much!\" he exclaimed.\n\nThe look of relief on his face was priceless, and Melody giggled.\n\nHe looked at her in appreciation. \"You've really helped me out here. I want to do something for you now! What would you like to do?\"\n\nShe looked out at her patio then had an idea. \"Would it be possible to take a swim in your pool?\" she asked timidly.\n\n\"Sure, but your ankle isn't really up to too much exercise. You'll have to take it easy, like resting on a pool float at most,\" he said thoughtfully. She nodded with a wide smile.\n\n\"I need to get changed into my bathing suit,\" she said and watched his face warm up again.\n\n\"Sure.\" He picked her up and carried her upstairs, setting her down on the edge of the bed.\n\n\"My bathing suit is in the bathroom on the counter,\" she said, and he immediately went and brought it back to her. She saw he had a distracted expression as he looked at the suit in his hands, and she wondered if he was recalling her in it the day before. He finally broke free from his daze.\n\n\"Do-do you need help?\" he asked.\n\nShe smiled and nodded, so he helped her stand in one foot while he eased her track pants down. There were those sexy red panties once more. He knelt as he eased the track pants off past her injured ankle. She sat so she could lift her other foot, freeing her track pants. He folded them neatly as he stood, tossing them to the mattress, his eyes passing over her body. He helped her to her feet once more, then immediately knelt before her as she began to slide the red panties down. He wondered why she hadn't just pushed them down with the track pants. This way was hotter, but he wasn't sure if that was her intent. Then his eyes were trapped by her exposed pussy. She released the panties, and their falling drew his attention down. His eyes flicked back up to her face and saw her smiling at him.\n\n\"David, you've seen pictures of naked women before. Likely lots of much younger, beautiful women,\" she asserted as she sat once again.\n\nHe looked at her in surprise. \"Y-yes, I've seen pictures. They don't really compare to seeing a beautiful woman in person.\"\n\nShe chuckled at his flattery. \"You are such a sweet young man!\"\n\nDavid heard young man and immediately felt like he'd been assigned to the kid's table again. He plucked the panties off the floor and dropped them on the bed as she lifted her feet. He accepted the bikini bottoms from her fingers and slipped them over her feet to slide them up her legs until she could take over. He stood once more, but Melody laid back on the bed and pulled the bikini bottoms up until they reached her ass. She began to struggle, so David put his hands on the back of her knees and pushed, lifting her ass off the bed.\n\nMelody squeaked as she felt his firm grip on her legs, and her mind took her to sexy places as she imagined him forcing her legs back to drive his cock deep inside her wet depths. Her face and chest flushed as she finished pulling the bottoms on.\n\nHe gently lowered her legs and spotted the extra heat on her skin. \"Sorry! It looked like you needed help.\"\n\n\"No, that was very helpful.\" She tried to rein in her imagination. Of course, he was just being helpful! \"Could you get my wrap from the closet?\"\n\nDavid opened the door, and she guided his hand to the gauzy black jacket she'd wear to hide the sexy bikini when he carried her over her to his backyard. He helped her stand, then she donned the jacket and cinched it closed. The bikini was still partially visible, but it wasn't so obvious.\n\nHe looked down at her ankle. \"I think we might be able to take the bandage off before we go to the pool.\" He helped her sit and lifted her leg to the mattress so he could unwrap her ankle. The bruising was just a little darker today, but the swelling definitely looked reduced. He felt it was safe to leave the wrapping off for now.\n\n\"Shall we go to the pool?\" she asked hopefully. He nodded and scooped her into his arms once more.\n\nShe sighed as he carried her down the stairs. He glanced at her content smile. \"What?\" he asked curiously.\n\n\"I could get used to this. I feel truly spoiled.\"\n\n\"Maybe you deserve a little spoiling,\" he said with a small smile on his lips.\n\nShe quickly glanced at him to see if he was teasing, but his expression gave nothing away.\n\nShe made him stop on the main floor to collect a beach bag from a cupboard in the kitchen. In this went a beach towel, her sunglasses, her steamy romance novel, and a bottle of sunscreen. He locked the back- patio door, then lifted her in his arms once more to carry her to the front door, where she grabbed her keys to lock up the house.\n\nLuckily, they didn't encounter any of their neighbors when he carried her out to the sidewalk, around the hedge, and back into his backyard. He recalled that most of his closest neighbors left town on the long weekend, so they practically had the neighborhood to themselves.\n\nWhen he reached his backyard, he set her up on a lounge chair under the shade of their pergola. She looked at him in question.\n\n\"I have to go upstairs and get my swimsuit on. Then I'll get us set up out here. I won't be long.\" He turned to leave.\n\n\"David?\"\n\nHe stopped to look back at her and saw she was biting her bottom lip again. That sent a tingle through his sensitive bits. \"Yes?\"\n\n\"Could you wear the blue swimsuit you wore yesterday?\"\n\nHis mouth opened as he realized she wanted to see him in the tight spandex swimwear. He only wore those when he was alone. He was going to say no, as he was embarrassed, but her sweet little expression of hope derailed his objections. \"Okay... fine.\" She flashed a happy smile at him.\n\nHe ran around to the front of the house and let himself inside, locking the door behind himself. He ran upstairs and stripped naked in his room. With a deep breath, he tugged the swimsuit on and looked down at himself with misgivings. \"She said I was dreamy,\" he sighed to himself to gain enough self-confidence to go outside... with her... wearing this. He knew she'd seen him naked, but somehow the tight material showing is contours was like... a sexy tease.\n\nDavid didn't want to leave her alone too long, so he grabbed a beach towel from the linen closet, a bottle of sunblock from the bathroom cabinet, and ran back downstairs to the kitchen to unlock the patio doors. He stepped outside, and her smile just got wider.\n\n\"Mmmm, David! You have an amazing body, and that swimsuit looks really good on you! This is so much better than those baggy shorts!\" Melody purred.\n\nHe blushed and smiled self-consciously at her, then he felt the tingles begin as he saw where her eyes were lingering. He forced his mind away from that for the moment.\n\n\"W-would you like to have dinner with me here tonight? I can make Spaghetti Bolognese for us.\"\n\nMelody's eyes twinkled with delight. \"Ooo! That sounds delightful! It's a date!\" She chuckled quietly at the flush that rose on his face.\n\nHe nodded, then stepped back inside the house to pull a package of chopped meat from the freezer to thaw. He quickly confirmed he had the rest of the ingredients, but realized he should pick up a baguette. He could pop over to the grocery store for that, later. Maybe he'd pick up the replacement headlight on the way back.\n\nDavid rejoined Melody and carried one of the lounge chairs and her beach towel from the shade to a sunny spot next to the pool. He placed the towel over the chair, then moved Melody to that chair. Finally, he carried over another lounge chair for himself and draped his towel over it.\n\nBefore he could sit down, Melody caught his attention. \"We need to get some lotion on you!\"\n\nHe caught the twinkle in her eye, so he nodded slowly. \"As long as I may return the favor.\"\n\nMelody grinned and nodded. \"But you first. Your skin looks like it might burn faster than mine.\"\n\nHe nodded wearily. \"Yeah, I burn pretty quickly.\"\n\nAt her direction, he carefully sat on the edge of her chair and sighed as he felt her soft hands massage the sunblock into his skin, starting at the back of his neck, moving over his shoulders and down his back."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "50 ways",
        "dominance",
        "first time",
        "mature",
        "romance",
        "submission"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/melody-for-a-long-weekend"
}