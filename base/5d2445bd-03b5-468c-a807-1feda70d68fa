{
    "title": "A New Way of Seeing Things Ch. 12",
    "pages": [
        "(This story takes place in a fictional world. Any similarities to people or things in the world we actually live in is coincidental.) \n\n*\n\nAlison listened patiently as she was briefed by her mother that Thursday evening, nodding agreeably about the importance of checking the barn doors prior to lights out before shooing her parents into their SUV and on the way to Gulf Shores. Traffic was lighter than expected, and even with a leisurely stop for dinner, the couple found themselves pulling into the semi-circle entryway of the Gulf Gold Resort and Spa before midnight. \n\n\"Every bit as glitzy as KD said it was,\" Tim murmured as the valet pulled away with their truck. Gwen nodded and looked about the opulent lobby, hoping to catch a glimpse of her daughter. She knew KD's next shift would not be until the morning, but she still hoped with a mother's optimism that her daughter might appear. \n\n\"Nelson, checking in,\" Tim announced to the young clerk currently behind the massive marble-topped front desk. \n\n\"Oh yes, KD's parents. We've been expecting you. Your daughter has instructed us to treat you as just above VIP status,\" the cocoa-skinned woman said with a smile. \"She also asked if you would meet her for breakfast at the hotel's caf\u00e9 tomorrow morning, around 7, before her shift starts?\" The woman signaled for a bellhop and handed Tim a packet of information. \"John will show you to your room. If you need anything, please don't hesitate to ask. As I said, KD has made it clear to all of us that your wish is our command!\"\n\nThe bellhop, the Nelsons, and their bags rode the elevator to the sixth floor, where they were shown an elegant oversized room complete with sitting area. John was tipped and sent on his way, and the couple quickly unpacked before getting ready for bed. Tim was dismayed to find Gwen had brought along one of her old nightgowns and was even now retiring to the bathroom to put it on, but he said nothing, knowing that no good could come from it. His wife, however, returned to find him completely nude, apparently unconcerned they were in a strange hotel room. \n\nGwen found herself wishing she could lose the nightgown and be more like her husband, but tradition said that extra care must be taken in strange places. What if there was a fire? She smiled at the grim humor of being down in the parking lot, naked in front of all those strangers, but she dismissed it and fell asleep with the now-restrictive gown still covering her. \n\nShe showered and dressed the next morning before Tim had even awoken, quietly sliding open the slider to their privacy-screened balcony and stepping outside. A beautiful view of a strand of beach with the waters of the Gulf beyond, just now sparkling with the first light of sunrise off to her left, greeted her. Gwen knew that the room must have been very expensive, and reminded herself to admonish Tim for the extravagance. \n\nShe startled as a pair of hands wrapped around her waist while lips kissed her neck. \"G'morning,\" Tim mumbled in her ear. \n\nGwen turned to face him and return the kiss, his flaccid length dragging across her hip as she turned. \"Tim!\" she shrieked as she pushed the naked man backwards through the open doorway. \"What if someone sees you like that?\"\n\n\"They'll look at the beautiful woman I'm with and be jealous because I was about to get lucky. Would they be right?\" \n\nGwen closed the door and curtain behind her. \"You're going to get us kicked out of here and KD fired,\" she grumbled. \"No time for 'getting lucky' right now. Go take a shower and get changed so we can go down to breakfast and see our daughter, or have you forgotten why we're here?\" \n\n\"Oh, I haven't forgotten,\" Tim replied airily, \"but I think there's room for more than one reason to be here.\" Still, he complied with her wishes and the couple made their way down to a table outside of Lolabelle's to sit and have coffee while they awaited their daughter's arrival. \n\nKD breezed onto the terrace on time, the trio exchanging greetings and hugs while a waitress hurried up to the table, ready to take their order. \n\n\"So, did you guys have anything you wanted to do while you were here?\" their daughter asked as she took her first sip of coffee. \n\n\"Not really,\" Tim answered. \"Sit by the pool, walk on the beach, typical old-fogey tourist stuff.\"\n\n\"We know you have to work,\" Gwen said hurriedly, \"but we were hoping we could at least have dinner with you?\"\n\n\"Absolutely! How about here tonight? The chef is really good, and I get my resort discount.\"\n\nThat's fine with us. How about tomorrow night? Do you have a favorite place you would want to go?\"\n\n\"Well, there's The Trellis, a couple of miles from here, but they're really expensive. Appetizers start at eighteen bucks. I don't think I could afford it.\"\n\n\"Of course you can't afford it!\" Tim snorted. \"If you could, we'd make you pay your own way through college. We've got dinner tonight and tomorrow.\" KD gratefully accepted, and she chattered away, giving her parents a list of things they might want to see or try. \n\n\"Oh and by the way, the hotel has two pools\u2014a family pool over on the far side of the property, and an adults-only one just down that walk over there. The family pool can be kinda loud, but the adult can be a little more, uhh, casual. I'm not sure you'll like it Mom, so the resort's section of beach is a good place to go if it the family pool gets a little hectic for you. Wherever you go, just show the attendant your room card and they'll get you anything you need.\" KD glanced at her watch. \"Oops, gotta go. I'll meet you back down here at 6?\" \n\nTim and Gwen watched their khaki-and-polo shirt clad daughter hurry off, then sat and finished breakfast as the first sun worshippers strolled by on the way to the pool or the beach beyond it. The couple took their own walk around the compound before heading back to the room to change and pick up the beach bag. \n\nTim was again disappointed to see Gwen had brought a one-piece as her suit for the weekend. Still, he couldn't complain. He had seen more of his wife in the past few weeks than he ever thought he would, and with any luck, might get to see it all of her, up close and personal, later.\n\n\"Family or beach?\"He asked as the elevator doors opened at ground level.\n\n\"They all looked nice, but I'm not sure I'm up for all the splashing and yelling at the family pool,\" Gwen reasoned. \"I wonder why KD tried to warn me away from the adults-only one? It seemed perfectly fine when we checked it out after breakfast.\" She thought for a moment. \"Let's try the adults-only, and if we don't like it, we can head for the other one and go to the beach after lunch.\" Tim led the way, and soon they were standing next to an umbrella-covered table and chairs, attendants anxiously buzzing around them with towels and offers of refreshments. \n\nGwen scanned the expansive pool deck before removing her wrap. The few hotel guests that had arrived so far represented a wide range of shapes and sizes, most of the men clad in shorts while the women wore bikinis of varying colors and styles. Her gaze swept across a far corner, then snapped back. Two women lay semi-reclined, faces looking up into the morning sun. What she had taken to be bikinis were actually tanlines. Their tops had been discarded, and thin strips of fabric peeked out from the junction of their thighs, nothing but string sitting high on their hips to hold it in place. The Lady sat open-mouthed on her shoulder, aghast at their shamelessness. They must know everyone could see them, and yet they lay there without a care on the world. Gwen looked about as discretely as she could, half expecting to see all of the men staring at the display at the other end of the pool. To her surprise, it seemed as if nobody even noticed\u2014even Tim was putting on a good show of appearing engrossed in his book. Now she understood why KD had tried to steer her away from here, and thought that perhaps the other pool was the safer place to be after all.\n\nNo, Gwen told herself, if they're not embarrassed and uncomfortable, why should I be? If they want to advertise themselves that way, it's not my problem. She sat down and leaned back, book open but unread as her sunglass-covered eyes furtively darted about looking for any signs that the nearly-nude women might come to their senses, or that hotel management might ask them to cover up. Instead, the women casually flipped from front to back, the string running between their cheeks making it evident fabric was not a major contributor to the price of their swimwear. Trips to the pool for cooling dips made their breasts glisten while the wet patches of fabric between their legs molded obscenely to their sexes. \n\nAs the morning wore on brevity became the norm rather than the exception, tops discarded by many of the female guests while bikini bottoms and less at least allowed them to pretend they were not completely naked. Men came in with scandalous swimwear as well, tiny briefs that accentuated as much as hid the packages between their legs. \n\nGwen thought she caught Tim looking at the female flesh on display once, but the Slut assured her he was just taking a break from his reading, and there weren't many places he could look without getting an eyeful of oiled up boobs. She knew she couldn't get too upset with him if he had been, as she had occasionally found herself studying the bulges of several men she had to admit were rather handsome, idly wondering if all penises looked like her husband's, and if the briefs the men wore made them look larger than they really were. \n\nShe stood and stretched just before lunch. \"I'm going up to the room for a minute,\" she announced as she adjusted her wrap about her. \n\nTim looked up from his book. \"I can go with you.\"\n\n\"No, you stay here. I'll be back. Order us some lunch\u2014you know what I like.\"\n\nTim grumbled in agreement, wishing she would have invited him to accompany her and perhaps spend some time together while there. The sight of mostly-naked women all around him had inflamed a growing need for release. Plenty of time for that later, he reminded himself, a little worried that Gwen's overactive sense of modesty in her daughter's hotel was not going to allow her to make the time he was hoping for. \n\nShe made her way to the elevators, avoiding the lobby because of her lack of clothing despite wanting to at least glimpse KD at the front desk and maybe wave. Besides, she was on a mission, a decision she had made before leaving the pool. \n\nGwen returned twenty minutes later. \n\n\"I ordered you a salad and a seltzer\u2014\" Tim looked up to watch his wife remove her wrap and reveal skin, more of her skin than he had ever seen in public before, the bikini that had been reserved for their swims at home now on display to the other poolgoers. \n\n\"I thought I looked like a grandmother out here,\" she mumbled. \"Am I showing too much?\" \n\n\"No, no, it's fine,\" Tim quickly assured her. \"There's much, much more being shown out her today,\" he added in a low voice, instantly regretting his choice of words. The last thing he wanted was for his wife to know he had been looking...\n\nGwen smiled. \"So you noticed?\"\n\n\"I noticed, but one of it compares to you.\"\n\nShe rolled her eyes and settled into her chair, self-consciously crossing her legs and arms. \n\nKD stopped by shortly after their lunch had arrived. Gwen quickly covered up, but not before their daughter did a double-take at her mother's choice of swimwear. She said nothing, instead ensuring all their wants and needs were being taken care of before hurrying back to the front desk. Gwen in turn worried what her daughter might be thinking of her mother's immodesty, and wondered if she had let her new attitude take her too far. \n\nThe couple spent the rest of the afternoon alternating between the sun and the shade, Gwen daring to enter the pool twice despite the Lady warning her a wet suit might reveal something, the Slut hoping it would. Constant monitoring of the crowd revealed several discrete glances cast in her direction, including some by a couple of the handsome men she had been admiring earlier.\n\nMuch to Tim's satisfaction, a quick lovemaking session followed their return to the room that afternoon. Despite his efforts, Gwen's nerves prevented her climax, thoughts more on whether the door was locked and curtains drawn rather than the feel of his hands. She did her best to hurry him to his own orgasm, then dressed and napped before they began preparations for dinner. \n\n\"I believe my daughter made reservations, Nelson, party of three?\" Tim said as they stood in front of the hostess station at Lolabelle's. \n\n\"\"Oh yes, KD's parents. Follow me, please.\" The tall blonde led them to a table overlooking the beach where the last of the sun worshippers were trudging up towards the hotel. \"Danielle will be your server, and she'll be along shortly. Enjoy your meal!\" \n\nKD slipped into an empty chair as soon as the hostess left the table. Danielle appeared a moment later, and the drink order seemed to be at the table seconds after it had been placed. \"A beer for you sir, a glass of wine for you, ma'am, and diet soda for you, KD,\" Danielle said with a smile. \"No underage drinking here, especially by the employees.\" The two girls laughed, sharing an inside joke. \"And the bartender sends, with his compliments, two pomegranate martinis.\" \n\n\"Those are the house specialty, everyone up and down the beach comes in for them,\" KD told her parents. \"At least, from what I've seen.\" \n\nTim gave her a knowing smile. \"I'm not much on fruity drinks,\" he said, pushing his over to Gwen. \"maybe your mother would like mine?\"\n\n\"You know I'm not much on drinks at all,\" Gwen demurred, \"but I do like pomegranates...\" she took a small sip from her glass. \"That's pretty good,\" she admitted. \"I can't taste any alcohol. KD, please thank your friend for the drinks and for making them so weak.\" She took another sip.\n\nThe family ate a leisurely meal, her parents listening to KD's stories of life at the resort, of all the gossip and minor celebrity watching. KD in turn watched in amusement as her mother worked her way through the cocktail as well as her wine before tackling Tim's martini. She discretely signaled Danielle for another when she noticed how quickly her mother was working through the one in front of her. \n\nGwen smiled at the glass that seemed to magically appear and began to rock a bit. Maybe there's a touch more liquor in these than I thought, she decided. Her skin tingled and extremities numbed while a feeling of well-being lightheartedness enveloped her. Thoughts, nasty thoughts, began to run through her mind, despite her daughter sitting next to her. Maybe tonight was the night to take Tim down to the beach...\n\n\"Dad, you might want to take Mom back up to the room,\" KD said with a little laugh after the plates had been cleared. \"I think she really enjoyed the pomegranate martinis.\"\n\n\"My compliments to the bartender,\" Gwen slurred as she concentrated on raising the mostly empty glass. \"These would be better at breakfast than orange juice!\" \n\n\"Uh-huh,\" KD grinned. The trio rose. \"Stop by the front desk when you two get up. We can make plans for tomorrow night.\" Mother and daughter hugged, KD getting a heartfelt \"I love you,\" whispered in her ear before Tim gently guided his wife towards the nearest set of elevators. \n\nGwen hummed to herself as they ascended the six floors, wobbling and grabbing the rail every time she closed her eyes. The doors opened, and Tim led her to their room, gently holding her arm as she entered. \n\nShe turned to him as soon as the door was closed. \"I got an idea. Let's go down on the beach and do it!\" \n\nTim smiled. \"By 'it', I'm guessing you mean have sex?\"\n\n\"Of course,\" she purred, wrapping her arms about his neck. \"Just like in the movies.\"\n\n\"The movies don't show what happens when you get sand on the moving parts. Besides, it just got dark, so there's probably a lot of people still walking out there, and besides, I'm not sure you'd make it that far.\"\n\nGwen pouted. \"What do you mean, make it that far?\"\n\n\"I mean, you're drunk like I've never seen you before, and I think you're gonna crash pretty soon and pretty hard. I don't want to have to carry you back.\"\n\n\"Don't be silly!\" She thought a moment, then took a step back from him. \"Well, OK, then.\" Fingers fumbled with the buttons of her blouse. Her husband smiled and began to help while she that task to him and began to work on her slacks, nearly falling over as she pushed them down along with her panties. Tim gently pushed her backwards into an awkward shuffle until she was standing at the end of the bed, dressed in nothing more than her bra while she tried to work out the logistics of pulling her shoe-covered feet through the puddle of clothing on top of them. Tim smiled again and unhooked her brastraps with long unpracticed moves, then gently pushed her back until she fell on the bed behind her and he began to work on untangling her legs from their restraints. \n\nGwen giggled as she tried to help him, her pulling and twisting doing more harm than good, one shoe being kicked off with such force that it landed on the couch ten feet away. Her ankles were freed of the fabric wrapped around them, and Gwen spread her legs wide in invitation as Tim rose from his kneeling position. \"Take me,\" she said in her best sexy voice. \n\n\"Not tonight, I'm afraid,\" he said with an effort as one of his fantasies unfolded in front of him. \"I don't take advantage of drunk women.\" She began to protest, but Tim cut her short. \"I will take one liberty, though.\" Dropping to a knee, he bent forward and gently kissed her sex, dragging his tongue through her furrow before flicking it across her waiting clit.\n\n\"Oooh, you shouldn't do that,\" she breathed, closing her legs to his advances.\n\n\"And why not?\" \n\n\"Because...well, because it makes me think of some things I'd rather forget.\"\n\n\"Like?\"\n\nGwen hesitated, the Lady groggily trying to counter the effects of the martinis on her judgement. \"Like, it's something Miss Ritter and I did to each other.\"\n\nTim rose and moved to sit beside her, hand casually smoothing the skin of her stomach. \"I'm sorry, Gwen. I guess that must have been terrible for you.\"\n\n\"Well...see...that's the problem. I know I told you then that I didn't like it, but...I did. I did kinda did like it. I know I shouldn't have, but I did.\" She closed her eyes and turned her head in shame. \n\n\"Oh. I see. So, why shouldn't you have liked it?\"\n\n\"Because I wasn't married, and we were both girls, and...it made me feel so slutty, doing what she told me to do, and I liked feeling slutty. You must think I'm horrible.\" The distraught woman turned away and curled up in a fetal ball while Tim lay down and wrapped his arm around her.\n\n\"I don't think you're horrible at all. I think you were just finally experiencing things you never could when you were living at home. Do you regret giving that up to marry me?\"\n\n\"No! I loved you more than anything then, and I love you even more now. But the things she made me do, they made me feel so wicked, so sexy...\"\n\n\"Things like what?\" \n\nGwen sniffled. \"We touched each other, and used sex toys, things like that. Really perverted things.\" \n\nTim hugged her. \"Well, I don't think you're the first to do that kind of thing, and like it. I'm sure lots of girls do something similar. You know, experiment and all that.\"\n\nGwen sighed deeply. \"For a long time, I thought I was the only one, that I was really sick, but...\"\n\n\"But what?\" \n\nGwen lowered her voice to a drunken, quivering whisper. \"Natalie told me she's done it with a girl, too. More than one. And she still does! But only one now, and not all the time.\" \n\n\"Really? Does Adam know?\"\n\nShe nodded urgently. \"Uh-huh. She says he likes it. And she says she loves him, but what she does with Liz is just something best friends do, making each other feel good.\"",
        "\"Huh. What do you think about that?\"\n\nI guess it sorta makes sense, I mean I understand the whole feeling good part. I don't get how Adam can be OK with it, though. She's having sex with somebody that's not her husband! Wouldn't you be mad with me if I did that?\"\n\n\"Hard to say...depends on the circumstances, I guess.\" \n\nHer silence and measured breathing told him she was beginning to slip into an alcohol-aided slumber. Gwen didn't remember him pulling the blankets over her. \"Sleep well, I love you,\" he whispered, and kissed her forehead, doing his best to ignore the erection swinging between his legs as he climbed in next to her. \n\nA knock on the door the next morning sent Tim scrambling for a pair of shorts. Gwen was startled awake by the noise, instinctively pulling the covers about her body to hide her nightgown. The realization she was not wearing it arrived at the same time her head exploded in pain. She lay deathly still, hoping whoever was at the door wouldn't see what was under the covers while she prayed the throbbing between her temples would stop. \n\nThrough the covers pulled over her head she heard the voice of a young man. \"Your daughter sent this up with her compliments.\"\n\n\"Thank you,\" Tim replied hurriedly, \"and thank KD, for us, please.\" There was silence followed by a murmured \"thank you,\" and then the door gently closed. \n\n\"The card says your daughter thought you might need some things this morning,\" Tim said. \"Looks like she sent up some coffee, bottled water, toast, aspirin...speaking of which, I'm guessing you're having your first-ever hangover?\"\n\n\"I'm dying,\" she croaked from underneath the pile of blankets. \"This is horrible. Never again.\" Even the sound of her voice made her head pulse angrily. \n\n\"Welcome to the club,\" Tim laughed softly. \"At least you didn't throw up last night.\"\n\nGwen wanted to tell him that it was not yet out of the question, but to speak would only make the drumming in her head worse. Presently she heard the sound of a cup being placed on the nightstand next to her head. \"Try and drink some water and take some aspirin. I've left coffee for you, but it might be a little early for that. Sleep as long as you want. I'm going to stop by the desk and thank KD in person, then go down and read by the pool. I know how important a quiet room can be to recovery, so relax, and call my cell if you need anything. Love you.\" A hand softly pushed against the covers over her hip, and a short time later, the door opened, then closed. \n\nDespite his advice, it still took Gwen a half hour to muster the strength and courage to sit up long enough to down the two bottles of water on the stand while gulping down the aspirin. Coffee was out of the question, and she gingerly laid her head back down, falling asleep despite the pounding in her head. \n\nShe awoke some time later, feeling better. Not great, but better. Gwen slowly raised herself to a sitting position, carefully gauging her head's reaction to the change in elevation, before standing up. She briefly thought about grabbing her robe from the closet, but decided it was too far to go just yet. Gingerly she made her way to the cart at the end of the bed where more water, toast and a carafe of coffee sat. \n\nNumbly she poured herself a cup of the black liquid and sat on the edge of the bed. Although the liquor had dulled her memory of the previous evening, her confession was clear enough in her head. \"He must be furious,\" Gwen moaned, although her fogged recollection had not recalled that he had been. She wanted to call Natalie, to ask her advice on how to make this up to the man she loved more than anything in the world, but knew her sister-in-law could not tell her anything she didn't already know. Her next conversation should be with her husband.\n\nA knock on the door was quickly followed by the call of \"housekeeping\" and the sound of a card being dragged through the electronic lock. Gwen froze, her mind unable to decide how to avoid spilling the coffee while running for cover. \"Please wait\u2014I'm not decent!\" she managed to croak out softly enough to avoid aggravating her head. \n\nThe young housekeeper never heard the please and pushed the door open. Looking up, she saw a naked woman standing at the end of the bed, a cup of coffee in her hands and a look of shock on her face. \"Sorry, sorry,\" she cried softly, averting her eyes and quickly retreating. The door closed, and Gwen was left standing there, frozen in place. \n\nHer headache and nausea flared with the rush of adrenaline, and she dressed as quickly as her pained body would allow. Her accidental exposure to a complete stranger was absent from her thoughts as she dialed Tim's cell number. Gwen's only focus was how to make things right with her husband. \n\n\"Hey, you're up!\" Tim answered cheerfully. \"Feeling any better?\" \n\n\"Yeah, I guess...Tim, can we talk?\"\n\n\"Uh oh, what'd I do wrong?\"\n\n\"Not you, me. Or us, I don't know. About last night. Can you come back to the room?\" \n\n\"Most everyone ties one on at some point in their lives, Gwen, it's no big deal\u2014\"\n\n\"It's not about that, well not really. Can you come back up please?\"\n\n\"Sure, be right there.\" \n\nGwen heard the sound of the key being swiped a few moments later, and fervently hoped it was not the maid returning. She was both relieved and anxious when Tim stepped through the door and took a seat on the bed next to her. \"Honey, what's wrong?\" \n\nGwen could only look at the floor as she began. \"I, uhh, said some things last night that I shouldn't have, things that I had no right to burden you with...\"\n\n\"I've found liquor makes people far better at telling the truth than making up lies,\" he said with a smile. \"You didn't say anything I would consider a burden.\"\n\n\"Tim, when you asked me to marry you, I told you Miss Ritter made me have sex with her. I lied about that then, both to you and myself. And now I've told the truth to both of us, and I'm not sure that was the best thing. Aren't you mad at me?\"\n\nHer husband kissed her on the forehead. \"Not at all. I would much rather you tell me the truth. In fact, that's probably the first thing other than Christmas gifts and vet bills that I know you've kept from me. Anything else you wanna get off your chest?\"\n\nGwen smiled at his breezy attitude despite her physical and mental woes. \"No, nothing that I can think of right now. But I told you I had sex with a woman and liked it. I feel like I was cheating on you, with another woman no less!\" \n\n\"You married me, not her. Would you rather have spent your life with Miss Ritter?\"\n\n\"No! I love you! She was just...she made me feel good...and I felt like I couldn't be blamed for feeling good. I had to do what she said. It just felt...different, forbidden...with her, like I was pulling one over on the world. And once you asked me to marry you, I knew I had straighten up and be a good wife and mother. I had been told plenty of times that the type of man who would want to marry me would not want a perverted slut.\" \n\nTim said nothing for a long time, and Gwen feared she had angered him. \"Well,\" he finally began, \"it sounds like Natalie and Adam have had a similar issue in the past, and still do. Maybe I should ask him how they resolved it?\" Gwen's eyes widened, and Tim grinned to allay her concern. \"Or did you tell me something you promised you'd keep secret?\" \n\n\"No, she said I could tell you, since you're the last one in our house to not know.\" \n\nIt's was Tim's turn to look surprised. \"Is that so? Learn something new every day. So, it sounds like they're at peace with the whole girl-girl thing.\"\n\n\"I guess, yeah, although I still can't see how. I mean, how would you feel if I was doing\u2014that--with another woman?\" Gwen asked rhetorically. \n\nTim smiled, but said nothing. \"Cross that bridge if and when we get to it,\" he finally said quietly and smiled. \"Hey, you know what you need? You need some sun and fresh air. Get that bikini on, and let's go for a walk on the beach.\" \n\nGwen smiled and kissed the incredible man sitting next to her, then made her way to the bathroom where her suit still hung from the shower rod. They spent much of the afternoon walking hand in hand, not saying much, pausing only for a quick lunch. The couple returned to the hotel a couple of hours before dinner so Gwen could nap and sleep off the last traces of the previous night's excesses. \n\nTim and Gwen showered and dressed, then drove the short distance to KD's apartment. They climbed the stairs to the second floor and knocked on the battered door sporting 218, the '2' hanging upside down for lack of another nail to hold it upright. The same woman who had checked them in Thursday evening answered. \n\n\"Hi, Mr. and Mrs. Nelson, come in! Your daughter's just got home from work and is getting ready. I'm Alia, KD's roommate\u2014well one of them.\"\n\nThe couple stepped through the door into a living room featuring ratty lawn furniture, empty pizza boxes and scattered bottles of liquor. \"Sorry, about the mess,\" Alia offered, but with six of us living here, and all of us working overtime at the resort, we don't spend much time cleaning.\" \n\n\"Hi folks!\" KD called out cheerfully as she exited a nearby bedroom wearing a dress that Gwen would have made her go back in and change if she had still been at home. The hem lay dangerously close to the junction of her thighs, while the neckline highlighted her daughter's ample breasts and the valley they created. \"I see you've met Alia\u2014she and I share a bedroom along with another hotel employee.\"\n\n\"It's certainly a cozy little place,\" Tim offered generously. \n\n\"Yeah, the resort owns it and the other buildings on this street to house college-break workers like us. Really cheap, and very convenient.\"\n\n\"Three to a bedroom!\" Gwen exclaimed. \"They must be good-sized rooms.\"\n\n\"Not really,\" KD allowed, \"but we all fit.\"\n\n\"Can I see your room?\"\n\nHer daughter hesitated. \"Uhh, it's pretty messy in there...\" \n\n\"Don't worry, I promise not to start cleaning.\"\n\nKD could tell that her mother would not be dissuaded. \"Sure, let me show you.\" \n\nGwen stepped into a room strewn with open boxes and clothing, a pair of what appeared to be men's underwear draped over a lampshade, while a double bed and two bunk beds filled most of the floorspace. \"Which bed is yours?\" Her mother looked about the room, shocked that her daughter could live in these conditions, resisting the urge to start picking things up despite her promise. She could make out an open box of condoms lying amidst the debris atop a battered dresser, while a white electrical cord snaked up from beside the double bed and into the unmistakable handle of a vibrator which lay behind a pillow. Gwen thought back to Natalie's tales of college life. Her own daughter, living the same lifestyle? \"So, which bed is yours?\" she asked, the Lady hoping for anything but the double. \n\n\"We just, uhh, take whatever's open when we come home,\" KD offered. 'The double usually goes first, then the bottom bunk. At least one of us usually has a late or overnight shift, so the top doesn't get used much. Well, we should get moving if we want to make our reservation,\" her daughter suggested, anxious to avoid any further scrutiny of her living conditions. \n\nThe Trellis was every bit as good as KD had promised. Gwen stuck with seltzer for the evening, a fact not lost on her smiling daughter. \"Mom, something about you is different,\" her daughter finally said after Tim had gotten up to use the restroom. \n\n\"Different?\"\n\n\"Yeah, the bikini you were wearing yesterday, the martinis last night, and you didn't even say a word about how messy my apartment was. I don't mean to pry, but what's up?\"\n\nGwen blushed. \"Let's just say you're very perceptive, and that I'm beginning to think I was a little too strict with myself for a long time, which wasn't fair to you girls or your father, so I'm trying to be a little more relaxed. Speaking of the bikini, tell me the truth--was it too much? I've only worn it a few times. I can only guess that most daughters don't want their mother trying to look, well, you know, like that.\"\n\n\"You looked great in it, Mom! It's just I've never seen you wear anything that revealing! Even your underwear, the few times I've ever seen you in it, was not like that! Grandma must be pitching a fit!\"\n\n\"Grandma doesn't know, and doesn't need to,\" Gwen replied drily. \n\nKD laughed. \"Your secret's safe with me. Don't get me wrong, I love her dearly, but she can be a bit of a prude, y'know? Just glad you're letting up a bit on yourself.\"\n\nGwen smiled and nodded, Tim's return cutting the conversation short. The family spent another hour talking before they dropped KD off at her apartment with a promise to see her before they left the next morning. \n\n\"I imagine you must be pretty worn out after all you went through last night and this morning,\" Tim said as they entered their room. The question was more investigative than sympathetic\u2014between Gwen's confession and the sights of the pool, his libido was in overdrive and the situation was not conducive to him taking matters into his own hands, so to speak. Perhaps she had enough left to satisfy his needs...\n\n\"I'm doing pretty well, all things considered. I slept late and that nap really helped.\" She wrapped her arms round her husband's neck. \"But if you're thinking about getting me drunk again, forget it.\" \n\nTim smiled as his arms went about her waist. \"I didn't get you drunk, the pomegranate martinis did. I like the idea, though. I can only imagine what I might find out about you this time.\"\n\nGwen's eyes popped open, a serious look behind them. \"You don't have to get me drunk. I'll tell you anything you want to know without that. Just promise me you won't leave me when you hear the answers.\" \n\n\"I'm not going anywhere. Bank on that.\" \n\n\"I'm going to. So, do you have something you want to ask me?\"\n\n\"Uh-huh. Wanna go to bed?\"\n\n\"Uh-huh. I'll meet you there.\" Gwen broke their clinch and retreated to the bathroom while Tim sent his clothes flying before sliding under the sheets and turning off the light. The bathroom door opened and the light was turned out, plunging the room into near-total darkness. \n\n\"Tim?\"\n\n\"Yes?\"\n\n\"Could you turn a light on?\" \n\n\"Of course.\" He quickly rolled to his side and snapped the table lamp on. Rolling back, he sucked his breath in and stared at amazement. Gwen stood at the end of the bed, dressed in the garters and bra Natalie had helped her select. \"Oh my God, Gwen, you're beautiful! How did you get that into the bathroom to change into it?\" Tim started to climb out from beneath the covers to go to her, but she began to crawl across the bed towards him first. \n\n\"I didn't. I had it on at dinner.\" \n\n\"You did? If I had known that, it would have driven me crazy!\" \n\n\"That's why I didn't tell you.\" She lay down beside him.\n\n\"I didn't even know you had anything like this.\" \n\n\"Natalie and I went shopping...\"\n\n\"I really need to get her a gift.\" \n\nGwen lay herself down next to her husband. \"I'd like to give you a gift.\"\n\n\"Me? What for?\"\n\n\"For not kicking me out of the house and out of your life. I have to believe not every man's wife cheated on him with another woman.\"\n\n\"Sounds like at least one other couple we know is OK with it. And I don't see it as cheating.\" \n\n\"Still, I'd like to do something nice for you.\"\n\n\"Already did. That outfit is going to be stuck in my mind for weeks.\" \n\nGwen smiled. \"Not when you're working with a propane torch, I hope. Is there anything else I can do for you?\" \n\nYou don't have to do anything, but...\"\n\n\"But what?\" \n\n\"I'd really like to kiss you down there.\" \n\nShe lay there for a moment, and Tim feared he had pushed too far too fast. \"Alright,\" she finally answered, and rolled on to her back. \n\nTim sat up, quickly reaching for her underwear before she changed her mind. Gwen began to work on the clasps to her stockings as soon as the panties had been pulled past her thighs, but the man now between her legs stopped her. \"Leave 'em on. You look so sexy in 'em.\"\n\nGwen lay back and held her breath as Tim gently lifted each knee and pushed them out, slowly bending down to where her thighs joined her hips. She could feel his breath rustle the abundant patch of hair covering her sex, followed by a tentative kiss on the folds surrounding her clitoris. Tim flattened his body against the bed as his tongue found her opening, slowly dragging up her furrow.\n\nHer husband worked carefully, pushing labial lips aside to bathe all the areas of skin he had never been allowed access to before, only occasionally circling and flicking the nub at the top of her slit. \n\nIt all felt so familiar to Gwen, and yet, so different. She had never considered Miss Ritter \"tender\", and she remembered her oral ministrations as more practiced, more precise, using her tongue with the same attention to detail as her riding. It was if she knew exactly what Gwen wanted and when. Tim, on the other hand, was more rough, more unpredictable, more masculine. She found the contrast in techniques exciting, arousing. Even the feel of her husband's stubble against the tender skin of her inner thighs held its own thrill.\n\nHis hands eventually found their way to her bra-covered breasts, pulling the fabric down until her turgid nipples were free for him to smooth and caress. Gwen looked down at the salt-and-pepper covered head busy between her legs, and the muscular back and butt that stretched beyond it between her spread legs. The feel, the view, and the memories all combined to bring her ever closer to her climax. She closed her eyes and threw her head back, unaware her hands were now tightly gripping the back of Tim's head, forcing him deeper into her sex. Gwen panted, dim memories of Miss Ritter's admonishments after she had cried out during several of her orally-induced orgasms so long ago preventing her from voicing the soft wail building in her.\n\nA pass of his tongue over her clit sent her over the edge, her thighs squeezed against his ears while her hands pulled him so tightly against her that his tongue was trapped and his breath stopped while she shuddered against the waves pulsing through her. Energy spent, her muscles released from their collective clench. Tim's head was released from between her thighs, and he crawled up to lightly lay on her limp body, Gwen recognizing the wetness on his lips and cheeks as her own. She kissed him weakly while she recovered. \n\n\"Well, that was good for me,\" she finally breathed, \"but I still owe you one in return. How would you like to finish?\"\n\nTim smiled and stood up beside the bed, erection swinging and bobbing as he moved. Still smiling, he turned off the bedside light. In the darkness, he could see his dim shape move towards the sliding glass door. The curtain was pushed back, the room brightening despite the night skies and dark water beyond, and the door was pushed aside. Tim stepped out on to the balcony and turned back to her. \"Come on out and join me.\"\n\n\"Are you crazy?\" she hissed. \"Someone will see us!\" \n\n\"I don't think so,\" he said in that cocky tone she knew meant he was very sure of his answer, and was most likely right. \n\nGwen hesitated, really wanting to coax him back to the safety of the room where he could take her properly and without fear of discovery. The Slut pushed her shoulder. Go ahead, live a little. \n\nReluctantly she stood, hurriedly popping her breasts back into her bra as some meager form of cover, and went to her husband. She brought herself in front of him, hoping he would act as a shield for her upper body while the fabric-draped railing would hide her exposed sex. Strong hands landed on her shoulders as their lips touched and forced her down until she was kneeling, the tip of his engorged staff an angry red even in the low light. Consciously she knew that anybody looking up from the beach would see a man leaning with his back to the railing, the naked woman at his feet mostly hidden by the partially enclosed balcony. Subconsciously, she thrilled at the wickedness of it all. She was going to take her husband in her mouth, let him finish there if he wanted, in plain sight of anyone who might care to look. ",
        "Tim didn't give her time to contemplate the cock in front of her as his hands moved from her shoulders to the back of her head, gently pushing her forward until the spongy head of his cudgel bumped against her lips. Gwen opened her mouth and let him slide in, the insistence of his hands on her head to accept his penis exciting her even more. Despite her orgasm, she found herself wet and ready to work towards another. \n\nGwen cupped and fondled her husband's sack with one hand while the other wrapped about his shaft, stroking and preventing his hips from driving him too deeply into her bobbing mouth. Still the hands held her head in place, not roughly, but she felt them, a reminder that she was not to leave until he was satisfied. \n\nShe continued like this for several minutes, her neck and jaw tiring, telling herself she could not stop without his permission. His pace and breathing told her he would not be much longer. \n\n\"Gwen,\" he grunted softly, \"I'm gonna cum.\" \n\nShe purred in response, excited by the way he announced his impending orgasm. 'Cum' was not a word he used in her company; 'finish' was the way he normally announced it the few times he felt the need to do so. And yet tonight she knew it was the appropriate word for what he was about to do. \n\n\"Cumming\u2014\" he said again with a strangled grunt as the first jet hit her in the back of the throat. Gwen knew better what to expect this time, and collected the salty liquid on the back of her tongue as she did her best to control her husband's urgent thrusting. A heavy exhalation and final shudder told her he was empty. \n\nShe smiled and swallowed as she arose, Tim holding and kissing her before she could escape. The moment over, Gwen retreated inside, anxious not to push their luck. Despite the urgings her perversion had stirred, she decided they could wait until morning, until after they had slept, when she could be satisfied more fully. Checkout was not until 10."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "lingerie",
        "outdoor",
        "alcohol",
        "blowjob",
        "cunnilingus",
        "accidental exposure",
        "beach"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-ch-12"
}