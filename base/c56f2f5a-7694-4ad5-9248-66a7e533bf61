{
    "title": "Futa's Wild Passion Ch. 04",
    "pages": [
        "Futa's Incestuous Dream\n\nI was eager for my little sister's plan to find out if our older, twin sisters did more than \"study\" all the time in their bedroom. The idea that Sara and Tara were in there making love, committing lesbian incest, inflamed my imagination.\n\nIt wasn't something I would have considered before I entered into my own taboo relationship with Allie. She was kneeling on my bed, her strawberry-blonde hair swinging around her face. A bit of my cum lingered at the corner of her mouth.\n\nShe'd just blown me. It was incredible.\n\n\"So what do I need to do?\" I asked as I grabbed my blouse, my round breasts swaying before me. My futa-dick was tucked into my panties, soft and constricted. My skirt almost hid my bulge, but you could still see it.\n\n\"You have to keep them distracted for a few minutes,\" my sister said. She bounced on my bed, the eighteen-year-old girl looking so cute. \"This will be awesome!\"\n\nI smiled at Allie's enthusiasm. I used to think she was a brat, but thanks to the fact I'd developed futanari syndrome today, I had a new-found appreciation of her mischievousness. I pulled on my blouse, her grin infectious.\n\n\"Okay!\" I said and darted out of my bedroom.\n\nI rushed down the stairs to find the twins carrying three pizza boxes to the kitchen. The two were identical, though I'd never noticed just how busty my older sisters were. Both were blondes, the part of their hair the only way to tell them apart.\n\n\"Hey, how are you doing?\" asked Tara. \"It seems you've grown used to your cock. Your friend seemed to enjoy it.\"\n\n\"Oh, god,\" I groaned, my cheeks burning. \"I didn't think we were being that loud.\"\n\n\"Oh, you were,\" Sara said as she set two of the boxes on the kitchen counter. She pushed the small one on top towards me. \"It sounded like you and Pita were having a good time.\"\n\nMy cheeks burned.\n\n\"So you're definitely not a virgin,\" said Tara, opening up the box she'd set down. Inside was a vegetarian pizza. I didn't get why they had no problems with onions, green peppers, or olives. Those were fine but not one with pineapple.\n\n\"Yeah, not a virgin,\" I said, squirming.\n\nSara pulled out plates and opened her box. It was a pepperoni and sausage pizza. She grabbed two slices, setting one on each plate while Tara did the same with the vegetarian. They even ate the same things.\n\nIt was clear they were about to head back up to their bedroom. I squirmed. I had to keep them down here. Despite how embarrassed I was at getting caught having sex with Pita, my Hispanic friend who'd come over to visit me earlier, I had to keep them in the kitchen. \"You're not going to tell Mom, right?\"\n\nSara glanced at me, her green eyes narrowing. \"Well, no, we're not going to.\"\n\n\"We get it,\" Tara said. \"Trust us, we do. You're like a guy now. You get horny.\"\n\n\"Girls get horny,\" I muttered.\n\n\"Sounded like Pita got horny.\" Tara grinned at me. \"So don't worry about it.\"\n\n\"I just hope you're not going to be a mother in nine months,\" Sara added.\n\nMy stomach lurched. Futanari syndrome did mean I was firing real sperm. I could have bred Pita. Or Allie. My little sister wanted to be bred by her, but it would cause all sort of problems if I knocked her up.\n\nTara and Sara scooped up their plates. They were about to leave.\n\n\"It just... happened,\" I said, on the verge of panic. \"Me and Pita.\"\n\n\"Mmm, sounded like it,\" Tara said. She frowned. \"Where's Allie?\"\n\n\"Uh...\" I felt the weight of the second floor above us. I knew Allie was doing things up there. \"She's... doing something.\"\n\nSara rolled her eyes. \"When isn't she doing something?\"\n\n\"Ooh, are you talking about me,\" Allie asked. She darted into the kitchen, a big smile on her face. She was shorter than all of us, her petite build making her seem almost childish.\n\n\"Just wondering what mischief you were getting into,\" Sara said.\n\n\"Oh, this and that,\" Allie said. \"Ooh, sausage.\" Her gaze flicked to me. \"I love sausage!\"\n\n\"Yeah, we know,\" said Tara. She glanced at Sara, then the pair of them began to head out.\n\n\"Not eating with us?\" asked Allie as she hopped onto a bar stool at the counter. \"Need to go study?\"\n\nSara froze. She glanced back at us as I pulled out the pieces of my Hawaiian onto my plate. I sat down next to Allie, wondering what she was up to. She had this big grin on her face. She truly believed the twins were having an incestuous affair.\n\n\"Oh, sure,\" Tara said, turning around. \"I mean, Jenny, you've had a wild day.\"\n\n\"Tell me about it,\" I said, glancing at Allie. \"She was a complete brat to me.\"\n\nSara sighed. \"You shouldn't be like that, Allie. She's gone through a delicate transformation.\"\n\n\"I think it's great,\" Allie said. She tore into her pizza.\n\n\"What are you going to do at school?\" Tara asked as she sat down beside me. She scooped up her vegetarian slice. \"With your, uh...?\"\n\n\"Cock?\" Allie asked around her mouthful of pizza.\n\n\"I guess tuck and hide it,\" I said. I hadn't really considered it. \"But I'm sure it'll get out eventually.\" I sighed. \"I don't know what will happen then.\"\n\nSara reached past Tara to pat my hand. \"Well, if you need anything, we're here for you.\"\n\nTara nodded.\n\n\"Thanks,\" I said, smiling at my older sisters.\n\nThe four of us chatted. I couldn't remember the last time we were all eating like this especially without Mom being around. She'd got called into work by her boss. Some emergency. It happened from time to time. It sucked that she couldn't be around us as much.\n\nThe twins finished first and headed upstairs after washing off their plates. They absently held hands which made Allie arch her eyebrows at me. I wasn't one hundred percent convinced. Girls held hands. Sisters held hands.\n\n\"So, what did you do?\" I asked Allie once the twins were safely upstairs.\n\n\"Hacked their laptops so their webcams are turned on,\" said Allie. \"We can watch what they're up to.\"\n\nMy jaw dropped. \"Are you kidding me? You can do that?\"\n\nShe grinned at me. \"It's just a little bit of software. I plugged in a USB drive into their laptop and that's all it took.\"\n\n\"Where did you get that?\" I demanded. \"That sounds illegal.\"\n\n\"Downloaded it off the internet,\" she said. \"There are lots of ways to be bratty.\"\n\n\"Are the FBI going to break down our front door?\"\n\nAllie gave me this innocent smile.\n\nI groaned.\n\n\"Come on,\" Allie said. She hopped off her stool. \"Let's go spy on them.\"\n\n\"Dishes!\" I said as she darted off.\n\nShe sighed, came back, and wiped off her plate. I put the pizza boxes into the fridge so Mom could have something to eat when she got home. Plus, snack for tomorrow. There were still a few slices of Hawaiian left.\n\nAllie took my hand and dragged me upstairs. We slipped into my room and then gasped something about forgetting something and darted out. I sank down on my bed. A moment later, she returned with her laptop. She hopped onto my bed, opened it up, and logged onto this sketchy program she'd downloaded.\n\nIt made me wonder what else she'd downloaded.\n\n\"Okay, here we go,\" said Allie. She hit the button and...\n\nTara was working on her homework. It was her laptop that we were watching from. She was writing on something, leaned over. You could see Sara on the other side of the room working on her own homework.\n\nAllie sighed.\n\n\"What, did you think they were going to go straight to sex?\" I asked.\n\nAllie nodded.\n\nI cuddled up to my sister. She lay on her side as we watched Sara working on her homework. It was boring. I stroked Allie, holding her. Finally, Allie pulled up YouTube and we watched some videos, giggling and laughing as we waited for something to happen.\n\n\"When they get ready for bed,\" Allie said. \"You'll see. They'll get up to something naughty.\"\n\n\"We'll see,\" I said. \"Ooh, have you seen this vid.\"\n\nWe both watched the cute cat vid. Time passed. It was fun lying in bed with my little sister and watching videos. She knew some great ones. We were trading back and forth, showing each other some funny things while we killed time.\n\nIt was wonderful just hanging out with her. It was so strange realizing I'd fallen in love with my little sister. It was so wild. Becoming a futanari had transformed everything about my life. I was a little scared for college tomorrow, but I was glad to have her.\n\nFinally, the twins stopped working on their homework and looked like they were getting ready for bed. Allie got excited then. She squirmed against me, her rump pressing into my futa-cock. This throbbing ache surged down my shaft.\n\n\"Let's get naked!\" Allie said. \"Come on!\"\n\nI grinned at her as she bounded off my bed and ripped off her tank top. She wasn't wearing a bra beneath, her firm, little titties coming into view. I groaned at the sight of them. They quivered, topped by puffy, pink nipples. I licked my lips as she unzipped her shorts. She shoved those and her panties down in a single go, exposing her sparse patch of strawberry blonde hair.\n\nI smiled at her. It was this delicious sight to witness. I groaned as I pulled off my own blouse, my round breasts coming into sight. Allie's blue eyes lit up. Her small nose almost twitched like a bunny as she stared at my tits. I smiled at her as I rose on my knees and unzipped my skirt. It dropped down my thighs, exposing my panties, my girl-dick getting hard.\n\n\"Ooh, free that big snake,\" Allie said. \"Don't keep her trapped in those panties.\"\n\n\"Snake?\" I asked.\n\n\"Yeah, a panty snake,\" she said.\n\n\"Isn't that a trouser snake?\"\n\nAllie rolled her eyes. \"You're a futanari.\"\n\nI winked at her and then shoved down my panties. My throbbing snake popped out erect, thrusting from my fiery bush. It swayed before me as I worked off my underwear down my legs. My cock ached and throbbed. My precum beaded at the tip, my pussy getting hot and delicious.\n\nAllie flicked off my light and then darted back to the bed. She jumped on it beside her laptop then scrambled to get into place. I could hear the twins in the bathroom. They were brushing their teeth. My futa-dick pressed into my little sister's rump. Her wiggling sank my shaft between her butt-cheeks.\n\n\"They are going to get wild,\" said Allie. \"Ooh, we're going to see them like sixty-nine of something. That would be just delicious.\"\n\n\"Yeah,\" I said as the door to the twins' room opened. They slipped into it, both chatting.\n\nThis weird guilt spilled through me as I watched the twins stripping naked. We were spying on them at their most intimate. Allie squirmed against me, her butt-cheeks rubbing into my hard-cock. My sister gasped as the twins' large boobs came into view.\n\n\"Oh, they're just so busty,\" she said. \"They have to be enjoying each other's tits.\"\n\n\"Allie,\" I said, my cheeks burning. \"Maybe this isn't right.\"\n\n\"Come on,\" Allie muttered. She wasn't paying attention to me at all. She had her attention locked on the screen.\n\nTara bent over to take off her panties, her rump and pussy aimed at the screen. Allie gasped. \"Look, look, she's shaved, and is that a clit piercing?\"\n\nMy eyes widened. Tara had a gold ring nestled in her pussy. I couldn't believe it, then I noticed Sara pulling out her nightgown. Her breasts swayed and both her nipples were pierced with gold rings. This heat swept through me.\n\nI couldn't believe it. They were shaved and pierced. This was crazy. I had no idea they had those. They were good, Christian girls. Or so I thought. I was seeing what they were hiding. I squirmed, that voyeuristic guilt swelling in me.\n\nTara pulled on her nightgown, pink contrasting with Sara's blue. They both said good night. Sara flipped off the light, and then they crawled into their own beds on the opposite side of the room. Sara lay on her back, Tara on her side.\n\n\"What, no!\" Allie objected. \"They're not having sex!\"\n\n\"I guess you were wrong,\" I said.\n\n\"But... but...\" Allie bolted upright, her naked body painted by the bluish glow of her laptop screen. She turned to look at me with beseeching eyes. \"I was so certain. Why else would they spend all their time up there in their bedroom together?\"\n\n\"I don't know,\" I said.\n\n\"And they're shaved and pierced,\" she added. \"How did they do that?\"\n\n\"I assume at a piercing parlor,\" I said. \"They're twenty. They can do what they want.\"\n\n\"But... but...\" Allie shook her head, her pigtails dancing. \"I wanted them to get it on.\"\n\n\"Why?\" I asked her.\n\nShe blinked. \"What do you mean, why?\"\n\nI sat up and slid my arms around my little sister's neck. I stared into her eyes. \"Why do you want them to be lovers so badly? Is it because of us?\"\n\n\"Because incest is hot!\" She stared at me. \"I've wanted to do wicked things with my sisters for a while and... and... I finally got to with you, and I was just thinking it would be great if they were doing it with each other!\"\n\n\"Incest is hot, huh?\" I asked, arching an eyebrow at her. \"I mean, did you want to have sex with me before...?\"\n\n\"Before you gained your dick?\" She bit her lip. \"I mean... kinda.\"\n\n\"I didn't know you're gay.\"\n\n\"I'm not. I like guys, I just... like the idea of being with you. I was super confused.\"\n\n\"And a little bratty?\" I asked, a smile playing on my lips.\n\n\"Well, duh! Imagine wanting to have sex with cute guys and your sister all at the same time.\" She shuddered. \"Maybe it was the idea of Futanari Syndrome. Maybe chicks having dicks imprinted on my mind and I thought it would be so hot and then... then you had one.\"\n\n\"So you decided to burst in on me masturbating and then calling my dick freaky was the right way to express yourself?\"\n\nShe squirmed. \"I was scared. You had it. I wanted it, but... but... It was easier to tease you, okay? Teasing easy. Sharing all these feelings is hard.\"\n\nI pulled her close to me. \"And now is it hard.\"\n\n\"Well, your cock is,\" she said, grabbing my futa-dick.\n\nI gasped as my sister's hand slid up and down my girl-cock. \"That's not what I meant.\"\n\n\"It's easier and harder,\" Allie muttered. \"Easier because I love you and hard because... because I'm scared we'll have to stop. That we'll be ripped apart.\"\n\nI stared into her eyes. \"I won't let that happen. I love you, Allie. You're awesome.\"\n\n\"Even when Pita's sucking on your dick you'll love me?\"\n\n\"Even when I'm fucking her asshole,\" I said.\n\nAllie leaned in and kissed me. Her tongue thrust into my mouth. I groaned, my girl-dick throbbing in her stroking grip. She fisted open and down on me. I shuddered, whimpering into the kiss as my cunt drank in the stimulation.\n\nHer hand felt incredible on my clit-dick. This heady rush shot through me. I whimpered, our tongues dueling. My lips worked against hers. My hands cupped her small breasts. I loved how they felt.\n\nI wanted to just fuck her hard. The bed creaked. I shivered, breaking the kiss. \"We have to be quiet. The entire house heard me and Pita.\"\n\n\"Big time,\" she said. Allie licked her lips. \"Sixty-nine? I'll muffle you with my pussy, and I'll have a mouth full of cock.\"\n\nI gave her a hot kiss on the lips. \"Mmm, you have great ideas. Even if they don't always work out.\"\n\n\"Maybe it's an off night for them,\" Allie said. \"Maybe we have to wait for when they think they can get away with it.\"\n\n\"Or maybe we just accept that they didn't even so much as kiss each other before separating for bed. Like this.\"\n\nI claimed my little sister's lips again, thrusting my tongue into her mouth. She whimpered, her hand tightening on my girl-dick. She was so exciting to kiss. This wonderful rush of dizzying pleasure washed out of my pussy.\n\nI shuddered as she whimpered. Her tongue dueled with mine. She kissed me back with hunger. My pussy clenched. I wanted to fuck her, but I would settle for sixty-nining with her and loving her twat with my tongue.\n\nI broke the kiss. \"See.\"\n\n\"Convincing... point...\" she panted. \"Fine, they're not secret lezzie twins. But we are. Well, secret lezzie sisters!\"\n\n\"I'm a futa,\" I pointed out.\"\n\n\"So is it straight for you to have sex with a girl?\" Allie asked. \"And does it make me bisexual since you have a cock and a pussy.\"\n\n\"Maybe it makes you a futasexual?\"\n\n\"Definitely!\" she squealed.\n\n\"Hush,\" I said. \"Let's not wake up our sisters.\"\n\nShe giggled softer. \"Nope. If they're not having sex, then they'd definitely tattle on Mom.\"\n\n\"Definitely,\" I said.\n\nI stretched out on my back while my sister closed her laptop and set it on my desk. The room grew darker without the bluish glow of the screen, Allie just a nubile silhouette now. My girl-dick throbbed as she shifted on the bed.\n\nI groaned as she threw her leg over my head. I couldn't make out her pussy, but I could smell her fresh twat. I breathed it in as she lowered herself, her hand finding my clit-dick again while her other rubbed through my bush to stroke my pussy lips.\n\n\"Mmm, yes,\" I moaned.\n\n\"Hush,\" she said in a mocking tone. \"You don't want to get us caught.\"\n\n\"Then plant that pussy on my face and muffle me,\" I whimpered.\n\nShe did just that.\n\nI savored the feel of her sparse bush tickling my face and the hot contact of her pussy lips on my mouth. Her fresh juices soaked my lips. I licked out, my tongue darting through her folds and gathering up her wonderful flavor.\n\nIt was incredible.\n\nShe moaned, her fingers rubbing at my virgin pussy while her other hand grabbed my girl-dick. She nuzzled into the tip and then sucked it into her mouth. I whimpered into her twat, jamming my tongue deep into her juicy depths.\n\nMy tongue marinated in her cunny. I fluttered it around, caressing her silky walls. She whimpered around my cock. She moaned, sucking with passion. I shuddered, my toes curling as the bliss of this moment swept through me.\n\nWhat an incredible treat to enjoy. My little sister sucked on me while I feasted on her silky delights.\n\nMy hands grabbed her rump. I kneaded her firm tush. I pulled her twat tight against my lips, letting her vulva muffle my moans. She squirmed atop me. She ground her cunt against me. It was incredible. I Licked at her. Teased her. She tasted amazing. My tongue danced around her folds while her finger stroked down my pussy lips to my taint.\n\nShe kept going.\n\n\"Allie!\" I whimpered into her pussy, my bed creaking as I shuddered. \"You naughty girl.\"\n\nShe purred around my cock's head as she stroked her digit around my asshole.\n\nMy puckered anal ring drank in the sensation. She teased me, fluttering against me. This rush of heat shot through me. A wave of delight surged through my body. I whimpered into my little sister's twat, my fingers tightening into her rump.\n\nHer finger pressed into my asshole.\n\nRippling trembles raced through my body as my anal ring surrendered to her inquisitive digit. She worked her finger deeper and deeper into my bowels. The strange heat blazed to life, my pussy clenching. My girl-dick throbbed in her sucking mouth. I shuddered, this dizzying heat threatening to sweep over me.\n\nDrown me.\n\n\"Allie, you wicked girl!\"\n\nShe gave my dick a long, slow suck.\n\nI shuddered beneath her, my pussy and asshole clenching. My bowels tightened around her finger, increasing the wicked friction. As she plundered my velvety sheath, her thumb caressed the virgin folds of my pussy, sliding up and down me.\n\nI lapped at her cunt as I moaned. I feasted on her fresh juices. She squirmed atop me, her belly massaging my nipples. My round breasts quivered. Her ass flexed beneath my clenching fingers. I whimpered, aching to give her as much bliss.\n\nI sent my fingers probing into her butt-crack.\n\nI could tell that excited her. She sucked with such hunger on my girl-dick, increasing the friction at the tip. My cock throbbed, my ovaries aching in the depths of my pussy. Her finger pumped in and out of my backdoor faster, teasing me. The heat melted up to my pussy.\n\nMy digits found her asshole. I circled her puckered sphincter. I felt so wicked and wanton. My tongue darted into her pussy depths again, soaking in her fresh juices. I thrust not one, but two wicked fingers into her depths.",
        "She squealed around my cock.\n\nShe bucked.\n\nMy little sister's anal ring surrendered to my probing digits. It was an incredible delight to feel her velvety flesh engulfing my fingers. To give her the same bliss she gave me. She ground her hot pussy on my mouth and bobbed her head on my dick, working that hot, sucking oral delight up and down my futa-cock.\n\nPleasure surged through me. I whimpered, my orgasm building and building as we loved each other. She took as much of my cock as she could into her mouth while she jammed a second finger into my asshole. I whimpered into her twat, her juices soaking my lips and chin.\n\n\"Allie!\" I gasped. \"You're such a naughty girl.\"\n\nShe giggled around my girl-dick.\n\nWe plundered each other's asshole. We thrust our digits deep and hard. Our tongues danced. Her circled my cock while mine fluttered up and down her slit. Pleasure met in my pussy, flowing from my asshole and down my clit-dick.\n\nMy cunt grew hotter and hotter as I came closer and closer to cumming. My ovaries brimmed with jizz to fire into her mouth. I found her clit and sucked on it. She squealed, her humming passion spilling around the tip of my futa-cock.\n\nWe loved each other.\n\nWorshiped each other.\n\nOur fingers pumped fast and furious. The velvety friction melted out of my asshole. Her moans hummed down my cock. Her sucks made my pussy clench. My little sister drove me wild. I nibbled on her clit. Caressed it with my tongue.\n\nShe bucked atop me, her asshole spasming around my fingers. Juices gushed out of her pussy as she sucked on my dick with hunger.\n\nElation swept through me. I made my little sister cum.\n\nHer fingers jammed deep into my asshole. She sucked hard on my girl-dick.\n\n\"Allie!\" I gasped as her juices bathed my mouth. \"Yes!\"\n\nI erupted.\n\nI joined my sister in climatic heaven. My asshole spasmed around her digits. Futa-cum fired out of my dick and into her sucking mouth. She groaned, shuddering and grinding her pussy against my hungry lips.\n\nI feasted on her as the dual delights of my futa-orgasm swept through my body. My jizz exploded from my dick over and over. Waves of bliss washed out of my convulsing twat. I bucked beneath her, rubbing my tits into her stomach.\n\nShe felt incredible on me as she squirmed.\n\nI gulped down her fresh juices.\n\nShe swallowed my cum.\n\nStars danced before my eyes. \"Allie! Allie!\" I gasped into the hot, muffling flesh of her twat, \"I love you!\"\n\nShe sucked the last of the cum out of my girl-dick. My ovaries went dry. My orgasms peaked. I trembled as the bliss died to buzzing euphoria. I breathed in her pussy juices, my fingers buried deep in her asshole.\n\nWe lay like this for a few heartbeats, then she squirmed around. Our fingers popped out of the other's asshole. She lay down beside me and kissed me hard. She thrust my futa-cum into my mouth. The salty flavor burst to life on my tongue.\n\nI groaned in delight, savoring the flavor of my jizz. I stroked her as I felt exhaustion pulling down on me. I broke the kiss with her and panted, \"It's been... long day.\"\n\n\"Mmm, yes,\" she said. \"You made me into a woman.\"\n\nI smiled at that. \"It was all my pleasure.\"\n\nAllie giggled. She rolled over. I spooned her lithe body, my breasts rubbing into her back, my softening cock into her rump. I nuzzled into her hair, smelling the lingering traces of her shampoo. I nibbled on her lobe.\n\n\"Love you.\"\n\n\"Mmm-hmm,\" she whimpered, already sounding sleepy.\n\nIn a flash, she was out. I could hear her regular breathing. I sighed, closing my eyes. I didn't know what would happen at college tomorrow. Pita reacted, well, insanely, but I doubt others would just throw themselves at me. I bet I would be teased. People would be weirded out by me.\n\nIt would be stressful, but at least I had Allie.\n\nThat comforting thought lingered with me as I sank down into my dreams. Reality faded away until I was arriving at the college. Everyone was staring at me with shock in their eyes. I couldn't figure it out.\n\n\"Where are your clothes,\" asked my friend Briana.\n\n\"Oh, my gosh, Jenny, you're naked,\" said Tina, another friend. \"Everyone can see your cock.\"\n\n\"Eww, no one wants to see your cock,\" said Pita. She shook her head, a look of disgust on her face.\n\n\"But it's such a cute cock,\" purred Mrs. Greene, my busty teacher. She had smoldering, blue eyes. \"Now, class, settle down, it's okay that Jenny has a cock. Those are better than pussies.\"\n\n\"Uh-huh,\" moaned Kathy Greene, Mrs. Greene's daughter. Why was she in my math class? She was a freshman. \"I love having a pussy, Mom.\"\n\n\"That's where you're wrong,\" my teacher said. She stroked my dick. \"Mmm, this cock is just perfect. You can rub it against my rump, see.\"\n\nI gasped as I pressed my dick's tip against my teacher's rump. Only it didn't feel as plump as it looked. It felt slimmer. Tighter. I shuddered, loving it anyways. I thrust against her rump, pressing my cock into the crack of her ass.\n\n\"See, girls,\" purred Mrs. Greene. \"It's amazing. I'm going to enjoy this cock every day at the start of class.\"\n\n\"Oh, yes!\" I moaned, my hands sliding up her body. I wanted to find those large tits. I just never could quite seem to get to them.\n\n\"I want your cock!\" panted Pita. \"I was so wrong. It seems incredible.\"\n\n\"Yes, yes,\" gasped Kathy Greene. She wiggled her cute rump at me. \"You know I'm just a slut. I've done all sorts of things. I love anal.\"\n\nShe parted her butt-cheeks, exposing her brown sphincter as I pumped my cock through her mother's crack. It felt incredible to be between those buns. I thrust faster, my pussy drinking in the sensations. College would be awesome. I would have so much fun.\n\n\"Jenny,\" a groggy voice said. \"Are you humping my butt?\"\n\n\"No, I'm humping Mrs. Greene's butt,\" I said, realizing that was my sister.\n\n\"Ooh, are you having a naughty dream?\" Allie asked.\n\nShe stood nearby, her hair in pigtails. Cum ran down her thighs. I grinned at her. I liked fucking my little sister's pussy. It was such a treat. A wonderful joy to engage in. Just thinking about it made my dick ache and throb more.\n\n\"You are,\" Allie said. Her voice felt more real than everything else. \"Mmm, keep fucking my butt-crack, but... What if I do this?\"\n\nI gasped as my cock suddenly was pressing into something hot and wet. I gasped as I slipped into something tight. It felt so real. So immediate. Everything swam around me. The girls all seem to waver as I felt myself rising and...\n\nI came awake, holding my little sister in my arm as my cock...\n\nSank into her pussy.\n\n\"Allie?\" I groaned. I opened my eyes, my nipples throbbing in her back. \"Am I... in your pussy?\"\n\n\"Yep,\" she said as my cock bottomed out in her.\n\n\"How did that happen?\" I asked, confused.\n\n\"Oh, well, you woke me up by humping my ass.\"\n\n\"I was humping Mrs. Greene's ass,\" I muttered.\n\n\"Ooh, do you have a thing for your teacher?\" Allie turned her head. I could see the gleam of her eyes from the light bleeding through my window. \"Are you going to fuck her.\"\n\n\"Of course not,\" I panted. \"She's my teacher. And married.\"\n\n\"Her daughter is a slut.\"\n\n\"Well, doesn't mean she is,\" I said.\n\n\"I guess not.\" Allie sighed, her pussy squeezing down on me. \"Not like our sisters are into incest or anything when we are.\"\n\n\"You are,\" I said. \"I'd never thought of any of you like that until today.\"\n\n\"Mmm, but I awakened it,\" she said. She giggled. \"Come on everyone's asleep. I can be mostly quiet. Work that cock in and out of me.\"\n\n\"You naughty minx,\" I purred. I slid my hand up and squeezed her small breast. \"You're lucky your tits are cute as fuck.\"\n\n\"Oh, are you saying you have the willpower to slip your cock out of my pussy now?\" she asked.\n\nI bit my lip. \"Well...\"\n\n\"That's what I thought.\" She squeezed her incestuous flesh around my girl-dick. \"Come on, plunder me.\"\n\nI couldn't resist that.\n\nI drew back my cock and then slammed it into her pussy. The bed creaked as I made love to her lying on our sides. My crotch pressed into her rump on every plunge. The strokes weren't as hard or fast as they could be in another postilion. It was almost a slower pace.\n\nI savored the feel of her in my arms. I groaned as I nuzzled into her hair. I kissed the top of her head and breathed in the scent of her. I shuddered, my nipples throbbing against her back as I pumped my futa-dick in and out of my little sister.\n\nThe twins were just on the other side of the wall. If one of them woke up...\n\nMy dick throbbed harder. The risk was so exciting. Allie made the cutest sounds. She quivered as her legs shifted. Her pussy squeezed and relaxed around my cock. My shaft's tip ached in her silky flesh. I pumped faster into her, burying my cock in and out of her.\n\nIt was a delight to enjoy her. A treat. My heart hammered in my chest. I whimpered and groaned. I pumped hard and fast. I slammed into her. I buried to the hilt in her juicy cunt. I reveled in being united with her.\n\n\"Jenny!\" she groaned, her hands squeezing over mine cupping her little tits. \"Oh, Jenny, your cock is the best.\"\n\n\"So is your pussy,\" I whimpered. \"So are you. I love you!\"\n\nHer twat squeezed around me.\n\nThe pleasure swelled through me. I shuddered, plunging into her hot twat. At this angle, my dick's crown slid along the top of her pussy. The delight shot down my cock. I savored it. It was a wonderful treat to enjoy. It had me dizzy with excitement. I pumped away at her, my spongy crown drinking in the feel of her.\n\nThat wonderful, silky caress brought me closer and closer to my eruption. My pussy drank in the sensations flowing down my cock. I whimpered into her hair. I held her tight, rubbing my tits into her back.\n\nSparks flared from my nipples, shooting down to my pussy.\n\nMy ovaries brimmed with cum. They swelled, eager to unload into my little sister's fertile depths.\n\nWhat would happen when she was pregnant? Did futanari syndrome breed true? Did we have normal girls that might one day transform into dickgirls? I had no idea. I shuddered, unable to stop myself from plunging into her.\n\n\"Jenny!\" she groaned.\n\n\"Not so loud!\" I panted.\n\n\"Mmm, it's hot, right?\" She squirmed, her fingers pressing mine into her firm titties. \"The chance of getting caught makes this so hot!\"\n\n\"Yes!\" I panted, my hips pumping in and out of her. \"But we can't.\"\n\n\"No, no, but...\" She squeezed her twat down. \"Oooh, this is great. This is just the best. You're going to make me explode.\"\n\n\"Good,\" I panted. My cock throbbed in her depths. \"I want to feel that. I want to feel you convulsing around me, Allie!\"\n\n\"I will detonate!\" she purred.\n\n\"Yes!\"\n\nI thrust faster and faster into her. I pounded her with my strokes. I buried my dick to the hilt in her. The pleasure flowed over me. It was this exciting delight. I whimpered and groaned, my nipples throbbing against her back. Pleasure sparked through me.\n\nMy juices soaked my bush. They spilled out of me as I drilled into her twat. I pounded her. Loved her. It was an incredible treat to enjoy. It was the best thing in the world. I savored it as I pumped deep into her twat.\n\n\"Oh, yes, yes!\" she groaned. \"Oh, Jenny!\"\n\n\"Quiet!\" I groaned.\n\nHeadlights flooded through our bedroom as a car passed on the street. Its engine so loud. Tires crunched as it pulled into a driveway. The car went off a moment later.\n\n\"But it feels so incredible!\" she groaned. Her pussy clung to my dick, my crown aching. \"I'm getting so close to cumming!\"\n\n\"Me, too!\" I whimpered. \"But we have to keep it down.\"\n\n\"I love your cock,\" she gasped. \"I'm getting so close.\"\n\nI nodded, thrusting hard. I could feel the pressure building and building at the tip of my girl-dick. There was this moment I was approaching, this point that once I crossed it, nothing would stop the eruption. It was too late.\n\nI drove towards it with every thrust into my little sister's cunt. She squeezed around me. Her silky flesh clenched and relaxed, massaging me. I leaned over her, kissing her as my ovaries quivered with my cum.\n\nI hit that point of no return, driving my cock deep into her.\n\nThe garage door opened. I heard keys drop into the bowl. Footsteps crossed the floor.\n\n\"Mom's home!\" Allie gasped as my futa-cock erupted.\n\nThe stairs creaked as Mom climbed up them. I clamped my jaw shut tight as my cum spurted hot and wild into my little sister's pussy. She squealed and trembled as I flooded her. Stars burst through the darkness of my bedroom.\n\nEvery blast of cum sent pleasure slamming into my mind. My heart raced as Mom reached the top of the stairs. I grabbed the blanket, hauling it up our naked bodies. My sister groaned and then her pussy spasmed around me.\n\n\"Jenny,\" she whimpered.\n\nThrough the light bleeding through beneath my door, a shadow fell. Our mother was right outside the door. The knob turned. I squeezed my eyes shut, trying not to whimper as Allie's pussy convulsed around my dick.\n\nShe milked me dry.\n\nWe were so busted.\n\nThe fear heightened my pleasure. Rapture burned through me. My pussy convulsed. Juices soaked my thighs as the light fell on us. Our mother stared at us. I could feel her as I kept my eyes closed, trying not to gasp out for breath.\n\n\"Oh, my,\" she said.\n\nShe knew. She had to know my futa-cock was buried in Allie's pussy. That her cunt was milking my ovaries dry of the last blast of cum. My little sister's cunt spasmed around me. The final blast of cum spurted into me.\n\nMom moved closer. I felt her over us. I trembled. She leaned down and her perfume caught mine. It was spicy.\n\n\"You two are just so cute,\" she said, her breath holding a faint tinge of wine. \"I'm glad you're getting along.\"\n\nMy mother's hair brushed my face as Allie's pussy convulsed harder about my cock. I heard a smooch and then, a heartbeat later, I felt Mom's lips on my temple. I smelled a musk then, something faint. Was it Allie's pussy? Mine?\n\nCould Mom tell we were naked beneath and had hot pussies?\n\n\"Sweet dreams,\" she said and then retreated.\n\nThe door closed.\n\nI held my breath until I heard her bedroom door closed.\n\n\"Holy fucking shit!\" hissed Allie. She bucked against me. Her pussy convulsed and spasmed. \"Oh, my god, she had no idea you were flooding me. That was the hottest thing in the world!\"\n\n\"Yes,\" I panted. \"Oh, my gosh, we were almost busted. That was the way to close.\"\n\n\"It was perfect,\" whimpered Allie.\n\n\"But... but... what if she realizes she smelled our pussies. What if she realizes our clothes are all over the floor?\"\n\n\"You worry too much,\" Allie said, squirming around. She rolled over, my cock popping out of her juicy twat. \"Mmm, we got away with it.\"\n\nShe faced me now, my cock throbbing between us. She threw her arms around my neck and pulled me closer to her. I stared into her eyes. She was right. We'd gotten away with it. Probably. But we'd have to be careful.\n\nWhen Mom was home...\n\nAnd what about college tomorrow? Things were about to get crazy. I clung to my little sister, panting as I came down from my orgasmic high. Becoming a futanari had made everything vastly more complicated.\n\nAllie slipped into sleep almost immediately, a smug smile on her lips. I shuddered, worries gnawing at me. How my friends would react tomorrow? The other students? Would Mom or the twins find out Allie and I were making love?\n\nAnd if she became pregnant...\n\nSleep was a long time coming.\n\nTo be continued..."
    ],
    "authorname": "mypenname3000",
    "tags": [
        "futanari",
        "hermaphrodite",
        "sister"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/futas-wild-passion-ch-04"
}