{
    "title": "The Azure Rider Ch. 03",
    "pages": [
        "Author's note: Hi, this is the third installment in a multi part story series, and would not make much sense unless you have read the previous two parts. Thank you for reading. Be sure to leave your feedback!\n\n***\n\nThe next day, Agatha found herself cornered by Cecelia and Helena when she paid a visit to the Harem to deliver the barren potion for some of the women. Clearly, some of the chambermaids had seen her when she had entered the Azure Tower with Orion, and this time Agatha was not sure she could deflect the attention towards Lyla. Cecelia and Helena, two fresh faced women who were generally sought after for their youth and beauty were also amongst the worst rumor mongers this side of the Castle, and Agatha was not at all pleased to be accosted by them. She barely escaped by cooking up a bare faced lie about the Dragon Rider's impotence and stated that her visits to the Azure Tower were meant to relieve him of his shameful affliction. Her revelation was met by gasps and clucks of sympathy, but no one questioned her hastily spun story as this explanation lined up with the Rider's suspicious lack of lovers over the years. \n\nOver the next few days, Agatha increasingly began to find herself in the company of Sir Blaxton as he accompanied her in her horse riding lessons. The riding lessons had been ordained by Orion himself, to bring his camp physician up to the degree of fitness and tenacity that was expected of the rest of the soldiers. However, Sir Blaxton took it upon himself to gallantly chaperone her on most of these trainings, and though Agatha remembered liking him at first glance, she soon began to tire of the young knight's perpetually arduous effervescence. She was reticent enough to not let her impatience show, and gratefully recognized that his chivalry would come extremely useful once they marched towards Remadra and she would need to be shielded from unwelcome attention from the rest of the men. As much as she hated Sir Alexander on principle, she had come to recognize that there had been some truth to his premonition.\n\nShe spent the remainder of her days flitting between her infirmary duties and trying to pen a letter to Siegel that would explain what Orion had done to her. But as much as she tried, she could find no way to truthfully declare that the Dragon Rider had taken her against her will, because she found herself thinking about him at an indecorously high frequency. Every time she visited the stables to pick up her horse for the riding lessons, she found herself discreetly watching out for a swish of his brown cloak. But he was nowhere to be seen, and if Sir Blaxton were to be believed, he was stretching himself thin overseeing the arrangements for the imminent departure to Hills of Remadra. She heard no more about their plans to visit the Forgers. Discarded balls of parchment began to pile up around the little work desk in Agatha's cramped bedchamber and she was still nowhere close to explaining herself to Siegel. \n\nAfter about a week of this, a grim-faced Orion knocked on the door of her tiny bedchamber and entered before Agatha could ask him to. Agatha backed away into a corner upon seeing him, her throat dry and her heart beating a reggaeton in her chest. Orion seemed to tower in her tiny room and for a moment, Agatha was rendered motionless, whether from intimidation or anticipation she could not tell.\n\n\"How's your riding lessons coming along?\" Orion asked, perching himself at the edge of her desk, which creaked pitifully under his weight.\n\nAgatha swallowed to alleviate the strange sensation in her dry throat and said, \"good, Sir Blaxton has been accompanying me.\"\n\nA ghost of a smile seemed to light his features for a moment, but it was gone before Agatha could blink. She found herself wanting to see him smile again, even if it was at her expense. \"Good, we will set out for Remadra in another week and we shall pass the Forger's mountains on our way, and you are going to go in there and help them find ways to fight this plague. You can still do it, correct?\"\n\nAgatha nodded fervently, shamelessly seeking his approbation.\n\nOrion considered her with a slight crease between his eyebrows. \"Do you have trousers?\"\n\n\"I have a pair of breeches,\" Agatha nodded, \"I have been using it for my riding lessons.\"\n\n\"Fine. I want you to wear men's clothing at all times once we are out of the castle gates. I shall arrange for someone to send you trousers and shirts in your size. Riding boots too. And I want you to start practicing running, build up on your endurance as well as speed. Is that clear?\"\n\n\"Y-yes.\"\n\n\"There are a few things I wish to discuss with you and I need your ... candor.\"\n\n\"What do you want to know?\" Agatha asked suspiciously.\n\n\"I will assign a band of my most trusted, loyal men to keep you safe at all times. They will be responsible for hauling wounded soldiers back from the battle lines into the camp hospital, and you will spend the next week training them on basic nursing so that they can double up as your helping hands in the camp hospital. Rest assured, even if they witness you performing magic, they will not breathe a word of it to anyone else. However, these are men who have been trained to fight all their lives and I am not sure how much help they will be to you with respect to nursing, even with training. Do you have anyone that you trust enough to take with you to assist you on physician duties?\"\n\nAgatha considered him quietly for a few moments, and Orion could see her make the connection in her expressive eyes. \n\n\"I do not know of any witch or wizard who specializes in potions and human physiology,\" Agatha said flatly. \"It is not considered as a glamorous specialization in any case. But I would like to have Lyla assist me. She is no witch, but she has experience in infirmary duties, she helped me here before Lord Mannering ... took her.\"\n\n\"Can she be trusted?\" Orion asked.\n\n\"Yes,\" Agatha answered quietly. \"I have saved her life on multiple occasions.\"\n\n\"In that case, I shall arrange for her to be retrieved from the whorehouse by tomorrow,\" Orion nodded, then added, \"her last name?\"\n\n\"Lyla Hartelle. I think she goes by the trade name Veronica.\"\n\nOrion nodded. \"Take her with you for horse riding and running when she arrives. She'll have to wear men's clothes too.\"\n\n\"I am sure she will not have a problem.\"\n\n\"Fine ... can you do the Haze?\"\n\nAgatha stiffened. The Haze was an ancient piece of magic that could be cast only by the most dextrous witch or wizard. When implemented properly, it acted as a shield that modified the memories of any non-magical human or mage who happened to witness magic. It was frequently used by Siegel to protect his identity from the rest of the mages in the Academy, and though Agatha had spent a better part of her life trying to muster it, she had never been able to accomplish the Haze. She had recently given up on trying, accepting that she simply did not possess the degree of magical abilities required to cast a Haze. Instead, she had redoubled her efforts to control her magic so that she could live out the natural span of her life without being caught.\n\n\"No,\" Agatha replied, her shoulders slumping forward a little in her admission. Not being able to do that particular piece of magic was a source of profound personal shame and distress to her. \"Could Penelope do it?\"\n\n\"Yes,\" Orion answered, absently rubbing a palm over his stubbled jaw.\n\nAgatha felt a surge of jealousy. Orion seemed to sense her anguish.\n\n\"Do not worry, in that case you shall simply have to be a bit more careful. Do not use any magic that you cannot pass off as the actions of an ordinary mage in front of a conscious soldier. Do not use magic outside the tent for the camp hospital. The men who have been assigned for your protection will not betray your secret.\"\n\nOrion rose from his perch and said, \"follow me. I want to introduce you to your men.\"\n\nAgatha jogged after him down the cavernous hallway of the Castle Keep and out into the practice arena by the Armory. It was midday and soldiers were practicing sparring in the arena. Agatha watched them, fascinated by their lithe movements, her steps slowing a little. A thought occurred to her.\n\n\"Orion,\" she asked in a low voice, though there was no one close enough to overhear their conversation. \"How did Penelope get caught if she could perform the Haze?\"\n\nOrion did not answer. He led her through a set of raised iron portcullis into a small cobbled courtyard by the side of the Armory, where ten soldiers waited patiently in a perfect formation. They raised their visors in perfect synchrony as a salute to their General. \n\n\"At ease,\" Orion commanded, leading Agatha towards them with a firm grip on her wrist. \"Men, allow me to introduce our camp physician, Agatha Hartelle. She will be joined shortly by her assistant, Lyla Hartelle. Your duties are to protect their person at all costs, carry wounded soldiers back to the camp infirmary from the battle lines and help them out in nursing, in that order of priority. You shall ride with them at all times and camp by their tents so you may stay vigilant of their security. Miss Hartelle will instruct you on basic infirmary duties so that you may assist her later on. Are we clear?\"\n\nThe soldiers struck their spears on the cobbled courtyard and said in unison, \"Yes, General.\"\n\nAgatha cleared her throat nervously and asked, \"What are your names?\"\n\nOne by one, they bowed to her and introduced themselves. Beyond the terrifying visor and the mail, they seemed to be ordinary soldiers, with swarthy, weather beaten faces and rugged, lithe forms. They seemed to hold her in the same reverence they extended towards Orion. Agatha conversed with them for a while, asking about their nursing experience and arranged for them to meet her at the infirmary the following morning.\n\nOrion accompanied her back to her chamber at the Keep. For a few moments Agatha waited with bated breath, trembling with anticipation that Orion would order her to disrobe. But he exchanged a few pedestrian niceties with her, kissed the back of her hand and left, sparing her no more than a professional interest. Agatha watched his retreating back, inundated with acute confusion at his abrupt change in outlook, and though she would never admit to herself, with a desperate, torrid, longing.\n\n***\n\nOrion headed to the Grandmeister Eustace's chambers shortly after his visit to Agatha. He did not want to fixate over her a moment longer than absolutely necessary, and he had an hour before his meeting with the vampire councilmember Vladimir Evanoff, and a visit to Eustace Brickenden promised a welcome respite from the nagging guilt that had been tormenting Orion for the past week.\n\nHe found Eustace lying on his bed with his eyes closed, his upper body propped up by a stack of pillows. Not wishing to barge in on his meditation, Orion waited in an armchair by the foot of his bed.\n\n\"I'm beginning to think that you don't have anything better to do,\" Eustace said, his eyes still closed.\n\n\"What can I say, I miss your impudence,\" Orion grinned.\n\nEustace opened his eyes and smiled slightly. \"How is the Rider?\"\n\n\"I am doing reasonably well, given the circumstances.\"\n\n\"I was asking about the other Rider. You're clearly doing too well for a man of hundred and seventy.\"\n\n\"She's not a Rider yet, but yes, she's doing well.\" Orion murmured somberly, frustrated with Eustace that he had to bring the conversation back to someone he was desperately trying to avert.\n\n\"Why can't I meet her?\" Eustace frowned, squinting at him through milky cataract-filmed eyes.\n\n\"I have told you, you can't be trusted to keep quiet about it.\"\n\n\"At least tell me who she is.\"\n\n\"No.\"\n\n\"Alright, describe her to me. Is she beautiful?\"\n\nThere was a pause.\n\n\"Yes.\"\n\n\"You are useless, Orion,\" Eustace snapped, raising his head from the pillows. \"Are you going to hand her over to Vandan?\"\n\nOrion looked away from the frail man on the four poster bed and hardened his jaw. \"Yes. It is the only way to stop the war.\"\n\n\"You have to do what is needed,\" Eustace said, then collapsed into the pillows with a coughing fit. When he removed his hand from his lips, Orion noticed that they were stained with blood.\n\n\"If you will not go to Meister Erwan, you could try summoning his apprentice. She is very good at healing spells.\"\n\nEustace raised his milky eyes at Orion, not daring to talk in case the cough came back with a vengeance. Orion answered the question in Eustace's eyes. \"Yes, she's one of you.\"\n\nHe waited patiently while Eustace drank water from a tumbler on the nightstand. \"Can she-\" Eustace began in a raspy voice, then descended into another coughing fit. Orion waited for it to subside, then said, \"No, she cannot do the Haze. Her name's Agatha Hartelle. I'll ask your nurse to fetch her on my way out.\"\n\nOrion sat beside Eustace, immersed in the thoughts that he had been desperately trying to avoid. Vandan was currently under the rule of the Olbrecht family. King Andebert Olbrecht was old and frail, and nearing the end of his natural life. His firstborn and the heir to the throne Prince Fredenand Olbrecht was a miserable excuse of a human, with every conceivable cruelty packed into his repertoire, which he often liked to unleash on unsuspecting lesser nobles, squires and knights for some imagined or trivial transgressions. His first wife had died recently from an unknown affliction at a tender age of twenty three; rumours were that she had taken her life by jumping from the top of a tower, unable to tolerate her husband's cruelty anymore. Prince Fredenand Olbrecht was looking for a second wife, and the Thistle Princess, once handed over to the Vandan royalty, would naturally be his first choice. Additionally, given Agatha's unearthly beauty, Orion was convinced of her fate beyond a shadow of doubt. \n\nOrion rubbed his temple, trying to accept the outcome of a battle long lost, telling himself that it was merely a difficult decision but one that needed to be taken, one that was worth the lives of the people living in the Disputed Corridor - which was a vast stretch of densely populated arable land between Vandan and Lohenstraad - the primary reason behind the Great War. He had vowed to stay away from Agatha the moment the plan had formed in his mind, telling himself that his personal interest in an asset only served to complicate the cruel fate he was sentencing her to. He had nearly broken his promise when he paid her a visit earlier today, blinded by an insuppressible lust when her breasts rose and fell with her erratic breaths, when she bit her full lips subconsciously and twirled a lock of her hair in her finger, her pupils dilated and her cheeks flushed at the sight of him. Orion wondered at the effect Agatha had on him, then decided that it was not worth obsessing over. Not when he would be giving her up anyway.\n\nOrion took his leave from Eustace, paused by his retainer's chamber to inform him about the Meister's decision to summon Agatha, and walked back to his tower, where he bypassed his bedchamber and climbed to the top, where Ice resided. He was presently curled up in his alcove, taking a midday nap. He opened his eyes and regarded Orion as he walked over.\n\n'You are supposed to be working.' Orion could hear a rumble of laughter in his head alongside Ice's snide comment. Being bonded to Ice allowed his Dragon to connect clairvoyantly with him, which was their only means of communication, at least from Ice's direction.\n\n\"I can't stand to be in another meeting with that vampire,\" Orion said verbally, finally letting some disgust seep into his voice. Vladimir was a twisted snake, one they should have never colluded with while signing the treaty. He did not know if all vampires were like their council representative, but he was not interested enough to investigate.\n\n'We both know that your anger is misdirected, Orion.'\n\n\"None of this would have happened if you did not impregnate an Imperial Dragon,\" Orion said, still not ready to listen to reason. Then, as a sequence of vivid imagery of Dragon mating floated up through the bond, Orion recoiled and said, \"Ice. Too much information.\"\n\n'What can I say? She was very beautiful,' Ice said dreamily, not the least bit apologetic. 'But you are angry at yourself.'\n\n'Are you up for a flight?' Orion thought, disregarding Ice's foray into the dark thoughts he found no solace in.\n\nIce rose from his seated posture and offered his saddle up towards Orion. Orion ascended on the back of his Dragon and hastily patted the back of his neck.\n\n'To the cave?' Ice asked.\n\n\"Yes please,\" Orion said out loud, strapping his riding boots into the leather binds that hung beside the saddle. As Ice rose high up into the air, Orion took a deep inhalation and allowed the monsters in his mind to fall away behind him. Ice hummed in approval and sent out a single tendril of thought:\n\n'I chose you because you could always take the decisions that no one else was willing to, Orion.'\n\n***\n\nLyla arrived the next day, bewilderment written across her frail face at the sudden change in her predicament. When Agatha explained everything to her about the new position she was going to hold, her first concern was whether she was going to be paid. Agatha laughed and assured her that yes, she would be, more than the brothel ever paid her. Agatha kept Lyla in her bedchamber, tending to the bruises on her person and performing a quick Purging spell to rid her of the diseases that now riddled her body, afflictions of the trade that she had picked up during the last few months. There was not much she could do to heal the scars that were left on her mind, except hope that with time, they would dissipate.\n\nLyla refused to talk about her days with Lord Mannering and Agatha did not press her, instead keeping her busy with horse riding, running and infirmary duties. Their clothes arrived soon and Lyla accepted them without complaint. Sir Blaxton's near constant effervescence seemed to cheer her up more effectively than anything, and not for the first time, Agatha was grateful for the young knight's presence. Before the week was over, the dark circles under Lyla's eyes were all but gone, and Agatha found her throwing the occasional tentative smile at Sir Blaxton and some of the friendlier men in their personal guard. \n\nThey set out on a dreary, overcast day, in the high spirits that is often seen at the beginning of a journey. Agatha and Lyla were each given their own horses, the same ones they had used for their riding lessons. Agatha had never known the name of her horse, and when she asked the squire who handed the reins over to her, he gave her a perplexed look and moved on to the next horse. Agatha decided to name the brown stallion Alfred, Lyla laughed at the name, her sweet voice ringing out like crystal in the wind and decided that her white mare should be called Miss Pennypiper. \n\n\"That is even more ridiculous,\" Agatha said firmly as they rode alongside each other. Sir Blaxton, who had overheard the conversation, rode up so that he was beside them and said that he thought it was a nice name. They laughed and prattled about horse names for the better part of the hour.\n\nThe procession marched through hamlets and towns, forests and fields, across rivers and along dried riverbeds. Ice followed them overhead, flying in and out of the clouds, joining them only when they set camp in the evenings. Two days into the journey, Agatha began to appreciate why Orion had insisted that they wear men's clothing at all times, whenever she plowed through the dense undergrowth, looking for firewood after they set camp, or when she guided Alfred by his reins through a gushing stream. (Alfred was deathly afraid of water.)\n\nOn the second day of their journey, the Forgers Mountain loomed up on the horizon, partially obscured by mist. As they rode on, the snow capped peaks came to greater relief. Agatha and Lyla wrapped their cloaks tightly to protect themselves from the chilly air, and at night, Agatha lit a magical fire in a little mason jar and slipped it under the blankets between her and Lyla so that their toes did not freeze. ",
        "On the third day, as they rode on, Agatha was awed the sheer height and expanse of the Forger's mountains.\n\n\"Do the Forgers live under the mountains or inside it?\" she asked Sir Blaxton, feeling stupid for asking the question but too overcome by curiosity for diffidence.\n\n\"Under it. I have come here once before. They have burrowed into the ground, building beautiful palaces, halls and manors. It is quite something to behold. Unfortunately my vocabulary lacks the words that would do the Forger's Realm justice, but you just have to see for yourself.\"\n\n\"How do the mountains not cave in?\" Agatha asked.\n\n\"Ah... I don't know. You shall have to ask a Forger about it. No doubt, they will be ecstatic that someone is taking an interest in their architecture.\"\n\nThey set camp at the foothills of the Forger's Mountain that day, and Orion sought Agatha and Lyla out afterwards, stating that it would be unwise to march the entire Army any closer to the Forger's Realm, as they may justifiably view it as a threat. He said that most of the men would stay at the foothills and tomorrow Sir Blaxton, Sir Alexander, Agatha, Lyla, a few of their men and he would ride towards the entrance of the Forger's Realm. He also asked Agatha to get her potions and herbs in order so that they could set to work as soon as they settled inside the Realm. Agatha scrambled to follow through with his instructions.\n\n\"Are you scared of him?\" Lyla asked later that evening as Agatha fretted over leaking stoppers and cracked crystals.\n\n\"Who?\" Agatha asked, raising her eyes from the rows of crystals arranged on the ground in front of her, each filled with a different potion.\n\n\"The General?\" Lyla was giggling now.\n\n\"No, why?\" Agatha asked, about a second slow in schooling her features into blankness. Lyla threw back her head and laughed.\n\n\"You are, aren't you? I have never seen you this distraught.\"\n\n\"I... maybe.\" Agatha scratched the back of her neck, grateful that Lyla had interpreted her reaction as fear and not a shameless search for approval. \"We have all heard the stories about his temper.\"\n\n\"I think they are just stories,\" Lyla said matter-of-factly. \"I think he is a very nice person.\"\n\nAgatha raised her eyebrows, sincerely worried if the girl's brains had been addled from prolonged trauma.\n\n\"And why on earth do you think that?\"\n\n\"Well, he arranged for these nice riding breeches and boots. He pays well. He looks after his men.\"\n\nAgatha laughed darkly and said, \"just wait until you get to know him better.\"\n\n***\n\nThe road to the Forger's Realm was long and tortuous, requiring them to ride through barren canyons with steep cliffs rising on both sides. If Agatha were not so agitated over the fate that awaited them at the Forger's Realm, she would have taken longer to appreciate the red sandstone spires, arches and other rock formations that littered the wayside. Lyla asked awed questions about how the formations had come to be, and Sir Blaxton launched into an enthusiastic, well-informed monologue about wind erosion and nature of rocks. As they climbed higher, they started to see snow at the tops of the rock formations. Ice entertained them for a while by trying to balance his weight on the tip of the sandstone spires.\n\nAs they neared the Forger's Realm, the landscape started to change. The mountains grew higher in stature, made of black volcanic rocks instead of red sandstone, and the quaint rock formations were nowhere to be seen. They were greeted at the entrance to the Forger's Realm by a band of armed and hostile-looking dwarves. Neither Agatha nor Lyla had seen a dwarf before and they tried not to stare. They were short, stout, and bare footed, but they wore the finest mail Agatha had ever laid eyes on.\n\n\"Why don't they wear shoes?\" Lyla whispered.\n\n\"I think it helps them climb better. Shh.\" Agatha whispered back.\n\nAt a signal from Orion, the men leading the party held out the white flag that they had been carrying. Orion disembarked from his horse and lifted his visor as a show of respect. \n\n\"We come in peace,\" he said, his deep baritone reverberating across the steep granite cliffs. \"I am Orion Lanthechild, Rider of the Azure Dragon, General of the Lohenstraad Army. My dragon is flying above us, with your leave, I would like to ask him to land. We seek an audience with the great Forger King Thozomir Copperbuckle.\" \n\nAs they entered the Forger's Realm, Agatha began to appreciate why Sir Blaxton had refrained from commenting about the architecture using pedestrian adjectives. Intricately detailed ornate arches lined the hallways, glittering crystal chandeliers hung from the ceiling, glittering golden gargoyles were embedded into the walls, the furniture was made of sandalwood and similarly carved with a fine attention to detail. Agatha, who had never been very appreciative of architecture, found her eyes tearing up a little from the beauty of the Forger's Realm. \n\nThe meeting with the dwarf king went smoothly enough, with Orion explaining the reason for their visit. King Thozomir, justifiably did not want to commit to providing them with the weapon they sought until he saw significant improvement in his ailing men. Agatha and Lyla set to work, with Agatha employing her magic frequently, whenever she saw a patient who would not be cured with ordinary potions. Possibly at Orion's behest, a little female dwarf followed Agatha around with food. Agatha accepted the servings of sourdough bread gratefully whenever she needed, and by the end of the day, when she and Lyla slumped down at a corner of the infirmary, exhausted from their work, most of the dwarves they had tended to had their fevers broken, the colour returning to their cheeks.\n\nAgatha spent the next day instructing their physicians on the herbs that they needed to break the fever, shared the recipes for teas and potions, elaborated on basic hygiene regulations like handwashing, wearing face coverings and concealing their expectorations. At the end of another grueling day, King Thozomir agreed to deal with them.\n\nThe weapon they had come all the way for was a hybrid between a crossbow and a compact cannon, only it was sharper, deadlier, and much more precise. The muzzle of the weapon could be loaded with ammunition, which in their case were small wooden spheres that the dwarves called \"bullets\" and the weapon could be held in two hands by an individual. The Forgers assured them that the bullets could be changed from wooden to silver to iron depending on their adversary, and showcased the precision of the weapons in a place that they called the \"shooting range.\"\n\nThey returned from the Forger's Realm the day after, with a score of dwarves following them on short horses. Lyla started to giggle uncontrollably when she saw the stunted horses for the first time; Agatha had to clamp her hand over Lyla's mouth before she ended up offending a Forger. They rode back to their main camp where the accompanying Forgers met with their men and explained the workings of the weapon to them. Then the Forgers left, leaving the general clamor of excited men in their wake. \n\nThat evening, when Agatha and Lyla settled in their tent for the night, Lyla asked, \"how did you keep your magic hidden for so long?\"\n\n\"I don't know,\" Agatha answered honestly. \"I spend every day in perpetual fear that someone will find out. You won't tell on me, will you, Lyla?\"\n\nLyla propped herself up on her elbows and frowned severely at Agatha. \"If that is how you think of me then maybe we should not stay friends anymore.\"\n\n\"Calm down,\" Agatha laughed, then hugged the petite woman so tightly that she squealed.\n\nLyla massaged her ribs when Agatha released her and asked, \"does Orion know?\"\n\nAgatha nodded.\n\n\"Wasn't his wife a witch too?\" Lyla asked.\n\nAgatha did not answer, merely looked away and blinked furiously to ease the prickle of tears behind her eyes. She hoped Lyla would not be able to see her face in the dim light of the single lantern that hung near the doorway of the tent.\n\n\"What is it?\" Lyla asked gently. \"You can tell me, you know.\"\n\nAgatha never got around to answering the question because they were distracted by a commotion outside the tent. Agatha hopped down from the bed and extinguished the magical fire in the little mason jar as Sir Alexander's inebriated howl floated up to them from outside the tent. A moment later, the owner of the voice entered, his red eyes swiveling alarmingly until they found Agatha hovering by the bed, her arms spread out protectively to shield Lyla from his view.\n\n\"Move, wench,\" he slurred. \"I want the whore.\"\n\n\"Take me in her stead,\" Agatha said firmly. A second man entered the tent and grinned at them. \n\n\"Well, you are under Blaxton's protection, but say what, we will take turns on both of you.\" Sir Alexander seemed extremely cheered by the idea.\n\nAgatha looked about the tent frantically for a sharp object, or anything that could be used as a weapon as Sir Alexander and his friend advanced upon them. She tried to run as soon as an opening was available between the two men, but Sir Alexander seized her wrist and dragged her towards him. On the other side of the tent Lyla screamed as the other man tried to tear open her shirt with a knife.\n\nAgatha's eyes fell on the knife that Sir Alexander carried in his belt. But before she could reach for it, Sir Alexander grabbed her other hand and twisted the two into one of his, then pushed her onto the bed. Once she was one the bed, he kept her arms pinned overhead with one of his and grinning lewdly, began to unbuckle his trousers with the other. Agatha stopped struggling. When his manhood peeked out from his pants, she laughed.\n\n\"Good god, I usually treat people for impotence when it's that small,\" she taunted. \n\nSir Alexander roared with rage and released her hands to land a blow across her face. Agatha, who had been prepared for it, blocked it using one newly freed arm. With the other, she grasped the mason jar tightly and brought it down on the side of his head with all the force she could muster. There was a dull thud and Sir Alexander rolled from atop her and down into the ground with a colossal crash. There was a commotion outside the tent, but Agatha was beyond coherent thought. With blood pumping in her ears, she pulled the knife out of an unconscious Sir Alexander's belt and plunged it between the ribs of the other man, who had been trying to disrobe Lyla . The flap of their tent was thrown aside and Orion came running in, followed by Sir Blaxton and two men from their personal guard, and Lyla started to scream like a banshee as the inert body of her assailant fell on top of her, his blood pooling around them.\n\nAgatha ignored the new arrivals and dragged the man away from Lyla and offered her a hand. Once Lyla grasped it and rose, she realized that it was sticky with blood. They faced the interior of the tent, where three out of the four men stood in stunned silence, and Orion took in the scene in front of him with an expression very close to respect plastered over his face.\n\n\"They were trying to rape us,\" Lyla said, her voice trembling.\n\n\"I can see that,\" Orion said, now struggling to control a smile as he considered Sir Alexander lying unconscious across his feet. Agatha knew exactly what he was laughing at.\n\n\"Are you all right?\" Sir Blaxton approached them and collected their hands in his, consternation apparent in his voice.\n\n\"Yes,\" Lyla answered shakily. \"Please don't punish Agatha, she was trying to save us.\"\n\n\"Who's the other one, Blaxton?\" Orion asked, picking up the mason jar that Agatha had used to bash the side of Sir Alexander's head. Sir Blaxton turned the second man over with his boot and answered, \"William Alden. Sir Alexander's squire.\"\n\n\"Get him out of here,\" Orion instructed one of the men who had followed him inside. As he moved around the cot to haul the body out of the way, Orion continued, \"you are being paid for a reason. If something like this happens to my camp physicians again, I will be forced to find a replacement for every single one of you.\" He glanced around to look the other man in the eye, his voice as cold as ice. \"Is that clear?\"\n\n\"Yes, General,\" the two men murmured in unison. The other man scuttled over to help his comrade and between them, hauled the dead man out of the tent.\n\nLyla turned towards Agatha, tears beginning to pool in her eyes. \"You were going to give yourself up for me,\" she whispered, then hugged Agatha tightly. \n\n\"I am sure you would have done the same,\" Agatha said, holding her in an awkward hug, trying not to get blood on her shirt. Lyla started to sob into her shoulder while Agatha murmured words of comfort into her ear. \n\n\"I hate to interfere,\" Orion said gently, \"but I need one of you to patch him up.\"\n\nAgatha turned towards him and scowled, not caring that she was defying him in front of a subordinate. \"You have to be joking,\" she said, fighting to keep her voice level.\n\n\"I'll do it,\" Lyla said, and releasing Agatha, she started moving about their tent, getting poultices and bandages.\n\n\"Orion, that man is vile,\" Agatha said incredulously. \"Why are you ...\"\n\n\"He's also, unfortunately, very good at what he does,\" Orion grimaced. \"It will be difficult to find a replacement for him.\"\n\nAgatha turned to Sir Blaxton, temporarily rendered speechless with rage. \"Can you believe him?\" she asked, \"Say something!\"\n\nSir Blaxton looked uncomfortable. \"He isn't wrong, Agatha,\" he mumbled. \"Men like Sir Alexander cannot be replaced easily.\"\n\n\"Oh, he's conscious,\" Orion said, glancing down, where Lyla was bandaging Sir Alexander's head. Orion knelt down beside Lyla and lightly slapped Sir Alexander to command his attention.\n\n\"Can you hear me, Sir Alexander?\" he asked.\n\n\"Yes. What happened?\" he asked groggily.\n\n\"You tried to violate one of my camp physicians. William is dead. You will not face any repercussions for your disgraceful actions this time, however, should such an untoward situation arise in future, I would like to remind you that competent camp physicians are much more difficult to obtain than Lieutenant Generals and I will not hesitate to offer you a dishonorable discharge. Lyla and Agatha are under my protection. If you try to harm them, you undermine my leadership. Are we clear, Sir Alexander?\"\n\nSir Alexander groaned gracelessly. Agatha shivered. She now knew exactly why there were so many stories about the Azure Rider's temper. He had not raised his voice, but Agatha felt the keen stab of his reprimand as acutely as though she had been at the receiving end.\n\nSir Alexander groaned and said, \"they asked for it.\"\n\nOrion's hand moved so fast that it was a blur, followed by a thud of knuckles hitting flesh.\n\n\"He's passed out again,\" Lyla rebuked him.\n\n\"He'll live,\" Orion said dismissively, then peered outside, instructing the men standing outside to take Sir Alexander away.\n\nOnce they had left, Orion glanced at Sir Blaxton and a silent communication seemed to pass between them.\n\n\"There's something you two should know,\" Orion said. \"There's trouble brewing in the Vandan borders again. Our troops posted in the Disputed Corridor have come under attack. Sir Blaxton and his regiment here will march to Remadra with the weapons, and Sir Alexander and I will march to Vandan borders with the remaining men. Lyla, you shall stay with Sir Blaxton. Four of the guards will go with you. Agatha, you shall come with me, as will the remaining guards.\"\n\n\"Shouldn't I stay with Sir Blaxton?\" Agatha enquired cautiously. How was Lyla supposed to cure men injected with the venom? However, she fell silent at a single glance from Orion, and decided not to question his decision.\n\n\"We part ways tomorrow,\" Orion said, and he left the tent along with Sir Blaxton.\n\nAfter they had left, Agatha said hastily, \"he's taken my mason jar,\" and rushed out of the tent after Orion. She caught up with him near one of the camp fires, its embers now dying out. \n\n\"Orion!\" she shouted, and he turned to face her.\n\n\"You took my mason jar,\" Agatha explained, pointing at his hand.\n\nOrion handed it back to her.\n\n\"Why are you making Lyla stay here? We both know it's not the best decision,\" Agatha tried to implore with him.\n\n\"It is, and it would behoove you not to question mine,\" Orion said quietly.\n\nAgatha was startled by the chill in his voice.\n\n\"I am just trying to understand. Sir Alexander is a terrible person,\" Agatha said, her voice close to breaking. She could not explain why, but she was desperate for a little smile from him. Orion stared at her critically.\n\n\"How do you think war works, Princess? How do you think soldiers entertain themselves when they are camping out in the middle of nowhere, thousands of miles away from home, battling men they don't know, for men they have never seen, not knowing whether they return home or not, watching their friends die everyday, fighting the elements day after day, until the honorable patriotism that had made them enlist is all but gone? What do you think keeps them occupied?\"\n\n\"The spoils of the battle.\" Agatha said dully.\n\n\"Precisely. When you stay safe and secure in your home, reading in front of the hearth, another woman pays the price somewhere. When your lover goes about his day in peace, another man loses his life in his stead. And when you have seen your men entertain themselves in that way day after day, good men, who you had not thought capable of such atrocities, you learn to give them leeway. Because if you do not you would not be left with very many men. If you have any problems with that, take it up with the politicians who are incapable of signing a long-lasting Treaty.\"\n\nOrion turned around and left without a backward glance. Agatha glanced down at her blood stained hands and the soiled mason jar and plodded back to her tent. There was a heaviness in her heart that she could not explain, and it had little to do with the recent attack on her person and everything to do with the man who had walked away from her, a man she now wanted with every fiber of her being but could not have.\n\n*** \n\nAuthor's note:\n\nHi all,\n\nSorry for the lack of sex in this chapter, I hope the storyline and character development made up for it. There's oodles of it coming in the next chapter, so stay tuned! Again, I would hugely appreciate any comments or feedbacks. This is the first time I am putting my writing out for the public eye, so please tell me what you'd like me to change, or what you'd like to see more of.\n\n~Ash"
    ],
    "authorname": "Ava_fern",
    "tags": [
        "dwarves",
        "fantasy",
        "adventure",
        "quest",
        "dragons",
        "vampires",
        "knights"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-azure-rider-ch-03"
}