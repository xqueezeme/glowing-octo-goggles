{
    "title": "My Christmas Star",
    "pages": [
        "If I was going to write a novel of my life, 2017 would be the chapters were everything I knew and counted on to be a certain way in my life went all to hell. \n\nAnd Christmas was when I managed to claw my way back up out of there.\n\nThe year before -- a bad year in its own right -- my hometown here on the ill-defined border between Florida's Treasure and Gold Coast learned that a tourist hotel chain was looking to expand by building one of its thirty-story, three hundred suite-sized roomed, hotel monstrosities here. Now, my family, we wouldn't have cared about this in the least except we found out that they wanted to build it right where my family's home sat. Our house had been overlooking the sandy beaches here since the early 1920s.\n\nNow the Scotts family had what they call strong local ties to the community. We had been here for a century after all. So when we discussed refusing to sell with our local city official, we expected some support. \n\nNope.\n\nThe Mayor and Town Council basically begged Mom and Dad to take the offered money and get the hell out of the hotel's way. In fact, they wanted us to do it as quickly as we could possibly pack. \n\nNow, this house was built by my great-grandfather and his son, my grandfather, had rebuilt the house at least twice. (Apparently, various hurricanes have tried to relocate it -- a Scotts family tradition, by the way) -- so, given all that family history here, we were not partial to selling. \n\nSo the hotel threw offers of larger and larger sums of money our way. \n\nWhich Dad refused.\n\nI was in my last year of high school at the time and, let me tell you, I began to feel an incredible amount of peer pressure from people that had been friends to me for a decade. Hell, in one case particular even longer. My family was suddenly the town pariahs. Seems we were standing in the way of hundreds of new jobs for the locals and we were keeping tons of money, that would be in-flowing from the thousands of tourists, from flooding into this historically poor-ish area. \n\nMy girlfriend of three years, Jennifer Elliot, even broke up with me over this crap! Right before the fucking prom, if you can believe that.\n\nYeah.\n\nSo, the town was pushing, the hotel was pushing, old friends were pushing and, if anything, all of this pressure made Dad dig in his heels even more. \n\nMom might have caved in, she had not been born in and raised in this house after all, but she had raised my brother, two sisters, and me in it, so she didn't particularly want to move out herself. Her resistance, however, was nothing to my dad's. Dad was adamant and vocal about never selling.\n\nNever. \n\nI would like to think the fire was a coincidence. \n\nBut I can't.\n\nUpon graduation, I had received an incredible gift. A fifty-foot sailing yacht called The Caribbean Star. It had been left to me by my grandfather in his will -- held in abeyance upon me finishing high school -- and the family's lawyer had turned it over to me with a ton of paperwork I had to sign. My older brother Tyler had received my boat's somewhat older sister ship The Midnight Star five years before and he was ... well, somewhere off on the other side of the world. He wanted to be the first person in our family to circumnavigate the world. Or maybe it was to sail on every ocean and sea.\n\nTyler's weird that way. \n\nNow I had no such long distance sailing ambitions. Nope, I simply loved the fact I now had my own place. Privacy had been hard to come by in my teen years. Even a place that floated was a divine blessing. The family home was wonderful but had been built in a different age. It was, truthfully, way too small for a family as large as ours. \n\nThat single bathroom alone had caused many an angry exchange. \n\nSo I packed up most of my stuff, bid my two younger sisters, Tina and Mani, goodbye and fled to my new water-surrounded abode. The day I left, Tina instantly began repainting my old room day-glow pink. You would figure twin sisters would delight in the fact that they had gotten to live in the same room for thirteen years together. Nope. They're weird too, I guess.\n\nAnyway, the fire.\n\nIt started after midnight in the attached garage. It spread in a way that was terribly suspicion to me, but apparently not to the local fire inspectors. By the time my mom and Dad had awakened, the whole house was engulfed. As luck would have it my sisters had been staying over at our grandmother's house. Keeping our Nana company and baking cookies. The town's Fire Chief and the county Sheriff -- both once old friends of my Dad's but estranged at the time of the fire -- said neither of our parents had stood a chance of getting clear once the blaze started. Just the way that old houses like ours were built. Fire traps. Shoddy construction. Old, faulty wiring systems. \n\nDeath traps, really.\n\nGood thing they're being torn down left and right to build new hotels, huh?\n\nMy grandmother was as devastated as all of us, but she took charge. Nana sold the land to the Hotel's restate developer. The money from the sale covered the double funeral cost and put enough aside for my sisters and me to go to college, with a good bit left over. \n\nThe idea of attending the local college was not even a thought for me. I wasn't going to look at the faces of people I had gone to high school with anymore. Faces that now looked so happy to see the construction being done upon the gray, wet ashes of my parent's pyre. Hell, even doing what my bother had done now held appeal.\n\nJust pull up the Star's anchor and sail off? Yeah, that would be a solution.\n\nAs the summer passed into fall, and Halloween vanished into November, the idea of a long vacation from the world I had grown up in was becoming more and more dominant, I had a surprise visitor on the good ship Caribbean Star.\n\n** ** ** ** ** ** **\n\n\"Randell?\"\n\nLooking up from my contemplation of the open throat of a beer bottle, I was surprised to see Victoria Elliot -- my ex-girlfriend Jennifer's mother -- walking down the pier towards me. Sitting the beer aside, least she chastises me about my underage drinking, I stepped up to the gangplank and caught a nylon line to stabilize my balance. I had already killed off a few of that beer's friends, not that I was drunk mind you.\n\n\"Hey, Ms. Elliot. How have you been?\" \n\nShe shook her head a bit and gave me a disparaging look. \"Vicky! Call me Vicky, I've told you that a dozen times.\" She smiled at my embarrassed shrug. \"I've been good, how about you? How are you getting along out here alone?\" Jennifer's Mom stopped at the end of the plank then grinned. \"Permission to come aboard, captain?\"\n\nLaughing, I stepped out of her way. \"Granted.\"\n\nReaching out a hand, I steadied her as Victoria walked across the six-foot fiberglass plank bridging the gap between the boat and the pier. Releasing her hand with some reluctance, she stepped down into the open deck, and I gestured her towards one of the padded bench-like deck chairs. I really wanted to return to my own seat given that her light steps had added an odd swaying motion to the normal rhythmic rocking of the large sailing vessel.\n\nTaking a seat her eyes went to the half-empty bottle by my chair. I saw a moment's disapproval purse her lips, but then she seemed to dismiss it. Biting her bottom lip, she looked around as I eased myself back into my padded captain's chair. The fact that I did at least keep a clean ship was a plus on my side today. One of those life lessons my dad had instilled before he died. \n\n\"You didn't answer my question.\"\n\n\"Humm?\" Looking up, I had to puzzle that out for a second. \"Oh, well I guess I'm getting along well enough. I have pretty much everything I need and I can keep the bills paid easily enough.\"\n\n\"From the insurance money?\" she asked. \"Sorry, being nosy, but I promised your mom one I would try to look after you.\"\n\nThat was a surprise. But then I guess it shouldn't be, given that she and mom had been friends for years before I dated her daughter. \"No, that money is still set aside for college. Mostly my trust fund that my grandpa set up is paying the day-to-day bills. Unless I have some major repairs to make to the Star here, I can basically live on the interest from it.\" I shrugged. \"My needs are few.\"\n\n\"Most single men feel like that.\" Victoria instantly seemed to regret saying that. \"Sorry. Have you talked to your brother?'\n\n\"Not since that phone call before the funeral.\" I shook my head. \"Tyler's still in Malaysia or some such place. When we talked last, he said it could be a year before he can get back here. He might as well be off in Narnia for all that I can easily get in touch with him.\" I smirked. \"Which is exactly how Tyler wanted his life to be, so I guess he's happy. Well, as happy as any of us can be, given ... well, just given.\" \n\nShe nodded \"Yeah, I remember your mom telling me that. June was always so afraid he would get killed off on some foreign adventure and she would never hear about it. How ironic, the reverse happened.\" When Victoria looked up she saw my eyes. \"Oh, sorry.\"\n\n\"Everything reminds me of it, Victoria. It's not your fault. Well, no more so than that of everyone else in this town.\"\n\nShe tisked. \"Now Randal, you know that no one in this town set that fire. Your parents were loved by everyone. It was just a terrible accident.\" After a second, seeing my expression harden, she waved it away. \"Anyway, that's not what I came by for. I wanted to see what you're planning for the holidays.\"\n\nNo longer caring what she thought, I reached down and picked up my beer. \"Not really in a Christmassy mood this year. Will probably have Thanksgiving at Nana's with her and the twins. Christmas too, I guess. If I'm still here,\" I mumbled under my breath.\n\nApparently too loudly. \n\n\"You're thinking of leaving?\" she asked sitting up a bit.\n\nWordlessly I pointed with the bottle toward the distant tower crane hovering over the spindly skeletal frame of the new hotel. I wanted to spit in its direction. \"I want a change of view,\" I said, finally.\n\n\"Oh, that construction will be finished in no time and then it will be just a pretty building.\"\n\n\"That will never be a pretty building.\" I killed the last warm sip and wished for another one. \"The Town Hall, all that white marble, now that is a pretty building. The old library, or Muller's restaurant up the coast. Those are pretty buildings. That over there is a glass and stucco shame to even look upon. And that it sits on my family's land is a damn crime.\"\n\n\"Randal ... please, let it go. Please?\" Her face was awash in sympathy. \"I watched this eat your father apart. Wendel knew he needed to sell to them, but that silly Scotts family pride made him such a bitter man for the last months of his life.\"\n\nI'm not sure if it was the beer that made the next words so easily said or if it was simply the pure hatred of what she had just said to me made my anger boil out. \n\n\"Victoria, there was never a moment that my father wanted to sell our home! Not a single second did it even cross his mind.\" I was all but spitting. I pointed at the distant construction site. \"They could have offered billions and my dad would have never even once have considered selling.\"\n\n\"Exactly. Wendel's pride in that ridiculously small house.\" Again she tisked. \"Hell, I sold mine to them so quickly the ink on the check was hardly dry before they were tearing it down. I was happy to see that old heap torn down. And if your parents had taken a seriously honest look at what they were being offered, and put aside all of the nonsense, they would have gotten clear of that old place before it burned. Your parents would still be alive, if not for that house.\"\n\nFor a moment I couldn't even speak. \n\n\"My parents would still be alive if not for that fucking building going up over there. All those bastards had to do was move a mile down the coast and build, but no they had to have our home. Fewer regulations for them to go through buying old land than virgin coastline!\" I looked down into my empty beer bottle and got to my feet to go get me another. Fuck her, my boat, my rules. \"My sisters and I are orphans due to that hotel's corporate greed. And this town's lack of a fucking spine and desire for easy jobs.\"\n\n\"Randal, you can't blame the town for an accident!\"\n\n\"The fuck I can't\" I popped the top on the bottle on an ancient metal opener nailed by my grandfather to the wall beside the fridge. The bright blue and silver cap dropped into the trash can under it, where it came to rest atop dozens of similar caps from days and days of drinking. As I was about to sit back down I saw her eyes on the bottle. \"You want one? I have plenty.\"\n\n\"You're underage. Who bought you the alcohol?\"\n\n\"Dad.\" Sitting down hard, I took a sip. \"It was part of my graduation gift. He said he got to drink at eighteen and the government was a collection of hypocritical old frauds forever changing that law.\" I chewed the next cold sip enjoying the sharp hoppy taste. \"He and I were planning a two-month cruise down to the Virgin Islands when the fire ... when he died. He had already stocked the hold for the trip.\" I gave a sad chuckle. \"Can't let it go bad, now can I. It would be terribly disrespectful of his memory.\"\n\n\"It's disrespectful of your parent's memory to sit around drinking yourself bitter.\"\n\n\"Oh, no, I'm bitter from a lot more than beer.\"\n\nVictoria sighed. \"I came by to ask you if you would like to come and have Thanksgiving dinner at my new place. Jennifer said she wouldn't mind seeing you.\"\n\nOh, the fucking nerve. \"She still dating Thomas Billings?\"\n\n\"Yes. He will be there as well, of course. But honestly, there aren't any hard feelings in him about the fight.\" She shook her head. \"You've got to learn to let go of the past.\"\n\nI took a long slow sip. \"Mrs. Elliot ... thank you for the offer. From my mother's memory, thank you for looking after her children. I hope you will keep an eye on my sisters till they graduate.\" I set the bottle down carefully. \"As far as dinner goes, no thank you. See, I have already learned to let go of the past. And I have to say that, for me, Jennifer and everything to do with her, and pretty much everyone in the whole fucking town, is the past. Now, if you will excuse me, I have several more cases of beer I need to get through.\"\n\nVictoria looked at me sadly for a long moment, then she stood up as if weighted down by anchors. \"I really hate to see you like this, Randal. It's a waste to live a life like this.\" She gestured to the ship. \"There are people in this town that would help you in a second to get back on your feet in this community. There are so many opportunities about to open up around here.\"\n\n\"No ... Vicky ... what's a waste is a small town so stupid as to think that a billion-dollar corporation like that hotel chain... \" I pointed toward the horizon. \" ...is doing anything to help a place like this to grow. They will use this town like toilet paper before it's over.\" I gave her a nasty smile. \"Enjoy being flushed.\"\n\nVictoria stood up and placed her hands on her hips. A fire in her eyes, but not in her next words. \n\n\"Well, the offer was made, and I'll leave it open. I do wish you would stop by. Please tell your grandmother I'm keeping her and your sisters in my prayers if you see her before I do. And you too, for that matter.\"\n\nResting the bottle on my chest, I let the wet cold seep into my skin. \"Pray for yourself and this whole stinking town. I'm not the one who made a deal with the devil.\" \n\nWithout saying anything else she left my ship and, beyond watching the curves of Victoria's ass as she walked away, I put her out of my mind as best as I could.\n\nThe beer helped.\n\nThe next two helped even more.\n\n** ** ** ** ** ** **\n\nDriving my grandfather's old Silverado truck around town was an odd experience. Like playing make-believe. Grandfather bought this thing new and kept it hound's tooth clean his whole life. Now, with him gone, and me driving it around people would look up and see it go past and I could tell that -- for just a moment -- they thought I was him. \n\nI hope I spooked a few. \n\nThe view of the town as I drove through was certainly a bit off to me, in a similar way. Almost as if I was seeing the ghost of a town I once knew ... but after a second glance knew it to be something different. Something fake and not as real as the original. Not a ghost ... a wraith. An evil wraith that would distort all things living here, given long enough.\n\nIt had already begun. \n\nThe local travel motel was jammed packed with the trucks of out of town construction workers. The collection of tags was impressive. Some of these guys had come halfway across the country to built this town a tourist trap mega-hotel. Oddly enough, some of them had arrived even before my parent's house had burned. \n\nI wonder if the motel owner here knows that he's going to be run out of business as soon as these out-of-town workers get finished building his competition? He's probably not even given it a thought.\n\nThe football field where I had played half-back for two years as junior varsity, was now being used as a material storage area for the duration of the build. The Hotel chain has promised to re-sod the field when they are done. Hell, they are going to make it just like a field in a college stadium. Of course, there is the fact that two years worth of this town's seniors won't have home field advantage to display their ball skills to any college recruiters. \n\nBut hey, that's a small price to pay, right?\n\nAll around the town I drove past similar, seemingly small, but important changes. Buildings that hadn't been changed in decades were being \"modernized' with a new garish look. There were places where it almost looked like it had snowed from all the Styrofoam being sanded down for the pre-dryvit, stuccoing. Drifts of white foam blew in the light morning breezes. It littered every gutter, but no one seemed in any hurry to clean it up.\n\nThe old truck took the corners toward my Nana's house with almost a muscle-memory style ease. This truck knew where it should be parked. It seemed to tolerate me behind the wheel, but only grudgingly. When I pulled it into the driveway the green Silverado settled into park with a feeling like a relaxed sigh. Clearly, happy to be home again. \n\nI envied it. \n\nSeeing my grandmother standing at the back screen door was the best moment of the day so far. She had her steel gray hair up in her normal Aqua-net tease. She had on an apron, her hands were clutching a dishtowel, and I could see her wiping what looked like flour from her fingers. Nana gave me a smile. \n\n\"Morning!\"\n\n\"Good morning, Nana.\" Reaching into the back of the truck I grabbed the Walmart bags with the French bread and soda. \"Tell me you've not spent the whole morning cooking?\"\n\n\"Been teaching your sisters my recipes.\" She held open the screen for me. \"They have done most of the cooking, I'm just making sure they don't poison us all.\"\n\nI chuckled. The smells coming out the kitchen door to greet me were agonizingly familiar. Family favorites, meals my mom had fixed my whole life, greeted me like the old friends they were. I smiled seeing twin heads turn towards me from the living room and the rush of pigtails and blonde hair. Setting the bags down on one of the only clear places, I opened my arms to my sisters. Tina hit me seconds before my only slightly small sister Mina crashed into my other side. \n\n\"Randal!\"\n\nI nodded. \"Last time I checked. So who's made what?\"\n\n\"I cooked the dressing and the potatoes,\" Mina insisted before her sisters could speak. \n\nTina had to set me straight just as quickly. \"And I fixed the green beans and help Nana with the turkey.\" \n\n\"And we both made cakes.\"\n\nUsed to twin speak after nine years listening to them echo, I nodded and tried to stand up but Tina pulled me back down. Her whisper in my ear was loud enough to be heard across the room.",
        "\"Nana's going to fuss at you.\"\n\nWonderful, just what I needed today. \"Thanks, sis.\"\n\nStanding up, I looked over at our grandmother who was putting the final touches on the icing of one of the aforementioned cakes. Her piping bag putting decorations on it that would be perfect for a high-dollar cake. Her years back in the early '80s working as a wedding preparer and cake decorator still showed. I grabbed a red solo cup and poured myself some grape soda and then moved over to stand beside her looked down at her handiwork.\n\n\"Beautiful. So I'm going to be fussed at?\"\n\n\"Yes, you are.\" She lightly turned the cake with one hand while piping white ribbon with the other. \"I talked to Jennifer's mother, Victoria. She says you're still angry with the town.\" Nana looked up at me. \"And that you've been drinking. She also said you're thinking about leaving. Sailing off, like Tyler?\"\n\n\"Mrs. Elliot says too much; most of it, not her business.\" I met my grandmother's eyes, those hazel brown eyes that were the mirror of my mother's. \"I'm simply looking at options. I don't like any that I'm seeing around here.\" I listened to my sisters. They had retreated back to the living room. I could hear the Wizard of Oz on the TV. Another knife in the gut memory flood. \"She needs to mind her own--\"\n\nNana overrode my words. \"She worries about you, Randal, that's all. Your mom and Victoria went to school together, for Lord's sake.\"\n\n\"Still doesn't make her my mom.\"\n\n\"But what she had to say still has value, Randal. Let it go. The town wasn't at fault for what happened. You have got to accept that. Bad things do happen to good people.\"\n\n\"Nana, I really don't want to talk about this. Today of all days. Please?\"\n\nShe gave me a look, then a nod. \"I'll hold my peace ... but the drinking, Randal you know my thoughts on that.\"\n\n\"It's just beer.\" I shrugged. \"I have a few after dinner. It helps with the bad dreams.\"\n\nThat silenced her protests. \n\n\"How long till everything is ready?\" I asked when the silence grew.\n\n\"We're just waiting for the dressing to finish up.\" Nana finished the cake with one last white frosting rose. \"Maybe thirty more minutes.\" \n\nPicking up a buttery roll to munch on, I kissed her cheek and wandered in to see how the movie was going. The Tin Man was singing about needing a heart. Too bad the movie is so old, I could have gladly given him mine. The pain of having one was not worth the small joys. I plopped down between the twins and listened with attention, but little real interest, to them telling me about school. Even the grade school apparently wasn't proof against the \"improvement\" fever going through the town since they told me about the school being painted.\n\nEveryone was asleep in the poison poppies and it was snowing when Nana called in for us to come eat. \n\nShe had the twins say grace.\n\n** ** ** ** ** ** **\n\nTo say that I was full is similar to saying that it's a little breezy in a hurricane. Everything was delicious and, given that I hadn't eaten anything similar to my mom's cooking in a half a year, it could definitely be called comfort food. I was have been more than willing to nap on the couch at that point, but alas that was not to be. \n\nMy sisters wanted me to help drag out all of the generations-old Christmas stuff that grandpa had stores in the attic of the garage a few years before he passed away.\n\nApparently, Nana had been telling my sisters about how the house had once looked when I was a kid. In truth I have so many happy memories of that wonderful house decorated like a candy cane in thousands of red and white lights, I wanted to see it look that way again myself. Many were the times that I had been brought here to watch my family put on a massive firework display at New Years. The air had always held such a deliciously crisp chill. I couldn't even begin to put a value to those memories and, yeah sure, I wanted my little sisters to experience a taste of that happiness. Even if it was such a small taste compared to what I had lived through.\n\nIn lots of ways, I pitied them. Then again, in a way I envied them.\n\nAs I dragged out old lights and dusty plastic sheep from a museum of old memories, I felt so terribly sorry that my sisters would never get to have lived in the hands of love that had sheltered me for so much of my young life. I had seen grandparents from both sides, and even my great-grandfather for a few years before he had passed. Those people had lived through so much and, growing up among them, hearing them reminisce at holidays, I had enjoyed the times when they had sat patiently answering my hours of questions about the stories they shared. My sisters would never get to do that. True Nana would tell them about her life but compared to great grandpa Fredric Scotts, who went to Europe after World War One, she was terribly young.\n\nYeah, I envied them. \n\nTo Tina and Mina, these old decorations were new and delightful. To me, they were steeped in a sadness of loss. I wanted to smell grandpa's cigar -- \"stinking up the place\" -- as mom would have complained, as we worked to find which lights in a string had gone out. In my mind, I saw him and my dad arguing over the placement of a plastic Santa that hadn't been placed an inch different in twenty years. \n\nAnd as I sat it into its permanent spot, I looked up and found Nana's eyes sparkling. She was seeing the same ghost memories as I was today. She gave me a smile and then moved to help my sisters untangle a Gordian knotted ball of wires and lights. \n\nGetting a ladder, I began the quasi-hazards job of string C7 lights off a gutter ... a good twelve feet off the ground. I smiled remembering how high up that had seemed just a few years ago. \n\n** ** ** ** ** ** **\n\nDriving back to the marina, I felt completely disconnected from the town I was driving through. Like the scenes you see in movies or TV shows where the person is walking alone down Broadway in New York. With everyone celebrating Thanksgiving, the streets were empty of anything like traffic. \n\nWhich would be why, when I saw blue and red lights appear behind me, I was puzzled. Where the hell had he come from?\n\nPulling over, I took the tag registration from the sun visor and was pulling out my wallet when I saw who it was getting out the black and white squad car behind me. I sighed as Sheriff Tillman walked up to my window with his slow -- trying to look like Buford Pusser -- saunter.\n\n\"Hi, there, Randal. Could you shut off the truck? Thank you.\" He moved to stand with his arm half against my side mirror. The town Sheriff took off his cliche mirror lenses sunglasses. His puffy face held an old familiar grin. \"Been eating your grandma's good cooking?\"\n\n\"Sheriff.\" Nodding, I placed a hand on my bulging belly and then moved it to the canvas tote full of Tupperware bowls next to me. \"All I could and then some.\"\n\n\"That's good. That's good. I just wanted to stop and ask you a question or two ... if you have the time?\"\n\n\"Well, you have me pulled over, with lights running, so I guess I have the time.\" \n\nHe gave a low chuckle to show he didn't think what I had said was very funny. \"Been meaning to speak to you for a few weeks now. There have been some ... well, let's just call them accident over at the construction site. Small piddling stuff mostly, cut hydraulic lines, flat tires on a backhoe, that sort of thing. Was wondering if you might have been over that way, given that your family lived there for so long?\"\n\nFor a moment I so badly wanted to tell him where he could stick such a question, here on Thanksgiving day no less. But then I realized, getting angry might be just what he was after. After the fire, I had all but accused him of knowing my parents were going to be killed. \n\n\"Sheriff, if someone turned your family home into a bonfire, and your parents died screaming there, would you want to go anywhere near the place?\" I gave him my best, you're a fool, look. \"The last time I was on that side of town was two days after the fire. You stood beside me for that, and I've not been back. Hell, I've hardly left my boat except to get groceries.'\n\n\"Yeah, about that boat.\" He adjusted the hang of his mirrored glasses from his shirt collar. \"I have had a complaint from the marina about you having loud parties?\" \n\nOh, of all the...\n\n\"Well, if Mr. Tennesy had an issue with me he should have stopped by.\" I kept my hands on the steering wheel, no need to give Dad's old friend any easy excuses. \"All he had to do is bring my dock lease agreement, and the three months rent I've paid in advance, with him and I'll pull up anchor. I'm sure the marina down at North Palm Beach would love to rent me dock space.\"\n\n\"That's not exactly the point I was trying to make, Randal. You need to-- \"\n\n\"How is Ms. Spocks these days?\" At his startled look, I hid my smile. \"My Nana said she sees your patrol car parked behind Ms. Spock's house at least twice a week, these days.\" I gave my head a tilt. \"Late library book fees or what?\" I pantomimed looking at my watch. I wasn't wearing a watch, but he got the point. \"Why aren't you at home today having a home cooked meal yourself? You're wife's honey cooked ham is legendary all over town, after all.\"\n\nHis mouth was moving, but there was no sound. Moving my hand down to the ignition, I paused.\n\n\"Was there anything else, Sheriff? It's been a long day after all, and some of us would like to get home and sleep off our ... greed.\" At his slight nod, I cranked the old Silverado. \"You have a nice Thanksgiving now. And please, tell your wife I asked about her for me, will ya?\"\n\nLeaving him watching my taillights, I pulled away and headed home.\n\n** ** ** ** ** ** **\n\nI wasn't terribly surprised to see Victoria Elliot's car at the marina. It was parked by the end of the pier my sailboat is docked at. No, to be clear, that she was there was a given, considering the afternoon I was having so far. \n\nShe was sitting on a nearby bench watching the first blazing red stages of the approaching sunset. As I pulled in, Victoria rose to her feet and walked over to stand in such a way that she would block my way to my boat.\n\nWith a sigh, I picked up my tote bag of food. Would this day never fucking end, already? Locking up the truck, I walked towards her a tired expression clear on my face.\n\n\"Mrs. Elliot. How can I help you?\"\n\n\"Vicky, or even Victoria, if you must.\" She placed her hands on her hips. \"I made you an offer for a meal today. You no-showed. I was in the area, thought I would find out why. So why?\"\n\n\"I went to my grandmother's and had Thanksgiving dinner with my family.\" I held up the bag with my leftovers as proof. \"As I said I was going to do.\"\n\n\"That takes care of lunch. What about dinner?\"\n\nWhat the fuck did this woman want with me already, blood? A kidney? My first fucking born? Maybe Jennifer breaking up with me was actually a good thing if this was the kind of influences shaping her life.\n\n\"Victoria ... it's been a long day.\" I sighed. \"You have a daughter. She has a boyfriend ... who isn't me. What do you want?\"\n\n\"This has nothing to do with my daughter. She gets to make her own mistakes.\" Victoria brushed her red hair back out of her eyes. \"I've been making one, and I need to make it right.\"\n\n\"What mistake?\" I asked, puzzled.\n\nShe gave me a sad shake of her head. \"Thinking that you were okay.\"\n\nWith a roll of my eyes, I went to go past her but her hand caught my elbow. \n\n\"You're not, Randal. You're not even close to being alright.\" She bit the corner of her bottom lip. \"I'm sorry I haven't been there to notice. My only excuse is I've been running on automatic; this has been such a terrible year all around. You may not believe me, but I've been grieving myself sick ever since your mother died. She and I were best friends for so many years.\"\n\nI wanted to yank my arm out of her hand but didn't for the moment. \"Yeah, odd thing that ... I don't remember you coming round very often before Jennifer and I started dating? And you certainly didn't after she and I broke up.\"\n\n\"Your mom and I had issues. Past issues. Things that aren't any of your business, Randal.\" Victoria released me then, hugging her arms under her breasts. \"But she and I kept talking, by phone or on Facebook. Often on a daily basis. We just ... well, thought it was best if I wasn't always over there. Anyway, that aside ... I'm here for you now and I intend to do my best by you. And, well, I'm sorry I haven't realized till now just how badly this ... all of this, has damaged you.\"\n\n\"Damaged? Damaged?\" With a low chuckle, I set my tote bag by my feet and looked at her square on. \"I've had my whole life torn to pieces. The town I once loved to live in, now is trying to run me out. The fucking Sheriff stopped me, to hassle me, on the way home! On fucking Thanksgiving, for god sake.\" I pointed at her. \"The girl I was in love with dumped me over the fact my family didn't want to give into that spoon-fed crap load of lies... \" My hand moved to point at the rising high-rise hotel in the distance. \"... those fuckers were selling. Like the rest of this fucking town did!\" \n\nI moved till I was almost nose to nose with her.\n\n\"My parents were murdered, in our home, with fire, by those fuckers ... and no one will believe it because all they all want to see rainbows and unicorns.\"\n\n\"The fire was a terrible accident--\"\n\n\"It. Was. Not!\" If she had been a man I would have shoved her, hit her, made her see with my fists if I couldn't make it happen any other way. \"The fire wouldn't go out! It spread through the whole house in seconds. Our house was half concrete for fuck sake, and it burned to the ground. Dad welding table in the garage melted into a puddle. That was a steel table, Victoria. Steel! And it melted like wax.\" I turned and stalked away a few feet before I couldn't stop myself from wiping that look of pity off her face. \"If that fire had happened in any other town, in any other place, it would have been a criminal investigation from moment one. But not here.\" I pointed back towards the hotel. \"Not because of them. We can't accuse them, can we? they might take away their hotel, right?\"\n\nVictoria started to say something but I overrode her.\n\n\"The town gets its new tourist trap. It gets all its new jobs. The hotel will get its tens of millions.\" Pausing, I looked down at the canvas tote bag lying half collapsed over itself. \"Me? I just get dead parents. A town that hates me. A girlfriend -- which I loved by the way -- who is now with another guy.\" I chuckled and threw my arms out to encompass the marina. \"All I can say is, thank god Grandpa left me enough money to look after myself. Lord knows I couldn't get a job in this town sweeping the fucking streets.\"\n\n\"Randal, you've blown everything out of proportion. No one in town hates you. No one.\" She started to move towards me and I gave her a look that stopped her in her tracks. \"Your parents were loved by everyone. No one would look the other way if they had been murdered. It was an accident! Nothing more than that. A terrible, terrible accident.\" She did move forward then, evil look or not. \"Randal, please listen to me. As much as I loved your mom and dad, and I did I loved them. I loved them both. But they were wrong, to put their desires before those of a whole town! This town needs that hotel. It will be the future for of generations of people that live here.\"\n\n\"Get the fuck out of my face,\" I growled. \n\n\"No.\"\n\nHer calm voice was a metal file on sheet steel.\n\nMy hands tightened until the knuckles shown white. \"If you were a man I would punch the fuck out of you.\"\n\nShe gave a soft snorted chuckle. \"If you think you're man enough, take a swing. I had three older brothers; I'll put you on your ass so fast your head will spin.\"\n\nThe willingness of this fiery, middle-aged, redhead to fight brought me up quick, and also showed me just how much bluff there was in my anger. I didn't want to hit her. I wanted to make her eat her words, sure. Hell, I wanted to make the whole town eat those particular words. I wanted them all to choke on those lies, but....\n\n\"I loved your mom. I loved her.\" Victoria took my backing down as an excuse to have her say.\" And, believe it or not, I love you. I hated it when Jennifer broke up with you. I told her so, but she was so mad at you that she wouldn't listen to me and then she was dating Thomas.\"\n\n\"I was glad she broke it off.\"\n\n\"Oh, bullshit, Randal.\"\n\n\"No, really, I was glad.\" The huff was less than a chuckle. \"She was telling me how great her new job was going to be when my Dad finally caved in and sold. I told her he wasn't going to ever sell. She told me he would have to. Then she said they told her she could even be the manager of the hotel. If Jennifer was such a Kool-Aid drinker to swallow that--\"\n\n\"Let it fucking go!\" Victoria's half-scream echoed across the marina.\n\n\"No. No, Victoria, I won't. Because no one else will.\"\n\nPicking up my leftovers, I walked past her without another word. Well, from me at least.\n\n\"I'll come back over tomorrow. We'll talk some more then.\"\n\nI waved that away. Whatever.\n\nIt was a long night for me before sleep finally chased me to bed. Too many emotions, too many thoughts, too many acidic comments I wish I had thought of that now screamed at me. Needing to be heard. Needed to be said. Why was I the only one in this damn town that seemed to see what a mistake was being made? Why? \n\nSo I thought dark thoughts and I drank cold beer, and then I drank and I thought some more. Over and over till I couldn't think anymore. Till, finally, I couldn't even drink anymore.\n\nThe soft waves from a sea of beer lulled me to sleep.\n\n** ** ** ** ** ** **\n\nThe next morning began on a sour note.\n\nTo be specific I belched myself awake. A terrible mixture of Thanksgiving food and soured beer, mixed with some odd nacho-notes that I had to puzzle my way through, given that I hadn't eaten nachos in a few days.\n\nSitting up, feeling wretched, I was contemplating whether I might feel better if I downed myself in the marina's salty brine when my cell phone rang. It was my sister Mina.\n\n\"Randal, Nana is crying.\"\n\n\"What? Why?\"\n\n\"I don't know, she keeps saying she's going to have to redo her monthly budget, then she starts crying again.\" I could hear Tina in the background trying to console our grandmother. An offer of shared lemonade stand money shot my eyebrows heavenward.\n\n\"Can you give Nana the phone, please?\" \n\n\"Okay.\" Mina took the phone away from her mouth and I heard her cross the room. \"Nana, it's Randal. He's on the phone.\"\n\n\"Randal?\"\n\n\"Good morning, Nana.\" Sitting back on the bed, I rubbed my pounding temples. \"Now, what's the problem?\" \n\n\"Mina! Did you call your brother?\" I smiled hearing my grandmother's aggravated huff. \"Nothing is wrong. It's just a small setback, I'll manage it with no problem. It just came at me sideways and took me by surprise.\"\n\n\"What is the problem?\" I asked again.\n\n\"The property taxes. The bill arrived in the mail this morning. It was more than I expected it to be, is all.\"\n\n\"Why?\"\n\nShe hesitated to answer me.\"Well, the property value went up a great deal.\"\n\nNodding to someone that couldn't see me, I finally understood. It was a nice vindication to see something Dad had spoken out about in a town meeting coming to pass.\n\n\"Okay, I understand now. I'll be by later today, I hope. We'll sit down together and work it out.\"\n\n\"I've got it handled, Randal. It just was the surprise that got me upset.\" She paused. \"Come by if you want to, if you're out this way, but don't make a special trip just over this ... nonsense.\" \n\n\"I'll see you soon. Love you.\"\n\n\"Love you.\"\n\nShutting off my phone, I scratched at my bare chest then rubbed at the stubble on my jaw. Time for a shave. Standing up, looking out over the marina.\n",
        "\"Maybe a swim.\" I paused in my muttering. \"Yuck, after I brush this taste out my mouth.\" \n\nHeading into my miniature bathroom, I took care of the urgent needs of my incredibly frail-feeling body this morning. Making myself not go back to bed, I shrugged off my sleep pants and pulled on my swim trunks. With a shiver, I grabbed a towel, dropped it into a chair by the metal ladder off the back and -- with no time to allow myself to hesitate -- stepped off the back of the sailboat.\n\nFuck me!\n\nPlunging past the golden Caribbean Star nameplate, I vanished into a storm of salty bubbles, which streamed up my body tickling every hair. The rush of water was delightfully warm. Surfacing, I rolled over onto my back and floated for a moment, my eyes closed. The laughter of seagulls was thankfully silenced by the water. Fucking noisy, white, air rats. It did however also silence the first two calls of my name. In fact, till a thrown stone splashed next to my head, I didn't know I had an audience. Startled, I looked towards the pier.\n\n\"Good morning.\" Victoria was holding up a Christmas red coffee cup. \"How about a caffeine fix?\"\n\nWith a hidden sigh, I swam back to the sailboat and crawled my way aboard. Sloosing water off me, I shook the towel through my short hair, draped it over my neck and waved her aboard when she paused at the gangplank.\n\nStepping on board, she placed the obnoxious red cup next to me. Victoria looked at my bare chest, her lip quirking.\n\n\"Well, well.\" She gave me a smile. \"I can see I need to have a talk with my daughter about her having terrible taste in men if she dumped that body for Thomas.\"\n\nI snorted and took a sip of the coffee. Deliciously perfect, exactly as I like it. In fact... I looked at her and raised an eye.\n\n\"I have a good memory. And I listen.\" She dusted some sand off one of the chairs and sat down with a plop. \"You asked Jennifer once to pick you up a coffee, like that one, on her way over to your parent's house for a night of homework.\"\n\n\"And you remember that?\"\n\nVictoria nodded then shrugged at my incredulous look. \"Not hard to remember; I take mine the same way.\" She saluted me with her cup before she took a sip Hers, I noticed, while equally crimson-colored had a big, white, cartoony snowflake plastered across it, half hidden by the cardboard holder.\n\n\"Um. Well, we share that at least.\" I sat back, my wet back instantly sticking to the old vinyl of the chair. \"Shall we build a relationship on our mutual love of milky coffee?\"\n\nShe gave me a naughty smile. \"Well, I'm not dating anyone at the moment, and I've heard of relationships with far less in common lasting years. But... \" She rolled her eyes. \" ...you're far too young for me.\"\n\n\"And I dated your daughter.\"\n\n\"And you dated my daughter.\" She took a deep breath that made my eyes naturally find a focus on her breasts. \"Besides, I don't date people suffering from paranoid delusions.\"\n\nOh, so we're back to that now. \"You must have a lonely social life then.\"\n\n\"Better than yours.\" Her grin flashed a bit snarky, but then slowly faded. \"I want to talk about your future.\"\n\n\"Why? The promise to my mother, again?\"\n\n\"That, and the fact I think you need some adult guidance in your life still.\"\n\nMeddling bitch. \"I have Nana for that, thank you.\"\n\n\"Um hum, I talked to her yesterday.\" Victoria looked over her cup at me. \"There was a lot going on in your life your grandmother said she had no clue about. Pretty hard for her to help you when she doesn't know what's going on, don't you think?\"\n\n\"Not everything I think or do is everyone else's business.\" I didn't try to hide my annoyance. \"And sorry, but in my opinion, none of them are your business.\"\n\n\"Damn shame. I'm making them my business.\" \n\nGetting up, I walked past her and down into the cabin. With a single last look, I defiantly shut the door on her. Weak, true, but it was as close to slamming a door in her face as my ship would allow. \n\nApparently, a closed door is not something this woman understands.\n\nWhen the door opened behind me, I turned with a huff. \n\n\"Seriously?\" \n\nVictoria shrugged. \"I was married for ten years and then divorced for eight. I raised a drama-queen daughter ... alone. I promise you, Randal, there is no door that intimidates me anymore. Now, your future plans, where are you going to go to college?\"\n\nGrabbing my wet swim shorts, I didn't even bother to turn away I simply peeled the sucking fabric off my damp ass and let them drop with a wet plop to the floor.\n\nIgnoring her, but secretly pleased at the shocked look I saw, I stepped into my tiny shower and rinsed the sea salt from my skin. The old hot-water-on-demand tank gave me a few minutes of scalding water then settled into a comfortable lukewarm. A bit of shampoo acted as soap as well and, with a shake that scattered water out of my hair, I shut off the shower and stepped out dripping. A fresh towel allowed me to look around the moving terry cloth to see my unwanted visitor's reactions without her knowing it. Her face was flush, but she was looking at me appreciatively. \n\nI moved the towel and looked her in the eyes. \n\nThere was a second of blush before she spoke. \"Well? I'm waiting, or did you think a naked man was going to scare me off more than a shut door?\"\n\n\"I'm not going to college.\"\n\n\"Ah, yeah you are.\" She was purposely keeping her eyes on my face since I had made no move to cover myself. \"Your grandfather and your dad both left money, specifically set aside for you to go. So you're going.\"\n\n\"Nope.\"\n\n\"You're grandmother will--\"\n\n\"My Nana is going to have her hands full just trying to make sure that Mina and Tina get into a good college. I'm going to leave the majority of my school funds to her, for them.\" Tossing the damp towel towards my hamper, I pushed aside the old threadbare curtain that covered my sparse wardrobe closet. I grabbed a black tank top and a pair of board shorts but I didn't, however, make any move to get dressed. Instead, I turned to face her full on. \"Taking the rest of my money, I'm going to sail the Star here to somewhere other than this fuck-shit town for a year or two, find me a better place to live. And then, once everything around here goes to shit like it's going to, I'm going to come back. I'm standing in the middle of Main Street, drop my pants, and tell every one of you losers that wouldn't listen to my dad to kiss my ass!\"\n\nFor a moment she stood there, dumbfounded. Then a smirk appeared and her eyes dropped to take in my whole body in a slow gander. When her eyes came back to my face I was the one hiding a blush.\n\n\"I can't wait to see that. Too bad it won't happen.\" At my glare, she sat down at the galley table. \"See, it's a sad fact, but it is a fact that your dad was wrong. So things won't be going to shit. Which is good, given that you're going to be staying. See, I'm going to apparently have to hand raise you like a baby bird till I believe you're really ready to fly on your own. At the moment you're still far too susceptible to believing fantasy nonsense to be allowed on your own.\"\n\n\"Victoria, I've been living alone for months now!\"\n\n\"There is a lot of difference in living on a boat in a marina -- swilling beer and eating junk food -- than being out in the world, alone.\" She nudged the trash can with the paper remnants of a week's meals. \"You're what? Eighteen, nineteen? The real world will eat you alive in a week.\"\n\n\"Not likely. I have all I need here.\" I held out my arms to the walls around us. \"Anything this world can throw at me, I can simply sail away from.\"\n\nVictoria gave me a snarky smirk. \"What makes you think you can manage a sailing boat alone? This thing is a fifty-footer, Randal! You couldn't even get this ship out the marina, without sinking half the other boats here?\"\n\nPulling on my shorts, I walked past her. Stepping off the boat, jumping up the gangplank onto the dock. Anger fueling me, I threw off the two mooring ropes at bow and stern. Hopping back down, I flipped up the brightly-varnished wooden cover on the control panel, turned the key, and hit the button to start the Star's anchors rolling up.\n\n\"What are you doing?\"\n\nTurning the brass key to its fullest, the big engine under us woke up and belched exhaust into the water behind us.\n\n\"Randal?\"\n\n\"I would recommend you leave now.\" I placed one hand on the throttle, the other on the wheel and gave her a look that dared her to do otherwise. \"Last chance to do so before you have to swim.\"\n\n\"Yeah, like you're going anywhere.\"\n\nWith a quick tilt of my head, I pushed the worn wooden knob under my fingers forward and turned the wheel away from the dock. With a foam of bubbles behind us, the Caribbean Star purred her way away from her mooring. Seeking the clearly marked deeper channel, I headed toward the open throat of the marina's cluster of yacht-laden piers, easily pointing the sailing ship's long nose towards open sea. Ignoring Victoria -- too focused on what I was doing to pay her any mind whatsoever -- I smiled feeling the Star roll under my feet as she wallowed in her own wake ripples. At the end of this narrow channel, I turned her hard port and slipped past the last pier. With a glance ahead, I saw that there was nothing before us clear to the horizon. \n\nSetting the searing lock, I left the wheel and moved forward to unhook the nylon rain cover on the rolled up sails. The white patina of seagull shit irritated the hell out of me as I pulled the covers free and rolled them up. Stepping past the cabin door, I tossed them inside to get them out the way till I could manage to clean them.\n\n\"Okay, Randal, you made your point.\"\n\nStepping back to the controls, I looped the mainsail line off the line clutch I was holding, hit the button beside the electric cabin top winch, and watched it spin. Above us, the mail sail ran up the tall mast. It billowed out to a wonderful tautness as I turned the wheel pointing Star completely into the wind.\n\n\"Randal!\"\n\n\"I'm not making a point, Victoria. I'm taking my sailboat out for a day of sailing.\" Happy with the luff of the main, I took a second line and repeated the process to raise the foresail into place. The Star began to heel-over as she caught the wind. \"I told you to get off, but you didn't want to listen. Swim or stay. I honestly don't give a fuck.\" \n\nFor a moment she stood there huffing, then she yanked out her cell phone and began punching the face. \n\n\"Jennifer? Hey, I'm going to be out of touch for a few hours. Just letting you know.\" She stepped away but I still heard her. \"No, nothing is wrong, I'm just going sailing. A friend made me an offer I couldn't refuse. Yeah, I hope so too. Okay, I'll call you when I get back. Love you too, bye.\"\n\nWith a flounce, Victoria moved over to one of the padded seats. After a moment of huffiness, she leaned back, undid her ponytail, and let her red hair stream out into the wind. \"So where are we going?\"\n\n\"Nowhere in particular. Just to the east, for now.\" Looking to port, I saw a charter fishing boat set up by the inlet. Chasing red snapper or snook, no doubt. \"Or I could turn us south. How about dinner in Miami?\"\n\n\"Too many people,\" she muttered, half-ignoring me.\n\nI nodded accepting that fact. \"There's leftovers in the fridge still. There's Mangrove Cay above Grand Bahama. We can anchor offshore, take the food and have a picnic on the beach. Or maybe go swimming?\"\n\nShe shot me a look. \"I didn't bring a suit. Unplanned trip, remember?\"\n\nI smiled and waved to the charter boat as we passed. \n\n\"All the better.\"\n\nVictoria shook her head at my grin. \"Don't try to flirt with me, Randal, I'm not my daughter. I want one of those beers you've been hoarding.\"\n\n\"Floor cooler, middle of the cabin, under the rug. Just pull on the metal rung.\"\n\nWhen she disappeared into the cabin, I set the autopilot and took the time to pick up my tank top shirt and pulled it over my head. Resting my hands on the wooden overhead railing, I looked at the lighthouse as it vanished slowly behind me. The creak and rustle of the sail and boom a gentle song in my ears. \n\n\"Here.\" A bottle bumped me in the back. Turning, I took the offered beer. \"I figured you would want one.\" \n\n\"Thanks.\" I gave her a soft smile. \"Vicky.\"\n\nWith a roll of her eyes, she stepped past me and plopped her shapely butt on a padded bench seat. \n\n** ** ** ** ** ** **\n\nThe water was a brilliant turquoise color and the sky was so blue it hurt the eyes to look at it for too long. When she finished her beer Victoria stretched out onto the bench and propped her head on her arm. That she was watching me made me a little self-conscious, but I didn't give her the satisfaction of knowing that.\n\nOr I hoped anyway.\n\nFeeling a hint of the munches, I disappeared down into the cabin long enough to make me a turkey sandwich. My long years of hard taught manners got the better of me. \n\n\"Are you hungry, Vicky?\"\n\n\"No, not really. I still feel stuffed for yesterday. You missed a great meal.\"\n\nI decided to not ignore the needling. \"I had a great meal in its place. And with much better company than my ex-girlfriend and her new boyfriend.\"\n\n\"I wish you and Jennifer could have at least stayed friends. You two knew each other for so long, it's a shame that you fell apart over something silly.\"\n\nNot wanting to argue, I did choose to ignore that.\n\nMunching on my sandwich, I stepped back out into the light and looked around, double checking everything till I was satisfied nothing had changed in the few minutes I wasn't there. Despite my act of sailing confidence, I wasn't really as comfortable as I was trying to make Victoria think. While it's true I had taken the Star out dozens of times, even sailing her as far south as around and past Key West ... but, I had always had my grandfather or my dad aboard to double check everything for me. \n\nNot that I was nervous or anything. I knew what I was doing.\n\nGlancing over at the redheaded woman, lounging comfortable, I did have to question just what I was doing with her. Somewhere in the middle of this mornings ranting, she had tripped something in my emotional cocktail slurry. Maybe it was her more-than-minimal resemblance to her daughter, a girl I had wholeheartedly loved. Or maybe it was the simple maturity that made Victoria seem like a tower of confidence no matter what I said. I wasn't used to that. Well, Nana had it, but that's different. Way different.\n\n\"What?\"\n\nI startled. \"Huh?\"\n\n\"You're staring. Never seen a redhead before?\"\n\nI flashed her a grin to hide the awkwardness I felt. \"Yeah, I've even kissed one a time or two.\"\n\n\"Hum, was kissing all you did?\"\n\nShooting her a look to see if she seriously wanted an answer to that, I saw the twinkle in her eyes. I gave her a roll of my eyes and went back to chewing cold turkey.\n\n\"You. Were. Staring. Why?\"\n\nLooking back at her, I had to wonder what she was even questioning this. She was a fairy looking, nymph-faced, redhead with a decently curvy body, who was a sprawl in a not-quite-but-close pinup pose. Her crimson locks -- freed from their normal ponytail or bun -- were dancing in the wind, caressing the back of her slim neck. \n\n\"And now you're staring again.\"\n\nI decided to stroke her ego. \"There is not a lot out here as beautiful to look at as you. There, happy?\"\n\nShe didn't buy it. Sitting up, Victoria gave me a look. \"Lame. That the best you got? No wonder my daughter dumped you.\"\n\nOh, that stung.\n\n\"You got a nice ass. Not much in the way of tits, but a damn nice ass,\" I said.\n\nShe smirked back a mirror of my own. \"You should shave your pubes; your dick would look longer.\"\n\nNope. Oh, hell no.\n\n\"It's long enough it would touch places your ex-husband never reached.\"\n\nVictoria chuckled at that and I smiled back.\n\nGetting up, she moved over to stand in front of me, her hands on her hips, swaying with the rock of the sailboat. \"That's not saying much.\"\n\nNow it was my turn to chuckle. \"How sad ... for you.\" I let my eyes drop to the twin low hills pushing up her shirt. \"But then maybe you couldn't have handled a man any bigger.\"\n\nHer smirk was sexy as fuck. \"That's what the toy drawer is for.\" For a moment Victoria leaned in close enough to me I thought she was about to kiss me. Her words were a whisper. \"Which, if this is the best you can flirt, it's a damn good thing I have.\"\n\n\"Yeah, it probably is. You're too old for me.\"\n\nHer hand moved between us and she lifted my chin so my eyes met hers again. \"How sad ... for you. I want a sandwich.\"\n\nLeaving me standing there blinking, she vanished down into the cabin.\n\n** ** ** ** ** ** **\n\nIt took the Star about five hours of strong sailing to reach Mangrove Cay. \n\nAppearing like a dark stain on the horizon, the small island began to crest the ruler-flat line ahead about an hour before we arrived. When the tips of about a half-dozen masts appeared next I knew we were going to have company there. By the time the island was clearly visible I could tell that there were, in fact, more than just a few others. Much smaller, coastal boats were there as well. Taking Star off autopilot, I eased her into a sweet anchorage -- as far from the nearest as I could -- lowering the sails as I went and, when finally happy, I dropped both anchors.\n\nThe splash woke Victoria.\n\nLooking over at her with a smile, I gestured to shore. \"We're here.\" \n\nI closed the control panel and moved to the forward locker to get out a few items I store since I don't use them often. The Sea Eagle inflatable runabout being the largest and its small battery-powered electric outboard motor being the heaviest. \n\nDragging out the air pump and starting the assembly, I was muttering to myself. \"Oh, I wish I had done this before we left and just towed this damn thing behind us.\"\n\n\"Plan your kidnappings better next time.\"\n\nI shot her a fuck off look. \"Hardly a kidnapping, since you could have left at any time.\"\n\nVictoria watched me placing the floorboards into the inflatable, then she knelt down to help with locking them in place. \"Well, I already had you for indecent public exposure; I was curious just how many more crimes you might commit.\"\n\nGlancing up my eyes went to the open throat of her top and the delightfully freckled cleavage on display. \"Would spanking you constitute assault?\"\n\nShe chuckled. \"Yes, but it would also give me my grounds for justifiable homicide.\"\n\n\"There is a wicker basket atop the fridge. Could you get the food heated and packed away while I get this inflated? There's plenty of soda and maybe pack something sweet.\"\n\n\"Where do you keep something sweet?\" she asked, following the lead perfectly.\n\nI gave her a naughty smirk that said it all.\n\n\"Oh, gods.\" With a roll of her eyes, Victoria got to her feet and vanished below. I chuckled hearing her cussing to herself. Leaning over, I looked through the door and saw her bent over into the fridge. \n\nA wolf whistle earned me a fruit cup thrown at me.\n\nCatching it, I smiled, popped the peel-back top, drank down the sweet juice and chewed on the soft chunks of cold fruit. Honestly, I could have made a decent lunch off a few of these. But, even as I thought of that, memories of the delicious chicken dressing that was left from yesterday made my mouth start to water. The other trimming my Nana had insisted I take were equally as wonderful and the sandwich I had earlier was a far distant crumb to my hunger. \n\nWorking on the runabout I thought about the flirty banter that had begun to grow between Victoria and me as this day had passed. In the early years of my life -- when she had been our next door neighbor -- she had never been anything but polite to me. She was attentive to the questions that a silly child might ask, but she had paid me no special attention. My brother Tyler had been the older one that always drew all eyes to him, that always seemed to get the girls to flirt and to want him to take out. There have been times when I had to wonder if Jennifer had been a bit older if she would not have rather dated my brother than me. She had all but said so once the break-up arguments had begun between us. The phrase \"I wish you were more like....\" could really have only one ending given the way Jennifer had crushed on Tyler years ago. ",
        "But Victoria? \n\nShe had never paid my brother any attention. Well, no more so than any woman seeing what was a prime example of a young Floridian male. Tyler was gifted with more of our father's heritage than I had been granted in the DNA lottery. He tanned to a darkness that I would have needed bronzing oil to achieve. His hair would bleach out a honey blond, while mine persisted in turning a baby shit brown. \n\nSlipping the electric outboard onto the motor mount of fully-inflated runabout, I clamped it down then eased the inflatable boat off the back of the Star and tied it across the transom by the ladder. A hard jab in my spine caused me to turn. \n\n\"Here.\" She thrust the basket at me.\n\n\"Thanks.\"\n\n\"De'nada,\" she answered.\n\nSitting the basket in the U-shaped front section, I walked over to the control panel and took the ring of keys. Clipping it to my belt, I had to ponder just how many time I had done that. Not often. Living in the marina there had always been an \"I'll watch out for you\" kind of attitude among us live-aboard boat owners. Out here, in the Grand Bahamas, I can't say I have anywhere near the level of trust in my fellow boaters. The possibility of watching my home sail off into the distance was one that I had always felt needed to be watched out for whenever we took the sailboat out to an island and left it at anchor. \n\nExtending a hand to Victoria, I balanced her as she stepped down off the metal ladder and into the runabout. Ducking back into the Star's cabin, I grabbed a beach blanket and a few large towels. Locking up the cabin door --another thing I don't do often -- I scampered off the back of the Caribbean Star and then stopped in mid-action and crawled back aboard to get the battery pack off the charger. Climbing back aboard, I plugged it into the electric motor, tested it, and then untied us from the Star. Pushing off the back of the sailboat, hand pushing just under the nameplate, I turned us towards shore and raced the hidden reef-born waves into the sandy beach. \n\nBelow us, the water was so clear as too the breath away. We felt and looked like we were flying over emerald blue air. The fish swimming under us appeared to be hovering and they, at the sound of the prop, shot off like silvery rockets. \n\n\"It's beautiful here,\" she said with a delightful child-like wonder in her voice. \n\n\"Was a lot prettier before Hurricane Erma kissed it.\" I pointed to trees that were broken and some tatters of some type of debris still hanging from another. \"Luckily this little island isn't as settled as the rest of the Grand Bahamas. Mother Nature can take a harder hit than anything that man can ever build. Plus this place was blessed compared to Puerto Rico.\"\n\n\"I've seen the news. Terrible.\"\n\nAs we bumped our way over breakers and slipped up onto the sand I jumped out and pulled us in closer. The water about my bare lower legs was warmer here than that in the marina I normally swam in. The sand seemed whiter. The water bluer. And the woman next to me more beautiful than I had ever seen her appear before. \n\nI held out my hand and helped her step onto shore. But then I didn't turn it loose. For a moment she paused as if awkwardly unsure of what I was doing, then she smiled, and there was a hesitant blush. A low chuckle, a shake of her head that sent red hair flying. \n\n\"We'll hold hands later, I'm hungry.\" With a grin, Victoria slipped her fingers free of mine. \"Heating up all that food got my mouth to watering. Everything smelled so wonderful!\"\n\n\"Nana and my sisters outdid themselves. She was trying to teach them the family recipes and they took it to excess.\" I chuckled and grabbed the beach blanket and wicker basket out the boat. \"I only grabbed some of the best of the best. Let's just say there were a few things that ... needed a few more tries ... or were possibly never good, to begin with.\"\n\nLaughing, Victoria pointed to a place where a cluster of trees was shading a small half-circle. \"That looks good. What you think?\"\n\nNodding, I walked with her through the thick sand. There were a few places where I could see stuff had been washed ashore and then been half-buried by the wind and waves. I had to wonder if what I saw was part of someone's home. How many lives had been torn apart in this last year like mine had been? In a way I envied them. You can clean up after a hurricane and still live where you always lived. These peoples lives had been fucked up, true, but there wasn't a mega-hotel going up where they had lived.\n\nWell, not yet anyway. \n\nSpreading out the old heavy blanket, I parked the food basket and dropped down next to one of the trees, resting my back against the knobby wood. Victoria knelt down next to me and began to serve us both. The moment she started opening containers my saliva production doubled.\n\nShe had to comment. \"This is not what I meant when I said I wanted you to have dinner with me.\"\n\nLifting out a condensation-covered bottle of Coke, I took a sip of my soda and pointed to the Star riding on her anchor. \"The view here is much better than from your apartment.\"\n\n\"How would you know, you've not been in my apartment?\" She looked out at my boat and, after a moment, slowly nodded. \"Yeah, that is a nice view. You really love that old sailboat, don't you?\"\n\n\"My grandfather bought it and her sister, the Midnight Star, back when he got back from Korea. He and Dad wandered the whole world, for most of the seventies, in them together.\" I nodded to my ship with my chin. \"She's been to Ireland, Spain, Italy, Greece ... hell, all over the Mediterranean.\" Taking a second sip, I capped the bottle and took my plate from her. Our fingers touched under the foam plate for a second and that suddenly seemed important. \"Tyler's boat is on its third trip across the Pacific. Maybe even its first around the world the world. Grandpa was in Japan with her when Vietnam escalated. He crossed back over the Pacific not knowing if we would be at war with Russia or China before he reached home.\" I looked over at the redheaded lady next to me. \"Yeah, I really love that old boat out there.\"\n\nGlancing down at the plate in my hands, I pondered this cheap compressed foam being loaded with such delicious food.\n\n\"So much of this world feels like this to me now.\" I held up the plate to show here what I was talking about. \"Even when the stuff on top is wonderful, what's holding it up is cheap and designed to be thrown away.\" I looked at her and saw Victoria understand what I was talking about. \"That is what has me so mad at our little town. There was no reason to change what had always worked. We threw out the good china, and switched to paper plates simply because someone rich told us it was the smart decision.\"\n\n\"Randal, I don't want to talk about the hotel. Not here. Not today. That's literally out of sight and hours away.\" She gave me a tight smile. \"Let's just say that we agree to disagree about it, and have a wonderful day together. Otherwise, this whole kidnapping isn't worth a thing.\" \n\nShaking my head, I grinned at her. \"You're going to hang onto this whole 'kidnapping' thing, huh?\"\n\n\"Oh, yes. I have been abducted. Taken against my will, carried off to a foreign land, forced to slave in a galley kitchen for his pleasure, and then... \" She looked around. \" ...from the looks of it, I might be going to be marooned.\" Reaching over, she stole a deviled egg off my plate. \"Hell, I may even have to worry about my virtue the way things are going.\"\n\nPopping my stolen food into her mouth, Victoria gave me a smirk.\n\n\"I've kissed your daughter.\"\n\nSlowly her eyebrow rose. \"Okay, so?\"\n\n\"If -- after knowing I had to deal with a beta-tested lunatic like Jennifer -- you think that I'll allow someone to get away with stealing deviled eggs from me, without her losing her virtue, on this beach, in the middle of nowhere ... well, do it again and see what happens.\"\n\n\"Ooh, I'm so scared,\" she simpered.\n\n\"Steal an egg. Come on, steal an egg.\" I even held my plate out to her. \"Come on. I'll have you on your back, my face between your thighs, so fast your eyeballs will pop.\"\n\nFor a moment she sat there, then a puzzled look crossed her pretty face. \"That's not really a deterrent, Randal.\"\n\nSlowly a smile began to grow on my face. \"I know. Please, steal another egg.\"\n\nVictoria began to laugh. \n\nDigging into my food I made a point of leaving an egg till the very last bite. I even held the plate closer to her for a moment before eating it. At the smiling shake of her head, I popped the last bite away and placed the empty plate in the basket. Leaning back on my elbows, I looked out across the beach at the rolling waves.\n\n\"I've always wished I could live in a place like this. Just some small island somewhere, with the whole world a distant place over the horizon.\" Looking over at her, I shrugged. \"I guess that sounds childish to you.\"\n\n\"No, not really. But at the same time, it does sound unhealthy. You need to interact with people, even when you don't want to. Actually, it's best to do it, especially when you don't want to. The more you try to run from the world the harder it will chase you. It's twisted that way.\" Placing her plate atop mine, she crossed her nice silky-looking legs under her and gave me a lingering look. \"I always liked people, in general. The world can be what you make of it, but you have to put forth the effort to really make it something. Otherwise, it will take you, and make you into what it wants.\" \n\nShe opened another soda and, like me landed her back against a tree.\n\nVictoria pursed her lips. \"I could deal with a place like this, yeah it would be nice. But, after a few weeks, I would want to go to a restaurant and eat something other than my own cooking. Or maybe go see a movie. If you live alone on an island you're alone with your own thoughts for far too much of the time. And the sad thing is the more time you spend trapped in your own mind the more it tends to turn you in circles of depression.\" \n\nHesitantly, Victoria reached her hand over to me. Unsure why she wanted to do it but willing to hold her hand, I interlaced my fingers with hers.\n\n\"That's why I told you I want you to think about your future. The life of a vagabond, sailing around from harbor to harbor, might seem like a great idea till you find yourself stuck in a rut you can't get out of. I hate to see that happen to you. You're such a nice boy, you don't need to waste your life drinking and sailing. You could do so much, you're passionate about our little coastal town. So much so you hate to see something happening to it that you don't agree with. You need to harness that passion in some way. Hell, if you were older, I would say run for mayor in the next election. Something like that.\" \n\n\"I don't want to do anything like that. I don't want to be in charge of anyone else.\"\n\n\"But you want to have people seeing things from your point of view, yes?\" She smiled. \"Well, that takes putting yourself in front of the crowd and leading them by the hand to where you want them to go. You don't like what the town did when it accepted the hotel's offer? Well, your dad thought that all he needed to do was protest it. To tell everyone at a council meeting that it was a bad idea. Well, what would have happened if your dad had instead run for mayor, or tried to take a seat from one of the city council? He could have placed himself in a position to have stopped the land purchase. Right? Now, you. Well, you could move to another place, yeah sure. But why? If you really care about our town, as you say that you do, you should stay and try to mitigate what you see as the hotel's doing damage to the local area.\"\n\nI had to be honest. \"I never thought of that.\"\n\n\"No kidding. You've wanted to simply wallow in an abused kind of self-pity about how everything is unfair. That is the one thing I've spent years trying to get across to Jennifer without it ever sinking in. She seems to think the world owes her a living and a future. And, let me tell you, the more I tell her it's going to take work to get what she needs ... the more she listens to people telling her she needs to do something stupid.\" For a moment she looked at me with a distressed look. \"Damn it. What is with anyone under thirty these days? I promised your mother to look out for you and all you want to do is what Tyler did. Vanish off into the wild blue yonder. How can I keep a promise to a woman, I cared about like she was my sister when I can't even get you to stay around?\"\n\n\"I thought you didn't want to talk about this today?\"\n\n\"I don't! I want to talk about your future.\" She squeezed my fingers. \"I want you to see that your future could be around here.\"\n\nI looked down at our joined hands. \"What are you saying?\"\n\nShe seemed to see what I was implying and pulled her fingers free. \"That's not what I meant.\"\n\nFor a moment I let my hand stay where it had been held so sweetly. \"Why not?\" I asked suddenly, not sure why, but really wanting the answer.\n\n\"What?\"\n\n\"Why not? You and I, why not?\"\n\n\"Ah, the whole I'm old enough to be your mother thing, for a start. Then there is the fact you were my daughter's boyfriend.\"\n\n\"So what? That doesn't mean I'm some sort of plague carrier simply because I kissed Jennifer a few times.\"\n\nShe shook her head. \"Now look, Randal, I'll admit flirting you with you has been fun today, but there is no way that you and I could ever have any kind of a relationship together.\"\n\n\"Why not?\" I asked.\n\nShe humphed. \"I told you why not. You're no older than my daughter. You dated my daughter. You're the son of one of my best friends.\"\n\nI grinned. \"You're just listing the negatives. How about the fact I'm half your age and eighteen can go into forty a lot of times.\" I chuckled at her look. \"What? You think I wouldn't want to have sex with a woman your age? Hell, I would love to do that. I've only been half-joking when I've been flirting with you. You're a gorgeous woman, Vicky.\"\n\n\"Maybe you need to go back to calling me, Ms. Elliot.\"\n\n\"Not a chance in hell.\"\n\n\"Please take me back to town.\" She got up and began to walk toward the runabout. \n\n\"Vicky? Victoria, stop!\"\n\nWhen I caught up to her, I merely touched her elbow, but she whipped around. Her eyes were as ablaze as her fiery hair and she, for a second, looked like she was about to hit me. At the surprise in my eyes, Victoria paused and took a deep breath.\n\n\"I'm not forty,\" she said in a rush.\n\n\"Sorry?\"\n\nShe gave a knowing smirk. \"I'm not forty. I've not been forty for the better part of a decade\"\n\nI shrugged. \"Sorry, I didn't know. I just guessed.\"\n\n\"Yes, and that's half the problem.\" She angrily brushed her blowing red hair out of her eyes. \"You guessed forty because -- to you -- forty sounded old. To me, I would give my left nipple to be forty again! Don't you laugh, I'll hit you.\"\n\nInstantly I stifled the smile that was trying to form. I must have looked ridiculous, because, for several moments, she eyed my face with a greedy lust to strike. I'm sure a cobra has a similar look in its eyes, or maybe a shark.\n\nShe turned and looked away from me.\n\n\"Randal, I've enjoyed today ... in spite of the way it started. I've even enjoyed the flirting. It's been fun. Made me feel like a young girl again.\" She looked down at my half-bare chest. \"You're a handsome young man. I wish I was your aged again. If I was, I would show my daughter what a fool she was to let you get away from her. As is--\"\n\n\"So why don't you?\" I asked.\n\n\"Why don't I what?\" she asked looking back over her shoulder.\n\n\"Show Jennifer. Here. Now.\" I held out my arms to highlight the location where we stood. \"There is no reason for you to have to be my age for you to show her that. Hell, you're being the woman you are and, well, being able to attract a man my age, that is one hell of a way to snub her.\"\n\nTurning back to face me, Victoria chuckled. \"Sorry to burst your testosterone bubble, but I won't sleep with you just to snub my daughter.\"\n\n\"How about to simply have fun?\" I rolled my eyes. \"Would you for a minute fucking forget that you're Jennifer's mom? This isn't about her, anyway. I was happy she dumped me. Every word out of her mouth, for the last weeks we were together, showed me that she and I had nothing in common. We got together because we were all but pushed together. You and my mom seemed to think us the perfect couple but, in truth, we never saw eye to eye on much. Half the time Jennifer seemed to only be together with me because it was expected. She talked down to me ... whenever she didn't want something from me.\"\n\nI paused realizing I was spilling out things I had never told anyone, least of all the mother of the girl I was talking about.\n\n\"I did love her, hell, I still do in some ways, but I can't be anything but happy that she's not making me feel like I'm beneath her to date. What?\"\n\nVictoria's eyes had dropped and for a second I was sure I had seen a flash of old pain cross her face.\n\n\"I did to my daughter what my mother did to me. Fuck my life.\"\n\nPausing, seeing a tear appear and slid down her cheek, I held my questions. Staying as quiet as I could, unsure what to do or say, I watched her again turn away from me. Slowly she sat down in the sand, looking out to sea. I eased myself down next to her.\n\n\"Gary... Jennifer's dad ... and I grew up across the street from each other.\" She absently picked up a battered shell from beside her and tossed it back into the oncoming waves. \"Our parents made us date. There was never any question who we were going to take to the prom. Who we were going to the movies with. Or who we were going to marry.\" She looked over at me. \"We stayed together because of Jennifer as much as anything, but we hated each other by the end. I swore I wouldn't do that to my daughter and, I'll be damned if I didn't turn right around and do it.\" \n\nA second seashell followed the first. Then a third.\n\n\"She and I never slept together,\" I confessed.\n\nVictoria looked over at me quickly, then looked away with a shrug. \"That wasn't my business, so long as you didn't make me a grandmother too early. What my daughter does or doesn't do with her own body stopped being my business when she hit eighteen.\"\n\n\"We ... well, we always felt like we were doing things without really wanting to. Even kissing seemed off. Like kissing your sister I guess.\"\n\nVictorian gave a sad laugh. \"Oh, believe me, I know that feeling. Gary and I were the same. Sex was like dancing. Nervous dancing, not Patrick Swayze dancing. God, what I wouldn't have given for some Patrick Swayze style sex back then!\" She smiled at my raised eyebrow. \"I had such a star crush on that man. I hate to say it, but wanted to be Jennifer Grey so badly I named my daughter after her.\"\n\nChuckling, I nodded. \"I can understand that kind of thing. I've had a few crushes too. None I would name a child over, but a few that still keep me wishing.\"\n\n\"Who?\" She held up a hand before I could speak. \"And if you tell me you crushed on me, I'll pop the back of your head like Jethro Gibbs.\"\n\nIgnoring the threat, I didn't, however, mention that she had been a crush ... if by crush you mean someone you've lusted after while you masturbated. Instead, I mentioned my two favorite famous women to fantasize about.\n\n\"Lena Heady and Eva Green.\"\n\nVictoria gave me a snarky look. \"Skinny brunettes, that get naked on screen often, huh?\"\n\nI shook my head then shrugged. \"Well, that doesn't hurt ... but they are both a bit dark and mysterious. They play powerful characters. I like that.\"\n\n\"You like strong women? That's unusual in a man.\" She gave me an appraising look. \"Most seem intimidated by that.\"\n\n\"I'm not.\" I looked around for a second. \"Can I recommend we move back over to the blanket? We're going to get sand fleas up our asses if we keep sitting here.\"\n\nAfter a moment she nodded. ",
        "Standing up I offered her my hand. After a second her eyes followed my extended fingers up my arm, across my chest, over my chin, and finally came to rest upon my eyes. When her fingers curled into mine I pulled her up and, for a moment, we stood just inches apart, our eyes asking questions, receiving answers and searching for the honest truth hidden behind the gray shadows of those answers. \n\nEver so slowly I leaned into toward her and I felt more than saw the hesitant pull on my fingers inching us closer. The gentle breeze off the ocean blew a strand of her red hair across my face. Almost like a whip of fire to punish me for the generational-transgression I was so eager to commit. \n\nA second and then a third whip of hair blew between us.\n\nUnable to stop myself I caught the back of her head imprisoning that fiery mane before more of it blocked my way and with a gasp from her that was both surprise and passion-driven she closed the distance. \n\nVictoria surged into my arms, her breasts pillowing into my chest, her lips hitting mine with the same ferocity that I was feeling. Her hands moved mine out the way and she seized my head, her fingernails driving into my scalp as she fought my mouth for a deeper harder kiss. \n\nA battle I was happy to surrender myself into. \n\nMy hands on her hips, I took a step back and then a second as she moved forward keeping pace. Knocking the empty basket to the side, we crashed together onto the blanket and let the shadowy play of light and dark from the trees above hide the fact we were all but tearing each other's clothes off to get our hands on bare skin.\n\nSitting up, Victoria looked down into my face with a hot intensity. Her breath ragged, her lips glossy and calling for me to kiss them again. \n\n\"This is a mistake,\" she panted.\n\nI nodded.\n\nOur mouths came together again, if anything, even harder. \n\nRolling over, pinning her under me, my hand rode it's way up under her blouse to cup her full breast. I didn't even think about it, it simply seemed to be the natural thing to do and when her hand clamped onto mine pinning that hand, making me squeeze her breast harder, I could see that she was thinking the same thoughts and in the same way. \n\nOur lips parted and tongues wrestled amid shared breaths that delivered all the passion we each had been holding in check. How simple a thing a kiss is that it can carry so much that neither she or I could say. That it could deliver so much sweeter than words the emotions we both had and had been keeping hidden. \n\nEven if, at the moment, that emotion was simply a shared lust.\n\nVictoria caught my half-opened shirt and sent the bottom straggler buttons flying off to lay amide the sea shells and sand. Lost to reappear in summer daydreams maybe, they were chased by my shirt moments later and then Victoria's hands were on my back. With not even a hint of mercy, she dug her nails into my skin and her mouth vanished from mine only to reappear on my neck. I moaned as her teeth sank in and her mouth tasted my skin. Knowing I was going to have a hickey -- and not caring in the least -- I found the top of her bra and pulled the cup down out of my way. With her nipple, as hard as a pebble in my palm, I squeezed Victoria's soft flesh in my tight grip and moaned her name as she sucked at my neck. \n\nThen her mouth was back at mine, demanding more kissing. Begging for more. Pleading for more.\n\nI was happy to oblige. \n\nWhen those sweet lips parted again this time it was my tongue driving into her mouth, perhaps seeking something in this kiss that her daughter could never give me. Honest passion given back where it's given.\n\nAnd I was getting that in spades. \n\nI felt her hands playfully trying to turn us back over. With a giggle I held tight to her and rolled us, but too hard and laughing together we tumbled off the blanket and back into the sand. We ended up with her sitting astride me, her hot gaze looking down at me along the length of her extended arm. She dug her nails into the middle of my chest, then slowly raked her fingers down across my abs. \n\nShe gave her head a shake. \"No seriously, this is a mistake.\" \n\n\"Then it's a damn good one.\" \n\nMy hands caught her by the flare of her wide-straddled hips, pulling her down onto me, letting Victoria feel the hardness that was about to burst from my board shorts. For a moment she lifted herself, letting her body ride up and cover the hard bulge of my cock under her. \n\nWith a surprise roll, she spun up off of me and walked away, adjusting her clothes.\n\nSitting up, staring after her, unable to believe that the moment had been shattered so easily, I needed much longer to get my clothes back into place.\n\n** ** ** ** ** ** **\n\nThe ride in the runabout back out to the Caribbean Star was made in silence. We were each too caught up in our own thoughts and the emotional storm that had surged up and then been stifled. \n\nShe avoided my hand when I went to help her aboard.\n\nTying off the inflatable boat to the back so it would be out of the way, I stepped over to the cabin door, unlocked it, then carried the keys back to the Star's control panel and stuck the ignition key back where it should be. Least I misplace the damn things. Looking past it, into the cabin I saw Victoria sitting on the edge of the table, a lost look on her face. \n\nI knew I had a similar look.\n\nSitting on the padded captain's seat I looked off at a much small coastal craft riding to port. It was a fishing boat and there were dozens of fishing poles jutting off in every direction of the compass. Looking down into the clear water, I found myself wondering if a bow and arrow might work better. Even as my mind raced off in that mindless direction, I reigned it back. I knew why I was thinking of such crap.\n\nNot wanting to do it, but needing to so badly, I got to my feet and stepped into the cabin. Victoria looked up at me, then glanced down as if too ashamed to meet my eyes.\n\n\"Are we heading back in soon?\" she asked before I could speak. \n\nSince she wasn't looking up I wasn't sure she saw my shrug. \"If you want. There is plenty of room if you want to stay the night and we can ride in, in the morning.\" Her head popped up, she glanced around the small cabin and at the single bed, then looked back at me and lifted an eyebrow. I nodded behind me. \"I can string me a hammock up outside. I sleep out there a lot in the summer.\" \n\nShe looked back down at the floor and gave a small shake of her head. \"We should go back. I need to get home. Jennifer will worry. I didn't tell her I was going to be out all night.\"\n\nNodding, I left without speaking. I couldn't find the words.\n\nAs I turned the key and hit the switch to raise the anchors, I felt like anything I might want to say had been dumped off in a black pit. A deep dark place where all the feelings of pain and loss I had felt in the last year had been tossed. I hadn't expected to add anything else to that pit, but then I hadn't expected to find myself in love again.... \n\nThat stopped me in mid-thought.\n\nIn love?\n\nDid I really just think that?\n\nI tried to search within my head for what possible Freudian slip I could have been experiencing that made me think such a thing. Yeah, sure I wanted to tumble Victoria into the bed in there and spend the night do wicked things to her till we were both raw and sweaty, but that didn't mean I was in love with her. Right?\n\nWatching the main and foresail rise up the mast, I couldn't find an answer. At least not one I was willing to believe.\n\nTurning the Star to the west, I let my sailboat chase the horizon line toward the setting sun while my thoughts turned in deeper and deeper circles. Thank god for the autopilot. The way my mind was distracted I would have probably sailed us up to Boston without it.\n\n** ** ** ** ** ** **\n\nThe familiar lighthouse light was guiding me towards home. For four long hours, the sun had hung in the sky ... seemingly trapped in one long endless sunset as we raced the fading light toward the Florida coast.\n\nI'm fairly sure that Victoria had taken a nap. Leastways when I looked into the cabin she was laying on my bed, her head buried in my pillow, half-curled up on herself. It was only when the shallower water set the Star to riding growing swells that I heard her moving around. \n\nVictoria appeared on deck and handed me a soda.\n\n\"Thanks.\"\n\nTaking a seat, she looked towards the still distant light.\n\n\"My God, that's beautiful.\"\n\nLooking up from contemplating soda bubbles, I saw what she meant. Almost directly ahead of us, the lighted spire of the lighthouse had split the sinking sun in half, Rays of bright white divided the burn red and purple colors of the sunset and passed from side to side as the light spun. Behind this, the sky was afire with every color possible to plaster to the bottom of a cloud. As we watched the deep red ball vanishing behind the lighthouse and twilight beginning to grow, sending more and more spasms of purple and blue-black into the brilliant reds.\n\nDelicate fingers interlaced with mine.\n\nLooking down into Victoria's face, I saw the pale tracks of old weeping across her face. \n\n\"Vicky?\"\n\nShe gave her head a shake and looked away. \"I'm sorry, Randal.\"\n\n\"For what?\" I asked.\n\n\"For letting things get carried away like that.\" \n\nShe started to turn my hand loose, but I refused to release her fingers. When she looked back at me I had a soft smile splitting my face into a grin.\n\n\"I'm not. That was, beyond a doubt, the hottest kiss I have ever had in my life.\"\n\nFor a second I saw a dozen emotions and expressions cross her face. She settled into a blush but with a delightfully hint of a vanity smile that she had given me that.\n\n\"Well, it shouldn't have happened.\"\n\n\"The fuck you say. What shouldn't have happened is that we stopped.\"\n\nVictoria yanked her fingers from mine. \"I'm not your girlfriend!\"\n\n\"You could be.\"\n\nHer eyes went to the size of dinner plates. \"What? There is no way in hell I could be your girlfriend!\"\n\n\"Why not?\" I shrugged. \"What are you doing next Friday? How about dinner and a late movie?\"\n\nVictoria shook her head. \"Randal I'm not going to go on a date with you. For God's sake, I'm old enough to be your mother!\"\n\n\"But you're not.\"\n\n\"Well, I'm Jennifer's mother.\"\n\n\"So?\" I check ahead of us for a second, judging where we were on the coast and making a small adjustment to turn us towards the marina. \"I'm not dating Jennifer; nor am I ever like to date her again. She's got a boyfriend. You, however, are single.\" I shot her a grin. \"And it just so happens so am I.\" \n\n\"You're out of your mind.\" She got to her feet and started to disappear back into the cabin but I stopped her.\n\n\"I'm going to need your help when we get to the marina. I've only ever docked this ship at night once before, and I had my grandfather to help me then.\"\n\nShe paused then gave me a tight nod. \"Sure.\"\n\nI watched her ass as she vanished below, remembering it wasn't all that long ago that I had joyously filled my hands with that ass. Exactly how and why I might not get the chance to do that again I wasn't entirely sure. I could tell that she had wanted to do what we had done. There was no hiding the rush of passion and the raw emotional lust that had poured from her back on that beach. Victoria had wanted to do far more than kiss. She had been tearing at my clothes to get them out of her way so that we could fuck. Of that I'm certain. \n\nGod knows I had wanted to fuck her just as badly. \n\nI still did.\n\nTurning the Caribbean Star into the channel, I guided her by familiar shore lights and marking buoys towards the soft dock lights of the marina. \n\nWhy had she stopped? What possible thought could be turning behind those beautiful eyes that had made Vicky stop when things were going ... oh so incredibly well? Had she been afraid? Of what? There was no one from this stupid town that knew us, that could have been out there on Mangrove Cay, to have seen us kissing. So what difference could it have made? Pleasure is pleasure for pleasure sake and when two people are as close to ecstasy as we had been, for one of us to turn back from it ... just why?\n\nUnable to find an answer, itchy from the sand, tired and frustrated by the whole mess, I turned the sailboat into the dark opening between lights, slipping past bobbing buoys and with an almost comedic hustle, set the sails to lowering. I fired up the engine and it took up most of our forward progress as the wind power vanished more and more with every inch of sail that rolled up.\n\nVictoria joined me on deck.\n\n\"What do you need me to do?\" she asked.\n\n\"Mostly another set of eyes.\" As we began to pass between the shadowy bows of other sailboats, yachts, speedboats, and coast fishing cruisers, I eased the throttle down to a gentle forward purr. \"Now, as you know, I back her into her anchorage. So what I'll do is move us past it, stop and then reverse up back into my pier. When I've got us in place drop those three fenders over there into place. I'll bump the dock a bit, then you just stand here and let me get the Star tied off.\"\n\n\"Just stand here?\"\n\n\"Yep.\" I pointed to the dark empty slot of my anchoring. \"You're going to be the one who had to pull me back out the water if I fall off the dock, crack my head on the side of the boat going in and then drown. I will require a great deal of mouth to mouth.\"\n\n\"I've already done that day,\" she said with a smirk after a moment.\n\n\"We'll just consider that lifesaving practice.\"\n\n\"Uh ... huh. Practice. Right.\"\n\nEasing the Caribbean Star to a stop, I throttled back till the motor neutral idled and then reversed. I stood facing backward and started easing the ship to starboard. \"Fenders please.\"\n\n\"Aye, aye Sir! Argh, Jimboy argh!\" \n\nGiving her a look, I then had to ignore her as Victoria scampered around.\n\n\"Watch the bow please,\" I called over my shoulder as we closed on the stern. \n\nBehind me, I heard her muttering. \"I don't have to take this abuse much longer.\"\n\nRolling my eyes, I watched the runabout -- tied off to a cleat next to me, it was floating just to port -- to me to make sure I didn't \"sna-fag-al\" it onto anything as grandpa used to say. \n\nWhen I glanced over at the other side, I saw Victoria making faces behind me.\n\n\"What the fuck is wrong with you?\"\n\nShe laughed, and then laughed all the harder as we bumped the pier and I stumbled and was within seconds of going ass-over-tea-kettle. Catching my balance, I stepped off the side of Star and looped the mooring lines around the well-worn bollards. Walking to the bow I caught the line Victoria tossed me and tied off the last line. Stepping back aboard, I let my bow anchor drop.\n\nScratching my lower back, I thought about all the work I needed to do. The sails needed to be covered. I needed to hook the main power back up. I needed ... I needed a fucking shower. \n\nAnd I badly needed some sleep.\n\n\"Well, as kidnappings go, I have to say that today was ... well, I guess fun is the right word.\"\n\nChuckling, I looked into her eyes. \"Well, as kidnap victims go you were wonderful.\" I tilted my head a bit. \"Still a no on next Friday?\"\n\n\"Yes, it's a very definite no.\" She moved towards the boarding plank. \"Sorry, but we can not date.\"\n\n\"I'm sorry too.\"\n\nFor a moment Victoria just stood there, and I swear I saw a small nod. She bit her lip to stop whatever she wanted to say escaping. \n\n\"Good night,\" she said and then hustled off the ship.\n\n\"Same,\" I said, mostly to myself.\n\nWith a sigh, I left the deck and went inside to get the shower I so desperately needed before I scratched my skin off. I could hear Victoria talking to someone on her phone as she walked away. Probably a call to let Jennifer know her mother was headed home. Or maybe she was calling the Sheriff to report her kidnapping. Honestly, I couldn't care which it was since neither meant a thing to me by now.\n\nLet me be arrested, I don't care. \n\nI can sleep in jail, after all. \n\n** ** ** ** ** ** **\n\nWith only the battery bank to pull from, it took longer for the on-demand water heater to give me the normal scalding temps I prefer. In fact, it was a tepid rain more akin to something in early May rather than high summer. Still, it was semi-warm and it was water and it got the damn sand dust and salt-crud off my skin. Shutting the disappointing shower off with a tired sigh for the layers of disappointments today, I grabbed a towel off the rack. A few moment's work chased off the stray droplets, wrapped my hips with it and I grabbed a second thinner towel. \n\nSitting on the edge of my bed, that second towel over my head in a half-decent improvised Assassin's Creed hood, I felt the energy draining out of me by inches. Washed away to leave a gritty film on the floor, just as the sand had done in the shower. The rocking of Star at anchor was it's normal soothing tilt and sway. Grandpa had once told me these old boats were his rocking chairs. I completely agree.\n\nMy eyes popped open when the rhythmic movement shifted wrong.\n\nLooking up from under the edge of the draped towel, I yanked it away when I saw Victoria standing in the hatchway door. In the dim light from the nightlight over by my desk, her expression was unreadable.\n\n\"Victoria?\"\n\nShe shook her head. \"Vicky.\"\n\nWith slow steps, she moved to stand before me. She pulled the damp towel from around my neck and tossed it toward the equally damp shower floor. Her hands traced the line of my shoulders and down both arms, then out to my hands. Our fingers were joined in a tangle, but it was all on her. After the emotional burn earlier, I wasn't willing to commit to even holding hands. Hell, if she wanted anything from me now, I was willing to hold her feet to the fire.\n\n\"Randal... \" Her fingers tightened in mine. \"Can I stay the night?\"\n\nMy eyes narrowed. \"Vicky I'm tired and not much of a mind to sleep in a hammock. Yeah, sure, I made that offer back at Mangrove. What's the matter, your car won't start or-- \"\n\nShe stepped closer, her hips parting my knees. \"That's not what I'm asking for.\"\n\nVictoria's body pressed closer and she leaned her face closer to mine, pausing only when there was a bare inch separating us.\n\nI sat back a bit. \"I have to know why. After this afternoon ... I'm in no mood to be played with again. So why now, and not earlier?\"\n\nA slow tear rolled down her face. \"I called my daughter.\" At my lifted eyebrow she looked down and wiped that tear away. \"She didn't care that I was home safe. She was too busy to even listen to me about what I had been doing today. I tried to tell her I went sailing and she just overrode what I was saying and all but hung up on me.\"\n\nI had to stop myself from saying that wasn't a surprise to me in the least.\n\n\"I gave up on having a great time with you earlier ... having sex ... because I felt like I was betraying her in some way by being with you.\" She shook her head. \"I know that sounds odd, but damn it that was the way that I felt. I had just discovered that I have spent so much time doing the wrong thing in her life. Then we were kissing and I had to stop myself. I needed to do the right thing, even if it meant I didn't get to enjoy something myself. But it turns out she wouldn't even have cared.\"\n\nI chuckled unable to hide it. \"She might have cared if she had known it was me you went sailing with, but in truth, it's not her business one way or another.\"\n\n\"No. No, it's no. I keep forgetting she's an adult now, even if still a young one.\" Victoria placed a hand on my bare chest and gave me a light pat, showing by touch that she thought I should also be included in that 'young' title. \"I need to be letting her get about her life and I need to start finding myself a life that isn't focused on her.\"\n\n\"And you want me to be in that life?\"\n\nHer hand moved down my chest across my abs to the knotted towel. She stepped closer and that terrycloth fold parted even more.",
        "\"For tonight.\" Her lips touched mine.\n\nNormally I would have protested that limiting qualifier but I was being kissed by a woman while her hand had dropped to my lap and was softly stroking my cock.\n\nI hardened almost instantly under the knowing touch of her delicate fingers. She played with the length of me, while our mouths sought and found again the hot passions of the other. Victoria leaned me backward, climbing up on top of me as my one piece of modesty protecting cover fell away. A fact that made me instantly aware of my own nudity and the fact she was still clothed. I wanted her naked as well and went to work stripping this woman, pulling at tight clothing and fasteners. \n\nVictoria seemed to feel the same way as she assisted me, even as she gave my cock more and more pleasure with her warm hand. She kissed her way to my neck and then did as she had earlier today. Kibbling and sucking. I knew, from an earlier look in the mirror before I showered, that I had a wicked hickey on the left side of my neck, now she seemed intent on giving me a matching one on the right side. \n\nI can't say I minded.\n\nHer blouse flew across the room. Her loose shorts followed. A thin blue-white bra I clawed off Victoria and she removed her pink panties in a move so quick as to be magical. Honestly, I never felt her hand leave my cock but it must have.\n\nWe tried to turn over together but hit the wall.\n\n\"Uh, the beach was probably a better bed for sex,\" she grumbled.\n\n\"It's your fault we can't confirm that. We'll go back there soon and find out.\" Kissing her to stop any reply, I wiggled-rolled us in a maneuver that was all jabbing elbows and knees bumping into bad places. My hand moved off her ass and up her thigh spreading her open underneath me. She lifted her left leg herself, resting her foot on the wall.\n\nVictoria chuckled.\n\n\"This is like sex in the back seat of a car.\" She reached between us and I moaned feeling her fingers guide me into the entrance of a wet heat. \"Slowly now, please.\"\n\n\"Yes, ma'am.\"\n\nUnder me she rolled her eyes and, with a snarky, half-cussed remark about my sense of humor, opened herself up wider, pulling at my hips with her hands. \"Oh, would you just shut up and fuck me already?\"\n\n\"Ooh, I like it. Little Ms. Vicky gets nasty talking in bed, huh?\" Her teeth nipped the skin over my collarbone as a response. With a light thrust of my hips, I felt the grip of her pussy slide along the length of me, one long incredible push. As I felt the last inch sink in, her fingers dug those welt-raising nails into my back. That spur drove me into the hilt.\n\nHer half-pained moan told me that Victoria hadn't expected me to bottom out in her, but then a delightfully slutty whisper by my ear informed me she no longer wanted me to go slow. \n\nWhich is a good thing since I'm not sure I could have stayed slow for much longer anyway. \n\nA simple rhythm, sex. Just in and out. But oh, how wonderful that simple in and out can feel.\n\nWith a gripping tension and a clinging pulse, Victoria held me within her and I tried my best to make her feel every inch of me in each thrust. I was discovering things about this woman. First that she was a woman. The one girl I had had sex with before -- an Emily Jackson who I dated after Jennifer dumped me -- had wanted me to hurry up and finish. She had complained that I was heavy, that I was hot, that I was sweaty. She had protested my every movement and swore to never let me touch her again when I once managed to pull her blonde hair. \n\nDoggy style? Nope.\n\nGirl on top? Nope.\n\nA blowjob? Eww!\n\nVictoria?\n\nWell, to start let's say that a \"woman\" is a hell of a lot different than a \"girl\" in bed. Her hands gripped my ass all but driving me into her with each thrust. Then she would change it up and claw my back while her feet crossed over my butt and they pulled me in ... or in one case held me in place. I'll speak of that moment here in a minute. As I was saying, sex with Victoria wasn't at all like what I had experienced before. Call it the difference between driving a Volkswagen or driving a Ferrari. While they may both be European cars, the handling, quality of interior, performance, and overall enjoyment is totally different.\n\nNot to mention top speeds.\n\nWith that amusing thought rolling through my head, I tried to pace my breathing with my thrusts. The air in the ship's cabin had climbed to a balmy, sex-soaked, steam bath that had us both wet with sweat. But, strangely enough, that sweatiness wasn't a turn-off. We moved with each other as if lubricated by a joint passion. A knowledge that a simple shower could get rid of this, but till then we could revel in being hot and nasty with each other. And her more so than myself, given that I had already taken a shower just before she arrived. \n\nThe odor of us, the musky smell of sex, also filled the cabin of my ship as it got warm. Overpowering even the normal smells of the marina, it was a pheromone-laced aphrodisiac of its own making. And it grew thicker and heavier by the moment. \n\n\"Oh, god yes,\" she moaned.\n\nThat's right, the moment I wanted to tell you about. \n\nWhile I was thinking of foreigner cars -- and coconut trees, next seasons football schedule, the dry flying weight of unladen European swallows -- Victoria had been grinding herself up onto me and pulling me down to meet those upthrusts of her hips. A low sound had begun to build in the back of her throat and then with an abruptness that startled me, scared the fuck out of me truth be told, she grabbed me and held me to her with all four limbs. Her hands had my back trapped even as her ankles crossed behind my ass and stopped me pumping. The hard feeling her heel against my butt hole would have done that trick by and of itself, but the leg lock grip on my hips stilled me in place. \n\nThe low tone became a deep vibrating purr. More a feeling than really a sound, it rumbled against my chest and down my belly till I swear, it felt like I was feeling a similarly rhymed sensation all along my cock.\n\n\"Yes....\" The single word was dragged through a washing roller and stretched out forever. Then she started snuggled in tighter to me, her face by my neck burrowing into my hair. \"Oh, yes, yes, yes ... please, yes.\" \n\nFor her, that first orgasm was a life-altering moment that took her to the edge of tears and back as, over and over, she let out the most animalistic sound I have ever heard a human voice make. \n\nLust. \n\nA pure scream of lust. Purer than the finest vodka, purer than the holiest virgin nun. Passion that has been triple-filtered and run over charcoal type purity. For her, it was a moment of ecstasy.\n\nFor me? Well, as I said it scared the ever living hell out of me.\n\nOh, yeah sure I have seen women orgasm before ... in porn videos. I had always put that body shaking guttural cry down as terribly faked acting by the porn star. But ... apparently not. \n\nIt was a few moments of panting and heavy breathing by Victoria later before I felt her legs go slack behind my butt and her hands relax their death grip on my back. \n\n\"Okay ... you can continue now. Please?\" she murmured.\n\n\"Are you okay?\" I had to ask it.\n\nShe answered me with her lips. A kiss, that was warm, wet, and luxuriously hot. Then she began to tell me things. Soft, half-murmured words whispered by my ear. Happy things, naughty things. Victoria told me of years without such decadent pleasure and that I had given her an incredible orgasm. At her gentle urgings, I began to rock my hips in and out, pushing and then pulling against a silky tension. I was close. I was close and getting closer. Victoria sensed this and kissed me again.\n\nWithout a doubt, the best kisser I had ever met this woman. Or ever hope to meet.\n\nHer kisses were not the best because they were wild or wicked, nor were they simply fierce and demanding. No, her kisses were the best because I knew the emotional she delivered with them was not faked. The woman actually cared about me, as me. No faked feelings. No half-measures or desires for the erotic dance of sex to hurry up and end. Just a kiss ... but so, so much more. Giving that, I felt I could happily have died after it, knowing that I had tasted the best the world can give and never needed another kiss to compare it to. Knowing that I had given this wonderful woman so much pleasure that she felt I deserved to be kissed like that, well I felt ... I felt ...\n\nI felt like a drowning man coming up for a breath of sweet air. \n\nWhich is odd, given that I couldn't really breath at that moment.\n\nWith a guttural cry of my own, my own orgasm rose up and struck me down. Gripping, gasping, clutching her to me, hot muscle spasms grabbing me by the gut and pulling from within me pulse after pulse. And, again, I learned a new thing. \n\nNothing in this world beats coming inside a woman with absolutely nothing in the way. No silly piece of thin latex in the way of feeling a moment of the pleasure I was feeling.\n\nWait ... oh, shit.\n\n\"Victoria! I didn't have a condom on!\"\n\nShe began to chuckle under me. A wonderful feeling, laughter. I felt her every chuckle along the length of my cock.\n\n\"Yeah, I noticed that.\" Her leg ran up across the sweaty back of my thigh. She gave her ass a wiggle under me, my half-hard cock still gripped within her. \"I really love this feeling. Full and incredibly wet.\"\n\n\"But ... but ... what if I get you pregnant? Are you on the pill?\" I was growing frantic.\n\nHer hand caressed the side of my face, even as she smiled and shook her head. \"What a silly time for that question. For future sexual conquests, Randal, asking that before you put your bare cock into a woman, is the right order of things. No, I'm not on the pill.\" I didn't see a twinkle light the corner of her eyes. \"And I'm sure you just got me pregnant. Completely sure of it. Yep, you're going to be a Daddy. So, what will it be? Are you going to make an honest woman of me or am I going to have to slap you with eighteen years of child support?\"\n\nPanic. Raw panic.\n\nThen I caught that hint of an amused twinkle.\n\n\"You can't get pregnant, can you?\"\n\nAgain that chuckled laughter spasming along my cock.\n\n\"You're really a closing the barn door after the horses are in the field type, huh?\" She laced her fingers in my damp hair. \"No. I can't. Lucky you, huh?\"\n\nA sense of relief hit me and took the last hint of remaining strength from me. I managed to roll to the side at least before I collapsed. Her laughter was a bit of a sting to my pride.\n\nBut then....\n\nI was not expecting to suddenly feel a sense of disappointment. There must have been a part of myself that had, for a second at least, been silently thrilled over the idea that I had gotten Victoria pregnant. That was such an odd thought. I had never thought of myself as the type that wanted to be a father or have a family. It was always something I might want to do when I was older. A later in life kind of thing to do. Family. Children. Wife and kids.\n\nDid I want that? I never had before this moment.\n\nThat was when it hit me. \n\nI wanted that with Victoria. And she had just told me I couldn't have that shared part of life with her. The disappointment I had felt wasn't for some possible child, but for a future shared event with the woman next to me. A moment in my life to come, which had suddenly been pulled out from under me.\n\nHer voice interrupted my mental self-inspection.\n\n\"I want a shower. Do you have hot water on this tub?\"\n\nI looked up from my pillow, my head still a whirl with new-to-me thoughts. Victoria, wonderfully naked to my eyes, was propped up next to me looking down at me. A look of puzzlement crossed her face and her hand moved to my cheek. She brushed away a tear.\n\n\"You cry when you orgasm?\" She had a soft smile gracing her lips. \"How delightful.\"\n\nI shook my head. Pushing myself up, I sat up and placed my back against the cool wooden wall behind me. \"I'm not crying because of that.\"\n\n\"Why then?\"\n\nHow could I explain to her what I had just had flood through my head? I shook my head. \n\n\"It's not important. Yeah, there's hot water in the shower. Towels are in the hamper by the door there.\n\n\"Randal?\" Again her hand moved to my face and this time she cupped my chin and made me look up at her face. \"Come on talk to me. What is it? If it's something embarrassing, I promise I won't laugh.\" She looked down at her naked body. \"Who can you be more honest to than to a woman with your cum inside her?\" She took my hand. \"What is it?\"\n\n\"I ... I suddenly got disappointed.\"\n\nHer eyebrow quirked. \"About what? The sex?\" She grinned and shrugged. \"I hate to tell you it doesn't get too much better.\"\n\n\"No.\" I looked up and took a deep breath. \"That you didn't ... couldn't ... get pregnant.\"\n\nThe expression on her face told me I could not have said a thing that would have shocked her more. Then emotion after emotion began to play their way across her face. \n\n\"And you want that?\" she asked, after a moment.\n\n\"I think I do.\"\n\n\"You think?\" Her fingers tightened on mine. \"Wanting to have children isn't an 'I think I do' kind of situation. That's a serious commitment.\" She grinned. \"Trust me I know. Well ... I guess you need to start putting in the effort to find a woman that you want to have children with. Um, excuse me if helping you with that -- finding another woman to fuck till you get her pregnant -- isn't high on my list.\"\n\n\"No. I was disappointed it couldn't be you.\"\n\nAgain her face was struck with an expression of absolute surprise.\n\n\"Ah, ah, I ... I need that shower.\"\n\nShe stood up and moved across the cabin in a half-daze. When she vanished into the shower, I was sure I had just completely fucked up in every way possible. Victoria was going to take a quick shower and dash out of here so fast the boat would spin on its anchor. If I ever got to do more than say hello to her, and get a nod in reply, I was going to have to count that as a good day. Victoria was going to hate me. She was going to spread it around town that I was some weird guy that had tried to knock her up. That I had been... that I had been....\n\nI felt my nudity then. \n\nEmbarrassment. I was more naked than I had ever been. It was more than skin deep, it was an emotional nudity that left me chilled and goose-bumped. There was a powerful element of not knowing what I wanted, but that was being smothered by the awkwardness of reaching out to someone, being honest as I could be about what I was feeling, and then having them run out of the room.\n\nThe sound of a shower and the sound of a depressing rain are identical. Just water falling. So are tears.\n\nLost in my thoughts, I felt every second passing to be a lifetime long. I dreaded the moment that fall of water ended. And, when it finally did, I wanted to curl up and push the world away rather than face the woman I had just shocked by telling her I wish I had gotten her pregnant. \n\nVictoria stepped out, a towel half-wrapped around her. She moved over to where her shorts lay and the very thing I had dreaded was happening. Victoria was going to dress and leave me here without a word spoken.\n\nShe took out her phone from her pocket.\n\nShe tapped the screen in a quick tweet.\n\nThen she held her thumb down on a button till I saw her phone shut itself off. \n\nDropping the towel to the floor, she sat her phone on the table and moved to me in a determined stride. Her body, naked and delightfully cool to the touch, all but plowed into me and her mouth captured mine. Pushing me back onto the bed, Victoria pressed me down to the bed with the weight of her soft body. After a moment of finding myself being savagely kissed, she sat up and looked down at me. Victoria brushed her damp red hair back out of her eyes and, with a grin, looked me over with a proprietary pride. Her finger moved down my side, a light tickling caress. \n\n\"I can't be the wife you want.\" She placed a finger over my lips when I went to speak. \"Hush. Horny adult talking.\" That finger moved across my lips for a moment, an odd sensation that was like her finger was kissing me. \"I can't be what you might feel you need. I can't be a wife. Not again. Never again.\" She shrugged. \"Been there done that, got the divorce papers to prove it. I also can't be the mother of your children that you might want me to be.\" Her hand left my face and moved to a series of small scars on her lower belly that I had not seen till now. \"That part of my life is over for good, I'm afraid. Till now I've never given the loss a single thought. I had a child and one time in labor was more than enough.\"\n\nLeaning down, she placed a kiss on my chest, by my nipple. Then she did it again on the other side, right over my heart.\n\n\"No, I can't be all those things for you.\" She looked up at me and there were tears in her eyes. \"And I can never properly tell you how wonderful it made me feel to know you wanted that from me. Sorry.\" She placed her finger back over my mouth. \"No, hush. I can't, but what I can and will do is be the one thing I know I can be for you.\" \n\nVictoria took my breath from me as her hand closed around my cock and her pinkie curled under and around, cradling one of my balls. With one last smile, which turned more and more wicked by the second, Victoria looked down at my cock hardening in her hand. She gave it a squeeze and leaned her head down to lick the pre-cum from the tip. Her lips shiny with it she looked up at me.\n\n\"I'll be your lover till you find the woman that can be ... what I can't be.\" \n\nHer mouth descending over my cock was furnace hot.\n\nWith one hand cupping my balls and the other curled around me, she bobbed her head on my cock. A wet massage from the tip that moved halfway down and then back. \n\nLooking down, watching her mouth engulfing the head of me. Felling the wet delight of a woman's mouth on my cock for the first time, all I could do was moan my appreciation. Which, oddly enough, seemed to be all the encouragement she needed to redouble her efforts. With my hand buried in her damp fluffy red curls, I laid my head back into the pillows and simply moaned.\n\n\"Feel good?\" she asked, nibbling along the side of me.\n\n\"It feels fucking incredible.\"\n\nShe chuckled. \"Well, I'm glad you ... like it. I would hate to think that my lover didn't enjoy one of my favorite things to do in this world.\" She licked the spongy head. \"That ... would be ... terrible.\"\n\nI would have answered her, but I had lost the ability to speak. Moan, yes. Speak, no.\n\nNeither of the girls I had been with could have been convinced to take my cock into their mouths for love or money. Victoria took me in between her lips like I was made of ice cream. She went at my skin like it was chocolate. Then she did what I hadn't even dreamed of having done to me. She took one my balls into her mouth and licked all of it. Her tongue lashing that wrinkled skin.\n\nOh, damn.\n\nI felt her laugh.\n\n\"You taste like me.\" She looked up at me and bit her bottom lip. \"I love the taste. Maybe I should be a lesbian? What do you think?\"\n\nThat image ... oh, god damn what an image ... flooded my mind and I felt my cock jump in her hand. She giggled.\n\n\"I'll take that as a yes.\" She sat up and acted like she was going to move away. \"Well, I shall simply have to go find me a girl to lick then.\"\n\nReaching up, I caught her head and pulled her back down to my cock, her laughing the whole time.\n\n\"Oh my, someone is getting insistent.\" Victoria gave my balls sack a gentle nip of her teeth. \"Well, just for you, I guess I will put off rushing out to start my new life as a lesbian.\"\n\n\"Yes, please,\" I moaned when she took me back into her mouth.\n\nI discovered something then. I would have thought that she would get tired soon, I mean she was doing all the work, and not really getting anything done to her in return, but Victoria seemed content to simply work her mouth on me. But then I guess she knew what I didn't"
    ],
    "authorname": "MSTarot",
    "tags": [
        "mature",
        "milf",
        "florida",
        "oral",
        "oral sex",
        "younger man",
        "older woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/my-christmas-star"
}