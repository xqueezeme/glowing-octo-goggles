{
    "title": "Boss Nanny Ch. 14",
    "pages": [
        "The anxiety was so thick that Matt could hardly breathe. He had one eye on his brother, who was playing with colored blocks, and one eye on Seamus who, like a caged lion, was pacing the room nervously as he waited for a call.\n\n\"We could take Aidan for a walk.\"\n\n\"It's too cold outside.\"\n\n\"Movie?\"\n\nSeamus shook his head.\n\n\"What about going to get a bite to eat?\"\n\n\"I'm not hungry.\"\n\nMatt sighed from a distance. \"It's possible they won't call today.\"\n\n\"I know.\"\n\nMatt moved until he was standing in front of Seamus. \"You're agitated.\"\n\n\"I'm angry.\"\n\n\"And?\"\n\n\"Anxious.\"\n\n\"Why?\"\n\n\"Because he could get away with it.\"\n\n\"He won't get away with it.\"\n\n\"The lawyer said it could be a book and release situation. Sounds like he's getting away with it.\"\n\n\"They're charging him. But based on the charges, he might not serve time until after the hearing. That's not the same thing as him getting away with it. He will get what's coming to him. It's just going to take time.\"\n\n\"What if we don't get enough to prosecute?\"\n\nMatt snaked his arms around his boyfriend's waist. \"The evidence for payroll fraud is the reason for the arrest warrant and it's more than enough for a conviction. I'm not saying he's going to spend a lot of time in jail, he may not even serve six months, but he will be convicted. Probably on felony charges, and he'll have to pay you restitution. But we're not there yet. Focus on what's in front of you and let everything else fall into place.\"\n\n\"You're right.\" Seamus kissed Matt's cheek, then slapped his ass. \"No need to waste time on that prick.\"\n\nMatt's butt stung as Seamus strutted across the house. He much preferred that over Seamus sulking around. Matt understood where he was coming from. Mike represented a part of Seamus's life that wasn't easy to deal with. The temptation to turn a blind eye was strong. Seamus could've easily continued down that path for years. Matt was proud that he was doing something about it instead of assuming it was too late to do anything at all.\n\n* * * * *\n\nSeamus wanted Mike to get arrested as he deboarded the plane. He deserved it after what he did. That's not how it happened. Maybe if Mike had embezzled from the government or something, but the charges weren't big enough, yet, to warrant such extravagance.\n\nMike was arrested the next morning at his home by two police officers. It was a quiet affair but surely the neighbors noticed.\n\nSeamus got a call when it was over.\n\nMatt was so busy watching Seamus talk on the phone, trying to hear what was being said, that he missed Aidan's plate and dropped the pancake on the floor. Matt picked the pancake up, inspected it for dirt, and tossed it back on the plate. Aidan wouldn't notice. Matt saw the things Aidan put in his mouth.\n\nThe conversation seemed to take forever. Seamus asked a couple of questions but mostly, he listened. When he hung up, Matt was on him.\n\nSeamus sighed. \"Well, he's locked up for now.\"\n\n\"For now?\"\n\n\"He'll probably get out on bail.\"\n\nMatt frowned. He knew it was possible but it still sucked. \"Did he admit to anything?\"\n\nSeamus shook his head. \"No. He didn't deny it either. He immediately asked for a lawyer. That's all we know.\"\n\n\"How long until we can get into court?\"\n\n\"I don't know. Our case for payroll fraud is pretty clear cut. So that could move quicker. The actual embezzlement could take longer. Roger said we should consider waiting until the audit is finished. If we can build everything into one case, it will be stronger.\"\n\n\"How do you feel about that?\" Matt asked.\n\n\"I hate that he could be out in a matter of days, but I want do it right the first time. If we have to wait longer to see him in court, then we wait.\"\n\n\"Do you know how the official audit is going?\"\n\nSeamus sat down next to Aidan and ripped the pancake into smaller pieces. They were already small, but Matt knew Seamus needed a distraction. \"I won't know anything until she's finished and we get her full report. Which could take a while.\"\n\nMatt drummed his fingers on the table. \"I guess we have nothing to do but wait.\"\n\n* * * * *\n\nThe next week was total chaos. If Matt hoped life would be calm or go back to normal, he was sorely mistaken.\n\nSeamus was up to his neck in work stuff. With Mike out of the picture, he had to find someone to keep things rolling. The thing about being your own boss is that you're allowed a flexibility other people don't have, but that flexibility comes at a cost. When things hit the fan, you're the one working 24/7 to fix it.\n\nThe first thirteen days of December were brutal. Since Seamus was going nonstop with his own crap, Matt found himself juggling school, work, and Aidan all on his own. Not great timing as he was knee deep in finals, but this was life and what he had asked for.\n\nHe and Seamus talked every day but didn't see each other but a moment here and there. As much as he missed Seamus to pieces, Matt couldn't afford the distraction. He was up with Aidan every morning, toting him to daycare, off to class, then work, then home. Aidan was with him more than he wasn't. Thank God for that third day of daycare that Seamus hadn't talked him out of.\n\nSo, no, he couldn't be around Seamus. The second Aidan was asleep, Matt needed to focus on homework or risk poor marks.\n\nSeamus wasn't offended. He was in the middle of a crash course of his own. Learning the basics of Mike's job on the go. Matt's professor not only hooked him up with someone who was doing what Matt had done, but better, he also referred someone to help Seamus through until he found a permanent replacement. The problem was, the job wasn't something menial that could be filled on the fly. It would take time.\n\nSeamus spent a lot of their calls picking Matt's brain about this and that. Matt still had so much to learn, but it was flattering nonetheless. As much as he wished their conversations could've been about a hundred other things, he loved being needed by Seamus and would answer any question Seamus threw at him.\n\n* * * * *\n\nExhaustion was part of Matt now\u2014embedded deep into the fiber of his bones. Even as he walked out of his class, having completed his last final, he knew he wasn't done.\n\nHe picked up a giggling and ever happy Aidan from daycare and together they walked home. The weather was dreary. It wasn't even five, yet it was dark with a light misting. Instead of heading to the apartment, they walked a few extra blocks to the loft.\n\nAs they neared the building, Aidan was like a horse after a long ride. There was no stopping that kid when he wanted his Moose. The doorman smiled and pushed the door open just as Aidan slipped by.\n\nMatt smiled and thanked the man.\n\nAidan didn't even care that Seamus wasn't home, he was just happy to be there and quickly made himself at home.\n\nThe loft was a wreck. Seamus was usually a neat person, but he'd been busy and stressed because of work. Matt wanted to do something nice, so he changed Aidan and himself until they were wearing something more comfortable. Then they got to work.\n\nAidan was happy to follow Matt around and he did a pretty good job of picking up dirty clothes and throwing them in the laundry basket\u2014along with the remotes, magazines, toys, dirty plates. Matt laughed. Oh, to be eighteen months old.\n\nThey stripped the beds and replaced the sheets, started laundry, cleaned the bathroom from top to bottom, straightened the living room, vacuumed the couch cushions. Matt loaded the dishwasher and wiped the counters down while Aidan used the new but unused toilet scrubber to clean the floors and cabinet doors. He even whacked the dining chairs and a few of the table legs for good measure.\n\nThey were on their hands and knees. Matt was cleaning the baseboards while Aidan dusted the wall with his rag. They were both cleaning when Seamus came in.\n\nAidan ran, rag in hand, to greet Seamus at the door. He stuck his rag out to show Seamus what a good job he was doing, then ran back to the wall and started cleaning again. Aidan kept looking to see if he was being watched.\n\nSeamus looked around the loft. \"Did you clean my house, Aidan?\"\n\nAidan screeched with joy, then ran to the kitchen where his toilet scrubber had been long forgotten. He held the scrubber up in one hand and the rag in the other. Victorious. He ran to Seamus and handed him the cleaning tools.\n\nStill crouched on the floor in the back corner, Matt watched as Seamus knelt down, took Aidan's offerings, kissed him, and praised him for being such a good helper. The best helper.\n\nThen Seamus looked at Matt, and the world stopped. Matt was sure of it. There was no way the world could continue like normal when Seamus looked at him like that.\n\nSeamus came at him like a man on a mission. He grabbed the back of Matt's legs and lifted him until Matt was wrapped around his waist.\n\n\"What are you doing? You have finals.\"\n\n\"Had finals,\" Matt corrected. \"I finished today.\"\n\n\"And then you came straight here and cleaned my place?\" With Matt's ankles locked in place, Seamus let go and cupped his face. \"You're amazing.\"\n\nMatts smiled, kind of cocky like. \"So I finished my last final, came straight here, and started cleaning so you could come home and relax. It's not that big of a deal.\"\n\n\"It's a huge deal.\"\n\n\"You need a break.\"\n\n\"So do you.\"\n\nMatt kissed Seamus. \"You stepped in and helped me with Aidan when I really needed it. This is the least we could do.\"\n\nSeamus ran his fingers through Matt's hair and looked at him like he was something special. Then he kissed him and Matt melted into the wall behind him as he softly wrestled Seamus's tongue.\n\nSeamus broke the kiss and looked down, Aidan was pulling on his pant leg.\n\nMatt laughed. \"Looks like someone is feeling left out.\"\n\nWith one arm anchoring Matt, Seamus carefully picked Aidan up with the other. It was a little awkward at first, but they maneuvered until Aidan and Matt were both comfortably being held up by Seamus. Seamus used the wall to brace Matt up and he used Matt to keep Aidan up.\n\nThey watched Aidan as he smiled brightly. The little guy loved being the center of their attention, and it wasn't every day you got to be perched in a fortress of your favorite people.\n\n\"I love you,\" Seamus told Aidan. He rubbed his beard on Aidan's face, making him giggle. Next, he turned to Matt and kissed him gently. \"And I love you.\"\n\nBefore Seamus could pull away, Matt caught the back of his head and hauled him back in for another kiss. \"And I love you.\"\n\nThey stared at each other like idiots. Then Matt turned and kissed Aidan. \"I love you, too.\"\n\nMatt hadn't planned on saying it. It just happened. He loved Seamus. If there was a time to say it, it was now. He needed to say it, and Seamus needed to hear it.\n\nThey hung out like that for a minute longer until Aidan was tired of being loved on. He wiggled around until Seamus let him down. The tyke quickly wandered off to bigger and better things.\n\nSeamus shifted his weight until he had a better grip on Matt. With Aidan out of the way, Seamus stared at Matt. \"Say it again.\"\n\n\"I love you.\"\n\nSeamus rested his forehead on Matt's for a moment as he soaked in the words. Then he kissed him, properly. They made out against the wall for a while.\n\n\"I'm gross and sweaty,\" Matt said when they finally broke apart.\n\n\"And hot as hell.\" Seamus mauled the side of Matt's neck. He didn't care that Matt was gross. \"Do you know how hot you are when you're cleaning?\"\n\n\"Not as hot as you,\" Matt said, moaning,\n\nSeamus snaked a hand under Matt's shirt and across his belly. It wasn't toned but Seamus loved it all the same.\n\n\"Careful, Aidan's right over there.\"\n\nThey both looked across the room where Aidan was playing with blocks and the toilet scrubber. Seamus's face soured as he watched the toddler bang the scrubber on the ground.\n\n\"Don't worry,\" Matt laughed. \"It's clean.\"\n\nSatisfied, Seamus gripped Matt's ass and carried him into the bathroom. Matt frowned and glanced out the door, not willing to leave his brother unattended. They never messed around when Aidan was awake. He was too young and taking your eye off a baby for even a second was dangerous.\n\nSeamus watched with a smirk as he undressed Matt. Matt's brain ran a mile-a-minute trying to justify what was about to happen. Which wasn't much. As much as Seamus wanted to ravage Matt for being sexy and professing his love, they couldn't leave Aidan.\n\nBut he could watch Matt shower.\n\nKnowing Seamus was watching. Matt played music on his phone and swayed a little as he cleaned himself. By the time he finished, he'd worked Seamus up.\n\nThe door was cracked enough that Seamus could see into the living room but not enough for Aidan to be scandalized when Matt dropped to his knees and took Seamus in his mouth. Or five minutes later when Seamus came in his mouth.\n\nWhen Seamus tried to reciprocate, Matt declined. \"I want to save that for tonight.\"\n\nSeamus attacked him, shoving him against the wall and kissing him until he couldn't tell up from down or left from right.\n\nAidan walked in, all innocently curious as to where his people were. He didn't care that Matt was naked or Seamus's pants were bulging. He just wanted attention.\n\nSeamus begrudgingly let Matt go and picked Aidan up as Matt sauntered to the bedroom.\n\n\"Your dad is so infuriating.\"\n\nMatt laughed when he heard Aidan babble something that sounded like agreement. That kid would always side with Seamus.\n\n* * * * *\n\n\"I'll clean more often if this happens.\"\n\nIt was nearing two in the morning and they'd been in bed since the moment Aidan's door closed for the night. It wasn't just sex, though there was plenty of that. It was emotional intimately. A month of stress and being busy had made those moments more fleeting than ever.\n\nSeamus nuzzled into Matt's neck as he ran his hands over Matt's body. \"And I'll let you clean more if this is what happens.\"\n\nMatt chuckled and wrapped his arms around Seamus. He could feel his lover's breath against his skin and relished the feeling of fingers grazing his hip.\n\n\"How did this start?\" Matt asked.\n\n\"How did what start?\"\n\n\"This. Us.\"\n\nSeamus's laugh vibrated. \"As I recall, me checking out your ass wasn't enough, so you went to Ironworks looking for more. If you remember, I rescued you, and the rest is history.\"\n\nMatt laughed. \"I guess I should be more specific.\" He rolled Seamus on to his back and hovered over him. \"Why on earth did you take this on?\"\n\nSeamus studied Matt as he tried to figure out exactly what Matt was asking.\n\n\"You did so much more than help me with Aidan. You went above and beyond in a way that borders insane. No person in their right mind would do what you did. So why did you?\"\n\nSeamus spread his legs and let Matt settle between them.\n\n\"I admit, I didn't spend much time at the cafe, Denise does such a good job it wasn't necessary. She emailed me and asked if I could stop by. It had been a while since we last met. That's when you and I ran into each other, literally. I swear on all things holy I had never seen someone as hot as you. You had these intense blue eyes and the way you scowled at me made me weak in the knees. It would've stopped there, but when I came back to the cafe, you had Aidan. If you were hot before, well, fuck me, I was downright catatonic seeing a baby strapped to you. The more I watched you, the more I saw how amazing you were. You were more than some smoking hot guy. You were hard working and great with people. The way you made your friends laugh and how you smiled without trying made you captivating. When I saw you struggling with Aidan, I couldn't help myself. I just wanted a tiny reason to be a part of your life.\n\n\"Then I spent time with Aidan. He filled this whole other part of me. I always wanted to be a dad. It was something I always, always wanted. My parents made it clear it wasn't a possibility since I was gay. When you have no money, things like adoption and surrogacy are not possible. So, in their head, it really wasn't an option. Then I met Kelly. He had the means, but not the motivation. Technically, he wanted a family. He actually had things ready to go. He'd created embryos a year before we met. He wanted one kid; a boy, a namesake, an heir. Whatever you want to call it, it broke my heart. I'm glad it never panned out. That poor kid.\n\n\"Don't get me wrong, I never thought of Aidan as my mine or anything. I don't want you to get the wrong idea about my motivation. But I had given up on that dream and Aidan was a balm on that part of my soul.\n\n\"Everything snowballed after that. The more time I spent with Aidan, the more I loved him. He was so easy and melded into my life. I wasn't the only one enamored by him, there's not a single employee that wouldn't take a bullet for him. But then I'd come back from spending the day with him to find you being...you. Perfect in every way.\"\n\n\"Yeah right,\" Matt scoffed at the compliment.\n\n\"Hey, don't be mean to my boyfriend.\"\n\n\"It's hard. We have very different views of reality. You're the perfect one.\"\n\n\"I'm glad you see it that way.\"\n\n\"I do.\" Matt shifted, he was still between his legs but also laying on Seamus's chest. \"So, you were telling me you came back to find me being all perfect and shit. What happened after that?\"\n\nSeamus laughed. \"Nothing. As much as I liked you, and I was already pretty in love with you, I honestly thought nothing would happen between us. I was just happy that I had somehow manipulated you into letting me be your live-in nanny.\"\n\n\"Oh, I see. I'm on to your evil plan now.\"\n\n\"Yes, well, not so evil. I really just wanted you and Aidan to have whatever you needed and for you to be happy with or without me. Though, you would've had a hard time getting rid of me by that point. I wouldn't have given either of you up without a fight. But it wasn't until you sat on my lap at the bar that I thought\u2014I wondered, what if things were mutual?\"\n\n\"They were.\"\n\n\"Ehh,\" Seamus seesawed his hand. \"I've always been a few steps ahead, but we're getting there.\"\n\n\"Where are you now? What do you see for the future?\" Matt asked, curious about what Seamus would say. There weren't a lot of steps left.\n\nSeamus smiled and shook his head. \"No way. I already sound kind of psycho after sharing all that. No need to keep going.\"\n\nMatt hovered again. \"Tell me. Communication is key, remember?\"\n\nSeamus took a breath. He was a sucker for Matt and couldn't deny him. \"Obviously, I love you and Aidan. You know I want you both back in the loft, permanently.\"\n\nMatt playfully rolled his eyes. \"You may have hinted.\" When Seamus said nothing else, Matt pressed. \"What else?\"\n\nSeamus groaned. \"You're going to freak out.\"\n\n\"I'm not going to freak out,\" he promised.\n\nSeamus fidgeted. \"Marriage,\" he admitted. \"I plan things, in my head, about us being married.\"\n\n\"And?\"\n\nSeamus groaned and looked away. Matt wouldn't have that and quickly brought his gaze back.\n\n\"Adopting Aidan.\"\n\nMatt said nothing, he let Seamus squirm for a minute. Eventually, Seamus grew tired of the scrutiny and grew a pair of balls. Maybe he realized Matt didn't think he was crazy.\n\n\"I want everything with you, okay? I want to get married, I want Aidan, and I want another kid\u2014maybe two, I don't know,\" he said with an exasperated sigh. \"I want to work together. I want you to take over Mike's job at some capacity. The role might look a little different, but I see you there. I haven't said anything because you're still in school and I don't want to completely freak you out, but, yeah.\" Seamus finally looked at Matt, then glanced down when he felt Matt hard against his leg. \"Are you actually\u2014\" he shifted his hips and laughed. \"You're hard right now?\"\n\n\"Sue me for thinking it's hot that the sexiest guy on the planet can't get enough of me. It's good for my ego.\"",
        "\"You're not freaking out because I'm ten steps ahead of you?\"\n\n\"Nah. There will be times when one of us will need to lead the other. As long as you can be patient and hold my hand along the way, I'm here.\"\n\nSeamus let out a long, relieved breath and kissed Matt. \"I can do that.\"\n\n* * * * *\n\nMatt had to work the day before and the day after Christmas. He didn't mind. He had gotten a week off for Christmas the previous year and had just taken two weeks off to help Seamus. The least he could do was pull his weight so others could enjoy their holiday.\n\nMatt's dad surprised him by calling and asking if he could come stay a few days. Matt didn't have an extra room but Seamus did. Which meant they were cleaning the guest room less than twenty-four-hours later.\n\n\"You know you won the dad lottery, right?\" Seamus asked as he whipped the sheet across the bed.\n\n\"Do I ever.\"\n\n\"I'm serious. I don't know many parents that do as much as your dad does. Most have to pull teeth to get their parents to babysit, let alone come to them for a holiday.\"\n\n\"My dad is chill like that. Always has been.\"\n\n\"Just as long as you know how lucky you are.\"\n\nMatt knew exactly how lucky he was but he also knew how quick things could change. He was doing everything in his power to not take it for granted and to cherish the moments they had.\n\nWhen his dad showed up two days before Christmas, he was even more blessed to see the way Brad treated Seamus. Yes, they'd spent time together before, over the summer, but there's something different about Christmas. It's a family holiday and Brad treated Seamus the same way he treated Matt. Like a son.\n\nNone of them were big on gifts, but they each got a little something. Brad bought Seamus and Matt a year's worth of a monthly charcuterie and wine subscription. Matt thought it was cool but not nearly as cool as Seamus thought it was. Matt wasn't sure if it was the gift itself or the thought behind it. Either way, Seamus's reaction made it the best gift ever.\n\nAidan got lots of gifts, none of which he cared too much about. He sure loved the wrapping paper, though. And he loved his grandpa. Aidan's hardest decision was choosing between the three men who were all hopelessly lost on the little boy. He didn't even have to make a decision, he just rotated through them to his heart's content before passing out on the sofa, at which point Grandpa carried him to bed.\n\nThey could still hear Brad's quiet footfalls when Seamus pushed Matt backward on the sofa and peppered his face with kisses. Matt coughed in surprise when his crotch was squeezed.\n\nHe expected Seamus to scurry away when they heard Brad coming back from putting Aidan down but that wasn't the case. Other than letting go of Matt's dick, Seamus stayed on top of Matt.\n\nMatt was nervous as he caught his dad's eye as he walked by. He had never been this blatantly physical with a boyfriend in front of him before and he wasn't sure how he'd react. Brad just smiled. Everything Matt needed from his dad was in that smile. It was the smile of a happy dad, a proud dad, a dad that wanted nothing more than a happy son.\n\nSeamus tilted his head toward Brad and Brad's gaze shifted. Matt couldn't say for sure what passed between the two. Judging by the way Seamus relaxed on top of him, it was good.\n\nBrad walked past them. \"I'm going to clean the dishes and head to bed. It's been a long day.\"\n\n\"You've done enough, we'll take care of the dishes,\" Seamus said.\n\nBrad spun on his heel and went back the way he came, towards Matt's old room. \"I won't argue with that.\"\n\nWhen he was gone, Matt nudged Seamus. \"What has gotten into you?\"\n\n\"What?\" Seamus smiled, real coy like.\n\n\"You've just been a lot more\u2014\"\n\n\"More what?\" Seamus slipped his hand down and squeezed Matt's ass.\n\nMatt laughed. \"That's exactly what you've been more of.\"\n\n\"More ass grabbing? Are you complaining?\" Seamus shifted again, covering Matt even more, if that was even possible, and making him laugh.\n\n\"I'm not complaining, not at all. You've just been more\u2014\"\n\n\"I'm happy, Matt. That's all.\"\n\n\"Have you not been happy the whole time we've been together?\"\n\nSeamus looked at Matt seriously. \"I've been happy since day one, you know that.\"\n\n\"Not like this.\"\n\n\"I can't remember a time when I was free to say what was on my mind or to do what I wanted to do without repercussion. My parents were never supportive. Not because I was gay. They were just shitty people. And Kelly, well, we clearly had a different view on relationships. Even when things were great between us, it was a thin veil. Telling Kelly the truth was always a recipe for disaster. Even between us. I wasn't being open with you. I was afraid of saying too much or being too much.\"\n\n\"How would you be too much?\"\n\n\"Too affectionate, too physical, too invested.\"\n\nMatt laughed loud enough to wake the house. \"You definitely should've worried about being too physical. You damn near made my dick fall off from all the sex.\"\n\nSeamus smiled proudly at that. \"Well, sex is good with you. It was also the only outlet I had. Guys want sex, I could safely channel everything I felt through sex without raising suspicion.\"\n\n\"I like that you've been handsy and kind of insatiable the last few weeks. I know I've been shaky in the past, but I want you to feel you can say and do whatever you want.\"\n\n\"I'm still terrified that I'm going to push you too far.\"\n\nMatt thought about it for a second. \"Well, if you tell me the truth and I freak out, or vice versa, and it's something we can't work through, then we're clearly not right for each other. But I don't think that's the case.\"\n\n\"Yeah, but I'm ahead of you in every way.\"\n\n\"Ehh, so you got a head start blowing up your party balloon. Doesn't mean I won't catch up. Mine is getting bigger by the day.\"\n\n\"Are you saying my party balloon is bigger than yours?\"\n\nMatt laughed. He really loved the more playful Seamus. \"Don't turn my metaphor into something dirty.\"\n\n\"But I could help you blow your balloon up.\"\n\nMatt was already hard from Seamus pressing him into the couch. The temptation of a blowjob was not needed. He looked down the hall, then at Seamus. Green light.\n\nThey scrambled off the sofa. Going straight to bed would've been nice, but they had to lock up, and Seamus had to do the dishes, which irritated Matt.\n\n\"I told your dad we'd do it. If it's not done in the morning, he'll suspect.\"\n\nMatt threw his head back and laughed. \"That would imply Dad has no idea what goes on behind closed doors, and that's just not the case. Now let's go.\" Matt closed the dishwasher and pressed the start button.\n\nWhen they got to the room, Matt stripped, then crawled into bed and leaned against the headboard. He watched Seamus make a show of taking his socks off because, you know, heaven forbid he left them on.\n\nA few minutes of riding Matt with his mouth, and then his ass, Seamus grabbed the lube and condom. Matt took the former and made quick work of opening Seamus up. Holding himself with one hand, he guided Seamus's hips with the other.\n\nSeamus jolted when he felt Matt nudging for entrance. Because, holy hell, Matt wasn't wearing a condom.\n\n\"Don't look so shocked. I told you I was a few steps behind, but I'm catching up. I already told you I was in love with you. Now I'm ready for this.\"\n\nSeamus fisted his nuts. \"My balls are tingling and you're not even inside me yet.\"\n\nLeaning forward, Matt kissed Seamus then pushed himself inside his lover. \"Is this what you want? Just you and me?\"\n\n\"Yeah,\" Seamus moaned with his eyes closed. \"Yes.\"\n\nMatt set the pace until Seamus was good and stretched. Seamus took over, rolling his hips in a way that drove Matt crazy.\n\nMatt couldn't do much but sit with his head lulled to the side and try to stop from cumming. Feeling nothing around him but Seamus was a sensation he was not prepared for. It was good. Too good.\n\nThen Seamus squeezed his thighs and flipped them over. Matt tried to take it slow\u2014to make it last, but that wasn't going to happen.\n\nSeamus stared at Matt. \"You're going to cum in me, right?\"\n\n\"Yes, god yes. I won't hold back.\"\n\nSeamus made Matt ride him hard. \"Fuck, that's good. I want to feel you in me.\"\n\nThat brought Matt closer, and with a few bucks of his hips, he started releasing inside Seamus. It was a forever orgasm, the kind that won't stop. Seamus kept going, kept moving, drawing every ounce of life from Matt. When he finally finished, Seamus looked as wrecked as Matt felt.\n\n\"I've never not used a condom before,\" Seamus admitted.\n\n\"I can't say that. But this is the first time I've done it and knew it was right.\"\n\nSeamus used one of their discarded shirts to do a quick cleanup. \"Good enough for me.\"\n\nOnce they caught their breath, they found their underwear. They both felt weird with Brad just a few walls away.\n\n\"You seemed a lot more comfortable around my dad.\"\n\nA wave of affection rolled off his Seamus. He was positively radiating. Matt didn't need to see his face to know he was smiling from ear to ear.\n\n\"When I tell you you're the whole package, I mean it. You and Aidan are amazing, but when you grow up with very conditional parents like mine, or even Kelly's, experiencing a parent love you the way Brad does is incredible.\"\n\n\"He is awesome.\"\n\n\"No, awesome isn't\u2014it's so much more. There's no judgement when you and I hold hands or kiss. We don't have to hide anything when he's around.\"\n\n\"Is that why you've been mauling me in front of him all week?\"\n\nSeamus laughed. \"Kind of. I mean, I had a theory. I needed to test it.\"\n\n\"A theory, huh? What was your theory? That Dad is cool?\"\n\n\"No,\" Seamus shook his head then stared at the ceiling. \"Erm, it's stupid.\"\n\nMatt looked at Seamus. \"Tell me.\"\n\nSeamus slowly looked at Matt with apprehension. \"I thought, maybe, that he might love me\u2014the way he loves you.\"\n\nMatt saw everything clearly. The realisation went straight to his bones, making his blood tingle and his eyes swell with emotion. Seamus was a boy who had never, not once, felt loved by parents.\n\nMatt looked up and found Seamus with the same watery eyes. It angered Matt that Seamus was twenty-nine and feeling the love of a parent for the first time. Matt swallowed the lump in his throat. \"And does he?\"\n\n\"Yeah, I think he does.\"\n\nHe knew his dad wouldn't disappoint. Brad would love Seamus to the moon and back. Matt had to admit, his party balloon was gaining momentum at an incredible rate."
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "gay romance",
        "love story",
        "marriage",
        "adoption",
        "feelings"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/boss-nanny-ch-14"
}