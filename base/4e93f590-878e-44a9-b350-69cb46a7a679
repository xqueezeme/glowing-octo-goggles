{
    "title": "Another Week on the Lake Ch. 06",
    "pages": [
        "Author's Note: This is a sequel to \"A Week On The Lake\" and \"Snowed In.\" A few of the characters in this story appear in the \"Lucky Cable Guy\" stories also. Readers of my previous stories will already be aware that sometimes my group sex scenes involve guys messing around with each other, \"so if that doesn't seem like your particular brand of vodka, help yourself to as much food as you like, and have a safe journey, no hard feelings. Otherwise, come with me.\"\n\nA Brief Refresher on the Cast of Characters\n\nNot all of the characters listed will necessarily appear in this chapter, and I might have forgotten a few. It occurred to me as I was working on this chapter just how many people are at the Lake this summer, and that it might be getting crowded.\n\nJack's Cabin:\n\nWill - Our protagonist\n\nEva - Will's girlfriend of one year\n\nJack - Will's best friend. His family owns the cabin\n\nSophie - Jack's long-time girlfriend, now fiancee\n\nMaggie - Jack's cousin by marriage\n\nDani and Kristen - Maggie's friends\n\n*\n\nNext door neighbors\n\nMike and Tara\n\nJosh and Liz\n\n*\n\nMarine Patrol\n\nBarbara, \"The Chief\"\n\nDavid - Barbara's husband\n\nJodi - Marine patrol assistant\n\nBrad - Jodi's boyfriend\n\n*\n\nCharacters from Lucky Cable Guy (this story takes place thirteen years after LCG)\n\nJason and Amber\n\nMatt and Tina\n\nJack and Stacy\n\nTrevor and Emma\n\nMelanie\n\nLeanne\n\n*\n\nKaylee's group\n\nKaylee and Connor (this takes place the summer before \"Connor's Senior Year\")\n\nJill and Tommy\n\nJess and Roger\n\nKatrina and Tyler\n\n* * * * *\n\nThursday\n\nIt was past midnight when the Chief wrapped her legs around my ass and pulled me in, forcing my cock to bury itself in her pussy and mashing my chest against her tits. As we fucked, we were gradually joined by more and more people, Tina's rules of partners and partner-switching having been fully abandoned. Not to say that there was not partner swapping going on. Over the next hour it was extremely rare to see any of the attending dedicated couples having sex with each other. The pace and urgency of the sex had slowed, and with it the tempo of the music, although the party was in no danger of coming to an end. We were in this for the long haul, communal lovers until the break of dawn. The guy-on-guy sex was no longer confined to the game room, but it was relatively rare with the slight advantage of female numbers among our group. I spent close to two hours fucking my way around the patio.\n\nThe Chief with her enormous brown boobs heaving cataclysmic with the motions of our fucking cried out as much to the stars above us as to me. Her commands were absolute, and the positions we adopted were by her design. She was confident in her authority as much here on this chaise lounge with my cock in her cunt as she was in the Marine Patrol office or out on the lake on duty. She pulled my head down between her tits, nearly suffocating me between the massive melons while she rode hard on my cock, taking it into her pussy to the hilt on every stroke. She ordered me to smack her luscious ass and pound her harder from behind. My cock surged hard and strong as I luxuriated in the sensations of her pulsing dripping pussy. She came on me, drenching my shaft and my balls and screaming into the night.\n\nShe dismissed me with a half-hearted wave of her hand and I turned to my left where Stacy simply thrust her ass back in my direction and rested her forearms on the railing of the deck. The tall brunette squeezed one of her own big tits with one hand and pulled her ass cheek to the side with her other, showing me her asshole and dripping wet pussy. My cock was shiny with Barbara's cum, and I sank my entire length into Stacy's pussy easily and reached forward to grab the breast that she wasn't squeezing herself.\n\nA few people had moved out into the yard, sucking and fucking on blankets and on the bare grass. Stacy and I fucked slowly while we watched. Sophie knelt in front of Trevor, sucking his monstrous black cock with a lot more skill and depth than I had managed. His girlfriend Emma lay on the ground with her face between Sophie's legs, feasting on her pussy and howling into her from the sensations of David's cock in her own pussy. The Chief's husband had one hand on one of Emma's huge boobs and the other reached around Sophie to grasp one of hers. Not far from their group, Melanie and Kaylee were both riding on Matt, Melanie on his cock and Kaylee on his face. Matt had both of his hands locked on Kaylee's gorgeous tits as he moaned into her pussy from the pleasure of Melanie's cunt on his cock. The Chief's young assistant Jodi lay on her back in the grass while Kaylee's boyfriend Connor fucked her pussy hard with his huge cock.\n\nThe Chief had risen from her resting place beside me and Stacy, and in her place Rachel rode hard on Jack's cock. The other Jack was right beside him, bouncing Amber up and down on his own cock. Both Jacks had two big round tits in their face to lick and suck while they bounced.\n\nTina moved in next to Stacy, assuming the same position, and I pulled out of Stacy's pussy and stuffed it into Tina instead. Tommy took my place fucking Stacy, and soon we were joined by Leanne, who extended the line with Jason fucking her. Jason pulled back on her blond hair and grabbed one of her amazing tits as she howled at him to fuck her harder. I turned to look beyond Leanne and Jason and finally saw Eva, gorgeous and naked and enthusiastically sucking Brad's cock, while just behind her the Chief was helping Joe stuff his big cock into Jill's tight pussy.\n\nTommy and I switched again, and he slapped his cock against mine as we passed before I plunged back into Stacy's pussy and he into Tina's.\n\n\"Give me that cock, Will!\" Stacy cried. \"Give it to me! Harder! HARDER!\"\n\nI grabbed her hips and drilled my cock into her juicing pussy, my hips smacking against her ass just one sound among many as every single person at the party sucked and fucked, offering up grunts and screams and shrieks and filthy talk to the starscape above us. Stacy's pussy clenched hard on my cock, and she trembled against the railing as she came. \"Oh fuck I'm fucking cumming again! Unnngh! FUUUUUCK!\"\n\nStacy started to fall sideways into Tina, who was likewise shrieking with delight as Tommy's cock drove her to orgasm. I gently pulled my cock from Stacy's pussy and helped her to a chair where she could relax and collect herself. She looked up at me with her mouth hanging open as she rubbed her pussy and made herself cum again just as her initial orgasm from our fucking was fading. Jason and Leanne joined us, leaving Tina and Tommy alone at the railing still fucking hard. Jason guided his glistening cock into Stacy's open mouth and Leanne leaned over to suck my cock clean of Stacy's cum. When she was finished, she sat down in the chair next to Stacy and spread her legs, scooching her butt up to the edge of the cushion and looking up at me with fire in her green eyes. She cupped her left breast and pinched her nipple and rubbed the fingers of her other hand over her clit and the slick folds of her open pussy.\n\n\"Fuck me again, Will,\" Leanne said. \"Put that nice big cock in my pussy again!\"\n\n\"This cock right here?\" I teased, gripping my prick around the base and waving it in front of Leanne's face. She smiled and leaned forward and licked my cock head and nodded up at me. \"Suck it again,\" I said. Perhaps it had something to do with her profession, but Leanne was an exceptionally talented cocksucker. I'd certainly seen more than one video that looked more or less exactly like what I was seeing now, a view from above while Leanne swallowed a cock, in this case mine. While Eva and even Sophie were enthusiastic in their deep-throating attempts, they never did it with this kind of relaxed ease. Leanne had her nose pressed up against my pubic bone and her tongue tickled my ball sack. She had my entire cock stuffed down her throat without so much as a single gag. Her eyes watered a little and there was a tear on each of her cheeks when she pulled back and sucked in air, leaving my cock thickly coated with her saliva.\n\n\"Fuck that was awesome,\" I grunted.\n\n\"Put it in my pussy for a minute and then I'll do it again,\" she said.\n\nI got down on my knees in front of her and she grabbed my cock and pressed it between her slick pussy lips and I pushed forward to bury my entire length in her cunt. We moaned together and the rapturous delight of Leanne's squeezing pussy made my vision blur and caused the sounds of the orgy around us to fade out as if we were across the water alone on a boat rather than surrounded by twenty-odd other people in various configurations of fucking. It was difficult to gauge the passing of time with Leanne gyrating her hips and fucking my cock from her seated position, and it was hard for me to control myself, being immediately overcome with the urge to pound her supple body into the chair and cum as hard as I could into her cunt. But somehow in the back of my mind I remembered Leanne's promise to swallow my cock again, and I forced myself to withdraw.\n\nLeanne never got the chance, because as soon as I pulled my cock out of her pussy, cool fingers wrapped around the cum-covered shaft and long black hair obscured the view as someone else started sucking my cock.\n\n\"Fuck yeah, Emma,\" Leanne said. \"Taste my pussy on Will's cock!\"\n\nTrevor's busty girlfriend was a few years older than me, somewhere around thirty. She had almost exactly the same body shape as Eva. Her tits were just as big and round and firm, although her ass, plump and round as it was, wasn't quite as big as Eva's. Emma's hair was a little darker, and a lot longer, and her olive skin tanned a much deeper bronze than my girlfriend. But differences aside, here was a woman whose physical build was totally irresistible to me, so irresistible in fact that she made me almost immediately forget about the leaner and younger Leanne.\n\nFortunately for Leanne, there was no shortage of cock to take my place as I led Emma over to an empty blanket in the yard where she resumed sucking my cock. I looked up from Emma's hungry sucking briefly to see the other Jack, Matt and Tina's Jack, stuffing his cock into Leanne's pussy in my place.\n\nEva was just a few feet away now and I caught her gaze. She bit her lip and gave me the smoldering look of animal lust that I'd grown so familiar with over the last year. She was on her hands and knees on a blanket nearby, and Joe was fucking her hard from behind. Eva's huge tits swung beneath her body and she grabbed and squeezed one of them as she stared at me.\n\nFuck her Eva mouthed, her eyes flicking down to the busty black-haired beauty who was still sucking my cock. Eva widened her eyes to reiterate the importance of her command. FUCK HER.\n\nEmma seemed to be on the same page. \"Are you going to let me ride this fucking cock?\" she said, looking up at me with my cock resting against her cheek.\n\n\"Fuck yeah,\" I said, quickly rolling down onto the blanket and holding my cock around the base, pointing it straight up in the air. I watched in awe as Emma's pendulous tits swayed on her chest as she climbed up on top of me and aimed my cock into her opening. She dropped down and buried my prick inside her and gasped as her pussy squeezed my cock. I reached up to grab her tits, feeling their weight and the hardness of her nipples pressed against my palms. I could still see Eva if I looked just past Emma to the left; Joe had pulled her upper body up into the air and his hands grasped her tits in much the same way mine grasped Emma's. I could see Joe's long thick cock thrusting hard in and out of my girlfriend's pussy and his big balls swinging between her legs.\n\nEmma started to grind her hips down on me. I dropped my right hand from her huge boob and rubbed the pad of my thumb on her clit while she worked my cock deep in her pussy.\n\n\"Oh fuck that feels good!\" Emma cried. \"Oh fuck yes, make me fucking cum!\"\n\nI continued my work on her clit and let her control the movements of my cock in her pussy and in just a few minutes Emma was cumming hard. \"Holy FUCK! YES! Oh fucking FUCK ME!\"\n\nI returned my hand to her breast and lifted and squeezed the two big melons, rubbing her nipples with my thumbs while she came all over my cock.\n\n\"Holy fuck you have amazing tits,\" I groaned as her orgasm started to subside.\n\n\"Do you want to fuck them?\" she said between ragged breaths. \"Do you want to fuck my big fucking tits with this fat cock and cum all over them?\"\n\n\"Oh fuck that sounds amazing,\" I said.\n\nI looked over and saw Eva grinning and she turned her head and offered a similar deal to Joe. \"Fuck my tits and cover them with your cum!\" she barked.\n\nEmma rolled off of me while I was observing Eva, and now I gave her my full attention as she lay in front of me with her legs spread open, showing me her pussy and pressing her huge tits together on her chest. My cock glistened with a liberal coating of her cum, and I got up and dropped my knees down on either side of her torso. Emma dropped her tits, which fell to the side, a little bit further than Eva's did in the same position. Now that there was room for my cock, I lay it down on the bare skin between her tits and she lifted them again, trapping my rod there and enveloping it in the soft embrace of her copious titflesh.\n\n\"Fuck my tits!\" Emma and Eva said at exactly the same time. Joe and I traded smirks of comradery and began to move our cocks. \"Yeah move that big beautiful cock,\" Emma cooed. \"Fuck my big fucking tits!\"\n\nMy balls dragged along her skin as I pumped my slick cock in the hot constriction between her huge melons while Emma held them together and encouraged every thrust, taunting me to give her my cum. It had been about half an hour since my last orgasm, and I was finally approaching another one now that Emma was searing me with her lustful gaze and trying to crush my cock between her tits. A slow churning began deep in my balls and slowly waxed stronger as I fucked those glorious mountains of flesh.\n\n\"Oh fuck yeah that feels so fucking good!\" I growled.\n\n\"Are you going to cum for me?\" Emma responded. \"Are you going to cum all over my tits?\"\n\n\"Fuck yes I am! I'm so fucking close!\"\n\n\"Do it!\" she cried. \"Cum for me! Cum! CUM!\"\n\nEmma's screams were matched by similar cries from Eva as she coached Joe to an orgasm a few feet away. \"Come on, Joe,\" Eva wailed. \"Paint my fucking tits with your cum!\"\n\nJoe exploded first, quickly pulling back and jacking his cock hard as he bellowed into the night and thick strands of cock cream started to shoot from his cock and splatter across my girlfriend's wonderful tits. Eva held them together and squirmed on the blanket beneath him, helping to guide his ejaculations over a larger area of her tits. There was plenty of area available on those epic mammaries, and Joe was doing a fine job providing coverage.\n\nMy own orgasm finally cascaded over the edge and I mimicked Joe by pulling my cock back and stroking it just as the first hot jet of spunk exploded from the tip and splashed across Emma's big left breast. Like Eva, she held her tits together and writhed her body as I aimed my cum-cannon and shot over and over again onto her tits. My balls churned with a slow ache beneath the pleasure as they emptied themselves again, and when the fog cleared and my cock stopped spurting, Emma's tanned tits were streaked with creamy white ropes of cum.\n\n\"Jesus,\" she gasped. \"You cum almost as much as Jason!\" Jason was well-known among our circle of lake friends for ejaculating enormous and frequent loads, a fact I'd encountered for the first time last year when I'd watched him spunk and enormous load all over Eva's face in the living room at Jack's cabin. My own cum-shots paled in comparison, except now that I was back at the lake. I'd lost track of how many orgasms I'd had since waking up with Eva at Hank and Donna's cabin and fucking Katrina in the shower, but it seemed that every orgasm I'd had this week had been more powerful and plentiful than the one previous.\n\n\"Wow,\" I said. \"That was a little more than I expected. Fucking your tits is incredible!\"\n\nEmma grinned. \"Eva, could you come over here and suck your boyfriend's cum off of my tits? He made a huge fucking mess!\"\n\nEva was there in seconds, her own wobbling tits streaked with Joe's copious cock cream. Joe and I sat back on our heels on our separate blankets watching Eva and Emma writhe around sucking our cum off of each other's tits and slowly stroking our cocks to keep them from going totally soft in our post-orgasmic rest period. Despite my preternatural cum-shot, my recovery time was starting to lag after so many orgasms. But the party wasn't scheduled to end until the sun came up, and I had every intention of participating completely until it did.\n\nI could taste my cum and Joe's on Eva's kiss when she tackled me to the blanket. Her tits were still wet with Emma's spit when they pressed into my chest, and her dripping wet pussy slid up and down on the underside of my semi-stiff cock shaft.\n\n\"I'm not sure if I'm going to be able to cum again tonight, baby,\" I said.\n\n\"We'll see about that,\" she said. \"But even if you can't I sure fucking can. As long as we can get you hard I can use your cock to get me off until the sun comes up.\"\n\n* * *\n\nNot everybody remained conscious to see the sunrise. Emma and Joe, for example, had fallen asleep together on the other blanket shortly after they started to fuck, Emma lying on top of Joe's body and his cock still lodged in her pussy as they snoozed. Eva and I left them to slumber in the yard and passed Jack, Sophie, Matt and Tina still going strong on the deck, swapping back and forth on two reclining deck chairs. Inside, Rachel and Leanne were spooned together sleeping on one of the sofas, but directly across from them Jason and the other Jack were sitting back and enjoying the sensations of Amber and Stacy riding their cocks. Jill, Tommy, Kaylee, and Connor slept naked on a blanket on the floor nearby. Kaylee slept with her face against Connor's muscular chest and his huge cock in her hand. Between the sofas in the living room, Trevor was fucking the Chief from behind while Barbara howled onto her husband's cock. \n\nEva led me through the sleeping and fucking bodies in the living room and toward the bedrooms. \"Let's find a bed,\" she said. \"These guys sleeping on the fucking floor are nuts!\"\n\n\"I thought you were going to use my cock until the sun came up,\" I said at her mention of sleep.\n\n\"Yeah, numbnuts,\" she said. \"On a bed.\"\n\nWe passed two empty bedrooms before we came across one in which we saw Melanie riding Brad's cock while Jodi sat on his face.\n\n\"You guys have room for two more?\" Eva interrupted.\n\n* * *\n\nEva did manage to use my cock to make herself cum several times, but she also got to use Brad's. His cock was a little smaller than mine, but she had a good time slamming herself up and down on it anyway while Brad tried to keep his hands and sucking mouth on her tits. When they first invited us to join them, I simply stepped into the room with Eva and bent her over the foot of the bed and fucked her until she covered my cock with her cum while Melanie, Brad and Jodi continued as before. After that Melanie invited me to fuck her pussy, taking a matching position right next to Eva while Jodi slid down to take Brad's cock in her cunt. Once Eva had recovered from her orgasm, I began to switch back and forth from fucking Melanie to fucking my girlfriend while all three of us watched Brad's cock disappear over and over again into Jodi's pussy.\n\nBrad eventually flipped Jodi over and slam-fucked her into the mattress until his slender girlfriend was shrieking that she was cumming again, and when he pulled his iron-hard cum-covered prick out of her pussy Eva jumped at the opportunity to get a taste of both his cock and Jodi's cum. She left me fucking Melanie at the foot of the bed and dove onto Brad's cock. I grabbed Melanie's big tits and squeezed them while I fucked her and she slammed her ass backward to meet my strokes, dramatically increasing the force with which my cock was penetrating her pussy, and soon Melanie was cumming hard, screaming into the comforter while her pussy squeezed and clenched on my cock.",
        "Jodi was ready to go again when Melanie started to cum, so I climbed up onto the bed and sank my cock into her cunt while Eva straddled Brad and impaled herself on his cock. Jodi squeezed her round little boobs while I fucked her, occasionally reaching down to strum her fingers over her clit and she descended into a continuous orgasm that lasted all the time it took for Eva to make herself cum on Brad's cock.\n\nWe continued to cycle around on the bed, my cock sinking into one incredible tight soaking wet pussy after another, nowhere near cumming but still rock-hard and ready to help all three naked beauties achieve orgasms beyond count. Brad's cock stayed hard as well, but like me, he seemed to have had too many orgasms already tonight to be in danger of cumming in the middle of our sexual melee. Both of our cocks were soaked with the cum of all three women when Eva suggested that we suck each other's cocks.\n\n\"I can taste all three of you on his cock,\" Brad said after the first few seconds of enthusiastically sucking my cum-covered prick.\n\n\"That's so fucking sexy, baby,\" Jodi cooed as Melanie leaned in to lick her pussy. Any further encouragement from Jodi was silenced however when Eva straddled the Marine Patrol assistant's face and Jodi latched her lips onto Eva's pussy.\n\nEva continued to encourage me and Brad, being the only one left without a pussy in her mouth. \"Oh fuck yeah, Will,\" she crooned. \"I love watching you suck a nice big cock.\"\n\nAfter watching her climb onto Jodi's face, I'd popped my cock out of Brad's mouth then invited him to get up on his knees on the bed so I could suck his. Just as he'd reported, the flavor of Eva, Jodi, and Melanie was unmistakable on his slick fuck-pole as I sucked as much of it into my mouth as I could. We swapped back and forth for a long time while the girls writhed around beside us licking and sucking each other to even more orgasms.\n\nI was sucking Brad's cock for the fifth or sixth time when Sophie came in.\n\n\"Hey you guys should come outside and fuck with us,\" she said. \"The sun is going to come up soon!\"\n\nThe five of us disentangled on the bed and followed Sophie back out down the hall and through the living room, where the sleeping bodies still lay, Trevor now among their number, sleeping on the couch that had since been vacated by Jason, Amber, Jack and Stacy. Even flaccid, Trevor's cock was an intimidating site lying there across his hip as he slept.\n\nOutside on the lawn, Matt and Tina had rearranged the blankets and laid out two more to make room for all who were still awake to join the fray. Both Jacks lay on one of them while Amber rode our Jack's cock and Tina rode the other. Jason was fucking the Chief from behind on the next blanket over, and Sophie quickly joined David where he lay waiting for her to return. We faced the brightening sky in the east and I sank my cock once again into Eva's velvety tight pussy from behind and grabbed her tits to hold onto while I fucked her. Brad and Jodi took up an identical position beside us and Stacy got down in front of Eva so my girlfriend could suck her pussy. Melanie moved back and forth between Jodi and Eva for a while, but after a few minutes she got up and asked Amber to switch. So Melanie started riding Jack's cock and Amber joined her husband and the Chief, lying down with her head on the ground between their legs and licking Jason's balls and Barbara's pussy while they fucked and she fingered herself.\n\nThe horizon was low enough in the east the sun broke over the distant trees just a half hour or so after we all started fucking. Our entire group continued to move around and switch up partners every five minutes or so throughout that time, so I had the opportunity to stuff my cock into Tina's pussy and Amber's, Stacy's and Melanie's, Jodi's and Sophie's, and when the blazing light of the new day finally peeked over the horizon, I sank my cock back into Eva's pussy for one last intense set of orgasms for both of us.\n\nThe urgency of the whole group suddenly spiked when the daylight started to warm our naked bodies again. It was too bright to keep staring, so Eva and I tumbled into each other's arms and locked out mouths together as I pistoned my cock hard in and out of her perfect pussy. Her tongue thrashed against mine and our moans of pleasure crashed together in the void. It had been close to two hours since I'd painted Emma's tits with my cum, and now by some miracle I could feel again the tightening and roiling that was the harbinger of another explosion. Around us the screams and cries of orgasm began just as Eva's pussy started to clench hard on my cock and her cum started to soak my balls. The roiling and churning crescendoed until I feared some kind of testicular injury, but finally the damn burst and a new stream of cum surged up through my cock and blasted deep into Eva's pussy. There was far less than I'd previously deposited that night in Leanne's pussy, Tommy's ass, Kaylee's pussy, or on Emma's tits, but there was enough that when I finally pulled out, a significant dribble of cream seeped from Eva's pussy as we both tumbled to the ground and gasped for our breath.\n\n* * *\n\n\"Best party yet,\" Jack said as he shook Matt's hand and accepted a naked big-titted hug from Tina. We were all a little wobbly on our feet from a night of no sleep and a lot of physical exertion. And I almost fell over when Tina gave me an enthusiastic hug and pressed her big gorgeous boobs against my chest.\n\nMatt and Jason received similar hugs from Sophie and Eva, and Amber and Melanie insisted on pressing their tits against my chest and Jason's before they would let us leave.\n\n\"See you guys at the bonfire?\" Tina called as we climbed naked into the boat. We'd all left our clothes apart from underwear here, but we had decided it was a lost cause trying to find where those had been dropped around the property. So we took the long early-morning boat ride back to the cabin naked. Eva and I sat snuggled together, eyelids drooping, while Jack piloted us home.\n\n* * *\n\nWhen I woke up it was almost one in the afternoon, and Eva snoozed beside me. We'd carried our clothes through the yard, waving to Liz and Josh who gave us amused smiles and toasted us from their coffee mugs as we marched naked past their lake-facing porch up to the cabin. Eva and I showered together quickly and left the water running for Jack and Sophie who were waiting just behind us and I was asleep before my head finished settling into the pillow.\n\nBut since it was the middle of summer, the sun came up before five in the morning, so I had a little more than seven hours of sleep and was ready for another day of adventure on the lake. Today in fact, I had special plans, even though I was admittedly a little late in getting them rolling. It was the official first year anniversary of the first night Eva and I spent together. It was in one of the rooms down the hall, but to commemorate and celebrate, Jack had helped me find a nice secluded place in the woods only a couple of miles hike from the cabin where Eva and I could spend the afternoon and night camping by ourselves.\n\nEva had always been the more outdoorsy of the two of us, so I knew a night sleeping in a tent would be enjoyable for her, and that a little alone time in the middle of all of this wild swapping and spontaneous orgies would be good for both of us. Plus I had a nice little anniversary gift I wanted to give her when the time was right.\n\nSo I let Eva sleep while I moved around the room packing a bag for our overnight stay, then out to the kitchen to gather supplies for a picnic dinner and a simple morning breakfast. Jack and Sophie were still sleeping, and Maggie, Dani, and Kristen were apparently out enjoying the beautiful day somewhere on the lake or perhaps on some kind of hike of their own. The quiet of the cabin was beautiful with the summer breeze moving through the open windows and only the sound of the lake lapping against the shore across the yard interrupting that of the wind in the trees.\n\nUnable to find my swim trunks, I decided to check the boat, since taking off my clothes out on the lake had become a pretty common occurrence. My shorts were indeed in the boat, and I was on my way back to the house when I heard \"oh shit!\" from the direction of the boat house. Jack's boat house sat just a few feet away from the next one over, both of them sitting close to the edge of the property dividing line. The border was marked mainly by trees up to the road, but down here by the shore there was only grass and some small hedges between the two boat houses.\n\nSquatting by one of the hedges, hidden partially from the lake, was Tara.\n\n\"Everything alright?\" I asked as I strode in her direction.\n\n\"Oh yeah,\" she said, looking down. \"Actually my fucking panties are stuck on this goddamn bush. Little help?\"\n\nShe was wearing a bikini top, so I found it odd that she would also be wearing panties instead of the other half of a bathing suit, but as I rounded the bush it became clear that the bikini top was the only thing she was wearing. She squatted beside the bush in flip-flops and it was clear that she had just peed.\n\n\"Um,\" I said, averting my gaze to give her some level of privacy. \"I thought you said,\" I stammered.\n\n\"I lied,\" she said. \"We're playing a drinking game, and Liz told me I had to pee down by the lake for the rest of the game instead of in the house.\"\n\n\"And you forgot the other half of your bathing suit?\"\n\n\"It's also a stripping game,\" she said, smiling up at me and the obvious bulge in my shorts.\n\n\"I see,\" I said with a chuckle. \"Want me to get you something to cover up for the walk back to the house? Pretty sure there's a couple of towels right in the boat house.\"\n\n\"Maybe you should just fuck me instead,\" she said.\n\nI chuckled. \"That is very tempting, but me and Eva are taking off on a little anniversary celebration today and I'm trying to get packed.\"\n\n\"Aww, that's sweet!\" she said, rising to her feet oblivious to her nudity her on the lake shore in broad daylight. \"I'm a little hammered anyway. I will expect you to make it up to me at the bonfire though.\" She gave me nudge with her elbow and walked a little wobbly back up to the house.\n\nStill, the swaying of her bare bottom as she went was tempting enough to tent my shorts as I made my way back up to the cabin to check on Eva. She was pulling on a pair of panties when I returned to the bedroom. I watched with delight as her huge tits swayed when she stepped into the underwear and pulled them up her legs.\n\nShe smiled at me. \"Sorry I slept so late,\" she said, then eyeing the still-prominent bulge in my shorts added with a grin, \"Where'd that come from?\"\n\n\"Tara was out in the yard with nothing but a bikini top on,\" I said. \"She must have been doing pretty badly at some kind of drinking game in the house, because she was a little tipsy and I guess the rules were that she had to pee outside by the edge of the lake.\"\n\n\"She didn't offer to take care this for you?\" Eva grabbed my cock through my shorts and pressed her tits into my chest, tilting her head up for a kiss.\n\n\"She did offer, actually,\" I said. \"I told her I was saving it for you. By the way, happy anniversary.\"\n\nShe smiled and kissed me again. \"I'll make it up to you somewhere on this hike you're dragging me on.\"\n\n\"You love hiking!\" I protested.\n\n\"Just yanking your chain, numbnuts,\" she giggled. \"You sure you know where we're going?\"\n\n\"Jack said the trail was hard to miss and easy to follow. Plus we have GPS in our phones. Mine's charged.\"\n\n\"Yup, mine too. It's been nice leaving it here in the room all week. But it won't hurt to have them if we get lost.\"\n\nEva put on a bra, encasing her incredible tits for our hike and following that up with a pink button-up shirt that she simply tied off in a knot just beneath her breasts. I'd at least have some good views on the walk.\n\nWe both had some pretty serious weight to carry with us. Between the food, water, our clothes, the tent, a couple of blankets, and some camping basics like a hatchet and matches and flashlights, we had two bags each on our backs and the hike was considerable exercise. I left a note saying see you tomorrow for Jack and Sophie and we left the cabin by the driveway door and walked back to the dirt road before turning right and south, walking in the opposite of the direction that would take us back to the highway and home. After a half-mile, the road veered east but straight ahead was the hiking trail, plainly marked as Jack had promised. The trail would keep us near the lake shore, and eventually lead us to a sandy beach with a camping area and a fire pit where I intended to spent the night.\n\nThe trail did move away from the lake shore in order to bring hikers up a nearby hill which Jack promised would provide good views of most of the northern half of the lake, so an hour into our journey, we found ourselves climbing steadily uphill, and stopped for a break and a drink of water.\n\n\"How's your vacation going so far, babe?\" Eva asked me from her seat on a rock across the trail from me.\n\n\"I have to say, it's been pretty amazing,\" I said. \"How about yours, my dear?\"\n\n\"It's been exactly what I've been waiting for since winter,\" she said. \"In more ways than one.\" She winked.\n\n\"That's for sure,\" I agreed.\n\n\"Did you finally get a chance to scratch your itch for Kaylee last night?\"\n\nI looked at Eva's beautiful smiling face. She wasn't asking out of some motivation to interrogate me on my sexual activities without her, but rather to share them with me, something we'd been doing since we'd first started dating within the context of the shenanigans that were common on the lake.\n\n\"I did,\" I said and smiled. \"I got to have a little threesome with her and Emma on that mattress on the patio. I came in Kaylee's pussy.\"\n\n\"Worth the wait?\"\n\n\"Absolutely,\" I said. \"Did you get a chance to scratch your itch? Matt and Jason?\"\n\n\"Fuck yes I did,\" she said. \"I got them to cum almost at the same time. Matt's cock is so fucking big and when he cums in my pussy it's like there's nowhere for it to go. And Jason's fucking cum-cannon pumped so much cum up my ass I thought I was going to taste it.\"\n\nShe knew it made me horny listening to her talk about getting fucked, and indeed she'd resurrected the bulge in my shorts and smiled at her handiwork from a few feet away.\n\n\"Emma's tits are almost as nice as yours,\" I said. \"That was awesome when you and Joe were playing along with us in the yard.\"\n\n\"Her tits are incredible,\" Eva agreed. \"I wish some of these people lived closer to us. Did you make it into the boys-only room at all?\"\n\n\"I sucked a few cocks,\" I said, plainly indicating from my tone of voice that there was more to come.\n\n\"Mmmm,\" Eva said, reaching her hand between her legs and rubbing herself through her shorts. \"I wish I could have seen that.\"\n\n\"And I fucked Tommy in the ass while Jack fucked my ass,\" I said, watching her for her reaction.\n\n\"Holy fuck are you fucking serious?\" she shrieked. \"That's so fucking hot! FUCK! How did I miss that?\"\n\n\"Well,\" I teased, grabbing my cock through my shorts and making its outline clearly evident for Eva to see. \"It was the boys-only room after all.\"\n\nEva stood up and walked over to where I sat on a fallen log. \"Take your cock out,\" she said.\n\n* * *\n\nEva swallowed my cum despite my repeated requests for her to show me her tits so I could cum all over them. She just grunted and continued to suck until she was draining my balls and swallowing every drop of creamy spunk.\n\nNow we had made it to the top of the hill, where we set down our bags again and looked out over the lake.\n\n\"You can see Bonfire Island from here,\" Eva said, pointing south-east across the dark blue expanse below us.\n\n\"Are you sure that's it?\" I asked. \"All the islands look pretty much the same from up here.\"\n\n\"Yeah I'm sure,\" she said. \"You can even see the dark spot where they build the fires. See that sandy stretch over to the left of the trees?\"\n\n\"I'll be damned, Hawkeye. I think you're right.\"\n\n\"Do you think Friday night is going to top last year?\" Eva looked at me. \"Sophie said last year was kind of a small crowd compared to other times.\"\n\n\"At the bonfire?\" I said. \"I didn't think it was a small crowd at the time. But yeah, there were more people at Matt and Tina's last night than there were at the bonfire last year.\"\n\n\"I wish Felicia and Becky were here,\" Eva sighed. Felicia had been one of Eva's best friends for years before I met either of them, and Becky had become a close friend to both of us after our first trip to the lake. But now that both of them lived across the country, we hadn't seen Felicia at all during the last year and Becky only once, when she and her boyfriend had come home for a long weekend visit and we'd spent a fantastic evening holed up in our apartment against the snow storm along with Jack and Sophie and our neighbors across the hall. I found myself wishing Becky and Felicia were here for more carnal reasons. Becky, with her auburn hair and tall busty body was the first person I'd had sex with last year as the delights of the lake were gradually revealed to me. And Felicia, a little bit taller and nearly as stacked, was a stunning blond of movie-star caliber, with whom I had several fond memories from that week, including our first fuck on the living room floor in the cabin and the day we'd been \"busted\" on the island by Matt and Tina.\n\n\"It would be really nice to see them,\" I agreed with a smirk that made it clear to Eva what I'd been thinking about.\n\n\"Perv,\" she said with a punch for my arm followed by a slow kiss. \"Shall we journey on?\"\n\n\"Let's,\" I said.\n\nEva pulled her phone out of her pocket. \"That's freaky,\" she said. \"Text from Felicia.\"\n\n\"What a charming synchronicity,\" I chuckled.\n\n\"Oh mama!\" Eva said, her eyes widening as she beheld her phone screen.\n\n\"Something good?\"\n\nEva showed me her phone screen. Felicia had sent my girlfriend a nude selfie.\n\n\"Hot damn,\" I said. \"That's fucking hot.\"\n\nFelicia had taken the picture with her cell phone, standing naked in front of a large mirror that appeared to be in her bedroom. Her lips were pursed in an air-kiss and she cupped one of her big tits with her free hand, lifting it slightly and pinching her nipple between her thumb and forefinger.\n\n\"We should send a response,\" Eva said, wagging her eyebrows at me. \"Let's think of something fun to do when we get to the camping area.\"\n\n* * *\n\nIt was another hour before we made it to the secluded beach with its single picnic table and small fire-pit. The heat of the day and our physical activity had us both flushed and sweaty, but I wanted to get the tent set up before I relaxed, so while Eva took off her clothes and waded out into the lake for a swim, I did some camping chores. Once the tent was set up, I grabbed the hatchet and ventured into the surrounding woods looking for kindling and any fallen branches I could break up enough for a fire. I was at it for close to an hour and thoroughly drenched in sweat when I returned to the beach to find Eva lying on a towel in the sun and reading a book. I was surprised to see her wearing a bathing suit.\n\n\"Very nice,\" I said. \"You know how much I love bikini tan lines.\"\n\n\"You look like a sweaty mess,\" she said, tipping her sunglasses up onto her forehead and looking me over.\n\n\"Setting up our camp by myself was hard work,\" I said with a grin.\n\n\"Jump into the lake and cool off,\" she said. \"Then come back up here so we can take a picture for Felicia.\"\n\nI emerged from the water dripping a few minutes later, and Eva smiled up at me, eyeing my dangling cock as she pulled the cups of her bikini top down away from her tits. My cock responded immediately, climbing from completely flaccid to fully engorged as Eva squeezed and caressed her tits in front of me.",
        "She handed me her phone. \"Take a picture of your cock between my tits,\" she said.\n\n* * *\n\n\"I'm going to cum again,\" Eva moaned.\n\n\"That sounds like good news to me,\" I said. We sat across from each other on a blanket on the sand. After stripping off my clothes and relaxing in the cool water of the lake for a while, I'd flopped down next to Eva and dried in the sun while we cuddled and kissed taking our time and enjoying the day. It was the middle of the afternoon, and there was plenty of time before I had to get our supper going. Our snuggling had been playful and teasing, me naked and Eva in a bikini. My cock was hard the entire time, but whenever I tried to tug at a piece of her swimsuit, Eva would giggle and slap my hand away. Eva had suggested I roll us a joint, so now we were passing it back and forth and watching each other masturbate.\n\nI'd grabbed a shirt from the tent when I went back to get the weed, and I wore it unbuttoned, covering my shoulders and upper arms, but leaving my chest bare to the sunshine, along with the rest of my naked lower body. My cock pointed straight up in the air as I watched Eva, the bottoms of her bathing suit now removed, fingers moving up and down over her clit and the opening of her pussy. She'd given herself three orgasms already and now the fourth was starting to wash over her as she reached out to hand me what was left of the joint just before she lost control again and rolled onto her side on the blanket as she came.\n\nI tossed the stub of the joint into the sand and slowly stroked my cock as I watched Eva's huge tits come tantalizingly close to spilling out of her top. The heat of the day had only intensified, but with the chemical enhancement of the THC, so had the colors of the summer. The slowness of time and the caress of the wind on my bare skin made me shiver with pleasure and the anticipation of pleasure. Eva's eyes gradually fluttered open as her orgasm subsided, and she looked up at me and smiled and then her eyes darted to my free-standing cock.\n\n\"I want your cock in my pussy, Will,\" Eva said. \"I want you to fuck me and cum inside me.\"\n\nI rose to my knees and knee-walked over her body until my cock hovered over her face. \"I'm going to need a little help first,\" I said.\n\nEva licked my balls in long slow wet laps before she started sucking my cock. She propped herself up on her elbows and her big beautiful melons, still confined within the material of her bathing suit, jiggled on her chest as she adjusted her angle and tried to swallow as much of my cock as she could.\n\n\"That's it baby,\" I groaned. \"Just like that. Get it nice and wet and ready for your tight little pussy.\"\n\nEva moaned and I could feel the tiny vibrations of the sound in the rigid length of my cock, right down to the root between my balls. Eva looked up at me with my cock in her mouth and slowly drew back. My purple glans cleared her lips with a pop. \"Fuck me,\" she said.\n\n\"Take off your top,\" I ordered as I moved back down her body and she made room for me between her legs. Her pussy was already slick and juicy from her self-induced cums. I dove down and latched my lips onto hers, sucking up the silky goodness of her orgasmic fluids and sliding my tongue into her pussy to get a good full taste of her arousal.\n\nWhen I looked back up Eva's top was gone and her glorious tits stood like twin monuments to beauty and life on her chest. \"I said fuck me!\" she barked.\n\n\"I'm sorry baby,\" I said as I adjusted my position to give her what she wanted. \"I just needed a taste of your perfect pussy.\" I tapped her pussy gently with the underside of my stiff prick, making contact with her clit and Eva gasped and bucked. \"Do you want this cock?\" I teased. \"Are you ready to get fucked, baby?\"\n\n\"Oh fuck, yes, give it to me!\" she cried. \"Fuck me, Will! Fuck me, baby!\"\n\n* * *\n\nPleasure exploded in my mind and blinded me to the world around me as my balls exploded and my cock started to blast my spunk deep into my girlfriend's pussy. With the weed slowing our senses, we had rolled around on the blanket sucking and fucking for almost an hour. Our pace had been languid as we reveled in the sensations of my cock buried to the hilt in Eva's pussy. We took turns being on top and in control, Eva riding my cock just a little harder than I was fucking her when it was my turn. Whenever she was on top, I tried to suck on her tits, to varying degrees of success as she humped herself up and down on my rock-hard fuck-pole. She came two more times while we fucked, both orgasms causing her pussy to clamp down hard on my cock and soaking my balls and the blanket beneath us. Now with the first blast of hot cock cream cascading into her cunt, she started to cum again.\n\n\"Oh my fucking god!\" Eva screamed. \"Oh my fucking FUCK I'm cumming again! I'm FUCKING CUMMING!\"\n\n\"Oh fucking fuck me too!\" I bellowed. \"Holy fuck Eva! HOLY FUCK YOUR PUSSY FEELS SO FUCKING GOOD!\"\n\nWhen my balls finally stopped their churning and pumping I collapsed forward, pressing my chest into Eva's sweaty heaving tits and we locked our mouths together, our tongues dancing as the afterglow of our orgasms slowly ebbed.\n\n\"I love you, Will,\" Eva said.\n\n\"I love you, Eva.\"\n\n\"That looked like a lot of fun,\" a woman's voice said behind me.\n\nI scrambled to extract my slowly shrinking prick from Eva's dripping pussy and turned to see a grinning Kaylee sitting a few feet away at the picnic table next to her similarly grinning boyfriend Connor. They were both wearing clothes, which I found to be mildly surprising, but seeing that it was friends and not strangers took away the urgency Eva and I had felt to cover ourselves up. There was no mistaking the bulge of Connor's erection in his shorts, his huge cock pointing down his left leg and lifting the material as it tried to rise from its constraints while Kaylee's hand caressed it.\n\n\"You two took your time,\" Eva said.\n\nI turned back to my girlfriend, who had now propped herself up on one elbow, pushing her tits together on her chest. Her legs were spread wide, and there was no mistaking the site of my cum dripping from her open pussy. \"Wait, what?\" I stammered.\n\n\"Will,\" my girlfriend said. \"You know I love spending time alone with you, and it's really sweet that you planned a little camping trip for just you and me. And I didn't invite Kaylee and Connor to spend the night with us, just dinner and, you know, dessert.\"\n\n\"Is that okay?\" Kaylee asked. \"I didn't mean to interrupt your plans.\"\n\n\"Who's hungry?\" I said with a grin before turning to kiss Eva on the lips. \"I love you.\"\n\n* * *\n\nConnor was an experienced hand with building the fire and getting it ready to cook on. \"Boy scouts,\" he told me when I complimented the speed with which he'd built us a roaring fire.\n\nThe sun was still two or three hours shy of setting, but we were going to need the hot coals of the fire to properly cook our dinner, even if it was just hot dogs and a couple of cans of beans. Eva had put her bathing suit back on and Kaylee stripped down to hers while Connor and I worked on dinner, taking several breaks to ogle each other's girlfriends as they lounged at the table drinking beers that Connor and Kaylee had brought with them and splashing in the shallow water on the lake shore. Eva was quite a bit shorter and curvier than Kaylee, with a bigger ass and much bigger tits, but Kaylee's lithe form was hugged nicely by her bikini, showing off the generous swells of her breasts that seemed to be a little bigger than they'd been a year ago. She'd clearly put on a little weight in her freshman year of college, and it looked damn good on her.\n\n\"First year at the lake?\" I asked Connor as we traipsed through the woods looking to supplement the wood supplies I'd begun on our arrival.\n\n\"Yeah, man,\" he said. \"Place is fucking awesome.\"\n\n\"No argument there,\" I said. \"Wait until Friday night.\"\n\n\"That's what I keep hearing,\" he said. \"Although if anything is going to top last night, I'll believe it when I see it.\"\n\n\"Tina and Matt really know how to throw a party.\"\n\nConnor snapped off a dead tree branch that I'd struggled with earlier. He was a little taller than me, and a bit more muscular, even if I was in the best shape of my life.\n\n\"Some kind of life that must be, huh?\" he said.\n\n\"Sorry?\"\n\n\"Matt and Tina and all those guys. Taylor, or Leanne I guess her real name is. Making porn for a living and making bank.\"\n\n\"They seem to enjoy themselves,\" I said. \"You know I didn't even realize until this week that Leanne was Taylor. I met her at the bonfire last year and I had no idea.\"\n\n\"Met her?\" Connor grinned.\n\n\"Met her,\" I said. \"Fucked her. You probably have a good idea what the bonfire is like by now.\"\n\n\"They told me I should come audition,\" he chuckled.\n\n\"Well from what I saw last night,\" I said, \"you've got more than enough of the required equipment.\"\n\n\"That's exactly what Kaylee said.\" He paused. \"So you're really okay with other guys fucking your girl?\"\n\nI studied his expression, wondering if maybe he was having a hard time with all of the swapping and sharing that was going on. \"Honestly, it really turns me on watching her get fucked,\" I said. \"How about you and Kaylee?\"\n\n\"Well yeah,\" he said. \"But me and Kaylee aren't really like boyfriend and girlfriend. Just kind of friends who fuck, you know?\"\n\n\"So you're wondering if you could handle it if you two were more than just fuck-buddies?\"\n\n\"Kind of,\" he said. \"Yeah.\"\n\n\"Well, let me put it this way,\" I said. \"Eva and I met here. We got together for the first time after seeing each other have sex with other people across the room. It's just kind of what we do, and we both love it. It doesn't hurt that Jack and Sophie are so into it. Even when we're home, we hook up with them a couple times a month. But one thing Eva and I don't do is hook up with people without telling each other. She has a fuck-buddy at her office that she hooks up with probably once a week, but she always tells me about it, and talking about it always gets us horny. Another thing is...\" I paused. \"There's something about this place. It changes you.\"\n\n\"Changes you?\"\n\n\"I'm guessing you already feel it,\" I said. \"But I'm really not sure if having sex with just one person is ever going to be a realistic thing for me and Eva again.\"\n\n* * *\n\nKaylee smiled up at me as she unbuttoned my shorts and pulled them down. She was still dressed in her bikini, but the view from above to her chest was incredible even with the material of her top in the way.\n\nAcross the fire from us, Eva already had Connor's cock out of his shorts. The enormous rod stood up in the orange light of the setting sun and Eva slowly stroked it, feeling the contours and firmness of his long thick shaft.\n\n\"I was so upset when I found out you guys left without saying goodbye last year,\" Kaylee said as she rubbed the rock-hard outline of my cock through my underwear. \"That day on the little island, before the bonfire, when you held me up in the air and fucked me? Still one of the best orgasms of my life. I wanted more of that, and I didn't realize you and Eva were only here for one week.\"\n\n\"I'm sorry I didn't get a chance to say goodbye,\" I said. \"That was such a mind-blowing week for me. But even with everything going on with Eva and the two of us getting together, I have to admit that I've thought about that same day on the little island many times since last year.\"\n\n\"Will?\" Kaylee said as she pulled down my boxers. My cock sprang up in the air and just barely grazed her cheek on the way by before it slapped against my stomach and settled down again at a forty-five degree angle from my lower abs.\n\n\"Yes, Kaylee?\"\n\n\"Please don't ever make me wait a whole year for your cock again,\" she said just before sucking me right down to the root.\n\n\"Oh fuck, Kaylee, that feels good!\" I gasped. \"But it's not like we live in the same town or anything. You're welcome to come spend a weekend with me and Eva sometime if you want.\"\n\nKaylee moaned onto my cock but didn't carry on the conversation.\n\n\"Yes!\" Eva exclaimed. \"That's a great idea!\" She sat on one of the bench seats of the nearby picnic table with Connor in front of her. Connor's shorts were down around his knees and his massive cock was in Eva's stroking hand. Having made her opinion on the subject known, she resumed her oral work, and Connor threw his head back in delight at my girlfriend's expert cock-sucking skills.\n\nI watched Kaylee suck my cock and quickly took off my t-shirt, hoping that the act of removing some of my own clothes would inspire Kaylee and Eva to remove some of theirs, as both of them were still wearing their bathing suits.\n\nI'd imagined that this camping supper and evening hours would be spent with just me and Eva, hopefully doing more or less the same thing Kaylee and I were doing now, but now that Kaylee was here in front of me I intended on making the best of the change of plans. Besides, there would be plenty of one-on-one time for me and Eva later, when it was dark and we were snuggled together in the tent.\n\nKaylee reached behind her neck and untied the strap of her bikini top without taking my cock out of her mouth. She pulled it down away from her perfect tits and let it sit there around her stomach while she worked my cock in her mouth and lifted and gently squeezed my balls. I gazed down at Kaylee's beautiful face and her sparkling eyes as she looked up at me while she sucked. I could see the gentle jiggling of her tits, swaying from the motion of her work.\n\n\"Fuck yes, Kaylee,\" I groaned. \"Suck that fucking cock.\"\n\n\"Holy shit I'm going to cum already!\" Connor bellowed from the other side of the fire pit. Eva had also taken off her own top, leaving her huge round boobs bare and bouncing to Connor's gaze as she tried to stuff as much of his massive cock into her mouth as she could. She kept up the frantic urgency of her sucking even after his warning, and Connor roared wordlessly as he started to shoot his cum down her throat.\n\nKaylee took the sound of her boyfriend's orgasm as a challenge, and sucked me even harder and deeper. Her eyes never left mine as she practically swallowed my cock, swirling her hand up and down the exposed portion of my shaft on every stroke. \"That feels so fucking good, Kaylee,\" I encouraged. \"Just like that. Make me cum.\"\n\nOnce Eva had finished slurping down every drop of cream she could extract from Connor's cock, she stood up and took off the rest of her bathing suit before climbing up onto the table and spreading her legs wide open. \"Get over here and suck my pussy, Connor!\" she commanded.\n\nI watched Connor happily latch his mouth to Eva's cunt as Kaylee drove me closer and closer to the brink of my own orgasm. Eva watched me even as she verbally guided Connor to give her pussy the most pleasure. My girlfriend's eyes blazed when they met mine. \"Cum in her mouth, baby!\" Eva cried. \"Shoot your hot load right down her throat!\"\n\n\"Oh my god here it comes!\" I cried as Kaylee moaned onto my cock and sucked me even harder. My swinging balls roiled and churned and pumped, and soon Kaylee was gulping down spurt after spurt of my gooey cum while she worked the fingers of her free hand inside her bikini bottom. \"Oh fuck oh fuck!\" I groaned as Kaylee pulled her face back and jerked my cock over her open mouth and squeezed out the last glob of spunk onto her tongue. She held it there for a few seconds before closing her mouth and swallowing it.\n\n\"I want you to cum in my pussy next,\" Kaylee said, standing up and pulling down her bikini bottom. She led me by the barely softened cock over to the table where her boyfriend was still busy licking and sucking my girlfriend's pussy. I paused to put my cock in Eva's moaning mouth, and she sucked me back to full hardness in just a few seconds.\n\n\"That's so good, Connor,\" Eva said after I pulled my cock out of her mouth. \"But I want you to fuck me now. Put that huge cock in my pussy!\"\n\n\"Fuck her good, baby,\" Kaylee said. \"I want to suck your cum out of her pussy.\"\n\nEva winked at me, having already expressed her desire to do exactly the same thing to Kaylee. The idea of Kaylee and Eva locked in a sixty-nine and sucking spunk out of each other's pussies was enough to spur me on to get started with Kaylee. The nineteen-year-old brunette was waiting for me at the other end of the table, her legs spread wide and a smile on her face.\n\n\"I need to taste this pussy first,\" I said, kneeling on the ground and gluing my mouth to her dripping cunt.\n\n\"Oh fuck yes, Will,\" Kaylee groaned. \"I'm so ready for your cock, but you suck my pussy so fucking good!\"\n\nThe taste of Kaylee's arousal flowed over my tongue as I licked her open pussy. She gasped and moaned and bucked her hips forward to press herself into my face. \"Oh Jesus I'm cumming!\" Kaylee cried. \"You made me cum already!\"\n\nI stood up and enjoyed the view of Kaylee quaking in orgasm on the table in front of me, and glanced up to see Connor slowly sinking his huge cock into Eva's pussy just a few feet away. \"Oh fuck yeah that's a big-ass dick!\" Eva wailed.\n\n\"Give me your cock, Will,\" Kaylee commanded, having ridden out the waves of her orally-induced orgasm. \"Fuck my tight little pussy!\"\n\nPushing my cock down with my thumb just at the base, I lined up with Kaylee's open pussy and stepped forward and buried my entire stiff prick inside her in a single thrust. \"Holy fucking FUCK!\" Kaylee screamed. \"OH FUCK YES!\"\n\nI slowly pulled back until just the head of my cock was still in Kaylee's pussy and she managed to slightly quiet her verbal expressions of pleasure. \"Oh my god, Will, your cock feels so fucking good! Do you like my pussy? Do you like fucking me with your big hard cock?\"\n\n\"I fucking love your pussy, Kaylee!\" I replied as I began to thrust rhythmically into her juicing channel. \"It's so good on my cock! It's so tight and fucking perfect!\"\n\n\"Fuck me Connor!\" Eva wailed. \"Fuck me harder!\"\n\nKaylee pulled my upper body closer to hers and our mouths met for a frantic kiss as I pumped my cock hard into her pussy. \"Fuck my pussy, Will! Fuck me!\" she gasped when we finally managed to untangle our tongues. I kept one hand at Kaylee's hip and reached up with the other to fondle and squeeze her perfect bouncing tits. \"Oh my god, you're fucking me so good!\" she cried.\n\n\"Fuck her, Will!\" Eva screamed. \"Oh my fucking god, Connor! You're making me cum!\"\n\n\"I'm cumming too!\" Connor roared. \"Oh fuck, Eva your fucking pussy feels so fucking good!\"\n\nI smiled as I watched Eva and Connor cum together, imagining the torrent of spunk that he was pumping deep into her pussy, and then imagining Kaylee's sucking lips and exploring tongue seeking out that cum.\n\n\"Kaylee, I'm going to cum,\" I warned. \"Your pussy feels so fucking good and I can't hold it!\"\n\n\"Give it to me!\" Kaylee cried. \"Cum in my pussy and\u2014OH FUCK I'M CUMMING!\"\n\nWe bucked and thrashed together as my balls pumped rope after thick rope of cock cream deep into Kaylee's clenching spasming pussy. All four of us were covered in sweat and delirious with pleasure as orgasms washed over all of us at once. Even though Eva had started cumming first, she was still frantic and thrashing on Connor's cock even after the rest of us had gathered our senses and our breath. \"CUMMING AGAIN!\" she screamed. \"OH FUCKING FUCK! AAAAAAAAGH!\"\n\nKaylee and I smiled at each other and kissed again with my slowly deflating prick still stuffed into her drenched cum-filled pussy.\n\n\"Good job, Connor,\" Kaylee cooed. \"Help Eva down onto that blanket so I can suck her pussy.\"\n\nI pulled my cock out of Kaylee's cunt and made room for her to stand up, albeit shakily. My cum seeped from her pussy and dribbled down her inner thighs as she got down onto the ground with Eva on top of the blanket. She dropped her pussy down onto Eva's face and latched her mouth onto Eva's pussy.",
        "\"Wow,\" Connor said, stroking his awesome cock, which if it had softened at all after his latest orgasm, was back to rock-hard now and glistened with Eva's cum.\n\n\"I've gotta try this,\" I said, quickly sinking to my knees in front of him and sucking the slick cum-covered head of his cock into my mouth.\n\n\"Holy shit!\" Connor yelped. \"Oh my god, he's sucking my cock, Kaylee!\"\n\nI was stunned at how wide I had to hold my mouth open to accommodate his massive member. The unmistakable taste of Eva's pussy preceded the taste of Connor's own thin-stretched cock-skin. I wasn't even able to get half of his prodigious length into my mouth before his bulging cock head was pressing against the back of my throat and I was forced to withdraw and suck just the head.\n\n\"That is so fucking sexy,\" was all Kaylee said before returning to slurping Connor's cum out of pussy.\n\nI popped his cock out of my mouth and stood. \"Want to give it a try?\" I asked him, pointing down at my own renewed erection, shining in the dying daylight with Kaylee's pussy juices. \"It mostly tastes like Kaylee's pussy at this point anyway.\"\n\n\"Fuck it,\" he said. He got down on his knees and tentatively licked the underside of my shaft before taking the swollen head into his mouth.\n\n\"Fuck yes,\" I said. \"Suck my cock!\"\n\n\"Well that is the hottest fucking thing I've seen all day,\" Eva said. I looked down at the blanket to see that she and Kaylee had disengaged from sucking each other's pussies. \"Baby, I'm going to need you to fuck me now,\" she said to me.\n\n\"As you wish,\" I said, pulling back and popping my cock free from Connor's sucking mouth. \"Thanks, man,\" I said. \"Looks like Kaylee could use a ride on that massive cock of yours right about now. I've gotta fuck my girlfriend.\"\n\nConnor smiled and crawled over to the blanket and lay down while Kaylee climbed up to mount him. She aimed his huge prick straight up in the air and slowly impaled herself.\n\nEva lay right next to Connor, and she spread her legs wide for me as I approached. I lowered my body over hers and we kissed as I pressed my chest against her tits and rested my cock against her pussy. \"It was so beautiful watching you fuck her,\" she said. \"Kaylee is right. We need to get together more often than once a year.\"\n\nI pulled my hips back and pushed them forward again, this time driving the length of my cock into Eva's pussy. \"I love you, Eva. Happy Anniversary.\"\n\n\"I love you, Will. Now fuck me.\"\n\n* * *\n\nEven though it was dark when Kaylee and Connor put their clothes back on, they insisted they could hike the trail safely with their flashlights, even after repeated invitations from Eva and I that they could spend the night with us. It would be a little snug in my tent, but we could make it work. Kaylee however insisted on giving me and Eva our privacy for the rest of our anniversary celebration, and assured us that she'd hiked this trail a hundred times, and showed us the powerful beams of their LED flashlights.\n\n\"If we get lost it's less than a mile to the nearest cabin,\" Kaylee said. \"And all we have to do is follow the shore. Besides, we want to get back to the house to see what Katrina and Tyler and Roger and Jess are up to tonight. We've been so busy this week we haven't even had any time to hang out with them yet.\"\n\n\"I'm really glad you guys stopped by,\" Eva said. She kissed Kaylee and then Connor on the lips, pressing her still-naked tits against each of them as she hugged them goodbye.\n\nConnor and I settled for a brief handshake and an awkward laugh, but Kaylee threw herself into my arms and launched her tongue into my mouth. Then she whispered in my ear, \"I love you, Will.\"\n\nOh shit.\n\n* * *\n\n\"How is it even possible?\" I asked Eva a little while later. \"I've been around her a total of what? Three hours in our whole lives?\"\n\n\"Are you complaining about this?\" Eva said, smirking at me as she crawled into the tent beside me and lay down with her glorious tits pressed together on her side.\n\n\"Well, no,\" I said. \"But this isn't good, right? I'm with you. I love you.\"\n\n\"I know that, Will,\" she said, giving me a kiss for good measure. \"And Kaylee knows that too.\"\n\n\"How are you cool with this?\" I asked. \"Another woman just told me she loved me.\"\n\n\"We talked last night at Matt and Tina's,\" she said. \"We were taking a few minutes to rest while you were down in the basement getting your hot guy-on-guy action on.\" She giggled as she said it.\n\n\"You talked.\"\n\n\"Yes,\" she said. \"She told me she wants to be with you. Do you know where she goes to school?\"\n\nI shook my head. \"I know she's done a year of college, but that's it.\"\n\n\"I'll give you a hint,\" she said. \"It's about fifteen minutes down the road from where we live and they have an extremely popular hockey team.\"\n\n\"You're shitting me.\"\n\n\"I am totally serious,\" Eva said. \"I think Kaylee is going to be visiting our apartment a lot more often than a weekend every once in a while.\"\n\n\"Are you okay with that?\" I asked my girlfriend, taking her hand between both of mine, cradled between our chests as we lay on the blankets and sleeping bags.\n\n\"You know how much I love to watch you fuck beautiful sexy women.\"\n\n\"Yeah, but she's in love with me.\"\n\n\"She's nineteen,\" Eva said. \"Maybe it's real, maybe it isn't. But she knows you and I are together and she doesn't want to get in the way of that. Maybe just join in once in a while.\"\n\n\"It's hard not to enjoy the thought of threesomes with you and Kaylee on a regular basis back home,\" I said.\n\n\"Exactly,\" Eva said. \"Now do you think you've got anything left in the reserves for your poor neglected girlfriend?\" She took my more or less flaccid cock in her hand and gently tugged.\n\n\"Neglected,\" I chuckled, and rolled on top of her, pressing my slowly growing member against her pussy. \"You're hilarious.\"\n\n\"Shut up and fuck me, Will.\"\n\n\"Oh wait!\" I yelped, rolling off of Eva as I remembered her present in my bag. \"I got you something.\"\n\nFor the rest of the night we made love in the tent, and Eva wore nothing but the necklace I'd been hiding from her for the last two months. It wasn't a particularly expensive piece, but it matched her eyes, and it looked fantastic resting between her gorgeous tits on its white-gold chain. I gave it to her with a first-edition hardcover of our mutual favorite Stephen King, a mighty tome that had added a perhaps excessive amount of weight to my hiking pack.\n\nAfter protesting with me about the necessity of buying her presents, Eva beamed and thanked me with a fantastic blowjob, swallowing my cum for the second time that day. The \"lake-effect\" allowed us to continue immediately into a slow but intense fuck, and we thrashed and screamed together in the tent as I filled her pussy with cum. Eva produced her own makeshift anniversary gift shortly after that, bringing out a bottle of lube from her bag.\n\n\"I think I'm going to need you to fuck me in the ass next,\" Eva said.\n\n* * * * *"
    ],
    "authorname": "Megamuffin",
    "tags": [
        "group sex",
        "orgy",
        "swapping",
        "swingers",
        "outdoors",
        "big tits",
        "group"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/another-week-on-the-lake-ch-06"
}