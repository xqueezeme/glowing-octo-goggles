{
    "title": "Bring Me to Life Ch. 02",
    "pages": [
        "When publishing, please update previous posting as Ch 01. Thank you.\n\n-------------------\n\nForeword:\n\nFirst, I want to thank you all for your patience. Life has a way of getting in the way sometimes, and the last couple months left me little time to work on this. To top it off, I accidentally deleted my mostly edited copy instead of my rough so had to redo all the edits from the original markups (thankfully still had the markups in my email!)\n\nChapter 2 picks up right at the end of chapter 1, if you haven't already read the first chapter you will be missing a lot of the character background.\n\nMuch like my first chapter, this will be a longer, character focused piece. The writers I admire most on this site are the ones who can tell a well developed story, so that is what I seek to do as well.\n\nNote for clarity: Though not overly specific on location, the story is written as occurring in Canada with respect to observed holidays. Boxing Day, the day after Christmas in Canada, would be comparable to Black Friday in the U.S, and is also typically a business holiday. (While many Canadian stores do offer Black Friday sales now, this is relatively new for us in the last few years with Boxing Day being the more traditional day. Many stores additionally extend their Boxing Day sales through to New Year's Eve).\n\nAs always, special thanks to careythomas for being such a fantastic editor.\n\n-------------------\n\nAlexis - Friday, December 26th, 2014\n\nI woke up to Max's nose pressing against my hand, Mikey still had her arm around me resting on my stomach just below my breasts, and I couldn't help the smile that spread across my lips as I remembered what she had done to me the night before. Seeing my eyes open, Max whined more insistently making sure I understood that he needed to go out.\n\nGently removing Mikey's arm from around me so as not to wake her, I slipped quietly out of bed and, with a brief stop in the bathroom to grab the robe I'd seen there, went downstairs with Max to let him out the back door. I watched him tearing across the familiar ground before running to the edge of the yard, near some trees, to relieve himself. The simple morning routine was one of many that had once reminded me of the void Sam had left... but this morning it seemed to emphasize the new beginning I had started with Mikey instead of what I had lost.\n\nMaking a mental note to pick up after him later, I let him back in and, after preparing the coffee pot and setting a timer to brew a pot of fresh coffee in thirty minutes, I climbed the stairs back up to the bedroom, slipping Mikey's bathrobe off my shoulders as I rejoined her on the bed. Max, content with having emptied his bladder and seeing that I wasn't staying up, had curled up on the floor downstairs to wait for us.\n\nI had been a bit preoccupied the night before and so between the fireworks Mikey had made go off in me and the darkness of the room I had not yet had the opportunity to see Mikey properly, something I had every intention of remedying (and more) before we got out of bed this morning. I found myself holding my breath as I pulled the covers back, careful not to wake her just yet, and released it in an appreciative sigh as her bare chest came into view.\n\nHer breasts were gentle swells, their naturally tan color only fractionally lighter than the skin around them, topped with small brown nipples which, for now, were barely protruding from the slightly lighter areola. I remembered the feel of them rubbing on my bare chest the night before, and knew that when aroused they would harden and stand out proudly. I let my eyes drift down over her smooth stomach, then pulled the sheet further down revealing first her hips and then her gloriously bare sex.\n\nWhen Mikey had rolled to her back after I slipped out of bed, she had pulled one leg up slightly providing a gap in her thighs that allowed me a tantalizing view of her lips. Trailing my fingers past her stomach and over the smooth skin of her mound, stopping just above her pelvis, I wondered at how smooth her skin felt, observing that she must wax since I couldn't feel any trace of stubble. As my fingers brushed her stomach her legs spread a bit further in response and a silvery gleam caught my eye from between her lips as I realized she had pierced her clitoral hood. I had never understood how someone could bear to have that done before, but seeing it on Mikey unexpectedly sent a searing heat deep into my loins and I felt myself getting wet with arousal.\n\nLifting my eyes back up her body, I was startled to find her looking back at me, her eyes smoldering with that same emerald fire that had so captivated me, and seeing that I had noticed her watching me the side of her lip twitched up in her trademark impish smile, \"Like what you see, Lexie?\"\n\nNot having the words to express everything I was feeling, I just nodded as I lowered my mouth to hers. As our lips touched, I felt her hand slide up my back to cradle my neck, her fingers lightly stroking my skin, and her tongue slipped across mine, inviting me to join her in a passionate dance. As much as I wanted to give in to her fire, I was on a mission. Last night had been about me, this morning would be about her.\n\nNipping gently at Mikey's lip, and earning a low growl from her in response, I kissed each of her eyes, then her forehead, before sliding to flick my tongue across her earlobe and whisper softly in her ear, \"It's my turn today.\" The low moan that elicited from Mikey made me shiver in response as I trailed my lips over her jaw and down her neck, nipping lightly at her skin as I did. As my lips crested her breast I could see the bud of her nipple already waking to my touch. I slowly circled her breast, kissing my way around and up first one, then the other, while carefully avoiding her nipples.\n\nAs I finished with her second breast and started to move away, I felt Mikey's fingers tighten in my hair as she growled down at me, \"Damnit Lexie, if you keep teasi... Ah!\" This last as I finally closed my lips around her right nipple, suckling lovingly as I flicked the tip of my tongue over the sensitive bud, my right hand sliding up from her left thigh to caress her other breast and finished by gently pinching and tugging on the stiffening nub. \"Oh yes, oh Lexie, that feels so good!\"\n\nWhen it felt like her right nipple was fully aroused, I moved my mouth to her left and repeated my ministrations there as my left hand replaced my lips on the other. I slid my right hand, now displaced from her breast, up to caress her cheek as I looked up at her. I was still amazed that the intensity of fire in her eyes didn't scorch me, they looked fit to burn through steel, but when she looked at me all I felt was warmth, love, and need.\n\nPressing my lips tightly around her now firm nipple, I slowly pulled my head back, her breast being pulled up slightly before her bud slowly began to slip from between my lips, finally releasing with an audible pop before I lowered my head again to kiss her sternum and resumed my southward voyage across her stomach. As I reached her navel, I paused again to dip the tip of my tongue inside and flicked it up against her, drawing a light gasp followed by a heavier, frustrated groan as she realized I had stopped again.\n\nI didn't linger too long, though I did enjoy the opportunity to kiss and lick all around her taut stomach, before cresting her mound and down along her inner thigh. With a satisfied moan she spread her legs wider, giving me full access to the valley between her thighs, and I inhaled the scent of her arousal deeply. On the surface were notes of lavender from her preferred soap, but beneath that was her... just her, and that was what I focused on. I briefly considered teasing her further as she had done to me the night before, but realized I was far too eager to taste her to tease her any longer.\n\nI slid my hands up the inside of Mikey's thighs, gently caressing her skin, until the tips of my fingers just barely touched her labia, then leaning forward I exhaled softly against her lips making her hips jump in response. Finally, the moment I had been looking forward to since she took me the night before arrived; I extended my tongue and touched the tip just below her opening and slowly dragged it up, parting her lips and catching her arousal, slightly sweet with just a hint of musk, between her folds before circling her clit, careful not to stimulate that bundle of nerves too much just yet.\n\nI was rewarded with a moan as Mikey's fingers again tightened in my hair, and dropped my head to repeat the movement. As I took my second swipe with my tongue, I let my finger tips lightly brush the outside of Mikey's lips and pulled them open, exposing her pink core to my hungry eyes as I again brushed just past her clit without touching it. \"Mmm more, please... need more,\" she moaned above me, making my lips twitch in a smile.\n\nPulling back ever so slightly, I looked up at her and ran my tongue over my lips pointedly before commenting, \"Why Mikey, are you actually begging?\"\n\nGroaning at the loss of sensation as I pulled away from her, Mikey growled back, \"I'll do whatever you want if you just keep doing what you were,\" she promised, but added with a flash in her eyes, \"but if you stop, I will find some way to make you regret it.\"\n\nChuckling at her obvious need, I winked back at her, \"Promises promises...,\" I replied, before giving in to my own need to devour her and lowered my lips to hers. I had always had a long tongue, and now I was going to show Mikey just how well I knew how to use it as I thrust the tip against her opening, slowly pressing a full inch and half of it into her before pulling it back and thrusting again. She gasped as she realized just what I was doing, followed by a sexy chant of moans accompanying each thrust of my tongue, \"Oh! Oh! Oh! Oh my! How are, oh! You, oh! Doing that, ahh!\"\n\nI felt her clamping down on my tongue as I kept thrusting into her, and knowing she must be getting close, slid my hands up to rest on her mound so that I could let my thumbs drop to either side of her clitoris and gently massage the sides of the hood, pinching it between them. Her groans turned into squeals of pleasure at this added stimulus, and with a final cry her hips thrust up towards me as a gush of her delicious cream filled my mouth.\n\nMikaela - Friday, December 26th, 2014\n\nMy chest was heaving as I slowly began to float down from my orgasm and looked down to meet Lexie's eyes staring back at me. Storm clouds filled them, flickers of lightning dancing through them, as she offered a self-satisfied smile, \"May I assume you enjoyed that?\"\n\nDespite how sexy she looked lying between my thighs, her face covered with my juices, I suddenly found myself chuckling at the question, but managed to recover enough of my wit to quip, \"Hmm, I'm not sure I can accurately judge that just yet, you may need to do that a few hundred more times for me to be certain.\" Looking past her beaming smile, I noticed for the first time the large wet spot on the sheet below her, \"Oh wow... was that... I mean, obviously it was, but I've never...\"\n\nIt was Lexie's turn to laugh as I rambled, raising herself up my body to cut me off with a deep kiss before pulling back to answer she replied, \"I'll just have to take that as a compliment, then.\"\n\nI was about to quip back when my stomach gurgled loudly, throwing Lexie into a fit of giggles and burning my cheeks, \"As much as I'd love to spend all day in bed with you, I think we should get something to eat,\" Lexie raised an eyebrow at me and smirked at my turn of phrase, \"... some FOOD, for breakfast. I find myself suddenly famished.\"\n\nLexie laughed again and, able to think relatively clearly for the first time this morning I reflected at how rare that sound had been to date. As the joyous sound filled my ears I silently promised myself to give her as many opportunities as possible to laugh in the future. Looking at herself in the mirror, Lexie noticed the gleam on her face from where I had squirted her \"I'll get cleaned up and join you downstairs,\" with a glance at the clock, she added, \"the coffee should be just about ready, I set it to brew when I let Max out.\"\n\nPulling on a long t-shirt, I looked back at her smiling, \"Mmm, great sex and coffee? Better be careful, Lexie, or I might never let you leave,\" I winked at her as her chuckle followed me out of the bedroom and down the stairs.\n\nAs I entered the kitchen I saw that the coffee was just about done, so I set about making breakfast for us. On a whim I decided to show off a bit and make up a couple omelettes, so I rifled through the fridge and pulled out brie cheese, prosciutto, mushrooms, and eggs. For good measure I took out some bacon, I didn't know about Lexie's breakfast preferences yet but if she didn't want any then it would be more for me. I finished by taking out the hazelnut creamer I had bought for her before closing the fridge and getting started on breakfast.\n\nI had just finished chopping up the mushrooms, prosciutto, and brie for the omelette and was getting ready to cook when I heard the telltale scrape of a chair moving behind me letting me know Lexie had joined me, \"Bacon, sweetie?\"\n\nFrom behind me, she replied \"That would be great. What else are you making, it smells wonderful?\"\n\n\"I'm heating up some prosciutto with mushrooms and brie for an omelette, a side of bacon obviously, and your coffee should be...\" a quick glance to confirm, \"yep, ready to go if you wouldn't mind pouring us a couple mugs?\"\n\n\"Mmm, sounds delicious, do you take any sugar in yours?\" I heard the chair scrape again as she stood and felt her standing behind me. Even though I couldn't see her, and she wasn't touching me, my body just knew she was there and was responding to her proximity.\n\n\"One cube, raw sugar please. It's in the pantry behind you. I forgot to take it ouuuut,\" the last was half moan half yelp as her fingers slid under the hem of my shirt to squeeze my bare ass and dip between my thighs, \"Oh! Lexie, as much as I love your touch, over a hot stove while I'm making omelettes really is not the best time.\"\n\nHer throaty chuckle so near my ear sent a thrill down my spine, \"I know, just think of it as a promise for later today.\" With that I felt her move back and busy herself with making up our coffees, placing mine next to me before resuming her seat.\n\nSatisfied with how the prosciutto, mushrooms, and brie had warmed I mixed in the egg, taking care to cook it evenly, and lowered the heat on the bacon which was just about ready. Taking a sip of my coffee, I spared a quick glance towards Lexie who appeared to be lost in thought. The storm in her eyes had receded for now, and as I found myself looking into the warm pools of sapphire that I could so easily drown in. Although she had come a long way in the last couple months, still there was a hint of the shadows that had clung to her for so long around the outer edge of her eyes. Turning back to the stove, I knew in my heart that I would happily be by her side every step of the way as she worked to banish them forever... no matter how long that journey might be.\n\nDishing up the omelette and bacon onto two plates, I turned to place them on the stretch of counter that separated Lexie and me and, grabbing my coffee, moved around to sit down next to her. This seemed to startle Lexie out of whatever thoughts had been on her mind and she looked at me with a warm, if slightly uncertain, smile, \"Sorry Mikey, I guess I got lost in thought.\"\n\n\"You never need to apologize for that sweety... well, as long as you don't do that in bed anyways, I'm not sure my ego could handle it,\" I flashed her a grin to let her know I was teasing and felt a thrill pulse through me as I heard her chuckle in response. Just knowing that I could lighten her mood meant more to me than I could express, \"Do you want to talk about it?\"\n\nShe was quiet for a moment, pushing the omelette around her plate as she bit her lip worriedly. I lightly brushed her knee and, when she looked back up at me, continued, \"Is it about us?\"\n\nHer expression shifted instantly, though not how I would of expected. Instead of looking worried or upset she tilted her head and I could almost see the wheels turning in her head as she gave my question, which I had thought to be fairly straightforward, serious thought. Finally she gave a little nod as though satisfied with her conclusion and nodded to me, \"In a way, yes...\" I felt my heart clench at those words, suddenly concerned that she might be having regrets about what had happened. I must not have disguised it very well because she quickly turned and grabbed my hands in hers, holding them tightly, \"Oh sweety, no, I didn't mean that. It's just...\" she took a deep breath and looked down at my hands clasped in hers, \"I just mean that, well, it is about us now, right?\" As if to make sure I fully understood, though I had to strain to hear as her voice dropped to a soft whisper, \"It's not just me anymore...\"\n\nInstantly my heart melted as I realized that she wasn't worried about what was developing between us, but rather about how to adjust to this. \"For as long as you'll have me, yes I will be there for you.\"\n\n\"I forgot how comforting that was, having someone there... I shut everyone out over the last year, except Marc, and I didn't have much choice with him since he is my boss.\"\n\nPlacing a soft kiss on her forehead, I stood from my seat to wrap my arms around her and hold her close, \"Well, you have me now. That's a start,\" then sliding back onto my stool and pulling my plate in front of me I continued with, \"Now... I didn't just slave over a hot stove for you for nothing, so eat up.\"\n\nLexie allowed herself a soft chuckle as she mimicked me in taking her plate and began to eat. Smiling to myself at the low moan of pleasure as she savored her omelette. I reminded myself that as far as Lexie had come over the last few weeks, she still had a lot of healing to do, and I silently promised to be there with her through it all.\n\nAlexis - Friday, December 26th, 2014\n\nWhile my first bite had been a bit distracted, the smooth creaminess of the brie with a hint of the salt in the prosciutto coupled with the egg and fresh mushrooms quickly focused my attention on the food in front of me. Mikey definitely knew her way around the kitchen, and before I realized it I was scraping the last bits of the omelette from my plate. Feeling my cheeks flush a bit in embarrassment at how quickly I devoured my food, I took a sip of my coffee and turned back to Mikey who, only halfway through her own plate, smiled back at me as I asked, \"So, did you have any plans for us for the next few days, or was your original intent to seduce me and have your way with me all weekend?\"\n\nI was rewarded by Mikey's eyes going wide as she sputtered and started coughing, I had finally managed to surprise her, but she regained her composure quickly enough and replied, \"Believe me sweety, not for lack of wanting to, I had no intention of seducing you this week, I didn't think you would be ready for that. I picked up some movies,\" I thought I managed to keep a straight face, but Mikey had learned to read me pretty well by now and I must have given something away as she giggled and continued, \"Don't worry, not Christmas movies, just movies I enjoy and wanted to share with you. I know it was a big step doing Christmas at all this year.\"\n\nSmiling at her amusement i shook my head as I replied, \"It's not just that, I've never been a big fan of the whole 'season' of Christmas. I'm not saying I was a Grinch, at least I don't believe I was, I enjoyed the day and spending time with loved ones... but there's only so many Christmas songs and movies and they get played to death every year.\"",
        "Nodding as she swallowed a bite of omelette Mikey replied, \"Ok, I can see that. I mean, I personally love it, but I get it.\"\n\nTaking a sip of my coffee I reflected on the conversation I had overheard between Mikey and her mother the day before, and realized that as important as it had been not to embarrass her at the time, I didn't want to keep any secrets from her. \"As far as the rest, I know you didn't intend anything when you invited me for the week... and I have a confession to make.\"\n\nLooking concerned at the turn of conversation, Mikey set down her fork and turned her full attention to me, \"Is something wrong?\"\n\nI shook my head and grasped both her hands in mine, \"No, completely the opposite... I didn't want to embarrass you, but even more than that I don't want to keep anything from you... so you need to know that I overheard you with your mother yesterday.\"\n\nTilting her head and looking a bit confused, she inquired \"What do you mean?\"\n\n\"When I was coming back from the washroom, your mother was talking with you about what she assumed was between us... and I heard you... how hard it was for you to not be more than just friends,\" as Mikey looked about to interject I continued forcefully keeping her from interrupting me, \"More importantly... I realized in that moment that I didn't want for us to be just friends either. You were already so much more than that, and I just needed to let myself be with you. I'm not saying it will always be easy, but you know that already. This is what I want though and I just want you to know that as well.\"\n\nLooking Mikey in the eyes as I finished, I saw tears running down her face, but the smile she wore removed any possible doubts I may have had as to how she felt. Pushing her plate away she practically pulled me off my stool as she wrapped her arms around me and captured my all-too-willing lips in a kiss that managed to be both incredibly tender and passionate and hungry all at once. Eventually breaking the kiss she pulled back slightly, while keeping her arms around me, and rested her forehead against mine, \"I know you went through a lot, more than anyone should have to, and I know that you are just now starting to let yourself work through that. I don't expect every day to be easy, I just hope that each day will be a bit easier than the one before it, and I want to be there with you through every step to help in any way I can.\"\n\n\"I can't tell you how much just having you there for me means sweety...\" brushing my lips to her forehead, I gently pulled away from her as I continued, \"I'm going to go hop in the shower, why don't you finish up your breakfast and if you're quick about it you can join me?\"\n\nHer eyes lit up with mischief, and her lips pulled up in her trademark grin, \"You know, I think I'll keep the rest for later, I'm not that hungry anymore...\".\n\nShaking my head and giggling at her irrepressible nature, I started towards the stairs and called back over my shoulder, \"At least put it in the fridge!\"\n\nThe rest of the weekend passed by more or less the same way, Mikey and I traded off on the cooking, and shared the clean up, we'd watch movies, go on walks with Max, and at nights before going to sleep and in the morning after waking up we made love. All the while I couldn't remember the last time I had been so happy.\n\nAlexis - Monday, December 29th, 2014\n\nWhere before I had always looked forward to the return to work that would spare me from being alone with my thoughts, this time as Monday had approached I felt a peculiar sense of unease and I couldn't quite figure out the cause.\n\nGlancing at the time as I brought Max in from his romp in the yard, I called up the stairs, \"Better hurry up, we need to stop at my condo to drop Max off before we go to work.\"\n\nMikey must have picked up on whatever was bothering me, and in her typical way had figured out why even before I had. As she came downstairs, I noticed she had an extra bag with her and in that moment my unease faded to confusion and a small glimmer of hope. Keeping her face straight and her tone professional, she teased \"Sorry it took me so long Lexie, I wanted to put a bag together in case my new girlfriend invited me to stay over tonight. With how late we will probably finish tonight, I was hoping she'd take pity on me and spare me the long drive home.\"\n\nLaughing at her, I smiled as I realized that the unease had been the doubts about going home to my empty condo alone. Although we had only been 'together', officially at least, a few short days, Mikey had become such a big part of my life over the last few weeks that the thought of being apart from her again so soon had been weighing on me. Realizing she was waiting for a response, and catching a glimmer of doubt in her eyes as I stood there, I answered, \"Of course Mikey, I'd love to have you over. Max has grown rather attached to you the last couple days after all, and I'm sure he would miss you terribly otherwise.\"\n\n\"Only Max?\" she replied with her eyebrow arched and a grin playing across her lips.\n\n\"Well, I suppose I might miss you a little bit,\" I teased.\n\n\"Hmph, we'll see just how little I can make you miss me when we get back to your place tonight.\"\n\n\"Mmm, promises promises...\" This time I looked her straight in the eyes and felt my heart skip a beat at the raw desire I saw burning there, \"Umm... we should uh... get going.\"\n\nMikey laughed, knowing she'd scored that last point without having to say more, and led the way to my car, with me locking up behind and Max bounding along in the snow between us.\n\nThe drive into town was largely uneventful, we discussed our plan for the day and wondered between us how busy it might be. This time of year, between the holidays, was always a bit hit or miss. Some years it would be dead, with most of our clients focusing on being with their families, other years it seemed like they all felt compelled to call at once. We stopped briefly to drop Max off at the condo, and I let Gary, my neighbour, know that Max was back so he could check in on him during the day.\n\nI had learned through our limited interactions that Gary had retired a couple years prior and loved dogs, but didn't have the energy to care for one full time. He could have gotten a small dog, obviously, but when I'd raised that suggestion in the past he'd just snorted and laughed that he loved 'real dogs', not 'those oversized rats old people always get'. Being able to watch Max during the day was, as he put it, 'the best of both worlds': getting to enjoy having a 'real dog' around without all the fuss of veterinary and grooming appointments. Mikey dropped her bag off at the same time, and from there we headed on to the office.\n\nOnce at the office, before heading upstairs, we stopped at the small coffee shop by our building where Mikey surprised me by ordering three coffees. Handing one to me as we left the shop, I wondered about the extra but was more absorbed in mentally reviewing my plan for the day again to be as prepared as possible. I was so absorbed in thought I nearly ran into her as she stopped by Jonathan's desk at admin and handed him the spare coffee with a bright smile, \"Good morning Jon, how were your holidays? Not too stressful I hope?\"\n\nSmiling and closing his eyes as he took a liberal sip of his coffee, he returned \"Ah Mikey, I really needed this, thanks. Christmas went as well as can be expected, only half the usual drama, but the rest of the weekend was quite nice. How about yourself, you're looking to be in particularly good spirits this morning!\"\n\n\"Better than I could have ever hoped for,\" she replied, then nudged me and whispered loudly enough to make sure Jonathan overheard, \"Say good morning to the nice man, Alexis.\"\n\nBlushing, I offered Jonathan a smile, \"Good morning Jonathan, sorry I was lost in thought. I didn't mean to be rude.\"\n\nFor his part, it seemed like he had nearly choked on his coffee at Mikey's comment and had tears forming in his eyes as he sputtered out, \"Nothing to worry about Alexis, I hope you had a good weekend.\"\n\nHer trademark grin flashing mischievously, Mikey added \"She needs some work, but she's not a complete lost cause. Do be a dear and don't let her by without saying hello to you in the future?\"\n\nI attempted to glare at her, but the warmth and love that radiated from her eyes despite the impish look on her face took the sting out of her rebuke and I just nodded, \"She's right, I suppose. I do hope I didn't offend?\"\n\n\"Well...\" with a look at Mikey which prompted a small nod from her, he continued, \"I won't try to say you've always been the warmest person in the office, but you have always been professional and never outright rude, so no hard feelings. I did notice you've changed a bit these past weeks though, and I do appreciate you having Mikey grab a coffee for me whenever she runs out to get some for the two of you, it's really kind of you.\"\n\nWith that last my eyes flicked to Mikey who didn't appear the least bit apologetic for her ruse, \"Yes, well, it was my pleasure.\" Not being comfortable with small talk, I turned to more practical concerns, \"Is there anything planned for this week I should be aware of?\"\n\n\"Not particularly, though if you could make yourself a bit scarce Wednesday, I'd appreciate it. The annual business strategy meeting is at 11:00 and I told the seniors that you had a prior obligation with a couple of your larger clients who wanted to touch base with you for their year-end.\"\n\nI was caught off guard by this and lamely replied, \"I thought those meetings were mandatory?\"\n\nAt my obvious surprise Jonathan looked up at me then looked at Mikey, \"Yes, well, mandatory really is just a word they throw around for the most part, at the end of the day it all comes down to the money and... well, let's face it, your clients represent alot of money, and Mikey mentioned you would appreciate not having to go to these... how did she put it, 'cheerleader camps'?\"\n\nMikey grinned at that and simply commented, \"Yep, that's what I said\"\n\n\"Umm, well thank you Jonathan. I appreciate it. If I'm going to be scarce on Wednesday I better get to work though, enjoy your coffee.\"\n\n\"Thank you again, Alexis\"\n\nMikaela - Monday, December 29th, 2014\n\nClosing the office door behind us, I caught the look Lexie gave me and grinned, \"You're welcome.\"\n\nShaking her head, but not quite managing to hide a smile, she asked \"Care to explain? Also, anyone else I've been buying coffee for that I should know about?\"\n\nSettling in at my desk, I turned toward her \"Well, I was going to hold off a bit longer before starting you on the advanced courses of office politics...\"\n\n\"Mikey...\"\n\n\"Look, Lexie, when it comes to your clients you are incredible, and it's not about the money. I've seen you working with them, and you truly care about their financial success. They see it too, and that's why they trust you. When it comes to your colleagues though, you have some rather significant blind spots. It's not just Marc and the partners who can influence your day to day environment, the actual organization is handled by people like Jonathan. It helps that he happens to be a great guy, so spending a few minutes every now and then to build a connection there is no hardship, and the end result is that he lets me know which meetings you actually need to go to and when to arrange for convenient conflicts to get you out of them so you can focus on your clients. Think about it, how many meetings have you actually had to attend this month compared to last?\"\n\nLexie looked stunned for a moment as she digested what I'd just said, \"I just figured with the holidays...\"\n\nI chuckled and shook my head, \"Sweety, they actually scheduled more meetings than usual because they figured everyone's clients would be too busy with the holidays to speak with us, and they wanted to make sure everyone stayed busy.\"\n\nSitting down at her desk, she paused for a moment before asking, \"What type of coffee does he drink again?\"\n\n\"Light roast, skim milk, no sugar.\" I watched as Lexie did her little ritual of silently repeating the information to herself three times to help herself remember, then turned to my computer, \"So what did you want to start with, the energy reports?\"\n\nTurning to her own station and shifting easily into her work mode, Lexie replied, \"Yeah, I've been going over some of the recent oil forecasts, and I'm worried that some of our open buy orders need to be re-evaluated. With how badly the market has done the last few months, I'm happy we dumped most of our holdings last summer, but if we're only seeing the start of something bigger we need to make sure not to be getting back in at the wrong time. Let's also reach out to our Asian market analysts to get their numbers too, a significant part of global consumption has been tied with China's growth the last few years and we need to know what's happening there to get a clear picture.\"\n\nThe rest of the day was spent mostly digging through market research, and gradually an image was forming to show that the initial forecasts on energy might even be overly optimistic. Our Asian equity team was reporting that they were projecting up to a 50% drop in growth projections in China for 2015, and with how big a consumer they were on the oil market that could prove disastrous to the energy sector.\n\nAfter a quick lunch, eaten at our desks while doing more reading, Lexie asked me to start going through our client lists and prioritizing a contact schedule for any of her clients who had open buy orders on oil. Meanwhile, as was her habit whenever she sensed a major disruption, she had already scheduled a conference call with the head of our Asian markets to discuss his projections in more detail and determine just how valid she felt his concerns to be. Fortunately he was working from our London offices this month instead of Hong Kong which meant she only had to deal with a five hour difference instead of the usual twelve, and he was willing to stay a bit late to accommodate her this afternoon.\n\nI ruefully reflected that as much as Jonathan had made up the cover about several urgent meetings with large clients for Wednesday, he might just turn out to be right after all. By 5:00 it was clear we weren't anywhere near done, but we needed a proper break if we were going to be at all productive. Lexie had just wrapped up her call and as clear as it was that she wasn't about to call it a day, I could tell she needed a break too.\n\nAs I grabbed our coats, Lexie looked at me and shook her head, \"If you need to head out,...\"\n\nI cut her off, \"Not at all, but you're no good to anyone, least of all your clients, if you don't take care of yourself too. Let's nip out for dinner and we can come back right after. I know we've got a lot left to do.\"\n\nI smiled at the mixed emotions playing across her features, they were subtle but I'd learned to read her tells, and finally she relented, \"Alright, but right back after?\"\n\n\"Yes ma'am, I still need to work on secondary priorities for next week so that I can focus on your follow up items later this week.\"\n\nLexie smiled gratefully as she took her coat, commenting \"I don't know what I'd do without you, Mikey.\"\n\n\"In more ways than one, I hope?\" I quipped back, delighted at eliciting a blush from her before turning more serious, \"In all likelihood you probably would have been possessed of some ridiculous notion that you could manage this all by yourself and killed yourself trying?\"\n\nLexie's responding laugh drew a couple surprised looks, most people around the office still saw her as being cold and distant, and she had never given them any reason to think otherwise. I smiled privately as I saw a few people appearing to be reconsidering their impressions as they saw her laughing and smiling warmly on her way past. I knew Lexie didn't think it was particularly important, but it bothered me that people around the office saw her in such a negative light and I was hoping to help improve that image a bit.\n\nI had started my private campaign to rebrand Lexie's image with Jonathan because regardless whether people realized it, office administration wielded the real power in the day to day planning of the office. The senior management team, as much as they were nominally in charge, were far more focused on the business performance and delegated the routine items to their assistants. It also helped that I already had a good relationship with him; not wanting to trade on my family name I had built up my own connections early and it was Jonathan who tipped me off when Lexie was going to get promoted and become eligible to have an Associate work with her. If I knew anything about office gossip, and unfortunately I knew more than I cared for, Lexie's apparent thaw would be the hot topic at the watercooler tomorrow. Smiling to myself, I considered that it would only humanize her to the rest of the office, which was ultimately what I wanted for her.\n\nWe went to one of our local favourites for dinner, a small hole in the wall sushi restaurant that was easy to miss if you didn't know what to look for. Despite its nondescript appearance, the food was phenomenal and reasonably priced. As we ate, I discussed my proposed prioritization strategy with Lexie, \"So as you know when the price on oil started dropping we were initially chalking it up to the mild weather driving down consumption. After going over the energy forecast and looking at outlooks for China's development... I think the last few months are just the start. In the last five months the spot price on crude oil has gone from $105 to just over $60, a lot of our clients were seeing a $60 spot as a great point to jump in on the market: We need to kill those orders fast. I'd guess that we'll be looking at $50 being the new standard for oil for a while, but we may even drop below that before the end of next month.\" I paused to take a sip of wine before continuing, \"I was thinking after that it would be good to look for clients exposed to secondary risks by being invested in areas that could take a related dive: Canadian markets have a strong relationship with oil, and any companies who do a lot of their business with OPEC could be affected as well. I've already sent in a request for analysis on past market corrections to see if we can spot key sectors or companies that might be affected, but if you have any specific insight it would help.\"\n\nLexie shook her head, but the smile she gave me let me know there was no disapproval in the gesture, \"I swear you've thought of everything, as usual. When we get back, I need a list of all our open buy orders on oil, and which of those clients have given us discretionary trading. If we're looking at risks of a 20% drop over the next four to six weeks, we need to get those taken care of right away. Have you ever considered that your talents may be wasted as an Associate, Mikey? You could easily be managing your own portfolio.\"\n\n\"Maybe one day, for now I'm happy with what I'm doing. If there's nothing else I should be able to have a preliminary list for us to start contacting first thing tomorrow so we can start booking your appointments.\"\n\nHaving confirmed our strategy, and not being able to do anything more until we got back to the office, I changed the topic to a different type of strategy, \"So I figure it's pretty much a given that we are going to be working quite late the next couple days, right?\"\n\nLexie paused with a piece of sushi held delicately between her chopsticks and considered my question, \"Well, I suppose I had assumed, but I really have no right to impose that heavily if you...\"\n\nShaking my head firmly, I interjected \"You're not imposing at all, but I may need to, impose that is... I'm not sure how late my train runs, I know we talked about me spending the night tonight, but...\"",
        "Smiling, it was her turn to interrupt, \"You're more than welcome to stay over any night you want, or if you need I could always drive you home.\" She didn't quite hide the look that showed she was hoping I'd opt to stay over.\n\nRepressing a grin at how cute she looked waiting for my answer, I tilted my head a bit as if seriously considering before responding, \"Well, I suppose that could work, me staying over that is, on one condition anyways...\"\n\n\"What condition?\" I had to fight to stifle a giggle at the look of confusion in her eyes.\n\n\"My parents are hosting a New Year's Eve party on Wednesday, and I need to go. I don't need to be there before 10:00, so it won't interfere with work, but I need a date. Do you know anyone available? Preferably a sexy blonde Portfolio Manager with the type of eyes that someone could happily drown in?\"\n\nLexie's responding laugh was loud enough to draw a couple looks, and she blushed as she quickly lowered her head, \"I can't say that I do, but if you'll accept me as a poor substitute I'd be honored to go as your date?\"\n\nThe slight lift in tone at the end of her response was uncharacteristically uncertain of her, making it sound like a question rather than the playful response I think she had intended it to come across as. Reaching across the table to take her hands in mine, I locked eyes with her and, lowering my tone to emphasize just how serious I was, replied \"Lexie, no-one in their right mind would ever consider you as being a poor substitute.\"\n\nHer blush deepened, but the smile I caught was bright as she finished the last of her sushi. I quickly followed suit and with an unspoken agreement we settled up the bill and headed back to work.\n\nReturning to task, I noticed I had an initial response to the analyst report waiting for me providing guidelines on energy sensitive sectors and countries that would let me start work on the secondary follow-ups. I buried myself in accounts, spreadsheets, and numbers for the next couple hours before being reasonably satisfied with the plan I had put together, and glancing at the clock realized it was nearly 9:00.\n\nStretching, I found Lexie staring out the window, though with how dark it was I doubt she could actually see much. Thinking to catch her unawares, I quietly slipped out of my chair and snuck up behind her, but just as I was about to wrap my arms around her she leaned back into me and rested her head against my shoulder, \"I think we should call it a night here if we're going to be of any use at all tomorrow,\" she said.\n\n\"How did you...?\"\n\nLexie laughed in my arms, \"Window, can't see a thing outside, but with the light on inside it's basically a huge mirror.\"\n\nGrinning sheepishly, I glanced at the window and realized she was right, we were clearly reflected in the glass. \"Well, I think I've put together a solid list for early contact, and I even got the preliminary analysis I asked for earlier to put some things together for next week. Altogether, I think I can keep you pretty busy.\"\n\n\"How would you feel about handling some of the follow ups?\"\n\nShocked, I just stared at Lexie's reflection. She didn't let anyone manage anything more than basic maintenance for her clients, she even made sure they had her personal cell phone so they could reach her on vacation if something really important came up.\n\nSeeing my look, and interpreting it accurately, she continued \"You've proven your judgement is sound, you're fully qualified, and if anything comes up that you actually do need help with, I'll be right here with you. I was thinking it would be good for you to be more involved though, and good practice for the future.\"\n\n\"Thank you Lexie, I know how much trust you're putting in me...\"\n\n\"You've earned every bit of it, don't you ever think otherwise,\" smiling warmly at me, she continued, \"You know me well enough by now to know that I wouldn't ask you if I didn't have complete faith in you professionally, all personal feelings aside.\"\n\n\"You're right, of course, I'm just so used to working twice as hard to get half the recognition because of who my father is. Even trying to keep it quiet, you know how word gets around, and there's always someone saying I only got this or that privilege because of him\"\n\n\"Well, between us, I doubt too many of them saw your current assignment as a privilege... and I don't give a damn who your father is OR how good you are in bed, so you can rest assured if I give you an opportunity it's because you earned it fair and square.\"\n\nLaughing, and feeling my cheeks warm as a blush surely covered half my face, I turned back to the main concern, \"Ok, but we'll need to plan where to recommend reallocating the assets we sell before we start, do you need me to do anything for that?\"\n\n\"Who sent you the preliminary analysis?\"\n\nI closed my eyes for a moment as I thought, then replied \"Had to be Tom.\"\n\n\"Good, he's always been good at anticipating what I would need to save both of us some work. Before we clock out, can you check and see if he included an inverse relationship analysis detailing which sectors performed particularly well during previous energy corrections?\"\n\nWalking back to my desk I opened up Tom's email again to read what he'd written, I'd gone straight to the attachment earlier, and answered, \"He only sent the initial analysis but promised a final draft and an inverse correlation analysis no later than 10:00 tomorrow.\"\n\n\"Alright, well we won't be able to do much more until we get that, so let's plan to start tomorrow at ten and we'll review the report together. After that we can plan our recommendations, and we should be able to start calling clients after lunch.\" Grabbing her coat as I finished shutting down my computer, she continued, \"Ready to go home?\"\n\nMy heart skipped as I registered Lexie's question: not her place, home. I knew I must be grinning like a fool as I answered, \"Yeah, I don't know about you but I could do with a glass of wine.\" I barely remembered to do one last check to make sure everything was secured. That one word seemed so innocent, home, and yet hearing her say it...\n\n\"Mmm sounds like a plan.\"\n\nAs we left the office, I felt Lexie take my hand, bringing a smile to my face. Her condo was only a short drive from work, and before long we were lounging in the living room sipping on a chilled Italian Moscato. Max, after an initial fuss at our arrival, was curled up between us on the couch sucking up the attention as we each pet him with our free hands.\n\nLooking around, not having had a chance to do so this morning, I noticed that the decor told Lexie's story rather well to a keen observer. It was too perfectly matched, and flowed too smoothly from one section to the next, to have been Lexie's doing. While there were accents on tables and shelves, even those looked to have been selected with an eye to fitting with a larger theme. Overall, the entire space spoke to having been professionally done by an interior decorator. More telling, then, was what wasn't present.\n\nThere were no pictures, no personal touches, to make this a home. It was just a place for Lexie to sleep and eat, somewhere she could go when she wasn't at work. My heart constricted, Lexie had run away from her home, and the memories that dwelled there, and made sure not to bring any of those memories with her.\n\nLooking over at Lexie, I saw she had her head down towards Max as she scratched his ears. Feeling my shift, her eyes lifted to meet mine and my heart swelled as I saw the warmth of her smile. She had been through a lot, but she was getting better and was able to let herself be happy with me. Reaching over she brushed a strand of hair back from my forehead and then took my glass, now empty, and stood to set both on the kitchen counter, \"I'm beat, are you ready for bed Mikey or were you staying up a while?\"\n\nStifling a yawn, I shook my head, \"I could do with a good night's sleep too, we'll need it for tomorrow.\" Following her to the bedroom, I saw the professional decor continued to flow through here with one exception. On one of the side table was a picture frame, but it was face down. Without really thinking about it, I found myself drawn to this one personal touch and, moving to the bed, lifted the frame. As I turned it over, I saw a picture of a beautiful redheaded woman, a light spattering of freckles across her nose and cheeks, and dark green eyes crinkled with laughter mirrored in her smile.\n\nFrom behind me I heard Lexie's strangled gasp, and I turned back to find her looking worriedly at me. Glancing back at the photo still in my hands I understood the significance immediately, \"Is this Sam?\"\n\nShe nodded, silent for a bit before adding, \"It was the last picture I took before... when I packed everything else up I couldn't seem to let go of that one.\" Her eyes dropped to the ground and she hesitantly added, \"I guess I should get rid of it now though...\"\n\nCarefully setting the picture back, sitting upright this time, I crossed to Lexie and lifted her chin with my finger so that her eyes met mine, \"Why do you say that?\"\n\n\"Well, we're together now, and...\"\n\nSeeing where she was going, I prodded her to continue, \"And...?\"\n\nLexie continued \"I just... I keep thinking about Sam, about what she would have thought of you... I think she would have liked you. I just... you deserve for me to leave her in the past, and I don't know if...\"\n\nBrushing her cheek gently, I gave her the only answer I could: \"No.\"\n\nLooking confused, Lexie tilted her head which also had the effect of resting her cheek against my palm, \"No?\"\n\n\"No, your feelings for me, or anyone for that matter, should never require you to forget what you lost, and if that was what I expected then I wouldn't deserve you. Sam, your past with her, that is a part of you and always will be,\" I paused considering my words carefully before continuing, \"Do you have feelings for me?\"\n\n\"Of course!\"\n\n\"And do you still love Sam?\"\n\nI felt the weight of Lexie's chin press into my hand as she tried to look down again, but I kept my eyes on hers, seeing a hint of tears form as she answered, \"Yes... I...\"\n\nCutting her off before she could say more, I continued with what was, to me, the most important part she needed to realize, \"Do you feel, in your heart, that loving Sam takes away anything at all from how you feel about me?\"\n\nI smiled as her face transformed from the worried expression she had been giving me into one of confusion, and then as her eyes lit back up with realization, \"No... it doesn't, does it?\"\n\n\"No sweetie, it doesn't at all.\" Brushing my lips to hers and pulling her into my arms, I held her close for a moment before asking, \"Ready for bed now?\"\n\n\"Yea-ahhhhh,\" her reply was interrupted by a yawn and she blushed slightly, \"umm, I mean yeah, I'm exhausted.\"\n\nSlipping into bed, she pressed her back against my chest as I wrapped my arm around her and kissed the back of her head, \"Good night sweety\"\n\n\"G' night...\" she muttered back sleepily, already drifting off.\n\nAlexis - Tuesday, December 30th, 2014\n\nI woke up feeling Mikey's warmth pressed to my back exactly how we'd fallen asleep. Blinking sleepily, I opened my eyes to Sam's face smiling at me from the side table. My mind flashed back to the day before, when we'd stopped in to drop off Max in the morning I had turned the picture down to hide it from Mikey, knowing she would be staying over, but she had seen the frame and looked at it... and she wasn't upset. She understood that Sam would always have a place in my heart, and moreover had helped me to realize that loving Sam didn't mean I loved her any less.\n\nI smiled as I relaxed back into Mikey's embrace, I didn't know how she managed to do it but bit by bit she was gradually banishing the darkness that had clung to me for so long, and she made the parts that still lingered so much easier to bear. I didn't know what I had done to deserve her, but I silently thanked whomever may be listening for sending her to me.\n\nI felt Mikey stir behind me, then her lips press against the back of my head followed by a low, \"Sleep well sweety?\"\n\n\"Like a baby, a woman could get used to falling asleep in your arms.\"\n\n\"I certainly hope so,\" she chuckled, \"What time is it?\"\n\nGlancing at the clock, it was a bit later than I would have liked, but since we wouldn't be able to really get started before 10:00 regardless, it wasn't too bad. \"About half past eight, we should just have time for a proper breakfast if we hurry up getting ready.\"\n\nNibbling at my neck, she responded mischievously, \"And if we don't hurry?\"\n\n\"Mmmm, if we don't hurry, we may never leave the bedroom, and as much as I wish otherwise, that's simply not an option today.\"\n\nSighing dramatically, she returned, \"I know, but you owe me one.\"\n\nI laughed as I turned and brushed my lips to hers, \"Deal. Think we can behave if we share the shower?\"\n\nHer eyes smoldering, she replied \"As much as I'd love to lie to you, I don't think that would be conducive to us leaving on time. How about I use the guest bathroom for this morning and I can make that one up to you next time?\"\n\nSmiling back at her, I answered \"I'll hold you to that.\"\n\nBy this point Max had heard us waking up and came in to demand that we say good morning to him as well. The next hour passed by in a flurry of getting ready for work, Mikey took Max out for a short walk while I let Gary know we were leaving, and then with a parting scratch to Max's ears, we headed out to work.\n\nMaking our usual stop for coffee, I turned to Mikey and confirmed, \"Light roast, skim milk, no sugar, right?\"\n\nBeaming a smile back at me, \"Yep, but if you're going to start remembering Jonathan's order you better remember mine too or you might hurt my feelings.\"\n\n\"Yeah, because light roast, black with one sugar, is so hard to remember?\"\n\nIgnoring my sarcasm, she just quipped \"Good girl, but remember: raw sugar or none, I try to avoid processed sugar\" and pulled out her phone to check for updates from work.\n\nShaking my head at her I ordered our coffees, and picking up the drink holder with our cups and I asked, \"Anything I need to know?\"\n\n\"Tom sent along the inverse analysis report as promised, and added an additional report from the technology team with a note that he had heard them discussing their outlook and thought you'd be interested even if there wasn't necessarily a correlation with energy. Wow, he really does go the extra mile for you, doesn't he. Little bit of a crush?\"\n\nI laughed and replied, \"Nope, more like because of his position as an analyst he's not allowed to make his own trade decisions, and I manage his portfolio with full discretionary trading. So the more I know...\"\n\nMikey joined me in laughing, \"The better he does financially.\"\n\n\"I picked up several of our analysts' portfolios as a junior portfolio manager, most managers drop them as soon as they reach their client limit since we don't make much commission off them being staff. I realized early on that the analysts whose portfolios I was managing were a lot faster to respond to inquiries, and a lot more detailed in their information so over time I picked up a few more. I think I'm managing investments for about fifteen of our analysts in different markets, and have a steady flow of good information because of it.\"\n\nMikey was looking at me mouth agape, before accusing, \"You mynx! And here I thought you didn't bother with office politics.\"\n\nI threw her a sly grin, \"Never said that, just that I had no time for the bloody useless gossip. If someone can be useful to me and my clients, I have no problem making sure they are taken care of in turn.\"\n\nWe were still giggling as we got to Jonathan's desk, and the look he offered me set me off even more. Composing myself, I removed Jonathan's coffee and handed it over to him, \"Skim milk, no sugar. Just how you like it, right?\"\n\nHis eyes flicking to Mikey and back to me, he nodded, \"Yes, thank you Alexis.\"\n\n\"Oh, and Jonathan? Thank you very much for being so accommodating with my schedule. If there's anything you need, let Mikey or me know ok?\"\n\n\"Ok, uh I mean, I will, and it's my pleasure Alexis, I know how busy you are.\"\n\nDeciding to take pity on the poor guy, I looked over at Mikey and commented \"I was thinking we could get started in about ten minutes? I have a couple things to do first.\"\n\nSmiling, she responded, \"Alright, I'll be along in a minute.\"\n\nAs I walked away, I heard Jonathan interrogate Mikey, \"Ok, seriously, who was that and what did you do with Alexis's body? Do you need an alibi?\"\n\nMikey's laughter followed me down the hall as I entered our office, closing the door behind me. Sitting at my desk, I sipped my coffee while waiting for the computer to power on, I was already thinking strategy. I wanted Mikey to get involved with some of the client interactions, and was mentally sorting which clients would be best for her to start with.\n\nAs my system finished its startup sequence, I heard the door open and smiled at Mikey, \"So, did Jonathan provide you with a suitable alibi?\"\n\nLaughing, she answered \"I've assured him that you are the real Alexis Hart, and that you are in full mental health. It took some convincing, but he believed me eventually.\" Hanging up her coat and settling in at her own desk, she continued \"I skimmed through the report Tom forwarded, seems like there are promising signs that the recent surge we've seen in U.S. markets is just the tip of the iceberg, they're projecting a strong bull market for at least one to two years, and our technology analysts are convinced that tech will lead the charge.\"\n\nI nodded thoughtfully as I opened the report, confirming the synopsis Mikey had provided, and commented \"This fits with what I've been expecting based on past reports, the U.S. still hasn't fully recovered from the crash in 2008 and they have been overdue for a significant recovery. It couldn't be better timed either; the U.S is always an easy sell to clients, and it will provide a familiar safe port for the storm about to hit the energy sector.\"\n\nThe next couple hours were spent digging through the various reports Tom forwarded, identifying investments that provided strong potential returns coupled with familiar names our clients would recognize, and splitting up the contacts between Mikey and me. She balked once or twice when I would recommend a larger client to her, but each time I reminded her that the complexity was less about the size of the portfolio and more about the client's personality. Assuring her that these clients were relatively knowledgeable and easy to speak with, she would defer to me and accept the responsibility. By lunch, we had identified twenty clients we would contact today, with an additional thirty for tomorrow, dividing the list roughly equally between us.\n\nAbout a quarter of my client portfolio had signed discretionary trading agreements allowing me to manage their funds without needing to consult them, so for them I drafted a written communication to send out along with the trade confirmations that would be received advising them of the changes. Between those agreements and the calls we'd make over the next two days roughly half my clients would be accounted for, the remainder would have to wait until after the New Year.\n\nThe rest of the day was fairly uneventful, we managed to reach all the clients we wanted and once done Mikey helped me fulfill the discretionary trading instructions for the accounts we had authority on. Even with a break for dinner, we were able to finish earlier than we had predicted and by 8:00 we were already back at the condo. Pouring a couple glasses of my favorite Moscato, we relaxed comfortably on the couch, Max sprawled at our feet.\n\nResting my head on Mikey's shoulder, a small part of me remarked how easily she had filled the role of the protector in our relationship. With Sam, I had always been the strong one, it had been instinctual, but somehow with Mikey those same instincts told me I didn't need to be... that I could just relax and let her take care of me. \"Thank you for helping out today, I know it took you out of your comfort zone.\"",
        "Brushing her lips to the top of my head, I felt as much as heard her reply, \"Well, I'll admit I was a bit concerned at first, especially with some of your clients... you have some very influential people on your client list, but it was incredible just how much they trusted your guidance and got onboard with your recommendations.\"\n\nI shook my head gently where it rested against her, \"Our recommendations, sweety. I may have had final approval, but you were fantastic in your own right. Even if it weren't for everything else you've become, I would be grateful for just how much easier you make the day to day work.\" I took a sip of my wine before setting the glass aside, then turned and nipped gently at her neck, my voice dropping as I continued, \"Not that I'm any less grateful for everything you do for me outside of work.\"\n\nI felt the low rumble in her chest as she purred in response to my nip, and putting her own glass aside she deftly turned around, moving me with her so that before I realized it I was stretched out on the couch with her above me, and stared deep into my eyes, \"Careful with those teeth love, could be consequences for biting.\"\n\nSlowly, deliberately, I lifted my head and brought my mouth to hers, catching her lower lip between my teeth and pulling it back a bit as I nipped, \"What if I want those consequences?\"\n\nIf her eyes had been burning with her desire before, I didn't have words to adequately express what I saw there now. Clasping my face in her hands, she dropped her lips to mine and devoured me with her kiss as she slipped her knee between my legs, pressing her thigh up firmly against my core. I felt her heat pour into and through me as I opened myself to her, surrendering to her embrace as she sucked on my tongue.\n\nHer hands slipped down to my shoulders, then to my waist, seeking the hem of my shirt and I whimpered my need into her mouth as she tugged it free from my slacks, deftly undoing the buttons without breaking her feasting of my lips, and pushing it down my shoulders just far enough to expose me while using it to pin my arms behind me. Next I felt her palms graze over my stomach, her fingers pushing my bra up over my chest, not bothering with the clasp as she bared my breasts. Nipping at my tongue, she slid down biting gently at my jaw and throat, her teeth claiming me as they trailed down my neck and past my collar. I heard myself moan as she kissed the base of my throat, the top of my collar, and down over my bra to my exposed breasts.\n\nThough I was more than willing, there was no question that she was taking what she wanted as her teeth caught one nipple, her tongue lashing across it while she slid one hand over to squeeze my other breast, trapping its twin bud between her fingers and pinching it. My hips were bucking up, eager to press against her, but each time I found the contact I desperately craved she would shift her thigh to break it. The first time I thought it had been just a frustrating mistake, but quickly discovered with each ensuing shift that she was deliberately denying me.\n\nI tried to reach for her hips to hold her in place, and my arms came up short, trapped by my shirt. I growled my frustration and she gently bit my nipple trapped between her teeth, drawing a sharp gasp from me. Closing my eyes, I tilted my head back against the couch and focused on the feel of her. A tumult of feelings poured through me as Mikey had her way with my breasts, unable to participate as I wished, I felt exposed, vulnerable, helpless beneath her. Despite these feelings, I didn't feel any fear or nervousness, instead I felt her love, her need, and even in this moment where she essentially controlled me, still I felt her need to protect me. She somehow made my helplessness feel sexy rather than scary, and I gave in to the experience.\n\nI felt my hips jerk up as Mikey's hands slipped under my ass and lifted me, a pillow slid under my back to keep my hips up, and whether or not it was intentional it pressed my shirt down further trapping my arms even more. At this point, a tiny part of me that was somehow still capable of clear thought realized I couldn't move my arms at all even if I wanted to.\n\nRather than focus on that thought too much, the far louder voice of my desire told that thought to mind its own business and I groaned as I felt my slacks being unbuttoned, the grating sound of the zipper drawing my attention briefly, and then they were being pulled down my legs as Mikey's tongue laved my navel. Without taking off my panties, her lips drifted over the siky material covering my mound and again I felt her teeth claiming me in tiny nibbles. With each little bite I thrust up towards her, and with each thrust she pulled back maddeningly. I felt her hands gliding up my thighs as this dance of lips, teeth, and pelvis continued. Kiss, advance, nip, thrust up, retreat and kiss somewhere else. My world had narrowed down to focus entirely on us, if someone walked in right now I doubt I would have noticed, and then her fingers were upon me.\n\nI moaned as instead of exploring my sex as I'd hoped, she instead just took hold of the crotch of my panties, sliding her fingers into it and pressing their backs up against me. I savored even this light contact, and then as I felt her hand jerk I heard a ripping sound followed by her pulling away the torn material to expose me to her fully. Her teeth lightly grazed my swollen lips, riding my thrusts expertly without ever breaking contact or providing more than she was ready to give me. It seemed an eternity passed as she teased me with light nips, loving kisses, and the tiniest licks around my sex, and then suddenly my vision exploded in stars and I heard a scream of raw pleasure that must have been mine as she bit my clit, her tongue thrusting over it again and again, while simultaneously thrusting two fingers deep inside me. I shuddered through a massive orgasm, and as I slowly settled down Mikey slid up next to me, sucking her fingers clean, and caressed my cheek while looking lovingly into my eyes.\n\n\"That,\" I heard the croak in my voice, swallowed and tried again, \"That was incredible.\"\n\n\"I aim to please,\" she grinned and handed me my wine glass, \"How about after you catch your breath we continue this in the bedroom?\"\n\n\"Mmm, I hope by continue you mean it's my turn to have my way with you...\"\n\nHer smile was all the answer I needed as we quickly finished our wine. I had let my shirt fall to the couch, and removed my bra, as I sat up, so I was sitting topless and enjoying the effect it had on Mikey as I set my glass down, empty this time, and stood up while kicking off my slacks from around my ankles. \"You ripped my panties,\" I commented, as I removed them as well.\n\n\"They got in my way,\" she laughed, \"I didn't exactly hear you complaining at the time.\"\n\nPicking up my discarded clothes, I winked at her, \"No, I suppose not. Now, so there're no doubts, I am completely naked and heading to the bedroom. When you're done your wine, I'd very much like for you to join me.\"\n\nDowning the last bit of her wine in one swallow, she didn't hesitate to stand and practically chased me to the bedroom.\n\nMikey - Wednesday, December 31st, 2014\n\nI woke up the next morning a bit ahead of the alarm and enjoyed the feel of Lexie pressed against me. We had fallen asleep after making slow, passionate love for what felt like hours, and even though I knew we must have got to sleep quite late, I didn't think I had ever felt so well rested.\n\nLexie muttered in her sleep as I shifted, pressing herself back against my chest, and I chuckled softly as I wrapped my arm around her, holding her close. Reflecting on the night before, I thought, not for the first time, that she was able to elicit such a range of feelings from me. At time I felt protective, wanting to shield her from any hurt, at others sensual, enjoying each other for hours: Not just physically, but connecting on a far deeper level as we had before falling asleep. The first time last night had surprised me though, I'd never felt such a raw, unbridled desire and I had practically dominated her on the couch. When I'd come down off the initial high, I had worried that I might have frightened her... but she had apparently enjoyed it as much as I did, even if the rest of the night had been less aggressively sexual.\n\nThe alarm began to blare its morning wake-up, causing Lexie to grumble as she slowly roused herself and smacked the snooze button drawing another chuckle from me: Lexie was NOT a morning person. I slowly disentangled myself from her, bringing forth more grumbling, and kissed her ear, \"I'm going to make us some coffee, love. I have a feeling you'll need an extra mug today.\"\n\nA soft \"Mmmm\" was my only response as I got out of bed, throwing on a robe so I could let Max out while getting coffee started. Starting the coffee, I opened the door for Max, closing it behind him with a shiver, and watched him through the plate glass of the sliding door. He ran around for a bit, diving into the snow, before going to the corner he always did his business in and relieving himself. Letting him back in, I scratched his ears and he nosed my hand before running to his bowl and giving me an imploring look.\n\n\"You ready for your breakfast, boy?\" A quick bark was followed by him sitting and waiting expectantly. I looked in the fridge, finding his food, and set out a bowl for him as the coffee finished. Checking in on Lexie, I saw her turning off the alarm as she got out of bed and I slipped back to the kitchen to prepare her mug with the flavored creamer she liked.\n\nShe joined me in the kitchen, wrapped in a robe of her own, and looking incredibly sexy with her hair tousled and the top of her robe not quite fully closed offering enticing glimpses of her pale skin beneath. She mumbled something that might have been 'good morning' and went straight for the coffee I'd prepared for her. Taking a long sip, she sighed in appreciation and a bit of light entered her eyes as she started waking up in earnest. Max had apparently decided that was good enough for him as he ran up and nosed her free hand, demanding some attention and she obliged him by scratching his ears and chin.\n\n\"I was thinking after my parent's tonight, it would be easier to go back to the house rather than the condo. If you wanted to stay over, Max is more than welcome to come along?\"\n\nSmiling over her mug, Lexie nodded, \"Sounds good to me, we're off the rest of the week after today again so spending some time out of the city will be nice.\" The look in her eyes let me know she had more to say and was looking for the words, so I waited patiently until she added, \"So, I had a bit of a surprise set up while we were at work yesterday. Actually Jonathan gave me the idea when he asked us to make ourselves scarce and all...\"\n\n\"Lexie, you know I'd love nothing more than to skip out on work and spend the day with you, but this isn't the best week, we actually are swamped...\"\n\nI trailed off confused as she laughed, \"No, no we're working today, that's for sure... but I thought we could work from here instead of going to the office. It will be easier to prepare for tonight, and the weekend, as well.\"\n\n\"Ok, I can use my laptop...\"\n\nShe shook her head and just said, \"Come.\" As she walked towards her home office, I followed confused until she opened the door. My first thought was that things had been moved, then I realized that a second desk had been added complete with a computer and dual monitors like we had at the office. I looked from the second desk to Lexie confused, and saw her grinning like the cat that got the canary, \"I thought it might be good for you to have a proper office space here so you aren't stuck on your laptop every time you need to get work done.\"\n\n\"Lexie... this is...\" I was speechless, I wanted to protest that it was too much, but knew she'd just counter that this was just a practical setup and not a gift. Whether I used the setup or not, it was a business convenience for her and wouldn't change anything, so instead I settled on \"Thank you, but... when did you even have time to arrange this?\"\n\nMimicking my teasing over remembering coffee orders the day before, she chirped \"Good girl. As for the office, I have a local guy who handles my IT needs. When I work from home I need to make sure I have a reliable platform, and he's done well working with a network of portfolio managers across town, so he's familiar with our specific needs. He even has a local distributor for hardware so can often get parts same day. After Jonathan gave us the heads up on Monday to work from home today, I put in the call and he set this up while we were at work yesterday.\" That said, she gave me a quick kiss and headed back to the bedroom before I could respond.\n\nShaking my head, I decided to make up some breakfast since we'd be working from home today, and went back to the kitchen getting out bacon, eggs, smoked ham, and swiss cheese. A couple omelettes with bacon sounded pretty good and wouldn't take long to cook up.\n\nI was just finishing up as Lexie joined me, dressed casually in jeans and a light shirt, and refilled her coffee, \"Smells delicious love, thank you for thinking of it.\"\n\nLexie's endearment startled me, she said it so casually and yet... \"Love? You love me?\"\n\n\"I don't know, haven't thought about it...\" a cheeky grin spread across her face... at my look of alarm, she landed a sloppy kiss on my lips, \"Of course, silly. What did you think?\" Her eyes turned a bit more serious as she continued, \"Before I met you, I was just surviving one day at a time, you've given me something to really live for, how could I not fall for you?\n\nI was so happy I was unable to fully process what had just happened, so I decided to serve up breakfast, plating the food and refilled my own coffee before setting everything on the table. Brushing a kiss to Lexie's cheek as I slipped past her with the plates, I commented \"Figured we had a bit of extra time since we didn't have to go in today, and I was hungry. You gave me quite a workout last night. Oh, and, I love you too.\"\n\nI had the pleasure of seeing a faint blush spread over her cheeks, though she didn't miss a beat throwing my retort from last night back at me, \"I didn't hear any complaints at the time.\"\n\nLaughing, I sat down opposite her and acknowledged the point, \"No, definitely no complaints.\"\n\nAfter breakfast Lexie cleaned up the dishes while I got dressed Following her lead, I dressed casually in jeans and a t-shirt before joining her in the office. \"Anything new, or are we going ahead with yesterday's plan?\"\n\nLooking up from her monitor, Lexie replied \"Nothing significant, Tom must have got the word out to some other Analysts that I was looking for updates; mostly some short comments that nothing special is expected over the next year, but a couple items that may be worth reviewing next quarter. So for today, we stick to plan.\"\n\nThe rest of the morning and afternoon was pretty much a repeat of the day before, we had lunch delivered so we could focus on finishing early and even though we had planned to finish a bit earlier than usual in consideration of our plans that night, it was with more than a bit of surprise that I realized we had finished everything we had planned and it was barely past four. We were definitely ahead of schedule for the day.\n\nAs I was about to comment, Lexie's phone rang and she answered, \"Alexis Hart speaking.\" She paused and then, \"Oh, hi Marc... I worked from home today, Mikey too... dammit, I meant Mikaela... none of your business Marc...\" Suddenly the color drained from her face and she choked out, \"Don't you dare.\"\n\nJumping up, I grabbed the phone from Lexie as she sat down, \"This is Mikaela, what's the problem Marc?\"\n\nHis voice was clear from the other end, \"If you and Alexis are in a relationship, I'm happy for you, I am, but I can't have you working together, it's generally frowned on to have people in a relationship working on the same team.\"\n\nCalmly, I took a deep breath and decided to play the card I'd avoided so far before answering him, \"If you feel the need to make a recommendation to that effect, I understand. With that said, I've reviewed the policies on workplace relations thoroughly and as long as there is no reporting relationship, the most you can enforce is having us sign some relationship agreement with HR. Unless, of course, you want to try and make this a bigger issue than it is?\"\n\n\"Dammit Mikaela, are you really going to do this to me? Do you have any idea the kind of crap I'm going to have to put up with, not least of which is claims of favoritism towards Alexis, given who your father is?\"\n\n\"Marc, I fought tooth and nail to be able to work alongside Alexis, and I got here on my own merit - nothing more. You know that, and if you think for a moment that I'm going to meekly accept being reassigned...\"\n\n\"Fine! I'll play dumb and pretend I don't know anything, but at least help me out by not being too obvious in the office?\"\n\nSmiling, I squeezed Lexie's shoulder, \"Thank you Marc, and I think we can manage not to be too blatant about things at work.\"\n\nWith a sigh, he continued \"Anyways, the reason I was originally calling, I've noticed a lot of activity in Alexis's accounts the last couple days, and wanted to know if I needed to be looped in on anything?\"\n\nClicking the mute on the phone, I turned to Lexie, \"He'll ignore us being together if we agree not to be too obvious in the office. He was calling because he noticed a lot of activity from you and wondered if you wanted to loop him in?\"\n\nReflecting for a moment, she responded \"Normally I'd brush him off by telling him I just have a hunch... but since he's willing to ignore us being together, I suppose I can share some of our information with him... not everything, but enough to point him the right way. Tell him to check his e-mail.\"\n\nRemoving the mute from the phone, I continued with Marc, \"She said she had a hunch...\"\n\n\"Of course she did.\"\n\n\"... That you should check your e-mail.\"\n\n\"Wait, what?\"\n\n\"She just forwarded you a preliminary analysis we asked for the other day, between that and the trade reports you get you should be able to have a productive meeting,\" Lexie barely smothered her laugh at that, \"with your other managers. We have to get back to work now, was there anything else you needed?\"\n\n\"No... well, yes... I'm not on speaker am I?\"\n\n\"No,\" I responded. Whatever he wanted to say he didn't want Lexie to hear, and I could always fill her in if she needed to know.\n\n\"Look, I know I'm usually stuck being the bad guy, it's part of being the boss, but... for what it's worth, I'm happy she has you. After... well, if she hasn't told you, it's not my place, but I didn't think she would ever let someone else in again. If you hurt her, though...\"\n\n\"Thank you Marc, let us know if you need anything else, okay? You can count on me.\"\n\nHanging up, I turned to Lexie who was shaking her head, \"Did you just threaten our boss?\"\n\nLaughing, I kissed her forehead, \"I wouldn't exactly say threaten... though I did remind him that I could make his life miserable. He did say that whatever workplace issues may arise, he's happy for us... and then he may have warned me of what cataclysmic date would await me if I ever hurt you,\" I added with a grin. \"He seems like a good friend, and really wants what's best for you. He was also surprised that you actually shared your prelims, a first for you?\"\n\nLexie relaxed noticeably at this reassurance, and even giggled at Marc's threat, \"Yeah, I've always argued that if another portfolio manager needed to know how I managed my clients, they were welcome to pay me to manage their portfolios for them.\"\n\nBursting out in a fresh bout of laughter, I shook my head, \"Wow Lexie, and I thought I was good at shutting people down. Are you okay?\"",
        "\"Yeah, I know you'll move on eventually, professionally I mean. You're too good to stay an Associate forever, but... I want to keep you around as long as I can, even if we weren't together, you work far too well with me for me to want to risk changing that over some stupid policy.\"\n\n\"Well, I'm not going anywhere love. Since we finished early, would you prefer to order in for dinner or go out?\"\n\nLooking at me as if I was crazy, she asked \"Go out for dinner, without a reservation, on New Year's Eve? And should we drive to this mythical restaurant, or were you just going to fly us there Superwoman?\"\n\n\"All this time and still you doubt my abilities. Just for that, we're going out.\"\n\n\"Don't say I didn't warn you...\"\n\nThe next couple hours were spent getting ready. We had decided on wearing our evening outfits for dinner, and we would pick up Max after dinner to drop him off at the house before going to my parent's place. Although I sent off a quick text to make sure arrangements would be made, I didn't let on to Lexie and pointedly did not make any phone calls. By the time we were ready to leave, I was fairly certain she expected we'd have to wind up eating in, but bless her she didn't object as I led the way.\n\nThere was a brief moment when I pulled up to one of the most popular steakhouses in town where she almost looked ready to question my choice, on a normal night the place would have wait times over an hour if you didn't have a reservation. Escorting her up to the entrance, I greeted the host \"Good evening Francis, is my father's table ready for us?\"\n\n\"Of course, Ms. Young. Will it be just the two of you this evening?\"\n\n\"Yes, thank you, my parents are hosting an engagement this evening that we'll be going to later, but I simply had to prove to my date that it was possible to go to a good restaurant on New Year's Eve without a reservation.\"\n\nFrancis laughed, and commented \"In deference to your date, I feel obliged to point out that if your father didn't have what amounted to a permanent reservation on his table, she would be right.\"\n\n\"Yes, well, I never claimed I was above cheating to win a bet.\"\n\nThis time it was Lexie who laughed, \"And may I ask how you knew to get the table ready? She made a point of not calling ahead.\"\n\n\"Oh, more cheating I suppose,\" he replied with a chuckle. \"She texted me an hour ago asking me to put her favorite Moscato on ice and saying she would need Mr. Young's table for tonight.\"\n\n\"Of course she did...\"\n\n\"Won the bet, that's all that counts,\" I grinned and Lexie smiled in response.\n\nAlexis - Wednesday, December 31st, 2014\n\nDinner was fabulous, the steak practically melted in your mouth and the grilled vegetables and garlic mashed potatoes I had paired it with were delightfully seasoned.\n\nIt was easy to forget that Mikey had most likely grown up with such indulgences being part of her routine. She certainly never put on airs, and yet when occasion called for it she knew just how to get exactly what she wanted. It was part of the mystery that was uniquely her that just when you thought you were getting the full picture she could surprise you with just how much you still had to learn. I smiled to myself thinking how happy I could be spending a lifetime learning all there was to know if need be.\n\nDespite how good the food was, I begged off on dessert, I didn't think I could finish it. Mikey insisted it would be a crime to leave without a slice of their cheesecake and brought me to a compromise of taking dessert to go.\n\nAfter dinner, we stopped back at the condo to pick up Max and our bags, then drove out of the city to the lakeside home. I still had not fully decided how I should refer to the house, she was living there of course, but she was technically renting it from me through a property management firm. In a way it was both hers and mine, but not ours. These, and other random thoughts, flitted through my mind along the drive and in what felt like no time at all Mikey was pulling my car into the driveway.\n\nMax was out of the car almost as soon as the door was open, and with a short playful romp around us as we grabbed our bags, he ran ahead of us to the door. After dropping off our things and setting out water for Max, we were back on the road towards Mikey's parents and their New Year's Eve party.\n\nMikey had told them we would be there no later than ten, but even with our dinner we had managed to finish early enough that it was just past eight when we got there. Helena answered the door, looking stunning in her dress, \"Mikey! Alexis! What a surprise, I thought you were going to be working late tonight?\"\n\n\"Well, I had thought we might have to, but your daughter is extremely talented and she actually managed to get me to finish early today. The firm is lucky to have her.\"\n\nHer eyes flicked down, making me suddenly aware that I was holding Mikey's hand, and she looked back up to Mikey, arching her eyebrow in a silent question, though the smile she wore made it clear she did not disapprove.\n\n\"Yes mum, you were right, happy?\"\n\n\"When you're happy, I'm happy.\" Stepping back from the door, she continued, \"But look at me, keeping you both out in the cold. Please, come in.\"\n\nWe stepped into the warmth of the foyer, shedding our winter apparel, and exchanged greetings with Helena. In the lounge area I saw a modest gathering already present, a few older couples looking to be of an age with Dan and Helena mixed with a larger amount of people that looked to be between mine and Mikey's age. While everyone was dressed nicely, the atmosphere felt a lot more warm and relaxed than I had expected.\n\n\"Everything ok hon?\" Mikey asked\n\n\"Hmm? Oh, yeah, I had just assumed this was going to be a more formal business type event.\"\n\n\"Ah! No, sorry, I should have clarified. Remember what I said about my mom's rules on work talk?\" I nodded, \"Well that goes double for work dinners and parties. Nothing at the house. Holidays especially, so sayeth mom, are about family.\"\n\nSounding far more confident than I suddenly felt, I replied, \"So... this is all your family?\"\n\n\"Well, mostly family,\" she hastily amended, \"some close friends too. Sweety, this doesn't need to be anything more than my having a friend to...\"\n\nI shook my head forcefully, \"No, no it's ok, just unexpected. Besides, what woman in her right mind wouldn't want the world, family and all, to know she was with you? Besides... if it's less formal, maybe I can steal a kiss at midnight after all,\" I winked at her with the last.\n\nHer laughter in response delighted me, and she slipped her arms around me, pulling me in close as she commented, \"Might not even have to wait for midnight.\"\n\nThe rest of the evening was a blur of names and faces, admittedly remembering names after meeting someone just once was not my strength and I was sure I would need Mikey to remind me of most of their names when I saw them again. Although the tone was mellow, there was a happiness of just being together and a soft chatter as stories were exchanged. Everyone welcomed me warmly, a nice change from the hostility Sam and I had always received from her family... this last thought was accompanied by a twinge of guilt. As much as I knew Sam would have wanted this for me, a part of me still felt like I was betraying her memory when I found any part of our relationship wanting.\n\nAfter initial introductions were made, I tried to sit back and observe as was my habit, but Mikey was having none of it and kept me engaged in conversations. At first it was awkward as they were mostly about people I didn't know, but before long I found myself laughing as her family started relating all kinds of embarrassing stories about Mikey growing up.\n\nIn what seemed like no time at all, the New Year's Eve announcers on the TV started the countdown to midnight, and as promised I wasn't shy about claiming my kiss from Mikey, holding her close afterwards, \"Happy New Year, love\"\n\n\"Happy New Year, Lexie, may this one be filled with so much more happiness than the last.\"\n\n\"As long as you are there, I know it will be.\"\n\n********* End Chapter 02 *********"
    ],
    "authorname": "Andaryll",
    "tags": [
        "colleague",
        "lesbian romance",
        "tragedy",
        "recovery",
        "romance",
        "novel"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/bring-me-to-life-ch-02"
}