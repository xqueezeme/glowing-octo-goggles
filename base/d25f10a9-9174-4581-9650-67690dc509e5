{
    "title": "Sting of the Scorpion Ch. 04",
    "pages": [
        "The chronological order of my stories is as follows:\n\nTodd & Melina series, Interludes 1-5, Sperm Wars series, Russian Roulette series, Case of the Murdered Lovers series, Case of the Murdered Chessplayer series, The Swap series, Interludes 6-10, The Murdered Football Player Series, Case of the Black Widow series, Teresa's Christmas Story, The Case of the Black Badge series, A Case of Revenge series, Teresa's Summer Race, The Trilogy series, Dark Side Of The Force series, Caught In The Act series, The Phyllis Files 1-2, Case of the Murdered Bride series, The Credit Card Caper series, The Phyllis Files 3, The Hot Wives Investment Club series, Seriously Inconvenienced series, Case of the Paper Trail series, Christmas Mystery Theater, The Porno Set Mystery series, The Medical Murder Mystery series, The Eightfold Fence series, The Phyllis Files 4, Pale Morning Light series, Silverfish series, Cold As Ice series, Secrets of Apple Grove series.\n\nSting of the Scorpion, Ch. 01-04.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 15 - Stinging Flea Bites \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redheaded reporterette at 7:00am, Wednesday May 13th. \"Channel Two News has learned that in their session last night, the Town & County Council has ordered a formal Board of Inquiry into the shooting death of Ricky Morris by Detective Leonard 'Sergeant' Sharples one week ago, on May 6th. The Police Union has already filed a grievance, stating that not calling this a 'good shoot' is harassment of Detective Sharples by Commander Donald Troy and Chief Harold Bennett. Channel Two News has also learned that the request to the Council for the formal investigation was not made by Chief Bennett nor Commander Troy, but by Town & County Sheriff Sheriff Daniel Allgood...\"\n\n\"Oh wow.\" Tanya said as both MCD and Vice Detectives watched in the MCD Room. \"Is he suspended?\"\n\n\"More like grounded and sent to his room.\" I said. \"Restricted duty, had to turn in his gun and will have to re-qualify even if he's cleared. Best I... uh, I mean the Sheriff... could get from the Council.\" Everyone grinned at my slip, and I would let them decide if it was an accidental slip... or not.\n\n\"Think it'll work?\" Tanya asked.\n\n\"No.\" I said. \"They'll probably just move him to MCD.\"\n\n\"Like hell!\" Tanya exclaimed, whirling upon me. \"Don't even joke about that!\"\n\n\"Wanna borrow a blue crowbar, Tanya?\" Cindy asked, also not amused.\n\n\"Yes, please!\" Tanya replied, her eyes boring into me. She wasn't grinning like she normally did, either.\n\n\"Okay, okay, just kidding.\" I said. \"But seriously, don't get your hopes up that we're going to get anything on Sharples. All we did was show the Council the inconsistencies in the Jennifer Morris/Ken Konnichi murders. Getting something on Sharples will be another matter... and it'll be up to the Inspector General and Internal Affairs.\"\n\n\"By the way,\" I said, to change the subject, \"here's a trivia question for you: The Batman had Robin. Green Arrow had Speedy. The Green Hornet had Kato, the Lone Ranger had Tonto, and so on. Only Superman had no sidekick. Now why was that?\"\n\n\"Oh, I know that one!\" said Joanne Cummings, beaming. \"Radio! When the comic book characters came out in the days before television, they were on radio shows. They had to have someone to talk to. But Superman could fly, so they'd have those 'whoosh!' special effects for him, and the 'Up, up and away!' lines.\"\n\n\"Okay, Detective Cummings is Wonder Woman, and she gets the gold star for today.\" I said, very impressed with Joanne's knowledge... and comic book fandom. She and Theo 'high fived'.\n\nBettina was not finished. \"In other news, BigAgraCorp has announced the purchase of several tracts of land south of Coltrane County to our south. BigAgraCorp says that the farms in the area known as the 'land between the rivers' will add many varieties of grains to the foodstuffs of the nation, and they intend to enhance production by raising genetically modified crops that will increase the tonnage of grains by at least 35%, they claim...\"\n\n\"That sucks.\" Detective Teddy Parker said. \"Big corporations are taking over all the farms. No family farms left. Family's can't afford to keep them if they try. Estate taxes wipe them out.\"\n\n\"And they're taking all the hunting lands away, too.\" said Joanne Cummings, her pretty face descending into a pout.\n\n\"My parents were raised on farms in Canada.\" Cindy said. \"My dad made his living selling farm equipment to people, everything from seed to tractors.\"\n\n\"Oh really?\" I said. \"I never heard that, from you or Molly.\"\n\n\"Yeah.\" Cindy said. \"Ward Harvester was his competition, though they didn't do much in Canada to hurt him, because Canadian farmers tend to buy local instead of the States below. So Commander,\" she said, patting me on the shoulders from behind, \"I'm sorry you were injured in that explosion at his warehouse, but I was not sorry at all that Ward got his warehouse wiped out.\"\n\n\"Next time, I hope you'll allow me to get out of the place before you blow it up.\" I said, to laughter in the room. \"Yeah, my grandmother, my father's mother... she grew up on a farm, too. She died when I was eight years old, but I remember her talking about it being a tough life, at least for her. I think she was sort of matched up with my grandfather, expected to get married, have babies. I was a kid then, but I can remember sensing that there was some sadness in her life.\"\n\n\"My ancestors worked farms, too.\" said Theo, who was black. \"My great-great grandfather was a freed slave, bought his wife out of slavery and bought some land in Tennessee and farmed it. My dad had to sell that land... like you said, Teddy, taxes were too much. But times definitely have changed... we're all slaves to BigAgraCorp and GMO crops now.\"\n\nThat started some chatter of a political nature upon which I did not care to wax eloquent, so I headed back to my office. A few moments later, Cindy and Teresa came in.\n\n\"So Canadian farm life didn't work out for you, eh Cindy?\" I said, teasing her.\n\n\"Nope.\" Cindy replied, then gave it right back. \"No more than Apple Grove life did for you.\" I grinned as Cindy continued \"And that's not the all of it... when I was in my early teens, I overheard my mother talking to a friend once, and she said she and my father were separated years before, when Molly was a toddler and I hadn't been born yet. Good thing they got back together, huh?\"\n\n\"No doubt.\" I said. \"What would the world be without Crowbar 2 kicking ass in these here parts?\"\n\n\"Hear, hear!\" Teresa agreed. Cindy blushed, though inwardly happy at the praise.\n\nTeresa then said \"You guys saw my home town. Farming was good compared to it. So, Commander... can I throw Sharples' things out of his desk yet?\"\n\n\"Not quite yet.\" I said. \"I might just have some other ideas about the Fat Boy, though.\" At that, I began letting my mind reminisce about what had happened the day before, which even Cindy did not yet know...\n\n* * * * * * * * * * * * * * * *\n\nAt about 10:00am on the previous (Tuesday) morning, my assistant Helena admitted two agents of the SBI to my office. They were Ted Orosco from Midtown and Jeff Reubens from Madison County.\n\nOrosco was short, beginning to become a bit 'pudgy' in areas, but the most striking feature was his hair: it was black, and he kept it combed closely to the sides. The best description I can give is that he resembled 'the Count who can count' on Sesame Street. \n\nJeff Reubens looked tall and lanky next to Orosco, but he was really of medium height, nowhere near me (I'm 6'4\" tall). His hair was stringy and reddish brown, and he had a beard that he would be well-advised to shave off.\n\n\"Thank you for seeing us, Commander.\" Orosco said. \"We've been meaning to come up to see you, and when I heard about this officer-involved shooting, I contacted Agent Reubens here. We realized the urgency of the situation.\"\n\n\"Okay,\" I said, \"so tell me what that situation is, so I can share your urgency.\" I could tell the agents didn't know whether I was kidding, as I was, or if I were being sardonic. They looked a bit nervous, and I realized that my reputation within the SBI might be more fearsome than I'd realized. That ordinarily would be a good thing, but in this case I sensed it would be good to work with these agents.\n\n\"And by the way,\" I said, \"let's drop the formalities and use first names. Call me Don, and I'll call you Ted and Jeff, and any other dirty names that come to mind.\" I smiled as I said it, and Orosco relaxed. But Reubens still looked tense. \"Go ahead, Jeff.\" I said. Reubens looked at Orosco, who was his senior officer, and Orosco nodded.\n\n\"Commander... er, Don,\" said Reubens, \"I've been working off-and-on on the case of someone I believe to be a very dirty cop, and possibly worse. I'm talking about Sergeant Sharples on your Force.\"\n\n\"He's not a Sergeant,\" I said, \"and we make a point to not give him the pleasure of calling him that. I'm not a bit surprised to hear you say that about him. So I gather he has a history.\"\n\n\"Oh, yes sir.\" Reubens said. \"Have you looked into his past?\"\n\n\"Actually,\" I said, \"I haven't had a chance to dig very deep. I read his file and his r\u00e9sum\u00e9 in it, and made some brief looks into his previous jobs. Nothing really big came up, but like I said, I didn't dig very deep.\"\n\nJeff Reubens said \"I can fill that in for you now. Not much of it is in the normal public files. Some of what I've gathered is through interviews and confidential discussions. And if you'll indulge me, I'll give the story in somewhat chronological order.\"\n\nReubens started his narrative: \"Leonard Sharples went to a Junior College and received an Associates Degree, which got him into a Police Academy in Louisiana. He had a job in Louisiana... Shreveport, I believe... but left that pretty quickly when got a job in Texas, in Midland. He was in better shape then, and rose from street patrolman to Detective pretty quickly. He was in Vice, and for two years everything went well for him. He made a few successful busts, was put in charge of a Narcotics unit, and led a couple more pretty big busts.\"\n\nReubens continued: \"So all was going pretty well, and it looked like Sharples had a promising career. There was some word that he got wind of a child trafficking ring, but as soon as he started getting some traction on it, he was suddenly fired. No one knows why, and there is absolutely nothing in his official record... which actually said he resigned, though he didn't. But he immediately found a job at a Police Department in the Dallas area.\"\n\n\"Did he know Angela Harlan?\" I asked. I'd meant it to be rhetorical, but Reubens looked surprised.\n\nHe then said \"He may have. Her name came up in my investigations. What happened was that Sharples was hired as a Vice cop, having had a good reputation from Midland. And again, he did well. Made some busts, put the Texas Rangers on the trail of a rather large drug ring.\" \n\n\"Then it came out that he was still looking into that child trafficking ring. And again he may have been making some progress with it.\" Reubens said. \"But then a police officer was found shot dead. He was a Vice Cop, younger than Sharples, and a real up-and-comer. He'd been working with Sharples, and Sharples asked to lead the investigation of the murder. His boss let him, as they were all in Vice. About 72 hours later, Sharples brings in a low life thug and a pistol in an evidence bag. Said he'd gotten a tip and moved in on the guy immediately. Ballistics showed the gun to have been the one that shot the other police officer.\"\n\nI nodded as Reubens continued: \"That thug said he'd had a deal to become a narc for Sharples over a shadowy child trafficking ring, and Sharples turned on him. There's no corroboration for that, but some threats came Sharples way, so he was moved to their Homicide Division. But without anything being too apparent, he changed. He began putting on weight, slowly and over time, and he never really showed any promise with the Homicide Division. In fact, some of the older officers I interviewed there that remember him actually didn't realize until they looked back over the course of time how subtly he changed.\"\n\nReubens looked at me and said \"And this is where Detective Harlan comes into the picture. She wasn't with Sharples' Police Department, but may have been working with his P.D.'s Internal Affairs... and she was looking into Sharples. Turns out that he was getting a reputation for developing confidential informants, then exposing them to gangs to get in on drug deals. While in Midland, Texas, Sharples didn't have any money. In Dallas, his bank account was growing. Not by a lot, not quickly, but more money that he probably should've had.\"\n\n\"I never heard a word of that from Harlan.\" I said. \"Surely she knew what he was about when they both were up here.\"\n\n\"It appears that they never found anything on Sharples, so Harlan went back to whatever she was doing and the I.A. investigation was dropped.\" said Reubens. \"So she may have thought it was a blind alley and didn't bother mentioning it to you. Or there could be more sinister reasons for her not saying anything. She did some pretty nasty things while she was up here.\"\n\n\"Don't remind me.\" I said.\n\nReubens continued: \"At any rate, I talked to a former Police Union guy from that area, whose son worked with me a few years ago. He, the father, told me in the strictest confidence, and I know you won't repeat this, that Sharples had come to learn about the investigation of him and had consulted with the Union about it.\"\n\n\"Sharples then went to Cape Girardeau, Missouri.\" said Reubens. \"And that's where things started to make a pattern. He was in their Criminal Investigations division and specialized in Narcotics. He made some spectacular busts, was awarded citations and a promotion. For over two years, everything seemed fine. And then some rumors came out that Sharples was exposing C.I.s. in exchange for getting cut in on drug deals. We then find out how he made his spectacular busts: he gets a cut, then turns on them and busts them right when the deal is going down. Drugs are impounded, money impounded... but never all of the money that was expected to be there.\"\n\n\"Ahhhhh.\" I said.\n\n\"Yes, sounds like that diamond bust you made.\" said Orosco. \"Go ahead Jeff, tell Don the rest of it.\"\n\nReubens did so: \"Again, threats on Sharples's life, and an I.A. investigation... and another familiar refrain: the local Police Union comes in to back Sharples up. He had some money in his account, but not nearly what they thought he would have, and they never found where he hid any narcotics gains he might have made. The Union insisted the investigation be made open, which means he could sue if they didn't find anything, or be dropped.\"\n\n\"They dropped it. And without making any open scandal, that Police Department had Sharples investigate homicides and burglaries, not letting him do any narcotics work. He saw the writing on the wall, and left. That led him to Jamestown, which you know is the County Seat of Madison County, of course.\" Madison County is where State Women's Prison was located... and the deeply corrupt Richard Langdon was the duly elected State Senator from that area.\n\nReubens said \"This is where I got on his trail. I was part of what was the forerunner of today's Narcotics Task Force. I was given a huge operation. We put fourteen months into penetrating a major drug operation. Richard Langdon was a big part of it, supplying the women in the State Women's Prison, and we were going to take him down as part of the sting. But just as we're about to make our final move... in comes Sharples. Busts a few lower level guys, and the rest of them dodge left and right and get away.\"\n\nReubens' face still bore the pain of the memories as he said \"The SBI was left with virtually nothing, and as the leader of the operation, I took the fall. It ruined my career with the SBI, and it led to the destruction of that Narcotics group and the subsequent organization of the SBI Narcotics Task Force... without me in it..\"\n\nI asked \"Was Sharples a part of your task force?\"\n\n\"No, but we had worked with the locals in Madison County, Southport, Midtown, and Eastphalia and Westphalia. No one but a few of us in the SBI knew the whole operation, but we needed the locals to get information on the movements in the respective jurisdictions. And I might add that this was a major event in the growing problems of trust between the SBI and local jurisdictions.\"\n\nReubens went on: \"So... since I had a lot of free time at my desk with the SBI, I started looking into how the operation failed. Sharples's name immediately came up. He was working in Midtown then, and the pattern started repeating again. First Vice, then some rumors, then their Major Crimes division. This time there was less scandal, and maybe he knew I was on his trail. Then he was hired by your Police Force, though I have no idea why.\"\n\n\"Did the name 'Robert Brownlee' ever come in association with Sharples?\" I asked.\n\n\"No.\" said Reubens. \"I don't recall that name at all.\"\n\n\"He's the Deputy Chief here, and hired Sharples.\" I said. \"Well, I do see the pattern here, guys. And it's repeating itself here: they're beginning to try to put Sharples in our Major Crimes Division. My question is: why are you coming to me with this? You probably know that I have been trying like hell to fire Sharples, and the Union is right there opposing me. We also are behind the power curve on actual evidence, and the Union is pathetic in their fawning protection of that slug.\"\n\n\"And you are not the first top-level Police Officer to say that.\" said Reubens.\n\n\"What we're here for, Don,\" said Orosco, \"is to ask for your help. We know you're at a different level than most police officers, and we're hoping you'll help us get Sharples. We'd really like to put him in prison, so that Reubens here and a whole lot of other officers that have been ruined him can know he's getting what will come to him in prison, where even Punk City will be no help... as you might know from that dog-killer Bryan Thatcher's case.\"\n\n\"Don't remind me of that, either.\" I said. \"Makes me want to go out and beat up dirty fat cops. Did you ever find anything to suggest Sharples committed murder?\"\n\n\"Don, we know what Angela Harlan turned out to be,\" said Orosco, \"but while she was in Texas she was one of the best Police Detectives they ever had... sort of like you are here in this County. She made some incredible busts before she turned bad. We suspect that she was not just helping I.A., but was investigating the death of that other cop, and that Sharples might have been the actual murderer.\"\n\n\"No.\" I said. \"Even sitting here at this desk, I'd be willing to bet that the perp was a C.I. working with Shaprles, then that perp shot the other cop because he was ordered and paid to do it by someone else. Sharples busts him, only to find that he, Sharples, became the suspect. And that is how the Protector of the child trafficking ring wanted it.\"\n\nBoth men were amazed. \"You might well be right.\" said Orosco, \"but what do you know that leads to the speculation?\"\n\n\"I commend your attention to the assassination of a certain tele-evangelist in this County a couple of years ago.\" I said. Both men nodded as understanding came to them.",
        "Reubens added \"That could be, but since that time there are several murders, mostly of drug-related criminals, that remain unsolved. And there could be cases like that Morris/Konnichi case you just had... which should remain open, if you ask me.\"\n\n\"Oh yes, I didn't close it.\" I said. \"Guys, I really appreciate you coming to me with this. I can't be called up as SBI Reserve for a case that is currently in my own jurisdiction, as Sharples is. Let me buy you lunch at a really good diner in Coltrane County, where we can talk about it some more...\"\n\nPart 16 - House Plans and Other Plans \n\nBack to the present, Wednesday, May 13th. I had gone over to the FBI offices to check in with Jack Muscone, but neither he nor anyone from his team was there. Not even Sandra Speer. That told me a lot. I went back to my office, and when I arrived my assistant Helena gave me a message.\n\n\"Don,\" she said, \"you got a phone call while you were gone, about 10 minutes ago. It was from J.P. Goldman of the J.P. Goldman Bank. He wants you to come see him.\"\n\n\"I'll give him a call right now.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nWith Cindy in tow, I drove to the J.P. Goldman Bank. We were both wearing the new \"blue\" uniform design: to my utter delight, the ugly yellow piping down the sides of the pants, denoting the Command Group, was gone! It was replaced with two thin light blue lines which matched the lighter blue of our uniform shirts, and was really two blue stripes with a dark blue piping stripe between them. Our jackets had thick light blue piping on the sleeve near the cuff. Lieutenants, Supervisors and Detectives now had one thicker line of solid light blue piping on the pants, and a thin light blue piping on the jacket sleeves. Sergeants had thick black piping on the pants, nothing on the jacket sleeves; and Patrolmen had one thin black line of piping on the pants and nothing on the jacket sleeves.\n\nAnd despite the increasingly warm weather, we both wore our Duty Dress jackets, and I put on a tie... one did not go to see Town & County Councilman and University Trustee J.P. Goldman without looking good and professional. And look good we did.\n\nWe were ushered into a small conference room, and within two minutes Mr. Goldman himself came into the room. \"Thank you for coming, Officers. And congratulations on your promotion, Captain Ross. Well deserved, well deserved.\"\n\n\"Thank you, sir.\" Cindy replied as Goldman had us take seats.\n\n\"I'll get right to this.\" said much older man. \"I know you spoke with Ms. Steele as part of your investigation of the Morris deaths, and she cleared it with me before beginning her internal investigation. What I want you to know is that I would never allow a subordinate to put herself on the line about anything when I am perfectly capable of doing so myself.\"\n\n\"Therefore,\" he said, handing me a file folder of information, \"I am personally going to give you the information you requested about Mr. Morris and his activities here at the bank. And you may ask me any questions that you like. I understand you probably think I'm too far above the mundane operations of the bank, but I do take a personal interest in the well-being of all of my employees as well as serving our customers.\"\n\nMr. Goldman was a bit different that many execs today, who couldn't care less about employees or day-to-day operations of the 'minions'. And this was something I tried to emulate... looking after my people without micro-managing them, and taking the shots instead of undermining a subordinate.\n\n\"I appreciate that, Mr. Goldman.\" I said. \"I'll just ask the open-ended questions of what you knew about Ricky Morris, his wife, and why you think this tragedy occurred.\"\n\n\"I'll give you this background first.\" said Goldman, who first drank some water. \"Ricky came in as an accountant, and was a bit stereotypical of them... introspective, dull, not dynamic at all. He had few friends. His work was good but he made absolutely no effort to rise within his department nor the Bank. He then began dating that Jennifer Madoff woman. Selena was really worried about that; she didn't like Jennifer at all. Selena has good instincts about such things.\"\n\nJust then there was a knock on the door and Selena herself looked in. \"Ah, come in Selena, come in.\" said Mr. Goldman. \"Officers, I asked Selena to come in and explain the information I gave you. Have a seat, Selena.\"\n\n\"Thank you, J.P.\" Selena said. \"Guys, we started Monday after I talked with you. Ricky accessed a lot of places to gather the information he needed for his spreadsheets and balancing the numbers. I asked my investigator to look into his activities before he met Jennifer, while they were dating, and after they were married.\"\n\n\"Mr. Goldman, I might need to hire Selena away from you, to be a Detective for my Police Force.\" I said with a grin.\n\n\"Don't you dare.\" said Goldman affably. \"Tell them what you found, Selena.\"\n\nSelena reported: \"Before they were married, Ricky mostly looked up aggregate numbers. He might access the Home Mortgage department, but only hit the data for the weekly or monthly numbers. Only twice did he actually look into individual accounts, and both of those had IRS issues which made him have to look at the tax and non-tax numbers.\" \n\nNothing surprising there: most (and it should be all) businesses have two sets of books: one for the IRS, one for daily operations. That's legal, too, but I digress...\n\nSelena went on: \"After he met Jennifer, we find more examples of Ricky accessing individual or business accounts. Not very often, but it began slowly increasing.\"\n\nI was looking at the data as Selena went on. \"Before they got married, Ricky almost never accessed records from his computer at home. We do have a secure application that would allow him to do that, and I do it all the time.\"\n\n\"And this is an example of Mr. Morris not applying himself to his work.\" said J.P. Goldman. \"He only did his work here, at the bank, and during regular business hours.\"\n\n\"I see.\" I said, aware of Goldman's criticism of employees not working extra hours for his bank... that was 'old school', too.\n\nSelena continued: \"As you can see in that report, after Ricky married Jennifer he began accessing individual and business records a lot more actively. And the names will very likely interest you.\"\n\n\"Oh, they most certainly do.\" I said. I showed Cindy the names: Donovan and Trish Donolan, Mr. Blair, BigPharmaCorp, Crown Chemicals, Ward Harvester, Thomas P. Cook's company, Thomas P. Cook himself, all seventeen Deacons (or Elders?) of the First Baptist Church, Pastor Westboro, some members of the Catholic Church, ditto that for the Methodist Church, Dynacorp, Anthony Warner, Dr. Sidney Wellman, Dr. Bonnie Karpathian, and more recently, Todd Burke, Jeanine Olivet Burke, Seth Warner, Karen Warner Harlan, Barry Oliver... and me, Your Iron Crowbar.\n\n\"Like a Who's Who of Iron Crowbar cases.\" Cindy whispered when she saw them. I nodded, feeling Goldman and Selena peering at us.\n\n\"You may keep that.\" said J.P. Goldman. \"Of course, you must keep it in the strictest confidence, as evidence from your new Confidential Informant, that being myself... and don't put it in the same place as those Jack Burke tapes that KSTD is suing over.\"\n\n\"Don't worry, I won't.\" I said. \"And I am very grateful to you both for this information.\" I wondered if either of them realized the true import and depth of what they'd given me.\n\n* * * * * * * * * * * * * * * *\n\n\"It's nearly lunchtime. Want to see the new Cabin before we go eat?\" I asked Cindy as we got into the SUV.\n\n\"Sure!\" she said enthusiastically. As we drove to the northeast part of the Town and along the northern border of the University, we discussed the information we'd been given.\n\n\"So Ricky Morris became a spy within the Bank?\" Cindy speculated.\n\n\"I'd venture the guess that it was Jennifer herself accessing the information from their home.\" I said. \"Jennifer was a nasty slut; it's really unlikely that she'd marry a dud like Ricky just out of love, excuse my cynicism. I'm betting that bitch got his password and accessed the data herself, and Ricky likely never even knew.\"\n\n\"Very true, and I agree that she only married him for access to his job and the files.\" Cindy said.\n\n\"What else do you think about the Morris/Konnichi murders?\" I asked.\n\n\"I'm not a Troy, and I don't even play one on TV.\" said Cindy as we climbed the side of the hill, curving south and overlooking the University. \"But when I get that Iron Crowbar cynicism, I begin to wonder if these people weren't targeted, as opposed to a random act of domestic violence.\"\n\n\"Yep, that Iron Crowbar cynicism is working well for you.\" I said. I clicked the remote that opened the gate across the driveway to the Cabin.\n\n\"The only thing I didn't understand was why they got the records of the Pastor and Deacons of the First Baptist Church and the other churches.\" Cindy said.\n\n\"Maybe for blackmail purposes.\" I said. \"You know how we as Police go through financial records to find anomalies that might help solve a crime? Well, the bad guys can do that to, and for illicit purposes.\"\n\n\"True.\" Cindy said as we parked. \"But I noticed that none of those guys, especially Pastor Westboro, had a lot of money in their accounts. He's on your 'Eightfold Fence' list, but if he's got money, it's not in his J.P. Goldman Bank account.\"\n\n\"True enough.\" I said. \"By the way, Cindy, and this is a direct order: do not share this information with anyone. Not with the Data Team, not with 'The Abacus', not with Teresa or any Detectives.\" 'The Abacus' was what we called Detective Julie Newton behind her back, because she was so good with accounting books and financial records. \"I'm going to put it into encrypted evidence, under my personal seal.\"\n\n\"Oh, okay.\" Cindy said. She then looked at the front of the new Cabin. \"Oh, wow. This is awesome.\" We got out of the SUV.\n\nThe old Cabin had its ground floor partially sunken in from this driveway level. The New Cabin was built up, the first floor at ground level, and a half basement below on the other (deck) side. The A-Frame of the three story house came down to just eight feet off the ground, and on each side was a one-car garage, utilizing that cramped space, one garage on the far (south) end, the other where the old garage had been, on the right (north) side. The door was near the garage on the right, and two large windows were part of the wall looking onto the driveway and at the side of the mountain that went up to the top.\n\nI unlocked and opened the front door, which was on the east side. The Cabin was empty, having not yet been furnished. Indeed, the electrical wiring was being finished up and some of the drywall was not yet painted.\n\n\"Oh this is fantastic!\" Cindy said as she came inside, into the front room. \"This is so much better than the old Cabin's floor plan.\"\n\n\"Yes, that's the silver lining of the fire.\" I said. \"I got to design this much more efficiently.\"\n\n\"You don't have to answer this,\" Cindy said, \"but even with the insurance and your wife's money, how did you do this on a cop's salary?\" \n\nI just grinned as I said \"I had a benefactor. Someone guaranteed a two million dollar loan. I only spent $1.2 million, and most of that was for the bulletproof windows. Every window in the house is made by ArmorGlassCorp.\"\n\n\"Nice guy, whoever did that.\" Cindy said. \"Henry Wargrave? feeling guilty about burning your old house down?\"\n\n\"Nooooo,\" I intoned, \"he didn't commit that crime, but he sure wasn't going to help my wife in any way. Just between you and me, it was P. Harvey Eckhart. And I won't be totally shocked if in the near future I am handed the deed to the property free and clear, as a gift from him.\"\n\n\"Ouch.\" Cindy said. \"Don, I know you're a man of integrity, but watch out about that, so that it doesn't look like some kind of perk. The last thing we need is for KSTD to be distorting things and calling you out for taking bribes.\"\n\n\"Yes, you're right.\" I said with a smile. \"But I think by July 4th I'll be able to show why it'll be okay.\" Seeing her look, I said \"No, don't ask. And yes, I'm keeping this secret from you for now. In time, my friend... in time. Now let me show you the house.\"\n\nThe front door opened to a front room. Along the side wall on the right was the staircase to the upstairs bedrooms, a coat closet and storage space built in beneath the stairs. Looking west, towards the back of the house, the front room was open to the Great Room in back, and the dominant feature were the two huge windows that formed the back wall, and gave that spectacular view of the Town and beyond, as well as the back deck. The line of demarcation between the rooms was a fireplace. It was in the center of the house, with gas logs, and opened to both sides so that it served both rooms.\n\n\"So this is your office to the left here?\" Cindy asked. Looking to the front, there was only one window in the front room. To the left (south) of the front room was indeed my office, which could be entered from the other garage, as well. The other front window dominated that wall. Behind the office (towards the back of the house) was a half-bath, which could be accessed from the Great Room, also.\n\n\"And here's the secret I need to show you and no one else, except my wife of course.\" I said. I pulled back the carpet to reveal the floor. Pulling on what looked like an indention near the wall, the floor was shown to be a trap door on a hinge. I pulled the floor up and back, revealing narrow steps, and a five foot door that went under the front wall of the house and into the mountainside.\n\n\"Wine cellar.\" I said. \"Old Man Bonniker had it built in. This trap door can be locked from underneath, and that door bolted from inside, to make that a safe room.\"\n\n\"Or a prison.\" Cindy said ominously. \"I'd hate to be trapped down there.\"\n\n\"Me, too.\" I said. \"Okay, lets go see the rest of the house.\"\n\nLooking around the Great Room, Cindy said \"It's not quite as wide as it was before.\"\n\n\"Good observation.\" I said, actually impressed with Cindy's spatial acuity. \"The space behind the second garage has been used for stairs to the basement.\" I said, opening a door that was almost at the 'border' of the great room and front room. Stairs went down to the right, to the west towards the 'deck' side of the house, the back side.\n\nThe basement was about half the size of the Great Room above it, and the windows showed the underside of the deck. There was a small metal door on the left (south) end, which was set into the concrete of the foundation and wall, and was solidly and doubly bolted shut. The laundry room was also on that side of the house, really nothing more than a nook for the washer and dryer behind folding doors. On the other side (north side), under the kitchen, were folding doors that hid a closet space.\n\n\"That's the 'door to nowhere'.\" I said, referring to the bolted door leading outside. \"If you go out, you're practically going down the mountainside. It is possible that the fire influenced my thinking on that.\"\n\n\"I hear ya. Nice game room, here.\" Cindy said. \"Or you could run more water lines and put in a bathroom and it's a bedroom.\" We went back upstairs.\n\nThe kitchen was not impressive. The slant of the roof seemed to make it look smaller than it was, and I had not even put in the island counter that I'd wanted. The breakfast room was by the triangular shaped window, giving that view of the deck and the Town beyond. The door to the deck was on the side of the house, making one go around the corner to the deck.\n\nThe deck actually went the full length of the back of the house, and the middle portion extended over the cliff in a trapezoid shape, with walkways going to either side alongside the wall of the house. Above the \"door to nowhere\" was the door from the Great Room to the deck, on the opposite side of the kitchen, which looked virtually concealed in the wall from the outside.\n\n\"And now for the piece d'resistance.\" I said. The wall between the breakfast room and Great Room seemed very thick. It was where the double fireplaces had been in the old Cabin. As Cindy watched, I opened what looked like the wall to the breakfast room side, revealing the slender, 30-inch-wide stairs leading up to the bedroom. I explained the concept of the narrow stairs in Thomas Jefferson's home, Monticello, in Virginia.\n\n\"One would definitely get the idea that you were thinking of fire escapes when designing this house.\" Cindy said.\n\n\"Ya think?\" I replied. \"Of course the whole thing is concrete, steel, and Hardiplank, so it won't burn easily, either. Let's go upstairs.\" We went to the main staircase and up, then turned left. The old Cabin's front room had been a vaulted ceiling to the slanted (towards the mountain) roof. This house utilized that space for two bedrooms, not large but adequate, with windows looking onto the side of the mountain over the driveway. \n\nAt the end of the hallway, one door went left... into the outer bedroom, where the slanted roof of the A-frame was part of the ceiling. Straight ahead was the bathroom, with a tub and shower on one side, the toilet and lavatory on the other, and built into the slanted roof at back was a towel cabinet. On the right, was the door to the master bedroom.\n\nThat door opened onto almost the dead middle of the bedroom. The windows overlooking the deck were most of the back wall, giving that spectacular view. Looking from the door, there was a door on the left wall that went to the master bathroom. It was on the other side from where the Old Cabin's bathroom had been; there had been the walk-in closet there before. I switched sides because it was easier to run water lines on that side of the house, and so that the bathroom wouldn't be directly above the kitchen. The long, narrow bathroom had a toilet in its own little room at the end, a hot tub halfway tucked under the slanting roof, and a long, thin vanity and sink.\n\n\"Okay, that secret stairwell has to be in the walk-in closet.\" Cindy said, going to the closet on the right side. The door was 1/3 of the way down the wall from the end of the house. Sure enough, to the left was a sliding panel that revealed the thin staircase to the breakfast room, with a hardcore deadbolt lock that prevented anyone from sneaking up the stairs from below and easily opening the door. To the right was the walk-in closet. It was not nearly as large as the previous Cabin's walk-in closet had been, but was decent enough in size.\n\n\"Oh, I see the underside of stairs.\" said Cindy. \"Where do those go?\"\n\n\"I'll show you.\" I said. Back in the hallway, right at the turn that led down the stairs, there was a door. Behind it was... more stairs! We went up those to the attic room. It was not very large and the roof was apexing just above it. The two windows were triangles at the top of the house, again looking out in spectacular view of the Town and a long way in the distance. I saw a train coming from the west, just over the horizon, as Cindy looked around the room.\n\n\"I guess this is a playroom for the kids?\" she said.\n\n\"And dog.\" I replied. \"It could potentially be divided in half, and an office or sitting room for Laura could be made out of part of it.\"\n\n\"Which brings up the question...\" Cindy said, \"how does she feel about moving back up here?\"\n\n\"She doesn't.\" I said. \"We're not moving up here permanently. Laura never was too crazy about the old Cabin, as you and some others told me in the past. So it'll be like a weekend retreat, or for me to work or entertain at while we mostly live in the Mountain Nest. She can walk to her office from there; one can't really scale the mountain from here, though... and after the night of the fire, I hope I never have to do that again, for any reason.\"\n\n\"I hear that.\" Cindy murmured.",
        "\"And also...\" I said, \"if we can ever get Molly to move up to this area, I'd have no problem with her and Ross and the new baby living here.\"\n\n\"That'd be nice, but she was born to be a police officer, and she pretty much can't work for the TCPD with me here, at least not with the Detectives.\" Cindy said. \"Those pesky nepotism regulations, ya know.\"\n\n\"Yep.\" I said. \"But it's a thought, just something to file away for the future.\" I felt more than saw those ice blue eyes snap onto me.\n\n\"Oh, you're up to something.\" Cindy said, peering at me. \"Care to tell me what it is?\"\n\n\"Not yet. And it may not happen.\" I said. \"But let's go out on deck. I want to talk to you about something else.\" We went downstairs and out on the deck, taking the folding chairs I'd brought from the back of the SUV.\n\nOnce seated and looking out over the view in the slight breeze, I told Cindy everything about the SBI Agents' visit concerning Sharples. \"A couple of things came to me as I talked to them. First, Sharples was possibly on to something about the child trafficking, which we now have an idea is the Oldeeds Organization. Second, he was either turned or became jaded, and began his pattern of setting up crimes and then 'solving' them. He's been doing that here, and there have been threats made against him, as well.\"\n\n\"If he's dirty, and worse, if he's begun committing murders, then he is too dangerous to leave in place.\" Cindy said.\n\n\"I agree.\" I said. \"But ask yourself this: why is Sharples so protected everywhere he goes? He always gets the Police Unions behind him, then moves on when he begins wearing out their welcome and becomes too hot to hold.\"\n\n\"So you're idea is to get the Union to turn on him?\" Cindy asked. I was pleased that she was beginning to think the right way, though she'd missed an important part of the question.\n\n\"That's part of it.\" I said. \"But I don't want to just run him off, not anymore. I don't want him to be anyone else's problem, and if he is killing people, we've got to shut him down.\"\n\nI continued: \"So here's what I'm thinking of doing. We give Sharples the Oldeeds child trafficking case. We give him the info that we have with those threads to child trafficking, put him on that scent. I think he'll bite at the chance to actually solve the cases he was working on all those years before. It gets him out of the way, it actually might get some productive use out of him, and he might just uncover some of the threads to some of the Bad Boys around these here parts.\"\n\nI went on: \"And he might actually have to cross some of his buddies, who will then not trust or use him anymore, rendering him less harmful. We, meaning you, Teresa, and myself, will be watching him. If he avoids working with the people he normally works with, avoids contacting people he usually contacts, and he does that because he actually is working on the case, we might infer some things from his actions. And if he does step on some toes, we'll see how that plays out, as well.\"\n\n\"Yep, and it's an interesting idea.\" Cindy said. \"But I get the feeling you have reservations about it, which is why you're talking to me.\"\n\n\"Yes, Crowbar 2,\" I said, \"that is right. My first reservation is that he simply might be assassinated, and if it were considered a line-of-duty death and he was honored the same way Feeley was... that would tear me apart.\"\n\n\"You and a lot of other people.\" Cindy said, thinking of Tanya Perlman.\n\n\"And the second thing is what you're thinking about.\" I said. \"What if he starts trying to find Oldeeds's killer and comes across something... something we'd rather not be brought up.\"\n\n\"Yep.\" Cindy said. \"The chances of that are slim and none, but it's the 'slim' that worries me. I'd just as soon as that stay closed and untouched forever.\"\n\n\"Well, as long as my first red crowbar hangs on the wall of my office,\" I said, \"there is no way in hell they'll ever get a guilty verdict for that wonderful extermination. But you're right, we don't want to stir up the hornet's nest there. So, Crowbar 2, what would you do?\"\n\nCindy answered, giving her reasons. I agreed with them.\n\nThen she changed the subject: \"There is one other thing I wanted to bring up, and here and now is good. That classified file on 'Scorpion' is bugging me, pun not intended. I want to find this Widow Athena Jones and see what she can tell me. She may have some answers as to why that file was there. And I had this distinct impression that she was hanging around the Square and watching us the other day when we were at lunch.\"\n\n\"Go for it.\" I authorized. \"Just keep it discreet, and let me know anything you find. But if you start stepping on the FBI's toes, back off and touch base with me ASAP.\"\n\n\"Wilco.\" Cindy said.\n\nPart 17 - Entropy: Order and Chaos \n\nAt 3:45pm, still Wednesday, May 13th, I had Lt. Teresa Croyle bring Detective Leonard Sharples into Classroom 'C', Vice's meeting room, for an assignment. I already had the Union rep in the room, and had informed him of what was to take place. With the Union rep already there, Sharples couldn't complain about me trying to harass him. I had also already talked to FBI Special Agent in Charge Jack Muscone about it.\n\nAfter everyone was seated, I said \"Detective Sharples, you're currently on restricted duty pending the Board of Inquiry of the officer-involved shooting you were a part of. While you're waiting on that to be resolved, I have an assignment for you. It's something of an older case, but it involves child trafficking, and we have some indications that the group we think was doing it before is about to start it up again, and right here in our County. I am aware that you previously investigated a child trafficking ring while you were in Texas, so this will be right up your alley.\"\n\nSharples looked at me warily, but I'd seen the spark of interest in his otherwise cold, dark eyes behind the slits in his face that partially hid them. \"How did you know I'd investigated child trafficking in the past?\" he asked, a question I'd anticipated.\n\n\"Oh, the FBI told me.\" I said. \"They've been looking into this on a national level. The information I'll be giving you will show the possibility of this County being used as a conduit for them.\" I took a photograph out of the file folder in front of me and slid it over in front of Sharples. \"Do you recognize that man?\"\n\n\"Uhh..\" Sharples said, looking at it, shock on his face. \"That's... Jonas Oldeeds, the tele-evangelist. He was killed here, a couple of years ago.\"\n\n\"Yes, he was killed right here, in this very County.\" I said emphatically. \"And I think he was trying to come in and set up a child trafficking operation. His Ministries are based in Texas, and he may have been behind the trafficking rings down there, as well.\"\n\nI slid the entire file, which really did not have a lot in it, to Sharples. \"Detective Sharples,\" I intoned with a severity of importance, \"this is not a small case. I'm not hopeful that you can get anything actionable on it, but one thing is for sure: I intend to stop these bastards and we will pursue it to the ends of the earth if we get something. We won't be trying to sweep it under the rug nor allow ourselves to be intimidated or bribed into stopping our investigation. And if you're able to uncover anything relating to this ring or other criminal activities associated with it, it would be a great credit to your career.\"\n\n\"Yes sir.\" said Sharples. His eyes were still wary, and I could see the gears turning in his head, but I also saw what I wanted to see... avid interest. Sharples was hooked; this bait had gotten him. I knew from the SBI agents that he'd been taken off previous child trafficking cases, probably by corrupt officials that had been bribed or threatened to do so. But Sharples knew that I wasn't kidding when I said we'd pursue it and not back down. And accolades were his lodestone. We'd see if this would get him distracted from 'creating' busts in the near future.\n\n\"Get to work, Detective. The computer wires won't melt with heavy use.\" I said. \"Make sure to inform Lieutenant Croyle of anything you find, as soon as you find it.\" With that, I got up and left the room.\n\n* * * * * * * * * * * * * * * *\n\nThat afternoon I received a package by FedEx. After signing for it at the Duty Desk, I went to my office and opened it. It was from Mr. Ichigawa of Ichimoku Industries.\n\nThe report contained an investigation of Jennifer Morris, which had been started after Ichigawa had learned of Ken Konnichi's affair with her. They had found that Jennifer Morris had divorced Rep. Justin Madoff, but that she and Madoff still had very frequent contact by cellphone, not bothering to attempt to use burners. This cellphone activity had greatly increased just as Jennifer was seducing Konnichi and as their affair developed.\n\nIchigawa's report stated that there was no information that Konnichi had obtained any industrial secrets beyond those to which he was already privy. His financial records, which were included in the package, did not show any indication of payments to Jennifer nor from her, nor to or from anyone else.\n\nI sent an email profusely thanking Ichigawa for his cooperation, and had the file put into evidence in the Morris/Konnichi murder case.\n\n* * * * * * * * * * * * * * * *\n\nThe meeting with Chief Bennett was long. I recounted the SBI Agents' discussion of Sharples, and my using that knowledge to give Sharples the trafficking case. I then told the Chief that Sharples did not deserve any medals, and that the Morris/Konnichi murders still needed further investigation, giving him an outline of the information learned from the employers of two of the victims.\n\n\"That's good.\" said the Chief. \"The Union rep has no idea what to do about that assignment you gave Sharples. They don't understand it, they can't complain about it, and they're just dumbfounded at you for giving it to him. But let me fill you in on our real problem: the KSTD lawsuit.\"\n\nThe Chief started: \"First, I'm aware that your former wife was one of the women taped with Jack Burke. And I'm aware that she is now the Sheriff's wife, and the potential for scandal that could ensue for him. So you can speak freely with me about that if you need to.\"\n\nI nodded as Bennett continued: \"Second, Judge Nance tried to take the case into his docket without it being assigned, and Folsom lit him up for it. Folsom is going to take the case himself, as is his prerogative as the Chief Judge of the Superior Court for this District. KSTD is making noises about appealing that ruling, though they have no grounds, and State Senator Katherine Woodburn has now weighed in, demanding the tapes be released or that I resign.\"\n\n\"Gee!\" I said sarcastically, \"Senator Woodburn must really want me to be Chief of Police here.\" Bennett laughed out loud at that one.\n\nHe said \"That is exactly what Sheriff Allgood told her, and also what he said in public within the hearing of the Press, that you'd actually take the job to keep it out of Brownlee's hands if that's what it came to. Woodburn shut up after that, and has not attempted to interfere again.\"\n\n\"That's one coup d'etat averted.\" I said. \"What else?\"\n\n\"Brownlee made a 'friend of the Court' filing supporting KSTD's position that the records are public now that the case is over, that the O.R.A. does apply to those records, and that my concealment of them is breaking the law.\" said Bennett. \"You know, that guy really doesn't seem to get it. Woodburn does, but Brownlee doesn't.\"\n\n\"Yes.\" I said. \"And a very, very instructive example, don't you think?\" The Chief just peered at me, not comprehending.\n\n* * * * * * * * * * * * * * * *\n\nOn Thursday, May 14th, I took most of the day off. The Cabin was finished. It was inspected and signed off upon by Fire Marshal Zoe Singer personally, and the papers were all done, making it mine... well, mine and the Bank's. I had the first articles of furniture brought in: a large, solid desk for my office, a king-sized bed for the master bedroom, one soft leather sofa for the greatroom, and deck furniture for the deck out back. Oh yes, and some equipment for the wine cellar...\n\nLast, but not least, I called Paulina Patterson and asked the lovely black ADA if she'd like a tour of the Cabin Friday night... and if she'd like to help me 'break it in'. Her voice was sultry and sensuous as she accepted... and reminded me that it would be her most fertile time. Was that luck, or good planning on my part? You make the call.\n\nAt 10:30pm, Laura got home. I observed my wife as she entered our Mountain Nest home. She looked totally exhausted, both mentally and physically.\n\n\"Mommy!\" yelled out Carole, who I was holding as we sat on the sofa. Putting her suitcase down, Laura smiled brightly, new life surging into her as she took our daughter into her arms, and a warm hug was exchanged.\n\n\"Oh, how's my baby girl?!\" Laura said happily. \"Have you been a good girl?\" she asked. She went into the den and sat down, holding Carole and talking with her. I picked up Jim and held him; he was falling asleep very quickly. Bowser was lying in the middle of the den floor, surreptitiously watching Carole and her mother.\n\n\"Rough week?\" I asked.\n\n\"Yes.\" Laura said, glancing over at me. \"Very rough. After Carole goes to sleep and I can put her to bed, we'll talk.\"\n\nThat took a good few minutes, as Carole was exploring Laura's necklace, then turning and saying \"Bowser\" to the dog as she displayed the necklace in her little hand. Finally, Carole went to sleep, we put the kids in their beds, I gave Bowser a good night skritchin' before he settled into his basket under Carol's crib, and Laura and I went to the den to talk.\n\n\"All I can tell you,\" Laura said, \"is that the guy you hit had a fractured skull, a broken nose, and glass fragments in his eyes. That crowbar really is a devastating weapon. My agents all want crowbars for themselves.\"\n\n\"Smart guys.\" I said. \"So what happened?\"\n\n\"They broke. After settling Ivy and her husband somewhere in Washington State, I went on to the interrogation location. We might have been across the border in Canada when we interrogated them.\" Laura said. That was one way to avoid breaking numerous laws, I thought to myself.\n\n\"And here I was, thinking Canada was our ally.\" I said. \"I think P. Harvey Eckhart fled to Canada once, when the FBI was after him. That had to be over a quarter of a century ago, though.\"\n\n\"I do remember reading something about that..\" Laura said. \"And don't forget those who deserted to avoid being sent to Viet Nam. But enough of that... the perp you injured broke easily; he was already in pain. The other one required some extra.. medication... to make him more 'cooperative'. The one you hit was from San Francisco. The other one was from the City, just 90 miles east of here. They were former mercenaries that had worked in Africa, became professional hit men, and they were both hired to kill Ivy and her family. They said they had a contact via burner phones, but they had no phones on them when we captured them. They did not know who Michael Burke was at all, but they knew who Henry Wargrave was... but only as a somewhat celebrity billionaire. There really was nothing else of value, to you or to us.\"\n\n\"Mercenaries from Africa, knew who Wargrave was, not hard to make the connection.\" I mused. \"One from the City, that makes sense; the other from San Francisco, closer to Ivy's location, that also makes sense. What does not make sense is why they're using a triphammer to crush a nut. Not one but two assassins, coordinated plan, using high-tech gear such as night vision devices. This was nothing less than a full-scale paramilitary operation.\"\n\n\"You're right.\" Laura said. \"I thought they might've taken into account that Ivy once worked with me in a CIA capacity, but they didn't know anything about Ivy. They were just hired to kill her and her family. It was just a job to them, no questions asked, no need to know anything else. So that wasn't the reason for the overkill that you're discussing. Now whoever wanted them dead, that's another range of issues.\" \n\n\"And easy to answer.\" I said. \"Let me put it in the form of a question: if Ivy were to be killed, how would that make you feel, Laura?\"\n\n\"I... I'd be devastated.\" Laura said. \"Ivy's a good person, she was loyal to me when I needed her to be... oh. I see.\"\n\n\"Yes.\" I said. \"I've wondered why Wargrave helped Burke find out the Jack Burke story... it interested him, Wargrave, the minute your name came up. And when there's a chance to kill one of your former agents, or perhaps 'associate' is a better word, Wargrave was quite willing to help Burke kill Ivy.\"\n\n\"I think you're right, as usual.\" Laura said.\n\n\"I also suspect we won't be hearing from those bozos, ever again, seeing as you've been referring to them in the past tense all night.\" I said.\n\n\"No comment on that.\" Laura replied. \"Well, I'm exhausted. I want to take a long soak in the hot tub, then get some sleep.\"\n\n\"I don't blame you.\" I said. We headed upstairs, where Laura soaked in the hot tub while I dozed on the bed. When I felt her getting into bed with me, I took her in my arms.\"\n\n\"No sex tonight.\" Laura said. \"Just hold me, okay?\"\n\n\"Sure.\" I said. \"I guess those horny agents wore you out, eh?\"\n\nLaura smiled. \"A couple of them did.\" she said. \"And since you men have to know these things: one of them was pretty well hung, the other was average. Anyway, it's stressful work; they needed a release, and so did I. My breasts were aching because they were so full of milk, and the guys were soooo nice in volunteering to help me out with that. They took turns making love with me until I got too sore to keep going.\" She caressed my cock as she said \"That turns you on, doesn't it?\"\n\n\"Yeahhhh...\" I whispered sleepily, pretty tired myself and more interested in sleep than sex.\n\n\"So... you're not going to tell me, are you?\" Laura said, now caressing my balls. This could be heaven or this could be hell, as that song 'Hotel California' said...\n\n\"How I know my so-called mother-in-law's name?\" I said, grinning. \"I can't believe you haven't figured it out yet.\"\n\n\"I'm too tired.\" Laura said, letting my balls go. \"But no blowjob for you tomorrow morning.\"\n\n\"That's okay.\" I said. \"I have a date tomorrow night.\"\n\n\"Mmm, you hot and sexy stud...\" Laura said. She was falling asleep. I thought about all the connections of the latest spider web being spun the last few days in my Town & County... or perhaps it was a Scorpion's web, I thought as I closed my eyes for a mom---\n\n* * * * * * * * * * * * * * * *\n\nAt the same time, Cindy was busy doing her research on the 'secure' lines in the second bedroom of her condo. She was wearing a peach see-thru teddy nightgown and high heel slides, more for comfort than for showing off her magnificent body and shaping her luscious legs.\n\n\"Ah, here's something.\" she said. It was a classified file about an arms purchase. She recognized the name Joseph 'Jody' Corrigan, former leader of the now-defunct rogue CIA cell. The Agency and FBI had found evidence of a purchase of arms by him.\n\n\"Oh my Godddddd...\" she whispered to herself as she saw the details. The weapons were the ones used at the Olivet Gym the night of ... oh geez, it was the night she was shot and wounded. And those weapons were supplied by 'Acme Wholesale Firearms'... and personally handled and delivered by one Henry R. Wargrave.\n\nCold fire swept through Cindy's mind and body. Wargrave had sold those weapons with the intent and purpose of Police being shot. Maybe the Iron Crowbar was the target, which was bad enough... but she had suffered for Wargrave's perfidy.\n\nAnd she vowed that Wargrave would suffer in kind. He would pay.\n\n\"Cin-deeee!\" came a voice from the living room just at that moment. Jenna was just getting home.",
        "\"Hey baby.\" Cindy said. \"I'll be out in a minute.\" She shut down the computer and went out into the living room.\n\n\"Oh my God.\" Jenna said upon catching sight of her affianced in the peach teddy. \"You are one hell of a sight for tired eyes.\"\n\n\"Thank you.\" Cindy said. \"I need a drink. Want one?\"\n\n\"You bet.\" Jenna said. Cindy poured two bourbons, and they sat together on the sofa. Both gulped down their drinks, so Cindy just brought the bottle to the table in front of the sofa.\n\n\"The good news,\" Jenna said, \"is that Don gave Sharples that child trafficking assignment, and now Sharples totally preoccupied with it. He actually is working like a dog, and not fucking up any Vice cases. I almost went in to fuck Don's balls off as a reward, but he wasn't at work today.\"\n\n\"Yeah, he was closing on the new Cabin today.\" Cindy said, ignoring the part of Jenna's comment about fucking Don. \"I think the housewarming party is next weekend, and we're both invited.\"\n\n\"Oh!\" Jenny said. \"That reminds me.\" She rummaged through her purse and brought out an envelope. \"This came in the mail, for us.\"\n\nCindy took out the card and read it. It was an invitation to Lashes & Lace for Friday night, the next night, as the 'special guests' of the owner, Rita. A handwritten note from Rita said that it would be a special evening, and that Cindy would learn all about the widow she was seeking.\n\n\"Have you ever been there before?\" Cindy asked Jenna.\n\n\"Nope.\" Jenna said. \"And I'm not sure we should be seen in that place.\"\n\n\"Oh... we're going.\" Cindy said. \"It'll be okay; Don and Laura have gone several times. And Rita has some information for me. So... what didn't go so well today?\"\n\n\"KSTD,\" Jenna said, \"and that god-damned lawsuit over the Burke tapes. Krasney took me off of every other case and made me the primary counsel for the County and the Council. And Gor-don has been less than helpful on it; he wants the tapes to come out. Told me that to my face.\"\n\n\"Why haven't you fired that punk?\" Cindy asked. It wasn't the first time she'd asked.\n\n\"Because he's normally good, he normally has inside info on things in the Punk world, and because his dick is bigger than anyone else's... except Myron Milton's.\" Jenna was bisexual, though mostly she was hot for women, and Cindy in particular. But while Cindy didn't care for cock, Jenna wasn't past indulging in some hard male meat from time to time.\n\n\"You'd fuck that excrement and then come home to me?\" Cindy asked acerbically.\n\n\"Would I do that to you?\" Jenna asked. Cindy was not fooled but said nothing as Jenna continued: \"But I might tease him. But enough about Gor-don. Krasney is worried about the tapes, but Sheriff Allgood is about to come out of his skin over it. He's not himself at all.\" Cindy said nothing, knowing fully why Daniel Allgood was so uptight over the tapes, his wife being Cindy's business partner.\n\n\"Are we going to win or lose that one?\" Cindy asked.\n\n\"Oh, KSTD will never get those tapes, nor the computer files on the servers.\" Jenna said. \"The Chief says he'll go to jail before turning them over, and Myron was overheard saying he's already planted the virus to wipe out the data if need be. I don't know if that's for real or a bluff.\"\n\n\"It's for real.\" Cindy said. \"I personally authorized and ordered Myron to do it.\"\n\nJenna stared at Cindy a moment, then said \"Wow. You guys don't play.\"\n\nCindy said \"That's because Commander Donald Troy has not said a word about this... and nothing scares me like Don keeping something to himself. I know he'll go in and wipe out that data himself. He and Myron, and maybe Mary, are the only people capable of doing it. Like you said, Don won't play; he'll destroy the data, no virus, no 'plausible deniability', if push came to shove. If anything, we have to make sure he doesn't take the fall. Too much is at stake.\"\n\n\"Wow.\" Jenna said. \"You're really loyal to him, aren't you?\"\n\n\"Yeah.\" Cindy said, then sighed. \"Yeah, I am. And I don't mind. It's like our radio station's Sports announcer always says: 'I have seen enough to know that I have seen too much.' And from what I've seen, we need the Iron Crowbar or things will go to hell in a handbasket. And if I can help him, that's what I need to be doing.\"\n\nJenna said nothing. Cindy refilled the glasses. \"To the Iron Crowbar.\" Jenna said. They clinked their glasses together and drained them.\n\n* * * * * * * * * * * * * * * *\n\nThe next morning I woke up around 4:15am, feeling something wasn't right. I got up and looked around the house. Nothing was out of place... except Bowser was wide awake and began following me around. He was anxious, as well, and was sniffing around as if he expected to find something that wasn't right.\n\nAfter petting and playing with Bowser a few minutes, I went upstairs and showered and shaved, then dressed. Letting Laura sleep, I quietly left the house and drove to Headquarters in my SUV. Instead of my normal route, I went a bit further south, and ended up driving down College Avenue, past the Presbyterian Church on the left just a block away from University Avenue, then First Baptist Church on the right and the Catholic Church on the left, then the Methodist Church on the left. They should've named this street Church Street, I thought to myself. The Presbyterians had started the University, as was the case of a surprising number of colleges in the Nation, but the First Baptist Church was by far the largest denomination.\n\nI continued down the street into Courthouse Square. It was desolate, lit by a few streetlights and the lights that lit up City Hall on the west side and the County Courthouse on the east side. No old ladies in the park. Nobody else, either.\n\nAt Headquarters I checked in with the Duty Desk officers, glad to find them wide awake and doing their jobs. After talking with them for a few minutes, I went to my office. The door was locked, so I unlocked it with my key, but did not turn on the light. A lamp on the desk was on, and that was all I needed as I powered up the computer.\n\nI then noticed the glint of golden light reflected from the lamp. It had come from the matchstick Trojan Horse that was sitting on the bookcase where it normally did. To my shock, there was a necklace around the Horse's neck.\n\nSo that's why I was feeling that Disturbance in the Force, I thought to myself.\n\nI checked to make sure the capsule inside the Horse was undisturbed; it was still embedded on the inside of the Horse's neck. I then studied the necklace. The pendant hanging on the thin gold chain was a gold character, an \"m\" with a arrow-pointed tail at the end. It was one of the signs of the Zodiac, which happened to be my own sign, but I knew what the real meaning was:\n\nIt was the symbol for Scorpio... the Scorpion.\n\nTo be continued.\n\nDear readers: not much to solve, but can you see the web being weaved here? So, who or what is the Scorpion? What's going to happen to Wargrave? Will the Consultant of Crime save Wargrave? And how does Don know the name of that woman? Solutions, such they are, as well as hot housewarming sex, to come in the next exciting chapter."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "police drama",
        "crime drama",
        "mystery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/sting-of-the-scorpion-ch-04"
}