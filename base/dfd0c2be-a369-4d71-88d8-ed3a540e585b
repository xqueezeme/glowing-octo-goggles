{
    "title": "Adelle's Girls: Cleo Ch. 02",
    "pages": [
        "Here's part two of the first part, if you follow my meaning. And please take a moment after reading and vote or post a comment. Let me know what y'all think!\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Adelle's, how may I help you?\"\n\n\"Adelle?\" Allie asked, confused. \"Where's Cleo?\"\n\n\"Cleo had a date tonight, so I'm covering the phones as well as my usual duties,\" Adelle said, faux indignant. She didn't want it to become common knowledge that Cleo was seeing a client, per her instructions.\n\n\"Oo, lucky girl,\" Allie giggled.\n\n\"What's wrong?\" Adelle asked, putting aside her crossword puzzle.\n\n\"Oh nothing! You just told me to give a call to confirm my job for tomorrow,\" Allie said nervously. Allie was one of Adelle's newer girls, but she thought that the young redhead had some definite potential.\n\n\"You are confirmed. Mr. Salazar will meet you at Tao at 830. And from what I understand,\" Adelle said, checking the booking screen, \" he's rather partial to Greek.\"\n\n\"Then why are we going to Tao? Isn't that Chinese food?\"\n\nAdelle sighed. \"Allie dear...\"\n\n\"OH! Greek! I get it. Oh I'm so stupid. Okay, right. Yes.\" Allie babbled, embarrassed. \"That's uh, that's not a problem at all, actually. I guess I like it too.\"\n\n\"Glad to hear it dear. Remember to call in when the date's over.\"\n\n\"Right. Talk to you soon!\" Allie said brightly, hanging up.\n\nAdelle sighed again. \"Who would have thought Cleo would be one of my better hires.\" Thinking on Cleo, she wondered how her date with Mr. Dunn was going. \"He's probably stuffing her like a turkey.\"\n\n~~~~~~~~~~~~~~~\n\n\"Cleo, oh fuck! Jesus, fuck, ugh, goddamnit!\" Andrew grunted, his hands desperately gripping at the sheets. He wanted to grab onto Cleo's bobbing head, but he didn't want to do anything to interrupt her at all \"Jesus honey, seriously, where did you, unh, did you learn to do that?\"\n\nCleo's sucking mouth rose slowly up his shaft, his fat cock emerging from her tiny mouth like some sort of sexual magic act. As he slipped out of her mouth, her tongue rapidly licked along its underside, making him shiver. When it was finally just his fat cockhead in her mouth, she gave it the most loving, tongue filled kiss she could manage.\n\n\"Well,\" she said, now content to just slowly stroke the shaft, \"I've always liked giving head. I was... Well, I was a virgin till my senior year of college,\" she said quickly, blushing. \"So I sucked cocks. Got pretty good at it, doncha think?\" she asked, punctuating her question by taking his fat cock to the root again, suddenly.\n\n\"Fuck! Yes, yes, you're amazing, Jesus!\" Andrew agreed, laughing. Cleo was kneeling beside him on the bed, her plump butt looking delectable as she bent over him. Andrew slid a large hand along her thigh to her pussy and was a little surprised to find her soaked.\n\n\"Yeah,\" she said, her eyes locked with his, \"I've... I've come close to cumming giving head.\"\n\n\"Really?\" Andrew asked, slipping a finger into her slick pussy. She nodded, her hands still pumping him.\n\n\"So yeah,\" Cleo said, returning to just teasing his head, \"I've always liked it, and I guess I've always been good at it. I mean, I could always take all my other boyfriends deep, so... \" Cleo trailed off, realizing what she had said. Her \"other boyfriends,\" implying Andrew was a boyfriend. But he wasn't her boyfriend, he was a client and she was his whore. If Andrew noticed her slip, he didn't say anything.\n\nAlthough he was distracted by his desperate attempts to hold his orgasm back. Cleo smiled: It was time to defeat him on that fight.\n\nCleo attacked his cock with renewed vigor, both hands taking up an aggressive pumping, twisting motion as her mouth fucked the top third of his thick cock. Andrew's breathing quickened, one heavy hand going to the back of her head.\n\n\"Cleo, oh fuck,\" he gasped, his cock throbbing powerfully. \"I'm gonna AH!\" Cleo took him deep, her lips a crimson ring around the base of his cock as he exploded deep in her throat. Andrew groaned and gasped, shivering, his hand holding her head down, pumping what felt like pints of cum down her throat. After a few moments of rigid shivering, Andrew relaxed grandly, sinking back against the pillows with a huge sigh. Cleo pulled herself off his cock and took a deep breath, a big smile on her face.\n\n\"Enjoy that?\" she asked, laughing as Andrew nodded almost drunkenly. Cleo walked to the couch and took a big pull on her beer. Tonight they hadn't done much, deciding instead to stay in, get room service and watch a movie on pay per view. The Proposal was playing on the screen, but they had completely forgotten about it pretty quickly. Finishing her beer, Cleo grabbed a couple of french fries and munched on them while considering her client. Andrew was still breathing pretty heavily, but she could see that his cock had barely lost any of its hardness.\n\n\"You're gonna kill me one of these days,\" Andrew said, chuckling.\n\n\"Not likely, big strong man like you,\" Cleo said, returning to the bed. He pulled her close, his hand gripping her butt tight. He kissed her softly, his other hand toying with her breasts.\n\n\"Mm, french fry kisses,\" Andrew said, smiling. \"Before I forget... What are you doing the 20<sup>th</sup> of next month?\" he asked, his mouth going to her soft breast and pulling a nipple into his mouth.\n\n\"Mm... Probably nothing, why?\" she asked, her hands going to his hair, holding him close to her chest. He didn't answer for some time, seemingly more interested in placing wet, sucking kisses all over her breasts.\n\n\"Well it's looking like it's the next time I'll be in New York. There's a convention the week before it and,\" he paused again, returning to her breasts for a moment, now nibbling on her left nipple. \"And um, I was hoping to book you for the whole day. Two nights and the day in between.\"\n\n\"Really?\" Cleo asked, a little surprised. Such long dates were unusual, mostly because of their price. And with Andrew continuing to pay double rate for her, this would be a very expensive date. \"As a reward for, mm, sitting through a week of seminars?\"\n\n\"Something like that... You'd also be my birthday present to myself.\"\n\n\"What?\" she asked, pulling his head away.\n\n\"May 20<sup>th</sup> is my birthday.\"\n\n\"Really?\" Cleo's eyes narrowed. \"How old are you anyway?\"\n\n\"Why I never!\" Andrew said, laughing. \"I'm 48. I'll be turning 49 next month.\"\n\n\"The big four nine,\" Cleo said with gravity. Andrew nodded somberly before his eyes returned to her bare breasts before him. \"Don't you want to be at home for you birthday?\"\n\n\"Well I hadn't even planned on going to the seminar, honestly, let alone be stuck in the city. But if I am I plan on making the best of it,\" he said simply, his eyes locked on hers. \"Is that okay? Would you care to join me for my birthday?\"\n\nCleo thought for a moment, wondered what a full day with Andrew would be like. She was used to the their current arrangement, and she had come to crave the nights of passionate, almost savage fucking. Could she survive a whole day of it? And he wants to spend his birthday with me? Isn't that a little... Personal? \"Uh, what do you have planned?\"\n\n\"Well, I was hoping to wake up with you and not having one of us have to run off,\" he said, a hand stroking her side.\n\nCleo giggled. \"Okay.\"\n\n\"Then go out for brunch.\"\n\n\"I do love brunch.\"\n\n\"Who doesn't? And then I thought we'd find a nice bar where we can spend an afternoon. I know there's a lovely Belgian place in the 40s.\"\n\n\"This is quite a plan,\" Cleo said, crawling onto his lap.\n\n\"And then an early dinner before we go and see a show. Have you seen Fela? I've heard it's great,\" he said, his hands returning to her breasts.\n\n\"I've heard that too,\" Cleo said, sliding her moistening pussy along Andrew's solid cock.\n\n\"Then perhaps off to a nightclub for drinks and dancing... before coming back to the room,\" he said quietly, pulling her close again, kissing her slim neck softly. As Cleo moaned quietly, Andrew's fat cockhead found her moist entrance and spread her open. She grunted as she forced herself down, Andrews cock easing its way into her. \"Mm, don't worry hon, I wasn't planning on spending the whole day inside fucking.\"\n\n\"Oh thank god,\" Cleo giggled, easing down on his cock. She bit her lip as she eased down to his base, whimpering when she finally hit bottom. \"Okay.\"\n\n\"Okay what?\" Andrew asked, looking up from her breasts.\n\n\"Okay I'll join you for your birthday. I'll be your birthday present to yourself,\" she said, smiling as her hips started to bounce on his thick cock.\n\n~~~~~~~~~~~~~~~\n\n\"Sounds like another lovely night,\" Erica said teasingly, sipping her coffee. Cleo shrugged, blushing slightly. She had learned to stop giving Erica too many details about her dates. \"It was. We watched The Proposal on pay per view. Most of it anyway.\" Erica laughed at that, covering her mouth as she chewed her pancakes. They were having brunch at a street side caf\u00e9, enjoying the unseasonably warm weather. \"Hey, can I ask you a question? You ever been booked for a whole day?\"\n\n\"Oh sure. Last year Chris booked me as his date for a friend's wedding. And I think some other guy back when I started. Why? Andrew wants you all to himself for a day?\" Cleo nodded. \"Damn. And at double rate still? Jeebus.\"\n\n\"I know, right?\"\n\n\"Don't sweat it hon. He wouldn't be doing it if he couldn't afford it. It's not your job to manage his finances.\"\n\n\"I know that. That's not the odd part.\" Erica's eyebrows rose in question. \"Well, it's for his birthday. He called me his gift to himself.\" Erica laughed. \"What? I thought that seemed a little... Personal?\"\n\n\"It's not that unusual, especially with the oldsters. I remember one guy had Celeste and I both for his birthday. Almost thought it would be his last,\" she said slyly, her eyes mischievous. \"But I think with a man, a wealthy, powerful man, as he ages he misses the halcyon days of youth. How better to recapture that than by fucking a girl half his age?\"\n\n\"I guess I... Okay,\" Cleo said, shoving a forkful of waffle into her mouth. She chewed for a moment in silence.\n\n\"What?\" Erica asked, watching her closely, \"I know there's something else.\"\n\n\"Well... When he mentioned it was his birthday and all that, I had thought about what I could do to make it a bit special for him.\"\n\n\"Aw, lookit you, going above and beyond.\" Erica said, eating another bite of pancake. \"What were you thinking? If you plan some part of it he might like that, be a bit of a surprise.\"\n\nCleo nodded, some ideas already forming. \"That's good, but I was... I was thinking of something... Y'know, sexual.\"\n\n\"Oh really... Well, my young apprentice, what'd you have in mind? From what you've told me there isn't much you two aren't doing already, unle- Oh! You weren't thinking of letting him in your butt were you?\"\n\n\"Erica!\" Cleo squeaked, her cheeks crimson, \"keep your fucking voice down please!\" Erica's laughter was infectious though, and soon Cleo was laughing along with her. \"But... Yes, that's one of the things I was thinking about.\"\n\n\"But I thought...\" Erica started, but looked around the restaurant and leaned closer, lowering her voice, \"I thought you said Andrew was packing a beast. That may not be the best way to break in your poor pucker, dear.\"\n\n\"You know I've never doneit. And yes, he has a huge cock. But... He's an amazing lover. And I know you think I just don't know any better,\" she said as Erica rolled her eyes, \"but he's very gentle and... Fuck Erica, when he plays with my ass when we're fucking or he's licking me I... I cum like a fucking freight train,\" she finished with a rushed whisper.\n\n\"Ah I see... So you've been thinking of letting him open you up for a while now, and now you have a 'special occasion' to do so.\" Cleo nodded. \"Are you sure? It can hurt. Especially with a big guy. Double especially your first time.\"\n\n\"I dunno, I mean... You like it, right?\"\n\nErica nodded. \"Oh yeah. My last date with Chris, he just went to town on me. Rimmed me till I was cross-eyed, then bent me in half and fucked the hell out of me. A tight butt, properly prepared, can be a source of great pleasure for both partners.\"\n\nCleo laughed, trying not to spit out her breakfast. \"Is that your motto? Does it say that on the Daniels coat of arms?\"\n\n\"Well duh. But it's in Latin, so it looks a lot classier,\" Erica replied, laughing as well. Cleo's eyes suddenly turned serious, watching her roommate closely. \"What?\"\n\n\"That's like the fifth time you've mentioned Chris in the past few days,\" Cleo said, and was stunned to see Erica avert her eyes. \"Oh my god! What's going on with you two?\"\n\n\"Nothing, Nothing! Shut up!\" Erica said as Cleo laughed at her friend's discomfort. \"It's just... He's been booking me more recently so he's on my mind. That's it!\"\n\n\"Uh huh,\" Cleo said, not buying it. Erica wasn't giving anything else up though, and signaled for the check. \"What? I thought we were going to have brunch. The mimosa's won't drink themselves.\"\n\n\"We'll do drinks later. Right now you and I have some shopping to do.\"\n\n~~~~~~~~~\n\n\"Adelle's, Cleo speaking, how may I help you?\"\n\n\"By meeting me at the hotel restaurant tonight at eight,\" Andrew said, his deep voice making her melt. Quickly glancing at Adelle, she kept the smile off her face and hoped her boss hadn't noticed.\n\n\"Of course sir, we have you confirmed for tonight clear through until the morning the day after tomorrow, the 21<sup>st</sup>,\" she said, checking the booking and trying to remain professional. \"Is there anything else we can do for you?\"\n\nAndrew chuckled. \"Nothing I can say over the phone, dear. I'll see you soon.\"\n\n\"Good night, sir,\" she said crisply, hanging the phone up. Her heart was beating faster, and she didn't need to check to know that her pussy was wet. She checked the clock, saw that she had three hours before dinner. Christ, she thought, maybe I can have a quick cum in the bathroom...\n\n\"Cleo, may I talk with you a moment?\" Adelle asked, snapping her out of her daydream.\n\n\"Of course. Something wrong?\"\n\n\"That was Mr. Dunn.\" It wasn't a question.\n\n\"Yes, yes it was,\" Cleo said. She suspected what was coming, and wasn't looking forward to it.\n\n\"Cleo, I've become concerned,\" she began, moving from behind her desk to Cleo's, pulling up a chair so she could sit closer to the younger woman. \"When you first entertained Mr. Dunn, it was meant to be a one time adventure. You were filling in. Even when he booked you a second time, I thought it a bit of passing fancy, and a good way for you to make some money. As well as a good shag,\" she said, smiling, trying to relieve some of the tension. \"But as two dates became six, and now seven, I'm worried that you lack the emotional distance that this sort of work requires.\"\n\n\"Adelle, I-\"\n\n\"Please, let me finish. I know that sometimes it's difficult to separate emotions from the physical act of love. I'm not a robot, and I've been there,\" she said, placing her hand lightly on Cleo's knee. \"But it's usually easier for a girl who sees two or three different clients a week. With regular clients it's more difficult, with emotional attachment forming on both sides. But for you, and your unique arrangement, I... Only having one regular client could be a bit disorienting.\"\n\n\"If you're worried that I'm starting to have feelings for Mr. Dunn,\" Cleo began, but Adelle cut her off.\n\n\"I am, and I think it would be best if this is the last time you saw him,\" Adelle said firmly.\n\nCleo responded without thinking. \"Adelle, I am quite capable of handling my emotions, and would appreciate if you would trust me to handle my client's needs.\" Adelle was taken aback for a moment, and Cleo pressed her advantage. \"The fact of the matter is I've turned Mr. Dunn into one of our highest-paying customers, and done so completely on my own. And a client who's willing to pay double for the girl of his choice might not take kindly to being told she was unavailable, and may take his business elsewhere.\" Holy shit, she thought, where the hell did that come from?\n\nCleo's mind was racing. She knew that Adelle wasn't completely off base, not at all. She had been battling with herself over her conflicted emotions towards Andrew, almost since her first meeting with him. She liked him, and was definitely in lust with him, but did it go any further than that? Cleo had been taking the very mature track of trying not to think about it.\n\n\"Do you know what he likes about you?\"\n\n\"What do you mean?\"\n\n\"Mr. Dunn has found something pretty remarkable. A whore who isn't one. For some men, I could see that being quite appealing.\" Cleo pulled back and was about to let Adelle have it. \"Cleo, I don't say this to be cruel. I say it as your employer who's been doing this for a long while.\"\n\nCleo relaxed slightly, taking a deep breath. \"What do you mean, a whore who isn't?\"\n\n\"You get to be the virgin and the whore for him, all in one.\" Adelle paused, considering the younger woman. Then she smiled. \"But I suppose you're right Cleo. The concerns of the business should take precedence over my, admittedly, subjective doubts. \"\n\nCleo relaxed a fraction. \"Thank you.\"\n\n\"However,\" she said, standing, \"I want you to remember that we had this conversation please.\"\n\n\"I will, Adelle. Don't worry about me,\" Cleo said with a confidence she didn't feel.\n\n\"Alright,\" she said, standing. \"So what are you doing for his birthday?\"\n\nCleo smiled. \"A fair amount of drinking, I think.\"\n\n~~~~~~~~~\n\n\"You don't believe me?\" Cleo asked, laughing.\n\n\"I just couldn't see you doing that, no,\" Andrew said, laughing. \"Not without pants anyway.\"\n\n\"A bet is a bet. And I don't welch on bets.\"\n\n\"Noted.\" Andrew finished off his beer and signaled the waitress. \"Another? We still have a few hours before dinner.\"\n\n\"Yeah, sure,\" Cleo said, turning to catch the waitress' eye. She nodded once and the waitress nodded in response, making sure Andrew didn't notice. \"You wouldn't tell me where we're eating. Big surprise?\"\n\n\"Oh, no, just a little Italian place near here.\" They were in a cozy corner of the bar. The place was quiet and almost too quaint, but they were having a fine time regardless. The beers, which were delicious and extra strong, weren't hurting. \"They have these pork chops with hot peppers... I love it.\"\n\n\"I look forward to stealing some of yours,\" she said lightly. She saw the waitress coming and slid her hand to his inner thigh to distract him. Andrew didn't see the waitress until she was right next to him.\n\n\"I found this in the fridge...?\" she said, holding a bottle of champagne with a red bow on it. An outsized gift tag read \"For Andrew.\"\n\n\"Well that's weird,\" Cleo said, scrunching her face in curiosity. Andrew's smile grew as he took the bottle and flipped the tag over.\n\n\"Happy birthday, Cleo,\" he read, smiling. His eyes shifted to hers, and she looked so damn pleased with herself he had to smile. \"Oh, you,\" he said softly, shaking his head.\n\n\"Happy birthday,\" Cleo repeated, kissing him lightly on the cheek. Andrew was at a loss for words and decided to act instead, tearing open the bottle, popping the cork and pouring two tall glasses.\n\n\"You sneak,\" he said as he handed her a glass. Checking that they were alone, he slid a warm hand along her inner thigh. \"When did you set that up?\"\n\n\"During brunch while you were in the bathroom, maybe five minutes after you told us we were coming here.\" Off of his confused look she flashed him her phone. \"Iphone. I found the place, called them and set it up. My treat, don't sweat it.\"\n\n\"Cleo, you don't have to do that.\"\n\n\"Sh,\" she said, offering her glass in toast. \"To a great 49<sup>th</sup> year.\"\n\n\"To a great 49<sup>th</sup> year,\" he agreed, and they tinked glasses. His other hand was still exploring her warm thigh. \"You're not the only one who can be sneaky...\" he said, sliding his hand up her skirt.",
        "Cleo wanted to be shocked, wanted to tell him they were in a public place. But instead she spread her thighs a fraction of an inch, allowing his fingers to feel the lace panties covering her pussy. Almost as soon as he touched them, they were moist.\n\n\"How sneaky do you think you can be?\" she asked breathily, her voice hitching as his finger swept down her pussy, pressing into her cleft.\n\n\"Pretty sneaky, I'd say,\" Andrew said, sipping his champagne nonchalantly. \"Sneaky enough to make you cum in your panties without anyone noticing.\" As he spoke quietly, one finger easily brushed aside the crotch of her panties, now lazily stroking her wet folds. \"That sneaky.\"\n\nCleo's head leaned back, gently clonking against the booth's wooden back. \"I don't know if I... If I can be sneaky enough to cum without anyone noticing,\" she said quietly, her thighs opening every so slightly. Andrew took the opportunity, slipping a thick finger into her slick opening. Cleo nibbled her lower lip to stifle her moans.\n\n\"Fuck you are already so wet,\" Andrew whispered, leaning close. \"Are you always this wet?\" Cleo shook her head. \"No? Is it me? The thought of my big cock stretching you open?\" Cleo nodded slowly, Andrew's fingertips were now massaging her g-spot while his thumb worried at her clit. Just as she was about to explode on his fingers, he withdrew his hand. As Cleo gasped in shock, he gently pulled her panties back over her mound, patting it lightly as he slid his hand back along her smooth thighs. \"Cheers,\" he said cheekily, toasting her as he quickly sucked his wet finger clean.\n\n\"You... jerk,\" she muttered, squeezing her thighs together in an attempt to calm down. Andrew smiled as he sipped his champagne, but grunted in surprise when he felt Cleo's small hand grip his shaft hard through his pants. \"Two can play that game, you know,\" she said with menace, her hand stroking him firmly.\n\n\"Cleo,\" he said, his voice dangerously low. Cleo smiled, feeling him throb in her hands. She had meant to tease him, but feeling him like this was only making her pussy throb harder.\n\n\"Andrew,\" she whispered, kissing his neck softly, \"I'm going to go to the ladies room. Wait two minutes and follow me.\" She gave his cock one last hard squeeze before scooting out of the booth and walking slowly to the rest room. She was glad to find it was a single-occupancy room with a locking door. She quickly pulled her lacy panties down her thighs and leaned over the sink, lifting her skirt to expose her ass. Sliding a hand to her weeping pussy, she gently toyed with her clit. She smiled when she heard the door slowly open behind her, swaying her ass temptingly back at him.\n\n\"Cleo...\" he murmured as he quickly slipped inside and locked the door.\n\n\"Let's see how sneaky we both can b-oh!\" she gasped as he suddenly thrust deep inside her, his thick cock slipping right into her wet heat. He began thrusting slow and deep, moving his hips from side to side as he thrust, driving her crazy. \"Oh baby just do me fast, I don't know how long we have.\"\n\n\"We have plenty of time,\" he murmured, his hand sliding around her hip to her clit. \"I gave the waitress a hundred bucks to guard the door.\" Cleo's laugh gave way to a gasp as his hips picked up speed. \"Who's the sneakiest now?\"\n\n~~~~~~~~~~\n\nAndrew was uncharacteristically quiet as they rode the elevator up to the suite. After the afternoon at the bar, a full dinner, another cocktail during the show, and a few hours at a martini bar, Cleo was swaying slightly. She was also decidedly horny.\n\n\"Penny for 'em?\" she asked, bumping him with her shoulder.\n\n\"Hm? Oh, I'm sorry hon,\" he said, wrapping an arm around her waist. \"Just... Thinking. Feeling my years a little.\"\n\n\"Oh shut up,\" she said, sliding her hand up his back. \"You've more energy than most guys half your age.\" She leaned close to whisper in his ear. \"I don't know any old man who could fuck me like you can.\" Andrew chuckled as the elevator opened, leading Cleo to the suite.\n\n\"I know hon. I know there's little sense to it, but as the years tick away... \" he said wistfully as he opened the door for her. \"I'm sorry. I shouldn't be so melancholy. I've had a lovely day with you, Cleo, I really have.\"\n\n\"It's not over yet,\" Cleo said, leaning close to kiss him hotly. \"Give me a moment? I'll be right back.\" Cleo grabbed a small bag from her overnight bag and dashed to the bathroom, leaving Andrew to pour a pair of drinks.\n\nCleo used the toilet and washed her hands, touching up her make-up. She quickly got undressed, hanging her dress and underwear on the hook. She took out the La Perla nighty Erica had helped her pick out. It was smoky gray, diaphanous, and almost see-through. Slipping it over her head, she surveyed herself in the mirror. Her body was only barely visible through the thin fabric, and the hem swished a few inches below her crotch. She bent over slightly, was pleased when her butt peaked out from underneath.\n\n\"Lovely,\" she said to herself. She grabbed her other surprises and took a deep breath. \"Here goes.\"\n\n~~~~~~~~~~~~\n\nAndrew looked up as the bathroom door opened. Cleo emerged and Andrew couldn't help his intake of breath. She was gorgeous: her auburn hair loose and wild, her hips swaying as she slowly walked towards him, the smoky fabric hiding her perfect body just enough to inflame his desires. She stepped in between his feet, taking the glass from his limp hand and sipping at the scotch.\n\n\"Like it?\" she asked, moving to sit astride his thighs. Her fingers went to the buttons of his shirt and started undoing them.\n\n\"It's beautiful,\" he said, his hands stroking up her thighs, \"you're beautiful.\" He helped her take his shirt off, revealing his broad chest. She leaned close, pressing her lace-covered breasts to his chest. The lacy fabric felt amazing against her stiff nipples.\n\n\"I thought you'd like it,\" she said, kissing him. Cleo moaned as she explored his tongue with her own. She could feel his cock pressing hard against her, and worried for a moment her wet pussy was staining his slacks. Andrew had moved to her throat, kissing along her clavicle and teasing that sensitive spot under her jaw. She quickly slipped to her knees between his thighs, her hands going to his belt buckle. She worked quickly, opening his pants and slowly pulling his hard cock from his pants. She pressed her face tight to it, feeling it's hot length against her skin as Andrew pushed his pants down his thighs, desperate to get anything out of the way between him and Cleo.\n\nCleo crawled over his pants as she helped him slide them down his legs. Her face didn't leave his cock, now sucking a heavy ball into her mouth. Andrew gasped, a heavy hand cradling her head gently. She released one orb only to pull the other one into her mouth, sucking gently as her tongue toyed with it. As her tongue trailed up his straining length, Cleo and Andrew locked eyes. When she sucked his fat head into her mouth Andrew's eyes drifted shut, his head falling back against the chair. Cleo dove for his base, sucking him deep into her mouth. It only took her three strokes before she had taken him all, keeping her head there for a long moment as Andrew gasped.\n\n\"Cleo, fuck...\" Andrew groaned, his hands gripping the armrests. Cleo came up slowly, her tongue lapping rapidly at the underside of his shaft as she slid up to his fat head. Her tongue slowly swiped around it, tasting his flowing precum. Placing one last peck on his throbbing head, she moved back up to his lap. Moving astride his hips, she pressed her hot pussy to his thick, spit soaked cock.\n\n\"Touch me,\" she whispered, pressing her soft body against his hard one. They kissed again, almost desperately, as his hands slid up her thighs to her breasts. He found her nipples hard and pebbled, Cleo gasping quietly as his fat thumbs brushed over them. He quickly tired of the nighty, the lacy fabric was between him and Cleo's body. He pulled one of the shoulder straps down, but the tight top didn't want to go past the swell of her breasts. He pulled harder. \"Careful with your birthday present!\" she laughed, reaching behind her back and releasing the catch, pulling the shoulder straps aside and letting the lacy fabric flutter around her waist.\n\n\"I'll buy you ten more,\" Andrew murmured as he pulled her breasts to his face. He kissed from the inner slope of her breast to her nipple, biting the little morsel lightly. As he nibbled her breast, his hands slid down her sides, cupping her ass in his hands. Cleo smiled, sliding her pussy against his straining cock. Andrew's hands gripped her butt tight before sliding in to tease her pussy and ass. As his fingers slid towards her ass, he froze. \"What's this?\"\n\nCleo's smile was now huge. \"That's your other birthday present.\"\n\nFor his part, Andrew was stunned silent. His fingers felt around the edges of her anus, could feel the plug she had inserted there. \"Let me see it,\" he whispered, his voice gravelly. Cleo bit her lip and stood, the nightly slipping down her thighs to puddle at her feet. She slowly turned and bent slightly, shivering as his large hands slid up her thighs to her plump butt. He could see the base of the small butt plug peaking out between her cheeks. It was pink and had a small pull-ring in the center of it. He toyed with that, feeling how tightly she held it. \"This is for me?\" he asked quietly.\n\n\"Mm-hm,\" she nodded, looking back at him.\n\n\"How long has that been in there?\"\n\nShe laughed. \"For like five minutes.\" She laughed harder. \"Actually, I put it in before the show.\"\n\n\"Oh yeah? That must have been uncomfortable.\"\n\nCleo turned more serious. \"I... I'd been thinking of trying it for a while now. When you play with my ass it... I cum really hard. And I've... I've been playing with this plug for a week or two now.\" She could swear that Andrew's cock grew visibly at her admission.\n\n\"Really?\" he asked, his hand sliding back to the plug. \"What to do you do with it baby?\"\n\nShe locked eyes with him. \"I put it in my ass while I use my rabbit. I don't think I ever came so much in my life.\"\n\n\"Have you ever...\"\n\n\"One guy tried in college... Terribly. But he didn't have your experience.\"\n\n\"Are you suggesting I go around buggering young women?\" Andrew asked, kissing the side of one ass cheek.\n\n\"Every chance you get, I'd imagine,\" Cleo said, smiling as she turned and straddled his lap again. Sliding her pussy against his cock, she lifted up and placed his fat head at her entrance. One long push down, and he was deep inside her flooded pussy. \"Oh fuck,\" she grunted as she felt his thighs against her ass.\n\n\"Jesus,\" Andrew grunted. With the plug in her, she felt much tighter on him, and he gripped her hips tightly, slowing her movements. \"Are you, uh sure you want to... try that?\" he asked. Cleo liked the concern in his voice, nodded as she looked him in the eye, biting her lip sexily.\n\n\"I'm sure. I'm sure I want to feel you in my ass,\" she hissed, grinding her flooding pussy down on to his shaft. \"Oh hell, I've never been this full in my life,\" she gasped, slumping against him. She fucked him slowly like that, dragging her pussy up and down his thick cock. Her nipples, feeling impossibly swollen, dragged against his chest as she fucked him, sending sparks of pleasure directly to her clit.\n\n\"You feel amazing,\" Andrew said, his voice a rumble. Reaching down, he slipped his arms under her thighs, pushing them back against her chest as she continued to bounce against him. Cupping her butt firmly, he began pulling her hips down to his cock, his thick shaft plowing directly to her core.\n\nHer first orgasm came suddenly, blasting out from her pussy as his cock battered against her cervix. She could feel her ass squeezing against the unyielding plug, and the sensation only made her cum harder. Andrew squeezed her tight as she shivered and shook, squealing against his neck, eventually biting down as the pleasure mounted. When it passed, Cleo stayed slumped against him, partially drained.\n\nAndrew lifted her in his arms, moving to the huge bed and laying her upon it. Sitting beside her, he slid a hand along her sweaty belly to her pussy. Her small bush was absolutely soaked with her juices, and his fingers easily explored her slick folds. Cleo moaned, stirring from her post orgasmic stupor.\n\n\"Hey,\" she murmured, as if waking from a short nap. Andrew gasped when she felt him suddenly grip his cock hard. He was slick with her juices, allowing her to easily pump him. \"You're so hard.\"\n\nAndrew laughed. \"You are something else,\" he said quietly. Cleo smiled before gracefully rolling to all fours on the bed. Looking over her shoulder at him, she slowly waved her ass at him. Andrew was stunned at the sight: her slick pussy winking at him between her perfect cheeks, the base of the plug visible above it. As he stood behind her and pulled her hips back to him, a thought occurred to him. \"Hon, I haven't any, uh, lube or anything, I-\"\n\n\"Look in the night table,\" Cleo said, smirking at him. Andrew smiled, opening the drawer and finding the bottle of lube.\n\n\"A young woman who know what she wants,\" Andrew said lightly as he pulled her hips close to his. Cleo gasped in surprise as he pushed back into her slick cunt, his hands gripping her hips tightly. He placed the bottle of lube on the small of her back as he slowly pistoned his cock in her gripping pussy. His hand slipped to the plug, his finger hooking around the ring. As his cock pumped below, he began easing the plug in and out above.\n\n\"Holy fucking... Fuck!\" Cleo grunted, her upper body slumping to the bed. Andrew slowly pulled the plug out, its fattest part spreading her deliciously open. Quickly pouring a stream of lube onto the plug, Andrew began to gently fuck her ass with the plug, the flared fat end of the plug spreading her open again and again. As the lube spread around the plug and in her gripping ass the thrusting became easier.\n\nMeanwhile, Cleo was losing her mind. The twin assault on her ass and pussy was overwhelming her. She had never felt anything like this in her whole life, but she knew that even more was coming.\n\n\"You okay hon?\" Andrew asked quietly, leaning over her. His cock plunged deep into her pussy, drawing out a tortured moan.\n\n\"I'm... I'm okay, I'm okay,\" Cleo gasped, \"I'm just... Oh god I think...\" Cleo couldn't even talk straight, she could already feel another enormous orgasm coiling in her belly. She could feel her juices dripping along her inner thighs, could hear the delightful smacking sound of his hips banging against her butt. \"I think I'm going to... Gonna cum again...\" Andrew smiled, his free hand sliding around her hip to seek out her clit.\n\nCleo's felt something inside her tighten impossibly, her whole body going taut. When her orgasm struck, it was like the crack of a whip, the tightened knot inside her snapping with an explosion of heat and pleasure. Somewhere in the middle of the explosion she felt a new, sudden fullness in her belly that made her collapse against the bed, Andrew following her down.\n\n\"Oh god oh god oh god!\" she grunted, moaning desperately as she gasped for breath. A sudden realization dawned on her: she had a thick cock about halfway up her ass. At some point during her shrieking, reality bending orgasm, he had managed to slip the plug out and replace it with his cock. \"Oh fucking hell, you sneaky fucking... Damn.\"\n\n\"You okay?\" Andrew asked quietly, carefully holding his weight off of her. He was holding back the desperate urge to thrust into her ass, but her tight heat was driving him mad.\n\n\"I think... I think I'm okay,\" Cleo said cautiously, rolling her hips experimentally. Squeezing, she was pleased to hear Andrew grunt. Andrew slowly began rocking his hips, shallowly thrusting into her gripping ass. \"It doesn't hurt, it just feels... Big.\"\n\n\"Baby, hell,\" Andrew groaned. Her ass was a gripping, slick furnace on his cock, and Andrew had to grip her hips to stop her twisting, teasing motions. He slowly began fucking her ass, slowly easing more of his thick shaft into her gripping hole. With each press in, he pressed a fraction of an inch deeper. With each gain into her gripping ass, Cleo would moan or squeal anew.\n\n\"Oh hell, you are fucking me in the ass, fuck!\" Cleo said in amazement. She'd never felt anything like it. There was the fullness of fucking, feeling his thick cock pounding into her, but at the same time she was acutely aware that her pussy was empty, her thighs slick with her juices. \"Andrew, I think, I think I can cum like this,\" Cleo said in a faraway, half-amazed voice.\n\n\"Sure you can baby,\" Andrew said laughing. As he began fucking her in earnest, Cleo's strength left her and she slid down till she was lying flat on the bed. Andrew followed her, his hips pressed tight to her ass. Cleo gasped as he ground her against he mattress. Cleo clawed at the quilt, her pussy streaming onto the comforter.\n\n\"F-faster,\" Cleo gasped, \"fuck me fast, fuck my ass faster!\" Andrew's hips picked up speed, his shaft plundering her ass repeatedly. Cleo could feel the knot forming in her tummy again, and she was desperate to bring Andrew off at the same time. She began thrusting her hips up against him. She could feel his hips hitting her ass and knew she had taken all of him. \"Oh fuck you are so fucking deep in me...\" she groaned.\n\nAndrew could only moan quietly in response. He was nearly at the end of his rope, but he was desperate to hold off until she came. He slid one hand forward and took hers, gripping her hand tightly as he pounded into her, grinding his cock deep in her ass. \"Oh honey, fuck, you beautiful goddess...\" he groaned, thrusting his cock deep, grinding, then thrusting some more.\n\nThe knot was tightening, growing in her belly. Only this one was tighter, and bigger, and it started somewhere in her middle. She felt it pulse once, twice, then gasped as it rushed to her head. \"Oh god, I'm cumming, I'm cumming, I'm...\" she drifted off as it exploded, her whole body shivering. She could feel her ass clamp down on Andrew's thrusting cock as her pussy gripped at nothing. \"I'm cumming with you in my ass...\"\n\n\"Cleo, love,\" Andrew groaned as he felt his ass gripping at him, squeezing so he could barely move. Feeling her cum on his cock, hearing her cries of passion, and Andrew felt his own cock swell as he exploded into her gripping butt.\n\n\"Uh! Oh fuck, I can feel you shooting in me! It's so hot in my ass, I love it, I love it oh my god,\" Cleo screamed as she shivered underneath him, squeezing tight as Andrew's cock throbbed repeatedly in her tight hole, pumping stream after stream of cum into her. They shivered against each other for what felt like hours, Cleo's cries mixing with Andrew's grunted curses. As she felt Andrew crumple against her, she reached back, pulling his head down to kiss him deeply. \"Jesus... I've never felt anything like that before in my life baby.\"\n\n\"Me... Me neither. God girl, what are you doing to me?\" Andrew asked, his voice ragged. Andrew managed to shakily lift himself off of her, gently pulling his softening cock from her ass. She groaned as he pulled out of her, gasping in pain as he pulled his still fat cockhead from her ass. \"Easy hon, just lay there.\" Andrew went quickly to the bathroom, returning shortly with a hot, wet towel. As he tended to her, he gently kissed the small of her back, teasing the little dimples she had there. \"You okay baby?\"\n\n\"Hm? Yeah, yeah... I'm fine,\" Cleo said sleepily, sprawled across the bed like a rag doll. Andrew returned to the bathroom and quickly cleaned himself up. When he returned, he found Cleo very asleep, her breathing deep and even. He glanced at the clock, saw that it was a few minutes after midnight.\n\n\"Happy birthday to me, indeed,\" Andrew said quietly.\n\n~~~~~~~~~~~~~~~\n\nCleo awoke the next morning feeling amazingly rested, like she had been sleeping for weeks. She reached over for Andrew, finding only a warm patch on the bed. Looking around sleepily, she saw him sitting by the window, looking out the window thoughtfully. He turned and noticed her watching him and smiled.",
        "\"Hey babe,\" he said, joining her on the bed.\n\n\"Hey... How long have I been out?\" she asked, sitting up slowly. She grimaced slightly, turned so she wasn't sitting on her butt.\n\n\"You fell asleep right uh, after,\" he said, his hand rubbing along her thigh. \"You okay?\"\n\n\"Just a little tender,\" she explained, patting her butt. \"Sorry I, uh, passed out on you.\"\n\nAndrew smiled, shushing her. \"It's alright, it seemed to take a lot out of you. I... I wanted to thank you for yesterday. Nicest birthday I ever had, I think.\"\n\n\"Really? I mean you've had so many,\" she said, arching an eyebrow at him. Andrew grinned at her teasing, sliding close for a kiss. \"But you're welcome. Thank you, too.\"\n\n\"What for?\"\n\n\"Best night of sex ever, I think,\" she said honestly, laughing.\n\n\"Really? I mean you've had so many,\" Andrew responded, grinning. Cleo shook her head in mock disgust. \"But you're welcome too. It was my pleasure.\"\n\nCleo smiled. \"I bet.\" She glanced at the clock and was surprised at the time. \"Shit I didn't realize how late it was. I've got to get going,\" she said, slipping out of bed and heading to the bathroom. Andrew stayed in bed, smiling as he watched her pert bottom retreating. \"What time's your flight?\" she called as she stepped into the shower.\n\n\"One o'clock, so I still have a few hours,\" Andrew said absently. As he listened to the sounds of her showering, he thought about this young woman who had bewitched him so. Smart, to the point of being a bit of a smart ass, funny, gorgeous, deeply sexual... He'd never met anyone quite like her before. If he had met Cleo at a bar or a party, he would have pursued her like nothing else. But he hadn't. He'd hired her... And he would keep hiring her, he knew. He shook his head, feeling like a love-struck schoolboy. As she emerged from the bathroom drying off, he shook his head. \"There are worse ways to be,\" he murmured to himself.\n\n\"Huh?\" Cleo asked as she dried her hair.\n\n\"Nothing,\" he said, smiling. \"Got plans for the day?\"\n\n\"Not a thing,\" she said, wrapping her head in the towel and drying her nude body. \"Had a full enough day yesterday. I think I'll just laze about...\" she drifted off, noticing the way Andrew was looking at her nude body. Just that, just that look was enough to get her pussy flowing.\n\nNo, she thought, stop. You were supposed to have been out of here a half-hour ago. You've got to get going, cash the check and move on. This is a job, not a date. Not a fantastic date that featured some of the dirtiest, best fucking sex I've ever had in my life. So just get dressed, say goodbye and go home... And masturbate thinking about his cock pounding your ass.\n\n\"Andrew, I've...\" she started.\n\n\"God you're gorgeous,\" he said quietly, staring at her body. Cleo smiled shyly, quickly getting dressed.\n\n\"I've got to get going,\" she said as she slipped her dress back on and quickly packed up. She tried not to look at Andrew, because she felt like he'd be able to get her going with a look. She didn't turn around again until she was ready to go. \"Alright! I'm off.\"\n\n\"You should put shoes on hon,\" Andrew said, smiling at her discomfort. Cleo frowned and went to pull her shoes on, only to have Andrew bring her her bag at the door. \"I can't thank you enough for this... It really was the nicest birthday I could have imagined.\" He kissed her softly. \"Thank you.\"\n\n\"It was my pleasure,\" she said softly, kissing him again. \"Really. When will I see you again?\" she asked as she opened the door to the hallway.\n\n\"Soon,\" Andrew said, smiling, \"real soon.\"\n\n~~~~~~~~~~~~~\n\n\"Adelle's, Cleo speaking, how may I help you?\"\n\n\"Hello Cleo,\" Andrew said, surprising her. It had only been a few days since his birthday. \"I'd like to make a booking. June 18<sup>th</sup>.\" Cleo snapped straight. \"Is that alright?\"\n\n\"Mr. Dunn that's...\" She glanced at Adelle, saw she was on the phone, distracted by something on her screen. \"That's my birthday.\"\n\n\"I know. You told me,\" he said lightly. \"I don't want to interrupt any of your plans or anything,\" he quickly explained, \"I'd just like to see you that night. Come to my room whenever you can. Book it as an overnight, I don't mind.\"\n\n\"I uh...\" At the other desk, Adelle hung up her phone and glanced at her. \"Not a problem, sir. We'll call to confirm,\" she said automatically, putting the booking in the computer. Thinking quickly, she booked it for the day before, the 17<sup>th</sup>.\n\n\"Thank you Cleo,\" he said, very pleased with himself.\n\n\"Not a problem sir, have a nice day,\" she said as she hung up. \"Sneaky goddamn bastard,\" she muttered to herself, a smile already curling her lips."
    ],
    "authorname": "svenjolly",
    "tags": [
        "whore",
        "prostitute",
        "blowjob",
        "oral sex",
        "anal sex",
        "straight sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/adelles-girls-cleo-ch-02"
}