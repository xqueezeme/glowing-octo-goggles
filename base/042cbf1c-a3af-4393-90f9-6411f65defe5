{
    "title": "Cam's Justice",
    "pages": [
        "So, book two for Cam, this one's a bit longer, sixty-five K words or so. No great surprises in format from book one, still a straight harem without polyamory. Cam doesn't share, selfish bastard, not even between his ladies. Just a quick thanks for everyone leaving comments, I appreciate the feedback. The pacing of my writing can be a little fast, some like it, some don't. I tried to slow it in places here, but don't expect a huge change there. My repeats are mostly about keeping the harem straight in your mind, not about characterization at all, but to remind you about previous characterization scenes.\n\nAs far as sex scenes, I keep it to the pace, they can't all be long and drawn out, or it would bog down the story, in my opinion. Just saying, fade scenes and short scenes have their place, just like the long ones.\n\nEnjoy! Book three is being worked on. \n\n-Magicwrtr\n\nCam's Justice\n\nCambion Chronicles: Book Two\n\nCopyright 2018. This is a work of fiction. Names, Characters, Places and incidents are either products of the author's imagination or used fictitiously. Any resemblance to actual events, locales or persons living or dead, is entirely coincidental. All rights reserved. No part of this book may be used or reproduced in any manner whatsoever without permission.\n\nChapter One\n\nThe hot sun burned overhead, and it reflected off the white stones of the massive castle as we walked through the arch underneath the portcullis and into the castle courtyard.\n\nIt'd been two weeks since I immolated the old kiss's master in shadowy hellfire, and Niri had taken his spot. We still stayed at the Lady Unicorn Inn and Tavern in the middle-class section of Mythfall, but we had hopes that would change soon. \n\nLysa had kept her word, and visited me every morning to join my bed, share pleasure, and so I could harvest her soul for energy. It was that energy of course, that powered my half-demon talents as the son of an incubus. Our alliance with Lysa's vampire kiss had also born other fruit, as we'd just been admitted to the most closely guarded part of the city, where the royal family lived and ruled. It was very odd for anyone other than a noble or castle servant to be admitted.\n\nThe nobles handled the general population, through the government offices and buildings in the government district of the city. Shit rolled down hill, and we normally wouldn't be important enough to warrant such an honor, except my Cassia had been studying hard the last two weeks and a had a handle on a number of new spells in addition to the wards, spells that made her far more formidable than when I'd first met her.\n\nWitch magic was dependent on both understanding nature, and knowledge of arcane words and spells. Her understanding had far exceeded her knowledge that way, and she was learning the spells quickly in those books. My own training proceeded apace as well, but outside of stronger witch shields, and the ability to heal myself of various ailments and wounds, hadn't changed all that much. \n\nWitch magic was all about nature, and casting spells was all about the balance in nature, shifting it to accomplish a goal. My demon magic, and sorcery, was more evoking magic and unnatural in nature, pulling the power from other realms of existence.\n\nI still wasn't ready to extend my witch power outward, to start to understand the nature of the world outside my body, but between my sword, throwing daggers, and my demon magic I was more than set on the offensive front.\n\nLysa may have only come by an hour or two a day, but my two lovely mates were by my side almost constantly, a part of that was my overprotective and possessive nature, the other part was they didn't like being away from me either. Our sex lives hadn't cooled one iota either, they were as insatiable as I was, though I wondered at times if that was because of my demon nature's influence on them.\n\nEither way, they weren't complaining.\n\nCassia was a vision that morning. Her long reddish-brown chestnut hair hung like a shimmering silk curtain down her shapely body, and her warm brown eyes had a look of commanding determination in them, but they slightly warmed when she caught my admiring sideways gaze. Her heart shaped face had the soft beauty of the girl next door, and she had full lips and an adorable nose, lending her a slight aura of innocence with her young nubile nineteen-year-old complexion when at rest. Of course, her wise ass smirks often put that innocence to lie. Perversely, her voice did the opposite, her sweet dulcet and innocent tones were a part of her naturally speaking voice.\n\nIf her face and voice was innocent, her sumptuous body was pure sin. She was five foot five, with firm and bountiful rounded D cup breasts, a thin waist, and a heart shaped ass to die for. She'd only become sexier, when I'd inadvertently sculpted her flesh that first time that I'd made love to her with my mouth. Not much had changed there, I'd only removed a little of the extra, making her already sinful curves even sharper and more mouthwatering, she didn't have an ounce of extra fat on her generous curves. \n\nTo top it off, she was in a lovely dress just elaborate enough to fit in, but not elaborate enough to offend a noble. It was a dark blue multilayered affair, that mostly hid those sinful assets of hers, but still hinted at them enough to be incredibly alluring.\n\nFaith walked on my other side. She was petite at five foot two, and she was my exotically beautiful sexpot. She had long and wavy bright red hair that matched the fur of her shifted fox form, and her eyes were a startling light brown ochre color, that seemed lit from within. Besides being a shifter, she was also a half-elf, which is where the exotic mischievous beauty of her face came in. She had slightly pointed ears, a thin face, with a button nose and those ochre eyes, she was just breathtakingly and exotically beautiful above the neck. Just to add to that, my Faith's voice was naturally seductive and sultry, a bedroom voice by default unless she worked at putting another emotion into it.\n\nMy Faith also had a body built for sin, she was shorter and more petite, so the generous C cups that stood up firmly and pertly looked even bigger on her frame proportionally than Cassia's. She had a mouthwateringly thin waist, sensually rounded hips, and the sexiest most petite bubbled ass I'd ever seen. She had fair skin, and the lightest pink nipples I'd ever seen which drove me crazy. Fortunately, at the moment they were covered up by a similarly elaborate dress to Cassia's, but in green instead of dark blue.\n\nTheir personalities were as different as their looks, my Cassia did dote on me, but she was far more independent of mind and enjoyed teasing me with wise ass comments and observations. She loved to be taken in bed and cherished, but she also loved to be on top. \n\nFaith on the other hand, saw me as her alpha male, and she submitted to me in all things. I wasn't a petty man, and wouldn't take advantage, but she happily put every aspect of life in my hands, small or large, and it was my job to protect and cherish her, even as she served and obeyed me. If anything, my overprotective and possessiveness turned Faith on. \n\nTo be clear, her submissiveness wasn't an invitation to abuse her in any way, shape, or form, it was an invitation to take care of and cherish her, and never to be seen as less, lowered, or shamed in any way. She was beyond precious to me, and I loved her as deliriously as I loved my sweet witch. She also didn't mind being on top in bed, but only if I told her to, she'd never dream of doing it on her own, which is why I'd given her blanket permission to wake me up that way.\n\nLysa, the third woman in my coterie, wasn't with us just then, but she was never far from my thoughts. I hadn't planned it that way, but she was just as different as the other two. Her remarkable and stunning beauty was more classical and had the look of nobility with her high cheekbones. Her beauty looked as if it might actually be aristocratic, and she had lovely light blue eyes and golden blonde hair that glinted in the sunlight like spun silken golden ringlets. \n\nShe was tallest at five foot eight, and she had a lissome supple dancer's body that was extremely flexible. She had pert and proud B cups, and her skin was lightly tanned, a few shades lighter than Cassia's and a few shades darker than my fair half-elf. She also had a tight ass, and mouthwateringly long and toned legs.\n\nWe'd grown a bit closer the last two weeks with her morning visits. Out in public she was a lady, even slightly arrogant and held herself with an assumed authority, it looked good on her. In private she was somewhat of a kinky woman, and she preferred to be treated as my sex toy. She liked to be shamed, the embarrassment and shame of being called names, and being ordered to do dirty things with filthy words, drove her wild. It was her kink, and I didn't think less of her for it, it was a time for her to be free and let everything go.\n\nShe'd also told me we could never be mates, that she was too independent and old to get tied down in a romance, despite looking eighteen she was truly over two centuries a vampire. She was in my coterie but as a distant ally, and for the purpose of allowing me to harvest her soul daily for my personal energy. Of course, she got the best sex of her life out of the deal, who and what I was guaranteed that, and she was more than eager for our daily morning rendezvous. We'd just come from one of those, actually.\n\nI preferred the closeness of my two mates, the intimacy, but it seemed to be working out just fine so far. Thing was, I was definitely becoming fonder of her as time went on, and as we'd spent more time together, which was a future complication I'd have to deal with at some point. She was never far from my thoughts. Between the shallow closeness generated from the great sex, and my young and possessive personality, I feared the itch in the back of my mind at her lack of presence would grow over time.\n\nIt was what it was.\n\nWe crossed the large courtyard, and was met the door by a young page, who bowed to us despite the fact we weren't nobility at all. He was dressed in a red uniform with yellow accents, and he couldn't have been older than fourteen.\n\n\"Follow me please, I'll take you to your appointment with the Seneschal.\"\n\nThe seneschal from what we had learned, was the man who scheduled the king's day and did a million other things around the castle to make sure it all ran smoothly. He was also a noble in his own right, Duke Andrew, and cousin to King Richard.\n\nHe'd be the one we'd have to convince of our trustworthiness, in replacing the Eternal Rose coven in maintaining the wards. Which, I imagine were probably breaking down by then, according to the book they should be maintained weekly, which took a few hours a week, and it'd been over two weeks since the Eternal Rose coven had met its end.\n\nReally, that was a great thing, if we could generate our coin and wealth from working just a few hours a week, we could focus on building the coterie, tasks for our coterie members and allies, and starting a family and other aspects of our personal lives. In essence, working on our political and temporal power base, instead of working to put food on the table. The majority of our efforts and time could be spent on that. \n\nLast, but not least in my sex-obsessed half-demon mind, was that there'd be plenty of time to set each other on fire between the sheets. I may have only fed on Cassia and Lysa once a day, and on my fox shifter twice because of Faith's faster recovery time, but we had sex far more often than that. Two to three times a day, several rounds each time, more than that if we had nothing else to do on that day besides train and study. I just needed to suppress the feeding power during those extra times.\n\nIt was an ideal situation in that way, on many levels, but it would also come with risks and costs that would force us to remain forever vigilant. Of course, merely rubbing elbows with royalty had its pluses and downsides, we'd be shielded from the rest of the nobility, but we'd also be extremely visible to the power structure in the city. It would also reveal who had the tomes of knowledge, which would especially be of interest to the other covens in the city, who would covet that knowledge.\n\nPerhaps to the risk of our lives. \n\nStill, we were more powerful than they were, thanks to me and now Cassia's familiarity with some of the more potent attack spells, we should be fine if we stay vigilant, and didn't drop our guard at the wrong moment.\n\nLastly, the royal family itself would be as dangerous as they would be a boon. If we ever let them down, they could turn the entire city against us with a single command. Still, worth the risk, given all the benefits to such an arrangement, not least of which was all that time I mentioned.\n\nThe page led us through several hallways near the front of the castle, which was the public part. By public, I meant freely accessible to the other nobility, not the merchants and peasants of the kingdom. It was honestly a little overwhelming, the hallways were wide, the ceilings high, and there were paintings, carvings, statues, tapestries, and even flower arrangements. Outside of that, even just the walls had an intricate and beautiful carving that ran along the base and apex of the walls, making the building itself a work of art.\n\nIt was... way out of the league of a farm boy, and I felt a little out of place. Of course, the powerful half demon magic and witch abilities gave me confidence, but it'd been only about three weeks since my birthday, and I wasn't quite accustomed to it yet, or my new life. The only thing I wore honestly, was my ability as a master swordsman, which I'd earned over the last fifteen years of my life. Still, I was confident enough to hold myself correctly, and fake it until I made it.\n\nWell, that and the knowledge I was the best fuck in the kingdom, that confidence was honest as well, but that knowledge didn't help me in that situation.\n\nWe were led to a closed door, and the page knocked. At the voice directing us to enter, he opened the door, and closed it back up after we'd gone through. I suspected he'd be out there when it came time to leave, we'd have been able to find our own way out, but I didn't imagine they'd be comfortable letting us roam around without an escort.\n\nThe room was a small office, and a large man with a graying mustache and brown hair sat behind a large wood desk. Behind him was a bookshelf loaded with books, and the desk was a little cluttered with papers and objects. Before the desk was a few chairs, and there was a throw rug that covered all but a foot or so of stone floor around the walls.\n\nThe seneschal measured us for a moment with his eyes, then waved at the seats.\n\n\"I am Duke Andrew, the next time you walk into a room with a noble in it, that you are specifically meeting with in private, you need to bow. In public among many there is no need, but keep it mind. My cousin wouldn't be so forgiving, but I know you aren't used to the ways of nobility.\"\n\nHe frowned, \"You have acquired the knowledge that the Immortal Rose Coven once had?\"\n\n\"Yes. Although, we're not sure which wards are involved yet. No one seems to know that.\"\n\nAndrew grunted, \"Let's speak plainly, what happened to the coven?\"\n\nWe'd discussed that possibility, and we'd decided it would be too dangerous to lie. \n\n\"They tried to sacrifice me and steal my life, to extend their own, and they lost the argument. I killed them in self-defense, with their assistance,\" I waved toward my ladies.\n\nHe waved his hand in a come-on gesture, \"Details.\"\n\nOutside of telling him I was half demon, I gave him an accurate accounting of the week following my eighteenth birthday, with Faith and Cassia adding details as appropriate.\n\nHe asked questions, not just about that but about our lives, ambitions, and morals. \n\nHe nodded, \"The job is not nearly as important as the secret I must reveal for you to do the job. I believe you, the Eternal Rose coven had fallen far in their mores over the millennia, but we had no other choice but to deal with them. I believe you can be trusted, but I'll have your oaths on it before we go any further.\"\n\n\"How can you be so sure?\"\n\nHe laughed, \"That's part of the secret, an oath?\"\n\nWe all exchanged glances, and I swore, \"I will not reveal the secret to anyone, nor talk about it outside this room except if needed to, to do our job.\"\n\nHe nodded, \"Sufficient,\" and he looked at Cassia, and then Faith as they gave the same oaths.\n\nHe cleared his throat, \"I can be sure, because I can't be lied to, not without detecting the deception on the very air. The royal family, are sorcerers.\"\n\nMy brain shut down, how was that even possible? The nobility hated the other races, not all of them, but enough of them. Then my brain caught up, none of the nobility knew the truth, they thought the king was human.\n\nI laughed.\n\nAndrew said, \"It was thousands of years ago, after the great war, but while the land and peoples were still torn apart. We'd lost a lot of our knowledge, but us sorcerers could still influence humans including the nobles. We, took power, under the guise of being humans, and we've worked to minimize the bigotry, or at least the cruelty, of the human nobility towards the other races. \n\n\"Obviously, we could only do so much, even we can't eradicate the dark places in a human's heart. It's also why we came up with the current system, there are no magical races capable of detecting the truth, inside the nobility, and they are the only ones who ever see us. If the truth got out, even to the servants in the castle, there'd be civil war and the kingdom would come toppling down.\n\n\"Regardless, those thousands of years ago we made a deal with the Eternal Rose coven, to keep us and our family in power. Believe it or not, back then they were just as... idealistic, as you are now. Time, power, and the lure of eternal life corrupted them. They should have trained their replacements, much as we train and raise our children to rule, once we pass. Point is, this is all well, and the king will be pleased with my report.\"\n\nHe paused for a second.\n\n\"The rest of it, the reason for the ward, is that the sorcerer families in the Spire of Abyxis close to this castle are well aware of who we really are. They are... politically inconvenient, and they've resented our ascension to power since the founding of the kingdom. They've tried to replace us many times over the centuries, but quietly, they know if the truth got out their hopes of ruling in our place would be overturned.\"\n\nI frowned, \"How would that even work, wouldn't it be obvious?\"\n\nHe shook his head, \"Not with a sorcerer's power of influence, it would be child's play to convince the nobles the primary line of the king had died in some accident, and they were royal cousins. They are in their tower, and keep to themselves, I doubt anyone in the aristocracy could even describe one of them. The nobility avoids and ignores the other races, as long as they stay out of sight. Plainly speaking, they're jealous, and very much think it should be their turn.\"\n\nThat seemed petty and stupid, but ambitious people wanted power, and I supposed it wasn't all that impossible to believe, it was even likely.\n\nCassia tilted her head, \"A planes ward?\"\n\nAndrew laughed, \"Very good. Of course, you'll be provided with the blood of the royal family while casting and under watch, so you can add us as an exception.\"\n\nPlanes ward?\n\nCassia looked at me and said, \"I've already told you sorcerers pull their power from the planes of the elements, not our natural world, they invoke their magic and pull it here, so it isn't natural or balanced. Well, a planes ward is like a barrier, that they can't reach through into the elemental planes to invoke their power, or at least it would dim the connection and make them a lot weaker. Their blood would be like a key to the ward, and it'd allow the royal family to have normal access. It would make a coup attempt impossible, no other sorcerer would be able to match them on castle grounds, nor would they be able to draw enough power to bamboozle the guards or servants.\"",
        "Andrew said, \"Just so. Do you need time, or is this something you can do now? The timing is getting rather critical.\"\n\nCassia said, \"I can do it, it's actually one of the easier wards, to be truthful. It's just time consuming.\"\n\nAndrew nodded, \"Good, the only other task is to be on call for healing, just for the royal family. The coven also provided those services.\"\n\nWe all nodded, \"Remuneration?\"\n\nHe said, \"Thirty gold a month, for the service and silence. We'll also advance the gold you need for a residence in the upper-class district and for a proper wardrobe, we can't have the king's favored coven living at the Inn looking like peasants.\"\n\nI nodded, that was... a fortune. I also didn't take offense at his description, since that's pretty much how we were living, and did look.\n\nCassia asked, \"The spell ward should have a base, to charge all the wards that surrounds the castle?\"\n\nAndrew nodded, \"In the royal gardens, carved around the base of the statue of the first king of Cyrene.\"\n\nHe opened the top drawer of the desk and pulled out a vial of blood, and then we left the room and headed deeper into the palace...\n\n\u2003\n\nChapter Two\n\nThere were several hallway doors we passed through, and many of them had guards posted, as we moved toward the rear of the castle and had obviously gone beyond the public spaces. When we walked out of a relatively small and un-adorned door into the outside, we were suddenly surrounded by flowers, small bushes that seemed at the height of flowering, and there were even a few small rows of trees I could see farther out that had purple, yellow, and pink buds on them.\n\nWe passed a row that had nothing but roses of several varieties, when something else caught my eye, or perhaps I should say someone. Someone who was on her knees and tending to one of the beds of roses.\n\nShe had shiny black gently curly hair that was up in a rude bun. Her hair stuck out in several places, and several loose strands were stuck to the sweat on her cheeks and neck. She'd obviously been working hard through the morning, the red and white dress looked more functional than flattering, and made me guess she was probably the gardener, or one of them. She was a bit of a mess actually, the dress was soaked in a few places, and stuck to her skin in alluring ways.\n\nDespite that, she was one of the loveliest women I'd ever laid eyes on. Her face in profile was stunningly angelic in beauty, soft, with high and small cheekbones. Her skin was a lovely and creamy shade of light brown, and the sweat on her neck just made the alluring soft curve of her neck and shoulders stand out in the glistening light of the sun. Her lips were full, slightly bowed giving the bottom lip a slight pouty look. \n\nHer body was voluptuously waspish, she was as sumptuous as my mates, with D sized breasts, and with a juicy rounded ass that couldn't possibly fail to draw my eyes. My ladies were more toned and had sharper curves, but she was far from overweight, she had a few extra pounds, but they were all in the right places, giving her a ripe and soft full figure that was mouthwatering.\n\nAt a guess, she'd be about five foot seven if she stood up, and when she turned her head at the sound of our passage, I saw a startled look in her vivid dark blue eyes as she looked up into my face, which I imagined was filled with openly frank regard. In short, she totally busted me checking her out. Being rather confident, I gave her a wink that made her roll her eyes but also put a smile on her face, before I faced forward again and followed Andrew several more rows out before we made a left.\n\nI could also feel Faith's amusement, no doubt she'd detected my surge of interest back there. Or perhaps, more than a surge, because my mind continued to linger on those curves, and her stunningly beautiful face. If that's what she looked like covered in sweat with no makeup, I couldn't even imagine how exquisite she'd look in a fancy dress and makeup.\n\nThe garden was vast, and we went another fifty feet or so before we stopped at a rather thick and secluded part of the garden that contained a marble statue of the first king, surrounded by walls of blooming and rather tall bushes.\n\nAndrew handed the vial to Cassia.\n\n\"This is the royal only section of the palace, and the guards will stop you if you try to look around. I know this will take a while, and I have work elsewhere,\" he looked at me and Faith, \"You can look around the garden if you wish, while Cassia takes care of the ward, but do not attempt to leave it.\"\n\nI nodded, \"We understand.\"\n\nAndrew looked at Cassia, \"This is perhaps rude, but it may help to prevent misunderstandings that would be rather dire in nature. We want this partnership to work. We are very careful about what happens to our blood, I'd advise against trying to take any you have left with you when you're finished.\"\n\nCassia nodded politely, \"I understand, you really don't want a witch walking off with your blood.\"\n\nAndrew laughed just as politely, \"Very well, I'll leave you to it. If you're finished before I get back, just move back to the door we came out of, and someone will notice and call for me to escort you back out.\"\n\nAt that, the seneschal turned and left us to our own devices. \n\n\"So, how does this work exactly?\"\n\nCassia said, \"Nature, always nature as a witch. The natural world, our world, has barriers to separate us from other realms and dimensions. A sorcerer draws power by ripping a hole in the natural world, and by drawing their unnatural to this world power from the four elemental planes. The ward is much like a shield, it preserves the natural order, which is to have a barrier.\n\n\"There's even a temporary spell in the tomes, to temporarily shield a sorcerer to grabbing their power. This ward, or shield if you prefer, is of course much bigger, and it's defined by magic imbued into the stones and ward devices that surround the castle area. This statue is like a nexus, all the separate wards and magic is connected as one shield, so I need to recast it here at the nexus, which will in return reapply the magic in all the surrounding wards.\n\n\"That's about as basic as I can get with the explanation, and in truth it's much more complicated than that. You won't be ready to help me with it for a couple of years.\"\n\nI nodded, \"Fair enough, I sort of get it though, if not exactly how.\"\n\nShe smirked, \"If you get bored, you can always go check out the roses.\"\n\nFaith giggled, and I could feel both her amusement and her love for me spike.\n\n\"So, you noticed that, did you?\"\n\nCassia grinned, \"I am a witch, did you forget? Plus, I always have a magical eye on you, my mate. I also don't have a problem with it, I'm just teasing. I'll be safe enough in the heart of the palace, with Faith to look over me, if you want to take your chances.\"\n\nOuch. Teasing wench.\n\n\"Are you saying I'm underfoot?\"\n\nCassia's lips twitched, but there was as much apology in her eyes as there was amusement, \"I'd never say that, my mate. I just know who my mate is, and no woman has caught your eye like that since Lysa. You normally don't even notice them panting over you, with the two of us present.\"\n\nThat was true enough, I usually focused my insane libido on my mates, and the coterie, not random woman that wouldn't make a good fit. Plus, my mates continuously drew and caught my eye, I loved them after all. \n\nI didn't judge anyone for what they did, but in truth I was looking for more woman of power, not merchants, servants, or... gardeners. My coterie had value beyond merely feeding my personal power through sexual relations. Still, we had three hours to kill, and we'd be doing this every week, so why the hell not? I'd still get energy, and perhaps have a delightful time.\n\nI knew that sounded horrible and shallow, but I truly wouldn't bed the woman if she was less than attractive on the inside, not just for a hot body and a pretty face. It might also have been a bit arrogant, and I knew she got a choice too, but I had certain advantages when it came to wooing woman into my arms, and my bed. There was also the small matter of only getting to see her once a week, I wasn't sure if she or I would go for that, assuming she went for anything at all. No woman had ever said no to me, but I was sure there'd be one... eventually.\n\nThere was of course, also the risk of the king catching me fucking one of his gardeners among the flowers if he decided to take his lady queen for a walk in their private garden. Although, that risk was low, I doubted he'd come out here while the privacy of his garden was invaded by witches, and a sexy as hell shifter.\n\nI let it swirl inside my mind, while I watched Cassia carefully pry open the vial of blood, and then start to dab drops of it in certain places among the carved witch runes on the statue's base. I knew that was a way for the shield to know who to let access the other planes without interference, the blood must've been a mixture of the entire royal family, but I had no idea how, and I didn't want to distract Cassia with more questions. It'd already take the entire morning, about three hours, and I didn't want to extend that even further, or worse, distract her at the wrong moment. For all I knew she was already casting, and she had a secondary key thought in her head related to the blood. Witchcraft wasn't easy, or even safe.\n\nFaith gave me another amused look, and I just rolled my eyes and let out a silent sigh, then I started to retrace my steps. My shifter mate was right of course, I was just wasting time, I already knew I wanted her, I'd wanted her from the first moment I'd seen her alluringly perfect and creamy light brown complexion glistening in the sunlight.\n\nIt only took me a minute or so, and the lovely gardener was in the exact same place, or so it seemed to me. I approached her down the aisle, and I saw her look up a bit warily, but she didn't look afraid. I stopped a good ten feet away from her, she was on her knees and at an obvious disadvantage, I didn't want to intimidate or loom over her at all, and that was close enough for my pheromones to make themselves known. It wouldn't get her in bed, but it might make her more open to the idea of at least talking to me in these opening moves of the dance, so to speak.\n\n\"Good morning. I'm Cam,\" I said politely, while looking into those startlingly vivid dark blue eyes, that seemed familiar to me for some reason. I held them for a second or two too long, then looked at the rose bed at her knees.\n\nShe asked coolly, \"What are you doing here, exactly?\"\n\nI gave her my best smile, \"We're the new coven fixing the wards, though my mate Cassia is the only one familiar enough with the complexities at this point to make that happen.\"\n\nNot that we even had a coven name, and the whole idea of a coven of just two witches made the designation further suspect, but it made sense to present ourselves that way, to hide the other half of my heritage.\n\nShe tilted her head, \"My...\" she trailed off for some reason I couldn't discern, and looked up into my eyes, then said, \"I'm Tammy, and this place is my passion. I wasn't told that was happening today, or you wouldn't have seen me. Your mate?\" she asked in a tone clearly wondering what I was doing there, talking to her.\n\nI nodded. Perhaps it was a bit odd to start a seduction by dropping the fact I had a mate, but sneaking around felt wrong, if this had any chance of working beyond once, to start a true affair of sorts, she needed to know the truth of things. I may have been somewhat of a slut with my libido, but I wasn't an asshole. Even the former wasn't quite true, I was quite selective, and Tammy was only the fourth woman to draw my serious interest in the last three weeks.\n\n\"Both of them actually, my other mate watches over her while she casts. My relationship requirements are rather, unique, and they're not jealous women.\"\n\nShe looked somewhere between shocked, amused, and indignant, though it was also clear my looks, pheromones, and confident voice was already having an effect on her state. She was attracted to me, that was clear enough. \n\n\"So, you're here talking to me because?\"\n\nI replied, \"I didn't want to be a distraction back there. I'd hoped we could talk, and I will admit your beauty did catch my eye on the walk out here. You work in the garden long?\"\n\nShe looked startled for a second by that question, then for some reason I couldn't discern, she smiled mysteriously and stood up.\n\n\"You could say that, since I could walk. The position is... hereditary to a certain extent, my mother worked the gardens before me.\"\n\nThere was amusement there again, and I had no idea why, but I was dying to find out. She had a cultured voice that was quite pleasant, and a calm confidence that said she belonged among the flowers and I was the trespasser in her domain. Of course, her aplomb wasn't all that much of a surprise, I imagined the castle servants were a cut above those found elsewhere.\n\nI took a step forward, and held out my hand, \"It's nice to meet you, Tammy.\"\n\nShe looked startled again, at my gesture, but then bemused as she stepped forward and put her hand in mine. I lifted it slowly without gripping, so she could easily abort if she wished, and then gently kissed the back of her hands, with dry lips and a light stroke. Her feminine scent was lovely, even the sweat added to its allure, and her skin tasted delicious on my lips. She may have been sweaty, and a little covered in soil, but she was clean.\n\nOf course, I also saw double, as the vision of her greatest sexual fantasy played in my head, which was the true point of the gallant gesture of greeting. The vision raced through my head as I slowly released her hand.\n\nShe was dressed in a simple thin cotton dress that was quite alluring, and I was unsurprised to see it was white and covered by flowers, a reminder perhaps and a way of putting her passion of flowers into her fantasy, in her mind. There was an intimate dinner table for two, candlelight, and a faceless man sat across from her and was totally smitten with her looks, body, and their shared words. It moved on from there, to quite a passionate claiming, and at the end they were cuddled up and he held and cherished her. \n\nA lot of that was my interpretation, based on the emotions and longings I felt from her. In short, she wanted to be seen for the lovely woman she was, not what she did or her station in life. She wanted a man that saw her, not the trappings of her life, and that included her body and sex appeal. She wanted to be irresistible to a man, from the shallow attraction of her nubile sexy body, to the thoughts in her head, and the emotions in her heart. Nothing less, and nothing more than all she was.\n\nShe was a stunning woman, and I thought that sexual fantasy odd, what man wouldn't see her for her obvious charms, but then I considered her working in the castle. I imagined most of the men she ran into were noble or royal, and didn't see her at all, most nobles and royals didn't see servants at all, just what they did, and usually even that only when it was done wrong. They certainly didn't seek their opinions or thoughts.\n\nAt least, that's what I saw in her on that day, and the interpretation I made.\n\nThe main part wasn't in doubt, she wanted to be seduced and swept away, by a man that was enamored by her and only her. It wasn't all that different from Cassia's vision, except perhaps a bit more submissive in nature.\n\nThat fantasy also worked very well for me, since my eyes had definitely been on her and only her as we shared a short gaze, before she looked away and took her hand back. Of course, despite that the fantasy was only one dimension of her life and personality, I could be that man that seduced her and fulfilled that fantasy, but what came after that in her mind? If she wouldn't consider a limited affair of the heart, it wouldn't work at all.\n\nShe said with a soft smile, \"It's nice to meet you too, Cam.\"\n\n\"You are a stunning woman, Tammy.\"\n\nShe looked pleased, scandalized, and a bit breathless for a moment. \n\nI decided I was moving far too fast, and took a small step back, both literally and figuratively. That seduction wasn't going to be some deal or alliance, some fuck of convenience for power and sex in trade to start, she wanted to be seduced and swept away, not bartered with. The compliment was a good start though, and I had three hours, or at least I hoped I did.\n\nI looked into her eyes a little too long again, then subtly dropped my eyes lower before I looked away. I didn't leer, but I was obvious enough to get caught admiring her full, voluptuous, and mouthwatering figure. Her tiny waist made her more waspish than hourglass, and I imagined my hands there.\n\nShe asked curiously, \"You mentioned earlier, unique relationship requirements? What would those be?\"\n\nI nodded easily, \"Yes, it's a bit complicated, but I require more than one lover. Both of them became my mates, but I have one other lover who is... not. I generally don't have wandering eyes, but you quite took my breath away this morning. It's, a part of who I am.\"\n\nI wasn't being deliberate obtuse, but it occurred to me telling the palace servant I was part sex-demon would be a good way to get my head separated from my shoulders, should she pass that information along.\n\nShe shook her head, \"I should be shocked, but there is something about you. Compelling.\"\n\nShe blushed, but stared into my eyes, both bold and slightly shocked at herself for saying so.\n\n\"I don't suppose you have time to give me a tour of the garden? I'd also like to learn more about you, if that isn't too forward?\"\n\nI gave her a way out with that last, but I spoke so confidently she knew I didn't expect her to take it. I'd practically trumpeted my intentions to seduce her, but I'd also take my time to feel things out from there on out. The last thing I wanted to do was poison our relationship with the royal family, Tammy may be a servant, but no doubt the king and queen had watched the woman grow up, and was fond of her.\n\nShe bit her lip, \"I really shouldn't, but I will. I'm curious about you, and never met anyone... quite like you, before.\"\n\nShe looked startled again, when I held out her arm, she obviously wasn't used to gestures that invited touching, though I couldn't imagine why. Every male servant in the castle must've been panting after her, though that was just my opinion perhaps, she truly was breathtaking.\n\nShe got a daring look on her face as she took my arm, and then led me down the row, pointing out all the flowers, which was obviously and truly one of her passions in life. The garden wasn't just a job to her in the least, a rarity in this world, she truly loved her work and showing it off. She grew more animated and relaxed with her hand on my arm as the morning moved on, and I learned a few things about her.\n\nShe'd grown up in the palace, and she told me a lot of the servants there were multi-generational and treated well by the royal family, as long as their work met a certain level of competency they were respected and taken care of. She took my scattered compliments and probing questions in stride, and also asked some of her own. She was a bit fascinated by the fact I'd grown up on the farm, and she'd insisted on a rather detailed account even as she answered my own questions.\n\nOf course, the whole time we were talking and getting to know one another, her arm on me and her close proximity also helped a great deal with the wooing, including my pheromones, physique, and never to be discounted with a woman, my confidence. I didn't feel guilty at all, by the third row she knew exactly what I was offering, and knew I'd only be there a few hours once a week, that I already had two mates and a third lover, and based on her answers, I knew there was no way she'd give up her life at the palace to follow me home.",
        "Which, at the end, I wouldn't have minded at all, she wasn't the only one being seduced. She was gorgeous, but she was also confident, passionate, intelligent, and vivacious. Her angelic beauty and curvy body just grew more devastating in its effect on me, the more I got to know her. \n\nWe spent almost two hours talking, flirting lightly, and getting to know each other better before I made a move. It was deep down one of the rows of thicker bushes, and therefore it held a certain level of privacy, with other flowers planted around them, it truly felt like we were in our own little world.\n\nShe was going on about the blooms, and comfortably leaning against me as she squeezed my arm, which was when I reached up and gently brushed the soft silky skin of her cheek. She got that same startled look for a split second, at being touched, but then she trailed off as she stared deeply into my eyes. Her vivid dark blue eyes were filled with a familiar passion, but that time it wasn't about her flowers at all, and there was a churning heat in her eyes.\n\nThat time, I didn't break off eye contact as I had done many times over the last two hours, but feasted on her blue ones, while my hand softly caressed her face, and down to her neck.\n\nI said boldly, as if stating a fact, \"I'm going to kiss you now.\"\n\nHer breath hitched, and she looked as lost as I felt, as she licked her lips and slightly parted them. A look of breathless anticipation and nervousness was on her angelically beautiful face. She couldn't have been older than nineteen, and I suspected she was my and Faith's age, just eighteen. She was truly a woman, but the fading blush of youth was still present on her flawless cheeks.\n\nI moved slowly, with confident eyes, yet giving her time to abort, even as I knew she wouldn't. It was an empty courtesy, merely to make her feel like she was in some modicum of control, but she wasn't. She was as mesmerized by me as I was enthralled and enamored by her. Her body, her lovely face, her voice, personality, and her assured confidence in everything except for me, as she got lost in my both subtle and overt seduction.\n\nShe sighed softly in desire, as our lips met for the first time. Her lips felt like the finest silk against mine, and she tasted of sweet femininity and the delicious sweat of her earlier hard work under the beating sun.\n\nI moaned softly in approval, and I pulled her soft lush body tightly against mine in a slow inexorable movement as my hands squeezed her tiny waist, and then worked around to the small of her back. I shamelessly used my power as a Cambion, and I started to lightly stroke her body through the dress, in a way that I knew would stoke the lustful fires already burning in her heart. We kissed passionately as I stoked the fires of her libido for quite a while, and I greatly enjoyed her passionate yet tentative exploration of my body with her own soft hands.\n\nShe gasped and stiffened in shock for a moment, as I stroked and squeezed her juicy rounded ass for the first time, but then her entire body let go of the tenseness all at once, as she moaned deeply into my mouth, and then melted her body aggressively against mine. She let out another squeak of surprise, as she ground her stomach against my hard erection. For my Tammy, it was the same length as Cassia preferred at seven and a half inches, but it wasn't quite so thick, more the thickness of what Faith liked on my slightly longer but slightly thinner cock for her at eight inches. In short, the bulge was quite large, and made her even more breathless.\n\nShe broke the out of control and passionate kiss with a gasp, and she looked up at me with hungry heated eyes. She took my hand firmly in hers, and pulled me down the row, made a left, then a right. \n\nTo my surprise, I found myself close to the edge of the garden, right in front of a large shed, and she pulled me inside of it. The walls were covered in gardening tools and shears of various sizes. There were also pots both empty and full of dirt and loam, as well as piles of seed bags and other things. \n\nThere was also small cot.\n\nI only noticed those things peripherally, as my eyes continued to feast on Tammy as she closed the door quite firmly. There was a small doubt in her eyes, but it disappeared as she took in the heat of my face, and the way I consumed her body with my eyes. Then she was in my arms again, and we were wildly kissing with a passion that took my breath away, Tammy exploded in a passion and desire that was breathtaking to me.\n\nMy hands wandered her body far more boldly at that point, teasing the sides of her breasts, down lower on her ass, and I inched the bottom of her dress up with small grips of my fist, raising it up higher and higher, until my fingertips dug into her smooth silk skin of her outer thighs and ass cheeks.\n\nShe said breathily, \"Cam, please,\" in a desperate plea.\n\nWe both undressed at that point, she ripped her dress over her head, while I shucked my trousers and pulled off my shirt, while both of our eyes hungrily took in each other's bodies. The wide eyed look of shock, desire, and wonder as she saw my huge and hard cock was a hell of a pat on my ego. Then she was back in my arms, and her huge D cups were pressed against my chest. Her silken creamy brown skin felt like heaven against me, she was so warm, soft, and pliant in my arms.\n\nI kissed my way off her lips, and down onto her neck, and held her tightly against me with my left arm wrapped around the small of her back, as my other hand slid around and between her thighs.\n\nShe gasped, and trembled, as I teasingly brushed her hot silken folds, which were soaked for me, overwhelmingly so. She whispered my name again, and sighed in pleasure, as I worked open her tight passage. Very tight passage. At the same time, her soft and smooth skinned fingers tentatively wrapped around my cock and stroked lightly and exploringly. \n\nFar too tentatively... unless.\n\nMy mind stuttered in shock, as I started to massage the inside of her heaven, and gently pressed down on her clitoral hood with my palm as I slid another one inside. I was pretty sure in that moment, that she was a virgin, but that sure as hell didn't stop me, if anything I felt honored and even more turned on at the idea of being this lovely young goddess's first lover.\n\nShe said, \"Cam, I've never felt like this before. Cam...\" she trailed off into a gasp, and I pulled her tighter against me with my left arm, as my right hand worked its magic between her legs.\n\nThen she bit my shoulder, hard, and screamed into my shoulder's flesh in ecstasy. The flood of liquid satisfaction that squirted out blew my mind as it soaked my hand, she'd squirted even bigger than my sexy Cassia did on occasion. By the shocked look of blissful-addled pleasure on her face, I was even more sure she was a virgin and had never felt anything so intensely pleasurable and euphoric in her life, as her body trembled against mine, and her impossibly tight virgin pussy quivered around my fingers. If it wasn't for my left arm snugly around her, she'd have fallen to the ground with the power of her release.\n\nMy cock twitched hard in her hand, and she looked into my eyes with a vulnerable shocked pleasure and awe that made softer feelings rise up in me as I claimed her lips with a sweet kiss.\n\nI moved us closer to the cot and sat down, it was too small to take her missionary style. Normally, I'd have just taken her against the wall, but that was a particularly horrible idea for a virgin, and way too rough.\n\n\"Straddle me,\" I said in a gentle but commanding voice, as I guided her body with gentle pressure. \n\nShe was in a daze of after-bliss, and moved pliantly under my guidance, as she put her legs on either side of me, her body pressed against me hard, intimately, as our eyes were just inches apart. She looked excited, turned on, ready for more, but also frightened and unsure.\n\nI kissed her gently, and said, \"This will sting, but I'll be gentle, as I claim you for the first time.\"\n\nHer eyes widened, then softened as she returned my short soft kiss with a lingering and softly passionate one of her own. Her body responded to my every touch, and I had her body humming and rising for another orgasm as if I'd been given a manual as to exactly where, how firmly, and even the timing of the strokes on her sexy body.\n\nShe gasped, as I bowed my head slightly and kissed her breasts for the first time, and then started to play with and suck on her nipple, and lavish it with firmly gentle licks of my tongue. Her breasts weren't as sensitive as Faith's, but nor would she like them mauled like my sweet witch did. She fell in the middle of those extremes.\n\nAt the same time, I lifted her by her ass, and lined myself up with her sex.\n\n\"Slowly,\" I murmured in instruction, as I lowered her down. It took quite a lot of pressure to pop into her heaven, and she gasped in a mix of pain and pleasure, as her sex tightened around me like a fleshy vise of pure euphoria to the sensitive tip of my cock. \n\nI lavished her breasts with attention, and I stole kisses as she gasped and sighed in pleasure, then lowered her further down on my cock, as she slowly impaled herself on me, until the tip of my cock met her maidenhood. The look of sincere trust, deep pleasure, and determination in her eyes took my breath away, and was so intimate with our bodies pressed together in the position I'd chosen, her eyes so close to mine. \n\nShe was as equally affected by my eyes, and what she saw there. Which I imagined was lust, amazement, and eyes that saw all of her and had to have her. Had to love her body, take her, and make her mine. It was how I felt in that intimate moment, as I as gently as possible, impaled my cock up into her another inch, and ripped through that barrier.\n\nShe hissed in pain, and she froze above me.\n\nI froze as well, and started to kiss, fondle, and otherwise give her pleasure with my hands, lips, and body that slowly but surely overshadowed the pain of that moment, and had her rising toward her peak once more. I was patient, lost in her, and took my time as she slowly sunk the rest of the way down my cock, in slow stages.\n\nI promised, as I looked into her eyes, and caressed her face with my fingertips, \"Next time I'm going to ravish you, once your body has healed from this. I'll never hurt you again.\"\n\nShe was so impossibly tight, and it felt amazing as we slowly and sensuously started to move our bodies together. The delicious wet and soft friction on my cock was unbelievably euphoric, and if it wasn't for my ability to cheat with what I was, there's no way that I'd have been able to hold back for her pleasure to return, much less for her to reach another peak.\n\nThe pain slowly and completely cleared from her face, and soon enough she was gasping, sighing in pleasure once more, and making other adorable feminine sounds of pleasure as I plumbed her depths for the first time. Maybe I should've felt guilt, because all I could be to her was her weekly lover, a love affair, and I'd taken her maidenhood to do it, but I didn't feel any guilt. It was a beautiful moment, and the sexy goddess riding my cock was all mine, for a time.\n\nPlus, who better than me to make her first sexual experience amazing? Yes, that was a bit arrogant, but it was also the truth, it was what I was.\n\nBesides, it took two after all, and she was as equally enamored and entranced with me and the pleasures I engendered in her body and mind. Perhaps that was arrogance, but I truly believed no other man could have made her first time even half as pleasurable.\n\nAt least, that was how I saw it back then, the first time we were together. She was already shockingly precious in my eyes, after I'd gotten to know her passion, morality, and humbly confident nature.\n\nShe rode me for a while, and she came around me powerfully two more times despite the soreness she no doubt felt. I wished in that moment I was a good enough witch to heal her, but I only knew how to heal myself. Still, despite not squirting for me again, she came powerfully two more times, before her demanding and convulsing pussy, and the look of lustful adoration in her eyes drew forth my own satisfaction. Her sweet gasps, the way she said my name, and the wanton way she moved her body against me, inexperienced but with abandon, also may have had a lot to do with that.\n\nI grunted, \"Tammy,\" and felt my balls boil. I stared deeply into her eyes as my cock started to pulse and send my seed into her warm nubile body, her own eyes as lost as mine. It was a shocking moment of vulnerability, considering how shortly we'd known each other, and how quickly she'd become important in my eyes.\n\nIt was probably a good thing I had high standards, and focused my libido on select women, or I'd have been in trouble. I started to wonder if I had the ability to fuck a woman and not get drawn in powerfully, none of my encounters had been empty and only about the physical. I felt that way about Lysa too, was uncomfortable with her distance and I already felt a deep connection with Tammy as well.\n\nShe came for me again at that shared look, and the intense feeling of me emptying myself inside of her nubile body, and that's when I released my will and hold on the power, and I greedily fed and harvested power from her soul. Her soul was shockingly potent, almost as much as my sweet witch, I figured a normal woman would be a lot less, but apparently not.\n\nHer eyes widened as we rode the heights of pleasure together, and my name was a whispered prayer that fell from her slightly parted lips.\n\nWe shared a languid kiss as we came down together, and I was in no hurry to move, nor did she appear to be. We had a little more time together, but not much. \n\nHer face did show her soreness and pain, when she finally dismounted me and went for her dress.\n\nWe spoke a little longer, and made plans to meet, same time next week, she'd be in the garden.\n\n\"I suppose the king would be angry, if I stole his gardener and took you home?\" I asked, half-jokingly and half-seriously right before she left, even if that was insane.\n\nShe let out a startled laugh, \"Yes, the king would miss his gardener... but that's the most tempting offer I've ever been made.\"\n\nWe came together for one last lingering kiss of passion, and there was a tinge of regret in both of our eyes as we parted. Not regret for what we'd done, but regret that our time together on that day, our first day, had come to an end.\n\nI missed her as soon as she was gone, which told me I'd been right about myself earlier. I may have been part sex-demon, and a little too focused on sexual pleasures and my impossibly strong libido, but I also wasn't the type to fuck and forget. Sex was more than physical pleasure, and I couldn't divorce myself from those emotions, even if they were mostly shallow and chemical, at the start.\n\n\u2003\n\nChapter Three\n\nThe walls were only ten feet high, more a privacy wall than any kind of defense. Inside the wall was a modest mansion with six bedrooms on a six-acre property. The inside of the mansion was made of polished stone floors, walls, and ceilings, and there wasn't much else in there, it would need furniture. \n\nOn the ground floor was a great room with a fireplace, a large kitchen with running water with both an open fireplace and a second cast iron stove. There was another large room which was presumably to host parties, a ballroom of sorts, as well as a bathroom, and several other smaller rooms which would make good ritual places and offices, perhaps a sparring room.\n\nThe second floor had six bedrooms, all of comparable size except for the master bedroom which was almost twice the size, and it took up both the front and back of the house, having windows in three directions, including a private room for a tub and chamber pots. There was a second bath chamber in the hallway, for the other five rooms.\n\nThe back of the house had a polished stone deck, that opened up into the vast backyard. At the moment, the garden was a little overgrown, and withered in some places, and it obviously hadn't been maintained in quite a while.\n\nWe'd bought it with a royal draft, and we'd pay back the crown with a third of our wages, which meant we would only earn twenty gold a month for the first year or so. It was later that same afternoon, it had only taken us a few hours of searching to find a place that suited us.\n\nThey'd teased me a bit about Tammy, my mates were pretty amazing. The stunning woman was still stuck in my mind, her feminine scent lingered in my nostrils, and the remembered way the sweet curves of her body felt under my hands haunted my libido. I shook that off, I'd see her again next week. And here I'd thought she might have problems with the love affair concept.\n\n\"We'll need to get furniture. Do we need servants?\"\n\nCassia shook her head, \"It'll take me a half an hour to fix the garden and landscaping with my magic, and less than that once a week to maintain it. I'll also ward our property, the walls won't be much of a defense, but we'll have plenty of warning to wake up and prepare if we're attacked by one of the other covens, or anyone else.\"\n\nI nodded, that would be sufficient, we'd always be our best defense, not walls.\n\n\"I imagine a lot of spies saw us enter the castle, I'm sure everyone of importance in the city knows about our new status, and that we have the tomes by now.\"\n\nCassia shrugged, \"You also know I like to cook, so no cook or landscaper, although we might need a maid.\"\n\nShe was a fantastic cook, I remembered that one breakfast she'd made us, and the lunch on the road to Mythfall.\n\nFaith shook her head, \"I can keep our home clean. I need to do something to feel useful, besides keeping our mate sated. You're the one making us money, and he is the center of the coterie, and the connection of our influence in the city, I'm just... his mate.\"\n\nCassia giggled a bit wickedly, \"I can believe that, but don't underestimate the importance of protecting us, you're also our guardian, as we guard you.\"\n\nFaith shrugged. It wasn't that she was dismissive of the idea, it was just normal for a shifter to do, protect their alpha and pack, and nothing special in her eyes.\n\nIt was our first home, and we had a lot to do to get it in shape.\n\n\"So, furniture, and we still need to get started on your wardrobes.\"\n\nCassia shrugged, \"Let's start with the furniture, I think we have enough time to get things ordered, find out how long it'll take, and I guess we're staying at the inn at least one more night. We can shop for fancy wardrobes tomorrow, and we need to hit the market for food as well when we move in.\"\n\nFaith grinned, \"Yeah, we can show Lysa our new home in the morning too. So she knows where to find our mate.\"\n\nI spanked Faith playfully, not sure how much I liked the idea of her picking up Cassia's teasing ways a little bit. She was always submissive, that hadn't changed, but she was growing a bit cheekier. I supposed I liked it, I admitted to myself.\n\nAlthough shopping didn't overly appeal to me, it could've been worse. Our life was mostly quiet in that moment, the coterie was solidly three in number, four including me, and at that point I had a weekly lover as well which wouldn't be a part of that, but who I suspected would be no less important to me. All of our injustices and needs had been taken care of as well, in the coterie I mean, the reasons we'd all banded together to begin with. \n\nThings were... good.\n\nThe only question was if we'd be attacked by a new enemy first, or if another was added to the coterie and we encountered a problem from that angle. It was also fine, I wasn't in a rush to shake things up, we had plenty to be getting on with at the moment with the house, not to mention training, my witch training, and the ladies being trained by me in dagger and hand to hand combat. I wasn't one to want to rush into danger just to have something exciting to do, just considering things realistically, as we'd no doubt made a few enemies that morning.",
        "Faith snuggled into my side, and she kissed my cheek. My faith could be very affectionate, especially when I put my hands on her. Our emotional connection through our strange mutual soul binding was intense at times, and neither of us doubted how deeply and completely we loved each other, or how attracted to each other we were. She was my exotically beautiful sexpot, and she knew I worshipped her.\n\nCassia smirked, \"Let's go shopping, before our lord and master decides to break in all the rooms in our new house.\"\n\nI laughed, \"You said that rather wistfully.\"\n\nCassia blushed at my accusation, but she also winked playfully.\n\nMy Cassia very rarely showed doubts in us anymore, or I should say doubts in her place in my heart, even when my attention was pointed in another direction. Giving her and Faith the veto power over any new additions I added to the coterie had done wonders that way, and I supposed the way I'd claimed her as my life-long mate, with both inexorable conviction and passion, might've had something to do with it as well.\n\nThe next few days passed quickly, and we got a lot done as planned. Both of my ladies had been measured at the tailors, and they picked out patterns and fabrics, and their new wardrobes would be ready in the next few days. For the moment, they still wore the middle-class level dresses they owned, which to me they looked absolutely fabulous in, but social conventions were important between the classes, so we'd do what we had to anyway.\n\nCassia had also transformed the outside of the house effortlessly with her magic, and I imagined it would've taken an army of gardeners to do the same in ten times the time. She'd also warded the property, nothing offensive, but we'd know if anyone came calling. It was a blanket ward as well, not just on the walls, so if someone got over them without touching, we'd know as soon as their feet hit the yard. She'd used her and my blood to do it, which meant we'd both feel any trespasses, or even invited guests.\n\nWe'd also bought furniture, some as is, some we had made special, like the bed which took those few days to get finished and arrive. I wasn't sure how many would eventually be in the coterie, but the three of us plus Lysa would get lost on the bed, and the thing was wide enough to sleep at least eight comfortably. I suspected it was overkill, but Cassia had been the one to insist on the size, just in case.\n\nWe also bought everything else needed for a house, linens, pillows, cleaning products, and we packed the pantry and larder with enough food for a month.\n\nIt was a lot, but at the same time it still left us plenty of time for both that training for all three of us, and our highly active sex life of two to three times a day. Both of my ladies were getting better with hand to hand and dagger fighting, but it would still take a long time before they were competent enough to face down a warrior. Of course, it would be even longer for me to be a competent and powerful witch, but fortunately we had our primary abilities to fall back on, which weren't inconsiderable for any of us.\n\nMy Cassia on the other hand, was getting quite impressive with her offensive and defensive spell repertoire. Her shielding spell, and mine for that matter since I could learn those quite handily, were getting far more powerful. Outside of general magic, we could now shield from elemental attacks as well as lessen the impact trauma of physical attacks.\n\nFor her though, she could also gather and cast fire, control wind to the point it made a powerful weapon, and she had learned several subtler curses and attacks on the human body, that made stopping hearts and putting someone unconscious crude by comparison.\n\nIf or when our enemies attacked, we were more than ready for it.\n\nIt was that third night later when we finally left the Lady Unicorn inn for the last time, and we moved into our home. There were still a few empty rooms, but the master bedroom, kitchen, great room, and even the ballroom was finished. There was even a desk and chair in another room we'd decided was the study, though the bookshelves were rather threadbare for the moment. The rest we'd fill up as we needed, over time.\n\n\"I'd forgotten how perfect you are,\" I teased Cassia, as I rubbed my stomach and let out a satisfied and perhaps slightly exaggerated moan of approval. \n\nThe woman was an incredible cook, and it'd been our first meal in our new home.\n\nShe smirked, pleased with the compliment, but maybe not so much by the teasing.\n\n\"Thanks. I think.\"\n\nI laughed, and helped Faith clean up as Cassia put the leftovers away. Of course, that afforded me a lot of opportunity to put my hands on the both of them, in flirty and soft caresses and strokes of their sumptuous bodies. \n\nThey returned the favor of course, and by the time we were finished all three of us were more than ready to break in our new bed. My exotically submissive, and sweetly playful beauties had my full and complete attention, as we caressed and kissed our way up into the bedroom.\n\nLet's just say the first night in our new home was fantastic, and I took them both one at a time, hard and fast the first time to burn off the lust that only seemed to burn brighter every day, before I made love to them both, one at a time. I loved both of my mates, deliriously, and claimed them that night with a will, making love sweetly and softly was just another aspect of that claiming.\n\nThey were mine, and always would be.\n\nIt was a special night, magical, and I also discovered on that night, that although Cassia had never been quiet, she'd obviously been suppressing her dulcetly toned enthusiastic and loud screams and keens of ecstasy when we'd been in the inn, no doubt so she wouldn't be overheard. It was a level of emotional discretion I didn't even know she had or needed.\n\nIn our new home, she became quite the screamer as she came easily and often for me, which drove me wild. She'd always been shamelessly wanton with me, and an amazing fuck, but she'd apparently wanted to keep that private and not share it with the rooms adjacent and below us, not to mention the hallway. Her sweet boundless cries of both pleasure and release on that first night in our new home was something I'd remember the rest of my life, especially since it was far from the last time, and only the beginning of our new life together, in our new home.\n\nFaith wasn't much different that way, she'd always been rather shameless in her submissive enjoyment in my arms, and her sensuously seductive and loud vocal appreciations of my lips, hands, and cock's effect on her young nubile body was unchanged, but just as breathtaking as always.\n\nThen we snuggled up, one on either side, my thoughts mostly on them, but I also had a stray thought or two about Lysa, knowing she'd probably be there when I woke up.\n\nIt was stupid perhaps, shortsighted, and a lapse of imagination on my part, but it never occurred to me that we weren't the only ones that had looked forward to us moving out of the inn that night. That our new enemies might not have attacked yet because they'd been biding their time until we were alone and not in a public building with many others. In my defense, my ladies were very distracting that night, alone in our house for the first time.\n\nFortunately, I was also vigilant, always, in protection of my ladies, and my sword was at our bedside and ready for any trouble that might come...\n\nI felt the strange tingling sensation that tugged at my mind to awaken, even as Cassia shook my arm to wake me. \n\n\"Intruder?\"\n\nMy dull brain lit on fire and a clarity rose in me, and I jumped out of the bed and grabbed my sword while my ladies also got up quickly\n\nFaith might not have felt it, but she obviously felt the threat through her connection me. Bright red fur burst from her fair skin and her body grew in height as her face slightly extended outward to accommodate her larger and wickedly long eye teeth. Last but not least her hands transformed into long sharp claws and a deep growl escaped her lips. In truth, I found her beast form as sexy as it was intimidating, she still had her sexy curves, and her face still had an exotic beauty to it, despite the peach fuzz red fur that lined a part of her face.\n\nCassia also looked ready, with a dagger in her left hand and no doubt a spell at the tip of her tongue.\n\nShe tilted her head, and she looked at the window along the back of the house.\n\n\"She's coming up the back wall.\"\n\nShe? Cassia must've been picking that up with her regular magic, which I still had focused entirely inward. There was nothing in the ward alarm to indicate sex, or exactly where or what the trespasser was doing.\n\n\"Alone?\"\n\nCassia nodded, and whispered, \"An assassin, maybe?\"\n\n\"If she's alone, she has to be, I'd have expected a bigger turnout.\"\n\nFaith scowled at my amusement, and I pushed it out of my head. My fierce shifter mate was right, I shouldn't underestimate a single attacker, on the contrary she could be even more dangerous than a larger frontal assault, especially if she was a good assassin.\n\nStill, I couldn't help the smirk, as the window shutter was slowly and carefully pried open, so our assassin didn't make a sound and wake us up, as we waited for her arrival.\n\nA lithe feminine body slipped through the window, reminiscent of Lysa's long supple curves, but much shorter, she was at most five foot three, and almost as petite as my lushly curvy petite half-elf shifter, just lissomly so.\n\nThe lighting was dim, and I couldn't tell much else, outside of the fact she had long white blonde hair, that hung like a silk curtain down her body, and she wore dark clothing of some kind.\n\nShe froze as she turned and saw we were all staring at her, in the moon's light. It was also when I picked up another shocking detail, she had violet eyes, bright purple that seemed to glow and glint in the moonlight. Purple eyes, white hair, petite and lissome, ebony skin, all added up to a fucking Drow, definitely an assassin.\n\n\"Good evening, who are you?\" I asked warily. Maybe I should have just killed her, but assassins didn't send themselves, and it made sense to try and find out who our enemy was.\n\nShe reached up to her collar, and she gripped something as she pointed her right hand at me, and a few musical words dropped from her lips before any of us could react.\n\nA bright white light filled her palm, and it shot across the room and slammed into my body.\n\nMy skin started to burn, as my demonic shield took effect, but then I felt like burning flames were doused in ice water, as the spell blasted right through it, and I felt my chest seize up in pain. It was my first encounter with the power of the gods, but it was also obvious to me even then, she must've been gripping her holy symbol with her left hand. Oh, for all that was holy, a Drow assassin cleric? What the fuck? Talk about impossibly bad luck and the bane of my existence.\n\nFortunately, I was also a witch, or I'd have probably dropped dead immediately. My witch magic shield struggled against the spell, as her holy magic tried to unnaturally stop and destroy my half-demon heart, while my witch magic strived to maintain my body's natural balance and fought the spell. That was good, but I was also frozen in pain, and until one of the spells won, I simply couldn't move. The agony was simply that debilitating.\n\nFaith growled low as she launched herself across the room, and Cassia started to cast a spell.\n\nThe Drow sneered, I could tell because of the very white teeth that flashed in the dim light, and she spun and kicked out in perfect timing that sent my shifter mate off course and slammed her against the wall. That was the biggest thing I had to train out of her, Faith's fighting style had zero subtlety. Faith was highly intelligent and smart, but it wasn't easy for her to fight her animal instincts to attack head on when I was in danger, especially when shifted in her fifty-fifty beast form, it was something we were working on.\n\nStill, it was the delay Cassia needed to finish her spell, and the Drow froze like a fly in amber when the spell hit her.\n\nMy entire body jerked, as my heart skipped, jumped, and then took off like a hummingbird. I felt her spell dissipate as heat raced and covered my skin. It was creepy, the way her magic had so easily defeated my more powerful magic, but fell to my much weaker witch shield, barely.\n\nI growled, \"Don't kill her. We need light.\"\n\nCassia lit a few candles, and light filled the room.\n\nThe Drow female was definitely lissome, and obviously a supple acrobat to be scaling walls, and her fighting style showed it as well when she'd kicked my Faith. Her lissome body was athletic, and she was all woman with the softer longer curves that I'd seen in the darker lit room. She had clear ebony skin, and she had an devastatingly exotic beauty about her that I was loath to admit in that moment, with pouty lips, a thin face, long and thick eyelashes above those strikingly purple eyes, and last but not least her ears were far pointier than my half-elf's, and exotically swept up to a point.\n\nI looked into those purple eyes, and demanded, \"Stop fighting the spell, stand still.\"\n\nShe seemed to calm under my compulsion, a little, but the haughtily angry and dismissive look in her eyes promised my death, just as soon as she got loose. There wasn't much the other races knew about the Drow, except that they were amoral at best, evil at worst, and they were a matriarchal society, their men were all treated like servants. Which probably explained some of the contempt in her eyes as she started back at me.\n\nCassia said, \"I'll have to release her to get her to talk. The spell I used paralyzed all of her voluntary muscles.\"\n\nI frowned, \"I think my compulsion has her, but let's be sure. Faith, get some rope, tie her up and disarm her, carefully. Including her holy symbol please.\"\n\nLast thing I needed was to get hit with more holy magic.\n\nIt took Faith a few minutes to take care of that, and there was quite a pile of throwing daggers, darts, a larger and wicked looking carved dagger, an equally wicked looking carved sword, along with her holy symbol in a pile. Her arms were tied behind her back, and her legs were tied as well, before Cassia released the spell.\n\nI demanded, \"Who are you, assassin?\"\n\nHer voice was coldly melodic, and filled with disdain, which told me my compulsion was only partially effective, she didn't have that normal monotone voice and mindless gaze when she spoke.\n\n\"I am no assassin. My name is Irze.\"\n\nI snorted, \"If you aren't an assassin, then why are you trying to assassinate us.\"\n\nShe sneered, and I could hear the deep rage in her melodically cold tone.\n\n\"A sorcerer enslaved me with his magic, even now under your influence my mind demands I slit your throat. I was also ordered to find and burn the tomes of witchcraft.\"\n\nCassia gasped in shock, the idea of destroying such precious knowledge was shocking to me as well, after all that the witches had already lost.\n\nI frowned, and I took a step back from it as I questioned my assumptions, she could've been lying, but I didn't think so. I'd been expecting the first attack to come from the other covens, but it made sense the sorcerers would want us dead as well, if we died and the books were gone, the ward would also die and allow them their coup attempt. With the books gone too, there'd be no replacement coven for us the way we'd replaced the Eternal Rose.\n\n\"Are they all behind it?\"\n\nIrze replied, \"I don't think so, Jacen ensured privacy before he gave me the orders. It's a risk the others may not have taken. Even Jacen feared the king finding out about his treachery, before it was too late.\"\n\nI shook my head, \"How did you wind up enslaved to the sorcerers, and if you aren't an assassin, what are you?\"\n\nIrze answered the second question first.\n\n\"I am a warrior and cleric of the Goddess of Dreams, Diella. I was banished for my beliefs and for my judgment of my kin. My kind are rare in Mythfall, and not looked upon favorably, but I took my chances and went to the temple to Diella in this city. I was barely here a day when that pig Jacen enslaved me with his sorcery.\"\n\nShe spat, \"The humans did nothing but look relieved, I was foolish to think it might be different here. I am no assassin, but I have no choice. If you untie me, I will try to kill you, the geas lies heavily upon my mind. You should kill me now.\"\n\nI got the sense she wasn't evil, and I knew for sure the goddess she served was not evil. She was also quite attractive, powerful, and like Cassia, Faith, and Lysa, she was in a hard position and needed help. A terrible base for a relationship granted, but it'd worked as a beginning with the others well enough. She was as exotically beautiful as my fox, but in a different way. While her curves and breasts weren't as generous, she was still quite appealing to me, my tastes ran wide, and she was strikingly attractive. There was definitely an appeal to her petite and athletic body, and her appearance and body, just like with my lissome Lysa.\n\nI walked over, and touched her exposed neck, and saw double.\n\nShe was a fierce warrior, I wasn't all that surprised that her greatest sexual fantasy started with a wrestling match of sorts, just like my Faith's had started. She wanted to be conquered, and she wouldn't submit and open up her body unless the man was worthy of her. The feelings and desires settled in my mind, as I watched a faceless warrior with a huge cock pin her down and wildly fuck her into submission. At the end of it, she turned her back to him, and snuggled back into him in the spooning position as he held her gently.\n\nWith the exception of Lysa, the fifth I'd seen in a vision, the four others I'd seen had ended that way as well, with the woman being protected and cherished. But in Irze's case, there was also a lot more to it than that, she wanted to trust the man that tamed her, to show him her back, without fearing betrayal and a dagger strike. The symbolism of being spooned and feeling safe and cherished went much deeper with her. Intense perhaps, but it made a certain amount of sense given her society, where trust was always met with betrayal.\n\nWhat almost made no sense to me was the Drow were very matriarchal. Apparently, despite her disdain with me and men in general, she wanted to be owned and conquered by one. But only a worthy one.\n\nNot incidentally, she was incredibly beautiful without clothes on. Her B cups were generous for their small size, proud and pert much like Lysa's, but deliciously dark, with huge very dark pink nipples that were a mouthwatering shade next to and on her pitch black and soft ebony skin. She also had a tight bubbled ass, just a little bigger than Faith's sexy and petite one. She was, alluringly and exotically attractive to me, which surely informed my next decision as much as the rest of it had.\n\nI said, \"We might be able to come to some arrangement.\"\n\nShe asked haughtily, \"What do you suggest? I do not wish to die.\"\n\nI briefly went over the whole coterie idea, and how it worked. Where Faith and Cassia had ended up by my side, and Lysa had chosen a more remote option. What it would mean, feeding me once a day, and being allies with us and by extension with the vampire kiss in the city.\n\n\"So, we would go and take care of Jacen, and destroy the source of the sorcerous geas to free you, and in return you would become a part of our coterie. Free again, but with allies, and responsibilities toward us and our allies.\"\n\nShe looked me up and down, as if measuring a side of beef, I just grinned confidently back.\n\nShe replied with less frigidness in her voice, but she was hardly cordial either, \"I do not object to your proposal, but I will reserve judgement on the depth of our relationship, and I'll visit you once a night at the start of it. I do not believe it would be hardship to lie with you, from what I can see, but I can't judge your worthiness as a man until we've been together. Are you sure you wish to risk this?\"",
        "\"That's... quite reasonable, and prudent of you. Yes, we must face Jacen either way, he is our true enemy this night, and the architect behind the threat to our lives. The only question was if we'd be freeing you in the bargain.\"\n\nShe nodded in acceptance.\n\nI looked at both Cassia and Faith. I already knew Faith's response, I felt her calm and confident acceptance at my decision as alpha. My Faith truly had no doubts about my decision to add a fourth to our coterie, no more than she had doubts about the fifth woman in my life back in the castle's gardens. She'd be cautious in the beginning, and watch for betrayal, but she would welcome her as a sister and more protection for her alpha as well as a powerful addition to our coterie.\n\nOf course, Faith had never doubted her place, or my commitment to her as my mate, she could feel it in me, always.\n\nIn short, my concern there had most lied with Cassia, but I found no doubt or worry in her eyes either. It was good to know how confident she was in our love at that point in our lives, and her surety in our relationship and her status as my permanent mate. She'd give Irze a fair shake too, Drow priestess of one of the good gods, or not.\n\nCassia said, \"What can you tell us about the tower, and where Jacen would be. It would be best if we took care of it now, we don't want to start a war with every sorcerer in the tower of Abyxis, not if we can help it.\"\n\nFaith added, \"Plus, we need to leave her tied up until it's done.\"\n\nThat was a good point, we needed to move, and as soon as we could. I figured it to be around two in the morning.\n\nIt wouldn't do to rush though, and it was closer to three by the time we'd gotten all the details and layout as we could out of Irze. Not to mention a bit of planning. Jacen's suite was on the third floor from the bottom, he was a powerful sorcerer but one of very little influence. There were also guards on the first floor of the tower, and lots of human servants, which meant no magical alarms, just human ones.\n\nThe goal was to kill just one, Jacen, and evade the rest, the last thing we needed to do was start a war with the sorcerers' tower. Fortunately, we lived in the upper-class area of the city at that point, and it wasn't all that far to the tower...\n\n\u2003\n\nChapter Four\n\nThe night was cool, and there was plenty of light under the moons once we were outside. My thoughts strayed to Lysa, it'd be good to have her along for this, but we really couldn't wait to attack until the next night. Her and the kiss were part of our ally network, but it took time to call them in. Outside of the fact we'd have to leave Irze tied up over twenty-four hours, we feared waiting would also tip off Jacen we were still alive, and his readiness would rise in result.\n\n\"Quick question, why was it we couldn't feel Andrew was a sorcerer? That might be pertinent to the night's events.\"\n\nCassia smirked, \"We can't feel them unless they're actively doing magic and invoking the elements. That goes both ways, they can't feel a witch at rest either. Of course, we both have shields on most of the time, so we stand out that way.\"\n\nI frowned, \"So that truth detection of theirs doesn't require active magic then?\"\n\nCassia hummed, \"I suppose not. We can feel the ebb and flow of the world around us and our bodies without expending magic as well, or in being detected by non-witch races. It may be something similar.\"\n\nThat was true, my demon side could only feel when Cassia was casting spells, it was my witch side only that could feel her reaching out to the world around her.\n\nThe Spire of Abyxis was a large and very wide twisting tower, with eight sides making it mostly rounded, and the walls twisted around each other as they rose, giving it a swirling appearance. It appeared to be one giant stone, there were no mortar joints at all, just one piece of smooth stone. It was also quite tall, taller than the castle towers by quite a lot, and I was glad we only had to make it to the third floor since it was a stealth mission. Irze hadn't known exactly how many floors there were in the tower, she'd never been higher than the seventh level.\n\nThe stairway was tightly circular in the center of the tower, and each landing led to a small circular corridor around the stairs, which had various large rooms or living suites facing out toward the edge of the tower. The tower was about a hundred feet wide at the base, which gave each floor over seven thousand square feet of space, though that was almost halved at the top of the spire which was about as half as wide.\n\nIt was a huge amount of space, but until a few days ago I'd have said every sorcerer in the city lived there, but apparently that was only mostly true, except for the royal family. Point being, they definitely needed the space.\n\nThe circular wall around the property and tower was twenty feet high, and it had sharp cast iron spikes sticking up out of the thin wall to discourage climbers. As a result, we walked right up to the gate.\n\nThe guard said, \"Halt, identify yourselves.\"\n\nI cleared my throat, which got his eyes to snap to mine instead of trying to get an answer from Cassia's tits. I usually hated when men looked at what was mine, but I had to admit it worked out for the best in some things, he'd been totally distracted and put at ease from their beauty.\n\nI smiled, \"You will relax, open the gate, and let us in. You will ignore our presence for the rest of the night, and after we leave, you'll forget we were even here.\"\n\nIt was the plan we'd come up with, no proof of our presence, just one dead sorcerer who'd exceeded the intentions of the whole through greed and ambition. We didn't want to start a war, and the fact they used humans as guards was a weakness we could exploit. Normally, it'd be fine, the greatest enemy of the sorcerers and other non-human races were humans, human guards would be more than enough to deal with a bunch of bigots trying to start trouble.\n\nBut for us, a little compulsion went a long way.\n\nHe was a bit slack-jawed as he opened the gate, and the three of us slipped through and headed for the door into the tower. According to Irze, there'd be two human guards in the public bottom of the tower, one by the doorway, and another by the center stairwell entrance. Two we could handle quietly, if there was more the mission might go tits up. Hopefully that didn't happen until later. Supposedly all the guards had breakable objects that would set off an alarm and wake the whole tower in an emergency.\n\nWe pushed open the large door, and there was a guard right there about to challenge our presence, and fifty feet down the corridor at the entrance to the stairs there was another guard watching closely. Cassia muttered under her breath in a low tone, had been for the previous few seconds.\n\nMy eyes captured the first, and Cassia finished her chanting and a spell flew down the corridor to freeze the second. I let out a sigh of relief that there was no outcry, we couldn't have handled three as easily as two.\n\nI gave the first the same orders as the guard at the gate, to ignore us and forget us once we left for the night. Then we moved to the stairwell, where I repeated the compulsion for frozen guy, and then Cassia let her spell die. So far, so good, but I wasn't depending on everything going to plan. I'd never fought a sorcerer before, but I knew they were powerful, and unlike witches they didn't have to cast their spells with words.\n\nSometimes plans worked for a bit before they went south.\n\nWe moved slowly and silently up the stairs, which as Irze said was a tightly circular corkscrew around a central column of stone. When we reached the entrance for second-floor landing, we paused long enough to ensure no one was around before exposing ourselves to the second-floor entrance, then we continued up toward the third floor. Some sorcerer or sorceress having a sleepless night and going for a walk could blow the whole the operation.\n\nFortunately, that bit of pessimism went unrewarded.\n\nWe reached the third-floor landing, and paused again, no breathing, footsteps, or any other sounds reached our ears. I looked to Faith, she had the best hearing of all, and she nodded the all clear before we stepped up on the landing, and we opened the door and walked out into the tight circular corridor. We turned left, and went to the third door on the right, which according to Irze was Jacen's suite of rooms. \n\nI tried the door, and I raised an eyebrow at the quiet snick as it opened and swung in quietly. No locks? Trusting lot, these sorcerers.\n\nThe entry room was much as it'd been described to us. There was a sitting room, with several chairs and wide couches, glass tables with parchment laying on them randomly, as well as a dirty glass. There were glass shelves along the walls with various knickknacks, stones, and crystals, half of which registered with my half-demon side as magical, and my witch side cringed away from it as well. They felt... unnatural. No wonder witches and sorcerers didn't get along. I also knew the enchantment or geas for Irze was on one of those, but I didn't search the shelves for it, we had to deal with Jacen first.\n\nGlass was also extremely rare, even in the upper-class part of the city most windows were simply shuttered, including our home. That room's glass furniture and shelves alone would go for a fortune in the human market. It made me wonder if sorcerers could just magic some out of a pile of sand. Truthfully, the whole spire of Abyxis was quite impressive, there were no seams of any kind in any of the walls, stairs, ceilings, or polished floors. They must've somehow reformed the stone and building materials into one large piece somehow.\n\nElemental Earth magic, no doubt. It also seemed to me the sorcerers had retained far more of their power, if that room was any indication, or perhaps they'd merely rediscovered a lot of the possibilities, and shared amongst each other, while the witch covens were far more segregated and kept the secrets of power to themselves. Not that I was judging, Cassia and I were guilty of the same, we had no intention of sharing the tomes with the other covens.\n\nThere were two doorways in the room, besides the exit I mean. The one on the right wall led into a kitchen, the one in the back led to the bedroom, and we headed slowly toward the latter. The room was full of magic, which was probably why we missed the subtler magic on the floor before the bedroom door, until it was too late.\n\nJacen's muffled and sleepy voice called out, \"Who's entered my home? Cara, is that you?\"\n\nI kicked open his bedroom door while I reached for my belt, and as it slammed open a throwing dagger flew from my hand toward Jacen's throat, only to stop dead in the air several inches from his neck. The room hummed with his unnatural magic, as he chuckled.\n\n\"I see my assassin failed, very well.\"\n\nThe dagger flipped and shot back at me like an arrow, and I dodged to the side and used the wall next to the doorway as cover. I considered and rejected drawing my sword, he could probably control any metal or earth with his magic. I debated using hellfire for a moment.\n\nFaith shifted and ran into the room in her beast form, and Cassia had started to chant.\n\nI looked back into the doorway, to see Faith on top of the bastard and trying to tear his throat out, but her claws were somehow being stopped just an inch from his flesh. Some kind of magical shield, against physical damage.\n\n\"Faith, move!\"\n\nShe growled in anger, but rolled off the asshole, and I raised my hand and smote him with the fires of hell. Or at least, that had been the plan, but a shield of elemental fire exploded into being between us, and his fire ate mine. \n\nCassia leaned into the doorway as she spoke the last word of the spell, and her magic passed through the fire like it wasn't even there, and I heard Jacen grunt in pain a moment later and the fire winked out.\n\nCassia said, \"He's fighting it.\"\n\nRight, I pulled a second dagger, covered it with dancing hellfire, which was a new trick and took me by surprise as I once again threw a dagger the bastard. That time, he was far too busy fighting to dispel Cassia's killing spell, to focus on my dagger.\n\nThe sound of a blade slamming into flesh reached my ears, as the dagger disappeared into his neck, and the fire started to lick and spread over his body. He was already dead, and in just a few moments he wouldn't need a burial. Apparently, his dead body was still alive enough at the moment, for the fires to consume.\n\nCassia raised an eyebrow, as Faith said, \"That's new.\"\n\nI shrugged, \"I was angry. You alright?\"\n\nFaith nodded, \"It was like air pressure, the air itself was deflecting my claws. He didn't hurt me back, I imagine it took most of his concentration to maintain the shield.\"\n\nI grunted, and I walked into the bedroom and plucked my clean dagger off the bed, where no sign of Jacen remained. Of course, the fire just burned living flesh, which meant not only was his bed perfectly fine, but my dagger was already clean as the blood had burned as well, and I shoved it in the sheath.\n\nWe went back into the living room, and Cassia started to search for the object with the geas while I found my dagger across the room. I sighed, I'd have to clean and sharpen it, it had a small nick in the blade from where it'd hit the stone wall. The stone wall itself had a small chip in it, which was evidence I didn't care to leave behind, but there was nothing we could do about it. Regardless, they wouldn't know who had killed him, as long as we got out without being seen.\n\nStill, they'd know it wasn't a sorcerer, if anyone noticed the chip in the wall.\n\nCassia sighed in satisfaction, \"Found it, I need a minute.\"\n\nShe started to cast. It was a variation of the shield spell we both had around our bodies against magic and the elements. In essence, the spell would fight the geas on the object which was a large crystal, as it tried to restore the natural properties of the crystal, which didn't include elemental magic. It would be worthless after that, and a new geas would require capturing Irze again, they couldn't restore it without her presence.\n\nShe finished the spell, and it got to work.\n\nI wasn't a thief, but I gave serious consideration to pocketing a few things in that room. It wouldn't be wise though, if we sold glass, or someone saw it in our home and word got around, the sorcerers weren't stupid.\n\nMy head snapped toward the door, and I moved quickly and quietly across the room.\n\n\"Jacen?\" asked an annoyed yet alluring female voice, \"Why are you doing magic in the middle of the night, you woke me up, and I don't appreciate...\"\n\nHer words cut off as the door opened the rest of the way, and I grabbed her and covered her mouth with my hand. \n\nMy intention was to try compulsion, so we didn't have to kill anyone else, but I was frozen for a moment as I realized the soft willowy flesh under my hands belonged to an elf. A full elf, five foot seven, pointy upswept ears, with beautiful silver hair that looked like a curtain of shiny liquid metal, impossibly bright and vivid green eyes, and an exotically beautiful elfin face comparable to Irze's, except her skin was porcelain fair instead of a deep ebony. She had the same long and thick eyelashes, and slightly bowed lips was really the only major difference, Irze's were poutier.\n\nOf course, I also saw double, as her greatest fantasy played in my mind in a split second.\n\nI also took in a few more details in that vision, her body was willowy, with extremely long and toned thin legs, and small hips, with a long valley for a waist and a lovely tight little ass. Willowy, except for the fact that she had the biggest breasts I'd ever seen, they looked almost obscene on her tight willowy body, at least double Ds in size, and impossibly supple and gravity defying, with very little downward movement from the obvious weight. Last but not least, she also had nipples an even lighter and more deliciously delicate pink than my Faith's, which I'd have said was extremely unlikely before that moment.\n\nAs to the fantasy itself, I saw her being seduced, pampered, and adored by a faceless man, after which they made love and she was cherished deeply afterwards. A little bit like Cassia that way, except higher maintenance, swept away in a romantic way, instead of by a strong man that would merely protect and cherish.\n\n\"Don't speak or fight,\" I ordered.\n\nHer eyes narrowed at me, and then wind exploded out of her body, and shot me across the room where I slammed against the wall, pinned there by the wind until the stone itself melted and secured my wrists and ankles.\n\nFaith growled and went at her next, but she too was flung against the wall and secured.\n\nCassia dropped the object, and she started to cast.\n\nThe elf said politely, \"None of that witch,\" and suddenly Cassia was gasping for air, and it didn't look like she was able to breath.\n\nI thought we were fucked, and any mercy in me died as I imagined my ladies dying to a random event as our plan went to total shit. In a last-ditch effort, I shot shadowed flames in her direction.\n\nThe bitch looked amused, and twirled her finger, the first actual movement she made to shape her magic, and a funnel of air started to circle her like a tornado. It sucked up the flames I cast, and they twirled around her in raging funnel of shadowy fire, without touching her at all.\n\nI screamed, as my wrist popped, and my hands were twisted around the face the wall. I wouldn't be casting any more fire.\n\nThe elf smiled genially, as Cassia fell to her knees suddenly started gasping for breath.\n\nThat elf was a total badass, and had us helpless in moments, far more powerful and apparently could do more than one thing at a time, unlike Jacen. She was calm, relaxed even, and held her head up high as she examined us. After a moment a broad smile crossed her exotic facial features.\n\nShe said, \"Isn't this better? We can speak now. You are the new coven, the ones helping the king stay in power.\"\n\nThat was a statement, not a question, so I was unmoved to answer her.\n\nShe studied us a bit longer, and then nodded thoughtfully after a moment. The crystal Cassia had been working on rose from the ground, and it shot across the room into her palm. She studied it for a moment, and then frowned slightly.\n\n\"I am Siora, an elven sorceress of Ironwood. Is it safe to assume Jacen sent an assassin after you? I know he was playing with that Drow cleric, distasteful that.\"\n\nI nodded, \"That is so, our intention was to end the threat only, and not start a war.\"\n\nSiora smiled, \"Was that so hard? Humans are so... rude.\"\n\n\"Rude?\" I asked doubtfully.\n\nShe nodded, \"Is it so hard to be polite?\" she asked politely.\n\nOh great, we were trapped by a crazy elf, who was really delicately stunning in appearance, a match for any of the beauties in my coterie. I was also in no way foolish enough to believe she'd be joining anytime soon, despite my dick's thoughts on the matter.\n\n\"I suppose not, but my first reaction was to spare your life, I'd hoped a little compulsion would take care of it.\"\n\nSiora nodded slowly, regally, in thought.\n\n\"I am here in an exchange program of sorts, to share our sorcerous knowledge between the human and elven sorcerers. I was given quarters on the third level, the lowest level of the spire that has personal rooms, and the most crudely appointed, while I know their representative on our land has been treated much better. I also believe they are purposefully holding back on me, and only agreed in order to gain our knowledge without reciprocating fully. I find this whole situation, unsatisfactory.\"\n\nThe crystal raised up out of her palm, started to spin, and then was crushed violently into dust. I could feel the magic dissipate from across the room. Then the dust itself was consumed in a flash of fire.",
        "\"I see,\" I said, not really seeing at all. Why was she complaining about her living arrangements and treatment to us?\n\nSiora shook her head, \"I don't think you do. Jacen was a toad of a man, and a truly trying neighbor with no manners whatsoever. I tell you all this to explain why I'm going to let you go. I hold no loyalty toward the tower, and their petty ambitions do not move me. Sending assassins is just... rude. Well, that, and because you tried not to harm me, although I could argue messing with my mind is harm, I understand your intentions were well-placed. However, if you attack me when I let you go, you'll all die before you can take a second breath, understand?\"\n\nI believed her, and her power was frightening. It was always easier to kill than to subdue, and she'd subdued the three of us almost simultaneously, and while holding two of us on a wall and keeping the breath of air away from Cassia, she'd also done a fourth thing by creating a vortex of air indoors. I had no doubt she could have killed us far more easily.\n\nIt was kind of humbling actually, she was far out of our league. Of course, elves were longer lived, she looked about nineteen, but that probably meant she'd been learning magic for close to two hundred years.\n\n\"I understand, I don't suppose you'd fix that nick on the wall too, over by the door.\"\n\nShe smiled, \"I'd be pleased, nicks are so unsightly. I also won't mention this encounter, the sorcerers here bitch about you constantly, but most of them are too afraid to act outside this tower.\"\n\nI wondered if she was sane, perhaps not by human standards, she was extremely polite, but I also had no doubt she'd be polite as she killed us if she had to.\n\nRegardless, the politely terrifying and extraordinarily sexy elf maiden let us go. We didn't run into any more problems on the way out. We'd also decided she was probably the premiere and most powerful sorceress in the city, Jacen hadn't been nearly so dangerous, though he did give us trouble.\n\nDespite her exquisitely heart stopping beauty, I truly hoped I'd never see her again. I also supposed as wrinkles in a plan went, it could've been worse. She'd even cleaned up after us, the tower would never figure out what had happened to Jacen. Or more accurately, who had happened to him.\n\n\u2003\n\nChapter Five\n\nCassia said, \"That was moderately terrifying.\"\n\nI smirked, \"Yes, it was, but it all worked out.\"\n\nFaith sighed, \"I wasn't much help.\"\n\nI disagreed, \"You were the distraction we needed against Jacen, and against Irze for that matter. We make a great team, the three of us.\"\n\nFaith nodded acceptance, but I still felt her doubt.\n\n\"Be careful with Irze, Drow aren't known to be trustworthy.\"\n\nI replied, \"Normally I'd agree, but trust is part of her greatest sexual fantasy. She badly wants to be mastered by a man, and one she can trust in. I think the hardest part will be gaining her trust, since she grew up around other Drow who were never trustworthy, and her hopes in finding trust and a place among humans were betrayed on her first day in the city. She serves the goddess of dreams, she obviously isn't a typical Drow in that way. But... I won't take foolish risks, and you two will be there to watch my back as well.\"\n\nThe ladies exchanged a determined look, and it was a little startling to be the one overprotected for once.\n\nIt wasn't long until we got home, and we went up into the bedroom. \n\nIrze looked at us as we walked in, she was tied up still, and lying on her side in the bed. She sighed, as I worked the knot loose, and untied her ankles, then her hands.\n\n\"Everything went well? I was freed from the geas a short time ago.\"\n\nI nodded, as I started to remove my clothes, and Irze took my queue and started to remove hers as well. It was time to claim the fourth member of my coterie, and with Tammy and our once a week love affair I had five of sorts. I wondered how many more I'd be adding after that night, I didn't want to stretch myself too thin.\n\nShe truly was stunning, her ebony skin, shockingly white blonde hair, and vivid violet eyes, set in a thin exotically beautiful elfin face with sharply upturned and pointed ears. Her lithe body was very appealing, and her large tightened nipples were as mouthwatering in person as they'd been in the vision. \n\nI crawled into bed and pulled her soft warm body against mine, and I was shocked by my own size. I'd seen it in the vision of course. My other four ladies liked thin to thick, from Lysa's preferred thin seven-inch cock to Faith's eight inch and fairly thick cock. Irze however blew those out of the water, I was ten inches long and fat, far beyond even Cassia's seven and a half inch but extremely thick cock preference.\n\nThe shocking thing about my size though, was that her fantasy and what she wanted, didn't match what her body needed for pleasure, but I could tell as I held her and my magic worked, that if I just took her roughly like she wanted in the vision, I'd tear her apart, and she wouldn't enjoy it at all. It was... an interesting conundrum, I was the perfect size to give her pleasure, but I had to warm her up first.\n\nSo, I improvised.\n\n\"You are beautiful, and tonight you will be mine,\" I said in a firm tone that brooked no disagreement.\n\nHer violet eyes were a bit wide, and I could see the desire and shock in them as she took in the length and breadth of my cock. She looked away from it and up at me into my eyes at my words, with a challenging glint in hers. \n\nI hadn't forgotten I had to earn it, so I had to take her, and I had to do it slowly. Maybe I should've left her tied up.\n\nI growl moaned as I suddenly kissed her demandingly, violently even, as I gripped her wrists one at a time, and pinned them above her head, even as I pinned her body down with my weight.\n\nShe kissed me back just as fiercely, just as hungrily, my demanding kiss lighting her own center on fire, and she moaned into my mouth despite herself, as she wiggled and tried to escape my weight. She was acrobatic, a cleric, and a master fighter, but she wasn't nearly as strong as I was, and I already had her pinned down.\n\nIt was time to improvise, as I kissed off of her lips, and teased her neck with suction and nips of my teeth, my cock strained and twitched against her soft silky skin, as I joined her wrists above her head, and then gripped both with one hand, to free one of my hands. I continued to kiss, nibble, nip and lick her aggressively, telling her with my mouth she was mine.\n\nThe improvisation was with my off hand, which I used to gently and teasingly strok her curves with my fingertips. Teasing her body's heat and desire higher with light soft touches, squeezes, and firm strokes. Her body was extremely sensitive and responsive to those light touches, and her breasts were even more so. The most sensitive of all my ladies that way, which was directly opposed to her dream, treating her breasts roughly would be like tossing ice water on her body, her heat and ardor would cool quickly.\n\nCassia liked hers abused, I could be quite firm with Tammy's, a little less so than Faith's, but Irze's was even more sensitive than Lysa's, and couldn't be abused at all.\n\nPoint being, the improvisation worked better than I could have imagined. The dual sensations of my hard-demanding lips and pinning her down with my body and restraining her hands tightly, while I teased her body lightly with my fingertips had her gasping and trembling in no time at all. That mixture of soft and hard drove her absolutely insane, and her body quivered and shivered below mine, as she let out the sexiest breathy and melodically sweet moans and pleasure-filled gasps I'd ever heard. Her voice was naturally melodic, and no longer hard at all, at least not while we were playing.\n\nMy cock was so hard it hurt, and as I gently brushed her nipples with the pad of my thumbs, and barely touched her skin as I traced the bottom of her pert B cups with my fingertips. She started to relax under me at that point, sighing deeply in pleasure, as her body stopped wiggling quite so hard, and her hands stopped trying to escape my grasp.\n\nShe shivered under my fingertips, as I traced them down her silken stomach, and over her hips, back around her legs and onto her inner thighs. Her whole body jumped violently, as I gently brushed her heated and moist labia for the first time, even as I nipped her ear.\n\n\"You're mine,\" I growled, in a shocking contrast to the soft and sweet way I teased her lips open down below, and she melted into the bed and spread her legs wider, to give me better access.\n\n\"Cam,\" she sighed breathily.\n\nShe was so wet, and so responsive as I opened her up and gently slid two fingers in. She was tight, very tight, but I knew her body would stretch open for me and take all ten impossibly thick inches if I was patient.\n\nI twitched hard against her soft thigh, as I gently thumbed her clitoral hood, and dug deep inside of her with slightly curled fingers, and my magic led me unerringly to that slight rough spot that made her whole body jump as if electrified. Then I pushed down on her clit with my thumb, and moved it slowly in a teasing circle, not touching it directly, but through the moist folds of her hood.\n\n\"Cam!\" she practically sung my name in that breathy gasp, as her body started to tremble, and her tight heat quivered, rippled, and convulsed around my fingers as her satiny hot liquid satisfaction ran from her core. Her keening pleasure sounded like sweet music to my ears.\n\n\"Mine,\" I said roughly into her ear, as she came for me beautifully, I leaned back to watch it in her eyes, as she looked up at me with a mixture of sweet shock and pleasured awe in her vivid violet eyes.\n\nI took my place between her legs, and then I pushed in as she started to come down.\n\nShe gasped sharply, and I groaned deeply in pleasure at the feeling of her hot, wet, and wonderfully soft and tight pussy wrapped around me as she engulfed me in pleasure.\n\nHer eyes widened, as she moaned, arched her back, and ground up against me eagerly, and I concentrated on keeping my control as I worked myself into her hot sheath. Her body was wildly responsive, not just to my ever-deepening inexorable invasion, but the way I softly stroked her side, stomach, and breasts with my free hand, as I continued to pin down her hands with my other.\n\nHer body was tight, supple, and so damned sexy, it took a concerted act of will not to explode in her before I was buried. It was somewhat of a shock, as the last inch of ten was fully buried into her hot tightly curvy body. \n\nHer sex convulsed, and I worked to get used to how much I stretched her out, and how perfectly and fully I filled her to the end of her tight canal. Her breathless sighs of pleasure mixed with the slight pain at my size turned me on and made my cock twitch inside her powerfully. \n\nI wasn't that concerned about the pain part, and I assumed that's what a Drow female wanted and needed, a little pain to ride with the euphoric pleasure. I knew my magic knew what it was doing, and I wouldn't be that big if it wasn't perfect for her body and what she needed. It was only the ravishing and taking part of her fantasy that I'd needed to improvise on, which had gone quite will in my opinion.\n\nShe bucked her body, and she ground up into me desperately.\n\n\"Cam, I want to touch you,\" she begged in a musical voice.\n\nI growled, \"Mine, tell me.\"\n\nHer eyes widened, then narrowed as she squeezed her pussy tightly around me, bore down and milked me, and I took that for the challenge it was, even as I let out a long moan of pleasure at her milking and powerfully tight heat along my sensitive length.\n\nApparently, I still had to earn it, so her hands stayed pinned for the moment, but the warming up was over with, and it was time for that forceful ravishing of her fantasies. I kissed her with demanding passion, it wasn't hard to do, she evoked a deep passion and lust in me, her lithe body, her tight and wet pussy, her eager passion, her musical voice, and the exotic beauty of her Drow heritage, all drove my lust to new heights.\n\nMuch like the rest of my coterie and Tammy, if for different reasons, the variety of my ladies' bodies and attitudes was a wonderful thing. Not just for the shallow differences, but despite that I couldn't deny that shallow differing chemical attractions weren't a part of it as well. After all, I only loved two of the five at that point in my life, though the coterie was about more than just the sex, a lot more, it was hard to convince my cock of that at times.\n\nLike that time, the first time I was balls deep in my exotically, magnificently, and exquisitely beautiful Drow.\n\nPoint was, I still had to earn it, and I went straight to hardcore fucking, and started to long-stroke all ten inches in and out of her body forcefully, pounding my cock hard into her body, impaling her with every breath as our bodies started to slam together with wanton abandon.\n\nShe wasn't idle either, and started to thrust herself up against me, even as she gasped in pleasure, and other musical feminine sounds of pleasure fell from her lips. She squeezed me tightly and ground aggressively each time our bodies slapped together, filling the room with the lewd sounds of wild and out of control sex, as well as the deep moans of pleasure that fell from both of our mouths.\n\nIn essence, just like in her greatest sexual fantasy, I was fucking her into submission with my long and ridiculously fat cock. I was earning it, just like she wanted, like she dreamed, a male to take her and force her to submit. I knew the last part of her fantasy, the trust, would take time, trust couldn't be forced after all, not even with a ten-inch cock, but I'd sure as hell give her the first part of it, and claim her as mine before I let myself fill her for the first time.\n\nShe loved it, lost herself in the wild and wanton fucking as I drilled into her non-stop, and as hard and fast as I could. She started to cum for me over and over, violently and easily as she trembled and quivered around my cock, bathing it with her hot silky liquid bliss. She'd cum several times, and her whole body was covered in a sheen of sweat and she looked far beyond just well-fucked, I'd been railing into her for a good half an hour, and five or six major orgasms, before I asked again.\n\nShe wasn't the only one covered in sweat either, I'd been working hard to claim her as mine.\n\n\"Mine, tell me!\" I demanded.\n\nHer violet eyes were wide, pleasure addled, and I knew she was dangerously close to overstimulation as her body got close to the edge for her seventh powerfully explosive orgasm. For the last five minutes or so, she'd stopped bucking up into me, and she only managed to squeeze herself around me tightly on occasion. In short, she was real close to worn out and feeling very well fucked.\n\nI was damned close as well, even without her tight squeezes and perfectly timed grinds, her sex was still pure heaven, the blissful friction still tight enough to milk me with every stroke, and the way she said my name as she went over had almost broken my will more than once. Only my strong desire to claim her as mine, and to fulfill her ultimate fantasy, had kept me from releasing my will and magic that held back the tide of ultimate pleasure.\n\nHer eyes widened further at my demand, a deep and frightened vulnerability rose up and joined the pleasure-addled emotions on her face, and in her startlingly lovely violet eyes.\n\n\"Yours, Cam, I'm yours,\" she said in hopeful surrender, and I'd never heard such a sweet tone in her naturally musical voice before, much less the powerful vulnerability of the words.\n\nI replied, \"Then cum for me, now!\"\n\nHer body instantly obeyed, and I knew she'd told me the truth. She exploded around me for the seventh time, her tight sex gripped, convulsed, and milked me, as she once again started to keen in ecstasy, her body squirmed uncontrollably under me as her she quivered around my length.\n\nI relaxed my tight hold on my will gladly, giving into her body's demand for my seed, and simultaneously releasing my control on the feeding. I roared her name, as the tide came in a powerful wave that overwhelmed my mind and body with bliss, I twitched powerfully as I buried myself one more time as deeply as I could, and started to empty my balls into her body, in powerful pulses that blew my mind.\n\nAt the same time, the rush of energy that entered my body pushed the pleasure even higher, as I fed from my Drow cleric's soul for the first time. It was insanely intense, and my explosion inside of her body seemed to set her off into another even stronger orgasm, as her pussy eagerly claimed the gift of my seed.\n\nI kissed her softly, for the first time in a way that was not demanding at all, but giving, as I ground into her softly in contentment, our liquid pleasure mixed and our bodies melted against each other. I also released her hands, which immediately stroked my body with a soft awe.\n\nShe sighed in pleasure, and she returned my kiss with an ardor that touched my heart. She was mine, though I knew trust and a true connection would take time, her body was mine, as was her loyalty to the coterie.\n\nThat was only verified a moment later when I pulled out, rolled to the side, and tried to gather her body to me in the spooning position. She twisted and rolled around so we were face to face, but her sweet kiss, and the pleasure filled smile that reached her eyes after we broke it softened that mistrustful move.\n\nShe said wonderingly, \"I didn't expect this. I'd thought you rut me and take your pleasure, tonight was a gift.\"\n\nI caressed her face, and stole a warm kiss, \"You're the gift. Are you sure you can't stay?\"\n\nShe smirked, \"Sleep? Helpless to defend myself? Not anytime soon. I'll be back tomorrow night, I believe my part in this, feeding you, will be a pleasure to undertake. If you need me as an ally, you'll have to wait for that contact, if I need you, I know where you are.\"\n\nI nodded in agreement.\n\nI probably should've been insulted, but for a Drow to sleep unprotected with another Drow would be to invite betrayal, and a dagger in the back. Even mated Drow slept in separate bedrooms, after fucking. I'd have to give her time, and I truly wasn't offended, it would take time as we got to know one another. Plus, the idea that I'd made her submit, was enough of a breakthrough for one night, she truly was mine, I could see it in her eyes. I was the man that could tame her, match her, and her fantasy made flesh.\n\nI was pretty sure that wasn't just my arrogance talking, in my head I mean, I'd felt the surrender of her body in pleasure, and saw it in the look in her eyes.\n\nI stroked her body teasingly, and stole one more lingering kiss, before she left us for the night.\n\nShe smirked, as she got dressed, and I watched her closely, simply and decadently enjoying the view, then she said goodnight to me and my mates before she left the house. I had no idea where she was going, or where she'd stay, but that was by her design. \n\n\"Thoughts?\"\n\nFaith asked, \"Why don't you fuck me like that?\"\n\nI laughed, \"Get over here, and I will, but I seem to remember doing exactly that the first time we slept together.\"\n\nShe bit her lip, and then got into bed and I pulled her firmly against me.\n\nCassia said, \"I think it's going to work out fine, I recognized the look on her face, she truly did surrender to you. We'll see if that changes the next time we see her.\"\n\nI nodded, I didn't think it would, but it was possible. \n\nFaith disagreed, \"Nope, after what you just did? She's your cock slave, just like the rest of us. She also longed to stay, I could smell it on her, she wanted to be held, but she was too afraid.\"\n\nCassia laughed, then hissed, \"You're not supposed to tell him we're his cock slaves!\"",
        "I snorted, and Cassia winked teasingly as she got into the bed on the other side.\n\nOf course, more time had passed than I'd thought, not just the sex but with the Jacen thing, and we felt the wards go off again barely a minute after Irze had left. It wasn't an assassin, or even an invader, it was Lysa, here for her morning fuck and feeding. It made me hope Irze came fairly early in the nights, that way I could have her at night, and Lysa in the morning. Because I knew after Lysa, I'd have to love both Cassia and Faith, while I fed from Faith only for her morning feeding.\n\nNot that four women in a row were too much for me, I'd just prefer to spread it out, three and three, because both of my mates were insatiable and wanted loving every morning and night too. I started to see how too many more would get unmanageable. Not really sex-wise, but in spending enough time together beyond that. \n\nI loved my Faith and Cassia after all, my mates, and I knew I was growing closer to Lysa despite myself, even if she didn't want that level of connection with me. I knew I'd be having that same issue with my Drow as well, I admired her already, for her bravery and commitment to a good goddess, and in being different from the others of her race, apart, banished, due to her hopes and dreams of a better life.\n\nLysa couldn't stay long that morning, so I berated her with creatively dirty and nasty phrases, as I took her in the ass, while she was a good ass slut and bucked back hard against me, begging for me to stroke deeper and harder into her slutty ass. She loved that, to be degraded and used was her kink and it hadn't changed, and she came for me so hard she actually passed out for a few moments, then I kissed her almost lovingly and held her for a few minutes, before she had to leave. She was becoming so precious to me, and sometimes I thought she felt the same way, but of course she wouldn't live with us, she couldn't leave her kiss.\n\nShe wasn't specific about the hurry that morning, but I gathered they were looking for another eighth, and I knew they'd be very careful about who they would recruit to their kiss. It needed to be someone with honor, that wouldn't become a monster as a vampire. Regardless, sometimes she was able to stay a couple of hours, and we got a little more creative about her shaming, which only ever increased her pleasure. Even Faith and Cassia got in on it sometimes, dropping degrading comments from the sidelines.\n\nThen, as I'd promised her before Lysa showed up, I claimed my Faith once again, fucked her into submission while I had her pinned and bent in half, even though she was already submissive and mine. I'd have to remember in the future how much she liked it that way, though she loved when I made love to her too, as I fed from her for the second time. We did fuck wildly on occasion of course, even often, it was just the forceful manhandling and holding down part that I'd been neglecting. \n\nOnly my faith could feed me two times a day, so when I made love to Cassia afterwards, I didn't feed from her at all, she fed me at night.\n\nThen we took a nap, since we hadn't gotten all that much sleep the night before.\n\n\u2003\n\nChapter Six\n\nA few more days passed, without all that much outside of the daily grind happening.\n\nMy coterie of four were steady.\n\nFaith had been right, Irze showed up every night fairly early, right before we went to bed, and was quite insatiable, or in Faith's words, she was my cock slave, even as her wild beauty enthralled and captivated me. My exotically beautiful Drow couldn't get enough. She was also a surprisingly gentle lover, after the initial claiming, and she'd submitted to me. She was also open about her past, I learned a little more about her horrible early life. It was only my questions about where she went at night, and where she slept, when she became at all cagey and quickly changed the subject.\n\nLysa continued to visit in the mornings, and twice over those three days she stayed for hours, not just for a longer nasty and demeaning sex session with soft and loving aftercare cuddling, but to join us for breakfast and just chat. \n\nMy two mates if anything were even more insatiable as we fell deeper in love. Besides our nightly and morning love, right after Irze and Lysa, it wasn't an odd occurrence to have a quickie, or even a marathon once or twice during the day besides. I still wasn't sure if that was my nature influencing them or not, but in the end, I supposed it didn't matter, it was results that counted.\n\nLast but not least, the closer we got to the end of the week, the more Tammy came up in my mind. My voluptuously soft and silky light brown goddess of gardening was definitely in my thoughts. I hoped she didn't regret giving me the gift of her virginity during our long absence, and that she'd be as happy to see me as I'd be to see her. In my mind, she was just as much mine as any in the coterie, even if she could never be truly a part of it.\n\nDespite all that, sex and maintaining my relationships wasn't all I got up to, not by a long shot. We worked hard on the hand to hand and dagger training for my ladies, who needed a good back up for their primary claws and magic as shifter and witch. Faith was also making some progress in fighting more subtly, but I suspected the real test would be real battle. Her fiercely protective instincts weren't fully engaged during sparring after all, only when I was truly in danger.\n\nMy own witch magic continued to get stronger, though not at the jaw-dropping rate of my Cassia who was at that point tossing fire and other deadly short spells around. She spent every available spare minute studying those tomes and learning spells that were far beyond me for the moment. But, my shields were getting stronger and more varied every day as understanding of my body grew more profound. I'd stopped being surprised by the human body, mine specifically, and on what it got up to in order to maintain itself.\n\nMy harvested pool of power for my demon gifts was extremely high, outside the Jacen incident in the tower I hadn't used much of it at all, and my four ladies had me highly powered, more so than ever before, which was a good thing, because things were about to go to hell again as another enemy made themselves known.\n\nLast but not least, we didn't hear anything at all out of the sorcerers during those days. It was clear they had no clue, or at least no proof, that it'd been us that took out Jacen. Hell, there wasn't even proof Jacen was dead, and could be just missing as far as they knew. Siora had obviously kept her word, and not breathed a word of our trespass on their domain, something they wouldn't have forgiven even if it was in defense of our lives.\n\nIt was early dawn on the fourth morning, when the Circle of Nightshade arrived with mercenary help along with themselves, a coven of nine witches, four men and five women, along with fifteen human fighters. We never would find out what triggered the attack, perhaps it was merely greed and they'd hoped to take us down and steal the tomes before we could learn from them and grow in power.\n\nA mistake, as we'd already overpowered the last coven that had the tomes of magic already, but that was life sometimes. To be fair, we were hardly invulnerable or unbeatable, Siora had shown us that, but we also weren't to be trifled with.\n\nNormally, Lysa and Irze, allies and members of my coterie, would be available if we needed them, but obviously not for invasions we didn't know about ahead of time. Of course, thanks to them attacking at dawn, Lysa just happened to be tied up and quite lewdly and helplessly displayed in our bed with us as they invaded. Stupid or not, it was the most annoying part of the whole affair, being cockblocked like that in the middle of Lysa's and my fun.\n\nI blame that silliness on my demonic libido, and in being a healthy eighteen-year-old man.\n\nRegardless, we untied her quickly, and got minimally dressed and grabbed our weapons as the mercenaries broke in the gate and charged across the front yard to the house. The Circle of Nightshade came in their wake, and they set up a circle and started to cast right there in our front yard.\n\nLysa and I had never fought, but I knew she was fast and extremely deadly, faster than me, and stronger. If it wasn't for my demon magic, she'd probably take me in a fight.\n\nI growled, \"You get the mercenaries,\" as they knocked in our front door, and started to stream into the house with brandished weapons.\n\nFaith asked, \"What are you doing?\"\n\nI said, \"The circle,\" and wings burst from my back, horns grew from my head, and my hand changed into claws as I dove out the window.\n\nI swooped down and flew over them in a tight circle, as I blasted them all with the fires of hell. Of course, they must've known what I was, because not one of them was eaten by the flames as their shields held it at bay.\n\nI got hit with a death spell of some kind, I had no idea what their chanting meant, but my skin grew hot as the feeling of flames rose to the surface, and I burned away the pins and needles of their spell as it tried to get to me. I suspected my witch shield helped as well, as it didn't take all that much energy, and I landed in their midst.\n\nMy sword whipped out like a striking cobra, and a head was separated from its shoulders, and in the next split second my left-hand claw tore a throat open. The third met my sword with his own, but my follow up kick and the claws on my feet disemboweled the bastard as the other six started independent spells, based on the fact they were all using different words.\n\nBack in the house, as my mates would tell me later, both Faith and Lysa were fighting the mercenaries and taking them down at the master bedroom doorway where their numbers were limited, and in the next second half of the remaining circle went down to the ground and lost their place in their spell, to a powerful gust of wind my Cassia cast from the open bedroom window.\n\nTwo of them finished a spell, one a fireball, the other a death spell of some kind. My combined demonic and witch shield destroyed the spells before they could penetrate skin, and although the fire felt hot against my skin my witch shield prevented my skin from overheating and burning, maintaining my body's natural balance.\n\nI ignored the three on the ground for the moment, and I took down the other three mercilessly with quickened untraceable movements, with a stab of my sword to a heart, a slash of my left claw across another throat, and a sided kick and pulling down movement to rip open another belly. That last one took a swing of my sword as well, and the second head went flying into the dawn's light.\n\nI turned to those three knocked over by the wind as they struggled to get up, when my mate Cassia's second spell struck. It was an even tighter wind, almost visible to the eye, that left slash marks across one of the witch's face, neck, and chest, and she fell back to the ground with a loud cry of pain as her lifeblood flowed from the wounds of air blades.\n\nI knew she'd used that spell, because death spells directly on the target wouldn't work all that great against any witch, because their own body and shielding that body from unnatural change is the first thing every witch learns. The spell was commonly known by all. Still, I was a little shocked the woman's shield hadn't protected her from that attack better, but then remembered the spell words for protecting against the elements that we'd added to our shields came out of the tomes.\n\nProtecting from magic and protecting from secondary effects of magic were two different things, and only we had the words to accomplish the second through improved shields.\n\nIn short, the witch could very well have had a perfect understanding of her body, but if she didn't have the words and keys of knowledge to defend from the elements, that didn't make a bit of difference. A witch's true power depended on both, nether knowledge or understanding was enough on their own. It was a little shocking, to realize my own shields as a nascent witch were probably more effective than theirs, who had spent years learning the mysteries of nature, but suffered a lack of knowledge in spell craft.\n\nA split second after the woman fell, my sword whipped around cutting the air and fell onto the neck of a man rising to his feet, and the head and body fell back to the ground in separate places.\n\nThe last witch stumbled to her feet, and she ran for the gate. Demons were a lot faster than humans, which was why my sword and claw was so devastatingly effective, and before she made three steps my claws raked down her back and severed her spinal cord. She only had time to whimper once, before I bent down and tore out her throat with my left-claw.\n\nI looked up at the house in question, and Cassia looked over at the bedroom door and back, and then she held up a thumb. Good, they'd handled the mercenaries. I was soaked with blood, and badly in need of a bath. Curiously, I bathed one of the corpses in fire, and it was consumed, utterly. Apparently, some life remained in a body after death, for a short time. That made cleanup easy. I didn't want to waste a lot of power on it though, so I just hit each corpse with a tiny bit of fire. It took longer for their corpses to be burned to nothing, but it took a lot less power to burn the eight remaining in total, than I'd spent on the first. Of course, since they were dead, I felt no guilt as there was no torturous pain for them to endure.\n\nI grabbed up all their clothes, and headed inside, straight for the tub. It wasn't too much longer before we were back in bed, and I took up where I left off with Lysa, then loved my two beautiful and beloved mates quite vigorously. They were all extremely hot and ready for sex after the danger of the attack. \n\nWe were all completely sated, for the moment, as I held them in my arms.\n\nCassia asked, \"Why did you do that earlier? Jump out the window and go for the coven. We could've stuck together, like we usually do.\"\n\nI frowned, \"They were casting on the lawn, I wasn't sure what they were doing, but I feared letting the mercenaries distract us so they could finish that work. Any idea what they were doing?\"\n\nCassia said, \"I think it was a spell to find the tomes, nothing deadly for us, or that would have meant our undoing. We had time to take care of the mercenaries first, and then face them together.\"\n\nFaith also didn't look pleased, probably because she couldn't keep an eye on me during the battle, but at least Lysa looked amused.\n\nI sighed, \"Sorry, I won't run off like that again, but I knew the three of you could easily handle the mercenaries with Lysa here to back you up. Next time I'll ask, if I don't know what an enemy's up to, I thought it was a flanking maneuver of sorts.\"\n\nThey both looked mollified, and I snuggled in deeper as I shared a kiss with both, Lysa was practically on top of me, so that I could get my hands on all three of them. They didn't share pleasure, but they didn't mind so much if their bodies touched while making me the focus during our cuddle time, though it was rare I cuddled with all three at once.\n\nLysa said, \"I'm familiar with the coven, and their house. Want to go raid their strongbox? They won't be needing it anymore, and aren't you a hundred gold or so in debt to the crown?\"\n\nHmm, I wasn't a thief, but taking the spoils of war was a different story. I wouldn't mind paying off that debt either, so we got the full thirty gold every month and perhaps had a bigger cushion to fall back on, depending on how much the coven had squirreled away.\n\nI pulled her up my body, and then claimed a lingering kiss that was so soft and sweet it made my lithe and sexy vampire blush. I smirked at the soft vulnerable look on my vampire's aristocratically beautiful face when I broke it. It was good to see I wasn't the only one that was getting attached, past the strict business relationship and empty pleasure she'd implied at the start of our relationship, I mean.\n\n\"Let's go.\"\n\nWe all got up, and we got fully dressed that time. I'd enjoyed my extra weapons, the claws on my feet, but I felt better with my boots on, not to mention my throwing knives. We shared a quick breakfast downstairs, we all needed the energy after the fight and wild sex of that morning, then we headed out.\n\nThe Circle of Nightshade had lived in compound of sorts. There wasn't one main mansion for all nine of them, it was in the upper side of middle class, and walled, with several cottage homes and one bigger building. There was also a barracks there, so I guessed that those mercenaries hadn't been a random hire.\n\nIt was unpleasant, but the first thing we did was to track down and dismiss all the servants, they didn't have masters and would need to find a new job anyway. Lysa and I also took the time with compulsion to make sure they'd forget we were there, and where their masters had gone that morning if they knew. Last, but not least, we'd asked them for all the hiding spots they knew about for their masters' valuables.\n\nWe did give them a gold piece each for severance, which was actually a lot of coin, it would feed them for a month anyway, more than enough for that sort of thing. The thirty gold a month deal we had for the important job of maintaining the castle wards really was a fortune, or it would grow to be over time once our debts were paid off. It would only take a tenth of that to keep the three of us in food, the rest we could save or spend as we liked.\n\nOne thing we wouldn't be doing with it was paying mercenaries, who seemed relatively worthless to me. For a pure coven they might come in handy, but I was extremely fast as a warrior, and Cassia thanks to the tomes had plenty of offensive spells, we didn't need mercenaries for their dubious protection against our human neighbors, some of which might be unsavory.\n\nLysa and I went around and collected all the coin stashes, including the main strongbox, and searched for others the servants might have missed, while Cassia and Faith looked over their spell books. After all, I'd been hit with attack spells during the fight, so they must've had a source of spells, not as good as the tomes, but at least beyond what most witches had which tended to be just healing and growing spells.\n\nWe met up in the main building.\n\nI winked, \"We found a hundred and twenty-three gold, in total including silver and bronze. I've been thinking about our idea and think we should just stash this instead of paying off the loan, have it for an emergency fund. It amounts to the same thing if we just pay the loan back over the next year, and it will avoid any awkward questions over our windfall.\"\n\nCassia bit her lip, and then nodded, \"You might be right.\"\n\nLysa grinned, \"It makes sense. You find anything?\"\n\nCassia nodded, \"Most of it is in the tomes, it relates to elements and weather, or healing and harm. The part that isn't in the tomes are spells of locating. I believe that's what they were casting outside the house, my guess was that they expected the mercenaries to bottle us up, and they could steal our tomes and run for it. We can add them to our library.\"\n\n\"That's a terrible plan,\" I noted, almost feeling sorry for the Circle of Nightshade. Almost, the fuckers did attack us after all.\n\nCassia laughed, \"Maybe, but maybe they didn't know that you're a demon, that you have a shifter as a mate, and that you had a visiting vampire in residence. We don't exactly advertise those facts, most people in the city see a coven of two, with the man having a mistress.\"\n\nShe winked at Faith.\n\nFaith winked back, then playfully pasted herself to my side, just like a sexy mistress would. It was a subtle joke, but we both got it, despite her being physically affectionate almost all the time.\n\nCassia laughed, then shrugged, \"Under that light it wasn't quite as horrible a plan as it appears to us. Hopefully, the other covens in the city were paying attention, and they'll stay away.\"",
        "I nodded, \"What if we sold them some spells. Nothing critical, like the wards, or advanced ritual magic, especially the evil stuff we never intend to use like stealing someone else's life, but defensive magic and even offensive magic that wouldn't be very effective against other witches, but that would be against humans and the other races.\"\n\nCassia tilted her head, \"Why?\"\n\nIt was something I'd been thinking about since the sorcerers, and I took a moment to order my thoughts.\n\nI replied, \"They wouldn't be able to attack us any better, but they'd feel safer being able to defend themselves from unsavory and bigoted humans, wouldn't they? They might be less inclined to attack us out of jealousy or in fear to gain power to defend themselves. Plus, I've been thinking about the sorcerers, they seem to share their magic and appear to have built up and reclaimed a lot of knowledge over the years. Why do all the witch covens have enmity with each other?\n\n\"Maybe it's crazy, but witches don't seem to work together well all that much, is that racial or just a learned social convention? I mean, what if tensions blew up again, the sorcerers are powerful and will defend each other, as it stands now the last witches in Cyrene would be put down easily, outside of us. Think about it, they could be just like you, living in fear of random human violence, and just wanting to be able to defend themselves, the same reason you joined forces with me and took out the evil Eternal Rose coven. They can't all be insane and evil outside of us, can they? The whole race could be wiped out one day, if we continue to selfishly hoard knowledge.\"\n\nLysa said, \"Plus, you could make a small fortune.\"\n\nI snickered, that too, but it wasn't my main focus.\n\nCassia nodded slowly, \"I suppose I could work up a spell book and scribe out a dozen or so to sell. Just leave off warding and the advanced rites, and the killing spells that would be marginally effective against us. It'll take time though.\"\n\nI nodded in agreement, \"There's no hurry, and you'll probably learn a lot as you read through the tomes and write out what we can share. Once you have one of the standard spell books done, we can hire a human scribe if you want, to make the copies. Let's head back.\"\n\nCassia smirked, but she also nodded in agreement.\n\nLysa gave me a lingering kiss, then said, \"I'm going to head back to the kiss, I was expected back a while ago.\"\n\nI pinched her ass teasingly, and nibbled her lip, \"I'll see you tomorrow morning then, my lady.\"\n\nLysa blushed at whatever she saw in my eyes, and certainly not because of my teasing pinch and lackluster goodbye, but I couldn't help how I felt. She was mine, for far more reasons at that point than just the coterie, but I'd have to deal with it. It was fine really, but it was a thing, my heart wanted her around more.\n\nWe split up once we reached the upper-class portion of the city.\n\n\u2003\n\nChapter Seven\n\nSecurity was a concern, and since we weren't going to hire mercenaries it was a decently important one. All a rival coven would need to do is wait for us to leave the estate, for any reason, then waltz in and steal our shit. As a result, we'd built one of the extra rooms as a spell work room, and we'd bought a heavy-duty steel banded door that would take a battering ram or strong magic to break down. We also bought a strongbox. \n\nIn the workroom, we put a small amount of gold and silver in the strongbox, and we'd put a few spell books on the shelf that was nothing important at all, just basic shielding and growth spells that every coven and even singular witch had if only by oral instruction passed down the generations. Cassia warded the hell out of it, and even put in a trap ward that would easily stop any human but probably not a determined and well-shielded witch.\n\nOf course, none of that was our true security, that was just the baited room with a few gold and worthless spell books to make a thief not look for our real vault. For true security we decided to depend on simple misdirection and concealment, and no magical protection at all. Magical protection wards would only be a beacon felt by any rival witch walking through our house. A sign that screamed, here are the tomes, help yourselves.\n\nIn short, I built a false wall in the kitchen pantry. We stuck our real strongbox in there, as well as a book shelf. Whenever we left the house, we'd make sure the valuable books were in there before we left. It probably wasn't perfect, but it should be rather effective, and was nothing but the work of a clever and shrewd farm-boy, if I do say so myself. Of course, even if we were gone, we'd feel the alarm wards on the property alert us if there was a breach, and we'd be able to race back and deal with it, hopefully before they'd broken into the bait room, much less our real stash.\n\nCassia sighed softly and tilted her head, when I wrapped my arms around her from behind and kissed her neck. She was making dinner later that same night, but I just couldn't help myself. If anything, it seemed harder every day to keep my hands off my mates.\n\n\"It smells wonderful.\"\n\nShe grinned, and craned her neck, which gave me the opportunity to steal a kiss as my hands worked their magic on her sumptuous body. She gasped into my mouth, then kissed me harder as my thumbs grazed the bottom of her generous D cups, while I teased her stomach with my fingertips.\n\n\"Cam, dinner,\" she half-heartedly scolded, rather breathlessly.\n\nI chuckled in a low voice that made her quiver in my arms, and then she bit her lip. I caressed her side, hips, and then her tight heart shaped ass teasingly as I took a step back. I loved to seduce my sweet and sexy witch, she was explosively responsive to my every touch, and no doubt soaked down below in that moment.\n\nShe bit her lip, \"Evil man.\"\n\nHer warm brown eyes were telling me something very different.\n\nI nodded easily, \"Your demon.\"\n\nShe giggled, \"We need to talk.\"\n\n\"About?\" I raised an eyebrow in question, as I sat down at the table, she was too much temptation otherwise, and if I took her over the counter dinner would be burned.\n\nFaith was usually with us almost all the time, except she'd been working on her throwing dagger practice, and was in the bath getting ready for dinner. Cassia had been working on the spell books most of the afternoon, while I'd taken care of the security. I hadn't actually seen either of them for a couple of hours.\n\nShe smirked, \"Remember when I said I'd leave that certain spell in place, for a while, when we first admitted how we really felt about each other?\"\n\nI laughed, \"Yes, I remember, I'd bullied you into being mine for life if I remember right, right after we'd made love.\"\n\nShe snickered, \"Yes, you did, and you cheated. I seem to remember you being inside me at the time. Anyway, things have changed. We have a fantastic amount of coin coming in, a large nest egg from the day's work, and a home with lots of empty bedrooms upstairs. The coterie is four strong, and although we have enemies and Lysa and Irze could call on us at any moment, that's kind of steady too, even if I suspect you aren't done yet.\"\n\nI lifted my arm and waved my hand back and forth.\n\n\"I was thinking a max of six, that should be more than enough. Of course, who knows when I'll run into another powerful woman in need, that would be willing to make such a deal for strong allies.\"\n\nShe nodded, \"So two more at most, point is things are pretty stable, we're established, have a home, steady coin coming in, and our influence in the city is already being felt. Shortly, in a month or so, the other covens may even be our allies thanks to your idea, I'm ashamed that I never even considered that course of action before you suggested it.\"\n\nI nodded, \"What are you saying exactly, this is quite a buildup.\"\n\nShe tilted her head, \"I'm ready, is what I'm saying. I removed the spell an hour ago, let it die out. You still want children with me?\"\n\nA surge of lust went through my body that was so strong, I felt dizzy with it. Put my sweet witch with child, hell yes.\n\n\"Yes, love, very much.\"\n\nShe blushed, either from what was in my eyes, or the obvious and breathless hunger in my tone of voice.\n\nShe tilted her head, and said in a faux innocent tone, \"I might even be fertile, I imagine if you fucked me, I might get pregnant right in that moment.\"\n\nI glared, \"This is revenge, for teasing you isn't it?\"\n\nI was so hard at the thought of knocking her up it ached in its confinement.\n\nShe giggled naughtily, clearly more than pleased by my reaction, and she enjoyed teasing me, the sexy imp, \"I don't know what you mean, my mate.\"\n\nFaith walked in the kitchen, and my eyes narrowed as a plan came together.\n\nI got up and kissed Faith softly, then walked towards Cassia with determination, and an aching cock.\n\nHer eyes widened slightly in breathless alarm at whatever she saw in my face, but then she was over my shoulder and squealing in surprise.\n\nI spanked her ass to quiet her down, which made my witch gasp in shocked pleasure, as I looked over at my surprised Faith, who'd missed the whole conversation.\n\n\"Finish dinner,\" I ordered, \"We'll be back down in a... bit.\"\n\nFaith looked bemused, as she moved toward the stove and watched me carry Cassia out of the kitchen and up the stairs.\n\n\"Cam!\" Cassia tried to sound indignant, but it came out breathily amused, and very excited.\n\nI growled, \"I'm gonna fuck you now, my sweet witch, and put a baby in you.\"\n\nWhen we got to the room, I tossed her on the bed, shucked my pants, and dove in after her. I was practically insane with lust, at the thought of my sweet wiseass witch being fertile. I didn't have the patience for the undressing part, I just kissed her hungrily, and pushed up the skirt of her dress up around her waist, and pulled her panties to the side.\n\nI did have enough self-control to check her first, with my magic, and she was as hot, horny, and as turned on as I was. Perhaps she'd underestimated just how much it would turn me on and my insane lustful response had lit her on fire, and I was sure my teasing strokes and the teasing kisses to her neck earlier had a part in it, but for whatever reason she was already soaked for me.\n\nI lined myself up, and I drove inside of her with an almost vicious thrust as I impaled her heaven with my long and very thick cock. I made it about a third of the way inside her soft and hot pleasure, and we both let out a gasp of pleasure.\n\nShe breathed, \"Cam!\" and then sighed in shaky pleasure, then her heat squeezed tightly around my sensitive tip, massaging it with the hot and tight walls of her silken sheath.\n\nShe was always incredibly tight, but when her muscles released me to the point that it was just her normal tightness, I started to push inside her with inexorable strokes, getting a little deeper each time, as I looked deeply into her shocked and extremely vulnerable and heated eyes.\n\nI reached up and tweaked her nipples and teased her breasts through the dress. I was able to be quite firm with them, to raise her up higher, but she wasn't quite at the point where I could maul them yet.\n\nShe loved her tits mauled, but only when she was very near the height of her euphoria.\n\nShe said breathily in excitement, \"You really like that don't you, the idea of putting a baby in me. Does it turn you on to think you could knock me up, put a baby in my tight innocent little pussy?\"\n\nFucking hell, her naturally sweet voice with just a tinge of sultry that she purposefully put into it was so hot when she talked a little dirty. \n\n\"Yes, my witch, it does. You're mine, and you're going to have my baby.\"\n\nShe gasped, arched her back, and provided the eager counterthrust required to finish burying my cock in her tightly lush body.\n\n\"I love you, my Cassia.\"\n\nHer eyes widened defenselessly, then softened in loving surrender and deep lust as I started to work myself in and out of her tight sex with full long strokes of my cock. She gasped, quivered, and squeezed around me like a vise when I pinched and lightly twisted her nipple.\n\n\"I love you too,\" she said in a soft loving sigh, as she started to buck up into me, impaling herself with a breathless eagerness that blew my mind. She was still a wild and amazing fuck, as she went crazy under my inexorable sensual assault, and worked my cock as hard as I did her pussy, with tight squeezes, subtle grinds, and sweet breathy moans that drove me insane.\n\nI was still lost in the lust, at the idea of impregnating my sweet and sexy witch, and there was no doubt our bodies were fucking, but despite that our words and glances were more loving than debauched. It was almost a contradiction, as we truly made love with desperate wild thrusts of our bodies, but in that moment, it made perfect sense, and I drove into her with a will as our bodies slammed and ground into each other's with an almost frantic coupling and wild need... in love.\n\nThe soft beauty of her face, and the look of loving lust in her light brown eyes drove me crazy, as I continued to work in and out of her. The euphoria that the hot, wet, and silken friction of her body brought me through my sensitive tip was mind-blowing, as always, but there was something more, just the idea of her getting pregnant had me already hovering on the edge.\n\n\"So beautiful, you are mine Cassia, always.\"\n\nHer breathing and my magic told me she was close to the edge of the abyss of pleasure as well, but she managed to respond to me in gasping words, one or two words a breath.\n\n\"Yours, always, Cam. So good, filling me, stretching me, loving me, give me a baby Cam, fill me, please, I need it. I know, I tease you, about it, but I really, really am, your cock slave, your love in this life, in all things, and in all ways, I am, yours, always yours, forever yours, in joy and, deep devotion,\" she said in a breathy surrender, and she continued to say my name over and over, and how much she loved me.\n\nFuck, the surge of lust blew past all my controls at her sweet pleading voice saying those words, over and over again, and although I could've suppressed it with my demon nature and magic, I didn't want to. I wanted to fill her, impregnate her, and start a family with her. She was truly mine, and I lost myself in the explosive buildup of euphoria inexorably rising in my body.\n\nI reached up and gripped her nipple tightly, and pulled and twisted harshly, even as I felt my legs go numb, and my balls start to boil. I knew her body well enough to know that'd set her off, make her launch into ecstasy with me.\n\nShe gasped and cried out, \"Cam!\" as her pussy locked down around me, then she started to convulse as she flooded my cock and balls with one of her rare and powerful squirts. The overwhelming blissful pleasure in her eyes in that moment was a reflection of my own, as I started to pulse my life-giving seed into her fertile womb. \n\nWe rode the wave of rapture together, and it seemed to last an eternity as I pulsed more and more of my seed into her body, until it ended far too soon. Our eyes were intimately locked, and hers were wide with vulnerable love and awe as she bit her lip and blushed. The vulnerability was deeper in that moment than ever before, not just containing our love and lust, but the intense desire to make a child which was naked in both of our eyes.\n\nThen she smiled a little wickedly, her voice was still breathy, and more than a little blissed out when she spoke.\n\n\"I did mean to tease you in the kitchen, but I had no idea...\"\n\nI grinned, \"You seem pleased enough.\"\n\nShe blushed, \"It excites me, how much you want a family with me, a baby. Yes, I'm pleased by the reaction, my love. You know I love it when you claim me like that, when you take me. I love how vulnerable and absolutely safe I feel in your arms, when you take me, when you fill me. Every time I cum for you, is a reminder that my soul is safe with you.\"\n\nMy cock twitched inside of her, and it recovered at her words. I may have claimed her, and been the man, but she certainly had a lot of power over me and my body as well. It was also the first time she'd mentioned the binding in a long time, and I was shocked at the impact and emotion behind those words.\n\nI raised an eyebrow, \"Maybe we should do it again, just in case that one didn't take.\"\n\nShe laughed, \"Can't wait for after dinner?\"\n\nNo, I really couldn't. I made love to her after that, slowly, softly, and it was perhaps even more intense and pleasurable than our wild and wicked coupling. We did eventually go back down for supper, and later in the evening I got a rare private time with my Faith as well, when I claimed her. Usually my mates watched each other be claimed, but not that night, for either of them, until it was time to sleep.\n\nIt wasn't lost on me that my Faith never had any such protection, and it was hard to believe we'd only been together a few weeks, so I wasn't sure if she was pregnant, but I didn't imagine it'd be long before both of my mates were.\n\nIt was a cloudy and blustery day when we headed back to the castle, for our second weekly recharge of the wards that kept the peace and the royal family in power.\n\nI wouldn't say I was nervous exactly, but there was a part of me that wondered at my reception after seducing and taking Tammy's innocence in a single morning. \n\nI wondered if she'd struggled with that, felt my absence, and would welcome my return. No doubt without my presence and my pheromones to influence her and turn her on, she may question what had happened. \n\nI'd find out soon enough. My mocha skinned goddess of the royal garden, with a voluptuous and soft body, and a stunningly and classically beautiful face that was so different than my exotically beautiful and softly beautiful mates. She hadn't been overweight by any means, just not as toned as my two sumptuous mates. There was an appeal to that, and a need to protect.\n\nTammy wasn't a part of my coterie, but she felt like mine anyway, even if all we could ever have was a one day a week affair. In short, I was more worried about her, not so much myself. It wasn't as if I'd suffer if she spurned further advances, and I wondered if she'd been filled with regret this last week for losing her innocence to a man she could never truly claim.\n\nOnce again, we were greeted by a page at the door, and taken to Andrew who then took us to the royal gardens. I can only imagine the point of the hand off was that the page didn't have access to the private royal apartments and areas of the castle. Not to mention the vial of the family's blood.\n\nThe Seneschal, Duke Andrew, merely led us to the door that second time, presumably because we already knew where the statue was inside the garden.\n\nHe said, \"I'll be back here to collect you in three hours, or sooner if you finish. Like last time, just return to this door and someone will send for me if you need assistance, or if you finish early. Just out of curiosity, have you heard of a sorcerer named Jacen?\"\n\nI tilted my head, and said disingenuously, \"You know, that name does sound familiar. I believe that's the sorcerer who tried to kill us with an assassin.\"\n\nAndrew laughed delightedly, \"I see, wonderful. It seems he up and disappeared, and no one in the tower knows where he is. Apparently, there's no signs of foul play at all.\"\n\nI took that to mean good job, and that the sorcerers have no idea what we did.\n\nI nodded, \"That would make sense, from what the person he sent told us, he was acting alone in desperate ambition. I imagine no one is asking the right questions. Well, almost no one.\"\n\nAndrew chuckled politely at my sally, \"I'll leave you to your work, my duty calls.\"\n\nWe gave the requisite bow, and then headed into the garden after he walked away.\n\nCassia and Faith headed for the statue, while I searched out the focus of my thoughts. It didn't take long before I found her, she was working in row of flowers, sweat covered from her work in the garden, and despite that still one of the most stunningly beautiful women I'd ever laid eyes on."
    ],
    "authorname": "Magicwrtr",
    "tags": [
        "cambion",
        "demon",
        "incubus",
        "witch",
        "vampire",
        "elf",
        "drow",
        "harem",
        "shifter"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/cams-justice"
}