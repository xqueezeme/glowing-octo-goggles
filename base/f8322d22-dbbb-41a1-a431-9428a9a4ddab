{
    "title": "Trailer Trash Ch. 03",
    "pages": [
        "Note from Slick: This is the last chapter of the Trailer Trash story. Please read \"Trailer Trash Ch. 01 and 02 first to get up to date. All characters are at least 18 years old in the story. All rights reserved. \n\n*\n\n\"Emily wait up!\" Brandon yelled from behind the two mutt dogs trying to catch Emily. She had about a 50 foot lead on him and the dogs and the gap was getting wider and wider. He saw her go around a turn in the road and when he moved around it he stopped next to her. \n\n\"Th...th...thanks,\" he huffed and puffed. \n\n\"I didn't stop for you,\" she whispered. \"Look.\" \n\nBrandon looked over her head across a weed-filled lawn at an old mobile home. Carrying in a box was Missy. \"Holy shit.\" \n\n\"I heard she had to leave her big house but I...I never expected this,\" Emily said wanting to smile but didn't. \n\n\"Good. She deserves to live in a trailer,\" he said without thinking. \n\nEmily turned and glared at him. \"No...that's not what I meant...\" Before he finished she bolted up the dirt road. \"Emily...stop...oh God not again,\" he said as he took off behind the dogs again. \n\n*****\n\nMissy wanted to move in at night but the only time her mother could get someone to help them move was during the day. She tried to hide her face as much as possible but when she moved up the steps she heard Brandon's voice. She quickly turned and saw him running up the road behind Emily. \"Shit.\" \n\n\"Missy put that box in the kitchen,\" her mother said when she entered the trailer. \n\n\"Mom...please can't we get an apartment down town somewhere?\" Missy whined. \n\n\"We can't even afford an apartment right now. When your father gets out of jail he told me he will get us out of here.\" \n\n\"I'm never leaving this...this...this...trailer.\" \n\n*****\n\nEmily was surprised when she heard Brandon's footsteps catching up to her. She was running full blast but he was at her heels. She knew he didn't mean to put her down with the trailer remark but she wanted to bust his chops. She turned and ran backwards. \"So do I deserve to live in a trailer too?\" \n\n\"I wasn't...talking about...you,\" he panted. Since he was looking at her he didn't see the hole in the dirt road and his body went tumbling head first. \"AHHH!\" \n\nEmily quickly stopped and leaned over to help him. \"Are you alright?\" \n\nSuddenly he grabbed her arm and pulled her down on top of him. \"No I'm not alright.\" He pulled her lips to his and they kissed in the middle of the road. \"I haven't been alright since I talked to you in chemistry.\" \n\n\"Let me up I'm getting dirty,\" she giggled while pushing upward. But he pulled her back down. \n\n\"Tell me you love me.\" \n\n\"Oh this is really romantic,\" she laughed. \"Lying in the middle of a dirt road.\" She looked over at her Cousin Maggie's house but didn't' see anyone around. \n\n\"Tell me,\" he said seriously. \n\n\"Yes I love you now let me up,\" she grinned. When his hands let go she jumped up and took off. \n\n\"WAIT!\" \n\n*****\n\nJanet Miller sat at the kitchen table in the small trailer looking at some real estate books an agent dropped off that morning. Jim was in the shower and she expected Emily and Brandon back any minute. She had been back at the trailer for three weeks now and was feeling pretty cramped. Plus Jim's leg was a lot better and she wanted some quiet time with him in the bedroom. There is no such thing as quiet time in a trailer. The door flew open and Emily lunged in. \"HI MOM!\" \n\n\"Emily,\" Janet said trying to hide the books. \n\n\"What's that?\" Emily asked as she grabbed them from her Mother's hands and read the title. \"Real Estate?\" \n\n\"I was just looking?\" Janet said. \n\nBrandon came in the open door. \"Water...water...please!\" \n\n\"Get it yourself,\" Emily snapped. \n\n\"Emily...that's not nice,\" her Mom said. \n\n\"He wasn't nice to me before,\" Emily said while looking at the books. \"I don't want to move from Jacob Creek.\" \n\n\"Honey we can afford a bigger and better place now. Your father got a big pay increase.\" \n\n\"I don't care.\" She turned and took Brandon's hand. \"Let's go.\" \n\n\"Emily wait.\" \n\n*****\n\n\"Where are we going?\" Brandon asked as he drove up the hill. \n\n\"Your house. You said your parents are away.\" \n\nHe had wanted to get her alone at the house but not with her in this frame of mind. \"Are you sure?\" \n\n\"Yes...I'm sure,\" she said while grabbing his strong arm and pulling his elbow into her soft breast. As soon as he pulled the car into the garage and closed the door behind them she jumped into his arms and kissed him. \"I want...to...make love.\" \n\nBrandon's lips accepted her tongue but when she reached for his zipper he grabbed her hands. \"Not like this.\" \n\nShe smiled and pressed her lips and tongue into his soft neck. \"I know you want to go all the way.\" \n\n\"Emily...sta...stop,\" he said letting her hands go. \"I want to but I want it to be more than this.\" \n\n\"Brandon...\" She giggled as she pulled his hard pink penis from his pants. \"I don't think he agrees with...youuuu.\" \n\n\"He...it does,\" Brandon groaned while she gripped him with both hands. \n\n\"It's a he and I'm going to name him,\" Emily giggled. \"Let's see what shall I call him?\" \n\n\"I can't believe you are going to name my...\" \n\n\"Willie!\" \n\n\"Good one...Willie,\" he laughed. \"Free Willie I get it.\" \n\n\"Not yet you haven't but you will,\" she giggled as she jumped out of the convertible and ran into the house. \n\n\"I don't believe this is happening,\" he commented to no one. He walked into the house and saw her shirt in the hallway. He picked it up and moved into the kitchen where he saw her shorts on the floor. \n\nHe found her bra on the stairs and then her panties by his bedroom door. \"Uh...Emily,\" he said as he held up her clothes as he walked into his room. He expected her to be naked on his bed but the room was empty and the bathroom door closed. He heard the shower come on. He tried the door but it was locked so he knocked. \n\n\"Who is there?\" She yelled. \n\n\"Come on open up,\" he laughed. \n\n\"Who's there?\" \n\n\"Brandon,\" he answered. \n\n\"Sorry only Willie can come in,\" she laughed. \n\nBrandon saw the door crack open only about three or four inches. \"Don't tell me you want me to stick my...stick Willie..through the door opening.\" \n\n\"Yes,\" she giggled. \n\n\"Shit,\" Brandon grunted while he quickly pushed down his shorts and underwear and aimed his semi-hard cock through the door. \n\n\"HI WILLIE!\" She laughed on the other side of the closed door. Her finger tickled across the damp tip. \"Do you want to come in?\" \n\n\"Yesss!\" Brandon answered while moving his dick up and down. Suddenly the door opened and he saw Emily's naked body and...her nearly bald pussy mound. \"Damn.\" \n\n\"Do you like it?\" She whispered while pushing her soft titties into his hard chest and lightly kissing his neck. \n\n\"Yesss,\" he moaned feeling her tummy press into his manhood. He guided his fingertips from behind her back, over her hip and across to where her pubic mound used to be covered with blonde peach fuzz. He easily found her raised and ready clitty. \"I think I'm going to name it...her too.\" \n\nShe giggled while he stroked her pleasure button. \"You're going to name my smoothie?\" Her slit was as wet as she had ever known it to be. \n\n\"Yes...let's see,\" he smiled as he explored down to where her protected gate was. \"Maybe Kitty...or Street Fighter.\" \n\n\"STREET FIGHTER!\" She gasped. \n\n\"It is my favorite video game,\" he chuckled. \n\n\"You're not naming my pussy Street Fighter or Zelda or Grand Turismo,\" she said while biting his earlobe a little hard. \n\n\"I got it,\" he laughed. \"WONKA!\" \n\n\"Wonka?\" \n\n\"If mine is Willie...yours is Wonka.\" \n\n\"Um...Can I put some chocolate on Willie and lick it off later?\" She whispered. \n\n\"Jesus...what's gotten in to you?\" He asked as she guided him into the hot spray of his shower. \n\n\"No one yet,\" she giggled again. She grabbed the soap and told him to turn around. After washing his back and buttocks she handed him the soap and he did hers while taking a lot of time on her soft butt. \n\nShe again took the soap and washed his front but not his raging hard-on. \"Uh...you missed something.\" \n\n\"I don't want Willie to get too excited,\" she smiled before handing him the soap back. \n\n\"You're serious about this aren't you?\" He asked while cupping and rubbing her large mounds with his soap-filled hands. \n\n\"Yes...I love you,\" she whispered before rinsing off and jumping out of the shower. \"I'll be waiting in your bed.\" \n\nBrandon lunged outward and almost fell on the slippery floor but was able to grab onto the towel bar. It broke free from the wall and crashed to the floor with a loud bang. \n\n\"Don't hurt yourself!\" She giggled while lying on her back with her legs slightly parted on his bed. She saw Willie first as his body moved through the doorway. \n\nBrandon moved onto her body and felt her legs open and wrap around his hips. \"Emily.\" \n\n\"Shhh...make me a woman...your woman,\" she whispered. \n\nBrandon had waited for this moment for so long and had planned every detail in his mind but all of those details were lost. He knew he had to use foreplay to get her as ready as he was but when he leaned over to suck on her long hard nipple she pulled his lips up to hers. \"Do it Brandon...hurry,\" she whispered before pushing her tongue into his lips. Her fingers found his hard shaft and guided it to her virginity. As he lowered his hips she felt it give away and some pain but not enough to stop. \n\nTheir eyes never closed as they stayed locked onto each other while two then three inches moved inside. She let go of him and then reached behind him to pull him deeper and deeper until their stomachs met. \n\n\"AHHH!\" He groaned finally feeling sexual heaven. He looked at her. \"I should use a rubber.\" \n\n\"Don't worry,\" she giggled. \"Mom helped me.\" Neither moved for almost two minutes because it felt so good. \"Willie feels good,\" she laughed. \n\n\"Wonka feels even better.\" He pulled it out about three inches and then slowly pushed it back inside. His body wanted to erupt but he wanted to stay joined with his love as long as possible. It was then she squeezed him. \"Oh God.\" \n\nShe giggled and did it again. \n\n\"Emily stop or I'll...\" Suddenly she squeezed again and his body tensed until his hot juices filled her tight tube. \"OH YEAH!\" He cried out. His hips moved rapidly now back and forth until her body rolled side to side. \n\n\"OH GOD BRANDON!\" She screamed. She had expected him to get soft but it stayed rigid. Her muscular legs pushed her hips up and back until she climaxed. \"NOW...OH YES NOW!\" \n\nBrandon kept fucking until finally she grabbed his hips and held him down. \"Stop,\" she laughed. \"I can't take any more and you are so big.\" \n\n\"Sorry...I uh...didn't hurt you did I?\" He moved his hips and his cock backwards. \n\n\"Some, but I'm not complaining,\" she laughed. \"There will be more times,\" she whispered. \"A whole lot,\" she thought. Twenty minutes later was the second time and it lasted a lot longer. \n\n*****\n\nJim hobbled out of the shower in his robe and saw his wife sitting at the table looking at some booklets. \"What's that?\" \n\n\"Real Estate Guides,\" Janet answered. \"I thought maybe we could get something bigger.\" \n\n\"I've been thinking the same but I know Emily won't want to leave the Creek.\" \n\n\"I know. When she saw the booklets she took off with Brandon.\" \n\n\"So why do we have to leave the Creek?\" He grinned. \"I hear the Johnson place is going on the market soon.\" \n\n\"Really. I just love that house,\" Janet grinned. \"If I remember it has a really big master bedroom.\" She pulled open his robe and found his growing manhood. \"I got really horny since I've been gone.\" \n\n\"Uh...what if Emily comes back?\" He said as she removed his robe and stroked him until it pointed up at her face. \n\n\"She's with Brandon.\" \n\n\"True,\" he grinned. \"I'm starting to really like that kid.\" \n\n*****\n\nBrandon was almost asleep when he felt the bed moving. He looked up to see his naked lover grinning. \"Uh oh.\" \n\n\"Lean back,\" Emily giggled. She took the container of Nestles Quick and turned it over. Before he could react the chocolate shot from the tip and covered his limp penis. \n\n\"Jesus,\" he said in total shock. \"What are you doing?\" \n\n\"Willie Wonka...remember?\" She lowered her face and took a big lick of the chocolate from this rising tip. \n\n*****\n\nEmily got in very late that evening but since it was Saturday she didn't think her parents would mind plus she knew they needed some time alone. She kissed Brandon at the door and told him she would see him the next night. When she tip-toed down the hallway she noticed their bedroom door ajar and peeked in to see the naked back of her mother lying across her father's bare chest. She smiled and moved into the bathroom to inspect her violated pussy. Some of the chocolate still lingered. \n\n*****\n\nMissy was sitting in her nylon shorts and a tee shirt on Sunday morning while her mom was at church. She smiled as she called Brandy. \n\n\"Hi,\" Missy said. \"Please come down and pick me up from this low-life hell hole.\" \n\n\"Uh...I'm really busy this morning...uh...you know...cleaning my room,\" Brandy said. \n\n\"Cleaning your room? When did you ever clean your room? Come and get me and I'll help clean your room,\" Missy said getting upset. \n\n\"I...uh...my car...needs some gas. Uh...I think my mom just came home...I got to go...\" \n\n\"Brandy! Wait!\" But Missy only heard the click. She immediately called Allison. Her mom answered and told her to hold on. A few minutes later Allison's mom returned. \n\n\"Uh...I can't seem to find her,\" the woman said. \"Do you want me to leave her a message?\" \n\n\"No...that's OK,\" Missy said realizing that her faithful friends had dumped her because she now lived on Jacob Creek in a mobile home. \n\nShe got up from the sofa to get a drink when she heard some dogs barking. Missy glanced out the small window and saw Emily Miller running down the dirt road with the dogs at her heels. \n\nEmily had her earphones in and the music blasting so she didn't hear the footsteps behind her. She was only running about 50% so when Missy caught up to her she was shocked. \n\n\"Hello,\" Missy smiled before she took off at full speed leaving Emily in her dust. Since Emily was already sweating Missy figured she had been running a while. She turned up her afterburners and peeked back to see the girl about five paces behind and catching. About thirty feet ahead was the school so as she made it to the main gate she suddenly stopped. \"I won!\" \n\n\"Right,\" Emily said smiling. She stopped and stood eye to eye with her new neighbor. \"So how do you like the Creek so far?\" \n\n\"It's just temporary,\" Missy smiled. \"I'll be out of this dump in a few days.\" \n\n\"Good, we don't want your kind down here,\" Emily said boiling mad. She moved up until her stomach pushed into Missy's. Missy stood her ground and even pushed back. They were near the playground so when Emily pushed her with both hands Missy flew backwards and hit the border of the playground. She went tumbling upside down until she landed on her hands and knees. \"You bitch!\" Missy growled before lunging up over the border and grabbing a handful of Emily's hair. \n\nThe pain was intense but Emily managed to grab Missy's hair and the two fell back into the deeper sand and dirt. Emily wrapped her leg over Missy's stomach and pressed until the girl was on her back and Emily was on top of her holding down her hands. \n\n\"Let me up or I'll...\" Missy threatened. \n\n\"What?\" Emily laughed. Although they were about the same height Emily outweighed her by at least ten pounds. \n\n\"THIS!\" Missy screamed as she hooked her right leg upward around Emily's chest and flipped her backwards. Emily tried to stand up but Missy jumped onto her back and was sitting on her. \n\n\"HEY!\" Emily yelled. She tried to pull her way out from under the other girl but couldn't. \n\n\"Give up?\" Missy giggled as she heard the dogs starting to growl. \n\n\"AHHH!\" Missy screamed as one dog bit the sleeve of her tee shirt and pulled backwards. \n\n\"ELVIS GET AWAY!\" Emily screamed at her dog. As Missy moved off of her body Emily swung around to pull her dog off just as the other dog bit into Missy's shorts from the other side. \n\n\"BONER STOP!\" Emily leaned over Missy and pushed the other dog away but not before he tore Missy's shorts. Emily moved back to make sure the girl had not been bitten when she heard Missy laughing. \n\n\"BONER? YOU HAVE A DOG NAMED BONER?\" \n\nEmily tried to keep an angry look but it was too funny. She broke down laughing. \"Yeah...what's wrong with BONER?\" \n\n\"BONER! OH SHIT! Missy laughed as Emily rolled down beside her. Both were covered with dirt, in their faces, hair and even under their clothing. Emily smiled and began laughing again until Missy stopped and suddenly started crying. \n\n\"Hey...are you...alright?\" Emily asked seeing real tears falling from the girl's eyes down her dirty cheeks. \n\n\"No...everything sucks,\" Missy said with her eyes closed. \"My girlfriends don't want anything to do with me, my father is in jail and I live in a trailer.\" \n\nEmily started feeling sorry for her and sat upright. Her hatred for the girl still lingered and she had to get away from her. As she moved onto her knees Missy turned and looked at her. \n\n\"I'm...I'm sorry for what I've said about you.\" \n\n*****\n\nBrandon did his best to keep busy around his house but couldn't get Emily off his mind. Finally around 3:00PM he jumped in his car and headed over to Jacob Creek. He didn't see any cars in the drive up to her trailer and had his hopes up for some privacy with her until he walked up onto the porch and heard laughter. He knocked on the door and a few seconds later Emily opened it. \"Brandon.\" \n\n\"Hi...uh..is Maggie here?\" Brandon asked as he peeked through the doorway. \n\n\"No...come in,\" Emily said while standing aside. \n\nBrandon figured it was Maggie or one of the other Creekers so when he saw Missy he about shit his pants right there. \"MISSY?\" \n\n\"Hi Brandon,\" Missy smiled as she sat on the sofa. \n\nBrandon turned and glared at Emily. \"What's she doing here?\" \n\n\"I invited her,\" Emily smiled. \"We were...running and...now she's here.\" \n\n\"Can I talk to you outside?\" He said trying to keep calm. \n\n\"Sure, I'll be right back,\" Emily smiled at Missy. \n\nThey moved out onto the porch. \"Are you crazy? Please don't tell me you two are friends now.\" \n\n\"She's...different,\" Emily said softly so Missy couldn't hear. \"She was crying and...\" \n\n\"Bull shit. You don't know her like I do,\" he said. \"She playing you Emily.\" \n\n\"Maybe...maybe not,\" Emily said. \"We want to go to the mall. Will you drive us?\" \n\n\"You're making a big mistake,\" Brandon said before turning and walking back to his car. A few minutes later Emily and Missy came out. Emily jumped next to him while Missy moved into the back seat. \n\nAs they traveled up the hill from Jacob Creek Missy glanced over the hill at the tiny little houses and trailers down below. She thought of the many times she had made out with Brandon in this back seat and knew those days were over. When they entered the mall Emily took Brandon's hand and they walked towards the food court for a drink. \n\n\"My treat,\" Brandon said not really looking at Missy. \n\n\"You know what I like,\" Missy grinned as Emily and she walked towards the ladies room. A few minutes later Emily was still in one of the stalls when the door opened and Allison and Brandy walked in to see Missy at the sink. They tried to turn and leave but Missy grabbed Brandy's arm. \n\n\"I thought you were cleaning your room today.\" \n\n\"I...uh...cleaned it,\" Brandy smirked. \"So did you ride the bus into town?\" \n\nMissy wanted to deck her right there but only smiled. \"You know it makes me sick to think I was like you two. You think that since you live in a big house it makes you special. It doesn't.\" \n\n\"Let go of my arm Trailer Trash,\" Brandy said as she tried to jerk away. Suddenly Allison moved behind Missy and grabbed around her arms until she let Brandy go. ",
        "\"What now bitch?\" Brandy giggled as she stuck her nose right up into Missy's face. \"The days of me kissing your ass are over.\" Missy struggled to get free but Allison held her tightly. \n\nEmily peeked through the closed stall door and waited until Brandy and Allison were turned away. She quietly opened the door and moved up behind Allison. \"Did you just call my friend Trailer Trash?\" \n\nAllison tried to twist around but Emily was too fast. Allison felt her short skirt being pulled down to the floor and then her panties. \n\n\"HEY!\" Allison cried out as she let Missy go and turned to run at Emily. However the panties and skirt around her ankles caused her to trip and she fell face forward with her shiny pink ass pointing upward. \n\nBrandy stood watching and not expecting Missy to attack. Before she could react Missy rammed her forehead forward into Brandy's face. The sound of the girl's broken nose echoed through the restroom. \"OUCH!\" \n\nEmily jumped down on the backs of Allison's knees and pulled the panties and skirt from Allison's kicking feet. \"HEY YOU WHORE...GIVE ME BACK MY PANTIES!\" \n\nAs Brandy moved back with her nose pouring out blood Emily grabbed Missy's hand and they ran from the restroom laughing. \"I don't think they will call you Trailer Trash again,\" Emily said before opening a garbage lid and tossing away the skirt. \n\nMissy stopped and looked at Emily. \"No one has ever done that for me before.\" \n\n\"It was nothing,\" Emily smiled. \"I've been waiting to do it to them for some time now.\" She turned to walk back into the mall when Missy grabbed her and pulled her into her body. They hugged. \n\n\"Thank you.\" \n\n*****\n\nBrandon had been waiting patiently for Emily and Missy to return and had already finished his drink. He picked up their drinks and walked down the hallway towards the restroom. He turned the corner and saw Missy and Emily hugging. \"Are you two having fun?\" \n\nEmily and Missy turned and smiled. \"Yes we just had a lot of fun in the restroom,\" Emily giggled. \n\nBrandon thought they were joking until he looked at what Emily was holding. \"I don't believe it.\" He turned and threw their drinks in the garbage can and hurried away from them. \n\n\"What's wrong with him?\" Missy asked. \n\n\"Shit,\" Emily said as she looked down at Allison's panties in her hand. \"He thinks these are yours.\" \n\nMissy started laughing but realized Emily was taking it seriously. She tried to catch her new friend but Emily was running full speed out through the food court and down the wing. She caught him at the exit door. \"WAIT!\" \n\n\"Emily...get away from me,\" Brandon said before turning and glaring at her. \n\n\"These are not Missy's,\" Emily said trying not to laugh. \n\n\"Right.\" \n\n\"They're not. They are Allison's. She and Brandy jumped us in the restroom and I took them as a souvenir.\" \n\n\"And I'm supposed to believe you,\" Brandon said as he saw Missy running up to him. \n\nEmily smiled and turned to Missy. \"Show him your panties.\" \n\n\"WHAT?\" Missy asked thinking Emily had gone nuts. \n\n\"He thinks these are yours. Show him your panties.\" Emily smiled. \n\nBrandon was speechless as Missy looked around and then pushed down her running shorts until her white lace sheer panties appeared. \"TA DA!\" Missy giggled. \n\n\"We have to get out of here,\" Emily said as she grabbed Brandon's arm. \n\n\"Why?\" \n\n\"Because Missy broke Brandy's nose and I took Allison's skirt and panties.\" \n\n\"Oh...OK right...makes sense to me,\" Brandon said. It was so weird being with his girlfriend and his ex-girlfriend after they just beat up on two other girls. \"Where are we going now?\" \n\n\"To my home,\" Emily smiled. \"I want to make sure my Mother doesn't buy a house somewhere besides the Creek.\" \n\n*****\n\nAs they pulled up to Emily's trailer they saw Maggie on the porch. The shorter girl stood up when she saw Missy. \"What's she doing here?\" \n\n\"I asked her to be here,\" Emily said knowing Maggie hated her. \n\n\"Don't hit me,\" Missy said remembering the punch and the black eye. \n\n\"Come inside and I'll tell you about our day,\" Emily said while guiding Maggie into the trailer. Thirty minutes later Missy and Brandon left. \n\n\"I thought I was your best friend,\" Maggie said. \n\nEmily smiled. \"No one will ever take your place. You're like my sister.\" She hugged her cousin into her. \"So how are you and Bud doing?\" \n\n\"Good...really good,\" Maggie smiled. \"I almost gave in to him last night.\" \n\nEmily smiled. \"You did better than I did last night.\" \n\nAt first Maggie didn't get it but she suddenly realized that Emily was not a virgin anymore. \"Oh my God.\" \n\n\"It was unbelievable,\" Emily gushed. \n\n\"It had to have hurt.\" \n\n\"At first...but then Willie felt really good.\" \n\n\"Willie? I thought it was Brandon.\" \n\n\"Nope...definitely Willie.\" Emily laughed. She spent the next ten minutes telling her every detail including the Willie and Wonka parts. \n\n\"I'm jealous,\" Maggie grinned. \"I think I'll go and give Bud a call right now.\" \n\n\"Do you want to do it here?\" Emily asked. \"Mom and Dad are out for the night.\" \n\n\"Do you want to watch?\" \n\n\"Could I?\" \n\n*****\n\nBud didn't even have his shirt on as he sped up the dirt road to Emily's trailer. Maggie had said Emily's parents were not going to be at home and that it would be his lucky night. He expected to see Brandon's car in the driveway but it was empty. \n\n\"Hello!\" Bud said after knocking on the door. Emily opened the door. \"Is Maggie here?\" \n\n\"Yes...she's in the shower,\" Emily smiled. \"Come in.\" \n\nBud hesitated because he couldn't tell if Emily was wearing anything under the long black tee shirt. \"I...uh...can wait out here.\" \n\n\"Don't be silly,\" she grinned. \"She told me to keep you occupied.\" \n\nBud stumbled over the doorway and followed her to the large TV. He saw her large hard nipples pressing out the top of the shirt and knew she was not wearing a bra. \"Is Brandon coming over?\" \n\n\"No, he had to do something with his parents tonight,\" Emily said as she sat down on the sofa and pulled her legs up under her ass. The shirt opened enough to expose her white panties to his eyes. They could hear the shower still running when he sat down next to her. He peeked at her panties again before jerking his eyes away. She laughed. \n\n\"Bud you've seen me naked before.\" \n\n\"I know...but...Brandon...will kill me.\" \n\n\"I've seen you naked before too,\" she giggled. She could see him squirming in his seat. \"So I hear tonight is your lucky night.\" \n\n\"She...told you?\" \n\n\"We don't have any secrets. She wants me to watch.\" \n\n\"No way,\" Bud said. He knew he would be nervous enough. \n\n\"I'll be naked too,\" Emily teased as she pulled the shirt up over her panties. \n\n\"GOD!\" he cried out when seeing her pink slit through the thin material. \n\n\"She wants you to be naked before she comes out here.\" \n\nBud's body trembled. \"I don't think I can do this.\" \n\nEmily smiled as she peeked at his swollen prick under his shorts. \"Take off your shirt.\" \n\nBud pulled his tee shirt over his head. \"You're right...I mean...we have seen each other naked.\" He stared at her shirt hoping to see those nice puppies again. She giggled and pulled the shirt up over her pink globes and off her head. \"Your turn.\" \n\nBud's fingers were shaking as he unzipped his shorts and pushed them down over his briefs. His six-inch hard-on pushed them outward proudly. \"Your turn,\" he smiled. \n\n\"That's not fair,\" Emily grinned. She saw his eyes on her crotch as she lifted her hips and pushed the silky undies down over her nearly bald pussy lips. \"It's different than last time.\" \n\n\"I like it better,\" Bud smiled as he looked at her shaven lips and swollen clitty. He quickly pushed his briefs over his rocket and kicked them aside. \n\nShe could see he was already about to pop. \"You need to cum before she comes out. It will be better.\" \n\n\"Are you going to help?\" Bud asked suddenly not fearing death from Brandon. \n\n\"I can't do that,\" Emily smiled. \n\n\"You...you want me to...jerk off in front of you?\" \n\n\"Yes,\" she giggled. \n\n\"OK...but you have to do it too.\" \n\nEmily had not even done that for Brandon. She heard the shower turn off. \"OK hurry.\" She opened her legs and rubbed over her raised clitoris. \n\n\"OH FUCK!\" Bud laughed as he stroked his meat. Only ten strokes later his hips shot upward. \n\n\"HERE TAKE THIS!\" Emily grabbed a pile of paper towels and yelled as his hot white lava was about to erupt. \n\n\"You do it,\" Bud smiled. He moved his hand away and watched. \n\n\"I'm going to kill you,\" Emily giggled before reaching down and cupping the tip of his red cock with the towels. She couldn't believe she was actually touching his hard penis even if it was through the paper towel. \n\n\"OH GOD!\" Bud cried out when he felt her hand squeezing him. \n\n\"Empty it,\" she giggled. They heard the bathroom door open and Emily jerked her hand and filled paper towel away. She stood and walked to the garbage can. When a naked Maggie walked in Emily said. \"He's ready.\" \n\n\"Does he have anything left?\" Maggie asked as she dropped to her knees in front of him and grabbed onto his red semi-hard prick. Only ten seconds later its head was peeking over her tight fist. \"He's got a lot left.\" \n\nEmily was on fire as she sat on the sofa and watched them kiss and touch each other as if she wasn't there. She felt guilty for touching Bud and hoped he wouldn't tell Brandon. Her head tilted to the side as his hard shaft pressed into Maggie's virginity. \n\n\"OH BUD!\" Maggie cried out when she became a woman. Emily's finger was doing the same thing as Bud's cock while they all raced towards completion. Screams of satisfaction and pleasure filled the air of the small trailer. \n\n*****\n\nMonday at school was weird for Missy because she rode the school bus while sitting next to Maggie. She knew the girl didn't really trust her yet so she didn't push it. When the bus pulled into the discharge area Missy ducked down hoping the Hillers wouldn't see her riding the bus. \n\nMaggie laughed. \"You might as well just face it. Today will be a worse day if you try to hide it.\" \n\n\"You're right,\" Missy whispered. She sat up and stared out the window at Brandy who was wearing a bandage over her nose. \"I might need your help if they jump me.\" \n\n\"Sure...my pleasure,\" Maggie laughed. \n\nThe trip from the bus to her locker was tough because Missy could see and hear the Hillers talking about her. She kept her chin up and hung close to Maggie who pushed her way through a bunch of Hillers at the door. \n\n\"Hey...let the Creekers through,\" A sophomore football player laughed. He didn't see Brandon moving up behind him. \n\n\"What was that about Creekers?\" Brandon asked before grabbing the kids arm and twisting it behind his back. \n\n\"Brandon!...I was just...joking around,\" the kid groaned. \n\n\"Brandon let him go,\" Emily said as she grabbed her boyfriend's wrist and pulled. \"It's not worth it.\" \n\nAfter he released him the kid took off but the rest of the morning went pretty much the same for Missy. By the time lunch rolled around she had pretty much gotten used to the stares and whispering. She took her lunch tray and stood smiling at the Hiller girls where she used to sit and then at Emily and Maggie. \n\n\"I was wondering where you were going to sit,\" Maggie whispered to Missy after she sat next to her. \n\n\"Those days are over,\" Missy said glancing over at Brandon and Emily who were holding hands. She felt the table move next to her and turned to see Scott Miller sitting next to her. \n\n\"Hi Missy.\" \n\n\"Uh...Hi Scott,\" Missy smiled. She had met Scott a few times at the football parties and had always liked him. Missy turned and looked at Emily who smiled back. She could feel a set-up. \n\n\"So how do you like the Creek so far?\" Scott asked. He wanted to make sure that the old Missy was not sitting next to him. \n\nThey all looked at Missy to hear her reply. \"Actually I like it. The people are so much nicer.\" \n\nScott put his huge hand around her shoulder and pulled her to him for a hug. \"Good. I think you will fit in nicely.\" \n\n*****\n\n\"OK, we've done enough practicing.\" Coach James said to the bunch of girls and guys standing around him. \"Today is our first scrimmage and Ridgewood High beat us in the State Final last year. I hear they expect to win it again. What do you think about that?\" \n\n\"No way!\" Missy cried out. As team captain for the year she knew she had to take charge. \"This is our year!\" \n\n\"YEAH!\" One of the senior hurdlers yelled. \n\n\"OK listen...I've seen what you can do in practice but now it is fish or cut bait time. They are cocky and won't be expecting you to kick their asses. Let's go show them what Glendale High School can do.\" \n\nMissy noticed that Emily looked nervous as they stretched in the infield. \"You know if I was Sarah Jenkins I would be the one nervous.\" \n\nEmily knew Sarah held the State record in the half mile and mile and was the big favorite again this year. \"Thanks,\" she said smiling. She looked over at the stands and saw her mother and father sitting next to Bud and his father. Behind them were Brandon's parents. She hoped she wouldn't disappoint them. \n\nThe start wasn't what the coach had hoped for. Missy was the only winner in the sprints for the girls, two girls had won the hurdles and Brandon won both the javelin and the discus. Glendale was five points behind when Emily stepped up to the starting line for the half-mile. On her left was Sarah Jenkins who smiled at her. \"Good luck.\" \n\n\"You too,\" Emily smiled back. The half mile was twice around the quarter mile track so she wanted to get out of the gate fast to not be stuck in the crowd of runners. \n\nSarah Jenkins figured this was going to be a cake walk since Glendale's only good distance runner had graduated last year and Missy had moved entirely to sprints. The only competition she expected was another girl on her team Cindy Williams. She took her mark and smiled when the gun sounded and then bolted from the line. About 40 yards out she turned to her left and smiled since the group was way back. But when she looked to her right she saw the new Glendale girl on her heels. \"Shit,\" she thought. \n\n\"GO EMILY!\" Janet Miller screamed as she jumped up and down on the metal bleachers. She had never seen her daughter run before and was amazed at her speed. \"OH GOD She might come in second!\" She said aloud. \n\nBrandon's father had watched a few practices and knew Emily was really good. \"Second...hell. How about first?\" \n\nThe two runners were way out in front of the pack and Sarah maintained a lead mainly because Emily hung back wanting to know where Sarah was. As they approached the quarter mile line Emily glanced up at Brandon who was standing next to the track waving his arm. \"GO WONKA!\" \n\nEmily started laughing and saw Sarah glance back to see what was so funny. As they headed to the next turn she heard the other kids yelling, \"GO WONKA!\" \n\n\"What are they yelling?\" Janet asked Maggie who was sitting in front of her. \n\n\"Just a knick name,\" Maggie giggled. \n\n\"GO WONKA!\" Janet screamed. \n\nEmily thought that she had the State champ but suddenly the girl turned on something and took off. They still had half a track to go but time and track was running out. Emily took off too and made up some ground but the girl had such a smooth stride. Emily was about three paces behind her when she heard Coach James. \n\n\"THE DOGS EMILY...THE DOGS ARE CATCHING YOU!\" \n\nEmily giggled and pretended she was on the dirt road on Jacob Creek. \n\nSarah Jenkins never looked back but she knew the other girl was close because the whole Glendale stands were standing and screaming. She heard the footsteps as they approached the finish line and then saw the girl's body fly past. \n\n\"SHE WON! SHE WON! SHE WON!\" Janet Miller kept screaming and screaming. \n\nEmily didn't believe it when she passed Sarah and made it over the finish line. She would normally keep running but she knew she had another race to run and was somewhat in shock. She pulled up short and saw Brandon running over. He picked her up and twirled her around. \"Put me down,\" she said embarrassed. When he did she saw Sarah walking over to her. \n\n\"Nice race,\" Sarah smiled. \"What's your name?\" \n\n\"Emily...Emily Miller,\" she replied. \n\n\"I'll see you in the mile,\" Sarah said before turning and running back to her coach. \n\n\"She was nice.\" Emily said surprised. She kissed Brandon and headed over to the coach. \"The dogs?\" \n\n\"Hey it worked didn't it?\" Coach James smiled. He held out his watch. \"If this had been a regular event you would have set the State record.\" \n\n\"Really? I think I can do better.\" \n\n\"Good,\" The coach said smiling. \"Now go and rest before the mile comes up.\" \n\n\"WONKA! WONKA! WONKA!\" The fans cheered when she walked over with Brandon. \n\n\"I'm going to kill you later,\" she whispered. \n\n\"With chocolate I hope,\" he chuckled. \n\n\"I'm so proud of you baby,\" Jim smiled at his daughter before giving her a big hug. \"Me too,\" Janet grinned while hugging them both. \n\n\"It was just a scrimmage,\" Emily said embarrassed that they were all making such a big deal. \"Besides I still have another race.\" \n\n*****\n\nMissy came over and congratulated her and gave her a hug. Brandy and Allison were on the team but neither had placed in the top five of their events. Missy saw her mother walk into the seating area and waved up at Emily's mother. Being a Creeker wasn't as bad as she had thought. \n\n\"Hey...nice race,\" Scott Miller said as he stood behind the chain link fence. \n\n\"Thanks,\" Missy blushed. After going out with Brandon for so long and taking him for granted she was finally feeling excited about a boy coming on to her. \n\n\"A bunch of us are stopping by Arnie's after the scrimmage. Do you want to come?\" Scott asked. \n\n\"I'll need a ride home,\" she smiled. \n\n\"No problem,\" Scott grinned. \n\n*****\n\n\"Now pace yourself,\" Coach James whispered to Emily as she prepared herself for the mile run. He knew she would put up a good time but she had never run a mile after doing a half-mile. \n\n\"Coach...the dogs remember?\" Emily giggled. She walked up to the line of girls and saw Sarah waiting for her. \n\n\"Who do you train with?\" Sarah asked. \n\n\"Elvis and Boner,\" Emily smiled. \n\n\"What?\" \n\nEmily ignored her as she took her place and waited for the gun. \"BANG!\" She heard the \"WONKA!\"chants again but kept her composure and remembered what the coach had said. Sarah again jumped out to a good lead but Emily stayed about eight paces back running with another Ridgewood girl. \n\n\"You were lucky last time,\" the girl said to Emily. \n\n\"You're right,\" Emily smiled. \"And, I'm going to be lucky again.\" They made it around the first lap in record time and Emily glanced up at her mom who was again screaming and jumping. She made a mental note to tell her later to calm down. \n\nThe three girls again out ran the pack and were almost half the track in front of them when they sped by turn number two. \n\n\"PACE EMILY...PACE!\" Coach James yelled. \n\nShe wanted to take off and catch Sarah but held back. She could see the State Champ periodically look over her shoulder and it caused her to smile because she now knew who Emily Miller was. \n\nAs they completed the third lap the other girl slowly fell back away from Emily and it became a two horse race again. But this time Emily knew Sarah would take off when she had a half lap to go. As they approached that point Emily smiled and raised her chin. Sarah didn't know she was coming until Emily passed her on the outside. \"Shit...who is this girl?\" Sarah took off but it was too late. Emily continued to build speed and distance until it wasn't a close race anymore. When she passed the finish line the whole stadium was standing with most of them in shock. \n\n\"HOLY SHIT!\" Brandon screamed as Emily continued to circle the track. He ran after her but couldn't catch her so he cut across the infield. ",
        "\"Hi Willie,\" Emily giggled when he ran up next to her. \n\n\"Do you know what you just did?\" He asked with a huge smile. \n\n\"Brandon it's just a scrimmage.\" She said knowing it was a lot more than that. \n\n\"You just blew away the State Champ! Besides it gave us enough points to win the scrimmage.\" \n\n\"Calm down,\" Emily said as they ran up to the finish line. She saw Sarah Jenkins waiting for her. \"Nice race.\" Emily smiled. \n\n\"Yes for you,\" Sarah said seriously. \"But, I'll be ready for you in a few weeks.\" She shook Emily's hand and ran back to her team which was huddled in the middle of the track. \n\nAs she approached the stands with Brandon they all stood and applauded. Emily saw Missy standing there and moved over to her. She took Missy's hand and held it up. \"We did this as a team.\" \n\nMissy had never met anyone like Emily before. She didn't want the spotlight and stood behind her friends. They hugged and Emily winked at Brandon who watched how close they were. She was about to leave the track when Coach James walked over with two women. \n\n\"Emily...this is Bobbi Springle and Evette Young from Maryland. They want to meet you.\" \n\nEmily smiled. \"Hello.\" \n\n\"That was some display you put on out there,\" Ms. Springle said as she shook Emily's hand. \"And you have never run track before?\" \n\n\"No Ma'am,\" Emily blushed. \"But I run a lot.\" \n\n\"Apparently,\" Ms. Young laughed. \"Have you thought about college?\" \n\n\"Kind of,\" Emily answered. \"I was hoping for a partial scholarship to Scranton.\" \n\nBoth women laughed. \"I don't think you have to worry about a partial. We are not allowed to get into details but we just wanted you to know we will be back for next weeks meet.\" \n\nEmily smiled at Brandon who was taking it all in. \"I hope I don't disappoint you.\" \n\n\"It was nice meeting you Emily,\" the women said before shaking her hand once more before leaving. \n\n\"Maryland,\" Brandon said. \"That's the ACC. I wish they were recruiting me.\" \n\n\"Well they better if they want me to come to their school,\" Emily whispered before running over to the gate and into her mother's arms. \n\n\"I'm so proud of you,\" Janet whispered before kissing her cheek. \"Me too,\" Jim added as he hugged both women. \n\n\"Us too,\" Sylvia and Paul said as they hugged Emily to them. \n\n\"Hey what about me?\" Brandon asked as they all headed towards the parking lot. \n\n\"Wonka...wonka,\" Maggie giggled as she walked next to him. \n\n*****\n\nIt was later at Arnie's when Emily and Brandon noticed Missy and Scott getting it on in one of the back booths. \"Jesus he didn't waste much time did he?\" Brandon whispered. \n\nEmily dropped his hand from hers. \"Are you jealous?\" \n\n\"What? Of Course not,\" he answered quickly. \"I never thought she could ever change but you were right.\" \n\n\"Are you sure you are not jealous?\" Emily whispered while she reached down and dug her fingernails into his thigh. \n\n\"Be real,\" Brandon groaned in pain. \"Stop.\" He pulled her hand from his leg. \"I wish we could go somewhere and be alone.\" \n\n\"Why has Willie missed me?\" She giggled. \n\n\"He misses Wonka,\" Brandon laughed. \n\n\"I still owe you for that,\" she whispered. \"Now everyone will be yelling my pussy's name as I run around the track.\" She said it so seriously that Brandon broke out laughing. \n\n\"HEY IT'S NOT FUNNY!\" Emily yelled as she jumped on top of his body and lightly hit him on top of his head. But then she broke down laughing as well and they hugged before falling down under the table onto the floor. Seconds later their lips found each other and their legs twisted together. \n\n\"Hey my parents are away for the night,\" Bud said to the horny couple on the floor. \"Do you want to stop by with Maggie and me?\" Two minutes later they jumped into their cars and sped up the hill. \n\nAs Brandon and Bud sat in the den Maggie pulled Emily into the restroom. \"You owe me.\" \n\n\"Owe you? How do I owe you?\" \n\n\"You jerked off Bud and now I want to jerk off Brandon.\" \n\n\"Hey it was just the tip and I didn't really touch IT,\" Emily said nervously. \"I only did it so he would leave a mess on our sofa. Besides if Brandon finds out he'll kill Bud and never talk to me again.\" \n\n\"He won't know if we play truth or dare.\" Maggie grinned. \n\n\"I'm not touching Bud again.\" \n\n\"You won't have to,\" Maggie added. \"Once I touch Brandon we will quit. Besides we have already seen each other naked.\" \n\n\"I have a bad feeling about this,\" Emily said. \n\n\"Don't worry.\" \n\n\"Right.\" \n\n***** \n\n\"Maggie and I did it the other night,\" Bud whispered to Brandon while they waited. \n\n\"You too huh?\" Brandon smiled. \"Where were you?\" \n\nBud hesitated. \"Here,\" he lied. \n\n\"Bullshit, I know when you are lying,\" Brandon laughed. \n\n\"OK, it was at Emily's,\" Bud answered. \"Her parents were not at home and Maggie found out that you and Emily did it so they called me.\" \n\n\"They?\" \n\n\"I can't say anymore or you'll kill me,\" Bud answered. He looked towards the closed bathroom door. \"What's keeping them?\" \n\nBrandon move next to his smaller pal. \"If you don't tell me I'll really kill you.\" \n\n\"Promise me you won't tell the girls,\" Bud said firmly. \n\n\"OK...yes now tell me,\" Brandon said. \n\n\"Shit...I was so hyped up on fucking Maggie I...I mean Emily was there and...we undressed and.\" \n\n\"YOU UNDRESSED AND WHAT?\" Brandon asked now ready to smack him. \n\n\"And Maggie was in the shower and had told Emily to make sure that...that I climaxed before she came out.\" \n\n\"Emily made you climax?\" Brandon said in shock. \n\n\"No...yes...maybe...you see they wanted me to jerk off so I would last longer when Maggie and I did it. Emily and I took off our clothes and I did it.\" \n\n\"Fuck man...you jerked off in front of Emily.\" \n\n\"It was what Maggie wanted and...she said she and Emily did everything together.\" Bud left out the fact that Emily had touched his hard cock. \n\n\"They said that.\" Brandon said as he sat back. \"And Emily watched you and Maggie do it.\" \n\nBud nodded his head. \"She touched herself.\" \n\n\"I need to get Emily and Maggie back.\" Brandon smiled. \"Play along with me when they come out.\" \n\n*****\n\n\"OK...how would you guys like to play a game?\" Maggie said as she led Emily into the den. \n\n\"What game would that be?\" Brandon asked trying not to show Emily how upset he was. \n\n\"Truth or dare,\" Maggie grinned. She couldn't wait to touch Brandon's huge pole. \n\nBrandon smiled at Bud. \"That sounds good to me.\" \n\n\"We uh...don't have to play if you don't want to,\" Emily said to Brandon as she grabbed onto his arm. \n\n\"It sounds like fun and since we are all so good friends we shouldn't hold back,\" Brandon smiled. He remembered how nice Maggie's thick dark bush looked when she had sat on Bud's face that night. \n\n\"OK, I'll go first,\" Maggie grinned. \"Who wants to ask me Truth or Dare?\" \n\n\"I'll do it and then you can ask your choice,\" Brandon grinned. \"Truth or Dare Maggie?\" \n\n\"Truth,\" Maggie said. She didn't want to do a dare just yet. \n\n\"Did you cum the other night when you and Bud went all the way?\" \n\n\"Brandon!\" Emily said loudly. \"She doesn't have to answer that.\" \n\n\"No...that's OK because I did,\" Maggie giggled. It was now her turn. \n\n\"Truth or Dare Brandon,\" Maggie smiled. \n\n\"Dare,\" he smiled. \n\n\"OK, remove your shorts,\" Maggie smiled. \n\n\"Sure,\" he said before unsnapping them and pushing them down over his boxers which were starting to bulge outward. \n\n\"You know maybe we shouldn't play this game,\" Emily said seeing her boyfriend's excitement. \n\n\"I think we should,\" Brandon grinned. \"Truth or Dare Emily?\" \n\nEmily saw something in his eyes she had never seen before. \"Truth.\" \n\n\"Did you masturbate in front of Bud the other night?\" \n\nEmily's jaw dropped as she glared over at Bud. \"I'm not going to answer that.\" \n\n\"It's OK,\" Brandon smiled. \"I mean you and Maggie do everything together right?\" \n\n\"Brandon I didn't think it would go that far,\" Emily said. \"It just happened.\" She didn't know how much he really knew. \n\n\"Let's stop this game,\" Maggie said seeing Emily and Brandon going at it. \n\n\"No...let's play,\" Brandon said. \"Did you?\" \n\nEmily stared at him. \"Yes.\" \n\n\"Good...now it's your turn. I'm not mad.\" He smiled. \n\n\"Are you sure?\" Emily asked. \n\n\"Yes I'm sure. But I am upset you didn't call me to join you.\" \n\n\"You were out with your parents,\" Emily said realizing he really wasn't mad. Actually he was looking excited. \n\n\"It's your turn,\" he grinned. \n\n\"Truth or Dare Maggie,\" Emily said. \n\n\"Dare,\" Maggie answered quickly. She was ready to search down into Brandon's boxers. \n\n\"I dare you to...remove your shirt.\" \n\n\"I'm not wearing a bra,\" Maggie said angrily. She had not planned on getting naked. \n\n\"He's seen you naked before,\" Emily smiled. She wanted to use Maggie to really turn on Brandon. \n\nMaggie looked at Bud. \"Don't look at me,\" Bud grinned. \"You picked the game.\" \n\nBrandon sat back and watched Maggie's smaller but nicely shaped titties appear. He had not seen them that good in the trailer that night. \n\n\"My turn,\" Maggie said feeling her nipples getting harder and harder. \"Truth or Dare Emily.\" \n\nEmily was jealous that Maggie got to expose her breasts. \"Dare.\" She was ready to remove her shirt when Maggie said, \"French Kiss Bud for a minute.\" \n\n\"I'm not going to do that,\" Emily said looking at Brandon who was only smiling. \"I mean you really don't want me to do that right?\" \n\n\"You girls want to play the game so let's play it,\" Brandon said. \n\n\"Fine,\" Emily replied as she stood up and moved over to Bud's chair. As she leaned down he pushed his lips up until they touched. Neither pushed their tongues out. \n\n\"FRENCH KISS!\" Brandon said loudly. \n\nBud quickly pushed his tongue out and licked across Emily's lips until she opened them and let him in. She soon was giving him as much as he was giving her until the minute was up. \"TIME!\" Maggie yelled. \n\nBud smiled and dropped his hand to cover his hard-on. \"Truth or Dare Emily.\" He wondered how far the girls would go. \n\n\"Dare,\" Emily grinned. The kiss from Bud had really turned her on. \n\n\"Ok...I dare you to french kiss...\" \n\nThey all waited for Brandon's name but heard Maggie's instead. \"Maggie for a minute.\" \n\n\"Yuck,\" Maggie gagged. \"Why do guys like to see girls kiss?\" \n\n\"Ask Willie?\" Brandon smiled as his bulge got even higher. \n\nEmily looked at her cousin. \"I'm not going to be the first one to chicken out.\" She hoped that Maggie would. \n\n\"Me neither,\" Maggie said as she stood and walked up to Emily who was now standing. \"Only one minute.\" \n\nBoth guys had rigid tools as the two girls moved their bodies together first. They saw Maggie's bare tits crush into Emily's larger ones before their lips met and their tongues dash out together. \n\nEmily thought back a few years when she had practiced kissing with Maggie but it wasn't this hot and neither had tits. Emily became the aggressor and reached down to cup Maggie's butt. \"Hey...\" Maggie cried out. \"No touching!\" Suddenly both girls broke down laughing. \"TIME!\" Brandon said. He was ready for some action. \n\nMaggie looked at Brandon. \"Truth or Dare Brandon.\" \n\n\"Dare,\" Brandon smiled. \n\n\"OK...I dare you to...let me touch you under your boxers.\" The whole room became quiet as Bud looked at Emily who looked at Brandon. The line was about to be crossed. \n\nEven Brandon was surprised because he figured it would never go this far. \"Ok...game's over.\" \n\nEmily smiled. \"I knew you would chicken out first.\" \n\n\"So you don't care if another girl touches me?\" He asked. \n\n\"It's just a game,\" Emily said. \"And I'm not jealous of my cousin.\" \n\n\"Fuck...why not?\" Brandon smiled. He then leaned back as Maggie moved over next to him on the sofa. His eyes closed when her trembling fingers moved under the waste band of his boxers and down into his very thick pubic hair. Getting a hand job from a cute girl while his girlfriend looked on was great. After all Emily had looked at Bud when he jerked off. \n\nMaggie's eyes opened wide as she found his thick shaft and then curled her fingers around it. It was huge compared to Bud's and so much longer. She figured this might be the last time she would touch a man this big so she took her time squeezing and exploring. \n\nBrandon's mind raced as the girl jerked him off. He peeked out to see Emily looking over at Bud who was looking over at her. Then it hit him. He grabbed Maggie's wrist. \"Fuck you jerked Bud off didn't you?' \n\n\"No...not exactly,\" Emily said seeing him getting mad. She moved next to him and reached down to join her fingers with Maggie's. When he loosened his grip on Maggie they both started stoking him. \n\n\"OH SHIT!\" Brandon groaned as both girls jerked him off. \n\n\"You see Bud did most of it until the end and then I had to cover it up before he messed up the sofa.\" Emily winked at Maggie who grabbed the box of tissues she had snuck from the bathroom. When Brandon cried out and his hips shot up Maggie covered the tip and captured his hot juices. \n\nEmily smiled as Maggie stood and took Bud's hand. When Brandon opened his eyes they were gone. \"Where did they go?\" \n\n\"To find a bed,\" Emily answered. She kissed his earlobe and whispered. \"I'm sorry about what I did to Bud. Will you forgive me?\" \n\n\"I'll think about it if you promise to never touch another man besides me again.\" \n\n\"Never...what about my husband?\" \n\n\"Exactly,\" Brandon smiled. He pulled her lips to his. \"Let's go and find one of those beds.\" Emily smiled as she hugged onto him as she thought back about her day. She had beaten the State champ twice and now had sort of a proposal. Kinda...Sorta. \n\n*****\n\nBud was already pumping into Maggie's tight hole when Emily and Brandon walked by his bedroom. They could hear the bed squeaking as it banged against the wall. \n\nEmily giggled and pulled Brandon in the next bedroom which had been Bud's brothers. \"Hurry...I'm so hot and wet,\" she whispered. She had her shirt and bra off before he removed his shirt. \n\n\"How'd you do that so fast?\" He asked amazed. \n\n\"It's a secret,\" she giggled before pushing her shorts and panties off at the same time. \"Brandon!\" \n\n\"Would you wait a minute?\" He said while pushing down his pants. He moved onto the bed with her and felt her grab onto his still soft penis. \n\nEmily frowned. \"It's not hard.\" \n\n\"Hey you and your cousin just jerked me off,\" he said defensively. Suddenly she dropped her head and sucked in the spongy tip. \"Jesus Emily.\" \n\nShe popped her mouth off and grinned. \"I want you to fuck me.\" \n\nA week ago he would have never thought she would be so wild in bed. \"What's up with you?\" \n\nShe moved her body onto his and nibbled on his lips. \"I think it was the race today. After I won I could only think about being naked with you and doing this.\" She reached under her and guided his expanding cockhead up and down her dripping gash. \"Don't you like me like this?\" \n\n\"OH...YES!\" Brandon moaned when she let go of his now rigid rod and pushed her tight hot pussy downward. His hands explored her soft hips as she lifted and lowered them slowly and then faster. \n\nShe heard his breathing getting ragged and stopped. \"Don't cum yet. I just want to feel us connected as one.\" \n\n\"Emily...I love you so much,\" he moaned wanting her to start moving again. \n\n\"You love Wonka,\" she giggled. Her hips slowly lifted upward allowing her juices to drip down the shaft. \"Don't you?\" \n\n\"Yes...I love...Wonka,\" he groaned trying his best not to cum. \n\n\"Let's turn over and then you can show Wonka how much you love her,\" she giggled. He held onto her ass as their bodies fell to the side and he moved on top. She wrapped her legs around his hips and held on. \n\n\"Ah...ah...ah...Ah...Ah...AH...AH...AH!...AH!...AH!...AH!,\" he grunted each time he hit bottom. \n\nEmily's mind went totally blank as her steam built up pressure until it exploded. \"NOW BRANDON NOW!\" \n\n\"AHHHH!\" He screamed when he emptied his load deep inside of his love. \n\n\"We better get you home,\" Brandon whispered while snuggling up later against her soft behind. \n\n\"Ummm...I never want to leave you.\" She purred. \n\n\"I want to stay here all night but...we can't.\" \n\n\"Brandon.\" \n\n\"What?\" \n\n\"What if I get a scholarship to Maryland and you go to another college far away from me?\" \n\nHe grinned. \"I have offers from Temple and Georgetown.\" \n\nEmily leaned up and looked at him. \"So?\" \n\n\"Georgetown is pretty close to Maryland.\" \n\n\"Good,\" she giggled as she pressed her soft chest into his hard one and gave him a deep wet kiss. \n\n***** \n\nThe next week went pretty fast. Missy hooked up with Emily's cousin Scott and Bud was connected to Maggie all week. None of the Hillers would say anything bad about Creekers anymore because the boys didn't want to face Brandon or Scott and the Hiller girls had seen what happened to Brandy's nose. \n\n\"Well this is it,\" Coach James said before the first meet with two nearby high schools. Jamesville had a lot returning and Kennedy had some really fast runners. He looked over at Missy who smiled back at him. \"Let's give them our best.\" \n\nThey all huddled together and shouted \"GO GLENDALE!\" when they broke apart. The coach pulled Emily aside. \"Jamesville has a reputation as being somewhat dirty. Be aware that they might try to trap or even trip you. Oh and by the way...their coaches know all about how you beat Sarah last week.\" \n\n\"Good,\" Emily grinned. \"I don't want them to say it was just luck.\" She moved over to the infield to stretch and saw her mother and father sitting alone on the bottom row of the bleachers. She thought it was weird because they normally sat near the top to see the whole track better. Missy walked over. \n\n\"That tall girl almost broke my leg last year in the half-mile,\" Missy whispered as they looked over at the Jamesville team. \"But she did knock me out of the race.\" \n\n\"I'll look out for her,\" Emily smiled. The first few events involved the sprints and hurdles so she just hung while rooting for her teammates. Since Missy moved to the Creek and she started dating Brandon the tension between the Hillers and Creekers had subsided except for Brandy and Allison. \n\n\"GO MISSY!\" Emily yelled as her new friend took her mark. The 100 yard was Missy's best because she normally got out of the blocks fast. The gun sounded and the girl next to Missy had a false start which caused Missy to jump as well. When Missy turned she saw the referee pointing to her. \"It wasn't me!\" Missy yelled as she turned to point at the Jamesville girl next to her. \n\nThe other girl smiled and moved back to take her place. It was no secret that Missy liked to get the early jump but now with one false start another false jump would disqualify her. Missy now had to make sure she didn't leave until the gun sounded. She normally looked down the track but this time she glanced at the guy with the starter pistol to make sure she saw it go off. \"BANG!\" \n\nMissy lost a few valuable seconds that she normally needed in the shorter 100 yard race. By the time she took off the girls on both sides of her were a pace ahead. Missy turned it on but lost the race by a fraction of a second. She hung her head in disgrace. \n\nEmily was the first person by her. \"That's OK...you got some points... and we're still going win. Clear your mind and only listen for the gun.\" Missy forced a grin and glanced back at her team mates who had never seen her lose a race before. \n\nAfter watching a few Field events, and Brandon winning the javelin throw, Missy again lined up for the 200 yard this time. A quick start wasn't as important but Missy was now shaken a bit. She rolled her arms like windmills and took her mark. \"BANG!\" This time she got out of the gate quickly and never looked back as she won hands down. As she ran back to the team she smiled at Emily and grinned. \n\nMissy won the 400 as well but only by a hair so when Emily lined up for the half-mile Glendale was leading comfortably. \"GO EM!\" ",
        "Emily heard the \"WONKA..WONKA!\" chants and smiled while looking down at the ground. The tall girl that Missy had pointed out was on her outside and Kennedy's best runner was on her inside. Maggie was on the other side of the bad girl and had heard about the girl's reputation. \n\n\"I hear you live in a trailer,\" the girl whispered as they walked around the starting line. \n\nEmily immediately glanced over at Brandy who was smiling. \"Yeah but it's a really nice one,\" Emily laughed. She wasn't going to let this girl get into her head. They took their marks and the gun sounded. Emily shot out of the blocks and was comfortably in the lead at the first turn. She saw the coach with his hands pointing down meaning to pace herself. Emily smiled. At the completion of the first lap she heard Maggie's voice. \"EM...LOOK OUT!\" \n\nEmily glanced back as the tall girl was sprinting full speed to catch her. \"You've never been on Jacob Creek have you?\" Emily said as she turned and put her chin upward. She gained the lead again and after another 100 yards looked back to see the girl panting and falling back. Emily didn't let up as her newer shoes barely touched the track. After winning by a long margin she turned to see the tall girl running right at her. Her quick reaction saved her as she jumped to the side but then felt the girl step on the side of her foot. \"AHHHH!\" The girl screamed when she fell down face forward onto the hard pavement. \n\n\"Good job Em,\" Maggie laughed as she ran up to her cousin but stopped when she saw the pain in Emily's eyes. \"Oh God what happened?\" \n\n\"It's my ankle,\" Emily whispered. Emily continued to lean over until the other runners moved by and everyone was watching the medics taking care of the fallen girl. Maggie held onto her arm as she hobbled over to the bench nearby and sat down. \n\n\"Great race, Missy grinned while running over next to the bench. She saw the concerned look on both Emily and Maggie's faces. \"Are you OK?\" \n\n\"The girl stepped on her ankle,\" Maggie whispered. \"See if you can find some ice.\" \n\n\"Don't let the coach know,\" Emily said almost in tears. \n\nMissy grabbed the first aid kit and pulled out a chemical ice pack and squeezed it. She took the cold package to the bench and dropped down in front of Emily. \"Don't even think about running the mile.\" \n\nEmily had closed her eyes from the pain. \"Just give it a few minutes.\" \n\n\"Emily we have enough points to win the meet,\" Missy whispered. \"Forget about it.\" \n\n\"She's right,\" Maggie whispered. They had about twenty more minutes before the mile was to start so Missy continued kneeling in front of her to make sure no one saw the ice pack. \n\nEmily was about to stand up and tell the coach she couldn't run when she looked over at her parents. Sitting next to her mother was an older woman and man. She saw her mother wave and then saw the older woman wave at her. \"Oh my God,\" Emily said. \"That must be my Grandparents.\" She turned to Maggie. \"I'm running.\" \n\n\"Emily they don't want to see you get hurt worse,\" Missy pleaded. \n\n\"They flew out here to see me run,\" Emily gritted. \"Get me some tape.\" \n\nMaggie ran over to the sports bag and pulled out some sticky elastic tape. \"Wrap my foot and shoe.\" \n\n\"I don't believe this,\" Missy said shaking her head. \n\n\"I do,\" Maggie said as she did as Emily said. \"I've seen her worse than this.\" Ten minutes later Emily got to her feet and took some baby steps. \"Does it hurt?\" Maggie asked. \n\n\"No,\" Emily lied as she looked over at her Grandmother and smiled. She looked just like her mother but about twenty years older. She did some light hopping and headed over to the starting line. \n\n\"EMILY THIS IS YOUR GRANDMOTHER AND GRANDFATHER!\" Janet Miller yelled. \n\nJim Miller saw the tape around her shoe. \"Oh God...she hurt her ankle. EMILY DON'T DO IT!\" He stood and jumped over the bench seat in front of him and tried to stop the race but it was too late. He heard the gun when he got to ground level. \n\nEmily didn't have to worry about the tall girl anymore and only needed to concentrate on her ankle. It still hurt but not as bad as it did ten minutes ago. The tape was causing her to run slower because she couldn't bend her ankle as much so two of the Kennedy girls took the lead with Emily hobbling behind them. \n\n\"What's wrong with her?\" Janet asked her husband as he walked back up the stands. Everyone was standing and watching their star runner limping. \n\n\"That girl must have hurt Emily's ankle,\" Jim said totally pissed at the girl and at his daughter who was running anyway. They watched as the two leaders passed the first lap at least 100 feet in front of Emily who had a good lead on third place. \n\n\"EMILY STOP!\" Janet yelled with tears falling from her eyes. \n\nEmily heard her mother. \"It's the tape!\" The pain had pretty much disappeared from her adrenaline but the tape was causing her to limp. She knew she didn't have enough time to remove the tape so she continued her effort but was losing ground. At the half-mile point it looked as if the only question was which Kennedy girl would win the race. It continued for the next lap but as Emily passed the bleachers she saw her Aunt May standing and holding up her shoe. \"Why is she...\" Emily thought until it hit her. She smiled and hopped as she pulled off the shoe with the tape around it and then the next one. Emily took off barefoot to try and make this a race. \n\n\"She...she took off her shoes,\" Janet gasped. She looked at her husband. \"She took off her shoes.\" \n\n\"She's run barefoot on Jacob Creek since she was three years old,\" Jim laughed as he watched Emily gain ground on the two leaders. The whole stadium had stopped now and all eyes were on the short blonde haired bare-foot girl speeding around the hot and hard track. \n\n\"WONKA! WONKA! WONKA!\" Everyone was yelling. \n\n\"Shit...she's catching us,\" one of the Kennedy girls said when she glanced back with a half-track to go to the finish line. It was like everyone else was in slow motion except for Emily's legs and arms which together drove her up to the back of the two girls. As they made the final turn the Kennedy girls hugged the inside of the track to gain an advantage however it only made Emily smile. \"See ya,\" she giggled as her blazing body flew by them about 10 yards from the finish line. She won and then ran over to get her shoes. \n\n\"WONKA!\" The fans and teammates screamed. Brandon ran over and again picked her up. \"Barefoot?\" He looked at the bottom of her feet and saw the blood. \"You're nuts...you know it?\" \n\n\"About you,\" She giggled as she gave him her best kiss. Suddenly she pushed him back. \"MY GRANDPARENTS ARE HERE!\" She tried to take off running but Brandon picked her up and carried her to the gate where the older woman stood with her arms out. Brandon sat her down and she was crying as she moved into the woman's arms. \"Grandma?\" \n\n\"Emily...my granddaughter,\" the woman said as her own tears splashed down on the pavement next to Emily's. They hugged and she moved around to the shorter man who had a cane. \"Hi Grandpa.\" \n\n\"Hi Baby,\" Jacob Cameron said trying not to cry. He hugged her into him and Emily peeked over at her mother who was also crying. \"Thank you,\" Emily whispered. \n\nEmily moved away from her Grandfather and pulled Brandon next to her. \"This is my boyfriend Brandon.\" \n\n\"We've met Brandon,\" her Grandmother said. \"He is the one that got us all together.\"\n\n\"You knew they would be here and didn't tell me?\" Emily glared at her boyfriend. \n\n\"They made me promise\" Brandon said holding up his hand to protect himself. \n\nJim moved up to his daughter and looked down at the swollen ankle and bloody feet. \"I think we need to take care of that.\" \n\n\"Sorry Daddy...you know I don't like to lose.\" \n\n\"I know,\" he smiled. \"But if you ever do this again I'm sending you to your room.\" \n\n\"You leave my granddaughter alone Jim Miller!\" Betty Cameron said as she hugged Emily one more time. They all laughed and joined Brandon's parents. As Emily gathered her gear the two Maryland women walked up to her. \"Emily...we've seen enough.\" \n\n\"Enough?\" Emily said thinking it was bad. It wasn't. \n\n\"We are offering you a full scholarship. But if you chose us you'll have to wear shoes.\" Bobbi laughed. \n\n\"I will!\" Emily said as she looked over at Missy who was smiling but had been left out of the ending heroics. \"But...you know Missy and I are a team.\" \n\nThe other coach laughed. \"We came here last week to see Missy and to offer her a scholarship. We were just lucky to see you too.\" \n\nEmily smiled as Missy moved over and hugged her. \"I didn't want to tell you until I knew for sure they were going to offer you too.\" Missy giggled. The girls headed into the locker room for a needed \\shower as the adults got more familiar with each other. \n\n*****\n\nThe Grandparents offered to buy everyone a dinner so they all headed up to the country club where Jacob Cameron was one of the original owners. Emily rode with Brandon and as they drove up the hill Brandon reached over and massaged her bare leg. \"So did winning the race get you all horny again?\" He chuckled. \n\n\"Yes,\" she smiled. \"But please stop until we can be alone after dinner. I don't want to rape you in front of my Grandparents.\" \n\n\"We could go out on the putting green,\" Brandon said while moving his finger tips up under her short skirt and across her silky purple panties. \n\n\"I know...you want to get a hole in one,\" Emily giggled. \"OK if I can play with your putter.\" \n\n\"It's not a putter...it's a driver!\" Brandon laughed. As they pulled into the parking lot and next to the large limo Emily saw her Grandfather get out and hold the door open for the women. \n\n\"I wonder how rich he really is,\" Emily whispered. \n\nBrandon pointed up to the name above the entrance. \"I never knew what that meant until now.\" Emily looked up to see \"The Cameron Club House\" sign above the doorway. After walking up to her Grandparents the older couple took Emily's arms and guided her into the country club. Brandon tagged along with the other parents, Maggie, Aunt May, Missy and Scott Miller. \n\nThe whole staff was waiting by the entrance when they walked in. A graying man walked up to Jacob Cameron. \"Welcome back Mr. Cameron.\" \n\n\"Hello Jack,\" Jacob smiled. \"Today is the happiest day of my life and I don't want you to hold anything back.\" \n\n\"That's all taken care of Sir,\" Jack Dalton grinned. Mr. Cameron had promoted him to Club Manager many years ago. \n\nAs the group walked into the big ball room Betty Cameron pulled her daughter aside. \"Will you please forgive us?\" \n\nA single tear fell from Janet's right eye. \"Yes...I've always loved you and Daddy very much.\" \n\n\"There's something I need to tell you,\" Betty smiled. \"We still have the trust fund we set up for you many years ago and it's worth a whole lot of money. Emily also has one that will keep her out of trailers for the rest of her life.\" \n\nJanet stopped smiling. \"There's something I need to tell you Mother,\" Janet said seriously. \"Emily is proud of living on Jacob Creek so for your sake don't say anything negative about Jacob Creek or living in trailers.\" \n\nBetty smiled. \"I made that mistake a long time ago and I won't make it again.\" She pulled her daughter into her for a long hug. \n\n*****\n\nEmily sat between her Grandparents who kept hugging her and holding her hands. She winked at Brandon who was jealous of their attention. After dinner Jacob Cameron stood up holding a tall glass of the best champagne. \"I have some things to say.\" \n\nThey all got quiet and listened. \n\n\"Twenty-years or so ago Jacob Cameron did one of the dumbest if not the dumbest thing he had ever done before.\" He looked over at his daughter and Jim Miller. \"I thought I knew what and who was best for my daughter. I was wrong...so wrong that I lost her and didn't get to know my Granddaughter. I'm sorry honey.\" He said choking slightly. \n\nHe then picked up Emily's hand. \"I've always thought that I was the toughest son-of-a-bitch there ever was. But today I saw my Granddaughter show us all what being tough and proud is all about. When things are bad and there doesn't seem to be much hope we all need to do what Emily did today.\" He laughed. \"Take off our shoes and just fight our way back on top.\" He pulled Emily up and hugged her as everyone clapped. \n\nAfter dinner the group broke up and Emily and Brandon slipped out the side door to the patio. \"Still feeling horny?\" Brandon whispered as he cupped her right buttock. \n\n\"Yes...but first you have to tell me what you did to get my parents and grandparents together.\" She turned and looked up into his eyes. \n\n\"My mother helped me to get your Grandparent's phone number so I called them and told them who I was and that you wanted to meet them.\" Emily stopped him with a kiss. He pushed back. \"They said that your mother told them never to talk to her again so I lied.\" \n\n\"You told them my mother wanted to see them too.\" Again she kissed him. \n\n\"Yes...and then I told your mother that they wanted to meet you and to mend fences.\" \n\n\"You are such a liar,\" Emily smiled. \"But I love you anyway.\" \n\n\"Come on...let's go down on the putting green,\" Brandon whispered as he took Emily's hand and pulled her down the long steps. When they got to the bottom they heard the familiar sounds. \"Shhh,\" Brandon whispered as they tiptoed towards the small patch of grass. \n\n\"OH GOD SCOTT...FUCK ME!\" Missy screamed when the linebacker's hard prick pounded down into her tight hole. \n\nEmily giggled softly. \"Let's go over by the driving range.\" They headed that way and heard Bud's voice. \n\n\"Come on Maggie let me get on top this time.\"\n\nThey peeked around a ball wash and water bottle holder to see Maggie's bare titties bouncing as she rode her bronco. \n\n\"I know where we can go,\" Brandon whispered. Emily followed him through some underbrush until they were in the middle of the eighteen fairway. \n\n\"Here?\" Emily asked as she glanced back at the well-lit Cameron Club House. The grass was dry and soft. \n\n\"I thought you were horny?\" Brandon teased. Suddenly Emily took two giant steps and jumped onto his body causing him to fall back in the middle of the fairway. \"Jesus...tell me when you are going to do those kinds of things.\" \n\n\"Hush,\" Emily giggled while pressing her open mouth to his. Emily became the aggressor. \n\nBrandon's mind was everywhere because her tongue was setting his mind on fire and her hands roamed over his board muscular shoulders, down his sides to this belt buckle. She had it undone and his zipper down in two heartbeats. \n\n\"Lift!\" she commanded which he did feeling his pants and boxers flying down and off his feet. The dim lights from the Cameron Club house caused a long shadow from his eight inch tower. Emily jerked down her panties and straddled his hips and lowering her body until the swollen tip pressed up into her hot slot. \n\n\"God I hope you never lose a race,\" Brandon groaned while her juicy pussy slid slowly downward until his manhood disappeared. \n\n\"Me too,\" she giggled. Although her ankle and feet still hurt a little she didn't miss a beat. His hands helped her to lift and drop over and over again. \"Brandon.\" \n\n\"WHAT?\" He was through talking. \n\n\"Do I look like my Grandmother?\" \n\n\"Shit Emily I can't think of those things right now!\" His damn was ready to burst. \n\nShe giggled and moved faster and faster until both of their bodies was on the summit looking over. \"NOW BRANDON...OH GOD!\" \n\nThose were the only words he wanted to hear. \"ME TOOOO!\" \n\nJust when they locked eyes it suddenly started raining. Not a light rain but a downpour. \"SHIT!\" He screamed. Not only that but bright lights appeared and they had no place to hide. \n\n*****\n\nThe parents, family and grandparents were all standing on the balcony looking out over the dark golf course. \"Do you think they went for a walk?\" Janet asked her husband. \n\nJacob Cameron laughed. \"Let's see...they are all eighteen years old. I don't think they are doing any walking.\" He turned and whispered something in the club manager's ear. \n\n\"Daddy what are you doing?\" Janet asked knowing what a prankster her father was. Suddenly the bright spotlights from the building projected outward and the huge water sprinklers came on. \n\nThe first naked couple to appear was Missy and Scott who were only down at the base of the patio. \"OH GOD!\" Missy screamed when she looked up over Scott's head at the older adults looking down at her. \"STOP SCOTT!\" \n\n\"Stop looking!!\" Betty Cameron yelled at her husband when the beautiful naked Missy moved from under her new boyfriend's body and scrambled to put on her clothes. The men continued to peek at Missy and the women giggled seeing how well-endowed Scott was. They heard Bud's voice. \"Maggie come back!\" \n\nMaggie too was buck naked when the lights came on and was still sitting on Bud's mast. She heard Missy's scream and saw the adults. \"You're on your own,\" she laughed as she grabbed her clothing and ran towards the bushes. She got there before the adults looked her way but Bud wasn't so lucky. He ran the best he would with his briefs around his ankles and his hands over his erection. \n\n\"At least my daughter is not being bad,\" Jim Miller grinned when he saw Emily running towards the dry building area still in her skirt and shirt. \n\n\"I wouldn't say that,\" Janet frowned when Brandon entered the brighter lights naked from the waist down while holding Emily's panties over his soft penis. \n\n\"I need to talk to that boy,\" Jim growled. \n\nJanet elbowed him in his side. \"Did you forget the night we conceived Emily?\" \n\n\"Uh...yeah...but at least we moved out onto the course more,\" Jim whispered. \n\n*****\n\n\"God they are going to kill me,\" Emily whispered to Brandon as he pulled up his boxers and pants. \"Give me my panties.\" She took them but they were soaking wet. She giggled and moved her arm way back before throwing them towards some bushes. \n\n\"Hey!\" Bud cried out when he walked out of the bushes with Emily's panties sitting on his head. Missy and Scott had walked into the area and saw Bud too. They all broke down laughing. \"Let's go face our medicine,\" Emily said while holding Brandon's hand. \n\nBut when they got to the balcony they saw the adults laughing and talking not bothering to acknowledge their presence. \n\n*****\n\nIt was very early the next morning when Jim picked up his father-in-law at the hotel and headed over towards Jacob Creek. He had asked Jim to pick him up but wouldn't say what he wanted. \n\n\"Betty and I are getting pretty old,\" he said. \"And since Janet is our only child she will be inheriting everything.\" \n\n\"We've never really cared about your money,\" Jim said not looking over at the man he once hated. \"I have a good job now and...\" \n\n\"Let me finish. Janet told me last night that you are looking for a new and bigger place to live so I want to help. It was me who messed up years ago and I want to help you two.\" \n\nJim bit his tongue to keep quiet. As they approached the bottom of the hill by the gas station Jacob told him to make a right. \n\n\"Right...there's nothing down that way but a dirt road and trees.\" \n\n\"Actually there's about 3000 hundred acres that I own,\" the older man smiled. \n\n\"You own land on Jacob Creek?\" \n\n\"Where the hell do you think the name Jacob Creek came from?\" Jacob Cameron laughed. \"I owned it all.\" \n\n\"Shit...I never put it together and Janet never said anything.\" \n\n\"Well...take a look around you,\" Jacob grinned. They had driven almost a quarter mile into some beautiful land. \"I'm giving all of this to Janet and you.\" \n\nJim was speechless. He had thought about building a house but had not seen a suitable lot to build one. Now he had hundreds of choices. \"I don't know what to say.\" \n\n\"You don't have to say anything but you will have to promise me that you will never interfere in Emily's life. I mean as far as who she picks for a husband.\" ",
        "\"Well things might change but I think that's already been determined,\" Jim laughed. He looked at his father-in-law and smiled. \"Thanks Dad.\" It was the first time he had ever called him that. \n\nJacob smiled. \"You're welcome son. Oh yes, one more thing. I was talking to an old friend of mine yesterday before the track meet and he will be calling you. He's a home builder and would love to talk to you about developing this land. He said something to me about not charging you for your house.\" \n\n\"I think I know how you became so rich,\" Jim grinned. \n\nJacob looked around. \"If you two do things right Jacob Creek might be the most elite place to live in Glendale.\" \n\n\"I'll talk to Emily about that,\" Jim laughed. \n\n\"Emily?\" \n\n\"She loves Jacob Creek like it is now. If I mess it up she might never talk to me again.\" \n\n\"Shit don't let that happen,\" Jacob said seriously. \"You must be a very proud father.\" \n\nJim felt his eyes tearing up. \"You have no idea.\" \n\n*****\n\nLater that afternoon Jacob and Betty Cameron had their first meal ever in a mobile home. The older couple was so happy to be with their daughter and her family again they didn't care where the meal was. It was later as Emily and her Grandfather walked down the dirt road towards the school that Emily took his hand.\n\n\"Grandfather I think I'm going to marry Brandon.\" \n\nJacob smiled. \"Did he ask you to marry him?\" \n\n\"Not exactly...well kinda?\" \n\n\"You're sort of too young to be thinking about that right now,\" Jacob smiled. \"But just remember it's your life so don't ever let anyone tell you want you should do with it.\" \n\nEmily squeezed it and grinned. \"Come on I'll race you to the school house.\" It was only about twenty steps away. She did it as a joke but suddenly her gramps took off with his cane flying next to his bum leg. \n\nEmily came in second but it didn't bother her. \n\nIt was later that night before the Grandparents left that Betty gave Emily an old hair band that she had worn many years ago when she ran track for Penn State. On the front of it was a small lion.\n\n\"Thanks Grandmother,\" Emily said. \n\n*****\n\nThe next two months flew by and the whole State knew who Emily Miller was. Along with Missy they suddenly became the team to beat. It was at the State finals being held at Penn State that Emily and Sarah Jenkins met again. This time it was Sarah who was very nervous. \n\n\"Well this is it,\" Sarah grinned as the two walked around the starting line shaking their legs and arms to get loose. \"I hear you are going to Maryland.\" \n\n\"Yes,\" Emily answered. \"Did you pick a school yet?\" \n\n\"University of Virginia.\" \n\n\"Hey...that's ACC too right?\" Emily smiled. \n\n\"Yes...so I guess we will be seeing each other again,\" Sarah smiled. They moved into their positions and when the gun sounded they took off together. \n\nBoth were champions as they finished the first lap dead even. It went that way to half way around when both broke out into an open dash to the half-mile. The whole stadium had stopped as they watched neither girl give away an inch. No one was talking or even breathing when they approached the finish line and stepped across it at the same time. It was a photo finished. \n\nEmily and Sarah put the breaks on and turned towards each other. \"I think we both just beat the state record,\" Sarah grinned as they hugged while waiting for the results. The judges kept looking at the video until finally one pointed to the screen and the other one nodded his head. They turned and said something to the two coaches. Coach James suddenly started jumping up and down which mean of course that Emily had won. \n\n\"Congratulations,\" Sarah said disappointed but not surprised. \"See you in the mile.\" \n\nThe coach ran over to her and hugged her. \"You now hold the State record in the half-mile. Your time was 2:11:52 and Sarah's was 2:11:56.\" \n\n\"That's less than a second apart,\" Emily gasped. \"But how can they accurately measure that?\" \n\nThe coach smiled and touched a small puff of her hair sticking outward over the lion on her head band. \"You literally beat her by a hair.\" \n\nEmily glanced over into the stands at her Grandmother. \"Thank you,\" she said knowing she couldn't hear her but maybe she could read her lips. \n\nMissy had won the 200 yard dash earlier but had come in second in the 100 yard race. Glendale held a slim margin over Ridgewood when Emily and Sarah stepped up to the line. Sarah reached up and pulled her dark brown hair out a little and they both laughed. \n\nEmily knew the mile was her best race and had done some extra practicing with Elvis and Boner. She knew she could stay even with Sarah and hoped that on the last lap her training would take over. \n\n\"Oh God I'm so nervous,\" Janet Miller said sitting in the Glendale High parents section. \n\n\"I know you've been kicking my leg for the past 30 minutes,\" Jim laughed. They all saw Emily turn and look in their direction and wave. \n\n\"GO GET IT EMILY!\" Betty Cameron screamed before Jacob hooked her shoulder with his cane to pull her back down next to him. \n\nEmily's smile left her as she stared down the track and waited for the gun. \"BANG!\" Suddenly they were off and she was running her last high school race. \"Pace yourself,\" she thought while following Sarah by a half stride. They were neck to neck at the end of the first lap and had again put a large space between them and the others. \n\n\"WONKA...WONKA!\" She heard as they passed the Glendale cheerleaders and band. Again they were even at the half mile. \n\n\"I can't look,\" Janet said putting her head down into her hands but she peeked through her fingers. \"GO EMILY!\" \n\nSarah smiled because she too had put some extra conditioning with a hired trainer as they passed the end of the third lap. One lap to go and neither girl was backing down. TV camera crews were running across the infield with the heavy cameras on their shoulders as they neared the last half of the race. \n\nSweat beads now formed and were changing in to droplets on Sarah's forehead as her breathing became labored. \"Is she a machine?\" She asked herself looking next to her at Emily who didn't even look tired. Sarah stared ahead and started her last kick to the line when Emily suddenly took off. \"Shit.\" \n\n\"THE DOGS EMILY!\" Coach James was screaming and yelling when he saw her gaining a big lead on the previous State Champ. \"THE DOGS!!!\" \n\nEmily's body was a machine now that had been shaped by running up the hill to Brandon's house the past few weeks. Running on a flat track was like running down hill. \n\n\"OH MY GOD!!\" Janet cried out with tears of joy when her beautiful wonderful daughter crossed the finish line giving Glendale its first State Championship in any sport. Sarah was a full five seconds behind her. \n\n\"I WON!!!\" Emily's mind screamed but not a sound came out of her mouth. She immediately turned and saw Sarah smiling. \"I think I'm going to transfer out of the ACC,\" the other girl said as they hugged. As they parted Sarah pulled Emily's arm. \"Who is Elvis and Boner?\" \n\n\"My trainers,\" Emily giggled. After that it was just a blur for Emily. Everyone wanted to hug her and the TV shows did a short interview. \n\n\"I kept my shoes on Daddy,\" Emily giggled when she hugged the man who had stuck with her for so long. \n\n\"I was wondering if they were going to come off,\" Jim laughed. Emily saw Brandon standing behind him last in line awaiting his turn at he girl he loved so much. \n\n\"Hi,\" Emily said with tears in her eyes. He wiped one away and pulled her sweaty body to his. \n\n\"I told Georgetown that I was coming,\" Brandon whispered. \"We can get an apartment close to both schools.\" \n\n\"An apartment?\" Emily said. \"I don't think my father will allow that.\" \n\n\"I've already talked to him.\" \n\n\"You talked to...him...about the...apartment?\" \n\n\"Yes...and I asked him if I could have permission to marry you.\" \n\nEmily's heart stopped. She looked at all the quiet parents, family members, teammates and the cheerleaders and band as Brandon dropped to his knees in front of her. Even the TV cameras were pointing at her. \n\n\"Emily will you marry me?\" His smile could have melted any woman's heart. \n\nEmily who hated the spotlight at that moment didn't care if the whole world was watching. \"YES...OH GOD...YES!\" \n\nSuddenly the whole stadium even the other teams started clapping and cheering. Emily pulled him up to her lips and gave him her best kiss. \n\nEpilog: \n\nEmily was a marked woman at Maryland but proved that Terrapins were not slow. After she and Missy led the Terps to the ACC championship their freshmen season they took their team to the NCAA finals the following year where Emily set a US record. Two years later in China Emily won a gold metal for her country. Brandon starred at Georgetown and took them to the Cotton Bowl where they lost to Texas. Emily was in the stands yelling, \"WILLIE!...WILLIE!\"\n\nThe Jacob Creek folks placed a large sign at the bottom of the hill just before you turned right into Cameron Estates. \n\n\"Welcome to Jacob Creek. Birthplace of Emily Miller who brought home the gold.\" \n\nAfter her grandparents passed away and just after she gave birth to Brandon Jr. Emily started a scholarship fund for all the kids living in Jacob Creek. She and Brandon built the biggest house in Cameron Estates and every morning around 6:00AM you can catch her running next to her little son and husband. Elvis and Boner Jrs. ran behind. \n\n*\n\nThe end...\n\nEnding note from Slick: Even I got a little teary eyed at the end. Again you gave me some ideas and I ran with them. (pun) A reader after the Tomboy story asked me to use Maryland this time instead of UNC and Duke. This was a good story to write for me because I grew up in a hollow just like Emily and felt many of the things you read about in this story. Don't forget to write and vote ...WONKA...WONKA!. "
    ],
    "authorname": "Slickman",
    "tags": [
        "rich and poor"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/trailer-trash-ch-03-1"
}