{
    "title": "At His Majesty's Pleasure Ch. 05",
    "pages": [
        "It was well known that the God that King Alexander prayed to was Feros, God of Death, War, and Vengeance, and it was the Temple of Feros that they were to be married. It was not the most ideal place for a wedding, for its high stone walls and spartan architecture conveyed a sense of the stark and the grim; it was obvious that the temple was usually reserved for conducting sacrifices before war, or observing the passing of royal personages into the underworld - and she had been told that no exception would have been made except for the King himself, who refused to be married under any other God. Some minor attempts had been made to lighten the atmosphere, in the form of blue-and-silver banners festooned across the walls, but there was no shaking the somber ambiance. This was not helped by the hollow vastness of the temple, made plainer by its emptiness: only a lone priest, a handful of knights, and three nobles (one of whom was Ethan) made up the audience.\n\nThe train of her dress dragged impractically on the ground. Though lovely a site it must have made, it was uncomfortable, walking in it even more so. \n\nThe King stood waiting for her. There were hundreds of lit candles behind him, laying on the floor and jutting from the walls, so that he looked more silhouette than man - though one larger than usual, given that a dark, fur-lined cloak draped over his shoulders, and a heavy gold-wrought crown stretched his stature. As she entered, he looked straight at her, and scarcely did his gaze deviate.\n\nWhat were all those candles for? Wouldn't it be hilarious if they caught fire? What happened to \"small ceremony\"? While present company was refreshingly sparse, the dressmakers and jewelers had fussed about her as though they were preparing for Wedding of the Century - all in one day. Alais thought she could empathize, but the way they fretted and (futilely) attempted to conceal their jitters and apprehension - it made them seem like headless chickens who also happened to be mute.\n\nShe almost laughed at that one, and the more she made light of it in her mind, the more easily she stomached the entire affair. The more easily she could ignore the way her veil impeded her vision, also uncomfortably, near to the point where it would have made her veer off course. The top of her head was set with a beautiful diadem of silver branches and flowers; all she could think was how it felt slightly off balance, and it was far too late to shift it. Ethan's advice still lingered in her mind too, and she tried to think on their discussion as a source of distraction. \n\n\"We are gathered here today, a most favorable day in the reign of our King Alexander...\"\n\nThe robed nightbrother spoke of alliances and duty, love and honor, occasionally making some heavy-handed comparisons between war and marriage. When he seemed to have gone on long enough, and without losing any steam, the King cleared his throat, and the man quickly wrapped up his speech, bowing away with some final wisdoms.\n\nA servant brought forth both their rings, laid upon a pillow, bending low at the waist. The King took the ring meant for her, a gleaming chunk of lapis lazuli and white diamonds, set in a silver band, and slid it onto her finger, his fingers lingering to adjust it so that it settled snugly all the way down.\n\nThen it was her turn. She would have all but forgotten what she was supposed to do, were it not for the shrill voice of the harried instructors harping at her from the inside of her head. There were, in fact, so many things inside her head that she had also forgotten to recoil, as she was wont to do when the King was this close in contact.\n\nHer hand reached for the pillow, mechanically, but between lifting it and putting it on his finger, it (somehow) escaped her grasp. Her other hand darted forward to catch it - which it did, before the slippery thing bounced off of that one as as well, as gravity made easy work of the rest.\n\nThere seemed to be a collective holding of breath, as the ring bounced merrily off her fingers and skittered with a clink clink clink across the ground - and managed to lodge itself, squarely, into an ill-fated crack. Eyes flashed from the fallen jewelry to the King, as if anticipating some kind of terrible rage would come from this hitch in the ritual. But, judging from his expression, he seemed disposed to find this more funny than irritating, for once. Waving away the premature advance of several servants and one overeager knight, he actually proceeded to kneel down himself to retrieve it.\n\nIt was not as though she had done it on purpose, after all. There was a distinct difference between fancying throwing the ring upon the ground and the drop actually happening. As much as she would have liked to have felt vindicated by this (righteous) act of fate, there was naught but a dull dread thrumming in her chest. She even shifted awkwardly in a half-hearted measure to retrieve the ring at first, only to be beaten by the King's efforts. So she stood over it all, waiting with her hands over one another and still uncomfortably awkward, suddenly glad for the veil shrouding her discomfited expressions.\n\nFor unfortunately, no matter how much he tugged and pulled at the thing, it remained thoroughly buried in the floor. \n\n\"Perhaps a drop of oil...\" someone offered enterprisingly, but thought better of voicing it loudly enough to hear.\n\nAlexander righted himself, with a sigh. \"It's no matter,\" he said, leaving the ring where it was. \"Proceed,\" he directed the priest, curtly.\n\nThe whole affair would have been incredibly funny, if not for her part in it.\n\n\"With these rings - ring,\" amended the nightbrother, \"you are joined as one, as are your Houses, until such day that you no longer draw breath and are returned to humble earth. May Feros see great favor upon your union.\"\n\nAs the priest stepped back, the King shifted forward accordingly, one hand reaching to draw away her veil.\n\nThe act, formulaic as it was, caused nerves, anxiety, and petrifying intimidation to crash over her, like a wave. Though flimsy and thin and translucent the veil was, her subconscious had made it out to be a symbolic barrier of sorts. It did shield her in the sense that no one had seen the subtle faces she made throughout the ordeal up until that moment.\n\nShe flinched backwards, imperceptibly to those not quite near enough, but just enough, and she froze still.\n\nIt was clear that the King noticed her cringe backward, slight as it was, for they were far too close now for ignorance to be even slightly believable. His reaction came in the form of a smirk, his eyebrows raising lightly as if in amusement - though, to his (limited) credit, it did not rise to the harsher flavor of derision. \n\nNone of that stopped his progress, naturally. His eyes studied her, upon lifting the veil, with his odd brand of admiration. He looked as if he was about to claim his prize. \n\nShe remained frozen now as he stepped forward once more, easily closing the distance between them. They had not had such contact since their dinner kerfuffle and subsequent bandaging, but his touch was surprisingly gentle this time, as he tucked his fingers beneath her chin. \n\nAlais would have been in denial if she thought herself repellent to his charms. There might have been a bit of resistance from sheer terror and stubbornness, but at this proximity, in this context, where she couldn't even turn away without fear of provoking the fury of the centuries, there was no helping the erratic one time flutter of her pulse, mocking for what it meant. He'd gagged her the last time he touched her like this; it was one of the first thoughts which came to surface. She stood stone still, waiting for the worst.\n\nThen he tilted her up, leaning to brush his lips, feather-light, over hers. Was that it? The kiss was almost suspiciously chaste, which was not helped by the glint of mischief in his eyes, as he pulled away. \n\n\"Long live the Queen,\" he said quietly, completing the ceremony, and these words were taken up by the priest and then the small congregation gathered with them.\n\nShe recollected the events of the morning, now so distant as though they occurred years ago. Hadn't they \"turned over a new leaf\" (even if it was just the motions of it)? Why was she still being reluctant? Because... because it wasn't fair. And yet, she felt ridiculous with the knowledge that there were others who would not have lamented so much at being made his Queen.\n\nBut because they did (apparently) turn over a new leaf, she upheld her part as the obedient bride. If she could not stomach faking her smiles or affection, then she maintained her rather believable neutral visage. When the time came to walk - more accurately, to be herded toward the back down the aisle and outside - she held his hand without flinching, for once, though futilely struggled for as much air between their fingers as possible.\n\nThe King handed her into the carriage, following after, and the horseman snapped his reigns once they were settled. The interior was plush and comfortable, and quite large, but somehow, as the King spread his legs out across from her, it also seemed too small at the same time.\n\nNow seated within, she rediscovered her (recent) habit of shifting as much to the side as she could, to where her arm was pressed against the door. Her head leaned against the window. It really was a chore maneuvering about in all these graceful sheer frills and fabric and trails and gemstones. At first, she looked forward to the prospect of being rid of them, and then another horrifying thought dawned.\n\n\"What happens now?\" she heard herself asking, in a quiet voice. If she had to be led about by the arm, did it strike none of these people to ever give her an itinerary?\n\n\"Our wedding night,\" he replied blithely, with something of a twist to his lips.\n\nShe wanted to melt into the very wall of the carriage. That wasn't what she meant.\n\nBut he was pleasant enough to expand. \"The official plan was to go Erinia, but we will actually be making our way to Ibarith. The hunting lodge there is more remote and scenic.\" He didn't bother explaining his duplicity, but she understood his preference for it. With few(er) people knowing their real destination, it was safer, and they would have to be less guarded.\n\nIn direct contrast to her, the King lazed back, relaxed against his seat, irritatingly comfortable for a man who had just had his wedding - even if it was not yet the formal thing. \"We will spend a few nights there, before we return,\" he continued. She thought his choice of the word nights instead of days perhaps an unintentional indication of just how he intended to spend his time. \"The official wedding reception will follow when we return to the capital.\"\n\n\"I see.\" So he was secreting her away to enjoy for himself. That was not comforting. \"What is Ibarith like?\"\n\n\"The woods yield good game. There is a lake as well, and a mountain trail.\" He glanced curiously over to her. \"Are you fond of riding, princess?\" He paused, as the now defunct title slipped out, and smiled, amending, \"Alais.\"\n\nThe familiarity of her name on his tongue felt like one more trespass. She swallowed thickly. In turn, the title of 'princess' would have crossed her as completely ordinary had he not gone to correct himself, and now she caught herself mourning its passing.\n\n\"Not more or less than any other,\" was her only reply. She did not even think to reciprocate and call him Alexander.\n\n\"Well, perhaps the view will lend it more interest, then.\" He turned his attention from her to the window. \"What did you and Ethan speak of, by the way?\" His tone was light rather than interrogative, though it spoke to something that he assumed they had talked.\n\nHer momentary silence betrayed her uncertainty. The honest and frank answer would have been 'You', naturally, but just how much would the Duke have wished for her to disclose? For all she knew, perhaps he'd already shared everything with his friend, and it didn't matter what she said. So why ask? To toy with her, again. Silence would have been marginally preferable to this and her overthinking.\n\nAfter ruminating over nothing, she ended up deciding upon, \"...How to handle members of your court,\" as the fair and reasonable response, her tone quiet and thoughtful. So what if she paused for a second too long? This, too, was a topic worthy of some deliberation.\n\n\"Hmm,\" he said lightly. \"Conspiring already, I see.\"\n\nHis relatively pleasant demeanor gave her reason for thought. If they were, supposedly, operating on slightly better terms, it was not as much of a struggle to ask him, with the inklings of genuine curiosity: \"When did you find the time to arrange everything?\" \n\nThey arrived yesterday, and the responses from her grandfather could not have been read and processed before that evening. Did he have a scaffold prepared in the event of refusal? It didn't seem an outlandish possibility, though disheartening.\n\nHe allowed a slight laugh. \"I suppose it was arrogant of me,\" he said, though he didn't seem put off by this self-assessment, \"but I had a falcon sent once we reached the River Fort. They've had a few days.\" Even a few days was still nearly supernatural, though, given the level of effort had been put into their arrangements, and he explained, \"I incentivized them to work fast.\"\n\nHe left it, dubiously, there.\n\nAlais had reached the point where she could spare a few quick words with him without experiencing too much discomfort. Dramatically less so were her (non)capabilities of prolonged exchanges, or sharing a carriage with him (and only him) for odd hours at a time.\n\nTo avoid further conversation, she attempted to feign sleep with her head tilted toward the window, her arms used as pillows. And through her efforts with feigning sleep, she incidentally tricked herself into actually falling asleep. It had been a long day.\n\nIt was dark by the time they arrived at the hunting lodge, and little could be seen in the obscuring darkness; judging by the time it took to traverse from the entrance to the lodge itself, however, the grounds must have been expansive indeed. Expansive and isolated, in any case - the quiet whisper of rustling leaves could be favorably called peaceful and unfavorably called desolate. Trees dotted the landscape, nothing but gigantic silhouettes at this hour.\n\nFinally, the carriage rolled to a stop, and when they emerged, it was in the confines of a large courtyard. The silence was here finally broken - by the excited yapping of dogs, for several dark lumbering shapes loped toward the King as soon as he set foot (despite half-hearted attempts to restrain them, on part of the harassed-looking kennelmaster). His Majesty didn't seem to mind, however, for he grinned at once, almost boyishly, as he was surrounded, kneeling to scratch behind the ears of the nearest one. There seemed to be a theme of some sort: like his horse, his hunting dogs were monstrously huge, a few of them as large as their master. She might even have been disposed to find them quite sweet, in this context, were it not for the menace of their size and canines.\n\nServants swarmed them too, if with slightly less fervor, and a few curtsied to her in particular and indicated she follow. An industrious maid in particular quickly moved to pick up the trail end of her long, long skirts before all the rare and expensive silk could be trampled by paw, and Alais did not require further prompting to follow them into the lodge with only a tired glance back. The impromptu nap had done her no favors.\n\nAs they undressed all the overly complex layers and trinkets from her body and hair (and sitting, unfortunately, was not an option for the bulk of it; neither was falling asleep while standing), with idle standing came the realization that she felt no differently at all, now that she was married. A ceremony had occurred, but it was just... a ceremony, under a God she felt no sentiment toward. It was an event that could, hypothetically, be more than easily done away with. But not the one that came after.\n\nShe felt cold, suddenly, but that was well attributed to the fact that they'd finally unraveled her all the way down to a shift. Before tonight, she'd never known it was possible to feel so free and so trapped. The wedding, she could abide by floating through in a half daze. But not this. This was too much, too soon.\n\nMiraculously resisting the impulse to break down (or feign a heart attack) in front of the servants, she allowed herself to be coaxed through the door.\n\nThe King was in the room beyond, alone and facing the crackling fireplace, his shadow long and narrow across the wood floor. He'd been unburdened of most of his clothes as well, and presently, only wore a grey-white undertunic, which hung loosely over his body, and dark breeches. His hair looked tousled, like he'd dragged his fingers through it more than once.\n\nHe turned at the creaking of the door, seeing her emerge. Unabashed, his gaze traced her figure - over the simple shift and the skin that it exposed. There was nothing hesitant or apologetic about the gleam of desire in his eyes.\n\nThat didn't mean he couldn't perceive her anxiety, in turn. \"You look like you're about to face execution,\" he said, sounding faintly amused. He faced her fully, and approached, his footsteps resounding across the otherwise silent room.\n\nThe servants had all slipped out, like quiet shadows, so that they were utterly alone in the room.\n\n\"What are you so afraid of?\" It was an unfair question - it might have even been rhetorical, since he sounded so teasing. He was before her, tall and dark against the backdrop of the fire. Slowly, he let his knuckles brush over her cheek, quite softly. \"You may yet enjoy this.\"\n\nFor all her success in blotting this night out of mind, it was the brush of his hand which broke her. The panic that gripped her in a vise squeezed and began all but choking the life out of her as Alais sought for the words which refused to come out. What could she even say now, that would be of any use?\n\nClose to tears, she shook her head back and forth and began to stammer a little. \"It's not - I didn't -\"\n\nIt wasn't even sex that was the problem - well, all of the problem. Nan once said that, at least in the world they presumed to reside in, it was every highborn lady's duty to bear her husband offspring, and this just happened to be part of it. Girls years younger and less fortunate had pushed through it without (too much) trouble, and neither did she think herself naively ignorant to the practice, generally speaking. She did not believe, that in ordinary circumstances, she would have been seized by such a panic, to where breathing in natural patterns had become an insurmountable feat. No, that was mostly because of her husband.\n\nBecause of him.\n\nHer eyes were fixed anywhere that his face couldn't be seen - in this case, his tunic happened to be the least awkward spot to hold her wavering gaze.\n\nIt occurred to her that she was trembling under the loose shift, and her arms wrapped around herself defensively. \"It's just - I've only just arrived.\" She struggled to latch onto some excuse, any excuse, that might let her escape for a few minutes more. \"I haven't had time to...pray.\"\n\nThe King's gaze remained steadily focused on her, taking in her distress. His offending hand had not retracted, instead shifting now, to ghost over her hair, running his fingers possessively through the dark curls. \n\n\"Pray?\" he said, close enough that his breath fell upon her skin. He looked, in contrast to her fear, amused; a smile flickered somewhere at his lips, the expression difficult to read. \"You'll have plenty of time to do so later.\"",
        "She felt her heart thrum in her chest. Perhaps her behavior was irrational. He was so handsome, but for all of the solace any physical attraction should have provided, it only made her insides feel all the more wretched and repulsed. Alais should not be gravitating toward him; he was so horrid - but they were already married, so what did that really matter?\n\nDelaying the inevitable was without meaning, but - she didn't want this, she didn't want this, she didn't want this. She was definitely being irrational, she allowed, but still, she didn't want this. (Screaming at the tiny voice in her headspace which suggested, provocatively, why not.)\n\n\"But not before we truly become husband and wife,\" she began unsteadily, experimentally, as though testing for a proper foothold. Part of her was already steeling herself for the very real (and dramatically more likely) instance that the request would not pan out her way. She might fail to delay, but at least she had put in a struggle, if one could call it that. Better than to passively roll over. \"We were not married under my God - it would mean so much to me. It wouldn't take long.\"\n\nShe tried to meet his gaze with reluctant eyes, and lasted for all of a second before looking away again.\n\nNonetheless, she could see his smile slip away, to be replaced by a more impassive appearance. She knew it was not like him to suffer resistance of any kind, and neither did it probably escape him that she was using this as a stalling tactic rather than voicing real theological concerns. She suppressed a shiver as she waited.\n\nBut he only smiled. \"Of course.\" His fingers closed around her hand, and he lifted it, only to press a kiss upon her knuckles. \"I will give you your privacy for a little while.\" His voice took on just the slightest hint of satirical understanding, as he added, \"For your prayers.\"\n\nAt first, she was only confused, but slowly, Alais nodded, as though quietly agreeing to a proposition of his own independent making. He'd seized all control, whereas she only had power of suggestion at hand, if even that. There was even the innate acknowledgement that she ought not to overuse it, but once or twice ... it did work. How much time had she bought for herself? Ten minutes? Fifteen? \n\nBut in the moment, it seemed more than enough to try to find her composure, a feeling heightened when he left her in the peace of the room alone.\n\nAn uncertain breath drew from her lips. In her roundabout glancing of her surroundings, she discovered a wardrobe - large, oaken, and warm - and she found her eye drawn toward it almost eerily. Her shoulders were trembling from the cold, vulnerable. The bed seemed like the last furnishing that was safe.\n\nTime crept past. He would be back soon, she knew. And still, she didn't want to. She needed more time, just a little more. She put her hand to her lips as she debated with herself, the evidence of her unmistakable antsiness flickering through only once or twice - a twitch of her little finger here, a flick of her index there. Finally, light-footed as ever, she crept as a ghost and vanished into the wardrobe, settling behind a row of thick petticoats.\n\nIt wasn't delaying the inevitable, not really. It was only a little more time for herself, to think. Five minutes; five minutes was all she needed to cradle her head over her knees, bandaged wrist stinging gently, and pretend the world beyond was not so - not only that, but to pretend that she actually didn't feel guilt in having him wait.\n\n*****\n\nAlexander knew he should have brushed her pleas aside for the inconsequential things they were, borne her away to the bed, and had his way with her as he pleased - as he'd wanted to for some time now. Nonetheless, he had experienced a kind of visceral reaction, to seeing her trembling there, nearly as pale as the slight shift she bore. It was enough to give him pause, if not to dissuade him from his objective.\n\nIt helped that she had not been, really, defiant about the whole thing, and was speaking as if she had accepted her fate - was only making a request for last minute \"prayers\" (or a last minute gathering of her wits, but it was all the same). And he had not quite forgotten the spirit of his promises that morning, which would not have survived a more direct refusal but was able to accommodate a nervous semi-request. Let her have a few minutes to summon composure. What did it matter?\n\nBut by the time Alexander waltzed back into their rooms, he found that it was empty. \"The Queen?\" he inquired, towards the nearest cluster of serving girls, who stood just before the side door.\n\nHe watched them curtsy and enter the adjoining dressing chamber in search of her - only to emerge, much later than they should have, their faces visibly paler than before. \"Your Majesty, she's not...\" The young woman swallowed, not meeting his eyes. \"We cannot seem to find her.\"\n\nAlexander, who was gazing at the fire, turned, this at first not registering. \"What do you mean?\"\n\n\"She's not - there anymore,\" piped up another, since the first seemed to lose her nerve. \"She was only just - \"\n\nAlexander shifted at once, moving toward the adjoined room himself, and they scattered like mice before him, so as to not get in his way. He peered within, at the now deserted confines, walked the length of the room, and then subjected the other rooms in the suite to the same study.\n\n\"We observed no one leaving, Your Majesty - \"\n\n\"Do you mean to tell me,\" said Alexander, his voice quiet - though this seemed, somehow, infinitely worse than if he had shouted his censure - \"that, confined as she was, all four of you still managed to lose her?\"\n\nAs the girls' apologies tumbled over each other, in their panic and haste, he waved it away impatiently. He had caught sight of the windows within, one of which was slightly ajar - and drew the implications. He'd deal with the maids later. For now, time was of the essence if he were to track her down.\n\n\"Ser Lionel,\" he all but barked, and the knight (standing watch outside) immediately entered and bowed low. \"Gather the men and ready my horse. And tell the kennelmaster that I'll have use for my hounds.\" As Lionel acceded, turning quickly to obey, Alexander followed, pausing only to pluck an errant glove off a stool; the dogs would need something to scent.\n\nAll thoughts of charity withered from his mind, and he seethed to think she had taken advantage of his temporary weakness to make escape. Foolish to think she could escape him - or that the repercussions would not far outweigh the attempt. Now she would answer for it.\n\nBefore long, the yapping and howling of hounds filled the night, and in the distant courtyard, torches emerged all glowing and aflame. Alexander and his soldiers were ready for a short trek through the forest - depending on how far she'd gotten - and were not disposed to be leisurely about it. They set off at once, riding hard... only for the King's trusty dogs to lead them right back where they started and blithely into the lodge proper.\n\nAnd then Alexander was back in the very same room he'd just vacated, though with traveling clothes - and the company of half a dozen excitable mutts, all of whom preceded him, bounding messily into the room and sounding their cries of success.\n\nAnd there she was.\n\nHis newly-made wife was upon the bed, immaculate in her shift, her nose a few pages into a book. Her bare feet over the covers were as white and unblemished as when they'd first stepped out of the pleasantly scented wash; she should not have been so pristine if she so much as traversed two feet out into the wild night.\n\nHe expected a display of nerves and apprehension, but more importantly, contrition. Instead, as she looked to him, the only reaction was an airy show of confusion. \"Why are there dogs in the bedchamber?\"\n\nIf he didn't know better, he'd think she was mocking him. \n\n*****\n\nThe victorious, yipping hounds made their presence known long before their dramatic and explosive entrance, which gave her such a start that she clambered quickly to her feet, still atop the bed. Why were there dogs? Did he think - did he really think - he couldn't have given her twenty-five minutes to herself? Or if not even that, to call for her before summoning the hounds?\n\nSo maybe her palms had been pressed over her ears for much of her time huddling within that wardrobe. So maybe she should have come out at the first discernable noise she'd heard, instead of delaying and delaying. But this...\n\nIt was probably best to feign some sort of ignorance. The bewilderment scrawled upon her face was already such that the odds for pulling it off seemed quite favorable.\n\n\"Why - are there dogs in the bedchamber?\" she cried out again over the resounding barks, her expression the vision of confused disbelief.\n\nThe aforementioned dogs were still barking excitedly, one of them close enough to snap his jaws - sharp-fanged and all - at her hand. A few continued to howl, probably indicating a successful tracking, circling energetically around the King for his approval. \n\nHe brought his fingers to his mouth and emitted a sharp whistle, and at once, the well-trained hounds finally fell obligingly quiet. \"Out,\" he said curtly. Maids, servants, guards, and knights alike disappeared from view of the door, and the kennelmaster waved something in the air that caused the dogs to follow, tails wagging. A few nudged at the King's hand as they left, but he only patted them absently.\n\nThe door closed after this parade disappeared behind it, leaving the two of them alone. Silence settled back into the corners of the room, broken only by the crackle of fire. \n\nShe looked at him fully and questioningly for the strange procession that preceded them, with the (intentionally) innocuous face of one who could not comprehend where she had erred. \"What is the meaning of this?\"\n\nThe King had not moved from his original post. His voice was cold, and unsettlingly quiet. \"I grant you a favor, only for you to be gone from our rooms upon my return. You left no word as to your whereabouts. What would you have me think but that you made escape?\" He studied her. \"Do you really fail to comprehend where you have erred?\" \n\nIt occurred to her that she was still standing blithely on top of the bed, feather stuffing soft beneath her feet, and in such a way which had her height surpassing his in the most unintentional of ways. Obligingly, she climbed back down to floor level, and slowly for the tricky maneuvering of such downy texture. \n\n\"Were there horses missing? Anything? Clothes? Shoes?\" Her voice rang with the soft yet airy clarity of one untouched by fear - and professed confusion - and knowing the both of them, perhaps she had schooled herself for this precise moment, all the while huddled back behind wardrobe doors. Hence the extra few minutes of waiting after Ser Lionel (Milktoast)'s name had been shouted - the one instance she was able to make out words, to be fair.\n\n\"You thought I ran barefooted through the woods, in this?\" And no one had forced him to take out an entire hunting party in pursuit of ghosts. Twenty-five minutes. Twenty-five minutes - not even half an hour. The choice to escalate for whatever reason was made by him. \n\n\"People aren't always rational, Alais,\" the King replied, as if he were explaining a very simple concept that eluded her. He shifted, slowly, into motion, causing her to tense back, but he only paced the length of the room. \"I hardly had the time to do a full inventory, if you did run. And someone could have helped you.\"\n\n\"No, no one could help me,\" she said, almost automatically. \"Everyone's so afraid of you.\"\n\nHe almost smiled, though it was more like the baring of teeth. \"I'm flattered at your belief in me,\" he said, humorlessly. \"And yet it does not appear that fear is able to keep everyone in line.\" He looked, significantly, in her direction.\n\n\"Your definition of in line... differs from the rest of the world, I think,\" she managed.\n\nThe floor creaked beneath his steps as he turned to her. \"Perhaps. And yet, more often than not, it is the world that caves to me.\" His movement stilled, naught but a foot away from her. \"Now tell me. Where were you?\"\n\n\"I was here.\" She proceeded to clarify after giving just the right amount of pause, \"In there.\" An obedient hand lifted to point at the wardrobe, the one that appeared more antique than function. And still, she made to look as if she could not understand what had been possibly riled him, and that hiding in a wardrobe was a perfectly logical undertaking.\n\nInside, she might have been giggling maniacally. She could feel his eyes upon her with her every move, and knew by the ever so slight narrowing of them that he was very close to losing his patience. It was probably (definitely) dangerous to persist as she was... but she felt she was already plummeting, far too fast to stop herself. The only safe alternative here was to fall to his feet and beg forgiveness, probably, but the sentiment was suddenly distasteful to her.\n\nAnd so she went on with her charade. \"Like this,\" she said, as if in pursuit of demonstration, went so far as to open the doors open and place herself back onto the spacious shelf, behind the veil of coats - as if for his education, and that he might not have understood otherwise. \n\nIn a different context, one might have called this a prank.\n\nThe King's eyes remained on her, without the slightest of wavers. Slowly, he chuckled, shaking his head at the same time. She willed herself to stillness as he made his way forward, his steps resounding deep and slow across the floor. \n\n\"What, just like this?\" he asked, and, under the paper-thin guise (a prank of its own) of attempting to understand her hiding spot, he reached out, pushing a little at her shoulder, so that she fell right back inside instead of being able to emerge. He tilted his head, his expression shifting to mirror hers, mockingly, in its false confusion.\n\n\"Or like this?\" He shoved her again, his hand heavy upon her arm - this time with enough force that her back collided forcefully with the wood paneling of the interior. Some of the cloth and silk from within shook and fell, while others pressed around her, suffocatingly, but the King was not content with the mere suggestion of it.\n\nWithout warning, his fingers fastened about her throat, vice-like, and he used it to pin her against the back wall. At once, her body stiffened, and she sucked in a deep, careful breath.\n\nSo far, his grip was firm, but had not yet tightened - it remained the silent threat that it was, as he leaned over her. Even so, his hand felt hot and harrowing against her flesh, for the implications. \"Do you really want to play this game?\" he murmured into her ear. He sounded almost playful, but not in that benign pleasant way that had persisted through the afternoon.\n\n\"I wasn't playing,\" she managed, once after freeing herself from the reflexive wincing. Space had been tight enough with her huddled alone and in peace, but with the falling fabric haphazardly draping over her, with him hovering so close, there did not seem to be enough air. \n\nFunny, though. If he'd allowed her but one more moment to explain, she would have reached the part where she hid herself because she was still afraid - which, come to think of it, may or may not have actually helped.\n\nWhat did that matter anymore?\n\nWell, at least this way, there wasn't any need to worry over sitting upright. Her hands, free for the moment, supported herself (unnecessarily) with palms pressed tightly against the wooden platform.\n\nShe continued, calmly, as though his fingers were not wrapped around her throat, as though the nerves in her shoulders and spine were not clanging pots and pans in outrage for injury, as though one of them was attempting to hold a reasonable discussion, \"Your Majesty... has a tendency of finding insult where there isn't any. It's not always about you, you know.\" \n\nThe King looked amused, whether at her demeanor or her words. \"I disagree,\" he returned. \"It is about me. Everything you do is about me now, if I so wish it. You know why?\" \n\nHis other hand rose, coming to her hair, stroking it this way and that, in some parody of a lover's caress. \"Because you are mine now, Alais.\" As if to signify his point, he lowered his lips to her jaw, and there pressed a searing kiss. \"Every little bit of you.\"\n\nIf her heart had been thrumming before, it was thundering now, so loudly that she couldn't imagine him not hearing it.\n\n\"And you know, Alais,\" he continued, \"I don't think you're as wholly perturbed by this as you want to be.\" His smile widened, more wickedly, maybe even mischievously. \"I've seen the way you look at me, now and then. A little part of you wants this, doesn't it? Wants me to take you and make you mine?\"\n\nOf course he'd noticed. Some part of her had clutched on to the vain hopes that he wouldn't, but there was not even denial to shield her now. She combated the blush that threatened to rise - after all, Alais was willing to concede there were hypothetical droves of virgins who would have melted to his attentions. Why shouldn't they? Why should she think them worse for it? But she was not them, and an awareness of this (annoyingly) likely hypothesis left the stubborn effect of strengthening her resolve. At least he acknowledged her attraction was little. Littler than most, and little enough to smother between two fingertips like a dying ember if she willed it. That was the hope.\n\nRight now, unhappily, it was a little more than a tiny ember. His contact was as distracting as intended, the roaming hand, and the one at her throat, tickling and burning at unprepared nerves. If she could not pull or shake her head away, her eyes shut in miserable rejection of the unsolicited (like everything else) kiss.\n\n\"That's not - \"\n\nHe deprived her of a denial, by way of abruptly tightening his grip, and she fought panicked gasps at the same time. \"Hmm, what's that?\" he asked, tilting his head, as if attempting to hear her more properly. A cruel little smile flitted across his lips, and his fingers constricted further, ever so slightly. \"No?\" \n\nHe was careful, though. Oddly, even in her state, some detached part of her mind noticed that his hold had not tightened anywhere near dangerously, and knew even as she experienced it that most of her panic was mental. Not that this was assuring.\n\n\"Look at me,\" he ordered, crisply. \n\nHer eyes snapped open, and she stared up into the blue of his own. Nothing was said; he merely watched her, letting her feel the presence of his hand at her neck, the weight of his control. She had always felt powerless around him, but never had it been so stark - she could not move or speak unless he so willed, and one little twist of his fingers could bring about a world of pain. No doubt it was his intention to force this understanding, but realization of it did not lessen its effects.\n\nAnd yet, abhorrent as it was, there was something oddly tantalizing about the feeling as well, something thrilling about both its intimacy and its danger. No - she suppressed this. It was not yet an immense struggle to combat this... ill-conceived flame with buckets full of water, in the form of a relentless internal mantra which sounded like infinite repetitions of No. As if she would grant him the satisfaction. Nearly everything else had been taken from her; he didn't need this.\n\nFinally, he spoke. \"When I let go, you will apologize. Yes?\" His free hand continued to play with her curls, before drifting down, drawing one finger smoothly over her collarbone. He smiled. \"Otherwise, we'll find out how long you can hold your breath. I have high expectations.\"",
        "When he finally released her, she fell against the back of the wardrobe, panting for breath; meanwhile, thoughts blazed through her head.\n\nApologize? Did he think to train her like one of his dogs? Only a few weeks had passed their initial meeting, but Alais already understood that groveling was rewarded, impertinence hammered down. She had also discovered, perhaps recently, that she could grovel - assuming the role of the plaintive waif - for only so often, within any given period of time, before the act felt too ridiculous to uphold.\n\nAnd while anxious and apprehensive did seem to be her normal state around him - it was like standing before a hurricane. One might fear it all they like during its approach, but once it was there and all-encompassing and inescapable (a bit like his anger), there was little left but to gracefully surrender oneself to the imminent destruction. And groveling still tasted utterly foul in this.\n\nBut she also (sanely) lacked the hubris to banish all prospects of compliance, and so a compromise would have to suffice. She looked to him, levelly. \"I'm sorry you rushed to conclusions.\" She was sorry for the men he'd dragged into the woods. She was sorry for the maids who might have faced the brunt of his misplaced fury. But she was not sorry for retreating from this awful, awful world.\n\nThe King stared, his eyes narrowing again, and for a moment he looked like he might make good on his threat. Instead, he laughed. \"You really are intractable.\"\n\nHis finger shifted, almost tightening, but ultimately gave way to a stronger instinct. As if unable to help himself any longer, he leaned down, suddenly, and kissed her. It was not the soft, glancing thing from the wedding ceremony, but a passionate, relentless kiss, that demanded all of her and held back nothing. His hand shifted to cup the back of her head, mussing up her curls messily, and the whole of his body pressed up against her, hard against her gauzy slip and the soft curves beneath.\n\nAs a young girl, Alais was always too small, too light, too fragile to behold - like she belonged more so sitting within a glass case over a fireplace than out in the open. Now, her figure could still be considered petite, but there was an undeniable fullness in places one might expect, shapely for her frame and with all the grace of youth and spring. It was a body unaccustomed to wanton treatment.\n\nShe stewed in the stunned, confused, and ashamed silence of one who had never been kissed with a vigor any greater than light and chaste. Her eyes were struggling in focus, dazed, the back of her hand brushed tentatively against her lip; when he withdrew, she could see he was a little breathless himself, his eyes scanning hers as his lips curved into a wicked smile. Without warning, he took hold of her, arms moving about her waist to sling her over his shoulder, and carried her off to the bed, where he lay her across its covers like some ill-begotten prize. \n\nThe intensity of that kiss meant that her mind was still drawing blanks as her back bounded against the downy mattress, but somehow she managed to muster the remnants of her wits as she propped herself up by the elbows and (subconsciously) pressed her knees together, pointing them off to the side. So what if she had never, ever felt like that before? So what? It was just - just a physical reaction of her body, something she had no control over. She should move on as though it had never happened. Ignore. Deflect. Evade. \n\nShe shifted a little to re-right the wayward rim of the shift collar which had dipped below a shoulder, a consequence to his disarranging handling, and left the skin momentarily bare. When the gown was all well and straightened again, her increasingly frantic mind was set to delay, delay, delay, seizing onto any pinpricks of indignation it should have felt but were frustratingly missing. \"I'm not - ready - \"\n\n\"Unfortunate,\" he murmured. The smirk was back at his lips. \"For you.\" One of his hands - rough and coarse, strong from swordplay and riding - settled about her ankle almost idly, but as she moved to draw her knees together, he made a teasing \"tsk\" noise and pulled her legs yet further apart - splaying her wide, so that her body took on a perverse shape. \n\nThis prompted a little gasp from her, but it was nothing compared to his next trespass: he allowed his fingers to ghost up her leg, trickling up and up past her thigh, and then down again, this time massaging and kneading as he went. \n\n\"So tense,\" he told her, with mock concern - going so far as to look mildly surprised. He inched her shift up (that which she had so carefully just arranged) little by little, agonizingly slow, until it was bunched up just below her hips.\n\nShe watched helplessly as he lowered his mouth then, trailing kisses along a similar path, and shivered as he lingered at that erogenous area at the back of her knee. \n\n\"What are you doing?\" she demanded, her voice breathless enough to give reason for embarrassment. Why was he taking these pains, instead of forcing himself violently upon her? She doubted he was above it.\n\n\"Attending to my wife, of course,\" he answered, with a smile that was far too innocent to be sincere. His lips and tongue worked expertly to tease and pleasure her, all the while with a certain awful glint in his eyes. \"Do you not enjoy it?\"\n\nThe terrible thing was that the answer was far more ambiguous than she wanted it to be. \n\nThis was...a more subtle kind of torture than the outright brutality she had expected. Had he read her so well, to know that she actually did fear her uncontrollable reactions far more than the invasive contact itself? For if there was to be immense pain, she liked to think she had the strength of mind to write it off as a wound of the flesh, one that didn't need to be assigned more special meaning than any other. But to be made to enjoy the humiliation was to probably be her undoing. To relinquish control of her own senses, and to him - she couldn't bear it. What would be left of her if he could mold her most private responses to his desires? Where would her credibility go? How would she face her own reflection again?\n\nShe wasn't so naive to presume it couldn't happen. It was already happening, breaking minute slivers of her resolve away from the edges. That manipulative way he'd begun using her name that night, and now the obscenity he rendered upon legs. Her head fell back against the sheets out of red frustration, refusing to look at herself forced apart. The ceiling offered such a benign, indifferent view, aloft from everything - but she could still feel him drawing closer and farther, tantalizingly, from the still (barely) shrouded spot between her thighs. An obstinate lack of acknowledgment had to go a long way, right? As long as she could still her damn quivering. How tempting it was to reach down and swat him away, or better yet to kick at him; but the difference in physical strength, they were both well aware, was outright laughable.\n\nThere was something else holding her back from defending her modesty, something more subtle... but that was the very thing she was vying not to acknowledge.\n\n\"This isn't enjoyment - this is anything but enjoyment,\" she instructed patiently, anxiously, to the happy ceiling. The words flowed uneasily, often disjointing and taking shuddering breaks each time his mouth discovered a particularly sensitive nerve. What was he doing there? No, don't look, it's just stupid, inane tickling. \"I would enjoy if we could - wait.\"\n\n\"I'm done waiting.\" He withdrew, only to lazily pull off his tunic. In the candlelight of the chambers, his muscles appeared more defined, and his lean strength more evident - the sight almost made her breath catch. \n\nAbruptly engulfed by a frenzied panic, she slipped away from reach on the other side of the bed, dropped herself over the edge and rolled underneath it, past the curtain of bedsheets. In a different context, she might have been overindulging in some ridiculous child's play.\n\nShe heard him laughing. \"Alais, Alais, Alais,\" he chided, each inflection more patronizing than the last, as she heard him slip from the bed. \"What am I going to do with you?\"\n\nHer first order of action was, naturally, to diligently smooth out (again) the shift back over her knees, her shoulders... everywhere else where they were twisted inappropriately. Secondary was her stomach-turning watch for the sound of his steps, the way his shadows cast over the thickly hanging comforter as she lay frigid. She pressed backwards, but there was nowhere near enough space to escape him utterly.\n\nThe curtain of bedsheets was brushed aside, and the candlelight was free to trespass on her sanctuary. Then his hand had clamped back onto its familiar resting spot, her ankle, and from there he slowly but surely pulled, with easily enough strength to combat her full-bodied efforts. How many useless seconds had that bought her? Perhaps panic was subjecting her to entirely new levels of irrationality, but he made short work of pinning her down onto the bed again, and none of that mattered.\n\nShe was lowered back down, limbs spread far and wide like she was another layer over the covers. Only then did he climb over her, straddling her waist, his heaviness there swiftly putting an end to any ideas of a second escape.\n\n\"If you give me reason, I will have to tie you down,\" he told her.\n\nTaking her hand - that soft, unblemished thing - he brushed his lips over her knuckles, in an imitation of a chaste greeting, his smile widening mischievously again as his attentions deepened. He brought each finger to his lips, suckling slowly and enticingly; his eyes were on her at all times, watching for a reaction or weakness to exploit, and lingering where she was most affected. \n\nThis treatment stirred no noteworthy response by its own. It was her hand. All the intimate suckling in the world would have done nothing, were it not for all these... other things. It was the sight of him delivering these (spitefully) tender affections, his closeness, the warmth of his own bare skin, and all those annoying well-sculpted things about him which rendered aloofness for even the most ludicrous gestures all but impossible. He was drawing it out on purpose; he had to be, for all the uncontrollable segments in her brain craving against the lot to sink into the feel of him.\n\nHer eyes wandered away and focused back to a spot in the room where she could no longer see what was being done to her. Her mind forcibly replayed the imagery of Edmure rotting away in that gibbet, Ser What's-His-Face being pried apart, and of the threats he had made to her family to drag her down to this position. How could she be enjoying this?\n\nAnd he was still talking, in that leisurely way of his. \"Or perhaps rope would only...excite you further?\" he voiced, smirking against her skin. \"You did seem so fond of it last time.\"\n\nShe felt his lips lingering over her bandages, and could barely resist a flinch. Her arm was lavished with the same leisurely treatment, and when he reached her shoulder, he eased off the strap there and lowered his mouth to that sensitive spot where neck adjoined shoulder. There he lavished the same attentions, kissing and suckling.\n\nIt was here that her foundations began crumbling again, sending a jolt down her spine as she strangled away what had to have been the heinous sounds of frustration. What else could it be? Alais refused to even consider it. But not there, she wanted to cry, not there. Her wrists squirmed like skittish animals within his unrelenting grasp, yearning so desperately to fly down and cover her flushed face in all confusion and guilt.\n\nFor all the softness of its skin, it was never this sensitive before - never. Her legs were at liberty to come together (stubbornly) and twist and point upwards in the limited space beneath him. She tried craning herself away from him, but it wasn't as though she could burrow into the bed itself.\n\nConversation was still tenuously being sustained. As far as distractions went, she could no longer afford to be choosy, but now, there was definitely something far more shaky, subdued, and almost despairing in her voice than before. \"Rope? Why would that possibly excite me?\"\n\nTo her relief, he left off her neck, though something in his eyes told her he was more than aware now of her particular sensitivity - and would no doubt be exploiting it. He picked up her other hand, giving her fingers the same attention. \"I've been told there's a certain thrill that comes with restraint.\" He kissed down, past her wrist. \"That feeling of absolute vulnerability.\" His gaze remained on her, his lips traveling still further, past the crook of her elbow. \"And the knowledge that another has such power over you as to take you for his pleasure...however he wishes.\"\n\nThe words titillated as much as insulted; she tried to ignore them. The leisurely focus on her arm would've been something of a reprieve, were it not for the gut twisting anticipation that the path would only wind up there again. Not there Not there Not again.\n\nBut of course, his mouth was at her neck once more, and now he was leaving tender bites all across her flesh, her skin caught between the wicked contours of his teeth.\n\n\"You'll leave a mark,\" Alais cried out between barely suppressed whimpers, as though it were something dangerous. What was that he said - about decorum and grace? Distantly, she thought that scarves would have to be an option in concealing the faint bruises which were surely to show.\n\n\"Good,\" was the mischievous answer. \n\nHe nosed down, still taking all the time in the world, the stubble on his chin offering a tickling scratch; when he came across cloth, he drew the slip down, further and further, until it left her chest. At once, her arms banded defensively across her chest, but he would have none of it. His hand reclaimed her wrists (feebly struggling), pinning them above her head, so that her breasts - pert and slightly pink with flush - were fully exposed for his viewing.\n\n\"Hmm,\" he said, with a mocking look of appraisal. He let his fingers trail over one breast and then the other, caressing them with the same slow, deliberate attention, and ending with a playful squeeze (and unabashed grin, when she inhaled sharply). \n\nIt would be so much easier if she weren't so sensitive to his touch. Therein her frustrations were fueled, not because she secretly - miserably - unhappily - desired more and to be handled with an even greater force, but because she was being played like an instrument. Overwhelmed, stricken tears were finally brimming in her eyes. It was all she could do to silence her lips from giving utterance to the tunes he probably would have been pleased to hear. And he hadn't even gotten all that far, had he?\n\nHe certainly took notice of how she squirmed and writhed beneath him, enough to prompt a self-satisfied smile. \"I do believe you're becoming impatient, Alais.\" He lowered his mouth to her breasts, replacing the ministrations of his hands, so that his breath fell hot against her skin. \"There's no need to hide your desire. It's perfectly natural.\"\n\nEven his taunts did not dampen the pleasurable swirling of his tongue. \n\n\"I'm not -\" She was cut off, as his teeth clamped lightly over her nipple, tugging on it enough to elicit a threshold of pain - and further stimulation. \n\n\"Stop - this isn't what I want.\" Maddened, she ventured a step further, \"But it doesn't matter what I want, is that right?\" She almost managed to sound angry.\n\nThe King withdrew, his laughter falling easily; his own manner was comfortable and at ease, in appalling contrast to her distress. \"Oh, but it is what you want,\" he said, as he traced down, over the line of her hips. His gaze lingered on the rise and fall of her chest, and the new indentations of his teeth upon her breast. \"That much should be obvious, even to yourself.\" \n\nEven as he spoke, his fingers went to her shift again, drawing it yet lower, and then lower still, until he finally slipped it off altogether. Now utterly nude, she shivered under his eye; her legs crossed impulsively, one curling frightfully over the other. \n\n\"How lovely you are,\" he said, almost to himself. He drank in the sights of her naked form - the swell of her hips, the dark patch of hair that shrouded her virgin sex - with unhidden appreciation, and she was struck again by how he looked at her as if she were some property newly acquired. \"How could I be blamed for wanting you for myself?\"\n\nPlacing his hands upon her thighs, he pushed, spreading them wide again, despite her efforts, so that it gave him complete and utter access to her womanhood. And before she knew what he was doing, he extended two fingers between her legs, slipping easing through her moistened folds. Jolted by the intrusion, she squirmed, but he had already withdrawn then, his eye upon the telltale lubricant now staining his hand - his expression devilishly triumphant. \"And it seems the feeling is mutual.\"\n\nShe felt the burn of her own flush, even as she retorted, \"It means nothing.\"\n\n\"Does it? That sounds like a challenge.\" He forced her legs apart again, and this time lowered his mouth. He kissed along her sex, his stubble more ticklish than ever, and she keenly felt the new encroachment of every touch; the angle of her legs felt odd and unnatural, and at any given moment Alais struggled against the futile instinct to snap them back closed. To be touched and toyed with where no man had even laid eyes upon - how could anyone bear the shame? Was it that much easier if she were in love, whatever that meant?\n\nHe went ever deeper, undeterred by her squirms, and she stilled as he reached the opening of her lips.\n\nThen she inhaled sharply, abruptly confronted by his tongue pushing into her, and of the butterfly sensations building over one another, into something more sinister. Her breathing took on a strange, shallow cadence, drawing a slight yet infuriatingly anticipatory burning from her lower stomach.\n\nHer tongue was inside her, warm and wet against her walls, and there was nothing she could do to stop the cruel pleasures it was inflicting.\n\nThere was also the overbearing humiliation, the confounding aching which responded horrifically well to the invasive prodding between her folds, and some piece of her feeling as though it were dying inside. She was incredibly tense, and how could she have known of the slick heat coating the tight walls within her private flesh?\n\nThe attentions paused, only for his tongue to find the pink nub of her sex. He flicked - once, twice, each touch tantalizingly light, before his mouth closed over the nub entirely and slowly sucked around it.\n\n\"What are you doing - No. No... Please.\" She was rapidly losing herself to him, unable to control the advancing wave of her own pleasure. Her hand managed to stifle the worst of her whimpers; nothing could be done about the uneven trembling, the unspeakable sensations building within her. \"Please... stop.\" It occurred to her, like a death toll, that she didn't want him to.\n\n\"Oh? Is that what you really want?\" he asked, the same taunting tone coming to the fore. \n\nHe withdrew his advances, suddenly - and at her most vulnerable moment, when she had felt fit to burst, she was instead left with frustrating ache.\n\nOf course, this was what he wanted, and Alais resisted giving him the satisfaction of showing it - but even her own breathing had betrayed her, sounding more like pants in soft and sweetly rising rhythms. She had to stifle cries of greater desire.\n\nOnly when this subsided did he resume his attentions again, his hands prying her apart and his mouth finding the sweet center of her womanhood. Again, he suckled on her sensitive little nub, and again his tongue penetrated her to wrest unwanted pleasure.",
        "Then, just as she was almost overwhelmed, he retreated once more, after a teasing flick of his tongue. \n\nThis sweet torture was continued; he repeatedly toyed with her, only to leave off just when she neared the brink. By its end, she was almost worked up to a frenzy, and had to clamp down with an even greater desperation against the whimpers threatening to break through - frustration at her lack of relief for the build-up more evident in the flush of her cheeks and in the way her head fell limp toward the side. The build-up itself was harrowing - build-up to what? Some strange pressure pooled from her stomach, expanding and threatening to thrum throughout her body, somehow, but it did not. He had withdrawn again, would not let it, and there was no longer thought enough to stop an escaped moan.\n\nThe King smirked. \"My poor Alais,\" he said, with not the remotest note of sincerity. \"Do not worry. I will grant you your relief.\"\n\nHis hand moved to his breeches, tugging it from form and letting it join the rest of the discarded clothes at the bed's feet. Though she tried not to look, her eyes fixed on the jutting cock that was revealed. Woefully, suspicions of overcompensation (for that monstrous horse, those massive dogs, even the colossal palace) were not to be confirmed, for his member stood of substantial size and thickness. \n\nWas that supposed to fit inside her? \"I don't think -\"\n\n\"Shh,\" he murmured. Her squirming body was kept pinned by his hands as he moved over her, any escape impossible. With her hands upon her face as she shuddered again and again besides herself, it was a mercy that she neither saw nor was in any position to anticipate the first, sorely slow thrust. Her already unstable breaths took a sudden hitch, his head prodding at her before gradually forcing itself through. \n\nAnd slowly, he entered, pressing into her more and more; she felt every inch, felt herself stretching around him, felt her eyes drawing shut against the starbursts of pain. And just when she thought that every crevice inside of her was filled, that she could not possibly imagine the slightest more invasion - he pushed further yet, and she gasped as she felt the pressure of it, forced to give even greater way to his rigid length.\n\nThere was not actually that much pain - not nearly as much as there could've been - for all that he had readied her entrance; she was slick with wetness, and made half-numb by feverish arousal. But her inexperienced mind could not help but focus on the sheer intensity of it, heightening every sensation to the point of mental excruciation. She shivered beneath him, muscles tightening around his thick cock, her legs suddenly pressing against him.\n\nThe ragged noise pulling out of her throat, sounding suspiciously like a sob, was probably yet another mixed signal - but such was her own confusion. \"Please, this isn't - right.\"\n\n\"Isn't it?\" His lids were lowered, his breathing heavier with lust. \"Is a man not meant to lay with his wife?\"\n\nWith the same agonizing slowness, he began withdrawing, and she felt herself clench and unclench about him, letting loose a long exhale as she felt a sudden, relieving (in only some ways) emptiness in his wake. But then she felt his head brush against her lips again.\n\n\"No - you can't,\" she pleaded, and knew not if she really meant it.\n\n\"I can, and I will.\" The penetration was faster this time. She stiffened as he once more sheathed himself, and she felt the full violation of his member filling her utterly once more, leaving no part of her virtuous.\n\nShe struggled, in vain - he was too heavy atop her, his hands too strong over hers. If she were to confront herself, she also knew she wasn't putting real effort in resistance - how could she, when, as gloriously overwhelming as it was, it also felt so good?\n\nHe began thrusting now, his cock impaling her with slowly building rhythm, taking what pleasure he wanted from her body as she lay helpless and writhing beneath him. \n\nThen he began to resume his other attentions. Still moving, he lowered his lips to her breast, clamping teeth to suck - before, thinking better of it, shifting to dote on her neck instead. His hands trailed down, finding their way to the abandoned post and cupping her breasts with rough and fondling fingers. \n\n\"I know this what you crave as well,\" he told her, and she was far too overwhelmed with all these stimulations to think of a reply. \"Give in to me, Alais.\"\n\nHe was moving more quickly, fucking her more roughly - any restraint slowly but surely ebbing away. Her arms shifted of their own accord, hands blindly seeking purchase so as to save herself from being lost as he pounded into her. Alais liked to keep her nails cut and trim, but even so she managed to find a way to imprint tiny white crescents in groups of four over his back. She had never hated him, hated herself more than when the greed of her body finally overtook the restraints of her mind. What was the point of resistance if it ended in this? Where were her principles?\n\nShe had nothing more to say. There were the soft and pretty mewls, the uncontrollable sighs and shuddering breaths. Words escaped her utterly, and she was all but tangled up in her threads of insurgent pleasure. The initial pain, now an afterthought, had only seemed to lend to the intensity in some grotesque symbiotic exchange. While her tension had yet to escape her, it was just enough to grant him deeper access without burning more fire along her nerves.\n\nThere was nothing more to be said. She could no longer put two thoughts together. All at once she had the suckling on her throat, the calloused kneading of her soft breasts, and the maddeningly tight friction against her recently virginal womanhood. If she had to think, she might have thought there seemed to be one thing inexplicably amiss. But she was being pushed with such decisive force toward the precipice that it no longer mattered, that even her frustrated loathing did not matter.\n\nHer legs clung onto him for dear life, as she shivered beneath him.\n\nHis self-restraint proved not to be boundless either. As pleasure consumed her, so too did it overtake him, seeming to seize control of his body and limbs in an animalistic pursuit of carrying them toward the end. He pummeled her, deep and hard, scarcely noticing such inconsequential things as her nails in his back or the bite marks he was leaving over her exposed neck. Such was the force of his ravaging that each thrust sent her breasts swaying, her small body trembling under the weight of his onslaught.\n\nHer hands were roaming the landscape of his powerful back, one lacing its way into the back of his hair. Her neck had arched to grant his teeth more room for grazing, her hips squirming somewhat in concert as if to betray itself as a glutton for pleasure, pain, and for want of more, more, more. It was a ghastly conundrum to hate the idea of him but to love the feel of him. Inside, Alais wanted to claw her beautiful skin to ribbons for the treachery of her own desire.\n\nNo, don't, the tiny voice in her head cried out when his hot seed spilled into her, timed with his low throaty groan, but the rest of her was too blinded by the escalation of heated pressure to care. In the final few strokes, the climax washed over her in a wave. She felt herself spasming around him, distant stars in the back of her eyelids and a final gasp parting from her lips as she tightened again for him. The sharp jolt of pleasure coursed through her, the warmth of it diffusing through her body down to her fingertips and toes, and the heady rush of it all (exacerbated by the delay, delay, delay) left her momentarily dazed and out of breath. \n\nAs she gradually regained her senses, her limbs fell from him, lying limply back against the bedsheets. A muted horror settled thickly over her lungs, as the impact of just how receptive she was to his ravishment pulled her beneath the depths. It occurred to her that there were still tears in her eyes, but she waited silently, patiently for him to withdraw before pulling her own body back toward the ever-familiar edge of the bed. \n\nHe came to rest upon the bed beside her, and the mattress dipped toward his weight, annoyingly inclining it toward him. She turned away so that she did not have to look at him in her shame and defeat (inadvertently allowing for a different view of her naked skin, one that was no less enticing than the one before). \n\n\"So you would have me believe you didn't enjoy any of that, would you?\" he said, and she could hear the smirk in his voice.\n\nWhen his last tease hovered mockingly in the air around her ears, she did not answer. Instead, she curled up, as though shrinking into herself. Her hands were on her face again, one covering insistently against a pursed mouth so as not to grant him the benefit of even one more sound.\n\nHow was she to live with herself?\n\n*****\n\nAuthors: We hope you enjoyed that! From now on, there should be more steamy action going forward too - alongside the story and characterization! As usual, if you'd like to see more, we always appreciate your ratings, favorites, and comments (we reply to everything substantive). And don't forget to subscribe if you want an alert when the next chapter comes out!\n\nBy the way, a question- would you guys rather see shorter chapters come out at a quicker pace, or longer chapters at a slower pace? Thanks! "
    ],
    "authorname": "lady_temily",
    "tags": [
        "medieval",
        "historical",
        "princess",
        "oral sex",
        "cunnilingus",
        "control",
        "first time",
        "virgin",
        "reluctance",
        "dominance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/at-his-majestys-pleasure-ch-05"
}