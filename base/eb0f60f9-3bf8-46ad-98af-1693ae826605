{
    "title": "Romancing the Bequia Mermaid",
    "pages": [
        "\"You need to get laid, Marty,\" Betsy said matter-of-factly as soon as I sat down on the low chair in her well-appointed corner office.\n\n\"I, um... Is that an offer?\"\n\n\"Ha! If it was, you'd know it,\" she replied with a smirk and a cocked eyebrow. \"And if HR asks, I'm telling you this as a friend, not as your CEO.\"\n\n\"I know, Bets. But that's not the issue right now.\"\n\n\"Bullshit,\" Betsy countered, pouring two tumblers of scotch from the decanter on her credenza. \"You've needed a good fuck for the last year and a half. I know the divorce has been hard on you, but how badly has Gwen screwed you?\"\n\n\"It was an amicable settlement, Gwen was very fair. She hasn't screwed me at all... Yes, I see what you did there. You're very clever.\" I accepted the glass she offered.\n\n\"That's why I'm the boss, Marty. Now\u2014as your boss again\u2014I am declining your resignation letter.\" She leaned back against her desk, and even though she only stood about five-foot-four, she loomed over me sitting in the deep chair. It was one of her favorite power poses.\n\n\"You're my Chief Operating Officer, you're a mentor to most of the staff, and you're named as an essential resource in half a dozen government contracts.\" Betsy continued. \"If we lose you, we stand to lose seven percent of our business... and that's a conservative estimate.\"\n\n\"Dammit Betsy, my head is not in the game anymore!\" I exploded as I stood and paced the room with my untouched scotch.\n\n\"Back when it was all still happening, I could pretend that... that it wouldn't. That somehow everything would go back to normal. Maybe I was delusional then, but I got by... But now... now that everything is signed, the house is sold, the lawyers are paid... It's finally real... It's all too real...\n\n\"Gwen's not my wife anymore... I'm alone for... for the first time ever... And it gnaws at me, Betsy! I'm constantly distracted. I can't focus on work... or anything really. It's only a matter of time before I make a mistake that is going to cost this company more than its fucking market share,\" I protested. \"I am a liability!\"\n\n\"Which is why you need to get laid! ...Friend again, not boss... But that's not going to happen with you moping around between the office and that little apartment full of unopened boxes you're living in.\"\n\n\"How do you kno-\"\n\n\"Because we're friends, Marty. Pay attention... Look, I'm not going to let you resign. But you do need to take some time to get your head together. Go lie on a beach. Get drunk on fruity rum cocktails. Let a pretty island girl fuck your brains out... When was the last time you went sailing, Marty?\"\n\n\"It's, uh... We sold the boat when the kids' weekends got too over-scheduled. Back when school and ballet and scouts and lacrosse were more important than a day out on the bay. It's been about... I dunno, eight years or so.\"\n\n\"You used to love sailing,\" she consoled gently.\n\n\"I did,\" I admitted. \"So did Gwen.\"\n\n\"Bullshit,\" Betsy called me out again. \"You always did have a blind-spot for her, Marty. Gwen only put up with your sailing weekends because you loved it. How do you think the kids got so damn over-scheduled?\" \n\nBetsy didn't start her own company, take it public, and become CEO by pulling her punches, and that one landed hard.\n\n\"...Yeah, fine.\" I muttered, collapsing back into the chair under the weight of a fresh wave of melancholy. I didn't like admitting that it was probably true. How long had Gwen and I been drifting apart? The kids had given us a common interest for so long, that by the time our youngest went off to college we discovered that we had nothing else in common anymore.\n\n\"How big was that boat?\" Betsy asked, trying a different tack to pull me out of my funk.\n\n\"Just a twenty-foot daysailer.\"\n\n\"Think you could handle a forty-foot sloop?\"\n\n\"A sloop is a pretty straight-forward configuration. I'm a bit rusty, but once I got my sea legs back... Yeah, I could handle it.\"\n\n\"Good. Frank and I keep a boat down in the Caribbean. It's dry-docked on St. Vincent. It's yours for as long as you want it.\"\n\n\"Betsy, I can't-\"\n\n\"You can, and you will.\"\n\n\"I used up all of my vacation time in lawyers offices and selling the house.\"\n\n\"This isn't a vacation. It's a sabbatical\u2014open-ended, for as long as you need.\"\n\n\"The company doesn't offer sabbaticals, Bets.\"\n\n\"It will by the time you get Steve up to speed so he can fill in for you. I want you on an eastbound plane by Friday.\"\n\n\"The Board's not going to like it.\"\n\n\"You let me worry about the Board.\"\n\n\"Betsy, I... I don't know what to say...\"\n\n\"Say 'Thank you' and get the hell out of my office,\" she smirked. \"We both have work to do.\"\n\nAnd that's how, four days later, I found myself at the Ottley Hall Marina outside of Kingstown, St. Vincent and the Grenadines, watching a travellift gently set Frank and Betsy's boat down into the water of the haulout slip. She was a Hylas 46 center-cockpit sloop; her name, stenciled in elegant script across the transom, was \"the Right Off\". That seemed more like Frank's sense of humour than Betsy's.\n\nThe series of connections that had brought me from San Francisco to Atlanta overnight and then to Barbados and finally into ET Joshua Airport had taken most of the day. The whole trip I'd been consumed by the idea that this was the first time I'd ever been on vacation by myself. Gwen wasn't in the seat beside me. The kids weren't there. There was no one to watch my bag when I ducked into the restroom. No one to remind me to buy a pack of gum to help with the pain in my ears. No one to wake up when the flight attendant came through with drinks.\n\nI was alone all day with 500 strangers.\n\nBy the time I hailed a cab, I just wanted to check into a hotel and collapse into bed. But I didn't have a hotel reservation; I was staying aboard the boat. The staff at the marina were friendly enough, but not in any particular hurry. \"Island Time\" I think they call it, and I'm pretty sure they do it just to irritate tourists. So it was almost another two hours before I was able to step aboard the Right Off to inspect her.\n\nShe was a beautiful boat, with two cabins, a well-appointed galley, and a salon all trimmed in wood and brass. Her sunken cockpit was wrapped in a cozy upholstered bench on three sides with room to seat six plus the pilot comfortably. The navigation equipment had been upgraded and was more advanced than anything I'd ever used. \n\nI ran point-by-point through the inspection checklist that Betsy had provided, much to the consternation of the Marina staff, before I concluded that the Right Off was ship-shape. I topped off the fuel and water tanks, finally signed off on the receipt, and maneuvered out of the marina on the diesel motor. \n\nThe sun had long since set and only the barest band of pink remained along the western horizon. I wasn't ready to test my skills as a navigator in unknown waters in the dark, so I dropped anchor for the night in the shallows just outside of the marina. There was a bit of housekeeping to do\u2014clothes and food to stow, the berth to make up, towels to hang, dinner to cook. \n\nOk, dinner was just a reheated can of soup, but I did avail myself of Frank and Betsy's liquor cabinet. As I sat down alone to eat, it occurred to me that I hadn't thought about Gwen once since I had arrived at the marina. It was probably the longest I had gone without her interrupting my thoughts since we'd sold the house\u2014the last time I'd seen her was at the closing. Maybe Betsy was right. Maybe an adventure was exactly what I needed.\n\nThe next morning I put the Right Off through her paces. I motored away from the marina until I found an uncrowded stretch of open water off the west coast of the island, then spent the day practicing my jibing and tacking until I was confident. \n\nConditions were gusty, with winds between ten and eighteen knots. She was tender in the higher gusts due to her shallow keel and high center of gravity. Ideally, the Hylas would have a crew of two. I would have loved to have had my son along on the foredeck, but with electric winches and all of the running rigging leading back to the cockpit, I was well able to handle her myself as long as I stayed alert.\n\nIt was the best day I'd had since Gwen announced she was leaving.\n\nThat evening I went ashore. I was tired but so invigorated from the day that I felt confined on the boat. Besides, I couldn't bring myself to eat reheated soup for dinner again. \n\nI wandered the streets of Kingstown alone and ate fresh fruit and hot samosas from street vendors. As the sun set and the shops closed down and the music turned up I drifted into the first bar I came across and mingled with other tourists. \n\nMaking small talk was never something that I excelled at, but I discovered that flirting was easier now than it had been in my twenties. Somewhere along the way, I'd learned to listen more, talk less, and to ask better questions. \n\nI bought drinks for a few women, but the bar crowd trended younger. Sure, they were all nice to look at, in their light summer dresses or sarongs and tank tops. I just couldn't seem to get past the idea that most of them were barely older than my daughter in college.\n\nUltimately, I left the bar alone after last call. I was still a little drunk when I got back to the boat, and a little hungover when I took her out again late the next morning. Heading to windward with the wind in my hair and the spray on my face cleared my head quickly and brought me back to life. \n\nI spent the next few days gaining confidence in my skill as a sailor, and teaching myself navigation. The GPS computer on the Right Off did most of the work for you, but I'm cautious by nature\u2014some might say overly\u2014so I gave myself a refresher course on the compass and sextant too. \n\nWeekend sailing with my family in San Francisco bay didn't require much skill in navigation. You were never out of sight of some famous landmark. But my goal was to take the Right Off over the horizon into the open ocean to Barbados. My first baby-step would be Bequia, the island immediately south of St. Vincent, only about six nautical miles away.\n\nWhen I felt confident enough in my ability, I made a plan to leave first thing the next morning. I went ashore to buy groceries and to file a float plan with the SVG Coast Guard office in Calliaqua\u2014overly cautious, remember? I had given myself a whole day for the short trip, but the petty officer on duty assured me that with the current winds the crossing to Bequia\u2014pronounced \"Beck-way,\" apparently\u2014would only take me a couple of hours. \n\nI got back to the Right Off a little after three-thirty in the afternoon and considered taking her out for a bit more practice when I decided... fuck it. As Tony Stark said \"Sometimes you gotta run before you can walk.\" \n\nGwen wouldn't have gotten that reference, but my kids would have, so that put a smile on my face.\n\nI hurried through my anchorage departure checklist, again wishing I had my son along to help, pointed the bow south, and sailed for deep water. The sun was low in the sky by the time I dropped anchor in Admiralty Bay about fifty yards off the shore of Port Elizabeth. The crossing had been thoroughly uneventful\u2014boring even\u2014and I was thrilled! \n\nI set about furling the sails, coiling the sheets, turning off the instruments, locking the wheel, rinsing the salt off the deck\u2014I had a whole arrival checklist of chores to do. The western sky was going from orange to purple and the moon was rising by the time I finished and poured myself a scotch to celebrate.\n\nThe silver moonlight played across the surface of the bay, darting in and out of the orange reflections from the shore and the dancing white anchor lights of the other boats nearby. Music from the beach bars drifted across the water. A girl in a white bikini strolled alone along the gloaming beach, and the palm trees swayed in the evening breeze.\n\nI sat on the gently rocking deck sipping Frank and Betsy's scotch and considered going ashore. But I decided to stay in tonight. Sailing the Right Off across open water\u2014even if Bequia did appear on the horizon before St. Vincent disappeared completely\u2014was a significant accomplishment for me, but probably trivial for any experienced Caribbean sailor. I chose to savor my minor triumph in private.\n\nAs I enjoyed the stars and the music and the scotch, my eye was drawn back ashore to the girl on the beach. Her swimsuit shone in the deep shadows of the palm trees and... Wait, was she?... She was!... The girl on the beach had stripped off her top, and was stepping out of her bikini bottoms.\n\nShe left her swimsuit by a tree, jogged naked across the narrow beach, and waded into the surf. I couldn't make out details clearly, but I could see that she was tall and shapely. Her legs and hips slowly disappeared beneath the water, and she swung her arms out and plunged into an oncoming wave. \n\nI glanced around at the other boats anchored nearby but no one else seemed to be above deck. Did the girl in the water know that she was being watched? A moment later, she broke the surface and threw her head back, her dark hair flinging water in a perfect Fibonacci spiral, her back arched and her breasts tight.\n\nShe sank back to her shoulders and swam forward a couple of strokes before she bent forward to dive again. Her shoulders arched forward and the sea water glistened in the moonlight as it flowed over her back, over the curve of her ass, over the backs of her thighs and her calves and then her feet as she disappeared beneath the waves.\n\nI didn't realize I was holding my breath as I waited for her return, but I exhaled as she emerged again some thirty or so yards from me. There was a pair of binoculars on board, but it would have been unseemly to get up and fetch them. I was happy to watch this mermaid from a distance and let her enjoy her imagined privacy.\n\nShe rolled over on her back, breasts exposed to the starry night sky, and stroked backwards, strong arms pulling her through the water. I could only imagine the muscles in her chest flexing and stretching and the way her breasts would move with each stroke. Or how her buttocks would tighten below the water with each kick. Or the way her hair would flow like ink behind her.\n\nI watched in silence as the naked mermaid swam and frolicked in the moonlit surf. She seemed to sparkle. Tantalizing bits of her kept appearing and disappearing beneath the surface, and though I was too far away to really see anything through the darkness, my imagination filled in the details. \n\nShe was erotically beautiful from a distance. More so than any stripper from three feet away. A stripper's dance is planned and rehearsed for an audience; the girl in the water was spontaneous and impulsive and unconcerned with anyone's pleasure but her own. Her care-free attitude was seductive.\n\nI watched her for about twenty minutes before she waded back to the shallows. She looked carefully up and down the beach before darting to the tree where she left her bikini. I imagined the way her breasts must bounce as she ran. She pulled her swimsuit on quickly, and then strolled away into the darkness.\n\nI finished my scotch and went below deck. It had been a good day.\n\nThe next morning I decided to give myself a day in port to see Bequia. I went ashore, found some breakfast at a beach-side hotel, and strolled up the hill into Port Elizabeth. It seemed a quiet town, not as busy and bustling as Kingstown. The locals were all very friendly and vendors and shopkeepers were happy to chat. Apparently it would have been busier if a cruise ship had been in port, but there was none scheduled for today.\n\nI bought a few sundries, a new shirt, a hat to wear ashore. As I wandered aimlessly among the shops, I almost bypassed a local jeweler when I remembered my daughter's approaching birthday. So I walked in to look around. There were a couple of other people browsing, and the shopkeeper was busy with one of them. \n\nMuch of the work had some sort of maritime motif. Shells and seaglass featured prominently. The workshop set up visibly in the back confirmed that all of the gold and silversmithing was done on site.\n\nA gentle tap on my shoulder accompanied a polite \"Pardon me,\" and I turned to meet the eyes of a woman close to my own age, give or take a few years. She was tall, easily as tall as me, and pretty in a way that seemed effortless. Her face was framed in a tumble of raven-black hair that fell just past her shoulders. Dark eyes that shone with youthful vitality highlighted soft features that I guessed to be Italian, or maybe Greek. Her demure smile was disarmingly alluring.\n\n\"Can you help me?\" she asked bashfully. \"I was trying on this necklace, and I'm afraid I can't seem to work the clasp to take it off. It's very small.\"\n\nAround her neck was a complex arrangement of silver petals woven together with gossamer thin chain. She didn't wait for a response, and turned her back to me, pulling her hair to one side holding it out of the way, bowing her head and exposing the nape of her elegant neck.\n\n\"I'd be happy to.\" I answered and stepped behind her taking the thin chain between my fingers.\n\nShe was wearing a white sundress suspended from her shoulders by two thin cords. The soft fabric was the perfect offset for her golden tan. Silver bracelets adorned both wrists, silver rings her fingers, and silver earrings dangled from her ears. The sheen of the metal provided an elegant contrast against her sun-darkened skin.\n\n\"You're right about this clasp. It is tiny.\" I fumbled with it between my fingers and my hands brushed against her warm, bare skin.\n\n\"Take your time,\" she replied, shifting her posture a bit, leaning forward slightly, pressing her backside against my groin.\n\nWas she flirting with me? I think she was. I grinned to myself at the realization, and I took my time, letting my hands rest between her shoulder blades.\n\nAt last I managed to get a thumbnail beneath the delicate mechanism of the clasp. As I spread the necklace open I allowed the edges of my hands to drift lightly across her bare shoulders. \n\n\"There we go,\" I announced.\n\nShe straightened, letting her loose hair fall back into place, and took the ends of the chain from me, her fingers brushing across the backs of my hands as she did so. From over her shoulder I could see down the front of her loose, flowing dress and caught just the briefest glimpse of the tan lines on the cleavage of her unconstrained breasts before she turned and stepped back to face me.\n\n\"Thank you so much, Mr...?\"\n\n\"Marty,\" I answered, offering my hand. \"How do you do?\"\n\n\"Marty,\" she concluded, shaking my hand. \"I'm Karen. It's always a pleasure to meet a gentleman. How long have you been on Bequia?\"\n\n\"I just arrived yesterday, and came ashore this morning. You?\"\n\n\"I've been here for two weeks. I'm afraid I'm leaving tomorrow,\" she sighed, \"but I'll be back. This is my third visit.\"\n\n\"Then I'll bet you can recommend a good restaurant.\"\n\n\"Oh, Jack's Beach Bar, no question. They have a magnificent view. You'll be tempted to order seafood, but you have to try the fried chicken.\"\n\n\"That sounds perfect.\" My heart was racing. I was about to do something I hadn't done for decades. \"...Do you have plans for lunch, Karen?\"\n\n\"Are you asking me out, Marty?\" her eyes flashed and she smiled.\n\n\"I am,\" I answered, returning the smile and doing my best to keep the nervous shake out of my voice.\n\n\"Well, I'd be delighted,\" she accepted. \"It's a bit early, but if we take the scenic route, it should be lunch time when we get there.\"\n\nShe bought the necklace, despite the tiny clasp, and wore it out of the store. Karen lead me on a meandering path through town and pointed out her favorite sights. We retreaded much of the ground I'd already covered, but I didn't mind. Karen was an enchanting companion and a knowledgeable guide.",
        "From the quiet ferry wharf, we strolled to the end of the shady Belmont Walk and then followed a path around a rocky point to Princess Margaret Beach and the restaurant. The hostess knew Karen by name; she was clearly a regular.\n\n\"So,\" I asked when we had placed our orders, \"What do you do when you're not charming Caribbean tourists?\"\n\nShe smiled at the compliment and her eyes twinkled. \"I'm an attorney back in New England.\"\n\nA confident answer that offered two follow-ups, 'what kind of attorney?' or 'where in New England?'. I went with the former. \n\n\"Oh, really? What kind of attorney?\"\n\n\"Oh, the dullest kind\u2014Corporate. Approve this disclaimer, review that contract, prepare another statement. It's a tedious way to make a living, but it pays for me to come here often enough to make it worthwhile. How about you, Marty? What do you do when you're not sailing between islands?\"\n\n\"I'm a forensic accountant,\" I replied, hoping it wouldn't be the conversation killer it usually was. \n\n\"Oh, that must be fascinating work!\"\n\n\"Uh, well...\" I was a bit taken aback. \"Nobody's ever called it 'fascinating' before. Most people think I do taxes for CSIs.\" She laughed at that and put her hand on my arm. Her laugh was musical.\n\n\"Well, I've worked enough mergers to know the importance of good forensic accountancy. Do you do criminal investigations or corporate audits?\"\n\n\"Civil investigations are our bread and butter, but we have contracts with several law enforcement agencies as well.\"\n\n\"I'm sure your life is just as exciting as Kat Carter's.\" She was teasing me with that, but I didn't mind at all.\n\n\"Right, Kat Carter, from the books by, um...\" I'd heard of the character before, but never read any of the novels. I was racking my brain trying to come up with the name of the author, or even the series. \"Is it Karen Kross? Wait... You're not-\" \n\n\"No, Colleen Cross,\" she corrected, laughing. \"But I'm flattered you think I could ever be a writer. I'm not at all creative, but I do love other people's fantasies.\"\n\n\"So you're into high-finance crime novels, then?\"\n\n\"Among other genres,\" she smiled, \"spy thrillers, murder mysteries,\" and with a twinkle in her eye she added \"erotica...\"\n\n\"Oh! If you had waited until I had taken a sip of water, you could have seen me choke on that last one.\"\n\n\"Darn. I never was very good at timing.\"\n\nThe conversation came easily. Our food arrived and she was right about the chicken\u2014best I'd ever had. Maybe it was the company. We talked about New England and California, my kids, her volunteer work, books, movies, politics. We lingered over coffee until early in the afternoon. \n\n\"Thank you for a lovely lunch, Marty,\" Karen began after I had declined her offer to split the check. \"But I'm afraid I have to be going now.\"\n\n\"Is there any chance I can see you again for dinner?\" I asked, standing and offering her my hand.\n\n\"I'm sorry,\" she replied, accepting. \"But I'm not traveling alone. And since this is our last night on the island, I'm afraid we have plans tonight that I really can't break.\"\n\n\"Well... It was a pleasure meeting you, Karen. It's been the highlight of my trip.\"\n\n\"I know you were hoping for more,\" she leaned into me and kissed my cheek. \"It would have been nice. But like I said... I never was very good at timing.\"\n\nI watched her stroll away back up the path towards the Belmont Walk. More specifically I watched the way her hips swayed in the white cotton sundress. When she'd rounded a bend and was out of sight, I turned the other direction to walk down the beach.\n\nWell, damn.\n\nI tried to convince myself that Karen was just good practice, that she wasn't special, that it would work out better with the next woman... that I wasn't infatuated with her. I tried.\n\nThe afternoon was spent checking out a sea cave on the beach and an old fort on a hill\u2014both sights Karen recommended. I went back to Jack's for dinner and lied to myself about why. As the sun set and the dinner crowd became the bar crowd, I decided I wasn't in the mood to socialize anymore. So I went back to the Right Off with a plan to plot a course to Mustique, about thirteen nautical miles away, and prepare for a morning departure.\n\nBut first I thought I'd enjoy another glass of scotch and the moonlight in the pleasant evening air. I sat on the deck listening to the dissonant mix of music drifting across the bay, dangled my toes in the water and tried not to feel sorry for myself. As I watched the light show of reflections play across the surface of the water, movement on the beach caught my eye.\n\nIt was the girl in the white bikini, out again for another moonlight stroll. I'm not proud to admit that I had hung out up on deck in the hopes that she would be back.\n\nJust like the night before, she disrobed hidden in the shadows among the palm trees, barely visible. As the naked girl moved cautiously into the moonlight she checked the beach in both directions before quickly crossing the sand into the surf. But as she dashed across the open beach, I caught the unmistakable metallic glint of silver at her wrists and ankles and around her neck.\n\nCould it be? Karen? I sat in awe for moment, amazed at the very idea that the mermaid frolicking in the surf only thirty yards away wasn't a carefree twenty-something dilettante at all, but a woman of my own generation, with all of the responsibilities and hang-ups that come with age.\n\nMy heart raced as I watched her in the water. I desperately wanted her to draw close enough for me to recognize her, but I was terrified that she might spot me watching and recognize me. Part of me wanted to run back into the cabin, but a stronger part couldn't tear myself away from the erotic spectacle. Sitting on the deck ogling her, I felt as naked and exposed as she was.\n\nShe was drawing closer, venturing further from shore tonight, risking the presence of the boats anchored in deeper water. Avoiding the larger yachts with their underwater accent lights, she dove beneath the surface. I glanced at the nearby boats to see if anyone else was watching her. There were more people out tonight, and several boats were brightly illuminated. But no one seemed to have taken notice of the woman skinny-dipping nearby.\n\nShe emerged again scarcely ten yards away from where I sat, and even in the moonlight, with her sable hair plastered to her head, her profile was unmistakable.\n\n\"Karen?\" I called out softly, before I could stop myself.\n\nI'd startled her and her eyes went wide. She let herself sink to her chin and looked about frantically before spotting me. It took just a moment to recognize me in the moonlight and she relaxed visibly, treading water until her bare shoulders emerged and her chest hid just under the dark surface.\n\n\"Marty?\" she called back, swimming towards me.\n\n\"Yeah, hi. So are these the big plans you had for tonight?\" I asked, hoping I didn't sound bitter or judgmental.\n\n\"No,\" she replied, smiling wistfully, \"this is just... one last opportunity. How was your afternoon?\"\n\n\"It was good,\" I answered, scooting forward on the deck as she treaded water a few feet away. \"I walked out to that cave you mentioned, and I got up to Fort Hamilton\u2014enjoyed them both.\"\n\n\"Seriously? You enjoyed Fort Hamilton?\"\n\n\"Well... I'm a dad. I spent so many years telling my kids that boring, historic sites like that were fun, that I'd be a hypocrite if I didn't say I enjoyed it.\"\n\n\"Ahh... Have you seen anything else you enjoyed?\" \n\nWith a kick, she bobbed up out of the water until her bare breasts were exposed for a fleeting moment before she sank back down with a wicked grin.\n\n\"I have now! I didn't realize nude bathing was legal on Bequia.\"\n\n\"Oh, it's not! Want to join me?\" she invited conspiratorially, her eyes flashing with excitement. \"The water's perfect.\"\n\nI looked about at the other boats. The anchorage was crowded, so the closest was only about twenty yards away. My own deck lights were dark, and no one seemed to be paying us any attention. So I hastily pulled off my clothes and slipped naked off the deck into the warm Caribbean water.\n\n\"Nice, isn't it?\" Karen asked as I swam up to her. Without the drag of a swimsuit, the water flowing around my groin was a new and stimulating experience.\n\nKaren and I dove and swam and splashed around the boat, laughing like kids. We were less cautious now because we had the hull to hide us, at least partially. Unfortunately, I hadn't been swimming since the kids had taken lessons at the local YWCA pool. So after about fifteen minutes, I found myself clinging to the transom ladder to catch my breath.\n\n\"Ok...\" I panted, \"I need a break... Would you like to come aboard and sit for a few minutes?\"\n\n\"I'd like that,\" Karen responded, treading water a few feet away from me.\n\nI climbed out cautiously and looked around at the other boats to make sure no one was watching before I darted up to the locker by the cockpit, pulled out a towel, and wrapped it around my waist. The night breeze was cool on my wet skin, and despite my fatigue I felt exhilarated as I turned back aft to see Karen coming aboard.\n\nShe climbed the transom ladder, one slow step at a time, as the seawater coursed down her bare skin in rivulets that snaked along her contours and trickled off into the bay. In the moonlight she glistened. With her feet at last on the deck, she reached up to wring the water from her dark hair, her hip cocked to one side. With her arms raised, her breasts lifted and tightened against her chest. She was a goddess of the sea\u2014the kind who lure sailors to a doom they are all too happy to embrace.\n\nHer body curved in all the right ways in all the right places. Her breasts fell in gentle handfuls and in profile the shadow of pert little nipples stood proud against the night sky. A silver chain attached to her navel piercing and draped around the soft sweep of her waist. The shape of her hips curved in a way that begged to be grabbed from behind and her long legs were toned from swimming.\n\nNot the over-tight body of girl with nothing else to offer, this was a woman's body carried with confidence and wiles earned over years of experience.\n\nI took a moment too long to admire her before I remembered my manners.\n\n\"Welcome Aboard! Can I get you a towel?\"\n\n\"Why would I want a towel?\" she asked coyly, strolling along the deck, her hips swaying provocatively as the boat rocked gently beneath her feet.\n\nI shook my head and chuckled. \"You know Karen, you have an exhibitionist streak that is very sexy.\"\n\n\"I know,\" she agreed. \"What else is sexy about me?\" she purred, taking my hand as I steadied her step down from the deck into the recessed cockpit.\n\n\"That's a long list. It'll take some time to get through it all. Would you like a drink first? The bar is well stocked.\"\n\n\"Hmm...\" she considered as she sat nude on the starboard side of the cockpit's cushioned bench, crossing her legs and spreading her arms across the low back. \"I never cared for alcohol,\" she responded, wrinkling her nose in the most adorable way. \"What else have you got?\"\n\n\"Uh... Pineapple juice, a couple cans of Coke, a jug of iced tea. I could make some coffee.\"\n\n\"Iced tea would be lovely.\"\n\n\"I'll be right back.\"\n\n\"I'll be right here.\"\n\nI stepped down into the galley and filled two glasses with ice wondering just how badly I'd have to screw up to blow this opportunity. I figured I'd never hear the end of it from Betsy if I didn't at least try to take a shot. So after I filled the glasses with tea, I tossed my own towel aside and boldly walked back up to the cockpit fully nude.\n\nKaren sat in the moonlight, draped in silver jewelry around her neck, wrists, fingers, waist, and ankles. Silver dripped from her ears and sparkled in her pierced navel. The effect was magical. She was like something out of an Edgar Rice Burroughs novel\u2014an earth-bound Deja Thoris bathed in cool silver instead of fiery gold.\n\n\"Here you are,\" I offered a glass of iced tea and sat on the bench opposite her, and in the narrow walkway between us our calves brushed against each other.\n\n\"Why thank you,\" she accepted, looking me up and down. \"Did you change just for me, Marty?\"\n\n\"I did. I wouldn't want a guest to be uncomfortable.\" I was beginning to swell, not yet erect, but enough that I'm sure my interest was obvious. \"Now, I think I was about to tell you what else I find sexy about you.\"\n\n\"I was hoping you would.\"\n\n\"Would it be too clich\u00e9 to start with your breasts?\"\n\n\"No, they're too small,\" she demurred. \n\n\"Not at all. They're just the right size and shape\u2014prominent without being flamboyant. Those perky pink nipples fit them just right, too. And I love that scattering of freckles above your tan line. I bet they all fade away during the winter, don't they?\"\n\n\"They do,\" she admitted.\n\n\"No wonder you like the islands. I'm lucky you had two weeks of sun before I got here.\"\n\n\"Hmm, lucky you,\" she smiled \"What else?\"\n\n\"I love your jewelry, how you keep it on to swim. Do you sleep in it too?\"\n\n\"It's too much trouble to keep taking it all off and putting it back on.\"\n\n\"I'm sure,\" I agreed. \"Silver stands out against your tan so well. It makes your skin seem darker, more exotic. I can imagine you asleep on crisp, white linen, silver jewelry dripping off your tan skin. Very sexy.\"\n\n\"You think I sleep naked?\"\n\n\"I hope so. I'd be a little disappointed if you didn't.\"\n\n\"Well, I won't disappoint you then.\"\n\n\"Good. Oh... I just noticed that little tattoo on your hip.\"\n\n\"You want a closer look?\"\n\n\"May I?\"\n\nShe shifted on the cushion to bring her left hip closer to me, and I put my hand on her thigh and brushed away a few stray droplets of sea water with my thumb. Stenciled there, just below her hip bone, was an elegant flower and vine motif done in a classic, old-school style. The faded edges suggested it had been there for many years.\n\n\"Simple, elegant, and discreet... Very sexy.\"\n\nShe laughed at that. \"But you just noticed it. Are you done with your list already?\"\n\n\"Not remotely. I also like the shape of your ass.\"\n\n\"Now you're just making things up,\" she objected. \"My ass is flat.\"\n\n\"Your mirror might be flat. Your ass isn't. You haven't seen it when you swim. When you dive down and you bend at the waist and your backside breaches the water in a graceful curve with those long, long legs of yours trailing behind.\" \n\nShe rolled her eyes. \"A trick of the moonlight.\"\n\n\"Mmm... Could be. Why don't you stand up and let me have a better look?\"\n\nShe gave me a cute little smirk, but without saying a word, she set down her glass and stood and turned her back to me with her hands on her hips. Of course her ass wasn't super-model perfect\u2014at our age, no one's is, not even super-models. But it certainly wasn't flat and I enjoyed the view for a few seconds longer than was strictly necessary.\n\n\"Sorry Counselor, there's nothing flat about it. The verdict stands,\" I told her. \"That is a sexy backside.\"\n\n\"Fine,\" she conceded, only instead of returning to the opposite bench, she sat down next to me with her feet bent up behind her and put her hand on my bare thigh. \"What else?\"\n\n\"Well, you seem to have this self-deprecating modesty that is very cute.\"\n\n\"Cute?\" she asked, leaning into me. \"But not sexy?\"\n\n\"Oh, on you 'cute' is sexy... and pretty... and... several other synonyms I can't... seem to think of... right now.\"\n\nShe was looking up at me and the moonlight was reflected in her bright brown eyes making them shine with the same desire that I was feeling. I was more than just swelling now. I had been building on a plan to tell her how sexy her eyes were, and then her lips... fuck it.\n\nI turned towards her and took her head in my hand and I kissed her. And Karen kissed me back and our lips parted and my tongue found hers and I was glad I'd taken the chance.\n\nShe tasted of salt brine and smelled like an ocean breeze. My fingers tangled in her damp hair. Against my naked flesh, her skin was hot and her jewelry was cool, and my senses we're overwhelmed by her.\n\nOur kiss went on and our hands explored each other and I tried not to think about Gwen but it was impossible. The breasts that filled my hands were not my ex-wife's. Karen's legs were longer and the patch of fluff I stroked between them was a different texture and a different trim. The hands first on my ass and then on my balls didn't squeeze me the same, and the skin under my lips didn't taste the same.\n\nEvery stroke and caress and lick and gaze was the same but oh so delightfully new and different. We shifted on the bench changing posture and position, over and over, exposing new and tantalizing flesh to roam. I could have spent hours exploring Karen's body and being explored. \n\nAll at once, her hands found my shoulders and she pushed me back up and straddled my lap on her knees in a sitting lotus position. She held my face in her hands as I craned my neck back to keep my mouth against hers. My hands wandered down her ribs to her waist and pulled her into me, my erection pressed between us.\n\nHer lips broke from mine and she looked down at me resplendent with the moonlight behind her.\n\n\"Do you want me, Marty?\" she asked in a husky voice, thick with desire.\n\n\"I do. I need you,\" I whispered in the darkness.\n\nI looked around at the other boats anchored nearby. There were definitely people out on deck, and not too far from us. We were somewhat concealed in the sunken cockpit\u2014up on her knees, Karen was certainly more exposed than I was\u2014so I tried to put the other boats out of my mind.\n\nI just couldn't bring myself to ignore every concern though.\n\n\"I have condoms inside,\" I offered.\n\n\"I don't think we need one. I feel safe with you. Do you feel safe with me?\"\n\n\"Karen, you may be the most daring and dangerous woman I've ever met. I feel alive with you.\" \n\nAnd I pulled her face back down to mine and I pressed my mouth to hers as she adjusted my erection until my cockhead was nestled between her blossoming folds. I pushed my hips up and she forced hers down and she moaned into my mouth as my fingers dug into her ass.\n\n\"Oh God, Marty,\" she moaned, rolling her head back. \"You have no idea how much I needed this.\"\n\nI kissed her jaw and her throat and traced the line of her collarbone with my tongue and muttered \"I think I have some idea.\" Her soft breasts pressed against my shoulders and I felt every whisker of stubble on my cheeks brush across the galaxy of freckles on her chest.\n\nThe cool of silver bracelets against my shoulders sent a shiver down my spine. She rode my cock slowly and deliberately, pacing each thrust to the rocking of the boat in the gentle surf. Her every gasp and moan was punctuated with the jingling of her jewelry.\n\n\"Mmmm... Ohhh... Mmm-Marty... Yesss...\" she murmured, and I caught her glancing over my shoulder for any sign that she'd been heard.\n\n\"You don't want to be seen?\" I gasped pressing myself up and into her with a bit more vigor.\n\n\"I don't mind being seen... Ahhh... I don't want to be... Mmmph... caught... I might have gotten a ticket... Uhnnn... for skinny dipping... last year.\" The mock-innocence in her smile was unmistakable and adorable. \n\n\"Lady cop? Obviously jealous?\"\n\n\"Obviously,\" she grinned. Karen shifted her posture to lean forward into me and her hips worked frantically against my groin. I moved my hands up to her shoulders to pull myself tighter into her and she started to groan, then bit her lip to restrain herself.\n\nBetween the risk of being caught at any moment, the look of urgent desire on Karen's face, and the way she was desperately fucking me, I hadn't been so stimulated in years. My cock ached with need inside of her, and despite my best efforts at restraint, I felt myself approaching the brink. \n\nSuddenly a bell rang out somewhere off the bow. Karen pulled herself tight against my chest and we both froze in the darkness, panting quietly. We both looked anxiously, but saw only a mooring buoy, bobbing in the wake of a passing ferry. ",
        "With a sigh of relief we each laughed, but when the swell reached the Right Off and rocked the boat to starboard, I used the momentum to hoist Karen and myself up off the bench. She screamed in surprise, and grabbed at my shoulders as I set her down reclining on the opposite side of the cockpit with her shoulders low on the backrest and her ass barely on the bench.\n\n\"What have you got in mind?\" she asked.\n\nI just grinned slyly and in the cramped cockpit, maneuvered myself down to kneel between her open thighs. \n\n\"Oh God...\" she moaned as I pressed my lips to her swollen labia and she pushed her fingers through my hair. My tongue searched deep into her body and found the blended salty flavors of the ocean brine, her slick nectar, and my own recent presence. Withdrawing slowly, I found her engorged clitoris waiting anxiously and stroked my tongue against it gently.\n\nWithout moving my mouth off of her succulent body, I looked up to see Karen squirming on the seat, eyes closed and shoulders hunched forward as she pulled my head tighter against her open center. Her bottom lip was clenched tightly between her teeth, but she couldn't help but whimper softly as I continued to devour her most sensitive flesh.\n\nI reached up with one hand to clutch a breast and roll her perky nipple between my fingers. Below I continued to lick her clit and pushed two fingers between her moist folds, hoping to find another bundle of nerves to set aflame.\n\nI must have found it.\n\nA moment later her back arched up off the seat, and she threw her head back with a gasp. The fingers of her free hand dug deep into the bench cushion. As Karen's hips bucked against my fingers I had to wrap an arm under her waist to keep my tongue pressed against her. She managed to restrain herself from crying out, but the ringing of her jingling jewelry couldn't be silenced.\n\nAt last she collapsed back with a satiated sigh and pushed me away from her trembling thighs. I climbed up onto the seat next to her and she gave me a listless post-coital grin as I bent down to kiss her.\n\n\"That looked like it was more fun than skinny-dipping,\" I teased.\n\n\"Uh-huh,\" she responded, regaining her composure. \"But now I want you back inside me.\" Shimmering in the moonlight, she stood and leaned into the boom, spreading her legs and pushing her ass towards me. \n\nI stood behind her and found my way into her honeyed depths, making her stifle a groan, before taking her hips in my hands and letting my desire propel me forward. She clung to the boom and it creaked in its lock as our weight was thrust against it over and over.\n\nHer bouncing backside held my attention as my hands crept up her front to feel the sway of her breasts. But after a moment I remembered where I was, glanced up at the other boats, and spotted a man sitting out on a catamaran about fifty yards off our port bow. He was smoking a cigar and when he realized I had seen him, he raised his glass in a salute.\n\nI'm sure I flushed crimson. I don't know how I managed to keep my erection. Maybe a bit of Karen's exhibitionis streak had rubbed off on me.\n\n\"We have an audience,\" I whispered in Karen's ear, leaning forward into her. \"The fat guy on the catamaran at about two-o'clock.\"\n\nKaren didn't look up. In fact her head hung forward and her raven hair fell across her face and whatever restraint she had been exercising gave way. She moaned audibly and I could feel her shudder in my arms.\n\n\"Don't... fucking... sssstop!\" she hissed, and I didn't. If being watched excited her, then watching her excited me. I took her now with renewed vigor, knowing my own orgasm was approaching quickly and wondering if I could manage to hold it back.\n\nWith every thrust she let out a soft cry, and her jewelry jingled, and I'm pretty sure the waves lapping against the hull were from us rocking the boat and not the surf. I looked back to the fat man on the catamaran and scanned the other boats and sure enough we had attracted more attention. I was thankful for the darkness and the shadows thrown by the moonlight. But more than that I felt incredibly alive and virile in a way I hadn't in years.\n\nAnd then before I realized it, I was overwhelmed by an involuntary wave of tension and felt my entire body go taut. I pulled her tight against my hips and buried myself deeply within her.\n\n\"Oh God, Karen!\"\n\n\"Yes! Yesss... God, Yes!\"\n\nThe sensation was palpable and disorienting, like all the anger and loneliness and raw emotions I had clamped down for so long just effervesced away in a fog. And for a long moment there was only me and Karen and that frenzied exaltation of release. \n\nI slipped from Karen and fell backwards on the cushions and she collapsed back beside me and with her head on my shoulder and a hand on my chest. We were both panting and sweating in the cool night air. Somewhere in the distance was a thin scatter of applause. \n\n\"Oh, that was nice...\" Karen muttered when she'd caught her breath.\n\n\"It was, wasn't it? I, uh... I don't suppose you can stay a little while longer?\"\n\n\"Mmm... Maybe a little while longer. I'll need another drink though.\"\n\nKaren and I left the moonlight and the stars and the voyeurous boaters behind and climbed down into the boat. We spent the night together chatting and making love and eventually we fell asleep clinging to each other. \n\nI was awoken by a loud splash from outside and found myself alone in bed. Grabbing a towel and cinching it around my waist, I climbed the ladder to the deck in time to see Karen swimming back to shore in the grey pre-dawn light. I watched her dash across the sand to the palm trees and don her white bikini again.\n\nShe looked out at the bay and I waved and she waved back and then strolled away down the beach and out of sight.\n\nI was up and awake so I went back inside to put on some coffee. Lying on the salon table I found a note written in a feminine hand.\n\n\"Marty, Thank you for an unforgettable evening. I'll be back at Jack's for lunch next year on the same day, at the same time. If you're there too, I promise I won't have any other plans for the night. - Karen\"\n\nI took my coffee up on deck to watch the sun rise. Betsy was right, dammit. I felt a like a new man. Or more precisely, I felt like the man I had been once before. I could have gone into the office that morning with renewed confidence and drive. But I had the Right Off for as long as I wanted, and Mustique was calling to me and Barbados after that. \n\nBetsy didn't have to know she was right just yet."
    ],
    "authorname": "LoquiSordidaAdMe",
    "tags": [
        "sailboat",
        "skinny-dipping",
        "public sex",
        "cunnilingus",
        "lotus",
        "standing from behind",
        "male pov",
        "caribbean",
        "jewelry",
        "romance"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/romancing-the-bequia-mermaid"
}