{
    "title": "Some Extra Money",
    "pages": [
        "(Author's notes: This is a work of fiction. In this fantasy, nobody is worried about STDs. In real life, all non-monogamous sex should be practiced using accepted safe-sex precautions.\n\nThanks to Sidney43 for editing. His insight and effort made this a better story.\n\nAll characters involved in sexual activity are at least 18 years old.)\n\n: : : : :\n\n\"What do you mean, 'You came into some extra money,' Kristin?\" I asked. I emphasized her name to let her know I was determined to find out.\n\n\"Just what I said, I came into some extra money, Amber,\" she replied, emphasizing my name to tell me to back off. \n\nThis could have been a simple conversation. The fact that she was being evasive told me far more than her words did.\n\nIt began when I noticed new tires on her car. We're both Juniors in college, and money is tight. I wished I could afford new tires. I also noticed several new pairs of shoes, some new shorts, and several new tops, all within the past week. Her new clothes were in the same style she always wears, so I doubt if many people noticed them, but I did. We're BFFs, and I knew her wardrobe inside out. \n\nI guess technically she wasn't lying, but she was being vague, and that was interesting -- normally she told me everything. TMI was not a concept she understood. I knew all about her finances, how she and her boyfriend Jeremy practice birth control, what their favorite positions are (his is different from hers), what they do when she's on her period, everything.\n\n\"So what is this-\"\n\n\"Did you hear that Jessica and Jordan-\"\n\n\"Don't change the subject! What is this 'extra money,' girl?\"\n\nShe sighed, and finally said something direct. \"I don't want to talk about it.\"\n\n\"What, did you do something illegal?\"\n\n\"Um, no. Well, maybe...\"\n\n\"What? Give it up, now you gotta tell me. I'm your best friend -- spill!\"\n\n\"No way. Not gonna happen.\" She seemed pretty determined.\n\nI just sat there. Didn't say a word. Patience personified. Stone silence. \n\nIt seemed like it took her forever to cave, although it was probably less than a minute. \"Okay, okay, but you have to promise not to tell anyone.\"\n\nI nodded. I had an overwhelming urge to bombard her with questions, but one thing I've learned about her is, you can't speed her up, but almost anything will slow her down -- so frustrating. I managed -- barely -- to keep quiet.\n\n\"Did you see that ad in the student center two weeks ago?\"\n\n\"What ad?\"\n\n\"On the bulletin board. It was only up for a few hours. I'm sure it violated all kinds of university policies.\"\n\n\"I guess I didn't see it.\" \n\n\"It said, 'Models wanted. Attractive, uninhibited, adventurous. No experience needed.'\"\n\nI said, \"No wonder the university took it down -- it sounds like someone soliciting girls to do porn.\"\n\nShe didn't respond. She avoided eye contact.\n\nEven though I knew better, I exploded -- I had so many questions I was interrupting myself. \"It was for porn, wasn't i- oh my god, you answered it, didn't y- did you talk to- what did they want you to- how much money did they offer?\"\n\nI regained control of myself. She didn't say anything -- not a word. In the silence, I connected the dots. \"Wait, you 'came into some extra money' -- you freaking did it!\"\n\nI caught myself, shut up, and waited. And waited. Ol' stone face. Sound of crickets.\n\nShe finally relaxed into a shy grin and nodded. It took all the self-control I had, but I kept quiet. She broke the silence, \"I've been dying to tell you, but you have to double-dog swear to tell no one, I mean no one. If word gets out and I become known as 'porn girl' or 'video girl,' I'll have to transfer to a different school -- in a different state.\"\n\nI added, \"I'm sure you'd also rather that Jeremy didn't find out.\"\n\nShe laughed. \"Not a problem.\"\n\nI was horrified. \"He found out? Aw, shit!\"\n\n\"I told him.\"\n\nI couldn't believe it. \"You what? Are you out of your freaking mind?\"\n\n\"First of all, he's a guy -- he looks at those sites. If he stumbled onto my video and didn't already know about it, he'd explode.\"\n\n\"You could tell him you did it before you met him.\"\n\n\"How would I explain my tat?\"\n\n\"Oh yeah, that,\" I nodded. He paid for a tattoo for her birthday -- an eagle in flight, its talons gripping her nipple. Not what I would have chosen...\n\n\"More important, before I went and exchanged body fluids with a stranger, I wanted to be sure he was legit -- that might be the wrong word... um, I had Jeremy check out the site for me. He told me the guy has over twenty videos of the kind of scene he was asking me to do. Whether that's legit or not, at least he was who he said he was.\"\n\nEvery question I asked, every answer she gave, took me closer to out-of-control hot. I tried to make my voice completely neutral. \"So, what kind of scenes?\"\n\nShe grinned. \"I know that tone of voice,\" she said, \"and that facial expression. Don't you mean,\" she squinted at me, \"was he cute? How big was his cock? How much did he pay?\"\n\nDammit, she was right. Trying to sound innocent, I asked, \"What do you mean?\" \n\nShe laughed and said, \"You want to do it too. You've already decided, I can tell. Unless I tell you that it was hell on earth, and he was an aids-infected ogre with Ebola dandruff, port-a-potty breath and toxic-waste sweat -- which you can already tell he wasn't -- you're all in. What you really mean is, 'How do I get in touch with him?'\" \n\nI started to protest, but I realized that all that would do is make it take longer to find out.\n\n\"Busted,\" I sighed. \n\nShe searched in her purse for a minute, found something, and said, \"Here's his card. Look, I think you'll end up doing it, so I'm not going to tell you anything else. He said it was important not to know what to expect, that the video would turn out better if I was truly surprised each step of the way. Now that I did it, he was right, it was better not to know, because I never had to pretend to be surprised. \n\n\"I will tell you this: his name is Ryan, and yes, he is cute. His cock is quite nice, not too large, but definitely not too small. Without going into any details, the shoot was fun. The money is nice, no doubt, but it's almost a bonus -- I had a blast. I'm sure you will too.\"\n\n: : : : :\n\nI nearly creamed my panties as we talked. I don't understand what it is I find so thrilling, so I can't explain it very well, but it centers on being in a situation where someone else is in complete control. For some reason I'm not able to say no; it's an unexplained part of the scenario -- a given. He is free to do anything he wants, that's anything, and I allow it whether I want to do it or not. \n\nTo him it's completely impersonal. I'm just a body, tits and ass, pussy and mouth, there for his pleasure. He is not concerned with my pleasure or comfort. \n\nTo me it's extremely personal, to say the least. I fear what I expect he will have me do. But that is overridden by a deep, intense glow in my groin. The thought of being pushed to do extreme new things gets me uncontrollably hot -- I can't explain why, but I'm sitting here thinking about it right now, and my pussy is molten. \n\nI'm fine with a 'regular,' typical relationship -- meet a guy, feel mutual attraction, indulge some in the courting ritual, bump our bellies together, maybe some doggie or a bit of cowgirl, rinse and repeat. I can -- and do -- find that super exciting, and I thoroughly enjoy doing things in that 'conventional' way. That's my 'normal' side.\n\nMy secret side, though, daydreams about being controlled although safe, being benignly dominated if you will, and getting pushed way past my comfort zone. That fantasy gets me aroused in an over-the-top way that 'business as usual' doesn't come close to. \n\nKristin was right, I had already decided that I would do this.\n\n: : : : :\n\nI emailed Ryan. He promptly emailed back and asked for a head-to-toe selfie. \"Nude?\" I asked, and he responded, \"Not necessary -- bikini or underwear is fine.\" \n\nWhen he had confirmed that I looked good enough, he emailed me his phone number and had me call so he could explain the premise. His voice was pleasant and reassuring. \"Everything about the video will be real, except one thing -- I pretend to be a porn 'casting agent,' and you pretend you're auditioning. You don't have to play any sort of role for the camera. You've never been in a porn video, right?\" \n\n\"No, I haven't.\"\n\nHe said, \"Perfect. You won't have to pretend you're shooting your first porn vid because you are shooting your first porn vid. If you're nervous, don't pretend you're not, that's actually good. How I make money is guys subscribe to my site, and they like nervous. It makes them feel like they're getting an inside glimpse into something secret.\"\n\nI asked, \"Is there any such thing as an actual 'porn casting agent'?\"\n\nHe laughed and said, \"I have no idea...\"\n\nHe continued, \"There's only one little bit of 'acting' you have to do, and that is, in real life I'll pay you, but in the video you and I both pretend you're auditioning for free. That and use a fake name, for obvious reasons.\"\n\n\"Speaking of pay...\"\n\n\"You get $500 if all you do is take off your clothes and let me fondle you, $1,500 if you blow me or fuck me, $2,000 if you blow me and fuck me...\"\n\nMy mind was swimming in the possibilities. His voice brought me back to the here and now. \"...and $3,000 if you also let me fuck your ass.\" I'm not an anal girl, but damn, as much as I could use $2,000, I could do even more with $3,000. New tires and clothes for starters.\n\n\"I'll pay you an additional $500 if you rim me, but so far nobody ever has.\" I didn't know what 'rim' was. He explained it was licking his asshole. No, more like tongue-fucking his asshole -- eewww... Do people really do that?\n\nI asked if he wanted me to actually audition. \"No. In the video, we've never met, so if we actually haven't met, neither of us has to pretend. Also, I don't want you to tell me which of those things you'll to do. Then neither one of us has to act surprised, because we actually are surprised. Being surprised is like being nervous, 'the guys' like the final video better when you obviously don't expect what's next. Also, don't look at my site, or any of the other sites doing this kind of video, for the same reason.\n\n\"If you're 'in,' I'll email you a link to some forms to fill out online. I'm set up for your e-signature, but make sure you sign it everywhere indicated. I also need you to go by a clinic,\" which he gave me the name and address of, \"for some bloodwork. You don't need an appointment, and they'll bill me.\"\n\nMy evening was open, so I finished the paperwork. It was tedious -- I couldn't believe how many pages there were, and how many times I had to give identical information on slightly different forms. I had blood drawn the following afternoon.\n\nFilling out all those forms made it clear that this was serious, it was real. The more I thought about it, the greater my doubts became. It got to where my inner voice simply said, 'Don't do this.' If I did, I would be having sex for money, right? It was impossible not to feel anxious about that. Wouldn't that make me a whore? \n\nI needed to talk to Kristin, find out how she felt afterwards. Was she ashamed of herself? Did Jeremy think less of her now? \n\nShe wasn't ashamed. As far as she was concerned, being in a video, even explicit porn, was quite different from being a prostitute. \"A whore fucks anybody who pays her money,\" she said, \"dozens of guys every month. A porn actress maintains her regular relationship except when she's making a video, then she interacts with a select few who were as carefully screened as she was.\n\n\"Things are not only fine with Jeremy,\" she continued, \"if anything he treats me more special. The sex is definitely better -- I'm talking OMG hot. As far as other guys in the future, seriously, any guy who is worth having will be concerned with who you are, not something you did. Any guy who would reject you because you made a video, he isn't worth having.\"\n\nI asked, \"What about ruining a possible career?\"\n\n\"Oh, are you going to be a school teacher?\"\n\nI shook my head. \"No.\"\n\n\"Something in law enforcement?\" No.\n\n\"Run for political office?\" No.\n\n\"I didn't think so. Me either. I think for those careers it could become a problem, but for anything else, it won't matter.\"\n\nStill, I seriously considered backing out of the whole thing, money or no money. I went to bed that night thinking that no amount of money was worth the scorn of others if they found out, or any possible self-loathing. After I had slept on it, though, I realized that what she said was right, there was nothing to be ashamed of. I decided I would do it. I was so excited I could barely function.\n\nA few days later Ryan called me back and said my paperwork was filed and my blood test was clean. We chose my screen name -- I liked the name Crystal, but he redirected me to Louise. He said that old-fashioned names were best, like Louise, Doris, Harriett, Marge, or Gladys. 'The guys' liked them better than what he called 'stripper names' like Cherry, Crystal, or Bambi. He also recommended that if I was considering doing anal, I might want to 'loosen up' by wearing a butt plug as much as possible between now and the shoot. I had to ask him where to get one, if I decided to go that way.\n\nWe set up an appointment for Saturday, two days away. I was floating on air -- it looked like now I was going to make some extra money, and at least as important, face my sexual inhibitions and live this crazy fantasy. I was so excited, I wondered how I was going to get any sleep between now and then.\n\n: : : : :\n\nThe address he gave me was a plain four-story office building in the corner of a suburban shopping center. I took the elevator to the third floor and found the ladies room. I shut myself into a stall, dropped my drawers, and shivering with anticipation, removed the butt plug I had been wearing for two days. It wasn't the biggest one they had at the adult video store Ryan sent me to, but it was longer and thicker than any live cock I ever had in me. I had pretty much decided not to take the anal money, but if I did I hoped having worn the butt plug would mean I was ready for it.\n\nI found the suite number, reached for the doorknob, and froze. I couldn't catch my breath, and my heart was beating out of control. My head spun with a mixture of dread, excitement, fear, and arousal. I went to the end of the hall, where a window looked over the parking lot. I leaned my forehead against it, hoping the cool from the glass would soothe my brain. I thought, 'what the fuck am I doing?' The reality of where I was, why, and the number of different ways it could go wrong, overwhelmed me. \n\nI could see my car, and I seriously considered returning to its safety and getting the hell out of there. But I thought about the money, I imagined actually overcoming my inhibitions, and I pictured how much Kristin told me she enjoyed what she did. I relaxed a bit, and although my pulse was still racing and my breath was short, my pussy wasn't going to let me bail out -- it felt like it had caught fire. I again pictured things going well, and much of my stage fright evaporated. \n\nI stood up straight and retraced my steps to what still felt a bit like the door of doom. Taking the deepest breath of my life, I gripped and twisted the knob. It was locked. \n\nI knocked, and Ryan answered, pointing a small video camera at me -- not what I expected. I looked into the lens and realized I must look pretty freaked out, so I forced a grin.\n\nKristin was right, he was nice looking. He was not much taller than me, slender, had close-cut brown hair, a dimpled chin, and a welcoming smile. His size and his smile added up to non-threatening, or else I still might have bolted. He said, \"Louise?\" I nodded. \"Hi. Come in.\" I felt like a fly being greeted by a spider. \n\nHe shut the door behind me and locked it, with an ominously heavy click. I don't know what I was expecting to see, maybe some sort of elegant movie set with a plush, all-white canopy bed, or a plush New Orleans bordello with red velvet and black suede trim, but at least I thought it would be classy. What was actually there was stark. It looked like the waiting area for a budget lawyer's office -- all that was missing was a cheap coffee table covered with a jumble of last year's magazines. There was a faux wooden desk for a receptionist and a sofa made of black imitation leather. In addition to the camera he held, three more were mounted on tripods and one sat on the edge of the desk, all pointed at me. They all showed a bright red dot indicating 'recording' -- I might as well have been on an arena stage. \n\nSeveral bright industrial-looking lights were mounted on top of poles and pointed at the ceiling or a wall at odd angles, filling the room with bright, shadowless light. I felt dizzy, realizing that all this gear, and the time it took to set up, was to film me and my naked body, while he used my mouth, my pussy, and possibly my asshole for his sexual pleasure. My pussy flooded in nervous anticipation of the excitement to come, if I could keep myself from running, screaming, from the building.\n\n\"First,\" he said, \"a little important business. Are you here of your own free will?\"\n\nI nodded.\n\n\"I need your answer out loud.\"\n\n\"Yes.\" I faked a smile.\n\n\"Good. Now, we need to establish that you're legal. Would you please get out your driver's license?\" While I dug through my purse, he retrieved a copy of the morning newspaper. \"Okay, hold your license here beside today's date. Cover your name and address with your finger, but not your date of birth or your photo. Okay, good, hold it up beside your face, show it to the camera.\" I did. \"Okay, you've changed your hair a bit, but it's clearly you. You're nineteen years and ten months old, good, that makes you legal. You may put that away.\" \n\nHe took a piece of paper out of one of the desk drawers and placed it and a pen in front of me. \"Read as much or as little of this as you like. It's a release I have all the girls sign. It makes it legal for me to post the finished video on my site. I didn't include it in the earlier papers so I could record video of you signing it.\"\n\nWhile I read it, he framed my face with the camera he held. When I set it on the desk and signed it, he shot a close-up of my hand. \n\nWith that out of the way, he took a seat behind the desk, and gestured that I should stand in front of the sofa opposite it, and we both got back 'in character.' All the cameras faced me. \"Put your hands on your hips, and turn a slow circle for me.\" When I finished turning and faced the camera again, he said, \"Very nice.\" \n\nHe had me take a seat on the couch and zoomed into a close-up of my face. He smiled and said, \"So, Louise, why are you here?\"\n\n\"To audition for video producers.\"\n\n\"That's right. Do you understand what kind of producers?\"\n\n\"Yes, x-rated producers.\"\n\n\"Why do you want to be in porn?\" \n\nI wasn't expecting that question. I didn't know how to explain how excited being under someone's control made me, and I didn't think I should blatantly admit I was there for the money, so I shrugged. He asked, \"Fame?\"\n\nI shook my head. \"Not really.\" \n\n\"Money?\" \n\nI smiled and nodded. \"Yes. Lots of money, I hear.\"\n\n\"If you do well, yes. You understand that I'm not paying you for this audition, right?\" I nodded. \"But I will forward the video I shoot today to several producers I represent. If you do well, one or more of them may choose to hire you. Of course I don't guarantee that. Doing well includes looking good, and so far you're doing great...\" He smiled and I smiled back at the compliment. He continued, \"My job is to clearly show them that you're willing to do certain things, you follow directions well, and you follow them promptly. Every minute wasted during a shoot is money wasted, and wasting money makes video producers extremely cranky. Understand?\"",
        "\"Yes, that makes sense.\" He was being so reasonable, I was amazed to feel myself getting comfortable.\n\n\"Okay, good. Stand up and take off your clothes.\" \n\nAck! Comfort gone. My breath caught in my throat. If he was trying to shock me, it worked. I had never undressed with an audience before. Sure, I had gotten naked with a boyfriend many times, but always with him undressing at the same time. In this setting, a brightly lit office with a live spectator -- a stranger -- and five cameras, I could barely make my arms work. My entire body felt like it was going to dissolve into a puddle. \n\nI reminded myself that this wasn't a first date, and he wasn't seducing me. I had already agreed to do extremely personal things on his request, things that I had only ever done in private with boyfriends. I stood and kicked off my shoes. I remembered that he said it was okay to look nervous -- that was good, because I didn't think I could hide it.\n\nI tried to hide how badly I was trembling, and began unbuttoning my shirt. I was so nervous I fumbled quite a bit. I finally got all the buttons undone and pulled it open, showing my tummy and bra to the camera. I eased it off and set it on the arm of the couch. I unzipped my pants, stepped out of them, and placed them with the shirt. \n\nI reached behind my back to unclasp my bra, but he stopped me. \"Look at you! Very nice.\" He had me turn another slow circle, blatantly ogling me. This time he had me stop as I turned, showing my profile, my back, where he had me look over my shoulder and smile, and my other side. If he was trying to make me feel self-conscious and look nervous for the camera, it worked. I felt like the room didn't contain enough air. \n\nIf he noticed my discomfort, he didn't back off any. He had me step forward and he held the camera barely a foot in front of my chest. He squeezed one of my bra-clad breasts, hooked his finger in the lacy cup, and pulled it aside, exposing my nipple for a second before releasing it. \"Now your bra,\" he said.\n\nSomehow I made my arms reach behind my back and undo the clip, but I held it securely in place in front. I was barely able to make my shoulders shrug the straps off. I slowly lowered the cups away from my boobs, revealing them bit by tiny bit, but I stalled before I showed my nipples to this stranger and his cameras. I didn't want to fail; I only managed to proceed by closing my eyes so I couldn't see the cameras while I pulled the bra free. I tossed it onto the stack of clothes. I froze, not willing to take off my panties yet. He had me lean forward into the camera, scrunch my shoulders, and press my tits together with my upper arms to emphasize my cleavage.\n\n\"Niiice. Step towards me.\" He focused the camera close on one tit, cupped it in his hand and squeezed it. He released it, fondled the other one, and said, \"They look natural.\"\n\n\"Yeah, it's all me.\"\n\n\"What size?\"\n\n\"Um, 34, C cup,\" I semi-stammered. He pinched the nipple and pulled it, stretching it to the point of hurting. He released it and gestured for me to return to my spot in front of the couch.\n\nHe said, \"Now your panties.\" I hooked my thumbs in the elastic and started to lower them. I stalled when I got to where my bush would be if I had one. I pulled them back up, not quite all the way. I moved my hands to the back and pulled them down there, slowly, but got stuck when I got half-way down my crack. With an almighty effort I managed to overcome the urge to pull them back up. \n\nI didn't glance at Ryan, but I'm sure he was getting impatient. Shoot, I was getting impatient. I lowered the back more, revealing my butt cheeks. My ass glowed when it felt air-conditioned air and Ryan's eyes drifting across it. I returned to the front and lowered the elastic some more. When I got to the very top fraction of an inch of my slit, he said, \"Oh, you shave. Niiice.\" I lowered it a bit further, but he barked, \"Stop.\" I did, leaving the fabric just below my slit. \"Turn around.\"\n\nI turned my back to him. The upper edge of my panties was right at the crease between my upper thigh and my butt cheek. \"Bend over at the waist.\" I did, struggling slightly to keep my balance with my hands still on my undies. \"More,\" he said. I leaned forward as far as I could, thrusting my butt toward the camera to keep from falling over. My head was about to explode as I realized what his view must be: my asshole and pussy lips peeking out from between my butt cheeks. \n\nHe didn't say anything more, so I resumed pulling my panties down fraction of an inch by fraction of an inch. It took an extra tug to free them from the upper junction of my thighs. When I got to where the elastic no longer gripped my legs, I let them fall to the floor.\n\nI started to straighten up, but he said, \"Wait.\" I paused to see what he wanted. \"Reach back, grab your cheeks, and pull them apart.\" My hands didn't want to obey. I could just imagine what the camera saw -- talk about up close and personal! When I saw the final video, he actually zoomed in closer than I imagined, filling the high-definition screen with my pussy lips, taint, and tightly-puckered asshole. It was close enough to show a couple of fuzzy spots I missed when I shaved.\n\nHe finally let me straighten up. I had to fight off a nearly overwhelming urge to curl up into a pretzel and cover all my private bits. My mind curved inward on itself, unable to process what was happening. He broke the spell, saying \"Step towards me.\" \n\nHe reached under and cupped my pussy, rubbing it with two fingers, zooming way in with the camera, letting it see his fingers separate my outer lips. \"Turn around.\" I did. \"Bend back over, hands on your shins.\" He gave my ass more attention, this time with his hands as well as the camera. He fondled my ass, squeezed my cheeks, then ran his finger down my crack, brushing it across my asshole. I had to catch myself from swatting his hand away, then I felt silly -- this was nothing compared to what he was going to be doing to me in a few short minutes. \n\nA wave of dread rippled through me. I took a deep breath and wondered why I was being so fearful. That's not me. If I do something, whatever it is, I do it all the way. This will probably be the only time I ever do anything like this, so I should be having fun. \n\nI pushed the fear and dread away -- doubts be gone! A wave of light-headedness washed over me as I realized that here I was, under his control, not knowing how much further he was going to push me, not able to say no -- if I wanted to collect all that money.\n\nHe stroked my slit and found out my little secret -- I was already soaking wet. Zooming the camera in for a close-up, he slid a finger in deep. \"Oooh, good, you're wet -- you're enjoying yourself.\" He pulled his finger out. \"You can straighten up.\" \n\nStill holding the camera, he focused on my face and slid the finger that had just been in my pussy into my mouth. I sucked on it, raised the corners of my mouth into an accepting smile, and gazed longingly into the camera lens, hoping I looked sexy. He lowered the camera to my breasts and felt me up again, zooming in tight. He squeezed my tit rather roughly and raised the camera to a close-up of my face reacting. I closed my eyes and sighed, trying to look like I was having fun.\n\n\"Spread your feet apart,\" he said, and got on his knees in front of me, holding the camera right in front of my pussy. He slid his fingers across my slit, and pushed his middle finger into me, one knuckle deep, then two, then all the way to the palm. He slowly pulled it out, then pushed it back in, then out. His next stroke felt thicker -- it was two fingers. He mini-fucked me with them, five or six stokes, then pulled out and rapidly flicked his pointer across my clit. He was all business -- his touch was coarse, and he didn't linger for my comfort or do anything to ease me from step to step. Despite that, I was very close to cumming.\n\n\"Take a seat on the couch. Slide forward, that's right, all the way to the edge. Spread your legs. Put your feet up on the cushion beside your ass.\" He used his fingers to stretch my lips apart, taking an ultra-close-up of my opening with the camera. When I saw the finished video, I was amazed at the thick, milky goo oozing out of me, showing just how aroused I was. He pinched my clit, stretching it and the soft tissue surrounding it, wiggling the bunched flesh. He released it and re-inserted two fingers, pushing them in as far as they would go. He started finger-fucking me again, lifted the camera to my face, and zoomed in -- I could see the inner parts of the lens moving. \"Do you masturbate?\" Wow, he sure doesn't mince any words.\n\n\"Of course,\" I said, trying to keep my head from exploding at how boldly he fondled me, as well as his verbal abruptness. He pulled the camera away, framing the shot so it included both my face and his fingers fucking me. \n\n\"How often?\"\n\n\"Every day.\" I don't know why I said that, I guess I thought it sounded sexy. It's actually more like a few times a month.\n\n\"Can you cum on your fingers, or do you need a toy?\"\n\n\"Fingers,\" I said, truthfully, \"but it takes longer.\"\n\nHe lowered the camera back to my pussy, barely a foot away from it. \"Show me.\"\n\nThat's an incredibly personal thing, mister! I shivered as I felt his eyes, the five camera lenses, and all the people who would soon be watching the video online staring at me and my nakedness, and my mind spiraled in an out-of-control whirlwind. I gulped and forced my hands down to my pussy. Maybe I had already decided I was going to do whatever he asked, but that didn't make it easy!\n\nI pulled my outer lips apart, and he positioned the camera in front of my fingers, centered on the action, showing all my intimate details. I ran a middle finger up and down, outlining my opening, tracing the crinkly inner lips. When my finger reached the top, I looped it under my clit and rubbed from side to side. I shivered -- everything I had done so far, getting naked, letting him handle me, and now stimulating myself, were things I never thought I'd do for an audience, or a stranger, or especially for video cameras. And we were just getting started... \n\nWith all those thoughts clanging around in my poor brain, I had no idea I was ready to cum. As soon as I touched my clit, a massive climax washed over me, as strong as anything I ever felt before. I came and came and came. My body flexed into a single, trembling muscle contraction, funneling all the worry and anticipation of the last few days into one massive explosion of energy.\n\nI fell into a limp, boneless blob. The only thought I could conjure was that I needed a break before I could continue. \n\nI would have to do without -- he had me straighten up and told me to rub my pussy some more, starting slowly and speeding up. He grinned and explained, \"You came too quickly. I'm sure that was real,\" I nodded, it sure was, \"but it was so quick that on video it will look fake. I'll edit what you're doing now so it looks like you did it before your orgasm. It'll look more real if you build up to it rather than just exploding on the first touch of your fingers.\n\nI asked, \"You can change the order things 'happen'?\"\n\nHe nodded impatiently and gestured at me to get busy.\n\nI couldn't seem to make my body obey, but I remembered the part about producers hating wasted time. I assumed that included Ryan. I forced myself to proceed and made my fingers start in on my pussy. I rubbed and wiggled, trying to look like I was building to a fierce climax. On the finished video it actually looked quite real. \n\nWhen he said I had done enough, he stood, took my hand, and pulled me up from the couch to a rather wobbly standing position. With the camera on my face, he guided me to my knees by pushing down on my shoulder. I had a pretty good idea what was going to be next, and by now, I thought I was ready for anything he could say or do. But when he simply said, \"Suck my cock,\" it hit me like a cannonball to the belly. \n\nI almost said, \"Fuck off, buy me dinner first,\" but then I remembered where I was, how much he was paying me, and that I was here to do what he said. He told me later that the array of emotions that cycled across my face was perfect -- exactly what he wanted.\n\nI trembled so hard I could barely make my hands function, but fortunately when I watched the finished video, it barely showed. I unbuckled his belt, unzipped his slacks, and pulled them to the floor. I tugged his boxers down below his cock, which flipped up and bopped my face when it cleared the elastic, leaving a blob of pre-cum on my cheek. \n\nI had no more reason to stall -- it was time to take his dick into my mouth for money. There's a word for girls who do that... 'I'm not a whore,' I told myself. 'I'm not a slut, either. Or a nympho. Or any other kind of deviate.' Then why was my pussy on fire?\n\nKristin was right, his cock was a nice one. It definitely wasn't too small. I wasn't sure about the other thing she said, though, that it wasn't too big. It looked fucking huge. \n\nI put on a little show of acting hesitant. It was mostly pretend, to excite Ryan and his 'guys,' but I admit part of me truly felt timid. I kissed the tip of his cock like was the first live one I had ever seen and I was afraid of it. I shyly licked it, just the tip of my tongue lapping the underside of his glans, like it was my very first taste. I kissed it again, held my mouth on it, and drew the tiniest amount between my lips, not even past my front teeth. I held still, as if I had accomplished something momentous, and I pulled off like I needed to catch my breath. \n\nHis dick quivered in eagerness. I took the tip between my lips again, and drew a full inch in, then another half inch. I stroked over that tiny portion of his length a couple of times then pulled off again, leaving a thin thread of thick saliva from his tip to my lips. \n\nI licked the smooth cap from side to side, then up and down. I took two full inches into my mouth and made a show of sucking hard on it, showing my sunken cheeks to the camera. I pulled out to just the very tip, drew that length back in, and repeated that five or six quick times. He trembled, maybe in eagerness, probably in impatience. It was time to get real. \n\nHe held the camera right in front of my face. I opened my mouth, shut my eyes, and took half his length between my lips. I coated it in saliva, swirled my tongue on its underside, and sucked. It totally filled my mouth. I panicked -- I was going to fail, there was no way I was going to get any more of it in.\n\nI tried pushing my face down over him. I got an additional inch in, then by pushing harder, another. I pulled back, and let the tip escape my mouth with a sharp popping sound. He moaned, took it out of my hand, slapped my cheek with it three or four times, and forced it back into my mouth. I gripped the base with my fist and tried to focus on suction and tongue motion, but he was clearly only interested in two things: depth and more depth. Luckily, right as he bumped my tonsils and I nearly gagged, my lips contacted my hand, and he allowed me to pull off.\n\n\"Look at me,\" he said. I raised my eyes to him and the camera. He didn't instruct me further, so I lowered my face and resumed blowing him. \"No, let me see your eyes while you suck me.\" I looked at the camera, and keeping my face raised, began to draw him back into my mouth. Keeping the lens visible made the angle difficult. It was a struggle, but in a couple of thrusts I found a way to maintain eye contact. \n\nI stroked him slowly as I got used to the awkward angle. It occurred to me that he would probably expect to cum in my mouth, which is not something I let guys do. I decided, though, that I would not be 'the girl who wouldn't.' Of course, that meant I would have to do it. My head spun at the thought, but to my surprise, in excitement. I realized I wanted to do it. A chill washed over me, the hairs on my arms and neck stood up, and my pussy flooded with extra wetness. \n\nI bobbed my head over him faster, sucking with all my might. After five or six strokes, he pulled out, gripped my chin, and lifted my face up toward the camera lens. Another thick strand of saliva stretched from my lips to his tip. He leaned back, and the drool sagged down onto my chin. He slapped each of my cheeks with his dick several times, and reinserted. I cupped his balls and lightly stroked their underside, like scratching the chin of a Labrador. It worked, distracting him from trying to penetrate my throat. \n\nHe cupped his hand on the back of my head, holding me still, and began fucking my mouth in earnest. He did all the thrusting, all I did was suck, but I did that as hard as I could. I made sure his hand-held camera saw my cheeks collapsing, so 'the guys' would know how hard I was working.\n\nI got a bit more comfortable with maintaining the eye contact he wanted, and he fucked my face faster and faster. He showed no sign of being anywhere near ready to pop, and unfortunately my mouth was getting seriously tired. I didn't want to upset him by violating his 'delays make producers cranky' rule, but I had to interrupt his rhythm to take a break.\n\nI pushed him out of my mouth and stroked him with my fist, twice as fast as he had been pushing into me. After ten or twelve quick strokes, I gripped his tip extra tight, and practically vibrated my hand over it. He moaned and enjoyed it for a long moment, then stepped away.\n\nHe sat on the edge of the couch, his rump on the front edge of the cushion. He pointed at the floor between his feet and followed me with his hand-held camera as I crawled into place. I was ready to start back in. Actually, I was eager to start back in. \n\nThe way he sat gave him no leverage for thrusting, which suited me fine -- it put me back in control of speed and depth. I matched the speed he had set as closely as I could, but I went an inch or two less deep. I sucked harder to hide the reduced depth from him. It worked, he didn't seem to notice.\n\nI finally heard his breathing change -- he was going to cum. A previous boyfriend taught me that the nearer a guy is to cumming, the more sensitive his tip gets, and the better it feels to focus all the friction and suction there. I reduced my stroking on Ryan to his top few inches, doubled my speed, and sucked harder. He breathed quicker and shallower. Right before I was sure he was going to unleash a torrent of warm, salty goo into my mouth, he pulled out -- WTF?\n\nHe said, \"Open wide,\" like a freaking dentist. I didn't expect that, or understand why he wanted me to, but I did it. He laid his tip on top of my lower lip... I found out why when I saw the final video: as he came you could see each separate rope launch from his dick and disappear into my mouth. After the second or third, you could see the jizz accumulating on my tongue. Just before the last squirt, he pulled back and let his cum fly onto my face. It landed above my eyebrow and made a gloppy bridge across my eye to my cheek. I squeezed my eye shut, but his damn jizz was runny enough to seep between my eyelids -- it stung like hell. \n\nHe said, \"Don't swallow.\" Luckily, I hadn't already. \"Show me.\" I had to rearrange the jizz in my mouth to be visible on my tongue and not drip out, but even so when I opened wide and showed it to the camera, a squirt's worth slid over my lip and onto my chin. I pushed it back into my mouth. \"Now swallow.\" I did, and showed the camera my empty mouth. I felt so silly I grinned goofily, which I thought he'd edit out of the final video, but he didn't -- it came out looking like I was proud of myself, even with one cum-flooded eye squeezed tight.\n\nI stood and helped myself to a couple of tissues from his desk, wiping his cum off my face and out of my eye. He showed that in the final video, then he skipped a couple of minutes where I retouched my makeup. ",
        "He stood, hard again, maybe even still hard -- would a guy his age take Viagra? Probably, I thought, if it would improve his performance, or enable him to shoot more scenes in less time. I thought about Viagra's TV ads, or maybe it was Cialis or one of the others -- TV is flooded with them these days. The fast-talking man at the end of the ad says, \"Not tested for multiple attempts.\" Based upon Ryan, the advertising people weren't talking to the right guys!\n\nHe brought me back to the here and now by ordering me to lean over the desk, my boobs pressed flat against its surface. He placed the desk camera barely a foot in front of my face. \"Look straight into the lens,\" he said. \"Don't lower your eyes for any reason. Good. Now spread your feet some more.\" \n\nI'm sure he arranged me that way to fully expose my pussy and ass to his eyes, his dick, and the camera. He couldn't have known how electrically charged that openness made me feel -- an intoxicating mix of vulnerability, fear, anticipation, dread, and eagerness. The air conditioner wafted cool air freely across my pussy and asshole. I was so over-stimulated I nearly passed out. \n\nHe pushed a finger deep into my pussy, pulled it out, and pushed in again -- all the way to the palm of his hand. He pulled out and slammed two fingers in. It could have felt good if he had been gentle, but he wasn't. \"Keep your eyes on the camera in front of you,\" he reminded me. In the finished video, he went to a split-screen, showing his fingers invading my pussy on one side, and my face involuntarily wincing on the other. \n\nHe pulled both fingers out, then began to push three in. He lingered at my entrance, carefully centering them on my opening, then pressing them inward, not exactly gently, but smoother than he had been with two fingers. Three felt much thicker than two, opening me wider. He pressed them in deeper and deeper, far past where he had gone with two. For leverage he grasped my left hip with one hand and my right hip with the other -- I guess that wasn't fingers in my pussy. \n\nHe pressed his dick all the way in, only stopping when he bottomed out. He pressed tightly against me, flesh against flesh, and wiggled his hips from side to side. He cupped my cheeks with his palms, squeezed, and pulled them apart, showing the camera my butthole above my fully-filled pussy. \n\n\"Where's my cock?\" he said, in a breathier voice than before.\n\nI was so centered on my pussy and how full of him I was, when I answered my voice sounded like someone else was using it. \"In my pussy. It's filling my pussy.\"\n\nHe slowly pulled out, all the way to his tip, pushed back in, wiggled his hips against me again, then with no further ado began fucking me for real. I expected him to fuck me hard, but I thought he might build up to it, at least a little bit. But no, he pounded into me from the start. I met every thrust of his with one of my own. I felt different; this was no longer about me just allowing him to do anything he wanted. Now it was about me smashing my inhibitions to bits. If Ryan wants to fuck hard, I'll show him hard. I'll fuck him harder than he's ever been fucked. \n\nI think somehow he felt me think that; he began fucking me even faster and harder. \n\nIn this position I didn't have much room to move, I was pressed flat against the desk. What I could do, though, was arch my back in rhythm with his thrusting, and roll my hips into his cock. The room echoed with the sound of his thighs slapping mine. I was well along the way to cumming again. \n\nWithout breaking rhythm, he took my hands and placed them on my butt cheeks. \"Pull them apart,\" he said. \"Hold them like that.\" With the camera he held, he filled the screen with my little puckered asshole, my stretched-out pussy, and his cock relentlessly pistoning in and out of me. \n\nMeanwhile, I was ready to cum again, and I could tell this one was going to be epic, but then he stopped and pulled completely out. Dammit! \n\nHe had me lie down on the couch on my back. He knelt in front of the couch, pulled me forward so my hips hung over the edge, and handed me his camera. It took me a second to remember, oh yeah, he's not only fucking me senseless, he's also filming it. \"Hold this over your head, arms fully extended. Aim it at your face, it'll focus automatically. Keep it on your face, and look into the lens at all times.\n\n\"Actually, point it a bit lower. A little more... there. Now your face and your tits are all in the shot.\" I couldn't tell how he could know that. I followed his gaze over his shoulder. There was a small screen on the floor by the desk, where it wouldn't be visible in any of the other shots. The shot from the hand-held camera showed on it.\n\nHe saw my gaze find the monitor, and said, \"Bluetooth.\" I must have looked puzzled, so he clarified, \"That's how the monitor 'sees' the shot from a cordless camera.\" Then it was back to fucking.\n\nHe lifted my thighs way up to where they pressed against my chest. At first they covered my nipples, hiding them from the camera. He repositioned my knees so they framed my tits and pressed them inward, making my tits look bigger and bounce more.\n\nHe placed his tip at my entrance. Finally -- I was dying to get his cock back in me. I thought he might be a little gentle at this stage, just for variety. I even thought for a second that's what he was doing -- his initial slide into me was firm but slow. All he was doing, though, was making sure he had a good angle. He bottomed out, pulled back, immediately slammed forward, and simply began fucking me hard. No subtlety, just power and depth. \n\nOkay, power and depth are good. He wants hard, I'll give him hard. I rocked my hips in sync with his thrusting, slamming into him hard with every push. \n\nHe grabbed my ankles and pressed them up beside my face, straightening my legs and pressing my knees tighter against my ribs. Being stretched that tight not only gave me another deep surge of arousal, but also made me more determined to give him more than he expected. This position made it harder to match his rhythm, but I gritted my teeth and rolled my hips harder. I worried that I must look miserable, but when I saw the final product I just looked like I was deep in the throes of having my bell rung.\n\nI glanced briefly at his little secret monitor on the floor, and saw my boobs bouncing wildly up and down as he pounded into me. He seemed to like that, he featured that shot heavily in the final edit. I tilted the camera down from time to time, omitting my face but adding my pussy being pounded by his cock, still including my quivering boobs. He used that shot a lot, too. At one point he even took the camera from me and zoomed in tight, filling the screen with nothing but bucking pussy and blurred cock.\n\nI don't think I've ever worked so hard at fucking -- this had become an athletic event. I had so much to focus on, holding my legs tight against my chest, keeping my knees from covering my tits, humping him back as he fucked me, and holding a useful shot with the camera in my hand, once again I didn't notice the orgasm that was building. It overtook me, surprised me, washed over me, not just a climax but a tsunami overlaid with an earthquake, topped with thunder, lightning, and hurricane-level wind. I didn't just cum, I came and came and came. And came. I came hard. And I came some more.\n\nI tried to hold the rhythm, but I was too overwhelmed. I couldn't match his pushing anymore, not in sync anyway, and the hand with the camera fell useless to my side. He released my legs, placing an ankle on each of his shoulders, and picked up the camera. He framed my face, which was slack, my eyes only half-open, and my mouth agape. I'm surprised I wasn't drooling. \n\nWhen I was completely through cumming, he gently said, \"You OK?\" I nodded. He left that part out of the final video, by the way. \n\nHe wasn't through surprising me and getting his precious startled reactions. Even though I was still catching my breath, he framed a close-up of my face and said, \"Do you take it in the ass?\"\n\nJeez, mister, don't you ever get enough? It took me a moment to realize it was more than him doing that typical horny guy thing of trying to penetrate as many parts of me as possible. He didn't cum in my pussy, so he needed either to fuck me there some more, go back to my mouth, or stick his cock somewhere new, the sooner the better. I realized he was waiting for an answer. What did he ask me? Oh, right, if I would take his dick in my ass. \n\n\"Yes,\" I said. \n\nI lied. I don't do anal. I've let a couple of guys fuck me there, and while some girls may be comfortable doing that, I've done it enough to know I'm not one of them. His voice brought me out of my thoughts. \"When's the last time you did it?\"\n\n\"A couple of weeks ago,\" I lied again. Why didn't I just say no? I wasn't going to let him do it, was I? \n\nApparently I was. The extra $1,000 was part of why, but the bigger part was how I found my pussy sizzling at the thought of letting him. It gave me a crazy rush of excitement. I had worn the butt plug for two days to prepare myself back there, but as those two days passed, I had pretty much decided that I wouldn't do it. But that was the 'old' me of a few hours ago. The new me wasn't merely going to let him do it, I wanted to. Big difference. My mind glowed so hard I'm surprised my ears didn't visibly emit smoke.\n\nI eagerly arranged myself in the classic butt-fuck position, on my hands and knees with my ass pointed at him and his cameras. I placed my knees a foot apart and arched my back, exposing my brown rosebud fully to his and the cameras' view. I couldn't quite believe what I was doing; I hoped he wasn't going to be so rough it would hurt too much.\n\nHe circled me with his hand-held camera, lingering on my face, then my tits hanging down, then my holes peeking out between my butt cheeks the next. He said, \"That's not how we're going to do it.\" \n\nHe stood me up and led me over to the desk, where he had me lay on my back with my ass hanging off the edge. He lifted my legs so my thighs framed my tits like before, had me turn my head to the side, and placed the loose camera in front of my face. \"Keep your face turned here,\" he said, \"and look straight into the lens at all times. Keep your eyes open.\" \n\nI heard him uncap a container of some sort, lube I assumed, and felt something cold and slick penetrate my butt. It felt impossibly large. \n\n\"Relax,\" he said. Easy for him to say! The slippery object withdrew from my butt, I assumed to get some more goo, and he said, \"Two fingers this time.\" Ack! That was one finger? I might be in trouble... \n\nIn the final video, he showed another split-screen: his fingers pushing into my butt on one side, my face cringing on the other. Something happened back there, though. Maybe it was muscle memory kicking in from the butt plug. Whatever it was, I was surprised to find two fingers weren't any more uncomfortable than one. He worked them in and out, twisting his wrist to a different angle every few plunges, stretching me in all directions.\n\nHe hooked my lower legs with his forearms and leaned forward, pulling my legs up so tight that my ass lifted up off the desk. Talk about feeling exposed -- my ass could not have been more wide-open.\n\nHe placed the tip of his cock at the center of my asshole and began pushing. After a bit of resistance, which he simply pushed harder to get past, his tip slid in, then more, and more, relentless, inch by inch. The only break he gave me was he pushed rather slowly. Any time he hit any resistance, it was 'no mercy' -- he just pushed harder to bull his way past it. Fortunately, the butt plug I had worn was large and long, and having it in for two days had made my channel nice and relaxed. \n\nIt didn't hurt, much. Up to a point, that is. Past that point it definitely hurt, I assume because his cock went deeper than the butt plug had. He only stopped when his abdomen pressed tight against my butt cheeks. \n\nHe began fucking me, slowly, but I don't think it was for my comfort, I think it was so he could adjust to me. I had several moments where it still hurt, but if he was aware of that, he didn't compensate any, he just pushed past it. \n\nIn a few strokes he found his angle and, no surprise, he ramped up and fucked me fast and hard. By then my guts had adapted to being speared by his man-pole. To my surprise, though, it was more than comfortable -- it felt l amazingly good. I didn't understand how that could be until I saw the video. A close-up showed what was happening: when he entered and exited my ass, the friction there tugged on my outer lips, stretching my pussy into a slightly different shape, putting direct pressure on my clit. Who knew that happened? The result was, if he fucked me long enough back there, I could cum. \n\nBefore I reached that point, though, he stopped and pulled out, his hard-on visibly throbbing. He sat on the couch and slumped back so his hips were at the front edge of the cushion. He had me straddle his legs, my back to him. He spread his knees, forcing mine far apart. He gripped my hips and guided me downward, until the tip of his dick was back at the entrance to my ass. \n\nHe lined things up just right and pulled me down, re-entering me. He guided me lower and lower still, his cock going deeper and deeper until I was full of him again -- and by full, I mean full. I was all the way down, his cock as deep into me as it could possibly go. Buried. Balls deep, literally. \n\nIn this position, he had no leverage for thrusting, and he had my legs so far apart I didn't either. I leaned forward, so I could press my hands on his knees for leverage, pushed myself up off his cock, and let gravity pull me back down. \n\nHe asked, again, \"Where's my cock?\"\n\nMy voice surprised me -- it was slightly raspy, and at a lower pitch than usual. I managed to croak back at him, \"Up my ass.\" \n\nIt only took me a few thrusts to hit a steady rhythm. Now I was fucking him, and you better believe I fucked him hard hard hard. You could say I was still being submissive, giving him what he wanted. Or you could say I turned the tables, showing him how it felt to be fucked hard. Or you could say that I took control and used him to get the most out of fulfilling my needs. \n\nWhatever you want to call it, I was not only enjoying myself, I was lost in the moment. The room reverberated with both our moans, pulsing in sync with my plunging over him, combined with the sound of my thighs slapping his. My ass stretched in and out with each penetration of his cock, pulling my pussy lips tight across my clit -- it felt simply heavenly. \n\nIn the final video he mainly used shots from his hand-held camera. They showed his entire length disappearing into me, his girth stretching me extra tight. He alternated that with shots from the desk camera, not only showing his cock disappearing into and reappearing from my ass, but also my empty pussy, looking rather lonely above all the action. Above that, my tits bounced wildly with each plunge, my face was slack from effort, and my eyes were half-shut in a mix of effort and pleasure. Occasionally he used a brief shot from one of the tripod cameras, which mainly just showed how hard I was working. The longer we fucked the tighter he zoomed the hand-held shot, showing in high-definition detail how tight my ass stretched when he entered me and how it hugged him when I pulled off.\n\nI was surprised again when the first hint of an orgasm appeared. It grew, a faint aura gaining strength, then receding, then growing again, teasing me with the possibility of cumming like one of those irritating tickles deep in your nose that threatens to become a sneeze but never does. The feeling faded away, and I thought the possibility was lost, then it hit me full force. It wracked my entire body, waves and waves of the deepest roiling bliss. \n\nI tried to maintain the rhythm that was working so well, but I couldn't. My orgasmic contractions must have squeezed my ass as well as my empty pussy, and Ryan erupted into me. The final edited video was filled with the sounds of my moans and his, but the picture was from one of the tripod cameras -- I collapsed forward as I came, hiding anything interesting from the desk camera, and he lost control of his hand-held when he slumped back on the couch, his arms spread out to his sides.\n\nI tried to keep going even after his cock no longer pulsed with orgasm, but I was so totally spent I lost what was left of my rhythm. I slumped forward, hugging my knees, and let gravity pull my hips down onto his thighs, burying his cock deep inside me. \n\nHe grasped my shoulders and eased me back so I laid on top of him, my back on his chest. He wrapped his arms around me, patting my tummy with one hand, cupping my tits with the other, then we were both utterly still except for our chests heaving as we tried to catch our breath. I felt his dick softening, and it eventually slipped out of my ass, letting his cum ooze out. \n\nI wobbled to my feet, and pulled him shakily up to his. \"Ryan,\" I said shakily, \"This will be another spot where you need to edit.\"\n\n\"Yeah, it sure will, Louise, since you just used my real name.\"\n\nI said, \"About rimming you...\"\n\n\"Yeah?\" he said, his voice pitched higher than usual, all the irritation vanishing in expectation.\n\n\"I won't do it for $500.\"\n\nHis voice returned to its usual tone. \"I know. Nobody else has, either.\"\n\n\"But I would for $1,000.\"\n\nHe squeaked, \"You're kidding.\"\n\n\"Not kidding.\"\n\nHe had to think about it... for about two microseconds. He squeaked, \"Okay.\" For the money, I hoped he would say that. For every other reason, I hoped he would say no. He opened one of his desk drawers and got out a wet wipe. It must have been an 'adult' brand -- the package said 'cherry-flavored.' He cleaned his cock, which I appreciated, since it had just been in my ass... \n\nHe sat back on the edge of the couch, his butt entirely hanging off the front. He spread his knees as far as they would go, and lifted them up to his chest. Feeling like I was watching someone else's movie, I lowered my face between his thighs. He lifted his cock up out of my way, and his balls, too.\n\nThen, before I even started, he stopped me. He stood and pondered something for a moment, looking like it was important. There I was, ready to do something I would never have thought I'd ever agree to do, and he looked like he was changing his mind. Shit, did he decide that was too much money? Dammit!\n\nHe slid sideways to a different spot on the couch, and he had me get back on my knees facing him -- I had no idea why. He said, \"Suck me for a minute, then place your hands under my knees, and push them up to where they touch my chest. Then pull my butt cheeks apart and proceed. Okay?\" I mumbled an \"okay\" around his dick. \n\nNone of that made sense until I watched the final video. He changed the order that things appeared to happen. He made it look like at the very beginning, after I jilled off, I blew him on my knees while he stood, then he took a seat and I continued blowing him. Then, before he came in my mouth, I pushed his legs up and rimmed him as part of the blowjob. He finished with the sequence from the first blowjob where he visibly squirted into my mouth and onto my eye, and I showed his cum on my tongue.\n\nHe put his cock back in my mouth and moved the camera so close to my face it showed nothing but my lips and his cock, and said, \"Okay, go.\" As instructed, I blew him for what felt like a minute, then pushed his legs up and spread his ass cheeks. I licked his balls, one at a time, sucked on the skin around them, and drew each one into my mouth. I raised up and gave his cock several licks, and sucked its underside from the junction with his ball sack up to the tip. I knew he wouldn't be patient with such blatant stalling for long, so I lowered my face down below his balls. I licked his 'taint,' sucked it, and swirled my tongue across it. He moaned, lifted his thighs even higher, and there it was -- his asshole. I stuck out my tongue and gathered all my wits about me not to freeze.",
        "This was it -- the $4,000 moment. I thought, 'C'mon, Amber -- I mean Louise -- isn't $3,000 enough?' I answered myself almost immediately, 'Yes-' then interrupted myself, 'No. No! Not enough!' \n\nI slowly licked downward, down some more, and further down, across the smooth skin between his cheeks, until the skin became wrinkled -- there I was, my tongue on his asshole. I continued downward, and it wasn't very far until the skin became smooth again. I went back up, and there it was again, wrinkled skin, then smooth skin. \n\nA couple of more tentative passes up and down, and I had a map of where everything was -- by everything, I mean his asshole. I homed in on the center, circled it, wiggled across it, pressed the fleshy softness of my tongue onto it. I wagged my tongue across it from side to side, I wiggled across it up and down. I licked it slowly like a flesh lollipop. I drew circles around it.\n\nI won't try to tell you it was sweet, it wasn't. It was an asshole after all. However, it wasn't as bad as I feared. Everything I was ready to endure -- a sour, gamey taste, rank odor, gooey sticky texture -- wasn't there. It tasted and smelled pretty much the same as the skin above and below it -- a trace of shower gel, an overlay of fresh sweat. It was just skin, skin with a particular texture, but just skin. \n\nNow that I was confident I could tolerate doing this, I took a deep breath, straightened my tongue as long and stiff as it would go, and plunged for depth. I thrust multiple times, mini-fucking him there, then went back to licking. I licked slowly from bottom to top, pausing to flick my tongue rapidly each time I crossed the rosebud. Honestly, as long as I didn't let my mind dwell on the details, in other words which body part of mine was touching which body part of his, it was the easiest $1,000 I ever earned.\n\nHe moaned uncontrollably. He trembled and quaked. He seemed to struggle to keep control of his hand-held camera; he zoomed in as close as he could on my tongue and mouth, concentrating on how I used them on his asshole. He must have been enjoying himself -- all through fucking my various other holes he had held his camera rock-steady, but now he couldn't seem to hold it still. It wavered up and down, left and right, all over the place, sometimes losing focus, sometimes only showing his thigh or the top of my head. \n\nAt one point he pointed it straight in my face and say, \"Where's your tongue?\"\n\n\"Up your ass.\" I felt so silly I grinned, and again it looked on the final video like I was pleased with myself.\n\nIt took several minutes to feel like I had done enough. Well, almost enough. His poor cock looked like it was about to burst, so I licked upward across his taint, sucked on his balls, licked the underside of his cock, and blew him again. When I had stroked him only three or four times I stuck a finger up where my tongue had just been, the saliva still there providing all the lubricant needed. That was all he could stand -- he exploded into my mouth, spurt after spurt of warm, creamy goo.\n\n\"Holy fuck, Louise,\" he said, gasping for breath, \"That was so fucking hot!\" He shook his head, as if he didn't quite believe what had just happened, and said, \"Best $1,000 I ever spent!\"\n\nI guess we were done shooting. Before he turned off the cameras he had me get out my driver's license again, this time without covering my name and address. I held it and the newspaper next to my face, showed it to the camera, and stated my full name, my date of birth, and the date of the shooting. He framed a close-up of my face, license, and the dateline on the paper, and asked me again if I was there of my own free will. I said, \"Yes.\" \n\nHe asked if everything I had done was voluntary and fully consensual, and again I said, \"Yes.\" \n\nThen he listed each act we had done and repeated the question, and had me answer each time. \"You took off your clothes and I videoed you naked -- voluntary?\" Yes. \n\n\"I handled parts of your body, including your breasts and buttocks, and penetrated your vagina and rectum with my fingers -- voluntary?\" Yes. \n\n\"You stimulated my penis with your mouth -- voluntary?\" Yes. \n\n\"I ejaculated into your mouth and you swallowed the ejaculate -- voluntary?\" Yes. \n\n\"I penetrated your vagina with my erect penis -- voluntary?\" Yes. \n\n\"I ejaculated into your vagina -- voluntary?\" \n\n\"You did?\" \n\n\"Maybe not. If I did, was it voluntary?\" Yes. \n\n\"I penetrated your anus and rectum with my erect penis -- voluntary?\" Yes. \n\n\"I ejaculated into your rectum -- voluntary?\" Yes. \n\n\"You stimulated my anus and surrounding flesh with your mouth and tongue -- voluntary?\" Yes. \n\nAnd then we were done.\n\nHe went from camera to camera, removing tiny memory cards. He placed them into a small storage case, which he labelled with my real initials, my porn name, the word 'casting,' and the date. \n\nI got dressed. He ogled me as long as he could, blatantly staring at my private bits as I covered them. I felt almost as energized putting my clothes back on as I had taking them off. The fear of what was going to happen was gone, but it was replaced by a deep warmth that I had overcome my fears and inhibitions. The psychic sizzle, the electric joy of doing something so taboo was almost overwhelming.\n\n\"You were fabulous,\" he said. \"Not even including the rimming, this was one of my best shoots ever.\"\n\n\"I had fun,\" I said, a little surprised that it was absolutely true. \"I'd consider doing another one.\" \n\nHe raised his eyebrows, as if he didn't hear that much. \"Well,\" he replied, \"for obvious reasons, we can only do one 'audition' video.\"\n\nI'm sure my disappointment showed. He said, \"However, I have several other sites, where I do different videos.\"\n\n\"What kind?\"\n\n\"It varies by site. Some are pretty tame, getting naked and masturbating in semi-public places, but I don't pay much for them. Obviously, the big money ones are hard-core explicit. They all involve a bit of minor pretending, although I wouldn't really call it 'acting.'\"\n\nHe paused to let me ask questions, but my thoughts were swirling too fast and hard to formulate anything coherent.\n\n\"I have this office rented for two more weeks. I'll be shooting a few more of these 'casting agent' videos. Then I'm headed for the beach. I'll be doing several videos along the line of 'young girl gets picked up by young guys' -- that's guys with an s.\" When I didn't flinch, he continued, \"And probably a couple of 'young girl or girls gets picked up by an older guy.' I pay extra for the 'older guy' shoot, the guy I use has a horse dick that makes me feel like a Vienna sausage.\" \n\nHe stared at me, trying to gauge my reaction. I tried to look inscrutable, in case he would offer less money if he thought I was too eager, or not offer me the job at all if he thought a monster dick freaked me out. \"On a different site, it's more along the lines of 'young girl gets picked up by young girls.'\"\n\nI was lost in thought. Young guys, older guy with a horse dick, young girls, it all sounded deliciously decadent. My pussy, even though so recently sated, was almost nuclear over what he described. The thought of indulging in further extreme things, of stretching my boundaries more, was thrilling.\n\nHe finally said, \"Any interest?\"\n\nWell, yeah!\n\n: : : : :"
    ],
    "authorname": "TexRiffraff",
    "tags": [
        "bulletin board",
        "butt plug",
        "anal",
        "casting agent",
        "rim",
        "student center",
        "the guys",
        "swallow"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/some-extra-money"
}