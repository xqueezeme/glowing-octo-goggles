{
    "title": "If I'm Honest Ch. 01-05",
    "pages": [
        "If I'm Honest\n\nby Corrupting Power\n\nThere's an old saying -- no good deed goes unpunished. I've always thought it was a silly saying, but apparently it's very very true. I wasn't looking to change my life. I was simply in the right airport at the right time.\n\nLondon Heathrow, if you've never been, is a nightmare of an airport. In 2017, over 78 million people traveled through London Heathrow airport, most of them international travelers like me. I should've been just like them, passing through for only a short period of time. And most travelers get where they're going on time.\n\nBut every now and then...\n\n\"Passengers of Flight 2787 from London to Seattle, we regret to inform you that this flight is overbooked, and we are looking for six volunteers to take a later flight. We are offering a $300 voucher good for another flight on our airline. If your travel plans are flexible, please aid us and accept this offer.\"\n\nThat was their first offer. Two people took them up immediately and then wandered off. About twenty minutes later...\n\n\"Passengers of Flight 2787 from London to Seattle, we regret to inform you that this flight is still overbooked, and we are looking for four volunteers to take a later flight. We are offering a $500 voucher good for another flight on our airline. If your travel plans are flexible, please aid us and accept this offer.\"\n\nThree more people wandered up and accepted the offer, then wandered off as well. It was around this time that I took notice of two people sitting right next to the terminal who kept glancing at the counter, anxiously awaiting with hope. They were a couple around my age, although they were more than a little mismatched. The woman was drop dead gorgeous, I mean she looked like she could've been a model, although she had an easy grace to her. Statuesque, blonde and with massive tits she didn't have any qualms about showing off. But, unlike every other guy in the terminal, I wasn't checking her out. I was looking at the guy.\n\n\"Christian? Is that you?\" I said to him.\n\n\"Derrick? Holy shit, man, I haven't seen you since high school!\" Christian had gotten older and bigger, but not in a million years was he in this girl's weight class. There's punching above your weight and then there's punching above your atmosphere. We'd been in theater together, some twenty years ago, and I hadn't seen him since. He was, in a word, schleppy. He looked like the less attractive younger brother of actor Paul Giamatti. And while she was dressed from head to toe in all the designer labels you can shake a stick at, he wore ratty jeans and an Aerosmith t-shirt with holes in it.\"Are you on this plane?\"\n\n\"Yeah. You must be one of the people on standby, huh?\"\n\nHe nodded. \"Me and the missus are trying to get home, but it seems like we got here late. And nobody in first class has been willing to wait for another flight.\" He sighed. She hadn't even looked up from her phone, expensive wireless headphones covering her ears. \"At this point, I'd be willing just to take any seat on the plane.\"\n\nMy face scrunched up for a second. \"Hold that thought.\"\n\nI took a few steps up to the counter, and the attendant was about to make another announcement before she saw me step up. \"Are you here to voluntarily give up your seat, sir?\"\n\n\"What were you about to offer?\" I said, mostly out of curiosity.\n\n\"A thousand dollar voucher, and a comped hotel room for the night.\"\n\n\"Hotel room?\"\n\nShe frowned, nodding, as if the very sentence had scared off more than a few potentials. The look on her face told me she was expecting me to reject the offer immediately out of hand. It had only just turned to afternoon, and the mention of a hotel room meant it wouldn't be lost hours, but a lost day or days. \"We're completely booked up on all our flights to Seattle for the rest of the day, so whoever takes up our offer will need to spend a night in hotel here, and we will have them out guaranteed first thing tomorrow morning.\" She paused, as if bracing herself for another rejection. \"Is that something your travel plans can accommodate, sir?\"\n\nI considered for a moment then shrugged. \"Sure, why the hell not. Throw in a free meal and you've got yourself a deal,\" I said as I pulled up my boarding pass on my phone. \"Derrick King. I'm in first class. And if you can push me back to midday tomorrow, that'll be fine as well.\" I held out my phone to her for her to scan, which she did. \"Can you also make sure and rearrange the first class a little so my friend Christian Bianchi can sit next to his wife? They're both on standby.\"\n\n\"Of course, sir.\"\n\nI strolled back over to Christian and smiled at him. \"So you'll be all set, man. When the plane arrives in an hour or so, you and your lovely bride'll be on it.\"\n\n\"Brother, you just saved my ass. Lemme at least buy you a drink before we get out of here.\" He reached over and tapped his bride, who was still watching some video on her phone. \"Babe, we're both on the next flight, but I'm going to have a drink with my old buddy who gave up his seat so we can both flight out, okay? I'll be back before you know it.\"\n\n\"No worries, babes,\" she said to him before turning her gaze onto me, as if noticing me for the first time. Her voice is dripping with an urban London accent. That thousand-watt smile nearly blasts me back a few feet, soft blue eyes fixing on me until I almost feel a little uncomfortable. \"You're a lifesaver, man. We just couldn't wait any longer to get home, but don't let me keep you boys. Go, have a pint and get back here before we're supposed to board.\"\n\n\"I'll make sure to have him back before you know it, miss,\" I said to her, as Christian was dragging himself up to his feet. As he's standing up, I see her reach over and squeeze his forearm with her hand for a moment. The gesture seems to have some meaning, as I see him nod back in return.\n\nWe walk down a couple of gates to a small bar, talking along the way. \"So what the hell are you doing in London, Derrick?\"\n\nI sigh, shrugging a little. \"It's a passthrough point, mostly. I did a little networking while I was here, but I spent a week in Mumbai, setting up a call center there before flying over to Dublin to set up another call center there. After all of that, I figured I'd get a day worth of work here in with the local office before I flew back to Seattle. I'm supposed to be back at work on Monday, but when you're the boss, you can tap out for an extra day if you really need to, and what kind of friend would I be if I didn't help out an old classmate?\"\n\n\"You haven't seen me in almost twenty years, Der,\" he laughed. \"I wouldn't have blamed you if you didn't even recognize me.\" We stepped into the little bar and moved up to the counter. \"Pint of Guinness and...\" He looked at me, prompting my order.\n\n\"Full Coke with a shot of your strongest rum in it.\"\n\n\"Why'd you say it like that?\"\n\n\"If I say rum'n'Coke, I'm going to get a Collins glass half full of rum and half full of Coke,\" I said as I slipped up onto the barstool. \"That's how the majority of people like it, and that's fine, but I know what I like, so I've learned to be upfront about it.\"\n\nHe smirked as he slid up onto the stool next to me. \"Sounds like a hard earned lesson. I notice you don't have a wedding ring on. Never got married?\"\n\nI sighed, shrugging a little. \"Came close once, but nah. Haven't really even been dating for a good while. Too many bad experiences.\"\n\n\"Oh come on. Everyone has a couple of bad experiences in their back pocket, fun stories of dating horrors gone awry. How bad could it really be?\"\n\n\"Caught my last girlfriend four years ago cheating on me with one of the higher ups at the company I work for.\"\n\n\"Ouch. Hopefully it didn't work out for them?\"\n\n\"They're married now.\"\n\nHe winced again. \"But you don't see them?\"\n\n\"He's a vice president above me. I don't directly report to him, but he's in my orbit. And I have to endure being around them at holiday parties and whatnot. So that's not great.\"\n\n\"That's a kick in the ass, if you ask me.\" The bartender set the drinks down in front of us. \"And, what, you gave up on dating since then?\"\n\nI grinned. \"Not everyone has the luck you do to pull a woman a billion times out of their weight class. How'd that happen, anyway? You a secret investor in Amazon I've never heard of or something?\"\n\n\"I had to try a lot of women before I met up with Natalie. That something you'd be willing to do?\"\n\n\"If half of them were as pretty as your wife? Hell, I'd go on dozens of strange dates. But,\" I said, picking up my drink, \"as I already said, not everyone has your luck.\"\n\n\"You can have my luck,\" he said, taking another sip.\" \"If you want it. But you'll need to give it to someone else when you're done with it. When you've found the one.\"\n\n\"If I've found the one, what would I need dating luck for? Sure, I'd pass it on. But how would I know I've found the one?\"\n\n\"Because this'll come off,\" he said, hitting my right wrist as I felt cool metal press against the skin. \"You're welcome? I'm sorry?\" He laughed a little bit, shrugging. \"May you live in interesting times.\"\n\nI glanced down at my wrist and found there was a silver bracelet on it, almost like one of those medical bracelets I'd seen on patients when I went to visit my great grandfather, before he passed away. A bar with a link wrap. On the bar were written two words in Latin. SOLAM VERITATEM. \"What the hell is this?\"\n\n\"My luck, which I'm passing on to you.\" He lifted his glass again, finishing off his pint far more quickly than I'd have been able to. \"Any woman you're interested in will be interested in you. They'll give you a shot. But it won't work out. A lot. And when it does, you'll know why. Sometimes it'll surprise you. Sometimes it'll shock you. Hell, sometimes it'll down right anger you, but you're always gonna know why.\"\n\n\"What the hell are you talking about?\"\n\n\"The gift of the band, or curse, depending on how you look at it, I guess. The words are Latin,\" he said, reaching into his pocket, pulling out fifty Euro, tossing them onto the counter. \"Took me a while to get it translated. It either means 'the only truth' or 'only the truth,' depending on who I asked.\"\n\nI pulled at the bracelet, but the latch felt completely stuck. \"I can't take it off.\"\n\n\"Yeah, like I said, you're welcome and I'm sorry. Don't worry, it'll come off when you've found the one. Then you need to pass it on to the next person you meet who seems like they're in need of it.\"\n\n\"How long ago did it come off you?\"\n\n\"About two weeks ago.\"\n\n\"And I'm the first person in need?\"\n\nHe shrugged. \"It's a subjective thing, I guess. I did try and put it on someone before you, but it didn't latch shut, so I guess that wasn't the right person to give it to. Anyway, safe travels. And enjoy the ride. It's a wild one.\"\n\nHe headed to the door of the pub, but I interrupted him one final time. \"How long did it take you? From when someone gave it to you to when you took it off?\" I asked him.\n\n\"Four years,\" he answered. \"The guy before me said he'd been wearing it for over a decade before it finally fell off, but the guy before that only wore it for six months. No idea before that.\"\n\n\"You don't really expect me to believe all this nonsense do you?\"\n\nA wide grin blossomed on his face. \"Not yet. But you will, my friend. You will.\"\n\nAnd with that, he stepped out of the door, leaving me alone with my drink.\n\nI wanted to go rushing after him, to ask him to explain the joke to me, except he hadn't seemed like he was joking. And as much as I fiddled with the bracelet, it showed no signs of coming off. I was surprised by the tenacity of it. I tugged and tugged, but the bracelet didn't budge in the slightest. It was a little frustrating.\n\nThe flight had finished boarding and was pulling away from the terminal. I hadn't thought to get all my information for my flight tomorrow or my hotel tonight before we'd gone for a drink, although they assured me I could come back and get it a little bit later, so there I found myself.\n\n\"Hey, I'm Derrick King. I'm back to get my hotel information and my flight set up for tomorrow.\"\n\n\"Certainly, sir.\"\n\nOver the next few minutes, the attendant set up the hotel room for me, over at the Hilton, as well as a shuttle to and from the airport, and got my flight scheduled for tomorrow. He also makes sure to get me my voucher for future flights, something I'm sure I'll find a use for at some point. I mean, technically I didn't even pay for these flights, so it'll be nice to have a trip that's entirely on my own. All my luggage was already loaded, onto the previous flight so it'll be waiting for me back in Seattle when I get there in a few days. That means I'll end up spending a few days in the same set of clothes, but hell, I'll spend most of that time on planes anyway, so it doesn't really matter.\n\nDuring the shuttle ride over to the hotel, I sent a couple of emails to people in the office, letting them know that travel had fallen through, and so I would be out of country for an extra day. I was still working during some of the flight time, but I wouldn't be on local time. My team had grown accustomed to that as of late, so I expected everything would run smoothly.\n\nWhen I got to the hotel, there was a lovely receptionist waiting for me, who apologized for my delay, and said if there was anything she could do to make my stay more hospitable, I only needed to ask. She was far too good looking to be working at a hotel airport, blonde hair in wavy bunches running down past her shoulders and deep blue eyes lined in makeup to draw a viewer's eyes to them. She was fit and slender, but also no taller than my shoulder. There was a bit of a gap between her two front teeth, but it was a minor imperfection in a rather charming package. The name tag just above her breast revealed her name as Brenda.\n\n\"Well Brenda, is it okay if I just put in an order for room service here and now, so I don't have to wait too long? I'm starving, so if someone could just send me up a chicken sandwich and some chips with a Coke, that'd be grand.\"\n\n\"No problem at all, sir,\" she said, clicking with her mouse to set up the order. \"It'll be up at your room before the hour is up.\"\n\n\"Cheers.\" I grabbed my roomkey, my laptop bag and my wheelie carry on bag and headed to the elevator.\n\nThe hotel room I'd been given was on the top floor, and seemed more like a suite than a singular hotel room. The bathroom itself was larger than most hotel rooms I'd had over the past year, and there was a whirlpool in it. I mean, I'd been inconvenienced, but not so much that they had to throw a Jacuzzi at me.\n\nI put wheelie next to the closet and my laptop bag on the desk over near the couch, before moving to slump onto the couch, as I kicked off my shoes. I reached over and grabbed the remote, turning on CNN, just to have something in the background before I fished out my laptop, starting to get to work again.\n\nI realize I'm making myself sound like a workaholic, but at that point in my life, back in 2017, I certainly was, and there was plenty of work to be done. Setting up a call center is a pain in the ass. Setting up multiple call centers at once sucked.\n\nThere were base line scripts to be written, protocols to be established, escalation procedures to be detailed, and workflow that it seemed like nobody had given a moment's thought to. This set of trips had been to hire key personnel, the head of each future call center, and get them up to speed. I'd been doing logistics and planning, from the highest level things such as location and facilities to the ground floor details like making sure each call team member knew not to provide any personal details to callers beyond their name.\n\nI'd been working on my laptop for twenty minutes or so when there was a knock on the door. \"Room service!\"\n\nI stood up and folded my laptop closed, setting it on the desk, before I moved over to the door, opening it to see Brenda standing there behind a push cart with a silver dome atop of it, a bottle of Coke next to it, as well as an ice bucket and a pair of glasses. \"You didn't have to bring it up yourself, Brenda,\" I laughed, holding the door open for her as she pushed the cart into the room.\n\n\"I did say I would do anything to make your stay more hospitable, Mr. King,\" she said, pushing the cart over next to the desk.\n\n\"Sure, but I'm sure you should be keeping an eye on the front desk, not bringing a chicken sandwich up to some weary traveler in his room.\" I reached into my pocket, and I didn't have much Euro left, so I took a tenner and held it out to her. \"Thanks for doing it, though.\"\n\nShe walked past me and over to the door and opened it, reaching around to hang the \"do not disturb\" on the door handle before pulling it closed again. Then she turned the deadbolt and put on the latch chain before turning back to me, a wicked smile on her face, as she kicked off her shoes, her legs in long dark stockings beneath a black dress.\n\n\"I'm not done taking care of your needs yet, sir.\" She moved over to me and even though she was so much smaller than me, she maneuvered me around to push me onto my ass on the couch. She wheeled the cart closer and lifted the dome off the top, revealing a lush looking chicken sandwich with a large side of chips. (That's fries for those of us in America. They call fries chips and chips crisps. You learn the lingo pretty quick.) Then she popped the top off the bottle of the Coke and poured some into a glass. The cart was just over the left shoulder of the couch arm, and about the right height to use it as an impromptu table. \"Now, enjoy your sandwich.\"\n\nI tilted my head to one side. \"Are you going to watch me eat?\"\n\n\"No sir,\" she said, as she moved to stand in front of me, then dropped down to her knees. \"Eat up, before it gets cold.\"\n\nHer hands reached up and unbuttoned my jeans, my breath catching in my throat a moment, But she stopped there and looked up at me expectantly, so I finally turned to look at the food and picked up the chicken sandwich. As soon as I did, she unzipped my jeans and reached in to fish out my cock, running her tongue along the length of it, a fiendish purr rolling from her throat as she did. I reached down with my other hand to run my fingers along the back of her head, but she politely reached up and pushed my arm over towards my food.\n\nFor the next several minutes, I was in a life-and-death struggle, enjoying a hell of a chicken sandwich as well as a premiere class blowjob, her head bobbing up and down in my lap, and any time I wasn't eating or drinking, she would cease her motions, and those blue eyes were turn up to me expectantly, almost scolding me for not finishing my meal.\n\nOnce the sandwich was gone, I had to resort to getting a few french fries at a time, until the plate itself was clean, and miraculously enough, I hadn't blown a load against the back of this poor girl's throat, although it had taken some truly Herculean effort on my part, especially when I felt her fingertips cradling my nuts.\n\n\"Oh look,\" she said. \"You've finished your meal. Now it's time for dessert.\"\n\nBrenda brought herself up off of her knees and lifted one of her legs to place a foot along the armrest of the couch. I tried to begin to stand up, but she lifted her foot and pressed on my shoulder until my back was flush was the couch again. Then she moved her foot back to the armrest, and started to slowly draw up the dress, exposing more and more of those legs encased within black stockings. After a moment, though, nylon gave way to bare flesh, and it became clear she was wearing a garter belt beneath the dress. And, as they say, no knickers. She had a nicely trimmed V of hair above her pussy, which I could swear was dripping.\n\n\"Just sit there and let me tend to all your needs, Mr. King.\" She slowly dragged her foot provocatively off the couch and placed it down on the carpet of the hotel room, her stance wide before she started swaying her hips, dancing to music I couldn't hear. Slowly, she pivoted around, baring that toned ass to me, before she slid up and into my lap, pressing her back against my chest, rubbing the cleft of her butt along my cock. \"You're all pent up,\" she said, leaning her head back onto my shoulder, one hand reaching up to press against the back of my neck.",
        "Her other hand, however, was where the real magic was happening. She reached down between her thighs and pulled my dick forward. It reminded me a lot of the last time I'd gotten a lapdance in a strip club, except, of course, that my dick was out this time. I could feel her fingertips pulling me back, the topside of my shaft nestled against her twat now. \"Just let go any time, Mr. King.\"\n\nAs she said that, her hips lifted up just enough for her to line the head of my cock up against her pussy, and then she pushed down firmly, sliding into my lap, her legs on either side of mine, as I felt that vice tight wetness engulf my cock. I couldn't help myself and a dusky groan of pleasure burbled out of me. \"That's it, Mr. King. Let it out.\"\n\nHer hips started rolling while sliding up and down, fucking me without letting me do an inch of work in the matter. I tried to reach up and cup one of her tits through the dress, but she pushed my arm back down to my side, and started bouncing in my lap faster.\n\nThis was crazy, absolutely bonkers, but it'd been a long time since I'd gotten laid last, so while I'd struggled to make it through the blowjob without immediately popping my top, this girl was hell for leather on making sure I didn't hold back here. The pace had started fast and only gotten more frantic, her blonde curls falling forward to drape over her face, until finally I couldn't hold back any longer.\n\nAs I tensed up, Brenda must have sensed it, because she thrust down hard, one hand gently squeezing on my balls, even as they drew up. I must've blasted such a thick load of jizz inside of her drenched cunt that she felt it in the pit of her stomach, and that made her squeal and shiver atop me.\n\nAfter the trembles had stopped in both of us, she slipped forward and tugged her dress back down, then turned around and fell back to her knees, moving to lick my cock clean, until she'd gotten every droplet of my juices and hers off of it, before tucking my dick away, slowly drawing the zipper up and rebuttoning my jeans for me.\n\n\"I hope you found the service satisfactory, Mr. King,\" she said as she stood up again and moved to put the silver dome back on the cart.\n\n\"That was amazing, Brenda, but certainly far and above what was called for.\"\n\nShe pushed the cart to the door, unchaining the latch and turning the deadbolt unlocked again. \"I had a lot of fun as well, Mr. King, so I'm glad you did also. But if I'm honest, you're too old to be my type, and I work here so that I can land some wealthy imbecile as a husband. If I'm honest.\"\n\nBrenda then opened the door and pushed the cart out into the hallway. \"Enjoy your stay, sir!\" she was with a smile and pulled the door closed.\n\nI remember thinking, \"What in the hell was that?\"\n\nIt was my first encounter with the unvarnished truth. There were many more to come.\n\nChapter 2 -- Colleen\n\nI didn't know what the hell had happened, but I spent much of the night thinking about it. It was clear that Christian had been sincere in his comments that this bracelet I had latched around my wrist was going to change my life. I tried to think back to that conversation I'd only half been paying attention to at the time, because now it seemed like the most important thing that had ever happened to me. He'd told me... what had he told me... he'd told me that any woman I was interested in would be interested in me. Something about how I was going to have to get used to unconditional honesty.\n\nI realize I haven't told you much about myself, but the most important thing to know about me is that I think about problems in a very particular way. For lack of a better expression, when presented with any sort of challenge in my life, I always approach them the same -- work the problem.\n\nStart with what you know. First, I know I can't take the bracelet off, short of cutting my own hand off. That seems a bit extreme, so let's put a pin in that for now. I might be able to get it off if I dislocated my thumb, but then again, it's on tight, so maybe not. It has very little wiggle room, which is surprising, considering Christian's arms are much thicker than mine. All of which leads me back to the same point, his statement that the bracelet was \"his luck.\"\n\nLuck. What an odd choice of words. A gift or a curse, he'd said. He almost made it sound like magic. I'd grown up loving stories of prankster faeries and magicians, but never once did I believe any of it could be real. But Occam's Razor and all that.\n\nSo the obvious answer was to treat the idea that it was magic like it was fact, whether or not it was. Based on the previous night, it sure felt like it had to be real magic. I couldn't think of any reason that the front desk clerk would throw herself at me and then leave just after she told me why it wouldn't work. I hadn't asked. Hell, I hadn't said much of anything. I'd been close to speechless the entire time.\n\nNow obviously, it couldn't be as simple as any woman I wanted to fuck would want to fuck me. There's a movie star in particular named Alice Karteaux I'd had a crush on for years, and she hadn't been knocking down my door this morning, so I assumed whatever power the bracelet had, it had a range limit of some kind.\n\nI'd gone to breakfast, and there had been a particularly fit looking young woman having breakfast by herself, and she hadn't rushed over to have at me, so it seemed likely the bracelet also had a recharge time of sorts, although maybe I just didn't find the girl attractive enough. I was guessing it was a time thing, but I didn't have enough data points to confirm that. Another theory for testing.\n\nChristian didn't mention where he lived these days, so I wasn't even sure where to look for him to call him and ask him for more information. Seattle was a common international entry point, and people would catch flights from there to wherever they were eventually headed after they were in country again. He didn't seem to be on Facebook, and a casual internet search turned up far more instances of the name Christian Bianchi than I expected to find. Besides, he was probably still in the air at this point. Given enough time, I could probably track him down, but that didn't answer questions I had now.\n\nAll throughout breakfast, I was still trying to work the problem. The bracelet certainly looked new, but it had an old feel to it, something I couldn't put my fingertip on. I looked up the phrase on the internet, but it was surprising how I couldn't find any concrete information on it. Christian was right -- the translation was ambiguous. Latin was a flexible language, and without much in the way of context, neither translation was definite. It wasn't a phrase that had been used in any historical form I could find, but I have to admit, I wasn't even entirely sure where to look. I'm in social engineering, not Roman history. I made a note to ask a college professor about it.\n\nBy the time I was headed back to the airport, I'd started to reconsider the option that the previous night was merely a fluke encounter. It seemed improbable, but I suppose I just hadn't gotten my head around the idea that magic could be real either. There was still some, albeit unlikely, chance that the whole thing with Brenda at the hotel had been a setup on Christian's part, some sort of practical joke or a way of saying thank you that he could deny.\n\nOnce at the airport, I waltzed through security -- I'd checked my suitcase in yesterday, and it was waiting for me in Seattle. I was also very used to getting my travel bag past the checkpoints, so I had my shoes off before they'd even asked. Beyond that, I put my shoes back on, tucked my laptop back into its snug spot and slung my bag over my shoulder before heading to the Lufthansa terminals.\n\nI don't normally fly first class, but the company had offered for this trip, considering how many long haul flights I was putting in, to bump me to first class. Don't think we're making a habit of it, they said, but since you're basically flying around the world for us, we're going to classy it up for you. Just this once.\n\nFlying across an ocean is a great deal easier in first class, let me tell you. I flew from Seattle to Hong Kong first class for the first time a little more than a week ago. I'd never flown first class before, and it was going to be difficult to go back. Instead of being cramped into a tiny little bucket seat, I got to fly in a lounger chair with my own little television. The flight from Hong Kong to Mumbai I'd been in my own pod, with little cubicle walls erected to give me privacy from all the other first class passengers, taking it one step further. It hadn't even been that long of a flight, barely six hours. From London to Seattle was nearly twice that. Not quite the fourteen hour flight Seattle to Hong Kong had been, but still more time than anyone really wanted to spend in an airplane.\n\nI arrived nice and early. If they wanted to delay me again, I wouldn't be able to take them up on it this time. Work had been okay with a few extra days lost to travel, but two days in a row stuck in London without getting much work done wouldn't be looked upon kindly. London Heathrow was massively frantic, lots of people running between terminals to get to one flight or another.\n\nSure enough, as it got closer to departure time, they had oversold the flight by four seats, but I paid it no mind. I mostly just kept my head down, reading a book on my iPad. John Scalzi had just dropped another novel, and I'd downloaded it before I'd headed out, as well as a handful of movies -- John Wick 2, Logan, Thor: Ragnarok and Arrival -- so that as long as I had power, I wouldn't be bored, if I was awake the whole time.\n\nEventually they'd found some other suckers to take them up on their delays, and started loading us onto the plane. The plane was an A340-600, and there were only eight spaces up in first class, so they loaded us on first. I wasn't paying much attention as we moved into the small area at the front of the plane, making my way to my seat.\n\nThey weren't full cubicles like I'd been on earlier, but it was a very comfortable lounger chair which apparently converted into a full bed if I wanted. There was a single seat to my left, with a divider that could be raised to separate us.\n\nI got a whiff of perfume a couple of minutes after I sat down and glanced over to my left, and did everything I could to keep my jaw from dropping open. Sitting in the pod next to mine was Colleen Yi, a stunning woman in her late twenties.\n\nColleen was Asian in descent, Chinese I think, but had been born and raised in London. She was slender but muscular, a good look on her. She was an actress who had gotten her big break on a sci-fi show of no small renown in England that had a cult following back in the states. She'd only done a year on the show before leaving, trying to get a career in movies. She'd gotten a few minor parts, but nothing that had taken off to put her on easy street. Last I had heard, she was going back to television again with a sci-fi show being filmed in Vancouver based on a comic book I was vaguely familiar with called \"Distant Lives.\" However, one of the films she'd done earlier had been with a director I'd followed for a long time and was one of my favorites in the past five years, which was how I'd become a fan of her.\n\n\"A Death In Red\" was sort of part Matrix and part Mad Max, about a trio of thieves that had stolen the wrong McGuffin from the wrong villain. Colleen had played the part of Indigo, one of the thieves, and had given a hell of a performance, from the complicated martial arts combat to the gut wrenching pathos in her death scene. (Sorry, spoilers, I guess.) The film hadn't gotten much attention because the special effects hadn't been as good as they'd should have been, and the script definitely went off the rails in the third act, which included a bizarre twist ending that made absolutely no fucking sense. It was bugfuck in a fun way, though, and if you suspended your disbelief, it made the whole film even more of a crazy ride, so I had a soft spot for the film.\n\nShe'd been dressed scantily in the movie, but as far as I knew, she'd never done an actual nude scene, and I'd done the research. You do that, don't you? See a celebrity in a movie or on a television show and wonder if they'd ever been nude on film before, and gone to track it down if they had? Well, I do that, sometimes, and as far as I could tell, Miss Yi had decided she hadn't felt like doing nudity as of yet, a decision I had to begrudgingly admire.\n\nI wanted to say hello, to tell her that I was a fan, but I was certain she probably heard that all the time, and the last thing I wanted to be was an asshole who was bothering her like some drooling fanboy. I also remember thinking to myself that if this bracelet was the real deal, I wouldn't mind it rubbing off on Miss Yi.\n\nShe'd been very vocal in interviews about how difficult it was for Asian actors to get fair shakes in Hollywood, and I wondered if that had affected her decision to go back to television. \"Distant Lives\" was going to be on HBO, so that primal part in me had considered if she was going to be nude in the show, but I tried to stuff that down.\n\nDon't look over, don't stare, I kept telling myself, but the scent of jasmine, lilac and sandalwood kept drifting into my nostrils, so I turned my eyes back down to my book once more and turned up the volume on my headphones just a little more. I had Fugazi on, I remember, who aren't exactly the most soothing of bands.\n\nAll of which meant I damn near jumped into the air when I felt her fingertips patting me on the forearm, trying to get my attention.\n\nHer touch was unfairly soft.\n\nI tugged my headphones off my ears and pushed them down to my neck. \"Sorry, was the music too loud?\"\n\n\"No,\" she said to me with a broad smile. Her voice had a lovely English accent to it, something she was very adept at hiding, if a role called for it. \"I was just wondering what you were reading.\"\n\n\"Oh. Ah, it's called \"The Collapsing Empire\" by John Scalzi.\"\n\n\"The guy who wrote \"Old Man's War?\"\n\n\"Yeah, that's him. I'm still early in it, but it's more space opera and it's still great.\" It was around this point that I noticed that her hand hadn't left my arm. \"Have you always been a sci-fi fan, or did \"Warp Agency\" bring you into the fold?\"\n\nHer face blushed a little. \"Ah, so you know who I am. Are you a big fan of the show?\" That hand didn't move. If anything, it squeezed my arm a little more.\n\n\"Well, big fan might be a bit much. It's campy fun, depending on who the showrunner is at the moment. You had a decent one, I think. And you were just getting started in your career, so I don't blame you for only doing a season. Lots of people got pigeonholed by sticking around too long there. I thought you were amazing in \"A Death In Red,\" though. I'm a big fan of Herbert Frost's movies, so I ended up seeing that a bunch of times. He's such a genre chameleon, and yet he's great at all of them. I was worried that the wire-fu/bullet ballet might be a bad fit, but you and the others made it all work so well.\"\n\n\"Thanks. I've always been a bit of a geek girl, but Herb really broadened my horizons. He and I dated for a year or so, and he was I guess you could say a fan of the obscure but great stuff. So he introduced me to a lot of things I might not have found on my own. You really liked \"A Death In Red\"? I've been to a couple of conventions and I don't think anyone's mentioned it to me once.\"\n\n\"Eh, the problem was that he didn't have the budget of say George Lucas or Peter Jackson for his special effects, so it sort of stayed an art house film instead of getting a big audience. I mean, it also doesn't end well for all of the protagonists, and down endings generally push back against bigger crowds. Their loss, I say.\"\n\nShe leaned over a little more, which let me get a better look at her. She was dressed casually, in a zip up track top and track suit bottoms, with a blue silk scarf around her neck. Her black hair was pulled back into a ponytail that stuck out in the back gap of an Oakland A's baseball cap. It was typical celebrity camo. \"So, you're part of the geek tribe, yeah? Have you read any of \"Distant Lives,\" the comic that's getting adapted into a show I'm in?\"\n\nI shrugged. \"I haven't read it, but I've heard about it. It's supposed to be pretty good.\"\n\n\"Wait, if it's supposed to be pretty good, why haven't you read it?\"\n\n\"Ah, well, not to speak ill of anyone, but I don't like the art style. I read some comics, but I'm particular about how the art looks, and David Jefferies has this style where everything looks like it was drawn in crayon, and doesn't have much definition. I usually like the writer, Carrie Glass, but I simply cannot stand the way Jefferies puts it on the page, so I never got around to it.\"\n\n\"Can I ask a favor? I've got the script for the pilot here. Do you think you could read it?\"\n\n\"Sure, okay,\" I said, as she hands me a stack of papers bundled together inside of a three ring binder. \"Are you sure you won't get in trouble for this?\"\n\n\"Well, I'll have to keep an eye on you and make sure you don't take any pictures of it or anything. Besides, if there's a leak, I'll know exactly who it was.\"\n\n\"Oh yeah?\" I said. \"Who am I, then?\"\n\nShe giggled, honest to god giggled, and cringed, her thumb pressing softly against the inside of my arm. \"I'm such a ditz sometimes. I didn't ask your name. Obviously, I'm Colleen. My friends call me Coll. You are?\"\n\n\"King, Derrick King. My friends call me DK or Deke. You can call me whatever you like.\" She handed me the script, and smiled at me. \"I'm not an actor or a writer or anything like that. I've got a very boring job that doesn't interest, well, anyone. Even me.\"\n\nShe laughed again at that, as the stewardess came through, checking to see that we were buckled in. \"Just read. We can talk about it when you're done.\"\n\nI ignored the usual spiel the airlines all go through pre-takeoff, and before I knew it, we were up in the air, headed across the Atlantic. I don't read a lot of scripts, so it took some time to pick up a bit of the framework, but once I got past that, I could start to fill in the holes. The plot was solid, the dialogue was good if a bit clunky in places and the story seemed entertaining enough. There was an act two twist that seemed a little out of nowhere, and frankly the ending of the pilot seemed a little predictable, not to mention they lampshaded the hell out of it in advance.\n\nThey were just about to dim the cabin lights when I finished it.\n\n\"Well, Deke, what do you think?\" Colleen had leaned practically over the partition, both of her hands on my arm. \"There's problems, aren't there?\"\n\n\"It's good,\" I said, \"but I think you could make a few trims and adjustments, maybe less obvious foreshadowing for the ending and a little more supporting details to make the twist feel a little less... sudden. Just have a writer give it a quick pass and I'm sure you'll have it in tip top shape as soon as you need it.\"\n\n\"We start shooting in two days.\"\n\nI winced a little. \"It'll be tight, sure, but I'm sure a good writer could get it done in time.\"\n\nShe leaned in and pressed a kiss against my cheek. \"I knew something was just a little off about it. Thank you so much for not telling me I'm crazy. You'll have to let me make it up to you.\"\n\n\"I wouldn't mind visiting the set or something.\"\n\n\"Let me think about it, and I'm sure I'll come up with something.\"\n\nAbout an hour later, the staff brought the lights back up and served food, a nice little chicken Parmesan. Colleen had been watching something on her iPad for most of that time, but as the food was presented to her, she pulled the earbuds out.\n\n\"So I've been thinking...\" she said to me, as she devoured the food. \"In an hour, I want you to meet me in the first class bathroom. The one on my side, here on the left.\"",
        "\"Excuse me?\" I said.\n\n\"Keep your voice down,\" she hissed at me, a conspiratorial smile on her face. \"One hour from now, left bathroom. I'll leave the door unlocked.\"\n\nAnd then she put the earbuds back in.\n\nTen minutes later, the stewardess came by and picked up the trays. Ten minutes after that, they lowered the lights in the cabin again. Forty-five minutes after that, almost the entire chamber was quiet as every person in it, except for me and Colleen, was asleep.\n\nThree minutes after that, Colleen got up and headed forward to the first class bathroom on the left.\n\nI waited a minute or so, and glanced around the cabin, making sure that everyone was asleep, or at least seemed like they were. Then I very quietly got up and moved forward. I'd never really thought much about joining the mile high club, but it certainly was the kind of thing everyone fantasizes about at least once. I had to walk through the food storage area, but none of the stewardesses were there, so I could walk around to the other bathroom. The door was closed, but it wasn't locked. So I pulled on the door.\n\nVery suddenly, Colleen grabbed me and yanked me into the bathroom, pulling it closed behind us, flipping it to locked. \"It'll be tight,\" she whispered into my ear, \"but we'll get it done.\"\n\nHer lips pressed hard against mine, and that intoxicating scent filled my nostrils as her tongue invaded my mouth. Her hips were jammed up against me and I felt one of her legs lift up to wrap around my waist.\n\n\"God, this is so risky, but I don't fucking care,\" she said. \"I just fucking need it. I fucking need you.\"\n\n\"Are... are you sure about this?\"\n\n\"Don't talk so much. Let me do all the talking.\" Her hands reached down and unzipped the track top, revealing a black sports bra on beneath. She'd left the scarf and hat back at her seat, I guess, or maybe they were on the floor. I didn't really know. She reached down and tugged the bra up and over her head, exposing those perky small tits of hers, capped with dark brown nipples, her stomach toned and flat. \"Am I pretty? Tell me I'm pretty.\"\n\n\"I thought you said not to talk.\"\n\n\"You can tell me what I want to hear.\" Her fingertips reached down and grabbed my jeans, unbuttoning them. \"Tell me.\"\n\n\"You're fucking gorgeous. Insanely beautiful. A thousand times out of my league.\"\n\n\"Mmmm. That'll do. And even if that's true, I'm still going to fuck your brains out. You don't think my tits are too small? Casting agents have been telling me for years to get a boob job.\"\n\nI shook my head angrily. \"You tell me who the fuck they are and I'll beat the shit out of them myself. You've got perfect tits for your frame, lean and lithe. It's despicable, this insistence on some casting agent's ideal woman. If you got those big basketball tits they seem to want, how the hell would you do all those kick ass stunts?\"\n\nShe grabbed my shirt and pulled me in to kiss me again, fierce and claiming. \"Finally, a man with a bigger brain than a dick.\" Her hand reached down to push down the front of my unbuttoned jeans. \"Although maybe I spoke too soon. Jesus, what kind of weapon you packing there?\"\n\n\"It's not that big,\" I said. \"You don't have to flatter me.\"\n\nHer hands pushed my jeans and boxers down to my knees, as if she couldn't wait any longer, her slender fingers wrapping around my cock, her eyes widening as she looked up at me. \"I'm not. You're fucking thick. That boring thing you do for a living isn't porn, is it?\"\n\nI rolled my eyes a little at her. \"Now you're going overboard.\"\n\nShe kissed me again, as her fingertips started to stroke my dick gingerly. \"I'm really not, Deke. It's like a fucking Pringles can, it's so fat. I'm definitely gonna feel it going in.\" Her fingers moved to the head of my cock, and a bit of precum oozed onto her skin. She lifted those fingers to her lips and licked them clean, moaning a little at the taste of me. \"I'm going to say some kinda freaky shit, so just go with me on it, okay?\"\n\n\"Freaky?\"\n\nShe giggled again. \"Nothing super crazy, but if I'm gonna live out this fantasy, I'm gonna say all the shit that pops into my head. That's okay, isn't it? They're just words.\" I had been letting her do all the touching, and she seemed to sense my hesitation, so she reached down and grabbed one of my wrists, taking my hand to push down the front of her track pants and beneath what felt like lacy panties, across fine hair and right to her snatch, as she moaned a little. She was searing hot to the touch, and damp against my fingers, her hips grinding into my touch. \"Feel how you make me? You gotta take care of that leak, plug it up good.\"\n\nI curled my middle and ring finger up a bit and pushed them inside of her pussy, feeling her clamp down on my fingers as she jammed her lips against mine, using my mouth to stifle the sound of her moan. \"Like this?\"\n\n\"Oh fuck, that's good, but it's not enough,\" she said, pushing her pants and panties down to her ankles, stepping out of them. She'd apparently also left her shoes back at her seat, because they slid right off. \"I need this monster,\" she said, still jerking on my dick. \"And we gotta hurry. The stewardess could come by at any minute. So give it to me. Press me right up against this wall and fuck a hole in me.\" She curled one of her legs around my waist as I stepped in, and then hopped up, snaking the other leg to pincer me, my hands holding her pert ass. \"Do it, you animal.\"\n\nI had to shift and adjust, and I could feel her squirming to get me lined up, and eventually, I could feel the head of my cock against her pussy, so I pushed forward, sinking my dick inside of her, as she buried her face in the crook of my neck to muffle a squeal I was terrified was too loud.\n\n\"You okay?\"\n\n\"Ow ow ow fuck fuck fuck you're fucking big it fucking hurts.\"\n\n\"You want me to stop?\"\n\nShe pulled back, her face defiant right before mine. \"You stop and I'll yell rape. I fucking love that it hurts, that it aches, that it makes me feel like it's the first fucking time, and I'm a teenager again getting her cherry popped on prom night. C'mon, fuck me already. Plow me. Break my cunt open and carve your fucking name in it.\"\n\nI drew my hips back a little bit and then pushed back forward, letting her own weight slide her down further onto my cock. I'd never fucked someone standing up before, and it was a little bit of a challenge, but her heels dug into my ass each time I thrust forward, like she was trying to shove me deeper.\n\n\"That's it, motherfucker,\" she hissed into my ear. \"Give it to me. Faster. Harder.\"\n\n\"You're light, but this angle is making it difficult.\"\n\nNo sooner had I said something then she'd uncoiled one leg down to stand, slipping up and off my cock, before she put her other leg down and then turned around, placing her hands on the basin of the sink, her face and tits looking at me in the mirror. \"Then give it to me like this. Just fuck me.\"\n\nIt was a tight fit, but I moved in behind her as she lifted her left foot and placed it on the edge of the toilet, to give me a better approach. I lined the head of my cock back up against her dripping slit and pushed back inside of her. She lifted one of her arms up to brace it against the mirror, biting into her forearm to strangle out the noise from her throat.\n\nEach pull back of my hips nearly pressed me against the wall of the bathroom, and each forward thrust made the mirror vibrate a bit. I'd often wondered if there was some sort of security camera on the other side of these mirrors, and if so, whoever was watching them would certainly be getting a bit of a show.\n\nI snaked my arm down and around her waist to rub my fingers down on her clit, and she squealed again into her forearm before pulling her face back. \"That's it, you fucking bastard. Hammer that cunt like it owes you fucking money. Beat the shit out of it. Don't be a wimp, fucking nail me.\"\n\nI did my best, pumping my cock in and out of her, but even with her one leg raised, there was only so much space to work in. Eventually she turned and bent forward a bit over the toilet, the mirror to the side, so she could thrust back into me. I had to be especially careful at that point because the door was right behind me, and if she slammed back too far into me, it would draw attention.\n\nWe made our best of it, and she must've certainly been wound up because I felt her start to spasm and clamp down on my cock, burying her face in the crook of her elbow to muffle that harried moan as best as she could. I felt the shivers begin to ease up in her body and I started to slow down, at which point she turned to look at me over her shoulder, her eyes intense and focused. \"Don't you fucking dare stop. I want that hot fucking cum in my twat, you fucking bastard. I wanna feel you nutting inside of me, filling me up with spunk. I wanna feel you breeding me like the eager little bitch I am. C'mon you monster. Cream me up. Knock me up. Do it, daddy. Creampie your slut so fucking good. Do it, you animal. Give it to me. Cum in me like I'm a fucking cumdump. Knock me up. Breed me. Breed me!\"\n\nWell, with her constantly coaxing me like that, I couldn't help it, and thrust forward hard, making sure my cock was as deep inside of her cunt as I could get it, as I felt my load burst, just painting the back of her snatch with my spunk, and as soon as that first jet left me, she started quivering again, moving to bite on her forearm again. Four or five more blasts, and I was spent.\n\nI kept my cock in her as long as I could, but felt myself start to soften quickly. Before yesterday, it'd been two years since I'd gotten laid last, and now it'd been twice in two day, with two different women. If this pace was going to keep up, I was going to need to get in better shape.\n\nShe pulled her hips forward and pressed her thighs together before crouching down. She pushed her head down once onto my cock quickly, sliding her mouth along the entirety of it before pulling back, kissing the tip of it, as she grabbed her pants and panties, sliding back into them quickly as she stood back up.\n\n\"Thanks for being a good sport about all that,\" she said, as she grabbed her sports bra and pulled it back down onto her lean body. \"I'm on birth control, and I'm clean, but it's a fantasy of mine, and I really like the feeling of cum in my cunt.\" She grabbed the track top and slipped it back on as well, zipping it up.\n\nI wasn't entirely sure how to answer that, even as I was tucking my cock back into my boxers and jeans, zipping them up and rebuttoning the top button. \"You did warn me.\"\n\n\"I know, but some guys can be so fucking uptight about that kind of shit, when a girl's got a fantasy in her head and she wants to say it.\" She looked at herself in the mirror, and turned on the faucet to get some water to splash on her face. \"I'll go back first. Wait a minute or two, then you can go back to your seat.\"\n\nAt this point, I was still a little shellshocked, so I merely nodded.\n\nJust before she started to open the door, she looked me, as if she had something final to say before she went. \"I'll see if I can arrange a set visit for you sometime later during the shoot, once we're up and running. I'd like to see you again, but if I'm honest, I'm still at least two or three relationships away from having the emotional experience and maturity needed for us to work as a couple. We'd collapse at our first argument right now, and it would totally be my fault. Maybe we can be fuck buddies instead. If I'm honest.\"\n\nThen she opened the door quickly and hopped out, closing it behind her, leaving me alone in the bathroom.\n\nI waited a couple of minutes out of sheer paranoia before I opened the bathroom door, and slipped out. No sign of the flight crew, so I made my way back to my seat, finding Colleen back in her seat, like nothing had happened.\n\nOnce I sat down again, she leaned over and whispered to me, \"Let me see your phone. Unlock it for me.\"\n\nI did, and she opened up the contacts section of my iPhone and then the same on hers. Then she AirDropped her contact information into my phone, and mine into hers. Not only did she have my name and number now, as I did hers, we also had each others' email address and home address, or whatever address I guess she was using in her contacts section. I didn't get a good look at it before she handed me back my phone.\n\n\"There. Now I can send you dirty pictures any time I want to, Deke,\" she said, kissing my cheek before sitting back in her chair. \"Just don't you dare share them with anybody.\"\n\n\"What kind of rogue do you think I am, Coll?\"\n\n\"The kind who'd fuck the shit out of a girl he just met in an airplane toilet because she wanted him to,\" she whispered into my ear. \"The kind I like best. You've got my number, so call me maybe. I'm gonna sleep now. Wake me when we're stateside.\"\n\nShe reached down and grabbed the blanket they had provided, pulling it up over her body, as she leaned the seat back and immediately drifted off to sleep.\n\nI was absolutely in over my head with this bracelet. If I'm honest.\n\nChapter 3 -- Alina\n\nWhen the plane landed, Colleen and I were the last two to leave first class. I'd planned on just heading out, but Colleen made sure I didn't hurry. Before we headed into the terminal, Colleen gave me one last fierce kiss. Then we disembarked and headed into the terminal, keeping our distance from each others, far enough that we might as well have been strangers.\n\nWe were heading to different places -- she was catching a connecting flight up to Vancouver, while I was just headed down to baggage claim to find my suitcase that arrived a day earlier. The airline had told me I'd need to visit their office down by baggage claim to get my bag, since it had been waiting for a while. Colleen had also told me we needed to pretend not to know each other in case there were any paparazzi hanging around looking for celebrities.\n\nBut even though she'd told me that, she flashed me a thumb/pinkie hand/phone mime and mouthed \"Call me\" before she headed away from me and towards a different gate. I felt like I was running through the entire \"Swingers\" scene in my head, trying to figure out how long I should wait before I should call her.\n\nIt turned out I needn't have worried. By the time I'd reclaimed my luggage and called for an Uber to take me back home, my phone beeped in my pocket with a message from Coll. I saw it was from her, but I decided not to check the message until I was in the backseat of the Uber. Thank god for that, because once I did, I had a hell of an image staring me in the face.\n\nShe must have slipped into the bathroom on the plane, because she'd sent me a selfie of sorts, with her tits on display. Her face was covered by her shirt, naturally, but it was a glorious picture, and there was an accompanying note. *Save this somewhere secure, but absolutely save it. Every collection starts somewhere. Also, you owe me one in return. Within 24 hours, or I'll be mad.*\n\nI shot back a quick response. *In an Uber on my way home right now. I don't think the driver would appreciate it, but I'll have something sent your way later tonight.* The drive back to my house was quiet. The driver was a big burly Egyptian fellow who wasn't particularly chatty. That suited me fine.\n\nMy house was about forty minutes drive from the airport, and during that time, I was getting caught up on everything I'd been missing in transit. The company didn't mind that I was out of pocket for an additional day, but that didn't mean that work stopped, and there were an endless amount of reports to read through, details to oversee and personnel to approve.\n\nI wasn't lying when I told Colleen that my job is frightfully boring, but it is something I'm good at. I work for Alexandria Indexes. Don't worry, you've never heard of us. Nobody's ever heard of us, until they're looking to set up a call center for their company.\n\nYou'd think all of these big corporations -- Microsoft, Oracle, Apple, Sony, Samsung, the lot of them -- that they'd know all about setting up their own call centers, but the sad state of affairs is that they don't. Oh, they think they do. At first. But after their first call center blows up in their faces, and we're not talking minor problems, we're talking Class-A fuckups here, they shut down their call center operations and then they call us.\n\nDon't feel bad for them. None of them made the same mistake on their attempts. No, they all made quite unique mistakes. For example, one of them, I won't say who out of professional courtesy, assumed that absolutely anybody could work at their call centers, so they just hired the cheapest labor possible. That, obviously, resulted in a bunch of people who couldn't accurately diagnose customer problems. Another company thought they should hire the best possible people for the job, and spare no expense. They were running in the red before the weekend. Communications delays? Yep. Poorly structured databases? No shocker there. I could go on all night. Believe me, I have.\n\nWe don't just do call centers. We solve the complete customer service problem from soup to nuts, from knowledge bases to interfaces, from UI to good bye. It's a much bigger problem than companies think, and they hire us to solve it for them.\n\nMe, personally, I set up most of the call centers, which is the most complicated piece of the puzzle, if you ask me. By most, I really mean about 65% of them. I'm head of the call center establishment team, and I've got a couple of juniors beneath me who help distribute the work. I don't have to do sales, I don't have to do post launch support, I don't have to worry about getting the escalation procedures put together. It's all about getting the building, setting up the infrastructure, getting the right key personnel at the top and then establishing the proper framework for them all to succeed.\n\nI had a handful of emails from my two subordinates, mostly asking for policy clarifications and such. The two people I've got working for me are both relatively new, and they're on their own projects right now for the first time. They're good kids, but they're going to have a million questions their first time out of the ballpark. They're working on little projects comparatively to the kind of work I do, but I'm sure it feels like the world's ending every time they get something wrong. I'm not a mean boss, but I am judging them on every single thing they do, because it all reflects on me.\n\nI shoot back some quick responses, giving them some clarity they need on their work thusfar. I'll be in the office again tomorrow, and Jen can talk to me then, but Zack won't be back to Seattle until next week. He's setting up a call center in Omaha right now, but we'll at least be able to talk real time.\n\nAbout two minutes from my house, I call my friend TJ and let him know I'm about to get home so he can bring my dog over. He tells me he'll meet me at the house with Astro, and not to worry. True to his word, when the Uber is pulling into my driveway, TJ's parking on the street in front of the house.\n\nMy house is nice. It's nothing epic, but it's certainly well earned and impressive to look at. When I started at Alexandria Indexes eight years ago, it was a tiny startup, with only ten employees. I was employee number eleven. We're over two hundred now, and the early investments I put into the company have paid off with excellent dividends, and bought me this house a couple of years ago.\n\n\"Heya Deke,\" TJ said to me while Astro's charging at me full force. \"This monster of yours is a pain in the ass, you know?\"\n\nI laughed as the Uber was pulling out of my driveway as I crouched down to meet my Huskie as he tossed his front paws onto my shoulders. I knew TJ was kidding -- he and Astro loved to hang out, and my dog, for all his insane enthusiasm, was incredibly well trained. The only pain he'd given TJ while I was gone was tiring him out with his endless enthusiasm. Astro's only a couple of years old, so he's basically still just a giant puppy, and even by Huskie standards, Astro's basically inexhaustible. It takes forever to wear him out, and he loves to go out jogging with me in the morning before I head to work, and still wants to go out again in the evening. \"You weren't a problem for him, were you, Astro?\"",
        "My dog barked happily at me, his tail wagging back and forth furiously, nuzzling his snout, jumping up and down over and over again.\n\n\"Yeah, I thought not,\" I told him. \"Thanks for taking care of him, TJ. You gotta bounce, or you got time to hang out and have a beer?\"\n\n\"Wish I could stay, brother, but I gotta get back before David has my hide beaten senseless.\" His husband, David, was no small guy. They were the nicest pair of guys I knew, but they did live a good ten minutes away, and David was a heart doctor, so they were always a bit stressed out. TJ was a teacher at the nearby high school, but marrying David had allowed him to endure the financial hardship that so many teachers endured on a daily basis. I'd met them when I'd been out golfing solo one day half a decade or so ago, and they asked if we could share a tee time. We'd been great friends since.\n\n\"Damn, I have a hell of a story that I gotta tell somebody, but I guess I'll catch you up next time.\"\n\nAs he was getting back into his car, he nodded. \"Next time, I definitely want to hear it. You ought to give Ken a call. I'm sure he's not doing anything tonight, and you know he loves a good story.\" Ken had been the fourth member of our randomly assembled foursome, and we as a group had gelled so well that we'd made it a monthly thing for the four of us to go out golfing, weather permitting. And on the months when we couldn't go golfing, we played poker.\n\n\"Yeah, okay,\" I said, opening the front door to let Astro bolt into the house. \"I'll give him a call. Thanks for watching Astro, Teeg.\"\n\n\"We love to have him!\" he yelled at me through his open car window. \"See you next Saturday for poker!\" Then he took his Mazda and sped off into the cool evening air.\n\nOnce I turned off the home alarm system, I closed the door and carried my suitcase and my carryon upstairs. Astro was running around the house again but eventually settled down next to the bed as I was putting clothes away. After I'd put the stuff from my carry on away, I shot Ken a text, asking him to come over for a drink and a tale. He texted back that he'd be over in a few when I was finishing off getting the suitcase into the wash.\n\nTen minutes later, there at my door was Ken Harewood. Ken looks more like a linebacker than a golfer, 6'2\", wide shoulders, muscular as all hell. He might be one of the most intimidating black men I've ever met, but he's a true gentleman, despite the fact that he's a professional shark. Lawyer, that is. But he's a defense attorney for the ACLU, so we tend to let it slide. And the fact that he's got a fantastic London accent means he can get us in pretty much anywhere in town for dinner. He can pick up pretty much any woman in town any time he wants. He'll be the perfect person to talk through this with me. \"So what's this all about then?\"\n\nTen minutes later, Ken's heard the whole tale and he's mostly been laughing at me, clearly not believing a word crossing my lips. \"No, I'm not kidding, Ken.\"\n\n\"Well, there's only one thing to do then,\" he said, leading me out towards his car. \"Let's go pit you against the diamond.\"\n\n\"The diamond?\"\n\n\"The diamond!\"\n\nTwenty minutes later, we were across town, and Ken was pulling his Escalade into the parking lot of Deja Vu Showgirls. \"Ken, it's a Thursday night, and I've got work tomorrow, and you're bringing me to a strip club.\"\n\n\"Deke, take a day off work,\" he laughed. \"Hell, I'll even pay for the day. Just email them, so I can test you against the diamond.\"\n\nI was typing a message into my phone, telling the office I'd be out tomorrow, when Ken finally found a parking spot. \"Fine, I'll hold you to that. Now are you going to tell me what we're doing here?\"\n\n\"Let's just say, for a moment, that I believe your story,\" he said as we both got out of the car. \"If that's true, then you can theoretically sleep with any woman you find attractive, right? Even ones that have no interest in you?\"\n\nI closed the door behind me as he did the same. \"I haven't the slightest goddamn idea how it works, Ken. That's why I wanted to talk it out with you.\"\n\n\"Nah,\" Ken said. \"That's not going to do you any good, and it's not going to convince me of a goddamn thing. What you need is to test it, to put it to a challenge of sorts, something that'll convince me it is what you say it is. That's what we're here for.\"\n\n\"At a strip club.\"\n\n\"Not just any strip club.\" When we got to the door, Ken reached in and pulled out his wallet. I was going to do the same, but he gestured for me not to bother, as he paid for both of us. \"I've been coming here once a month for, oh, probably four years now.\"\n\nWe moved past the bouncer and inside of the club, where the music was blaring M\u00f6tley Cr\u00fce's \"Girls Girls Girls\" over the stereo. I've never been in here, but Ken's been trying to drag me here for as long as we've known each other. He thinks that throwing a few hundred dollars at a lapdance would get me over Stacy, but no matter how many times I told him otherwise, he kept on trying to pitch the idea to me.\n\n\"While we're here tonight, I'm going to buy you a proper lapdance and we'll see if you can crack the diamond.\"\n\n\"What the hell is this diamond you keep talking about?\"\n\n\"Not what,\" he said, gesturing to the main stage. \"Who.\"\n\nOn the stage was a lithe Latina who was twirling around on a pole at least ten feet up in the air, wearing only a bikini bottom, with some scattered pieces of costume strewn across the stage. She slid down to the stage and rested on her back and brought her heels together with a loud *CLACK* that rang through the air. There was a large crowd around the stage, and the surface of it was covered in ones and fives.\n\nI understood the appeal. She was muscular but in the most feminine way possible, and the way she was dancing across that stage proved she'd be insanely athletic. Her breasts were large, but had clearly never seen a surgeon's knife. And her face had a wide smile that beamed from ear to ear.\n\n\"That's it, gentlemen, give it up for Diamond. Be sure to shower her with love and money,\" the announcer's deep bass voice boomed over the room, \"she's not working for free out here. She's going to take a little bit, but she'll be out in the room for more intimate appointments in just a little bit.\"\n\n\"There's your challenge,\" Ken said to me, as we walked towards a small open table in the back, each of us taking a seat. \"I've been coming here for years, and I've probably banged half the girls who work here, but I've never been able to crack Diamond. So tonight, we'll see if you're full of shit or not.\"\n\n\"Heya Ken,\" a bubbly blonde said to him, \"you want your usual?\"\n\n\"Yeah, and an orange soda for my friend here.\"\n\n\"You got it, hon.\" She wandered over towards the bar.\n\n\"So you've got no idea how this thing of yours works?\"\n\n\"None at all. But two women I've only just met in forty-eight hours has never happened to me before, so I don't think it's coincidence.\"\n\n\"Give it time. We'll see.\"\n\nFor the next ten minutes, Ken turned away every stripper who came over to try and talk with us. If you've never been into a strip club, they're all trying to get your attention, so they can get your money, and while Ken was never rude, he made it clear that tonight, he was waiting for Diamond.\n\nA little bit later, Diamond made her way across the club and sat down on Ken's lap, a wide smile on her lips. She was dressed in tiny booty shorts and an oversized blazer, her hair up in chopsticks, thick horn-rimmed glasses over her face, a sort of slutty librarian look to her. \"Hey there, big spender. Long time no see,\" she purred with a laugh, picking up his drink to take a swig from it. \"So I hear you're looking for me?\"\n\n\"Not for me, Diamond. For my friend here,\" he said, nodding my direction.\n\n\"Any special occasion?\"\n\n\"He just got home after spending a week abroad, and I figured you'd be the best person to give him a warm welcome home.\"\n\n\"You want us to move to a VIP lounge?\"\n\n\"I think we probably should. I want you to give my man the works.\"\n\n\"The works?\" She arched an eyebrow at him, then looked back at me. \"For him? Not you?\"\n\n\"Yep, I just want to make sure he's getting what I pay for.\"\n\nShe laughed a little, husky and smoky. \"Let's go then.\"\n\nDiamond hopped off his lap and made her way over to me, extending a hand to me. I reached up and took her hand as I stood up, and she pulled me along like I was some puppy she'd just picked out in a pet store, with Ken a few steps behind me. \"What's your name?\"\n\n\"Derrick.\"\n\n\"Okay, 'Rick. Let's blow your mind.\"\n\nWe moved past security and up some stairs, turning a couple of corners before she opened a door and led us into a small private VIP lounge. She pulled me into the room and then pushed me to sit down on a couch. Ken was moving to try and sit next to me, but she pushed him onto a couch on the other side, holding out a hand.\n\nHe reached into his pocket and pulled out a small wad of bills, peeling off four hundred dollar bills, holding them out to her. She took them and tucked them into the pocket of her blazer, buttoning the pocket closed before turning her attention back to me, a wild, almost feral smile on her face.\n\nOn the stereo, Daft Punk's \"Get Lucky\" started to play, and she strutted towards me before she slid into my lap. \"You must be a very good friend for Ken to be paying me to dance for you instead of him,\" she said, as she ground her hips against my lap, rubbing her crotch down against mine.\n\n\"He thinks he's trying to make a point.\"\n\n\"Oh yeah?\" she said, as she unbuttoned the blazer, letting it expose the silken bra she had on underneath. The bouncer had pointed very clearly to the \"no touching\" sign as we'd walked up the stairs, so I kept my hands practically beneath my ass. \"I think I wanna make a point to him.\" She spun around so that she could wipe her butt across my lap, grinding into me, as she waved over to Ken, who couldn't take his eyes off of her.\n\n\"What kind of point are you trying to make?\" I asked her, as her long black curly hair hung in front of my face.\n\n\"That I make my own rules, and I decide what kind of things are and aren't allowed.\" Her hand reached behind her and unfastened her bra before sliding the blazer off, setting it aside. Then she pulled the bra from off her frame and tossed it over at Ken, blowing him a kiss. \"Like you know the no touching rule?\"\n\nI nodded.\n\n\"I don't give a fuck about it right now.\" She reached down and grabbed one of my hands, pulling it up to cup one of her tits as she pressed her bare back against my chest through the t-shirt. \"And when I say I don't give a fuck about it...\" My hand could feel her stiff nipple against my fingers, but I felt her slim digits grasp on my wrist and pull my hand down along her toned stomach. \"I *really* don't give a fuck about it...\"\n\nWithout any warning at all, she pushed my hand down the front of those booty shorts, and made sure my fingertips slipped beneath the g-string to rub against her bare pussy, as she groaned, bucking her hips up towards my touch.\n\n\"Push in,\" she said, nuzzling her lips against my ear while she continued to writhe on my lap.\n\nI was nervous, but felt her grinding into my hand so I slipped a single fingertip inside of her cunt, feeling exactly how wet she was. I thought I'd gone too far when she started to tug on my wrist to pull my hand out, but she brought my hand upward and then wrapped her lips around my wet fingertip as Ken could only watch.\n\nThen she suddenly brought my legs together firmly before she turned and moved to rest her back against the tops of my thighs, her ass on my chest, as she thrust her bootyshort covered twat up towards my face, pelvic thrusts that stopped mere inches from my mouth, and I could smell body spray and sex just oozing from her. Her heels clapped together over my head in a loud crack before she spun again and turned to straddle my waist, pressing her plump tits right up against my face, her hands on the back of my head to keep me smothered there.\n\nThis continued for the entire length of the song, and they didn't just play the short version, it was the extended remix that runs nearly ten minutes. At the end of it, she leaned in and gave me a firm kiss before whispering into my ear. \"We close at 2. Met me here at 2:30.\"\n\nThen she gathered up her clothes and headed out the door.\n\nKen and I were both silent for a good minute. We probably should've left the lounge immediately, but I suspect after that, the club wanted to give us a cooldown period. Ken finally spoke first. \"She's never give ME a dance like that.\"\n\n\"I, uh... I'm supposed to meet her after the club's closed.\"\n\nKen's face narrowed. \"Bullshit.\"\n\nI shrugged. \"We can both wait outside if you want.\"\n\nIt was around 1 a.m. when Ken and I decided to go get some late night tacos, and then we doubled back to the club at 2:15. The lot was mostly empty, except for a handful of cars that clearly belonged to either dancers, bouncers or the DJ. \"Fine, you don't believe me, so you wait here. If she walks past me, or doesn't show by 2:45, you can drive me home and say I'm full of shit... but if not...\"\n\nKen raised a hand in surrender. \"Go. Prove me wrong.\"\n\nI stepped out of the Escalade and headed over towards the door. There were a couple of greaseball looking guys hanging around, as well as a couple of young women. Ten minutes later, the dancers began to trickle out one or two at a time, always escorted by a bouncer, until they got to their car or met with their ride.\n\nAt 2:35, I was starting to get a little nervous, but sure enough, Diamond walked out, dressed in Gucci sweatpants and a zip up hoodie, a giant satchel bag under her arm. She glanced around and spotted me immediately, walking straight at me before she slid her arm around my waist. \"Did you drive, Rick or do we need an Uber?\"\n\n\"Uh, Uber,\" I said, pulling out my phone. \"I can call us one.\"\n\nShe swatted my wrist. \"I got it.\"\n\nThe Uber arrived five minutes later. Diamond and I hadn't talked almost at all while we waited, and we didn't talk much during the drive, which didn't take us to a house or an apartment building, but a little no-tell motel just a short jaunt away. \"Wait here,\" she told me as she went in and got us a room before she returned, leading me over to room 118. She used the key to unlock the door and pushed me into the room, stepping in, closing the door behind us.\n\nAs soon as the door was closed, she shoved me back onto the bed hard. \"Is your name really Derrick?\" she said as she started yanking my t-shirt up and over my head.\n\n\"It is. What's your real name?\"\n\nShe unzipped her track top, and tossed it off before yanking a sports bra up and over her head, casting it aside. \"Alina. Now shut the fuck up.\"\n\nI tried to play an active part, but Diamond... Alina... was in control the whole time. She unbuttoned my jeans and yanked them down to my knees, along with my boxers, before she kicked off her flip flops and pulled off her sweatpants. She didn't have anything on underneath them.\n\nBefore I knew it, she was straddling me on the bed, knees on either side of my hips as she thrust her snatch down onto my dick like she was trying to fuck me through the bed. It wasn't gentle or tender. Hell, I felt like I was mostly just being used as a sex toy, something to get her aggression out on, as she snapped those lithe hips into mine again and again.\n\nEach thrust was hard, brutal. I wasn't fucking her. This woman was clearly fucking me. I placed one hand on her hip and brought the other to her belly so I could bring my thumb down to rub on her clit, which made her groan even harder. She would, from time to time, shove her mouth down against mine, but I felt like the kisses were almost just to try and keep us both quiet more than showing any real affection.\n\nAbout ten minutes later, our lips still clamped together, I could feel her pussy starting to spasm and clamp down, and while I was trying to resist, I couldn't, and ended up blasting a hot load of spunk inside of her, right as she slumped down atop of me.\n\nFive minutes later, she had moved into the bathroom to have a quick shower, and I'd fished my phone out of my pocket and set it on the nightstand, letting it record sound.\n\nWhen Alina emerged from the bathroom, she was cleaned up and dressed again. \"The room's paid for until noon, so you can just drop the key off any time between now and then.\" She moved to sit on the edge of the bed and looked at me. \"You know, I've never fucked a client of the club's before. I somehow thought I'd feel different if I ever did, but I don't. If I'm honest, I'm never going to have a long term relationship with anyone who knows I did this. I'm going to graduate from med school next year, and once I do, I'm going to leave this town and do my residency somewhere I can forget I ever stripped for money. You seem nice enough, but you've seen me strip, so... thanks but no thanks. If I'm honest.\"\n\nShe leaned down and kissed my cheek, then stood up, gathered her bag and headed out of the hotel room.\n\nAs soon as the door closed behind her, I stopped the recording and sent it on to Ken.\n\nHe must've been too dumbstruck to respond, because my phone didn't ring again until morning.\n\nChapter 4 - Madison\n\nI awoke in the no-tell motel sometime after dawn but before checkout. I had an alarm set for 11 a.m., but woke up before it went off. My phone had a voicemail message from Ken, detailing exactly how unbelievable my recording was, and how he was going to have to spend a bit of time thinking about how he could help me use it best. There was something troubling about that idea, but I decided to let it slide for the time being. I hoped it wasn't going to come back and bite me in the ass.\n\nThe room was paid for, so I decided to hop through a shower before I got dressed and called an Uber to ferry me home. It wasn't a female Uber driver, thankfully, so the large gentleman in his late sixties didn't represent a problem for whatever super power now rested on my wrist. I spent most of the ride home checking in on work via my phone. Thankfully, nobody was throwing a shitfit that I'd decided to take an extra day off, and in fact, a couple of my direct reports thanked me for actually using some of my stored up time off, as it meant they'd feel a bit more comfortable doing so. I shot back polite, if a little disappointed, emails saying that they should be taking time off any time they needed it, and that hoarding it up and not using it was not only wasting it, it was putting them under undue stress, something I very much didn't want them to do. Naturally, one of them shot back a wise ass response, saying that if I was truly taking the day off, I shouldn't be answering work emails. I laughed, and shot back an email that said \"Good point. Deke out.\"\n\nWhen I got back home, I wasn't entirely sure what to do with myself. I decided to toss my clothes into the washing machine and take another shower. I realize I'd taken one at the motel, but I'd just gotten back into the same clothes that reeked of body lotion and hairspray, and while I had the house to myself, I didn't like the idea of leaving around clothes that smelled of strip club. Astro had been sniffing them like crazy since I'd gotten in the house anyway, so best to nip that in the bud.\n\nAfter the shower, while the clothes were in the wash, I hopped into some sweatpants and a t-shirt and went into my office to do some research. What did I tell you before? *Work the problem.* Right, now you're getting it. So I started with the Latin phrase on the bracelet again. SOLAM VERITATEM. Apparently there was a heavy metal band called Veritatem Solam, and while I tried to listen to them for a few minutes, they had those awful Cookie Monster style vocals that, like, over half of heavy metal bands do, that I can't fucking stand, so I didn't follow up on it. They barely had a hundred subscribers on YouTube anyway. (Get an actual singer who knows how to do melody, guys.) There was a blog that hadn't been updated in over half a decade, something about being \"a sounding board for any effort made towards the purity of truth,\" whatever the hell that meant. Most of what Google seemed to be turning up looked like a dead end, until I got some dozens of pages into the search and I found a link that said \"Solam Veritatem, or: Chasing The Only Truth.\"",
        "I'd been mostly disappointed by the other links, because they'd had nothing to do with what I was looking at, but this page was different. It was white text on a black background, with no real adornment to the page, no markers saying when the page had been uploaded, no contact information, nothing other than this wall of text that didn't really even have paragraph breaks. If I hadn't been intrigued, the sheer formatting nightmare of it would've driven me away right to start. But the first line of the page immediately caught my eye:\n\n*Somewhere in the world, there is a bracelet with the words SOLAM VERITATEM on it, and it is changing the life of the person who is wearing it.*\n\nI kept reading, curious to see what more whoever set up this page knew about it. I read for about an hour, making my way through the endless vomit of unfiltered text, and eventually what I gathered could be summed up thusly:\n\nThere had been a bracelet in ancient Rome, and there had been a woman named Flavia. Now Flavia was extremely beautiful, but her father, a wise blacksmith named Drusus, had not been able to figure out who deserved his daughter's hand in marriage, as she had many suitors. So many suitors, as it turned out, that Drusus grew frustrated. He asked Zeus for help, but Zeus would not help him. Same for Hera, Zeus's wife. In fact, Drusus went down the list, praying to any god or goddess who might help him keep his daughter safe and happy, but none answered, so Drusus went wandering throughout the streets of Rome, until he came across an unused well that had been boarded up, somewhere deep in the back alleyways of the city, rarely traveled.\n\nFrom the bottom of the well, he thought he could hear a woman's voice, so he took his blacksmith's hammer and ripped up the boards. Sure enough, at the bottom of the well was a young woman in white, and she begged him to help her. So Drusus went and got a rope, tied it to a stake he hammered into a nearby rock, and then climbed down into the well, and helped the young woman up to the top of it. There, she revealed herself to be Veritas, the goddess of truth. In exchange for his help when none other had come to her aide, she granted Drusus a favor.\n\nDrusus, being the dutiful father he was, begged Veritas for her help in finding who the best suitor for his daughter was. Veritas agreed, and told Drusus to go home and make a silver bracelet for his daughter, then to give the bracelet to Flavia, and the situation would sort itself out. A sound around the corner, a horse or something suddenly neighing loudly or whatever - it's not really clear but it doesn't matter - distracts Drusus and he looks away from Veritas for just a moment, but when he looks back, she is gone.\n\nSo, being a devout man who believes in the gods, Drusus goes home, and under the light of the full moon, makes a silver bracelet for his daughter. Now Drusus doesn't plan it to be anything elaborate, but when he takes it out of the casting mold, he finds the words SOLAM VERITATEM are etched on the surface of it. Truly, he decides, the work of the goddess. So he lets the bracelet cool and set, and the next morning, he gives it to Flavia, and tells her the story of how Veritas had guided his hand, and that it would solve her problem. Flavia seemed amused, but didn't believe him, until her first suitor showed up for the day, and Flavia said to him, 'Why doth thou seek my hand in marriage so intently?' (Look, I don't know how they talked in ancient Rome, so just go with me on all this. I'm paraphrasing anyway.) And then man says to her 'Why, you are a beautiful woman, Flavia, but what I truly seek is your father's blacksmith shop, for the Emperor intends to buy this land soon and will pay handsomely for it!' And then the man slaps his hand over his mouth and runs away.\n\nFor days, no, months, men approach Flavia and each time, they admit to her why they are seeking her, but also admit that Flavia would be unhappy being wed to them. The men, it seems, are unable to lie to her any longer. Drusus begins to get worried, thinking he's changed his daughter's life from having endless suitors to having none, until one day, a young man named Felix comes to ask for Flavia to consider him as a suitor. The young man is a little scruffy, but Flavia asks him whether the young man believes they would be a good match, and Felix responds that they would, and that he wanted to take Flavia with him on his adventures to the east. Felix, it turns out, was an explorer, just starting to make his way in the world. What Drusus had never known was that Flavia had a sense of adventure as well, and had yearned to see more of the world. So she agreed to marry Felix.\n\nOn the night before her wedding, Flavia was approached by Veritas, who showed up again as a young woman dressed in all white. \"Before the birth of your first child, which will be a son, you must find someone in need of that bracelet and pass it on to them. You will know when the time is right.\" True enough to the goddess's word, when Flavia was traveling with her new husband Felix through Hispania, she came across a young man named Lucius, who was greatly despondent, as he had been spurned by woman after woman, trying to find someone to spend his life with. And Flavia passed the bracelet on to Lucius. Give or take, all of this happened in 40-60 BC, which meant the bracelet on my wrist was over two thousand years old, if I believed any of this. Lucius had experienced the same sort of behavior as Flavia had, with women confessing to him the true reasons why they would not work as a couple, which ranged from things as simple as 'I'm in love with this other dude' to things as complicated as 'I secretly yearn for the touch of my own father.'\n\nThe story gets pretty fuzzy from here on out, and there's a number of instances of the bracelet turning up all over the world, but somewhere around the 12th century, the bracelet briefly reappeared before disappearing again, on a man named John Garland, and the bracelet's effect seemed to have evolved. No longer was it just making people speak the truth, it was actively drawing attention to the wearer. Now, John Garland was a gay man, and that was still looked down upon in Europe at that time, so he'd gone out of his way to hide getting the bracelet, but men kept throwing themselves at him, engaging in 'coitus' as the webpage called it, and then and *only* then, would they reveal to him why a longer relationship would not work. The webpage didn't seem to know why the change had happened, but noted in quite detail that clearly something had changed during the bracelet's trips around the globe. The most recent sighting on the blog was from 1894, when a woman named Catherine Barker gained the bracelet on her trip to relocate to America. The webpage notes that the bracelet was in the woman's inventory when she arrived at Ellis Island, immigrating from Ireland. There's even a photograph of Catherine wearing the bracelet at her wedding in 1896, and the inscription can clearly be seen.\n\nSure enough, it's a spot on match for the bracelet on my wrist, although it looks significantly smaller. Maybe that's just the size of my wrist against it, though.\n\nThere isn't any report of who Catherine gave the bracelet to, but the website does have another picture of her from 1897, and the bracelet is conspicuously absent.\n\nThe webpage ends with a small screed from whoever created the webpage, asking whoever has the bracelet to contact them, but there isn't any email address visible, or contact information. It also ends with a small warning - not all those who found the bracelet at first thought of it as a gift. In fact, one young woman in Ireland around 1340 or so had been so frustrated with all the endless honesty that she had considered suicide. Thankfully, the page said, the woman had met the right man on her way to hang herself in a tree. Do not be discouraged, said the webpage. Simply learn to live within the light of truth, and do not be washed away with it. *Don't we all deserve a little more truth in our lives, if I'm honest?* read the last line of the webpage, which chilled me to the bone. I knew that phrase all too well.\n\nI tried to do some basic research on the webpage, but it turned out it was an Angelfire page that had been created in 2004 and hadn't been updated since. There was no owner of the page, and no information about where any of the information had come from. I wasn't even sure where to validate any of the information, so I copied and pasted the entire raw text of the page, as well as the handful of low-quality.jpgs that were attached, and saved them all to my computer. Then I opened up another web browser and switched to my anonymous email client to send an email to an old buddy of mine, Yuri (not his real name, obviously). Now Yuri was a dark web friend of mine whom I'd never met, but we'd swapped projects from time to time, and when I needed information pried out of the internet, I sent it to Yuri, along with some bitcoin to pay for his services. Yuri never asked any questions that would reveal my identity, and never offered any details that would reveal his. In return, I also did favors for him from time to time as well, when it came to getting information on businesses. We both made out okay. I sent Yuri the whole block of text and asked him to find out if he could verify any of the information, and also included the picture of Catherine with the bracelet on her wedding day. It would be a week or two before I'd hear back from him, but if anyone could find something like this buried in the internet, it was Yuri.\n\nWhen I looked up, I realized I'd been at it for almost 3 hours, and I was hungry. My body clock was set to who the hell knows when, but my actual watch said it was four in the afternoon, and that meant I hadn't eaten anything since Ken and I had gotten food over twelve hours ago. Astro was also pacing a bit near the back door, so I opened the door to let him run out into the backyard to do his business. I grabbed a package of sausages from the fridge, as well as a plastic bag to grab Astro's shit with, and headed into the backyard after him. On my back patio, I have a nice little grill that's part of the deck, so I tossed some charcoal into the bottom of it and lit it up before walking over to grab Astro's shit from my small backyard. Sometimes I just let it sit out there and let the weather pound it in, but I was back there anyway, so I figured, might as well do my part. Astro seemed happy enough to play fetch with me while I tossed a couple of sausages onto the now warm grill, as they started to sizzle immediately.\n\nOn the other side of my wooden face, a voice called out to me. \"Is that you, Mr. King?\"\n\n\"Oh, hey Madison. Yeah, just back here grilling some sausages. You and your folks are welcome to come over and join me if you want.\"\n\n\"I'll be right over!\"\n\nJust a minute or so later, I heard the sound of my gate unlatching and then relatching again. Astro bolted over in that direction before running back to me, his tail wagging happily. He loved our neighbors. Around the corner walked Madison, my neighbor Bill and Carol's kid, who was a freshman at the University of Washington.\n\nNormally, freshmen lived on campus, but Madison had wanted to save money for the first year or two, to keep her student loans down as much as possible, and her parents had said that was okay. I'd known she was coming and going, but I hadn't seen Madison since last summer, just after she'd graduated. If she'd been a looker then, she was even more so now, dressed in a UW cheerleading outfit - a white halter top with a large W on it that left most of her belly exposed, and a white and purple skirt that barely came half way down her thighs. Apparently the cool spring weather had been enough that she was also wearing thigh high white stockings, leaving a tempting narrow patch of exposed alabaster flesh between the bottom of the skirt and the top of her stockings. Madison, like her mother, was a redhead, with bright coppery locks down to her shoulders, and a face covered in a light dusting of freckles, and like her mother, she was insanely fit, slender and toned in all the right ways. I knew that she had complained to her parents that her boobs were too small, but anything bigger on her frame would've stood out. She had a small purse draped over one arm. \"Hey Mr. King. Those sure do smell good,\" she said, walking towards the patio.\n\n\"Your folks aren't with you?\" I asked, suddenly a little wary. Sure, Madison had been nothing but a great neighbor before now, but the bracelet on my wrist was making me paranoid about nearly everything.\n\n\"Nah,\" she said, hopping up onto the patio. \"They're out of town until Monday, so it's just me and Logan, and he's probably still at school.\" Logan was her younger brother, who was a senior at Hazen High School. \"He's in the school production of 'Damn Yankees' so he's going to be practicing right up until he goes out partying with his friends.\"\n\n\"And your folks are okay with that?\" I said, turning the sausages.\n\n\"I'm his big sister,\" she said, sitting down on one of the deck chairs, folding her legs together. \"I'm not gonna narc on him for having a good time. Just like he's not gonna narc on me.\" Madison was gorgeous, and the girl clearly knew it, flashing me a smile that would've melted sterner hearts than mine. \"That's why I'm here, you see.\"\n\nI took the sausages off the grill and put them onto a plate, before closing up the grill, so that the fire would suffocate itself. The wind was picking up as the sun was threatening to go down, and I didn't intend to eat outside, although I somehow knew inviting Madison inside would lead to trouble. I just didn't see a way out of it, or maybe I just didn't want to. \"I don't really see. Let's go inside a bit. I imagine you're freezing in that get up. Did you just come from practice?\"\n\nAs we walked inside, she nodded. \"Yeah, we've got a home game tomorrow, and I'm going to be out there, shaking my tail, come rain or shine.\" Astro darted in with us, just before Madison pulled the door shut behind her. \"Anyway Mr. King...\"\n\n\"I told you, if you're old enough to vote, you're old enough to call me Derrick, or Deke.\" I set the plate down on my dining room table, then grabbed a second plate, as well as a beer for myself from the fridge.\n\n\"Can I have one of those?\"\n\n\"You're too young, so not unless your parents tell me it's okay.\"\n\n\"I'm too young for a lot of things, but you're going to have to get over that, Deke.\"\n\nShe was leaning against my kitchen island, her back pressed against it, when I came back to the dining room table. \"Madison, what *are* you talking about?\"\n\n\"Look. Deke. It's real simple,\" she said, moving over towards me. \"I'm here to get fucked. By you.\"\n\n\"Excuse me?\"\n\n\"So the way I see it is this... either you *can* fuck me, and I won't tell anyone at all about it, or you can *not* fuck me, and I'll tell my parents that you did, and you'll get into a shitload of trouble.\" Now, what Madison didn't know is that at that very moment, she was saying all of this directly in front of the security camera that watched my back door. And the recordings had audio. So I now had evidence of all of this. \"Look, guys like to fuck cheerleaders, especially pretty ones, and I'm pretty, aren't I, Deke?\"\n\n\"You're very lovely, Madison, but I don't...\"\n\n\"Shhhh,\" she said, hushing me still. \"Eat your sausage while I tell you how this is all going to go down.\" Caught more than a little off guard (although certainly not as off guard as I'd have been a few days ago), I picked up a knife and fork and started to eat. \"You're going to get a chance to fuck a tight young cheerleader, and I'm going to get a chance to have an experience with an older man who knows what he's doing. Because I want something in particular, and I don't want some fumbling boy to do it and ruin it for me forever.\" I arched an eyebrow, and she giggled. \"Oh, you want to know what I'm talking about. Let me show you.\" She turned around and bent over towards my kitchen island, pulling the skirt up a little before she reached back and just gave it a sharp tug upwards. She wasn't wearing panties beneath it, but between the cheeks of her lithe ass, there was a small round red jewel poking out. \"I've tried plugs, and I like how those feel, so I want the real thing now, but a bumbling college boy's just going to shove it in there and make it hurt, while you've probably fucked women in the ass before, haven't you Deke?\"\n\nI swallowed the mouthful of sausage with some effort before nodding. \"A few times.\"\n\n\"See? So you'll teach me how to do it, how to take it, and in turn, I'll let you enjoy being my first. Don't you want to do that, Deke?\"\n\nI finished my sausages in record time, and had drunk most of the beer as well while she'd been talking. \"And you're sure you want to do this, Madi?\"\n\n\"Absolutely,\" she said, waggling her ass in my direction. \"I could've changed out of my cheerleading outfit before I came over, but I figured this could be my little cherry on top. A cherry for a cherry. Every man loves cheerleaders, don't they? Of course they do. And every man wants to fuck a cheerleader. So you're going to get to.\"\n\n\"If I'm going to fuck you in the ass, Madi, I'm going to need some lube, and I don't keep that...\"\n\n\"I brought some with me. In my purse. So what do you say?\"\n\n\"Well, I'm certainly not going to do it in my dining room,\" I sighed. \"Let's go upstairs then, I guess. If my choices are don't fuck you but your parents think I did, or fuck you and your parents never find out, I guess I might as well enjoy myself, huh?\"\n\n\"See?\" she beamed, standing upright, a wide smile on her face. \"I knew you'd see it my way.\"\n\nWe walked upstairs as I was torn by doing all of this. Sure, I had her on tape admitting that she'd basically set out to blackmail me, but she seemed to genuinely chipper about all of this, I knew that I'd be letting her down if I'd just turned her away and shown the tape to her parents. And she was right - I'd always wanted to fuck a cheerleader.\n\nAs we entered the room, Madison kicked off her shoes. \"I think I'm going to leave the stockings on, if that's okay.\"\n\n\"It's your show, Madi,\" I said to her, sitting down in the reading chair of my room, so I could take my boots off. \"I'm just along for the ride, aren't I?\"\n\nShe offered me a playful mock pout. \"Now that won't do at all, Deke. I wouldn't ask just anyone to do this. Only someone I trusted. Someone safe and special.\" She hopped up onto the edge of the bed. \"Do you want me to blow you first, or do you want to just shove it right in my tight young cunt to get started?\"\n\n\"The mouth on you,\" I said to her, trying to sound scolding.\n\nMadison shook her head with a mischievous giggle. \"You can't fool me, Deke. I came downstairs once when you were over drinking with my Dad, and I heard you tell him you liked dirty talking women, so that's what I'm gonna be. That's what you really want, isn't it?\"\n\n\"Madi...\"\n\nShe slowly pulled her top up and over her perky young tits, barely a handful, but capped with perfect pink nipples that were as stiff as pencil erasers. \"I know how guys look at me, how much they want to fuck me. You don't have to just look, Deke. You get to fuck.\"\n\n\"Are you sure you can handle me?\" he said, moving over towards her. \"I keep giving you chances to walk away.\" He placed his hand on her thigh, as she spread them wide for him. \"You keep not taking them.\"\n\n\"I'm not going to, daddy,\" she purred. \"I'm just gonna get you to fuck me until I'm out of my fucking mind.\" She thrust her hips up towards my hand, and so I brushed my fingertips across her tight, teenage pussy, which made her moan immediately. \"I can't wait any more, daddy. I need that dick in me right fucking now.\" Her cunt wasn't just damp, it was fucking soaked, almost oozing onto my hand. Her fingers reached to my sweatpants and tugged them down to fish out my cock, whimpering as soon as her slender fingers touched it. \"That's a thick dick, daddy. Can you jam it in my little snatch before you lube it up and stuff it in my ass?\"",
        "I'd given her enough chances to get out, so I grabbed her thigh, and pulled upward, flipping her over onto her belly on the bed, her legs dangling off the end, still in those thigh high stockings. \"If you ask me very nicely.\"\n\n\"Mmmpphhh...\" she grunted. \"Go on, daddy. Make me your whore, make me your little cheerleader bitch.\"\n\nMy hands grabbed on her hips as I rubbed the tip of my dick across her shaven twat before pressing the tip of my dick against those wet folds and just shoving right inside of her.\n\n\"Oh fuck, that's BIG. You're a big dicked daddy!\" I lifted my hand up and slapped her ass with a hard crack, and she visibly shivered in response. \"Fuck yes! Spank your whore! Rail her filthy cunt! Pull my hair and stuff me full!\" My hand reached up and grabbed a fistful of her red mane, my hand on her hip holding her steady as I punched my cock into her tight young hole. She was practically clamping down on my cock, and I almost dreaded what would come next. \"Oh god, I'm cumming. I'm your dirty little cheerleader whore and I'm cumming on your thick daddy diiiiiiiiick!\"\n\nI wouldn't have believed it, but she was spasming and quivering on my cock, and eventually she finally held still, before she reached back and pulled the little jeweled buttplug out of her ass, revealing the tiny pink rosebud. As soon as she set the plug aside, she grabbed for her purse and pulled out a bottle of lube, holding it back to me.\n\n\"Lube that hole up good, and then fucking wreck me, daddy. Just push in and don't stop until you're cumming up my ass.\"\n\nI didn't know what to say, so I took the bottle of lube and dribbling it along that crack, greasing up that pucker. \"You're sure about this? You said I'm thick, so you're gonna feel this, no matter how gentle I go.\"\n\n\"Oh god, just do it. Do it before I change my mind.\"\n\nI rubbed the length of my cock along the cleft of her ass before I lined the head of my dick up against that tightest of openings. \"Now, don't tense up, or this'll hurt more.\"\n\n\"You say that, daddy, but how do I not tennnnnnnaaaaahhhhhhh...\" her words blurring into just one guttural sound as the head of my prick pushed into her asshole. \"Ohmifuckinggod, I'm doing it, I'm fucking doing it. Go on, go on daddy, pump my ass. Fuck your whore in tight ass. Fuck it, fuck it, fuck that ass, daddy. Fuck! That! Ass!\"\n\nI wasn't going to last long, because she was ridiculously tight, but she started cumming almost immediately, and after a couple of minutes of hard thrusting, my balls slapping against her cunt, her skirt fluttering up and down each time I railed her, I couldn't hold back, and let my cum just blast into her tight teenage ass, which seemed to set her off on another orgasm all over again.\n\nShe slumped forward, pulling my cock out of her ass, falling onto her stomach on my bed. \"Fuck. I feel like my ass has been ripped open by a fucking telephone pole. I'm sore, but it felt so good.\"\n\nI chuckled as she rolled over onto her back and arched her spine up, purring. \"You'll be sore for a few days but that's what the experience is like.\"\n\n\"Thanks for that, Deke, but if I'm honest, I'm just barely getting into my sexual prime, and you need somebody mature. But that was fun, and I might want to come back for another go at some point, just for fun. Not a keeper, but someone I'm never going to forget, if I'm honest.\"\n\nI nodded with a wry smile. \"Go, frolic and have fun. It was a wild time, but I don't think I could've kept anyone as young as you interested for a long time.\"\n\nShe sat and chatted with me for an hour or so, and I shared a beer with her, but before it was too late, she headed back to her house, and left me alone to take my third shower of the day. It was when I was in the shower that my phone rang, but I decided whatever crazy idea Ken had had could wait until morning.\n\nChapter 5 -- Ashley (But Not Christina)\n\nThe next day, I clearly needed to get into the office. I could probably dip and dodge a little bit longer, but frankly, I'd never liked ducking out on my responsibilities. I'd set up the division myself, and while it wasn't the kind of thing that most people would've considered exciting, it was honest work and it kept a roof over my head.\n\nEveryone thinks that setting up a call center is easy. They figure, how hard can it be, getting a handful of phone banks lined up, hiring a handful of trained simpletons to answer them and setting up a few phone lines to handle the calls. How hard can it be, they ask themselves?\n\nThen they try.\n\nSome of them even last a couple of weeks before it all falls apart, but eventually, pretty much all of them fall apart. And never in the same way, but always some degree of spectacular failure. Let me tell you some of the things I've seen. Overtaxed phone lines. Poorly written scripts. Bad databases. Bad interfaces. Untrustworthy hires. Awful structure. Horrible location. Insufficient power. Hell, I've even seen call centers shut down for things like asbestos and termites.\n\nThere's a million ways to fuck up these kinds of things. You might think I've listed them all, but I'm barely even getting started. There are a lot of reasons we set up a company to do this kind of thing, but the fact that we knew how to do it was the biggest. We'd learned all our lessons the hard way, and when we'd finally set up our first call center, back at Oracle, we'd gained so much institutional knowledge, that we knew we could monetize the shit out of it for other people.\n\nAnd, fuck it, we were *bored*.\n\nSo me and my partner John left to join Alexandria Indexes. At the time, they were mostly a theoretical company. The foundation was there, but they didn't have any real talent. The idea behind the company was that they would set up individual divisions for teams of people who had unique skills, things that were only available to a very small subset of people. They needed us, well, people *like* us, people who were precise specialists at what we do.\n\nAI wasn't looking for us, specifically. They didn't know *what* they were looking for, if I'm honest. Heh. They had the beginnings of a business model, and had done some of the ground work, but they hadn't scored any actual talent. They figured once they had their first, they'd be up and running, off to the races. And, as it turned out, AI's CEO, Lawrence Ma, was an old college buddy of my partner John. So John called them, offering us up as their first client.\n\nI agreed to meet with them, and it was clear to me from our first meeting, there were two very important details I took away. Number one, Larry Ma was very very business savvy. If we entered into business with him, he was going to take us a long, long way. Number two, and perhaps more importantly, Larry Ma was a fucking shark who didn't hold permanent allegiances to anyone. If we ever stopped being valuable to him, he was going to stab us in the back so fast, we wouldn't even be a single step past him before the knife was hilt deep between our shoulder blades. So we were going to have to always be somewhat useful to the company. No resting on our laurels.\n\nYou're probably asking, what happened to John? Why isn't he managing the day-to-day of call centers with me? As it turned out, John was pretty crap at remembering what we learned over at Oracle, but he was good at managing people, so he got moved from my division to the center stalk of AI, which was probably for the best. If he was trying to set up call centers, he'd only be fucking things up and I'd be doing work twice.\n\nSince we'd joined AI, John had gotten good at filling out the company. He talked Larry into acquiring a team of people who were experts at setting up a customer service ticketing system, so that a client would have an entire history of work. After that, they hired a team of IT professionals who would set up an internal/external interface team at a company. And they kept on going, while I stayed in my little pond and tended to my portion of the business.\n\nIt wasn't like John and I were good friends. Not really when we were at Oracle, and we hadn't gotten to be any better friends since we'd moved over to Alexandria Indexes. If anything, the relationship had gotten a bit worse.\n\nI mean, John had hooked up with my ex girlfriend.\n\nExcept she wasn't my ex when she hooked up with him.\n\nYeah, that sort of shit stings bad, and I don't forgive lightly.\n\nBut John was on the other side of the company, so I don't have to think about it often.\n\nNormally.\n\nToday didn't look like it was going to have anything to do with normal.\n\nIt all seemed okay at first. I walked into the office and Jen, one of my two lieutenants, met me near the main door. \"Heya boss, you have fun in London?\" she said to me, as we walked to the elevator. \"Party like a rock star so hard you needed an extra two days to recover?\"\n\nJen's the kind of woman you want in your corner for a fight, but she's not exactly subtle. I didn't pick her because I needed subtle. I picked her because I needed someone who was a scrapper, to handle the more difficult clients\n\n\"I've been having a whirlwind chaos time since I came back, Jen,\" I sighed as I pushed the button for our floor. \"But even if I told you what the hell's been going on, I have zero faith that you would believe me. Shit, *I* wouldn't believe me, the sort of crazy story I've been living.\"\n\n\"Yeah, well, as much fun as hearing about all this sounds,\" Jen said as the door opened on our floor, \"Larry's looking for you, and you know it's never a good idea to keep him waiting.\"\n\n\"For me? What the hell does Larry want to talk to me for?\" We walked to our section and I waved my badge in front of the reader, it giving an audible beep as the door unlocked.\n\n\"Dunno. He wandered by my office this morning and was asking if you were due in today. I told him you were, but that you might be in a little late, and reminded him that you've never been a morning person, so no matter how many times he asks you to come in early, your agreement when you joined AI was that you kept your own hours,\" she said with a shrug as we walked into our section. It wasn't much, mostly just a corner of the building with me in a corner office and \"You should probably just go by his office and see what's what.\"\n\n\"You heard anything from Zack?\"\n\nShe laughed heartily. \"He's bored as fuck in Omaha.\" She wandered into the office to the left of mine as I headed into my corner office. \"Don't forget! Go see Larry!\" she shouted at me, as she closed her door.\n\nI could go immediately and see Larry, but the last thing I want is him getting comfortable knowing I'm at his beck and call. Let him wait for a bit. If it was really that important, he would've sent an email instead of \"bumping into\" a member of my team and telling them he wanted to see me. To my mind, it felt like another one of his patented walk'n'talks, where he'd take thirty minutes to get to the point of something he could've said to you in three.\n\nMy office isn't all that ornately decorated, but I do have a handful of eccentricities scattered around it. The one that most people don't see when they enter, but always see when they leave, is that fact that I've hung a literal broadsword over the doorway, a veritable Sword of Damocles.\n\nThere is also, of course, some artwork on the walls, chess themed, gifts from friends and exes over the years. In particular, there's one piece I love with highly stylized Japanese kanji that reads \"every pawn has the potential to be a king\" on it, a man on a hill, overlooking a wide valley covered in a low cloud level that obscures the actual treetops. A gift from my sister, the artist, for my twenty-first birthday.\n\nI sit down at my desk and check through my emails quickly, looking for anything that's top priority, and there's only one thing, a follow up email from the team in Ireland who'd made a few mistakes with the phone number database and didn't know how to unfuck the mistake they'd made to the formatting. But, like I said, that's what I'm here for. I've seen pretty much every possible fuck up a call center could make, and I knew what they'd done within half a page of their email. I also had an email from an earlier client that I could use and modify with just a few things and send off their way, so I got that bit of business done first.\n\nJust as I was finishing getting the email done, my phone gave a happy little chirp, a sound that I'd gotten a message in the Signal messenger app. I'd heard of the app before a week ago, but Colleen had made me install it so she could send me dirty pictures of herself securely, and in an untraceable way. This one, when I opened it, was one of her tits pressed up against glass. No face, of course, but clearly done with a selfie stick.\n\nShe'd sent me two to three such pictures a day, and I'd sent a few back in return, although I was still far more self conscious about it that she was. I mean, she had a knockout body and I'm, well, me. But it wasn't just sexting -- we'd done some actual communication as well, late night texts from her about how she was feeling insecure about the new project, or how she wasn't sure people were taking her seriously as an actress, all of which I was happy to respond to, to try and put her somewhat more at ease. As confident and cocky as she'd seemed when I first met her, she was vulnerable and human just like the rest of us.\n\nI'd send her a dirty picture back sometime later in the day, when I could be somewhere a little more private. I mean, I could've just locked the door to my office and taken one here, but that was the sort of thing I wanted to work up to.\n\nAfter sending her back a short encouraging message, I decided it was probably time to go see what the fuck Larry wanted.\n\nLarry's office was on the floor above mine, at the top of the five story building. AI had been nothing more than a tiny little rented office above a coffeehouse when we'd started, but in the years since then, we'd moved into this snazzy little building of our own. The top floor was executive management, and while I was invited to have an office up here a couple of times, I'd always declined.\n\nJohn had an office up here, naturally. Not that he and I spoke much these days. He's best buds with Josef, the asshole VP who had an affair with my girlfriend. That sort of put a crimp on me wanted to talk with him.\n\nOutside of Larry's office sat his secretary, sorry, his *executive assistant*, Ashley. Ashley's in her early thirties and always dressed somewhere between high class businesswear and extremely high end dominatrix, with maybe a bit of stern schoolteacher or librarian mixed in. Her hair, mostly blonde with a few aqua blue streaks in it, was done up like it usually was, in a bun on her head with chopsticks sticking out of it. She always has her glasses on, those wooden frames that circle her eyes. She's fit, like, gym bunny fit. Today she's got on a black pencil skirt with gray stockings, an almost sheer white silk top over a black lacy bra, a black blazer resting over her chair back, a dark red scarf doubling as a belt. Around her neck, she had on a black velvet choker, with a little tiny bell hanging from it. Her skin was porcelain white, a stark contrast to that deep, almost blood red shade of lipstick she had on, a pencil between her lips that she was desperately trying not to gnaw on.\n\n\"Oh hey Deke,\" she said to me, looking up with a sultry smile. \"Larry's on a phone call for another five or ten minutes. Can I get you anything? Coffee? OJ? I could have one of those great breakfast burritos sent up from the cafeteria if you want.\"\n\n\"No thanks, Ashley, I'm good,\" I said, moving to take a seat in one of the waiting chairs. \"You have any idea what Larry wanted to see me about? He didn't send me an email, just told Jen to have me wander up here when I had a chance.\"\n\n\"Well, that's *never* a great sign,\" she said with a laugh, \"but it couldn't be anything too serious, because he hasn't had human resources up here this morning.\"\n\n\"So I'm not getting fired,\" I said, nodding. \"That's a start, I suppose.\"\n\nAfter a minute or two of silence, Ashley sort of looked over at me with a wolfish smile, licking her lips a little bit. \"You still single, Deke?\"\n\n\"I'm dating a bit here and there, but nothing serious as of yet.\"\n\nShe nodded, as if the answer delighted her. \"Maybe we can go get lunch after your meeting.\"\n\n\"Why Ashley, are you asking me out on a date?\"\n\n\"Dating isn't really what I had in mind, Derrick,\" she purred.\n\nAt that moment, Larry stepped out of his office, seeing me sitting there. Larry's of Korean descent but feels Silicon Valley all the way, by way of San Diego. You get the impression he's one step removed from a surfer frat boy. Hell, maybe he's a shark who ate a surfer frat boy. He's dressed in a black silk shirt and black silk pants that probably cost more than my car. \"Oh hey man! C'mon in!\" He turned and walked back into his office, leaving the door open. \"Ashley, close the door after him, wouldja dear? Thanks, doll.\"\n\nAshley rolled her eyes for my benefit, but not so that Larry could see, as I got up and headed into the office.\n\nIf my office was a demonstration of subtlety, Larry's was one of excess. It was ten times the size of mine, with its own private bathroom and bedroom off to one side, behind one of the doors. I'd heard rumor there was a kitchen back there as well, so his office basically doubled as an apartment for when he didn't feel like going home to his McMansion and his McWife. Hell, he even had a motorcycle in the room up here. Just to show off, or sit on and go 'vroom vroom,' I guess.\n\nThere's plenty of art on the walls, but don't ask Larry about any of it, because the only thing he'll probably able to tell you about any of it is the price. It drives me nuts. There's an actual Warhol hanging on one of the walls, and when he asked about it, he referred to it as \"the one from the soup guy.\" He didn't know Warhol's name, he didn't know the name of the piece. I wanted to punch him in the face, but considering he owns the company, that seemed a poor idea at the time.\n\nIt still seems like a poor idea, but I still want to punch him in the face.\n\n\"Heya Deke, how was Dumbai?\"\n\n\"You mean Mumbai?\" I said, moving to sit down at the desk, trying not to show how annoyed I was with him not even knowing what I was doing on the day to day. \"It was lovely, although I didn't really have much time to see the city, as I was getting a bunch of work done. The client tried to do it themselves first time out instead of coming straight to us, so the first few days were literally just unfucking what they'd already done to themselves.\"\n\n\"Why the hell would they try and do things themselves instead of just coming to us?\" he sighed, throwing his hands up in the air.\n\nI placed my hand on the edge of his desk. \"Let's cut through the bullshit, Larry. You summoned me to your office for some reason, so can we just get on with it?\"\n\nHe shifted a little in his seat, his posture tweaking strangely for a moment before he refocused on me. \"Sure. Okay. If I'm honest...\"\n\nI immediately sat up and got very, very nervous.\n\n\"If I'm honest... I'm thinking about cutting your mate John loose from the company,\" Larry said. \"Now I know you guys came in together, but I want to assure you that you and I, we're cool, and you've been killing it here at AI, so I don't want you to worry about your place here, because we want you and your team on lock. So I was going to dance around the subject for twenty or thirty minutes while I sussed out how you'd feel if we as a company terminated John, but since you asked, maybe I should be honest and upfront with you about it all. Are you going to be mad if I do?\"\n\n\"Larry, your memory is utter and total shit, isn't it?\" I laughed.\n\n\"Yes? Maybe?\" Larry said. \"What am I forgetting?\"\n\n\"So, when you hired me, you remember I was dating a girl named Vanessa?\"",
        "\"Vaguely?\"\n\n\"The same Vanessa who John married a couple years back?\"\n\n\"Oh *shit!*\" Larry laughed. \"How long after you broke up did they hook up?\"\n\n\"Say... negative two months or so?\"\n\n\"No shit?\" Larry snapped his fingers angrily. \"That is fucking stone *cold*, Deke. Why didn't you come to me and ask me to fire his ass?\"\n\n\"He's a VP, and I'm only a section chief, so I figured I'd better just put the company first and go with the flow,\" I grumbled. \"But if you're gonna shitcan him, I say go ahead. He's probably had it coming for a long fucking time now. He's always been good at business shit, but bad at dealing with people.\"\n\n\"Yeah, well, he's not so good at the business shit these days either,\" Larry said. \"He's been angling to try and wrestle control of the company from me, and that shit don't fly. That's why I've enjoyed having you on staff so much. If I'm honest, I've always figured at some point that you'd just cash out and walk away from here and start up something new, hopefully not a competitor or anything, but hey, you've earned a thousand times the money we've invested in you, so I wouldn't blame you if you did. That's the normal thing people do in business. They get paid and then they start something new. Your boy John...\"\n\n\"He's not *my* boy...\"\n\n\"Well, John just likes stealing shit from other people, trying to make them dance for him so he doesn't have to do all of the hard work that it takes,\" Larry said, pouring himself a glass of bourbon, despite it being barely past ten in the morning. \"So fuck him! I'm gonna fire his ass today! You wanna be there for it? I wouldn't blame you if you did. You could be sitting right there and wish him and Veronica...\"\n\n\"Vanessa...\"\n\n\"Wish him and Vanessa the best of luck. In their new future. Together. The fuck away from us.\"\n\nI laughed and waved a hand in his direction, both passing on the offer and on the fact that he was threatening to pour me a glass of bourbon as well. \"I'm good, Larry. There won't be any trouble from anyone in our division. The people who came in with me and John are far more loyal to me than they are to John, so as long as I'm still here, they'll keep on punching time cards.\"\n\n\"My man,\" Larry said, downing the entire glass. \"And if you decide you want to move on at some point, Deke, that's total chill. Just come to me, tell me like a man and set me up with a successor to your little empire, and everything will be hunky dory. But don't try and wrestle my fucking company from my by giving a reacharound to a handful of board members who are only gonna tattle on you.\"\n\n\"Wouldn't dream of it, Larry.\"\n\n\"Killer. I'll tell Ashley you're staying with us and she'll send a little thank you box down for you, and not the other one, which had your severance package in it, if you were gonna stand up for that little shithead.\"\n\n\"Business is business, Larry.\"\n\n\"Exactly!\" Larry said, clapping his hands. \"A'ight, I'm sure you don't want to waste any more time here yapping with me, so get on out of here. I'm glad you convinced me just to be honest and cut through the bullshit. You're my guy!\"\n\nI wasn't even sure how to answer that, so I simple nodded and rose up from the chair, heading out of his office. I was just closing the door behind me when Ashley cleared her throat. \"So which package am I supposed to give you?\"\n\n\"The one where I'm staying,\" I told her. \"The fuck do I care about the rift between him and John? John hasn't been part of my team for years, and hasn't been part of my life for longer. I mean, he didn't invite me to his wedding.\"\n\n\"Well,\" Ashley said, \"to be honest, he did steal your girlfriend and marry her.\" She picked up one folder from her desk and tossed it straight into the shredder. \"So I need to ask you, what color do you like in a vehicle, and do you prefer a car or a motorcycle?\"\n\nI stopped and sort of swiveled my head. \"Uh, blue, and car not a motorcycle. Is he giving me a car?\"\n\n\"He said to give you 'a nice Bulgati' so I'm assuming he meant either a Bugatti or a Ducati. He's not quite dense enough to mean bulgogi, which is a kind of beef. We'll get a nice Bugatti Chiron sent to the office and you can drive it home in a few days.\"\n\n\"Well, this is not what I expected when I came up here, but I certainly can't complain.\"\n\n\"Before you head back downstairs, can I borrow you to help me with this problem? Shouldn't take more than a few minutes to get it all sorted out.\"\n\nIt wasn't like Ashley to ask for help, so I agreed, and we headed down the hall. There are four offices in the top floor, each with their own bathroom, but there's also two bathrooms on the floor itself, mostly for visitors or staff members to use while they're up there in one of the two meeting rooms also on the floor.\n\nWe headed into one of the bathrooms and Ashley stepped in after I did, closing and locking the door behind her, before she turned around, leaning her back against the door. \"So what I want from you is one proper, brutal fucking.\" She started unbuttoning her shirt before sliding it off her shoulders. \"I want you to slap my ass. I demand you choke the life out of me.\" She slowly tugged up her pencil skirt and she had on a tiny black thong beneath it, which matched the bra, both of which looked expensive. \"I don't want you anywhere near gentle. You can leave marks anywhere except the face, and if you don't leave *some* marks, you are not walking out of that fucking door. Am I making myself clear?\" She brought her fingertips up and unclasped the front of her bra, letting it fly open, exposing her tits, a silver barbell through each of her nipples.\n\n\"Yes ma'am.\"\n\nShe frowned, annoyance plain on her face. \"Don't be deferential to me. Fucking go head at me.\"\n\nNow, I should be abundantly clear -- this isn't my bag. I've never been into the idea of inflicting pain on someone. Every guy I've known over the years liked being dominant, at least a little, but there's levels to it, like all things. I'm not the kind of guy for whips and chains. I don't get into hurting people. That's not my thing. I understand that there are people who are into that, but for me, I'm going to be worried about being too hard.\n\nThere was some part of me that realized I wasn't going to get out of this the way I normally do, by dialing in the bare minimum when I was uncomfortable. I was going to have to go completely overboard and if I was told to dial it back, then and only then should I try and pull back.\n\nSo if that's the way we're going to play it, I told myself, better get at it.\n\nI lifted one of my hands up and wrapped it around her neck, my thumb on one side of it, my fingers on the other, and started to squeeze. I felt her tense up, but then saw her tongue slip out to wet her lips, as my other hand reached down and grabbed onto her thong and ripped it right off of her.\n\nThe damn thing was already wet the moment my hand reached it.\n\nI brought the thong up, forcing her mouth open with one hand before I stuffed it into her mouth with the other, bunching it up in her mouth before forcing her to close her lips around it as best she could. I could hear her moaning through it, as I pinched one of those silver barbells and rotated it, twisting her nipple a good amount before letting go of it, the flesh twisting back into shape as her knees buckled a little bit.\n\nMy hand reached up and pulled out those chopsticks, letting her hand hang loose as I grabbed a fistful of it and wrenched her over to the sink, shoving her face right up against the mirror. \"Look at what a filthy fuckrag you are,\" I said, forcing her to smear her lipstick all over the shiny surface. \"Making a goddamn mess in here.\"\n\nShe tried to shift her hips a little, so with my other hand I slapped her ass as hard as I could, and heard her moan again, even more wantonly this time, as she shivered. I could see she had a large round jewel between those cheeks, the hilt of a plug obviously, but I decided to leave that right where it was.\n\n\"You want me to split open your fuckhole with my dick, don't you?\" She didn't immediately react, so I spanked her ass again, hard enough to feel the flesh redden. \"Don't you?\"\n\nShe nodded frantically, wiggling her ass in my direction. I grabbed one of her legs and lifted it up so her ankle was on the countertop, keeping her spread good and wide as I unbuttoned my slacks and unzipped them, reaching in to fish out my cock.\n\nI braced one forearm against the back of her neck as I lined up the head of my dick against her snatch and then punched home, my other hand making sure her leg stayed affixed atop of that sink counter.\n\nI swear I think she came when I thrust in that first time.\n\nWhat followed was some of the roughest, filthiest, most brutal sex I've ever had in my life. I pounded her up against the wall for a bit, with her legs wrapped around my waist while I choked her with both hands. I pushed her onto her knees on the floor for a bit. And at the end, I fucked her bent over with her face in the toilet.\n\nIn a move I've never done in my life, I pulled out right before I came and made sure to blast that load right into her eyes. I felt awful about it, and she couldn't have looked happier.\n\nA coupe of minutes later, she was getting herself cleaned up, having taken the scarf from her waist to wrap around her neck, covering up the bruises I'd left there at her insistence. \"Not bad, but if I'm honest, you didn't seem all that into it, and I think you only went about half as far as I wanted you to. Still, good bit of fun.\"\n\nI left her cleaning up the bathroom. I'd tried to help but she'd swatted my hand away. She tried to give me the ripped thong as a memento, but I tossed it in the trash can as soon as I was out of the bathroom, not so that she could see it, naturally. I didn't want to offend her, but that very much was not my scene.\n\nI headed back downstairs, and I can't believe I'm saying this, eager to just get some work done.\n\nRight outside of my office, I ran into John's little sister, Christina. She's 22, bright, bubbly, blonde, cute but in that girl next door kind of way. She was dressed in a red blouse and a long black dress, smiling at me. \"Hey, can I, uh, talk to you for a bit, Deke?\"\n\nChristina didn't work in my division, and probably only really knew me through her brother. We'd met a handful of times, but she'd forgotten my name more than once, and I could think of only one reason she'd be here, asking to talk to me.\n\n\"Look, Christina, I'm really busy today, so if it's quick, you can just tell me whatever you wanted to out here, but if not, we'll have to do this another day, okay?\"\n\n\"Um, okay,\" she said, looking around the room, then leaning in to whisper to me. \"I was going to come here to try and fuck you to get back at my brother for being such a dick, but if I'm honest, you'd only be disappointed, because while I often use sex as a weapon, I'm not really very good at it.\"\n\nThen she turned and walked away.\n\nGod, my life was getting too fucking strange for my own good."
    ],
    "authorname": "CorruptingPower",
    "tags": [
        "magic",
        "asian",
        "mind control",
        "cheerleader",
        "strip club"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/if-im-honest-ch-01-05"
}