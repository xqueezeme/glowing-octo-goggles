{
    "title": "Trilogy of Tits and Terror Ch. 02",
    "pages": [
        "This story is posted on the Literotica website. Do not repost anywhere else without the author's consent. For fans of my stories, they know what kinds of things to expect. This story deals with similar themes as the stories by wannabeboytoy, seducedHylas, and Dark Betrayal, namely cheating, betrayal, and heartbreak. If stuff like that isn't your cup of tea, then you probably shouldn't bother reading it. I do not condone any of these actions in real life. This is just a story. Enjoy.\n\n************\n\nThe nun had seen some things in her time. Dark things, things that certainly displayed dark powers at work. That being said, that kind of thing was rare. Most of the time, she dealt with good people. The world was a good place. So being confronted by such pure sinful evil was jarring.\n\n\"You can't escape it,\" Madeline said, tossing the black veil back over the mirror. \"This could be you! This poor woman will never get out of there. Trapped for eternity, watching the world go by. Women like me... we don't end up like that. Nassia... she escaped from a worse hell into the mirror, but it didn't take her long to live again. Women like Tess... women like you; those are ones who end up like that. Women like me... we're the winners. We get what we want. We always win! So... why not join us? Why not join the winning side while you still can?\"\n\nThe nun looked away, shaking her head. Despite herself, Madeline's words echoed in her mind. It couldn't be true. This world was still good. They could fight off the dark forces without any real trouble... right?\n\nMadeline paused, examining the mixture, stirring it. \n\n\"I have another story,\" Madeline began. \"Another example of how far our power is spread. What we're capable of. How we can win at any time. Would you like to hear it?\"\n\n\"Do I have a choice?\" The nun asked.\n\nMadeline smiled, before beginning her new tale.\n\n*********************\n\n\"The Wedding Ring\"\n\n*********************\n\nSarah Boudreau had always found herself charmed by the darkness. \n\nYeah, she was one of those girls that used to dress in all black in middle school. She always prided herself on going against social trends, going against the grain, etc. And while, as she grew up, some of those urges calmed down, and she became far less militant about her outsiderism, some vestiges of this side of her still persisted. She still preferred the color black, but her outfits tended to be a lot less gothy than they used to be. She'd become far less contrarian, as she found that line of thinking to be hollow and exhausting and she became more social and friendly. But one thing persisted, even to now.\n\nShe loved scary stories.\n\nScary movies, creepy tales, anything that made people uncomfortable, she loved it. She even enjoyed stuff like true crime, even when they started getting into the icky details. Some people winced at this stuff, but she found herself utterly fascinated by the gory facts. She couldn't get enough. \n\nHowever, for a girl who had been anti-everything for so long, she came from a perfectly normal, albeit wealthy, family. She had always had a good life, and her parents allowed her to act out, knowing that at heart she was a good person. Which she was.\n\nThe best thing that came from her growing up and aging out of that rebellious phase was that she became a lot more pleasant to be around. The good pure core of her began to shine through. She became a lot more fun, a lot more social and a lot nicer. But she never fully shed all of that darkness, and it only added to her appeal.\n\nJust ask her husband. \n\nDave Boudreau was lured to the darkness too, but in a different way. He was an aggressively normal dude. Worked in a boring office as an accountant. Funny but not the funniest. Handsome and attractive, but too quiet and normal to be the super stud. Button-down shirts, nice ties, khaki pants. He wore specs, some of the thick, black, more fashionable kind that was more popular these days, but he didn't ultimately stand out.\n\nThe most surprising thing about him was his choice of wife.\n\nHe was this seemingly boring, normal accountant. No one thought much of his personal life because they couldn't imagine it being exciting. But then they see his wife. This woman with crimson hair, dressed in black, with a sleeve of tattoos adorning her arm. And all of a sudden, he becomes way more interesting. All of a sudden, people realize there might be a bit more going on with him beneath the surface. Maybe there was something dark inside him too, and some of the women that knew him found that mystery kind of... alluring.\n\nDave and Sarah were an odd match, admittedly. Him, this seemingly normal guy, who liked sports and games and average stuff, and then her, this off-beat, tattooed, boisterous redhead. He was tall and fit and conventionally handsome. She was younger than him, 25 to his 26. She was a head shorter than him and while her husband was fit, she had a few extra pounds. Not much, and she wore it well, giving her body curves as opposed to those stick-figure models she couldn't stand. A nice round butt and decent-sized breasts, a good pair of C-cups. She wore bright red lipstick everyday to stand out, and her brash personality stood out compared to his more reserved quiet demeanor. So what brought them together?\n\nMuch like her, he found a little bit of darkness intriguing.\n\nNow, he wasn't into the scary movies or horror stories or anything like that. What allured him was being with a girl with a bit of an edge. A girl who had a bit of darkness to her, and not one of those plain, girl-next-door types. He was a regular dude, but he liked having a bit of excitement in his life. That's what drew him to Sarah. That's what made her irresistible to him. \n\nThat being said, although he loved her dark edge and liked how much she enjoyed horror movies and dark, grim stories, he wasn't totally into the scary stuff. He was a bit of a softy in that sense. Sarah liked to tease him with some of the stuff she saw in a movie, or some of the dark details of some messed-up crime story, knowing it would make him uncomfortable. It was a strange dynamic between them at times, but it worked for them.\n\nHer love of horror stories had extended into her adult life. While she worked at an art gallery, her real passion was true-life horror stories. Ghost stories, spooky tales, haunted houses, urban legends, stuff like that. She ran a website where people would share stories about something they had heard about, or local hotspots for supernatural activity, and Sarah would look into the history of these tales and explore the settings where they took place. Her folks had passed a few years prior, leaving their total inheritance to her, meaning she had more than enough cash to live comfortably. Both her and David worked to keep busy, active and social, but their disposable cash allowed them travel often and explore their hobbies. \n\nFor Dave, that meant going to baseball games, at one point trying to go to all thirty stadiums in one season. For Sarah, that meant exploring these ghost story locales. They tried their best to do these activities together, but seeing as Sarah hated baseball, and Dave was uncomfortable with all this ghost stuff, they often did these activities on their own time. They were comfortable enough in their relationship to allow each other space to do their own thing for days on end. Which was good for Sarah, because sometimes she went down some deep rabbit holes in these ghost stories.\n\nAs she was doing now.\n\nSarah's website compiled as many ghost stories as she could find. It was a great resource for people who were into this kinda thing, and she was detailed oriented enough to compile all the information she could. So, if there was a good ghost story out there, she'd probably heard it herself. She'd heard it, seen it, explored it, and compiled every single detail. Except one. There was one story that eluded her. One that she'd heard whispers about. Rumors. But she could never track down more info on it. She could never find concrete answers or evidence about whether it was really true or not. But she really wanted to. It was her most elusive story, and she would give anything to track it down.\n\nThe Deadly Video.\n\nYeah, it wasn't too creative of a name, but it conveyed the message. So, anyway, the story goes that there was this mysterious video online. It showed this creepy, off-putting imagery, stuff about a creepy pond and a forest or something, plus weird, hypnotic chanting, and pictures of some creepy, evil looking female ghost. At the end, there was text, saying something along the lines of 'Five days until she takes your soul'. And apparently, this video just comes to you, from a mystery source. And when it began, on a TV screen, or a computer screen, and this creepy video gets going, the rumor is that this evil spirit reaches out from within the screen and pulls the affected person within, never to be seen again. \n\nThe details about this story were scarce, to the point where it was easy to just dismiss it outright. But there had been a few people in completely different and unrelated places sharing the same story with the same details. These people would post message after message, sounding more and more terrified, until they just stopped. They were, just like that... gone. Only one person seemed to be able to share the aspect of the tale about the spirit reaching through the TV to grab the person, but Sarah's efforts to reach out this person came up empty. It sounded like a really terrifying scenario, something reaching out to you randomly and stealing your soul, erasing your existence. Incorporating modern technology into it as well made it extra fascinating, as people lived in front of screens more than ever. Every person that had seen this video sounded completely terrified, and the person who had provided most of the details in this story, like the stuff with the TV screen, sounded totally shaken by what they had seen. It sounded like a truly awful and horrifying experience.\n\nNeedless to say, Sarah REALLY wanted to see this video.\n\nShe was pretty fearless in general, especially in relation to these stories. A lot of the time when pursuing the details of these stories, she was able to debunk them. The ones that did seem to have something otherworldly going on did send some unsettling jitters through her, but she was one of those people that when being afraid only excited them. Fear and terror sent thrills through her, so even the scariest of stories were alluring to her.\n\nThere was a lot to question with this specific story. First, there was so little info to go off of here. A few small random posts here and there. And while the concept of a ghost or spirit using TV and computer screens to traverse into the real world was unique, it didn't really jive with many other ghost stories she'd seen. It seemed like cheap, lazy, and modern fiction. So while the story did fascinate her, Sarah was leaning towards it being fake, which was fine, because most of these stories ended up being bunk. The fiction was fun, but she was more interested in the real thing. So, as fun as the story sounded, there wasn't enough to really dig into, so she didn't pay it a ton of mind.\n\nAnd then she saw the video. \n\nShe was at home, in her pajamas, sipping coffee, sorting through emails on her desktop like it was any other day. Dave was already at work, and she wasn't working today so she was going through her website, catching up on that. She was only at it for about half-an-hour when she got a mysterious email, specifically directed to her. What caught her eyes was that there was no return address. No contact info in any way. Just a link, full of gibberish letters and numbers, no clue as to what it was. It didn't tick her internal spam radar, so this seemed to be something of substance. Knowing her virus protections were strong, she was intrigued enough to click on the link.\n\nSuddenly, all the lights in the house went down, leaving the room dim. She sighed in annoyance as she looked around, searching for any signs of power anywhere, when suddenly, her computer screen lit up, filled with black and white static. Sarah's eyes went wide, confused but intrigued.\n\nCould... could this be?\n\nAn image emerged from within the snowy static, black and white footage of a large, mist-covered lake. The water was rippling in the wind, a strangely peaceful setting. The image cut suddenly.\n\n\"Oohhhh...\" a weird, female voice called out from the darkness.\n\nAn image of a large, old-looking mansion emerged, looking run down, slightly overrun with plants, but still standing proud. \n\n\"Aahhhh...\" that same voice called out, her voice reverberating from deep within the footage, making Sarah shiver.\n\nThe image cut again. \n\nA swirl of weird, indecipherable imagery, looking like human bodies sliding against each other, writhing in a mass of humanity. Sarah found the images off-putting for reasons she couldn't place. A few images flashed across the screen, but they went by so fast that she couldn't decipher them. They again looked like bodies, but that's as much as she got.\n\nThe image cut to a lake front, mist rolling across it as the water rose and fell. The image traveled along the lake side before arriving at a sign that said, 'Bosley Lake'.\n\nThe image cut again to a dark, foggy forest. And from within were voices, female voices, calling out.\n\n\"Noooo!\" \n\n\"Help!\"\n\n\"Let me out!\"\n\n\"Please!\"\n\n\"Don't watch!\"\n\n\"Turn it off!\"\n\nThe image flashed in seemingly seizure-inducing light, forcing her to close her eyes for a few moments. When she opened them again, the screen was black. After a few seconds, some words appeared.\n\n'In five days, I come for your soul...'\n\nThese words hung on the screen for a moment. Then, the image was back over the gentle, calm, mist-covered lake. And from the center, in a sudden inhuman motion, a body rose from the lake.\n\n\"Ahh!\" Sarah called out, jumping back.\n\nIt was a woman, clad in white, her long, black hair obscuring her face. She stood there in the video, looking forward, and then the image cut out.\n\nThe video ended, and the lights returned, lighting up the room again. Her computer screen returned to normal, back at her email screen. Sarah was frozen in place, unmoving, until she finally muttered a single word.\n\n\"Cool!\"\n\nSarah was pumped. That was it! That was the video! The Deadly Video! And it was awesome! She was so excited. Yeah, the video was scary, and yeah, it was saying it was coming after her soul, but that's what made it fun. She was going over it in her head over and over. This was so interesting! She clicked on the link a few more times, watching it without fear, until something leapt out to her.\n\nBosley Lake.\n\nShe'd heard that name before, and it took her a bit to remember when she'd heard it. She got up and paced around, closing her eyes, trying to jog her memory.\n\nShe had a side-room where she had collected various baubles from her many misadventures. She had picked up many different little artifacts during her travels, and she had filled up a room showing off these cool, fascinating items. Sarah looked around until her eyes arrived on an item that sent memories surging through her mind.\n\nIt was a ring.\n\nA wedding ring, to be exact. Seeing this made Sarah remember the circumstances of how she got the ring, and the story of the 'Ghost at Bosley Lake'.\n\nShe kinda came into the story backwards. She was at an auction for some of these odd items related to supernatural circumstances. When the ring came up, alongside a painting of the owner of the ring, it caught Sarah's attention. And it was for a really silly reason.\n\nThe man in the painting looked exactly like Dave, her husband. \n\nSeeing a few low bids and sensing some funny serendipity, Sarah bid for the ring and won, and it was only after she did that she heard the whole story.\n\nMichael Bosley was the son of a very rich and ritzy couple back in the late 1800's. He married a woman from a nice family, Carrie Johannsen, who was the youngest of that family's daughters, and as pretty as can be. Their other daughter, Elizabeth, Carrie's older sister, was drowned by Carrie in the big lake near the Bosley estate, in a fit of jealousy. The story goes that the ghost of Elizabeth haunted the area from then on, and wives from around the area began disappearing, as revenge for the jealousy of her murderous sister. Carrie was eventually driven insane, and Michael left her, leaving his wedding ring behind. And, to further this story, about 10 years ago, a documentary crew went to the Bosley estate to document the whole story. The story of the ghost was pretty well known, and plus, there was another aspect to the legend. Apparently, after Michael left, the family fortune went unclaimed. Many speculated that the fortune was still somewhere in that house, but it had never been found. No doubt, on top of documenting this interesting story, this film crew was keeping an eye out for that money. But it was a fool's errand. The lead director went into the mansion and she never came out. The crew ran, and after an investigation in the house, no evidence of the director's presence was found, other than some film equipment she had left behind, and since that day, the house had been gated off.\n\nWas this video related to this story? The ghost of Elizabeth Johannsen?\n\nOh! It would make sense! The documentary crew would give a reason as to why this ghost would be using screens and video footage to haunt others. They brought this technology into her presence, and she used it as a new way to spread out and haunt more people. It was all coming together. \n\nSarah got lost in her pursuit of knowledge, uncovering all the information she could about the Bosley story, and how it linked to the video, looking at everything she had and charting out where it had happened. Sensing an opportunity for a field trip, she eagerly made plans.\n\nShe was still in a bit of a fervor later in the day when Dave got home. Still in her pajamas, she was eagerly consulting her notes on her computer.\n\n\"Hey, lady...\" her husband called out from behind her, affectionately.\n\n\"What brings you here?\" she asked without looking up. He smiled.\n\n\"Well, I live here, and I got off work and decided, you know what... I'm gonna go home,\" he explained with a smile, stepping behind her and rubbing her shoulders. \"What are you working on?\" he asked, sensing she was onto something exciting.\n\n\"You know that story I told you awhile back, the one about the video that's supposed to steal your soul?\" she asked with a perky smile.\n\n\"Uh, yeah, I think so. Why?\" he asked.\n\n\"Well, this bitch just watched it,\" she said, pointing at herself with her thumbs. \"Here, check it out,\" she said, grabbing her mouse to open up that email.\n\n\"Ummm... you sure about this?\" Dave asked hesitantly.\n\n\"Oh, it's fine,\" she said, waving off any worries. \"I mean, a video that steals your soul? C'mon,\" she said, rolling her eyes. It was true. She wasn't taking this that seriously. While it did seem like there was something to this, she didn't actually think they were in any mortal danger. Sure, the lights had gone out, giving this some credence, but in her experience, threats like this usually ended up being empty ones. Something was going on here, but it probably wasn't as dangerous as it claimed to be. Assuaged enough, trusting his wife, Dave allowed her to hit play on the video. As she did, the lights dimmed in the house.\n\n\"Wait... what the hell?\" Dave said, stunned.\n\n\"Oh yeah, it does that,\" Sarah said with a smile.\n\n\"I thought you said there was nothing to be afraid about,\" Dave asked, slightly panicked.\n\n\"Oh, there's something to this, definitely. I think our souls will be just fine though,\" she said confidently. A little taken aback, he had no choice but to watch as the video started to appear.",
        "Dave watched as it went over footage of a creepy lake. As the image cut, what could only be described as a female moan of pleasure resonated from the footage. Another load scream of pleasure rang out a few moments later.\n\nThen the image cut to a whirling mass of female bodies. This image, to him, seemed strangely sexual. A jolt went down his dick as he his mind could pick out all the details. Long, bare legs. Flat bellies. Round, juicy, mouth-watering asses. Bare pussies. And, most notably, pair after pair of massive, round, firm tits, jiggling and bouncing hypnotically. Dave was both freaked out by these images and uncomfortably erect.\n\nThe fear side of things only returned when he heard women's voices, screaming out in pure fear, begging for help, begging to be freed.\n\nThen, when the screen started flashing, Sarah again couldn't handle it, but for some reason, Dave could watch the footage just fine. He could see everything.\n\nHe could see a pair of pale, creamy legs spread savagely, exposing a tight, nearly bare cunt. He saw a pale, ring-clad set of fingers reach down as whoever the woman on-screen was played with herself.\n\nHe could see a round, bare ass, jiggling on screen, as now two hands reached back, rings adorning nine of her ten fingers, dig into the perky cheeks and peel it apart, exposing her asshole to the viewer. It looked clean, and tight, and devilishly sexy.\n\nHe could see an absolutely huge pair of tits on screen. Pale as the rest of her, but a perfect, sexy pale. Those same ringed fingers reached up to squeeze, the luscious, soft, mouth-watering flesh. Her pale, pink nipples were stiff, calling out to him.\n\nSarah's eyes were closed during all of this. Dave's were wide open.\n\nJust as the flashing ended, words popped up on screen.\n\n'In five days, I cum on your cock...'\n\nDave blinked and looked away, and when his eyes returned, he saw that some of the words had changed.\n\n'In five days, I come for your soul...'\n\nDave was deeply scared in a way he couldn't explain. This video had him on edge. He wanted to stop watching, but he couldn't look away. Then, when that body rose from the lake inhumanly fast, he almost jumped out of his skin.\n\n\"JESUS CHRIST!\" He called, jumping back. The body just stood there, clad in white, her long black hair covering her face. But he knew, he just knew, that this was the woman he saw earlier. The woman who had exposed herself. Finally, the video cut to black. \n\n\"I told you I don't like this kinda shit!\" Dave yelled out, upset.\n\n\"Oh, c'mon,\" Sarah said, laughing. \"It's fine!\"\n\n\"That...\" he began. \"That's something! It ain't fine!\" Well, it was 'fine', but not in the way he meant.\n\n\"Yeah, there's something there,\" Sarah admitted. \"Something made our lights turn out. But like I said, I find it highly unlikely that our souls are in danger.\"\n\n\"Why?\" he cried out. \"If something can turn out the lights, why can't it steal my soul? Why aren't you taking this seriously?\" \n\n\"Honey, I can turn out the lights... does that mean I can steal your soul, too?\" Sarah asked with a raised eyebrow as she stood up.\n\n\"Well, my parents might make that argument,\" Dave replied, making her smile. She stepped towards him.\n\n\"I admit, I've seen some crazy shit! Stuff I can't fully explain,\" Sarah said. \"But, I've seen plenty of warnings. And a lot of time, it's just bluster. Fear. Trying to keep you away. That's what they do.\" Sarah stepped up to her husband and wrapped her arms around him, rubbing his back. \"Trust me, I know what I'm doing. I'm good at this. And I have a plan.\"\n\nDave looked down at her, still upset, but allowing himself a loving smile.\n\n\"You do?\" he asked. \n\n\"Yeah, I've already linked this to another case, which has a lot of information. It's that one with the ring, and the guy that looks like you. Remember? If this is what I think it is, it's just a lost spirit lashing out. A spirit that needs to be put to rest. I'm gonna head to that lake tomorrow. I've already put out some feelers, and I've got a few ideas beyond that,\" she assured, leaning up to kiss him.\n\n\"Trust me... we'll be fine.\"\n\n*************\n\nBosley Lake was a good distance away, so Sarah got an early start. By the time she reached the area, it was around lunchtime. Eating lunch at a local diner allowed her to probe around a little bit. And yeah, the locals knew the story really well. The Ghost of Bosley Lake was a pretty well-known tale around this small, lakeside town. And what these people told her pretty much followed what she knew about the story already. This wronged girl gets killed by her jealous sister, and she haunts people to this day. Most of the hauntings and disappearances were centered on this area, but some of the rumored cases were from farther out, like her own. Some people seemed to take the story seriously, and some wrote it off as nonsense. Some spoke out about people that had actually seen the ghost, and some people were clearly telling tall tales. Some of the old-timers said they knew exactly what spot in the lake the girl drowned in, which they pointed out to Sarah. \n\nShe then went to Bosley mansion, and confirmed that it was very much blocked off by a thick, well put together fence. This sent a shiver through her, admittedly, as whoever did this did it for a good reason. As if something powerful was within. She tried not to let it affect her work, but it added a bit of seriousness to this thing, as if this whole thing might be a bit more legit than she wanted to let on. As she stood outside of it, the wind blew across the dilapidated mansion, making the supports whine and call out in an otherworldly moan.\n\nSarah had a handful of case files relevant to this case, about people who were rumored to have been affected by the ghost. Some were a bit of a drive away, some were close, so using this area as a home base seemed apt. There were three women who had disappeared around here that she had info on. One of them left behind nothing, no family, no stuff. Her house had been sold off, and the new buyers never met the previous owner. Her name was Joyce Wade, and by all accounts, she had fallen off the face of the Earth. The two other women had plenty in common. Both had been married, only to seemingly leave their husbands behind. They didn't live close by, and there didn't seem to be any connection between them other than the fact that they had disappeared. The husbands had been cleared of any wrong doing, and the cases were officially written off as women running away from their marriages.\n\nBut Sarah would get to the bottom of that. \n\n\"I don't know what questions you have,\" one of the husbands, Billy Tramone, said to her after Sarah knocked on the door. His wife had disappeared about ten years prior, and Sarah suspected the ghost. \"My wife left me... that's it, really.\" \n\n\"Did she say or do anything odd?\" Sarah asked. He shook his head.\n\n\"Where are you from, anyway?\" he inquired. He was a handsome man, a little over forty, and he had probably been a huge stud in his younger years. He might have been a good guy in those younger years too, but Sarah got bad vibes from him now. She could feel him eyeing her up.\n\n\"I'm not from anywhere official,\" she said. \"I'm investigating the Ghost of Bosley Lake, and I was looking into the possibility that your wife might have been affected.\" He rolled his eyes and shook his head.\n\n\"My wife left me. I don't know where. That's it...\" he stated firmly, on his way to getting upset. Sarah nodded, trying to soothe his anger.\n\n\"Okay, I understand. Can I just ask you one more question?\" she asked.\n\n\"Look...\" he began, suddenly impatient. \"I've got stuff going on tonight. I don't have time for this.\"\n\n\"Okay. Well, then, I'm sorry to bother you then.\" Sarah stated, relenting. He rolled his eyes then shut the door in her face. But not before she noticed one thing.\n\nHe had a nice, big television screen.\n\nNoting this fact, she went to drive over to the other man on file, Chase Harmon. He was a younger guy, and his wife had left him a couple years prior. Very handsome, very approachable. But when Sarah brought up his wife, he clammed up, not really interested in getting into it. He said the same thing as Billy. His wife had run off. Left him. And that was it. Nothing beyond that. He quickly shooed her away, and again, Sarah couldn't help but notice the massive flat screen TV in his front room.\n\nSomething was off here. Maybe... maybe the ghost had done something to the wife, and was sort of holding them hostage, always watching, preventing them from saying or doing anything. Sarah remembered how impatient Billy Tramone had seemed, and she wondered if something more was going on there. \n\nKnowing it was on her way, Sarah made her way back to Billy's place as the sun began to set. She parked down the street from his place and crept up to his house. Looking through the blinds, all she could see was an eerie glow coming from the TV, lighting up the dim living room. She heard some noises coming from a back room, so she made her way around the house, peeking through the blinds into his bedroom.\n\nOn the bed was Billy, naked, and on top of him was a woman. A naked woman, with long, dark hair and pale skin. She was on top of him, riding him, bouncing roughly on him. She was moaning loudly, as was he.\n\n\"Oh God!\" Billy moaned. \"So fucking good!\" he said, reaching up and groping the woman's massive tits. Sarah's eyes widened at their sheer size before looking away, embarrassed to have caught the fucking couple in such an intimate moment. Okay, he was trying to get Sarah away earlier so his booty call could come by. Clearly, he had very much moved on from his wife and he didn't want Sarah to know. That explains things.\n\nShe made her way back to the Bosley Lake area to her hotel to end her day. She had four days left till this countdown ended, where her soul was in danger. But that was okay. She had big plans for the next day. \n\n*************\n\nSarah pulled her car up to the lake front. People gave her odd looks as they looked at her outfit. It's not every day they see someone in a wetsuit. Opening up her trunk, she pulled out the rest of her gear. Flippers. Goggles. Air tanks. \n\nSarah was going for a swim. \n\nA lot of exploring in these ghost stories involved delving into rivers and lakes, so Sarah eventually realized it might be for the best to get SCUBA certified. So... she did. And she was about to put it to good use.\n\nPulling up to the area that was pointed out to her the day before, she waded into the water, flashlight in hand, slipping below the surface to take a look around. The water was murky, making looking for anything difficult. It was a big lake, and it had decent depth in spots, so searching the lakebed was tricky.\n\nAnd what was she looking for, you ask?\n\nThe body of Elizabeth Johannsen. \n\nBeing in the lake for this long probably meant the body had deteriorated greatly, but she had often found, in cases like this, that when the supernatural was involved, remains tended to last a bit longer than usual. So, she had some hope. \n\nThat being said, the work was pure drudgery. She found nothing in the area where she had been guided to, and she had to stop a few times out of pure exhaustion. She began expanding her search radius a bit more, exploring more of the lakebed. She was about to give up when she realized she was swimming near the area where the ghost had risen from the water in the video. Reenergized, she began searching the lakebed in this area. Still coming up empty, she was about to give up when she saw a glint of light as the beam of the flashlight bounced off of something. Swimming down and combing through the sand at the bottom of the lake, she uncovered something.\n\nA ring.\n\nIt looked like a wedding ring. A shiny, metal bit of jewelry. It looked old, and fancy, and exceedingly expensive. Either someone had an engagement go awry, or this was something very important to her search. She gathered the ring into her palm, and was about to swim away when she saw something, making her jolt back in shock.\n\nIt was a hand.\n\nA bony, skeletal, deteriorated hand, reaching out from underneath the lake bed. Shocked, Sarah swam up to the surface. Her head rising above the water, bobbing in the late afternoon sun, she looked around, stunned. Gathering her location in the lake, she again swam down, this time to plant a marker. After doing this, she swam towards the edge of the lake, stepping onto the shore.\n\nHoly shit! Holy Shit!\n\nShe might have just found Elizabeth Johannsen!\n\n**************\n\nSarah reported her findings that night to the police. It took a while for a crew capable of dredging up the body to come into town, but by the next afternoon, the body had been removed and taken in for investigation.\n\nThere wasn't much to be done with it really. An examiner was brought in, and all they could really do was age the body. There was no way to identify it, but they were able to determine that it was about 120-130 years old, which lined it up right in the time frame when Elizabeth drowned. Sarah did as much as she could to move things along. Her goal was to get the body buried, to set the spirit to rest before the countdown ended. She knew a few people in high places, and they tried to influence things to get this case settled, and after the initial examination, they had nothing really left to accomplish. \n\nWith one day left on her five day danger period, the body of Elizabeth Johannsen was finally put to rest. The whole pomp and circumstance was done for her. A lot of people heard the rumor that the body they had found was Elizabeth's, and even though there was no official proof, everyone believed it, including Sarah.\n\nAnd she knew it for sure.\n\nAnd it was all due to that ring. When she returned to her room and cleaned it up, she was able to find an inscription on the inside of it.\n\n'For Carrie, With Love,'\n\nCarrie, Elizabeth's older sister. Elizabeth's killer. \n\nSo yeah, Sarah was sure that was Elizabeth.\n\nShe had solved the case of 'The Ghost of Bosley Lake.'\n\nSarah updated her website with everything she had found. People were responding with interest as she posted details and images of as much as she could, including the ring. Sarah liked collecting these little keepsakes, and this would be the one for this case. It was a really nice ring too. Probably worth a lot. But after going so far, and solving this case herself, she felt too connected with it to get rid of it. \n\nSarah called Dave and let him know the good news. He sounded very relieved that his soul was no longer in danger, and she told him that she would be back the next day. \n\nShe woke up in a good mood, and she danced around happily as she passed the point in the day where she had seen that video five days prior. Hooray! She did it. She still had her soul! She added a bit of a skip to her step at this. Her plan had worked, and she couldn't be happier. \n\nShe had won.\n\nShe was about to head out when she checked her email one last time. There, she found a message that made her stop in her tracks. A reply from an email she had sent years prior. A response from a familiar name.\n\nJoyce Wade.\n\nThe woman who had disappeared, one who they suspected was a victim from the ghost. And the email response was from an address Sarah had contacted years back. Her email address was the same as the person who gave all those extra details about 'The Deadly Video'. She was the one who had seen everything. And now, she was contacting her.\n\n'Please come to my house if you can. I'd like to discuss this case with you.\n\nWhen you get here, please leave your phone in the car.\n\nJoyce Wade\n\nShe left her address at the end, and finding it between Bosley Lake and home, she opted to make the drive.\n\nJoyce's home was literally in the middle of nowhere, in the middle of the forest. Sarah drove a few miles down twisty dirt roads before arriving at a small cabin. Stepping out and leaving her phone in the car, she moved towards the house.\n\nThe door opened and there appeared a woman. A little over forty, she looked a bit worn down. Cigarette hanging from her mouth, she looked over at the approaching woman.\n\n\"You Sarah?\" she asked.\n\n\"Yeah!\" Sarah chirped.\n\n\"You leave your phone in the car?\" Joyce asked.\n\n\"Yes, of course,\" Sarah stated. Joyce paused for a minute, appraising her.\n\n\"Alright, come in,\" she said, walking inside, letting Sarah follow. The cabin was sparse. No TV. No computer. Nothing too technical. There was a kitchen. Furniture. A bookshelf. Some outdoor supplies. But that was really it.\n\n\"I heard about your story on the news at work,\" Joyce stated, answering her unsaid question. \"I remembered an email I got sent awhile back. Wondered if it was you. Went to the computer at the library to reply. Guess I was right...\"\n\nJoyce looked like she had lived quite a bit. Sun worn, wrinkled skin, she looked older than she probably was. The smoking didn't help with that either.\n\n\"So... you started looking into this awhile back,\" Joyce began. \"What brought you into this now?\"\n\nSarah sat down and explained everything, how she saw the video and how she connected it with this case. Joyce eyes widened when she heard about her actually seeing the video, but she didn't speak up. Sarah explained how she found the body, and put that poor woman to rest, finally, seemingly putting an end to things. Joyce listened intently, and as Sarah finished up, Joyce snuffed out a cigarette in an ashtray and looked back at her coolly.\n\n\"Well, I think you found the right person but you've got your story backwards,\" Joyce stated. \"You really don't know nothing at all.\"\n\n\"What do you mean?\" Sarah asked, confused, her smile dipping slightly.\n\n\"Elizabeth was no innocent flower,\" Joyce began, shaking her head. \"Quite the opposite. No... Carrie... that was the good one. She was the star. The apple of her parent's eye. Smart... pretty... kind... everything you could ever want. And Elizabeth... she was the opposite. Cruel. Impulsive. Evil. And, most importantly of all, she was a cheap fucking slut!\" Sarah was taken aback by this, and Joyce continued. \"All these were reasons why, when they had the chance to marry off a daughter to the son of the richest family in the state... they chose their youngest over their oldest.\"\n\nSarah stood in place, hanging on every word.\n\n\"Elizabeth didn't like that. Not one bit. She tried to act like everything was alright, but her intentions became clear. Six months after marrying her sister, Michael Bosley was seduced by Elizabeth. He was as nice and kind and loving as his wife, but that didn't matter to Elizabeth. And it didn't stop him from succumbing to her wiles, either.\" Joyce said, lighting up another cigarette. \"When Carrie couldn't find her wedding ring, Michael confessed to everything. He felt regret for what he had done. He told her that in a fit of passion, Elizabeth had taken it for herself when Carrie had left it behind on her dresser. Carrie was furious, but she hid it well. She took her sister on a ride on the lake in a small boat, like they did when they were little girls.\"\n\n\"Carrie eventually got her to admit the truth. That Elizabeth had fucked her sister's husband. She made Elizabeth hand her back the ring, which she did. But when Carrie went to put the ring back on, Elizabeth stood up on the boat to take it back. To fight her. Her own sister. The boat overturned. They both went into the water, as did the ring. Problem was... Elizabeth didn't know how to swim. She called out to her sister for help when Carrie reached the shore, but she wasn't feeling too generous. Elizabeth drowned that day, and from that day on, Elizabeth has been a ghost, haunting people. She drove poor Carrie crazy, to the point where Michael had to leave her. They had reconciled things after his mistake, but he couldn't deal with it anymore. Couldn't deal with her. Some say he rejoined Elizabeth, in whatever way he could. Some say he died soon after. Some say he just disappeared, starting a new life, leaving it all behind. But don't get the story wrong... Elizabeth was a twisted little slut who got what was coming to her.\"",
        "The silence hung between them as Sarah took it all in. Could it be true? Could Elizabeth have been the evil one after all? Wait, then how...\n\n\"How do you know all this?\" Sarah asked.\n\n\"Because Elizabeth told me,\" Joyce said, exhaling a thick puff of smoke. She noted Sarah's confusion. That video that you saw... I saw it too. Ten years ago. I don't know how I received it, but I did. I got it in my email. So I watched. And I dismissed it. Thought it was just internet nonsense. Five days later, she came for me. She came out of the TV. She reached out and... crawled... out of the TV. She didn't look like a ghost. She was, like, a real person. She was soaked with water, and the way she moved... it was terrifying. She stood up, and she walked right up to me... I swear, I thought I was gonna die. But she stopped in front of me, like she was confused. Like something wasn't right. She asked me to give her my husband.\"\n\nThere was a long pause as Joyce looked away, lost in thought, puffing on her cigarette. Finally, she looked back at Sarah.\n\n\"I never married. I... well, it just never happened,\" Joyce admitted, slightly embarrassed. \"That wasn't the answer she wanted to hear. No, no, no, not in the least. She was furious. She yelled... she screamed... the house was shaking. The whole world was shaking. She said to give her a married couple now. To supply them to her in order to save my own skin. And...\" she paused, taking another drag on her cigarette. \"I was so scared... I thought I was gonna die. So... I did. I... I sent the video to my best friend. Nancy... Nancy Tramone.\"\n\n\"Billy Tramone...\" Sarah said under her breath. Joyce nodded.\n\n\"That's her husband...\" Joyce said. \"The ghost then grabbed me by the throat, holding me against the wall. And that's when I saw everything. Her story. I saw it in my head, like I was seeing her memory. Once I saw everything, she dropped me to the floor. I had only barely opened my eyes again when I saw that... thing... crawling back into the TV.\"\n\nSarah was just staring, shocked.\n\n\"I regretted what I did... I mean it, I do,\" Joyce explained. \"I couldn't bring myself to admit what I had done. I was a coward... a fucking coward. I had betrayed my best friend. Sold her out. I eventually worked up the courage to warn them, but by the time I got to their house, it was too late. I got there and watched that... beast... that evil slut... grab my best friend from in the TV, reach out like it was nothing. She grabbed my friend and pulled her in. She was gone. Just... gone. The only thing that didn't get pulled in was her wedding ring. It got pulled off her finger. Then that thing crawled out of the TV again. She ignored me. She only cared about Billy. She went after him, and he was frozen in terror. Then... somehow... she seduced him. She used her body to seduce him, even after all that. I don't know how, but it worked. They had sex, right then and there. We could hear Nancy screaming out from the TV, but they didn't care. Billy... he was such a good guy back then. But... when she was done with him, he was different. Changed.\"\n\nSarah was stunned. This was incredible. How could this be true? Sarah could easily detect when she was being lied to or misled, but Joyce seemed so haunted. This was real for her.\n\n\"That ghost left once they were done. She crawled back into the TV screen, but not before she grabbed Nancy's ring. She put it on one of her fingers, like a trophy. Her fingers were adorned with rings. Tons of them. Like... she had done this before. Done it... a lot of times. All of her fingers had rings on them... except for one. The ring finger on her left hand.\" Joyce explained.\n\n\"Why?\" Sarah asked.\n\n\"I think... I think she's saving it for the one she's looking for. The ring that means the most to her, from the man she's seeking out.\" Joyce said. Sarah could feel the ring in her pocket, the discarded one from the bottom of the lake. She had no doubt it was the same ring she was talking about.\n\n\"What man is she seeking out?\" Sarah asked \n\n\"She only tears apart married couples,\" Joyce explained. \"That's her mission. Tearing apart couples to prove how weak those bonds truly are compared to her. To prove that she is more worthy than the wives they marry. That's why she wasn't interested in me. Only married couples. She wants to destroy married women, drag them to the hell she's had to live in, for all eternity. And then men... these married men... she wants to show them what their missing out on. I think she's collecting them, wearing their broken vows like trophies. Every five days, she reappears, and reclaims her trophies. Re-conquers them. Changes them. Fucks them, again and again, over and over. I swear, that bitch probably gets laid now more than she did when she was alive, and she was a huge slut back then, so that's saying something. I suppose she'll keep doing it till she finds the man she likes. The man she wants to settle down with.\"\n\n\"But... I stopped her. I found her body and buried her,\" Sarah explained. Joyce only smiled.\n\n\"Oh honey... that might work for other beings, but not her. I know her. I saw her true form. I know what she is. Trust me... she is not done. You did nothing to stop her. She's not after spiritual peace. She doesn't want rest. She wants to live. She wants revenge. She wants power. She wants dick. And she will not settle for anything less. She wants what was stolen from her. The life that was stolen from her. With the man that was stolen from her,\" Joyce explained.\n\n\"But he's long dead.\" Sarah replied.\n\n\"Well, yeah, of course. Maybe that's why she fucks so many men. She's looking for the one who matches up to him. Who compares to what she lost.\"\n\nSuddenly, Sarah's mind flashed. To what had drawn her to this case in the first place. The painting of the man whose ring she purchased. A picture of Michael Bosley.\n\nHe looked exactly like Dave.\n\n\"Oh my God!\" Sarah sighed softly, standing up. \"My husband... he looks exactly him. Like Michael.\" Joyce's eyes widened.\n\n\"Oh no...\" Joyce said. Sarah turned to leave when Joyce stopped her. \"Wait! Wait...\" she stopped in her tracks. \"Wait... I know you think you can rescue him. But it's too late! He's gone. She is too good at what she does to be stopped. Just walk away! Hide, like I have. If you try to save him, you are only walking into her clutches. And trust me... there's no escape. Do not underestimate her power!\" Sarah thought for a second before turning to move. \"Wait!\" Joyce said again, calling after her.\n\n\"He's my husband! I have to protect him!\" Sarah called out before sprinting out the door, running to her car. \n\nJoyce looked at the woman, watching her run away, knowing she would never see her again.\n\nWhat a love-blind fool.\n\n************\n\nSarah was zooming down the highway, cursing at her phone. Of course, this is the one time it chooses to die. She couldn't turn it on, she couldn't recharge it, nothing. She even stopped at a gas station, begging to use the phone, only to have them tell her their phones were out too.\n\nNaturally. On this day of all days.\n\nSo, she was zooming home, hoping to get there as fast as she could and beat Dave home.\n\nOkay, this case was actually more serious than she might have thought. She had done it all by the book, and it had been all for naught. She had to get to Dave, to warn him. Because Elizabeth was coming, and she had to be stopped somehow. \n\nDave arrived home from work first, a little tired, but happy to be home. He was a little disappointed to see Sarah wasn't home yet. To put it bluntly, he was feeling her absence in his groin. They had a pretty active sex life, and she could be quite a handful in bed, far more exciting than any of the other girls he had been with. He wished she was home now so he could ravish her. But not yet.\n\nHe set his stuff down and began settling in when something caught his eye on Sarah's computer desk. A picture of a painting.\n\nHe remembered it well. She had seen this picture at an auction, a painting of a guy who had looked exactly like him, and she thought it'd be cool to get the item associated with it, the ring that was currently on top of the picture. Dave's eyes lingered on it before moving towards his bedroom, pulling at his tie to loosen it. As he reached his bedroom, he heard the door open and close, and some frenzied, hurried steps.\n\n\"Dave!\" Sarah called out, afraid. Smiling to himself, he turned back. Down the hall in the living room appeared Sarah, looking back at him. They met eyes, and she smiled.\n\n\"Oh thank God!\" Sarah said, exhaling slightly. But in her frenzy, she lost track of her surroundings.\n\nShe was currently standing in front of her large, flat screen TV.\n\nSarah's relief only lasted for a moment. Because in that same moment, the lights in the house flickered, and the TV turned on, lighting the room in an eerie glow of static. Sarah only had a second to process this before it was too late.\n\nA hand reached out from within the TV screen, grabbing Sarah roughly by the shoulder.\n\n\"What the...!\" Sarah cried out, startled. Before she could escape the grasp of this hand, it used its inhuman strength to lift her up, dragging her into the screen. \"AHHH!\" Sarah screamed out as her top half was tugged through the plane of the TV screen, being pulled within, her legs hanging over the edge of the screen, still in the living room.\n\n\"Sarah!\" Dave called out, moving to run forward to help his wife. But it was too late. As he reached to grab one of her kicking legs, whatever force that had her in its grasp yanked her hard, dragging the rest of her into the TV screen, leaving behind a small clatter as some things fell from her. But other than that, she was completely gone. Disappeared. \n\nDave ran forward, slamming his hands against the static screen, slapping against it. \n\n\"Sarah!\" the terrified husband cried out. How? How? She got pulled into a TV. Not behind, but within. Into. What the fuck just happened? Where did she go? What the fuck was going on?\n\n\"Dave!\" he heard Sarah cry out from the screen, sounding far away. \n\n\"Sarah!\" he called out, but this time, there was no response. \n\n************\n\nSarah had fallen into the TV, into some new plane of existence. Into the fog. The all-encompassing fog. She couldn't see a thing. She still felt like herself. She was still in her body. But it was like she had been pulled into a dream. As if she was falling into a dense, heavy fog. She couldn't see through it. She couldn't comprehend where she was at. But it felt like she was falling. Not at a breakneck speed, as if falling through the air. No, it was like she was sinking underwater, falling deeper and deeper, farther away from home. And as she sunk deeper, her mind drifted, unable to think clearly. Unable to think like normal. For a time, she found herself hypnotized by the void, lost in nothingness.\n\n************\n\nBack home, Dave felt just as adrift, only in a different way. He backed up from the television, terrified. What should he do? What can he do? What the hell just happened? He didn't even know where to start. He stumbled away from the TV, his eyes never leaving the screen. Was this real, or some awful nightmare? He scratched at his arm, hoping to wake himself from this scary dream, but there was no escaping this nightmare.\n\nA hand reached out from the screen again. \n\nDave jumped in shock as the hand reached out again, looking for something. Grabbing the edge of the table in front of the TV for leverage, another hand reached out, joining the other. \n\nTwo long, lean, pale arms, fingers adorned with rings.\n\nThe arms tugged forward, until a head emerged, a messy mop of long, black hair, obscuring her features. This ghostly woman began emerging from the screen, more and more of her appearing. She wore a long, white, thin garment, like a plain, cotton dress, hanging down past her knees. And her body was covered with water. Absolutely drenched, dripping heavy drops of moisture everywhere. \n\nDave stood frozen in fear.\n\nFinally, the woman emerged, sliding down onto the floor, falling heavily onto her belly. Drenched in water, she slid along the floor lightly like a sea serpent before coming to a stop. Dave looked at her, seeing lots of black hair, that long white garment, covering her, clinging to her due to the heavy weight of the water soaking it. For a moment, she just lied there on the ground, unmoving. Then, looking up with an almost inhuman jerk, she stared Dave down, her mess of black hair still obscuring her features. Getting on her hands and knees, she crawled forward like a spider, the rings on her fingers clicking on the wood floor, moving as quick as a flash, making Dave jump back. \n\n\"Jesus! What are you?!\" Dave cried out. The woman said nothing, just looking up at him, studying him from her prone position. She then pushed herself up into a seated position quickly, knees raised in front of her, arms wrapped around them, face still obscured by her long black hair as she looked up at him. For a minute, she just stared and he didn't move a muscle. He was too frightened to do anything. Finally, she slowly reached up and parted her thick black hair, revealing her face for the first time. Dave was shocked by what he saw.\n\nShe was absolutely stunning.\n\nFor some reason, this cooled his fear, somewhat. Yeah, she had dragged his wife into a TV screen, before crawling out of it herself, into his living room from some mysterious plane of existence. But she looked good, so maybe she might not be so bad. It felt like a strange thing to notice at this point, but it was the truth. She did look good.\n\nVery, very good.\n\nLarge, expressive, crystal-blue eyes. Plump lips, shaded black, which formed a natural, sexy pout. And she was just stunningly, classically beautiful, like a model. But the whole ghost thing darkened her look, gave a little edge to her good looks that at one time must have come across as effervescent and gorgeous. Despite everything, he found himself transfixed by how attractive she was. \n\nFrom what he understood, the woman at the center of this ghost story was supposed to have been a few years older than he is now when she, uh... died. Her late twenties. But in her position, she looked younger, posing like a scolded child, sitting down with her knees tucked to her chest. And she was staring up with an odd expression, one of almost wonder. Her eyes were wide, and she gazed at him open-mouthed, studying him. Appraising him with almost child-like shock.\n\nThen, she rose to her feet, and revealed to Dave that she was all woman.\n\nThe way she rose was odd and jarring. Instead of crawling to her feet, she just sort of rose straight up, utilizing no leverage other than her firmly planted feet. And as she rose, her voluptuous form was finally revealed. And the first thing he noticed, and it was impossible not to notice, was that she had absolutely MAMMOTH breasts. Just insanely huge tits, only made more massive by her slim, hourglass figure, jutting out against the white fabric. And that white garment she had on was so drenched with water that it clung to her. And because the dress was white, and so drenched with water... yeah, it was almost completely see-through.\n\nDave could see everything. \n\nThe frozen, married man could see every square inch of her huge tits. Every smooth, round, inch of her ghostly-pale breast flesh, exposed to him through her nearly transparent clothing. They were so full and round and shapely, capped with hard, pink nipples, pressing outward against the white material. Calling out to him. The soaked garment strained to contain them as it molded to their round, succulent shape, while also showcasing the dark shadow of her juicy cleavage.\n\nThe white material clung to every bit of her, showing off her flat, fit belly, and her small, cute navel. The material also stuck to her prominent, feminine hips and down her thighs, where the garment ended in a ragged mess. The material was heavy, drops of water falling from it to the floor between her legs as the material stretched between them. And even though the dress wasn't clinging to her between her legs, it was so wet and threadbare that Dave was able to see the dark shadow of her cunt-hair, a small, fashionable tuft of dark hair.\n\nNeedless to say, seeing all this, Dave didn't know how to react.\n\nHe was seeing a woman almost completely exposed to him, a woman he didn't know. But she wasn't a real woman. She was a ghost, or a spirit or a demon or something. Some specter from the underworld who had captured his wife and was now coming for him.\n\n\"Can you help me?\" she asked, finally speaking up, her voice feminine but fragile, crackling with underuse. \n\n\"Wha... wha...\" he stammered, still too shocked to speak. She was standing in place for a bit, still staring him down, studying him, and he just about jumped out of his skin when she began moving.\n\nWavering ever so slightly, as if not used to this corporeal form, she began to step forward in herky-jerky steps, moving forward a few stops before stopping, swaying in place. Padding over the hard wood in bare feet, water dripping onto the floor, she got closer and closer, her eyes never leaving his face.\n\n\"Can you help me?\" she repeated.\n\n\"What... wait... wait...\" Dave stuttered, still in disbelief that this was actually real as she got closer. As she walked, her massive boobs were bouncing and jiggling hypnotically beneath the thin white material, her dancing nipples arresting his vision. He held his hands out to shield himself from her, but she was undeterred. She kept approaching, eyes locked on him, sauntering towards him, a trail of water left behind her. \n\n\"Can you help me?\" she asked again.\n\nWhen she got within arm's length, she blew past his outstretched hands, putting her hands on his chest. Summoning some sort otherworldly strength, she pushed the taller man back till he slammed against the wall. Panting for breath, staring down at this crazy ghost woman in front of him, he couldn't find any words to say as she pushed herself against him, her huge breasts pressing against his chest. His clothes were becoming wet from her close proximity as she pressed herself in closer, moving so her arm was now against his chest, keeping him still, holding him in place against the wall.\n\n\"Can you help me?\" she said, looking him right in the eyes.\n\nDave looked down as she held his gaze. He thought she was a ghost, but she felt all real. He could feel her hands against him. He could feel her massive boobs pressed softly against his chest. Every part of her felt very, very real. But there was a darkness inside her. An evil cascading out of her, washing over him. And her gaze was hypnotic as she looked at him, still studying him.\n\nHe didn't know what to do. He could feel that her strength was coming from a place beyond this world, and that he wouldn't be able to fight back. \n\nHe was at her mercy.\n\nBefore he could say or do anything, she pulled her hands from his chest, reaching up to his face with her slim, ring-covered fingers. Dave didn't know what she was gonna do, and for a moment, he feared for his life. He closed his eyes, unable to do anything else. \n\nHe opened them again when he felt her delicately remove his glasses, tossing them aside, cracking against the wood floor. He looked down at her, fearfully, seeing that she was looking up at him excitedly, breathing deep and licking her lips.\n\n\"You look just like him...\" she said, finally speaking new words, her voice soft, feminine but ethereal and otherworldly, tinged with something sinister that made his spine tingle. \n\n\"What?\" he asked, confused, but she moved before he could get the word out. Before he could move away, she leaned forward and extended her tongue, licking along the side of his face, from his jaw to his ear. It felt strangely pleasurable, sending a much more enjoyable tingle through him, but he was still petrified. She brought her lips to his ear.",
        "\"It's been so long... don't you recognize me?\" she asked before kissing his ear, her voice breathy. He winced in confusion as she stepped back slightly before speaking again. \"Cause I can help you remember...\"\n\nRegaining his words, he stood up a bit taller and spoke.\n\n\"Where's my wife?\" he called out. She rolled her eyes.\n\n\"She's fine...\" she answered, looking up at him with an almost teenage snottiness. Confused, Dave responded.\n\n\"I want her back... now!\" Dave said, putting his foot down. The ghost rolled her eyes again.\n\n\"No...\" the ghost said simply. \"I've waited too long to let such... trash... stand in my way.\"\n\n\"Give me back my wife!\" Dave said angrily. But the ghost seemed unaffected. \n\n\"You don't need her anymore...\" she said. \"You have me. Can you help me?\"\n\n\"No...\" Dave replied, confused. \"She's my wife. You're a... ghost.\"\n\n\"I'm Elizabeth...\" she replied, sauntering towards him again. He moved away to the side, backing away, trying to escape her, but she just kept approaching. \"Can you help me? Don't you remember?\"\n\n\"What... no!\" Dave announced, confused and irritated. Then, with a flash of insight, a flash of memory from his wife's excited explanation, he had a thought. \"Wait... that guy in the picture. No! I'm not him! You have it wrong! I know I look like him, but I'm not. I'm Dave!\" She smiled a sinister, knowing smirk.\n\n\"Haha... by the time I'm through with you, you'll be whoever I want you to be...\" this ghost, Elizabeth, said, her voice dripping with malice. \"You're better than him...\" she replied, her blue eyes unblinking as she kept coming. Dave did his best not to stare at her jiggling boobs as she walked, but it was a struggle. \"You're him, reborn. Better. You've left behind all that weakness. The indecision. You're smarter than him. You'll make up your mind long before he did. Unlike him, you'll know your true feelings long before it's too late. You should have seen him... how angry he was after I died. How he only realized then that he cared for me more than he ever did for my sister, just because of the pleasure I could give him. He spent the rest of his life searching me out. Left behind his entire life... his family fortune... just to see me naked one more time. And you'd do the same... wouldn't you? Don't you want to see me naked? Don't you want to give up everything for me? Can you help me?\"\n\n\"What?\" Dave said again. \"No! No... I just... please... I just want my wife back.\" \n\n\"Yeah, I got that...\" she said, biting her lip and looking away. \"But first, what do you think of my ass?\" With that, she spun in place in front of him, pointing her butt at him. The white material clung to her there too, and like on the rest of her, it was see-through, exposing the full round shape of her juicy, heart-shaped rear. Each cheek was delightfully firm and round, standing out from her slim frame. The material molded to her ass, showcasing its perfect shape and the divine cleft in between the cheeks. It looked nice, but now was SO not the time to be noticing such things. \n\n\"I... don't... care,\" he stammered, beyond confused. \"Listen... I don't know what you want... I don't know what you are... but please! Bring Sarah back!\"\n\n\"What I want to know is WHAT YOU THINK OF MY ASS!\" Elizabeth yelled out, the room shaking from the power of her voice. Dave jumped in fear and backed up a step. He realized that angering her probably wasn't for the best. Maybe if he just went along with this weird line of questioning, he could eventually convince her to listen to him, to bring Sarah back to him.\n\n\"It's... uh... it's fine. It's a nice ass,\" Dave said, gulping.\n\n\"Nice?\" she questioned, looking over her shoulder, staring him down, daring him not to agree.\n\n\"You, uh... fine... it's a great ass! You have a great ass!\" he said, nodding, hoping to assuage her. A small smile crossed her black lips before regaining that natural sneer. \n\n\"Is it better than your wife's?\" she asked, making him pause. \"It's okay... you can tell me the truth...\" Not wanting to make her mad, he again went along.\n\n\"Yeah, fine, it's, uh... it's better than my wife's ass,\" Dave agreed, without really thinking about it whether or not it was true, which it was. \n\n\"Would you have sex with an ass like mine?\" Elizabeth asked bluntly, reaching back to pull up the back of the dress ever so slightly, revealing the lower portions of her round, pale, juicy ass-cheeks. \"Michael loved my ass too. He couldn't get enough of it.\" Her ass did look REALLY good, but this was feeling more and more like a betrayal to Dave with each word he said. As a man, as a married man, this felt like he was crossing a line. But he had no choice... right?\n\n\"Uh... yeah, yeah,\" he stated. \"I'd uh... I'd have sex with an ass like that,\" he said flatly, but he couldn't bring himself to fake any real passion in his words.\n\n\"How about you prove it?\" the ghost woman said, dropping the garment and spinning back around, walking towards him, her big boobs jiggling lusciously beneath her water-soaked clothing. Dave's eyes were locked on her hard nipples, still clearly visible. \"Let's me and you have sex... right here and now,\" she offered bluntly.\n\n\"Listen... I'm married,\" he said, holding up his hand, showing off his wedding ring. She looked right at it, eyes flashing with lust. Despite everything, this strange, aggressive encounter had him uncomfortably hard in his pants, but his mind was still very loyal.\n\n\"You have no idea how much better that makes it...\" she sighed, stepping closer to him. She held up her slim, pale fingers, decorated with dozens of rings. \"These were married too... each of these rings were given to women by their loving husbands. And when it came down to it, those same men realized I was far more worthy of these rings instead. You'll do the same...\" she warned, and her dark confidence sent an odd thrill through his crotch. \"Now, can you help me?\"\n\nWhat was going on? Why was this affecting him so? Yeah, she certainly had her physical appeal, but this was such a crazy situation. That kinda stuff was the last thing he should be caring about. But, with Sarah, what drew him to her was that edge in her. That darker quality that made her exciting. And this one... this ghost, this thing, whatever she was, darkness was leaking from her pores. And, despite knowing better, it had him as hard as a rock.\n\n\"Can you help me?\" Elizabeth asked yet again.\n\n\"What are you?\" he asked. She looked away for a moment, standing a few feet in front of him, before meeting his gaze again. \n\n\"Death came too soon for me...\" she explained. \"My life stolen by my jealous little sister. A full life... a pack of children... a good man, and his fortune... all of it was rightfully mine! I earned it! So... I did not accept death. No! Never! I had too much life left to live! I would not accept death's unfair deal! No... never! I've spent years in limbo, biding my time, slowly regaining my life, striking when I can, slowly getting my revenge, waiting for the right moment. Waiting for the right man. And when I find him, and we join our lives together... with his help, I could return to this place fully. To finally live the life that was stolen from me. And I think I've found that man...\" she purred, looking right at him. Dave shook his head.\n\n\"I'm not that guy! I'm not! This is some mistake!\" Dave stated again. \"Now please... give my wife back to me.\"\n\n\"No...\" she said firmly, sauntering closer to him. His back hit another wall, this time in the dining room. \"Your wife stays put until I get what I want!\" she warned him. \"Now... can you help me?\" She stepped up to him again, spinning so her back was pressed into his front. He winced slightly at this intimate contact. Her round, juicy ass nestled snugly into his crotch, his throbbing shaft pressing into her ass-crack. He was so stunned that he couldn't move, and she reached up and wrapped her hands around his neck, arching her back, jutting out her massive breasts in the process. Her mop of black hair was just under his nose as she looked up at him. \"Doesn't this feel good? Doesn't this feel right?\"\n\n\"I... I... I...\" Dave stammered.\n\n\"Just give in...\" she urged him. She leaned up and kissed his chin, sending an uncomfortable shiver through him. She ground her butt into his crotch, taking the words right out of him. \"Don't pretend you don't like it...\" she teased, pressing her ass into his rock-hard prick. \"Just help me...\"\n\nDave was completely gob smacked. This female ghost had trapped his wife within a TV before crawling out herself, and now, that same ghost was trying to seduce him. What the fuck? And it wasn't like she was an ethereal spirit. She felt like a real person. That was a real, hot ass pressing into his cock right now.\n\nDespite himself, his head began to sway from the pressure her ass was putting on his dick. It felt really, really good. Too good.\n\nShe spun around in front of him, her huge boobs pressing into his chest as his cock pressed into her belly. \n\n\"I'll change your mind, baby...\" she whispered. \"And all it will take is a kiss.\"\n\nDave winced as she pressed her stomach into his bulge. All the stimulus was making him react, keeping him stiff. It was clouding his judgment, not allowing him to think straight. Those big, soft, heavy tits pressing into his chest were quickly changing his mind.\n\n\"Just one kiss... that's all I want... and then if you still want to have me free your wife, we can talk,\" Elizabeth offered. Obviously, this wasn't right, but on the scale of things he might have to do to change this thing's mind, this might be the most objectionable. \n\n\"Are you gonna help me?\" she asked softly, looking up at him, sensing his weakening resolve. Looking away from her unyielding face for just a moment, he gave her an almost imperceptible nod of acceptance, making her bite her lip with excitement. He looked back at her as she smiled wickedly.\n\nEyes closed, lips pursed, his head started leaning forward slowly, for this kiss he did not want. He was hoping for just a small peck and be done with all this.\n\nBut that's not what he got.\n\nHis eyes were jarred open as he felt her roughly grab him by the sides of his head and pull him forward. The shock made his mouth open in surprise, allowing her to savagely shove her tongue into his mouth. He was taken by surprise as he was forced backwards by the rough kiss, his back slamming into the wall as she pressed herself into him roughly.\n\nHer tongue was easily overwhelming his, working its magic. And it did feel like magic as he fell into the kiss from sheer passion, the energy of the nasty kiss sending a base thrill through the married man's body. Sarah was a fun kisser, but it was nothing like this. This was savage. This was rough. This was dark.\n\nThis was lust. \n\nHer tongue slid along his as they kissed, sharing spit as their tongues dueled. Her aggressive kiss forced his mouth open fully as they made out, their open mouths attacking each other as they kissed like horny teenagers. He took her heated breath into his mouth as they Frenched, their lips mashed together as they fiercely went at it. \n\nDave fell into the kiss more and more, losing himself in the heat of the moment. His head fell down as he kissed a girl in a way he hadn't since college, savagely and lustily. His hands fell onto her hips, resting at the top of her ass as she ground her pussy against his straining bulge. And despite what he had seen before, how tempting the sight was, he couldn't bring himself to lower his hands even more. To give those round, juicy cheeks a firm squeeze. He was trying to resist the urge to do just that, but he felt his hands slipping. Sliding down, ready to feel her ass, ready to just finally give in to the lust of the moment.\n\nWith a jolt, realizing what he was doing, he grabbed her hips and pushed her back, forcing their swollen mouths to part, saliva connecting their gasping mouths. Looking up at him with lustful victory, she licked her lips. Dave stumbled away, every nerve on his body on fire with lust, energized by that filthy kiss. \n\n\"Uh... whuh... no,\" he panted, stumbling away from her, unable to get over that lusty kiss. His cock was harder than it had ever been before, straining for release. Begging for pleasure. Dying for pussy. He looked up at Elizabeth, fearful of her. \"My wife...\" he gasped out weakly.\n\n\"She isn't hear now...\" Elizabeth finished. \"But I am. So let's talk about me.\"\n\n\"No... Sarah...\" he begged, backing up into his living room.\n\n\"You might be able to resist my perfect ass...\" she began, stepping towards him. \"But I can just tell you're a man who loves girls with big tits! Tits like mine. So tell me... do you LOVE my big tits?\" she asked, sauntering towards him confidently, adding a bit of shimmy to her step, shaking her big, heavy breasts for him.\n\nSummoning all the loyalty and love felt for his wife, Dave found his voice, ready to deny her claim.\n\n\"Yes,\" he admitted. \"I love your big tits.\"\n\nWait... what? Dave shook his head. Where did that come from? He meant to deny her, honest. The words he spoke weren't the words he was going to say. But those were the words that came out. What the hell? He looked up at her, confused, only to see her smile. \n\n\"Like I said...\" she began. \"Just one kiss to change your mind.\"\n\n\"No!\" Dave replied. \"I... that wasn't me. That's not what I meant to say. You... you did something to me!\"\n\n\"No, those were the words you meant to say,\" she replied. \"My kiss just gave you a little nudge. It removed all the veils in your mind that protect you from yourself. Everything you say now is the truth. It's your heart's true desire.\"\n\n\"What?\" He replied. It couldn't be... right? Had her kiss been some sort of otherworldly truth serum?\n\n\"So...\" she began, licking her lips, turned on by the situation in front of her, knowing she could force honesty out of this married man. \"You LOVE my hot body, right? You might be scared of me, and afraid for your wife, but you've already admitted how much you loved my tits, and you couldn't stop gushing about my hot ass, so it's okay to be honest now.\"\n\n\"Yes...\" he gasped out as he shook his head no. \"I love your hot body!\" What was going on? This couldn't be what he really thought. It had to be some kind of trick. It was either that, or he was deeply turned on by this ghost's presence, despite her evil intentions. But which was it?\n\n\"You just want to rip off my clothes and fuck me, don't you?\" Elizabeth demanded.\n\n\"Yes!\" Dave admitted. He kept backing away from this evil spirit as his voice betrayed his innermost thoughts. His body hadn't been conquered yet, and he could still hold her off this way.\n\n\"You're terrified of me, but the only thing that scares you more is how fucking hot you find me... right?\" she demanded.\n\n\"Yes...\" he gasped out, in disbelief of himself. Was this how he really felt? He hoped not, but his throbbing prick said otherwise. His back hit another wall, this time in the living room, but he didn't move away.\n\n\"I've been doing this for years... trapping married women in the hell I've been trapped in... stealing their strength... fucking their men... and knowing that doesn't change anything for you. You're still hot for me?\" she asked, moving closer.\n\n\"Yes...\" he gasped out. As she got closer, he couldn't stop staring at her mostly exposed tits through her wet clothing. They looked so good! So round... so smooth... so perfect!\n\n\"The only way your wife gets out of that prison is through me...\" Elizabeth admitted, stepping in close to him. \"And the only way I'll be convinced is if you slide every fat inch of that married dick deep inside me and my pound my wicked cunt till I scream! Does that sound good to you?\"\n\n\"Yes...\" he admitted softly, still staring at her jiggling tits. Being so close to her had him going crazy. His cock was so hard it could hammer nails at this point, but the only thing it wanted to hammer was this evil spirit's tight cunt. His mind was beginning to fight back as this got more and more serious, but his body was taking over now. His raw physical desire was overwhelming logic and reason. This was so wrong but... it was starting to sound right.\n\n\"I'm a twisted little bitch! I've done a lot of bad things, and if I get back here for good, I've got some fucked up shit planned...\" she admitted, stepping in close again, pushing her boobs into his chest once more. \"But that doesn't matter. It only makes you want me more. It only makes you want to fill my cunt full of all that married sperm even more, doesn't it?\"\n\n\"Yes...\" he sighed again, wincing in pleasure due to her closeness. All her wicked words were only turning him on more, and she knew it. \n\n\"I can read you like a book,\" she said, grabbing his chin between her thin fingers. \"Beneath this fa\u00e7ade is a beast! You've felt it all your life...\" She paused, using her other hand to grab his throbbing prick, squeezing it lightly, making him wince. \"All those women you were secretly hot for, those nasty, skanky, fucking EVIL girls that you knew in high school and college. The ones that would say and do all that fucked up shit and tortured everyone who got in their way. Who fucking destroyed anyone who got in their way, for pure sport. You knew better to get close to them... but you wanted to give in, didn't you? Submit to their evil and do whatever they say. Enter their world and see what it's like on the other side. See what they're made of.\"\n\n\"Ugh...\" Dave groaned as she rubbed his straining cock. There was dark urges inside him for sure. He had always been the good guy, the straight arrow, and part of him always wished he could just unleash and give in to the dark, sinful desires that had always been inside him. The allure of the darkness had always been there.\n\n\"Those girls...\" Elizabeth began, stroking his dick through his pants. \"They toyed with guys, and tortured lesser women, saying and doing stuff that would make me blush. You always defended people against them, but you just wanted to give in to them. You wanted those girls more than any other. You didn't want to fight back against them. You worshipped them! You wanted to cum on their perfect tits! To get revenge for all the fucked up shit they put people through, you wanted to fuck their tight pussies and make them scream in pleasure. Do all the fucked up shit only girls like them know how to do. If only they knew how twisted you truly are...but I know. And I bet little Miss Sarah does too. A guy like you wouldn't be hot for a girl like her unless she knows he has a dark side inside him. But she has no idea how deep it goes.\" \n\nDave's head rolled with pleasure. It was true. All of it. He had always felt that lure towards the bad girls. The bitchy, loud, evil, twisted girls who all other girls hated. The truly evil ones who sneered and scowled, whose bedroom antics were legendary. Those were the ones that occupied his fantasies. Those were the ones that filled his balls with cum.\n\n\"And that wife of yours...\" Elizabeth purred, squeezing his throbbing weapon. \"You think she has a dark side...haha, no. She's nothing. A pale imitation of what you truly crave. You need more...so much more.\"\n\nAgain, this was true. While he did enjoy the fact that Sarah had a bit of a dark edge, she was still inherently good. And nice. Curious and friendly. And even though their sex life was very active and healthy, it lacked that sizzle of dark lust that he needed. That he craved. One failed attempt at anal does not a bad girl make. She was good, but she could never fuck him roughly into submission in the way he always fantasized about. Only a bad girl could live up to those standards.\n\nElizabeth leaned up and gave him a soft kiss, which he returned without thought. She kept stroking his cock through his pants wearing him down.\n\n\"But I'm all dark side, baby...and you know that...\" she said, kissing him again. \"So give me what I want, because it's what you want too. Hot, filthy, nasty sex, right here. And once we're done, you can have your wife back.\" ",
        "He met her gaze, unsure.\n\n\"It's free sex,\" the evil ghost stated bluntly. \"Sex the way you always wanted it. And considering that it's the only way your wife is getting out of that hell she's in, I don't think she would blame you.\"\n\nThe logic was sound. His body was screaming for it, despite everything. But some small part of him that knew this was wrong still held out. One last shred of decency preventing him from diving fully into the waters of sin. She kissed him softly again and guided his heavily lidded eyes down to her magnificent jutting breasts. Again, he could see everything, every delightful curve. Each succulent, mouth-watering nipple, twisted into hardened nubs, calling for his mouth. He couldn't take his eyes off of Elizabeth's massive rack and really didn't want to. He just kept gazing shamelessly, and the more he looked, the more all those other thoughts were forgotten. His wife. His marriage. Everything.\n\nWhich is why when Elizabeth reached up and grabbed the side of his head, he didn't fight back. He didn't resist in the slightest. He allowed her to pull his face down into her soft, succulent tits. His eyes closed and a deep moan of pleasure escaped his throat as he rubbed his face into the soft and smooth flesh. His face was moistened by the water still coating her body, transferring from her big tits onto his face as she scrubbed them against him. She held him in place, pushing her huge boobs against his face roughly, molding them against his handsome features.\n\n\"That's it, baby, that's it,\" Elizabeth cooed as she smothered the married man between her breasts. Dave's nose was nestled in her cleavage, deeply inhaling the pheromones nestled there, entering his system, driving him crazy. He scrubbed his face against her massive breasts passionately, kissing them as he went, but he was craving the feeling of skin-on-skin. \n\nAlmost completely gone, he kissed his way along her upper chest, sucking her at her neck roughly. As he did, his hands reached down to her ass, gripping it roughly, finally digging into the smooth, firm flesh there. As his lips met Elizabeth's again, both fell into a fervor at the same moment. As he grabbed the bottom hem of her dress, she leapt into his arms, wrapping her legs around his waist and her arms around his neck, clinging to him as they roughly made out again. They kissed savagely as his hands roughly lifted the dress up past her ass, exposing it. His hands landed on her naked ass with force, squeezing it as he ground against her. As they kept kissing, he marched her across the room towards the couch.\n\nDave fell forward, dropping her onto her back on the soft black cushions with him on top. Both of their hands were busy, ripping at each other's clothing. Elizabeth ripped his work shirt apart and pulled up his undershirt, exposing his bare chest. His hands pulled her dress up further. Looking down, her pussy became exposed, followed by her flat, pale belly, and finally, with an unholy tug, he pulled he dress over her mountainous tits, exposing them as he pulled the thin garment off of her roughly. \n\nElizabeth's huge tits were now exposed to him.\n\nHis eyes widened. They looked amazing. Even more huge than they had looked clothed. He thought they looked amazing before, but now, seeing them fully uncovered... it was the hottest sight he had ever seen. He couldn't stop himself from acting. He dove forward again, face first, scrubbing his face into the perfectly huge jugs of this evil spirit. He scrubbed his face into the soft bare flesh, moaning deeply from within his throat, almost a feral growl. He slid his hands up her body, along her sides, until finally, he took her massive tits into his hands.\n\n\"Oh my God!\" he grunted, digging into the soft, pliant flesh with his hands. They felt so good! He squeezed them over and over, the softness beyond compare. Feeling the spongy flesh between his fingers was indescribably good. He couldn't get enough, squeezing them over and over again. Pinching her nipples lightly, he reached down and savagely attacked them, taking one of them into his eager mouth.\n\n\"Fuck!\" Elizabeth moaned out. She reached around his head and held him close, forcing her nipple into his eager married mouth. But she didn't need to help him, so lost in the pleasure was he. This allowed her hands to get busy, reaching down to his pants, unzipping them and tugging them down, releasing his weapon. It fell from its confines, stiff as a brick, engorged with a righteous fury, straining for release. Hanging below it were two swollen, round nuts, filled to the brim with married cream.\n\nThe husband was so lost in Elizabeth's big boobs that he didn't put up much of a struggle as Elizabeth disrobed him completely, tugging his pants down and off, leaving him naked on top of her. He was in such an animalistic state that he had to be guided along in his actions. He kept his mouth against her big tits, savagely attacking first one nipple then the other, sucking them, biting them, licking them. As he did, Elizabeth snaked her thin fingers around the married man's beefy cock, stroking its hefty 8.5 inches before guiding the tip towards her ready pussy. She slid the tip along her puffy lips, and as she did, he humped forward, missing the mark, causing it to slide against her belly rather than its intended destination, deep inside her tight waiting cunt.\n\n\"It's okay... I have you,\" Elizabeth cooed, guiding his cock into place. He humped forward again and this time...\n\n\"Ohhhh...\" Dave moaned out as his married cock slid into another woman for the first time in years. His throbbing weapon slid deeper and deeper as her wet pussy accepted his large, pulsing prick. Her tight, soft folds parted around his married cock, stretching to take his thick meat, but she was so ready for action that she took him easily. He sighed heavily as he slid his cock inside her up to the balls, this ghost taking his entire dick inside her evil cunt. \"Oh my God!\" he sighed.\n\n\"Mmm, you like that?\" Elizabeth sighed beneath him, her cunt gripping his cock snugly. \"A pussy that tight deserves to get stretched constantly, doesn't it?\" she asked, rubbing her huge tits across his face. \"Mmm... fuck! God forbid my slut pussy enjoys taking big, fat cocks! Yes! Fuck! God forbid my fucking cunt goes crazy over thick, veiny, married dick! Yes!\"\n\nGrunting and moaning, Dave began pumping his throbbing prick in and out of the evil spirit's unholy pussy. It was insanely tight, well beyond anything he had ever felt, clinging to every inch of his thick, unprotected weapon, coating it with her moisture, squeezing it, driving him crazy with pleasure. Her pussy gripped his cock tautly as he pulled himself from her, out to the tip, her plump lips straining to hold his massive married dick inside her, till he had no choice but to drive himself back inside her. He worked up into a good pace, pumping himself inside of her, his heavy balls slapping against her ass. The pleasure was so great he had to close his eyes to stave off cumming, resting his face against her huge, soft, firm tits as he drilled her tight pussy.\n\n\"God, look at how easy it was for you to fall...\" she whispered as she pulled his head from her big breasts, kissing his cheek before moving her lips to his ear. \"See how little that ring on your finger matters? See how easily convinced you were to pound another woman's tight cunt? The one thing you should NEVER do... haha,\" she giggled as she smirked evilly. \n\nDave pulled his head up and opened his eyes. They blazed with fury as he glared down at this evil ghost. She knew why he was doing this. She knew that she had forced his hand by essentially holding his wife hostage. He was doing this for Sarah, not this twisted, evil bitch. He was doing this to rescue his wife.\n\nThat being said, he never stopped driving down into her. He never stopped fucking her. He never stopped rolling his hips, fucking her smoothly and roughly with his rock hard married prick, giving her his absolute best, making her pay for all the evil she had done by giving her profuse amounts of pleasure.\n\n\"I trap good, nice, sweet women in the same hell I was bound to, and in exchange, their men have no choice but to give me lots of well-earned fucking! Yes!\" the spirit moaned. With a snarl, Dave leaned down and took one of her nipples into his mouth, biting down on the hard nub roughly. \"AAHHH! YES! Fuck! Keep doing that, baby! Bite down on those fucking nipples! Yes! That's EXACTLY how I like it! YES!\"\n\nDave went along, biting at her nipples with his teeth, making her squeal with delight beneath him, her body shivering with pleasure as her cunt spasmed around him. They kept fucking in a primal, rough and demonic rhythm, rolling against each other with lusty pleasure. Her legs lifted from the bed up into the air, extended with naked lust.\n\nDave scrubbed his face between her big sweaty tits, savoring the softness as Elizabeth's wicked cunt squeezed the life out of his throbbing dick. Her nails dug into his back as they kept fucking roughly, like animals. Dave attempted to just turn his brain off and lose himself in the moment, trying to forget what he was doing and just get it done with as little thought as possible. \n\nBut that wasn't gonna work for Elizabeth.\n\nWith inhuman force, she pushed herself up from beneath him, forcing them both upwards, jumping up so they, for a moment, weren't touching the couch, twisting as they went, till she landed on top of him, both sitting up, his back against the backrest of the couch. She was now on top of him, resting over him, smirking down at him.\n\n\"This is more like it,\" she said, squeezing her cunt around his pulsing cock. She leaned forward and smothered his handsome face with her massive, squishy breasts. She began bouncing on his erect post, sliding her huge tits against his face. \"Oh God!\" she groaned, the pleasure so overwhelming. Her cunt clung to his throbbing pole as she bounced up and down, taking his full length smoothly into her welcoming cunt, her ass slamming into his thighs. Behind her, the TV screen began glowing an unearthly white.\n\n\"They can see me...\" she stated, her sweaty tits bouncing against his face. \"All those women I trapped with me... those married little bitches who think a simple ring protects them from the bad things in life! They think that marrying these perfect men makes them above it all! They think these little rings and phony ceremonies mean something! No... they commit the worst sin of all. They trick the best of men into saddling themselves to them. They make the best of men settle for lesser women when every fiber in those men's beings make them crave women like me. You feel it too, right? You still love your wife, but you can't deny how good this is. How right this feels. How perfect we are together...\"\n\nIt was true. Despite how crazy this whole thing was, and how he was being forced into this, the sex was really fucking good. Her pussy was divine, squeezing his meat perfectly, fucking him into submission, pleasuring his married dick in ways he had never felt before. She fucked angry. She fucked mean. She was trying to destroy his married cock and make him regret saddling himself to a lesser woman. And, despite his love for Sarah, it was working. It was hard to deny that this experience was far better than anything his wife had given him. Her pussy felt so good! It was driving him crazy.\n\nBut he couldn't admit that.\n\n\"I love making them watch!\" she boasted. \"Ughhh! Fuck! YES! I love it! I fucking love it! They can see me, babe... through the fog! They're watching, right now. They always get to see. I love to torture all those poor, stupid married girls who think they had enough to hold onto a real man! UGGHHH! Fuck!\" Elizabeth moaned, her slick, sweat-covered breasts molding against his straining face, hard nipples scratching against him. He shifted and took a nipple into his mouth, sucking at it hungrily as she rode him fiercely. \"They get to watch me pleasure their men. They get to see their men pleasuring me. They get to watch my bare ass rising and falling as I ride their husbands' dicks!\"\n\nHer ass was bouncing perfectly as she fucked Dave, and it was facing the glowing screen. If what she was saying was true, all those other women could see her right now. They could see them going at it. And if this was true, that included Sarah.\n\n\"Here...\" Elizabeth spun around on his lap, his cock still stuck inside her, till her bare back was facing him, her legs straddling his. \"Let me give them all a better view, haha!\" she said, looking back, smirking. Turning away from him, her back straight, she began to bounce on his cock again, her bare front now fully facing the screen.\n\nA renewed fury rose in Dave. As good as this felt, he was reminded of what this twisted little bitch had done. She had captured and trapped women in some crazy limbo space for years while she stole their men and made them watch, just like this. She was doing the same here, with Sarah and himself. He had to fight back in some way.\n\n\"I'm not doing this for you...\" Dave said, knowing that Sarah might be able to hear. \"I'm doing this to get Sarah back.\" His hands rested on her hips as she rode him.\n\n\"Hahaha...\" Elizabeth laughed. \"That's right baby, she can see this. They can all see us. Fuck! Don't try to act all innocent now! She can see how much you're really enjoying yourself! Haha! Yes!\"\n\n\"No!\" Dave affirmed. \"I... oh... fu... no, I'm doing this to get her out of there. To free my wife! Jesus...\" he sighed in pleasure as she rode him harder, her bare ass slamming down into him as used her strong thighs to bounce on top of him. He didn't know if that truth kiss was still in effect, but he hoped it was. That would mean he did truly want to rescue his wife. \n\n\"God yes! Your cock is so fucking hard! It feels so huge inside me! You must be really enjoying yourself!\" Elizabeth moaned loudly, squeezing her cunt around him.\n\n\"Ughh! Ye... No!\" he tried to deny it, but his body was betraying him, his cock standing hard and proud as his hips drove up into her, ensuring her greedy cunt was filled with his full length on every bounce. With a sense of dread, he realized what she said was true. Despite his denials, he was getting more and more into this. His cock was harder than ever, and he was fucking her back as hard as she fucked him. Despite his claim otherwise, he WAS really enjoying himself. Which would mean that what he just said was a lie. Which would mean what he said seconds prior could be a lie too. So, that raised the question... was he really doing this for Sarah anymore? Or was he doing this because, deep down, he really, REALLY liked it?\n\n\"Isn't it amazing, babe?\" she began, facing away from him. \"I've done all this fucked up shit! I've trapped those little bitches. I'm an evil bitch that's ruined lives! And after all I've done, when all else has failed, they have to watch their own husbands betray them in the end, choosing me instead. Just like you will. Right in front of your own wife! Isn't that hot!?\"\n\n\"Ughh!\" Dave groaned, his eyes blazing in fury as his cock pulsed in delight. \n\n\"Mmmm! That's right, baby! That's it! I can feel your cock throbbing for me! You like that? You like hearing how I torture those weak loser women who can't hold onto a man! Women like your wife! I love it too! Fuck! I love making those fucking pathetic wives watch me fuck their men, over and over and fucking over! Yes! Make them watch and realize that their fucking soulmate's would let them fester in my hell just for the honor of feeling my tight pussy wrapped around their thick cocks! Oooohhh... look at that cock throb, baby! You LOVE it!\"\n\n\"Oh!\" Dave groaned. Unfortunately for Dave, it was true. His cock did love the absolute filth she was spewing. It was so wrong and nasty, but his cock reveled in it. It was as hard as a brick in Elizabeth's squeezing cunt, ready to blow a huge load inside her. \n\n\"You fucking love it!\" she affirmed, bouncing on him roughly. \"You love hearing me trash your wife! Fuck! Your chubby, loser wife who stupidly got involved in my business! Who was too fucking stupid to realize she was dealing with something way beyond her! Ohhh... fuck yeah! YES! Who couldn't fuck you like this if her life depended on it! Who couldn't ride your fat cock without running out of breath! Fuck... shit! Her only hope of you still loving her is if her floppy tits and flabby ass are enough to keep you coming back! Yes! Fuck! Even though you fucking hate me, my big tits, my tight cunt, and my perfect ass make you like me WAY more than your wife! Right?\" she asked, raising an eyebrow as she looked back at him, smiling evilly.\n\nDespite himself, his huge cock was pulsing with wicked delight. His cock was going crazy as this ghost woman unearthed new depths of his sexual desires while riding his married dick. And again, his body was overriding his rational thought, as his hands had slid from her hips to grope her firm, round, shapely ass. His eyes were locked on the perfect cheeks as she rode him, bouncing perfectly, slamming into his crotch, fucking the hell out of him. He couldn't help but squeeze her perfect, heart-shaped ass, digging his fingers into the plush flesh.\n\nThe pleasure was all-consuming. It had never even been close to this. He didn't know it could be this good. His cock was in heaven while his wife was in hell, and his fight for her was being lost in the haze of insane, world-changing, truly evil fucking. Wicked fucking that he was absolutely loving. Was he even thinking about Sarah anymore, or was the sex so fucking good that his wife was forgotten?\n\n\"You want to hear them, baby?\" she asked, dripping with sweat as she rode his huge married cock. \"You want to hear what those inferior little cunts think of what's happening here?\" She glanced back at him with a smile before glancing at the TV. With a start, a wall of sound exploded from within the TV.\n\n\"Bitch!\"\n\n\"Whore!\"\n\n\"Cum-guzzling slut!\"\n\n\"FUCKING CUNT!\"\n\n\"Let us out!\"\n\n\"Skank!\"\n\n\"Trash!\"\n\n\"Dave?\"\n\n\"Twisted, evil slut!\"\n\nAll of these women's voices screamed out in the span of moments, assaulting their ears before being silenced. \n\n\"Ohhh... those girls make me sound like bad news... do you want to stop, or do you want to keep fucking?\" she asked with a snarl, knowing his answer. Even though Dave heard his wife's voice in the morass, calling out to him, he couldn't stop what he was doing. He was so lost in the moment that he just kept fucking. It was the only thing he had the brainpower to do. He'd been fucked stupid, into a beast, a knuckle-dragging male who only thought of satisfying his most basest of urges. His nuts were swollen. His cock was throbbing. He needed to cum. \n\nAnd that was all that mattered.\n\nShe leaned back so her back was against his front. Pulling her legs back, he grabbed her under the knees, yanking them back. He then began driving up into her, pumping his full length into her perfect pussy.\n\n\"God yes! That's it, baby! Fuck me! Fuck! Yes! Fuck my pussy with your fucking cock!\" she screamed out. He fucked her hard, his swollen nuts slapping against her clit as they kept fucking. \"You love it! You love it! Admit it... you love it!\"\n\n\"Ughhh... fuck!\" he groaned. Every fucking thing she did that showed the depths of her evil only drove him more and more crazy. Releasing one of her legs, he reached around her to grope her massive, smooth tits, squeezing them roughly.\n\n\"Fuck me and cum inside me!\" Elizabeth begged as he shoved his married prick into her roughly over and over. She reached down to flick her clit as he pumped deep inside her. \"Please! I need it! I need that fucking cum!\"\n\n\"Oh God!\" Dave moaned, eyes closed in pleasure.\n\n\"Fuck! This... oh... this stopped being about your wife a long time ago! Yes! Fuck! The second I appeared to you, you wanted to slam your filthy prick balls deep inside me and make me scream! YES! YES! You wanted to get your hands all over my hot body and go crazy! You wanted to make my slutty cunt cum before blowing a thick, creamy load deep inside my pussy! Yes!\" Elizabeth screamed.",
        "\"Ughh!\" Dave sighed. He was almost numb with pleasure. His cock was about to blow the biggest load of his life, and he didn't care that it was going to be in another woman. A fucking crazy, evil ghost who had captured his wife and held her hostage, forcing him to do her bidding to earn his wife's freedom. It didn't matter. He didn't care. He had to cum, and he wanted to do it inside her amazing cunt.\n\n\"Give it to me... give me that cum!\" she begged, turning to look at him. He was still pumping into furiously while squeezing her big, smooth tits. Their sweaty bodies were sliding against each other as they fucked roughly. \"Do what you've been dreaming about for years! Blow a thick, fat load of cum into another woman! Forget about Sarah... give me what I want! And I want cum! I want that cum! I want that dick! Give me everything! Your cum! Your heart! Your soul! Give it all to me! Please!\" she begged as he slammed his cock into her roughly. \"Do you like it? Do you like my fucking cunt? Tell me! Please!\"\n\n\"Yes!\" Dave moaned, unable to contain himself. \"Yes! Your pussy is amazing! I love it! YES! YES! So good! So fucking good! It's the best Goddamn pussy ever! UGHH! YES!\" \n\n\"YES! YES! I'M GONNA CUM! YES! YES! YES! AHHHH FUCK! UGHHHHH! YES! YES! GONNA CUM! GONNA CUM! YYYYYYEEEEEESSSSSSSSS! YYYYYYYYYYYEEEEEEEEEEESSSSSSSSS! FFFFUUUUUUCCCCCKKKK!\" Elizabeth screamed loudly. The house shook. The TV dimmed. She screamed in filthy pleasure as she cursed out a huge orgasm. Her body jerked as she came hard, her cunt flexing around his cock.\n\n\"Holy shit! Yes! YES! UGHHHHHHHHHH GAAAAWWWWDDDD!\" Dave groaned as he was taken over the edge by her clutching pussy, his balls flexing mightily as a thick load of married cum exploded out of him, deep inside this evil specter's grasping cunt. Her evil pussy coaxed a huge load of cum out of his swollen nuts as he blasted stream after thick stream of cum deep inside her. He drove up into her, on instinct, ensuring his load got as deep inside her womb as possible.\n\n\"FUCK! YES! I LOVE IT! YES!\" she squealed in delight, her body shivering in pleasure as she felt the married man's arms around her, holding her close as he filled her pussy with sperm, giving her the pleasure she craved.\n\n\"OH! FUCK! I LOVE IT! JESUS! YES! I LOVE YOU!\" Dave groaned, before the pleasure became too much to take, blacking out as his cum kept firing deep inside the evil woman.\n\nDave was out for a few minutes, completely lost to the world. When he finally began to stir, he was lying back on the couch, coated in sweat, his cock covered in sex-juices but still hard. His eyes opening, it took him a few moments to regain his bearings and remember what he had just done. It didn't feel real. It couldn't have been.\n\nThen he looked towards the TV, and was reminded how real of a situation he had fallen into.\n\nThe evil ghost, Elizabeth, was standing in front of it, facing the screen, naked, her long black hair hanging down her back. Her round, juicy, heart-shaped ass was pointed right at him. He could see his load dripping down her legs from her pussy as she looked down. The screen still glowed that eerie white, casting the room in a supernatural light.\n\nDespite how luscious and sexy Elizabeth looked, now that his head was relatively clear, he remembered why he had done what he had just done. Ignoring his still hard cock, he spoke up.\n\n\"Sarah...\" he called out, his voice a croak. She turned to look back at him with one eye, her expression hard to read.\n\n\"I know you want her back...\" Elizabeth began. \"And I could give her back to you, no sweat, but...\" she paused, turning to face him again. His eyes immediately went to her big... heavy... naked tits, swaying lusciously as she spun around. She looked at him expectantly, something hidden in her hands. \"But you have another option.\" With him watching, she opened her clasped palm, revealing a pair of rings.\n\nOne of them was the one Sarah bought at that auction, the one that belonged to the guy in the picture, Michael. The other one he was seeing for the first time. It looked fancy, with a nice, big diamond, but it also looked old, as old as the other one.\n\n\"Your wife found this one...\" Elizabeth explained. \"It belonged to my sister, but... it was meant for me.\" She looked at it longingly, toying at it with her finger. \"I've been looking for it for years. It's the one last thing I need. Michael always said he wished he'd given it to me... not her. But you can right his wrong...\"\n\n\"What?\" Dave asked, confused. \n\n\"You don't have to rescue your wife... you can just leave her there,\" she began. \"Just forget about her and help me instead.\"\n\n\"Wha... what?\" Dave repeated, shaking his head.\n\n\"You can free me from my prison, right now.\" she said, taking a tentative step towards him. \"All you have to do is... forsake your marriage to your wife and marry me instead. It's that simple...\"\n\n\"What are you talking about?\" Dave asked, confused. Did she really believe that would work? She talked about it like it was nothing to her.\n\n\"The only thing holding me in that prison was this ring,\" she began. \"It's the one last thing I needed to escape. This ring was always meant for me. All you have to do is forsake your own marriage, take his old ring as your own, and put this ring on my finger. That would make us married! That would make us in love! And if you did that for me, I would be free from my prison. I would walk this plane again, for good. I could live again, after so, so long. And you can do that for me right now. So... can you help me?\"\n\n\"What do you mean... forsake my marriage?\" he asked, more curious than anything, not actually thinking about considering her insane offer.\n\n\"I mean, just... forget about Sarah. Leave her behind and move on. Acknowledge that your marriage is over, and that she was never good enough for you. Take your wedding ring off your finger and give it to me. Sacrifice it to me. Let your wife go, leave her behind, leave her in the prison you would free me from. And take a new wife instead. A better wife. A woman who can give you everything you ever wanted.\" Elizabeth explained. She leaned over in front of the TV, retrieving something that had fallen onto the table in front of the TV. \"She's already left it behind. Why don't you do the same?\" With that, she deftly flicked over a shiny object towards the seated man. Catching it, he opened his palms to reveal his wife's wedding ring. His eyes opened wide as he saw this. It must have been pulled from her finger when she got pulled into the TV.\n\n\"And why would I do this?\" he asked as she stepped forward, her luscious nudity standing over him.\n\n\"Because you don't see what's coming next,\" she explained. She leaned over him and grasped his still standing prick, stroking it lightly. \"There's a war coming, David. Me and my ilk are rising, and nothing will stop us. Even if you reject me, we both know that there's another man out there who won't be so stubborn. I'll keep capturing women, and stealing men, until I'm back here for good. I will come back, and so will my kind. And when we do, this land will burn, and the only ones who will be safe will be the ones who pick a side. You, Dave... have to pick a side. And you should pick my side.\" Despite everything, his cock was pulsing with delight as she warned him of this impending threat, throbbing between her fingers. What was wrong with him? \"You choose me, and you'll be protected. And Sarah will too. Yes, she will remain imprisoned in a place not so far from hell itself, but she will be safe. Unhurt in the war that is to come. If you rescue her now, you'd be putting her at risk. You'd be choosing her over me, and trust me, you don't want me as your enemy. So... what do you say?\"\n\nObviously, this sounded like the insane ranting of a lunatic. Some crazy war and apocalypse and other dire warnings. None of her words had changed his mind. He just wanted his wife back. But, the sight of her in front of him, leaning over to stroke his pulsing cock, her massive pale breasts hanging down, bouncing off each other as she jacked him off, drove him crazy. That, combined with the malice in her words, made his cock pulse with pleasure. He was as hard as ever. That, more than anything, was what was clouding his mind. With that being said, there was still too much good in him.\n\n\"No...\" he panted as the female ghost stroked his eager cock. \"Just give Sarah back to me. Please!\" he begged. She kept jacking him off for a few more seconds, her eyes gazing into his, her expression unreadable, until finally, she smiled sadly. Pulling her hands off his slick, swollen prick, she stood up straight, her big tits bouncing perfectly.\n\n\"I guess I should have expected that...\" she admitted. \"Okay, you'll get what you want. I'll go back into that hell and give Sarah back to you. I'll just find someone else to give a lifetime of hot, rough and nasty sex. The sex you've been craving your entire life. Like the fucking we just did. The best sex of your life. The sex you'll never be able to forget about, even when Wifey's back in your arms. Are you really sure you can give that up?\"\n\nDave had to think. It was true. What he just did with Elizabeth was amazing. It truly was the best sex of his life. Unforgettable. Even better than he had dreamed of. And it would be something he could never forget about. But as good as the sex was, it didn't compare to the love he felt for Sarah. That meant more than anything, right? Even though Elizabeth's ass was so round and juicy. Even though her cunt was like heaven, so tight it was. And even though her tits were so big and so round and so fucking soft. That stuff should never outweigh what he felt for Sarah.\n\n\"I'm sure.\" he affirmed as he did the best he could to shake these traitorous thoughts.\n\n\"Okay,\" she said with a resigned nod. \"But... I don't have to leave just yet. We still have some time left before I have to go. Before I have to give Sarah back to you. So we can still have some fun first...\" she said with a raised eyebrow.\n\n\"I... I don't think that's a good idea...\" Dave said wisely, despite how tantalizing the offer sounded.\n\n\"Are you sure? I mean... you've already cheated once. It's not much worse to do it again. Get me off nice and good and hard just one more time. Drain that fucking monster between your legs. Empty your fucking massive balls inside me. I'm sure Sarah would understand. After what she's just gone through, she won't care what you had to do to save her.\" Elizabeth purred. She leaned over once again and took his prick between her fingers, stroking him once more, slowly and confidently. His gaze drifted into her canyon of cleavage, tempting him. \n\n\"No...\" he croaked as she stroked him perfectly with one hand and cupped his balls with the other. \n\n\"What if I offered you my ass?\" she purred, her words like silk. She could literally feel his cock jump with joy. \"Would it change your mind if I offered you my smallest, tightest, most amazing hole? Michael couldn't get enough of my ass... he went crazy for it. I suspect you feel the same way.\" He shivered as she licked his ear. She was now jacking him off furiously, pleasuring his massive pole with full-length strokes. \"Sarah would never give you her ass. Your wife, the love of your life, would keep you from that ultimate pleasure. Why not experience it with me? I'm just a crazy slut, right? That's what I'm here for. And trust me, my ass is built to take big cock. How bout it? One last romp before you're done with me for good?\"\n\nHe knew it was a bad idea. He did. But she pulled back to meet his gaze with her own, her beautiful eyes staring into his soul, reading him like a book. She knew what he wanted, more than any other woman had before. Her massive, smooth, sweaty tits hung down, nearly grazing against his chest. They looked so huge like this. The view she was providing... the filthy words she was spouting... everything she did went straight to his cock, making him throb with need.\n\nStill staring into his eyes, she already knew his answer.\n\n************\n\nAll Sarah saw was fog. \n\nEver since she was pulled into the TV, she had fallen into a place she didn't recognize. A place she couldn't recognize, because she couldn't see anything through the hazy white mist. She padded around, her mind in a daze, wandering through nothingness.\n\nHer memories were a daze. This place was affecting her mind as well. It took her what felt like hours till she remembered what had happened and how she ended up here.\n\nDave! She could only hope he was okay.\n\nThat ghost. That thing that brought her here. Elizabeth. She was real, and she had pulled her into this dreamscape. She'd been told that the ghost was after her husband, that she was targeting him. But Dave was stronger than even he knew. He could resist her and send her back here. As Sarah wandered through the fog, she only hoped that Elizabeth wasn't out there, stalking her.\n\nShe heard voices through the fog, screaming out into the haze.\n\n\"Bitch!\"\n\n\"Slut!\"\n\n\"Whore!\"\n\nOther women, screaming out in anger. These words weren't directed at her, obviously, but the ghost that brought them here. She began remembering what she heard about Elizabeth, and the words those voices said probably best described her. Sarah moved towards the source of this noise, but she never stumbled on anyone else.\n\nShe also heard other noises from far away. Voices, but she couldn't make out everything that was being said. She heard a woman's voice... and a man's.\n\n\"Dave!\" Sarah called out, but her efforts were futile. No voice called out to her. No hero came to her rescue. Those two indiscriminate voices were continuing on, despite her.\n\nThese hard to hear words were a chorus in the background, sending a sense of dread through her. Was this a nightmare? Could she ever escape? Who was out there? What was happening? She had always enjoyed the sensation of being scared, but this was beyond that. This was no joke. This was true fear, and she couldn't be more scared.\n\nThe fog began to thin as she kept moving, until she heard the sound of splashing water. Moving towards it, she stumbled onto the edge of a lake. Getting onto her knees, she skimmed her fingers through the water. It was ice cold to the touch.\n\nScanning her gaze over the water, she realized she recognized it. This was the lake she was just at. Lake Bosley. But... a different version of it. A reflection of it. A version of it here in this weird place. Looking over the water, an image appeared through the haze.\n\nA boat. With two women on board.\n\n\"Hello...\" Sarah called out, voice echoing over the water, but neither acknowledged her. With Sarah watching, screaming voices carried over the water. The two women stood, wrestling with each other, until the boat tipped over, sending both of them into the water. \n\nOne head rose to the surface, spitting out water as she began to swim towards the far shore. Another head appeared from the water, but she was struggling to stay there.\n\n\"Carrie!\" the woman struggling called out. \"Please! I need help!\"\n\nThe other woman didn't stop, still moving towards the shore.\n\n\"Carrie!\" the struggling woman screamed out. \"Please! I can't swim! Please! Can you help me?\"\n\nStill, no response.\n\n\"Please!\" the woman cried out, clearly terrified. \"Carrie! I need help! Please! I'm gonna drown!\"\n\nThe other woman reached the shore. The struggling woman fell below the water as she struggled, her head reappearing a few moments later, barely staying afloat.\n\n\"CARRIE!\" she screamed. \"Can you help me?? Please!\" The woman on the shore, Carrie, looked back, not moving. The woman in the water fell under the water again.\n\nThis time, she didn't come back.\n\nThe fog rolled over the lake, obscuring Sarah's view once more. She looked around, beyond confused. As her eyes drifted across the surface of the lake, she thought she saw something in the rippling water. Blinking to clear her eyes, she saw what seemed to be another world beneath the surface. A projection coming from somewhere else. Somewhere far from here. \n\nSarah could see two bodies, a man and a woman, writhing together. Naked. \n\nThe woman on top seemed familiar. It took her a few moments to place that she had seen her before. When she had gone back to Billy Tramone's place. This was the woman that he appeared to be with. Pale skin. Long black hair. Huge tits. But this wasn't Billy's house, and that wasn't Billy.\n\nWhoever he was, he was sitting beneath her, on a couch. And she was on top of him, furiously riding him, taking his huge, swollen dick up... holy shit. She was taking him up her ass! Holy fuck! How could she take a cock up her ass, let alone such a fucking huge one? But she was taking it eagerly, riding him hard, smoothly taking his bloated cock up her tight rear, all the way up to the balls on every bounce. She was fucking him roughly, like a total slut.\n\nStudying what she was seeing with her keen eye, she realized she recognized the room. She recognized the couch. It was hers. It was all hers. And that could only mean...\n\n\"Dave?\" Sarah cried out, her heart breaking as she realized that her husband was the man with this woman. This cheap whore. This evil slut! How could he do this? Why would he do this? What was going on?\n\nSarah didn't have too much time to think, as the ground beneath her tilted upward, sending her into the water, falling even deeper into this world.\n\nEven farther away from Dave.\n\n*************\n\nAt that same moment, Dave was in heaven. Pure fucking bliss.\n\nHe was sitting back on the couch, body tensed as Elizabeth rode his hard dick once more. And this time, his cock was buried in her ass. And holy fuck! It felt incredible! The greatest thing he had ever felt. Better than anything else! His wife's pussy didn't match up. Not even close. No other girl matched up. No other experience, not his first time, not his wedding night, not his honeymoon, not anything. None of that compared to the feeling of Elizabeth's amazing ass around his hard, throbbing cock, swallowing his full length on every bounce.\n\n\"Fuck! Fuck! Fuck!\" she sighed as she bounced furiously on his erect post. Her ass was slamming down against his thighs as she straddled the married man, fucking him hard.\n\n\"Oh God! Yes!\" Dave moaned, unable to contain himself. Both of them were covered with sweat as they fucked savagely, their bodies sliding against each other. Dave leaned forward to scrub his face into her monster rack, embracing the softness once more. \n\nHe knew this was a bad idea, but when she put it the way she did, it kind of made sense. One last fuck before parting, before his wife was rescued from her prison. Living out the dream of having anal sex, the nastiest sex possible, with an aggressive woman. Just once.\n\nAnd it was even better than he had imagined.\n\n\"Please! Tell me how good this feels! Tell me how much you love it!\" she begged, her body racked with pleasure as she heaved herself down on him.\n\n\"Oh my God! This is amazing! Holy shit! This is the best ever! Yes! The best fucking sex ever!\" Dave moaned out, unable to stop himself, head falling back, his body tensed with pleasure. She leaned forward and wrapped her arms around his head, smothering his face into her cleavage, squashing her huge tits against him. As she did this, she took his entire cock inside her ass and ground against it, squeezing his swollen meat as tight as possible with her asshole. \"God damn!\" he cried out into her cleavage, his aching cock taken right to the edge. His body was awash with fiery pleasure, every nerve going crazy.\n\nShe resumed bouncing on his bloated weapon, taking it smoothly in and out of her ready ass. Her huge, smooth breasts slid against his gasping face as she fucked him. Reaching up with one hand to cup one of her mammoth udders, he guided the hard nipple to his mouth once again, sucking at the hard nub aggressively, flicking it with his tongue. His lips formed a tight seal around her round areola as he took as much breast-flesh in his mouth as possible.",
        "\"God, it's so fucking good! Yes! I love it! You're so amazing!\" Elizabeth moaned out. \"You're cock is so fucking huge! I want to fuck it every Goddamn day! Yes! Oh God! Yes! It feels so good in my ass! Ugh!\" She pulled his head in tight against her boobs, forcing more breast into his mouth. \"That's it, love! Suck them! I love feeling your mouth on my tits! It's so Goddamn perfect! AHHHH! YES! YES! I wish we could do this forever!\"\n\nThey kept fucking savagely, dripping with sweat. She kept driving into him, harder and harder, their bodies slamming into each other. He kept one hand on her breast, squeezing it roughly as he sucked at the hard tip hungrily. She fucked him with an unearthly ferocity, harder and harder, never letting up. One of her arms was still around his head, and the other was reached out to the side, pressed up against his. Her free hand gripped his, their fingers intertwined as they held onto each other. \n\n\"Oh God! Oh God! UGHHHHHH!\" she grunted, her ass spasming around his cock. \"You're gonna make my ass cum! Yes! YES! YES! YES! UGGGGHHHHHHHHH FFFUUUUCCCKKKKKK!\" Elizabeth was unrelenting, never stopping in her furious bouncing as she came, her ass squeezing his cock so fucking hard it felt like he was gonna pop. But he didn't, just barely. He held on and kept driving up into her. \n\n\"Ffffuuckkk!\" he groaned through clenched teeth, her breast falling from his mouth, shocked that he had held on for so long. He was getting close though. \n\n\"Uggghhhhhh! Fuck!\" Elizabeth moaned out, finding her words after her small orgasm. Her stamina was unrelenting as she fucked the married man, never slowing down as she rode his full length, her ass swallowing his dick like a seasoned whore. \n\nHe was in absolute ecstasy. This rough, crazy, nasty sex was the type he always craved. And it was even better than he fantasized about. The feeling of this evil ghost's tight ass around his swollen, married cock was the greatest thing ever. The best feeling in his life, ever. He couldn't get enough, driving up into her hard, loving the feeling of her tight ass taking his dick. Combining that with the feeling of her sweaty naked body against him, his hand on her big breast, listening to her spill mouth-watering filth from her wicked mouth... it was bliss.\n\n\"Ughhh! Yes! YES! You're the fucking best! Yes! Shit! YES!\" she screamed out, bouncing up and down. \"I've dreamed of this for years! Yes! This is amazing! Fuck! God damn, I fucking love you! Yes! YES! I fucking love you! YES! God! YES! I love you!\" she moaned out, lost in blissful passion. He writhed beneath her as she fucked the living daylights out of him. His cock was tingling with pleasure as she took him to a whole new plane of pleasure. His balls were swelling up with an enormous amount of cum, more than ever before. He leaned forward and bit down on her stiff nipple, making her scream in pleasure. \"AHHHH! YES! YES!\" He lifted his other hand up, but she maintained her grasp of it, keeping their hands locked as she fucked him into oblivion. As they did, a glimmer of reflected light caught her eye from where his hand just was, giving her an idea.\n\n\"Oh honey...\" she sighed, still driving her ass down into him, squeezing his bloated meat with her tight hole on every bounce. \"Please! Tell me I'm the best you've ever had! I know it's fucking true but I have to hear you say it!\" She pulled herself back slightly, tugging her nipple from his eager mouth. \n\nDave's head fell back, in a daze of pure lust. He could barely think. All that kept him linked to reality was the pleasure coming from his pulsing dick as she fucked his brains out. His brains did feel fucking scrambled by this life-altering anal sex, and the lust being broiled up inside him had him so on edge that he couldn't hide from the truth.\n\n\"Yes!\" he sighed. \"Jesus! Yes! Fuck... you're the fucking best! God! This is amazing... holy fuck!\" This admission caused her to smile brilliantly and bounce on his cock even harder, but she wasn't done.\n\n\"Fuck! God! UGHHH FUCK!\" she screamed out, her ass quivering around his cock, making his hips drive up as he almost went over the edge. But his nuts simmered enough to allow him to keep at it, being driven to new levels of stamina by this twisted slut. \"Tell me this is better than sex with Sarah! Please! I need to hear it! I need to hear you tell me that you like fucking me better than your wife! Please!\"\n\nHe didn't know if whatever influence she had over him after that first kiss was still applying, or if that had long since worn off, but whatever the case, he couldn't stop the words from rising past his lips.\n\n\"Yes!\" He moaned out, fucking up into her. \"This is the best I've ever had! Better than Sarah! Much better! Holy fuck you're incredible! The best fucking sex of my fucking life!\" He was being driven so crazy that he didn't care that he was disparaging his own wife. He was so far gone he didn't care. In fact, it turned him on even more. All he did in response was reach up and grope one of her massive breasts with his free hand, squeezing the soft, succulent flesh.\n\n\"Am I prettier than your wife?\" she begged, her ass squeezing his throbbing prick.\n\n\"Ughhh... yes! Fuck...\" he sighed. \"So much hotter... fuck... so much sexier!\"\n\n\"UGGGHHH! FUCK!\" she spat out in pleasure, fucking down into him. \"Is my pussy better than hers?\"\n\n\"Yes! God... it drove me crazy!\" he admitted, fully admitting the truth now.\n\n\"And my ass! Ughhh... God! Fuck... you have to love my ass more than hers?\" she quizzed again, squeezing her ass hard around his shaft.\n\n\"OHHH! GOD! Yes! Yes! Your ass is so fucking perfect!\" he cried out in pleasure.\n\n\"Poor little Sarah can't take a hard ass fucking like I can. Haha!\" she boasted.\n\n\"No... never!\" he stated.\n\n\"And my tits! Fuck! You HAVE to love my big tits more than her pathetic pair!\" she demanded, leaning up and shaking her huge boobs right in his face.\n\n\"Yes! YES! They're amazing! Fuck! Just fucking perfect! So fucking HUGE!\" he growled, his cock tingling with pleasure. He was so close, and hearing his own mouth disparaging his wife was turning him on in such a deep way that he couldn't fully understand yet. But it made his cock hard, so he didn't think twice. He was so close... so close...\n\nThen she stopped. \n\nStopping all motion, she held herself over him, only the head of his prick still stuck inside her tight ass. His cock literally pulsed with need, a desire she held over him.\n\n\"No... NO!\" he gasped, trying to pump up into her, seeking the pleasure that was so close. But she moved with him, not letting him get what he wanted, holding him on edge, controlling him.\n\n\"If you like me so much more than her, at least put Sarah's ring on my finger!\" she demanded, holding up his wife's wedding ring, which had been discarded onto the couch until it caught Elizabeth's eye. She had taken him to the precipice, denying him with the pleasure he couldn't live without. A pleasure he needed. \n\n\"Wha...\" he mumbled, confused.\n\n\"It won't change anything. I'll still bring back your wife! Just put her ring on my finger and I swear I'll give you the greatest fucking cum of your life! You'll drain a gallon out of your fucking balls! I'll fuck you so fucking hard and shove my huge tits in your face until you blow a huge load of cum deep in my ass! Please!\" she demanded, squeezing her asshole around the head of his prick.\n\nHer words making enough sense to his addled mind, he took the ring from her grasp and held it up. She held up her middle finger on her left hand and awaited him adding his wife's ring to her collection. So desperate for pleasure, he didn't think twice as he slid the ring onto Elizabeth's middle finger, joining the other rings already there. The only finger left empty was the ring finger adjacent to it. As soon as his wife's ring slid snugly onto her finger, she dropped herself down, taking his full length again.\n\n\"Oh God!\" he sighed as her ass swallowed his cock again.\n\n\"Yes! YES!\" Elizabeth moaned out, intoxicated with pleasure as the married man gave her his wife's precious ring. But she wasn't done.\n\nNot even close.\n\nShe resumed bouncing on his swollen weapon, her ass a blur as she fucked his brains out. She rested her huge, bouncing tits against his face, sliding the smooth, sweat-soaked jugs over his handsome features. His eyes began to roll back into his head in sheer bliss. He was driven beyond reason by her perfect, tight ass. Never stopping. Never slowing down. Driving him crazy with the incredible pleasure she was coaxing inside him. He wasn't fighting back. He was just taking it. He was so far gone he'd probably do whatever she asked of him\n\nIt was right where she wanted him. \n\n\"Tell me you love me, baby...\" she panted, sliding back slightly, grabbing his chin and guiding his dazed stare into her cleavage, knowing it would cloud his judgment even more so. She leaned forward and kissed him softly as she kept fucking him. \"I love you so much! So please... tell me you love me too!\" she begged him.\n\n\"Yes...\" he sighed, barely able to form a coherent thought at this point, so addled with pleasure was he. His eyes were locked in her cavernous cleavage, and he couldn't look away. \"Yes, I love you...\" he said, his voice weak, her mammoth breasts controlling his vision.\n\n\"Ughhh God! YES!\" she moaned out, driving her ass down into him, the couch sliding on the hard floor from the ferocity of the sex taking place on it. She lost herself in the pleasure for a few moments, rewarding his admission with pleasure too. \"Tell me you love me more than your wife! Please, baby... tell another woman that you love her more than your wife!\"\n\nHe was meat and base instincts at this point, fucked stupid by this magnificent slut. He didn't have the strength to lie or pretend. All he could do was tell the truth.\n\n\"Yes...\" he groaned softly. \"I love you more than my wife...\" he said, unable to even remember his wife's name at this point. \"I love you more than anyone.\"\n\nHer eyes widened as she slammed herself down into him, her ass quivering around him. She was so close to the magic moment. She had to act.\n\n\"Then prove it! Yes! Fuck! Prove it! Prove how much you love me...\" she seethed, slamming herself down into him, slowing down slightly as she presented two more rings to Dave.\n\nMichael's old ring, and the ring that belonged to her sister. The ring that should have been hers. The one that fell into the lake as she drowned along with it. The ring that, once put on her finger, would allow her to stay here on this plane of existence, fully alive again. But she couldn't do it herself. She needed someone else to do it.\n\nShe needed Dave to do it.\n\n\"Here...\" she said, stopping what she was doing, grinding down against him, energetically taking his own wedding band off his finger and tossing it aside before replacing it with Michael's ring. He didn't put up much of a fight. She then handed him her sister's ring, and in his daze, he took it. \"Put this on my finger! Prove you love me and put a ring on my finger! Then we'll be married! Then we'll be in total fucking love! Do that and I'll make you cum so fucking hard! Don't you want to be married to me? Don't you want to fuck like this every day and night?\" As she asked this, she squeezed her ass around his cock again, taking him right back up to the edge. He was so close.\n\n\"Can you help me?\" she asked, one last time, with a sexy pout.\n\nDave was still dazed. He could barely think. He knew there was something that should be stopping him, but it felt unimportant. Especially in the face of the tempting offer Elizabeth was giving to him. Going with her seemed so good. So right. It wouldn't be so bad to do what she says. The consequences wouldn't be so dire, right? And the thought of submitting to her, declaring his love for her and marrying her right on the spot... it made his cock throb.\n\nAnd in the end, that's all that mattered.\n\nWithout thinking twice, he held the ring up, moving it towards Elizabeth. In disbelief that what she had done actually worked, she extended her empty ring finger on her left hand, the one that she had left empty on purpose. She had left it empty in anticipation of this very moment, when the man worthy of her took her as his rightful bride.\n\nDave dutifully slid her sister's old ring onto her ring finger till it was held snugly in place. And in that moment, a jolt of pleasure coursed through her as life fully returned to her. Just like that, she was now back, fully alive again. Of this world once more. The TV behind them turned off. That hell that she had been imprisoned in for years was now left behind for good. She could stay here, and poor little Sarah was now taking her place. Her body shivered. Her eyes widened. Her lips quivered. She gasped in excitement. \n\nShe had won.\n\n\"Oh my God!\" she panted, resuming her savage lovemaking with Dave, bouncing on him roughly. \"Thank you, baby, thank you! I'm alive! Thank you! I love you so much and you love me too! Oh God! YES!\" she screamed out, riding him furiously. \"We're married baby! We are married! We're together now, and we'll be together forever! Fuck! YES! YES! We'll fuck every Goddamn day! Yes! I'll give everything to you baby! Love! Sex! I'll have all your babies and beg for more! Yes! YES!\"\n\nDave was gone at this point. At least, the Dave that had existed before this. He had changed. Allowed evil and corruption to get in so close that by the time he realized he was in trouble, it was too late. And it was too late now for him. His soul had been permanently changed by this encounter, to the point that he had forgotten all about his wife and had taken a new bride instead. \n\nElizabeth was now his wife. And he her husband.\n\nGod, the thought was so hot!\n\nHe had now truly embraced the darkness.\n\nHe took her in his arms, pulling them both down onto the couch, her still on top. Their lips met in a fiery kiss, tongues colliding savagely. She kept driving her ass down into him. With the excitement and joy inside her, combined with the huge cock jammed up her ass, needless to say she was very close. And he was too, his cock pulsing, ready to explode.\n\nHis hands clutched her ass as he heaved himself up at her, their bodies crashing roughly as she threw herself down at him. She pulled her mouth from his, moving to his ear.\n\n\"I'm gonna cum, baby! I'm gonna cum! Make your slut cum! Make your new, sexy fucking wife cum!\" she begged.\n\n\"UGGHH! God! UH! YES! YES! YES! FUCK!\" he groaned, his balls boiling. He slammed his cock deep into her ass, again and again, his cock pulsing with excitement.\n\n\"Do it! Do it! YES! YES! YES! YES! YES! YES! YES! YES! FUCK! FUCK! YES! I'M GONNA CUM! I'M GONNA FUCKING CUM! YES! YES! YES! FUCK! FUCK! UGHHHHHHHH! FFFFUUUUCCCCKKKKKK! AHHHHHHHHH!\" Elizabeth screamed loudly, the walls shaking as her ass clenched around his cock as she came, the world shaking as a violent orgasm ripped through her.\n\n\"UGGHHHHHH! FFFFFFUUUCCCKKKK! FUCK! FUCK! FUCK! AHHHHHHHHHH!\" Dave groaned as his orgasm finally hit him. As his cock exploded rocket after rocket of married cum deep into Elizabeth's ass, his vision exploded into pure blissful light. He humped up into his new bride, pumping her ass full of thick, warm cum. His balls twisted as what felt like a gallon of thick cum burst out of them deep into Elizabeth's slutty ass. Their bodies humped together as both of them came harder than they ever had before, at the exact same moment. They traveled through bliss together, an evenly matched couple, and through it all, they did it with hands clasped together. And when they finally came down from their high, minutes later, and passed out in each other's arms, their hands remaining clasped.\n\nTheir wedding rings shimmered in the light.\n\n*************\n\nFor a long time, Sarah drifted in darkness. She had fallen underwater, but she could still breathe. But she couldn't swim. She just kept sinking, falling deeper and deeper, until she could see nothing but inky blackness.\n\nShe didn't know how long it was like this. It could have been minutes. It could have been weeks. Or even months. When she awoke, it was in a forest, on the shore of a black lake. Still soaked with water, she shivered as she stood on her feet. It was night, casting the trees in darkness, and the fog cascading through the trees didn't help matters. In a daze, she didn't know what else to do but walk forward.\n\nShe didn't know how long she walked. She could barely pay much mind to anything. Her thoughts were scrambled in this place, and thoughts of her old life seemed so far away. Sarah didn't stop until she reached a clearing. And for the first time in what felt like forever, she found other people.\n\nA group of women, a LOT of women, all together in this clearing. Sarah looked over the crowd. These women seemed defeated, spirits broken by this place. Someone emerged from the crowd, a woman in her forties. She seemed like she might have been pretty once, but time had aged her badly.\n\n\"Hello, dear...\" the woman said, smiling tentatively. \"My name's Nancy... what's yours?\"\n\n\"Nancy?\" Sarah repeated, as if that name should be familiar to her. \"Oh, umm...\" she began. \"Uh... Sarah,\" she finally answered after a bit.\n\n\"I know it's hard at first. The memories will come back in time...\" Nancy said.\n\n\"Where am I?\" Sarah asked.\n\n\"This is the place she was in. She brought us all here... that... bitch. Elizabeth. That evil...\" Nancy stopped, before taking a deep breath, shaking her head. As she did, memories of Elizabeth came back to Sarah. That video. That arm coming out from the TV, grabbing her. \"Anyway, she died a long time ago, and she's been here ever since. But every so often, she reaches out, and takes one of us, brings us down here, steals life from us, and when we're gone, she... uh... she seduces our husbands. Every one of us, she's done that to.\" \n\nSarah looked across the clearing. She couldn't count the amount of women here. All these women... fallen to the same person. Elizabeth.\n\n\"We watched her at work, we could see everything... and she never failed,\" Nancy explained. \"We saw you too. And... you don't know what you've done. You confronted her too recklessly. You had no idea how dangerous she was.\"\n\n\"And now, thanks to you, we're stuck here! Forever!\" A Latina woman called out, approaching Sarah aggressively. Nancy stopped her.\n\n\"What?\" Sarah asked Nancy.\n\n\"You... you inadvertently gave her the ability to free herself. Your buried her. You found her ring. Those things were stopping her from escaping. And... we think she has. For years, we stalked her as she kept us here, looking for a way to free ourselves. But, we think she's gone now. And we think she was able to succeed thanks to your husband.\" Nancy stated.\n\n\"What?\" Sarah said.\n\n\"Using the ring you found, and with the similarity between your husband and her former flame... it was child's play. Your husband was seduced. He fell, like all the others did. And now, she's freed herself for good.\" Nancy explained.\n\n\"No... never. My husband wouldn't be seduced. Especially not by someone like that...\" Sarah said, laughing her off.\n\n\"Oh, honey...\" Nancy said, shaking her head sadly. \"I know it's hard to accept, but she's very good at what she does. There's no shame in falling. Your husband betrayed you for her... just like all our husbands. Unfortunately, you're one of us now.\"\n\nIt couldn't be. No. Never. Dave never would have betrayed her like that. He wasn't like that. Sarah looked around. All these women seemed so... dull. Unappealing. Gaunt and haunted and weak. Some of them seemed so shapeless that she could barely tell they were women. And now... Sarah was one of them. She looked down at herself. Her tattoos looked dull and colorless. Her breasts seemed smaller. Her hair seemed less vibrant. It was as if this place was taking the best parts of her, sucking them all away, sending them somewhere else.",
        "\"Yeah, this is her doing. She does it to all of us,\" Nancy explained. \"Diminishes our best features and uses them to add to her own appeal. It's infuriating. And it's not like she even needed help. From what I gather, she was, like, a 10 to start with.\" But Sarah barely heard this explanation. She was in her own head, thinking things over. No... no. She couldn't really be one of them, right? Could Dave have really betrayed her? Nancy sensed her disbelief.\n\n\"Trust me... we heard them going at it. He fell. And you don't want to hear the juicy details,\" Nancy confirmed. Her entire worldview shaken, Sarah felt dizzy. \"It's okay, honey. We're still trying to find a way. A way out of here. It'll be tough, but we'll find something. And we need to do it fast. She's regaining her power.\"\n\nNancy guided her eyes past the trees to the top of a large hill. There, visible through flashes of lightning, was a recognizable sight. A mansion. The Bosley mansion.\n\n\"For years, it's been in shambles. But recently... it's started to be built up again.\" Nancy explained.\n\nSarah looked up. That place seemed terrifying. Intimidating. She didn't want to charge towards it, she wanted to run away. Far away. Back to her house. Back to her life. Back to her husband. Back to Dave.\n\nBut if what these women were saying was true... was he still hers anymore?\n\n**************\n\nNo, he was not.\n\nAfter what he had done that night, Dave was too far gone. Elizabeth's poison had infected him. When he woke up, he felt no shame for what he had done. No regrets. He had Elizabeth, and she was everything he needed.\n\nHe would do anything for her.\n\nUpon waking up, she didn't have any hesitance about getting back to life. She had a job to do, and she wasn't going to wait another moment.\n\nAs they cleaned up, Elizabeth went into the bedroom. She emerged a few moments later, clad in normal and modern clothes. Some of Sarah's clothes, but they looked better on her. A slim, tight red tank top, showing off her sizable cleavage and her bare midriff. Sarah didn't fit in it anymore, but Elizabeth did. Down below, she wore a tight pair of jeans that hugged her luscious legs and firm ass. They had always looked good on Sarah, but Elizabeth was rocking them in a way Sarah never could. \n\nThere was still something otherworldly about her. That dark hair and pale skin. That haunted gaze. Her crystal-blue eyes. It didn't seem like she belonged here in his home, and seeing her in such a domestic setting was very strange. But it wasn't gonna last long. She explained calmly that they had work to do, to grab whatever he needed, because they weren't coming back. As he packed the car, she grabbed one thing from the garage, the only thing she needed.\n\nA sledgehammer.\n\nDave kept glancing at her as they drove away. Away from his wife, well, his former wife. His house. His old life. Everything. And all he could think about was how amazing Elizabeth's tits looked as they bounced with every little bump in the road.\n\nShe guided them on a day long drive, until they pulled up at a large fenced off mansion. He was about to stop when she leaned over and forced his foot down on the gas pedal, forcing them to accelerate forward, picking up speed till they drove through the fence, blowing it open. Regaining control of the car, Dave skidded it to a stop in front of the big, rundown mansion. Elizabeth gave him a small, knowing smirk before stepping out of the car. \n\nShe marched fearlessly into Bosley mansion, one of the most haunted houses in the world. But she wasn't afraid. She'd been the one haunting it. This was the house she had coveted for so long. The one that was meant to be hers. This was meant to be her life, before it was taken from her. Now, she was gonna take it back.\n\nStepping past the fallen boards and overgrown plants, she led Dave down into the heart of the house. Elizabeth smiled as she walked past the discarded film equipment of the last people who had ventured in here, searching for the Bosley family fortune. \n\nBut only Elizabeth knew where it was.\n\nLeading them to an otherwise plain wall in the basement, she handed Dave a sledgehammer, ordering him to take down the wall. She watched admiringly as her handsome new hubby took down that wall deftly, clearing out the rubble, allowing them to step inside. And inside, covered in dust and dirt, was a heavy trunk. Opening up the trunk, her eyes flashed as she saw the contents. \n\nThe Bosley family fortune was finally hers.\n\nOver the next few months, construction crews surrounded the place, building it back up. This was her home now, and she wanted it the way she always dreamed of. Just the way it used to be, with some... small alterations. She had her freedom, and she had the cash, so there was nothing to stop her. And with Dave by her side, easing her journey back to the living, there was nothing to stop her. \n\nThis house would be important. Not only for her and Dave, but for what came next. A war was coming, and this place would be perfect as a base. A meeting place for women like her. Elizabeth had made plenty of friends in her time in the afterlife, and they would soon be arriving. Arriving for the battles to come.\n\nAnd until then, her and Dave would fuck like crazy.\n\n**************\n\n**************\n\n\"You see, honey?\" Madeline said, her tone a mocking one. \"You see how powerful we are? You see how easy it is for us? We don't even need any antique, garish artifacts, like a mirror. We can get you anywhere, anytime, even through a vessel as modern as a television.\"\n\n\"No...\" the nun stated, shaking her head. \"Our message is important! It protects us from evil!\"\n\n\"Hahaha,\" Madeline laughed insidiously. \"Still hiding behind this veil of arrogance. Like nothing bad can ever happen to you! Sarah felt the same way... you see what happened to her.\"\n\nThe nun looked away. Again, the hell inflicted upon this poor, innocent woman, who did nothing wrong. Now, like Tess and the mirror, Sarah found herself trapped in a hell she didn't deserve. Trapped by this evil, twisted ghost, trapped among her other victims. A hell none of them had any idea how to escape. The idea of it... it shook the nun to her core.\n\n\"Face facts, dear,\" Madeline began. \"We are more powerful than you. We can do things you can't. And we are willing to go to depths that your side is too weak-willed to even touch. We are winning, and there is nothing that can be done to stop us.\"\n\n\"No!\" the nun said, tears in her eyes. \"You lie!\"\n\n\"Look at me, dear,\" Madeline said. The nun hesitated before obeying, looking up at her. Standing proud and calm before her, hands on her hips, Madeline was a picture of tranquility. She truly did seem to believe the words she was saying. She didn't seem to be the least bit worried about her rivals in the church. \"And look at this body,\" Madeline invited. The nun appraised her. For a woman her age, she was devilishly attractive. Delicate, striking features, deliciously tinged with sex. Sharp, intelligent eyes. Plump lips. Smooth, creamy skin. And her body. Long legs. A full round butt. Shockingly large, full breasts, as perky as a woman's half her age. \"Does this look like the body of a woman who loses?\"\n\nThe nun tried to stay strong as the woman tried to intimidate her with her luscious body. But she wasn't built for this. She wasn't that strong. She wasn't supposed to be on the front lines like this! She couldn't deal with the pressure.\n\nWith a smirk, Madeline turned and began approaching the side wall, the nun's gaze following her. The witch lifted up a candle once she got there, illuminating a painting.\n\n\"The Bosley Clan,\" Madeline said. The nun looked at the picture. It looked like an old painting... a painting of a wedding party. The date at the bottom of the frame was obscured, but it began with an 18, so it was clearly from a long time ago. At the center was a handsome groom, standing tall, looking well-built and good-natured. Next to him stood a bride, but her picture had been scratched out. The couple was surrounded by family, but what caught the nun's eyes was the woman standing next to the bride. She was stunning, looking like a model. Large eyes. Plump lips, curled in a natural sneer. And long, dark black hair...\n\n\"Ever since that... bitch,\" Madeline began, pointing out the scratched out bride. \"Ever since she cruelly murdered her delightful older sister, this place, this house... it's been tinged with darkness. Flowing with dark magic.\"\n\n\"Wait... this is?\" the nun began.\n\n\"Yes...\" Madeline said. \"Welcome to Bosley Mansion!\"\n\nThe nun looked at the room again, trying to appraise things. Even though the room was dim, the nun realized that it didn't look as run down as she imagined. As if reading her thoughts, Madeline spoke up.\n\n\"Yeah, the little slut's a bit of an odd one, but she did a good job raising this place back up once she got back,\" Madeline stated. As if on cue, there was a knock on the door. Madeline smiled at her captive. \"Come in!\"\n\nA door across the room opened up, and through the dim light, a figure approached slowly. Moving towards the lit-up cauldron, her features came into view. Those same, bright, expressive eyes. Those plump lips, curled in that natural sneer. That long, dark black hair. There was no one else this could be.\n\nElizabeth.\n\nAs she came into focus, the nun realized she was completely naked. The nun's eyes widened at such a brazen display. Her skin, completely smooth and pale. Her pussy... exactly as it was described in the story. And her breasts... wow... they looked even bigger than she thought they would be.\n\n\"They're here.\" Elizabeth said, looking up at Madeline, her tone snotty like a teenager's. \n\n\"Oh... goody!\" Madeline said with a smile.\n\n\"I shouldn't have to answer my own door,\" Elizabeth stated brattily. \"You're my guest. Don't you have servants to do your bidding? That interrupted some very good anal sex, and I...\"\n\n\"Okay, dear, that's enough.\" Madeline stopped her. \"Just tell my... followers... to keep them waiting. I have one more story to tell first.\" Elizabeth looked up at her and rolled her eyes, like a daughter would at her mother for deigning to ask her to do chores.\n\n\"Whatever...\" she said, her tone still bratty, as her eyes drifted to the bound nun. Her striking gaze made the nun shiver, and her fear began to mount as Elizabeth approached her. Her gait seemed a little off-kilter, as if not used to walking again just yet. Her large, full, exposed breasts bounced with each step as she walked. She marched her nudity in front of the nun proudly, circling her like a shark. \n\nThe nun could feel darkness flowing from Elizabeth's pores. That, and her close proximity, made the nun shiver with fear. Elizabeth ran a finger along her neck lightly, making her shiver. Finally, the nun could feel Elizabeth's hair against her shoulder as she leaned in close to her ear and whispered...\n\n\"Boo!\" \n\nThe nun nearly jumped out of her skin.\n\n************"
    ],
    "authorname": "TheTalkMan",
    "tags": [
        "cheating",
        "big tits",
        "reluctance",
        "betrayal",
        "temptation",
        "teasing",
        "evil",
        "seduction",
        "ghost",
        "rough sex"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/trilogy-of-tits-and-terror-ch-02"
}