{
    "title": "Unresolved Ch. 05",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 23 - Standoff\n\n\"Here's what we know.\" said Alison McFarland into the microphone of her podcast. \"Confessions have been made, plea deals made, perpetrators arrested in the Stephen Henry/Wendy Withers double murder case. Additionally, warrants have been issued in the murder case of a young Congressional intern.\n\n\"But it's not the end. The Swamp is deep, muddy, and putrid, and 'powerful interests' are fighting desperately to prevent Justice from being administered to those who have allegedly committed these crimes. U.S. Senator Samuel Russell is hiding behind a Constitutional clause to keep from being arrested and tried for rape and possibly murder. And the forces of Government Power are being marshaled to save and protect a Fraternity of rapists and murderers. This is Alison McFarland, and things are still... Unresolved.\"\n\n* * * * * * * * * * * * * * *\n\n9:30am, Monday, April 22d. The standoff was incredibly tense. The corrupt FBI BAU unit of Bob Rovers was clearly itching to start a bloodbath. I was totally shocked that Edward Blassingame and Nathan Masterson had come in without armor on; their lives would be forfeit when the shooting started.\n\n\"This is a judge's order, Troy!\" snarled Masterson, holding up a document. \"Are you going to obey the law and release those unlawfully arrested prisoners? Or are you going to get a lot of your people killed?\"\n\n\"Said by the guy who has no armor on himself?\" I said \"And will be the first to die?\"\n\n\"We're willing to die in the cause of destroying you, Troy.\" said Blassingame.\n\n\"And you're literally standing here,\" I said, \"unarmored, ready to have these dirty FBI Agents commit more murders to save your worthless rapist, murderer son?\"\n\n\"I'd do anything to save my son, asshole.\" snarled Blassingame. \"Wouldn't you do the same for your daughter?\"\n\n\"My daughter didn't rape and murder anyone!\" I thundered. I drew my Beretta 96 service weapon, aimed it at Blassingame, and cocked the hammer. \"And I'm going to make sure your son is not only convicted, but executed by the State for his crimes. And when the shooting starts here, you'll be in Hell waiting for him.\"\n\n\"Stand down, Mr. Crowbar!\" I heard a voice yell behind me. It was Chief Moynahan. He and District Attorney Miriam Walters came into the lobby. They were followed by FBI Special Agent in Charge Jack Muscone, and FBI Supervisory Agent Melina Troy Allgood. The Chief and Melina were armored, and Melina was well armed. Muscone and Walters were not.\n\n\"You're behind the times, Masterson.\" D.A. Walters said. She held up a document. \"An emergency appeal to Judge Leahy of the Appellate Court was made. He rescinded Nance's ridiculous order, and ordered a re-examination by the lead Superior Court Judge, Patrick R. Folsom. Judge Folsom has already stated that Nance's order was so egregious that Nance will once again be referred to the State Legislature for impeachment and removal from the Bench.\"\n\nMasterson took the document and looked at it. \"Damn, it's dated after ours. They got to Leahy and Folsom in time, Mr. Blassingame.\"\n\nMelina added her voice to the tense situation: \"Every Federal Marshal and FBI BAU Unit member is here illegally. You are now technically trying to unlawfully break prisoners out of jail. The TCPD is well within their rights to shoot every one of you dead. And if any stray bullets blow your head off, Blassingame, it won't hurt my feelings one bit.\" \n\nI don't know why Melina had such hostility for Blassingame, but I was liking it that she did. Then Jack Muscone spoke: \"You heard her, Rovers. Get your people out of here. Now.\"\n\n\"Yezzzzzz.\" said Chief Moynahan. \"I can't stop the Iron Crowbar from shooting you where you stand for too much longer, Mr. Roverzzzzz.\"\n\nA Federal Marshal whispered something to Bob Rovers, who still had Teresa's M4 practically in his earhole. \"All right.\" Rovers said. \"Stand down. Let's get out of this shithole.\" The Federal Marshals were obviously very relieved as they quickly left. The BAU team members glared hatefully at me as they filed out, but with TCPD Officers now between them and me, they had no chance to do anything about their hatred for me... and I had no chance to do anything about mine for them.\n\n\"Let's go, Masterson.\" said Blassingame.\n\n\"I'm here to see my client, your son.\" said Masterson.\n\n\"He's not here.\" I said. \"He's at his arraignment. All of this would've been for nothing; he hasn't been here for an hour.\" Blassingame blanched at that.\n\n\"Masterson, what the hell are you doing here?\" Blassingame hissed. \"Get to the Courthouse and do your job!\"\n\n\"We've got it covered.\" said Masterson. Still, having no reason to be at County Jail, Blassingame left. Masterson followed.\n\nAs Blassingame walked by me, he stopped and glared at me. \"Like I said, I'll do anything to save my son... or avenge him. Are you willing to do the same for your child?\"\n\n\"Is that a threat, Blassingame?\" I fired back. \"Because all the King's horses and all the King's men won't be able to put you back together again if you threaten my family. At all.\" \n\nBlassingame left the building. I said \"Great job, everyone. Captain Croyle, have everyone stand down. Triple our protective coverage of the suspects at the Courthouse, and transporting them back and forth.\"\n\n\"On it, sir.\" said Teresa.\n\n\"My office, Mr. Crowbar.\" the Chief said. \"Make sure you're there by the time I arrive.\"\n\nPart 24 - Monday Maneuvers\n\nAs I waited in the anteroom of the Chief's office, I called Laura and gave her the 'red alert' that our children might be in clear and present danger. Laura said she'd call the school to watch out for anyone suspicious, and she would also call Molly Evans and Paulina Patterson. I asked her to try to get in touch with Sandra Speer to protect Greta, as well.\n\nWhen the Chief arrived, he invited me and Cindy Ross into the Chief's Conference Room. As we sat down, the Chief said \"I know you didn't start that one, Mr. Crowbar. I cannot bee-lieeeeve that FBI unit did that.\"\n\n\"I should've anticipated it, sir.\" I said. \"And I'm feeling lucky they didn't realize Blassingame's son was being transported to the Courthouse. We had extra protection and some deception maneuvers, like multiple paddywagons going three different ways, but if they'd known, they could've attacked us.\"\n\n\"You make it sound like a military operation.\" said Cindy. \"Blassingame isn't like that. Not even the FBI is like that.\"\n\n\"Trent Ridge and Quint Starr are like that.\" I replied. \"And guess who controls their puppet strings.. or at least their purse strings.\"\n\n\"Yezzzzz.\" said the Chief sourly. \"Now that you mention that, it could've been a real threat.\" He sat back in his chair, almost lost in though. \"Christ, this is big, isn't it?\"\n\n\"I admit I may have been wrong about Miriam Walters.\" Cindy said. \"She acted quickly to overcome Nance.\"\n\n\"Spit in his face, she did.\" I said, using Jedi Master Yoda grammar. \"Saved us some serious trouble, as well.\"\n\n\"How did she know?\" asked the Chief. \"Did you make one of your famous 'suggestions' to her?\"\n\n\"I didn't realize my 'suggestions' were famous, Chief.\" I replied. \"And no, I wasn't the one. Maybe Paulina suggested to be on the lookout. In any case, I'm not looking the gift horse in the mouth.\"\n\nJust then, there was a knock on the door. Cindy opened it, to see District Attorney Miriam Walters standing there.\n\n\"Come on in, Ms. Walters.\" said the Chief. \"Your ears must be burning. We were just complimenting you on the speed and efficiency with which you overcame Judge Nance's absurd maneuuuuuuverrrrr.\"\n\n\"Yes, we appreciate it very much.\" I said. \"Not to mention standing amongst all those Government Guns without any armor on.\" That got the first glimmer in Miriam Walters's eyes I'd ever seen.\n\n\"I wish I could take credit for knowing about it.\" said Walters as she sat down. \"I got a call from a friend of yours, that podcast woman, Alison McFarland. She tipped me off to what Nance was going to do. I thought maybe you'd had her warn me, Commander.\"\n\nI admit to feeling totally stunned. \"Er, no, I had nothing to do with it.\" I said. Cindy also looked totally stunned.\n\n\"I came by to ask why that FBI unit not only interjected themselves into that situation,\" said Miriam Walters, \"but why they were so eager to free the arrested people by such a display of force. I've filed for an injunction in Federal Court to force that BAU unit to stand down its operations in this County, and to leave it completely. At the least, Special Agent in Charge Rovers is going to have to explain himself to Federal Judge K.M. Landis, who does not tolerate fools very well at all.\"\n\n\"Oh, that's awesome.\" I said. \"As to the reasons for that display of Federal Government Guns this morning, I can sum it up in one word: desperation.\"\n\n\"On whose part?\" asked Walters.\n\n\"Edward Blassingame's.\" I replied, making sure my gray eyes locked onto her beady black peepers.\n\n* * * * * * * * * * * * * * *\n\n\"And welcome back to Point Taken!\" said moderator Connie Chen as the program returned from a commercial break. \"And now let's move to the news of the multiple arrests and indictments coming out of the Town & County over the weekend. Commander Donald Troy has been a very busy man, arresting several University Tau Fraternity and Pi Omega Sorority members for a hazing incident where at least one woman was allegedly raped, and two University students were murdered in cold blood.\"\n\n\"Commander Troy also secured indictments against U.S. Senator Samuel Russell in the strangling death of an intern of U.S. Congressman Gerald A. Condor.\" said the beautiful Zara Zeigler. \"The intern, whose name is not being released at this time, was found strangled in a hotel bedroom rented by Congressman Condor. A semen sample has been DNA-matched to Senator Russell.\"\n\n\"Senator Russell has been indicted by a City Grand Jury for the rape of Jayne Hallerton, a former University basketball player.\" said Connie Chen. \"The Senator's wife had given depositions that the sex between them was consentual, but she recanted that over the weekend and said the her husband did rape Hallerton.\" \n\n\"However,\" said Rosie Berkmar, \"attorney Gwen Munson, who represented Donna Rodman and Hillary Braselton during their legal battles with Commander Troy over their credible accusations that Governor Jared sexually harassed them, said that Commander Troy illegally interrogated Mrs. Russell, and quote 'browbeat' unquote Mrs. Russell into recanting. The video evidence has been submitted to the judge overseeing the case to determine if Commander Troy acted properly or not. Our colleague Ruby Russell is the daughter of the Senator and his wife, which is why she's not here today; she's participating in the lawsuit against Commander Troy.\"\n\n\"We should also add,\" said Zara Zeigler, \"that one of the Fraternity members arrested, and indeed the prime suspect of the murders in the case, is Peter Blassingame, son of Edward Blassingame, who was the founder and CEO of State Parcel Services and recently was named CEO of BigAgraCorp after the death of Mitchell Bain Willis.\"\n\n\"Well, once again Commander Troy browbeats a woman.\" said Donna Roselle, the black, fiercely militant leftist of the group. \"While I think Senator Russell is a despicable man and a rapist, that doesn't justify what Commander Troy did to his wife.\" \n\nConnie Chen immediately stepped in: \"We still have to hear from the Court to see if Commander Troy did wrong, there. Another issue is that warrants to raid the Tau Fraternity House at the University were rescinded by a Federal Court, which normally does not have jurisdiction over murder cases. Then Judge Harry Nance issued an order to free the arrested suspects because the warrants were rescinded, but it turns out that the evidence to arrest them was based upon new evidence completely unrelated to the previous warrants. Judge Patrick R. Folsom rescinded Nance's order, and has suspended Judge Nance and referred him, Nance, to the State Supreme Court and State Legislature for what will be Nance's second impeachment inquiry.\"\n\nDonna Roselle jumped in: \"The State Legislature needs to support good judges like Judge Nance, and focus their impeachment inquiries on the most racist Governor this nation has ever had, Val Jared!\" The audience applauded.\n\nZara Zeigler said \"I'd really like to know what prompted the Federal Court to even get involved in that murder case. It's true: they really have no jurisdiction.\"\n\nRosie Berkmar added: \"And maybe someone can explain to me why Samuel Russell, a Republican, was at a gathering of Democrats being hosted by Democrat Congressman Condor, and why a married man like Russell was having sex with Condor's sweet young intern. Republicans are always so sanctimonious about marriage and religious values, but we don't hear a word from them about one of their own allegedly raping one woman and now allegedly having sex with a woman who was found dead very shortly afterwards.\"\n\n* * * * * * * * * * * * * * *\n\n\"It's official.\" said Cindy as she came into my office a half hour later. \"Folsom overturned Nance's order. Also, Peter Blassingame was ordered held without bail as he is a considerable flight risk. Susan Dougherty is also being held without bail, and the others had their bails set at $1 million apiece and will have to be ankle monitored if they make bail.\"\n\n\"Good.\" I said. \"Have a seat; I can tell you want to ask me something.\"\n\nCindy gave a wan smile as she sat down. \"Yes, I do. If you didn't tell Alison McFarland to warn Walters about Nance, if you weren't behind it at all, who did tell her?\"\n\n\"I dunno, but I'm grateful to whoever did.\" I replied.\n\n\"She seems to have been ahead of us on a number of things.\" Cindy said. \"She brought in Kitty Summers. She brought in Carrie Lucas and Marla Hanson. She found Sophie Westbrook. She showed up here right as that murder case exploded. Do I need to quote the Iron Crowbar on coincidences like that?\"\n\n\"You really don't like her, do you?\" I asked back, getting straight to the heart of the matter.\n\n\"It's not that!\" Cindy said, beginning to become exasperated. \"I admit, she's done very well, and she's helped us a lot. But come on, Don, how has she been able to do this?\"\n\n\"It must be nice to be an independent agency, not constrained by law enforcement duties.\" I said. \"Of course I personally prefer the steady paycheck the TCPD provides better than being a struggling podcast journalist.\"\n\nBy now Cindy knew me well enough to know that anything I said was not idle. She peered at me and I peered back. Then I saw her eyes change, and go introspective. She was thinking about it, and I hoped she'd figure it out...\n\n* * * * * * * * * * * * * * *\n\n*Whirrrrrrrr*\n\nAt 3:00pm, Captain Tanya Perlman drove into my office. \"So, sir,\" she said with a happy smile, \"the Sheriff has authorized a victory celebration now that Peter Blassingame is formally indicted and behind bars. When shall we do it?\"\n\n\"Thursday, I guess, or Friday.\" I said. \"The Council is meeting tomorrow, and the Charter Commission on Wednesday.\"\n\n\"Friday sounds good.\" said Tanya. \"I'll call Jack Colby about getting the back room of The Steakhouse. So, are you going to be at the Council meeting? Help clean up that trash I heard about last week?\"\n\n\"I'm on standby.\" I said. \"Mayor Allgood is going to bring the hammer down. They'll have the second reading of the promotions bill, and if that passes, and I think it will, then we'll have to talk to a couple of Detectives Wednesday morning.\"\n\n\"Davis and Warner?\" asked Tanya. I nodded and she said \"Telling them who's getting the promotion and who isn't.\" I nodded again. \"Sir,\" she said, \"if it's going to be hard for you, I'll do it.\"\n\n\"Thanks.\" I said, knowing that she knew that I always remembered having to tell Pete Feeley that he didn't make Detective... and his murder at the hands of Angela Harlan a short time afterward. (Author's note: 'Case of the Black Widow', Ch. 05.) \"But this is different. And you have the right to tell both of them, of course.\"\n\n\"We'll do it together, then.\" said Tanya. \"I know that they'll want to hear it from you directly, especially the 'winner'...\"\n\nPart 25 - Tuesday Trials and Tribulations\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded reporterette at 7:00am, Tuesday, April 23d. \"Many lawyers have expressed outrage at several judicial rulings favorable to TCPD Commander Donald Troy!\"\n\nBettina began: \"Judge Harry Nance's order to release everyone arrested in a Fraternity hazing case was overturned by Judge Patrick R. Folsom after Appellate Court Judge Leahy ordered a review. In addition to his order being overturned, Judge Nance has been suspended and referred to the State Supreme Court and State Legislature for review for possible impeachment. This is the second referral of Judge Nance for impeachment, which has outraged many legal experts that are said Judge Nance's ruling against Commander Donald Troy's action was both legal and proper.\"\n\nBettina: \"And even more chilling, according to legal experts, is that a judge ruled that Commander Troy did not exceed Constitutional constraints in what was described as a 'very harsh' interrogation of the wife of Republican U.S. Senator Samuel Russell, who recanted her earlier testimony that her husband did not rape former University basketball player Jayne Hallerton. Additionally, Republican Senator Russell is wanted for questioning in the death of an intern of Congressman Gerald A. Condor, but he cannot be compelled to return to our State while the U.S. Senate is in session.\"\n\nMore Bettina: \"And in State news, with the State House Judiciary Committee convening to begin impeachment inquiries of deeply unpopular Governor Val Jared, sources tell Channel Two News that Administration aides are discussing the possibility that Governor Jared will resign rather than put the Republican Party and the State through the humiliation of an impeachment investigation and trial, and his ultimate removal from office...\"\n\n* * * * * * * * * * * * * * *\n\n\"Harumph!\" growled Sheriff Griswold as we watched the news in my office. \"Val Jared has no intentions of resigning, and it's not even likely they'll get to a formal impeachment vote in the State House, which would have to be brought into session to make that formal vote. So what the hell is Wurtzburg talking about?\"\n\nMy Angels and I were also present, but the Chief was at a breakfast meeting with the Mayor and some Council Members.\n\n\"I think we're hearing wishful thinking on the Media's part, there, Sheriff.\" I replied. \"Maybe they're hoping if they tell the lie enough, it'll come true for them.\"\n\n\"Hell,\" said Tanya Perlman, \"if the total waste of time and money for the Independent State Counsel couldn't touch Governor Jared, why do they think this specious piece of crap will?\" No one answered; I just shrugged my shoulders and sipped coffee out of my Airborne School mug.\n\n\"Bettina must be really disappointed with those legal rulings.\" said Cindy. \"She all but said they were wrong since they favored you, Don.\"",
        "\"When are they going to start moving against Bettina for treason?\" Teresa wanted to know.\n\nTanya said \"I'm not supposed to say anything----\"\n\n\"Share the pillow talk, Lady Ironside.\" I said, making my Angels laugh and the Sheriff's mustaches twitch merrily.\n\nTanya grinned and said \"Well, Jack told me that at first the U.S. Attorney didn't think much would come of the investigation. But then they really did find some stuff about Bettina and Les Craig, and they started getting serious about it. They may not get her for treason, but they might get her for collusion and conspiracy of some kind. So they're taking their time to get it right.\"\n\n\"And Amber?\" asked Teresa.\n\n\"Her trial is coming up this summer, at least I hope so.\" I said. \"In fact, we're going to have a long, hot summer in the Courthouse. They're expediting Peter Blassingame's trial as much as they can, since he's not getting bail. Ditto that for Susan Dougherty...\"\n\n* * * * * * * * * * * * * * *\n\n10:00am, Tuesday, April 23d. Helena buzzed me to say that I had a visitor, whom I had her show in. It was Alison McFarland. I had her sit down in a 'hot chair'.\n\n\"I just came to say goodbye before leaving.\" said Alison. \"I appreciate you letting me help with these cases. Most Police Departments don't really like it when I butt in.\"\n\nI smiled. \"You were a great help to us. Where are you planning to go?\"\n\n\"I'm not sure.\" said Alison. \"There's a couple of cases in California, and one in Pennsylvania that might be interesting.\"\n\n\"If you're not in a hurry,\" I said, \"I'm hoping you'll stay for the Friday night celebration dinner. And you definitely have to be here on May 1st for the Promotions and Medals Ceremonies. We're going to surprise you with a Certificate of Appreciation. And... well, a whole lot more will be going on that day. Until then, you can stay at The Cabin, or you can stay in the mother-in-law apartment at the Mountain Nest, since my mother isn't in Town, and have dinners with us.\"\n\n\"As long as Carole doesn't try to make me eat her stringbeans.\" Alison said.\n\n\"Oh, you've been forewarned, I perceive.\" I said. We both chuckled.\n\n\"Okay then, I accept.\" said Alison. \"I just hope your Deputy Chief doesn't get upset. I think she's more than ready to see me leave.\"\n\n\"My Deputy Chief can just not worry about it.\" I said.\n\nAlison smiled. \"You really don't fear anything, do you? I know she's one tough... er, person. I heard she said she was going to, and I quote, 'clean your clock' in the Police Boxing Matches. And to be honest... from what I saw of her in the past, I'll be surprised if she doesn't win the tournament.\"\n\n\"Vee shall see.\" I said. \"Vee shall see...\"\n\n* * * * * * * * * * * * * * *\n\nMayor Daniel Allgood had told the Council that he wanted them to convene in the private Council Chamber at 7:00pm, a half hour before the public meeting of the Council would begin, and that he'd wait for them and delay the start of the public meeting until they all arrived. They all arrived by 7:00pm. \n\nTo their surprise, there was one other person in attendance at the meeting. The Sheriff's Department really did have a Deputy designated as the 'Sergeant-At-Arms', who was in charge of the Deputy security for the Courthouse as well as the Council, and he was here tonight.\n\nAfter everyone was seated, the Mayor took the podium. \"Please do not speak at all while I am speaking. I have been in consultations with the City Attorney, the Town & County Solicitor, the Sheriff, and the Police Chief. It is all their opinions that I am within the bounds of my authority to do what I'm about to tell you I'm going to do.\"\n\n\"I will not tolerate the displays of personal hatred and slanderous accusations that went on at this Council meeting last week.\" said the Mayor. \"I will not tolerate accusations of racism, nor racist hate speech. I will not tolerate being called an 'illegitimate' Mayor, nor will I tolerate myself nor anyone else in here being called a racist. I will also not tolerate gender-based personal shots at each other. Anyone making such comments will be removed from the meeting by the Sergeant-At-Arms, who is here with us tonight.\"\n\n\"Are you kidding me----\" started Reginald B.F. Lewis, but the Mayor interrupted him.\n\n\"Keep your mouth shut while I am speaking, Councilman Lewis,\" said the Mayor, boring in on Lewis, \"or I'll make an example of you right now. I'm done with the crap. We're going to be by the book, that being Robert's Rules of Order and the County Charter. If you people can speak civilly and debate respectfully and properly, you'll have free reign to do so. If you start up with the crap like last week, then I'll drop the hammer on you. It will be 'speak only when spoken to' by me, and any digression from the rules and proper discourse will result in your expulsion from the meeting by the Sergeant-At-Arms. Try to push it, and I'll have you arrested. Defy the Sergeant-At-Arms, and you'll be arrested by the Iron Crowbar, who you will find to be far less forgiving than I am.\"\n\n\"As to the public meetings,\" said the Mayor in the tense silence of the room, \"I have again made consultations with the City Attorney and others, and the consensus is that we do not have to tolerate the antics that have been going on the past few months. People have the First Amendment right to petition the Government for the redress of wrongs, but it does not have to be verbally at Council meetings, wasting our time. If these antics of packing the meetings to whine all night about a third Police precinct continue, I will have the Council Chamber cleared, and persons will have to petition in writing to speak before being allowed in. Any defiance of the proper Rules of Order by anyone, including any Council Member, will be met with expulsion and possibly arrest. Test me at your peril.\"\n\nLooking around at the shocked faces, the Mayor said \"Okay, let's go to the public meeting...\"\n\n* * * * * * * * * * * * * * *\n\nThe Mayor began the public meeting with a similar 'reading of the Riot Act' to the packed main audience chamber. When a large number of Deputies and armored Police Officers came into the chamber and lined the back wall, a large number of young persons... mostly black, all wearing red t-shirts with a person holding a pennant, the logo of the Antifa movement... got up and walked out. They would begin chanting outside in the parking lot, but the TCPD Officers warned them that any demonstrations without a permit would be shut down, and the demonstrators arrested.\n\nEveryone realized that this time it was different. The crowd dispersed.\n\n* * * * * * * * * * * * * * *\n\nAfter the public meeting was over, the Council convened in the private chamber again.\n\n\"Okay,\" said Mayor Allgood, \"that was smooth and orderly public meeting. Let's have a smooth evening here. Old business... the promotions and medals.\"\n\n\"I move to dispense with the reading, and immediately vote.\" said John Colby.\n\n\"I second.\" said Dagmar Schoen.\n\n\"I object.\" said Reginald B.F. Lewis. \"This is a formal complaint of the heavy-handed, hamfisted, tyrannical abuse of power by you, the illegitimate Mayor. We have the right to speak---\"\n\n\"Sergeant-At-Arms!\" yelled Mayor Allgood. \"Remove Councilman Lewis!\" \n\nThe Sergeant-At-Arms was a burly, middle-aged white man, and was wearing a proper Deputy uniform. He went to Councilman Lewis's chair and said \"Come with me, sir.\"\n\n\"Go to hell, you goddamned Cracker!\" shouted Lewis. The Sergeant-At-Arms reached for Lewis's shoulder.\n\n\"Don't touch me, you cracker pig!\" snarled Lewis. The Deputy reached for his radio.\n\n\"I need backup in the Council chamber.\" said the Deputy. And he got it: the double doors flew open, and Council Members gasped as Your Iron Crowbar walked in with the meanest look I could possibly put on my face, and brandishing the red crowbar. With me was the Iron Wolf, Captain Teresa Croyle, and I am sorry to say that I simply cannot match her 'Teresa Cunt' look when she chooses to exhibit it... and she was so choosing.\n\n\"Is there a problem here, Mr. Mayor?\" I asked in a menacing voice.\n\n\"He's resisting.\" said the Sergeant-At-Arms. \"He used racist hate-speech language, also.\"\n\n\"Oh really?\" I said. \"Mr. Lewis, you can either come with me willingly, or I will take you out of her by force.\"\n\n\"Then do it, Cracker.\" snarled Lewis. I grabbed him by the shoulders of his suit jacket and with sheer power pulled him out of the chair to his feet. He tried to push me off, but made the 'error' of displaying an elbow joint. And I know what to do with those.\n\n*WHAM!*\n\nI shoved Lewis to the ground on his belly, his arm twisted behind him. \"Police brutality!\" he yelled as I affixed handcuffs to his wrist behind him\n\n\"That's not Police brutality.\" said Teresa as she videotaped the arrest. As I brought Lewis to his feet, she said \"If the Iron Crowbar had exercised Police brutality, you would not have been able to get up again... ever.\"\n\n\"Let's go, Lewis.\" I said, leading him out. \"You are under arrest for disorderly conduct, disrupting a County Government meeting, resisting arrest, and assaulting Police Officers. You have the right to remain silent...\"\n\nAs we left, the rest of the Council looked at Mayor Allgood in total shock. He said simply: \"We have a motion on the floor...\"\n\n* * * * * * * * * * * * * * *\n\nI personally took Reginald B.F. Lewis through booking. On the way to the holding cells, he said \"Martin Luthor King, Jr. endured jail for civil rights, Cracker. And so will I.\"\n\nI said \"Martin Luthor King, Jr. endured jail for equality for all Citizens, not for racist hatred against Whites like you're exhibiting now. I personally think he'd be ashamed of what you're doing, Mr. Lewis...\"\n\nPart 26 - The Decision\n\n\"This is Amber Harris, KXTC Channel Two News!\" shouted the athletic blonde reporterette from the KXTC anchor desk at 7:00am, Wednesday, April 24th. \"In a shocking development, Town & County Councilman Reginald B.F. Lewis was arrested by Police Commander Donald Troy at last night's Council meeting! We now go to trusted political reporter Lester Holder at City Hall. Lester!\"\n\n\"Thank you, Amber!\" said Lester Holder from just outside the front doors of City Hall. Though the cameras didn't show it, KXTC security were keeping people well away from him. \"The racism of Mayor Daniel Allgood and Police Commander Donald Troy continues to dishonor our Town & County as the Council's only black Member, Reginald B.F. Lewis, was arrested at the executive session of the Council meeting, silencing his voice on behalf of the minorities he represents!\"\n\nHolder: \"Illegitimate Mayor Daniel Allgood ordered Mr. Lewis removed from the Council meeting after Mr. Lewis demanded to speak in protest of the Mayor's totalitarian dictatorship of the public Council meeting, where black citizens were not allowed to speak. Mayor Allgood then called in Commander Donald Troy, who used violent physical force to subdue Mr. Lewis. Assisting Troy was Captain Teresa Croyle, who we all remember once beat up a citizen at a DUI checkpoint.\"\n\nThe television went to a split-screen with Amber, who said \"Lester, why did Commander Troy arrest Mr. Lewis?\"\n\n\"Because Troy is a racist!\" Holder all but yelled. \"He hates blacks and uses the Power of Police to assault blacks and silence their voices. And we all know he fathered a halfbreed child out of wedlock. Donald Troy is just a despicable, evil man, who needs to find out what it means to be arrested, beaten up, and jailed like what he did to Mr. Reginald Lewis...\"\n\n* * * * * * * * * * * * * * *\n\n\"He's goading you.\" said Chief Moynahan. \"Let it goooooo, Commander.\"\n\n\"The rest of it, I don't care about.\" I said. \"But what he's saying about my daughter is inexcusable, and I will not forgive it, nor let it go.\"\n\n\"He's right, Chief.\" said Cindy, and strongly. \"Tasha is my blood kin, too. What Holder is saying about her cannot, and will not, be forgiven.\"\n\n\"He is trying to goad you, both of you, either of you, into attacking him.\" said Moynahan. \"This is KXTC's attempt to get back at you for rightfully putting their reporters in prizzzonnnnnn. So don't rise to the bait, Commander... and Commander.\"\n\nI turned to face the Chief. \"I'm not going to touch him, Chief. And neither is Commander Ross.\"\n\nThe Chief peered back at me. \"What are you thinking in that red head of yours, Commanderrrr?\"\n\n\"Deuteronomy, sir.\" I said. \"Specifically, Deuteronomy 32:35.\"\n\n\"Har! I love it.\" growled Sheriff Griswold. He then got up. \"We have the video evidence of the arrest, showing Lewis attacking you and you taking him down... more gently than I would have, for damn sure. Sit tight, Crowbar, and let me handle the media and publicity for all this...\"\n\n* * * * * * * * * * * * * * *\n\nThe video of the arrest was played on KFXU, as well as the Officer-cam coverage the Sergeant-At-Arms had on his person. Both clearly showed Reginald B.F. Lewis physically resisting arrest and using racist hate speech in his comments to the LEOs.\n\nMeredith Peller said \"As you can see, the Sergeant-At-Arms and Commander Troy were professional in their actions, and the takedown executed by Commander Troy was a proper response to Lewis's actions.\"\n\n\"And very restrained compared to what could've been done, if you ask me.\" said Catrina Pierce.\n\nThen the KXTC rant of Lester Holder about Tasha Troy-Patterson was shown. \"The racist hate speech of both Reginald B.F. Lewis and Lester Holder is embarrassing.\" said Catrina.\n\n* * * * * * * * * * * * * * *\n\n\"We are willing to drop the charges against Mr. Lewis,\" said ADA Franklin Washington, \"if he makes a public apology for his actions and his reprehensible speech, which I as a black man found disturbing and uncalled for.\"\n\n\"Yezzzz.\" said Judge Rodney K. Watts, who was also black. \"That display last night did not do anyone of any ethnicity any good, Mr. Lewis. As an elected Council Member, you should be representing your constituents with grace and decorum. So, will we be seeing a public apology on the newscasts today?\"\n\n\"Yes, Your Honor.\" said Lewis's attorney.\n\nAnd Reginald B.F. Lewis did go outside and, flanked by the Rev. Joseph E. Williams and ADA Franklin Washington, spoke before the cameras and publicly apologized for his actions.\n\n* * * * * * * * * * * * * * *\n\n\"And there you have it.\" said Bettina Wurtzburg after the press conference. \"Town Councilman Reginald B.F. Lewis apologized for his actions, and ADA Franklin Washington announced that no further charges against Mr. Lewis would be pursued. We have with us the Reverend Joseph E. Williams, who is a member of the Charter Commission. Reverend, would you say Commander Troy's actions were over the top in violently arresting Mr. Lewis?\"\n\n\"Bettina,\" said Rev. Williams, \"I've come to know Commander Troy on the Charter Commission. He is not a racist. He is a fair man to all citizens, even in the face of horrible things said about his daughter by your KXTC colleague. The Commander's takedown of Mr. Lewis was probably the most restrained way of ending the situation without physically harming Mr. Lewis.\"\n\nThe look on Bettina's face showed her 'disapproval' of those statements, but they were on live, and the damage was done...\n\n* * * * * * * * * * * * * * *\n\n\"I'm shocked.\" said Tanya Perlman as my Angels and I sat in my office. \"Did Rev. Williams really mean that, or is he just trying to de-escalate the situation?\"\n\n\"I dunno,\" I said, \"but Bettina couldn't keep the shock off her face when he said it.\"\n\n\"I'm surprised Lewis apologized.\" Cindy said. \"Did someone twist his arm? Besides you, Don, when you arrested him?\"\n\n\"He was in the wrong,\" said Teresa, \"but he could've made a huge racial issue out of it, and you know the Media would do everything they could to gin up race riots over it.\"\n\n\"Well, it's something we'll have to solve at a later time.\" I said. \"The Council approved our choice for MCD Supervisor, and Captain Perlman and I are about to tell Davis and Warner the results before we make the public announcement. So, any bribes of doughnuts to get me to tell you before I kick you out?\"\n\n\"I already know.\" Cindy said as she got up. \"I wrote the proposals we sent to the Council, remember?\"\n\n\"And I bribed her with beer and nachos to tell me, and very effectively.\" said Teresa. \"So you're on your own getting doughnuts, sir.\"\n\n\"Get out of my office, both of you.\" I said, but lovingly and with a grin.\n\n* * * * * * * * * * * * * * *\n\nMoments later, Captain Perlman and I called Detective Joanne Warner in first. \"How's Leo doing?\" I asked after having her sit down.\n\n\"He's awesome, sir!\" Joanne said happily. \"He's a really sweet dog, just like his daddy.\"\n\nI smiled. \"How's the pregnancy coming along?\"\n\n\"Good, sir.\" said Joanne. \"But I'm going to keep working as long as I can.\"\n\n\"Just don't go into labor while on a case.\" Tanya said with a grin. Joanne nodded.\n\n\"The reason we brought you in here,\" I said, getting to business, \"is because the Council passed the bill that includes the promotion to MCD Lieutenant. And I wanted to tell you beforehand, so you'll know.\" I steeled myself, then said \"We're going with Jerome Davis.\"\n\nJoanne nodded, but could not hide the disappointment on her face. \"Did I do anything wrong, sir?\" she asked.\n\n\"Not at all.\" I said. \"This is not a negative about you in any way. It's just that we have two highly qualified people and only one position for now.\"\n\n\"Was my pregnancy part of the decision?\" asked Joanne.\n\n\"Lord, no.\" I said, surprised at the question. \"How many of us have babies around here? That wasn't a factor at all.\"\n\n\"What can I do to get the next promotion, if one comes up?\" asked Joanne.\n\n\"Just keep doing what you're doing.\" I said. \"You're a brilliant Detective, and a very strong member of my MCD team. Just keep up the good work, and let us know if you want to go for any leadership posts that open up. And again, this is not a failure on your part, so don't let it get you down.\"\n\n\"I won't sir.\" said Joanne. I dismissed her, as it was clear to me she wanted to get on out of there.\n\nAfter she was gone, Tanya said \"Sir, have you ever been rejected or passed over for anything?\"\n\n\"Not really, not like that.\" I said. \"So no, I can't really relate. I just hope she doesn't take it badly. What about you?\"\n\n\"I guess I could say when you sent me to the Crime Lab... the first time.\" said Tanya. \"I kept a stiff upper lip about it, but it was a letdown.\"\n\n\"But it worked out.\" I said. \"You would not be my Captain of Detectives today if that hadn't happened.\" Tanya nodded. I said: \"What do you think she'll do?\"\n\n\"If she weren't pregnant,\" Tanya said, \"I think she'd apply to Quantico and go into the FBI, and Melina would have a job waiting for her. But since she's pregnant... she may find this to be a blessing in disguise...\"\n\n* * * * * * * * * * * * * * *\n\nWe called Jerome Davis in. Tanya did her best to keep a sad face, and I tried to look stoic. \"Have a seat, Detective Davis.\" I said solemnly.\n\n\"Yes sir.\" said Davis, sitting down.\n\n\"The Council passed our recommendations for promotions last night, in spite of all the 'excitement' you may have heard about.\" I said, slowly standing up. \"And I'm sorry to say...\" I said as I came around the desk, \"... that you're going to have to spend some money... on new uniforms.\" I stuck out my hand and said \"Congratulations... Lieutenant!\"\n\n\"Oh wow...\" said Jerome, then he stood up and shook my hand. \"Thank you, sir!\" He turned to Tanya and said \"Thank you, ma'am!\" as he shook her outstretched hand.\n\nAs we sat back down, I said \"Here's the real deal: you'll be promoted to Supervisor, then brevetted to Lieutenant, since you're still just a baby-faced kid.\" We all laughed at that. \"Don't announce it yet, though when it leaks and someone asks you, you can tell them the truth about it.\"",
        "\"Yes sir.\" said Jerome, not quite able to believe it. \"I really appreciate this opportunity.\"\n\n\"Captain Perlman and I believe that you have shown the leadership qualities we're looking for.\" I said. \"But I'll be blunt: don't stop working hard to improve your skills as a Detective. For that matter, I'm still learning from Sheriff Griswold and Chief Moynahan, myself. But your primary job now is leading your Detectives, and don't be afraid to ask Captain Perlman, me, the Chief, or the Sheriff for advice. Especially the Sheriff; you have no idea how much knowledge and ability that man has in him.\" \n\n\"Yes sir.\" said Jerome. Then his face got serious and he said \"I do have one thing I need to ask you both about... Geiger.\"\n\n\"Yes.\" I said solemnly as I sat back in my chair. \"Let's talk about Geiger... and Parker...\"\n\n* * * * * * * * * * * * * * *\n\nThat evening, the Charter Commission met in the new back room of the Cop Bar.\n\n\"Have you told Jerome Davis he's going to be promoted to MCD Lieutenant?\" asked Edward R. Steele.\n\n\"Yes, we told him this afternoon.\" I said as the others voiced their acclaims.\n\n\"He's black, isn't he?\" asked Edna Carter.\n\n\"Yes.\" I said.\n\n\"They were calling you a racist on TV this morning,\" said Edna, \"while you were going about promoting a black man to MCD Lieutenant.\"\n\n\"Yes.\" I said. \"And speaking of that, I appreciated your words on TV this morning, Rev. Williams.\"\n\n\"They were God's truth.\" said Williams. \"And I'll just tell you all here and now... if Lester Holder thinks the black community is on his side when he calls your daughter those filthy names... he's got another 'think' coming. I know there are issues out there, black and white, cops and the black community... but that's no excuse for that level of hatred towards a child.\"\n\n\"Anyone told Holder that?\" asked Edward Steele. \"Or KXTC?\"\n\n\"I think they know,\" said the Rev. Williams, \"and I think they don't care. Like I said, there are real issues out there... but it's the Media that gins it up, makes it worse, and they do all they can from letting any solutions work. The way the Media is today, any hope of better race relations will never happen.\"\n\n\"That's true.\" I said. \"And for Lester Holder, it's practical. He has his job because he's willing to gin up the race hatred... and he knows he's getting paid to attack my daughter like he does. It's also personal.\"\n\n\"With your reputation, Don,\" said Savannah Fineman, \"I'm surprised you haven't had a... conversation... with Holder.\"\n\n\"That's what he wants.\" I said. \"But I promised my Police Chief I wouldn't touch him. So I won't touch him, and neither will Commander Ross... who is Tasha's cousin, of course.\"\n\n\"I will pray that the Lord continues to give you strength and patience, Commander.\" said the Rev. Williams.\n\n\"Thank you, Reverend.\" I said. \"And while you're at it, pray for all of us to have strength and patience as we work on this Charter. We're beginning to get into the nitty-gritty of things... and we'll be getting input from all the Government agencies over the next month...\"\n\nPart 27 - Victory Party\n\nFriday, April 26th. We gathered in the back room of The Steakhouse. All the Detectives, their significant others, and their leadership were there, as was the Sheriff and Mrs. Griswold. Laura was sitting with Mrs. Griswold, and it saddened my heart to observe that the Sheriff's wife really had no idea where she was nor what was going on.\n\nPaulina Patterson was present, and without a date, so she sat next to me. Miriam Walters came in the company of Chief Moynahan; I mused that his methods of establishing good relations with the D.A.'s office might be similar to my good 'relations' with Paulina... except that Paulina had given me a child from our liaisons...\n\nAlison McFarland was invited, and showed up. She and Cindy were still avoiding each other, but I noticed that Teresa made a point to have Alison sit with her and Todd, and Alison may not have realized she was undergoing a full Police interrogation, so deft was Teresa at doing it. Todd was subtly flirting with Alison, of course.\n\nThe steak dinners were outstanding; The Steakhouse was one of the very best steak restaurants in the State; even Moe Molinari, who had a few steakhouses of his own, admitted that Jack Colby's restaurant was the gold standard of steak standards. \n\n*ding* *ding* *ding* *ding* *ding* *ding* *ding* *ding*\u2028\n\nSpoon met glass as Cindy Ross stood up to begin the afterparty. \"It's time for the Iron Crowbar to explain the solution to us all.\" There was acclaim and applause as I stood up.\n\n\"First of all,\" I said as the chatter died down, \"I really want to thank Alison McFarland for all her help with this case. Her information about related crimes in the past really put us on the path of the perps, and I give her a lot of credit for this.\" Everyone applauded Alison, even Cindy.\n\n\"Next,\" I said, \"I want to be very clear that this was a Team win. You all did great work, you all contributed greatly to one of the most successful results in TCPD history. Some big-name, arrogant perps thought they were above the law. You, my friends, have proved them wrong. You busted them up.\" Everyone applauded themselves politely.\n\n\"Okay, as to what happened.\" I said. \"This is the kind of case that we might not so easily solve just a few years ago. Today we have video coverage everywhere, computer networks to rapidly obtain and correlate data, and fast forensic testing that gives us criminals's identities very quickly. The Susan Phillips murder twelve years ago was an almost hopeless case on its own, and even the more recent cases as little as four years ago might've been very difficult.\"\n\n\"In this case,\" I continued, \"we had some camera footage of an Impala and some masked perps murdering two young people. We had information come in about previous cases from the work of Alison McFarland, and we were able to get onto the hazing incident in Nextdoor County very quickly, which led us to the Pi Omega Sorority. That was our first big break in the case.\"\n\n\"Our second big break,\" I said, \"was the anonymous tip that led us to identifying Wendy Withers. Once we knew who she was, data started pouring in in a hurry, and like water from a firehose. We'd have gotten there eventually, but that tip saved us some time. It also brought up some questions that could've been distracting... like did Stephen and Wendy know each other, why she was in his car at three in the morning, and so on.\"\n\n\"And don't tell the FBI this, but when that BAU unit arrived offering their 'help',\" I said, making air quotes, \"that made me realize to be on the lookout for some 'powerful interests' that might interfere with us... as they had in the past. So when the Tau Fraternity's name popped up, I was making a connection there.\"\n\n\"That's one place you're ahead of us, sir.\" said Julia Rodriguez.\n\n\"Maybe,\" I said, \"but several of you Detectives do have connections, and you can use them... and I'm not talking about Captain Perlman setting a wedding date. Hint hint.\" I looked at Tanya and Jack as I said that, and there was some laughter.\n\n\"Anyhoo,\" I said, \"from that point on it was just you guys doing some good old-fashioned Police work, gathering information. Thanks to Detective Geiger's experience in Vice, we were able to get ideas about where the Impala was taken, and it did show up.\" I noticed it got a little quiet... and tense... when I mentioned and praised Geiger. I moved on.\n\n\"Bit by bit, and piece by piece,\" I continued, \"we put together the full puzzle. But as I've said many a time, our job is not done until we give the D.A.'s Office a case they can spoon-feed to a Jury to get a conviction. To that end, we got warrants and set about obtaining the evidence we needed to make arrests. Our first attempt, a bull rush upon the Tau Fraternity, was interfered with by 'powerful interests',\" I made air quotes as I said that, \"and caused some problems. However... we had an ace up our sleeves, which gave me 'hopes' for successful arrests.\"\n\nMiriam Walters's beady black eyes glinted, but she seemed to roll with it. I went on with the narrative:\n\n\"With the help of the Midtown Police Force, which did a great job,\" I said, \"we got the Impala, and we got fingerprint evidence and tire evidence, putting that car in that field in Nextdoor County, and also at the murder scene. At that point, it was all over. 'Powerful interests' tried to put roadblocks in our way, but we stood up to them and their unlawful and even violent tactics, and I believe that we will prevail in the trials-by-juries to come.\" Everyone applauded.\n\n\"Okay,\" I said, \"any questions?\"\n\n\"Just one.\" said Cindy Ross. \"Did Stephen Henry buy an engagement ring? And if so, where is it? We haven't found it yet.\"\n\n\"Ah, you touch upon the one point of failure upon my part.\" I said, surprising everyone. \"And it may be good luck that I failed, as the issue itself is very tangential to the crimes, and might have distracted us if we'd known more.\"\n\nI continued: \"I failed to ask Dottie Smith directly if Stephen had actually asked her to marry him. If I had, and she had been truthful, then she would have said yes, that he had asked her! I believe he asked her, and she turned him down. Maybe she thought he'd ask again and she could say 'yes' the next time, or maybe she was hoping something better would come along.\"\n\n\"As I said before,\" I went on, \"we have tremendous access to data... but it sometimes takes time for data to enter the systems we can access. We didn't find it at the time, but after being rejected, Stephen Henry sold the engagement ring, went back to his hometown of Rocktown, opened a savings account, and deposited the $2000 from the sale of the ring into the account. That happened just before his death.\"\n\n\"Oh, wowwwww.\" whispered Alison McFarland, but where I could hear her. Then she said more loudly: \"That explains a lot about her reactions to his death.\"\n\n\"Yes. Yes it does.\" I replied. \"I admit completely misreading her on that. From now on, I'll leave the psychological analyses to the real expert in the room... my wife.\"\n\n\"Smart man.\" said Laura, making everyone laugh at the many meanings included in her remark.\n\nI said \"But again, that turned out to be a tangential story, and not really important to the murders.\"\n\n\"Sir,\" asked Julia Rodriguez, \"how many people do you think have been murdered in the past by this Fraternity and Sorority?\"\n\nI said \"I'm researching old Missing Persons cases now, and the Campus Police are doing their own review. It's hard to believe this went on for so long, and at least one time a year, and these guys didn't get busted.\"\n\n\"That's because we didn't have the Iron Crowbar back in those days.\" said Sheriff Griswold, whose cheeks were rosy as the effects of the bourbons he'd been drinking took hold. Everyone clapped at his words of praise.\n\n\"I say again,\" I said, \"that I believe this outstanding group of Detectives would've solved it without me being here at all. Indeed, I felt like I could go to the City and bust Samuel Russell's chops because I had total faith in all of you... and you justified that faith...\"\n\n* * * * * * * * * * * * * * *\n\nTuesday, April 30th. The Orange Order dinner was being held at the Junction Station Depot. Cindy was sitting next to me as we ate dinner.\n\n\"I finally figured it out.\" she said quietly to me.\n\n\"What's that?\" I asked.\n\n\"During the Audial Security and the Boddiker Hospice cases,\" Cindy said, remembering the recent 'Four Square' cases, \"I felt like you bluffed to get them to confess. Nothing wrong with that; they sang like canaries and made things easy for us.\"\n\n\"And then in this case,\" Cindy said, \"you went with the very aggressive raid on the Taus, even though you obviously knew we'd get the Impala and its evidence. That's not really like the Don Troy I've come to know and love over the past few years.\"\n\n\"I admit, the raid was aggressive.\" I said. I did not admit that I had indeed bluffed the hell out of the perps in the previous cases.\n\n\"And then I realized why.\" Cindy said. \"You knew about that FBI BAU evaluation of you, and you knew they'd be feeding that information to the Swamp Frogs... so you changed your tactics on them.\"\n\n\"Is that so?\" I asked.\n\nCindy said \"Ashwarya and her crew, and the Fitch's daughter and her husband, genuinely believed you could prove your cases against them, even though it would've been tough. They got bad advice and acted on it, and confessed and took plea deals.\"\n\n\"They got a bad Buddha, all right.\" I said agreeably.\n\n\"And that raid on the Taus... that rattled them, especially Jesse Smallwood, who later confessed.\" said Cindy. \"And they handed you Samuel Russell on a platter, like the head of the Baptist John, trying to distract you from going after the Taus and Pi Os... and maybe expecting you to comply and leave Blassingame alone in exchange for getting Russell... and found out that you could accept the sacrifice and still bring down the Houses of Tau and Pi Omega.\"\n\n\"That is Iron Crowbar thinking, there.\" I said. \"I should give you a crowbar. Oh wait!... I already have!\"\n\n\"Stoppit.\" Cindy said, but she could not help smiling brightly. Yes, she'd figured me out. That was indeed Crowbar-worthy...\n\nPart 28 - May Day\n\nWednesday, May 1st. While Bettina was gushingly talking about 'Workers of the World Day', I was getting ready for the Ceremonies. This was going to be an extremely hectic day.\n\n\"They're here, Commander.\" my assistant Helena said to me on the phone. I thanked her, then went and fetched Cindy from her office. We went into MCD in our semi-formal uniforms: rows of ribbons over our right jacket pockets, badges over the left pockets, and Medals of Valor around our necks, mine with an oak leaf cluster.\n\nThe Detectives were in their semi-formal uniforms, with Roy McGhillie, Teddy Parker, and Joanne Warner wearing their Purple Orders around their necks. Jerome Davis was wearing the uniform of a TCPD Lieutenant, with the thick piping down the sides of his pants, and a thin band of piping on his jacket sleeve. \n\nHis father, Navy Sr. Chief Petty Officer (Ret.) Jonathan Davis was also here, wearing his Navy uniform... I'd suggested he do so, and told him why. Admiral (Ret.) Leonard R. Cordell was also here, in his Navy uniform, and he and Jonathan Davis shared stories as if they were old Navy buddies..\n\nThen came a surprise: ADAs Paulina Patterson came in with Tasha, and ADA Franklin Washington came in... with his cousin Jamaal Washington, the Heisman Trophy winner.\n\n\"Jamaal!\" shouted Carole when she saw him. Yes, my daughter was here, and she rushed across the room to hug Jamaal. She was not wearing her No. 10 Wildcat jersey, as she was wearing her 'Sunday best' blue dress and white stockings, as she had at the State Capitol a few months earlier. Her mother Laura had been holding her, and Laura was wearing her navy blue and white striped dress, and she looked good enough to eat... which I promised myself to do later that night... but I digress.\n\nCaptains Teresa Croyle and Tanya Perlman came in, followed by Lt. Ivar Irwin and Lt. Micah Rudistan. \"I heard there was a party in here today!\" Rudistan said with great joviality. How he knew what was coming, I don't know. I did know that Teresa had told Lt. Irwin what was going on.\n\n\"Rooood-i-stan!\" said Carole when she saw him, somehow remembering his nametag from earlier times. Rudistan jovially said hello to Carole and to Jamaal.\n\nCallie Carrington had come in, distracting all the men and a few of the women. And Alison McFarland was here, looking extremely hot in a crimson-red dress and black peep-toe slingback high heels. I had to do a bit of work to keep my little iron crowbar from getting iron hard.\n\nA moment later, Chief Moynahan and Sheriff Griswold came in with some guests. FBI Special Agent in Charge Jack Muscone and Supervisory Agent Martin Nash came in... along with Martin's uncle, the retired former Deputy Director of the FBI. But they weren't the ones that brought 'shock and awe' to us.\n\nOne of the guests was General Alexander McFarland, which was impressive enough. The man with him was even more impressive: he was the Marine General that had given me Gunny Guernica's Eagle, Globe, and Anchor, the insignia of the Marine Corps. (Author' note: 'Semper Fidelis', Ch. 03.)... \n\n...and he was now the Chairman of the Joint Chiefs of Staff. Yes, that Chairman of that Joint Chiefs of Staff.\n\nJonathan Davis had come to attention upon the Generals's arrival. The CJCS came up to him and shook his hand and talked with him a moment, then shook Jerome's hand when introduced by Jerome's proud father. He then spoke to Admiral Cordell as if they were old friends... and I realized they were old friends. Admiral Cordell introduced the CJCS to Teresa, mentioning that she was the daughter of a Medal of Honor recipient and had earned the TCPD Medal of Valor herself. I observed that the CJCS was very impressed.\n\nHe was also impressed that Jamaal Washington was in the room, and shook hands with him as he congratulated him on winning the Heisman Trophy. He then allowed himself to be introduced to everyone in the room, shaking hands with everyone as if he were running for political office. I knew he knew the DepDirector, and I was not surprised that he knew Laura. \n\nA moment later, they began a ceremony. \"Thank you for allowing us to join you today.\" said the CJCS. \"I'm sorry that I can't stay for your ceremonies. I understand that everyone in here knows what happened a few weeks ago, even though we can't talk about it.\" \n\nHe was referring to the EMPTY QUIVER event. (Author's note: 'The Nuclear Option'.) Everyone nodded; even Jamaal Washington knew what had happened, thanks to having two cousins in the area that did not keep their mouths shut, at least at the family dinner table. And Carole didn't really count, even though she'd remember every word spoken at this ceremony today.\n\nThe CJCS continued: \"We're here to honor Commander Donald Troy for his part in bringing that incident to a successful conclusion.\" He called me to the middle of the room, and as General McFarland read the proclamation (the unclassified part, anyway), the CJCS pinned a medal on my uniform jacket beneath my badge. \n\nIt's formal name is 'The Office of the Secretary of Defense Medal for Valor', and it is the highest civilian award for valor presented by the United States Department of Defense, awarded to government employees and private citizens who perform an act of heroism or sacrifice, with voluntary risk to their personal safety in the face of danger, and relating to the Department of Defense. I daresay I'd met those requirements, but it was nice to be honored.\n\nEveryone applauded, and selfies and photos were taken, especially by Commander Cindy Ross. Afterwards, I went and got Carole from her mother as General McFarland said hello to Laura and the DepDirector.\n\n\"Daddy, why do those men have stars on their shoulders?\" Carole asked.\n\n\"They're military generals.\" I said.\n\n\"Why do they have different uniforms?\" Carole then asked. The things she observes...\n\n\"Well, the Chairman of the Joint Chiefs of Staff is a U.S. Marine, and General McFarland here is in the Army.\" I said. \"The Marines and Army were created when the United States was created, and they made different uniforms, and just kept them that way for over 200 years. It's tradition now.\"\n\n\"Like Wild-cat tra-dish-un?\" asked Carole.\n\n\"Sort of.\" I said with an amused smile. \"But a lot older.\"\n\n\"Jim is going to have stars on his shoulders one day.\" said Carole, referring to her younger brother. I think my eyes widened in surprise at that prognostication.\n\nGeneral McFarland had heard most of that conversation. \"Is this your daughter, Laura?\" he asked my wife.",
        "\"Yes, General.\" Laura replied. \"Jim is her brother, and she says he's going to West Point one day.\"\n\n\"I sure hope so.\" said McFarland. \"What about you, Carole? Are you going to be in the Army one day?\"\n\n\"I'm going to be a Po-leece De-tec-tive.\" Carole said. \"Like my daddy.\"\n\n\"And speaking of daughters, General McFarland,\" I said, \"yours is standing right behind you.\" McFarland turned to see Alison standing in the back doorway to MCD.\n\n\"Ohh...\" said the stunned General. \"Hello, Alison. I had no idea you were here.\"\n\n\"Hi Dad.\" Alison said solemnly. \"I didn't know you were coming.\"\n\n\"General, there are a couple of empty offices across the hall.\" I said. \"Why don't you and Alison talk in one of them for a few minutes.\"\n\n\"Uh, yeah, sure.\" said McFarland. He and Alison went into the Sheriff's temporary office.\n\n\"He told you he only had one daughter?\" I asked Laura. When she nodded, I said \"Alison said she has a sister, who is really estranged from the General. At least Alison is talking to him.\"\n\n\"I wonder how that's going to work out.\" Laura said, her voice a bit pensive and not hopeful.\n\n\"It'll be okay, Mommy.\" Carole said. \"They were happy to see each other, even though they didn't look it.\" Laura and I just exchanged a glance at that, and I had a little grin on my face.\n\n\"Commander, I'm sorry to disturb you, but time is short.\" said the Marine General a second later. \"May I have a word with you in your office?\"\n\n\"Certainly, General.\" I said. I handed Carole back to Laura. \"Follow me, please.\" I said.\n\n\"Bye bye.\" said Carole as we left the room...\n\n* * * * * * * * * * * * * * *\n\nWe went into my office, while the Chairman's security stayed outside. He looked around my office. \"Ah, Gunny Guernica's Eagle, Globe, and Anchor.\" he said, observing it in its frame on the wall to his right, my left.\n\n\"Yes sir,\" I said, \"and that drawing of me was done by his young son. Did a good job, though he made my ears a bit too big.\"\n\n\"No, he got them just right.\" said the General with a grin. \"Guardians of Justice Motorcycle Club.\" he said, seeing the framed patch on the wall. \"Yes, I've heard of them... and the Guardians of Justice.\"\n\nHe looked at the other wall. \"Way too modest, Commander. Just your Medals of Valor and... citations for Bowser... who is Bowser?\"\n\n\"My dog, sir.\" I said. \"He saved a child's life leading us to her in a ditch, and he visits the Cancer Center kids every year.\" The General shook his head in amazement, then looked at the framed sets of jump wings.\n\n\"Israeli?\" he asked.\n\n\"Yes sir.\" I said. \"I got to jump with the 55th Paratroopers. Incredible honor.\"\n\n\"Yes.\" the General said simply. I wondered how much he knew about that... and the identity of the Mossad agent I'd made that jump with...\n\n\"I'm very impressed with your Team.\" said the General. \"You've got a lot of fine people working with you. I know of Captain Croyle's father's actions that earned him the Medal of Honor, and I heard of what she did to rescue your and Dr. Fredricson's daughter.\"\n\n\"Yes, I'm very grateful to her for that.\" I said. \"Please sir, have a seat.\" I said. As he sat down, I sat in my chair and was now talking alone in my office with the Chairman of the Joint Chiefs of Staff. \"I appreciate you coming, General, and for this award.\"\n\n\"You absolutely deserve it, too.\" he said. \"General McFarland is still amazed at what you did to resolve the crisis. Melina Allgood will be receiving a similar citation from the FBI.\"\n\n\"Good. She deserves it, sir.\" I said. \"I was glad to be able to help, as well. So how can I help you today, sir?\"\n\n\"I just wanted to tell you something, between just the two of us.\" said the General, leaning forward and almost whispering. \"I know about some of the things going on in Washington and all over the country, and here. Admiral Keating was a good friend of mine, a very good friend, as is retired Admiral Cordell. What I'm saying, Don... is that I'm on your side.\"\n\nMy eyes must've gotten wide. The Chairman of the Joint Chiefs of Staff said \"Not everyone is, though. McFarland is okay, he's a Patriot, loves his country... but he also loves his career. And there are a lot of people, especially in the Intelligence Community, that are part of the Swamp, as you call it. You've done an amazing job, along with your wife... destroying two rogue CIA cells, and rooting out Les Craig. He did incredible damage to the FBI, more than you know.\"\n\nI nodded and the General went on: \"I'm in a very good position to help, but at the same time it's too high a position at times. I do know that the main danger is in the Intelligence Community itself.\"\n\n\"What can I do to help, sir?\" I asked.\n\n\"We're here to help you, Commander.\" said the General. \"I know you're looking for that mercenary group, Ridge and Starr, and you're looking for that Red Chinese agent Shimono. Keep looking for them. And if you need help, contact Special Agent Nash or his uncle, the retired FBI Deputy Director. They'll get word to me.\"\n\nI remembered that when this General had given me Gunny Guernica's insignia, the FBI DepDirector had accompanied him. I now realized that the DepDirector and the General were allies, and that the meeting with me then had not been arranged just to give me that insignia, and the medal award today had other purposes, as well. \n\n\"What about my wife?\" I asked.\n\n\"She'd just talk to the same people.\" said the General, seeing that I was connecting the proper dots. \"We fear they're watching her, so she is doing her main job, which is being your wife and watching over you, just as you are watching out for her.\"\n\nThere was a knock on the door, and a security man looked in. \"General, we need to be going.\"\n\n\"On my way.\" said the General. We stood up and shook hands. \"Congratulations again, Commander. And keep up the outstanding work.\"\n\n\"Thank you, General.\" I said. \"And Semper Fi.\" \n\n\"OO-RAH!\" said the CJCS, ever a United States Marine, as he left my office. \"Semper Fi, Commander...\"\n\n* * * * * * * * * * * * * * *\n\nGeneral McFarland introduced Alison to the CJCS, and said he was going to stay here for a while. He always traveled with a civilian suit and tie, into which he changed after the CJCS left.\n\nMCD was a bit emptier, as Laura and the DepDirector were talking in an office, and General McFarland and Alison were getting a tour of TCPD from Lt. Rudistan... without adult supervision. But I didn't have time to worry about that. There was another ceremony to be performed in MCD. \n\nOfficer Barker's parents brought Frieda Franklin and Barky in. Joanne and Frieda petted Barky and talked about him and his brother Leo, and Joanne showed Frieda photos of Leo. Barky seemed to be a bit nervous with the crowds around, so we started the ceremony.\n\n\"The K-9 Commendation Medal is awarded to K-9 Corporal Barky,\" Cmdr. Cindy Ross said, \"for his valor in defending his family from home invaders. He is also awarded the K-9 Purple Order for being wounded in the line of duty.\" Everyone clapped as she handed Frieda the framed citations, and I pinned the medals onto Barky's collar along with his badge. Barky seemed to like me well enough that he endured my actions, and I took the opportunity to give him some good skritchins and pettings.\n\nAfterwards, the Barkers took Barky home; they would return later. In the meantime, in the Chief's office, with Captain Perlman present, I swore in Jerome Davis as Supervisor and the Chief and Sheriff pinned the Supervisor insignia on his shoulders. Cindy handed Jerome his 'bling', the 'Lieutenant (B)' badge and silver bars that we'd pin on his shoulders in the public ceremony.\n\n\"The school buses are arriving.\" we were informed. Indeed, the entirety of Eastside Elementary School was being brought to our ceremonies today, and would be coming through on tours after the Ceremonies. Fortunately, it was almost time to begin the ceremonies, so we went outside.\n\n* * * * * * * * * * * * * * *\n\nWe'd brought in bleachers for the students, and they were sitting on either side of the Officers in the middle. It was a bright, beautiful day as I brought out a box and put it under the podium. Then the Chief came up to start the ceremonies.\u2028\n\nThere were few promotions, but obviously there was one big one. Captain Tanya Perlman sat in her wheelchair next to the podium to read the proclamation brevetting Jerome Davis to Lieutenant. As his father and I pinned his Lieutenant bars on his shoulders, I glanced at the Detectives in the stands out of the corner of my eye. Joanne didn't look unhappy, which made me happy, and the other Detectives seemed happy about it.\n\nThe Press was here recording the event, but they would not make much of a big deal about the first Person of Color to be promoted to a Detective Lieutenant position. That was a good thing, I guess; promotions of minorities and women were a 'normal' thing in my Police Force. And it messed up the Media's narrative that the 'racist Iron Crowbar' was pinning the insignia on Jerome's uniform... and had made the ultimate decision on Jerome as the one to be promoted. And with a great deal of malice, I thought how I'd have loved for Captain Malone to have been here to see this. He'd be hating it...\n\nI shook Jerome's hand, then he shook his father's hand. That was not enough for Jonathan; he pulled his son to him in a man-hug. I suspect that was the most emotion he'd shown towards his son in a long time. Jerome hugged his father back as everyone in the stands applauded strongly.\n\nNext, we awarded a Certificate of Appreciation to Alison McFarland for her assistance in the Stephen Henry/Wendy Withers case. As I handed her the framed certificate and shook her hand, I noticed that her father, standing near the bleachers with his security, had a look of pride on his face. He and his daughter had some years to make up; I hoped this would be the beginning of that for them both.\n\n\"We're going to have more Certificates,\" I said at the podium, \"but we're going to save those until the end.\" With that, we began handing out the medals. There were a number of Achievement and Commendation Medals for Officers from the Marcie Harper drug bust, the EMPTY QUIVER event, and the 'Four Square' cases. There were no Stars of Gallantry awarded this time, but then came a surprise: Commander Ross read the proclamation as the Chief pinned a Police Medal on my uniform, a cumulative award for my participation in those recent and harrowing cases, though the Harper drug bust was emphasized.\n\nAnd then the mood changed as the Chief had Officer Barker's parents and Frieda come up. The entire Police Force stood up. I read the first proclamation, which ended with the words: \"For saving life at the cost of his own, Officer Barker is posthumously awarded the Lifesaving Medal.\" \n\nAs the Chief handed Frieda the opened box with the Lifesaving Medal in it and the framed proclamation to go with it, the Police Force clapped strongly but solemnly. Seeing them act, the school kids also stood up to clap. Frieda had tears in her eyes, but stayed brave as she accepted the awards.\n\n\"Officer Barker was taken from us way too soon.\" I said. \"His career was all too short, but was very distinguished, and included earning the Purple Order. And so, to recognize the career of this outstanding Officer, he is posthumously awarded the Police Distinguished Service Medal.\"\n\nAs the Chief presented the TCPD's third highest medal to Barker's parents, Mrs. Barker began sobbing on her husband's shoulder. Mr. Barker was openly crying, also, as he accepted the award. The Force gave them an even stronger and louder round of applause, which was sustained for several long moments.\n\nAs the Barkers were helped back to their seats in the stands, I said \"Frieda, stay up here for a moment.\" The little red haired girl did so, coming over to the podium as I said: \"Would Carole Troy, Davie Marsdon, Timmy Austin, and Susie Haskins please come up.\"\n\nThey all did so, and stood in a row next to Frieda; Susie next to her, Carole in the middle, and Davie and Timmy on the other end.\n\n\"We are honored to have Detective Theo Washington's cousin, Heisman Trophy winner Jamaal Washington, helping with these presentations.\" I said. Jamaal came up, smiling brightly, typically out-'GQ'ing everyone like his cousins did. The elementary schoolchildren were agog, and were applauding loudly for him.\n\nI said \"Ms. Frieda Franklin has greatly helped the Police Force by giving us information that has helped lead to the identification and stopping of several wanted criminals. For saying something when she saw something, and for bravely helping me at risk to herself, Frieda Franklin is awarded this Certificate of Appreciation.\" Jamaal handed Frieda her framed certificate and shook her hand as everyone applauded.\n\n\"And speaking of coming forward,\" I said with a grin, \"the TCPD's youngest Detective, Carole Troy, observed something not quite right and informed the Police. It was her observations that directly led to the biggest drug bust in this State's history. For those observations, and for saying something when she saw something wrong, Carole Troy is awarded this Certificate of Appreciation.\" Jamaal handed Carole her framed certificate, but a handshake wasn't enough for her; she went forward and hugged Jamaal's legs.\n\n\"And for their assistance to me in helping stop a dangerous wanted criminal, at great risk to their safety, Susie Haskins, Davie Marsdon, and Timmy Austin are awarded these Certificates of Appreciation, along with my personal gratitude for their courage and fighting skills.\" There was strong acclaim as Jamaal handed the Trio their awards. As the photos were taken, Cindy had come up, and she and I took some objects out of my box.\n\n\"For these courageous young 'whippersnappers', as the Sheriff would call them,\" I said, \"we have... crowbars!\" This was to reward the courageous kids, but also my subtle shot at the Media for accusing me of endangering the children by emboldening them to help me push Paco over the cliff. (Author's note: 'Little Red Haired Girl', Ch. 04-05.)\n\nI took one of the red felt crowbars and bent it as I said \"These are not made of iron; they are made of the same materials Nerf footballs are made out of. Still, guys, do not use these on your classmates. Understood?\"\n\n\"Yes sir!\" said the excited kids. I handed red Nerf crowbars to Timmy and Davie, and Cindy handed green Nerf crowbars to Frieda and Susie. Their faces looked like it was Christmas morning after Santa Claus had visited.\n\nBut as I was going to hand Carole her red crowbar, she put her hands behind her back and said loudly \"No thank you, sir!\"\n\nCindy had the microphone Tanya had used, and she came up to Carole and said \"Why not, Carole?\"\n\nCarole said clearly into the microphone: \"I'll wait until I earn the real red crowbar!\"\n\n\"WHHOOOAAAAAAAAAA!\" shouted the entire Police Force as laughter and applause erupted everywhere. Carole's mother had her hand covering her eyes; she was not as amused at what she perceived as impoliteness. The Sheriff's mustaches were twitching most merrily. Cindy, Teresa, and Tanya were laughing and cheering. Carole just stood there shyly with her hands still behind her back.\n\nJamaal Washington yelled \"That's what I'm talking about!\" and came up and high-fived Carole. He understood: that same attitude had led him to winning a Heisman Trophy. Carole then accepted the high-fives of Susie, Davie, and Timmy.\n\nI was later shown that I had a look of profound 'shock and awe' on my face at my daughter's words. I looked at her, then at the Police Force, and just shook my head in wonder as they cheered all the harder. \n\nWhen some semblance of order was restored, I said. \"Well... o-kayyyyy.\" I put away the felt crowbar and picked up the real thing and held it up. \"Here it is. Come see me... in about twenty years.\" The Police Force cheered again. None of us realized that the day The Greatness would begin was less than those 20 years away...\n\nPart 29 - Burning Embers\n\n\"This is Amber Harris, KXTC Channel Two News!\" said the athletic blonde reporterette at 6:00pm, Wednesday, May 1st, from the anchor desk at KXTC Studios. \"Lawyers for Peter Blassingame and Susan Dougherty are working feverishly to get their clients released from jail as legal maneuverings play out in both local and Federal Courts. The Federal Appeals Court ruled that the the Federal judge that intervened to quash warrants issued by the local Superior Court was wrong to do so, that the Federal Government did not have jurisdiction over a local murder case.\"\n\nAmber continued: \"The University has already expelled Blassingame, Dougherty, and several others in connection with the hazing incidents that led to the rapes of several Sorority pledges and the murders of two University students, and are moving to shut down the Tau Fraternity and Pi Omega Sorority as evidence mounts that these two organizations have been complicit in criminal hazing incidents for years. However, the Tau Fraternity appealed the University's action to the State Regents and also sued the University, claiming that the Fraternity as an institution has not been proved to be criminally complicit, and they remain open for now...\"\n\nAmber then said \"We now bring in our Senior Managing Editor, Bettina Wurtzburg.\" As the camera panned out to show the redheaded MILF reporterette, Amber asked: \"Bettina, do you believe the University can and will shut down the Tau Fraternity, whose members for years have become some of the most powerful and wealthy members of Society?\"\n\nBettina said \"There is a lot of complex legal maneuvering going on, and that may take some time to work its way through the legal system. Peter Blassingame and Susan Dougherty will have their trials in a few months, and they are expected to fight to the last ditch against these charges. Overall, I'd say it's likely the Tau Fraternity will continue to operate on Campus for a long time, and even may never be shut down...\"\n\n* * * * * * * * * * * * * * *\n\n11:30pm, Wednesday night, May 1st. The Charter Commission meeting, held at Edna Carter's house, was ending when my Police iPhone rang. \n\n\"Oh my God.\" I gasped as I was told the news, which had everyone looking at me. As I disconnected, I said \"I have to go. Someone set the Tau Fraternity House on fire...\"\n\n* * * * * * * * * * * * * * *\n\nI parked my Police SUV on the curb a distance down from the Tau House; Fire, Police, and ambulance vehicles were crowded in ahead of me, creating chaos. As I walked up towards the scene, brilliantly lit by the red, white, and blue lightbars of various emergency vehicles, I was met by Captain Teresa Croyle.\n\n\"We have her in custody, sir.\" she said.\n\n\"Who?\" I asked.\n\n\"They didn't tell you when they called, sir?\" Teresa asked.\n\n\"No, so don't keep me in suspense.\" I replied.\n\n\"When the first Fire and Police vehicles arrived, the House was burning fiercely.\" Teresa reported. \"There was a woman standing in the front yard, with a shotgun in her hands. It was Kitty Summers.\"\n\nI groaned. We came up to the edge of the property. The old, large building was almost completely destroyed. The brick walls had caved in, the columned porch was no longer. Only a smoking ruin was left.\"\n\n\"Wish we'd had you here earlier, Commander.\" said Fireman Greg Towson.\n\n\"Casualties?\" I asked, understanding Towson's meaning.\n\n\"Yes, Commander.\" said Fire Chief Quinlin as he walked up to us. \"No one from the Fire Department, but we've found ten bodies inside, eight males and two females. The two females and two of the males were found together, and were possibly in bed together. So far, we have not found anyone who will admit to being inside and getting out alive.\"\n\nI nodded. \"Where is Summers?\" I asked Teresa.\n\n\"At Headquarters.\" Teresa replied.",
        "* * * * * * * * * * * * * * *\n\nTeresa and I came into I-1, where Kitty was sitting, seemingly in a daze. She looked up at me as I approached the table.\n\nI just looked at her and said \"Why?\"\n\nKitty said \"Did you hear the newscast? That redheaded reporter said that the Taus would never be shut down, never have to pay for what they've done.\"\n\n\"It's a little late to be saying this,\" I said, \"but you shouldn't believe a word the Media says. I fully intend to make the bastards pay. I'm going for the death penalty for Peter Blassingame.\"\n\n\"No,\" said Kitty, her voice eerie, her eyes looking haunted, \"I know you'll try, Mr. Crowbar, and you're the only one who has ever tried. But they won't let you win. They always win; good people always lose.\"\n\n\"Did you do this alone?\" I asked.\n\n\"It doesn't matter.\" Kitty said.\n\n\"It might mitigate your prison sentence.\" I said. \"Ten people died tonight, Kitty. You might get the death penalty for this.\"\n\n\"Good.\" said Kitty, holding eye contact with me. \"Don't you see? My life was over the minute those Sorority bitches held me to the ground while those bastards took turns raping me again and again and again. They destroyed my life, completely. From that night on, I have never been able to close my eyes and go to sleep without remembering what they did to me, without that feeling of being helpless, and being violated. Not a day goes by that I don't relive that nightmare. They would've done me a favor murdering me right then and there.\"\n\nShe was gone, I realized. She wouldn't get the death penalty: people who are insane aren't put to death. Kitty Summers would ultimately receive a 'Guilty but Insane' conviction and be incarcerated in the State Women's Prison's psychiatric ward at Madison County for the remainder of her natural life.\n\nForensics in the coming days would reveal that carbon monoxide (CO) gas had been released into the House by a car's tailpipe being connected to a hose that went into the House through a disused laundry room vent. The CO had rendered the occupants unconscious. Then gasoline had been brought in and spread around, and the House went up like a tinderbox.\n\nYes, someone had helped Kitty, I realized. Someone had hooked her car's tailpipe to the vent, and maybe the gas had been brought in other ways; that was a lot of house to fill with CO gas. Someone had had to help spread accelerants all over the place, someone with gas masks and air tanks. They'd left Kitty standing there with a shotgun, maybe to kill anyone who was able to wake up and try to escape, or maybe to be the fall girl for it.\n\nMy only question was whether these perps were friends or foes...\n\n* * * * * * * * * * * * * * *\n\nAfterwards, Teresa invited me to her home for a drink. After pouring us a couple of bourbons, we went onto the deck of her home above her front porch. We could smell the smoke from the burning Tau House, and could see some of the lightbars still flashing.\n\n\"You like sitting out here as much as I like sitting on the deck of the Cabin.\" I said after we'd sat down.\n\n\"Yes.\" Teresa said. \"But it's not yet Counseling Central, like your deck is. Carole loves going out there and talking to you when you take the dogs out. And we all go out there while you're sitting in your place, and get your advice. Even the Sheriff, sometimes.\"\n\nI nodded. \"Yes. I'll probably die sitting out there, looking out over my Town & County. So... what did you want to talk about tonight?\"\n\n\"What Kitty Summers said in the Interrogation Room really bothered me.\" Teresa said. \"That the Bad Guys always win, and we Good Guys always lose. And I know that's not true. But...\"\n\nShe paused, and I let her get the words out. She said \"Stephen Henry... he was a good kid. He stopped to help someone who really needed it, and he was murdered for it. Just blown away, in cold blood. And I can't help but ask 'why?'. It's just so... so senseless. Why does God allow things like that to happen?\"\n\n\"I don't know.\" I said. \"If I did, I'd be God. But I have thought of things like that a lot, more times than you know, and I've only found one answer. St. Matthew 5:45. 'that you may be children of your Father in heaven. He causes His sun to rise on the evil and the good, and sends rain on the just and the unjust.'.\"\n\nTeresa nodded, and sat there contemplating long after I'd said goodnight and left for home. And as I drove home, Teresa's words were burning through my mind. But other words were, also...\n\nPart 30 - Epilogue\n\nWhen I got to the Mountain Nest, Laura had already gone to bed. I went and checked on the children. Jim was in his bed, sleeping soundly. Buddy was in his basket, having looked up when I came in, then settled back down. I petted him before I left the room.\n\nI went to Carole's room. My firstborn child was in her bed, sleeping, her face peaceful, untroubled. Bowser was looking up from his basket. I pulled the chair in the corner of the room up to Carole/s bed and sat down. Bowser came over for some skritchins, which I lovingly applied.\n\nYes, I thought as I looked at my sleeping daughter, I am here. And I will be here. I will not make General McFarland's mistake. I'll be here for you, to answer your questions, to advise you to the best of my abilities, to just talk with you if that's what you want. But most of all, I will be here to protect you and keep you safe until you spread your wings and learn to fly for yourself. Only if I die will I not be here, but I will cheat and defeat Death if I have to. Whatever it takes.\n\nI will be here for you, Carole. Whatever it takes.\n\nI swear it.\n\n* * * * * * * * * * * * * *\n\n\"Here's what we know.\" said Alison McFarland into the microphone for her podcast. \"The killers of Stephen Henry and Wendy Withers have been arrested and await trial. Many involved in the gang rapes of Sorority pledges have made plea deals or are awaiting trial. They are now facing Justice, and will no longer be the threats to Society that they were.\n\n\"I'm sure many of you are asking what I've been asking... how this could've gone on for so long, unchecked; how the rapes and even murders could've remain unresolved for so long.\n\n\"I don't blame those in the past for not solving these crimes. Jurisdictional lines were crossed, cooperation was not the norm. Evidence was not as easy to process as it is now. Yes, technology is better now than it was, and repeating the crimes time and again was bound to lead to the discovery of the harrowing rituals.\n\n\"And there were 'powerful interests' that interfered with or outright stopped any investigations, usually before they really began. The Taus and the Pi Omegas were the sons and daughters of the rich and powerful, people who think they know what's best for you, people who think that it's their birthright to tell you what to do, and to use your daughters for their sexual pleasure, at their whim.\n\n\"Those powerful interests existed then, and they exist now, and they desperately tried to stop the truth from being discovered . But this time, they came up against something a lot harder than they are used to facing. This time, the Town & County Police had Commander Donald Troy. He refused to be distracted, he refused to let go. He is relentless, he is fearless, and he is willing to stand up to the powerful interests, and to push back in the name of Justice. He is the Iron Crowbar... and because of him, these cases are no longer... Unresolved.\"\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "iron crowbar",
        "mystery",
        "police drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/unresolved-ch-05"
}