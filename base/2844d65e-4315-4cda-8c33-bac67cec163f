{
    "title": "Recipe for Disaster Pt. 03",
    "pages": [
        "All characters are 18 years of age or older. A mysterious monolith has appeared on the campus of Old Miskatonic University. What secrets does it hold? What horrors might it unleash? Just have to wait and see.\n\n*****\n\nThe alarm went off and I opened my eyes. I stood up and walked to the window. I let the bright sunlight fall on my body and felt the rush of energy fill me. I got dressed and headed off to the university. I parked in the staff lot and that's when I saw the news vans and I was afraid someone else had been murdered. I raced over and that's when I saw the crowd around the stone obelisk. It had to weigh tons and there it was in the middle of the student commons. Where the hell had it come from? A hand clapped me on the shoulder and I looked over at a smiling Chancellor.\n\n\"Amazing isn't it,\" he said grinning from ear to ear. \"It appeared just before dawn. The CCT cameras showed the whole thing. One second the area is clear and the next this monolith is standing there.\"\n\n\"Why are you smiling sir?\" I asked.\n\n\"Don't be so serious son; this is publicity that will last for months. The geology department is still trying to figure out where it was quarried from. The mathematics department is working on how much it weighs. The engineering department is baffled on how it was moved so quickly and so quietly. I need you to take a look at the markings on it. You are going to head the research on it. If you can handle it I will sign off on your doctorate. What do you say son?\"\n\n\"Consider it done,\" I said and he patted my shoulder.\n\n\"I knew I could count on you. Find some time between your classes to take rubbings and see what you can figure out. Best of luck and keep me in the loop.\"\n\nI stared at the monolithic sculpture and had to admit it was gorgeous. It appeared to have been carved using some sort of laser. Much of its surface was polished to a mirror bright finish. The material appeared to some kind of fossil laden rock. All of the fossils seemed to be marine life. I called a buddy of mine in the biology department and asked him if he had seen what the press would soon dub the Miskatonic Monolith. He didn't have any classes today and was on his way. Campus security roped off the object and stood watch. I pulled myself away from the monolith and headed off to class. I collected the take home tests from the day before and asked each of my classes if they had any ideas of how the monolith had been moved into place. Speculations ran from helicopter to aliens. I hadn't seen the security footage yet but I was stumped. I launched into the beginning of the next chapter and let them go without homework.\n\nThe rest of the day went smoothly. Just after lunch the Chancellor's secretary delivered a DVD of the security footage from the night before. Written on the disk was a time stamp. I took the time to view the footage and stared in disbelief at the timing required to pull off this stunt. Two seconds, that was all the time the culprit had between the motions of two of the cameras. Two of the four cameras covering that area were fixed while the other two panned the area in six second intervals. The cameras weren't synced so there was that elusive two second gap when the area wasn't being covered. How the hell did they pull it off? A multi ton obelisk of marine stone moved silently and so quickly was just beyond belief. Yet there was the video footage as proof. If they were engineering students that pulled this off they deserved a freaking award.\n\nI went to lunch and ran into Carol. She appeared in a good mood. When I asked she told me she was part of the team investigating the monolith. I told her I was going to help decipher the characters etched into its surface. She smiled and told me her part was tracking the stellar references involved in the shafts cut into the object. They appeared to allow the viewing of stellar bodies at certain times of the year. It really was a brilliant construction. It was definitely going to take time to decipher it and that thrilled her to no end.\n\n\"How are you doing,\" Carol asked with a poorly disguised expression of disappointment on her lovely features.\n\n\"Ask me Carol,\" I replied as soothingly as I could manage.\n\n\"Are you dating someone now,\" she asked and tensed awaiting the worst case scenario.\n\n\"No, but I am intimate with someone else,\" I said laying my hand over hers.\n\n\"So it's just sex then,\" she said and I nodded. \"Oh thank goodness, if it's just a fuck buddy I am relieved.\"\n\n\"You are,\" I said confused. \"I thought you'd be crushed.\"\n\n\"Nah,\" she said smiling. \"I understand any woman wanting to be with you.\" She leaned in close now. \"You are an amazing lover. I'd be insane to think you'd be monogamous. You've been working on your doctorate for so long. I guess I just opened the flood gates so to speak. I feel kind of proud actually. I was your first after goodness knows how long.\"\n\n\"Nine months,\" I said and she giggled in delight. \"Are you busy tonight? I'd like to come by if that's okay. I picked up some new things from the mall. Besides, I owe you a blowjob.\"\n\n\"Since you put it that way,\" I said smiling. \"How could I possibly say no?\"\n\nCarol finished her lunch beaming like a kid just before Christmas. She left with a bounce in her step and whatever guilt I felt about fucking Felicia fell away. I refilled my soda and headed back to the classroom. I was looking forward to another round of love play with Carol. The afternoon classes went well and passed off some of the tests I collected to my teaching assistant for her to look over. After my last class of the day I called the Widow Squire. She agreed to meet with me in an hour. I had just hung up when a small crowd of my students met me in the hall outside my classroom.\n\n\"Mr. Donahue,\" one of them greeted me. \"We want to know if we can volunteer.\"\n\n\"Volunteer,\" I said and they all nodded. \"Oh you mean taking rubbings off the monolith.\"\n\n\"Yes sir,\" another said smiling from ear to ear. \"We'd love to be a part of deciphering the characters.\"\n\n\"Hey Donahue,\" a voice called out. \n\n\"Hey Ian, what's up?\" I called out to one of my friends in the engineering department.\n\n\"We are setting up a 3D scan of the obelisk,\" he said. \"How about I send you a copy when we finish and you can use that to help decipher this bitch?\"\n\n\"That would be amazing,\" I said. \"Can you send one to Carol in Astrophysics? They are looking at star alignments on this thing.\"\n\n\"For you anything,\" he replied. \"Why don't you guys lend me a hand setting up the scanner?\"\n\nThe crowd followed Ian like he was the Pied Piper. I headed out and drove to the Widow Squire's place. As I drove I thought out the questions I would ask her. It was a long drive to the outskirts of the city. I had plenty of time to collect my thoughts. The house was located near the top of a hill that was perched next to the ocean. The house next to it appeared to be under some kind of renovation. I pulled up into her driveway and saw all the wind chimes that hung everywhere. I wondered what it must sound like during a wind storm. The sound of that many competing noises must be maddening. The door opened and the Widow stepped out and I was shocked at how young she was. I had expected a woman in her seventies but she was closer to my mom's age.\n\nThe Widow was tall and thin with noticeable hips and a rounded backside that hinted at Latin bloodlines. Her features were a delicate blend of Columbian and French decent with a generous figure and long dark hair. Her skin was nut brown and seeing her garden adjacent to the house I guessed she spent a lot of time outside tending it. The simple dark dress she wore stopped about mid-thigh and showed off her legs quite nicely. I saw the appeal Squiggles had for her instantly.\n\n\"Thank you for speaking with me,\" I said and she just smiled and offered me a cup of coffee.\n\nWe stepped into her home and I felt my mouth go slack in surprise. The interior of the house looked more like a museum than a living space. I began to count the different cultures represented and came up with nine. She smiled quite proudly and told me that she had originally been Squiggles' assistant until they fell in love. She had travelled with him all over the world helping him collect his treasures. \n\n\"How the hell had he managed to smuggle these into the country?\" I blurted out without thinking. \n\n\"They aren't stolen, they are simply on loan from the university,\" she said in explanation. \"Squiggles was a leading archaeologist for Miskatonic for decades. He had an agreement that allowed him to study certain pieces until his death. All of these are going to be returned to the college in the next week or so. I am writing his biography which includes his notes and observations about the key items in his collection. It is the least I could do for him.\"\n\n\"Do you know if he is in any possession of any scrolls?\" I asked and she smiled.\n\n\"Finally,\" she said with a look of relief. \"That bothered him for so long. He confided in me and one other about the theft. So you stumbled on it didn't you? I can see it in your eyes. Tell me about it, please.\"\n\n\"I found a map or what I believe is a map,\" I said saying as little as I could.\n\n\"You are a clever young man,\" she said. \"He found it by accident. He translated the inscriptions and made both of the compounds. We enjoyed an amazing sex life for years. That was until he got sick. He refused to take the elixir that could have saved his life. He begged me to hide it and when I needed it to take it and live a long life, a very long life. He wouldn't take it himself. I think he wanted to die. He was so tired at the end.\"\n\n\"What was Loveless' part in all of this?\" I asked.\n\n\"Isaac was his oldest and dearest friend. As he was dying he finally confided in Isaac about the scroll and what was on it. He left off the fact that there were two scrolls, two parts of the map. He always meant to go after the treasure but was afraid of the dire warnings on the sister scroll. It warned of terrible guardians watching over the treasure. It described undying horrors that were older than mankind itself. He never had the courage to face it and put us both in danger.\"\n\n\"Of course you'd both go after it,\" I said as she poured two cups of coffee. \n\n\"Sugar,\" she asked and I nodded. \"What you don't know is that the librarian burned the sister scroll.\" She dropped two cubes of sugar into her coffee and stirred it. \"She destroyed the second half of the map unknowingly. She didn't learn about the map until it was too late.\" She sipped her coffee and smiled at me.\n\n\"So the treasure is lost,\" I said watching the Widow's cheek suddenly flush with color. \"Are you okay?\"\n\n\"MMMMM, I'm fine,\" she purred. \"I just love coffee don't you?\"\n\n\"Yeah...\" I said and saw the light layer of sweat on her skin. \"You dosed yourself?\"\n\n\"Uh huh,\" she moaned as the aphrodisiac took over. \"Fuck me and I will tell you where the treasure map is.\"\n\nShe leaned over and wiped my cheek with the perspiration from the palm of her hand. The effect was immediate and overpowering. The Widow stood up and lifted up her dress. I could see her neatly trimmed sex and how wet she was. I licked my lips and tried to fight off the effects of the drug and failed. I rose to my feet, snatched her up and placed her ass on the edge of the table. I knelt down and began eating her out. I unzipped my jeans as my tongue worked on her labia and clit. I freed my cock and found it painfully hard.\n\n\"He improved upon the formula,\" she gasped as my tongue pleasured her. \"He made it a lot more potent. Do you like?\"\n\nI stood up and impaled the sneaky bitch in one full thrust of my hips. She cried out with my cock buried inside of her. I began thrusting and she wrapped her legs around me. She tore her dress open and bared her breasts to me. I leaned down and bit her hardened nipples. She arched her back and told me how long it had been since a cock had been inside of her. This was her price for the treasure. I earned it and then some. I mauled her tits as I hammered her soaked cunt. \n\n\"Take that and that you treacherous slut,\" I growled as our bodies slammed together.\n\n\"Fuck me... oh god yes... slam that fat cock of yours into my poor little pussy,\" she begged. \"I need it so bad!\"\n\nI hammered her harder and harder as she tugged my shirt off of me. I felt her nails rake my back as we fucked. This could never be confused with making love. She cried out as she came and I lifted her up and off the table and began fucking her standing up. I lifted and dropped her onto my erection. Her cries echoed over the entire house. Suddenly the back door was kicked in and a familiar figure stood there with her gun drawn. What the hell was Felicity doing here? She lowered her weapon as I held the Widow impaled on my cock.\n\n\"Professor... what the hell is going on?\"\n\n\"Detective... what are you doing here?\"\n\n\"Oh Detective,\" the Widow said and Felicity looked over at the other woman. When she did so the older woman blew a cloud of powder into her face and I watched the drug take effect. \"Enjoy yourself sweetie...\"\n\n\"What the hell was that? Oh god... what is going on?\"\n\n\"Bliss girlie,\" the Widow giggled. \"Don't fight it; there is enough cock for both of us.\"\n\n\"NNNNNN god I am so fucking wet,\" Felicia moaned.\n\n\"Drop your slacks and bend over the kitchen table,\" the Widow suggested. \"That's a good girl. Come on lover fuck her... I want to see your cock buried inside of her.\"\n\nI set the widow down and eased out of her. By this time Felicia was bare assed and bent over the table. I stepped up behind her and slid my cock into her. She just lowered her head and grabbed the edges of the table as I began thrusting. Her grunts were so damn feral and drove me to fuck her harder and faster. The Widow was disrobing and bending over the table next to Felicia. She watched the detective's fuck faces and giggled again.\n\n\"She is really getting into this,\" the MILF growled. \"Fuck her harder... MMMMM that's it...\"\n\nThe Widow leaned over and kissed Felicia. I watched stunned as their kiss deepened and soon their tongues were dueling. Felicia cried out breaking the kiss as she climaxed. I pulled out and slid back into the older woman. I did this for the next hour going back and forth between the two of them. There were a dozen orgasms between the two of them. I came like three times and was sitting in one of the chairs at the end of it all. The widow lay on her table panting and gasping while Felicia sat in my lap clinging to me like a long lost lover. She had managed at some point to call in and tell them she was okay and all was well.\n\n\"What was that?\" Felicia asked as she pressed her tits against my chest.\n\n\"Something from ancient Egypt, it is a kind of aphrodisiac,\" I explained.\n\n\"It works,\" she moaned. \"What's in it?\"\n\n\"Common plants of the region,\" I told her and she smiled. \"...Nothing illegal.\"\n\n\"Good, I want to try that again.\"\n\nThe widow threw on an apron and walked half naked out to her front porch. She returned with a piece of round crystal in her grasp. She gave it to me and told me I had more than earned my reward. She staggered out of view and returned with a piece of paper in her grasp.\n\n\"That's Squiggles' formula for the powder,\" she said handing it to me.\n\nI read it over and memorized it. There were small subtle changes to the amounts of the components. He had tweaked it just a bit but man what a difference! We all got dressed and I looked at the flat disk of crystal. Etched onto its surface was the complete map. Of course he had access to both scrolls so he put both halves of the map together. Where better to hide it than in plain sight. I was about to leave when I stopped and asked the last annoying question of the Widow.\n\n\"Why was he called Squiggles?\"\n\n\"I thought you knew. Please follow me and I'll show you.\"\n\nThe three of us went into the basement which had been converted into an art studio. Decorating the walls were a dozen or so paintings that depicted dig sites from all over the world. Some of the landscapes were easily identified while three were utterly alien. I asked her where those locations were and she smiled. The Widow walked over to the steel safe located in one corner and opened it. She took out a leather bound book and walked back over to Felicia and me.\n\n\"If you promise to visit me a few times I will give this to you,\" she said smiling wickedly.\n\n\"Um...\"\n\n\"Of course he will,\" Felicia said winking at me. \"He had a great time today, didn't you Professor?\"\n\n\"Ummm...\"\n\n\"I know he did,\" the Widow added. \"My poor pussy is so damn sore.\"\n\n\"Mine too,\" Felicia whimpered. \"I know he'd want to earn this other reward, wouldn't you?\"\n\n\"UMMMMMM... sure...\" I said and they both hugged me.\n\nThe book was Squiggles' personal journal. It was a listing and description of each and every dig that he ever went on. It was a treasure trove of information. I kissed the Widow on her cheek and she told me to drop by anytime. I walked out with Felicia and she was still a little shaky. I asked her if she were okay and she just nodded. A brief brush of her lips on mine and she was heading for her police cruiser. I never saw any of this happening. I had two treasures in my possession and headed on home. I needed a shower and a bite to eat before Carol showed up. Today was definitely going to be a busy day. I was smiling and couldn't help it. Nine months of nothing and now I had more ladies in my life than I ever dreamed of.\n\nAll I had to do was crack the code of symbols on the monolith and I had my doctorate. How hard could it be? I parked out front of my apartment and had about an hour before Carol would arrive. I went inside and started a shower so I could wash off the scent of two women. I couldn't help but giggle when I thought of me, the history geek having two women at the same time. I was singing in the shower as I thought about having a third gal coming over for sex. I could always grade tests afterwards that would be the perfect thing to take my mind off of them. I dried off and noticed in the mirror that I had lost some more weight. I had very little fat left on my body now. I looked really good and I felt even better. I got dressed and started fixing dinner. I was well into cooking when the doorbell rang. I lowered the heat on the dishes and walked to the front door. I opened it and stared at Carol and how she was dressed. I looked her over and the first thing I thought of was a Japanese school girl. Her hair was done in two pigtails, she was wearing round framed glasses and she had colored contact lenses in her eyes. One of her eyes was green while the other was blue. I stepped back and let her in.\n\n\"SENPAI,\" she cried and flung herself into my arms. \"I missed you Senpai!\"\n\n\"I missed you too,\" I said as she kissed me.\n\n\"Ooh, I smell food. Is Senpai cooking for me? Naughty Senpai, I should be cooking for you.\"\n\nShe started to race into the kitchen when she tripped over nothing and ended up with her ass high in the air where I could see her striped panties. She looked over her shoulder and giggled and she tried and failed to cover her ass with the short skirt she was wearing. I shook my head and smiled. I walked over and helped her to her feet. Somehow as she stood up her top popped open revealing quite a bit of cleavage. Three buttons lay at her feet and she giggled as I stared at her tits. Carol made her way to the kitchen and looked over what I was cooking.\n\n\"How can I help Senpai?\" Carol asked.\n\n\"I could use a cold beer,\" I said and she smiled as she walked over to the fridge.\n\n\"Where is the beer Senpai,\" she asked as she was bent over with her head in the fridge revealing her ass to me. \"Oh... here it is.\"\n\nI walked over and knelt down and rubbed her ass cheeks. Carol squealed in delight. I tugged down her panties and she never lifted a finger to stop me. I made a disapproving sound as she stepped out of her underwear.",
        "\"Your pussy is all wet Carol-chan,\" I said as I reprimanded her. \"Look at this...\" I said easing two fingers inside her pussy. \"You are absolutely soaked.\"\n\n\"I can't help it,\" she whimpered as she pushed her ass backwards forcing my fingers deeper into her. \"I get all excited when I think about being alone with you.\"\n\n\"I should spank you,\" I said and I caught a glimpse of the hunger in her eyes.\n\n\"If you think I deserve it,\" she purred as I took a slick finger and touched her puckered asshole. \"No Senpai that is my other hole... nnnnnn your finger is going into my ass... feels so strange...\"\n\nAnd yet she never moved a muscle. I began to finger both her holes and Carol began moaning. I had to give it to her, she was really in character tonight. I watched my index finger bury itself in her ass and thought about violating Carol in ways I never dreamt of before. I pulled my fingers free and stood up.\n\n\"Food is going to burn,\" I said. \"Sit down so I am no longer distracted you naughty girl you.\"\n\n\"Yes Senpai,\" she said smiling.\n\nI washed my hands and managed to finish our meal and serve it. Carol asked if she could use the bathroom and I nodded. She took her purse with her and I watched her walk away. I sat and waited for her to get back. Carol returned after five minutes or so. I got up as she sat down and went to the bathroom to see what had taken her so damn long. There were no clues except a bit of translucent substance in the sink. I caught it with my index finger and rubbed the substance between thumb and finger. I had an inkling what the little slut was up to. I returned to the kitchen and sat back down. We ate in relative silence. Carol would look at me with an expression of adoration. She began to say something but stopped a few times. I made a face and called her out.\n\n\"What is it?\" I asked setting my fork down.\n\n\"You do like me,\" she said smiling brilliantly.\n\n\"Of course I do,\" I replied.\n\n\"No, I mean you told your friend to send me the 3D scans of the monolith. You mentioned me by name!\"\n\n\"Oh, of course I did,\" I told her and whatever control she had disappeared and so did she.\n\nCarol left her seat and crawled underneath the kitchen table. I felt her hands on my zipper. She unzipped me and took out my cock. She muttered something I couldn't quite hear before she began licking and sucking. I set my utensils down and leaned back in my chair. I looked down and saw a very happy Carol giving me head. She was worshipping it and taking her time licking ever last inch of my erection. I gasped when she opened her mouth and took me between her lips. Carol closed her eyes and went to work.\n\n\"Oh shit... damn girl that feels amazing,\" I told her as she took half of me into her mouth.\n\nI was panting in no time and she never let up. Carol was on a mission to make me cum. I urged her on with words of praise with the occasional curse when she lightly raked my cock with her teeth. The longer she was down there the more of my dick that passed her lips. Before I knew it the cock hungry slut was deep throating me. I never saw that happening. I praised her as my cock swelled even larger.\n\n\"I am so fucking close,\" I warned her but she never slowed. \"Oh god I am going to cum!\"\n\nA few seconds later my load was hitting the back of her throat. She swallowed with some difficulty but she managed to take my entire offering. She lifted her head and looked me in the eye as she licked her lips. I moved my chair back and Carol pounced. She was in my lap and looking me in the eye. She kissed me as she rocked her hips against me. My cock ended up sliding between her legs just below her pussy. As we kissed she unbuttoned her blouse and tossed it to the floor. She freed her tits and placed my hands on them.\n\n\"Make love to my tits Master,\" she growled.\n\n\"You swallowed my load,\" I gasped as she continued to tease me. \"You deep throated me too...\"\n\n\"I didn't want to disappoint you Master,\" Carol moaned. \"Hold on a moment.\" She lifted up and took me in hand. \"Master's cock in my tight little pussy...\" She said as she slowly dropped down. \"It's going inside of me... so big... how does my pussy feel Master?\"\n\n\"NNNNNN so damn tight,\" I said as my hands cupped her ass cheeks. I rubbed them and my finger brushed against something. \"What is that?\"\n\n\"Oh Master spoiled my surprise,\" Carol moaned as she began riding me. \"I want to make you very happy any way I can.\"\n\n\"Only if you want this,\" I said as I grabbed her ass cheeks and pulled them apart.\n\n\"Oh I want this... I want this so bad I can taste it. Please let me have this Master!\"\n\nI kissed her and we sat there for a long moment. I sat up and placed Carol's ass on the edge of the kitchen table. I looked her in the eye and she nodded. I moved the plates out of the way so she could lay back. I began thrusting into her and she cried out. I lifted her legs up and got a good look at the toy that was securely inserted into her ass. I moved faster now and Carol begged me for more. She begged me to fill her pussy with cum. We were both getting close to climaxing as I hammered her cunt hard and fast. Carol squeezed her pussy around me trying to push me over the edge. We were both shaking as I put on a burst of speed and shoved us both over the edge. I cried out and I didn't realize that she had come at the exact same time. Her sound blended with mine to form a single note. \n\n\"Damn girl,\" I said panting.\n\n\"We came at the time,\" she said proudly. \"I felt you shoot in me and I lost it.\"\n\n\"We did good,\" I replied and she nodded.\n\nI pulled out of her and she jumped to lick me clean. I stood there as Carol licked and sucked every sign of juices on my cock. I whimpered as she did this. She just smiled and finished her task. I went to the bathroom to splash some water on my face while Carol used the toilet. I caught her image in the mirror and she was smiling. She seemed quite proud of her performance.\n\n\"Is Master pleased?\"\n\n\"I am indeed,\" I said. \"But we aren't done yet.\"\n\n\"No we are not,\" she agreed. \"Master has another hole to use.\"\n\n\"Are you sure about this? It might be too big for you.\"\n\n\"I need this,\" she said. \"I need to give you my anal cherry Master.\"\n\nI nodded and led her to the bedroom for round two. I decided to make an executive decision. I sat Carol on the side of the bed and took out the pouch with the aphrodisiac and the tube. I dipped one end into the powder. She asked what it was and I told her. Carol never hesitated and I blew the drug into her face. She blinked a few times and I watched as it took effect. She ran her hands over body and was shaking like a leaf before too long. I told her to rub her body against mine. Carol stood up and slithered up against me like some sensuous reptile. She pressed her tits against my chest, my back and into my hands. I felt the rush of the contact and shoved her onto her back. I buried my face between her legs and began eating her out.\n\n\"Eat me out you son of a bitch,\" she roared. \"My body is on fire.\"\n\nI buried my tongue between her pussy lips and Carol came a second time. I gave the toy in her ass a little twist while she climaxed and that sent her into orbit. The sound that she made was brand new and I wanted her to make it again. I suckled her clit and that forced Carol to clamp a hand over her mouth. I hit her weak spots over and over again. She begged me to stop and I relented. She lay on the bed shaking and gasping for breath. I rolled her onto her belly and began kissing my way down from her neck to her ass. As I kissed her spine she let out little cooing noises. I gripped the toy and slowly pulled it free. Carol let out that new sound only much softer than the first time. She began panting again but this time in anticipation. I knelt behind her and pulled Carol's ass high in the air.\n\n\"If it starts to be too much tell me, that's an order,\" I told her.\n\n\"Yes Master,\" she replied dreamily.\n\nI placed the head of my cock against her asshole and pushed slowly. The toy made all the difference. The head popped in and Carol asked for a short break. A few minutes later my cock was buried in her back door. She was muttering something about Master's cock in her ass over and over again. I began moving and Carol let out her new noise but in an ever increasing volume. I fucked her ass nice and slow but she didn't want this.\n\n\"Master doesn't like my ass,\" she said as she looked over her shoulder. \n\n\"Tell me,\" I growled as I pulled out slowly.\n\n\"Fuck my ass like you mean it,\" she begged. \"Oh dear god...\" she cried out when I slammed my cock home. \"More... fuck my ass more...\"\n\nI began to move faster and harder. Carol buried her face in one of my pillows but never told me to stop. I fucked her ass as hard as I had her pussy. She was crying into the pillow now but still she never said stop. My cock swelled up as I got close but this time that's all it took to push Carol over the edge. I stopped and waited for her to catch her breath. She was red faced and shaking. I asked her if I should continue and she nodded. I moved slowly savoring the feel her ass wrapped around me. I was grunting as I thrust into her.\n\n\"So damn tight... feels so fucking good...\"\n\n\"Fuck me Master... I want to feel you shoot inside of me... please Master...\"\n\nI set up a nice rhythm and she was moving her hips backward now. I warned her I was so close and she just kept shoving her body against mine. I stopped moving at the end and let Carol be the one to make me cum. She thrust harder but slower now. I was shaking and she knew how close I was. I watched my cock disappear inside of her and a few seconds later I lost it. Carol ground her ass against me and fell silent as I climaxed. I knelt there as I caught my breath.\n\n\"That was so intense,\" she said. \"I could feel your load shoot into my ass. I came with your cock in my butt.\"\n\n\"I know...\" I whimpered still half hard in her ass. \"That felt amazing... you made me cum...\"\n\n\"I did, didn't I,\" she said smiling from ear to ear. \"Master is very kind.\"\n\nI was about to pull out of her when she began moving again. She milked me one more time before we ended the night. We lay there in a heap on my bed. It was around nine o'clock and I asked Carol about the roleplaying. She told me she was serious about being my little cock slot as she put it. Her words eerily mirrored my mother's own. She would be there whenever I needed it. She would do whatever I asked her to do eagerly and willingly. I told her to start a shower so I could wash the sweat and funk off. Carol hopped to her feet and raced to the bathroom. I got up and walked in to find her leaning in and checking the water temperature. The sight of that round ass undefended got me all hot and bothered. Carol finally went home around ten that night. Granted I had to help her walk to her car. She was all smiles as she drove off. I returned inside and began grading papers. I was humming as I checked my student's work. \n\nI finished a few hours later and packed them away into my briefcase. I still had hours until dawn. I was still feeling restless so I got dressed and headed out to the campus. The engineering department was still doing scans of the monolith. I walked over to Ivan and shook hands with the Russian immigrant. While his English was spot on he still had a noticeable accent. I asked him how things were going and he looked frustrated. He walked me around the monolith and while it appeared to be perfectly square it wasn't. There were subtle eccentric angles involved. Every time they tried to scan the infernal thing they kept getting gaps in the scan matrix. He walked me over to the laptop they were sending the data to and he had it rotate the most recent scan and I saw what he was talking about. The graphic was quite incomplete in several places. He was able to capture the placement of the characters etched onto the surface of the monolith.\n\nThere were ten previous scans worth of data on the laptop. I ran the most current and looked at the designs. Curious, I opened the previous scan and looked at that one. Wait, that wasn't possible the characters were different. I spent the next half hour and looked at all of the scans and eight of them were different. I burned a DVD and grabbed Ivan. I took him to the imaging lab in the History building. I placed the DVD into one of the towers and fired it up. I was able to run all eight displays at the same time. It took a bit to line them up but once I did it all became frighteningly clear. \n\n\"No fucking way,\" Ivan cursed staring at what should be impossible.\n\n\"The data doesn't lie,\" I told him. \"This is some sort of fifth dimensional object.\"\n\n\"Or this was crafted using Non-Euclidean Geometry,\" he said. \"There appears to be thirty two symbols. Do you think you can translate them?\"\n\n\"I won't know until I get a real good look at them,\" I admitted. \"So much for my doctorate...\"\n\n\"Do you want to call him or should I?\"\n\n\"You mean the Chancellor?\" I asked and he nodded. \"I'll do it.\"\n\nI sat down and made the call. I woke him up but he wasn't angry when I told him what we had discovered. Since the Chancellor had housing on campus it didn't take him long to dress and walk over. We waited patiently until he strode into the lab and looked at the display. He sat there silent as the pattern became obviously clear. He paused the display and zoomed in on the symbols cut into its surface. \n\n\"What do you make of that?\" he asked me.\n\n\"It looks Mayan to me,\" I said. \"Not my strong suit but where there's a will there's a way.\"\n\n\"I will sign your doctorate later today and yours Ivan,\" the Chancellor said.\n\n\"No,\" Ivan said. \"I didn't make this discovery. I was blind and frustrated by the scans.\"\n\n\"Don't be ridiculous my boy,\" the older man said in a soothing tone. \"Who would ever have dreamt that the monolith possessed such properties? If it had been me I would have assumed either a software or hardware issue. Nice job Donohue, you two keep this quiet. If you need anything just ask.\"\n\n\"Um actually, I do need a few extra hands on this. I want to bring in an astrophysicist and scans focusing on these angled channels cut into the monolith. Do they change too? If they do what are they pointed at.\"\n\n\"Just pick someone and keep them quiet. I don't want this let out until I make a few phone calls of my own.\"\n\n\"Yes sir,\" Ivan and I said in unison.\n\n\"Let's get to work,\" Ivan said smiling brilliantly. \"I love a challenge.\"\n\nI called Carol and told her I needed her. She misinterpreted that little message and asked me what she should wear. I told her it involved the monolith and she was on her way. I chuckled and told Ivan that Carol was coming in to help. He made a face and said something about hidden beauty. He had no idea. I stared at the display while Ivan returned to the monolith and told his crew about the change of plans. I altered the angle of the view and when seen from above the changes were more pronounced. How the hell was this thing made? Who made it? I shuddered as I took screen shots of the symbols and began work translating them.\n\nI was printing off the screen shots when Carol appeared. She was yawning but had a large to go mug in her hand. I laid out the printouts to see if there was a pattern in the designs. Carol looked at the display and her mouth fell open. She made a comment and I told her to speak with Ivan when it came to fifth dimensional objects or Non-Euclidean Geometry. I was focusing on the cryptic symbols. Carol looked over my shoulder and I felt her breasts pressing against my back.\n\n\"You are evil,\" I whispered.\n\n\"Yep, does Master want a blowjob?\"\n\n\"Damn it woman, I am trying to focus on this and not that delicious throat of yours.\"\n\n\"My ass is still sore,\" she purred as she grabbed my ass. \"But I don't mind at all. I love the way your cock feels in any of my holes.\"\n\nShe left with a giggle and disappeared out the darkened doorway. I shook my head and placed the symbols in what appeared to be the order I could discern. I looked up at the display of the rotating images and thought I saw something even more disturbing. I grabbed the printouts and walked as close to the wall where the projector was pointed and watched. I focused my attention on the upper right hand corner. I paused the image and placed the matching symbol on the surface in front of me. I started it again and placed the next image down and so on until there were eight symbols placed on top of the other. I started it again and that's when my hunch was confirmed. The next symbol should have been the first image I set down but it wasn't. \n\n\"What the holy fuck is going on?\" I said and let the rotation continue slowly.\n\nAll thirty two of the images appeared in the upper right hand corner. I noted their order and then checked out the next placement of the symbols, the lower left. Again all thirty two symbols appeared but in a completely different order. I numbered the symbols and played out the positions of the symbols and watched the image from a top down view. There were eight symbols visible at any given time but the symbols never repeated on any given view. I had discovered a pattern but what the hell did it mean? I would leave that to the math experts. I turned off the display since it was beginning to weird me the fuck out. I took the printouts to my office and taped them to my walls. I stared at the symbols and took out my reference guides. While a few of them appeared to be Mayan they weren't. I picked out one of the symbols randomly and took out a pad of paper and began drawing it over and over again. I was trying to get a feel for that one character.\n\n\"This could just be made up,\" I said trying to reasoning it out. \"No, there is a definite logic behind you. There is something faintly familiar about you too. Where have I seen you before?\"\n\n\"Talking to yourself,\" Carol said and plopped down next to me.\n\n\"Yeah,\" I admitted. \"How are you progressing?\"\n\n\"Going from strange to downright scary,\" she said. \"The shafts don't make any logical sense.\" She launched into a few of the experiments and the strange results. \"I looked into one of the shafts to see what stars were visible. The problem is that the stars were all wrong. I thought that maybe someone had installed a lens of some sort to distort the view by bending the incoming light. I was wrong. I stuck an extendable pole into the shaft but it came out where it shouldn't have. Here, we took a photo with my phone.\"\n\nI took her phone and looked at the image. There was Carol poking the monolith with the pole. However, the other end of pole appeared to come out at a sixty degree angle away from where it should. It looked like the photo had been altered digitally. I knew it hadn't been tampered with. Was the space inside warped in some fashion? I asked Carol and she nodded.\n\n\"That was my thought actually,\" she admitted. \"Each shaft has a completely different degree of warping of space. None of them act normally. What have you found out?\"\n\nI showed her the pattern of the symbols and she pinched the bridge of her nose and shook her head. It looks so damn normal until you start taking measurements. It was like the damned thing was designed to drive someone bat shit crazy. I decided to take a break before classes started. Carol followed me out to the track and we walked around it. I needed to clear my head and so did she. I asked her what her plans were after she graduated. She fell silent and thoughtful. She asked me what my plans were and I told her I was thinking about taking a break and doing some treasure hunting.\n\n\"Do you have a treasure map?\" Carol asked and I nodded.\n\n\"Yeah, but I haven't looked at it yet,\" I admitted. \"I just got it today.\"\n\n\"Is this an archaeological dig or an actual treasure hunt?\"\n\n\"I'm not sure until I do some research I guess,\" I said and she smiled.\n\n\"Need any help,\" she offered. \"I would love helping you out if I could.\"",
        "We changed course and we walked over to the staff parking lot. I opened my trunk and dug out my two treasures. I handed her the crystal and she looked at the map etched on the surface of the disk. She held it up to the light and made a face. She shook her head and handed it back to me. We returned to the imaging lab where Carol asked for the crystal back. She turned the projector on but didn't fire up the tower. She held the crystal in front of the projector and the design appeared upon the wall. We both stared at the layout and I was perplexed. Carol told me to hold the crystal as she looked closer at the design. I took ahold of it as she walked closer to the wall. She was pointing and commenting to herself as something became clear to her.\n\n\"It's a map alright,\" she said. \"These parts here are the celestial aspects of the map. These must be terrestrial markers. This map must be really old.\"\n\n\"Why do you say that?\" I asked and she pointed back at the star patterns. \n\n\"These patterns are all wrong for current star positions. I am guessing but this thing has to be at least twenty thousand years old. The universe is expanding and these clusters are too close together. I'd have to do some measurements to be sure but I don't think I am too far off. Where did you get this?\"\n\n\"A family member of a former student of the university, he died a few months ago. I was doing research and his name came up.\" I said holding up the notebook now. \"This is his log book of the digs he's been on. I am hoping to find some clues in these pages.\"\n\nI pocketed the crystal and switched off the projector. I checked my watch and saw that dawn was fast approaching. We headed back out and found that the engineering department was packing it in for the day. Ivan was undeterred and was planning on forming a kind of think tank to examine our results and see what we were truly looking at. He said he would speak with Ian and they would work something out. I called the Chancellor and kept him in the loop. He told us to keep the group as small as possible for now. We agreed to get together early afternoon and create a roster of candidates to choose the best to approach. Carol returned to her room so she could get some sleep so she could think straight. I was fine since apparently I didn't need to sleep anymore. I walked into my classroom where someone else had set up to teach my class. He informed me the Chancellor had asked him to cover for me since I was working on a priority project. I shrugged and handed him the tests I had graded.\n\nI had six hours to get something accomplished. I took Squiggles' journal and sat down to read it. I went to the student lounge and found a couch to lie on so I could be comfortable while I digested thirty years of a man's life. I read through each and every dig that he had been on. Each site was diligently documented with gorgeously drawn maps and notations of where artifacts had been discovered. He also listed the objects and any notes of interest about that item. He also made notes of any unusual items, marking or events that he thought significant. \n\nI discovered later that the last pages of the journal were dedicated to those strange items. He began to draw conclusions about those unusual items that were chilling to read. It took a lot not to skip to the end and read all of his thoughts on the freakish items he had collected. I reached the dig where he and his wife were married. The captain of the ship did performed the ceremony. According to his notes everything went downhill from there. \n\nI don't know what was more disturbing the fact that the dig was sponsored by Miskatonic University or that it was located on a rarely visited portion of Antarctica. If the university had sent an archaeological dig to the South Pole why hadn't I ever heard about it? That is like ground breaking and worthy of a ton of publicity. Had something happened? I delved eagerly into the events that happened twenty years ago. \n\nI closed the journal and fought the urge to hurl it at the nearest wall. I took a deep breath and opened the end of the book. I paged backwards to the Antarctic dig and the list of items and events. Now I understood his mindset. Now I knew why he hadn't sought out the scroll to heal his cancer. He wanted to die. He was deathly afraid of what he felt was going to happen. I needed to see her again and get her take on what I had read. I looked at the clock and figured I could drive out there, have a quick chat and be back before I had to sit down with Ivan, Ian and the others to create our roster. I closed the journal and headed out to the parking lot.\n\nOn the drive up I went over everything that I had read trying to reevaluate the conclusions the author had come to. If I was being honest with myself there was quite a bit of it that I simply didn't understand or even had a reference to. I made the turn onto the angled driveway up towards the widow's house. As I neared her home I noticed that the work crew of the last house was absent. Maybe they were working inside today. I pulled into her driveway and collected my thoughts even as I got out of my car. I walked towards the front door when I heard the sounds. I stopped short of ringing the bell. I walked along the front porch and peered through one of the windows. There was the widow in the middle of a fourway. She was on her belly with one guy in her pussy, one in her ass and a third down her throat.\n\n\"I guess they are working on her instead of that house,\" I said to myself.\n\nThey were all completely immersed in the moment. I couldn't see her face properly but her profile was quite erotic. The guy fucking her throat was really going to town on her. I saw the tears streaming down her face but she was obviously a willing participant. She probably dosed herself again. I watched as they took turns at her until they finished in a brilliant triple climax. One shot down her throat, another on her tits and the third deep in her ass. One guy shouted that they were late and I watched the mad dash for them to dress and race out the back door. The Widow walked to her bathroom and washed up. I gave her time to wash up before I rang the doorbell. She came to the door humming a little tune and opened it wearing only a loose fitting robe and a smile.\n\n\"Hello handsome, you just missed the party,\" she giggled.\n\n\"I got to watch the climax,\" I told her as I followed her inside.\n\n\"Did you, mmmmm I wish I would have seen you,\" she purred. \"That would have really got my juices flowing. So what do you think?\"\n\n\"You like sex a lot,\" I told her and she nodded.\n\n\"That's true, but that isn't what I was talking about. You've read his journal, what did you think? That is why you are here or are you wanting another go at me?\"\n\n\"I want to know about Antarctica,\" I said and the color drained from her face.\n\n\"It was horrible,\" she said. \"We lost a lot of good people on that dig. It was my sixth dig with him and my last. We returned to Arkham and got married, it was the ceremony for friends and family. We agreed to never speak of what happened and we both kept that promise until the day he died. He knew about the cancer and never took a single treatment to halt its spread. He wanted to die. Is that what you wanted to hear? The man I loved with all my heart wanted to die.\"\n\n\"I'm sorry,\" I said.\n\n\"I need to wash up; do you want to scrub my back?\" She said changing the topic. \"Those three were just a warm up for you and me. What do you say... you wanna fuck my holes and let me feel what a real man can do to me?\"\n\n\"I have a counter offer,\" I told her watching as her eyes widened in anticipation. \"I come over here bright and early Sunday morning and I don't leave until the sun goes down. But you abstain from any and all sexual activity until then.\"\n\n\"Wait a minute that's...\" she gasped as she counted on her fingers and held up her hand. \"You want me to go that long without sex?\"\n\n\"Yep,\" I replied. \"What do you say?\"\n\n\"Well if I am going without so do you,\" she replied. \"I'm not going to be the only one suffering.\"\n\n\"Fine,\" I growled. \"I agree. I have to go. I have a monolith to decipher.\"\n\n\"What monolith?\" She asked.\n\n\"It's been all over the news,\" I said and then launched into the basic facts about what had occurred so far.\n\n\"What do these characters look like?\"\n\nI grabbed a pen out of my pocket and picked up one of her magazines and drew the one symbol I had been practicing in my office. I handed her the magazine and she dropped it when she saw the sketch. Shaking she went to her bedroom and returned with a hard bound book. She handed me the book and I looked at it. My jaw fell open when I got a good look at it. I opened it to confirm my hunch. The Latin text cinched it this was one of the four known copies of the Mal Contentis left in existence. It wasn't quite in pristine condition but it was in good shape.\n\n\"Where the hell did you get this?\" I asked.\n\n\"It belonged to Squiggles,\" she said. \"Take it... it will help you translate those glyphs. I'll see you on Sunday.\"\n\nShe turned and left me holding the rare tome. I closed it and left the widow to her dark thoughts. I made it back to the University with enough time to grab a large coffee and a deeper regret that I had ever laid eyes on that goddamn monolith or the fucking scroll. I walked into the room and looked at the others around the table. They were some of the brightest students at Miskatonic University and I was confident that we would solve this enigma. I sat down between Ian and Carol. Since we were told to keep our numbers to a minimum we decided on choosing five people to add to the team. The roster of candidates was passed around and each department argued over several students that they felt were the best fit for the group. \n\nWhen my time came I looked at the top ten students with the highest GPA. Some of them I was familiar with while others I had not had the opportunity to teach or interact with. I asked about some of the students I hadn't worked with and one of the student counselors chosen by the Chancellor to aid us in our choice gave me a rundown of their strengths and weaknesses. One of the men I asked about caused a stir and Ivan told me that one was a mistake and shouldn't be on the list. When I asked why I learned he was the masked man that had broken into my apartment. He had pleaded guilty and was serving time for his crimes. I decided on a student that I was familiar with and chose him for our team. I left to take a break after the little oversight on the counselor's part. She had made up the list after all.\n\nI texted my mom to make sure she was okay. I was feeling vulnerable at that moment and wanted to make sure those I loved were safe. She called me back and I walked down the hall as we talked.\n\n\"Hey mom,\" I said answering her call. \"I just needed to know that you were okay.\"\n\n\"I'm fine sweetie,\" she replied. \"You sound upset, are you alright?\"\n\n\"I am going to stop by and spend some time if that is okay. I think I need a break.\"\n\n\"Sure honey, come on by... your dad just left on his annual fishing trip.\"\n\nCarol was standing there when I turned around. I told her I was heading home for a few hours. She gave me a hug and understood. She said she would explain and told me the others would understand. I kissed her cheek and left. I drove home and I was shaking like a leaf. I had hit my breaking point. I didn't know what to believe anymore. I had the Widow's face in my mind and how she looked when she handed me her copy of the Mal Contentis. It haunted me. I managed to get to my mom's house in one piece. I rang the bell and she met me at the door and I hugged her as the damn burst inside. She held me as I wept and the mix or fear and anger erupted from deep within. I don't know how long I stood there but she held me as long as I needed it.\n\n\"Thanks mom,\" I said at last and she just smiled and offered me something to drink.\n\n\"I am always here for you,\" she said. \n\nI followed her into the kitchen. She poured me a glass of juice and we sat down and talked. I didn't know what to tell her and what to leave out. How does a parent react when her child says, oh by the way I think I may have discovered a recipe for an immortality elixir? I sat there letting all the things bothering me and dismissed most of them as too toxic or farfetched to bring up to her. Mom just sat there sipping her coffee and waited patiently for me to speak. I started and stopped half a dozen times before I found the right words.\n\n\"There are some things going on that I don't know how to handle.\" I told her. \"Some of it is so far out there I don't have anyone to talk about it to.\"\n\n\"You know you can talk to me about anything,\" she said.\n\n\"Eh... I'm not sure I want to hurt you or expose you to the things that are bothering me.\" \n\n\"Is it illegal?\" She asked and I shook my head. \"Well that's a relief. Is it about us?\" I shook my head again and she looked relieved. \"Is it about school?\"\n\n\"Yes and no,\" I said. \"There is a project going on at school that has some pretty disturbing implications.\"\n\n\"Is this about that stone thingy that showed up on campus?\" She asked and I nodded. \"How the hell did they move something that big without someone seeing or hearing something?\"\n\n\"We are trying to figure it out,\" I assured her. \"But there are other things about the monolith that are even more upsetting. But we'll figure it out in the end.\"\n\n\"I know you will,\" she said. \"I thought you were angry at me after I visited you. I'm glad to find out that it's been school that has kept you away.\"\n\n\"I love you Mom,\" I said and she smiled. \"Maybe I can stop by for dinner?\"\n\n\"I'd like that.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "cosplay",
        "anal",
        "glasses",
        "striped panties",
        "roleplay",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/recipe-for-disaster-pt-03"
}