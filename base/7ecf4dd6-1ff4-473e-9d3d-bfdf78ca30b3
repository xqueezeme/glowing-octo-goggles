{
    "title": "The Virgin Artist Ch. 01",
    "pages": [
        "Note: All characters engaging in sexual activities are 18 years or older.\n\n*\n\nWinston Thomas, a lanky artist with lanky hair and lanky eyes and lanky everything, lean and sharp as a blade of grass, leans against the railing of the cruise-ship Allure and stares out at the ocean, trying his best to sketch the distant waves and not worry about being a member of that most ignominious of combinations: a college freshman and a virgin.\n\nIt almost works. Drawing water is no mean feat. It never stands still -- it's even more poorly behaved than small children and only slightly more favorable in comparison to wind because you can't really draw wind, you can only draw windy things. Like trees and waves and hair. A girl's hair, long and beautiful, caught in the jealous fingers of the wind. And with that fatal thought, Winston's back to worrying about being a virgin.\n\nIt always comes back to that. Girls have a sixth-sense about it. They can just tell. They just know and that's that. They like an experienced guy, an older guy. Now, Tiffany Rosens, she of blonde hair and blue eyes... he had a chance with her. That is, she mostly ignored him but a couple weeks back, she'd told him she really loved his artwork. The look she'd given him... Smoldering is the only word Winston can think to describe it. He understands looks. He has an eye for them, an artist's eye. Yeah, Tiffany Rosens -- he had a chance. Key word: had. But, instead of making business with her, his parents had forced him to go on this trip, a graduation gift that they just so happened to have invited themselves upon.\n\nCause, really, a Caribbean cruise? How trite.\n\nWinston pauses, erases one of the white-caps of a distant swell, and amends his thought: the cruise is alright. There are some parts he doesn't mind. He likes people watching, the range of people from fat to skinny, swarthy to pale, smooth to wrinkled, red-heads, gold-heads, raven-heads. He likes the gentle almost imperceptible rocking of the ship in its ocean cradle, the inescapability of the sun and the infinite expansion of the sea. And, of course, he likes the girls in their bikinis, all curves and slopes and\u2014\n\n\"Crrkkkkk!\"\n\nStartled, Winston looks around, nearly has a heart-attack when he almost drops his sketch-pad into the ocean, and then watches with some annoyance as a young girl, no more than eight or nine, bodily drags one of the lounge chairs up to the railing and proceeds to stand on it to look out over the edge.\n\n\"Oooh!\" she says followed shortly by the requisite \"Ah.\"\n\nOooh, she says again, and ... ah! Ooooh... ah! Like the vocal beat of a techno song. It irks Winston. Unfairly, of course, definitely unfairly. The girl's still innocent, still able to appreciate the primal beauty in things. Winston had been like that once. And then he'd hit puberty. With a sigh, Winston turns back to his sketch pad -- but then, from the corner of his eye -- he sees the girl tilt too far, overbalance, and fall.\n\nWinston reacts instantly. His arm shoots out and snaps hold of the girl's wrist. Small though she is, her weight jerks his arm, and he nearly lets go. But he doesn't.\n\nWinston's not exactly a football jock, and the girl's wrist, slick from the ocean air, begins to slip from his hold. \"Help!\" he shouts.\n\nTwo nearby sailors hear his cry and rush over. They grab the girl by her other arm, her clothing, and haul her up. In moments, she's back over and safe. Her mother, a pretty but mousy lady, rushes over and grabs her daughter and begins to cry. The little girl, not quite realizing her peril until now, bursts into tears as well.\n\nOne of the sailors turns to Winston. \"Wow, kid. What the hell happened?\"\n\n\"Dunno,\" says Winston. \"She slipped.\"\n\n\"And you caught her?\" The sailor offers his hand, which Winston awkwardly shakes. \"Timothy Owens. Pleased to meetcha, and how'd you manage it anyway? What are you, some kind of martial artist?\"\n\n\"Winston Thomas,\" says Winston. \"No -- just an artist.\" And saying it, Winston realizes that in his haste he dropped his sketch-pad.\n\n\"Quick of the eye then huh?\"\n\nBut Winston, not finding his sketchpad, has already exited the conversation. He leans slightly over the edge and spots his expensive moleskine, caught on a balcony several floors below. \"My\u2014\" but the wind grabs it and carries it off into the sea. \"Shit,\" says Winston.\n\nMeanwhile, the girl's mom displays a rapid switch of emotions that would have sent any nearby psychologists screaming for some lithium. She gets angry and scolds her daughter Madeline and shakes a finger at her and cries, and then turns to Winston with a melon-eater's grin and offers effusive praise, giving him a fierce hug that crushes his lanky frame. He can't help but notice her large breasts, rare as they are on a woman -- as Winston now notices -- of oriental descent. Or, at least, half oriental, by the slanting of her face, the dusky tone of her skin.\n\nDrawn by the commotion, a crowd begins to gather and Winston slips away. He prefers the cool silence, the distance, and always had. It's easier to observe, easier to capture motion, when you aren't a part of it. And anyway, he needed time to mourn the loss of his work.\n\nBut the story spreads -- thanks in no small part to Timothy Owens, who runs the cruise ship's little commodities shop (toilet paper, toothpaste, &amp; t-shirts) -- and eventually Winston is recognized the ship over. Men stop him and shake his hand, and women say things like, \"Bless his heart\" as he walks by. Frankly, it's annoying. He's even drawn aside by the celebrity attendee, the famous Hollywood actor Borden Saint, for a quick publicity shot in the cruise-ship's 'Gardens of Allure' a little indoor pseudo garden filled with gurgling fountains and bright flowers kept in a state of perpetual bloom through a healthy amount of sun and an unhealthy amount of chemical motivation. For some stupid reason, Borden gives him a little garland of flowers, which Winston tosses over the side, as easily abandoned as Borden's fake smile, once the photo shoot is over.\n\nThree days after saving the girl, three days after being greeted by complete strangers and people pointing him out as he's trying to relax by the pool or get a sandwich to eat, Winston finds himself sitting at the La Parisian outdoor caf\u00e9, drinking tea, and sketching on a small legal pad when his latest 'fan' sits down.\n\n\"Hi,\" she says.\n\n\"Hello,\" he says, without looking up. He's drawing a caricature of Borden, having great fun with giving him a chimera look: the tail of a scorpion, the wings of a bat, the snout of a hyena.\n\n\"Are you Winston?\"\n\nHe sighs inwardly, but then he looks up. His fan's a girl -- his age, for once -- and actually, well, actually kind of cute. She has a lively face, full of emotion and mystery. A small nose -- she's maybe a quarter Asian, three quarters Caucasian -- and just a hint of slant to her eyes, and olive skin. A bridge of freckles across her nose. A real weakness for him. He likes freckles. Long, almost unkempt dark hair, thick and silky, and a pencil stuck behind one ear. She seems both eager, yet cautious, and Winston doesn't quite know how to interpret her look.\n\n\"Yes,\" says Winston. \"That's me.\"\n\n\"Hi, I'm Luna. That was my sister you saved. I want to pay you back.\"\n\n\"Oh. Uh, thanks. I mean, that isn't necessary. Borden Saint gave me a hat of flowers and shook my hand. Everything a boy can ask for.\"\n\n\"That's nice,\" says Luna. \"So how can I pay you back?\"\n\n\"Really,\" says Winston. It's okay, it was --\"\n\n\"I'll take you to dinner. Meet here at 6? Okay? Okay. See you then.\"\n\n\"Uh, okay,\" replies Winston but she is already gone.\n\n#\n\nWinston dons his best pair of jeans, a white under-shirt, a long-sleeved t-shirt with sleeves rolled up, and tries his very best not to project the aura of a virgin. Luna arrives at exactly 3 minutes to six, dressed in a green summer dress, light and airy. She hooks her arm into his and steers him down the cruise's 'board-walk' and into a Japanese-themed restaurant with a red triangular arch and red columns, etched with golden dragons.\n\n\"Hello,\" says Luna to the hostess. \"Reservation for two under Luna.\"\n\n\"Right this way,\" says the hostess, dressed in a kimono that whispers as she walks.\n\nShe leads them to a secluded table in the back, bordered on one side with a screen depicting the earth on the back of a turtle and another side by a bamboo wall. Winston rushes to pull out the chair for Luna, which she happily takes, smoothing her dress before sitting down.\n\n\"Thank you,\" she says.\n\n\"Your server will be right with you,\" says the hostess. She hands them two menus before leaving them to their privacy.\n\nLuna takes her menu, scans it rapidly, and sets it down, before Winston has even made past the appetizers -- crab wontons and calamari.\n\n\"You already know what you want?\" asks Winston.\n\n\"Yes. I looked up the menu before-hand. Don't want to get it wrong.\"\n\n\"Right,\" says Winston. \"That makes sense.\"\n\n\"I know. So, Winston,\" she says, folding her hands on the table. \"Tell me about yourself. How old are you? Are you still in high school? What do you do when not rescuing small girls from plummeting into the ocean? Do you always dress so casually? What is your favorite animal?\"\n\nWinston places the menu aside, notices that, like her mother, Luna has large breasts, and does his best not to look rudely at them while talking to her. \"I'm 18 and no -- I'm entering college this next year. My --\"\n\n\"What college? I have a scholarship to Cornell.\"\n\n\"Really? Me too. I mean, I'm going there too.\"\n\nA smile lights up Luna's large, dark eyes. \"What? No way. What major? I'm comp sci.\" Winston's mesmerized by her face and starts to zone her out. \"Maybe mechanical engineering too. They have an incredible robotics program there.\" She has the perfect face for drawing. Crayons would be just perfect for it. \"Are you going into engineering too? Are we going to be classmates?\" Yes, crayons. A broad children's caricature almost, to capture the energy, the liveliness. \"You're not a liberal arts major, are you? You're not a...\" she lowers her voice \"... an artist?\"\n\nOr maybe some combination of water-color and -- \"Huh what? Er, well, yes, I am an artist.\"\n\n\"Oh...\" says Luna. \"I like art. Do you paint?\"\n\n\"Well... I haven't found my style yet. I'm just, um, experimenting. I like drawing. In fact, I was doing some sketching when your sister almost fell. Lost my sketchpad -- into the ocean. It's probably been swallowed by a whale by now...\" Misinterpreting her downcast look, Winston hastily adds, \"Not that I mind losing it! Well, I mean, I do -- but in exchange for your sister, it's no problem. It's no good. I mean, it is good that she's okay.\"\n\n\"Yeah,\" Luna says. \"Maddy won't shut up about 'her hero.' This was her idea, actually. She told me I had to um...\" she blushes and changes topics. \"I'm sorry about your sketchpad. Maybe an underwater kingdom will find it and enshrine it their museum of lost artifacts?\"\n\n\"Maybe,\" says Winston.\n\n\"Do you know what you want yet?\"\n\n\"No. You were asking me questions and --\"\n\nShe tsks. \"Better hurry. Our waiter is on his way.\"\n\nLuna, who it turns out had spent two years in Japan with her Japanese grandmother, orders Tako, Ika, and Tamago sashimi and what's called the \"Allure roll\" while Winston settles for a simple Teriyaki Steak meal.\n\n\"Can I ask you something?\" asks Winston after their waiter leaves.\n\n\"Yes. Of course. Ask me anything. You're my sister's hero, after all.\"\n\n\"Do you have a boyfriend?\"\n\nShe pauses to pour herself some hot tea. \"Why d'ya wanna know?\"\n\n\"Just curious. You don't have to answer if it's a problem.\"\n\nShe sips her tea, staring at him over the rim of her tea cup. \"Well, no as a matter of fact. Between the APs and the tennis team and piano recitals and volunteering at the library and working at my uncle's software company, I haven't had time. Do you?\"\n\n\"No,\" says Winston and adds, \"I'm straight.\"\n\nLuna stares at him uncomprehending then rolls her eyes. \"You know what I mean.\"\n\n\"Uh, well. No. I've also been busy,\" he says.\n\n\"Have you ever had a girlfriend?\" she asks.\n\n\"Well, in sixth grade --\"\n\n\"So you don't know anything about sex?\"\n\nWinston hides his embarrassment by drinking water. He may not have had a girlfriend since sixth grade, but he'd listened to his buddies. He'd watched porn. These days, who didn't know about sex? \"I know plenty\u2014\"\n\n\"That's okay,\" she says. \"Since you're single and I'm single, we should be boyfriend and girlfriend on the cruise. We can learn -- before we get to college.\"\n\n\"Boyfriend and girlfriend?\" he says. \"Learn what?\"\n\n\"Sex, obviously,\" she says, looking directly at him. \"Sex things.\"\n\nHe looks away, folding and unfolding his straw wrapper. \"Like...\" kissing?\"\n\n\"Sure. And other stuff.\"\n\n\"What other stuff?\"\n\nShe gives him a flat look. \"You know, sex stuff.\" She pauses then adds, \"Handjobs, blow jobs. Sex stuff.\" Winston avoids the temptation to pinch himself; if this is a dream, he doesn't want to wake up from it. Instead, he drinks some more water.\n\n\"I'm still a virgin, are you?\" asks Luna.\n\n\"Yes,\" Winston admits.\n\n\"Okay, then you have no choice but to say yes.\" She waits. \"So say yes.\"\n\n\"Yes.\"\n\n\"Okay, good. I predicted you would say yes, but...\" she reaches into her large purse and pulls out a notepad emblazoned with an orange crescent moon. \"I have three rules: First. You have to do whatever I do. I believe in equality. Second. My parents must not find out. They would absolutely freak. If a boy even looks at me, I get grounded. If they were to see me with one...\"\n\n\"What?\"\n\n\"Decapitation. Third, don't think this means we're boyfriend and girlfriend elsewhere. This is special and it's on a trial basis. We're here to learn.\"\n\n\"Okay,\" says Winston. \"So no fucking around.\"\n\nLuna rolls her eyes for the second time that night, but then adds \"We'll see.\"\n\n#\n\nThe next day, the ship pulls into the port of San Juan, Puerto Rico, and Winston's parents disembark after failing to convince Winston to join them. At the pre-scheduled time of 10:30 am, Luna knocks on his door. Winston lets her in, checks to make sure the corridor is clear, realizes he doesn't even know what he's looking for, and shuts the door.\n\n\"Hi,\" he says.\n\n\"Hello,\" says Luna. If Winston had thought her purse last night was large, then the one she carries now is huge. Less purse, more toolbox. Perfect size for a wallet, a drill, and a car battery. She sets it to the side as she pulls up a chair and sits down. Winston takes a seat opposite her, on the couch.\n\n\"So...\" she says.\n\n\"Yeah?\"\n\n\"Winston, we're boyfriend, girlfriend, right? You're serious about this? Because I am.\"\n\n\"Yeah, sure.\"\n\n\"Okay.\"\n\n\"Yeah.\"\n\n\"I want to see your cock.\"\n\nWinston manages the impressive feat of choking on air. \"What?\"\n\n\"I want to see your cock. Or should I say something else? I read that some people like to use euphemisms for their parts. To make them comfortable. Seems silly to me. Would you like me to call it Mr. Johnson?\"\n\n\"Uh, no,\" says Winston shifting uncomfortably. As soon as she walked in the door, even dressed conservatively in a pair of sweat pants and a loose-fitting shirt, he had started to grow hard. Now his 'Mr. Johnson' is fully erect, and visibly so. \"Cock is fine.\"\n\n\"Okay,\" she says primly. \"I want to see your cock. Take off your pants.\"\n\nWinston stands up and fumbles with the button and zipper of his jeans, suddenly the most complex contraption known to man. After an excruciating fifteen seconds, he manages to unstick the zipper. He pulls his jeans off, revealing boxers tented by his hardness. Still shy, Winston glances at Luna and notices her staring at him intently. He hooks his thumbs into his boxers and pulls them down; his cock springs free.\n\nLuna purses her lips and nods. \"Do you know how long you are?\"\n\n\"Er, no? Average, I guess.\"\n\n\"I mean, actual length. Do you mind if I measure?\"\n\n\"I guess not?\"\n\nLuna reaches into her huge purse and pulls out a 12-inch ruler.\n\nWinston cracks a smile. \"You brought a ruler?\"\n\n\"What do you mean?\" says Luna. \"I always have my ruler with me. Lean back now.\" She measures him, taking great care to avoid touching him any more than necessary. \"Almost seven inches,\" she says. \"Six and nine-sixteenths. That's bigger than average.\" She opens her moon notebook, retrieves the pencil from behind her ear, and makes a quick note. \"I'll take off my pants now.\"\n\nShe manages her own sweatpants with relative ease, revealing simple green underwear, very shiny. Winston wants to ask to be the one to take them off, but before he can work up the courage, she lifts up her hips and rolls them off. He sees his first pussy, in the flesh anyway. It's beautiful. Not that he has anything to compare it with, but that animal part of his brain -- the ancestral part -- that long genetic lineage that has baked from womb to womb to womb for the last thousand years -- it knows. He feels for the first time that insatiable hunger, those pangs of a lust that can only be satisfied by burying himself in a woman. But he doesn't really understand all that yet. He just knows he wants her and that she is beautiful.\n\nShe lets him look, a blush growing steadily in her cheeks, before she crosses her legs. She looks annoyed, but most of all, annoyed at being annoyed. \"So?\"\n\n\"I like it,\" says Winston.\n\n\"I meant, now what?\"\n\n\"Can I see your breasts?\"\n\nShe shakes her head. \"No.\"\n\n\"Oh.\"\n\n\"Hm,\" says Luna. \"I think... Can I touch it -- your cock, I mean?\"\n\nYes! Winston almost blurts out, but instead says, \"If you show me your breasts.\"\n\nLuna gives him a scandalized look, then tilts her head in a curious manner reminiscent of a bird hearing the distant song of a potential mate, and after a second of thinking, offers her hand. Winston shakes it. \"Deal,\" she says.\n\nShe takes off her shirt to reveal breasts that are just as pretty as her lower parts. They're much larger than he would have thought, and he's particularly drawn to that sloping valley between the two teardrop-shaped mounds. He wants to kiss her right there. After she takes off her bra, also green and shiny like her panties, he gets a brief glimpse of nipples -- incredibly long and lightly brown - before she covers them with an arm. He decides that she has the most fantastic coloring, and he doesn't know whether he wants to have sex with her or draw her.\n\nInstead, however, she scoots up and sits next to him on the couch, close enough that her thigh touches his, a touch that sends a jolt of electricity straight into his heart -- and his cock.\n\n\"Okay, ready?\" she asks.\n\n\"Yeah.\"\n\nOne arm still covering her breasts, she reaches out with the other and grabs hold of Winston's literally throbbing manhood. The sensation of someone else taking hold is awesome, it's fantastic. At first, she simply feels her way over him like a tactile adventurer, exploring the ridged head, the vein underneath, even cupping his balls. Noticing his gasp when she touches his head, she begins to rub him up and down.\n\n\"Does that feel good?\" she says. \"Should I keep doing it?\"\n\n\"Yeah,\" he says. Her fingers are thin and feminine, and cold at first. But they quickly grow warm as she jacks him off.\n\nShe's watching his face intently and Winston, feeling self conscious, tries to keep his face perfectly neutral. But he clearly doesn't do a very good job because she asks him, \"Are you going to cum?\"\n\n\"If you keep doing it,\" he says. \"Can I see your breasts?\"\n\nShe hesitates then lets her arm fall. \"Are my nipples weird?\" she asks.\n\nA weird question, but he answers anyway. \"No.\" They're long and puffy and crinkly. Textured. Nipples with character. Beautiful, he thinks, but lacks the courage to tell her so.\n\n\"Okay,\" she says and keeps her hand motion going up and down. Her fist is tiny, but she has no trouble wrapping her fingers around him. He can feel every finger moving over his sensitive head. She takes her time, enjoying the sensation, becoming lost in it, like a pianist gently running her fingers along the keys. She strokes the full length of him -- her hand sliding from the base at his groin all the way up to the tip. But as she grows comfortable, she begins to speed up her strokes, shortening them to focus just on the head. Soon, her small fist is flying up and down his cock, and Winston begins thrusting his hips up in rhythm with her strokes. It doesn't take long for him to cum all over her hand and his stomach.",
        "\"Ah, sorry,\" he says.\n\n\"For what?\" she says. She retrieves a little packet of Kleenex from her purse and cleans the mess. After throwing away the Kleenex and returning the packet to her bag, she retrieves her small notebook.\n\n\"Did you like that?\" she says. \"What was your favorite part?\"\n\n\"Yeah. Dunno. All of it?\"\n\n\"But a favorite?\"\n\n\"The end, when you focused on just the tip.\"\n\nShe writes into her notebook.\n\n\"Are you really taking notes?\" asks Winston.\n\n\"Of course. We're here to learn.\" She points at his cock with her pencil. \"How come you're still hard? Aren't you supposed to, well, to shrink?\"\n\nHe shrugs. \"I'm still turned on.\"\n\n\"Oh. Because I'm naked?\"\n\n\"Yeah. Because you're pretty.\" He pauses. \"Do you want to lie down in my bed with me?\"\n\nShe does her curious little head quirk. \"Okay.\" She gathers up her clothes and stuffs them into her tool-kit purse and follows him into his room, which he shuts and locks behind him.\n\nWinston climbs onto one side of the bed, and Luna onto the other side; they scoot together until their noses are centimeters apart, eyes staring at each other. Winston leans in to kiss her and the motion takes something like 5,000 years. At every moment, he expects her to turn away, to stop his kiss. He doesn't know why, not really. She just masturbated him after all -- but distance is so prevalent. It's implied in every relationship he's had so far. It's hard to overcome the expectation for it. But she doesn't move away. Their lips touch for their first kiss, and for a second, and a third. They kiss without moving. They don't move their hands to touch each other. They don't close their eyes. Winston's cock is pressed against her belly and her nipples against his chest but neither acknowledges this fact. They kiss and that is all. Luna's lips taste like strawberries. He tries to put his tongue into her mouth. She accepts it. He doesn't know what to do with it, so he runs it along her teeth, along her own tongue. Then she reciprocates.\n\nWinston pulls away and reaches down to touch her nipple. She doesn't like that and turns away, showing him her back. It's a silly thing, but Winston really likes her shoulder blades. They're very sharp. He wraps his arms around her and presses his still-hard manhood against her butt, nestling it in the crevice between her cheeks.\n\n\"Okay,\" she says.\n\nHe holds her like this for a long time, kissing her neck, thinking about touching her in various places. Finally he just does. He slips his hand down between her legs and touches her beautiful pussy. She doesn't move away. Having never felt a woman before, he explores her cleft. He traces the outer lips, the inner folds. He finds the place where his cock would fit and slips a finger inside it. She's wet, but not in the sense of water on a towel. Rather, she's slippery, and he fingers her gently. He returns to exploring her outer labia, and finds a point above her entrance that causes her to gasp. He rubs this for a bit and then, still curious, decides to touch her nipples again. But as his hand reaches up, her own intercepts it.\n\n\"No,\" she says and guides his hand back down between her legs. She takes his finger and puts it where she wants it, back at her gasp-point. He finds her clit -- or what he assumes is her clit -- covered in a small hood, and she particularly likes it when he touches the hard nub underneath. As he rubs her, she begins to push her ass back against his cock and that feels incredibly good. She moans under her breath, and her movements slowly reach a climax point. She rubs herself furiously against him, his cock moving inside the crack of her ass, almost making him come a second time, but then slows and eventually stops.\n\n\"Did you come?\" asks Winston.\n\n\"Yeah,\" she breathes. \"I did.\"\n\nWinston nods and nestles himself in her neck. He can smell the vanilla shampoo in her hair, and also her arousal in the room, a more metallic smell. They don't talk. He listens to her breathing and she to his, and they gradually fall asleep, Luna a perfect fit in Winston's arms, like two Tetris pieces enjoying a nice snuggle.\n\n#\n\nWinston's dreams of hotdog juggling are interrupted by a banging on the door. \"Winston!\"\n\nWinston groggily drags himself out of sleep and realizes three things: first, he's still got his arms around Luna, and her breasts are in his hands, and they are incredibly soft. Second, that he's still got his cock nestled against her ass, and her two butt cheeks are incredibly soft. And third, that his parents must have returned home. Winston practically leaps from the bed.\n\n\"Yeah, dad?\" he shouts.\n\n\"We're going to dinner! Come on.\"\n\n\"Alright, I just need to get ready. You guys -- go on ahead.\"\n\n\"Open up,\" says his father, shaking the door knob. \"Let's go.\"\n\n\"I'm not dressed,\" yells Winston. \"I was about to take a shower!\"\n\nThe rattling stops and then his dad says, \"Alright Winston. We'll be at our usual table. Hurry it up.\"\n\nWinston pauses, waiting for more, and when it becomes clear his dad has left, he turns around and sees Luna hiding behind the bed. She looks like a rabbit peeking out from behind bushes, and the image is so silly, he cracks a smile and begins to laugh.\n\n\"Close call,\" he says. \"Though my parents don't usually go in for decapitation.\"\n\n\"Yeah,\" says Luna, standing up. She covers her breasts as usual, but Winston's eyes are drawn to her pussy. He wonders if she'd be willing to model nude for him.\n\n\"You're growing hard,\" says Luna. She pointedly looks at his cock, dangling between his legs, beginning to point upwards as it fills with blood.\n\n\"Er, yeah,\" says Winston. \"To be fair, that's true most of the time.\"\n\n\"Is that awkward?\"\n\n\"Sometimes.\"\n\nLuna nods and sits down on the edge of the bed. \"Come here.\" Winston shuffles around until he's standing in front of her, his cock pointing toward her chin. For a second, she looks like she's going to lean out and lick him, but instead she reaches out and takes hold of his cock and begins to stroke it. As she does this, she looks up at Winston eagerly. Her hair is slightly mussed on one side, where she slept on it. Her lips are set, determined.\n\n\"I want to see your breasts,\" grunts Winston, and she reluctantly lowers her arm. Her long nipples are pointing outward and that little valley between her breasts is open, her unclad breasts hanging slightly to the side. He's no expert, but he figures they're pretty big for her size. Not porn star huge, but he's sure no one ever mocked her for having 'bug bite' breasts. They're large enough that they sag slightly. Is that why she seems so self-conscious about them? Regardless, Winston loves them.\n\nAfter giving him a good stroking, Luna switches to the short, fast pulls that he likes, and Winston cums again, shooting his seed on her breasts: one glob on her left nipple, most on the mounds themselves. But as she begins to reach for the Kleenex, he says, \"Wait.\" He finds her green bra in her purse and hands it to her.\n\nShe raises an eyebrow questioningly and, Winston thinks, a little disgustingly.\n\n\"You don't have to,\" says Winston. As she lowers it, he adds, \"But I did save your sister.\"\n\nShe hesitates. \"True,\" she concludes and slips her arms into the bra and pulls the cups down over her cum-soaked breasts. \"Hook me?\" she asks, and Winston manages it after a couple of tries. She dons her other clothes in rapid speed. Her sheer green panties are on before he even knows what's what. Winston peeks out the door, finds the room empty, and gives Luna the all-clear.\n\n\"See you at dinner?\" asks Luna.\n\n\"I hope so.\"\n\nShe gives him a hug and a kiss on the cheek and then hesitates. \"Thank you for saying I'm pretty. You're sweet.\"\n\nHer statement confounds him. \"Just being honest.\"\n\n\"Uh huh,\" says Luna and slips out the door.\n\n#\n\nThe dinner is a large communal affair. In the big ballroom with chandeliers, a comedian tells jokes, some wildly inappropriate, but everyone's in such a fine mood that laughter is in good supply. Luna and her family are seated on the other side, but Winston has a clear view of her. He stares at her, and she at him, each trying to avoid being too obvious about it and doing a poor job of it. He can hardly believe she agreed to wear her bra with her breasts covered in his semen. In fact, he can hardly believe the day happened at all, but that last part especially. The thought that she's sitting there, her family and everyone else unaware of this fact, makes him incredibly horny, and he spends the whole dinner fantasizing about her, his sex reverie quickly escalating from envisioning her lips locked around his cock to him fucking her against the wall to hard anal sex. He becomes almost sick with the eroticism of his thoughts, and his cock is uncomfortably hard throughout the entire dinner.\n\nAfter the final course of a cr\u00e8me brulee dessert, the comedian wraps up his routine with a joke involving Captain Kirk's sex life. Winston springs to his feet and not-so-slowly meanders his way through the departing crowds toward Luna's table. She meets him half-way.\n\n\"Hey,\" she says and presses a folded piece of paper in his hand.\n\n\"Hey,\" he says back, and then walks on past her, makes a circuit and returns to his parents.\n\n\"Sorry,\" he says. \"Thought I saw someone I knew.\" Walking behind his parents, Winston surreptiously reads her note: Call me @ our room #: B-deck 272 (11272) at exactly 11:15 ship-time. I wanna chat ;).\n\n#\n\nAt 11, Winston says goodnight to his parents, who mumble a sleepy goodnight back. Afterwards, he sets up camp by the phone and stares at his newly-synchronized watch, counting the tick-tock of the second hand. At 5 seconds to 11:15, he picks up the phone. The second the minute hand time switches from 11:14 to 11:15, he dials Luna's cabin's.\n\nBefore it rings even once, Luna's sultry voice fills Winston's ear. \"Hey, Winston.\"\n\n\"Hi, Luna.\"\n\nShe pauses, and he can hear her breathing, softly and quietly. \"What were you thinking about at dinner?\"\n\nThreading my fingers in your hair as you slid your lips on me. Climbing between your legs and tasting your beautiful pussy. \"You.\"\n\n\"Yeah? What about me?\"\n\nI imagined titty-fucking you and cumming all over your breasts again. \"My sperm in your bra.\"\n\n\"Yeah. That was... interesting. How come you wanted me to do that?\"\n\nBecause you're beautiful, and I want to use you wickedly. \"I... Dunno. It was just... dunno.\"\n\n\"Naughty?\"\n\n\"Yeah,\" says Winston and thinks he can hear her scribbling notes in her notebook. \"It was hot.\"\n\n\"Yeah,\" she says after a moment. \"My boobs were all sticky when I got back from dinner. I had to take a shower. Did you have fun today? Did you learn a lot?\"\n\n\"Yeah,\" says Winston. \"Did you?\"\n\n\"Yeah. What are you thinking about now?\"\n\nWinston thinks he hears his parents shuffling around in their bedroom, and he lowers his voice still more, until he's almost whispering. \"You.\"\n\nHer own voice lowers as well. \"What about me?\"\n\n\"Your breasts.\"\n\n\"I don't like them.\"\n\n\"Why not?\"\n\n\"They're too big.\"\n\n\"That's silly,\" says Winston. \"Guys like big breasts.\"\n\n\"Yeah, well, guys don't have to carry them around all the time. I just... I don't like them. They're not proportional. They're too big, they make my back hurt, and I get tired of guys staring at them.\"\n\nWinston pauses. \"That's fair, but --\"\n\n\"What other parts of me do you like?\"\n\nIt's the easiest question he's ever been asked. \"Your nose. Your freckles. Your eyes. Your mouth.\"\n\n\"What about it?\"\n\n\"It's... nice.\"\n\n\"Nice for what?\"\n\n\"Kissing.\"\n\n\"What else?\" she says in an urgent voice.\n\nWinston hesitates, then decides to just go for it. \"Will you give me a blowjob?\"\n\n\"Yes,\" she breathes. \"Come to my cabin.\"\n\n\"What, now?\"\n\n\"Yes. I'll leave the door unlocked. My room is the one on the left.\"\n\nIt is an immensely bad idea, which is why it takes Winston a full 5 seconds to make up his mind to do it. He takes his key and sneaks out the door. The ship is mostly asleep, but crew members walk past and a few night-owls, particularly young couples, can be seen in the bars, flirting over half-empty drinks. In the half-waking, half-dreaming atmosphere on the ship and amidst the gentle sounds of the sleeping ocean, a ghost or two would not be out of place, but Winston doesn't notice any. In fact, he barely notices anything, and in no time at all, he's standing before Luna's cabin. He double-checks the paper she handed him, takes a deep breath, and slowly opens the door, fully expecting her parents to be standing right there, spotlight in hand, guillotine ready.\n\nBut her cabin is dark and quiet. He immediately heads for the door on the right and slowly eases it open and nearly has a heart-attack when he sees three lumps -- two big, one small -- in the bed. Winston mentally smacks himself upside the head. He closes the door and cringes at the click it makes. Without waiting to see if they awake, he heads toward the other bedroom and reaches out to the knob. As soon as he begins to turn it, Luna jerks him inside, and shuts the door behind him, locking it.\n\n\"Hey,\" she says. She's naked but for a bra. Her skins glows from the moonlight and starlight streaming in through her balcony window. \"Take off your clothes.\"\n\nHe doesn't have to be asked twice. Winston shimmies out of his clothes, leaving his socks for last. He's hard, of course. Painfully, almost. He feels like he's been erect for the past six hours, and that's probably not too far off the truth.\n\nLuna flips open her notebook and says, \"Before we do this, three things. Number one. I need to know where you plan to come.\"\n\n\"Uh...\"\n\n\"I read that most guys like to come in the girl's mouth -- I am OK with that. I want to know what semen tastes like. And it's less messy anyway. Is that good?\"\n\n\"What are my other options?\" asks Winston.\n\n\"Well, you can --\"\n\nWinston stops her with a raised hand. \"I'm kidding, I'm kidding. I can settle for, um, what you said.\"\n\n\"Okay. Right. Number two. I want you to try the same thing with me too.\"\n\n\"You mean\u2014\"\n\n\"Yes. I want you to give me cunnilingus.\" She does her little curious tilted head thing. \"I think that's how you pronounce it, anyway.\"\n\nWinston shrugs and wonders if the word 'blow-job' also works for that and, if not, why there isn't a simpler, easier word for it.\n\n\"Would you like to give or receive first?\" she asks.\n\n\"Well...\" He feels both incredibly horny and incredibly nervous at both prospects. He's afraid he'll cum as soon as her mouth touches him, but he's also afraid that he'll go down on her and do it all wrong and she won't enjoy it, and he'll be banished back to the land of virgins.\n\nShe raises a hand. \"I have a coin here, if you prefer to, y'know, leave it to fate.\"\n\n\"Okay.\"\n\nShe flips it. \"Call it.\"\n\n\"Heads,\" he says and almost laughs.\n\nThe coin lands and President Washington is staring up at them, winking it seems in the half-light, as if encouraging them to continue with their very American pioneering into the unknown frontiers of oral sex.\n\n\"Okay,\" says Luna. \"I'll do you first. Which brings us to three.\" She hesitates. Even in the semi-darkness, Winston can tell she's nervous too. Probably just as nervous as him, and that makes him feel much better. \"I've never done this before,\" she says. \"Tell me if what I'm doing doesn't work. Now, uh, I think you should lie back on my bed.\"\n\nHe does and she crawls up him and without preamble places her mouth over his cock. Her hair is draped over his thighs. Without touching him, she moves her head up and down, quickly sucking the tip in and out. Eventually she pulls off. \"My hair keeps getting in my mouth -- will you --?\"\n\nHappily he takes it in his hand and out of her way. She experimentally tries a couple bobs then comes back up. \"Thank you,\" she says. \"That's much better.\"\n\nLuna proceeds to give Winston his first blow job. There's very little flair to it. Winston has seen porn, he's seen a porn star use her hands in strange arcane twisting motions, take a man's sack in her mouth, or make long licking motions like a lizard tasting its meal. He likes Luna's steady sucking motion just fine. He had figured the action -- the friction itself -- was the main thing, but that's very light, more warmth and wetness than hard feeling. Instead, it's all the extra stuff he likes. The sound of her sucking, a slurping almost. The sight of her lips stretched around his girth. The light off her shoulders, gently shrugging as she bobs her head up and down. The curves of her butt slightly raised in the air. After a bit she stops and pulls off. \"How is it?\" she says.\n\nWinston nods but then realizes in the dark, she probably can't see him. \"Yeah. It's good. Keep going.\"\n\n\"Okay. I think I can get deeper.\"\n\n\"Okay.\"\n\nHer lips return to his cock, and she does manage to get more in, maybe half his length, the tip of his cock nearing the back of her throat. Just as he feels his orgasm arriving, she pulls off him. \"How am I doing? Does it feel good?\"\n\n\"Fine,\" says Winston. \"Just stop stopping!\"\n\n\"Jeez, sorry,\" she says and returns her mouth to his cock. She slides her lips up and down him a couple times and then, whether intentionally or not, shakes her butt a little. That sets him off, and he's filling her mouth with his cum. She does a good job of swallowing it, only a small amount falling from the corners of her lips. She wipes that off with her index finger and then licks her finger.\n\n\"Salty,\" she says. \"Different than I expected.\"\n\n\"What'd you expect?\" asks Winston.\n\n\"Don't know. I thought it'd taste like milk or something. My turn,\" she says as she lies back on the bed, stretching out her limbs in a rather feline manner. She shivers, he notices, even though it isn't even cold.\n\nWinston's nervous. To buy time, he kisses her thighs. They're very soft, much softer than his own, and smoother. He works his way between her legs and gently spreads them to get a better look, but in the darkness, he can't really see what he's doing. He tries an experimental lick between her legs. She doesn't seem as responsive at first, but he remembers her gasp-spot -- her clitoris -- and moves his tongue there. She softly moans. Jackpot. It gives Winston confidence, and he keeps it up. As he sucks and licks her small nub, her soft moans become muffled, and he realizes that's she's biting the pillow. It makes him feel like a god. The male god of love, whoever that is. He reaches both hands up and pulls down the cups of her bra to get at her breasts and nipples, which he squeezes while keeping up his assault on that special spot. The combined sensations bring her to a rapid climax: she squeezes her legs together and humps his face and goes still. His mouth tired, Winston withdraws.\n\nLuna is silent.\n\n\"Did I do it right?\" asks Winston.\n\n\"Yes.\" She exhales. \"Are you still hard?\"\n\n\"Yeah.\"\n\n\"If I give you another blowjob, will you do what you just did again?\"\n\n\"Yes.\"\n\n\"Good. Let's try it a little differently.\" Luna adjusts her bra, so that it's covering her breasts again and moves off to kneel by the edge of the bed. The star-fish pattern of her comforter is just visible. \"Come, sit here...\" she says.\n\nThey spend the rest of the night giving each other head and talking while waiting to recharge. By the time Winston returns to his cabin at 4 am, he has learned that she drives an old Toyota corolla and can speak Japanese and could totally kick his ass with her black belt in jujutsu. He also learned that she loves it when he pulls her whole clit into his mouth and her insecurities about her breasts and her nipples make them a prime target for bringing her pleasure. For her part, Luna learns that Winston drives his dad's old mini-van, that he spent last summer studying classical architecture in Greece and Rome, and that Monet is his favorite artist. And also that he really likes it when she puts her lips just around the head of his cock and rapidly moves them up and over the ridge.",
        "Of course, disaster strikes. The next day, Winston meets Luna at La Parisian. She's positively glowing, but her news is less so.\n\n\"We're getting off -- going to island hop and rejoin the ship in Labadee.\"\n\n\"In Haiti? On Wednesday?\"\n\n\"Yes. On Wednesday.\"\n\nWednesday is two whole days away. \"Maybe I can convince my parents to do the same...\" says Winston.\n\n\"Even then,\" says Luna. \"I'll be with my parents the whole time --\"\n\n\"Tell them you want to stay with the ship,\" says Winston.\n\n\"I can't, I -- \"\n\n\"You should stand up to them.\"\n\n\"They're my parents, Winston. I want to go with them. Remember, this thing we have is just on a trial basis.\"\n\n\"Fine,\" says Winston and folds his arms, notices that Luna's upset and immediately apologizes. \"Sorry. It's just...\"\n\n\"Yeah. I know me too. Which is why...\" She blushes. \"Do you have a camera?\"\n\n\"Yeah?\"\n\n\"Here.\" Luna hands him a SD card. \"But don't look at it until tonight -- and when you're alone okay?\"\n\n\"Okay,\" says Winston.\n\n\"Cheer up,\" says Luna. \"It's only two days. And I think you'll have a lot to think about.\" She leans in and kisses him on the lips. She tries to pull away but Winston holds her there, kissing her for a good half minute. Finally she pulls away, gives him an awkward wave, and turns and leaves.\n\n#\n\nWinston's in a sour mood the whole day. He even feels sour at being sour. Why should her being gone for a mere two days upset him so? He's on a Caribbean cruise for Christsakes. But his self pep-talk does no good. He feels vulnerable and knows it. Only the prospect of looking at her pictures gets him through it. After having supper with his parents at the cruise's burger joint, Winston returns to his room and gets out his camera and replaces the SD card with the one Luna had given him.\n\nThe first picture is of her holding a piece of paper on which is written: \"Pick your favorite.\" The next picture is of her wearing a familiar green dress, that dress of what he supposes can be called their first date. The next has the dress off her shoulders, revealing the same shiny green bra she had worn after he had come on her breasts. Winston sets down the camera and takes off his pants and underwear and slowly begins to stroke his cock. He continues on with the pictures. The third picture has the dress completely removed; Luna is clad only in her pair of green underwear and bra. The fourth picture, she's naked but her arm covers her breasts and her hand covers her pussy. In the fifth picture, Luna is completely clothed again, in a pair of jeans and a white top that's tightly stretched across her breasts. The picture after that, she's flashing him, lifting up her shirt to reveal a yellow bra with black polka dots. In the next picture, her jeans have also been pulled down her olive thighs. Her underwear matches her bra, of course. She's a matching kind of girl. Yellow with black polka dots all around. Winston really likes that picture -- how sexual she seems -- and he stays on it for two minutes, his hand steadily pumping his cock, his eyes roaming the picture, memorizing every detail, searching for every sexual nuance, like a detective at a crime scene or an artist analyzing his model. Then he continues on. Despite the nature of the pictures, she's very shy. Her breasts are never fully revealed and her pussy only rarely; either underwear or her hands are constantly in the way. Even her face is often turned aside. She saves his favorite for last: pictures 43 to 49 have her first in a sexy black cocktail dress, and then a sort of strip tease: a black bra with lace trimmings that seems more mature, more erotic than her other bras, and then a matching black set of black panties with a very thin waist-band. He really likes picture 49 -- which clearly shows her breasts, spilling out over the tops of the pulled-down cups of her bra. But when he reaches the 50<sup>th</sup>, and last picture, he moans out Luna's name and immediately comes. She must have used a timer. She's bent over her bed, completely naked, her ass in the air and facing the camera. He can see her curvy back and everything else too. Her pretty pussy out on display, and even her asshole. He knows exactly what this means -- sex. Actual sex. That's her way of saying that's what will happen when she returns. He thinks that's what it means, anyway.\n\nThe next day, Winston's parents invite him on a shore trip -- hiking on the El Salto del Lim\u00f2n -- and he hops to it, hoping that maybe Luna and he will cross paths. They don't, and he spends the noon-time swimming in a cold pool beneath a 100 foot waterfall, its roar unable to drown out his dreams of Luna. He sees in all of nature's visual beauties a reflection of her curves, and in all of nature's auditory beauties a reflection of her voice. When he tries to draw anything, he only ends up drawing her.\n\nAfter several hours of fevered thoughts, Winston returns to the ship, goes into room, gets out his camera, and masturbates. He turns to his favorite set of pictures and imagines being the one to pull that black dress from her shoulders, undoing her bra, slipping that small set of panties down her waist, her thighs, past her knees and ankles. He turns to the last picture and imagines bending her over the bed, grabbing hold of her waist, lining up his cock with her beautiful pussy, and sheathing himself inside. He imagines prim and proper Luna getting so horny that she starts dirty-talking. Oh Winston, fuck my little pussy with your long cock. Ram it in me. Harder. Make me come. \"Oh Luna,\" he whisper-moans and comes.\n\nHe takes a short nap, dreams of Luna, and wakes up hard. He masturbates again. This time he focuses on the previous picture, the one that mostly clearly shows her breasts, and imagines rubbing himself in that delicious valley between her large globes. Her holding her tits together, providing friction, able to lick the very tip of his cock at the end of each his thrusts. He holds that image and climaxes the second time that night.\n\nAfter Winston cleans himself and takes a short shower, a worry strikes him, and he heads to the convenience shop located at the front of the ship. He grabs a pack of condoms and surreptitiously glances around the store. After a wholesome family of four buy matching t-shirts and leave the store, he takes his condoms to the front.\n\n\"Hey, it's our hero Winston!\" says the clerk. \"It's me\u2014\"\n\n\"Timothy... Owens?\"\n\n\"You remembered. Save any more girls? What're you purchasing for today?\"\n\n\"Not exactly,\" says Winston and slides over the condoms.\n\n\"Not exactly,\" laughs Timothy. \"I'll say!\" He grabs hold of the condoms and goes to ring them up, hesitates, then hands them back. \"Make those on the house.\"\n\n\"Thanks,\" says Winston. He turns to leave, then stops, and turns back. \"Do you -- would you know of any private place?\"\n\nStan stares at Winston then leans over the desk to look out into the corridor. \"Don't tell anyone this but you know the actor Borden Saint?\"\n\nWinston nods. He remembers their photo shoot well.\n\n\"Well, he's off the ship and won't be coming back. Going to stay another two weeks and take a private jet back home. He's already moved out.\"\n\n\"So...\"\n\n\"So,\" says Timothy. \"His suite is empty, and I have the key.\" He reaches into his pocket and pulls it out. \"I've charmed this sexy local beauty, but...\" he raises one finger to the sky in a divine posture. \"I believe your need is greater than mine.\" He hands the key over.\n\n\"Really?\"\n\n\"You bet. The room number is on the key. Good luck and make it count,\" says Timothy, offering his hand. Winston shakes it and then returns to his room. Before he can get to sleep, he masturbates a third time, a long slow stroking set to one of her fully-clothed pictures. He takes his time and instead just thinks about her, the essence and totality of her. Without even coming, his hand still around his cock, he drifts to the land of dreams, soundly and pleasantly, like a baby rocked to sleep by the mother ocean.\n\n#\n\nHe wakes up early, and the sharp edge has returned to his horniness, stoked by a night filled with Luna-laden dreams. He loads up her pictures and masturbates while thinking of their night of oral exploration. She swallowed his cum three times that night. Three times. The re-realization sets him off easily, taking him to one of those heady orgasms that seems to suggest but never delivers enlightenment. He cleans himself off, gets ready, and sets up shop at the La Parisian caf\u00e9 with his sketch pad. He does a scenery sketch in a cubist style, the 'Boardwalk' filtered through a non-Euclidean universe, a warped, twisted, but ultimately cheerful hell.\n\nAt 10:30, just as he is finishing his second cup of tea, a pair of hands cover his eyes. \"Guess who?!\" says a high-pitched voice.\n\n\"Uh...\" says Winston.\n\n\"Maddy! Stop that!\"\n\nThe pair of hands reluctantly uncover Winston's eyes, and he turns around to see Luna's sister Madeline grinning impishly. Luna is still about twenty feet away and rushing closer.\n\n\"Hi Winston!\" says Madeline.\n\n\"Hey... Maddy? Been climbing up any more railing?\"\n\n\"Nope! Are you and my sister going to have sex? I told her she had to. I'm not old enough, or I would.\"\n\n\"Madeline!\" says a horrified Luna and marches her sister back and plants her on a bench well out of ear-shot.\n\n\"Sorry,\" says Luna. \"She doesn't really know what that means. She just heard it at school and keeps bringing it up because she knows it makes us all uncomfortable.\"\n\n\"Kids these days,\" says Winston. \"Growing up fast.\"\n\n\"Mmhmm,\" says Luna, pulling out a chair and taking a seat.\n\n\"Did you have a nice island hop?\"\n\n\"Yeah. Did you have a nice, uh, cruise?\"\n\n\"Yeah. Wish I could have seen you though.\"\n\n\"Me too.\" She pulls her little notebook out of her back-pocket and retrieves the pencil that apparently has made a nest out of her hair. \"So. Did you choose a favorite?\"\n\nWinston nods. \"The last one, the black dress... and everything underneath it.\"\n\n\"I thought you might choose that one,\" she says and makes a quick note. \"So, come to my room at --\"\n\n\"No,\" says Winston. \"I have a special place I want to take you. Meet me here at nine?\"\n\n\"Nine-thirty,\" says Luna. \"My parents always go to sleep at nine-fifteen. Okay. Until tonight?\"\n\n\"Yeah,\" says Winston. \"Until tonight.\" And as she walks away, Winston realizes that his heart is hammering in his chest. Just having a conversation with her... and he feels more alive than, well, he has ever felt before. He has to restrain himself from chasing after her, thinks about it, says fuck it, and does exactly that. He catches up to her, jerks her around, and does one of those ridiculous swooping movie kisses: here's looking at you, kid. Her eyes open wide in surprise but close as their kiss continues.\n\nWhen he decides that he'll pass out if he doesn't get back to breathing, Winston pulls away. Madeline is staring at them with round eyes, her mouth rounded in a surprised O. Luna glances over at her. \"I'll never hear the end of this from her now,\" says Luna. \"But too late now.\" She gives Winston a quicker, more chaste kiss, and then twirls away. \"Until tonight,\" she says and hurries off.\n\nWinston nods. Until tonight.\n\n#\n\nWinston's dad had told him to bring a suit jacket \"just in case\" and Winston's glad that he had. At 9 o' clock, he puts on a pair of jeans, a belt, a dark t-shirt, and his suit jacket. He tells himself it's about as nice as he could manage with his given wardrobe, but then admits it's about as nice as he's ever dressed anyway. He's an artist, damnit! And artists have, well, artistic license. That's some rule.\n\nHe takes a couple deep-breathes and gives himself one of his pep-talks. Alright Winston, you can do this. It's as easy as painting waves. Yep, just go with the flow. Properly psyched up, he heads for the door, but just before he exits, his dad comes out.\n\n\"Winston! Where are you going?\"\n\n\"Um...\"\n\n\"Why the hell you all dressed up?\"\n\n\"Well...\"\n\n\"Oh you going on a date? Nice. Go get em, son,\" he says, yawns, and returns to his room.\n\nLuna beats Winston to the caf\u00e9, and he takes the opportunity to look at her from afar. She's far more pretty in person in the black dress than she was in the picture. She's just more... vital, more alive. She just looks so perfect, so cinematic underneath the light of a fake streetlamp. And sexy too. The dress isn't that short, but short enough to show her knees. Her shoulders somehow manage to seem both feminine and strong. Luna's definitely not one of those overly delicate types, and Winston likes that. He also likes her really cute butt, the curves of which he can just make out dimpling the back of her dress.\n\n\"Hey Luna,\" says Winston as he closes the distance between them.\n\nShe gives him a little wave. \"Hey -- look at you.\"\n\nHe shrugs embarrassed.\n\n\"I like it,\" she says. \"Where are we going?\"\n\n\"It's a surprise.\"\n\n\"But --\"\n\n\"But you like things neat and orderly? Too bad,\" he says with a smile. He takes hold of her hand and leads her on. Though she's undoubtedly curious, her nervousness prevents her from asking him where they're going. But when they finally do arrive in front of the cabin, Luna says, \"What?\"\n\n\"It's Mister Borden Saint's cabin -- but he's staying on the island.\" He fishes out the key.\n\n\"How do you know that?\" asks Luna.\n\n\"Just trust me.\" Winston slips the key into the door and opens it up. He begins to step inside, but Luna hesitates. \"Come on,\" he says and pulls her inside.\n\nThe cabin is the plush in a way that only movie stars, rock stars, and wall street traders would fail to call excessive. It's at least three times the size of either Winston or Luna's cabin, and theirs are suites with double bedrooms and a private bathroom. Borden's has three rooms, a living room with its own little bar, a huge bathroom with a golden-framed mirror and a Jacuzzi bath, and a massive bedroom with a king-sized bed. The attached private balcony is equally enormous.\n\nAfter they're done exploring, Winston leads Luna back to the bar and finds a bottle of champagne. \"Thanks ol' Borden Saint buddy,\" he says as he pops the cork. He fills two champagne flutes and hands one to Luna. \"A toast to the most awesome girl on the planet,\" he says.\n\nLuna rolls her eyes. \"A toast to our futures,\" and taps his glass. They both drain the fizzy alcohol in one gulp.\n\n\"So...\" says Winston. \"To the bedroom?\"\n\n\"Okay.\"\n\nWinston follows her into the bedroom, and she takes a seat on the edge of the bed and smooths her dress over her knees. Winston sits next to her, hands firmly gripping his knees, his beating like a demon-possessed drum.\n\n\"So...\" says Winston. \"So I guess there will be 'fucking around' after all.\"\n\n\"Yeah...\" says Luna. \"Yeah.\" She turns to look at him. \"We're here to learn, and... I like you. I don't want anyone else to take your virginity before we have a chance to see each other at college. I want to be the one. I want to be your first.\"\n\n\"...see each other at college?\"\n\n\"Yes,\" says Luna. \"Do you still want to date me after we get back?\"\n\n\"Yes! Absolutely. Totally, Luna. I was being totally serious when I said you're the most awesome girl on the planet. You are completely, totally awesome. And I want to be your first too.\"\n\n\"Okay,\" she says and pulls out her ubiquitous notepad and pencil from god knows where. \"I've got a list of positions --\"\n\nWinston interrupts her with a deep tongue-twisting kiss. He stops, moves her hair back behind her ear, and kisses her again. The list and pencil fall by the wayside. Winston kisses her neck. He slips her black dress off her shoulders and kisses her sharp shoulders, and then the tops of her breasts. Luna pushes him back and slides the sport coat off his shoulders. Winston tosses it aside and pulls his shirt up and over his head in one motion. He moves back toward her, but Luna stops him.\n\n\"No, your pants too.\"\n\nWinston stands up and undoes his belt, the metal buckles scraping against one another. He snaps out the button on his jeans, pulls down the zipper, and slips his jeans and boxers down. His hard cock springs up proudly. He kicks his pants and boxers aside.\n\nLuna hikes her dress up her hips and begins to pull down her panties but Winston stops her. \"No. I'll do it.\"\n\nWithout waiting for permission, Winston leans back in and slides his hands up her athletic legs, toned from countless hours of practice at her jujitsu dojo. The thin waistband of her panties does little to hide the smooth flesh of her flank, and Winston takes the opportunity to slide his hands up to squeeze the two globes of her ass. He hooks his two fingers in the band and slowly pulls down her underwear to reveal her beautiful pussy, already wet with her arousal. Seeing it again after the two-day hiatus, Winston feels a sudden hunger and says, \"I want to taste you.\"\n\nLuna nods, and Winston finishes pulling her black panties down past her knees and ankles, feeling a d\u00e9j\u00e0 vu with how closely this matches his fantasies. After Winston drops her underwear to the floor, Luna scoots a little farther up the huge bed, sliding her dress up to her hips. She spreads her legs and says, \"Go ahead.\"\n\nDespite his hunger, Winston takes his time. He kisses her ankle, her calves. He notices for the first time a little moon-shaped birth mark above and to the left of her knee and kisses that. He licks and gently bites her thigh. His tongue makes a circuit around her pussy, carefully skirting the edges, carefully avoiding the dangerous areas. Only after Luna chastises him with a half-whispered, \"Winston...\" does he finally spiral in to the folds of her pussy, slipping the point of his tongue inside her, inside the place that he hopes his cock will soon be. After their night of oral exploration, he knows exactly what she likes, and proceeds to give her just that, sucking on her clit, making little spirals around it with his tongue. But after a handful of minutes, and before she reaches orgasm, Winston stops.\n\n\"What are you doing?\" she asks.\n\n\"I need to be inside you,\" says Winston. It's true. His desire is a need, the separation of their flesh is a palpable lack, a tangible disconnection with how things should be.\n\n\"But... yes, okay.\"\n\n\"I have condoms,\" says Winston, glancing toward his jeans.\n\n\"No need,\" she says. She slides up the bed until she's lying back with her head against the pillows. Winston joins her and climbs between her legs, until his cock is inches away from her pussy. He watches Luna's face: she's biting her lip and gently shaking from nervousness. She's balled up her fists.\n\n\"Are you okay?\" asks Winston.\n\nShe nods.\n\n\"Relax,\" says Winston. \"Or you won't be ready for Mr. Johnson?\"\n\nLuna laughs in spite of herself and then says, \"Don't say that.\"\n\n\"Sorry,\" says Winston and then takes hold of his 'above average' manhood and after a couple seconds of searching, places the head inside of her pussy. He gently sinks himself into her. When he's about 4 inches in, she says, \"Yes, that's good.\"\n\nWinston stops. \"Should I stop? Does it hurt?\"\n\n\"Not really,\" says Luna. \"A little uncomfortable. Just take it slow?\"\n\n\"Yeah,\" says Winston, relieved. No matter that he masturbated four times -- or was it five? -- in the past two days. He's so turned on that he's afraid any real movement would have him immediately coming. He doesn't dare look down at his cock inside of her, knowing that the image will set him off. Instead he leans in and kisses her freckled nose, trying to distract himself from the extraordinary pleasure of her womanhood.\n\nIt works, sorta. After making it past that initial rush of pleasure, Winston settles on a steady rhythm of short, gentle strokes. As tight as her virgin pussy is, she's very wet, and he can slip himself in and out easily.\n\n\"Do you like this?\" Luna asks. \"Does my -- does it feel good?\"",
        "Winston nods. \"Take off your dress.\"\n\nLuna grabs hold of the dress and pulls it up her body, over her bra-clad breasts. Winston leans forward to help her get it over her head and then takes it from her hands and drops it by the side of the bed.\n\n\"Your bra too,\" he says. It's a lovely bra, lacy but not overly so. Black and womanly, with a little black bow on the thin band between the two cups. But it's not as lovely as her breasts.\n\n\"But --\"\n\n\"Luna, stop it. Your breasts are beautiful,\" says Winston. He sinks himself inside her, going a little deeper than before, and he's rewarded with a little gasp. He leans forward to kiss her. \"Your breasts are amazing.\" He kisses her nose. \"Your nose too. Your nipples, your legs, your everything. You don't need to hide anything from me. I appreciate everything. I... love every part of you. Your eyes, your hair, your breasts, your brain, your pussy, your toes, your ears, your thoughts, your voice. Everything.\"\n\n\"Jeez Winston,\" she says and, without further protest, reaches behind her back and undoes her bra, revealing her heavy breasts. The removal of this final article of clothing is like a gunshot at the start of a race, and Winston leans in and increases the force and speed of his thrusts. In response, Luna wraps herself around him: her legs around his back, her arms around his neck. She doesn't moan at all, but her heavy breathing in his ear turns him on still more. It's all too much. The pressure on his cock, her breasts against his chest, the sheer closeness of her. He's able to fuck her like this for maybe sixty seconds before he warns, \"I'm going to come.\"\n\n\"Yes,\" she says, and then he does, shoving his full length inside her. His cock jerks as he comes and he buries his face in her hair, hiding from the sheer force of pleasure.\n\nWhen he finally pulls back, Luna's lips are half-quirked in a smile, and one eyebrow is half-raised. \"You okay?\" she asks.\n\n\"I think so. Just... need to go to the bathroom.\" Winston pulls himself out of her and then heads over to the bathroom, glancing over his shoulder just once. He shuts and locks the door behind him and leans heavily on the bathroom's fancy marble counter-tops. He takes a deep breath and gives himself a good looking-at in the mirror. He is no longer a virgin. He doesn't look different, but he feels different. He feels... liberated. He washes his face off in the sink, goes to the bathroom, and washes his hands. Then he takes another deep breath and exits the bathroom and immediately stops.\n\nLuna's in the same pose as that final picture she had sent him. She's on her knees on the edge of the bed, her ass arced up in the air, her pussy lewdly displayed.\n\nShe looks behind her. \"Are you still hard?\"\n\nWinston looks down at his half-erect cock as the blood makes a sudden u-turn, flowing back into instead of out of his cock. \"I am now.\"\n\n\"Good,\" says Luna. \"I haven't come yet.\"\n\n\"Er, sorry,\" says Winston.\n\n\"No, that's normal. I read most women can't come from that position. But that's why --\"\n\n\"We're here to learn?\" says Winston steadily walking towards her.\n\n\"Yes, exactly. Get my notepad.\"\n\nWinston retrieves it and flips to the last couple of pages. Luna's filled them with stick-figure sketches of a girl (she has long hair) and a guy (he doesn't) in various sexual positions, and Winston cracks up.\n\n\"What?\" asks Luna.\n\n\"Nothing,\" says Winston. \"I see you're a student of photorealism.\"\n\n\"Don't make fun,\" says Luna. \"We'll do each for a bit and then move on. Okay?\"\n\n\"Works for me,\" says Winston as he grabs hold of Luna's hips and gently eases himself inside of her. Now that he's had sex and isn't afraid of things, he enjoys himself, feels himself opening up to the situation, to Luna herself. It all just makes sense, and they strike up a natural rhythm, Winston pushing his hips forward at the same time as she pushes her hips back, his groin slapping against her ass. The pleasure is good, but not overwhelming.\n\n\"Do you like it?\" she says after they've been fucking for a couple minutes.\n\n\"Yeah,\" he mumbles.\n\n\"What do you like about it?\"\n\nBut Winston, focused as he is on the warmth surrounding his cock, doesn't even hear her question. After a moment, she slips forward, leaving Winston's cock slick with her wetness, in the air. She turns around. \"Well,\" she says. \"What do you like about it?\"\n\n\"What do you like about it?\" retorts Winston.\n\nShe tilts her head in that thoughtful way that Winston's come to know so well and counts the points off on her fingers. \"I like how deep you get inside me. I like how when you get really deep, your balls slap against my clit. I like how every time you slide inside me, you grunt without even realizing it. I like you squeezing my hips. I like you pushing, thrusting, pulling -- taking control. I like how when your body strikes mine, I can feel it like a wave travelling over my skin. What about you?\"\n\n\"Yeah,\" says Winston. \"All that.\"\n\nLuna rolls her eyes. \"Want to switch?\"\n\n\"Okay.\"\n\n\"Lie down,\" she says. \"We'll try me facing you first.\" Winston climbs onto the bed and she climbs over him. She grabs hold of his cock, aiming it up as she drops down onto him. Stuffed full of him, she begins experimenting with different motions. Rolling her hips forward and back first. Then leaning back and rocking up and down. And then leaning forward. At first, she tries to keep one arm up, covering her breasts, but Winston gently moves it out of the way.\n\n\"Right,\" says Luna. \"Sorry. Habit.\"\n\nHe intertwines his hands in hers. Her weight on top of him, it's easy for Winston to just sit back and enjoy the sight of her body bouncing up and down, her breasts dangling in front of him.\n\n\"Do you like my butt?\" asks Luna.\n\n\"I love every part of you,\" says Winston.\n\n\"But do you like my butt?\"\n\n\"Yes.\"\n\n\"Okay,\" she says and slides off him, turns around and sits back down, his cock sliding to fit snuggly inside her once again. At first she leans forward, her legs apart, moving up and down, but eventually, she leans back and places her arms on either side of him. \"Hold me up,\" she says. Winston takes a hold of her shoulders, while she closes her legs so that her feet are between his legs. After shifting around a bit to get comfortable, she begins moving up and down. Her moans make it clear that she likes this one, that she's hitting some spot she hadn't hit before.\n\nWinston loves it too. He likes watching her ass quiver as it lands, the dark river of hair bouncing up and down her naked back, the feel of her shoulder muscles shifting as she adjusts her angle to maximize her pleasure.\n\n\"I like this,\" she says. \"I like this one - a lot.\"\n\nDespite her obvious pleasure, she seems to be restraining herself, suppressing moans into little half-gasps, and Winston says, \"It's okay if you moan.\"\n\n\"Is that what you want?\" asks Luna as she continues to fuck his cock with steady rocking motions.\n\n\"If you want to.\"\n\n\"Is that what you want?\"\n\n\"Yes. I want you to moan.\"\n\nShe drops herself on him, burying the full length of him inside her, and begins to rotate her hips back and forth. Winston can feel his cock rubbing against the inside of her, and it's hitting that spot of hers again.\n\n\"Fuck,\" she says. \"That feels good. You want me to talk dirty?\"\n\n\"Yes.\"\n\nShe combines a short up and down motion with her rotations. \"You want me to talk about your big dick filling my little pussy? Or how wet I am?\" She grinds herself against him, the soft cheeks of her ass rubbing against his groin. \"How I wanted to ride you from the moment I saw you at the caf\u00e9? How I watched you sketching and envisioned fucking you for five minutes before I came to say hello?\" She returns to her up and down motions. \"You want me to say I am fucking your cock? I can do that. I'm fucking your cock with my pussy. I'm going to ride it until I come.\"\n\nDespite her words, when her orgasm does arrive, she comes silently, rubbing herself against him desperately, almost hissing with the pleasure of it, and then falls over sideways.\n\n\"Oh my god,\" she says once she's recovered. \"I can't believe I said all that.\"\n\n\"I liked it,\" says Winston, as he gently guides himself back inside her, from behind.\n\n\"Okay,\" says Luna. They spoon, reminiscent of the first time they kissed, but this time he's inside her, gently thrusting. Winston just knows what to do -- he understands her. He thrusts gently, very gently, one hand rubbing between her legs, the other rolling one of her long nipples. He's so close to her, connected almost, able to feel every shiver of pleasure. She comes again, a long shuddering affair, and Winston comes with her, filling her with his seed the second time that night.\n\nHe has no desire to slide himself out of her, so he doesn't and they fall asleep like that. They wake up every so often, and try out some more of Luna's positions. They spend an hour gently pleasuring each other orally and finish with a hard pounding fuck that has both Winston and Luna practically screaming obscenities at each other. They fall asleep again, but when Winston wakes up, she's not there. He climbs out of bed and finds her on the balcony, a thin transparent sheet over her shoulders. The sun is rising up, as if out of the water, dripping brilliant gold and crimson ribbons.\n\n\"Hey,\" says Winston, standing beside her.\n\n\"Hey,\" says Luna. \"Three things: number one.\" She hands him a piece of paper with her phone number on it. \"Number two. It's possible I've fallen in love with you Winston Thomas.\"\n\n\"And number three?\" asks Winston.\n\n\"I've decided I want to make you cum with my tits.\"\n\nWinton raises an eyebrow.\n\n\"We're here to learn,\" says Luna.\n\n\"Well, if it's for the sake of science,\" says Winston and follows her back into the room."
    ],
    "authorname": "ElizaMix",
    "tags": [
        "male virgin",
        "female virgin",
        "cunnilingus",
        "blow job",
        "shyness",
        "experimentation",
        "masturbation",
        "young love",
        "cruise ship",
        "asian female"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-virgin-artist"
}