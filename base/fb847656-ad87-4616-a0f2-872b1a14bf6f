{
    "title": "Chests 'n Nuts Roasting",
    "pages": [
        "I had mixed feelings about spending the traditional Christmas at the Parnell family cabin this year. Sure, it was tradition and a chance to see some of the extended family -- aunts, uncles, cousins, Grandma Parnell, and a bunch of my cousins' kids whose names I couldn't remember. The weather was usually snowy, which turned the pines and frozen lake into a winter wonderland. Oh, and the food was typically great and plentiful. No, now that I'd started college, the idea of going up to the cabin felt quaint and perhaps a bit claustrophobic. Worse, it was so remote as to have no cell service. Three plus days of no service, not even internet. I'd need counseling by the time we were done.\n\nSpeaking of cell service, I'd just lost the last of mine. Avery, my twin sister, and I had taken advantage of dad's driving to chill in the back and get our fix in on the drive upstate. Judging by her scowl, she'd just lost hers as well.\n\nI leaned across the back seat to speak low enough not to be heard by the parentals up front. \"Are we bored yet?\"\n\nAvery, her thin face hidden in the depths of the oversized hoodie she wore, gave me a quick smile. \"And we're not even there.\"\n\nI patted her on the knee through her skin-tight jeans. \"Don't worry, I'm sure the kiddos are sugaring up for you already.\"\n\nAvery rolled her eyes and brushed away an errant wisp of dirty blond hair. \"Yeah, great. But you get Jorgie.\"\n\nNow it was my turn to roll my eyes and groan. My cousin Beth had remarried two years back and her new husband had a son of eight or nine. For the last two years, the kid had stuck to me like glue, convinced I was the coolest guy on earth. He wasn't terrible, but a little went a long way and I'd ended up spending a great deal of effort finding ways to hide or otherwise be away from him. Avery, meanwhile, had been the darling of the under-five crowd.\n\n\"At least you have Kaia for relief,\" I said.\n\nAvery's lips tightened and she gave me an unreadable expression, then turned to face out the window. \"I guess,\" she said softly.\n\nWhat the heck was that? Kaia was the same age as us, making her the only cousin who'd be at the cabin and within five years of our age. The other guys in their late twenties were both married and had kids, which as far as I was concerned pretty much bumped them up into the same weight class as my uncles. Sure, we'd talk a bit, but that was probably the end of it. With Kaia, however, we'd grown up living in the same town and spending most of our Christmas and summer vacations together with the extended family. As we'd reached our teens, she and Avery had bonded as close as sisters or BFF's while I got subtly nudged out of the picture.\n\nHad something happened between the two girls? Nothing that I'd heard of. Maybe with the move on to college, they'd simply drifted apart. Whatever.\n\nThoughts of Kaia quickly brought me back to last summer's vacation on the beach. It'd been impossible to miss how my cousin had filled out, not when she spent most of the entire week in one revealing bikini after another. Sure, she was my cousin, so I couldn't go there, but she'd fueled my fantasies through that entire trip and most of the six months since.\n\nI looked out my window, taking in the endless miles of snow-covered pines. My mind kept going back to my cousin in her bikinis. It was a damn shame it was too cold to expect another dose of such eye candy.\n\n#\n\nThe sun had just dropped below the horizon when dad pulled the Explorer off the country road and onto the gravel drive to the cabin complex. Snow crunched under the tires, despite someone's earlier effort to plow it clear. I couldn't help but feel a little buzz of nostalgia when the cabins came into view -- warm yellow light pouring out of the windows while strands of Christmas lights festooned the porch and dozens of smaller trees in the yard. A handful of other vehicles were parked out front.\n\nBefore we were even out of the truck, two of my uncles and a cousin came out to greet us and help carry stuff in. I grabbed my suitcase and a bag of presents and followed the train inside where warm air infused with cinnamon from baking cookies hit me with another shot of nostalgia and reminded my stomach it was dinnertime. \n\nAs expected, we were mobbed by the little kids, at least four of them, while my aunts and uncles and cousins all greeted us and offered to take the food and gifts off our hands. I shook hands, hugged grandma, and gave the little ones their obligatory hair mussings. Avery got the same treatment and did a convincing job of acting like she was happy to be there.\n\n\"Ave!\"\n\nI looked up and saw Kaia standing at the end of the hall, just out of the fray and looking amused. My cousin was tall and lean, mussy shoulder-length brunette locks framed her warm smile and twinkling eyes. While she wasn't in a bikini, the black tights and figure-hugging red sweater were more than sufficient to ping my libido. I tried not to stare or be disappointed that she'd homed in on Avery and not me.\n\n\"Hey cuz!\" Avery said, slipping out of her boots just in time to accept Kaia's engulfing hug.\n\n\"Thank god you're here,\" Kaia said in Avery's ear. I was just close enough to hear it over the din of the other reunions.\n\n\"To your rescue?\" Avery said with a smile.\n\n\"You have no idea,\" she said. \n\nKaia then broke the embrace, turned on me, and gave me the same bear hug treatment. I was completely caught off guard, since I couldn't ever recall getting such attention from my cousin before. Certainly nothing in the last few years. I did my best to hug back, silently cursing that my hands were full.\n\n\"Good to see you too, Alex,\" she said as she pulled back and gave me a once over. \"You're looking good.\"\n\nI was? I felt myself flush a bit under the compliment, all the while hoping she couldn't sense some of the wildly inappropriate thoughts I'd been having about her over the last hour.\n\n\"Thanks. You too.\" \n\n\"C'mon,\" Kaia said, this time to both me and Avery. \"Let's get you settled. We're all in New House this year.\"\n\nIt was a relief to get out of the press of bodies and noise. There were so many helping hands, I didn't feel any guilt about not sticking around to unload the rest of our stuff from the truck. In minutes, they'd have gifts under the tree and food sorted and packed away.\n\n\"We're both in New House?\" I said, falling in behind the two girls as they went through the living room and headed for the side door. I was a little surprised as historically the unmarried boys and girls had been split up between the Old House and New House, the two main buildings of the \"Parnell Cabin Complex.\"\n\n\"Yeah,\" Kaia said. \"Mike and Jenn wanted to keep their kids all together this year, so it works out better if they're in the Old House. Don't worry. You were going to be stuck with Jorgie, but he ended up leaving this afternoon to stay with his biological mom or somesuch.\"\n\n\"Gee, that's a shame,\" I said, allowing the sarcasm to drip out once I was sure no one else was close enough to hear.\n\nKaia turned, walking backward, and gave me a knowing smile. \"So you get the Observatory to yourself, you lucky dog.\"\n\nThe Observatory was the New House's finished attic. Having it to myself would be nice, though it was one of the coldest rooms in the complex. I'd just need more blankets. The privacy and view of the lake would make up for any shortcomings.\n\n\"You're in the Duck Room,\" Kaia said, flipping back around to talk to Avery. \"Leaving me the Red Room. Your parents have the first floor bedroom.\"\n\nMost of the rooms in the complex had earned nicknames. The Duck and Red rooms were named, respectively, for their wallpaper and paint. Both were ugly by modern standards, yet had a certain quaint history to them. And, more importantly, the girls weren't sharing rooms with anyone else, either.\n\n\"Who's all doubling up, then?\" Avery said.\n\n\"Oh, I think this is the first year our numbers have declined,\" Kaia said. \"Some of the cousins are off with their significant others' families. Was bound to happen.\"\n\nI chuckled. \"I think we could drop a dozen before I'd start to notice.\"\n\nKaia snorted. \"No shit.\"\n\nKaia led us through the breezeway -- a glassed-in room that connected the two buildings. The floor was tiled and cold, and two tables in one corner held the fridge overflow. On the other side of the room was the Christmas tree, lit up cheerfully in the darkness, with a staggering number of wrapped gifts around it. The room was usually opened up in the summer, screens allowing for a nice cross-breeze without the bugs, and suitable for hanging towels and swimsuits. In the winter, it was usually only heated on Christmas Day while the rest of the time it tended to hang just above freezing from heat bleeding off the houses.\n\nThe New House was new only in the sense it had been build after Old House. It was still older than the three of us by a wide margin. It was, however, the quieter of the two thanks to the dearth of little kids. I had to admit, our stay was looking better than I'd expected. On entering, it had the feel of being completely empty. \n\nI followed the girls up the stairs, shamelessly checking out Kaia's legs and ass. Her tights showed both to good effect, though her legs definitely stood out from a somewhat flat butt. If there was one thing my sister could claim over Kaia in the body department, it was her perfect butt. In her tight jeans, it was no contest. And why was I also checking out my sister's backside? Because it was there and I was bored and that's where my idle male mind went. \n\nKaia stayed with Avery as we passed her Duck Room and I headed for the stairs to the attic at the end of the hall. Kaia called out to me that dinner was ready as soon as we were. I acknowledged and resigned myself to diving into the frenetic fray of family. \n\n#\n\nDinner was like all other meals here -- a buffet-style free-for-all with people rotating into seats at the dining room table or wherever else a plate could be set. The little ones went first, then the adults cycled in as opportunity permitted. I was half-done before the girls got there and by then I was busy talking college life with one of my uncles. Afterward, I got roped into playing a game with the kids followed by a few party games with the adults that went well into the evening. \n\nKaia and Avery played for a bit but somehow managed to slip out between games. I was a little jealous but was having a good enough time that I stayed, showing the flag for my niche of the generational spectrum. When things finally wound down around ten o'clock, I called it a night and retreated to the New House. Upstairs, I saw Avery's room dark and Kaia's with the light on but door closed. I was naturally curious as to what they were up to, but didn't want to barge in on them. Probably just catching up and talking about college and boys. \n\nI walked quietly past, slowing as I approached. If they were talking, it was in a whisper, which seemed odd. Then I heard some giggling. Whatever. I rolled my eyes and went upstairs to the Observatory.\n\nThe room was long, narrow, and smelled of old wood. It had a low ceiling, but not so much that I couldn't stand upright in most of it. Several single beds lined one wall, all but one destined to be empty this Christmas. Times were changing. How much longer would the families come here for the holiday? Would it last after grandma passed? Given her good health, that might be a long way off.\n\nI grabbed my toothbrush and went back to the second floor to use the bathroom across from the girls' rooms. I heard another brief outburst of giggling. They had to know I was here now given the squeaking of the stairs. Again, I just sighed and got ready for bed. \n\nI won't pretend I didn't take advantage of having a room to myself that night. I needed some relief to fall asleep and fresh visions of Kaia in those tights and sweater was all it took. I know, bad cousin. \n\n#\n\nThe girls' doors were closed and quiet the next morning. I grabbed a shower and still saw no sign either was up. I dragged things out for a bit before finally going over to Old House for breakfast. Unsurprisingly, the young kids were early risers. Thankfully, they'd talked uncle Joe into talking them outside to play in the snow. By laying low while eating my plate of waffles and bacon, I didn't get recruited to help.\n\nMy dad, however, caught me and asked if I could help dig through the Closet for some old yard decorations that hasn't been used in years. The Closet was like a mini-attic over the breezeway, used more for storage than either of the real attics.\n\nBy help, he meant I could do it myself. I was fine with that as it kept me busy and away from the crowd. The only downside was that it was chilly in the Closet, but I figured if I kept moving I wouldn't need my coat.\n\nThe Closet, I discovered, was far messier than I'd remembered. Granted, it had probably been a few years since I'd been up there. Boxes were everywhere and most unlabeled. I spent the first fifteen minutes just clearing paths through the mess.\n\nI heard footsteps coming up the stairs and assumed it was my dad coming to check on my progress.\n\n\"There you are,\" Kaia said, surprising me as she looked in. \n\n\"Hey! Here to help?\"\n\nThis morning, Kaia was again in leggings, but these were gray with stripes. She wore another form-fitting sweater, this a gaudy green and red Christmas one that had the word \"Naughty\" across her chest. And speaking of chests, I couldn't help noticing just how conspicuous her nipples were. Damn! When she walked into the room, there was a certain bounce to her breasts that screamed braless. Seriously? That was bold, especially in the family setting.\n\n\"That depends,\" she said. \"On whether I have to lift anything heavy or touch anything dusty.\"\n\nI looked around at the room and sighed. \"Guess not, then.\"\n\nKaia chuckled as she wandered around looking at the old junk. Fuck, definitely braless, and fantastic handfuls. I'd be seeing this again in my imagination for years. Then she turned and I got a nice view of her thigh gap. I almost thought there was a hint of camel toe going on, but forcibly ripped my eyes away before getting caught.\n\n\"Well, I can lend moral support,\" she said. \"Cheer you on, run for help if you get crushed beneath something.\"\n\n\"Sure,\" I said with a laugh.\n\nKaia was actually cool, chatting like an old friend. We caught up with each other's school experiences and swapped a few good stories of life as college freshmen. I enjoyed just talking and learning more about the woman she'd grown into.\n\nAs we talked, she did lend a hand with some of the searching. I kept stealing glances at her every chance I got, especially her chest. I knew I shouldn't, but there were limits to one's resolve as a guy my age.\n\n\"Fuck, it's cold up here,\" she said, pausing to rub her arms. \"Gonna poke holes through my sweater at the rate.\"\n\nHad I heard that right? I looked at her eyes, using all my will to avoid looking at her nipples. She met my gaze and then burst out laughing.\n\n\"What?\" I said. I could feel the heat in my face, though, having a pretty good idea what she was talking about.\n\nShe smiled. \"What what? You know exactly what I'm talking about. I mean, you haven't stopped sneaking glances since I got up here.\"\n\nI could feel my face burning, despite the fact she seemed more amused than bothered. \"Sorry.\"\n\n\"Why?\" I could feel her challenging. I wanted to look away but couldn't.\n\n\"Just, I don't know, not polite I guess.\" Smooth answer, dork. But what was I supposed to say to that?\n\nKaia shook her head, smiling the whole time. \"If I was worried about anyone looking, I'd have worn a bra. Believe me, I'm used to getting checked out. If it bothered me, I'd be one miserable bitch.\"\n\n\"Still...\"\n\n\"Still nothing. And I'm just messing with you because it's easy and you're cute when you blush.\"\n\nCute? I'm sure my face turned even redder. \n\nKaia walked over and took my hand, cold fingers wrapped around my equally cold ones. \"I'd be a shitty cousin if I didn't mess with you once in a while. Besides, I needed to get you back for last summer.\"\n\nWarning bells went off in the back of my head, despite not being sure where she was going with that. \n\n\"Last summer?\" \n\nShe grinned, almost evilly. \"Yeah. At the beach. I think you spent most of the entire week staring at me.\"\n\nI could feel sweat trying to break out on my face, I was so embarrassed. I couldn't even really deny it. Had I been that obvious? \n\nAgain, though, Kaia didn't seem too upset. \n\n\"Who could blame me? You were easily the hottest girl on the beach.\"\n\nKaia's eyes widened a bit, as did her grin. \"Why thank you, cuz. But I think you meant to say, 'hottest girl on the beach besides Avery.'\"\n\nI blinked at that. \"Wait, what?\"\n\nMy cousin grabbed my hand more firmly. \"It's okay to admit it, she's got the better body. And wearing that thong? Ha! Like I could compete with that for eyeballs?\"\n\nI was floored, first for the direction this conversation had gone and then in trying to figure out if she was being serious. Had they been trying to outdo one another for people's attention on the beach? I wouldn't have thought either inclined to do that, especially my sister. Then again, as Kaia pointed out, Avery had worn that thong bottom for several days. It covered little from the front and was invisible from behind as it disappeared in her butt crack. I'd certainly noticed and had caught more than a few guys checking her out, including at least one other cousin and uncle, which was a little creepy. I know, pot meet kettle. \n\n\"I...wow. I don't know what to say. I mean, I'm family and really shouldn't be judging and all, but I always thought you had the better body.\"\n\nI couldn't believe I was saying it, but it almost sounded like she needed some validation, absurd as that seemed.\n\n\"Thanks,\" she said, voice softening a bit. \"I'll have to tell Avery that.\"\n\n\"What!? No!\"\n\nKaia's evil grin returned. \"What, so I'm not hotter than your twin sis?\"\n\n\"I...no...I mean, you can't...\"\n\n\"Oh my God, Alex,\" she said, now grabbing both of my hands. \"You're absolutely adorable when you get all flustered. Relax. I won't tell her what you really think, as long as you do one little thing.\"\n\nI gulped. \"What?\"\n\nKaia bit her lower lip. \"Tell me what you like best about my body.\"\n\nI gulped again. \"Uh, we're kinda like, you know, cousins. Not sure that's a great idea.\"\n\nShe rolled her eyes. \"Oh, come on. Just between us. I already know you've been checking me out. Just tell me.\"\n\nI sighed. \"How about everything?\"\n\nShe shook her head no. \"Very kind of you, but I want specifics.\"\n\nWas I really going to answer? Was I going to answer honestly or give some safe answer like her face or legs? Not that those weren't good and true answers, but she'd probably know.\n\nI took a deep breath. \"Fine. Let's just say that last summer, I'd have probably given my left nut just to see you topless.\"\n\nKaia took a few moments to process that. Then her smile returned, sweet more than evil.\n\n\"So you're a boob man?\"\n\nI shrugged. \"I'm a holistic man. Different things on different girls can attract me.\"\n\nShe nodded, accepting that surprisingly mature answer. \"Very well, I accept your terms.\"\n\n\"Huh?\"\n\nShe held my hands tight and looked me straight in the eye. In her, I could see a mix of mischief and nerves. She was outside her comfort zone and trying to hide it.\n\n\"I said, I accept your terms.\"\n\n\"What terms?\"\n\n\"I show you my tits for your left nut.\"\n\n#\n\nA lot of things went through my mind in a very short span after my cousin uttered those words. At the top of the list was the belief that she couldn't possibly be serious and was just messing with me...more than she already had been. Hell, I wouldn't put it past her to have schemed this up with Avery, all to get a good laugh at my expense. They'd teased me in the past, but nothing like this and it didn't really feel like a trick.",
        "Then there was the possibility she was serious. What the fuck would that mean? We were cousins. That was kinda off limits, or should be by most people's standards. She'd never shown interest in me and we'd hardly talked at the last couple family gatherings. Was it just some cute, innocent, \"I'll show you mine if you show me yours\" kind of thing? We were a bit old for that. But the idea she might be interested in me for even more than that was both disturbing and enticing.\n\nI was truly torn, wanting something I shouldn't while questioning the sincerity and motives of the offer. I'd hate myself if she was really interested in me and I turned her down, despite the risks. I mean, girls like her weren't exactly throwing themselves at me in college.\n\n\"Well?\" Kaia's gentle prodding got me thinking she was afraid she'd over stepped. And that nudged me to thinking she wasn't just fucking with me. Shit.\n\nI reluctantly extricated my hands from hers and paced for a moment, gathering my thoughts.\n\n\"I'm...I'm not sure what to say.\"\n\nShe shrugged, trying to act nonchalant. \"Say yes, say no. Doesn't matter to me.\"\n\nBut it did. I could hear it in her voice. For whatever reason, she wanted to do this. Maybe she really was attracted to me. Maybe she was just bored and looking for fun. Maybe she just liked doing impulsive, crazy things.\n\n\"How would we do this?\" I said.\n\nI could see the spark of anticipation in the corner of her upturned mouth. \"Let's say that for the rest of our stay here, you can ask to see my tits whenever you want. Only condition is that it's not in front of an inappropriate audience. And I own your left nut. I can do whatever I want with it so long as it's returned to you fully intact.\"\n\nMy imagination went all over the place with that. Seeing her tits on command -- awesome. Letting her...what? What would she do with my left nut? Look at it? Touch it? Take pictures of it? My cock started stirring at the ideas. It was crazy, but damn if it didn't sound like fun. It'd certainly make the rest of the holiday a hell of a lot more interesting.\n\n\"This is crazy,\" I said. \"You know that, right?\"\n\n\"Crazy fun,\" she said, wagging her eyebrows suggestively. She then cupped her tits through her sweater. \"So, is that a yes?\"\n\nI couldn't say no, so, \"Yes.\"\n\nKaia's smile lit up and she offered her hand in a shake of agreement. \"Pleasure doing business with you, cuz. I'm sure we'll both be satisfied.\"\n\nI hoped so. I was also acutely aware that I'd likely be seeing those tits any moment now. And she'd...what? I had no idea.\n\nShe grinned as my eyes drifted down. \"I'm guessing you want a look?\"\n\n\"Sure.\"\n\nKaia wasted no time, grabbing the hem of her sweater and peeling it up. Inch after inch of bare skin was revealed, driving me wild with anticipation, until she reached the bottoms of her breasts. She'd lifted just enough for me to see the under curve and proof of no bra. For their full size, they didn't droop much.\n\n\"That good enough?\" she said, clearly teasing.\n\n\"Uh, no. Keep going.\"\n\nShe melodramatically sighed. \"Very well, perv.\"\n\nKaia didn't leave me waiting long as she quickly lifted the sweater up to her neck. Her breasts bounced free, bared solely for my viewing pleasure. And, damn, was I pleased. They were glorious -- full, maybe a C-cup (at a guess), hanging slightly to each side, and dotted with small pink aureoles puckered almost entirely into very erect nipples. I could see the goosebumps on her skin, making me feel slightly guilty for how long she'd put up with the cold to be here with me.\n\nI looked up and found her watching my reaction intently. Her smile was all I needed to wipe away any guilt over her exhibitionism. She was enjoying this and savoring my appreciation of her figure.\n\n\"Well? Worth it?\"\n\n\"Absolutely,\" I said. I wanted to reach out and feel them, but that wasn't part of the agreement. I should've negotiated better. \"They're amazing. Even better than I'd imagined.\"\n\nShe grinned and shimmied. The way her tits swayed made me weak in the knees. \"And you've spent how much time imagining them, exactly?\"\n\n\"No comment.\"\n\n\"Uh huh. Perv.\" There was no malice in her comment. Rather, I think she really enjoyed the idea I'd been hot for her.\n\nKaia lowered her sweater. \"Now, I want to examine my shiny, new left testicle.\"\n\nUnsure what she had in mind, I stood there waiting. Kaia stepped forward and reached out for my crotch. She might have been going for my balls, but there was no way she could miss my erection in the process. Her hand didn't linger there, though, clearly fishing around for \"her\" testicle. I could hardly believe this was actually happening.\n\n\"Can't find it through your jeans,\" she said. \"Guess I'll have to try another way.\"\n\nKaia unbuckled my belt and began unzipping my jeans. Her focus was entirely on my crotch, never looking up at my eyes. I just watched in eager fascination, wondering just how far she'd take this. Honestly, at that point, I'd have let her do damn near anything she liked.\n\nOnce she had me unzipped, Kaia stepped in close such that our bodies touched. I was acutely aware of her breasts pressing into my chest. She was only a couple inches shorter, so when she looked me in the eyes it wasn't an awkward angle for either of us. Maintaining that eye contact and a neutral expression, she reached into my pants and began groping my balls through my boxer briefs. I craved more contact with my cock, but other than an incidental brush against it she was careful about where her hand went. After grasping both balls, she separated the left one and rolled it around in her fingers for a bit. \n\n\"There's my nut,\" she said with a grin. \"Feels nice and firm. Good size. Think I got a fair bargain.\"\n\nI didn't ask how many she could compare it against. More than the pleasant sensation of her touch, I just enjoyed the fact she had her hand in my pants and we were somehow cool with this arrangement. I was cool with it, right? Would I end up regretting it? I couldn't think past hot girl fondling my testicle. \n\nThere was something captivating in her eyes, too. Maybe she was trying to get a read on me, whether I was actually cool with this or reluctantly pressured. Just a bit of uncertainty on her part\n\n\"Show me your tits again,\" I said, getting the words out through my dry mouth. \n\nKaia grinned. To my disappointment, she removed her hands from my pants to hike her sweater back up. However, to my great pleasure, she took it all the way off. While not revealing anything she hadn't already shown me, this act felt distinctly different from merely flashing. Kaia's eyes had a bit of challenge in them, as if daring me to touch her breasts mere inches away.\n\nShe held her sweater in one hand and reached back for my crotch with the other. This time Kaia ran her fingers along the waistband and then just inside it. Her fingers were cold, but hell could freeze over before I showed any sign of discomfort.\n\nInch by inch, she reached further down into my underwear. Her fingers brushed alongside my cock, making no effort to diminish that contact, but neither did she grasp or otherwise intentionally stimulate me. She knew I was hard as a rock.\n\nEventually, the tips of her fingers wrapped around my scrotum. Just as she had outside my underwear, she gently massaged my left nut between her fingers and thumb. Her attention was unhurried and methodical.\n\n\"All mine,\" she said, winking at me.\n\n\"What are you going to do with it?\" I said.\n\nShe shrugged. \"Haven't decided yet. I've got a couple days.\"\n\nI'm not sure if anything else would have happened then and there, but the sound of a door opening into the breezeway below startled both of us into frantic coverup mode. Kaia's hand was out of my underwear in a flash and she wrestled with her sweater to get it both right-side out and over her head. I hastily adjusted myself in my twisted underwear and zipped up and buckled my belt.\n\nWe were decent just as the first footsteps could be heard coming up to the Closet. Kaia and I shared wide-eyed stares and grins of relief, knowing we'd been extremely close to getting caught. She was running fingers through her hair when my dad poked his head into the room.\n\n\"Hey,\" I said, trying to sound bored.\n\n\"Just checking to see how things were coming along,\" he said. His gaze took in the stacks of boxes and then lingered on Kaia for a moment. Was he checking her out, noticing her very conspicuous pokies? \"Hi Kaia.\"\n\n\"Morning Ken,\" she said. With so many aunts and uncles sharing the same last name, the cousins had taken to calling adults other than their parents by first name. It still sounded odd to my ear hearing her doing so with my dad.\n\n\"Yeah,\" I said. \"It's a mess, so a little slow going. Kaia's helping, though.\"\n\nHe seemed to consider that a bit longer than I liked. Did he suspect we were up to no good? If only he knew...\n\n\"Okay,\" he said. \"Well, I'll leave you to it. I'm heading out to bring in some more firewood.\"\n\n\"Have fun,\" I said as he nodded to both of us and retreated back down to the breezeway.\n\nOnce the door opened and closed, Kaia and I both burst out laughing. \"Fuck, that was close,\" she said. \"Think he suspected anything?\"\n\n\"I hope not,\" I said. \"God, that would have been a disaster.\"\n\n\"Maybe,\" she said, giving a little shrug. \"Maybe not.\"\n\nI raised my eyebrows and she laughed at my reaction. \"Don't worry,\" she said. \"I'm not going there.\"\n\n\"Thank goodness.\"\n\n\"Well, I doubt he suspected anything,\" she said. \"Didn't hurt that your boner shrank faster than a popped balloon.\"\n\nGod, this girl was blunt. And she'd been watching the bulge in my pants?\n\n\"Not that he'd have noticed,\" I said. \"Not when you're flashing your high beams like that.\"\n\nKaia looked surprised, then gave me an approving nod. She looked down and ran her fingers over her protruding nipples. \"Think he looked?\"\n\n\"Hard not to.\"\n\n\"Well, maybe he just assumed I was cold,\" she said. \"Considering it's fucking freezing in here.\"\n\n\"Gotta work harder, then.\"\n\nKaia waved me off. \"You can work harder. I'm going to go warm up elsewhere.\"\n\nI put on a mock pout, though I was a little disappointed. \"What? Bored with your left nut already?\"\n\nShe gave me another of those devious grins. \"No, but I suspect you'd get uncomfortable staying so...up...if I kept playing with it.\"\n\nI wanted to suggest she could cure that by giving me some relief. Whether it was lack of confidence or just interpreting that she wasn't intending this game to go that far, I held back the comment.\n\n\"If you say so,\" I said, leaving it hanging. \"But I want another look.\"\n\nKaia didn't hesitate, lifting her sweater once again to give me a nice, long view. \"Perv. Just can't get enough, huh?\"\n\n\"Never.\"\n\nShe lowered her sweater, smoothing it down in such a way that made her breasts move tantalizingly under the fabric. \"Well, I'm sure you'll find ways to get more looks.\"\n\nI grinned. \"Like now?\"\n\nKaia rolled her eyes. \"Later. I'm out.\"\n\n\"Fine. Boor.\"\n\nShe started for the stairs, then hesitated and turned back to me. \"One thing.\"\n\n\"Yeah?\"\n\n\"No jerking off.\"\n\nI felt myself blush a bit at that. \"Uh. Not saying I was going to, but why not?\"\n\nHer eyes sparkled. \"Because I own that left nut, which means half your spermies are mine. And I'll be damned if I allow any of my little swimmers to be sacrificed to a tissue or down the shower drain or wherever you feel like sending them.\"\n\nHoly balls. Did that mean she had something else in mind for my cum? My cock was already starting to swell at the prospect. After all this, I was going to be sorely tempted to find some relief, and now I couldn't.\n\n\"You're evil, you know,\" I said.\n\n\"Close.\" She ran her finger under her breasts, highlighting the word \"Naughty.\"\n\n\"Like I was saying...\"\n\nKaia turned, snagged a plastic bag out of one of the open boxes, and left with a wiggle in her butt, knowing I'd be watching. Evil and naughty. And what had been in the bag? I glanced in the box and just saw more Christmas decorations. \n\nIt was going to be a long and hopefully fun day.\n\n#\n\nThe rest of the morning was uneventful. I finished the work in the Closet and then got roped into helping with a few other minor chores. When I was finally free and set about looking for Kaia, I found that her and Avery had been snared by the little kids to play board games. Sitting on the floor, Avery had her back to me but Kaia spotted me a gave me a quick smile. Her eyes widened just for a fraction of a second, letting me know she knew exactly why I'd ventured by even if it wasn't a good time. I watched on for just a minute before hurrying off to avoid being drafted into playing.\n\nAfter lunch, Kaia caught my eye and gave a subtle nod. My heart started pounding as I moved to leave the living room and \"bump\" into her in the hallway that led to grandma's bedroom and the Old House's first floor bathroom. While the house was noisy with kids and a football game on the television, the hallway was a dimly lit respite from the hubbub.\n\nKaia was just ahead of me and didn't acknowledge that I was following her until she reached the bathroom. She stepped in the doorway, then turned to face me. With a quick look up and down the hall to be sure we were alone, she quickly reached out for my crotch and gave my left nut (and a good bit of the rest of my cock and scrotum) a squeeze.\n\n\"Geez, Alex,\" she said. \"Hard already?\"\n\nI shrugged. \"You have that effect on me.\"\n\nKaia seemed to consider that as she let go and backed up a step into the bathroom. \"And you didn't even see the girls.\"\n\nI glanced down. \"Trust me, they look spectacular even under the sweater.\"\n\nShe grinned. \"So you don't want a peek?\"\n\n\"I didn't say that.\"\n\nKaia gave a quick laugh, then pulled up her sweater. Still fantastic, nipples still quite erect. Rather than the quick flash I'd expected, she let her fingers cup and play with her tits.\n\n\"You still behaving?\" She said. \n\nIt took me a moment to realize what she meant. I patted my crotch. \"Not a drop spilled.\"\n\n\"Good,\" she said, dropping her sweater. \"How about you take me and Avery out on the snowmobile?\"\n\nWay to change the topic, there, cousin. I raised an eyebrow. \"Not just you?\"\n\nShe chuckled, shaking her head. \"I don't think that would be safe.\"\n\nInteresting. I agreed and she said they could be ready in ten minutes or so. Time enough to get some warmer clothes on. \n\n#\n\nThe girls found me out by the shed where I'd already gotten the snowmobile out and had started tying on the tow rope for the inner tube. One of the uncles had clearly gotten everything tuned up and inflated before we'd arrived at the cabin, making this a lot easier. \n\nKaia, to my surprise, was still wearing leggings under her jacket. At least she had boots, gloves, and a hat, but I expected her legs would be freezing in minutes. Avery was a little better dressed with jeans, so long as they didn't get wet. \n\n\"Dressed warm enough?\" I said as they arrived. \n\nKaia looked down. \"Two layers. And one's thermal. And if that's not enough, you'll have to keep me warm.\"\n\nI shot her a surprised and warning look. Avery seemed to have a similar reaction, but Kaia just brushed us off. They donned helmets and we were ready to go. \n\n\"Wanna take the tube first?\" Kaia said to Avery. \n\n\"Sure, whatever.\" Avery then pointed firmly at me. \"Don't get too crazy, though.\"\n\nI nodded and took the driver's seat. Kaia settled in behind me, wrapping her arms around me with a bit more intimacy than typical when riding. I looked behind us to Avery on the tube and she gave a thumbs up. \n\nRevving the engine, I eased us forward. It had been a year, so I needed to reacquaint myself with the machine. That and the terrain was a little rough on the way down to the lake. Once we were safely on the flat, frozen surface, I opened the throttle a bit and took us zooming across. It wasn't a huge lake, maybe half a mile wide, but there were only a handful of properties bordering it. I saw only a few other tracks and footprints in the otherwise pristine snow. \n\nAfter a bit, Kaia worked her hand down to my crotch. Between her glove and my jeans and long underwear, I couldn't feel much. But just the knowing was good for something. \n\nOn finishing a loop around the lake, I stopped by the cabin to make sure the girls were still doing well. \n\n\"Little fast there at the end, sport,\" Avery said, though she didn't sound upset. \n\nKaia waved aside the complaint. \"I thought it was a perfect ride -- noisy and fast, just how I like my sex.\"\n\nI'm sure my eyes popped at that. Avery's certainly did, but her attention was on our cousin who was grinning wildly under her helmet. \n\n\"K! Geez!\" Avery groaned. \n\n\"What? Just being honest.\" Apparently I wasn't the only one Kaia enjoyed needling. \n\nAvery rolled her eyes. \"And here I thought you liked it wet and sloppy, which is exactly how I'd expect this next ride to be if you're driving. I'll sit it out, thanks.\"\n\nIf my eyes had bugged at Kaia's comment, I was speechless at my sister's retort. I couldn't recall her ever talking like that. Not around me, anyway. \n\n\"Suit yourself,\" Kaia said before I could object. \"We'll just do a quick loop, then you can take Alex for a ride.\"\n\nAvery rolled her eyes, then nodded and unlatched the tow line, dragging the tube away. I let Kaia take the driver seat and settled in behind her. I placed my hands on her hips and left a clear gap between us for my sister's benefit. After showing her the simple controls, Kaia eased forward and soon had us cruising at a good clip. \n\nOnce away from the cabins, I slid forward and pressed my crotch into her ass. I wasn't exactly aroused, but like her hands had been it was more the implied gesture. She grabbed one of my hands and pulled it up to her chest before quickly getting both hands back on the handlebars. I was more than eager to accept her invitation to feel up her tits, despite not feeling much through all the layers. Did this mean I'd be welcome to feel her up the next time I got to see her topless? Okay, now I was getting hard. \n\nKaia seemed to enjoy driving, doing a little side to side action. About three quarters of the way around the lake, she veered off toward shore where there was a small inlet. That hid us from Avery's line of sight, as well as probably most of the other cabins. \n\nKaia came to a stop and turned back to me. \"Hop off for a moment.\"\n\n\"Okay,\" I said, unsure what she had in mind and hoping she didn't ditch me here\n\nKaia, certain she had my attention, took off her gloves and unzipped her coat. With a grin at my expression, she then lifted her sweater to show me her tits. Yeah, right out on the lake in sub freezing temps. Her nipples looked like pebbles, so hard among the goosebumped flesh. \n\n\"Nice,\" I said. \"But you're nuts.\"\n\n\"Naughty,\" she said, pulling everything back into place. \"Get it right.\"\n\n\"Yes ma'am.\"\n\n\"And get back up here. I need my nut keeping my ass warm.\"\n\nI did as she asked, spooning in tight behind her. I immediately put my hands over her breasts and felt her shake her head.\n\n\"Gonna give your sis a show?\"\n\n\"I'll move them when we get closer.\"\n\nShe chuckled. \"If you must. Just to be clear, though, I'm only allowing this while I've got coats and gloves for protection.\"\n\n\"Protection? From me? I'm hurt.\"\n\n\"Yeah, from you. Perv.\"\n\nKaia laughed, gunned the throttle, and had us back in the open and heading for the cabin. I lowered my hands and scooted back just a little. I was still hard, but didn't think Avery could notice under the hem of my coat.\n\nAvery was hugging herself and jumping around for warmth. \"'Bout time. What took ya?\"\n\nKaia pulled off her helmet as she dismounted. \"Just stopped for a quickie. Why, you in a hurry?\"\n\nAvery rolled her eyes. Again. I did my best to act shocked at the suggestion, despite the grain of truth.",
        "\"I'll let you go with Alex,\" she said, gesturing at the driver seat. \"He's got a firm grip. Knows how to handle a sweet ride.\"\n\n\"Have you been hitting uncle Frank's special eggnog or something?\" Avery said. \"I swear...\"\n\nThat said, my sister got on in front of me. I gave her considerably more room and didn't let my hands anywhere remotely near her small breasts. That I consciously thought about it, I blamed entirely on Kaia. Our naughty cousin, seeing that I was the only one looking back at her, gave me a thumbs up followed by a hands-on-the-hips fucking gesture. Good grief did that girl have a dirty mind.\n\nAvery was a little more tentative with the snowmobile, but soon got comfortable with it and had us zipping around the lake. I held on to her hips lightly and did my best not to slide forward. Every now and then we got rocked around and I slid forward or backward. The contact was innocent enough under the auspices of the activity, yet my mind kept going there. Again, I blamed Kaia.\n\nBy the time we got back, two older cousins and their posse of offspring had arrived. The kids had heard the snowmobile and asked to play. I was soon doing low-speed trips around the property while kids rode either on the tube or behind me in the careful grasp of an adult. Kaia and Avery, both claiming to be in need of hot chocolate, left me to entertaining and my wild imagination.\n\n#\n\nFollowing the afternoon's entertainment, things quickly shifted to dinner prep and consumption. I caught a few glimpses of Kaia as she helped, but other than a few knowing looks nothing else transpired between us. The consolation prize was enjoying her continued braless look in that Naughty sweater.\n\nAfter dinner, I'd hoped to find an excuse to get away from the crowd, preferably with Kaia. Her and Avery were joined at the hip, however, and they drafted me into games with some of the other adults while the kids got out their last burst of energy and were put to bed. It turned out to be fun and there were times when we were practically in tears with laughter. Kaia, despite her sweater's slogan for the day, behaved herself and didn't make any suggestive comments that would rate above a PG-13.\n\nGrandma was a good sport, staying up late with everyone else, but when she started nodding off after eleven o'clock the game was called. I followed the girls over to New House while my parents stayed behind to finish a last pick up. Kaia leaned into Avery and whispered something, prompting giggles between the two of them. I had a sneaky feeling it was at my expense, but I couldn't imagine what it would be.\n\nAs we reached the second floor, Avery turned to me. \"Thanks for taking us out on the snowmobile.\"\n\n\"Yeah,\" I said, slightly surprised at her gesture. \"It was fun.\"\n\nShe glanced at Kaia, then back to me. \"You can use the bathroom first.\"\n\n\"Okay, sure.\" I guess I was getting ready for bed. I was a night owl by nature, so I'd probably be up reading for a while. Getting alone time with Kaia looked impossible with Avery around and squeaky stairs.\n\nI used the facilities, brushed my teeth, and headed up to the Observatory. The girls' rooms were both closed with light creeping out from underneath. Probably getting changed for bed. I slowed in front of Kaia's Red Room, but she didn't pop out just in time to give me one last show.\n\nThe drafty attic was easily ten degrees cooler than the rest of the house. Despite that, I still stripped down to my underwear, clicked on my bed's reading lamp, and turned off the main light. After the events of the day, I knew sleep would be difficult to come by, so I tried to lose myself in a book. It almost worked, right until I heard the stairs squeak.\n\n\"Alex?\" I heard Kaia say softly from the top of the steps. There was no door to the attic, just a half-wall around the stairs so people wouldn't fall down. Her head poked up over the wall. \"You decent?\"\n\n\"Yeah.\" More or less.\n\n\"Bummer.\" \n\nShe climbed the last step and swung around into the room. Even in the dim light, I could tell she was still braless under her oversized t-shirt. It didn't fit as snugly as her sweater had, but I suspected I wouldn't have to wait long to refresh my mental image of her breasts.\n\n\"Sorry,\" I said. \"I'm topless, though? That count for anything?\"\n\nKaia gave a laughing snort. \"Ha! I'm sure you've got a nice chest and all, but...\"\n\nI set my book aside and raised an eyebrow at her. \"Oh, and I suppose you could do better?\"\n\nShe set her hands on her hips. For the first time, I got a good look at her bare legs. With her wearing leggings all the time, I had a very clear idea as to their shape, but there was something about seeing the expanse of bare skin that got my motor going. Again. Maybe it was the tease of being able to follow those legs up to what was hidden just beneath the hem of her shirt.\n\n\"As if we need to answer that question,\" she said.\n\nI gave her a pointed, prove it look. Kaia sighed and lifted up her t-shirt. To my surprise, she took it completely off. With no door and just one flight of stairs between us and Avery, there would be no hiding if my sister decided to pop up and see what was going on should she hear voices.\n\nConcerns about what might happen were shoved down by other thoughts of the sort of things that could happen with the immediate company. The nearly naked girl standing above me was clear evidence of that. Honestly, she was a vision of utter cute and sexiness, wearing only a black thong and oversized fuzzy socks. Give her a pair of glasses and I'd have probably cum on the spot.\n\nShe grinned at my expression. \"I rest my case.\"\n\n\"Aren't you a little worried about Av coming up?\"\n\nKaia stepped seductively closer to the end of my bed. It was easily the sexiest thing I'd ever seen and she probably knew it even without the rapidly rising tent in my sheets.\n\n\"No,\" she said simply. Without further explanation, she left me to wonder what she meant by that.\n\n\"Anyway,\" she continued, \"I just wanted to make sure my left nut was properly tucked in for the night.\"\n\nUh huh. I smiled and patted my crotch atop the comforter. \"All safe and snug. Or did you need to check for yourself?\"\n\n\"I'd better check.\"\n\nKaia, now standing beside my bed, leaned forward. It had to be intentional, giving me a perfect view as her breasts dangled beneath her. It took all my will not to reach out and cup them. She grinned, clearly reading my expression, and then began pulling all my blankets down until my underwear was in view.\n\nShe tisked. \"My nut will not be constricted in such clothing while it sleeps. If you don't mind?\"\n\nWell, she had already touched everything down there. There wasn't much left to hide. I hooked my thumbs in my waistband and pulled them off, dropping them casually on the floor.\n\nKaia, now having a clear view of my cock for the first time, gave me a good looking-over. Under the circumstances, I was actually glad rather than embarrassed to be fully erect. I didn't know what her experienced with other guys was, but I was maybe a bit above average and hoped she wasn't disappointed.\n\n\"There's my nut,\" she said, shifting as she remained leaning over. \"Still full of all my cum?\"\n\n\"Somehow, yes,\" I said. Maybe not for long?\n\nKaia reached out and took my scrotum in her hand, causing my cock to flinch and bob. She quickly found \"her\" testicle and rolled it around playfully between her fingers. It felt oh so nice, but it wasn't what I really needed. And she pointedly refused to touch my cock.\n\n\"Good,\" she said. \"Very good. Unfortunately, much as I enjoy playing with my new toy, I do need to get some sleep.\"\n\n\"Boo.\" It did sound like she was going to leave me hanging. Literally and painfully. \n\nShe gave me a half-apologetic look. \"Just a quick goodnight kiss.\"\n\nKaia leaned over the rest of the way, her hair dragging deliciously across my cock. She lifted the left testicle to her lips and planted a dainty kiss upon it. I'd reigned in my expectations, but she defied them a little when she proceeded to wrap her lips all the way around the testicle and give it a nice little tongue massage. Now that was some fucking incredible imagery.\n\nAnd just that quick, Kaia had released me and was standing upright, breasts bobbing in the most distracting of ways. She snatched up her t-shirt and wiggled back into it, making sure I watched the entire process. I did my part to \"fight back\" by not covering myself up. Two could play the teasing game, even if I was a mere novice next to her.\n\n\"Okay, then,\" she said, almost dancing her way back to the stairs. \"Sleep well.\"\n\n\"You too,\" I said. \"And you know where your toy is, should you need to check up on it in the middle of the night or something.\"\n\nHer eyes sparkled, making me wonder if she might just take me up on that offer. She blew me a kiss, then vanished.\n\n#\n\nI woke the next morning, Christmas Eve, with a painful erection and the fleeting impression I'd been dreaming of doing naughty things with my naughty cousin. Gee, no surprise there. I touched myself, picturing how she'd looked last night, nearly naked and then leaning over my to suck my nut.\n\nUgh. I threw off the blanket and let the shock of cold air bring me back from the edge. I'd play Kaia's masochistic game and not give myself relief. I needed to get my mind on something else, though.\n\nI crawled out of bed and reached for my underwear. Nah. I was feeling...what? Brave? Daring? I tossed them toward my suitcase and crossed to the far end of the room buck naked. There, I looked out across the snow-covered lake, serene in the pre-dawn orange glow.\n\nI just enjoyed the view until the cold started getting to me. My erection had finally diminished to a mere chubby, soft enough to pee which I desperately needed. Since I was heading down to the second floor bathroom, I figured I might as well grab a shower. I snagged my towel and, still feeling a bit daring, just wrapped it around my waist. Normally, I'd have brought my change of clothes for the day, but a part of me was hoping Kaia would bump into me wearing just the towel. If I didn't take clothes, that'd give me two opportunities.\n\nI paused at the top of the steps. Everything below me was silent. Struck by another wild impulse I blamed entirely on Kaia's bad influence, I took my towel off. Avery could step out of her room at any moment and catch me, but so too could Kaia.\n\nDick swaying awkwardly as I snuck down the steps, trying to avoid the squeakiest spots, I strained for any sounds that could indicate I'd be caught. Between the squeaks and my thudding heart beat, I probably didn't have a chance. Step by step I descended, certain that the further I got from safe retreat, the more likely I was to get caught. Then I reached the hallway, empty save for the girls' closed doors and the open, dark bathroom. Relief and disappointment hit in equal measure.\n\nI made it the last few steps, then closed the bathroom door behind me. It was exhilarating. Would I do it again tomorrow? Maybe. For now, I just settled into auto pilot, taking a leak and climbing into a much needed hot shower.\n\nI was rinsing shampoo out of my eyes when I thought I heard a door. One of the girls' rooms? But it sounded closer, like the bathroom. That got my heart pounding again. It was an old door that didn't have a lock, so someone could have come in. I hurriedly got the soap out of my face and then poked my head around the opaque curtain.\n\n\"Morning, Alex,\" Kaia said from where she sat on the toilet. I could hear her peeing, though with her hands across her lap I saw nothing else, just the smile across her bleary face.\n\n\"Shit, sorry,\" I said, ducking back. Apparently she wasn't much of one for personal privacy, or had she just decided we were well past that now? And why was I apologizing when she'd barged in on me?\n\n\"Relax,\" she said. \"Just really had to go. And watch out, I'm flushing.\"\n\nI stepped back from the showerhead and pointed it at the wall, narrowly avoiding the brief shot of scalding water. The curtain pulled back behind me and Kaia poked her head around, making no effort to hide the fact she was checking me over from head to toe. I decided not to make an issue of it, instead stepping back under the moderating spray and turning so she could see my frontside.\n\n\"Did my nut get a good night's sleep?\"\n\n\"Good enough,\" I said.\n\nHer eyes drifted down to my swollen but not erect cock. \"Mind if I give it a...personal check?\"\n\nI shrugged. Perhaps still feeling bold after my naked adventure, I said, \"You're welcome to come in and check.\"\n\nShe raised an eyebrow at that, then grinned. \"My clothes would get wet.\"\n\n\"So take them off.\" I met her gaze, challenging. Just how far would she take this? How far was I willing to risk it, since Avery might very well be able to hear us talking over the shower should she wake and step into the hall?\n\nKaia looked back to my crotch and licked her lips. \"But then you'd see more of me than we negotiated for.\"\n\nI smiled. \"So make me an offer.\"\n\nShe barely hesitated. \"You can see my pussy, and I get your right nut.\"\n\nI had no problem with that, but this time around I wasn't so quick to accept her offer. Now was the time to negotiate.\n\n\"And I can touch your breasts.\"\n\nShe gave me an evil grin. \"Playing hardball, huh? Okay, I'll let you feel up my tits, but only in the shower. Deal?\"\n\nI got the sense she was both eager to expand our game while still maintaining a thin veneer of restraint from letting it get out of hand. That was fair. I still felt I was getting a very nice deal.\n\n\"Deal.\"\n\nKaia backed up, letting the curtain fall back into place. I had just a moment to myself to reflect on how amazing and utterly foolish this was. My dick was firmly in control of my decision making, though, so I happily resigned myself to going with whatever happened.\n\nMy cousin pulled the curtain back and stepped into the tub. She'd shed her t-shirt and thong, letting me finally see her in all her naked glory. Admittedly, I couldn't see all that much between her legs from this angle, but it was perfectly clear that she was clean-shaven down there. I could just make out the slit that disappeared between her legs.\n\nKaia gave me a cute little leg-cocked pose, then turned and showed me her backside. Her ass was cute, as long as it wasn't being compared against my sister's tight, curvy little number. After giving me a look, she spun back around.\n\n\"Satisfied?\"\n\n\"Very.\"\n\n\"Good, because I'm ready to claim my other nut.\"\n\nKaia stepped into my personal space, nearly nudging into my cock which was now pointing up at her midsection. She reached down and cupped both of my balls, one with each hand, clearly comfortable now with this arrangement. I shifted just enough to share the warm spray with her.\n\n\"Lefty missed you,\" I said, teasingly. \"And Righty is pleased to join in. \"\n\n\"As well they should.\"\n\nI belatedly remembered that I'd negotiated touching rights with her tits. Since it was limited to our time in the shower, I figured I'd better get to it. I reached out and cupped one of her lovely breasts, getting a feel for its heft and pliability.\n\nKaia just smiled and let me play with her. She even gave an appreciative sigh when my fingers danced across her hard nipple. When I brought my other hand to the party, she began massaging my balls even more assertively. Her fingers even pressed against the root of my erection through my scrotum, driving me to wish she would extend her attention to my cock.\n\n\"You're a perv, you know,\" she said, her voice soft as her eyes grew heavy.\n\n\"You started it.\"\n\n\"You didn't say no.\"\n\nI grew bolder, pressing her breasts together and watching as the water drops disappeared into her cleavage. She grasped my entire scrotum and tugged, not quite to the point where it would hurt.\n\n\"Why are we doing this?\" I said. It might not have been the most appropriate thing to bring up, not if I didn't want her to have second thoughts. I guess I wanted to know, though, since this wasn't the Kaia I thought I knew.\n\nHer eyes opened and she gave me a hard look. Her hand didn't stop, though. \n\n\"Would you rather we not?\"\n\n\"I didn't say that.\"\n\nShe nodded. \"I'm not sure. Guess I was just feeling impulsive and daring. And horny. Fuck, I've just been so horny lately. And you're cute.\n\n\"I didn't have this planned out, if that's what you're asking. Maybe I just thought we'd flirt and torment each other for a couple days. Safe, since we're cousins and it wouldn't go anywhere.\"\n\nIn a way, hearing that was disappointing. I liked Kaia, and not just for the last couple days. But she was right, we couldn't go any further. Anything that happened would just be a one-off thing that stayed between us.\n\n\"Fair enough,\" I said.\n\nI leaned forward while lifting one of her breasts, planting a kiss atop her nipple. Kaia's grip on my scrotum tightened, but she let out a sigh. \"I don't remember that being part of the terms,\" she said, clearly not bothered when I kissed it again.\n\n\"I'm just touching you,\" I said, then wrapped my lips around her nipple and sucked gently.\n\n\"I suppose. Perv.\"\n\nFor a couple minutes, I suckled and kissed and licked her breasts. Kaia never let go of my balls, though she did switch to holding me one handed so she could brace against the wall with the other. My attention to her nipples was clearly getting to her.\n\nShe was the first to finally separate us, releasing her grip while gently stepping back from my grasp. Her face and chest was flush from more than just the warm water. There was heat in her eyes, too, and I wondered if she was losing her self-control.\n\n\"I want your cum,\" she said, voice surprisingly steady for as shaky as she looked. \"My cum. But I'm not touching anything other than my nuts. Clear?\"\n\nI got it. Not quite what I'd hoped for, but still hotter than hell and I'd get the relief I so desperately needed. I nodded in agreement.\n\nKaia reached back for my balls, holding them gently. I took my cock in hand and started stroking it. Her attention was solely on my masturbating. Ordinarily, I'd have been mortified to have someone watching me do this, but knowing she wanted it flipped it into a huge turn on. Having her naked in front of me and holding my balls only made it that much easier.\n\nI wanted to take my time and put on a good show, but after all of our teasing my cock was on a hair-trigger. \"I'm close,\" I said, giving her fair warning. I didn't know what she was expecting from my climax, but at the moment it'd end up all over her tummy.\n\nKaia, maintaining her grip on my balls, knelt before me. My cock was now pointed at her face and I wondered if she intended for me to give her a facial or shoot my load down her throat. I kept on stroking, increasing my pace as I hurtled toward the summit.\n\n\"On my tits,\" she said, glancing up at me for only a moment before returning her attention to my cock. \n\nHeeding her request, when the moment came I aimed lower. Two days of pent up arousal resulted in the delivery of a massive load that splattered across her tits and shoulder. I stroked out a second and third squirt before I was tapped save for the remaining dribbles. Through it all, Kaia maintained her gentle hold on my balls. When the last was out, she patted them playfully and withdrew her hand.\n\n\"That was awesome,\" she said, standing. I had to admit, she looked incredible standing there with my cum running down her chest. She watched it as well, then dipped a finger in one of the bigger globs and brought a little taste to her mouth. \"Not bad.\"\n\nI rinsed off my cock, then made way for Kaia to step fully under the spray and rinse off. I was mesmerized by every little move her body made. \n\n\"Glad you liked it,\" I said. \"God knows I needed the relief.\"\n\nShe smiled knowingly. \"I had a feeling. And this is supposed to be fun, not torture. Not much, anyway.\"",
        "\"How about you? I mean, feel free if you need to...\" I could hardly believe I was proposing it, but at this point it didn't seem like topic was really off-limits.\n\nKaia gave me a sly smile. \"Oh, I've already 'relieved' myself a couple times.\"\n\nI raised my eyebrows. \"Oh really? Dreaming about your nuts?\"\n\nKaia ran her hands seductively over her breasts, then down toward her crotch. \"Your nuts. Your cock. Your mouth on my tits. Your tongue sliding up my dripping wet slit.\"\n\nAs she said that, Kaia ran her fingers up along her pussy. She placed a leg up on the side of the tub, giving me my first view of the pinkness between her folds. I couldn't help but lick my lips, imagining just what that might taste like.\n\n\"Maybe your hard cock, sliding between my lips. Then plunging deep inside my pussy, filling me like no other.\"\n\nKaia slid two fingers inside, buried all the way. She moaned, echoing my own thoughts at the mental imagery. Whether she'd actually fantasized about me like that or not, watching and listening to her was getting me hard again.\n\nThen she abruptly pulled out her fingers and stood up straight. Her entire demeanor changed from uncontrolled lust to ho-hum. She gave me a quirky smile and shrug.\n\n\"Maybe it was something like that,\" she said. \"But, like I said, I'm good.\"\n\n\"You lie.\" I could tell, despite her best attempt to tease me, she was horny as fuck.\n\nThat evil grin returned. \"Maybe, but you won't know since you should be getting out and dressed before Av figures out we're both in here. Now, excuse me while I get cleaned up.\"\n\nIt was all teasing, but she was right and I knew she wasn't going to do anything more right now. Not with me, anyway. With Kaia, it had been about one-upping each encounter, likely leaving each of us wanting more. We still had two days to go. I could endure...\n\n\"You'll be thinking about me,\" I said as I stepped out.\n\n\"You'll be obsessing over me,\" she quipped back.\n\nI sighed and let the curtain fall back. I toweled myself off, half expecting her to change her mind and call me back, but she didn't. I restrained myself from going back for another look.\n\nDry, I wrapped the towel around my waist and let myself out into the much cooler hall. Just as I closed the door, Kaia's bedroom door opened and a bleary-eyed Avery stepped out. Huh?\n\nShe looked up at me and was clearly startled. Was that because of me only wearing a towel? Or having come out of the bathroom where the shower was still running? Or for having caught her coming out of Kaia's room?\n\nMy train of thought was interrupted when it dawned on me what she was wearing. Much like Kaia, Avery was wearing only a thin shirt and panties. In my twin's case, it was a pink tank-top and lacy blue panties. I couldn't recall having ever seen her walking around the house wearing that little when we still lived together. I also tried really hard not to check out the way the tank-top perfectly conformed her small breasts.\n\n\"Looking for Kaia?\" I said, taking control of the exchange.\n\n\"Uh, yeah.\" At least she hadn't freaked about me seeing her in so little. Like I could talk...\n\nI nodded backward. \"She's in the bathroom.\"\n\nAvery gave me a suspicious look. \"And what were you doing in there?\"\n\nI shrugged, trying to act like it wasn't a big deal. \"Just finished up my shower. She wanted me to leave the water running so it wouldn't cool down.\"\n\n\"While you were in there?\"\n\nI gave her a \"what can you do\" look. \"Yeah. She doesn't seem to have much respect for personal space.\"\n\nAvery seemed to almost accept that at face value. Whether it worked or not, I had no idea and no intention of letting the conversation go on any longer.\n\nI said, \"Anyway, I'm freezing, so I'm going to get dressed.\" \n\n\"Right,\" she said, finally looking down at my lack of attire. \"Wouldn't want to show up to breakfast in a towel.\"\n\n\"No.\" I took one last look at her, this time fixating a bit on her bare legs. She might have been bordering on skinny, but what she had was toned. That came from years of track and cross country. From the look of it, instead of gaining the freshman fifteen, Avery had lost another couple percent of body fat.\n\nI hurried upstairs to dress, all the while wondering if the girls had spent the night together and, if so, what did that mean. They couldn't possibly be...? Nah. I knew Avery was into boys and, well, now I knew for sure about Kaia. Overactive imagination, I decided. Still, it was a fun imagination.\n\n#\n\nChristmas Eve left me little other opportunity to have any fun encounters with Kaia. The girls took off late morning with my mom, Aunt Christy, and grandma to go do some shopping in the one little town about twenty miles from the cabin. I was drafted into kid entertaining for a while, then managed to get away in the afternoon to watch some football.\n\nLate afternoon was the time for everyone who wasn't part of food prep to stay the hell away from the kitchen and dining room. We'd established a tradition of having our biggest formal meal on Christmas Eve, since the kids tended to be wired or wiped for all of Christmas Day proper. It wasn't that we didn't have nice meals then, too, they were just less formal. Thankfully, instead of getting assigned to the kids table this year to supervise, I got to sit in the big formal dining along with Kaia, Avery, and several of the adults. The parents with little kids moved to what used to be just the kids tables (card tables in the living room) and wrangled that crew. It was nice, but again all I managed with Kaia was a couple of teasing looks.\n\nThe evening was all about grandma and tradition. She liked singing carols in front of the living room fireplace. It was one of those things I'd rather have skipped but did anyway because it was expected. We turned down the lights, setting the mood with just the crackling fire and lights from one of the secondary Christmas trees. \n\nAfterward, the little kids were all sent off to bed and I retreated to the New House with the girls. It still wasn't too late and I was optimistic, but I couldn't think of a good way to separate Kaia from Avery. Before I could come up with a plan, my parents came in from the breezeway and asked if we were all up for a movie. Kaia immediately said yes, and Avery and I soon agreed. \n\nMy dad fired up the old TV in the New House's living room and put A Christmas Story in the DVD player. Yeah, another semi-official tradition. My parents took the recliners and I got the couch with the girls. Kaia positioned herself in the middle, which I liked, and then dragged a blanket off the back of the couch to huddle under. It was big enough for the three of us and, after some teasing, she agreed to share.\n\nI was distracted from the movie by the close proximity to Kaia. She tucked a foot under herself and used it to poke my leg. I started rubbing it under the blanket, which seemed to satisfy her for a while. At about the halfway point in the movie, she adjusted her position, kicking her legs out to the coffee table and leaning back a little more in my direction. Not a minute later, I felt her hand work its way across my lap and over my crotch. I think I was fully erect by the time she found my balls through my jeans. Dammit, jeans! Why hadn't I changed to sweats?\n\nAfter about five minutes of that, she started tugging at my belt. There was no way she could undo that one-handed and I was extremely nervous about giving her any further access. The room wasn't that dark and my entire family was within a few feet of us. Granted, my dad had started snoring, but Avery and mom were awake.\n\nAvery looked my way and I tried to act bored, turning back to the movie. When she did likewise, I relaxed a bit and figured she didn't suspect anything. Kaia's hand became more insistent.\n\nEvil. Naughty. Temptress. All of the above?\n\nI slowly moved my hands to my lap and grabbed her hand just enough to move it out of my way. I left my belt in place, but unzipped and pulled the flap open. Kaia seemed satisfied with that as her hand was soon entirely through my fly and grasping my erection. For better or worse, she moved her fingers further down until she was cupping my balls through my underwear. It wasn't quite flesh on flesh, but it was far better than through my jeans. \n\nShe stayed that way, rubbing softly while her wrist rested on my cock, until the credits started to roll. By then, I was getting a case of blue balls and was ready to flip her over, rip her leggings down, and take her in front of my family. Almost. She extracted her hand subtly and left me to zip up without anyone else noticing. I still had to be careful how I got up so no one noticed the serious bulge going on.\n\n\"I'm beat,\" Avery said, yawning.\n\n\"Same,\" Kaia said. \"Time for some shut eye before we face the unwrapping.\"\n\nWe said our goodnights to the parents and went upstairs. Kaia suggested Avery could use the bathroom first, to which my sister put up no resistance. Finally!\n\n\"That was fun,\" Kaia said in a whisper as we stood in the hall just outside her room.\n\n\"Right up until I got blue balls, yeah,\" I whispered back.\n\nKaia giggled. \"Aw, poor baby. Need some relief?\"\n\n\"Heck yeah. You coming up again tonight?\"\n\nShe shook her head no. \"Sorry, I'm beat and it really will be a long day tomorrow. I'll find some way of making it up to you, though. Promise.\"\n\nI pouted. \"You're no fun.\"\n\nKaia grinned. \"Nope. But I am naughty.\" She lifted her sweater, this one a bulkier black one which had obscured her chest considerably compared with the previous day's. Again, no bra stood between me and those beautiful breasts. It was only a couple seconds, though, then she put them away.\n\nShe gave me a sweet, apologetic smile. Then, unexpectedly, she stepped in close and lifted up on her toes to give me a quick kiss on the cheek. Compared with everything else we'd done, it was terribly chaste. Yet, somehow, it felt more intimate than everything else combined.\n\n\"Good night, Alex. Sweet dreams.\"\n\nWith a quick wave, she disappeared into her room and closed the door behind her. Again, she'd given me more than enough to keep my mind active and awake late into the night.\n\n#\n\nChristmas morning had always been the highlight of this family gathering, with the kids racing down to the breezeway where gifts were piled up around the biggest of the three decorated trees in the cabin complex. As I'd gotten older, it lost a little of the excitement, but I was still looking forward to the grand commotion and squeals of joy.\n\nDespite being up late, mind tossing with fantasies while resisting the temptation to give myself some relief (Kaia hadn't given me permission), I was still awake early. Gifts couldn't be opened until everyone was up, and that was usually after the sun was fully over the horizon. Looking outside, I figured I had a good half hour. Hoping for a repeat performance of yesterday morning, I went down to the second floor to grab a shower. Disappointingly, I didn't have any company, nor was there any sign Kaia was awake when I was done.\n\nI dressed in jeans and long sleeved t-shirt, knowing that the breezeway could get warm with all the bodies and the space heater fired up. I made my way down and found most of the kids there with an uncle and cousin playing goalkeeper to keep them away from the gifts. The room was already warm except for the floor.\n\nI got a glass of juice from the Old House kitchen, after which my mom asked me if I could go check on the girls. It seemed nearly everyone else was ready and they could only hold back the kiddos for just so long before someone got hurt or tears were shed. I went back and knocked first on my sister's closed door.\n\n\"Av? You awake?\" Nothing.\n\nI tried Kaia's door next. \"K? You up? Everyone's ready.\"\n\nI heard some shuffling and squeak of the bed, followed by some giggles. \"Yeah, Alex. We'll be down in a couple minutes.\"\n\nWe? They were sleeping together? Again, that got my mind spinning as to just what was going on in there.\n\n\"Okay,\" I said, not prying further.\n\nBack in the breezeway, I told the others the girls would be down soon. That was good enough for them and they let the little ones start opening gifts. From there, it pretty much descended into chaos as gifts were handed out faster than they could be opened. I watched in amusement, though my mind was mostly back on the girls.\n\nKaia and Avery arrived closer to ten minutes later, both wrapped up in bathrobes with only their leggings and fuzzy socks protruding. It looked like they'd taken a few minutes to brush their hair and at least appeared somewhat awake. Half the other adults and all of the kids were in jammies, so they hardly looked out of place.\n\n\"Morning sleepyheads,\" I said, sidling up to them. \"Late night slumber party?\"\n\nAvery shot me an alarmed look, but Kaia just giggled. \"Something like that.\"\n\n\"The mattress in my room sucks,\" Avery said. \"So...\"\n\nI nodded in understanding, though I was becoming increasingly suspicious of something else. The very idea was titillating, but also made me a little jealous. I'd have certainly enjoyed sharing my cousin's mattress.\n\n\"Either of you want some coffee?\" I wasn't a drinker of it, but I knew Avery was an addict. Both girls nodded enthusiastically yes, so I retreated to the Old House kitchen to pour them cups. When I returned, they'd claimed a glider chair built for two and gratefully accepted their drinks. I stood beside them as we watched the festivities.\n\nWhen the kids finally had enough toys opened to be distracted, the adults started exchanging gifts. My parents got me a nice new pair of earbuds and a sweatshirt. Avery thanked me for the beginner's wood carving set I got her. Don't ask me what her attraction to that was, but she'd mentioned it more than a few times over the last couple years. From my sister, I got an antique drafting tool kit. Honestly, I wasn't entirely sure what it was -- it came in a cracked leather case, looked like a compass but had extra attachments. The quality was obvious, despite its age.\n\n\"I know you aspiring architects do everything on computer these days,\" she said as I looked it over. \"Still thought you might like it.\"\n\n\"I love it,\" I said, truthfully. It was thoughtful and cool. \"Now I just have to figure out what all these pieces do.\"\n\nI gave her a big hug and she returned the squeeze. \"Thanks,\" I said.\n\n\"And thank you for being a cool brother. My island of sanity around...all this.\"\n\nKaia joined us. \"There'd better be hugs left for me,\" she said. \"Even though I didn't get you two anything.\"\n\n\"Of course,\" I said. \"What'd you think we were giving you?\"\n\nKaia gave Avery a long hug first, then turned to me. There was a lot of full body contact, but I managed to control myself with all the family around.\n\nBefore letting go, Kaia whispered in my ear. \"I've got a little something else for you. Later.\"\n\nI liked the sound of that. Avery gave me a look, but soon was drawn off by my parents. Kaia, likewise, had rounds to make. All in all, it was a nice Christmas morning. Hopefully, it'd be an even nicer Christmas afternoon or evening.\n\n# \n\nAs it turned out, whatever Kaia's \"little something\" was would have to wait until late that night. After the gift opening settled down, I helped clean up while the girls went back to New House for showers and to dress. Most of the rest of the day passed quickly -- eating, assembling kids' new toys, and mingling with the rest of the family.\n\nKaia had dressed up a bit, wearing a fitted red button down blouse over black leggings and yet another pair of fuzzy, festive socks. The tails of the blouse covered most of her butt, yet she'd left enough of the top buttons undone to hint at the swell of her breasts. Again, I could tell she'd passed on wearing a bra, yet it was less obvious in this particular shirt.\n\nAvery had dressed nicely for the day as well. Her bulky sweater was a dark green that looked good against her long, sandy blond hair. The pants, however, were khaki and so tight they could have been painted on. Whether intentionally or not, she was doing a fantastic job of highlighting her best assets. And, yes, I knew I was looking more than I should have.\n\nFollowing dinner and more games, things wound down pretty quickly. It had been a long, exhausting day. I was still pretty alert, though, eager for whatever Kaia might have in mind. I was hopeful she'd intended to come back up to my room after everyone else was asleep. \n\nI was in the kitchen getting a drink when Kaia slipped up behind me, pressing her hips into my rear while wrapping her arms around me. Good thing we were alone, as it was intimate enough to have raised eyebrows. I felt her hair brush my ear as she leaned in and gave me a little kiss on the neck.\n\n\"Worried I'd forgotten?\" she said.\n\n\"Nah.\" It was tough just standing still, letting her hold me like that without being able to do much in return.\n\n\"Well, I'm going to get ready for bed,\" she said. \"It's ten-thirty now. Why don't you come by my room at, say, eleven? Don't knock, just let yourself in.\"\n\nMy body thrilled at the prospect. We'd have to be extremely quiet, though, whatever she had planned, since her room was adjacent to Avery's. \n\n\"Can't wait.\"\n\nHer hand drifted down, gave my crotch a quick pat, and then she was gone.\n\nI waited about fifteen minutes, said my goodnights to those who were still awake in the Old House, and then headed to the New House. With the space heater turned off, the breezeway was back to being a chilly crossing. The walk didn't do much to ease my nerves. What the heck were we going to do? So far, I hadn't had any regrets about fooling around with my cousin, but we still had a few lines we could cross that might change things.\n\nOn the second floor, I noted that Avery's bedroom light was on behind the door while Kaia's was off. The bathroom was empty, so I took advantage of that and got my teeth brushed. Disappointingly, Avery's room light was still on when I left to go up to the attic. Why couldn't she have crashed already?\n\nI killed the last few minutes by changing to a pair of athletic shorts and t-shirt and pacing. Lots of pacing. My watch finally proclaimed it eleven and I went down, trying to keep from squeaking any of the steps. To my relief, Avery's light was finally off, though it didn't mean she was asleep yet.\n\nKaia had explicitly told me not to knock, so I turned the knob and eased the door open. The Red Room wasn't dark, after all, but dimly lit by a tiny cluster of red and white Christmas lights in a bunch hanging over the head of her queen bed. I recognized it as an old decoration, fake mistletoe with built-in Christmas lights. I finally knew what she'd swiped from the Closet that morning after first flashing me. I didn't think its placement over her bed was a coincidence.\n\nKaia, laying in bed, had her back turned to me. For a fraction of an instant, I thought she might be asleep. Avery popping her head up from behind my cousin shattered that notion, however. My sister's eyes went wide on seeing me.\n\n\"Alex!\" She was caught between giving me a dirty look and trying to hide behind Kaia. Her voice was an annoyed shouting whisper. \"What the fuck?\"\n\nWhat the fuck, indeed? I'd already knew the girls had shared Kaia's bed the last night, at the least. But why would Kaia have invited me to her room if that was going to be the case again tonight?\n\n\"Sorry, I...\"\n\nKaia rolled over, greeting me with a warm smile. In the process of turning, she dragged enough of the comforter down to make it clear she was topless. And Avery, judging by her frantic attempt to pull the covers back up, was as well. Were they...?\n\n\"Alex,\" she said. \"Get in here and close the door.\"\n\n\"What!?\" Avery was clearly distraught and I couldn't blame her. Clearly, she hadn't been in on Kaia's plans. And just what were those? I was uncomfortable, doubly so given my sister's reaction. \"No. What are you doing?\"",
        "\"Relax,\" Kaia said. \"I invited him.\"\n\n\"You...what!? Why?\" \n\nI felt for Avery and had to side with her. Much as I'd been looking forward to fooling around with our cousin, this hadn't been very well thought out.\n\n\"Yeah, I'm starting to wonder the same thing,\" I said. \"Maybe I should leave.\"\n\nKaia looked hurt and Avery relieved.\n\n\"Don't you dare,\" Kaia said, propping herself up enough that the comforter fell away from her bare breasts. I doubted that was by accident.\n\nAvery clearly noticed and tried to pull the rest of the comforter up to cover our cousin, failing. \"K! He can see!\"\n\nKaia rolled her eyes and looked back at Avery. \"Gee, you think? Nothing he hasn't seen before.\"\n\n\"He...what?\" Avery now looked more confused than anything.\n\nKaia sighed. \"Fine. Yeah, I suppose some explanations are in order.\"\n\nI nodded and Avery grunted in agreement. Kaia sat upright, leaving the blankets around her waist, so she could turn her head back and forth with Av and I on either side of her. Avery looked scandalized but seemed to have given up pointing it out. \n\n\"Alex,\" she said, looking at me first. \"Av and I have been close for a long time. You know that, right?\"\n\nAvery placed a warning hand on Kaia's arm that was ignored.\n\n\"Yeah,\" I said. \n\nKaia smiled. \"Well, we're very close. During a sleepover when we were teens, we decided to test our kissing skills on each other. I know, total clich\u00e9, but neither of us had started dating yet.\"\n\n\"K!\" Avery's face burned red. I couldn't blame her. I was embarrassed for her. \n\nKaia sighed. \"Oh, like you don't think he's figured out at least some of what's going on here? Give him a little credit.\"\n\nAvery looked at me and I gave a slight affirmative shrug. Her blush deepened and I did my best to convey an air of being understanding.\n\n\"See,\" Kaia said. \"He's cool. Anyway, that was all there was to it -- just some kissing. We liked it, though, and it was an every-now-and-then kind of thing for years. Until last summer.\"\n\nI was intensely curious to hear this next bit, yet it still felt wrong hearing Kaia spill their secrets when Avery clearly wasn't on board with it. It was awkward witnessing what amounted to a betrayal. My sister, though, seemed to have given up resisting now that the secrets were flowing and I hadn't condemned her. \n\n\"Last summer?\" I prompted her to continue.\n\n\"Last summer, when Av grew out of that phase,\" Kaia said. \"I was bummed, but she knew she was all into boys and was starting to feel weird about it.\"\n\nTotally not what I'd expected. \"I see.\" \n\nKaia said, \"Then I went to college and met Deena, a friend of my roommate. Straight up lesbian. She was cute and rocked my world for a few weeks.\"\n\nI could feel the heat rising in my own face, not to mention down below. I hadn't seen that one coming. \"And then...?\"\n\nKaia shrugged, which made her breasts bounce distractingly. \"I concluded that I liked girls, but not as relationship material. And, worse, being with her only made me miss Av. Deena got that I wasn't looking for the same thing she was and we moved on. I spend the next couple months counting down the days until we got here.\"\n\nAvery groaned and buried her head in her pillow.\n\n\"And to my good fortune,\" Kaia said, relishing Avery's reaction, \"Av was turned on by my stories of that experience. Turned on enough to get back into kissing. And stuff.\"\n\nI was most definitely getting aroused at this point, and it'd probably soon be showing through my shorts if it wasn't already. I just stood there, smiling, and nodding along to the story. \"Stuff.\"\n\n\"Not that!\" Avery said.\n\n\"Sadly, no,\" Kaia said. \"She's still not ready to dabble there. But she really likes boob play, and she has the absolute most suckable nipples ever.\"\n\n\"Oh. My. God.\" Avery punched Kaia in the shoulder, almost exposing those bespoke nipples in the process before hunkering back under the blanket. \"You're the worst!\"\n\n\"Just speaking the truth,\" Kaia said, clearly having fun. \"C'mon, you can show him.\"\n\n\"No. Absolutely not.\"\n\nNot that I'd have minded at all, but I wasn't comfortable with Kaia pressuring my sister into doing anything she didn't want. \"Really, that's okay.\"\n\n\"Thank you, Alex,\" Avery said. \"And you'd better not say a word about any of this to anyone, ever. Unlike blabbermouth here.\"\n\n\"Oh, he won't,\" Kaia said. \"I'm not done filling everyone in.\"\n\nAvery's eyes narrowed and I felt the heat building in my own face now. Not much point in running or denying anything, since my cousin was clearly in the spilling mood. To what end, I had no idea.\n\n\"Yeah,\" Avery said. \"Just what has been going on with you two?\"\n\nKaia filled in my twin, starting with calling me out on how much I'd ogled her breasts at the beach (Avery heartily concurred on that point, to my mortified embarrassment), going through our agreement, and each of our little encounters since. Avery's eyes absolutely bugged out when she heard about what had gone down in the shower. I couldn't tell if she was shocked, pissed, turned on, or all of the above. I had to just stand there and take it, feeling the judgment of my sister much as I'm sure she thought I had given her. Honestly, though, I'd been cool with all of her revelations and hoped she might view my actions in a similar light.\n\n\"Well,\" Avery said when Kaia was done. \"I see why none of this will be leaving this room.\"\n\nI nodded. \"Mutually assured destruction. What I don't get, though, is why invite me here? What did you hope to get out of this?\"\n\nKaia looked a little disappointed. \"I... I guess... Damn, I'm not entirely sure. I mean, I'm totally jealous of you two.\"\n\n\"Us?\" Avery said. \"Why?\"\n\n\"You're twins. I don't even have a sibling, yet you two grew up together. I know you're not best buds all the time, but you've got a bond. This unbreakable thing. And, well, I guess I didn't want to come between you two, not in a way that could have happened if either of you discovered I'd been messing around with the other in secret.\"\n\nI guess I could kinda respect that, but it still felt weird. \"So that's it? You just wanted to come clean? By having me walking in on you and Av like this?\" \n\n\"Yes. No.\" Kaia banged her head against the headboard. \"This isn't at all what I was thinking. I mean, yes, but...\"\n\nAvery scooted up a little, but held the blanket firmly to her chest. \"Why do I get the feeling you thought you could have the best of both worlds? Like, mess around with both of us?\"\n\n\"I'm kinda getting that sense, too,\" I said, staring down Kaia who was looking almost sick.\n\n\"Didn't think that through very well, did you?\" Avery said, though her tone was considerably softer, almost sympathetic.\n\nKaia buried her face in her hands. I genuinely felt for her, knowing she hadn't intended any ill for either of us. My eyes met Avery's and I could see the same sympathy from her.\n\n\"I'm sorry,\" Kaia said. \"Just go. I'm so stupid.\"\n\nI stepped up to the edge of the bed and leaned over, gently pulling back her hands. Kaia wasn't crying, but her eyes were red and on the verge of unleashing. She looked up at me, questioning. I leaned forward and placed a gentle kiss on her lips. She seemed so shocked she didn't even kiss back until I did it a second time.\n\nI stood and smiled. From the corner of my eye, I could tell Avery was smiling, too.\n\n\"What?\" Kaia said, confused.\n\nI nodded at the mistletoe over her head. \"What? Don't tell me you put that there just for decoration.\"\n\nBefore Kaia could say anything, Avery pulled herself upright. She still held the blanket against her chest, but it slipped just enough that I saw one of her pink nipples make an appearance. I tried really hard not to stare or otherwise risk acknowledging it and thereby embarrassing her. She wrapped her free hand around Kaia and pulled her down for another kiss. This one lingered a bit longer than either of mine. \n\n\"Well, I can tell you two have been practicing,\" I said when their lips parted. Avery blushed, but more out of accepting the compliment.\n\nKaia laughed and hiccupped. \"I love you two, you know that? Not like that, but like...this. I can't explain it.\"\n\n\"We get it,\" Avery said, looking me in the eye as she said it. \"And we love you, too.\"\n\n\"Absolutely,\" I said. \"Besides, I certainly can't say this trip hasn't been fun.\"\n\nKaia leaned her head on Avery's shoulder. \"Well, I'm still sorry. Hormones getting the better of me, I guess.\"\n\n\"Don't worry about it,\" I said. \"Now, maybe I should leave you two to get some sleep. Or whatever. No judgment here.\"\n\nKaia's eyes snapped up at me and I a saw a hint of that evil glint she'd been giving me the last couple days. \"Well, you're free to leave, but your nuts stay.\"\n\nWhile I liked the sound of that, I didn't think it was going to work with Avery around. \"Uh, I'm not sure that's, uh, physically possible.\"\n\nAvery smiled, clearly amused with my discomfort. \"Maybe I need to leave you two alone for a while, then.\"\n\n\"Oh no you don't,\" Kaia said. \"You owe me some more quality...kissing. I want both of you to stay.\"\n\nI wasn't sure how Avery felt about that. Hell, I wasn't sure how I felt about it. It was...weird. Wrong, too, by most measures. And yet I'd easily gotten over the things I'd done with my cousin. Was I that morally flexible?\n\n\"You do know we're siblings, right?\" I said.\n\nKaia sighed. \"I know. But you're twins. You spent your first nine months together, spooning naked in the womb. Doesn't that mean you're connected? One of you gets gas and the other farts? No secrets?\"\n\nAvery laughed. \"Girl, I think you've got a few things mixed up there.\"\n\n\"You trust each other, though. Right?\" Kaia looked from Avery to me.\n\n\"Yeah,\" we both said.\n\nKaia turned back to my sister. \"And you think he's hot.\"\n\n\"What!?\" Avery blushed. I, meanwhile, was startled by her response, clearly having been hit close to home.\n\n\"Oh, don't deny it,\" Kaia said slyly. \"After all, last summer you said your ideal guy would have a body like Alex's. And you were the one who pointed out how visible his dick was when those gray boardshorts of his got wet.\"\n\nNow I was stunned. Avery had been checking me out? Was it an attraction or just a natural reaction to a member of the opposite sex, much as I'd been transfixed on her figure and rear end?\n\n\"I didn't...\" Avery sputtered, but clearly couldn't deny it. \"I just pointed out the obvious. Doesn't mean I wanna hop in bed with him. No offense.\"\n\n\"None taken,\" I said, amused.\n\n\"And we all know he's been checking out your world-class ass for years.\"\n\nI gave Av a look but knew better than to try to deny it. \"Would have been rude not to.\"\n\nMy sister looked like she was about to say something, but closed her mouth. I detected a hint of appreciation for the compliment. It was liberating having it out in the open.\n\n\"So, Alex,\" Kaia said, words clear and deliberate. \"I want my nuts in this bed. I've got mistletoe going to waste and I'll need all the help I can get in putting it to good use.\"\n\nMoment of truth. Back out or accept? I'd regret the former for certain, especially in the short run. But the latter could lead to all manner of other issues. And what would Avery do? At the moment, she seemed to be hanging on my response, but I couldn't tell how she felt. \n\n\"Okay,\" I said, staring at Kaia. \"But I seem to recall you've got a side of our bargain, or bargains, to uphold.\"\n\nShe smiled at my challenge. \"Are you calling it in? \"\n\n\"I am.\"\n\nKaia's smile never slipped. If anything, it grew wider. \"Well, since you can already see my tits, I guess that only leaves my pussy.\"\n\nAvery's eyes widened, despite already having heard how our agreement went. It seemed more borne of disbelief that our cousin was actually going to do this in front of her.\n\nKaia pulled the blanket aside, revealing simple white panties. Avery scooted back a little, still trying to keep herself covered up. While my sister and I watched, Kaia lifted her hips and worked her panties down and off, tossing them at me. I reflexively caught them, then set the scant fabric aside. My attention was on the full extent of my cousin's naked body sprawled across the bed.\n\n\"You're crazy,\" Avery said, amusement displacing shock.\n\n\"Why? Because I like having my body admired?\"\n\n\"That's part of a very long list,\" Avery said.\n\nKaia turned her focus back on me, my crotch in particular. By now, my cock was mostly hard and surely conspicuous. I didn't mind Kaia checking me out and, if I was honest with myself, I didn't mind my sister looking either. She'd already confessed to doing so and it hadn't ruined anything between us. But that was all while clothed.\n\n\"Now,\" Kaia said, \"I want my nuts. And those shorts are in my way.\"\n\nI glanced to my sister and she was watching as well. There appeared to be no chance she would protest further or depart. Screw it. I figured I was better off playing along than backing down and enduring their teasing from now until eternity. Besides, it was Christmas. \n\nI slipped my thumbs in the waistband and pulled both my shorts and underwear down in one smooth motion. It saved me the hassle of Kaia having to ask for the rest. Besides, she was already stark naked, establishing the acceptable dress code for this night.\n\nI'd been nervous to this point, but once I was exposed I felt liberated. Kaia licked her lips while Avery checked me out with interest. I still wasn't fully erect, but my cock had swollen enough that it was approaching that point. I went ahead and shed my t-shirt as well.\n\nKaia elbowed Avery. \"Nice, huh?\"\n\n\"I wouldn't kick a body like that out of bed,\" she said.\n\n\"Good,\" Kaia said, gesturing me to join them. \n\nIt felt surreal as I crawled into bed beside Kaia. She gave my nuts a quick, playful squeeze, then shifted over as I laid down on my side next to her. Avery, on the other side of our cousin, laid down but kept her head propped up so she could watch.\n\nI rolled in closer and kissed Kaia again, slow and sensuous. She was a good kisser when I wasn't taking her by surprise. When her hand brushed my leg near my cock, I reached over to slide my hand over her tummy and up to her breasts.\n\nKaia purred, then broke off the kiss to turn to Avery. \"This isn't a spectator sport.\"\n\nAvery got the hint and leaned in to kiss Kaia. Just watching them kiss was mind-blowing. There was a sensuous familiarity between them, like old lovers. In a sense, that was almost true. As they kept it up, the comforter fell back further and I was able to see my sister's breast again. She was, indeed, very small up top. What I was surprised at, though, were her areolas -- much larger than Kaia's and puffy. I now understood Kaia's comment about why they were so suckable. I was salivating at the very prospect, sister or not.\n\nWith the two of them lip-locked, I slid down a bit and began licking and sucking one of Kaia's nipples. She ran her fingers through my hair, clearly encouraging my attention. It wasn't long after that Avery's hand grasped Kaia's free breast and began massaging it.\n\nI slid my hand back down Kaia's body and started rubbing her upper thigh. Almost immediately, she spread her legs. Taking the open invitation, I ran my fingers along the length of her slit, feeling her heat and slick arousal. I felt my way around her smooth skin and she shuddered when I brushed lightly across her swollen clit.\n\nThe girls stopped kissing for a moment and I glanced up from Kaia's tit to see Avery looking down at what I was doing. Without any covers on us, there was no hiding my hand in K's crotch. Avery caught my eyes and shook her head.\n\n\"I figured as much,\" she said, amused.\n\nKaia, looking blissful, turned to me and I leaned up to take over with the kissing. Avery turned her attention to Kaia's breasts, kissing and licking and massaging. I continued to finger our cousin, increasing my focus on and around her clit the longer I went. After several minutes, she started whimpering and her legs clamped down around my hand.\n\n\"Yes, yes, yes,\" she said, eyes closed and body taut.\n\nAvery stopped sucking Kaia's nipple long enough to watch Kaia's orgasm. She gave me a quick nod of approval, then kissed Kaia on the cheek. When Kaia's legs finally relaxed, I ran my hand up her body until I could guide her chin to me for a kiss on the lips.\n\n\"Now the mistletoe is working,\" Kaia said, still catching her breath.\n\nWe just held one another with occasional kisses for a bit. In wandering across Kaia's tummy, my hand bumped into Avery's. Rather than flinch away, we held hands for a bit. It was reassuring and when I made eye contact with her over Kaia, her eyes were alight with happiness.\n\n\"Fuck, I'm cold,\" Kaia said, breaking us out of the quiet reverie. I had to agree and helped pull the blankets back over us. In the shuffle, Kaia rolled on top of Avery and assaulted her with a new barrage of kisses and tickling. I wasn't quite ready to jump into the fray, but happily watched on as the blankets got messed up and I was given a great show of breasts sliding across breasts.\n\n\"Cold fingers!\" Avery said between giggles, utterly unable to get away from Kaia. \"Help!\"\n\n\"No help for you,\" Kaia said, cackling. \"He wouldn't dare take sides.\"\n\nOh yeah? I slid my hand in between the girls, palm upward, and tickled Kaia. She shrieked, loud enough I feared our parents might hear downstairs, and rolled off Avery to get away from me. Avery was quick to turn the tables on Kaia, rolling on top of her and kissing and tickling. This time I went at both of their sides, tickling the two beauties equally.\n\nAvery squealed and rolled off the opposite side, banging into the wall. Kaia, trapped between us now, tried in vain to tickle me back. Soon my sister and I were ganging up on Kaia again. That only lasted a few moments before Avery switched targets and went after me with her hands, seeking weak spots on my sides. Kaia joined in, playing dirty by going after my cock and then straddling me. She pinned my arms against the sheets, allowing Avery to tickle at will. I didn't put up much fight, though, too conscious of Kaia's bare crotch grinding across my hardon.\n\nAfter a bit more back and forth, Kaia finally ended up against the wall, catching her breath from a fit of giggles. Avery was flat on her back, between us, and I was laying on my side facing her with my hand amiably on her tummy, just above her panties. I was still making a token effort to avoid touching her intimately or pressing my cock against her. Neither of us had kissed the other, either.\n\n\"See, now this is fun,\" Kaia said. \"We should've been doing this for years.\"\n\n\"It's only fun because you cheat,\" Avery said, giggling.\n\n\"All's fair in love and tickle fights.\" Kaia rolled into Avery, running a hand across her breasts while kissing her cheek. Avery no longer seemed at all concerned about me seeing her topless or being intimate with Kaia, which made it far easier for me to relax and enjoy this.\n\nAvery met Kaia's kisses and they were soon becoming very heated. Kaia found my hand and pulled it up, placing it firmly over one of Avery's breasts and holding it until she was sure I was going to stay there. When Avery didn't stop kissing to object, I started massaging. The puffy nipple was very different to my touch, swollen more than hard, and I savored the chance to explore it.\n\nFor quite some time, I just laid beside the girls like that, watching them make out. It was such a turn on and still amazed me the level of their comfort with one another. Avery would occasionally brush one of Kaia's breasts, but most of that attention was going the other way.\n\nKaia broke off their kissing to nibble and lick her way down Avery's neck and then down to the breast closest. She gave me a pointed look, then flicked her tongue across my sister's nipple. I got the hint and positioned myself to join in on the other side. My cousin certainly hadn't been kidding about how suckable they were. It was pure bliss taking the entire aureole into my mouth, kneading it with my tongue and lips.",
        "Avery simply moaned at our combined efforts. Kaia and I, cheek to cheek, worked her over diligently, only briefly pausing to kiss one another. At some point, my cousin took my hand and dragged it down to Avery's crotch. I don't know if she'd already been touching my sister down there or not, but the panties were clearly soaked. I spread my fingers across her entire pussy and rubbed gently. Her legs tightened around my fingers and I immediately sensed hesitation coming from her.\n\n\"Whose hand is that?\" Avery asked rhetorically. \"Alex?\"\n\n\"I put it there,\" Kaia said, as if that made it all okay.\n\nI looked up at my sister from where I'd been sucking her nipple. She looked down at me through slitted lids, pursed her lips, and sighed softly.\n\n\"Let's leave the line at playing with my tits, okay?\" she said without a hint of anger.\n\nHonestly, it gave me a sense of relief. Now I knew where she stood on the matter. I wouldn't have to worry if I was pushing things too far.\n\n\"Deal,\" I said, quickly removing my hand from her crotch.\n\n\"You too, 'cuz,\" Avery said. \n\nKaia pouted but nodded in agreement. \"Yes, dear.\"\n\nAvery rolled her eyes, then closed them fully as Kaia and I resumed our tag team assault on her tits. Kissing, touching, sucking, moaning -- it went on for quite some time. At one point, I thought Avery might be close to orgasm without any direct contact below the waist. She seemed rather pleased with all the attention, and that was good enough for me.\n\nWe all cuddled with Avery in the middle for a bit. The girls kissed lightly every now and then. Avery never turned to meet my lips, though, and again I was okay with that limit. It somehow felt like it would be more intimate that playing with her tits.\n\n\"Feeling neglected yet, Alex? \" Kaia reached across Avery to run her hand down my side to my hip. My cock, which had flagged somewhat while we caught our breath, surged quickly back to full hardness. It bumped into Avery's hip. If she noticed, she didn't react.\n\nI shrugged. \"Not really,\" I said. \"This is already the best Christmas ever.\"\n\nKaia grinned. \"But it could be better. Much better.\"\n\n\"If you say so,\" I said, chuckling.\n\n\"Oh, I say.\"\n\nAvery groaned. \"Geez you two. Can I leave?\"\n\n\"Hell no,\" Kaia said. \"You're staying and you're participating, even if that's only to watch.\"\n\nAvery's smile told me she wasn't that bothered by the absurdity of the situation. Not any longer, anyway. And me? Well, the idea had grown on me enough to have already shifted from impossible to inevitable. \n\n\"You're a perv, you know,\" Avery said. Kaia held up her fingers just a fraction of an inch apart. Avery shook her head no. \"Bigger than that. Much bigger.\"\n\n\"Whatever.\"\n\nKaia caught us both by surprise by rolling over Avery and landing squarely atop me. I was pushed from my side to my back in the process and my cousin straddled my crotch, propping herself up over me so her breasts could swing just out of reach of my mouth. My cock throbbed and bumped against her smooth, wet pussy.\n\n\"Easy there, big guy,\" Kaia said, wiggling her crotch against me for a moment before lifting back off my cock. \"There'll be time for that...after I'm done playing with my nuts.\"\n\nAvery rolled to her side, facing us while scooting back a bit to give us room and get a better view. Kaia, meanwhile, leaned over to kiss me. She then kissed and licked her way down my chest. Avery giggled when she paused to suck my nipples. Fuck, that actually felt really good.\n\nKaia stopped kissing just before reaching the tip of my cock and repositioned herself between my legs. She gave me a hungry grin, pulled her hair off to one side, and leaned over to plant a kiss on my balls. That was hardly a stimulating contact, yet my cock bounced in response. I glanced Avery's way and smiled when I found her gaze locked on the action down below.\n\nKaia quickly transitioned from kissing to sucking. She took one of my balls into her mouth, massaging it with her tongue, while playing gently with the other between her fingers. Ah, now that was nice with a helping of naughty. After a bit, she swapped which nut got which pleasure. Her fingers, in addition to rolling my testicle around, began pressing into the root of my erection.\n\n\"Tasty?\" Avery's voice was soft. It sounded like she was trying to be a teasingly playful, but I heard a hint of hunger there.\n\n\"Mmmhmm,\" Kaia murmured around the ball in her mouth. She then released it and glanced up at Av. \"Wanna try?\"\n\n\"I'll take your word for it.\"\n\nKaia shrugged. \"Suit yourself.\"\n\nMy cousin shifted her attention to my cock, licking up the entire length until she could lap up the drop of pre-cum that had gathered at the tip. There was a distinct element of showmanship to the display, I suspected more for my sister's benefit than mine. Kaia kissed her way up and down the shaft several times before finally lifting it off my belly and wrapping her lips around the swollen head. Heaven.\n\nI closed my eyes and focused on nothing but my cousin's lips and tongue as she explored my cock. She was no novice, keeping her teeth from scraping my sensitive flesh. I could feel one hand fondling my balls while her other wrapped around the base of my shaft, stroking gently. \n\nPerhaps more surprising was when Avery took my hand in hers. It was like her way of sharing the intimacy of the moment. I squeezed gently and she briefly looked away from the blow job to smile at me. \n\nKaia toyed with me for a couple minutes, but never really got me going. She could've if she'd wanted, that much was clear. When she sat up, though, it became clear she'd only been warming me up. \n\n\"I trust you're not harboring any unfortunate cooties?\" Kaia said as she climbed back over my crotch. \n\nI chuckled at the way she broached the subject. \"Not that I'm aware of,\" I said. \"And highly unlikely.\"\n\nShe settled her pussy back over my erection and added her wetness to her saliva. \n\n\"What? Not getting much?\" \n\nI sighed. \"Some. But I was hinting more that I've been diligent about going in properly armored.\"\n\nKaia grinned, then turned to Avery. \"Very smart, don't you think?\"\n\n\"He's my twin,\" Avery said. \"Of course he's smart.\"\n\nI squeezed her hand in thanks for the compliment. \n\nKaia, still looking to Avery, said, \"Should I take him bareback, then?\"\n\nIt struck me as odd that she'd ask my sister. Maybe there was still more between them than I'd been led to believe. Maybe Kaia was just trying to make her feel more involved, ramp up the naughtiness of it all. It wasn't lost on me that my cousin hadn't asked for my opinion. Since I hadn't packed condoms on this trip, it was a moot point unless one of the girls had come prepared. Not unlikely they'd have one stashed in a purse. \n\n\"Go for it,\" Av said with a sly grin. \n\nKaia leaned over me again, dangling those tits. She licked her lips and gave me a smoldering look. \"Your sister thinks we should fuck. What do you think?\"\n\nI reached up with my free hand, first cupping a breast and then wrapping my fingers lightly around her throat. \"I think you should stop asking stupid questions.\"\n\nKaia's eyes widened and then she grinned. \"Sounds like a yes to me.\"\n\nMy cousin sat upright and I relinquished my grip on her throat. She reached down between us, taking my cock in hand, and guided the tip into her slit. She teased just a little longer, rubbing my along then length, before finally guiding me inside. Inch by inch, she savored the insertion rather than rushing it. There was no doubting the state of her arousal, given just how wet she was. \n\nOnce fully settled, Kaia let out a deep sigh in harmony with my moan. After all the teasing and innuendo, it was a relief and joy to finally reach this point. \n\n\"Mmm... Your brother feels amazing.\"\n\n\"I can imagine,\" Avery said, still holding my one hand tight. \n\n\"You could feel yourself.\" Kaia seemed intent on continually trying to tempt her. \n\n\"Nope.\" At least Av was rolling with the teasing without getting bothered. \"Besides, you wouldn't want to risk losing all your cum.\"\n\nKaia slowly began rocking on my cock, forward and back rather than in and out. She smiled back at Avery. \n\n\"Well, if he accidently nutted in you, then I'd just have to lick it back out.\"\n\nAv let go of my hand to slap Kaia's thigh. \"Oh my God! You just don't give up, you perv!\"\n\n\"Nope,\" she said. \"Now at least get up here and kiss me while I fuck your brother.\"\n\nAvery was clearly aroused by the display as she didn't hesitate to get up to get knees. Kaia maintained a very slow rocking atop me so that she and Av could kiss comfortably. And kiss deep! Goodness, their tongues were doing full-on tonsil inspections. I was content to slow play this because I figured I'd never see something this hot again in my life. \n\nAvery started fondling Kaia's tits, first gently but soon getting more aggressive. Kaia, meanwhile, had a hand down on Avery's thigh, rubbing around the inside and probably getting incrementally closer to the off limits zone. I'm not sure who did what first, but Kaia gasped when Av pinched her nipple and Av whimpered when our cousin wrapped her hand fully over Av's panty-clad pussy. \n\nI tensed for a moment as Kaia had clearly overstepped. Av stopped kissing, but her lips remained a fraction of an inch away, her breathing hard, skin flushed. Kaia didn't move her hand. \n\n\"Yes or no?\" Kaia's question was soft, filled with an urgency and compassion. \n\nAv merely whimpered, seemingly frozen. I didn't know what that meant. I certainly didn't want her uncomfortable, yet she looked like she was enjoying this. \n\n\"Alex?\" Kaia didn't look my way, her lips still nearly brushing Av's. \"Should I keep touching your sister's pussy, even though she said I shouldn't?\"\n\nI didn't like being put on the spot. I also didn't really trust my judgment while laying here with my cock buried in my cousin's pussy. \n\n\"Only if she asks for it.\" \n\nNeither girl noticeably reacted to my words. \n\nShe rephrased the question. \"Do you want me to touch her?\"\n\n\"Same answer.\"\n\nKaia extended her tongue and licked Avery's lips. My cock throbbed at the sight. Av whimpered again and her grip on Kaia's tit clearly got tighter. \n\n\"I think she's waiting for you to give her permission to be naughty,\" Kaia said, her voice low with lust. \n\nThe tension in the room was palpable. Why put it on me? Was it a power dynamic thing I didn't quite understand? Or maybe just a guilt aversion strategy -- \"you told her to!\" I wanted Av to look at me so I could read her eyes, but she remained frozen, facing Kaia, eyes closed. \n\nThen I realized it wasn't that complicated. Kaia was right. If Av didn't want this, she'd already demonstrated a willingness to say as much. And each time she didn't respond to Kaia made it that much clearer she really did want to be more directly involved. At least, that's how I justified my answer. \n\n\"Touch her,\" I said. \"Under her panties.\"\n\nI think both girls were surprised with that qualifier I'd thrown on to the end. Avery didn't object or even look my way, though. All I saw was the slightest shift in her body language, a strange juxtaposition of tension and relaxation. Kaia, on the other hand, smiled. She slid her hand up Avery's pubic mound until her fingertips reached the waistband. Slowly, deliberately, Kaia slipped them under the fabric and began to reach back down for Avery's pussy.\n\nAll I could do was watch in rapt attention. Even though I couldn't see it, I knew the moment Kaia's fingers reached the mark. Avery gasped. A moment later, my sister savagely kissed Kaia, almost hard enough to knock her off balance. As soon as she could recover, Kaia was kissing back in kind. Her hand, in my sister's panties, was now a rubbing without any hint of restraint.\n\nThat, of course, pushed me into action. I grabbed Kaia's hips and began pumping up into her. She was so distracted, she simply held herself over me while I took control. We hit that combination of angle and lubrication where it felt like there was almost no resistance as I thrust in and out. A deep moan worked its way out of her mouth, around my sister's tongue.\n\nI thought we'd just hold this configuration until one or more of us climaxed. Kaia, however, had other plans. A couple minutes in, she pulled her hand out of Avery's panties (getting a frustrated and dirty look in response) and slid back and off my cock (getting another frustrated and dirty look in response). Our cousin just smiled.\n\n\"You,\" she said, pointing at Avery, \"lay down and lose the panties.\"\n\nAvery was clearly so desperate for release, she immediately began to obey, flinging herself on her back right beside me. While she lifted her hips to get her panties off, Kaia turned her attention on me.\n\n\"You. Over here.\"\n\nThere was just something about her bossiness that was appealing in the heat of the moment. We were all way off the reservation. Letting her call the shots somehow made it easier to roll with it.\n\nI got up to my knees and shifted down to the foot of the bed where she'd indicated. Once Avery was divested of her panties, Kaia settled in between her legs on hands and knees. There was no hiding her intention -- she meant to lick my sister's pussy. For a fleeting moment I thought this was pushing too far, that Avery would balk and then everything would come crashing down. Instead, Avery spread her legs.\n\nThis afforded me my first look at my sister's pussy. In contrast to Kaia, Av wasn't smoothly shaved. She was, however, well-groomed with only a thin landing strip leading the way between her legs. I caught a glimpse of her glistening lips before Kaia's head moved in and blocked the rest of my view.\n\nMoments later, Avery's eyes closed and her head rolled back. Kaia wiggled her ass at me and I wasted no time moving into position. I grabbed my shaft and guided it back to her waiting hole. Just as before, I slid in easily. This time, having more control, I adjusted my angle a bit to create slightly more friction. Whatever I did, it seemed to work, as Kaia purred in satisfaction.\n\nJust like that, I was having my first true threesome. Never had I dared to think my sister or cousin, let alone both, would be a part of that. Frankly, I'd assumed I would never have one period. It was magical, watching the show unfold beneath me while pumping in and out of this fine, fine pussy. Kaia, head bobbing steadily; Avery, fingers grazing her own hard nipples while moaning softly at the attention.\n\nThe toughest part of the whole thing, for me at least, was restraint. I was so turned on, my body craved release. But I knew if I really started fucking Kaia hard, she wouldn't be able to keep licking my sister. Not very well, anyway. So I learned control, edging and biding my time.\n\n\"Oh god,\" Avery said. Gasped, really. Kaia had gotten to her good, apparently, and I stopped thrusting altogether while my cousin brought Av to a body-shuddering orgasm. The expression on my sister's face was priceless -- utterly lost in pure bliss, riding the edge of ecstasy and agony. She finally collapsed and Kaia eased off.\n\nI was about to start fucking again, but Kaia moved forward and I slipped out. The cool air washed over my slick cock and I looked at her for explanation. She flipped over and scooted back until she was laying side-by-side with Avery. Then she spread her legs and indicated I should get back to it. Missionary to finish? Okay by me.\n\nI situated myself between her legs, slid back inside her pussy, and then gently settled a good bit of my weight on her hips. I held my chest up over hers so we could kiss and see one another. Avery rolled onto her side, pressing up against the both of us, and watched through glazed, sated eyes. Having her here only added to this incredible experience. As long as she didn't feel guilty afterward, I suspected this would ultimately bring us closer together. Not as lovers, but siblings. You couldn't share an experience like this and not come out unchanged.\n\nThe constant state of arousal over the last half hour or so had me primed to blow. Even still, I managed to refrain from just going at it. This was going to be a memory for a lifetime and I had just enough awareness to pack away every last detail.\n\n\"You gonna cum inside her?\" Avery said. I still had trouble believing that she'd come to not only tolerate but actively encourage this little tryst. And yet...\n\nI didn't break stride as I considered the question. \"I suppose I'll cum wherever the current owner of my nuts wants it.\"\n\nKaia wrapped her legs around my butt and pulled in. I thought that was a sign she wanted me to climax inside her. I was wrong.\n\n\"On my tits,\" she said. \"Seems most appropriate, given our arrangement.\"\n\nI shook my head and smiled. \"Sure.\"\n\nFrom there, it was just a rut-fest. I fucked my cousin thoroughly, only occasionally changing up the pace or angle to keep things interesting and moving toward the inevitable conclusion. Kaia held me tight at one point to ride out an orgasm. Once she finished, I found my final groove and barreled straight toward my own end.\n\nMy body wanted me to just power through climax and cum inside Kaia's pussy. The remnants of rational thought dragged me back from the brink, though, and I pulled out and got up on my knees just in time. Avery scooted back a bit as I started wanking through the climax.\n\nKaia gave me a sultry look, then squeezed her breasts together, creating one big target. The first jet of cum actually overshot the target, hitting my cousin mostly on the chin and throat. The second plastered her tits and abdomen, as did the third and fourth. By the time I finished squeezing out the last little bit, Kaia was giggling and Avery was giving me a golf clap.\n\n\"I'd have to guess you didn't leave anything behind,\" Kaia said. \"So I got my fair end of the bargain.\"\n\nI chuckled, sinking back on my haunches, exhausted. \"Yeah, I think that was it. Definitely a fair trade. Pleasure doing business with you.\"\n\nWe shook. Kaia then wiped some of my cum off her chin and licked it off her finger. \n\n\"Not bad,\" she said. She scooped some more and offered it to my sister. \n\n\"Pass, thanks,\" she said, rolling her eyes.\n\n\"Your loss.\" Kaia licked up a bit more, but eventually asked for a tissue on grounds that she was still full from Christmas dinner. \n\nThere was a fair bit of cleaning up all around as we came down from our crazy high. We had a few laughs and, thankfully, no one seemed inclined to regret what we'd done later. As things wound down, I got up to fetch my shorts.\n\n\"Where are you going, mister?\" Kaia said.\n\n\"Uh, back to bed?\"\n\n\"Stay,\" she said. \"I still own those nuts until tomorrow. Might need them later.\"\n\nI hadn't wanted to intrude on whatever arrangement the girls had enjoyed the last couple nights. That and I was tired. But who was I to resist my crazy, lovely cousin, especially when my sister nodded in agreement and beckoned me back to bed?\n\n#\n\nAt some point in the middle of the night, I woke. It took a few moments to remember just where I was and what all had happened. As my mind regained its bearings, I heard the bedroom door open and saw the outline of my naked cousin slip out and close the door behind her. The bathroom door across the hall opened. Ah, bathroom break. Nothing worth waking over.\n\nFollowing the sexcapades, Kaia had settled into the middle of the queen-sized bed with me and Avery snuggling up to her on either side. There had been a little chatting and even a bit of gently caressing, but we'd all been so exhausted that sleep took us all quickly.\n\nI heard Avery shift somewhere on the bed not far away.\n\n\"Grmmph, mitts cold,\" she mumbled.\n\nI felt her pulling up the blanket, presumably uncovered by Kaia getting up. She then rolled over until her arm flopped across my chest. I froze, unsure what to do as it seemed she was mostly asleep. Hell, she might have mistook me for Kaia in her state.",
        "\"Keemee warm.\"\n\nAnd just like that, she pressed up against me and rolled to her side so her butt was against my hip. It was pretty damn clear that she expected whoever was next to her to curl up against her and keep her warm. That was emphasized when she wiggled against me and half pouted, half moaned. It was endearingly cute.\n\nShe might have been nearly unconscious, but I no longer was. This was my sister. My sister who was still naked. I was still naked. What was I supposed to do and why wasn't Kaia back yet so she could retake her spot in the middle?\n\nI don't know what prompted me to do it, but I rolled onto my side and pressed up against my sister's backside. I draped an arm over her body and fixed the blanket so it was up to both of our chins. That earned a contented sigh and Avery seemed to resume that slackness of sleep.\n\nGood for her, I thought. What about me? Spooning with a woman, sister or not, was already having the predictable outcome -- my cock was coming back to life. No amount of willing it to settle down was going to work. In under a minute, I was fully erect and sandwiched between her fantastic cheeks. That only increased the physical stimulation in a dangerous positive feedback loop. Fudge.\n\nI heard the toilet flush across the hall and a few moments later Kaia let herself back into the bedroom. I was tempted to ask her for a hand, but my cousin just crawled straight into bed. I felt her hand briefly brush across my hip, so she must have been trying to figure out where Avery was. What did she think when she found us like this? I could only imagine. Her response? She curled up on Avery's other side, pulled up the blanket, and was asleep within a couple minutes. Double fudge.\n\nI tried, desperately, to fall back to sleep. Asleep, I'd be safe. Asleep, hopefully my body would act in a manner that wasn't obscenely inappropriate for being in contact with my twin sister. Sleep, however, was clearly too busy helping out my bed companions to have any left in reserve for me.\n\nFor all my consternation, there was something special about spooning with a girl. I'd always enjoyed it, whether as a lead-in to sex or as a way to savor that post-coital bliss through the night. My nose was nestled in Av's hair and I could smell a hint of her fruity shampoo and her own natural scent. Pheromones, dammit. Then my breathing naturally matched her slow inhales and exhales. It felt like we were melting into one single being.\n\nI thought back to Kaia's earlier comment, how Avery and I had spent the first nine months of our life spooning. It had been a flippant joke, but maybe there was a little something to it. We had grown up together, possibly closer to one another than either of our parents. Siblings, yes, so lovers wasn't appropriate, yet I loved her and wanted to protect her.\n\nMy body kept not getting the message that the sexual response wasn't necessary or even welcome. Avery shifted and I thought I might finally have an opening to slip away and maybe get to sleep. Instead, she grasped my hand and pulled my arm more fully around her body. My hand ended up pressed against her breasts. Yeah, that'd help.\n\nMy animal brain started to beat my higher consciousness into submission. I ran my fingers ever so subtly across one of Avery's nipples. It hardened rapidly under my touch. I continued to rub it softly, then captured the hard nub between a couple fingers and squeezed gently. Av didn't seem to react, her breathing steady under my hand.\n\nI kept telling myself I should stop, that this was over the line. But I didn't. That my hand was pinned against her was a convenient excuse. I could have shifted my hips back to break contact, but I didn't. After several minutes of holding still, I started groping her breast more assertively while thrusting my hardon into her butt cleavage rhythmically. \n\nAfter several minutes, I became aware of a change in her breathing -- shallow and quicker. Her heartbeat, too, had quickened. Was she awake? Would she freak out at me as she came to her senses? \n\nHer hand that she'd been using to trap mine against her chest loosened and then let go. Now was my chance to get free, to roll away from her. Perhaps it was her subtle offer without the confrontation. \n\nBut I didn't move my hand. I simply remained frozen. She, however, reached back and placed her hand on my hip. Again, I expected the rejection, that she'd push me away. She didn't. She rubbed my hip lovingly. \n\nMy heart raced, my breath held for an eternity until my chest felt ready to explode. Then Avery moved her hand down between us and wrapped her fingers around my cock. Fuck, this couldn't be happening. Shouldn't be happening. \n\nAs soon as she started jerking me, I could breathe again. I grasped her breast firmly and pulled her back into my chest. My face, buried in her hair, nestled forward until my lips found her neck. I kissed her and she gasped silently in response. \n\nPart of me was shocked that her urgency seemed as powerful as mine. Why shouldn't it, though? We both had powerful hormones and needs. At the moment, those needs signaled release. \n\nAv shifted her butt away from me for a moment, but only so she could reposition my cock between her legs. Once I was in place, she scooted back into place and my cock slid along the length of her pussy. Her heat was palpable and she let out an audible groan as I brushed across her clit. \n\nWas Kaia still asleep? It was too damn dark to see even a hint of her outline. Over my breathing and pounding heart, I couldn't heart much else, either. Fuck it. Or cousin had tried to nudge us this direction already. It's not like she would object. \n\nWe stayed like that for quite a while -- me fucking my sister's thigh gap while she used her fingers to press my cock into her wet slit. There was no penetration, but it was a very fine line. A couple times I even felt the head of my cock hang up on the edge of her hole, only to pop out and keep sliding back and forth. All the while, I kept fondling her tits; she seemed to particularly enjoy it when I pinched one of those hard, puffy nipples. \n\nAt some point, I realized Kaia was indeed awake. It was probably the sound of the girls kissing that first clued me in. Soon after, Kaia reached around my back, pulling me in tighter to completely sandwich my sister. She even got in on fondling Avery's tits and I was more than happy to share. \n\nThe next time my cock caught up on the edge of Avery's hole, I felt her press down firmly on the tip. Instead of sliding past, I felt my shaft go inside. It couldn't have been more than an inch when I felt that welcoming tightness and froze. Had she intended this? Was I good with it? \n\nI felt her fingers stretch out along the rest of my length and then cup my balls. That didn't feel like someone having doubts. She then pushed her butt back into me, seeking deeper penetration. \n\nFuck it. We were all lost in the moment and I couldn't leave her or myself hanging. So I rocked my hips and sank deep inside her pussy. \n\nAvery moaned out loud, breaking what had been near silence to that point. It was like a starting gun had been fired, and all three of us moved from deep foreplay to outright fucking. My twin's pussy felt tighter than Kaia's, snug and slick and possessing an assertiveness of its own as it seemed to try to pull me in and clench. I freely thrust in and out, confident I'd last after the earlier activities. \n\nI could feel and hear Kaia and Av making out with abandon. I'd occasionally feel up both girls' tits, but I got the sense I was constantly getting in their way. It was hands and lips and grinding and moaning and slapping, but not a single word was uttered in the dark. \n\nOnce I really got to fucking, Avery had removed her hand. At some point, however, I felt fingers return to the point of our union. Hers or Kaia's? I suspected the latter but didn't follow the hand back to the source to be sure. What I did, know, however, was that the fingers were flashing furiously across my sister's clit. It didn't take long from that point for her to reach a violent climax. I held her in my arms as her body clenched and shook, whimpers pinched off by the sheer tension in her body. It was an amazing moment to share. \n\nOnce she came down, body unwinding, I gave her a few moments before tentatively resuming. I was close to climax and didn't wasn't to lose it, but I didn't know if she could handle the simulation. She answered my unspoken question by grabbing my ass and pulling me into her. I grasped her hip and pounded as fast as I could from this angle. Soon after, my own world exploded as I came deep inside my sister. \n\nWe just held each other tight after that, all three of us. No one dared ruin the moment by speaking, and no one wanted to let go. The chill air on our sweat slick bodies eventually prompted someone to pull the blankets back up. But Av and I? We stayed just like that, with me softening inside her, holding and hugging and breathing as one. \n\n#\n\n\"Wakey wakey.\"\n\nI groaned at the intrusion upon some strange dreams. Dim light probed at my closed eyes and consciousness struggled to surface. \n\n\"Good, you are alive.\" It was Avery and I felt her body pressed against my back, her breath on my cheek. Last night came rushing back to me. \n\n\"I am,\" I said, croaking. \n\nI felt her hand reach over me and fondle my flaccid cock. It was a reassuring sign that she wasn't panicking or full of regret. Not yet, anyway. \n\n\"And you're crusty.\"\n\nI could hear the humor there. Her fingers played around with my shaft and my balls for a bit, retreating before I could get hard. Fuck, I really had to pee. \n\nI scooted so I could roll onto my back. It was just me and Avery in the bed, the first hints of dawn seeping through the closed blinds. Her hair was a mess and her eyes a little puffy. She'd never looked better or sexier to me.\n\n\"No thanks to you,\" I said. \"And good morning.\"\n\n\"Good morning. And I'm pretty sure you started things last night.\"\n\nI smiled. \"Well, you started the spooning and wouldn't let go. What was I to do?\"\n\nAv returned my smile. \"Treat a girl right, I suppose.\"\n\n\"So we're okay?\"\n\nShe nodded. \"Yeah, I think so. I hope so. Just so long as this stays between the three of us.\"\n\n\"My lips are sealed,\" I said. \n\nAv grinned. \"It's not your lips I'm worried about.\"\n\nShe leaned over and placed a soft kiss on my lips, one that I returned. Not exactly chaste, but not too heated either. It lasted maybe a second. Our first kiss.\n\n\"Kaia's in the shower,\" she said. \"She might want one last chance to play with her nuts. And I suppose you might like another look at her chest.\"\n\nThere was playful humor in her voice, so clearly she didn't mind sharing. Amazing girl, indeed. \n\nI looked at my sister's tits and gave them a playful grab. \"Well, she's got the second best tits I've played with in the last few hours.\"\n\n\"You're a lousy liar. But I'll take the flattery.\"\n\nI crawled out of bed. \"Will you be joining us?\"\n\n\"Nah. Shower isn't big enough and someone has to keep the parents away.\"\n\nI nodded. \"Later?\"\n\nThat was a very big and open ended question. She looked very contemplative, which I respected. \n\n\"We'll see.\"\n\n#\n\nBy late morning, we'd all eaten breakfast, packed up the Christmas decorations and our luggage, and given the entire Parnell cabin complex a thorough cleaning. Kaia and I had enjoyed a very hands-on shower for two before that, but there hadn't been time for anything else since. It had been a perfectly fitting finale after the last few days. \n\nWhen it was time to part ways, Kaia gave me an extended hug. \n\n\"That was fun,\" she whispered. \"I like making deals with you.\"\n\n\"Same.\" \n\n\"And one other thing.\"\n\n\"What's that?\"\n\n\"I'm not wearing a bra or underwear.\" She giggled. \"Just some fuel for your imagination on the drive home, assuming you can stop checking someone else out.\"\n\nHopefully, my flushed reaction wasn't noticed by anyone else. And, yeah, I totally checked out her figure as she gave a goodbye hug to Avery. No bra, check. No panties under those leggings? Presumably check as well. \n\nAvery broke her long hug with a laugh and playful swat to our cousin's shoulder. While Avery and I loaded our luggage into the SUV, I asked her what that had been about. \n\n\"Oh, she's already plotting spring break,\" Avery said. \"For the three of us.\" \n\nI grinned. \"Oh dear.\"\n\n\"Exactly.\""
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "cousin",
        "sister",
        "twins",
        "incest",
        "threesome",
        "flashing",
        "bargain",
        "deal",
        "denial",
        "shower"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/chests-n-nuts-roasting"
}