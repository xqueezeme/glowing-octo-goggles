{
    "title": "Best on Board",
    "pages": [
        "Author's Note\n\nAll characters appearing in this work are over the age of 18 and are fictitious. Any resemblance to real persons, living or dead, is purely coincidental.\n\nSeven and a half thousand meters! And yes, the seatbelt light is still on. Ah Bob, you've still got it! \n\nBob had set himself a challenge: to calculate the maximum altitude of the plane he was on before it reached that altitude. And it was hard, too; not just a case of looking up the cruising altitude of the plane. This was a short hop flight from Sydney to Coffs Harbour, the airline wouldn't waste fuel getting all the way up to an efficient cruising altitude; it would only spend a few minutes there before having to descend. For one, that wouldn't leave enough time for a pass of the service trolley, and secondly the airline would save fuel on the shorter climb.\n\nBob wasn't exactly thrilled by this trip, so a good mental exercise spiced it up a bit. Mum had virtually kicked him out of the house. He could still her barbs ringing in his ears.\n\n<center>~~~</center>\n\n\"You're nineteen years old, for God's sake Bob! The prime of a young man's life and you're spending it playing World of Witchcraft ten hours a day...\"\n\nMan she couldn't even get the name right. And it wasn't ten hours a day either; he usually goggled back in for a few hours after she went to sleep.\n\n\"... no job, no girlfriend ...\"\n\nGeez, Louise! He was going to Uni in March. What's the point in getting a shitty job at McDonalds for a month? And girls? Bob froze whenever a girl talked to him, especially a pretty one. What if she thought I fancied her? That I was trying to chat her up? She'd think I was a creep. It was safer to say nothing.\n\n\"... I'm sticking you on a plane to visit your Grandmother ...\"\n\nWhat the fuck?\n\n\"... You're a good looking kid, Bob. Get out and enjoy the nightlife, Coffs is full of young people in summer. Get a tan, smoke some dope if that's what you want to do; just live a little!\"\n\nAnd then the kicker: if ever there was a take-back moment, the one thing you did that you wish you could reverse, it was this one.\n\n\"Does Gran have broadband?\" he asked.\n\nBig. Mistake.\n\nHe'd never seen that look in Mum's eyes before. It wasn't frustration; and not hate, exactly, but it was a close cousin. \"No!\" she yelled. \"No electronics. No laptop. No X Box,\" she turned on a heel to leave and then: \"AND NO PHONE!\"\n\n<center>~~~</center>\n\nAnd that, he thought wistfully, is how you come to be sitting on a plane with no calculator and two pages of differential equations and aerodynamics. Still, it wasn't that hard; he had to give himself a time limit to make it interesting.\n\nBut I still need to check if I'm right, he thought. The airlines were on top of this stuff, the pilot would be on strict instructions to minimise fuel. He didn't hear any announcement from the pilot earlier, but the flight staff would know. As soon as the seatbelt light went off, he pressed the button for assistance. Shouldn't take long to call a flight attendant, he thought. Only a dozen or so people on the flight. Most of the rows were empty.\n\nBob looked back down at his calculations, running a few last minute double checks. He had just satisfied himself that all was well when an arm reached above him to switch off the assistance light.\n\n\"Good afternoon, Sir. How may I assist you?\"\n\nBob looked up from his work, sweeping a lock of dark hair away from his glasses and ... froze. The flight attendant was young, about his age, and achingly pretty. Not beautiful. Not a sex goddess, but very, very pretty. She was tall, of course, but it's hard to tell when you're sitting; and dressed in the stylish and elegant uniform of the airline. Short black heels, skin toned pantyhose outlining a trim pair of calves, a navy blue pencil skirt curving over her slim hips and finished with a thin red belt, a tightly fitted navy on white polka-dot blouse cut narrow at her trim waist to accentuate the shelf of her small round breasts, and a navy blue silk scarf with red and white detail knotted at her throat, modestly covering the view down her blouse as she leaned over him.\n\nThe name tag pinned on the curve above one breast said \"Vicky \u2013 Trainee.\" Daring to look at her face \u2013 anywhere but those tight, firm breasts \u2013 Bob saw delicate features: a small, straight nose, chocolate brown hair tied into a neat pony tail that reached just past the shoulder, and maybe the prettiest olive-green eyes he had seen ... not that he ever looked into girls' eyes.\n\nHe opened his mouth to say something but nothing came out, just an embarrassing croak.\n\nShe smiled down at him; white, straight teeth, soft pink lipstick. What would it be like to kiss those lips? \n\n<center>~~~</center>\n\nSeeing that 10C was tongue-tied, Vicky dropped into a squat so that she wouldn't be looming over him. He was cute. Geeky-cute, with thick black hair that hung in locks \u2013 not greasy \u2013 just a bit tousled; and he had a pencil with a couple of pages of diagrams with lines and curves and numbers and symbols. Nutty professor was her first thought; but he wasn't old enough to be a professional academic, he looked about her age, maybe 20 or 21 at a stretch.\n\nShe looked into his eyes, rich and blue with dark lashes behind a pair of black rimmed glasses that were so nerdy they were actually a bit cool. His gaze flicked downwards to her hem, not long enough to linger, but she realised with a thrill that her lap fell in a perfect line to his face and that if she didn't have her knees together he would be able to see her panties.\n\nShe felt a little flush rise to her cheeks to match the one blooming on his.\n\n\"Hello Sir,\" she started again, catching his blue eyes and feeling goose bumps rise on her breasts. \"Is there anything I can get you? A glass of water, maybe?\"\n\n\"Hi,\" he said nervously ... and then nothing else.\n\nVicky smiled, not just with her mouth but with her whole face. The poor guy was more nervous than she was and this was her first flight out the academy. \"Hi, to you too, Sir. I'm Vicky.\"\n\n\"No. I'm sorry,\" he stammered. \"High. How high? The plane?\"\n\nNervous flier, she thought. The plane's nearly empty, I bet I could sit here and hold his hand the whole way. And if he got really nervous, he might need a cuddle, too, she thought mischievously.\n\n\"Vixy Vixen!\" she heard from behind her in the aisle.\n\nAh, crap; Celeste. Celeste was the latest in a lifetime of girls who constantly demoted Vicky to the second or third prettiest girl in any given room. Vicky knew she was attractive, but she never seemed to know how to best do her makeup, or her hair, or what clothes to wear. There was always someone; someone with bigger boobs or better hair or nicer clothes. A uniform should have been a saving grace; Vicky thought she looked tr\u00e8s \u00e9l\u00e9gante in the flattering skirt and blouse, and the scarf made her feel like Audrey Hepburn, but Celeste rocked it. She wore the skirt a little higher, showing more leg and lengthening her narrow waist; she knotted her scarf at the side and popped the top button of her blouse, showing a glimpse of one lacy bra cup when standing and a whole face full when she bent over ... which she only ever did to the cute guys. \n\nCeleste wasn't pretty though, she was gorgeous. She was also the Senior FA on this flight and therefore not just Vicky's boss, but her instructor as well.\n\n\"Oh, you little Vixen,\" she teased charmingly. Vicky touched a scarlet manicured nail to her breast beneath the name tag, capturing the attention of 10C again, his dreamy eyes widening as her breast dimpled beneath her finger. \n\n\"Vick-key!\" she mouthed in pantomime at the cute passenger, smiling and rolling her olive green eyes at Celeste's adopted nickname. He seemed torn as to whether he should be looking at her breasts (at least the one with the name tag), her eyes, or her lips; and instead cycled between them looking more and more distressed. Finally he lookup myopically up at Celeste and Vicky realised with an uncharacteristic surge of satisfaction that his glasses were for reading; he couldn't focus on Celeste a few paces down the aisle.\n\n\"I see you've found BOB,\" Celeste smiled. \"Well done you.\" \n\nVicky blushed again. This was probably the first thing you learned in the academy, but not from the instructors: BOB is Best On Board; the cutest, (hopefully) single guy on the plane for whose attentions the girls would all do battle. Vicky never imagined herself buying into it, and now here she was on her first flight, smiling and touching her breasts at a cute guy and getting jealous of the gorgeous Celeste sneaking up behind her.\n\n\"How did you know my name?\" 10C asked, squinting up at Celeste.\n\nVicky snorted a little in spite of herself. What a coincidence! BOB's name is actually Bob! She held a hand to her mouth to hide the smile.\n\n\"Flight manifest,\" Celeste trilled, quick as flash. Oh, she's good! \"Now, Bob, you gorgeous thing,\" she said, leaning over Vicky's shoulder and displaying ample cleavage and lacy underwear. \"What can the two of us do for you today?\"\n\n\"Um,\" he began. \"I wanted to, uh, know our ...,\" he seemed to be searching for an elusive word. \"... How high we are going? Today. In the plane?\" He seemed to want to keep talking but had run out of words.\n\n\"Oh, you cheeky thing,\" giggled Celeste. \"You're making me all giddy. I've been asked that every week for the last twelve years, but never by BOB!\" She flashed her eyes and fanned her breasts, smiling and flattered. \"How high do you want to go, handsome? One mile? Or maybe two?\" she asked, putting a hand on Vicky's shoulder.\n\nVicky felt less self-conscious about her blushes earlier, because now her cheeks were flaming scarlet and her earlobes incandescent. Then Bob saved it by deliberately misunderstanding her thinly veiled Mile High Club reference; a confused look contorting his fine features as he looked back down at his pages of calculations.\n\n\"Huh! That doesn't seem high enough. I had us at over four miles, maybe I made a mistake.\"\n\nVicky giggled and stood up, whispering \"Touch\u00e9\" to Celeste as she escaped back down the aisle to hide her embarrassment. \n\nAs she slipped past Celeste, she heard her lean closer Bob and said in a conspiratorial whisper \"No mistake, Sweetie. Let me get service finished and I'll make sure you're looked after.\"\n\n<center>~~~</center>\n\nAltitude! Oh man, Bob. Altitude! Altitude! Altitude! You're such a dork! The pretty flight attendant ... Vicky, it even sounds pretty ... had his head spinning. Girls sometimes did talk to him \u2013 mostly to get help with a physics prac or maths homework \u2013 which was fine; it put him on familiar ground. But talking to him and smiling ... not a fake I-want-something-from-you smile, a real one ... and Bob, just on a by-the-way here mate, did I mention she was pretty! That was surreal. He thought he had made a bit of a fool of himself. Vicky was probably laughing about him with the other red-haired one right now.\n\nAnd man, was she strange? Beautiful too! He couldn't see her properly until she leaned in above Vicky ... she called her Vixen ... Vicky didn't like it ... and then he saw too much; right down her blouse, the tops of her full breasts, her lacy white bra ... he even saw her belly button straight through the cleft in the middle. He couldn't look away fast enough. And then her face: clear creamy skin, beautiful dimples, green eyes, long lashes and cascades of glossy auburn hair.\n\nHe would have frozen into a statue there and then, but she surprised him back into reality with the altitude. She must have had it wrong ... the plane seemed way higher than one or two miles. Then Vicky ran away and the redhead promised to check the altitude after service ... or something. She wasn't very clear.\n\nBob looked out the window past the vacant middle and window seats \u2013 he always sat on the aisle \u2013 and started sketching the wing. It had those V-shapes ... V for Vicky ... that combat wing-tip turbulence. Plotting force vectors on the wing, he reckoned he could estimate the mass of the plane. He'd need the air-speed velocity though; the redhead could probably ask the pilot for him, it's not like they had much else to do on an empty flight.\n\n<center>~~~</center>\n\nThe in-flight service started coming out. Bob hoped it would be Vicky and she would smile at him again, but there was a man facing backwards and the redhead was on the other end. Bob took off his reading glasses to get a better look. Oh, man. She is beautiful. His memories of earlier were just clip show flashes of breasts and skin and beautiful red hair, but now, as she stepped back from the trolley to serve a passenger he could see her through the gap between the trolley and the seats. Long legs, high narrow waist, curves everywhere! He could still see just a peek of lace above the vee of her open neck blouse, reminding him with a shiver of the more substantial look he had been afforded earlier.\n\nAs they moved a few rows closer he could make out her name tag: Celeste \u2013 Senior Flight Attendant. Wow! Senior? She looked maybe twenty-five, but she said something weird about twelve years on the job, so she must be at least thirty. And Vicky's boss, too. \n\nThere was only one aisle on the plane. He wondered where Vicky was and looked around to see if she was serving from the back, but there was just the one trolley up front. He looked forward again as the male attendant backed though and stopped the trolley just past his shoulder. Celeste finished pouring water for a passenger and walked towards him, hips swaying and smiling. Bob felt his heart beat faster.\n\n\"Hello Bob. Looking good! Feeling good?\"\n\n\"Um, yes thanks,\" he managed.\n\n\"We have a lean chicken breast with rice, or the vegetarian option is cucumber and pickle sandwiches.\" Celeste squatted down, one hand on Bob's knee and the other reaching under the trolley for a tray. Little electric shocks of pleasure ran from her fingers up his thigh; he was surprised and embarrassed to feel himself getting hard at her touch. Leaning closer and looking straight into his eyes, she asked \"Is there anything that you fancy?\"\n\n\"Oh! Ahhh, cucumber gives me ... you know ...,\" he mumbled, not wanting to say 'gas'. \"I'll have the chicken ... uhhh ...\"\n\n\"Breast?\" she smiled. \"With rice?\"\n\n\"Yes please,\" he answered, relieved, looking down at her hand on his knee and checking discretely to see whether his erection was visible as he fumbled with the tray table.\n\n\"There you go, Sweetie,\" she said, placing the meal on his table. \"Would you like a soft drink? Or you could buy a beer or a glass of wine?\"\n\n\"Um ... no,\" he said. Confident now that nothing looked amiss around his groin, he looked up again to admire her beauty again before she left. \"Just water, please.\" He brushed away another lock of hair and smiled nervously. You, Bob, are developing a way with the ladies, he congratulated himself for putting together three words, eye contact and a smile all in one complete package.\n\nWhile Celeste poured the water, he took the opportunity to take a mental snapshot, noting how high her breasts sat and swelled at the sides of her blouse. As she turned back to him with the glass, she slipped and juggled it for a moment, spilling a good slosh right in his lap.\n\n\"Oh my goodness,\" she cried, grabbing for serviettes. \"I am so sorry! Oh my God, I am such a klutz, I've never done that before!\" And then in a whirlwind of hands that belied her clumsiness with the glass, she flipped down the middle tray table, moved his tray across, stowed the water, flipped up and locked his table, and then pressed a handful of serviettes into his lap, right, smack on his erection. Pressing, dabbing, mopping the water and all the while babbling apologies.\n\nBob was dumbstruck. He couldn't move, couldn't talk, and couldn't believe what was happening. Tossing the sodden serviettes into the trolley, Celeste pulled another handful, this time dabbing more gently, the serviettes in her palm and her fingertips curved around the bulge in his pants, improbably growing harder despite the cold dousing it had just received.\n\nExpertly flipping his seatbelt open and taking his hand, she said \"Come with me, quickly. We'll use the dryer in the bathroom and fix you up in a jiff.\" And then she was standing and pulling his arm; mechanically, he stood and allowed himself to be led quickly down the aisle so quickly that the other passengers couldn't see the spreading mark on his pants.\n\n<center>~~~</center>\n\nVicky was in the galley checking inventory when Celeste came rushing in, dragging 10C ... Bob, his name is Bob ... by the hand.\n\nWhat happened next was an acrobatic performance worthy of a standing ovation. Vicky tried to reconstruct it in her mind as she lay in bed that night, and still she couldn't fathom Celeste's grace, dexterity and confidence.\n\n\"Vix,\" she said quickly, snapping paper towels from a dispenser. \"Glad you're here. Teachable moment, I need your help!\" She thrust them into Vicky's hand and then cupped the back of it, pressing her fingers \u2013 and the paper towels \u2013 into Bob's crotch.\n\n\"I've slopped water all over Bob,\" she said, kicking open the bathroom door, still holding one hand over Vicky's and using the other arm to herd them into the bathroom. \"I need you to help Bob dry off with the hand drier while I finish service with Daniel.\"\n\nAnd then, her gaze boring into Vicky's startled face, she said more slowly. \"We're only up to row ten, so we'll be up the back for at least another fifteen minutes before we clean forwards. You'll be on your own. Can you handle it?\"\n\nStill holding the paper towels, Vicky came to the sudden and belated realisation that the hardness beneath her fingers was an erection. She looked at Bob's face for the first time; it looked vacant and stunned.\n\nCeleste had them crammed into the bathroom before Vicky could reply. \"Sure. Fine.\" And then the bathroom door snapped closed leaving them in a moment of darkness before she heard the bolt shoot into place and the light came on. How the hell did she do that so quickly from the outside? Woman's a magician! \n\nHer hand was still on Bob's erection and she was starting to form an idea of his size, but she wasn't about to remove it until she figured out where this was going. The bathroom was so cramped; her breasts were touching his chest, and the only reason their groins weren't pressed together is because her bottom was propped up over the basin. They were about the same height \u2013 at least in her heels \u2013 and their noses were just a few inches apart. \n\nShe could feel Bob's hot breath on her face, sweet and fresh and tinged with the scent of airline peanuts. She looked at his eyes, shut behind his glasses, with several locks of hair dangling over and around them. His face was pinched and he was struggling to control his breathing.\n\nThis is no nervous flier. He's terrified! Of me!\n\nHis erection was hard and hot under her fingers; somehow her hand had conspired to tuck the paper towel up into her palm so that her fingers could more thoroughly enjoy what was obviously a generous handful of hard flesh. How long had they been standing here like this? It felt like ages but it could only have been a few seconds.\n\nShe had to say something. Or do something. But what? She was watching his open lips just a few inches in front of her, breathing raggedly, and realised with surprise that her own mouth was open and she too was panting. Her heart was racing. Without thinking about what she was doing, instinct took over; Vicky shut her eyes, leaned forward and kissed him. Softly, she closed over his lower lip, drew back and then did it again. Bob didn't respond; she opened her mouth again and poised her lower lip between his, her breath on his lips so he would know where she was even with eyes closed, waiting for him to respond.",
        "Slowly, his lips closed on hers and held there, frozen. She pulled away a tiny bit, completing the kiss and then opened for another. Bob was there too, open again and ready, and this time they kissed together, closing and pulling away in perfect synchronisation. Two more soft kisses and Bob tilted his head forward, touching his forehead to Vicky's but moving his lips inwards and away.\n\n\"There is no hand drier,\" he breathed. \"Is there?\"\n\n\"No,\" whispered Vicky, \"It's a fire risk.\"\n\n\"She tricked me.\" It was a statement, not a question.\n\n\"She tricked both of us.\"\n\n\"I'm sorry,\" he apologised.\n\n\"Are you?\" she said, moving to touch noses with him. \"I'm not.\" She tilted to one side to kiss his lips again. \"I'm going to buy her a big bunch of flowers,\" she smiled.\n\nFinally he opened his eyes, looking into Vicky's naked and defenceless gaze, realising that she was telling the truth. This was not some cruel joke.\n\n<center>~~~</center>\n\nBob raised his head again, opening his lips for Vicky to kiss, but still not brave enough to take the initiative to go first. Vicky tilted her head and kissed him again, not pulling away this time, but closing her lips in time with his and then opening again, developing some suction as she touched her tongue to his lip. Bob responded with more pressure, tentatively touching his tongue to the junction of their lips, not sure what to do next.\n\nVicky helped him, bringing her tongue to touch his, stroking lightly, entering his mouth and then pulling slowly away, teasing, drawing him back into her mouth. She probed forward again, extending the sweet contact along the length of Bob's tongue, tasting toothpaste, salt and peanuts.\n\nThe soft kisses had distracted her and when Bob's erection pulsed under her fingers she quickly began to make up for lost time, stroking through his pants, closing around the edges, greedily measuring his length and girth. Bob held his hands up by her shoulders, not touching and unsure where to put them. With her free hand, Vicky reached across and took his opposite wrist, moving his hand to her breast, and then guiding the other one behind her to cup her bottom, still perched on the sink.\n\nBob inexpertly felt the firmness of her flesh, shaping his hands around her curves, daring to squeeze gently, feeling the softness, pliant but firm under his touch. Gaining confidence, he moved his fingers around Vicky's bottom, running down the cleft covered by her skirt. With the other hand he stroked a thumb across her breast, seeking the nipple, but missing it and coming back for a second pass.\n\nVicky quickly popped the top three buttons of her blouse and then \u2013 momentarily losing contact with the bulge in Bob's trousers \u2013 she unfastened the front clasp of her bra, which fell away on the side that Bob wasn't holding. Whimpering small cries of encouragement, she returned one hand to Bob's erection and used the other to guide his fingers beneath the blouse, her nipple hard and proud immediately under his touch. \n\nShe unzipped his trousers and probed inside over his shorts, finding the root of his cock, squeezing and tracing its length downwards to the tip. He gasped at the closer contact, just the thin cotton of his shorts separating her hand from his manhood, and then kissed her again, harder, his excitement building as she rhythmically squeezed in time with their kisses.\n\nAbandoning her bottom, Bob brought his other hand around and cupped Vicky's small breasts, softly pinching the hard nipples, marvelling at their texture; lifting and testing their weight, squeezing them gently together and stealing glances around her kisses. Noticing this, Vicky arched back, breathing in and lifting her breasts upwards, pressing on the back of his neck to guide him down. She gasped with pleasure as he kissed one nipple, sucking it gently and then releasing as she had shown him with her mouth and then moving to the other one, probing with his tongue and feeling the hard bumps on the areole. \n\nVicky felt a fire between her legs and silently cursed the triple layers of her skirt, pantyhose and panties. The pencil skirt stretched tight over her hips; from the outside it was possible only to touch the pubic bone, but the heat was further down, between her thighs, and the only way there was up and under her skirt. Even then, the way was blocked by her underwear. Unable to manoeuvre in the airplane bathroom, the task seemed impossible. First though, she would deal with Bob and then together they would find a way.\n\nHer kisses became more frantic, voicing little cries of encouragement as he explored her breasts, rewarding the things she liked with a low moan and a squeeze of his erection. She unbuckled his belt and unbuttoned his trousers, allowing them to fall in a pool around his ankles. She didn't bother taking them any further, they would just have to stay there; there just wasn't enough room. Reluctantly taking her hand from the front of his shorts, she hooked both thumbs over the waistband, pulling them down and playing her fingers over his buttocks as she went. Bending slightly at the knees, she inched them lower until finally they too fell to the floor.\n\nHis cock stood straight up between them and she stole her first glance, confirming what her fingers already knew. He was about six to seven inches and medium thickness, and right now as hard as forged steel with pre-cum beading on the tip. Vicky wished she could kneel down and take him in her mouth; to taste him and explore all of the bumps and veins with her lips and tongue. Instead, she looked back into his blue eyes and took him in her hand, her thumb over the top and fingers underneath, stroking and relishing the throbbing power as she gently squeezed.\n\nStill holding Bob's gaze, she released his erection and popped forward off the hand basin. \"This is not going to be elegant,\" she warned him with a shy smile. She hitched her skirt higher on her waist and then reached down for the hem, sliding it up and over her hips. She hooked her thumbs into the pantyhose and panties together, pulling them both down to her thighs before she couldn't reach any further.\n\nThere was no room to bend over, but unfazed, Vicky popped her bare bottom back up on the basin, slipped out of her shoes and lifted her feet off the floor and over the commode. Showing admirable flexibility, she drew her knees up to her chest and then extended them straight up in the air and slightly apart, watching Bob between them.\n\n\"That was the most elegant thing I think I have ever seen,\" he whispered, spellbound.\n\n\"We're not done yet,\" she said, holding her bare thighs with both hands to maintain the position. She eyed the tangled mess of panties and pantyhose between her thighs. \"Help me.\"\n\nBob closed both hands around one naked thigh, his fingers just centimetres from Vicky's soaking but - at this angle - hidden vagina. He slid them upwards, relishing the smoothness of her leg beneath the sheer nylon until he could go no further and then repeated on the other leg, alternating until he slid the ball of nylon and cotton over her toes. \n\nFree at last, Vicky relaxed her long, smooth legs, and braced them high against the opposite wall behind Bob's shoulders. With the flexibility of a gymnast, she leaned forward to kiss him again, and taking him by the waist she drew him forward into the V of her thighs until the shaft of his cock rested against the lips of her vagina.\n\nVicky thought she was wet enough, but she had been caught before spoiling the moment of entry by wincing in pain. Conversely, the feel of a man sliding into her, smooth and tight and without resistance, had brought her to an immediate orgasm before, so there was plenty at stake. She knew they were on the clock, but surely some more foreplay couldn't hurt. \n\n\"Touch me,\" she whispered between breathless kisses, opening her knees a little wider in case there was any confusion about just where she wanted to be touched.\n\nUnable to see down between their bodies, Bob moved a shaking hand to her sex. Lifting his erection from Vicky's open lips, he touched her wetness with three fingertips but with no clear purpose. He probed around gently, mapping the foreign terrain of her womanhood by touch, brushing her clitoris to a surprised gasp and then following her whispered instructions lower until the resistance beneath his index finger fell away and he found her entrance.\n\nBreathing hot and ragged whimpers of encouragement into his ear, Vicky closed her eyes as Bob slid a finger into her \u2013 only as far as the first knuckle \u2013 and then she voiced frantic denials, no-no-no-please, as he withdrew. She moaned with pleasure as he returned, deeper this time but still as smooth as silk, staying longer as she warmed his cool touch with her furnace heat. She arched, moving her hips, wanting him deeper, wanting a second finger to open her wider; she sensed his lack of experience but was reluctant to spoil everything with too much instruction. She allowed Bob to explore by touch inside her vagina, kissing him and trying not to think about how much it felt like a vaginal exam, making sure she reinforced everything he did right with moans and whimpers and soft bites to his lips. He was definitely a most attentive student; within a minute he had his first two fingers insert to the hilt, rhythmically fucking her with the length of the last joint and gliding sensuously over her clitoris with the tip of his thumb.\n\nSoon his entire hand was coated in her freely flowing juices. The waiting was too much to bear and she was so hot \u2013 her need so great - that she felt sure she would come before he was fully inside her. Breaking their kiss, she touched noses and looked wantonly into his eyes, seeing that he was at least as ready as she was.\n\nVicky swallowed nervously and whispered \"I'm ready.\"\n\n~~~\n\nShe's ready? Well that's great, but what about you Bob? Are you ready?\n\nIt occurred to Bob that until about twenty minutes ago, his most memorable interaction with a girl had been when his physics lab partner asked whether he had a girlfriend. Hate to burst your bubble Bob, me old mate, but it's only an \"interaction\" if you answer her; blushing, looking away and getting a hard-on thinking about it later doesn't count, my friend. \n\nCeleste raced into the memorable-moments lead when she put his hand on his knee and then thirty seconds later she demoted that to number two by putting her hand on his cock. And she squeezed a bit, too; you did notice that didn't you Bob? The beautiful redhead squeezing your cock didn't escape your attention, did it?\n\nSince then it had been like a cyclone at an athletics carnival; new personal bests set before the ink had dried on the old ones: Vicky's hand on his cock, Vicky kissing him, kissing Vicky back. And then things had really escalated: his hands on Vicky's breasts \u2013 so soft, and the nipples so hard, feeling their weight in his hands, just enough to fill his palms with their soft warmth \u2013 Vicky undressing him and holding his cock ... all good memories Bob, just pop 'em in the bank and let 'em accrue interest. \n\nAnd then he was taking off her pantyhose \u2013 Christ, did you see what she did with those long, beautiful legs, Bob? \u2013 he would have to consider later whether that was truly a memorable moment PB that beat touching her breasts ... touching? Bob, you were fondling, my friend ... but while his hand was between her thighs he was sure he could feel heat radiating out from between them.\n\nAfter the pantyhose he had wanted to see her pussy, but didn't manage more than a glimpse in the cramped conditions. Bob had never seen one except on the computer screen and he was curious; he suspected that regular girls didn't look like porn stars because most porn stars didn't look quite right ... they looked ... kind of ... battered; much like professional boxers didn't look quite right around the face. \n\nThen the room had started to spin; Vicky had pulled him close and relegated the cock-holding, breast-fondling and underwear-removing to a distant silver and bronze by \u2013 and let's not put too fine a point on this, folks: PRESSING HIS COCK UP AGAINST HER PUSSY ... no wait, scratch that ... WET PUSSY! Wet? How do you know she was wet, Bob, if all you got was a glimpse? Well I'm glad you asked Bob, because the answer is a good one. Every time he moved ... or twitched ... or breathed ... or she breathed ... his cock moved against her with a delicious, frictionless, surface tension. It was like rubbing your hands together with liquid soap; not sticky, they were just attracted to each other like they didn't want to pull apart.\n\nBob had never been so hard. As soon as his cock touched that wetness, he felt a giddy, tingling ... helplessness in his balls and bladder that was like an impending orgasm, but not the same. He had never felt especially in control down there, but like every kid over fifteen with broadband internet and a private room, he knew how to masturbate and he knew how to control his moment of release to a fair degree. But now his cock had staged a military coup, taking over his sensations and emotions to a point where he was no more than a spectator, worse: a prisoner. He didn't know precisely what was going on down there, but he did know two things; one: he was no longer in control of it, and two: he didn't care because it felt fucking fantastic.\n\nWhen Vicky asked him to touch her, it was actually a bit of a relief. Taking his cock off her pussy broke the spell. Not completely, just down from DEFCON 1 (ready to explode and it would probably be all over before he was even aware of it) to about DEFCON 3 (still dangerous, but he might get a bit of warning of impending disaster). Touching her down there was incredible; hot and slick, making her wriggle and gasp and moan. Then he was inside; her soft pussy lips closing down over his finger, so hot inside she was like an oven. The finger fucking was extraordinary; he didn't think he got everything right, but he didn't think he got anything wrong twice, either. Kissing her and stoking her breasts with the other hand while she writhed on his fingers, coating his hand in that wonderful natural sex lube ... it was damn near orgasmic.\n\nAnd now she was ready. She sure as hell felt ready. And be fucked if she didn't look good and ready, too. Olive green eyes wide open, pupils dilated, face flushed, pert breasts rising and falling with her ragged breathing, and those legs \u2013 naked to the hip \u2013 propped up by his shoulders and shaking with anticipation. Oh yeah, she was good and ready. But could he deliver?\n\nTaking his cock in his hand, he briefly considered that this was the moment; the last moment of his life as a virgin, so he closed his eyes and moved the tip of his cock into the warm, moist folds of her lips and ... nothing! The cruellest of all possible practical jokes; there was no hole there anymore! God had decided He needed Bob to stay a virgin and Vicky's pussy was closed for business. For fuck's sake \u2013 ha ha, good one Bob \u2013 literally for fuck's sake, his fingers were just in there. Where the hell did it go?\n\nHe was about to panic ... really Bob? Cos I think that ship sailed about ten minutes ago ... when Vicky took a gentle hold of his cock and slid it down ... and down ... fuck! He wasn't even close ... and down, until he was suddenly sure she wanted him to fuck her in the ass ... and then ... heaven; the resistance beneath the tip of his cock disappeared and it just dropped into place in her pussy like a ball and socket joint. Now was the moment: one frictionless push forward and he wasn't a virgin anymore, he would enter the soft, wet darkness of her pussy and come out ... what? A man? Well, maybe not, but at least not a virgin.\n\nWithout even realising, he was back at DEFCON 1. That giddy, tingling helplessness in his balls and bladder came back the moment his cock touched Vicky's slick pussy. It doubled when her hand closed around his shaft and then trebled when she seated him in her entrance. Just the thought of leaning forward, overbalancing and sliding inside ... whoops, sorry Vicky, I seem to be fucking you ... opening her up and filling her with his cock; it tipped his fragile state and without any warning at all his balls were contracting and preparing to unload all over Vicky's pussy lips.\n\n\"No!\" she cried, horror-struck, seeing what was about to happen. \"Don't you dare!\" And then the divine feeling of ecstasy radiating out from his cock was replaced by excruciating pain as Vicky pinched his nipple through his shirt and twisted for all she was worth. Oh my God, the agony! As the worst of the pain quickly faded, he realised with dim gratitude that his orgasm was gone too; not entirely, he was still at DEFCON 1, but he wasn't coming and he still had a chance to get inside her before he did.\n\nBob looked at her sheepishly. \"Sorry.\" An apology seemed warranted.\n\n\"Is it OK?\" she asked. \"You didn't ... did you?\"\n\nHe shook his head.\n\nHaving released him when he almost came, Vicky once again closed her fingers slowly around his girth. He felt himself nearly tip over the edge again but she saw what was happening and eased off, allowing the tip of his cock to rest in her entrance with just her fingertips touching his shaft. Feeling a despair that seemed totally unwarranted given that this was the single most exciting fifteen minutes of his entire life, Bob resolved to simply push ahead \u2013 literally \u2013 knowing that he would come in just one stroke, but at least the sweet agony would be over.\n\n<center>~~~</center>\n\nVicky felt trapped; and it had nothing to do with the cramped conditions of the bathroom. She desperately wanted to feel Bob inside her, but he was so close to coming that she couldn't move ahead without triggering his orgasm. And, she thought a little uncharitably, he seemed incapable or unwilling to deal with it. Surely a good looking guy like him has developed some strategies to deal with premature ejaculation, right?\n\n\"Bob?\" she asked, suddenly sure that knew what was going on. \"Have you ... ever done this?\"\n\nHe shook his head, not able to meet her eyes. And then, as if he felt something needed to be said \"Have you?\"\n\nBingo! But this needs to be handled delicately. She smiled at him, tilting his chin back up to look at her face and taking both his hands in hers. \"In an airplane? No,\" she answered discretely. \"And Bob?\"\n\nShe waited a few seconds until finally he made eye contact, arching his eyebrows in a worried, questioning expression that signalled he was listening.\n\n\"Believe me when I say this,\" she said softly and earnestly. \"It has never! Ever! Felt this good.\"\n\nHe looked at her without acknowledgement.\n\n\"Do you believe me?\" she asked.\n\nHe swallowed and slowly nodded.\n\n\"Good,\" she affirmed, taking control again, holding his hands to her breasts. \"Because we are going to make this amazing.\"\n\nHe stroked her nipples in agreement, watching with fascination as they pricked back up under his touch. Vicky sighed her delight, keeping his focus on the pleasure he was giving her with his hands while she took a firmer hold of his erection.\n\nNow that he was refocused she looked back at his face and saw more of the man she had first noticed when he was working on his equations; the nutty professor with the glasses and tousled hair. It gave her an idea. \n\n\"Tell me what you were working on earlier, when you called me,\" she said. \"What were those diagrams and symbols?\"\n\nThe transformation of Bob's features was now complete. Gone completely was the fear, apprehension and nervousness; and in its place confidence, intelligence, and joy. And the effect extended beyond just the way he looked; still whispering, he described the challenge he had set himself, speaking with confidence and animation that she hadn't yet heard in his voice. To Vicky's delight, it also translated into a confidence and surety with which he stroked her breasts. Quite distinct from his earlier tentative fumbling, he teased and titillated her, finding sensitive zones that she didn't even know existed, sending floods of endorphin-loaded pleasure through her body.",
        "Vicky let him continue, who wouldn't, sharing his love of the numbers as a physical experience though the pleasure he gave her. Winding down in his explanation, he finally explained how he had arrived at a solution before the seatbelt light was extinguished, but it wouldn't mean anything unless he was actually right.\n\n\"I have some good news for you, Bob,\" Vicky whispered with a shy smile.\n\n\"Huh?\" he said, snapping out of his recollections and focussing back on her face. \"What? Was I right?\"\n\n\"I don't know about that,\" she said. \"But I'm pretty sure you're not a virgin anymore.\" She lifted her hands away from their groins with a flourish. \"Ta da!\"\n\n<center>~~~</center>\n\nBob looked down to see Vicky's sex for the first time, and to his amazement he saw her engorged lips open wide and wrapped tightly around the base of his cock.\n\n\"Oh, sweet Lord,\" he gasped. \"I'm fucking you!\"\n\n\"Well, that's up for debate,\" she giggled. \"I think you have to start moving before you can say that.\"\n\n\"But what if I ...?\" he began with anxiety. But it was an empty concern; he didn't feel as if he was about to come. He felt hard and excited, but in control. \n\nHe was unable to credit what he was seeing; his first good, close, live look at a pussy and his cock was already deep inside it; just half an inch at the base still visible, hard and bulging, stretching her small opening around its girth. He slowly pulled out, relishing the way her lips clung to his shaft, leaving a coating of her juices on him to lubricate his re-entry. When he was all the way out, he could more clearly see her shape: a small, dark thatch of trimmed pubic hair over the long, pink heart shape of her glistening womanhood, still open wide from his cock. As he watched, Vicky flexed and closed her pussy sexily, as if inviting him to open her up anew.\n\nBob moved his knob back to her slick entrance and simply pushed in without any pause or resistance, the warm, slick walls of her vagina welcoming him, holding him in their tight embrace. Getting to the same point as before, Bob pushed deeper, pressing his groin firmly into Vicky's swollen pussy, causing her to gasp and voice her pleasure.\n\n\"Are you OK?\" he asked. \"You didn't ... did you?\" Echoing her earlier concern over his near-orgasm.\n\n\"Don't worry about me,\" she whispered, kissing his mouth. \"I came twice already just getting you in there.\"\n\nBob looked at her sceptically and she opened her eyes wide in earnestness, smiling and nodding. He didn't think women came that easily, but he also understood that even if they did come, it didn't mean they wanted to stop having sex.\n\n\"I can feel you right here,\" she said, taking his hand and touching a place just above her pubic bone. \"Your shape is ... kind of ... a little bit ... wonderful,\" Vicky said, shyly moving her lips to his ear. \"When you're almost all the way in, it touches a spot that makes me feel breathless.\"\n\nExperimentally, Bob flexed his cock, feeling it swell inside her and press more firmly into the back of her pussy. With another surprised squeak, Vicky's legs jerked away from the wall against which she was bracing and locked around the small of his back, her thighs still pointed upwards, raising the angle of her vagina.\n\n\"Still OK?\" he asked.\n\n\"Hell yes, it's OK!\" she whispered urgently, waving her hands and fanning her breasts. \"Don't stop.\"\n\n<center>~~~</center>\n\nVicky thought she knew what was happening: Bob's cock had an upward curve and with the raised angle of her pussy, she thought that he might be touching down on her G-spot, which until now she was sceptical even existed.\n\nShe hadn't been lying when she told him she had come earlier. Twice, no less! When he was distracted with his physics, she had started working his cock into her canal, setting off two separate contractions that spread a warm pleasure throughout her pussy before they relaxed, allowing her to take him deeper. As far as orgasms go, they were perfectly delightful, all tingly and tight around his hard cock, but hardly the screaming, bucking, climaxes that the women's magazines insisted she ought to have.\n\nIn her more charitable moments when she allowed for the possibility that G-spots might exist, and that their stimulation just might bring some women to orgasm, Vicky imagined that they would be much the same as regular clitoral orgasms. Clitoral orgasm, she thought. I bet a man came up with that one. She had never been a huge fan of her own clitoris; it was so sensitive and most guys were so rough with it, moving from foreplay to sex was often a relief. Except with Bob, of course. For the most part, Bob's glancing touches of her clitoris were brief and sweet little shocks of intense pleasure. To be honest, she wasn't all that impressed with the clitoris's role in a clitoral orgasm, because none of hers had ever involved the clitoris at all.\n\nI've got some news for you Vick; we're going to have to rethink our views on G-Spot orgasms because I believe we're well along the road to having one. And here's the Stop Press, Sweetie: it's nothing like anything we've experienced before.\n\nVicky felt the delicious gliding friction as Bob began to fuck her, slowly drawing about three-quarters of the way out before running gently but firmly all they back in with a little bump to her pussy and a big one to what she now thought of as her G-Spot, setting off a little shock wave of pleasure and making her want to inhale and exhale at the same time. Instead she released a little yelp and clung even tighter to Bob's waist with her upturned knees, accidentally kicking him in the backside with her heels, which transferred into her pussy via his cock like a sonar echo of the initial thrust.\n\n<center>~~~</center>\n\nWith his waist locked between Vicky's thighs, Bob thrust from the hips, building up a rhythm, varying his depth and noticing that even though Vicky squeaked or gasped every time he touched down, her reaction was even more pronounced if he only did it every three or four stokes. He could feel a familiar building sensation in his balls; not like the DEFCON 1 hair trigger of earlier this was simply an early warning sign that he was ready to come, but he could hold it off for a while longer by dialling things back.\n\nWanting to savour the deep warmth of Vivky's sex before he slowed down, Bob gave three hard thrusts in a row, driving firmly into her pussy and holding there, flexing his cock and relishing her tight grip down the length of his shaft. With each one, Vicky cried out louder, hugging him around the chest and burying her mouth in the hollow of his neck on the third one to stifle a scream. As he withdrew half way to regain control, she squeezed frantically with her arms and legs to get him back inside.\n\n<center>~~~</center>\n\n\"No!\" Vicky whispered urgently in his ear. \"Don't stop. I'm going to come!\" It didn't feel like a lie, but Vicky couldn't honestly say what was happening; she only knew that it was happening right now and it was unlike anything she had ever experienced before. She felt each deep thrust driving her closer to a precipice, to the very edge of an experience that was foreign and exciting and scary all at the same time. Those last three thrusts drove her teetering to the edge, now close enough to sense the fall that awaited and all she needed was one last push.\n\nResponding immediately, Bob drove forcefully back into her pussy, almost lifting her bottom off the basin with his powerful thrusts. After two more stokes it was happening; she was falling, spinning, tumbling into an oblivion of pure sensation in her womanhood. She locked her arms and legs onto Bob, holding onto him as she screamed muffled cries into his neck and he drove her helplessly from one explosion of ecstasy to another. With every withdrawal she felt that she would float back down to earth on a soft cloud of bliss, and then he would thrust back inside, sending her spiralling out of control again.\n\nWhen finally she felt she was coming to some semblance of control, Bob stiffened and gasped; at the very moment she realised he was coming, she felt a hot blast of cum pound her G-Spot and she was propelled into a second orgasm almost as intense as the first. With his cock pumping and swelling deep inside her, Vicky felt Bob's hands close under her bottom and lift her up, driving her harder down onto his shaft as she ground her hips, relishing the feel of his cock stirring their combined juices in her pussy as she rained kisses down on his face.\n\nOpening her eyes she saw her own wonder and joy reflected on Bob's face and realised that \u2013 like him \u2013 she had in a very real way experienced sex \u2013 orgasmic sex \u2013 for the first time. She could no longer kid herself that she had ever had an orgasm before this experience; it was now embarrassingly obvious that she had mistaken ordinary vaginal muscle spasms for climaxes. It brought to mind stories she had heard that expectant mothers can mistake Braxton Hicks contractions for labour ... until, that is, they actually went into labour and found out how monumentally mistaken they had been. Her discovery, she reflected with a smile, was considerably more welcome than labour pains.\n\n\"Oh my God, thank you,\" she breathed.\n\n\"Is it always ... that good?\" asked Bob.\n\n\"Not for me, it's not,\" said Vicky, smiling shyly. She was afraid it might never be that good ever again.\n\nSuddenly there was a crashing of the service trolley parking in the galley outside. Uh oh! How long have we been in here?\n\nA man's voice drifted through the door, \"Hey, where's Vick?\"\n\nThen Celeste's voice, \"Probably got lost. It's a big plane for a rookie.\" Laughter from both of them, then: \"Oh crap, I left the water jug in the rear galley. Could you go get it for me please Daniel?\"\n\nVicky quickly disengaged from Bob and tidied them both up with tissues. \"Quick, she's giving you a chance to get out.\"\n\nWide eyed, Bob fumbled in the tiny space to pull up his shorts and pants, which were now almost dry, and escaped quietly past Celeste's discretely turned back. With the space to herself, Vicky quickly re-dressed, tidied her hair and lipstick and stepped apprehensively out of the bathroom to face the music from Celeste.\n\nCeleste was waiting outside with a big cheesy grin. She leaned in close and whispered \"Welcome to the Mile High Club, Vicky. You can pick up your membership card from the concierge.\"\n\n<center>~~~</center>\n\nAt the terminal in Coffs Harbour, Bob unbuckled his seatbelt and began making his way mechanically to the front of the plane. He was still in a happy daze, but was wondering whether he should ask to see Vicky again. He didn't see how he could, though; the crew were lined up at the exit and farewelling passengers, he could hardly stop and ask for her number ... not that he would have the courage to do anything so bold.\n\nHe could see the captain at the head of the aisle and then heard Vicky's voice from behind the bulkhead at the exit.\n\n\"Oh, Captain, I forgot to ask: one of the passengers wanted to know our altitude today.\"\n\n\"Really?\" he responded as Bob got approached the head of the aisle and saw Vicky around the corner. \"Air Traffic Control moved us a bit higher than I would have preferred. About eight thousand meters or so.\"\n\nVicky smiled at Bob as he went past. \"Good bye, Sir. I hope we see you next time you fly.\"\n\n\"Bye,\" Bob said wistfully, smiling back.\n\nReluctantly, he turned around and crossed the threshold onto the air-bridge.\n\n\"Excuse me, Sir. You dropped something.\" \n\nIt was Celeste. Bob turned around and saw her pick up a business card. It wasn't his, but Bob was a quick learner and trusted that Celeste was working in his best interests. As he dodged the passenger behind him and stepped back onboard, Celeste looked at the business card. It was for a local bar in Coffs.\n\n\"Oh, The Beachcomer,\" she said musically. \"Do you work there? That's next door to our hotel.\" She handed him the card, smiling and catching his eyes. \"Maybe we'll see you there at Happy Hour. It's Two-for-the-price-of-one-night tonight!\"\n\n<center>~~~ THE END ~~~</center>\n\n<center>Belinda LaPage</center>\n\n<center>Sydney, Australia, 2014 </center>"
    ],
    "authorname": "blin18",
    "tags": [
        "bathroom",
        "cfnm",
        "female orgasm",
        "male virgin",
        "mile high club",
        "airplane",
        "first time",
        "geek",
        "nerd"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/best-on-board"
}