{
    "title": "Suzie's Lessons Ch. 10",
    "pages": [
        "This is a fictional account.\n\n*********************************\n\nThanks to all of you that have written me back on this series. I am glad many of you have liked it and appreciate the kind words. Thanks too to Techsan for helping me edit this story. This is the final chapter for now. I want to try other things but you never know. Maybe one day I will come back to Suzie and Curt. Happy Holidays.\n\n**********************************\n\nThe afternoon at school went very fast. Even drama club seemed to go by fast, but Suzie could have done without the lecture from Mrs. Wood about practicing her lines. She had messed up twice and not at difficult parts. She had to spend more time studying or she would screw up the play. Right now though, all she could think about was the trip Mary, Mark and she were going to be making to the police station. Mark and Mary were meeting Suzie after drama club and they were going directly to the station. When the rehearsal was over, she quickly headed out for the parking lot. She found Mary and Mark easily and soon they were on their way in Mark's car.\n\nThey arrived at the station just before 4:30. They entered and told the desk officer they were there to see Detective John Peterson and Officer Lisa Banks. The officer had them take a seat but only five minutes later the Detective and Officer Banks appeared. They looked somewhat curiously at the three as they approached.\n\n\"Miss Johnson, good of you to come down again,\" Detective Peterson said. \"Are these friends of yours?\"\n\n\"Yes, they are,\" Suzie said. Before she could say anything more Mary stood.\n\n\"I believe I'm the one you're looking for,\" Mary said looking quite nervous.\n\nOfficer Banks and Detective Peterson looked surprised, but only for a second. \n\n\"Is that so,\" Detective Peterson said. \"And why would that be?\"\n\n\"I believe you have a bra of mine,\" Mary said.\n\n\"What is your name?\" Detective Peterson asked.\n\n\"Mary Williams,\" she said.\n\n\"Well, Miss Williams, I do in fact want to talk to you very much, right after I talk to Miss Johnson here,\" he said, then turned to Mark. \"And who might you be?\"\n\n\"I'm Mary's boyfriend,\" Mark said standing. Mary smiled slightly at the mention of his being her boyfriend.\n\n\"Were you at the party in question?\" Detective Peterson asked.\n\n\"No,\" Mark said.\n\n\"Okay, please wait here with Miss Williams. Miss Johnson, please follow us,\" he concluded. They walked down the hall to the same room as before.\n\n\"Have a seat, Miss Johnson,\" Detective Peterson said.\n\n\"Thanks,\" Suzie said, sitting in what was probably the same chair as before.\n\nWhen the officers were seated too, Detective Peterson started asking questions.\n\n\"So, Miss Johnson, it seems you left a good bit of the story out of our last meeting,\" he said, with a wry smile.\n\n\"Yes, sir. Mary didn't want to come forward and didn't want her parents to find out. She has just wanted to put the whole thing behind her since it happened,\" Suzie said.\n\n\"Holding information back from the police and possibly lying to us is a serious matter, Miss Johnson,\" Detective Peterson said.\n\n\"I know, sir. You have to know how distraught Mary was. We were afraid what she might do if her dad found out. She thought it would kill him. We worried she might be suicidal,\" Suzie said.\n\n\"Who is we?\" Officer Banks asked.\n\n\"Janie and I,\" Suzie said.\n\n\"Why don't you explain to us everything you know?\" suggested Detective Peterson.\n\nSuzie related the whole story from start to finish this time leaving nothing out.\n\n\"So, you were the one that called 911?\" Officer Banks asked.\n\n\"Yes.\"\n\n\"We knew that. That's why we called you back,\" Officer Banks said.\n\n\"Miss Johnson, would you go get Miss Williams for us and show her to this room. You can then go wait with her boyfriend. I want to talk to Officer Banks a second,\" Detective Peterson said.\n\n\"Okay,\" Suzie said. \n\nShe got Mary and led her to the room and then returned to Mark. Suzie waited with Mark for over an hour before Mary and the two officers came out. Mary looked a little tired, but also much less nervous.\n\n\"Miss Johnson, we should charge you for obstructing a police investigation,\" Detective Peterson said. \n\nSuzie stiffened in the chair and Mary and Mark looked concerned.\n\n\"But we're feeling hospitable today given the circumstances and the fact you brought Miss Williams in to talk with us now,\" he said. \"Officer Banks and I feel we will recommend you get off with a stiff warning to never obstruct an investigation again. Can we get that assurance from you?\"\n\n\"Oh, yes, Detective, thank you,\" Suzie said. Mary and Mark also said thanks.\n\n\"Okay, you three are free to go. Miss Williams, please call me tomorrow as we agreed,\" he concluded.\n\n\"Yes, Detective Peterson.\" \n\nThe three left the police station. In the car, Mary told them what had happened. She had related the whole story as best she could remember. She didn't want to press charges as that would involve a completely new trial on just her case alone, but she did agree to testify at the trial pending with Kathy Walker. She also agreed to tell her parents tonight or the officers would.\n\n\"How do you feel?\" Suzie asked.\n\n\"I feel somewhat relieved,\" Mary said. \"I'm nervous about the trial, but I think you both were right. I needed to face this in order to get it behind me.\"\n\n\"Do you want me to be there when you tell your parents?\" Mark asked.\n\n\"No, but thanks anyway. I need to do this with them by myself,\" she concluded.\n\nThey were all deep in thought for the rest of the trip back. Mary and Mark dropped Suzie home before heading to her house. Mary thanked Suzie again for standing by her and nearly getting in serious trouble on her behalf.\n\nSuzie had missed dinner, but her parents had a plate made for her. As her mother warmed it, and then she ate, she related the story of what happened at the police station to them both. Her parents were relieved to hear the police would not seek charges against her. They also were happy for Mary, that she was finally facing things and telling her parents. Surprisingly they asked little of the after prom parties. They only asked if she had a good time or not. When she finished eating and helped clean her dishes, she excused herself to study and memorize her lines for the play. \n\nSuzie carried her suitcase up the stairs and down the hall past Beth's room. As she passed by Beth's room, Beth yelled to her. Suzie stopped and poked her head in. \n\n\"Hi, Suzie, how are you?\" Beth asked.\n\n\"Great, Beth, how about you? How did your date go Friday?\"\n\n\"Well, I wanted to talk with you about that,\" Beth said. \"But first, I want to hear all about the prom.\"\n\n\"Okay, come in my room though so I can unpack.\"\n\nAfter they shifted into Suzie's room, Beth sat on Suzie's bed while Suzie unpacked, and they started talking about the prom. Suzie related the whole story including the night in the cabana at Curt's house and the trip to the lake. Suzie left out the sex parts though, so Beth had to ask.\n\n\"Wow, you got to stay overnight with Curt,\" Beth said smirking. \"You must have done it a lot.\"\n\n\"Beth, I can't tell you all the details. That won't be fair to Curt.\"\n\n\"Why not? I tell you everything,\" Beth said. \n\n\"That's different. You were asking for advice,\" Suzie said.\n\n\"I still am, but first you need to tell me what happened,\" Beth pleaded.\n\nSuzie related much of the story but didn't go into too much detail about the actual sex acts. Beth seemed satisfied and delighted with the rest of the story. \n\n\"Does it hurt much when you lose your cherry?\" Beth asked.\n\n\"Yes, but only for a short time,\" Suzie said. \"It's not as bad as anal though, because it's quick. Anal hurts during and after.\"\n\n\"Oh, my god, you did anal with Curt?\" Beth said. \"That must really hurt badly?\"\n\n\"It does,\" Suzie said. \"It can be pleasurable but I don't like it that much. Curt told me a girlfriend of his liked it and she thought of it as a good way to avoid getting pregnant. I would rather use condoms than take it in the ass all the time.\"\n\n\"Wow,\" Beth said. \"What's it like having a guy inside your vagina?\"\n\n\"After the pain of your hymen is gone, it's the most wonderful feeling of all,\" Suzie said.\n\n\"Beth, it's impossible to describe how good it feels. It's the best feeling in the world. You feel so full. A guy's dick can stretch you more than ever and he can reach places inside you that you can't with your fingers.\"\n\n\"Oh, it sounds delightful,\" Beth said.\n\n\"But you must wait,\" Suzie said, all of a sudden serious. \"You're too young to lose your virginity.\"\n\n\"I know, but sometimes I really want to,\" Beth said.\n\n\"I know but you need to fight that because it's too early for you,\" Suzie said, worried that Beth would not hold out.\n\n\"I will,\" Beth said.\n\n\"Well, tell me about your date?\" Suzie asked.\n\n\"We had a great time,\" Beth said. \"He is so nice. The movie was fun and we went back to his house after. We went down his basement to a rec room to watch TV. That is where it happened.\"\n\n\"What happened?\" Suzie asked curiously.\n\n\"I did it, Suzie,\" Beth said.\n\n\"You did what?\" she asked, worried.\n\nBeth told Suzie the whole story of what she did with Mark. \n\n\"Oh, so you didn't taste his cum?\" Suzie asked.\n\n\"No! Yuck, people do that?\" Beth asked.\n\n\"Yes, some do,\" Suzie said.\n\n\"What do you do with Curt,\" Beth asked.\n\n\"Beth, you shouldn't do what I do,\" Suzie said, hoping it would die there.\n\n\"But do you let him cum in your mouth?\" Beth asked.\n\nSuzie paused to think for a second and decided to be truthful, \"Yes.\"\n\n\"Oh, gross, Suzie!\"\n\n\"Actually, I love it and it adds greatly to the blowjob for the guy,\" Suzie said.\n\n\"It does?\" Beth asked.\n\n\"Yes, guys love to cum in a girl's mouth. They love it more when she swallows too. I think they get a thrill from the girl ingesting their seed. It completes the blowjob for them if the girl swallows,\" Suzie added.\n\n\"It looks disgusting though,\" Beth said.\n\n\"It's not the tastiest thing in the world but you can get used to it. It's incredible when it shoots off in your mouth. Though if he cums a lot, it can be hard to keep from gagging. Many girls dislike the texture as much as the taste. It tastes bland and salty. Actually, it tastes like bleach,\" Suzie related smiling.\n\n\"Yuck,\" Beth said. \"You like it?\"\n\n\"I do,\" Suzie said. \"I love sucking Curt's cock until he explodes in my mouth and then I swallow it all down. He cums huge too.\"\n\n\"I bet Mark would love it if I did that to him,\" Beth said.\n\n\"He probably would but you are moving too fast, Beth. You need to slow down or I fear you are going to regret having gone so far so soon,\" Suzie said.\n\n\"I know. I'll try to not progress anymore,\" Beth said.\n\n\"That's what you said before. You need to be stronger, Beth!\"\n\n\"You're right. Thanks, Suzie. I will be careful.\"\n\n\"I hope so,\" Suzie said. \"Now I have a million things to do like study and memorize my lines.\"\n\n\"You want me to read lines with you?\" Beth asked. \"I like doing that.\"\n\n\"Okay, that would be great, Beth. I can use the help,\" Suzie said.\n\nThey practiced together for an hour on Suzie's lines. Then Beth left Suzie alone so she could study some math before bed. Suzie was exhausted when she finally turned out the light for sleep. \n\nAll the sex talk with Beth quickly came to mind and she stirred restlessly. Her first thoughts were concerns about Beth going too fast but then thoughts of her sucking her boyfriend's cock kept creeping into her mind. Suzie found herself rubbing her pussy through her skimpy pajama bottoms. She contemplated fingering herself for a while and realized she missed going the whole day without sex with Curt. \n\nThey had been together everyday for about the last week and she missed being with him especially now that they were fucking. Her desire to masturbate was strong but she fought it off, preferring to wait until she could be with Curt. She fought restlessness for a while until she eventually fell asleep from being so tired. \n\nTuesday was a beautiful warm day. She rode to school with Curt and Janie as usual. Curt and she discussed working out again as usual after school. The rest of the day went like normal except she aced all her lines for the play and Mrs. Wood seemed pleased.\n\nSuzie met Curt in the parking lot after school and they went through the normal routine of Suzie changing then working out at the junior high school. They both pushed themselves hard to make up for the days off and Suzie was feeling some pain from aching muscles at the end. \n\nOn the way home, Curt broke some news to her. He had to go Wednesday night to another pre-season meeting at Rutgers for the football team. So he would not be able to work out with her. Suzie realized it also meant he would not be around to fuck her either. She decided to make tonight last.\n\n\"Curt, I'm sore from our work out. How about we go back and use the hot tub?\" she asked, with a devilish smile.\n\n\"That sounds fine with me but your swimsuit is home now, I believe,\" he said.\n\n\"Swing by and I'll run in and get it. Some other clothes too,\" she said.\n\n\"What will your parents think?\" he asked.\n\n\"They must know we are sexually active by now. At least I bet my mom knows. Besides I'm sore and the hot tub is a perfectly reasonable thing to do,\" she added.\n\n\"Okay, I guess you're right,\" Curt said, as he swung the car in front of her house.\n\nSuzie was back in ten minutes. She had seen her mom but her mom seemed cool with her explanation. Within ten more minutes they were changing in the cabana. Modesty was a thing of the past between them and they both stripped down in the main room. \n\nSuzie had to struggle to get her yellow polka dotted bikini on though, as Curt kept playfully grabbing her. He hugged her and palmed her tits as she tried to finish getting ready. He had gotten his suit on with his dick still flaccid but as he played with her it pushed out the front of his trucks noticeably. \n\n\"Down, boy,\" Suzie mused. \"Can't you control yourself and Cyclops?\"\n\n\"He missed you. Can't you tell? He only wants to show you how much he likes you,\" Curt teased.\n\n\"I know him,\" Suzie said laughing. \"He wants to find a hole in my body and invade it like some alien creature.\"\n\nCurt laughed and stated, \"I guess you do know him, because that is exactly what he wants to do.\"\n\nSuzie broke free and managed to get the bikini bra in place. Curt left her to finish with a smile and went to uncover the hot tub. He turned on the jets and retrieved some large towels for them to use when they got out. They both slipped quickly into the bubbling warm water and relaxed for a while. \n\nThe hot tub did feel great and Suzie could feel her aching muscles relaxing a bit. She was just about to close her eyes and lean her head back when Curt slid off the seat next to her. He wedged himself between her legs facing her. She looked at him as he bore in for a kiss. Soon they were kissing passionately and his hands were massaging her aching legs. In minutes their tongues were wrestling and one of his hands found her covered pussy and stroked the gash with her fingers. \n\nSuzie moaned into his mouth as he teased her sex. She was as charged up as Curt was and couldn't wait to feel Cyclops splitting her open and filling her like only he could. It was still bright light out at just before 6:00 pm. That meant they didn't have the cover of darkness to hide their activities in the tub. This didn't seem to matter much to Curt as he maneuvered her swimsuit bottom aside and worked his finger into her cunt. Suzie groaned at Curt's invading tongue.\n\n\"Curt, we shouldn't be doing this right here,\" she stated. \"Someone might see us.\"\n\n\"I can't help it,\" he said. \"Being this close to you is driving me crazy.\"\n\n\"Me too, but we should go in the cabana. Want to take a shower together?\"\n\n\"Okay, that sounds good,\" Curt said. \n\nCurt removed his hand from Suzie's pussy and she fixed the bottoms before they exited the hot tub. Curt's dick was half hard. Anyone looking would easily see the obvious bulge in his trunks. They quickly wrapped towels around themselves, not to dry off as much as to hide their bodies. As they walked to the cabana, Curt's mother appeared on the back porch and called to them.\n\n\"Curt, it's dinner time. Does Suzie want to stay for dinner?\" she asked.\n\nSuzie noticed movement at one of the upstairs windows and thought she saw Curt's younger brother move away from the window. She wondered if he had been watching them. \n\nCurt yelled back to his mom, \"We aren't hungry just yet. Could we come in later?\"\n\nHis mom gave them a questioning look but said, \"Okay.\" \n\nAs they entered the cabana Suzie said, \"That reminds me, I better call home to tell my parents what's up. Is it okay for me to eat with you?\"\n\n\"Of course,\" he said.\n\nSuzie grabbed the phone and dialed home as Curt started the shower. She explained to her mom she was eating at Curt's. Her mom was fine with that, but reminded her it was a school night. When Suzie hung up the phone and turn towards the bathroom, she saw Curt in the doorway, already naked. Cyclops was half hard and almost pointing to her as she walked to Curt. \n\nOnce inside the bathroom, she shed the bikini quickly and followed Curt's lead into the shower. At first they soaped each other like this was a serious shower but soon the touching centered more to the erogenous zones. Within five minutes, they were standing under the water, face to face, and stroking each other. Suzie had Cyclops in her hand and was making him fully hard quickly. Curt was kneading one ample breast while he sucked the distended nipple of the other. \n\nSuzie spoke to him hoarsely,\" We shouldn't take too long or your mother might get mad about dinner.\"\n\n\"You're right, but I don't need food. I want to spend hours fucking you,\" Curt growled.\n\n\"I know. I feel the same way. I want Cyclops in my mouth and pussy at the same time,\" she said laughing.\n\n\"He wants to be in both places at the same time,\" Curt said, smiling back.\n\n\"What should we do?\" Suzie asked.\n\n\"Turn around and bend over,\" Curt said.\n\nSuzie did what Curt asked and realized he intended to fuck her here in the shower from behind. His fingers played in her wet pussy briefly in order to determine if she was ready. All the sexual tension from the hot tub and in the shower had Suzie slick and primed. \n\nCurt eased his cockhead into Suzie's slot and she reached back to guide the head to her hole. Seconds later, Curt had the head wedged into her hole about a half inch. Even though Suzie had taken him several times over the last week, his dick was still huge and her twat tight as a baby's glove. Suzie groaned with the exquisite feeling and from being stretched to accommodate his girth. \n\nThe water from the shower sprayed down on her back as Curt slowly worked his fat spear into her slowly giving hole. It took a few moments for him to sink into her until his dickhead bumped into her cervix. Suzie groaned as the head slipped past her cervix deeper into her belly. He had at least seven inches inside her. She felt stretched unbelievably and so full. It felt like her lower body was crammed full of cock. \n\nCurt pulled back slowly. He had learned to fuck women slowly at first as they all had to adjust to his massive cock. Even that wild redhead, Joanie, had cautioned him to go slow in the beginning. Becca, his old girlfriend, had whimpered and stiffened with pain each time he screwed her. She was one of the smaller framed girls he had fucked to date and he always had to be careful when he fucked her. \n\nOne time, he had been drinking after a big football win with the guys and didn't realize he was hurting her as they fucked. When they were finished, he noticed she had been crying. He had hammered her deep in her pussy repeatedly and she could barely walk straight when they were done. He had apologized repeatedly, but she took several days to forgive him. ",
        "Curt pulled back until just the head was in and then pushed back in slowly. He fucked Suzie like this for several minutes. Suzie had her hands bracing herself against the shower wall. She was trying to keep from head butting the wall each time Curt fucked forward into her. Curt's hands reached around and grabbed onto her hanging tits as they swayed below her torso. He teased and mauled the heavy breast meat as he pinched her erect nipples. \n\nSuzie moaned loudly from both the fucking and the assault to her sensitive nipples. As Curt accelerated his pace, Suzie had to fight hard to keep from crashing into the shower wall. Her arms were getting tired, so she straightened up and reached back over her head to grab his head. This arched her back but allowed her ass to only come up a bit. Curt still used his hands to maul her tits but now he was fucking his dick up into her with enough force to raise her to her tiptoes each time. The fullness was still there but the stretched feeling had been replaced by shockwaves of pleasure. \n\nIn this angle, his dick was mashing into her g-spot and she was starting to go wild. They fucked like this for several more minutes and Suzie began to worry the water might go cold. She might not have noticed though, as Curt had her hotter than a firecracker. She was rapidly approaching what felt like a huge orgasm. \n\nCurt too was getting close. He had remarkable stamina for a guy his age and one that had not seen her in two days. Both of them raced towards climax as he hammered her tender pussy and pinched her engorged nipples. Suzie had not had this much direct stimulation to her g-spot ever and the coming climax felt wildly different than any other orgasms she had experienced. Curt continued to fuck up into her, trying hard to get her off before he came. At that moment, he chose to ask her about birth control. They had not used any to date with her period pending, but this was getting risky now. \n\n\"Can I still cum inside you?\" he asked, between gasps. \n\n\"I think so,\" Suzie said. \"I'm due for my period tomorrow.\"\n\n\"Oh, god, I'm close. You sure it is okay?\"\n\n\"Why don't you pull out before you do and I'll finish you,\" she said.\n\nCurt slowed down for a minute to back down his urge to cum. When he resumed, he was determined to get Suzie off first. He didn't have long to wait. Curt slipped one hand from her breast to the top of her cunt to play with her clit. That was all it took to push Suzie over the top. The assault to her g-spot from his battering dickhead, the stimulation to her nipple, and now the teasing of her clit, combined to ignite the fuse. Within seconds the blasts of pleasure started quaking through her body. She shuddered, groaned, and bucked against him as he sawed his huge dick into her tight pussy. \n\nThe new pleasure from her stimulated g-spot rocked her world like a freight train on a downhill run. Suzie's legs went weak as she nearly blacked out from the pleasure. When she thought she couldn't take anymore and she might lose consciousness, she leveled off and the orgasm peaked. It was a delicious orgasm, one she enjoyed immensely. Several moments later, she began to realize Curt had slowed his fucking of her battered cunt. She knew what she wanted to do for him. Suzie stepped forward to try and disconnect from the deep probing cock. As she did, she turned to him.\n\n\"Curt, let me finish you in my mouth!\"\n\n\"Okay,\" he moaned, as he slumped against the shower wall. \n\nWhen Suzie pulled off his cock, she looked down at it as she went to kneel before him. It was then she noticed the streaks of blood combined with her cum on his cock. Her period had started. Obviously, it had been brought on by the assault to her vagina from his big dick. \n\n\"Curt, look, my period must be starting,\" she said. \n\nCurt looked at his engorged cock and noticed the faint streaks of blood as well. Suzie soaped her hand quickly and cleaned Cyclops. When he was clean and rinsed, she descended to her knees. Suzie hoped this wouldn't take long as the shower floor was anything but comfortable. \n\nCurt was still leaning back against the wall out of the immediate spray of the shower. Suzie leaned in and reached for his balls with her left hand while the right grabbed Cyclops. Seconds later she had Cyclops in her stretched mouth and massaged and tugged on Curt's balls like he had kneaded her tits. She went to work immediately hoping he had not come down too much from the brief rest. \n\nSuzie assaulted the spongy head with her lips and tongue. She probed his piss hole and extracted a drop of pre-cum. Then she went to town on his cock and balls. She bobbed up and down on his dick ramming the head into the back of her mouth. She thought about trying to deepthroat him, but she would have to slow down for that. His cock was too big to just quickly force down her throat. She needed time to work his cock deep into her mouth and now she just wanted to give him his release. She wanted to suck him until he exploded forcefully in her mouth. She wanted his spunk and she wanted to swallow it all down. \n\nSuzie thought briefly of Beth and how she thought this was yucky. Suzie realized she craved it. She would always want to suck her guy to completion and swallow his jizz. There was no doubt in her mind; she loved doing it to Curt as much as he probably liked having it done. \n\nThe massaging of Curt's bloated balls and the constant battering of his dickhead into the back of Suzie's mouth was having the desired affect. Curt was nearly there. When Suzie's right hand added to the stimulation by stroking his cock when her mouth retreated briefly, Curt could feel his climax building. He groaned his pending release from need and also to warn Suzie. \n\nSuzie was ready. She was more than ready. She hungered for it and continued her attack on his large organ. Suzie was ready for the series of ejaculations she knew were coming. Her experience with Curt had prepared her to handle large amounts of cum. She had learned to swallow at least once as he came to clear her mouth to accept more. She did not have long to wait. \n\nCurt shook a few times before groaning loudly. The first blast coated the back of Suzie's mouth. She swallowed it quickly and awaited the second largest and most forceful blast. It came with even greater intensity that she remembered. The day off from sex coupled with the incredible fuck, and now suck, had driven Curt wild. Her mouth filled to near bursting with the second load. It had shot out with so much force; she had momentarily lost her lip seal on his cock and nearly gagged when it blasted the back of her mouth.\n\nSuzie quickly recovered and swallowed. A bit had escaped her lips to trickle down her chin. She was ready for the third load which she knew was always big too. Today was no exception and the big load shot into her mouth. She didn't swallow this time and got ready to collect the rest of his cum in her mouth to savor and play with on her tongue. Curt managed four more lessening pulses before he was done. The result gave Suzie a lot of his cum in her mouth to play with. \n\nAll this time, she had just half the head sealed within her mouth. She eased off it and closed her lips as she pulled away. Curt looked down to see his beautiful girlfriend kneeling before him. Her eyes were on him, those gorgeous blue eyes, and her cheeks bulged with what he figured must be his cum. Two small streaks of white ran from the two corners of her mouth to the bottom of her chin. On one side a large drop hung as if suspended in time. \n\nCurt watched as his girlfriend smiled at him as best she could with her mouth full. He was just about to ask what she intended to do with the contents of her mouth, when she tilted her head back and opened for him to see. A massive pool of milky white viscous fluid nearly hid her tongue. As he watched transfixed to the action before him, her tongue poked out of the whitish brew to lick her reddened lips. The result was strings of spunk spanning the opening from one side to the other, before slowly breaking, and falling back into the huge white pool. Suzie did this again and Curt groaned to watch her play with his cum. This girl knew instinctively how to do erotic things better than anyone he had been with before. \n\nSuzie could feel the two strings that had escaped her mouth and used her fingers to push them back into her mouth. She looked back at Curt to get his reaction before she swallowed the whole huge load. Curt was staring at her with burning eyes. He seemed mesmerized by her little games. She liked doing them, especially when she saw how it excited and amazed Curt. \n\n\"You came big,\" she said, to him once her throat and mouth were clear.\n\n\"You drive me nuts,\" he said, smiling at her. \n\n\"I think that big dick of yours drove my poor little pussy up into my stomach.\"\n\n\"Oh, did I hurt you?\" he asked, with real concern.\n\n\"Oh, no silly, it was wonderful,\" Suzie said, as she stood and kissed him deeply. \n\nCurt could taste the residue of his own cum still in her mouth. They hugged for a few moments and realized the water was now lukewarm. Curt shut it off and they exited the shower and reached for towels. Suzie noticed a long string of cum hanging from his now relaxed dick as he moved. She realized she had not cleaned him completely. \n\n\"Hold still a sec.\" \n\nShe squatted again before him and sucked his cock back into her mouth. She suctioned his cock like a vacuum cleaner and drained a couple drops from his dick. As he softened she got a bit more. He was beginning to think she was trying to get him hard again, when she stood. \n\n\"Had to clean my man properly,\" she smiled. \n\nThey toweled off and then Suzie realized something.\n\n\"Curt, I have to go home now. I can't stay for dinner,\" she said.\n\n\"Why?\" he asked.\n\n\"Because with my period starting, I might leak blood and I don't have anything.\"\n\n\"Oh, I can fix that,\" he said. \"Mom keeps some supplies in here just for such emergencies.\" \n\nHe looked in the bottom of the vanity and sure enough produced tampons and pads.\n\n\"What do you use?\"\n\n\"Well, I've always used pads, but now that someone's big dick has broken my cherry, I could try the tampon,\" she smirked.\n\n\"I wonder whose big dick that was?\" Curt quipped back.\n\n\"I don't know the guy, but I'd recognize that tremendous dick anywhere.\"\n\n\"In fact, it looks exactly like this guy here,\" she said, as she grabbed his flaccid cock. \n\n\"Except I'd have to see it... hard to be certain.\"\n\n\"Maybe we can investigate further later,\" he stated smiling.\n\n\"Yes, hopefully,\" she said.\n\nCurt wrapped a towel around himself and exited the bathroom to give Suzie some privacy to use the tampon. When she was done, she dressed as he walked around to the other room to grab clothes he always kept in one of the lockers. As he entered the locker room, the outside door closed shut. He reached the door in time to see his little brother Kyle running back towards the house. Curt retrieved his clothes and rejoined Suzie.\n\n\"That little freaking bastard,\" he said.\n\n\"What's the matter?\" she asked.\n\n\"Kyle was in the other room, probably listening to us through the wall,\" he said. \"He probably heard everything we just said.\"\n\n\"Oh, my god,\" Suzie groaned, thinking back on the extent of the lewd conversation. \n\n\"I'm going to kill that little weasel,\" he said.\n\n\"No, Curt, please promise me you won't hurt him?\" Suzie asked.\n\n\"Why? He's just a nosy asshole,\" Curt said.\n\n\"Please, he's your brother and you can't hit him,\" she stated.\n\n\"Okay, I won't, but I sure am going to tell him he better watch it,\" Curt fumed. \n\n\"Okay, that is fine,\" Suzie sighed.\n\nThey finished dressing. Suzie pulled her wet hair into a ponytail. The thought occurred to her that Curt's mother would be suspicious of her wet hair. She would certainly wonder if they had showered together after the hot tub. Suzie felt a little embarrassed as they walked to the house. \n\nShe was relieved though, when they entered, and only Mrs. Clayton was in the kitchen. She was very pleasant and told them there were plates for them in the frig probably still warm. As Curt pulled the plates from the frig, Mrs. Clayton helped Suzie get them some sodas to go with their food. They made small talk as they moved about and Mrs. Clayton asked Suzie how the play was going. \n\nMrs. Clayton said, \"We are planning to come and watch.\"\n\nSuzie told her, \"That would be wonderful.\"\n\nShe left the room when Curt and Suzie sat down to eat. The meal was meatloaf, cooked carrots, mash potatoes and salad. Neither of them realized how hungry they were and ate everything up completely. Curt even downed part of Suzie's meatloaf she couldn't finish. After cleaning up the dishes and starting the dishwasher, they exited again for the cabana. It was getting late and Suzie had homework and more lines to study. \n\n\"I better head home to study.\"\n\n\"Oh, so soon! I was hoping we could hang a little longer,\" he said.\n\n\"Don't you have homework?\"\n\n\"I have a little. I did some in the car while waiting for you to finish rehearsal. So I only have about a half hour left. I could do that tomorrow in study hall before math class.\"\n\n\"But I really need to study my lines,\" she said.\n\n\"Can I help?\" he asked.\n\n\"Sure, but the copies of the play are back at my house in my book bag. We'd have to go there to get them. We could read lines in my room.\"\n\n\"I have a better idea,\" Curt snickered.\n\n\"That's a devilish look, sir. Don't forget that I'm out of commission of sorts.\"\n\n\"A resourceful Romeo can always find ways to accomplish the task,\" Curt quipped.\n\n\"He has a plan for Juliet then?\" Suzie asked.\n\n\"Of course,\" Curt replied grinning.\n\nThey walked hand in hand back to Suzie's house and she retrieved the copies of the play while Curt waited in the kitchen.\n\n\"Where to now, handsome Romeo?\" Suzie questioned jokingly.\n\n\"Follow me, fair Juliet,\" he retorted, and led them back outside. \n\nSuzie was a bit puzzled. Did he intend to go back to the cabana or simply sit on their patio in the back? She soon realized where he was headed as he took her hand and led her towards the swing set in the far back of the yard. They had done it there once already. It was actually a good idea. They had about another hour of daylight. Plenty of time to cover the lines she needed to. After that, they would be hidden enough to fool around a bit before she had to leave to study for classes. \n\n\"Very clever idea, dear Romeo,\" Suzie chided laughing.\n\n\"Thank you, my dearest Juliet,\" he said.\n\nThey climbed the five stairs that led to the small hut on top of the swing set. The poor old set groaned under the sudden weight but held fast. They were lucky that the small window in the hut faced west and the last rays of light illuminated the small area inside nicely. Suzie handed Curt a copy of the play, open to the lines she needed to rehearse. She set the scene for him and they began. They had time enough to work through the whole scene twice before the fading light made it difficult to see. \n\nSuzie set the play copies aside and asked with a grin, \"What did you have in mind after we finished?\"\n\n\"Oh, I don't know,\" Curt said, acting deep in thought. \"Since you're down one hole, I guess that leaves only two left.\"\n\n\"Oh, you crass young man,\" Suzie said, continuing to act like Juliet might.\n\n\"Well, crass I may be, but practical you must agree,\" he said, in his Romeo voice.\n\n\"So, I gather you're getting straight to the point so to speak, young man,\" Suzie quipped.\n\n\"Yes, and that pointer wants to find its way into one or both of those holes,\" Curt stated.\n\n\"Well, which one is the pointer seeking?\" Suzie asked, with a laugh.\n\n\"That's up to the hole holder,\" Curt stated, joking too.\n\n\"The hole holder is leaving the decision up to the pointer,\" Suzie mused.\n\n\"Is that right?\" he answered.\n\n\"Well, hopefully the pointer picks the top hole,\" Suzie expressed with a laugh.\n\n\"Not surprising,\" Curt offered. \"Does the hole holder not like getting the rear hole poked with the pointer?\" Curt asked.\n\n\"Not so much. Especially in the beginning. It is better after a while, but hurts at first, and the next day. Also in these tight quarters the top hole is a better choice.\"\n\n\"But the rear hole can provide pleasure to the hole holder, where as the top hole is only really for the pointer to enjoy,\" Curt explained, keeping the game going.\n\n\"The hole holder enjoys using the top hole on the pointer. More than taking the pointer in the rear hole,\" Suzie answered.\n\n\"Okay,\" Curt said, and went to take off his shorts. He didn't have any underwear on, and was soon with Suzie's help in the tight space, naked from the waist down. \n\nSuzie pushed Curt so his back was against the hut wall, then she slid forward between his legs. She sat Indian style and leaned forward. Curt's cock was still flaccid and she held it tenderly in her hand. The other hand cupped his hanging balls. Suzie looked at Curt before lowering her head into his lap. She held the soft cock for inspection as she slowly kneaded his balls in their sack. \n\nSuzie thought briefly of discussions she had had with friends at school about a guy's soft dick. She could not remember where or how it came up but remembered several girls agreeing that a soft dick was gross. They said it felt like a funny oversized worm in their hands and everyone knows girls hate the feel of worms. Suzie had remained silent because back then she had no experience to judge, but she had listen intently believing she would find out one day and agree with her friends. \n\nNow, as she held Curt's soft 5 inch dick, she couldn't believe how much she disagreed with those girls. She loved the feel of a soft cock. It was so soft and wiggly but warm and the head was like smooth velvet. Suzie stuck out her tongue and licked the tip of the head and the tiny hole. Curt moaned his approval. \n\nSuzie was torn. One side of her wanted to take the whole soft cock into her mouth and suck it to quick hardness. The other side wanted to go as slow as possible to prolong the change from soft to steely hard. She chose the later, wanting the moment to last. \n\nUnfortunately her licking of the tip of the head and teasing of his balls already had the monster waking. Suzie licked all around the ridge and flicked her tongue several times over the sensitive underside. Curt moaned deeper and Cyclops continued to lengthen and stiffen. He was an inch longer already and filling out as well. \n\nSuzie continued to lick the head and at one point tried to get the tip of her tongue into his little hole as deep as it would go. Curt was staring intently at her as she looked up at him while continuing her work. Her right hand was not completely idle during this time. At first she had just held the shaft lightly, but now she slowly moved the loose skin back and forth. \n\nAs she looked up at Curt, Suzie popped the half hard head into her mouth and sucked on it, hard then soft, then hard again, repeating this action as Curt groaned like a dying man. She didn't know where she got all these ideas from. They were mostly just experimentation, but she made mental note of what worked well and what worked great. This hard then soft sucking seemed to be driving Curt nuts, so she kept it up for a minute. When she stopped he had grown to near full hardness and the head felt bigger in her mouth than she could recall. \n\nSuzie popped it from her mouth with suction giving Curt another thrill. When she examined the head of Curt's dick, it was reddish purple and huge. She reasoned she must have sucked a lot of blood into it with the hard and soft suck action. She increased the stroking action on the shaft and squeezed tenderly on Curt's balls. He groaned again and stiffened when she sucked the head back into her mouth. Suzie's tongue basted the head with saliva while her hands worked him as well. Within seconds, his hardness was complete. ",
        "The rock hard organ pulsed in her hand. Suzie enjoyed the power she felt when getting a dick hard. She was in command like Curt had taught her and he was hers to torment or please. Of course, she chose pleasure and started working his cock back and forth in her mouth. Her tongue never rested nor did her hands. \n\nSuzie wished they had more room. She wanted to suck his balls for a while but her back was already hurting from this position. Bending lower would only make it worse quickly. Instead she decided to try deepthroating him. She even thought maybe she would try to have him cum down her throat. She did it that one time by accident, but had yet to repeat it. Suzie washed his cock with her spit, getting it ready for the throat action. When she felt he was wet enough, she pulled off. \n\n\"I want it down my throat,\" she told him, more to turn him on than make a demand. \n\nFor his part, Curt just nodded weakly. He was definitely in her control now. Suzie licked the head a couple more times and took a few breaths. Then she popped the head back into her mouth and worked it to the back. Several inches still protruded from her mouth.\n\nSuzie started swallowing rapidly like she had taught herself to control her gag reflex. She eased her head down while pushing his cock in with her hand. She even pulled his cupped balls up at the same time. The head wedged into her throat and stuck for a second but then popped inside and down her throat. Suzie continued to push forward and the remaining inches sank into her mouth as the head worked down into her throat. \n\nSuzie held it there for a second but then pulled back. Her mouth was full of spit and her eyes had watered. She popped his dick from her mouth and spit on it and coated it with her hand. Then she went back at it. This time she held him in her throat for a few moments and worked her swallowing muscles on his cock. Curt moaned his approval above. Suzie repeated this process five times. Twice she had to spit gobs of saliva from her mouth onto his dick. Tears ran down her cheeks, but she persisted. \n\nCurt loved what she was doing and that mattered most to her. On the last deep throat she managed to lick his balls with her tongue. It was something she had seen in one of the porn movies. Suzie then pulled his cock back into her mouth and worked on it voraciously with her bobbing head and twisting motions of her hands at the same time. She pulled and kneaded his balls and milked his stiff shaft. \n\nCurt could only grunt and groan constantly above her. This girl could suck dick. There was no doubt about it. She had a talented mouth and he was lucky to be the one with his cock in it. His balls were pulling up tight and he was nearing a big cum. Suzie worked him nonstop until she felt him stiffen and groan even louder. \n\nShe knew he was very close. Just as he neared climax, she pulled him from her mouth, and took a deep breath. Curt's dick exploded into her face coating her mouth and left cheek with goo. She took a huge breath through her nose and rammed the slick cock down into her throat. It went down her stretched and slick throat easily. She worked it with her throat muscles and tried to hold her breath as long as possible. \n\nCurt started saying, \"Oh, fuck, oh, fuck\" as his dick pulsed in her throat. \n\nSuzie had taken the cockhead back in her throat in time for the second huge blast. It shot straight down her throat into her belly, as did the next three pulses. Suzie pulled off to breathe and took the last two small ones into her mouth. When she sensed he was done, she pulled off to breathe better. When she looked up to Curt, he was staring catatonically at her. In seconds though the life seemed to come back to his pupils and he gasped at her.\n\n\"Suzie, that was the most incredible feeling I've ever had,\" he said amazed. \"You're wonderful, the best of all time. The best in the world.\"\n\n\"Thanks, stud. You're not so bad yourself,\" she said, still with a small amount of cum in her mouth. \n\nShe opened her mouth to show him before swallowing it down. She then worked the spunk on her cheek into her mouth and swallowed that too. She sucked his cockhead back in her mouth and softly nursed him flaccid getting another drop or two. \n\nThe last rays of sunlight were almost gone. In another five minutes they would be in darkness, but it was still light enough for Suzie to see Curt's shrinking cock and idly fondle it. She looked at him and smiled as she leaned back down and sucked his cock into her mouth. She cleaned him off completely, finally dropping his deflating organ from her mouth. The taste of him lingered on her tongue as she seductively licked her lips for him. Curt moaned as she reached forward once more to tease his sensitive dickhead. After a minute, Suzie sat back up. Her back was aching and her legs cramped, so she leaned back against the far wall of the tiny hut and stretched out her legs. \n\n\"Oh, that is better,\" Suzie said, with the relief to her legs and back.\n\n\"Our little love hut here is a little small. It'd have been better when we were kids and you first touched my dick,\" Curt said, jokingly referring back to playing doctor again.\n\n\"Yes. It'd have been much larger to us then,\" Suzie agreed, with a smile.\n\nCurt leaned forward and kissed her passionately. He was becoming comfortable with kissing her after she had blown him and the different taste to her mouth. \n\n\"You're wonderful and you do me so well.\"\n\n\"I love doing it for you,\" Suzie said. \"It gives me a thrill too to make you feel so good.\"\n\n\"But you did not get off. Can I help you somehow?\" he asked.\n\n\"No, I'm fine,\" she said. \"I only hope you're not disappointed I didn't let you have the other hole?\"\n\n\"No way! With a mouth like yours, a guy would have to be nuts not to want to be in there,\" Curt concluded. \"Anal is fine, but your mouth is a treat to be enjoyed.\"\n\n\"Thanks,\" Suzie said. \"I suck to please.\"\n\n\"You do that,\" he agreed.\n\n\"Did I do it enough to hold you till Thursday?\" she asked.\n\n\"Never enough, but it'll do,\" he stated with a grin.\n\nCurt got his shorts back on and they left the cramped swing set. They kissed at her back door in the darkness. They kissed goodbye and she went inside. In the kitchen, her mom was folding clean dish towels and looked up as Suzie entered.\n\n\"Have a nice evening, dear?\" her mom said.\n\n\"Yes, it was great,\" Suzie said. \"Mrs. Clayton's meatloaf is quite good too.\"\n\n\"Better than ours?\" her mom asked, with a smile.\n\n\"Not better, but different. I think she adds some Worcestershire sauce to hers,\" Suzie said. \"But hers is not as sweet. I think she needs sugar like you add.\"\n\n\"I'll have to ask her what she does,\" her mom said. \"Suzie, you're spending a lot of time with Curt. How are things going?\"\n\n\"Great, Mom! Everything is wonderful!\" \n\n\"Anything we need to talk about?\" her mom asked.\n\n\"No, but I did get my period tonight. Fortunately, Mrs. Clayton keeps stuff in the cabana bathroom for emergencies,\" Suzie said.\n\n\"Speaking of your period, should we be discussing birth control?\" her mom asked.\n\n\"Oh, is that why you're asking?\" Suzie said.\n\n\"Well, yes, I'm concerned about what you're doing,\" she said.\n\n\"Well, I could use birth control, Mom,\" Suzie said.\n\n\"Oh, I see,\" Mrs. Johnson said. \"Curt and you are sexually active then.\"\n\n\"Yes, Mom, but please don't tell Daddy,\" Suzie said.\n\n\"Don't worry about your father. Leave him to me,\" she said.\n\n\"Thanks, Mom. It might bother him to know I'm not his little girl anymore.\"\n\n\"You'll always be his little girl, Suzie, even when you are forty,\" her mom smiled. \"Suzie, did it happen after the prom?\"\n\n\"Yes, Mom. I wanted it to be special and it was,\" Suzie said.\n\n\"I'm glad for you, Honey. I never told you but I lost mine after the prom too,\" her mom smiled.\n\n\"You did?\" Suzie asked, amazed.\n\n\"Yes, I guess many girls lose their virginity after the senior prom,\" she smiled.\n\n\"Janie and Mary did too, well officially for Mary anyway,\" Suzie confided.\n\n\"That is wonderful, Dear. Three friends together. I'll call for a doctor's appointment in the morning,\" her mom said.\n\n\"Thanks, Mom,\" Suzie said, and she exited the kitchen for her room. \n\nShe might have kissed her mother but she was afraid of how she might smell. \n\nWednesday was an okay day but not much happened. Thursday was equally boring, but she looked forward to working out, in more ways that one, with Curt after drama. Suzie met Curt at the usual time after drama club and they drove to her house for her to change. \n\nAlong the way he told her his father had opened the pool in their backyard while they were gone up to the lake house. They had a heater for it that they used to get it 70 degrees. His dad then shut the heater off, as it was expensive to run constantly. But the warm sun the last few days had warmed the pool further and it was now perfect to go in. He had invited Mary, Mark, Andy and Janie over for a swim after dinner. \n\nSuzie jokingly protested that she had missed him and looked forward to getting together privately, but that his idea was a great one too. Their work out was a good one. Suzie was becoming a stronger runner and was up to a mile without stopping. \n\nAs they rested on the infield of the track after, Curt told her about the meeting at Rutgers. He found out who his roommate would be as all the football players roomed together in the same dorm. Rutgers had successfully grabbed the top quarterback prospect in the whole state, a black kid from Plainfield, New Jersey. Curt had heard many good things about the skills of this quarterback and he was happy that he was going to be part of the team. Neither one of them were being promised starting positions as they already had a good group of upper classmen, but they could work like everyone else toward it. \n\nSuzie was happy for him that he would have other talented players to play with. She promised to find a way down from Seton Hall to see all his games. \n\nAfter they rested, they headed back to her house for her to grab clothes. Her bikini was already at the cabana, so she just grabbed clothes for later. Unfortunately, she still had her period and would need a new tampon after the swim. It also meant, much to her dismay, that Curt wouldn't be able to fuck her as she would have liked. Instead she was prepared to give him another fantastic blowjob and pleasure herself later if she needed. \n\nIt was about 5:50 when they got to Curt's house and the pool. No one was there yet, so they had time for a quick shower to wash away the sweat of their work out. Suzie told her mom that she wouldn't be home for dinner as Curt had told her to do. They had planned to order pizza for everyone after the swim. \n\nOnce inside the cabana they stripped quickly. Curt got the water running in the shower as Suzie laid out her clothes for later and packed up her dirty sweats. Her bikini was still hanging on the back of the bathroom door where she had left it. They got in the shower together and of course soaped each other up which lead to a lot of hugging and kissing. Curt was soon poking Suzie in the belly with a massive hardon.\n\n\"You want me to take care of this for you,\" Suzie said, with a smile and a suggestive lick of her lips. \n\nWhen she did that, she felt Curt's dick jerk in her hand of its own accord. \n\n\"We don't have time. They'll be here any minute and we should be out there to greet them,\" he said.\n\n\"Let me try for just a minute or two,\" she said, with a grin. \"See if I can get you off.\"\n\n\"You're my kind of girl,\" Curt joked.\n\nSuzie smiled back at him as she sunk to her knees. She didn't waste time on licking the head and teasing the hole this time. Instead she worked the big swollen head right into her mouth. With both hands actively working his shaft and balls, she set about trying to get him off quickly. Deepthroating would have taken too much time, so she concentrated on sucking alternately hard and soft on the head and bobbing up and down. \n\nNot having seen her for two days had made Curt horny, and now his girl was sucking on him like a vampire. With her hands working him too, Suzie soon had him to the point of cumming. He groaned loudly above her to signal his pending orgasm. Seconds later he flooded her mouth with cum. Suzie was ready as usual and swallowed the huge load. In no time she was standing back up off the shower floor. Curt figured it had taken her less than five minutes to suck him off. She had the mouth of a goddess or was it a she-devil.\n\nThey hurriedly exited the shower and dried off. They threw their suits on, grabbed some towels and left the cabana. Janie and Andy were just setting their towels and bags down on the lounge chairs around the pool. Suzie and Curt hurried over to greet them.\n\n\"Hi, you guys,\" said Curt, to Janie and Andy.\n\n\"Hi, Curt. Hi, Suzie,\" they both replied.\n\n\"I just want to check the pH on the pool before we get in,\" Curt said.\n\n\"Okay, I'll help you,\" Andy said, and they dropped their things on the chairs and walked over to the pool.\n\nSuzie and Janie arranged everything on the lounge chairs and then sat down. The boys yelled over that everything was okay and they were going in and invited the girls to join them. They responded they wanted to catch some late sun first and then would join them. As Janie and Suzie watched the guys jump in and start throwing a basketball at the little flooding net, they started chatting.\n\n\"You two hurried out of the cabana awfully fast with already wet hair,\" Janie asked, with a smile.\n\n\"We got back from our work out and needed a shower,\" Suzie explained, but smiled.\n\n\"I shower together I bet,\" Janie quipped.\n\n\"How'd you guess,\" Suzie questioned, acting surprised.\n\n\"Oh, maybe it was the way Curt's package swayed back and forth as you guys exited the cabana or maybe the telltale wet spot on the front of Curt's suit,\" Janie quipped.\n\nSuzie laughed, \"Oh, I guess he didn't have time to go down to much and I could have left a drop or two.\"\n\n\"You're a nasty girl,\" Janie squealed.\n\n\"I know,\" Suzie said. \"I just can't get enough of him.\"\n\n\"Me neither, of Andy,\" Janie agreed. \"From the look of it you are dealing with more than me in the packaged goods area, but Andy is perfect for me and he knows how to use it to rock my world.\"\n\n\"So you've been enjoying sex with Andy, have you?\" Suzie asked smiling.\n\n\"Like a whore on holiday,\" Janie stated laughing. \n\nThey both cracked up and the boys yelled over, \"What's so funny.\" \n\n\"Nothing much,\" the two responded. \n\nJanie continued, \"The other day Andy stopped by and we went out for a bite to eat. We then went up to our favorite parking spot. We're not as lucky as you guys to have our own little love cabana. We climbed into the back seat of the Camaro and went at it for about two hours.\"\n\n\"You did?\" Suzie questioned.\n\n\"Turns out Andy is pretty good at foreplay,\" Janie said. \"He had me out of my top and bra in a flash and worked gloriously on my tits for a long time. I thought I was going to cum just from the way he sucked my nipples, Suzie. The nipples were like bullets when he was done. Then he peeled off my panties from under my skirt and went to town licking my pussy for the first time. God, that felt great!\"\n\n\"It does feel marvelous, doesn't it?\" Suzie agreed. \"Curt can get me off several times that way before I have to stop him because I'm too sensitive after that.\"\n\n\"Andy worked on me for about twenty minutes, I think. I had two super orgasms and had to push him away after that,\" she agreed. \"Then I returned the favor by sucking his dick for twenty minutes. He said, 'You nearly killed me because each time I was about to cum, you stopped and let me cool down.' By the time he stuck it in me, he could only last a short time before he ejaculated.\"\n\n\"Wow, that is so hot,\" Suzie said. \"You guys are really getting it on, huh?\"\n\n\"Yeah, we are,\" Janie said. \"I got him hard again after that and he fucked me for a good long while. I think I came at least twice more.\"\n\n\"Awesome!\" Suzie commented. \n\n\"So, tell me. Was something going on before we got here,\" Janie asked, with a smile.\n\n\"Well, you guessed it,\" Suzie said. \"We took a shower together after working out and I gave him head.\"\n\n\"You still swallow all the time?\" Janie asked.\n\n\"Absolutely!\" Suzie answered. \"I love sucking him off all the way. I can nearly cum sometimes without even touching myself just from giving Curt a blowjob.\"\n\n\"Wow, not me. I still have not gotten used to swallowing. I love giving Andy head but I don't get off from it. Do you try to deepthroat Curt?\" \n\n\"Every chance I get,\" Suzie exclaimed grinning.\n\n\"You're a nasty girl just like I said,\" Janie stated jokingly. \n\n\"I sure have changed in the last several weeks,\" Suzie admitted.\n\n\"I'll say,\" Janie said. \"You went from not knowing dick to its greatest worshipper.\"\n\n\"Quite an upgrade, I think,\" Suzie agreed, with a big smile.\n\n\"I guess so,\" Janie said. \"Are you officially done with your lessons now?\"\n\n\"I don't know. Curt and I stopped talking about that a while ago, so either I'm done or pretty close to it, I think.\"\n\n\"I would say you have it down pretty good now,\" Janie mused. \"Remember when he first proposed the plan to you and it involved sucking him off and swallowing? Remember we thought he was just in it to get his dick sucked? Now, it's funny. It seems so natural for you to be doing it and for us to be talking about it.\"\n\n\"You're right! I was maybe going to try to learn all I could before I had to suck his dick. That didn't last long or stay an issue for very long,\" Suzie agreed, with a laugh. \n\n\"Not much,\" Janie stated, laughing too.\n\nAt that the boys yelled to them to come into the pool. They did, and before long they were having fun playing in the pool. They played basketball and Curt and Suzie won despite the fact that Andy could out swim everyone. Then they played battles with the girls on the guy's shoulders. The girls would try to push the other one off. Curt and Suzie had the size advantage and won all of these accept once when Janie pulled Suzie's hair from behind. \n\nAs they were playing Mary and Mark finally showed up. When Mary got home from school, she had a message from the police they wanted to see her. Mark drove her down to the station and it took longer than they thought it would. She had to give a deposition before the trial and they wanted to do it right then. It took over an hour. Mary was exhausted and needed the swim to relax. So they all calmed down and just lounged in the pool talking. \n\nAt one point Curt went inside to call for the pizzas. By the time Curt got back, Andy was ready to get out. He had been in so long his fingers were wrinkled. He and Janie both got out and dried off. Curt got back in the pool to join Suzie, Mary and Mark. \n\nAfter a while Suzie noticed that Janie and Andy had disappeared. She figured they were in the cabana doing something; she could only smile to herself. Curt caught her look and tilted his head, in a 'huh?' questioning gesture. Suzie pointed to the cabana and whispered Janie and Andy's names. He nodded back. \n\nMary and Mark were busy having a swimming race and did not notice the whole exchange. Mary won the race by a few feet but that was because Mark had been handicapped and forced to swim under the water, while Mary swam on top. They both were out of breath, but Mary managed to proclaim herself the winner. Mark grabbed her in a bear hug. His huge body nearly enveloped Mary and when his back was to Suzie she couldn't see Mary at all. She could however hear her squealing and giggling as Mark tickled her. Suzie swam to Curt.\n\n\"They're sure having fun. Maybe we should leave them to have the pool alone,\" she suggested.\n\n\"You thinking about going in the cabana while Andy and Janie are in there?\" he asked with a grin.\n\n\"No, sex maniac. I was only thinking of drying off and getting ready for the pizza to arrive,\" she kidded him.",
        "\"Oh, too bad,\" he said. \"I thought you had much bigger and better plans.\"\n\n\"And just what would be bigger and better in your mind?\" Suzie questioned.\n\n\"Well, Cyclops might like to use the backdoor,\" Curt discussed with a grin.\n\nSuzie just looked at Curt and got out of the pool. He followed her. Mary and Mark were still fooling around, with a few wet kisses on her belly being part of the fun. Suzie walked to the lounge chairs and picked up her towel to dry off. Curt was right behind her and did the same. When she turned, his sight was drawn to her breasts. Her nipples were outlined through the thin material of the bikini top. They were erect from the change in temperature making them prominent. Curt felt himself drawn to them.\n\n\"Why did you exit the pool so fast when I mentioned your backdoor?\" he asked.\n\n\"Well, for one I didn't want to talk about that in earshot of Mark and Mary even though they weren't really listening. But I also was concerned about something else,\" Suzie said.\n\n\"What is that?\" Curt asked.\n\n\"Curt, I don't know if I can do other things because I'm still on my period.\"\n\n\"Well, I realized you were. That is why I suggested the backdoor. Is it you really don't like anal?\" he asked.\n\n\"Well, it's my least favorite of my three holes to have Cyclops visit, but, no, that's not it. I do like anal as long as we go slow and I can have time to adjust to you. I like it at least once in a while. What I'm concerned about is you seeing me with a tampon in,\" she stated with a frowned.\n\n\"Why would that bother you?\" he asked.\n\n\"Well, it's kind of gross with the string hanging out and all,\" Suzie said. I didn't want you to see me like that.\"\n\n\"Oh, that's okay,\" Curt said. \"I have seen it all before, even blood down there.\"\n\n\"You have?\" Suzie said, kind of grossed out. \"Let me guess, Joanie?\"\n\nCurt chuckled, \"How did you know? She even removed one while I watched once.\"\n\n\"Oh, my god,\" Suzie gasped. \"I wouldn't want you to see that.\"\n\n\"Suzie, it's very natural, no big deal.\"\n\n\"Okay, so you wouldn't care about seeing me like that?\" she asked.\n\n\"Not in the least,\" he said.\n\nAs if on cue, the pizza guy came around the back side of the house as Curt had instructed.\n\nCurt grabbed his wallet and went to get the pizzas and pay. The others could chip in later. There was a table with an umbrella near the lounge chairs and Suzie began to put out the paper plates and napkins which Curt had already put on the table in a stack. He asked her to get the Cokes from the refrig in the cabana too. \n\nSuzie walked to the main room door and knocked but got no answer so she entered. She didn't see Andy or Janie anywhere and the bathroom door was wide open. 'They must be in the locker room,' she thought. She grabbed the two 2-liter bottles of Coke in the refrig. \n\nBefore she left she figured she better let them know the pizza was here so she walked around to the door to the locker room. It was closed and as she approached she could hear Janie's voice. As she got up to the door, Janie's voice was now distinguishable. What she heard made her smile and retreat without knocking. They would have to just eat cold pizza. When she returned to Curt, she saw Mary and Mark were exiting the pool still teasing each other. \n\nCurt noticed Suzie's smile. \"They are having fun with each other, aren't they?\" he said, nodding towards Mary and Mark.\n\n\"You don't know the half of it and I don't mean them,\" Suzie said chuckling and nodding back towards the cabana.\n\n\"Oh, I see,\" Curt replied. \"Did you disturb them in the middle of something?\"\n\n\"No, but I heard plenty from the locker room,\" she quipped.\n\n\"Like what?\"\n\nSuzie leaned closer to him and whispered, \"I heard Janie telling Andy to 'Fuck her harder and deeper,' and she was moaning and gasping as she did it.\"\n\nCurt laughed out loud and Mark yelled over, \"What's so funny?\"\n\n\"Nothing, nothing,\" Curt said, and they busied themselves dishing out pizza and pouring drinks. \n\nThey continued to laugh quietly to themselves until Mary and Mark approached.\n\nMary and Mark joined them at the table wrapped in towels. Mary's long dark hair was still dripping water down her back. They ate the pizza and drank Cokes while joking about the fun they all had in the pool. They thanked Curt for the invite. They were done eating and moved away from the table in the lounge chairs talking, when Janie and Andy finally emerged from the cabana. \n\n\"You guys ate already,\" Janie said, as they moved to the table to see what was left. \n\nThere was still a good half pizza left and they sat to eat. Janie looked over to Suzie as she took her first bite. Suzie gave her a half laugh nod, which puzzled Janie. After they finished eating they joined the others. After some friendly conversation, Curt suggested they play one of his parent's board games. Clue was an option, but they chose a game called Outburst so they could play guys versus girls. Curt got the game and they played till it got dark, which was about 8:30. They had laughed and joked a lot throughout the game and had a great time. At one point though, Janie leaned over to Suzie to whisper to her about the nod before.\n\n\"What was the weird nod and laugh you gave me before?\" Janie asked.\n\n\"I went into the cabana to get the Cokes and you guys for pizza,\" Suzie said.\n\n\"I didn't hear you yell,\" Janie said.\n\n\"I didn't yell, but I did walk up to the locker room door with the intentions of knocking. I didn't however when I heard you,\" Suzie smiled.\n\n\"What? You heard me?\" Janie said, now worried.\n\n\"Yes, quite distinctly,\" Suzie stated with a grin.\n\n\"What'd you hear?\" Janie said, now mortified.\n\n\"Something to the affect of, 'Andy, fuck me harder and deeper,' with a lot of moans and gasps,\" Suzie said.\n\n\"Oh, my god!\" Janie said, covering her mouth. \"You didn't! Oh, how embarrassing.\"\n\n\"It's great,\" Suzie said. \"Don't worry, it was funny.\"\n\n\"Damn,\" Janie said, laughing now too. \n\n\"What're you two whispering about over there?\" Mary asked. \n\n\"Tell you later,\" Janie said. \n\nAfter the game was over, Janie and Andy said goodbye and thanked Curt again. They had to leave because both had homework and a busy day the next day. Curt suggested that they move the party into the cabana to avoid the bugs and watch some TV. Mark had a surprise if they were up for it. He had borrowed a porn movie from someone and had it in his backpack. They moved into the cabana and as Mark and Curt set things up.\n\nMary asked Suzie, \"What were you and Janie talking about?\"\n\nWhen Suzie was done telling her the whole story, Mary was laughing hysterically. Mark asked this time what was so funny but Mary just told him later. They settled into watching the porn movie. This one was called \"Backdoor Bitches\" and was obviously about girls taking it in the anus. It was obvious, because the first scene opened with a young girl in a bikini by a pool being strip by two guys and fucked in the ass and mouth at the same time. She even was double penetrated by the two guys, which brought gasps from Suzie and Mary.\n\n\"Can someone really do that?\" Mary asked, amazed.\n\n\"What?\" Mark answered. \"You mean take it in both holes at once? Sure.\"\n\n\"My god,\" said Mary. \"I can't imagine what that must feel like.\"\n\n\"I guess it's something you need to experience for yourself,\" Mark said joking.\n\n\"I guess so,\" Mary agreed, then blew him a kiss. \n\nThey watched the rest of the movie together. When it was over Mark and Mary decided it was time to go, leaving Suzie and Curt alone. It was 10:15. \n\n\"Suzie, do you need to go?\" Curt asked.\n\n\"I do, but you must be horny after that movie,\" Suzie said.\n\n\"I'll be okay,\" Curt said, but he didn't sound convincing.\n\n\"I need to take care of you before I leave,\" Suzie said.\n\n\"No, it's okay.\"\n\n\"You wanted in my ass before. I should let you do it, especially after that movie,\" she said. \"That movie probably made you want to do anal more than anything.\"\n\n\"Well, yeah.\" Curt agreed.\n\n\"We can do it and I know how,\" Suzie said.\n\n\"You do?\" Curt asked.\n\n\"Yes, while I give you head, I want you to work the butt plug up my ass. After I'm open and you're good and primed, you can fuck me in the ass until you cum,\" Suzie said.\n\n\"Good plan except for one thing,\" Curt said. \"How about you? Where do you get off?\"\n\n\"I probably will. Don't worry about me,\" she said.\n\nThey tried exactly what Suzie had suggested. Curt got all the dildos and lube while Suzie covered the couch with towels. Suzie then lay down on the couch on her back. As Curt worked the lubed butt plug into her incredibly tight ass, Suzie sucked on Cyclops getting him hard in no time. While Curt worked the plug around in her ass, Suzie sucked him like she had in the shower. \n\nPre-cum bathed her tongue making her even more horny and moved her closer towards an orgasm. Curt could see the string of the tampon in her cunt but pretended not to notice. Even having a period, he thought she still had the best looking pussy he had ever seen. He worked the butt plug back and forth and Suzie moaned her approval. It felt great to her once she got comfortable to the intruder. \n\nNow they were ready for Curt to enter her and he moved into position. Suzie reluctantly let go of his cock and watched him position it at the opening to her rectum. She leaned back and tried to relax. Curt moved the head into her rear hole and eased forward. The size difference to the plug was immediately apparent. She remember the last time they had opened her more with the dildo first. The time constraint meant they needed to take this abbreviated approach, but Suzie was second guessing her plan. The larger cockhead was splitting her poor little butt hole open like it as a wedge. \n\nSuzie fought to relax as the pressure at her sphincter increased as Curt pressed forward. Finally the head popped inside and they both groaned with the effort and relief. Curt worked his lubed dick further into her slowly. It took what seemed like hours to Suzie but was really minutes to bury his cock to the root in her butt. Curt held it there for a while allowing Suzie to relax and get used to his big cock in her ass. When she finally indicated she was ready, he started moving. He moved slowly at first but built in pace and in no time was giving Suzie a strong rhythmic fucking in the ass. Suzie's ass was so tight it squeezed Curt's cock like an extra small velvet hand. He built towards his release as he quickened the tempo. Soon he was ramming into Suzie the same as if he was fucking her cunt. \n\nSuzie moaned beneath him. The pain had left her ass. It still felt full but in a good way and his thrusts were pleasurable. Suzie was content to lay there and just let him have his way with her ass. She didn't think she would cum but she wanted him to enjoy dumping a big load up her anal passage. She had her eyes closed when she heard the buzzing. Before she could open them to look she felt the vibrator touch her exposed clit. The electric pulse of pleasure opened her eyes wide and she gasped and then shrieked. \n\nCurt told her, \"Hold this against your pussy,\" as he handed it to Suzie. \n\nShe was a little embarrassed to work her own cunt in front of him, but she did what he said. The vibrating pulses from the electric dildo drove her mad as she worked it around her clit and over her pussy lips. She forgot all about the tampon as she used the vibrator to push her towards a fantastic orgasm. With Curt pounding her ass and the vibrator pleasuring her snatch, Suzie climbed the ladder towards her climax. \n\nWhen Curt bent down and sucked her left nipple into his mouth, that was all the stimulation her tired mind could take. She pinched her own other nipple as she arched her back off the couch. Rockets exploded in her mind as she held the vibrator to her clit. She vaguely realized Curt was huffing and puffing above her. In another few seconds he groaned loudly and she could feel his hot cum flooding her abused anal tunnel. \n\nThe multiple sensations drove the beautiful blond wild and she just tripped right into a second orgasm even before the first ended. Curt's plowing off her tight rear hole slowed as he pumped her full of sperm. Suzie couldn't take it anymore and allowed the vibrator to just roll free from her hand onto the couch. They stayed like that with Curt half laying on her and half supported by his elbows. They both panted as they tried to recover from the exertion and the ultimate pleasure. \n\nFinally, Curt said to her, \"You okay?\"\n\n\"God, that was wild,\" Suzie gasped, between breaths.\n\n\"How's your butt?\"\n\n\"It'll probably be incredibly sore tomorrow, but it feels fine now. Maybe a bit abused but fine,\" she said. \"Did you like it?\"\n\n\"I did, babe,\" he said and kissed her. \"It was incredible, thanks.\"\n\nThey kissed passionately for several minutes until they both realized time was passing by. It was 10:45. The whole thing had taken a half hour but felt like two hours to them. They tried to move quickly and organized the cabana. Curt walked Suzie home at 11:00. They kissed with love and passion at the back door. \n\n\"God, you're the greatest,\" Curt said.\n\n\"You too,\" Suzie said. \"You bring out the woman in me.\"\n\n\"I love you,\" Curt said.\n\n\"I love you too,\" Suzie cried.\n\nThey kissed with such passion Suzie could feel Cyclops stir in Curt's swim trunks.\n\n\"My, could you really go again?\" she asked, with a smile.\n\n\"You drive me wild,\" Curt said. \"All I want to do is pleasure you forever.\"\n\n\"I'd like that,\" Suzie said. \"I'll miss your touch ten minutes from now.\"\n\n\"I'll miss yours in nine minutes from now,\" he replied grinning.\n\nThey worked their way down to zero with Suzie getting the last word.\n\n\"Suzie?\" \n\n\"Yes.\"\n\n\"I announce your lessons are officially over,\" he said.\n\n\"You mean I'm a certified sexy woman now?\" she asked with a smile.\n\n\"You not only passed the test, but you added chapters to the book,\" Curt said joking.\n\n\"I did huh,\" she mused.\n\n\"Especially with this,\" he said, as he kissed her on the mouth.\n\n\"You like my mouth do you?\" Suzie said, when the kiss parted.\n\n\"I love your mouth,\" Curt said. \"Almost as much as I love you!\"\n\n\"Well, anything for my big strong man that I love so much,\" she said.\n\nThe next kiss was so deep and full they both felt like it would be their last, the last as separate people that is. From now on Curt and Suzie would be together always. \n\nThanks for reading this story. Hope you liked this final chapter. Happy Holidays! Look for more different things from me in 2007. Happy New Year!"
    ],
    "authorname": "BlewWater69",
    "tags": [
        "last chapter",
        "suzie graduates",
        "love follows"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/suzies-lessons-ch-10"
}