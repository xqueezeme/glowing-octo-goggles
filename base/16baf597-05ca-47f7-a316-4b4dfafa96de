{
    "title": "Whistling Swans",
    "pages": [
        "This is a copyrighted original work of fiction. All rights reserved.\n\nAll characters featured herein are at least eighteen years of age, even if not expressly stated. Any resemblance between actual persons, living or dead is entirely coincidental.\n\nMany thanks to Max for the fine editing work.\n\n*\n\nI landed up playing golf with three lovely ladies.\n\nMy brother and I were due to tee off at 11:12 at Whistling Swans. The brand new course had just opened that spring. We were matched up with a pair of older gentlemen.\n\nMy brother is not known for being particularly early for anything, but he would have phoned if he was running late. At five after, I still hadn't seen his car pull in. I let the two older guys go out on their own.\n\nI checked my cell phone. Six missed calls, four of them from my brother. I'd mistakenly left the ringer on silent. I checked my messages. He said sorry, he couldn't make it golfing.\n\nBloody hell.\n\nI'd already paid for my round, plus my half cart. It was a perfect weather Wednesday morning. Not a cloud in the sky, only the slightest of breezes. Just enough to keep you cool. I was really looking forward to playing.\n\nI told the starter that my partner wasn't going make it.\n\nHe said, \"Why don't you play with these three ladies?\" They were just getting ready to tee off. Three middle aged women. Well, one was a little younger.\n\n\"Sure, if they'll have me.\"\n\nThe starter turned, stepped up to them and said, \"Would you ladies accept a single to play along in your group?\"\n\n\"Sure,\" two of them said. The third, the apparently younger one, looked a little suspiciously at me, but then agreed.\n\n\"Great,\" I said stepping to the nearest one. She was fiftyish, kind of short, fairly slight, short brown hair. \"Mike Webb.\"\n\n\"I'm Cora.\" I shook her hand. She seemed very sweet, nice smile. Maybe five years older than me, tops.\n\n\"Mike Webb,\" I said to the next one. She was the younger one. Fortyish. Short light hair with blonde highlights. Also fairly slender. Very pretty.\n\n\"Helene,\" she said as I shook her hand. I wasn't quite sure if she said Helen or Ellen.\n\nThe third stepped up to me, I told her my name, \"Yvonne,\" she answered in a sultry voice as I shook her hand. She was more curvaceous, bum a bit big. Lots of dark long hair tied in a ponytail, speckled with grey. Also, pretty good looking.\n\n\"We're playing from the ladies', you can play from the men's if you want.\"\n\n\"No, I'll play along with you guys.\"\n\nThe starter flipped my golf bag to the other cart and wrote me a credit note. I was riding with Helen, or Ellen.\n\n\"I'm sorry, I didn't quite get your name is it Ellen?\"\n\n\"Helene,\" she said it with a French accent, the 'H' being more or less silent.\n\n\"Please to meet you madam,\" I said, trying to be polite.\n\nThey teed off first, I was still getting my things sorted out. They had three pretty good drives, all on the fairway. I outdrove them but I was way to the left, just off the fairway.\n\nThose three ladies were good golfers. Especially Helene, my cart partner. I never saw them duff once on the first few holes. My drive on number two went into the woods.\n\nAs we waited to tee off on the third hole the ladies started to warm up to me a little. Clearly I wasn't a mad rapist. Helene said that she was the finance manager for some equipment manufacturer that I'd never heard of. They make heat exchangers and boilers or something. Cora worked for a pharmaceutical company. She did Reg Affairs whatever the hell that was. I got the impression she was fairly high up on the corporate ladder. Yvonne had a hair salon. Go figure, of the three, the one with the unkempt, undyed hair owned a hair salon.\n\nI explained to them I was an IT guy in data and communications and did work for the port authority. They didn't seem impressed. They needn't be.\n\nCora and Yvonne it turned out were both separated.\n\nHelene said she never married. She didn't say she was single though.\n\nYvonne asked, \"Are you married, got kids?\" Oh-oh single middle aged women. Look out.\n\n\"Separated. Two girls, both at university, but they still come back home to their mom.\"\n\nYvonne said she has three kids, also in university. Cora followed with two of her own. Helene said she had no children.\n\nI was getting sniffed out in a hurry. I didn't mind. I was sniffing too.\n\nCora and Yvonne hooked index fingers together as they walked back to their cart from the third green. If they did that on the first two, I hadn't noticed. Clearly, really good friends.\n\nThe three of them were very nice, very polite, very lady like. I was immediately at ease with them all. Cora had that lovely smile and a hell of a swing. Very slender but very fit. Yvonne, whew, for a fiftyish woman was pretty hot. And Helene, she was a very good looking woman indeed, the prettiest of the three. I knew given the chance, I'd hook up with any of them. If I could pick just one, it would be Helene.\n\nAnd all three are single? Well, two separated and one not married, that didn't make them single. I needed to find out.\n\nHelene, despite the French accented name, didn't speak with an accent. She was born in Trois Rivieres but moved to Ontario as a young girl.\n\nOn the fourth hole it started to get a little warm. Helene took off her light jacket, leaving her in a sleeveless shirt with collar.\n\nShe had a tattoo on her arm just below her left shoulder. The Gay Pride rainbow flag in a semi-circle.\n\nOh. That explained the never married bit.\n\nThen I wondered about the other two holding fingers. Nah I rationalized, they've got five kids between them.\n\nAs we made our way up the fourth fairway there was a fox flitting in and out of the rough along the left hand side. It was very amusing to watch. We all made our chips onto the green. The fox darted out from the rough onto the green as we walked towards the green with our putters in hand.\n\nThe fox stopped mid trot, squatted, peed on my ball and then ran off.\n\n\"What the hell!\"\n\n\"Did you see that?\"\n\n\"Ahhhh!\" \"Ha! Ha! Ha!\"\n\nThe four of us had trouble standing up. We were clutching our sides howling in laughter.\n\n\"Why me?\" I gasped. Then the jokes started.\n\n\"You're her bitch now.\"\n\n\"Just need to put a little something extra on the next putt.\"\n\n\"Come here you little fox, squirt on my balls.\"\n\n\"Ahh, never dribbled a little pee on your balls before?\"\n\nYvonne was on her hands and knees howling.\n\n\"That's nature's way of saying, 'Girl Zone, Girls Only!'\"\n\nWhatever ice needed to be broken was broken now. Somehow, they weren't the same ladies I teed off with.\n\nThe ladies were in hysterics.\n\nI grabbed my golf towel to clean the ball off. That set a whole new series off.\n\n\"Oh, he's going to rub his ball clean.\" A renewed eruption from the ladies.\n\n\"Can we watch?\" Howls.\n\n\"I'm not watching!\" Fingers splayed wide over Cora's eyes.\n\n\"Oh, I bet that feels good!\" They were cackling.\n\n\"Will that make your putter stand on end?\" More howls.\n\nI just met these women. What the fuck? But I couldn't help but laugh myself. It was funny and so were they.\n\nThey just didn't let up.\n\nEventually we putted out much to the annoyance of the group behind us who was starting to get pissed off at our delay. You could tell from their body language, even at a hundred and fifty yards out. Clearly they hadn't seen what was so funny.\n\nOn the fifth tee I watched Yvonne give Cora a warm rub up and down her spine while smiling. I didn't know what they were talking about but Helene, who still sat in the cart with me, watched me watching them. I must have had a bit of puzzled look on my face.\n\n\"They're a couple,\" Helene said.\n\nWhat? \"A couple of what?\"\n\n\"They're together,\" she said giving me that 'are you that stupid?' look. \"They live together, they're a couple.\"\n\nLight bulb on. I was golfing with three friggin' lesbos. But that's okay I rationalized, I love lesbians. Especially the ones on the internet.\n\nHowever, any hopes that I may have had to possibly hook up with one of them were dashed. I was fine with that. These ladies were fun.\n\nAs we played along Cora and Yvonne would sometimes look over their shoulder to our cart and start giggling to themselves. Maybe they thought I was trying to put a move on Helene and didn't know she was gay. How could I not? Her tattoo was practically rubbing off onto my right bicep as we bounced along in the cart.\n\nOn the ninth tee the four of us stood and contemplated the carved sign that showed the layout of the hole. \"It's very well done, isn't it?\" I asked.\n\n\"Have you not played here before?\" Yvonne asked.\n\n\"No. I was supposed to play with my brother. He couldn't make it. This is my first time here. I do like it though. It's a nice course. Not sure about the logo though. What is that? Two swans that are supposed to make a W?\"\n\n\"Ah, maybe. I don't know.\" Cora answered. She then asked me if I had a significant other. It seemed a kind of out of the blue question.\n\n\"Not currently,\" I answered as I prepared to tee off.\n\nI drove it into the woods again. Their tee shots were fine.\n\nAfter nine holes we stopped for beers and lunch at the shack. I brought four jumbo hot dogs to the table, \"No sausage jokes,\" I said as I sat down.\n\n\"Oh, still a little pissed are you?\" That started them again.\n\nCora held her hot dog upright with two hands. She brought her head down to it, opened her mouth and bobbed a few times before taking a bite.\n\nIt's tough to laugh with a mouthful of hot dog.\n\nAnd I thought they were ladies.\n\nAfter nine holes the scores were:\n\nCora - 46\n\nYvonne - 47\n\nHelene -- 44\n\nMike -- 47\n\nNot my greatest, especially off the ladies tees. But then that really only made a difference on about three of the holes.\n\nCora and Yvonne were still sitting at the table when I came back from the washroom.\n\nCora asked, \"Do you have plans for dinner tonight Mike?\"\n\n\"No, why?\" I was tickled that they enjoyed my company enough to consider extending me a dinner invitation. We would eat at the clubhouse, I guessed.\n\n\"The three of us normally get together for dinner after golf,\" Yvonne answered.\n\nWith the jumbo hot dog in me, I doubted that I'd be hungry enough for dinner after eighteen holes. Still, I could eat.\n\n\"How 'bout we make a little wager on the back nine?\" Cora asked.\n\nThey're more like guys than they realize.\n\n\"Sure.\" I answered.\n\n\"Okay, here's the deal,\" Cora said, \"You and Helene against me and Yvonne, combined team scores, lowest wins.\"\n\n\"Okay,\" I said, wondering what the stakes will be.\n\n\"If you win, then we're cooking dinner for you and we have to pay for your cab rides, there and back.\"\n\n\"If we win, you're cooking for us. Your place or Helene's it doesn't matter. We'll let you sort that out yourselves. Plus cab rides.\"\n\nIt seemed to me that I would get a home cooked meal out of it either way. A win-win.\n\n\"Deal,\" I answered enthusiastically. Even if it was at my condo, Helene would have to take the lead in cooking. Cab rides? Equals alcohol. Deal. And Helene is on my team? She's the best golfer amongst us. I stuck two thumbs up and smiled. Piece of cake.\n\nWe were cleaning up the table and taking our last swigs of beer when Helene came back from the washroom. Cora explained the bet to her.\n\n\"No way!\" Helene said pointing her finger at Cora and Yvonne. \"No way!\"\n\n\"Unh, unh, unh,\" Cora fired back wagging her finger, \"you can't get out of it.\"\n\nMaybe she doesn't like cooking?\n\nHelene stood there and gazed at the other two with one of those 'I'll get you for this' looks.\n\n\"What? You don't think Mike's good enough?\"\n\nHelene kept gazing at the other two. Her jaw was set. They were both smirking.\n\nI checked the score card again. She only had me by three strokes on the front nine. Was I that much of a liability?\n\nFinally Helene answered, \"Okay, but he's not playing with woods.\"\n\n\"Wait a minute, you're on my team!\" What the hell?\n\n\"Okay, if you insist,\" Cora said, \"Sorry Mike, do you mind? It will be fairer.\"\n\nI did out drive them every time. Into the woods though.\n\n\"Okay fine,\" I said. I didn't want to blow it by arguing.\n\nHelene turned to me as we pulled up to the tee on number ten. \"They're going to lose,\" she said.\n\n\"Damn right they are,\" I said grinning. I was looking forward to a decent home cooked meal. Something I rarely got. Not only that, but with some alcohol in them, I figured that these three would be a riot. Their orientation didn't matter. In fact it made it even more fun.\n\n\"Trust me,\" she said stepping out of the cart, \"you want to lose.\"\n\n\"No I don't,\" I said as I pulled out my three iron.\n\nCora drove. It was a little to the right.\n\n\"Am I missing something here?\" I asked Helene as we pulled out of the tee box.\n\n\"Yeah, that those two are devious fucking cunts,\" she hissed back while watching them.\n\n\"That's not very nice.\" I said. And definitely not very lady like.\n\nWe played a wonderful back nine and had a grand time. The girls never stopped with their jokes, always full of sexual innuendo, but always good natured about it.\n\nHelene was right. Cora and Yvonne did lose. Their combined score on the back nine was a hundred and nine. I shot a forty nine. Playing without my woods was a distinct disadvantage. Helene shot a fifty three.\n\n\"Can you make it for seven thirty?\" Yvonne asked as she handed me the score card with their address on it.\n\nCora handed me sixty dollars, \"Cab fare, there and back. Will that be enough?\"\n\nI looked at her address again and handed her twenty back. \"Okay I'll see you guys at seven thirty.\"\n\n\"Do you eat pork?\" Yvonne asked, \"I have to ask.\"\n\n\"I'll eat anything.\"\n\n\"Great game, thanks,\" we said and shook hands. Cora and Yvonne were grinning. Helene was trying hard to put on a happy face.\n\nAs I drove home I thought to myself. So if they threw the game, why would lesbians want to lure me into their lair? And why would Helene, the gayest of the bunch seem to object? The other two at least had families and therefore are arguably bisexual; Helene wears that Pride tattoo like an epaulet.\n\nI stopped to pick up a bunch of flowers and some wine. A Beaujolais and a pre-chilled Pinot Grigio. Whatever they're up to, at least I would be a gentleman about it.\n\nIt appeared to be a nice building, certainly in a choice neighborhood. I used the Enterphone to call up to their unit. Showered and freshly shaved, with flowers and wine in hand, I felt like I was going on a date.\n\n\"Hey,\" I said as the door opened. Cora and Yvonne were both dressed to kill. \"Hi Mike\" \"Come on in.\"\n\n\"Flowers. Oh how sweet.\" Yvonne gave me a kiss on the cheek and rubbed my back up and down.\n\nShe was dressed in a flowery pinkish wrap around dress that showed a little too much cleavage. I hadn't noticed how big her breasts where when we were golfing. She must have been wearing a sports bra. I didn't think she was wearing a bra at all now. Her long grey speckled hair was no longer in a pony tail. She had light pink leather shoes to match, with just a low heel. With her make-up and everything, her appearance was soft, sensual, luscious. Her fingernails were light pink.\n\nCora on the other hand was dressed in a one-piece brown velvet, I don't know what you'd call it. A cat suit? Nothing about her lithe figure was left to the imagination. She definitely wasn't wearing a bra. I could see two points. She had brown leather ankle boots with a spike heel and pointy toe. I wondered if she had a matching whip. Her red spiky earrings dangled to her sharp jaw line and matched her red lipstick and fingernails.\n\n\"You didn't have to,\" Cora said and also gave me a kiss on the cheek as I handed her the wine. I had to stoop a little to receive the kiss even though her heels were quite high. I could just detect a hint of perfume.\n\nThe fly just landed in the spider's web.\n\nHelene wasn't there yet. Whatever was cooking smelled wonderful.\n\n\"We had fun today,\" Cora said. The phone rang. \"Did you?\"\n\n\"I had a great time,\" I answered, \"you guys are a blast and the fox was hilarious.\" Cora started giggling again.\n\n\"Come on up,\" I heard Yvonne say.\n\nYvonne gave Helene a hug and a kiss on the cheek as she appeared in the door. She wore an off-white pant suit, definitely business attire. I didn't see a blouse. She had a gold chain necklace, gold dangly earrings and light pink lipstick and fingernails. Of course her handbag matched her shoes.\n\n\"Hey Cora, hi Mike,\" she said. \"What's for dinner?\" She waltzed right in.\n\n\"You'll see,\" smiled Yvonne.\n\nThe apartment was definitely furnished by ladies. Everything was impeccably clean. The carpeting was off-white, the walls were painted a pinky-mauve. The furniture looked brand new. The couches all matched, there was a floral pattern to the upholstery that tied the walls and the carpet together. The lamps, the paintings on the walls, the little accents of color and shape, everything was ultra-feminine. Martha Stewart on crack cocaine with an unlimited credit card. The place practically dripped estrogen.\n\nMaybe I should have taken my shoes off? Helene was still wearing her street shoes. With her off-white high heels and matching pant suit, she nearly blended in with the carpet. Was that some sort of female camouflage?\n\n\"Mike, would you open the wine?\" Cora asked from the other side of the counter that separated the kitchen from the dining area.\n\n\"Sure,\" I said as I walked to the counter. Even the dining table was set to match. White tablecloth overtop a pinkish purple flowery skirt and matching table napkins. Large, light pink plates. I hoped they weren't going to make me eat quiche.\n\n\"Do you like the apartment?\" Yvonne asked smiling.\n\n\"It's great,\" I said lying through my smiling teeth, \"very feminine.\"\n\n\"Thanks,\" she said and opened the oven door. \"Dinner won't be a minute.\"\n\nThey had white wine, I poured myself some red. Trying to be helpful I asked, \"Do you want me to bring the plates here, or are we going to dish up at the table?\"\n\nYvonne opened up a cupboard and pulled out four white plates. \"The plates are here,\" she said giving me a questioning glance, as she set them on the counter.\n\nI looked back at the table with the pink plates.\n\n\"Those are chargers,\" said Helene.\n\nChargers? Certainly not from San Diego. I just shook my head.\n\nThe only thing that contrasted the d\u00e9cor was Cora in her brown cat suit and me with my black long sleeve shirt and stone colored Dockers.\n\nI contemplated Cora in her suit, how slender she was, how her hips stuck out, her small breasts. What a sexy little package she was and what a wonder of nature it was that her little body managed to pop out two kids. I knew that under that cat suit she was pure muscle. That was evident from her golf swing.\n\nShe was completely different from Yvonne, an almost unlikely couple. But there they were, completely at ease with each other. I could tell by watching the two of them in the kitchen that there was a physical comfort between them. One hand would rest on the other's small of back as she reached across. A hand would be nonchalantly placed on the other's shoulder. I saw private smiles between themselves.\n\n\"Those two are fantastic cooks,\" Helene said to me as we stood on the other side of the kitchen counter sipping our wine.\n\n\"Don't listen to her,\" Yvonne answered, \"she's the amazing cook.\"\n\nYvonne and Cora both brought two plates to the table and said, \"Okay let's sit down.\" I was carefully guided to sit across from Helene. Cora was to my right.\n\nThe white plates were put on top of the chargers. They were for decoration only.\n\nThe plates were lovely, everything was sprinkled with fresh parsley. The food was incredible. Sliced pork tenderloin stuffed with porcini mushrooms, rice, chopped celery and green onions with herbs; saut\u00e9ed mini potatoes, asparagus with chopped hardboiled egg on top and a red wine vegetable gravy with leeks, garlic and fresh herbs. A small vinaigrette salad was brought to the table.",
        "\"Wow,\" I said, \"this is fantastic. And you ladies look equally as good. Thank you for having me. Cheers!\"\n\nWe clicked glasses. Cora said \"A fine win.\" Helene fired a side glance at her.\n\nThe food tasted as good as it looked. Actually, much better. It had really been a long time since I'd had food this good. Months for sure. When you're on your own, you don't cook like that. At least I don't or can't.\n\nIt was the first time I could really study their faces. Helene was lovely with blue eyes that sparkled when she smiled. She had full lips that covered pearly white teeth. Her lips betrayed every emotion she had. Everything about her was soft and feminine. If it wasn't for that tattoo, I'd have never had guessed.\n\nYvonne was also very pretty. Hazel colored eyes, little bit of crow's feet in the corner, high cheek bones, full sensual lips. Her hair line was straight and her long hair, formerly near black, was thick. The way the lines on her brow crinkled gave me the impression that she was highly intelligent and very sensitive. Like an artist. I just wanted to hug and kiss her. Again, I would have never had guessed she was a lesbian.\n\nCora, on the other hand, had an air of command about her, some sort of an executive for sure. I wouldn't want to mess with her. She was slight but wiry. Her neck veins popped out when she talked. And good looking too. Big brown eyes would bear down on you, even when she was looking up. Short brown hair, cut professionally by Yvonne I'm sure. Straight nose, strong jaw line and a smile from her thin lips that would brighten the whole room up. She too was feminine, but if someone had said to me that only one of these three ladies is gay, I would have picked Cora.\n\nI started the conversation.\n\n\"So Helene, tell me, how did you get know these two ladies?\" There was a ten year or so age difference. Lesbian bar maybe?\n\nYvonne answered, \"She's a client of mine, we've known her for years.\" I wondered if there was such a thing as a lesbian hair salon.\n\n\"And have become very close friends,\" Cora added and touched her hand on Helene's. Helene smirked back at Cora.\n\nI wondered just how close.\n\n\"So you two,\" I said glancing from one side to the other, \"had families, sorry have families, separated, and then decided you're going to live together as a couple? Somehow that doesn't make sense to me?\" I carefully avoided the L-word.\n\nYvonne didn't. She answered, \"Just because we have a lesbian relationship, doesn't mean that we are lesbians.\"\n\nGulp. I took a mouthful of food and chewed it while contemplating that last statement. It didn't make any sense, but I was glad she got that word out.\n\n\"So you two live together but aren't intimate?\" I was trying to be polite. I took a mouthful of food. It was divine.\n\n\"Of course we are,\" Cora answered, \"we love each other.\"\n\nSomething still didn't jive.\n\n\"Okay,\" I said, \"let's say I meet a guy tomorrow. A straight guy. No matter how fond I may be him, somehow I can't see the two of us becoming homosexual lovers.\"\n\n\"You never know,\" Helene answered. My eyes rolled.\n\nAfter a moment Cora said, \"It didn't quite work like that for us. We met in college. We were roommates. We explored. We became best friends. And then we fell in love.\"\n\nYvonne was smiling right at Cora who reciprocated with that winning smile of hers. It was very touching. Maybe a little too melodramatic for me.\n\nShe continued, \"The problem was that by the time we fully came to grips with that, we were both married and had families. So we made a conscious decision.\"\n\n\"Long ago,\" Yvonne interjected.\n\nCora continued \"That when our parenting duties are done, that we are going to leave our husbands and finally start our lives together.\"\n\n\"Wow.\" I said.\n\nHelene said, \"You have to admit, it was a very responsible thing that they did.\"\n\nI nodded as I chewed another mouthful.\n\nYvonne went on, \"We told them on the same day. We had this apartment already set up. That was six months ago.\"\n\nI think I was a little stunned.\n\nCora said, \"That way there was no opportunity to argue or have things get ugly.\"\n\nYvonne added, \"And no turning back.\"\n\nI took another mouthful of food.\n\n\"Didn't your husband's know that you were carrying on an affair?\" I asked after swallowing.\n\n\"Of course we always suspected that they did, but as it turned out, they didn't,\" Cora answered.\n\nYvonne added in her sultry voice, \"Mike dear, we weren't cheating on our husbands. We were the ones that were cheated. We should have been together decades ago.\" They smiled at each other again. Am I watching a soap opera?\n\nHelene said, \"I told you they were devious.\"\n\nBoth Cora and Yvonne glared at Helene.\n\nHelene changed the subject right away. \"Mike, you said you have two kids.\"\n\n\"That's correct. I have two girls, Deanne and Lisa. They're twenty one and twenty. Nineteen months apart. It was nice because they played together when they were little. They're both at university now and they're still very close. They come home to their mother's, well, every other weekend. I think it has more to do with laundry than anything else.\"\n\nI cut up some asparagus on my plate and continued, \"They're both in liberal arts programs. I don't think they have a clue of what they want to do, but they seem to be keeping good grades. They're both good kids and sensible. I can't be happier.\"\n\n\"Do you see them often?\" Cora asked.\n\n\"Every other weekend at best. And then just for a few minutes. But then, they're on the other end of a cell phone.\"\n\n\"You said you were separated,\" Cora asked, or said.\n\n\"Yeah. Unfortunately. Or fortunately. We were pretty young when we got married. We had the kids when we were young. We were just twenty five when Deanne was born.\"\n\n\"That doesn't seem unusual.\" Helene said.\n\n\"It's not. But when we started dating we were twenty. My kid's age. And by twenty five I've got a family? People change. I guess she wasn't expecting me grow up to be the father and husband that I became. And I certainly didn't expect her to morph into what she became.\"\n\n\"What was that?\" Cora asked.\n\n\"The fucking hunch-back of Notre Dame.\"\n\n\"Come on.\" Cora laughed. The others giggled.\n\n\"Seriously, the marriage just fell apart. We just got on each other's nerves. She would just keep nagging me, on and on. She'd never frikkin' let up. She wasn't the same girl I married. And of course I wasn't the same guy.\"\n\nThey watched me silently as they ate.\n\n\"We even tried marriage counseling.\"\n\n\"I guess that didn't go too well.\" Helene said.\n\n\"We went together and sat down across from the guy's desk. And she started jabbering at him, on and on, she never stopped. Everything's my fault. I didn't do this. I did that. I don't pay attention to her. We don't have sex anymore. I'm selfish. She went on and on.\"\n\nThe three of them stopped chewing, their forks poised in mid-air as I spoke.\n\n\"I just shut up and let her make a fool of herself.\"\n\n\"Then what happened?\" Yvonne asked.\n\n\"The marriage counselor stood up, walked around table, lifted the wife up from the seat and gave her a big fat kiss on the lips. Suddenly she shut up.\"\n\nThe three of them were shocked.\n\nI continued, \"The counselor turned to me and said 'she needs that at least twice a week.'\"\n\n\"What did you do?\" Yvonne asked.\n\n\"I had her there every Monday and Thursday at three.\"\n\n\"Get out of here.\" Cora whipped me with her napkin. \"Very funny.\"\n\nAll three were giggling.\n\n\"No seriously, that's the gist of it. We got on each other's nerves. Fought and for the sake of the two girls and our own sanity, it was best if we separated.\n\n\"Was there infidelity?\" Cora asked and then retreated, \"I'm sorry I didn't mean to pry.\"\n\n\"No, it's alright.\" I answered. \"On her part, I don't know for sure, but I doubt it. On my part, just a tiny bit. And it scared the shit out of me one day.\"\n\n\"What happened?\" Cora and Helene asked.\n\nThe three of them were all ears.\n\n\"Well I was doing grocery shopping one day and you know how you tend to follow a certain route through the store with the shopping cart? Anyway this blonde woman kept looking at me funny as we shopped along. She seemed familiar, but I just couldn't quite place her. Eventually she stopped me and said, 'I think you're the father of one of my kids.'\"\n\nThe three of them stopped chewing and stared at me.\n\n\"I was floored, suddenly it dawned on me. It was the only time I'd ever been unfaithful. I was at a friend's party, we were all drunk.\"\n\nThey stared at me.\n\n\"My heart was pounding in my chest,\" I went on, \"I turned to the blonde and quietly said to her, 'oh my god, you're the girl I fucked at that party four years ago. On a basement couch. You shoved a pickle up my ass as we did it.' She looked at me like I had two heads and said, 'No, I'm Lisa's home room teacher.'\"\n\nThe three of them were gasping for air as they erupted.\n\nCora started, \"You bastard, you really had me going there.\"\n\n\"My sides hurt.\" Helene stammered out.\n\nIt took a few dabs of the napkins to clear the tears from their faces but eventually we were able to resume eating dinner.\n\nIt was fun toying with them.\n\n\"This is really, really nice ladies. I've not had home cooked food this tasty in a long, long time.\"\n\nYvonne said, \"Oh you're welcome Mike, I'm glad you could make it for dinner.\"\n\n\"And I'm glad that you graciously lost today.\"\n\nThe three of them fired glances at each other. I pretended not to notice.\n\nCora broke the long silence, \"Yvonne and I were at a restaurant the other evening and there was a nicely dressed couple at the table next to us but in the corner. When no one seemed to be watching the man slithered down the seat and disappeared under the long tablecloth. I said to Yvonne 'oh my god I know what he's going to do.'\"\n\nI looked over to Yvonne, she had a smile as she watched Cora. I wondered if this was a joke.\n\nCora continued, \"It seems the waitress noticed too, she stepped up to their table and said 'Ma'am your husband just slipped under the table.' She replied 'No I think he just came in the front door.'\"\n\nI laughed. We all did. That Cora was one smooth piece of work.\n\nI continued to tell them about my life. \"Eventually I got myself an apartment.\" I said, \"I'd see this woman that lived two doors down from me in the halls and in the lobby and you know...around. We'd always say 'hi' but we didn't know each other's names. Well one day I saw her in the hall and she was struggling to open her door while she held a big laundry basket in her arm. So I decided I'd help her. She was dressed only a house coat and slippers and as I took the laundry basket from her, her front opened up and her boobs hung out.\"\n\n\"Is this a joke?\" Helene asked, then added, \"what happened?\"\n\n\"I know that my face flushed red. When I looked up to her she was grinning wildly, then she opened up her house coat to show me that she was completely naked underneath. My eyes popped out, then she quickly closed her housecoat back up and said, 'Shhh, someone's coming,' then opened the door and stepped inside.\"\n\nThe three of them stared at me with incredulous looks.\n\n\"I followed her into the apartment still holding her laundry basket. She closed the door, pulled off her house coat and stood there dressed only in her slippers. Then she proceeded to do a slow pirouette right in front of me. I mean, she was drop dead gorgeous. Nice body, pretty face, perfect tits, great ass.\" I figured lesbians would like that bit of detail.\n\n\"Okay,\" Yvonne said blinking.\n\n\"Then she smiled and asked what I thought was her best asset. 'Your ears' I told her.\"\n\n\"Her ears?\" Helene and Cora asked together.\n\n\"Yeah, she couldn't understand that either. So I had to explain to her. I said 'you know when you said you could hear someone coming? That was me!'\"\n\nThey nearly fell off the table howling in laughter.\n\nOh I loved teasing those three women. Putty in my hands.\n\nWe cleared the dishes off the table and stacked them into the dishwasher. I said thanks to them again. Yvonne said to leave the rest in the sink and that they'll finish cleaning up later. She motioned me to go and sit on the couch. I grabbed my wine and sat down.\n\nYvonne sat next to me and held her glass of wine. Cora sat in a two-seater to my right with her knees crossed, spiky boots and pointed toes on display. Helene sat across from her in a single armchair, one knee over the next. She dangled her high heel shoe nervously from her right foot.\n\nYvonne turned towards me and uncurled her free arm. Her fingertips rest on my shoulder. \"That was a fun dinner. Thank you so much. You've made this whole day so much fun for all of us.\" She leaned forward on one knee and gave me a kiss on the cheek.\n\nDid she expect me to spontaneously start making out with her? Was that the plan?\n\n\"Ladies, thank you for the dinner today and the golf. You girls are a riot. You really are. I'm so glad that I met you all.\" They smiled. \"But I know that that game was set up, by you two,\" I motioned to Cora and Yvonne with my eyes, \"much to the chagrin of Helene.\"\n\nThey were quiet.\n\nI continued, \"It was all a ruse to get me right here, right now. So what's up?\" Before they could answer I added, \"And don't be telling me that three lesbians all of a sudden have an urge for some male companionship. I'm sorry, that won't wash.\"\n\nThey were quiet and looked down at the floor.\n\nHelene broke the silence. \"I think we should be honest with Mike.\"\n\n\"Please do,\" I said.\n\nAnother silence.\n\nHelene spoke again, \"They want me to have sex with you.\"\n\nCora interjected, \"Mike please let me explain.\"\n\nHelene's high heel shook feverously as it dangled from her toes.\n\nCora went on, \"We're only looking out for Helene. We love her dearly.\" She took a sip of her wine and set the glass on the table.\n\nShe paused for a long moment before she spoke again. Slowly and in a quiet, controlled tone she said, \"Helene has been hurt in her life. Emotionally scarred. Twice. We are simply trying to help her deal with it, so that she can find some happiness in her life again.\"\n\n\"By having sex with me? How's that going to help?\"\n\n\"Please let me continue.\" Cora picked up her wine glass again, \"When Helene was young she was physically and emotionally traumatized and...\"\n\n\"I was raped,\" Helene interjected, \"I was fifteen and I was raped.\" She looked down at the floor.\n\nYvonne spoke up, \"Helene dear, there's no need to get into all that now.\"\n\nWe sat there silently for a moment exchanging glances.\n\nCora continued, \"That event pushed her into an alternate lifestyle.\"\n\nHelene turned her head down.\n\n\"I'm sorry about the rape,\" I said, \"and I can understand how debilitating that can be. No, I'm sorry, I'm sure I can't.\" I paused to take a breath and to try to figure out how I could handle the situation tactfully. \"But what has that to do with having sex with me? What's wrong with being a lesbian?\"\n\n\"Mike please,\" Yvonne answered placing her fingers on my shoulder again, \"that's a silly question for a man to ask three lesbians.\" She did have a point. But I didn't have an answer.\n\nHelene broke in, \"There's nothing wrong with being lesbian.\"\n\nCora spoke, \"Helene, please. Mike, you must understand, that childhood event has frightened Helene away from men. She carries that wound to this day.\"\n\n\"Okay I get that,\" I said trying to keep my voice steady, but my hands were in the air. I turned to Cora, \"You said this is about Helene finding happiness in her life.\" My hands were animated, \"That's very admirable of you, of you two,\" I glanced over to Yvonne. \"But Helene has chosen, or through misfortune, life has chosen for her a gay lifestyle. I think you should be finding another woman to make her happy. Not a straight guy.\"\n\nYvonne caught my hand in mid air. She pulled my hand to her cheek and pressed it. \"Please,\" she said, \"Let Cora finish.\" She let my hand go.\n\n\"I spoke of two events,\" she said, \"the second was a long term relationship, a lesbian relationship that ended badly. She was very hurt in the end.\"\n\nHelene cut her off, \"I spoke to Aya the other day.\"\n\n\"Oh?\" Cora and Yvonne both said turning to Helene. \"I thought she stopped taking your calls,\" Yvonne added.\n\n\"I still have to deal with her professionally, on occasion.\"\n\n\"What did she say?\" Cora asked.\n\n\"Well apparently she's fallen head over heels for someone.\"\n\n\"Well let's just hope she's found happiness,\" Yvonne said.\n\nCora cut her off, \"Let's hope that bitch doesn't do to someone else, what she did to her!\"\n\n\"Cora!\" Yvonne admonished.\n\n\"It won't happen,\" Helene said, \"It's a guy she's fallen for.\"\n\n\"Really?\" the two said at once.\n\n\"What happened?\" I asked, then realized it probably wasn't my place to ask.\n\n\"Helene answered, \"I was in a relationship with a girl for eight years. She was too frightened to come out. In the end she just walked out on me.\"\n\n\"There must have been more to it than that,\" I said, again I wondered if I was prying.\n\n\"Of course there was,\" Cora answered, \"every relationship has complexities, but it was still out of the blue. Helene didn't see it coming and then Aya didn't even have the courtesy to return Helene's calls.\"\n\n\"You see Mike,\" Yvonne explained, \"Helene is now too frightened to find another girl, she doesn't want to get hurt again. She's trapped.\"\n\nI looked over to Helene. Her eyes were downcast.\n\nCora said, \"I'm sure the pain from the Aya incident will eventually fade away and perhaps she'll be able to push aside her apprehensions of going on a date with another girl, but you must understand something. Middle aged lesbians have a very slim chance of finding someone. That pool is tiny. Straight women have a tough enough time.\"\n\n\"I'll say,\" Yvonne added, \"my salon is full of frustrated women.\"\n\n\"Okay so what does that have to do with me?\" I asked.\n\nCora answered, \"We don't believe that Helene was genetically pre-disposed to being a lesbian. She didn't grow up being uncomfortable in her skin, or feeling alienated or feeling different. The rape changed the direction of her life. It has limited her chances of finding happiness.\"\n\n\"And I'm supposed to do that? Give her happiness?\" I looked over to Helene. She was hunched over head down with her hands on her face.\n\n\"No,\" Cora continued, \"Helene had agreed, she swore to us, that she will let us help her. We believe, and Helene fully knows this and fully agrees, that if she had the opportunity to make love to a man, not have rough sex with him, that it would be the first step in getting over her fears. And that's all they are, they're fears.\"\n\nYvonne added, \"We know that making love to a man won't change her overnight. We would have to be very na\u00efve to believe that. The healing has to be a process. But it has to start somewhere.\"\n\nHow bizarre. Two lesbians were trying to un-lesbianize a third.\n\nCora went on, \"Helene will readily admit that she still finds men to be physically attractive, always has. But when it comes to any kind of physical interaction beyond a handshake or a kiss on the cheek, she clams up. The old fears return.\"\n\n\"Helene,\" I said, she lifted her head up. Her eyes were swollen and red. \"You're a beautiful woman, why don't you just go out and pick up some guy?\"\n\n\"She's too frightened to do that,\" Cora answered for her, \"plain and simple.\"\n\n\"Cora and I promised her that we would find a man to help her get over her fears. I'm afraid Mike, that it's you. You're the first opportunity that we've found.\"\n\n\"And why didn't you just ask me instead of putting on this charade?\"\n\nCora laughed back, \"Oh sure Mike how would that have gone? 'Nice putt Mike, oh by the way will you screw Helene for us after the game?'\"\n\nThey had a little chuckle with that. Even Helene.\n\n\"Yeah, that would pretty well have done it.\" I said grinning. I was joking of course.",
        "\"Yeah right,\" Cora said.\n\n\"I'm a guy!\" I said holding out my hands.\n\nCora said, \"So you'll do it, that's great.\"\n\nWait a minute, did I just agree? Did Cora just back me into a corner? In spite of the fact that Helene was drop dead sexy, the prospect of screwing someone who was scared shitless, frightened me. I wondered if I could even get it up under that circumstance. I imagined standing in a bedroom with Helene shaking like a leaf and Cora and Yvonne pressing their ears to the door from the other side. No way. No way, I couldn't do that. Could I?\n\nI looked over to Helene. Horror was frozen on her face. She really was scared.\n\nI gazed to the ceiling. If she needed a therapy fuck and she wanted it, from me, could I do it? Did I have it in me? Would I be understanding and gentle enough to be able to pull it off? She was very sexy though.\n\nI looked back over to Helene. It seemed to me that the question was moot. She was ready to bolt out of the room. She was fixing her shoe back onto her foot.\n\n\"Only if Helene agrees,\" I said.\n\nThe three of them jumped out of their chairs at the same time.\n\nCora pointed to Helene, \"Don't answer! Bite your tongue lady!\"\n\nThe two of them each took a hand from Helene. \"Please sit down,\" Yvonne said. She did. They both knelt down at Helene's feet holding her hands. She continued, \"Helene, we know you are frightened. Please don't be. Cora and I will be here with you. Nothing will happen that will frighten you. You are safe with us.\"\n\n\"We promise,\" Cora added.\n\n\"It will be just as we discussed,\" she stroked Helene's hand. \"There is nothing to be frightened of. It will all be alright.\" The terror on Helene's face did seem a little softer.\n\n\"Mike,\" Cora asked looking over her shoulder, \"do you have any STD's that we should know about? Or anything else? HIV/AIDS? Be honest.\"\n\n\"No,\" I answered.\n\n\"Alright then,\" Yvonne continued, \"Helene you don't have to do this now, maybe Mike will agree to come back another time, but we really believe that this is the best opportunity for you. We may not get another chance like this again. Please Helene, say yes you will do it.\"\n\nCora reinforced, \"Please Helene.\"\n\nAt that point I was thinking 'please Helene' too. Did I get that right? They will be there too. Would it be me and the three of them at the same time? Was this a wet dream unfolding before my eyes? Maybe I was just reading too much into their words. Whichever way this was going to transpire, I couldn't get out of it now.\n\n\"Yes, I'll do it,\" Helene squeaked out and put on a brave half smile. She didn't say it to me. She said it to Yvonne and Cora.\n\nCora jumped up, \"Oh good,\" and kissed Helene on the cheek. Yvonne kissed Helene's hand and then held it to her own cheek.\n\nHelene looked over to me. Her expression said it all, 'sorry.' There was still fear in her face.\n\nNot exactly the most romantic moment. What am I supposed to do now, just rip of my clothes and say okay ladies, let's go at it? I figured I'd let Cora and Yvonne take the lead. They must have thought this through to some degree at least.\n\n\"I think we should all get ourselves good stiff drinks,\" Cora said.\n\n\"I agree,\" I said as I watched Helene. She looked back at me with a brave half smile, yet clearly still stressed.\n\nCora and Yvonne collected the wine glasses and carried them out of the room leaving Helene and I alone for a moment.\n\n\"Helene,\" I said, \"don't worry, I won't do anything that you're not comfortable with.\"\n\n\"Thanks Mike,\" she smiled half-heartedly, \"but I think that's exactly the point. I'm very uncomfortable with it. And that's something that I know I have to get over.\"\n\n\"Okay, I understand. But I won't do anything that you don't want me to do.\"\n\nShe gave me another half hearted smile, \"Mike, I'm sorry about all of this. Are you sure you're okay doing this.\"\n\nI forced a grin, \"It'll be my pleasure.\" Cora and Yvonne stepped into the room holding glasses and a crystal decanter. A pack of condoms landed on the coffee table.\n\n\"Is everyone okay with whiskey?\" Cora asked. Yvonne put down a bowl of ice and some tongs.\n\n\"I'm good with whiskey, ice too,\" I said. \"Me too,\" countered Helene.\n\n\"If these condoms are just to prevent pregnancy, then we don't need them. I was snipped after Lisa was born.\"\n\n\"Oh good,\" Cora said with a bit of surprise in her voice, then added, \"It's up to you Helene.\"\n\nShe looked at me. I held my palms in the air and gazed back at her.\n\n\"No condoms,\" Helene said. I know I was grinning, Yvonne certainly was.\n\nYvonne handed out the tumblers of whiskey and ice. Doubles, triples maybe.\n\nIt was awkward and uncomfortable and yet, there was an underlying sexual tension in that moment. That sexual tension it seemed to me was emanating from none other than Helene herself. Or maybe I was just fooling myself.\n\nCora, as usual, took the lead. \"Alright Mike, here's how we will do this. The four of us are going to do this together. I want you to follow my lead and Yvonne's lead. We need to do this slowly, methodically. She needs to be able to take one step at a time. To explore. To get comfortable. If we see that we are going too far, or too fast we need to back away. And no matter what happens do not get on top of her missionary style or stifle her in any way. Do you understand?\"\n\n\"Yes,\" the ice was clinking in my tumbler.\n\n\"Helene dear, are you fine with this?\" Yvonne asked.\n\n\"Yes,\" she squeaked. She still looked very apprehensive.\n\n\"Mike, will you help me lift this coffee table out of here?\" Cora asked.\n\n\"Sure,\" I said putting my tumbler and coaster on the side table. We're going to do it on the floor? We moved the whiskey decanter and ice and then took the table out of the room. Cora removed the couch cushions and flipped the couch open. It was a sofa bed. It already had a purple satin fitted sheet on it. Of course the purple went with the d\u00e9cor.\n\n\"Wow, I didn't know these things came in king size.\"\n\nYvonne said, \"The other one is a double, but we have to do some furniture moving to have them both open at the same time.\"\n\nYvonne said, \"Let me put some music on.\" She stepped over to the entertainment center. Cora dimmed the lights.\n\nBeethoven's 'Moonlight Sonata' started. I was sitting on the bed facing Helene. Cora and Yvonne stood between us.\n\nThey kissed. The two lovers embraced each other tenderly and kissed. They kissed just the way they knew the other would respond. I was beautiful to watch. Cora brushed back Yvonne's hair. She nibbled at her ear. Yvonne kissed the end of Cora's nose holding her face in her palms.\n\nI could feel my cock stir.\n\nLightly they ran their hands up and down each other's sides gazing into each other's eyes. Then they embraced and kissed. Passionately. Their lips pressed against each other.\n\nThey broke their embrace. Yvonne kicked her shoes off then undid her dress and slipped it off. She was completely naked. Beautiful full breasts hung from her, huge dark areola were crowned with thick, long nipples that pointed slightly down and out from the weight of the breast. Her narrow waist curved onto her hips. Her tummy had a slight swell to it. Her bush was black, curly. I wondered if it was soft.\n\nYvonne's chest rode up and down with each breath. Cora took both of her hands into hers. They glided together into another embrace. Yvonne's breasts flattened against Cora's cat suit. The nipple's landing onto Cora's points. They kissed again, still holding their hands together.\n\nI saw Helene watching in rapt attention. My dick was definitely getting hard.\n\nCora traced her fingers over Yvonne's nipples, giving them a gentle rub and the pressed her hands into her breasts tenderly mashing them together. Yvonne's head slung back, her hair drooping straight down. They kissed again, Cora's hands swept to Yvonne's back under her hair, then reemerged on the small of her back and slid to her bum cheeks. Their breasts were pressed together as they kissed.\n\nI gulped and reached for my tumbler. My pants needed adjusting.\n\nCora and Yvonne turned to face Helene. They each held out a hand to her. Helene took their hands and stood up. She still had her heels on. Cora let go of Helene's hand. Yvonne took it. They stood before each other holding hands. Helene was about three inches taller.\n\n\"It will be alright,\" Yvonne said in a low voice, barely over the piano music. They let go of their hands, their arms slid together in an embrace and they kissed. The ice was clinking in my tumbler as I watched.\n\nCora's red fingernails and thin wrist slid over my hand. She took the tumbler from me and set it down on the coaster. She stepped in front of me and looked down to me grinning. Two points poked out from the cat suit as I looked up into her brown eyes. She slowly ran her hands down her sides and she slowly rotated her hips and shoulders. Red earrings swayed above me as she reached her palms out to me.\n\n\"Stand up,\" she cooed. I did and immediately ran my hands down her velvet back until they cupped her ass. Her red lips parted and reached up for mine. Her lips were warm. Soft. She brushed her lips against mine and then pressed. Her body writhed as I held her. I could smell her perfume. I pushed my hips forward and pressed my crotch against her. \"Mmmm,\" she mewed grinding back. I couldn't resist anymore. My fingers found those two points. They were hard, thick under the cat suit, giving way to soft flesh underneath.\n\n\"Unzip me,\" she whispered. I pulled my hands off of her breasts and rotated them to her back. She rotated in my arms. My hands found her breasts again. We both watched Yvonne and Helene. Her shoes were off. They were kissing. Their hands were sliding over each other. Over their breasts, hips and bums.\n\nCora reached behind her neck and found a zipper tucked under a brown velvet fold. She unzipped a few inches. I took over and unzipped all the way down to her bum. She pulled the cat suit off of her shoulders, pulled one arm out, then the other. It hung from her waist. My fingers found her nipples again. They were hard, thick. I kissed Cora on the neck and I looked down to see her nipples. Small areola creased to thick nipples. Her breasts were small, almost flat to her chest. I couldn't feel any weight to them.\n\nYvonne had unbuttoned Helene's jacket. As she pulled it from herself I saw Helene's small pink boobs ensconced in a lacy white bra. Her gold chain hung from her neck. She looked delicious. Yvonne's fingers gently traced the undersides.\n\n\"I have to sit down,\" Cora whispered as I tweaked her nipples. \"Let's get you undressed too.\" We sat on the sofa bed and watched Yvonne and Helene. She undid Helene's pant button and zipper, squatted and pulled them down. Helene had matching lace panties. Her bum cheek in profile, was perfect. I undid my shoe laces and kicked my shoes off as Cora took her boots off next to me. Helene stepped out of her pants. Yvonne placed them on the chair alongside her jacket. Cora slid the cat suit off her right leg as I pulled my socks off and stuffed them into my shoes. As I unbuttoned my shirt Cora suddenly appeared before me. Naked. Thin. Lithe. Her pussy was shaved bare. Thin lips just barely peeked out from her slit.\n\nMy cock pressed against my pants.\n\n\"Stand-up, let me help you out of your pants.\" She unbuckled me, undid the button and unzipped. My cock sprang out as she pulled my pants and underwear down together. Immediately she wrapped her fingers around it. \"Ohh, nice,\" she whispered to me giving me a stroke, \"Yvonne's going to love this.\" I detected just a hint of perfume.\n\nYvonne? I thought this was all about Helene.\n\nShe whispered in my ear, \"Her husband was small.\" I stepped out of my pants with Cora's assistance as I pulled off my shirt. Cora piled all my clothes under the side table. She returned and snuggled herself back into my arms, kissed me then rotated in my arms again. My cock was pressed against the small of her back. My hands immediately found her nipples again. We watched the other two.\n\nHelene's bra was now off. Her tits were smallish, but long with puffy pink nipples, terminating with deeper pink points. Oh how I wanted to slide those puffs into my mouth. Yvonne slid Helene's panties over her hips, they dropped to the floor. Her left foot stepped out. The panties hung off her right foot as she swept them up to meet her left hand. She pulled them off and tossed them on the chair. Yvonne's black bush ground against wispy golden curls as they embraced and kissed. Hands sliding everywhere. Yvonne's boobs were flattened against Helene's puffy nipples. It was a glorious sight. My cock ached as it pressed Cora's back.\n\nYvonne and Helene kissed each other. Their left arms slung over each other's shoulder. Their right hands buried in each other's pussy. Their lips ground against each other. That was so fucking hot to watch.\n\n\"Oww, not so hard,\" Cora said turning her head up to me and brushing my hands away from her nipples.\n\n\"I'm sorry Cora, I just got carried away watching those two.\"\n\n\"Okay, kiss them better then.\" Yes ma'am. She turned herself around and pushed me down by my shoulders. I sat on the bed with my cock pointing straight up. She leaned down and offered her right nipple to my mouth. I gently sucked it in and swirled my tongue around. What a huge nub. I could feel every crinkle in the areola as my tongue passed over. \"That's better,\" she whispered in my ear. \"Now the other one.\" I did and as I did it, I cupped her tight little ass cheeks. What a little sex machine that Cora was. I could smell that perfume again as her earring dangled at my jaw. Her fingernails scratched at my cock. \"Lie on the bed,\" she whispered and gave me a slight push. I did.\n\nCora's mouth was on my cock as soon as my head hit the sofa bed. She swirled her tongue around while holding the shaft with her right hand. I moaned as I watched her red lips slide up and down. She lifted her head off and turned to face me. \"What's the matter, no sausage jokes?\"\n\nI groaned as I sat up on my elbows. Cora let go of my cock. It flopped down onto my pelvis. She slinked over and sat next to my right shoulder, cross-legged.\n\nWe watched Yvonne and Helene break their embrace. Each slipped a finger from their right hand into their mouth tasting the other's juices. I couldn't believe what I was watching. They held each other's hands, fingers entwined together, both with pink fingernail polish, nearly the same shade. Their hands dropped to their sides and they tilted their foreheads together. Yvonne whispered something to Helene, but I couldn't make out what it was over the piano music.\n\nYvonne and Helene let go of their hands and turned to face Cora and I. Helene had a look of apprehension on her face. Yvonne did a little happy dance twirl as she spied my hard cock. Her hair swung from side to side as her elbows raised up high.\n\nCora shuffled a little higher towards my head to make room for Helene. The other two got onto the sofa bed and sat cross-legged next to me. Yvonne was on my left side. Helene across from her, next to Cora.\n\nThree pussies stared at me. How different could they be?\n\nCora's was shaved bare. Her outer pussy lips were thick, almost swollen. The inner lips barely emerged. Thin, slightly darker in color, they parted slightly where her hole was. I could see a tiny glisten of moisture. Pity her cat suit didn't ride high enough, it would have outlined a perfect camel toe.\n\nYvonne's pussy was massive. Only the black hair on her mound was left, the rest was shaved. Long, thick dark crinkly lips opened like a butterfly to reveal a deep pink core. A long thick clit swelled under its hood pulling her lips forward. Her opening gaped. Moisture oozed over the ridge formed by her lips below her hole. Her pee-hole poked out a bit.\n\nHelene's pussy was the picture of perfection. Thin golden curls framed soft pink pussy lips which parted slightly as she sat. A little moisture lingered from the fingering. She looked delicious.\n\nI was in honey pot heaven as I lay on the sofa bed with my hard on, a wet dream come true.\n\nYvonne rubbed my chest with her right hand and held up my cock with her left. She was grinning as she spoke, \"He's a fine looking man isn't he?\"\n\nCora ran her red fingernails through my scalp and along my jaw. \"Mmm, just a touch of grey to the temples, full head of hair. How old are you Mike?\"\n\n\"Forty five,\" I gurgled.\n\n\"And no beer belly,\" Yvonne added, \"Do you work out?\"\n\n\"Some,\" I stammered, \"probably not enough.\" I could see pre-cum on my shaft.\n\n\"Helene, do you think he's good looking?\" Yvonne asked smiling at her.\n\nShe still had a look of apprehension on her face, \"Yes,\" she answered in a small voice.\n\nYvonne let go of my cock. It flopped back down. She placed her pink finger nails in a line on my left bicep. Looking at Helene across from her she said softly, \"Helene, touch Mike just as I am.\"\n\nWith a little concern in her face slowly her fingers reached out to my right bicep, hovered for a moment then touched down.\n\n\"Follow my motion.\" Yvonne ran her fingers up and down my arm. Helene mirrored the movements on the other side as if I was a Ouija board.\n\n\"Is that okay?\" Cora whispered as she lightly scratched my scalp.\n\nHelene nodded.\n\nYvonne moved her fingers to my chest, flattening her hands out a little. Helene did the same. Their pink fingernails touched together in the center of my chest as they ran through my few chest hairs. One hand circled my nipple while the other traced a line over my rib cage to my hips. I flinched from the simultaneous tickle I received as fingernails crossed the gap to my thighs. Like two piano players sharing the same duet they continued. My face, my shoulders, my thighs, my belly my public hair, just to the edge of my cock, they continued.\n\nCora smiled slightly as she watched Helene's face.\n\nHow I wanted to reach out and cup a breast on each side or to nuzzle myself into one of their pussies.\n\nYvonne picked up my left hand with both of hers. Helene followed suit. Yvonne pressed my hand against her cheek then kissed my fingers. Helene kissed my fingers.\n\n\"Are you okay?\" Yvonne whispered. Helene nodded.\n\nHolding my hand with just one, Yvonne pulled my arm to her breast and rubbed her nipple with the back of my hand. I could feel the thick long nipple bouncing across the bones above my knuckles. Helene did the same. Her soft puffy nipple squished down from the pressure of my hand.\n\nThe procedure was repeated on the other nipples.\n\nI was in heaven.\n\nYvonne put my hand down. She placed her right hand next to my ear and her left on my chest. She shifted her weight and leaned down to give me a kiss, her boobs swayed below her and her dark speckled hair enveloped my vision in darkness as she touched my lips with hers. She was warm and soft. She lingered for a moment before pulling off. A smile graced her lips as she pulled away. She sat back and smiled at Helene.\n\nCora shifted herself towards the crown of my head, tacitly encouraging Helene to repeat the kiss.\n\nShe did. Her eyes closed as her soft lips met mine. Her head swayed slightly as she pressed the kiss in to me. Her lips parted slightly as she kissed. I parted mine. Our tongue tips touched slowly before she pulled away. Her eyes were still closed and her face was calm. As she sat back she opened her eyes and a soft smile broke across her lips.\n\nYvonne and Cora watched intently.\n\nYvonne placed one hand on my chest and ran the pink fingernail tips of the other up and down the exposed underside of my cock. It twitched uncontrollably from the touch. She gazed up to watch Helene's reaction.\n\nHelene mirrored Yvonne's movements. Ten fingernail tips tortured me simultaneously. Clearly they weren't thinking about me through all of this.\n\nYvonne's fingers wrapped around my shaft. Helene's followed suit, her palm was half over Yvonne's, their fingers entwined. A riot of pink fingernails danced on my cock. Thumbs found the pre-cum and rubbed it up and down the top of my shaft. Yvonne's fingers disappeared to scratch at my scrotum and to roll my balls. Upon her hand's return Helene followed her actions.",
        "I was squirming as I looked up to see Cora's beaming smile upside down. Her fat nipples were hardened as she watched. I looked back to see Yvonne's hair sweep across my belly obscuring the view of my finger and fingernail swarmed cock. A big breast pressed against my belly. A warmth enveloped my cock head. My eyes rolled in my head. Suddenly I became aware that my breathing had deepened. Yvonne's right hand replaced her left on my cock. She swept her hair from my belly around her neck revealing her mouth on my cock. Her cheeks concaved as she sucked in. I could see the bulge of my cockhead in her mouth. There was a tiny pop as she pulled her lips off my cock. A bridge of moisture broke and landed on the left side of her chin as she pulled away. She wasn't smiling. She was hungry. I could see it in her face.\n\nHer expression exited me more than the quick suck did.\n\nAll eyes were on Helene. Her right hand was still wrapped around my cock. Yvonne's slipped away. She paused as she gazed at my cock.\n\n\"Don't be frightened,\" Cora said in a low voice.\n\nHelene's face turned to Cora. There was apprehension and excitement mixed together in her face.\n\nCora's fingernails left my scalp. Pivoting on knees above my shoulders she leaned forward placing her weight on her hands on either side of my waist. I watched the underside of her jaw between two thick points descend to my shaft just before my vision was obscured by her bare pussy. The aroma of her arousal overwhelmed me. Earthy. Female. Sweet. Sweaty. I craned my neck forward as my tongue extended. I could feel the warmth on my cock. I could feel her tongue swirl around my cock head. My tongue found her slippery slit and pressed straight into her hole. She rolled her hips back to push me farther inside. My nose pressed against her bumhole as I dug as deep as I could. Her hips rocked as her mouth bobbed on my cock. I could feel her hard nipples pressed against my chest.\n\nSomething was going to explode.\n\nCora lifted herself off me and sat back on her knees. I could see her upside down smile between her stiff nipples. I could feel perspiration on my brow and her glorious pussy taste in my mouth. Helene's hand was still wrapped around my wet cock. Her head was turned to watch it.\n\nHelene's head turned to gauge Cora's expression, she then turned to look at my cock again, then to see Yvonne's still hungry expression, back to my cock, back to Cora, then back to my cock again. I knew she would do it.\n\nShe did.\n\nThe side of Helen's face extended just past her rainbow tattoo as her mouth reached for my cock. One puffy topped breast pressed my side. She paused with the tip of my cock pressed against her lips, then she slowly lowered her mouth onto my cock. It was warm. Her tongue swirled around my cockhead before she pressed down until my cock hit the back of her throat. Up and down she slowly lifted and lowered her head, swirling her tongue the whole time. She turned her head to one side, then the next. I could see her cheek bulge as my cockhead pushed against it. Saliva bubbled on her pink fingernails.\n\nMy brain was screaming in overload. My knees shook.\n\nShe kept at it. Slowly she jerked my cock up and down, she knew what she was doing. A natural. I wasn't going to last long if she kept it up much longer.\n\nWhile still holding my cock she lifted her head from it. A trail of saliva followed. Her eyes immediately were drawn to Yvonne's.\n\n\"Very well done,\" Yvonne cooed quietly gazing to Helene.\n\nA bit of an understatement! Good lord! I nearly blew the house!\n\nHelene and Yvonne leaned across me and gave each other a kiss on the lips. Her hand was still wrapped around my dick.\n\nYvonne said to Helene, \"Follow my lead,\" she paused for a moment then added, \"you don't have to do this, if it's getting too much.\"\n\nHelene didn't react except for pulling her hand away from my cock. It was almost a relief.\n\nYvonne adjusted herself next to me. She tucked her left foot under my left thigh, her right knee was spread wide to the side, her pussy was splayed wide open. She was sitting upright with her weight on her arms behind her.\n\nI gazed at her open pussy. It glistened before me. Her big clit stuck out, still under its hood.\n\nYvonne shifted her weight to one arm. She picked up my left hand and guided it to her pussy, then reached back to put her weight back on her two arms.\n\nI looked up to her face. It was hungry, yet sensuous.\n\n\"Inside,\" was all she said in a low voice.\n\nOne finger, then a second slipped into her. Her vagina was wide. Wet. My thumb fell on her clit. I could feel how hard and big it was right away. I rubbed her clit from side to side. Yvonne tilted her head back. Her hair flowed down behind her. Her boobs rose and fell with each air intake. I could hear every deep breath. Her thighs quivered slightly.\n\nIn and out I fingered her pussy, my thumb always flitting her clit from side to side. I crisscrossed my fingers inside her, I flexed my fingers. Yvonne's hips rocked, meeting every push into her. Clearly she was loving it.\n\nYvonne's head tilted up and she looked across to Helene with a smile but said nothing. Helene glanced to Cora, but I didn't see her expression. A wry smile came across Helene's face.\n\nI continued to finger fuck Yvonne while rubbing her big clit. It was incredible how wet she was.\n\nHelene picked up my right hand, selected my index finger and slipped it into her mouth. She let go of my hand and adjusted her position next to me. My finger was still in her mouth as she did so. With her weight on her arms behind her she opened her pussy up. I pulled my finger from her mouth and lowered it to her pussy.\n\nShe didn't need to lube it up. It slipped right in. It was warm inside. Tight. My thumb landed onto her clit. I could feel the little nib under my thumb pad as it slipped from side to side under the hood. Helene's eyes were closed. There seemed a faint satisfaction to her face.\n\nI was living a wet dream. I know I was grinning. I closed my eyes and continued to finger fuck the two ladies, never letting up on rubbing their clits.\n\nI felt the sofa bed move. Cora positioned herself on her knees behind Helene. Helene leaned back into Cora, taking her weight off her arms. Cora's hands reached around Helene cupping her two long breasts, lifting them slightly. Cora kissed Helene's neck, her head rested to one side on Cora's shoulder, eyes closed. Red painted fingertips teased the tips of Helene's puffed out nipples.\n\nYvonne's expression had changed. Her belly trembled together with her thighs. Her boobs shook in sympathetic vibration. Her neck and face had reddened. Her eyes were closed and her mouth was open, teeth apart. Yvonne's breathing had changed to short, shallow gasps. I knew she was about to orgasm on my fingers.\n\nA third finger slipped inside her with ease.\n\n\"Aaaaaaahhhhh!\" Yvonne came. Her pussy contracted on my fingers. Her head jerked forward, her belly flexed. \"Auughh,\" she contracted and flexed again. Her clit was stiff, my fingers were wet, sticky. \"Aauughh,\" she contracted and flexed again. Yvonne took a deep breath, \"Hhaaa\" flexed and contracted on her exhale. She shuddered and shuddered again.\n\nHelene and Cora were watching her intently. Helene's face blushed.\n\nYvonne pulled my hand from her and flopped onto her back. Her flattened boobs rolled with each deep breath. She rubbed her nose with one hand and pulled hair from her sweaty brow with the other.\n\nI looked at my left hand. Yvonne's juices coated three fingers and ran across my palm to below my wrist. I licked my hand and fingers clean as I returned my gaze to the other two. It tasted of raw sex. I couldn't get enough.\n\nI continued to finger Helene as Cora attended to her boobs.\n\nI felt the sofa bed move. Yvonne lifted herself up and crawled to my side. Her left leg crossed me as she straddled herself over my cock. Her movements caused Helene's leg to be knocked aside and my finger pulled out. Helene's expression said it all 'what's she doing?'\n\n\"You know she's insatiable,\" Cora said into Helene's ear. Helene grinned as my finger found her pussy again.\n\nI felt my cock being lifted, it slipped into Yvonne's pussy without friction. She sat up putting her full weight on my cock. Her right hand rubbed just above her pubic hair as her head and hair fell back, \"Mmmm...that feels so good.\" She started a slow rocking of her hips.\n\nDamn right it felt good. I continued to finger Helene and rub her clit with my thumb. Yvonne's pussy was so warm. I could taste her juices in my mouth. Her boobs swayed above me. I was in sensory overload. I knew that if Yvonne kept fucking me that I would come soon. Of that I was certain.\n\nYvonne leaned forward putting her hands on either side of my head. Her black speckled hair trailed down surrounding my face. \"I love your cock Mike,\" she said quietly. I bucked my hips to push into her. I matched her rocking motion. \"Don't cum yet,\" she said, \"you've got to save that for Helene.\"\n\n\"You better stop then,\" I answered still jabbing my cock into her wet pussy.\n\nShe lifted her left leg off me. My wet cock flopped onto my belly.\n\nAs she knelt next to me she held her left arm out towards Helene. \"Come, my dear, it's your turn.\"\n\nApprehension washed across Helene's blushing face. I slipped my finger from her. It immediately went to my mouth. What incredible flavor.\n\n\"It's okay,\" Cora said softly into her ear, \"we're here with you.\"\n\nHelene's hand took Yvonne's.\n\nThe taste of her pussy juice made my head swim.\n\n\"Face the other way,\" Yvonne said. Helene shifted herself with Yvonne's help. Her left leg crossed me and she knelt facing my feet. Yvonne held her left hand, Cora her right. My cock was inches from her pussy. Cora repositioned herself straddling my knees. She faced Helene and took both of her hands and held them in front of her.\n\nI admired the curves on Helene's back, sleek, female. The nape of her neck swept to her shoulders in a most feminine manner. There were two slightly concave sections of her back on either side of her spine where it swept to her bum. Helene's pink bumhole was staring at me. It was lovely. She was lovely.\n\n\"Now's the time,\" Cora said to Helene, \"can you do it?\"\n\nHelene didn't answer and I couldn't see her face, but from the back of her head I could tell she was nodding. Piano music continued in the background.\n\nA big grin came across Yvonne's face. She brushed her hair behind her shoulders. Yvonne's right hand picked up my cock. Her pink fingernails were matched with Helene's pink fingernails that pulled apart her labia. I saw a red fingernail too. The sharp fingernails caught my cock as Helene lowered herself onto me. My cock was pulled forward to an almost painful angle. Slowly she lowered herself onto me. She was warm, tight and wet. Within a moment I was balls deep.\n\nMy heart was pounding. I gripped the purple sheet with my fingers. Helene started to rock her hips tentatively. Equally as slowly I started to flex my bum muscles in tempo with Helene.\n\nShe was fucking a man.\n\nMe.\n\nYvonne repositioned herself next to Cora and knelt facing Helene. Her hands reached for Helene's front, playing with her tits, I could only imagine. I felt a fingernail nick my cock every few seconds. Cora's left hand slid behind Helene's neck. Helene's arms embraced Cora. They kissed.\n\nMy cock was pulled farther forward with the slight angle change.\n\nHelene's tempo picked up. She actually raised herself off my cock a little. I picked up my tempo too, rocking my hips upwards to meet her.\n\nThe nicks on the underside of my cock came more frequently. That and the angle of my cock was probably the only thing that stopped me from cumming.\n\nI wished I could see Helene's face. Yvonne's was a combination of smiling and what I came to recognize was a look of sexual hunger. She was getting seriously turned on watching and participating in what was going on. Cora was right, Yvonne was insatiable.\n\nHelene's rhythm increased, she would almost lift herself clear off my cock before slamming herself back down. I had to wipe the sweat from my forehead before I could take the scene in again. I gripped the sheets.\n\nI needed air, my chest was heaving up and down. I wasn't going to last long.\n\nSuddenly she came. Like a vise around my cock her pussy muscles contracted. Her bumhole tightened, she slumped forward onto Cora's shoulder. I heard a rush of air from her lungs. On the second contraction I came too, the sight of her little rosebud clenching was too much for me. Muscles in Helene's back and bum cheeks rippled as she came. My hips were bouncing of their own volition under her weight. Clench. Squirt. Fingernail nick. Clench.\n\nHad it not been for the almost painful angle forward my cock was set at, I would have probably cum a bucketful. I didn't. It was only half a cum.\n\nBut that was okay. That was all about Helene. Not me.\n\nHelene leaned back, placing her weight on her hands which were next to my ribs. What a relief it was to have the angle of my cock restored back to normal. I'm sure I oozed more cum into her.\n\nYvonne dove onto Helene's crotch face first. Speckled black hair flowed like water over Helene's and my legs. My cock was still in her.\n\nYvonne was licking the base of my shaft. What a sex fiend. I could hear moans of pleasure from Yvonne as she licked away at the two of us.\n\nHelene lifted herself off my cock. It flopped to my pelvis, glistening. Yvonne cupped Helene's bum cheeks to raise her hips and crotch higher. She licked Helene's pussy which must have been oozing my cum.\n\nCora spoke, \"Yvonne, let Helene taste Mike's cum. Let her know what a man tastes like.\"\n\nAfter several moments of licking, slurping and sucking sounds Yvonne let Helene's bum drop down. She sat up on her knees, placed one knee on the outside of my left leg and pulled her long hair back and over her left shoulder. I could see her mouth was full and wet. She craned her neck down towards Helene's lips. Their kiss was perfectly silhouetted against the backdrop of Yvonne's black speckled hair. Yvonne fed Helene my cum. Like a hungry little bird Helene's tongue and lips sought out Yvonne's offering. Cum and pussy juice seeped out between them. Their hot breath caused little white bubbles to form on their lips.\n\nI couldn't believe what I was watching, a porno film come to life before my eyes.\n\nEventually they finished kissing and licking each other. Yvonne lay down on her back with her head to the couch. She pulled at Helene's hand, \"Come here. I want more.\" Helene climbed over and straddled Yvonne's head. \"No, turn around the other way.\" Helene turned around while Yvonne shifted down a bit. Helene's pussy descended to Yvonne's face. Her tongue reached out as a dribble of cum ran down the inside of her thigh. Yvonne caught it.\n\n\"Oh yeah,\" Helene said smiling. Yvonne's tongue was darting everywhere. Helene reached her hand out to Cora and said, \"pass me my drink,\" Cora stood up. She picked up Helene's, passing it to her and then picked up her own. \"She's on fire tonight, isn't she?\"\n\n\"She certainly is,\" Cora answered.\n\nI got up to take a sip from my tumbler. Now I understood what 'close friends' meant.\n\nCora took Helene's drink from her and carefully placed it on the coaster. Her own followed.\n\nI watched Cora reach into the side table and pull out a small bottle of what appeared to be lube. She squirted a generous amount onto her right hand. Seeing that, Helene spoke out, \"Oh yeah!\" Yvonne's knees flexed together and back as she lay on her back lapping at Helene's pussy.\n\nCora worked the lube all over her right hand. She must have seen a puzzled expression on my face. Smirking she said to me, \"When she get's like this, there's only one thing that can be done.\"\n\n\"What's that?\"\n\n\"She needs to be fucked until she's silly in the head.\"\n\nI think my eyes popped out. Cora then reached for my semi soft cock with her left hand leaned in towards me and with a low voice asked, \"Do you think you can get it up again?\"\n\nI was stunned. I didn't know what to say. Cora smiled at me then ran her left hand over her slit. She got onto the bed between Yvonne's legs, careful not to touch her hands anywhere. Cora slender little bum was in the air. Her fat little pussy glistened just below a puckered brown bum hole. Using her left palm, fingers and the back of her hand she applied as much lube to Yvonne's pussy as she could.\n\nCora made a fist with her right hand. It was contorted in a manner so as to tuck each of her red fingernails against the palm. The knuckle on the index finger stuck out. She pressed her fist against Yvonne's pussy and started to twist it into her.\n\nThe ice in my glass was tinkling from my shaking hand as I watched. Yvonne moaned from below Helene. I had to put my drink down.\n\nYvonne's fingers clenched at her big nipples. Twisting them, pulling them and rubbing the very ends with her thumb pads.\n\nCora's fist was halfway in. Yvonne's big pussy lips were splayed wide open. The entrance to her vagina was stretched. The pink skin distended as Cora's fist pulled out and receded as her fist went in. Cora twisted her wrist as she pushed in and out. She shook her whole arm.\n\nThere was more moaning from Yvonne.\n\nSuddenly Cora was inside past her wrist. Yvonne was rocking her hips while still moaning.\n\n\"That is so hot,\" Helene said viewing the proceedings from about.\n\nApparently I thought so too. My pecker was starting to swell again.\n\nThe thumb and index finger on Cora's left hand found Yvonne's big clit. She jerked it as if it were a tiny cock, using the labial hood as a foreskin.\n\nIt seemed that Yvonne was enjoying it quite a bit. Her whole upper torso was turning a deep pink. Her thighs and abdomen quivered.\n\nCora was pumping her fist in all the time. She shook her bum a few times, then continued to keep pumping into Yvonne. Twisting, shaking her arm.\n\nCora shook her bum again, then got right back at pumping Yvonne.\n\n\"I think she wants you to fuck her Mike,\" Helene said snapping me out of it.\n\n\"Oh,\" I said as Cora shook her bum again.\n\n\"She's the only one that hasn't had an orgasm.\"\n\n\"Fuck me Mike. Doggy me.\"\n\nIn a flash I was behind Cora. My knees were right on the edge of the sofa bed. I pulled her thin little ass cheeks apart. The thin lips of her pussy parted just a little. Everything was wet.\n\nI was hard. And in I went. Just the head.\n\n\"Yessss,\" Cora hissed below me. Her wrist kept at it. She pulled her fist out just to enough to get as much distended as possible before plunging back in.\n\nI wondered if she was flexing her fingers apart inside Yvonne as I continued to slide my cock into Cora. There was no friction. She was tight, warm and wet. I pushed it all the way in.\n\nCora moaned out loud.\n\n\"Fuck her hard Mike,\" Helene said, \"she likes it hard.\"\n\nWith one cum-shot out of me already, I knew I could go for a long time before I came again. If she wanted it hard and fast, that was exactly what I was going to give her.\n\nI pulled back then slammed home. She moaned. I slammed her again. She moaned again. I did it again and again. She kept on moaning but never let up on Yvonne's pussy.\n\n\"Do you want it hard and fast Cora?\" I slammed her again. The back of her head bobbed up and down as I banged into her. That was a 'yes'.\n\nYvonne became very vocal below Helene's pussy, her tongue only stopped when I could see her bottom lip suck in her clit. Her growling never stopped, nor did the trembling of her deep pink body.\n\nNor did Cora's gyrating, pumping fist.\n\nNor did my cock into Cora.\n\nMy only challenge was keeping my balance. Helene solved that for me. She reached her two arms out towards me. I extended mine to hers. Our fingers entwined and our palms pushed against each other allowing me to transfer some weight to her and a lot more stability. That gave my cock a whole new life. Cora's moaning took on a new audible quality. I looked into Helene's blue eyes, her face was red. Through our extended arms, frozen in a paddy-cake position I could see Helene's lips quivering. She bit her bottom lip. She was going to cum again. I could see it.",
        "Underneath us Yvonne's body started to jerk, each spasm was accompanied with a muffled \"Auuughh.\" She didn't stop. Through nipples pulled by her own hand I could see her deep pink chest rising for air. Her hips buckled. I could well imagine that Cora's fist was being crushed.\n\nCora reacted to Yvonne's orgasm right away. Her low pitch scream was only interrupted by her need to intake air and the stabs she was getting from my cock. She kept pounding her fist into Yvonne and jerking her little mini-cock.\n\nAll of a sudden I wasn't sure of my ability to hang on. This was getting too much. I knew I was going to cum again. Soon.\n\nHelene's face was contorted. Red. Sweaty. Her breathing was rapid. Her hands shook against mine.\n\nYvonne jerked below us, \"Auughh.\"\n\nCora's screams went up a tone and got louder.\n\nI pounded her hot pussy harder.\n\nHelene's grimacing face shook.\n\nYvonne spasmed below us with a muffled \"Aaghh.\"\n\nCora screamed as her pussy clamped on my cock, the force nearly pushed me out. Her back arched up. Through her tightened pussy I rammed my cock back in.\n\nHelene arched over, her elbows gave out. Air whooshed from her mouth together with spit and sweat. She fell forward.\n\nI grabbed Cora's hips just in time to feel her contract through her scream. Her bumhole tightened and her back arched up. I held myself inside her and came. My hips bucked involuntarily as I held Cora's small hips. She continued to scream and flex under me.\n\nYvonne shook uncontrollably below me. \"Aaaauuughhhh!\" Cora's fisting never let up.\n\nHelene's left thigh lay across Yvonne's belly, bent at the knee. Foot straight up. Laying next to Yvonne I could see her bum muscles clenching together as she hissed air.\n\nCora's pussy tightened again.\n\nI could feel my sphincter tighten as every last sperm I had was emptied deep inside Cora's tight puss. Her screaming let up only in search of air. I held my cock as far in as I could, pulling her towards me. She crumpled below me. Her fist still held within Yvonne.\n\nYvonne jerked again. \"Ohhh.\"\n\nI collapsed on top of Cora, still wedged inside her. We were all gasping for air.\n\nHelene rolled off Yvonne and lay on the bed. Her chest was rising in search of oxygen.\n\nCora pulled her wet fist from Yvonne. I saw her pussy gape. The deep red inside contrasted to her dark labia. Everything was soaking wet. Her body still pink as her breasts flattened to the side then rose with each audible breath.\n\nI let go of Cora's hips. My cock slipped out as she sunk to the bed on her belly. Her slender frame and shoulders panting.\n\nI flopped down onto the bed. Helene's feet were on my left, Cora's head to my right just below my shoulder. Yvonne had curled up into a fetal position to my right. I was gasping for air. My cock was shrinking rapidly.\n\nWhat an unreal sex experience I'd just had.\n\nNo one said a word. We just needed air.\n\nPiano music played on, oblivious to what had transpired.\n\nI rolled onto my back, still sucking in air.\n\nCora rolled to her back too.\n\nI needed water, something to drink. I expected the others did too.\n\nI was worried for Yvonne's pussy. That must have hurt. Maybe it didn't. Was that what defined 'being fucked silly?'\n\nI wondered about Helene. Did I do okay? Did it really help? I'd figure it must have. I was sure glad that Cora and Yvonne took charge. I wouldn't have known what to do.\n\nDo these women always fuck like crazed animals? Wow.\n\nCora sat up and yelled, \"Cut! That's a wrap! Save it to file and send it to editing!\"\n\n\"What the fuck?!\" I bolted up. So did Helene.\n\nThe three burst out laughing. \"Should have seen your face!\" Cora screamed.\n\nI burst out laughing too. Helene fell on me in hysterics. Her head hit my chest as she fell forward. Tears were in her eyes. She looked to my face every few seconds and started laughing anew.\n\n\"You really had me there,\" I stammered out. That set off a renewed round of laughter.\n\n\"What happened to all that cuddly stuff women want after sex?\" I managed to blurt out. Another round started. Cora was kicking her legs in the air. Helene was banging her head against my chest.\n\n\"Post coital bliss?\" Yvonne gasped out, her big boobs shaking with laughter.\n\nIt was bliss.\n\nAfter a few moments I looked up to see Yvonne and Cora both smirking through their giggles. They were obviously pleased with themselves. What a pair they were. First they trapped me and then they backed me into having sex, which I enjoyed tremendously. Then they made Helene orgasm with me, twice. Then finally, they had her laughing wildly with her head on my chest.\n\nHelene was right, they were devious cunts.\n\nAngels though. Absolute angels.\n\nI stroked Helene's hair. She smiled at me. A tear ran from the corner of her eye. I didn't think it was a tear from laughter anymore.\n\nWe did cuddle. We all did. Then dressed. We had a big glass of water and another drink before calling cabs and kissing each other goodnight.\n\nGolf was set for the next Wednesday morning at Whistling Swans. Same teams, same stakes. I still wouldn't get to play with my woods.\n\nHelene felt she needed more therapy. Yvonne and Cora concurred.\n\nMe? I was just happy I could help.\n\n*\n\nIf this story tickled you, then please be so kind as to honor me with a high five. It's only a mouse click away.\n\nThanks, sincerely;\n\neclare"
    ],
    "authorname": "eclare",
    "tags": [
        "mfff",
        "lesbian",
        "creampie",
        "cum transfer",
        "fisting",
        "cock sucking",
        "creampie eating",
        "golf",
        "hard fuck",
        "big clit"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/whistling-swans"
}