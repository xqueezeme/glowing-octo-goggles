{
    "title": "Sun Hee Ch. 06",
    "pages": [
        "\"I've taken your manhood. It belongs to me now.\" \n\nThese were the first words I heard from Sun Hee in the morning as we woke together in each other's arms. Her little hand was down between my legs resting on her property, as it often was, and her long black hair draped across her sleepy face and stuck between her lips. Her hair was in my eyes as well, and the sweet musk of her skin filled my nostrils. My lips pressed against the side of her temple, tasting her.\n\nI could feel her fingers absently exploring the chastity cage she had locked there, her touch both delicate and cruel.\n\nMy eyes squinted against the light, unwilling to wake up, and instead I drew Sun Hee's petite little body closer to mine. She felt warm and soft and willing. Crammed together in the tiny twin bed of my dorm room, we must have looked a picture of young love, if not for that plastic cage.\n\nFor any other young couple, waking groggily would have led to tender sex, her legs falling open as I rolled toward her, morning wood nosing between her sleepy thighs. \n\nBut Sun Hee was right. She had taken my manhood. I was locked in chastity, and the key to my cage was on a thin chain that was right now twisted up in the sheets around her left breast. Her large full tits pressed into the mattress, and I felt just the tip of the key digging coldly just below my third rib.\n\nIt'd been almost a week since Sun Hee introduced me to the true nature of a ruined orgasm, and true to her prediction, my balls since burned with an urgency that remained unrelieved. The effect was unlike anything I could imagine.\n\nYet even as sex with this cute little Korean girl was out of the question, still I wanted to please her. My extended chastity only amplified this desire, a warm, overpowering urge to shower her with constant love and attention and devotion.\n\nThus, even as Sun Hee's eyes fluttered closed again and she seemed to drift back into a languid sleep, I was lowering down under the covers, seeking for that dark and warm treasure between her thighs.\n\nI don't even know whether this was what she had wanted, but she welcomed it readily enough, her legs parting naturally at the first touch of my wet tongue. Sun Hee let out a long contented sigh as she rolled onto her back and spread her legs wider, a trace of a smile widening on her sleepy face. Waking to such oral pleasure was, no doubt, something she enjoyed.\n\nMy body felt cramped and awkward as I tried to move down low enough. My spine and neck started to ache, and my legs ended up poking out from the bottom of the bed, flailing awkwardly from underneath the warmth of the covers. But her pussy tasted so sweet and tender.\n\nI nosed deeper, reaching my tongue along the wetness of her exposed labia, and then lightly nibbled on the hood of her clit. Sun Hee rewarded my efforts with a sleepy squeal.\n\nLicking harder now, I burrowed even farther down the bed until the bulk of my body hung off the end. I felt cold and exposed, yet it was so warm there between her legs. It never ceased to amaze me just how wet she became. So wet - and so open.\n\nAbove me, the sweet little mewling of my girl grew faster and more urgent. I could sense her breath rising and the tension in her body gathering. Yet in the darkness under the blankets I could see little more than the curve of her thighs and the tuft of black public hair high on her pubic bone. Her scent surrounded me in the wet darkness.\n\nEager to please her, I licked harder, urging her on. The sounds of her pleasure were music to my ears. Yet - the alarm on her phone chose this moment to start beeping.\n\n\"Baby,\" Sun Hee called to me. I licked harder now, desperate, but she called again. \"Baby... I have to go.\" Her hands reached down to my head under the covers and pulled me up.\n\nThe beeping alarm continued from where her phone lay on the floor across the room. \n\n\"Ugh, can you get that,\" she said. It was a statement, not a question. She had already nestled her head under the shade of her arm again, confident that I would take care of the alarm.\n\nJust a few short weeks ago, before this pesky cage had ended control over my own sex, I would have been annoyed at her behavior. But wearing her cage had worked a profound change in me, or maybe I was fooling myself. Maybe I was always this way. Instead of annoyance, my heart leaped to please her. She wasn't being selfish; rather, of course she should expect me to take care of her as my Princess.\n\nI crawled out of the bed into the biting cold air and stumbled over to turn off the alarm for her. I had wanted to make her cum but I think she felt good at least, and I knew there was no hope of convincing my Korean girl to stay in bed longer when she had to go to class. Few things, not even sex, got in the way of her drive to study hard.\n\nI shivered naked in the middle of the room. Feeling tenderly, I gathered up her clothes from the chair where I had folded them for her the night before, and brought them over to the bed where Sun Hee was still squirming her pleasure underneath the covers. \n\nIt was an automatic gesture. By now, it just felt natural to serve her.\n\nI was still naked as Sun Hee slipped back into her clothes, gathered up her things, and prepared to leave. She didn't thank me for helping her dress. She took it for granted.\n\n\"I'll see you tonight after my study session,\" she said.\n\nAs Sun Hee leaned up onto her toes to kiss me goodbye, I was self-consciously reminded of the smell of her sex on my breath. Another strange reversal. If we had been a normal couple, it might have been she whose breath was heavy with the smell of sex from having sucked me in the morning. But I had never had that pleasure. Never felt Sun Hee's soft lips wrap around my turgid cock. Though I knew other men had.\n\nI felt frustrated seeing her go. It wasn't the chastity cage locked onto my cock, it wasn't the oral sex that had been interrupted, it was simply that she had to leave. I missed her.\n\nFive or ten minutes after Sun Hee had slipped out the door and the last of her footsteps echoed down the hall, I was dressed myself and gathering my things when my roommate Blake poked his head into the room.\n\n\"Blue balled?\" he asked with a smirk.\n\nHis question caught me off guard, and I felt my face blush furiously. Did he know? He was my roommate and Sun Hee was around often enough; had he divined the nature of our relationship?\n\nI guess my face must have shown some of the horror I was feeling because Blake suddenly looked contrite.\n\n\"Sorry, man,\" he said. \"I didn't mean anything. Just that I heard you two fooling around a little.\" He knocked on the wall as a reminder of just how thin they were. \"Sounds like you two got interrupted.\"\n\n\"Oh... yeah,\" I offered lamely.\n\nI don't know what on earth possessed me to say what I did next. It wasn't cool to talk about Sun Hee this way even if she wasn't keeping me locked, and she would absolutely kill me if she ever found out. I guess I just badly wanted people to believe I was fucking this incredible girl, even if I wasn't.\n\nSo I lied.\n\n\"Actually, she... uh... \" My hand gesture signaled a blow job.\n\nBlake's eyebrows climbed up his forehead. \"Oh yeah?\" he asked sudden interest. \"Was it good?\"\n\n\"The best.\" I lied again, or rather, I said what I knew to be true though I had never experienced it. \"Swallowed.\"\n\nBlake whistled long and slow. It was wrong, but it strangely excited me to know what he was now imagining. Probably he would be jacking off to it after I left.\n\n\"No offense, man. But damn! I bet you're right. I bet that hot little Korean girl gives one hell of a blowjob.\" He cuffed me on the shoulder. \"You're one lucky dude.\"\n\n***\n\nFinals were coming up soon, and sadly that meant seeing Sun Hee far less than I would have liked. When she wasn't in class, she was in the library, and when she wasn't in the library, she was in her room. \n\nSadly, then, I wasn't too surprised when I didn't see Sun Hee later that night as she had promised. Her study group went past midnight, and after that all she had the energy for was to crawl back to her room to crash.\n\n\"Sorry, baby. Too tired,\" she texted. \"Miss you.\"\n\nI missed her, too.\n\nI didn't see her the next day either. She was out with her Korean friends for dinner and then after that, more studying. \"I need some girl time,\" she said. \"Need to de-stress, you know? I'm sorry.\"\n\nI understood. Of course I did. I even had some blow-off time of my own, hanging out with Blake and a couple other guys, but still I thought about Sun Hee constantly. And it wasn't just because of the cage. It was hard being away from her so much, and as hard as I tried, I couldn't help but nag and beg to see her more, even as I sensed that my constant texts were annoying her a little.\n\nBemused, I realized this was another reversal in our roles. I had become the \"woman\" in our relationship, always wanting to spend more time together, while Sun Hee was striking out for more independence and more alone time.\n\nThe next day I just couldn't help myself. Despite promises to let her study, I was scratching at her door like some poor, needy stray cat.\n\n\"Please, baby. I miss you!\" I wheedled, perfectly aware that my begging gave her all the power.\n\nBut the half-smile on Sun Hee's face showed me it was working. \"Ok, but the focus is on studying,\" she insisted sternly. Then Sun Hee moved aside and let me in through the door.\n\nImagine my surprise, then, when ten minutes later I found myself lying naked except for the chastity cage on Sun Hee's bed with all our textbooks and notes spread out around us. She was fully dressed of course, cute in a pair of yoga pants and a simple tank top, no makeup on her face and her hair pulled back in a lazy ponytail. \n\nSun Hee's large D-cup tits were perky enough not to require a bra, though as she laid propped up on her stomach they hung down pendulous and heavy. And between her big breasts, on a delicate gold chain, hung the tiny little key to my cage. Occasionally, she would slip the key between her lips and chew on it with her teeth. It was an absent gesture, a nervous habit.\n\nAs she glanced my way, the key dangling between her teeth, I don't think she even realized how she was teasing me.\n\nI could look into Sun Hee's large dark eyes forever, and I was. My calculus book was open in front of me, but my eyes were only on her. I hadn't actually glanced at my book once. Instead, I just watched her.\n\nSun Hee was studying intently, her book open and her notebook filled with the neat orderly rows of her notes. Around her were the many colored highlighters and pens I had come to associate with this smart little Korean girl. She had a system. Organized, neat, efficient. And a little stray wisp of black hair kept falling in front of her eyes.\n\nIt was intoxicating.\n\nAnd each time, her left hand darted up to slide it back into place behind her ear. The gesture was adorable, and made her seem somehow both innocent and sexual at the same time.\n\nThe curve of her ass in the tight fitting yoga pants didn't hurt either. Sun Hee's ass wasn't what many people would call \"thick,\" but it wasn't flat either. Lying on her belly, her butt curved upwards with a delicious fullness, and her yoga pants clung to every curve and angle.\n\nThe way Sun Hee laid on the bed propped up on her elbows made her lower back arch and her ass pushed upwards, almost as though she was asking to be mounted. Her thighs parted slightly, revealing the upturned opening of her sex, covered but not hidden by the sleek material of her pants, in a way that spoke of sex and availability.\n\nAnd frankly, of fertility.\n\nHer narrow waist and unusually large breasts had that effect. This was a young and desirable girl. Nubile. At the prime of her sexual power, and ready for a thick cock to press inside her and deposit its seed deep into her womb.\n\nMy thoughts were getting away from me. Way away from me. And I knew it. But I loved this girl. I wanted to marry this girl.\n\nIt was an understatement to say I was distracted.\n\nInstead of the curves and integrals of calculus I saw only the curves and angles of her body. The way she called out to be fucked. Longed for it. The shine of her long black hair reflecting in the sunlight through the window as her back would arch backwards, her body groaning into the deep thrust of my cock pushing between her legs.\n\nI saw it so clearly in my mind. Climbing on top of her. Pushing inside her. Sun Hee's squeal of delight at being penetrated.\n\nAnd I saw her need. Sun Hee's simple, desperate need to get fucked. It had been too long for her as well.\n\nBut alas, the rhythm of fucking her was never more than the rhythm of that infernal cage around my cock: stop, stop, stop. Each attempted surge of my frustrated dick blocked, as if by some invisible, insurmountable power.\n\nUtterly turned on, and yet utterly unable to get erect.\n\nOf course, the other thing that was distracting me was that while Sun Hee's left hand was studiously flipping through pages of her notes, her right hand kept drifting down to wrap around the plastic of my cage.\n\nHer touch wasn't sexual. It felt more like she was reaching out for a favorite stuffed animal. Her touch was idle, absent. As if she was seeking comfort.\n\n\"I miss having my little toy around,\" she murmured absently, before flipping the page of her textbook.\n\nThe way she patted my dick felt both possessive and affectionate. I liked it, but it also felt strangely unsettling. So did lying next to her naked on her bed while she was fully clothed and studying.\n\nI felt exposed. Like I was on display. And the air tickled on my bare ass.\n\nI felt like an object, like her object, which was just... not something I was used to feeling as a man.\n\nIt felt nice, but shit, it was so out of sync with the insistent need I felt in my balls. I wanted sex! I wanted to fuck her, I wanted to lick her, I wanted to hear the cries of her orgasm like music in my burning ears.\n\nAnd lying here like this next to Sun Hee but getting only about ten percent of her attention was driving me crazy.\n\nI nuzzled up against her, pressing my face up into her armpit as she jotted down notes, feeling like a lost puppy. My eyes looked up toward hers, begging for attention.\n\nSun Hee gently nudged me aside, barely noticing. And then she patted my cage again as if to say, \"There, there.\"\n\nI pressed in against her again, inhaling her scent deep into my nostrils. I couldn't help it, I needed to feel her.\n\nThis time she pushed me away gently. \"Baby, stop it,\" she complained.\n\nI knew full well her mood, sensed full well her growing frustration with me, but I couldn't help myself. Didn't want to help myself. I traced my lips down the length of her petite torso until my face came even with her tight little ass, and then I plunged in, burrowing between her legs, biting and nipping at the fabric against her sex.\n\nI wanted to lick her!\n\n\"Baby!\" Sun Hee squealed with a mix of delight and exasperation. Her body curled away, and she pushed at me, hard this time. Her stiff arm pressing my naked body back against the cold wall at the edge of the bed. Her braless breasts rocked back and forth underneath the thin fabric of her tank top.\n\n\"Stop it!\" she cried, throwing down her pen. \"Gosh, you're like a horny little puppy, I swear.\"\n\nHer neat little rows of highlighters and pens were a mess now, which gave me a petty sense of satisfaction, and our books were scattered everywhere. I had her attention at least.\n\nThis wasn't the first time I had tried to get between her legs and lick her today, and it wasn't the first time Sun Hee had pushed me aside either. I tried, I really tried, but I was just so horny I couldn't help myself. And I hated that she was able to focus so easily on her work with me naked beside her, when her mere presence made me crazy with a constant desire to touch her and caress her and please her. How could I please her if she didn't pay attention to me?\n\n\"You don't understand how hard it is to wear this stupid cage and not be constantly wanting to kiss you and touch you.\" I tried not to sound pathetic. I don't think I succeeded.\n\nSun Hee laughed in that high-pitched and girlish way of hers. \"I guess I don't, but I'm starting to.\"\n\nShe brushed the hair out of her eyes, and whether it was intentional or not, she treated me to a generous view of her cleavage, braless under her tank top. Her tiny little nipples stood out hard and erect.\n\nSun Hee was horny, too. She had to be. Sensing opportunity, I went in for the kill, pushing Sun Hee back against the bed and burying my face between her big tits and pushing open her legs.\n\nSun Hee giggled and screamed at first, letting me get one of her hyper sensitive nipples between my teeth, before pushing away again. This time using her arms and legs to kick and knock me off her.\n\n\"No!\" she said again. This time she pinned me down against the mattress and held me there, and her voice carried stern authority for such a tiny girl. Her breasts hung pendulously above me, and the little chain with the key had fallen out of her shirt and was dangling just out of reach, swinging back and forth and glinting in the sunlight from the window.\n\n\"No. This is a study session. No fooling around today. Not for you,\" Sun Hee insisted. \"I mean it.\" Sun Hee held me pinned with her arms locked on my shoulders, and she emphasized each word by pushing me down into the softness of her bed.\n\nFeeling helpless and already knowing I was defeated, I let out some kind of wordless groan and squeal, like a pathetic animal, and thrashed about underneath her, trying to break away, trying to... I don't know what.\n\nThere was a brief flurry of arms and limbs as I struggled against her, but Sun Hee held me pinned. Her breasts hanging above me made me ache with need, and I just needed... something. But Sun Hee was implacable. How could I lose to a girl?\n\nI ached for her.\n\nThe ache hurt still more when she let go and returned to her books like I was nothing. With neat, efficient movements that hinted at a barely hidden frustration, Sun Hee tidied up her notes again and pulled her book closer.\n\n\"How can you stay calm like that? How can you just push me away when I'm so horny?\" I sounded desperate even to myself.\n\n\"I guess for me it's easy,\" Sun Hee said, calmly opening her book again.\n\nI slumped against the mattress, feeling hurt and defeated. Unconcerned, Sun Hee turned the page in her book.\n\n\"Please, baby,\" I begged. \"I just want to please you. I just want to...\" I trailed off into a whine.\n\n\"You want to do something for me?\" Sun Hee looked back at me, her pen between her lips. Her tone had changed, and I wasn't sure what it meant.\n\n\"Yes, Princess. Anything.\"\n\nShe studied me with a hard, flat gaze and then seemed to come to a decision. \"Ok,\" Sun Hee said, moving off the bed and going over to the corner of the room. In her closet, she pulled out a little white basket and pushed it toward me.\n\n\"Go do my laundry for me.\"\n\nThe basket was full of whites and pinks and pastels, fluffy with her clothes and intimate things.\n\nMy heart fell a little. This wasn't what I had in mind, and I hated doing laundry, barely bothering to care for my own. But I did what to do something sweet for Sun Hee - didn't I?\n\n\"You're sending me away?\" I asked in a small voice. That's how it felt, and it hurt. I wanted to stay here with my girlfriend. I wanted to feel close to her.\n\nBut now Sun Hee was pissed. Her hands went to her hips, and she yelled at me from across the room, \"Look, you said you wanted to help out, and I'm tired of all your begging. I need to study.\" She glared at me from underneath her cute little bangs. \"Now, I asked you to go do my laundry.\"\n\n\"I...\" I broke off, embarrassed by my resistance but still feeling stubborn. \"I don't know how,\" I confessed, feeling foolish.",
        "Sun Hee rolled her eyes, and I could hear the words she muttered under her breath: \"Useless.\"\n\nBut she gave me a quick lecture on how to separate the whites from the colors, and how to tuck her bras in a little white zippered pouch so that the clasps didn't catch on her delicates and cause tears. I listened carefully to her every word; this I could focus on. This was my Princess, and I wanted to please my Princess.\n\nBut when Sun Hee nudged the laundry basket toward me, still I balked. I did like the idea of serving her, but being pushed out the door like this hurt me feelings. However much she might really want her laundry done, she was also sending me away because she wanted to be on her own. The thought made me crazy. I knew I was pestering her - I knew it - but with this cage around my dick I just needed to be around her constantly. I couldn't help it.\n\n\"Can't you come with me?\" I wheedled. And then, \"Can't I stay here with you?\"\n\nSomething seemed to snap in Sun Hee. \"You,\" she said, emphasizing the word. \"Need some serious discipline.\" The way she spoke was absolute.\n\nSun Hee pulled out a pair of her tiny panties and held them out. The panties hung delicately from her outstretched finger, pink and lacy with a border of white lace and a little satin bow at the front. \"Put these on,\" she ordered.\n\n\"W-what!?\"\n\n\"It's your punishment. You don't listen. You need to learn your place.\" Each word was spoken with emphasis.\n\nFor my part, what I felt was panic. Wear these? I didn't want this. I didn't want this. I felt secure in my masculinity, but the prospect of her panties on me was too much. And entirely too unexpected.\n\nI felt myself pull away onto the bed as I stammered, \"I don't... I don't want...\"\n\n\"It doesn't matter what you want,\" she interrupted. \"It's not about what you want. You need to understand that.\"\n\nSun Hee stepped toward me, tiny little Sun Hee, fully of authority and determination. Her pink panties loomed in front of me. \"Put these on,\" she demanded.\n\nWordless, I shook my head, even as I understood my own weakness.\n\nShe lunged toward me with surprising quickness and pushed me back down onto the bed. Working with quick, determined movements, Sun Hee turned me over onto my front and, reaching down, forced my feet through the openings of her pink panties.\n\nSomething surprising happened. I didn't want this; I felt horrified by what she was doing and what it might mean. But I felt this strange, submissive chill run throughout my body and sap the strength from my limbs. I struggled, but it was useless. Sun Hee's actions were swift, decisive. They seemed to carry a barely concealed frustration or anger.\n\nI was already defeated, or maybe, somehow I wanted what she was doing to me to happen.\n\nSun Hee's hands continued their deft work, tugging her panties up my legs and thighs, the pink lace both soft and scratchy against my hairy skin. I felt myself groaning, open-mouthed and wordless. Still stunned by what she was doing. What she was doing to me.\n\nI couldn't imagine they would fit, her tiny little lace panties stretched across my much wider frame, but they did. Two more more quick tugs and she had them up over my bare butt cheeks. Then, roughly, Sun Hee rolled me over so that my caged dick was dangling toward her.\n\nShe gazed down at me with a look of anger and contempt I couldn't bare to look at, causing me to look away and try to bury my face in the folds of her fluffy comforter. My hands still fought what was happened, but she knocked them away.\n\n\"Deal with it,\" Sun Hee growled as she twisted my hands to the side, and then she slipped the front of her panties upward, snapping the pink lace up around the tiny plastic cage around my cock.\n\n\"Wait! What are you doing? Stop,\" I mumbled.\n\nBut I was already pantied.\n\nMy hands reached down to try to pull them off. I felt ridiculous, I felt humiliated.\n\n\"No!\" Sun Hee ordered, knocking my hands aside. \"Stop it.\"\n\nShame burned through me, and my body writhed on her bed, naked but for her pink panties.\n\n\"Look at me.\" Her voice was firm, stern, implacable. I couldn't look. I buried my face deeper in the blankets. \n\n\"Look at me!\" she demanded.\n\nHer voice brooked no argument, and I obeyed. Shyly, my eyes met hers. I studied her, trying to discern what I saw in her large, dark eyes. The pink lace of her panties felt foreign on my body, tight around me. I wondered if this changed how she saw me.\n\n\"Listen,\" Sun Hee repeated, and when she saw that I was, she continued. \"These stay on.\" She knocked my hand away again and repeated it. \"These stay on. This is your punishment. I tried to be nice, but this is your punishment.\"\n\nHer long black hair spilled around her face as she looked down at me, and the chain around her neck had slipped out from underneath her shirt in the tussle so that her key to my cage dangled above my eyes. Her breasts hung down above me, too, and they were visibly fuller, firmer, with her nipples tiny little bullets poking through her top. She was aroused.\n\nPunishing me excited Sun Hee.\n\nIn my mind's eye I saw perfectly how I must look from Sun Hee's position: my pale, white body splayed out on her bed naked and vulnerable, now with this ridiculous pair of feminine pink lace panties stretched across my hips, stretched across the clear plastic of my chastity cage. I must look completely ridiculous to her. And leaning over me, knowing she had forced this one me, knowing she had taken away my manhood in yet another way - that must make her feel incredibly powerful.\n\nNo wonder this aroused her.\n\n\"Get up,\" Sun Hee ordered. Now that she had started dominating me, she wasn't going to stop. \"Up. Off the bed. On your knees.\"\n\nStill struggling with the sudden shame and confusing feelings about being forced into her panties, I rolled to the side on her bed, got up, tried to follow her directions, stumbled.\n\n\"Up, up. On your knees. On your knees.\" Sun Hee kept hectoring me.\n\nI wasn't fast enough for her, but I tried. It felt so strange wearing this lace underwear stretched tight around me. So pink and bright. I never wore bright things.\n\nAnd then I was down on my knees for her.\n\nSatisfied, Sun Hee stood up and walked around me, examining me. Feeling her examine me this way made me trembled a little, and I knew that goosebumps must be visible on my skin. The worst was when she stopped behind me, out of sight but examining my bare backside.\n\nWhat was she thinking back there?\n\nI was secure in my masculinity, but I felt ridiculous wearing a pair of women's panties. Was this changing the way she saw me?\n\nAs if to confirm my worst fear, Sun Hee started to giggle, her anger turning to amusement. Her giggles continued, high and girlish and delighted.\n\n\"My, now this I like,\" she chuckled. \"This I like. You look so cute!\"\n\nHer fingers trailed along the back of my shoulders, but when I turned to look at her, Sun Hee quickly directed my head forward again, her grip on the back of my head surprisingly firm. She made a tsking noise in the back of her throat.\n\nIt was surprisingly disconcerting not being able to see her while at the same time feeling myself underneath her intense inspection. I felt exquisitely aware of my own nakedness. Somehow, wearing just her pink panties heightened the sensation, making me feel even more naked than if I had been wearing nothing at all. The lace barely covered me, and the cold air felt somehow even cooler against my private parts.\n\nThe whole experience caused gooseflesh up and down my legs, and the lace plucked uncomfortably at my thigh hair. The way it tugged across my hips made the lace cup snugly against my swollen balls, just where, as I was excruciatingly aware, Sun Hee's pussy had been. And, glancing down at myself, I saw that my locked cage poked up right against the cute little satin bow on the hem of her underwear.\n\nWhen Sun Hee finally spoke again it was with a tone of demand that made my spine shiver.\n\n\"Now, you're going to go and do my laundry for me. You're going to follow the instructions I gave you and take good care of all my bras and panties. And you're going to fold up everything neat and tidy,\" Sun Hee instructed.\n\n\"Yes, Princess,\" I assured her.\n\n\"And when you're done, you're going to bring my laundry back. And you're going to Let. Me Study.\" She punctuated the last words, a hint of the old anger returning.\n\n\"Yes, Princess,\" I promised.\n\n\"Go on then,\" Sun Hee said, and sent me out the door with a sharp smack on my butt.\"\n\nI felt a little lost right then, pushed out into the hallway holding a white basket full of girl's clothes alone in a girls' dorm. My jeans hid the panties I was wearing, at least I hoped, but still the strange new sensation of the lace around me made me feel strangely naked and vulnerable.\n\nThe door clicked closed behind me, so I had little choice.\n\nIt took a few minutes wandering the halls, but I finally found the laundry room. A girl was already in there using the machines, but I told myself it wasn't that crazy for another guy to be using them. Surely I wasn't the only guy nice enough to help out his girlfriend, and while this was a girls' dorm, it wasn't unusual to see other men about.\n\nSo I bustled in, acting as best I could like I belonged. The lid to the washer banged open, and following Sun Hee's instructions I carefully separated and arranged her clothes.\n\nThe whole thing went smoothly enough, if it meant long waits for each cycle to complete, and there was a certain satisfaction from absorbing myself in the details of taking care of Sun Hee's things. Her shirts and pants, her short skirts and feminine dresses. Her tiny little panties, like the pair she had forced onto me. And her bras, the huge D-cups gaping open and impossibly large.\n\nSeveral girls came in and out doing their own laundry, the usual sorority girl types with dyed blond hair and sweatpants, including the first girl who I recognized vaguely from class. Stacey, I think.\n\nIt was fun, surprisingly, to carefully fold all of Sun Hee's fluffy and newly cleaned things, and as I leaned over the folding table I thought the whole experience had just about gone off without any undue embarrassment. Then I heard someone giggle behind me.\n\nI'm not sure why it took so long to realize the giggling was directed at me. I was in the zone, I guess, and it wasn't until I bent over again to neatly fold up another of her bras that I realized the truth. The hem of Sun Hee's panties, designed for the wider hips of a girl, had ridden up and must be poking out above the top of my jeans as I bent over.\n\nHer pink panties, visible against my pale skin.\n\nThe giggles started again. It was Stacey, and another girl.\n\nMy face and ears flushed a deep red. But what could I do? I ducked my head, hurriedly finished the last of the folding, and scurried out into the hall, hoping they would not recognize me. Maybe I was even wrong - maybe it wasn't me they were laughing at? \n\nWhen I got back, Sun Hee had left for class, which crushed my spirit more than I liked to admit, but Jin Sook answered the door. She gave me a skeptical look as she saw me holding the basket of laundry, full of fluffy pinks and whites and yellows all folded neatly into little stacks, but she stepped aside and let me carefully drop off Sun Hee's things.\n\n***\n\n\"Why do you let her push you around like that?\" Jin Sook asked me, sounding genuinely curious.\n\nWe were in the library together, a group of us, for a marathon study session. One of those big ugly wooden tables on the third floor in the back. Sun Hee had ducked out to the restroom, and Min Ha and another Korean guy I didn't really know where talking quietly at the other end of the table. Books and notebooks were scattered here and there around the table as the composition of our group grew and shrank over the course of the evening. At this point, I was feeling a little panicked, cornered by the gorgeous Jin Sook alone, the alpha girl of the group.\n\n\"Why do you let her push you around like that?\" she asked again. Jin Sook seemed amused, but her tone suggested contempt.\n\nI shifted uncomfortably in my chair. Jin Sook and I were almost never alone together and had rarely really even talked, and this subject was hardly the most comfortable. The question came out of nowhere, which made me intensely anxious. I supposed it must be obvious enough to her or anyone else who knew us that Sun Hee was the one who wore the pants in our relationship. After all, I followed her around and hung out with her friends and did little things to take care of her needs. That must have been obvious to Jin Sook. But did she mean something more? Did she notice the cage in my pants? Did Sun Hee tell her about making me wear her panties?\n\nAnd why did this excite me? My cock throbbed in its tiny prison at the thought of Jin Sook watching me and evaluating me while standing naked in front of her. Knowing how poorly I would fair in her eyes only made the prospect strangely more exciting.\n\n\"I dunno,\" I supplied lamely.\n\nEven I knew I sounded lame, but the way she narrowed her eyes made me feel like a little boy.\n\nJin Sook snorted in amusement and rustled through her Gucci bag for her emery board to fix her nails. She wore a sleeveless black tunic that covered up to her neck, but the silky fabric draped around her small breasts in a way that was quite inviting. Frankly, though, after this long without cumming just about everything was distracting and inviting. Her white leather pants were expertly tailored to show off her incredibly long and slender legs, and the black platform heels added at least another 4 inches to her already intimidating height.\n\nStill, I didn't know how to explain myself to this model-like woman, and I hoped Sun Hee would come back soon to protect me. Could Jin Sook notice the way my eyes lingered on her breasts?\n\n\"She's not even letting you have sex. I mean, either that or you're... Well, forgive me, but it sounds like you're not very good.\"\n\nMy jaw literally dropped. Did Jin Sook just say what I thought she said? Her words hit me like a slap across the face. I wasn't sure which was more shocking: the casual insult, or the fact she was talking about my sex life at all. How would she know I wasn't good in bed?\n\nBut Jin Sook acted like it wasn't much out of the ordinary. She was still casually buffing her nails and looked off to the side at the clock against the library wall.\n\n\"W-what?\" I stammered. A million things were racing through my head, but I couldn't make sense of any of them.\n\nJin Sook turned to me briefly and smirked, then looked back at her nails. \"You think a roommate can't hear the difference?\"\n\nIt was like she had paralyzed me, rendering me nailed to this chair. I wanted to run and hide, I wanted to bury my face under my books. A part of me that I wasn't proud of wanted to shout obscenities at her. This humiliation suddenly was too much.\n\nBut most of all I needed to hear what Jin Sook was talking about. Had Sun Hee told her something?\n\n\"W-what?\" I repeated. It was like I was on a loop.\n\n\"The sex noises, dummy. I'm her roommate. I hear things. Dummy.\" Jin Sook poked her emery board at me. Her tone was still one of boredom, but her eyes watched me closely. \"And she sounds different with her other boyfriends.\"\n\nI squirmed in my seat.\n\n\"You know she's been with other guys, yes?\" It was more a statement than a question, yet her eyes demanded an answer. \n\nI nodded.\n\n\"Does this make you uncomfortable?\" Jin Sook challenged.\n\nI knew I needed to say something in response, some answer to her challenge. Jin Sook had never liked me, and she seemed to take obvious pleasure in making me squirm. She was saying... something about me here, and it wasn't good. This wasn't the first time she sought to embarrass me, and if I caved here, it wouldn't be the last. I needed to push back. I needed to speak up for myself.\n\nMy mouth opened... no words came out.\n\n\"It should,\" she smirked and continued to buff her nails. They were long and red. Sharp.\n\n\"What were you two talking about?\" Sun Hee had suddenly appeared beside me again, back from her break. Her chair scrapped as she rejoined us at the table. She looked so cute, if a little tired, in her dark blue cardigan and yellow skirt. The gold chain she used to hold the key to my chastity cage was just visible around her neck.\n\nJin Sook stopped buffing her nails for a moment and lifted the emery board. She looked at me very directly. \"I don't know. What were we talking about?\"\n\n\"N-nothing,\" I started to lie, but then the sudden memory of that night in the club blazed in my mind. That night I had failed to speak up to Jin Sook, and I had promised never to do that again. I knew I couldn't lie to Sun Hee, even if it cost me dearly. The way she absently fingered the chain around her neck only reinforced the point. \"We were talking about sex,\" I admitted while looking down at my hands. \n\nSun Hee's eyebrows raised. \"Oh?\" She crossed her legs and leaned closer.\n\n\"Jin Sook was asking whether I was... any good.\" I trailed off into a mumble, painfully aware that I was saying more than just the words. I was also telling Jin Sook something about my submissiveness. Assuming she didn't already know.\n\nJin Sook clucked her tongue and looked openly amused now, her emery board forgotten beside her. Sun Hee's eyebrows climbed still higher. Clearly she was surprised. The two girls traded a look that I couldn't read. Was that jealousy in Sun Hee's face? Possessiveness? Annoyance? There was a rivalry between them.\n\nHow much had she told her roommate?\n\nWhen Sun Hee turned back toward me there was color in her face. She looked at me sideways, and for a moment I thought the topic would be dropped. But then Sun Hee cut - hard and deep. \"Well... you are not very big,\" she said. Sun Hee spoke lightly yet deliberately, giving each word a clear enunciation that carried across the table. \n\nMin Ha and the other guy looked up in surprise. It took them a moment to process what had been said, and then the guy laughed openly. Min Ha, flat-chested and shy with somewhat limp straight hair, looked at me with sympathy in her eyes, but she too glanced downward to my crotch as if to see if it was true. Jin Sook covered her laughter with her hand, hiding her white teeth behind her freshly painted nails.\n\n\"In fact,\" Sun Hee said, deliberately twisting the knife and speaking to her friends now. \"He's pretty small.\"\n\nIn the moment, what I mostly felt was shock. I couldn't believe Sun Hee said this, and feeling all these eyes on me made my skin burn in humiliation. My cock seemed to shrivel and throb all at the same time.\n\nForcing myself to meet Jin Sook's eyes, I saw the truth: she knew. She knew I was beneath her. I loved Sun Hee and wanted only her, and yet where she was cute, Jin Sook was gorgeous. Tall, slender, sophisticated, worldly, Jin Sook could have any man she wanted, and she clearly expected a man with a large cock. It wasn't hard to imagine Jin Sook was a size queen. Knowing any chance I might ever have had with this woman was now ended somehow aroused me. It excited me that Jin Sook saw me as a tiny dicked loser, wholly inadequate for her. I was cut off. Emasculated.\n\nAnd it aroused me more that my own girlfriend had made the cut.\n\nJin Sook said something in Korean and made the universal gesture with her fingers: small dick. The table erupted again in giggles. The guy pointed at me as the girls tittered. He practically beamed, no doubt pleased he wasn't the smallest at the table, triumphant that his Asian cock was bigger than mine, and I found myself intensely resentful of him. Even Sun Hee laughed and traded Korean with them.\n\nI'm not sure if it was better or worse, not being able to understand what they were saying.\n\nThe expression on Min Ha's face might actually have been the painful, though. Pity.",
        "\"Aw, don't be sad, baby,\" Sun Hee leaned over and murmured into my ear. \"You may have a small dick, but you're my small dick, and I love you.\" Her hand found its way into my lap as she said it, and she squeezed my cage. I knew I should protest that I wasn't small, I was average, but the pressure on my trapped cock felt good, really good, confusing me with pleasure that merged into my humiliation.\n\nThe others went back to their studying, though I found it difficult to focus. Strangely, once the moment passed, I missed it. I missed the intensity of the humiliation and the attention from all these cute Korean girls.\n\nBut we all returned to the exhausted, anxious energy of finals, and as I said, our study session changed faces several times over the course of the long evening. Several of Sun Hee's Korean friends came and went. Some of my own friends stopped by briefly to chat and say hi. They had grown accustomed to the way I was practically leashed to Sun Hee, so no one was surprised when I stayed with her. In all, the night was almost fun despite the looming stress of final exams and papers.\n\nOf course, things got tense in a different when when Sebastian stopped by and joined the table. Sun Hee had invited him, explaining that we all had Sociology together, and I was determined to be cool about it. Still, when he sat down on the other side of her, and Sun Hee turned toward him to talk and share notes, I really struggled with the way her back was to me as she talked and flirted with him.\n\nAnd she was flirting. It wasn't too obvious or over the top, but it wasn't subtle either. Sun Hee was wearing a plain dark blue cardigan sweater, which made sense given the way libraries are always too cold, but I noticed that when Sebastian showed up, the first two buttons of her cardigan had magically become undone, flashing a generous portion of the tight white tank top she wore underneath. It also revealed the full length of the gold chain around her neck, the key to my cage nestled just out of sight between her big tits.\n\nWorse, as time went by, more buttons came undone until the cardigan hung open, revealing the simple white spaghetti-strap tank top she wore underneath. While considered perfectly modest in America, such a top was positively scandalous by Korean standards for the way it left her shoulders and entire upper torso bare, and the tight fabric clung to her large, perky breasts in a way that revealed every curve.\n\nI very much doubt I was the only one turned on by her outfit. Sebastian surely was as well.\n\nAnd I have to think Jin Sook and Min Ha noticed, too. Her wanton outfit would take on new meaning in their eyes after the jokes they shared about my small penis. Indeed, Jin Sook snorted and gave me a significant look out of the corner of her dark eyes.\n\nThe whole thing was surreal, sitting near him, knowing that Sebastian's cock was hard and erect inside his pants while my penis was locked tight in its tiny cage - all while pretending nothing was happening beyond innocent studying.\n\nSun Hee kept touching her hair as they talked, and she crossed and recrossed her legs. Her left hand occasionally brushed against Sebastian's shoulder, while her other hand seemed to press between her legs, causing her loose yellow skirt to bunch up around her thighs.\n\nFor his part, Sebastian held himself as though he was unaware of my girlfriend's attentions. While he was clearly hot for Sun Hee - why else was he always coming around as a senior to hang out with a bunch of sophomores? - he always acted like a perfect gentleman. He even included me in their conversation, turning sideways in his chair to better face Sun Hee and me, casually draping his arm on the back of her chair while asking me how my paper was going. Sun Hee almost seemed to lean back into his arm as the three of us chatted.\n\nThere was a genuine friendliness to Sebastian that made him hard not to like, and part of me wanted to punch him in the face. But when he looked at you, it felt like you were the only person in the room.\n\nThe worst part was that Sebastian genuinely was smart. Sun Hee was right to invite him to join our study session. As he talked through the material of the class we all understood it better, and strangely, that made me most anxious of all.\n\nI did well in school, usually As and A-s, but over the past semester I had to come to the somewhat humbling conclusion that Sun Hee was in fact smarter than me. She worked hard for it, too. I had always heard before that many guys found it threatening when their wife or girlfriend was smarter than them, or made more money. The male ego was surprisingly fragile. I hadn't really had to confront that before, but I did now. And I didn't totally like how it felt.\n\nHonestly, it was something of a bruise to my ego, though I was embarrassed to admit it bothered me. Ok, yes, she was smarter. And she was incredibly cute and sexy - out of my league, really. I was lucky to be with her, and while I didn't feel anxious exactly that she would leave me, all this deepened my sense of submission to her.\n\nAn unexpectedly low score on my last exam, a B, only heightened that feeling. Especially when Sun Hee had looked over at my test score and said I needed to \"try harder.\" No question I should have scored higher, and no question my poor showing had something to do with the time I had spent naked at Sun Hee's feet worshiping her.\n\nSo yes, it made me a anxious seeing the way Sun Hee listened so raptly as Sebastian talked through some of the more complex ideas of the class. That used to be me.\n\nWatching her flirt was an agony of strange arousal.\n\nSun Hee touched her hair again, flipping it back over her shoulders as she smiled at one of his comments. Her cardigan slipped off her left shoulder leaving it bare, and my cock trembled as she left it that way.\n\nWhen his own hand briefly touched her shoulder, Sun Hee bit her lip, and I swear her breath started to get more shallow, causing her tits, tight in her white tank top, to rise and fall visibly.\n\nA sharp scrape of wood against tile echoed through the library causing heads around the table to jerk up, and Sun Hee's chair was several inches closer to his now than to mind. Then, as Sun Hee leaned toward him to read something he was pointing to in his textbook, her left breast pressed into his bicep. And lingered.\n\nMy spine tingled and the back of my throat turned dry as I imagined how the warmth of her breast must feel pressing against him that way. Again I thought about how Sun Hee's touch must be making Sebastian hard, his cock big and erect inside his jeans, while I stood by locked and helpless in this tiny cage. \n\nI didn't mean to, but I couldn't shake the image - his cock thick and potent, and Sun Hee's little pussy so wet and bare and needy.\n\nShe shifted again, recrossing her legs and pressing her hand again against herself. She parted her lips and wetted them in unconscious echo of him as he murmured something in her ear. Her sexual need was palpable, and given her choices it was only natural she would be drawn to him. Her pussy was untouched, unclaimed, and given the way she had sidelined me, it was natural she would be drawn to another.\n\nA pen clattered to the floor. Impulsively I darted to pick it up. \"Baby, you dropped something,\" I said while offering Sun Hee the pen, eager for the chance to interrupt them.\n\nSun Hee turned back around and looked at me blankly.\n\n\"Actually, that's mine,\" Sebastian said. \"Thanks, man. Good catch.\" He traded the pen for a broad, easy smile.\n\nThough I had to wonder, was there a smirk there, too?\n\nMaybe 15 minutes later the same pen was now in Sun Hee's fingers, and the way she held it against her lips tapping it against the side of her mouth was profoundly distracting. Especially as it was Sebastian's pen.\n\nSun Hee caught me staring, which brought a mischievous smile to her face. Holding my eye, she parted her lips and let the pen tap against her teeth. Then her lips closed around the pen, miming something obscene. The sparkle in Sun Hee's eyes made it clear that she knew exactly what she was doing to me and that we were both imagining the same thing: her lips around Sebastian's thick cock.\n\nThe long, hoarse groan that shuddered from my throat seemed to come from someone else entirely. Like I was wilting inside myself.\n\nSun Hee blew me a kiss and her attention returned to the man beside her.\n\n\"You accept it?\" The voice beside me started me from my reverie. It was Min Ha, leaning toward me. We hadn't ever actually talked before, but she seemed sweet, with heavily accented English. Flat as a board, with limp hair and a plain face, she seemed always to fade into the background.\n\nMin Ha didn't indicate what she meant at all, and neither of us looked their way, but it was obvious what she was talking about. I was especially caught off guard as she seemed so shy and submissive, almost something of a wallflower compared to Sun Hee and Jin Sook.\n\nI shrugged, utterly unsure how to respond to this sudden moment of intimacy between us. Strangely, I felt I could trust her. \"I kind of like it,\" I confessed, and shrugged again.\n\nOur eyes met and some kind of recognition passed between us as though we were the same.\n\nMin Ha smiled in a way that suggested sympathy and commiseration, almost a melancholic smile. \"I understand,\" she whispered.\n\nA period of silence fell about the group of us at the table. One of her friends at the far end appeared to be napping. The Korean guy who had been laughing at me before had left. Min Ha and SooYoung were both immersed in their books, and even Sun Hee withdrew into her own world as she reviewed her notes and flashcards. For myself, I tried to focus too, but with mixed success. That feeling of electric heat you feel next to someone you are sexually attracted to - I felt it constantly, except the heat I felt was the heat that radiated between Sun Hee and Sebastian.\n\nAnd it was humiliating.\n\nA chair shifted back, and Jin Sook got up from the table. As she stalked across the tile floor, her tight white weather pants accentuated her impossibly long legs and high waist, her legs slicing open and closed with the precision of scissors and her heels clicked across the floor.\n\nHow had I gotten myself in this place, stuck between the sultry sweetness of Sun Hee with her hidden and unexpected cruelty, and the open threat of Jin Sook's cold femininity. Scylla and Charybdis.\n\n***\n\nLater, after Jin Sook returned to the table, two of Sebastian's upper class friends stopped by to chat with him. One was tall and lean, with a dusky complexion and a vaguely off-putting expression. The other, Reggie, was black. He was more muscular, with an athlete's body and a friendly, outgoing demeanor and an infectious energy.\n\nThe two guys slapped Sebastian on the shoulder and tussled in that way guys do, and both Sebastian and Sun Hee turned to look up at the new visitors. Reggie complained he hadn't seen him for a while, and the other guy broke in asking \"why he was hanging out here with all the Asian chicks,\" a comment that struck me as a little offensive and rude.\n\nBut I was being ignored.\n\nSun Hee, somewhat awkwardly, had turned to face them, too. She seemed happy for the interruption and new energy after so many hours studying.\n\nSebastian joked back about how it was \"pretty obvious\" what he was doing here, and Reggie agreed. \"The view is awful nice,\" he said while winking in a friendly way.\n\nBoth Reggie and the other guy were standing right above her looking down, and with her cardigan unbuttoned and her white top tight around her D-cup breasts, they must have had a nearly unobstructed view down my girlfriend's shirt. Sun Hee held herself erect, back straight and chin up, as she gazed up at these two new guys.\n\nReggie's smile flashed a row a big white teeth, and he did nothing to hide the fact that he was staring at my girlfriend's tits, nor, for that matter, did the other guy.\n\nIn fact, Reggie's leer was open, honest, and instead of covering up with her cardigan Sun Hee seemed proud of the attention. She touched her hair and wet her lips.\n\n\"Hey, I'm Reggie,\" the black guy said introducing himself, and extended his hand.\n\nSun Hee smiled shyly, suddenly coy. \"I'm Sun Hee.\" She giggled a little, and let his hand engulf her own, his skin dark against the pale honey of her flesh.\n\n\"Say it again?\" He leaned down while simultaneously pulling her hand closer. \n\nSuddenly his face and muscled chest was only inches away from her, and Sun Hee acted flustered. \"Sun Hee.\"\n\n\"Sun Hee,\" he repeated. \"Pretty name.\" Then, finally releasing her hand, he added, \"Pretty girl.\"\n\nSun Hee blushed, and there was a very distinct moment when she stared downward, not at his face but at his crotch. When she turned back toward us, I saw that her nipples were visibly hard through her shirt. We all saw it, I think. The way her nipples stood out against the thin white fabric was unmistakable.\n\nMy teeth ground in a complex mixture of despair and arousal. Sebastian I understood, but why this guy? How could he just walk up to my girlfriend, probably the first black guy Sun Hee had ever really talked to, and turn her on so visibly just like that?\n\nStill, if it was magic, it didn't last. He tried the same magic touch on Jin Sook next to me, shuffling up to her with his easy smile and masculine confidence, and repeated, \"Hey, I'm Reggie.\"\n\n\"I'm sure you are,\" Jin Sook replied, giving him a cold, hard look, and returned to her book.\n\nReggie looked stunned at her flat rejection. The other guy, the rude one, laughed, and even Sebastian seemed amused. For my part, my head was down but a smile cracked my lips at the way he got shut down, though I was acutely aware I was in no real position to feel superior given the open reception he won from my own girlfriend.\n\nIt couldn't have been more obvious that Sun Hee enjoyed the attention she was getting, first from Sebastian and now, from Reggie - it was obvious to everyone.\n\nI worried, actually, that when Reggie and the other guy coaxed Sebastian into ditching the library and heading off together, they might lure Sun Hee away with them. I knew her well enough to read the uncertainty in her eyes. She was hurt Sebastian was leaving and felt torn between a need to study and a desire for adventure.\n\nIn the end, it was a glance back at the judging eyes of Jin Sook and the others that pulled Sun Hee back into her chair. The guys said their goodbyes, and Sun Hee's shoulders slumped a little.\n\n\"I love you, baby,\" I whispered in her ear.\n\nSun Hee smiled back weakly and patted my hand. \"I love you, too.\"\n\nBut she felt distant and distracted. Soon, she excused herself to go to the bathroom, and Min Ha flashed a look of commiseration.\n\nSometime later, longer than it should have been, Sun Hee returned from the bathroom, slid into the chair next to me, and pressed something small and damp into my hands. At first I didn't know what it was. A tissue maybe, or a bit of cloth. No, I realized with mounting arousal that it was her panties. They felt so delicate and light in my hands, the panties that up until a few moments ago Sun Hee had been wearing.\n\nThey felt unbelievably warm and damp.\n\nHolding her panties in my hand conjured a visceral memory of the day before when Sun Hee had forced me to wear her underwear as punishment. Equally humiliating, perhaps, but in a different way. That time had been about treating me as her toy. Now, it was the humiliation of presenting me with the evidence of her arousal for another man. Or men. Was it Reggie who had made her this wet?\n\nI sneaked a peek into my lap, carefully shielding my hands from anyone else's view. There they were, all red lace and bows, all wadded up into my trembling hands. Then I couldn't help myself, leaning down to sniff them, suddenly awash in the musky scent of Sun Hee's arousal.\n\nIt excited me, too, to know that Sun Hee was now bare and naked beneath her yellow skirt.\n\nSun Hee's grin was wide and welcoming. She knew what effect this had on me, and she liked it. She wore the smile that I knew meant trouble, and she leaned forward and kissed my ear wetly. Her tongue darted inside, making me weak.\n\n\"Let's go take a break,\" she whispered huskily.\n\nSun Hee took my hand and led me away. I was perfectly happy to follow, my eyes mesmerized by her narrow waist and the movement of her hips, visualizing her nubile pussy beneath her skirt as I trailed obediently behind her.\n\nBut we didn't go down to the lobby where I expected. Instead, Sun Hee led us around until she found a mostly empty corner of the library. At this late hour, it was largely quiet, though students still passed by occasionally and a nerdy white girl was studying by herself maybe twenty feet away.\n\nWithout a word of explanation, Sun Hee choose one of the study carrels facing the window, sat up onto the desk facing me, and began to lift her loose yellow skirt up over her hips.\n\nI was shocked at Sun Hee's brazen behavior. It was late at night and few people were around, but the library was hardly empty and far from private. Yet I was also completely mesmerized. The tantalizing nakedness of her thighs appeared inch by inch before me. Then her bare hips. Then her pussy. Completely bare and on display in the middle of the library.\n\nHer pale honeyed skin shone in the dim fluorescent light, and her naked pussy reflected in the wall of windows behind us. Pink and perfect, her pussy was already wet. In fact her juices had trailed down the insides of both her thighs, and the lips of her labia stretched open, inviting.\n\nI swallowed a knot in my throat, feeling myself start to drool. My cock tingled and ached inside its cage, throbbing all the more with the certainty there would be no escape or relief for me tonight. Not with the mood Sun Hee was in.\n\n\"You know what to do.\" Her voice was both seductive and commanding, thick with a sultry pride in just how scandalously she had behaved tonight. And I don't think I was wrong to see a certain smugness in her eyes. She knew she had acted terribly to me and knew simultaneously that I had accepted it. Loved it, even.\n\n\"Go on,\" she said again. \"You know you want it. Show me your place.\"\n\nGod help me I did want it.\n\nWordlessly I sunk to my knees on the hard and dirty tiles of the library floor, and slowly, nervously I lowered my head between her legs. Sun Hee clearly felt plenty daring to do this in the middle of the library, but for me it was nerve-racking and scary.\n\nBut I wanted to taste her, and her heavy scent pulled me in.\n\nSun Hee hissed in pleasure as my tongue touched her cunt. The extent of her wetness made clear, as if there was any doubt, just how revved up she was, more so even than I was, which was saying a lot giving the way I had been locked up and frustrated for so long.\n\nSun Hee was seriously aroused.\n\nHer moans of pleasure came out as strained little squeals, as much as she tried to hold back and keep quiet. Sharp little intakes of breath that echoed eerily through the open space of the library. And while I couldn't see them, I felt sure her nipples were hard and erect.\n\nNervous and humiliated, I felt acutely aware of the girl we saw studying nearby. Surely she must hear us. And we both knew how this must look to anyone who might walk by. Unmistakable. They would see me kneeling between the legs of this sexy woman as she - powerful and alive - queened me publicly.\n\nSun Hee lost in pleasure with her black hair spilled across the study carrel as I kneeled between her open legs.\n\nDespite all of this, or maybe because of it, my tongue dug hungrily between the folds of her pussy, and as Sun Hee's pussy juices slide down into my throat, I thought about how obvious she was about wanting a cock inside her."
    ],
    "authorname": "metalimbic",
    "tags": [
        "femdom",
        "tease and denial",
        "keyholder",
        "cfnm",
        "pantyboy",
        "korean",
        "chastity",
        "college",
        "asian",
        "female dominant"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/sun-hee-ch-06"
}