{
    "title": "I Kissed a Girl Ch. 11",
    "pages": [
        "\"Thank you\" doesn't seem enough to express my gratitude to InPennyInPound for all of her help with writing Meredith and Joanie's story, the next chapter in the saga that has made so many people giddy over girls kissing. I hope everyone else enjoys the journey as much as we have.\n\nSSW\n\n***\n\nEveryone has an idea of their perfect partner.\n\nGeneralities in some cases, specifics in others. Male or female. Older or younger...and within an age range. Preferably taller, shorter, skinnier, heavier, etcetera. They must have this. They can't like that. It's okay to compromise on X but not Y.\n\nSometimes, one's expectations aren't realistic. \"Perfect\" for them may not exist. Over time, one starts to whittle that list of requirements down. In some cases, to the point that they will settle with any partner just so that they're no longer alone.\n\nI had pretty much solidified my mental checklist when I was junior-high age. I say it that way because I didn't actually go to junior high. Or elementary school. Not like most kids. I was homeschooled with my older sister and brother\u2014Jenna and Nathan, respectively\u2014until each of us reached what would be our senior year of high school. My mother had this idea that public school was less about teaching life skills and more about convoluting the social aspect between peers. Teachers using the classroom to push their own opinions. Yet, she wanted each of us to experience that one year of milestones. Homecoming, prom, graduation. She has always liked celebrations.\n\nMy dad is a colonel in the U.S. Army. Friends and family call him \"The Colonel,\" out of respect. I call him \"Dad,\" because I'm a rebel. Always have been, always will be. I'm also more like my brother than my sister...more outgoing. Unashamed to voice my opinion or get in someone's face when I feel I have been wronged. That kind of thing.\n\nJenna...she's an introvert. Is it wrong to say your sister is beautiful? If so, I don't care. She's beautiful, inside and out. That long blonde hair and almost violet eyes? All the boys on base have drooled after her since as long as I can remember. But she has never batted an eye at them.\n\nWe shared everything. Or so I thought. We talk all the time. Which is how I knew that year she went off to public school that she was definitely a lesbian. Late nights after comparing real-world homework with Mom's homeschooled version and your older sis doesn't mention guys at all? It was easy to figure out it hadn't just been a disinterest in military brats growing up.\n\nBut she'd not let on that she had accepted the truth herself. It would be several years before she told me. Ironically, because her coworker had called me to come cheer up my sister...in a lesbian bar. And I'd revealed my own sexuality that same night. Jenna said she was so relieved to be able to talk to me about it now. We'd laughed. We'd cried. We'd gotten so drunk.\n\nNow, me? If someone had asked me straight to my face, I would have told them outright that I liked women. But I didn't go around announcing that my flag flew for the home team. Not after I'd hinted at my best female friend about leaning that way.\n\nWe'd celebrated her eighteenth birthday by leaving base to go dancing. Her cousin snuck us into the bar he worked at and paid for our drinks all night. During a break, one of her other friends who'd met up with us started a conversation about which guys holding up the bar opposite us looked the hottest. I'd mumbled, \"The one on the end in the red leather jacket and tight jeans.\" Only my best friend appeared to have heard me. She laughed and said maybe I'd had too many shots of tequila because that was not a guy. I'd shrugged it off...though I'd kept my eyes on the mystery woman for the rest of the night, wishing I had the nerve to get up and go talk to her.\n\nMilitary bases have been all we've known as \"home.\" In fact, Nathan was born in a barracks during a tornado. The fierceness of the storm seemed to be ingrained in his blood, but we hadn't experienced the full force of it until many years later. As a result, my estranged brother was serving life in a military prison for letting his opinions against gays control his anger and his fists. Bigotry had cost another man his life and our family the only son and brother.\n\nMy parents had met at an army canteen. My mother had been tagging along with a friend who was dating a fellow soldier. My father was hanging out with his buddies with no interest in meeting a girl. He was in a long-term relationship with the United States of America. She'd bumped into him by accident when she went to get a drink.\n\nThey claim it had been love at first sight, but I doubted that the concept actually existed. One had to get to know another person first. Spend time with them, as in, weeks not days. Eventually you realized you could spend the rest of your life with that person...after you'd convinced yourself you could live with them doing this or that. After a few years, you tied the knot and moved in together until you were old and couldn't take care of yourself anymore. Wedded bliss.\n\nI turned 18 the week before my senior year at the public school. When the first boy asked me out, I told him my parents wouldn't let me date until I graduated. It wasn't exactly a lie...I'd never asked them if I could date.\n\nAs a result of my excuse, I was able to relax around my classmates when it came to romance. Not that there was anyone I had an interest in like that. But I had plenty of opportunities to share my opinion on the subject when it came up with my old and new friends...both the boys and the girls.\n\nI also brought with me my habit of snapping back when I was barked at, which gave me a tough-girl reputation despite my looks. Not the bullying kind of attitude but the don't-piss-her-off kind. I'd had a feeling Jenna had been bullied by some of the hoighty-toighty girls despite looking just as posh as them. Typical for the new girl on the block. She'd not admitted it to me in any of our talks, but I'd seen it in her eyes. She'd struggled. Maybe with more than just the bitches and jocks.\n\nThe first time one of the cliquey girls made a joke about my last name behind my back\u2014literally, in the cafeteria\u2014and a redhead asked if Meredith Swallow lived up to her name, I put that rumor to bed. Seriously? They couldn't have even let the first week of school go by before they'd unleashed their nastiness? All it did was expose their immaturity.\n\nAs soon as I finished my lunch, I stood up and approached whatshername's boyfriend who was sitting at the other end of the table with his buddies. I'd been very observant in those five days of public high school. He was in my science class. And guys talk. Loudly. Especially about their girls. Like if their hair color was fake or not. This boy, in particular, professed to be a connoisseur of boxed versus natural.\n\nI leaned down to his level, giving everyone around us a good look at my rack...and ass. Then I said just loud enough for the table to hear, \"The carpet definitely does not match the drapes on that one. But then again, you would already know that if you've really banged her like you bragged in class yesterday.\"\n\nA bunch of gasps, mumbles, and echoes of \"burned, dude!\" passed amongst the group. One of them asked, \"How does she know?\"\n\n\"Roots,\" I whispered conspiratorially, tapping my head. \"She has blonde roots.\"\n\nFlipping my genuine, long red hair over my shoulder, I walked away with a smug grin to dispose of my lunch tray and go to my locker.\n\nI'd never heard another rumor about my name the rest of the school year. But even though I wasn't bullied, there were still times I really missed venting with my big sis. I wished her university wasn't so far away. I understood, though, that she needed that separation from our family. And we couldn't live by each other forever, anyway.\n\n###\n\nMy sister and I shared Mom's narrow face, full lips, and violet eyes (though mine were more blue). Jenna and Nathan had gotten the genes for height and slimness from Dad. I, on the other hand, was six inches shorter and had more defined curves\u2014top, bottom, and in between. Like my mom, who said we had the perfect hourglass.\n\nThe biggest difference, though, was our hair. All three of us Swallow kids had had a reddish tint as babies. But my senior siblings had slowly changed into the brighter spectrum, like Mom's, as they'd gotten older while mine had darkened like Dad's. Yet mine was still the reddest, which caused the popular taunt from my siblings that maybe I was adopted. I'd built up my tough skin ever since.\n\nOne thing our parents had passed down to all of us were book smarts. We excelled in our studies. Nathan had followed in our father's footsteps, getting a degree in the engineering field while he served. That was before the big incident where he threw it all away. And while Jenna had been a force to be reckoned with when it came to getting her degree as fast as possible, I decided to take my time. Enjoy life. And cultivate deeper relationships...of the more intimate kind.\n\nAll in all, my looks and figure continued to draw a lot of male eyes even once I went off to college. I finally had to face the music that I could no longer mask my disinterest in them. More than a couple of hearts would be broken, but I couldn't help it.\n\nOver the first three months of classes, I went on dates with as many women. Gave it my all since I believed it took effort and time to make things work. Rome wasn't built in a day.\n\nThe first was Vickie. She was a sophomore in my freshman English class. We were partnered-up to analyze one of several related short stories. I kept catching her watching me with a narrowed gaze when we were supposed to be taking notes to compare. While walking out of the building, I asked her what the hell her problem was.\n\nRight there on campus with all of our classmates scattering in their respective directions, she turned to me and asked if I liked girls. I told her the truth. Had I ever kissed one? Another truth. Did I want her to kiss me? I hesitated at that then nodded with a tilt of my head. Why not?\n\nTo my surprise, she didn't kiss me right then. But she took me out for pizza. We talked about the assignment. Class. How college was going for each of us. Then we went our separate ways once we got back to campus.\n\nAfter another two weeks and two more dates, she asked if I wanted to meet in her dorm room to go over final notes. It only took about thirty minutes before we decided we were good and I would type up the report we'd use to discuss in class. I was packing my backpack when she sat beside me and cupped my cheeks. She waited until I looked up at her before she pressed her lips to mine.\n\nThe kiss was...mediocre...despite her claims that she'd been with two other girls the summer before. Her lips were dry, her hands a little cold. Surprisingly, there were no nerves on my end. And there definitely were no sparks or any other exciting reactions. If anything, it proved to me that intimacy and romance just didn't mix.\n\nIn hindsight, maybe I'd just been curious but not really interested in her specifically. She'd impressed me by being the first person to ever ask me pointe blank about my orientation. I knew I wasn't going to miss the opportunity she was handing out to me. Maybe I should have. Because it kind of turned me off from pursuing other women.\n\nWhen the class assignment was over, apparently so was any relationship she'd hoped to have with me. She just stopped coming to class. Experiment failed? I didn't try to search her out and shrugged it off.\n\nMadison was the second girl I went out with. I found her wandering on campus one day in the rain and convinced her to go with me to the student union to warm up. Over a cup of a coffee, I found out she'd just transferred in and had forgotten which way her dorm was when it had started to pour. Turns out, she was in my dorm. On my floor.\n\nShe kind of became a pet, coming to me whenever she had questions. I saw it as a truly platonic friendship. Me as her protector. That is, until she knocked on my door after our school had won the Homecoming game.\n\nI'd been too tired to go celebrate the victory with my roommate and our friends and had just changed into boxers and a T-shirt. When I opened the door, Madison stood there with her brown hair in curly pigtails\u2014fucking pigtails\u2014and wearing a little tank top-and-shorts sleep set. All she was missing was a teddy bear in one hand.\n\nFor a solid two minutes, we just stared at each other in the open doorway. She eventually dipped her head, her brown eyes still staring up at me. I swallowed heavily and said she had better not tell me she'd had a nightmare. That made her grin. Then she cocked her head. Bit her lip.\n\nSomething stirred within me. I knew right away that it was lust. That I wanted to suck on her plump little mouth. Be the one worrying her lower lip.\n\nWhen she held out her hand, I took it. Silently drew her into the room. Shut and locked the door.\n\nI knew enough to slide my other hand behind her neck, pulling her to me while stepping toward her. And then I was tasting her lips. Unlike the first time I'd kissed a girl, I was trembling. I still didn't feel anything beyond a hunger to be satisfied. It only grew when her free hand touched my arm. My breast.\n\nWe were rolling on my bed before I realized what had happened. My hands moved over her on autopilot. Feeling every bit of her softness through her clothes. The more I did it, the more she moaned and whimpered. The more I wanted to touch her skin to see if it had the same result.\n\nI'm not sure which one of us was more surprised when I suddenly played over the crotch of her shorts. Her back arched and her hand clamped down on my wrist, holding my fingers against her pussy. I pressed lightly. She cried out.\n\nAn instant later, she was naked from the waist down. Shoving my hand between her spread thighs. And I was feeling another woman's clit for the first time. The dampness from arousal. My fingertips traced the foreign folds and valleys, causing Madison to writhe under me.\n\nWhen she growled to put my finger in her, I obliged. Gasped at the heat...the tightness of her. It wasn't long before my palm was wet with her release. Then she lie prone on the bed, her limbs haphazardly splayed around her, her head rolled to the side. Her chest rose and fell rapidly and then slower and slower as she relaxed.\n\nYet even as I watched the emotions of apparent bliss roll over her face, I felt nothing for this girl. I'd made her happy. That was all. A means to an end.\n\nI admit I enjoyed the kisses a hell of a lot more than with Vickie, but it had been just that. Lips locking lips. Nothing behind it that I'd take away and daydream about months or years from now.\n\nThe next time we found ourselves alone, she played with me. It felt good and was nice to not have to use my own fingers. But it was almost...clinical. And I felt she'd done it because she'd felt obligated.\n\nMadison surprised me by sticking around longer than my project partner had. Maybe because she'd found someone who could give her pleasure whenever she wanted it. I tried to put my beliefs into practice. To get to know her more outside of sex. But nothing further developed. We were just fuck buddies and would probably never be anything more.\n\nBy Halloween, I knew I was right. We were spending less time together. She'd pledged Greek, and whenever I did see her, she talked endlessly about the sorority. How she'd found the confidence she'd been missing with the girls there. I'd not realized how self-absorbed she was. Then she was accepted. Gone. And I was back to pleasing myself like I'd done for years.\n\nI was more than halfway through the first semester when I thought I'd met my match.\n\nCara made no qualms about invading my space. She just joined me one day in the dorm's cafeteria. I was eating my salad and looked up to see her smiling at me from the across the table. She propped one foot on the chair next to her and rested her arm on her knee. A senior staking her claim with an underclassman. If she thought her show of confidence would be intimidating, she was sorely mistaken.\n\nI'd seen her around the dorm, always wearing black leggings or jeans, combat boots, and a black tank top or graphic T-shirt with an unbuttoned, long-sleeved red-plaid shirt as a jacket over it. Her only accessories were studded leather cuffs, a leather choker collar that accentuated her short, spiky black hair with a colorful streak\u2014depending on the week, and a silver ring in her left eyebrow. Surprisingly, she wore little makeup, and she was quite beautiful with powder-blue eyes. Today, she appeared to have on the tank top.\n\nI arched an eyebrow at her and continued to eat. I wasn't too surprised when she asked me if I wanted to go see a grunge band play that night off campus. I shrugged. She said she'd see me in the lobby at six. And then she was gone.\n\nCara just rolled her eyes when I whistled at her a few hours later. She wore the same outfit from lunch with the exception that the plaid shirt was now tied around her waist, revealing the graceful lines of her figure...and a set of tattoos. On the inside of each forearm was the silhouette of a standing woman: a red devil on the left, a black angel on the right.\n\nFor the first time, something inside of me sparked. But only a little. Maybe I was attracted to the bad-girl image. If so, why hadn't the punk look triggered that response before now?\n\nI wasn't surprised to find out that everyone who was attending the event was a woman. They ranged from looking very feminine to what I'd learned were various shades of butch. Some appeared together\u2014leaning on each other or gathered in small clusters\u2014while others stood apart.\n\nThe band was actually good. But maybe that's because I'd taken a few drags off one of the joints being passed around. The rebel in me had jumped at the chance to try it. At least once.\n\nDuring the intermission, Cara grabbed my hand and led me down a wide graffiti-lined hallway lit by naked bordello-red light bulbs. In the room at the end, several people were reclined on couches and chairs\u2014some two deep\u2014while swirls of smoke disappeared above their heads.\n\nAt an empty spot, Cara shoved me down and straddled my waist. Then she cupped my face and grabbed my bottom lip between her teeth. I was still trying to understand what had just happened when her tongue entered my mouth. My cry of surprise morphed into a moan of pleasure. I relaxed when she growled for me to. Trembled with delight when she put my hands on her thighs.\n\nWe missed the second half of the show. Hell, I missed half of what happened in that room.\n\nI remember sitting upright with Cara's knees on either side of my hips, her tongue down my throat, and my palms hefting her ample chest through her tank top. Then I was lying on my back after the couple at the end of our couch vacated their spots as several people left the room. Cool air touched my belly then my hips. My thighs. Something pressed between my lips, and I inhaled and exhaled when I was told. A pulsing sensation traveled from my head down my chest and settled in the south. I swear I saw Cara's head between my legs. Then there was nothing but pure bliss. I was floating. Singing. Or maybe I was moaning. Then I was curled on my side, staring at a chair where another woman with tattoos up and down both arms grinned at me while puffing on a cigar.\n\nThe next thing I knew, I was waking up next to Cara's naked, sleeping body in a stranger's house. She was even lovelier without all the dark clothes, her skin creamy and smooth when I touched her arm. There was a huge tattoo on her back. Black angel wings that extended from her shoulder blades down to her lower back, the tips grazing the top of her ass cheeks. It was exquisite. Dark. Mysterious. Cara wrapped up in a picture.",
        "Later that day while we were munching on pizza, she confessed that she'd been watching me all semester and had just been biding her time. She just had to know if I was curious or serious about being a lesbian. I told her I had my own confession: I needed to know what the fuck she was studying in college. She just smiled, said she was going to be a veterinarian, and gave me a kiss while stroking her hand over my inner thigh.\n\nWe dated until the middle of spring semester. I tried really hard to have feelings for her. I just never could get any connection beyond the sexual. No matter how much I learned about her...shared about myself. Maybe she felt that, too. Or maybe I'd just been a conquest to confirm the questions in her head. I wasn't too fazed when she told me she would be moving on to the vet school after graduation. That she hoped there weren't any hard feelings and she wished me luck.\n\nFor the next three years, I dated off and on. The whole spectrum from femmes to butches. Some were more like me who were just in it for the sex. Others were more demanding for a deeper relationship. But I just never felt what they felt, and we always parted ways.\n\nI resolved that I would either have to be satisfied with a perpetual cycle of fleeting, superficial relationships...or being single the rest of my life.\n\n###\n\nAfter graduation, I decided I needed a change of scenery. I ended up on the East Coast working at Smith College as a financial analyst. A nice job that also allowed me to feel more comfortable in my skin. Northampton, Massachusetts, the location of the school, had a high per capita of lesbians, making the atmosphere perfect.\n\nThe office kept a pretty steady pace year round. I enjoyed working with most of my colleagues. To those who asked, I was upfront about my preference for women. But I never hit on anyone, and no one ever hit on me. One of those things HR frowned upon, I guess, though I'm sure it wasn't unheard of behind closed doors.\n\nWe had our little group that went out to lunch during the week or for drinks on Fridays. Sometimes, there was the occasional concert or event downtown. But I spent a lot of time unwinding alone at home.\n\nThere were a few clubs I'd learned about. Checked out. Felt nostalgic for some of the dates I'd gone on back home. Wistful when I saw couples dancing or making out. Yet despite the plethora of potential dates around me, I chose to stay single. Because ever since I'd moved, I realized I wanted a meaningful relationship. I just didn't have the time.\n\nI worked my way up to being a senior analyst over the years. Took on more responsibilities. Which included mentoring the chosen intern who passed through the department each fall semester. I'd received a notice on Friday with the latest candidate's information. So I was at my desk earlier than usual Monday morning.\n\nThe one nice thing about my office is that it was away from the others. I could concentrate on the numbers...the reports. There was another office next to mine, it was just empty since the guy who'd worked in there for the past decade had retired at the end of the previous school year. We'd not talked a whole lot, but there were the occasional times we'd stopped in each other's doorway to shoot the bull. Ever since his departure, I'd felt isolated. I looked forward to having someone new to talk to.\n\nI'd been there maybe thirty minutes when the chatter of two people\u2014one voice unfamiliar\u2014signaled that my intern must have arrived. I was flipping through the folder that had been left on my desk one last time when Patty, the department's secretary, knocked on my open door.\n\nI waved them in. \"Come in, ladies.\"\n\n\"Your eight o'clock.\" Patty turned to the wiry woman with stylishly-short black hair beside her and said, \"Welcome to the department.\"\n\nThe new employee nodded and stopped behind one of the upholstered chairs across from me, her hands clasped in front of her.\n\nPatty held out a small pile of papers. \"Here's the rest of her paperwork. No mail yet.\"\n\nI rounded my desk. \"Thanks, Patty.\"\n\n\"Let me know if you two need anything.\" She nodded with a smile then retreated down the hallway.\n\n\"Welcome. I'm Meredith Swallow.\" I set the papers aside and took in my prot\u00e9g\u00e9. She looked only slightly younger than my thirty-two years. Atypical when it came to the gap between the employees and the students. Maybe she'd started late. At least she knew how to dress. The last one had worn jeans and a wrinkled T-shirt his first day. This one looked professional but casual in loose khakis and a fitted polo shirt. My brain did a slight jerk when I realized I'd been staring at her waist and chest too long. Her slight smile widened a fraction. \"We're on a first name basis around here, if you're an employee. You can call me Meredith or Mer. Just not Ms. Swallow.\"\n\nThe intern took my outstretched hand. \"Joanie. Joanie Maserati. Like the car.\"\n\nShe had a strong, warm shake. Exuded confidence. I liked that. Hopefully, that meant she wouldn't take crap from anyone around the department. There were a couple of guys who liked to remind me I was still a woman despite my title and seniority.\n\nOur hands were still linked when our eyes finally met. Something pinged inside of me. That's the best way to describe it. I stopped breathing for a second. I didn't even blink. The whole room disappeared. It was just me and her standing there.\n\nAll of my childish thoughts seemed to smack me in the face. Was this love at first sight? How could I have been so wrong for so long?\n\nJoanie relaxed her grip. Our hands detached. The world returned to normal.\n\nThe moment wasn't gone, though. I still felt the zing somewhere deep inside. Realized I wanted more of it. Lots more. But I was her boss. Any type of relationship outside the supervisor/employee roles was definitely frowned upon. She could get expelled. I could lose my job.\n\nBesides, who was to say she was even into women? Or if that, me? So she smiled when she caught me staring too long. Maybe it was a coping mechanism whenever she was embarrassed.\n\nIt was best to suppress any feelings and stick to being professional. That's what we were here to do...be.\n\nI made it back around to my chair despite my wobbly legs and sat down. Gestured for her to take a seat as well. And somehow, we made it through the morning without me acting or sounding like a complete moron with her first crush. Even though I could still see her emerald-green eyes when I closed my eyes for any length of time.\n\nJoanie said she had daily lunch plans on campus when I asked, but she'd work to rearrange them to be able to go with those of us in the department at least some of the time. We broke for an hour\u2014during which I stared into space and barely ate my sandwich\u2014then got back to work for the afternoon.\n\nTuesday morning, she showed up early, dressed in a navy pantsuit that was similar to my light gray one. I suppressed the soft moan that crept up my throat. Outwardly, I nodded my approval before leading her to the conference room for the monthly department meeting. Inwardly? My heart was racing. And I couldn't stop swallowing. Thankfully, I'd brought in a cup of coffee, which helped me disguise the latter.\n\nI didn't have to think of something to tune out the department head's nasal monologue today. After introductions and an update from my area, I just kept covertly studying my intern beside me. How the fitted dress shirt hugged her curves. That the cut of her hair fell perfectly just above the collar. God, she was gorgeous. And God, I had it bad. After only two days. What the hell?\n\nBy Friday, we'd gotten her set up in the empty office. It was so much more convenient than trying to share mine like I'd had to do the past three students. She was a quick learner. Seemed to enjoy the job. And she made working in the back of that hallway much less lonelier.\n\nWe met at a favorite bakery of mine that morning, as I'd requested. I'd explained that I liked to get off campus at least once a week with my intern. It provided a neutral place to discuss anything on their mind, work or personal related.\n\nThe next six weeks went about the same way. When Joanie went with us to lunch, I made it my goal to include her in the conversation, even if she didn't contribute. While she'd been open to talking with me in my office, I found that she was quiet around others. Maybe because she'd just grown to trust me.\n\nShe didn't seem to be withdrawn around them. A better term would be observant. If not watching, she seemed to be always listening. On the rare times I'd seen her smile, her face beamed. She just seemed indifferent otherwise.\n\nAt first, our one-on-one meetings were more sipping and nibbling than chatting. But as the weeks went on, she opened up. I found I looked forward to those times as it was a joy to listen to her voice, no matter what she talked about.\n\nJoanie revealed that she'd already gotten her bachelor's degree at Amherst and had transferred to Smith to get her master's in finance. That explained her age. The fact that she was only with us until December and was graduating mid-year. She also had a large extended family but no siblings. Never had pets growing up but she'd adopted two painted turtles once she had gotten her own apartment. She loved thunderstorms but hated overcast days. Preferred to rent movies than watch them in the theaters. And she liked pineapple on her pizza, but only if it was paired with ham.\n\nAt one such meeting midway through the semester, we were discussing how jobs these days made it difficult to date. I had been saying that the hours sometimes left me exhausted. But that was mostly due to me being a workaholic. With the right person, I'd probably make the time for them.\n\n\"So how long has it been since you've had a significant other?\" Joanie asked between bites of her scone.\n\nI squinted, thought for a moment, and then shrugged. \"At least six or seven years. Probably longer if I really thought about it. Not that the women out here aren't my type. I just wanted to get settled into my job. Then I made excuses for not going out to the clubs. After a while, I got used to not trying.\"\n\nJoanie gave me one of those smirks I'd gotten used to seeing when she found something humorous. \"So...you're gay?\"\n\n\"Who isn't in Northampton?\" I gave her a nod when she arched an eyebrow. \"What about you?\"\n\n\"Significant other or gay?\"\n\nI shrugged. \"Both.\"\n\nShe smiled wider over the rim of her cup. \"Both.\"\n\nMy chest got tight suddenly. I managed to keep up a mostly casual fa\u00e7ade for the rest of our meeting. It wasn't until I was alone in my office that I started kicking myself for falling for the one person who wasn't available. My fucking luck.\n\nProblem is, the more time I spent with Joanie, the more I was attracted to her despite knowing she was off limits. The more the stirring within made me want to pursue a relationship.\n\nWe still had a little over two months to go. I had to hold it together until she was gone.\n\n###\n\nThe following week, we were walking back to our offices after lunch when Joanie asked me a question no one ever had.\n\n\"Do you believe in fairytales, Meredith?\"\n\nI scrunched up my nose and scoffed, even though I had a good idea where she was going. \"What, like magic and fairy godmothers?\"\n\n\"No. More like waiting for Prince Charming? Or Princess Charming in your case?\"\n\nI sighed. \"I've never been one for romance. Hearts and flowers and all that shit. Happily ever after? My experience has shown me it doesn't really exist. At least not for me. Then again, I used to think that love at first sight wasn't real, either.\"\n\n\"What changed your mindset on that?\"\n\nWe'd reached my office. I stopped in the doorway and held her emerald gaze. Gave her a wistful smile. Barely refrained from touching my palm to her cheek. \"I met someone.\"\n\nThe corner of her mouth turned up, too. \"But it wasn't meant to be?\"\n\n\"I'm not in the position to find out.\"\n\nHer eyes grew a little blurry. Or maybe that was mine. Then she nodded and we parted ways.\n\n###\n\nIt was a typical Wednesday around the office in late October. We were kept busy compiling a monthly report. When lunchtime came, I asked Joanie if she wanted to join me. It was one of the rare occasions when the rest of my group had to bow out for one reason or another. I expected her response to be that she already had plans. She always did on Wednesdays. But I still made it a point to extend the invitation. Just in case.\n\n\"Thank you, Meredith, but I'm meeting my fianc\u00e9e.\" Joanie dropped her gaze from mine and seemed to tuck her chin to her chest a little. \"Would it be a problem if I took an extra half-hour today?\"\n\nMy brain was still stuck on her saying that word. Fianc\u00e9e. I'd know for a couple of weeks now who she was meeting all those times she skipped lunch with the group. That her girlfriend had been the reason for her transferring here. But hearing her say she was also engaged? And to know she wanted more than the usual sixty minutes with this woman? My jealousy burned deeper than ever before.\n\n\"Meredith?\"\n\nI blinked. Her request finally registered between my ears. Since I knew we'd be crunching numbers the rest of the day, a little more time over a meal beforehand wouldn't matter. \"Sure, that's fine.\"\n\nShe gave me one of those partial smiles I loved so much, and then she was gone.\n\nI just stared at the empty doorway where she had stood. Told myself that I was happy for her to be getting married. Then I grabbed my purse and jacket and headed off to my lunch plans...by myself.\n\nWith ninety minutes to eat, I could have gone home. I should have gone home. Because it would have saved me a lot of heartache. But I'd wanted to go someplace where I wasn't alone with my thoughts. So I ended up at a restaurant I hadn't been to in a while.\n\nSeated at a table for four with three empty chairs and place settings staring at me, I buried my head in social media on my phone with one hand. The other was absently pushing my fork through my salad, occasionally lifting a bite to my mouth. It took me a minute to realize the overly-loud woman on the other side of the partition was upset. I wouldn't have wanted to be the receiver of those sharp words.\n\n\"We've been together for over two years. Haven't I been patient enough? You're done with this damn degree in a few weeks. Enough with school. You agreed to marry me eight months ago. We need to start talking about our wedding. Planning the rest of our lives together. And don't even start with the grandpa bullshit. You're an adult. Make your own damn decisions for once in your fucking life.\"\n\n\"Davina\u2014\"\n\n\"No, I'm putting my foot down. You're staying here.\"\n\n\"But I have to go back to Italy and work for a year.\"\n\nMy ears perked up. I knew that second voice. The almost apologetic one, not the hypocritical one.\n\n\"Listen here, honey. I already told you twice I'm not moving to Italy. I have a job and a life here.\"\n\n\"But I promised, Davina.\"\n\n\"You also promised to go to lunch with me every day, but you've broken that vow. Are you backing out of our engagement, too? Is that what this is all about? You want out?\"\n\n\"No! I told you, I'm eating with my coworkers.\"\n\n\"Well, tell your boss 'tough shit.' You're not going to be working there much longer. No need to get all comfy with those people. You've got me, and that's all you need. Isn't that right?\"\n\n\"Yes, Davina.\"\n\nThe conversation shifted when a waiter asked what they wanted to eat. But as soon as he said he'd go place their orders, Davina was right back at it.\n\n\"Now, tonight, I want you to start looking at wedding dresses. Bring some ideas tomorrow. And start wearing the ring I bought you. I didn't pay a fortune for it to sit in the box.\"\n\nHeat rushed up my neck and cheeks. My hands fisted on the tabletop.\n\nI knocked over my water glass when my waitress returned with the rest of my order, startling me. I apologized while she told me not to worry about it. She mopped up the puddle of water with my napkin and said she'd be right back with a clean one. I only half heard her because I was still processing two very important things.\n\nOne, Joanie was on the receiving end of those daggers.\n\nTwo, her fianc\u00e9e was a controlling bitch of the worst kind.\n\nA jumble of emotions swirled in my stomach, making it difficult to eat. Mostly, it was anger. That the person that had snagged the one woman I had connected with\u2014desired to be with\u2014apparently didn't appreciate or respect her in return.\n\nI also felt powerless. I wanted to march right over there and put this Davina in her place. But I couldn't. It would be inappropriate with our current positions. Because as much as I would be doing it for the fact that Joanie deserved so much better, I feared that my true emotions would come out and show that I was fighting for her for personal reasons.\n\nBut ultimately, I was frustrated that I hadn't seen any signs of the apparent verbal abuse. That I had failed to protect the woman I claimed to care about from this person...this situation. A strange sense settled on me that despite my fears, I needed to save Joanie. If only for her own sanity.\n\nI knew I couldn't just bring this up at work. She would have no idea that I had heard their mostly one-sided conversation. But I still had to try. Somehow.\n\n###\n\nTwo days after the conversation in the restaurant, that 'somehow' still hadn't presented itself.\n\nJoanie was definitely withdrawn. She had been since Wednesday afternoon. After lunch, she'd gone into the spare office next door and worked quietly until it was quitting time. I had gotten a halfhearted wave from her when she walked down the hall on the way out. The same thing had happened Thursday.\n\nI'd been in a funk myself, which was unacceptable in my opinion. I should have risen above my emotions and moved on. She was my intern. She wasn't even an option to be in a relationship with me, regardless of her status with that other woman.\n\nJoanie didn't shown up for our one-on-one at the bakery Friday morning. I grabbed two coffees, some pastries to go, and then returned to work. She wasn't in her office, but her coat was on the back of her chair, so I knew she was there. Somewhere. I deposited a cup and a bag with her favorite scone on her desk then went to work on collating the copies of the final report.\n\nIt was late in the morning when I heard crying from the spare office. She didn't even look up when I walked in the room, closed the door, and sat down across from her. It was backwards from what I was used to, but maybe it would give her a little more confidence sitting in the seat of authority.\n\n\"Joanie?\" I bit my lip to stop myself from adding 'sweetheart.' After a couple of deep breaths, I asked, \"What's wrong?\"\n\nHer eyes blinked a few times. \"It's nothing. Just personal shit.\"\n\nMy fingers twitched. Oh, how I wanted to reach out and grasp her hands. Comfort her. But I forced mine to stay in my lap. Even after licking my lips a few times, my own usual confidence failed me. Best to just get it over with. \"I know I'm your boss. But I hope you think of me as a friend, too, by now. If there's something you want to talk about, I promise...it stays between you and I.\"\n\nShe just nodded.\n\n\"I'm here if you need me.\" When she remained silent, I stood. I had my hand on the door handle when she sighed, her breath shaky, probably from her crying.\n\n\"You promise?\"\n\nI froze. Closed my eyes at the unexpected nervousness in her voice. Turned back to see her watching me with those eyes. The dampness from her tears made them sparkle like jewels. It hurt to swallow. I hoped to God I sounded sincere. \"Yes, Joanie. I promise. Anything you tell me? I won't tell anyone.\"\n\nShe nodded again. After a long moment of silence where she stared at the papers on the desk, she said, \"My girlfriend and I had a fight. We got engaged in March, but I've been putting off making any plans. Haven't been wearing the ring, which pissed her off even more.\"",
        "I bit my lower lip to prevent the words from falling out that I had heard the fight. Probably half of the restaurant had. I just took a seat again and waited, though impatiently.\n\nJoanie eventually lifted her gaze. It wavered as she held mine. She looked...deflated. Once more, I just wanted to comfort her. But I resisted.\n\nShe rested an elbow on the desk and then her forehead in her palm. \"I need to backup, to explain. I grew up in Naples until grade school. Stereotypical big Italian family where the women like to have kids and cook, and the men are steeped in the family business with generations of money. Our last name? A distant relative's ingenuity.\"\n\nIt had never occurred to me that she might be related to the guy who's namesake was a famous sports car. One thing Joanie had going for her, she wasn't a braggart. That endeared her more to me. Damn it.\n\n\"My mother brought me stateside. She was from America but had met my father while she was studying overseas. She stayed in Italy, they got married, and then she had me. But when he left her for another woman, she returned to her family. Raised me on her own. I've been back to see my grandparents and all a few times over the years. But it's mostly conversing through Emails, phone, snail mail.\"\n\nThat need to comfort her increased tenfold. I felt like I should say something. But before I could think of what, she sighed and folded her arms on the desktop, her chin resting on top.\n\n\"My grandfather has supported us my whole life. He still controls the family accounts. He set up trusts for each of the grandchildren and great-grandchildren. Pays for all of our education if we want it. But in order to get that free degree, we have to agree to work in the family business for the first year after graduation. I was able to get an extension since I wanted my masters. But since I'll be done with that in December, I'm supposed to go back to Italy the first of the year. Davina, my fianc\u00e9e, is not keen on that. She insists I stay here. Get married. Ignore my grandfather's wishes.\"\n\nI didn't know this other woman except for overhearing how she'd treated Joanie at the restaurant. But for a brief second, I was on her side. I didn't want Joanie to leave. I gulped and hoped my voice didn't sound too hopeful. \"What happens if you don't go to Italy?\"\n\n\"I would have to pay him back for all the tuition, room and board, and other expenses for the past seven years.\" Joanie closed her eyes and dug her fingers into the front of her short hair, her voice forlorn. \"I don't have that kind of money, Meredith.\"\n\nThat need to protect her suddenly overrode any desire I had for her. The mentor in me shining through. \"Joanie, I can't tell you what to do. But it sounds like you already know.\"\n\nShe just nodded her head. Sniffled a little.\n\nI took a deep breath and started to elaborate. \"I would suggest\u2014\"\n\nThe door flew open, banging against the wall. \"What the hell? I made reservations. You could have called to tell me you were running late.\"\n\nBefore the intruder had even finished, I was on my feet and standing between Joanie and a woman who could only be Davina. Tall and ultra-skinny, her short, sharp-angled blonde hair and stylish but loose-fitting clothes gave me the impression she might be a model. She wore a scowl on her dark-red lips and one French-tipped fist on her left hip. The first thought that came into my head was of Medusa, the villain from Disney's \"The Rescuers.\"\n\nA loud gasp and another bang behind me\u2014probably the desk chair hitting the filing cabinets under the windows\u2014told me I was right.\n\nA second later, Patty dashed down the hallway, her hands waving. She stopped in the doorway with her hand to her chest. \"I'm so sorry, Ms. Swallow. I tried to stop\u2014\"\n\n\"Thank you, Patty. I'll handle it.\" I smiled at our secretary and turned my attention to Davina. \"We are currently in a meeting, which you have so rudely interrupted. If you could please return to the waiting room, Ms. Maserati will be out when we are done.\"\n\n\"Ah. So you're her boss.\" Davina looked me up and down. Her scowl deepened.\n\nI forced my smile to remain, gesturing down the hall. A clear sign for her to leave.\n\nDavina stepped right past me. \"We are late for lunch. Let's go.\"\n\nI turned just in time to see Joanie cowering in the desk chair. Enough was enough. \"Excuse me!\"\n\nBoth women started and blinked at me. Even I was a little shocked by how loud I'd yelled. I would say I almost sounded like the Colonel. Almost.\n\n\"Davina, is that right?\" At her slight nod, I pointed out the door again. \"This is my business, and we are on my schedule. Ms. Maserati is still working. I will not tell you again. Go to the waiting room, or I will have security escort you out of the building. Is that clear?\"\n\nDavina glanced between Joanie and me then turned and stalked out of the room.\n\nI saw the edge of Patty's hair disappear around the corner at the far end of the hall before the backside of Joanie's girlfriend filled my vision. I smirked before closing the door. Then my face fell.\n\nJoanie was hunched over the desk again, her head resting on her folded arms. Her shoulders were shaking, although she wasn't making any sound.\n\nI was at her side in three strides. My arms reached out to surround her in a hug a second before my brain told me to stop. I clenched my fists and returned them to my sides.\n\n\"I-I'm so sorry, Meredith.\" She looked up, her eyes red and glossy. \"I had hoped you would never have to meet her. She can be such a bitch.\"\n\n\"You have no reason to apologize.\" I sat on the edge of the desk. Realized her arm was only a few inches away from my thigh, the thin material of my slacks the only barrier between us. If I concentrated would I actually feel the heat of her skin through it? Pushing the thought away, I added, \"You are not at fault here, Joanie. You did nothing wrong.\"\n\nShe nodded. Continued to stare up at me until our gazes locked.\n\nIn that moment, I felt the same spark I had on day one. Had continued to feel every time our eyes met. Even if for just a second. And I found myself speaking from the heart.\n\n\"Forget what I said about not being able to tell you what to do. Go back to Italy after you graduate, Joanie. Keep your promise to your grandfather. And if you come back in a year, do it for you. Start fresh. Let me know if you need any references to get a job stateside.\"\n\nShe sat up straighter. \"Any other words of wisdom, Meredith?\"\n\n\"Since you asked, yes. Some people just don't understand what they've got. How to be in a relationship. You deserve so much better than Davina. I know. Maybe not to the depths you have, but I've been there. It sounds like a broken record I'm sure you've heard a thousand times, but don't settle. Ever.\"\n\nJoanie gasped softly when I mentioned her fianc\u00e9e. When I hinted to my own past...experiences. And I might have imagined it, but she seemed to have shifted her arm closer to my thigh. I forced myself not to glance down.\n\n\"Why don't you go to lunch and take the afternoon off? You get sick pay just like any other employee. Use the time to relax, if that's possible. I'll see you first thing Monday morning, okay?\"\n\nShe gave me one of her brilliant smiles, her eyes shiny...and not just from her tears. \"Thank you, Meredith. For everything.\"\n\n###\n\nThe following week, Joanie seemed to be back in good spirits. She never told me what, if anything, was discussed with her fianc\u00e9e. She continued to go to lunches with us sometimes except for always bowing out on Wednesdays. But there were no more sudden bursts of crying or door slamming. Our Friday mornings returned to banal chatter.\n\nI celebrated Thanksgiving with my coworkers like I had ever since moving out east. That night after catching up with my parents on the phone, I called Jenna. She couldn't stop talking about her girlfriend, Kat, a straight-laced girl whom she'd met over a year ago and had \"turned to the dark side.\" I brought up Joanie twice, but I only mentioned that she was this semester's intern. I held my tongue after that and let my older sis gush. Especially when she told me she was planning to propose on Christmas Eve.\n\nAfter we said our goodbyes, I laid in the dark of my bedroom. Stared at the ceiling while hot, silent tears trickled down my cheeks. I was happy for Jenna and Kat. I really was. But our conversation was just a reminder that I didn't have that special someone in my life. Would it ever happen for me? I couldn't help thinking that the one person I could have had a chance with was leaving the country in another month. Probably to never return again.\n\nWork was busy after the holiday. December had come too soon. My time with Joanie was ending. I cursed her agreement with her grandfather. Tried to think of ways to get her the money to pay him back. Ways she could stay here. With me. But I knew it wasn't right of me to think like that. She had obligations to meet. I was just a blip on her radar of life. Besides, if she stayed, it wouldn't be for me.\n\nWe threw a little party on her last day. Lunch was going to be catered in, and I told her there was no way she was going to make an excuse to miss it. She gave me one of her smiles and promised she'd eat with the group.\n\nShe'd been a wonderful employee. I struggled with her final written-review only because I had to make sure that my words stayed professional. That my heart didn't bleed through.\n\nI had retreated to my office to submit the paperwork and have a private cry near the end of the day. A soft knock on the door had me spinning around in my chair, wiping my eyes with the back of my hand.\n\nJoanie stood leaning against the doorframe wearing a slight smirk. \"Got something in your eye?\"\n\n\"Yep, something like that.\" I noticed she had her coat draped over one arm, the shoulder bag she'd been custom to bringing daily at her feet.\n\nShe made herself comfortable in one of the chairs opposite mine and tossed her coat and bag in the other. \"I broke up with Davina.\"\n\n\"Wow!\" I blinked at her. Repeated myself. Blinked some more. \"Are congratulations in order?\"\n\n\"Not if you're Davina,\" Joanie smiled. She tilted her head. \"It took me a while to build up the courage, but I told her that I couldn't defy my grandfather's rule. He'd put a lot of money into my education. A year's worth of work wasn't too much to ask in repayment. If she loved me, she would wait for me.\"\n\nI nodded though my gut was twisted into knots. She actually thought Davina loved her?\n\n\"She told me to make a decision now. Her or my family. Easiest decision I ever made.\"\n\nTears threatened to rim my eyes. Damn it. I smiled genuinely, hoping that would keep them at bay. \"Would it be unprofessional to say I'm proud of you for standing up for yourself?\"\n\nJoanie shook her head. \"Nah.\"\n\nWe stared at each other a moment. Then we both laughed when I said, \"I'm proud of you for standing up for yourself.\"\n\n\"I got some bad news this morning.\" Joanie sighed, her smile and gaze lowering. \"My grandfather had a heart attack last night. He's stable, but my mother wants to go back to Naples as soon as possible. Not to wait until the first of the year. I agree with her. We should go now. But...\"\n\n\"What? Because you'll miss your graduation ceremony?\" I snorted softly. \"You've already been through two in your life. Are you really such a glutton for punishment that you want to sit through a third humdrum pomp and circumstance?\"\n\nHer mouth twitched up into a partial smile again. \"That's not what makes me hesitate.\"\n\nI shrugged. The only obstacle standing in her way of going back to her home country had been eliminated. And it had been her own decision. \"What then?\"\n\nShe stood slowly and made her way around the side of my desk. I felt awkward still sitting and stood as well, only to realize that I'd encroached on her personal space. Or had she entered mine?\n\nJoanie's clear gaze locked onto mine. \"What if there was another reason to stay?\"\n\n\"I don't\u2014\" I couldn't breathe for a second. This wasn't happening. My voice cracked when I asked, \"What are you saying?\"\n\nHer fingers brushed my cheek. Threaded a strand of my red locks around them before tucking it behind my ear. The simple movement sent those zinging impulses racing through every nerve ending. It was the first time we'd touched in any way that had hinted at intimacy. And she'd initiated it.\n\n\"Mer, I would stay if you asked me to.\"\n\nHer voice was so soft, but I'd heard every word. Especially the way she'd said my name. How I'd longed to hear her call me that. Somehow, I remained standing.\n\n\"Joanie? You have to go back to Italy.\"\n\nHer smile fell. Her eyes grew cloudy. \"I don't understand. I thought you wanted me.\"\n\nThe lump in my throat doubled in size. \"I do. But I want what's best for you, more.\"\n\n\"Don't I get to make that decision?\"\n\n\"You need to go home to your family. To make good on your promise to your grandfather.\" I couldn't stop the first tear from trickling down my cheek. \"If you love something, set it free.\"\n\nJoanie stared longingly at me, her lower lip trembling. I thought she was going to say something, but she threw her arms around me in the embrace I'd always dreamed I'd have with her. I'd just never imagined it would be in these circumstances. Then she did speak, her voice the sweetest whisper against my ear.\n\n\"I'll never forget you, Mer. Never.\"\n\n\"You either, Joanie, sweetheart.\"\n\nWe hugged one more time. And then she was rounding the desk again. Gathering her things and heading down the long hallway toward the waiting room.\n\nI watched until she reached the end where she paused. My heart soared for a moment. Was she going to defy me? But when she disappeared around the corner, I collapsed into my chair.\n\nThe tears were flowing even before my head hit my arms on my desk. I'd never been more grateful for that lonely office far away from everyone else.\n\n###\n\nI managed to go to the office every day since Joanie had left. To put on a fa\u00e7ade and get work done. It was easy to just go through the motions. I'd been doing it so long, it was second nature to run numbers and compile year-end reports.\n\nIf any of my coworkers noticed a difference in my behavior, they didn't let on.\n\nBut when I wasn't at work? When I was at home? I cried. All the time. Slept a lot, too. Dreamed of Joanie. And I avoided the bakery that had become my Friday-morning ritual. Too many memories of sitting next to Joanie Maserati for the past five months. Hearing her voice, her laugh. Seeing those green eyes light up or even roll backwards when she was being sarcastic.\n\nFor the first time, I spent Christmas alone. While I did go to the department party earlier in the day, I hadn't decorated my apartment. I didn't watch any of the classic movies like I usually did. I lied my way through the phone calls from my sister...my parents. Said everything was fine. Blamed a head cold for the slight sniffles that were apparent in my voice. Then I went to bed early.\n\nThe office was closed until after the first of the year. I planned to not even leave my apartment. I knew I needed to snap out of this funk, I just didn't know how.\n\nMy darkest hour was New Year's Day when I flipped on the TV and caught one of my favorite movies, \"Under The Tuscan Sun.\" I sobbed through the whole thing. Remembered how my sister, Jenna, had told me about her trip to Tuscany after meeting Kat. How beautiful it was...and eye-opening for their relationship. How she had known twenty years earlier that she would marry Kat if given the chance. And that chance had hit her like a suckerpunch. Or had Kat hit her? Or someone? Whichever, Jenna had gotten her wish. Kat had accepted her proposal. They were going to get married.\n\nThe movie also made me imagine Joanie being in the countryside like that right now. With her family. Maybe getting ready to start working for her grandfather, like she was supposed to do. Hopefully happy with her decision. Moving on with her life.\n\nAs the movie ended, I made the decision right then and there to pull up my big girl panties and move on. To remember the ladybugs in my life, not focus on the missed opportunities. I was a grown adult.\n\nI'd had a glimpse of something I'd thought hadn't existed. Maybe it was still possible for me. Someday.\n\nBut I still thought fairytales couldn't come true.\n\n###\n\nOver the next six months, I was kept busy managing another intern. I'd not realized they'd arranged a spring-semester student until he'd shown up the first day of school in January. His name was Scott. Very handsome. A math genius. And all the women of the office loved him, especially Patty. He provided a distraction from the mundane...my own thoughts. Plus, he'd grown up with a military father, so it gave the two of us plenty to talk about when I reinstituted the Friday morning one-on-one meetings.\n\nThe rest of the school year seemed to whiz by. Before I realized it, I was celebrating Scott's last day with the rest of the department. Writing up his final review.\n\nWhile cleaning up the conference room after everyone else had left for the weekend, I decided I'd take a trip to Chicago. Spend time with my sister. Meet this Kat she couldn't stop talking about. Kat was going to be my sister-in-law, after all. We had so much catching up to do. All of us.\n\nIf I booked my flight tonight, I could be there by mid-day tomorrow. Spend a couple of weeks with them before I'd need to be back here for the summer school session. Maybe drop in on my parents. It wouldn't take long to pack. And the change of scenery would do me good.\n\nI had just returned to my office to sit down and make arrangements with Jenna when my phone dinged that I had a text.\n\nPatty: Last minute plans. Dinner at Mulino's. Now. End of the school year and all. Meet you there.\n\nI started to text back that I couldn't make it, but another message came through.\n\nPatty: No excuses, Meredith.\n\nI considered ignoring our secretary. Or at least texting Jenna about my idea first. But my stomach rumbled. I really did like Mulino's. I could talk to my sister after dinner.\n\nFifteen minutes later, I was walking into the restaurant housed on the second floor of the old Baystate Hotel. Absently running my hands down the sides of my A-line midi skirt\u2014which I'd chosen at the last minute to wear today\u2014while following a smiling waitress to where she said my party was waiting on the veranda. Then trying to remember how to breathe when the door to the outside opened to reveal a single table set for two...and Joanie standing beside it in a black-and-gray pinstriped suit with a black fedora perched on top of her cropped hair.\n\n\"Hiya, gorgeous,\" she said as soon as we were alone.\n\nI gripped the back of the nearest chair, thankful I'd worn flats today because my legs felt like jelly. \"J-Joanie! I-I don't understand. What are you doing here?\"\n\nShe gave me one of her famous half-smiles and wrapped a lock of my red hair around her finger. \"I'll explain. But first, I'm going to kiss you now, Meredith Swallow.\"\n\nI had just inhaled when she cupped my face and lightly pressed her lips to mine. The softest squeak of surprise escaped my mouth. My eyes widened for a moment before relaxing, my eyelids drifting close.\n\nThe first thought that flitted though my head was that she had soft lips. Warm hands. And her breath...it smelled sweet. My fingers danced over the suit-jacket sleeves covering her arms. Caught between wanting to touch more of her and thoroughly enjoying what I already felt.\n\nWhen she started to pull away, I finally closed my fingers around her biceps. Then I was kissing her back just as lightly. As though she might disappear if I pressed any harder.\n\nI felt her step closer, her chest brushing mine. We took a collective breath, and then we were kissing again. Our moans combined. Fingers curled behind each other's neck, loosely clutching at hair. Trying to get closer though subconsciously knowing we had to respect the fact that we were in public.",
        "Her hands caressed my cheeks again\u2014tucked my hair behind my ears\u2014before she disengaged and smiled at me across the distance of only a few inches.\n\nStill slightly dazed, I slowly blinked at her. My stupid grin grew the longer she stared into my eyes.\n\n\"I've missed you, Mer,\" she whispered.\n\n\"Missed you more, Joanie,\" I whispered back.\n\nI thought she might kiss me again, but she removed her hat and pulled out a chair, gesturing for me to sit down. As soon as I did, a woman appeared through the door I'd entered. She poured us each a glass of wine and then set the open bottle in a pitcher of ice. I lifted my glass and toasted Joanie. Noticed the waitress was still standing nearby, smiling. When I arched an eyebrow, Joanie grinned.\n\n\"She's waiting for us to decide what we want to eat.\"\n\n\"Oh, you didn't preorder?\" I bit my lip to stop myself from giggling, but the sound still leaked out.\n\nJoanie just rolled her eyes and opened a menu.\n\nI couldn't take my eyes off the beautiful, Italian woman sitting beside me. Was she really here? Had she really kissed me? Had I kissed her?\n\nYes. Despite the sweet wine, I could still taste her...feel her hands on me.\n\nHer suit was fitted. Definitely Italian. Custom made. It hugged every blessed inch of her body. And it made my insides twist in delight.\n\nI wanted to run my fingers down each pinstripe before sliding my hands under the lapels and caressing her chest over the vest I could see since she'd unbuttoned the jacket. Then I'd slowly undress her. Tease her. Make her writhe. Because as much as I loved seeing her in a good suit, I wanted to see her body without it.\n\n\"Mer?\"\n\nI blinked and looked around. Realized we were alone.\n\n\"Are you okay?\" Her voice cracked a little, her eyes clouding over.\n\nWith a nod, I took another sip of wine and smiled. \"I'm sorry. I guess I'm just...still in shock.\"\n\n\"I can only imagine.\"\n\nWhen she laid her hand out on the table, palm up, I rested mine on top. Our fingers adjusted to wrap around each other. And then we both sighed.\n\nAfter a few minutes, I ventured, \"Is it your grandfather? Did something happen\u2014\"\n\n\"No, no he's fine.\"\n\n\"Oh, okay. Good.\"\n\n\"Mmm hmm.\"\n\nWe drifted back into silence. Longer this time. When I opened my mouth to try again, she waved her other hand in the air. I clamped my lips shut and just stared at our wine glasses. The flickering flames of the candles in the middle of the table despite it still being light out.\n\nI knew this was a popular restaurant. Seating was already limited. In this beautiful weather, the veranda would have been the most desired spot for a Friday night. Joanie must have put a lot of effort into this surprise. I wondered how much Patty knew about us. How long either had been planning this. I was so glad I hadn't ignored Patty's messages and made plans with Jenna and Kat. Even if Joanie was only here for a short time, I wanted to spend it all with her. If possible.\n\nThe waitress returned, and we waited patiently while she served us our salads.\n\nOnce the door closed, Joanie sighed. \"I'd rehearsed everything on the plane ride. Thought it would be perfect. Now that I'm here, I'm at a loss for words after seeing you. Kissing you.\"\n\n\"It is perfect.\" It sounded like I was whispering. I swallowed heavily and said a little louder, \"Take your time, sweetheart.\"\n\nShe blinked at me, her eyes damp. Then she squeezed my hand and took a deep breath.\n\n\"Six months ago, I walked away from you, knowing I was probably breaking your heart. It definitely broke mine.\" Her smile faltered for a moment. \"It was one of the hardest decisions I had to make. But you said it was best for me. And I eventually realized you were right. My grandfather was so pleased to see me. Proud that I'd kept my word. And I was glad I'd gone back. What if he hadn't recovered? I would have felt so guilty. I know I made the right decision, as much as it had hurt you and I both.\"\n\nI just caressed the back of her hand with my thumb, diverting my eyes so not to distract her.\n\n\"During the day, I managed the books like they trained me. In the evenings, we sat around the family villa eating and drinking for hours while everyone caught me up on everything I'd missed over the years. I loved being there with them. Even my mother seemed happy around her in-laws. My father, thankfully, was not around. They hadn't seen or heard from him in years. I had kind of hoped...but anyway.\n\n\"My grandfather took me aside on Monday. He wanted to know what was always making his youngest granddaughter so sad. He'd noticed there were times that the light died in my eyes ever since I'd come home. It was usually when anyone would talk about how they'd met...fallen in love. So I told him the truth. That I'd met a girl back in the states, but my vow to return to Italy after graduation meant I couldn't pursue anything. He held my hands then. Looked me dead in the eyes. Asked if I loved her, this girl I'd left behind. I said, 'With all my heart.' \"\n\nTears rimmed my eyes now, but I blinked them away. The same couldn't be said for the ones I felt inside that made my chest feel tight. Especially when I glanced at Joanie and saw her smile had returned.\n\n\"He told me he'd spent over eighty years following in his parents' and grandparents' footsteps. Carrying out their wishes. Always choosing family over anyone or anything else. But his recent health scare had reminded him of something profound: life could end when you least suspect it. And he didn't want to be the reason I passed up a chance at following my own dreams before it was too late. If I thought there was even the slightest chance of a life with this girl, I should go after her. So...\"\n\n\"Here you are,\" I whispered.\n\nShe nodded. \"Here I am.\"\n\n\"I'm glad you came back.\"\n\n\"Me, too.\" Joanie released my hand and reached up to caress my cheek.\n\nI started to press into her touch, but I noticed our salad bowls in my peripheral vision. My voice was raspy when I suggested, \"We should probably eat those. Our entr\u00e9es will be out shortly.\"\n\nShe laughed and gave me the biggest grin.\n\nThroughout the rest of the meal, we filled each other in on what had been happening in our lives since we'd been apart. It felt like old times, but better. We didn't have to worry about keeping our roles clear. I was no longer her boss. She was no longer my intern. We were equals. \n\nBy the time the food and the wine were gone, the sky was streaked in darkening shades of blue and rose. The candles had burned down to provide a beautiful ambience. Especially when we shared a lengthy kiss. It was...romantic. And the perfect way to end an entirely unexpected date.\n\nWe walked hand-in-hand through the restaurant and down to our cars. At mine, she cupped my cheeks and kissed me again. A little breathlessly, I rattled off my address. Told her to follow me. And we both somehow made it across town to my place without causing any accidents or getting a speeding ticket.\n\n###\n\nUp in my loft, standing with my back against one of the exposed-brick walls while Joanie stared into my eyes\u2014her left forearm resting against the side of my head\u2014I felt like it was my first time. With anyone.\n\nI was scared that I wouldn't live up to her expectations. In a zone of happiness and awe to finally be here with her. And slightly frustrated because I wanted to do so much with her...to her...but I didn't want to rush it, either.\n\nAs soon as I'd shut the door, she'd backed me into the wall and tossed her hat aside, ignoring my whimpers. Then she'd slid her fingers into my hair. Tilted my head to the side. And kissed me soundly. With tongue.\n\nWhen I'd regained enough of my sensibilities, I'd cupped her face. Returned the favor.\n\nWe'd been at it for at least five minutes. Maybe ten. And then we'd taken a break to breathe. Had been staring at each other ever since.\n\nJoanie stroked a finger down my face, smiling when I slowly closed then opened my eyes. \"You're blushing as red as your hair, baby.\"\n\nI felt the color deepen in my cheeks at the pet name. I'd always thought it was stupid...sappy...childish. But coming from her? I felt a strange emotion from hearing it now: reverence. That someone thought of me with that much care to actually mean a term of endearment.\n\n\"I love it when you blush,\" she whispered before placing a soft kiss on the rise of each cheekbone. \"The heat coming off you...\"\n\nI moaned softly when she pressed her cheek to mine. Shivered at her breath caressing my ear.\n\n\"That I do that to you?\" She nipped my earlobe, making me gasp. Then she let out a soft growl. \"I have dreamt of this moment with you for almost a year, Mer. Ever since I first walked into your office and you took a few extra seconds to stare at my breasts. Part of me had hoped you'd seen my nipples get hard. Just like they are right now.\"\n\nThe trembling started at my knees and worked its way up to my shoulders...to my right hand that hung loosely on her propped arm.\n\nJoanie chuckled lowly, her grin evident against my cheek. \"Does that excite you, baby?\"\n\nI gripped her arm a little tighter. Nodded and let out a small whimper of affirmation. Shook harder at her moan of approval echoing in my head.\n\n\"Right now?\" she said then swallowed audibly. \"I'm fighting against throwing you on the bed and ravaging you senseless. Showing you how much I've wanted to be with you. But there's a small part\u2014a very small part\u2014that is saying to go slow. Draw out the pleasure.\"\n\nMy fingers clutched her arm and tugged down. When she remained steadfast, I used her arm to pull myself toward her, copying her stance. Breathing against her ear now. \"I opt for slow, but only because I've been imagining stripping you out of that suit. Please don't deny me that pleasure, sweetheart.\"\n\nJoanie growled when I nipped her ear this time, her voice breathy when she finally said, \"You drive a hard bargain.\"\n\nA quick shift of my hands had her grasped by the lapels of her jacket. I kissed her. Hard. Used the distraction to push off the wall and turn her so she was the one leaning against it. Leaving her panting heavily, her green eyes wide, almost glowing.\n\n\"Feisty, aren't we?\" she growled, her smile mischievous after I took a step back.\n\n\"You could say that.\"\n\nI dragged my gaze from her head to her toes and back up. Taking my time, licking my lips every few seconds. My thoughts from the restaurant returned. I decided to skip tracing each pinstripe with my fingertip. I was too impatient to get to what awaited me underneath. She probably wouldn't stay still long enough, anyway.\n\nShe watched me silently\u2014unless you counted the soft moans and sharp inhales escaping her slightly-parted mouth\u2014while I smoothed her lapels. Slid my hands inward then upward to her shoulders underneath the sides of the jacket. When I pushed the material backwards and down to her elbows, she bit her lip and dropped her gaze. But she didn't try to shrug the sleeves off the rest of the way.\n\nJust the thought of her staring at my chest made my nipples tighten painfully against my bra. I left her arms bound and smoothed my hands over the diamond pattern of her vest. When I got to her breasts, I paused. Her chest puffed out then shuddered a little. Or maybe that was just my hands shaking. Maybe both. But I felt her heart pounding against my palm. There was no denying that.\n\nI continued on down to the tips at her waist. Moved back up on her sides. Inward to slowly release each of the buttons until the material parted. As I'd done with the jacket, I slid the vest back off her shoulders and down to her elbows. Then I repeated the whole process with the dress shirt underneath, noting its silkier texture. Smoothing. Pausing. Unbuttoning. Parting. Sliding. All until she was standing before me with two layers of what was probably fine, Italian wool and one of silk gathered at her elbows.\n\nThat's when I noticed she had her hands in her front pockets. A faltering smirk on her face. And\u2014most importantly\u2014that she wasn't wearing a bra.\n\n\"Fuck,\" I whispered, licking my lips again. Her rosy tips were large\u2014the left one erect and the right actually inverted\u2014against her smallish pillows of flesh. My fingers itched to stroke them. My mouth watered at the thought of sucking them. Especially that innie, to make it come out to play.\n\n\"Surprise, baby.\" Her voice was so husky, my pussy clenched in desire.\n\nGritting my teeth, I tried to get my focus back. As she didn't seem to be willing to help me finish stripping her above the waist, I tried a different tactic. I ran my index finger down between her breasts to her waist, grinning when she gasped and her hips jerked forward before resettling against the wall.\n\nSlowly, I unbuckled her belt. Unbuttoned her pants. Lowered the zipper. Then I lifted my eyes to hers and arched an eyebrow before yanking down on her waistband.\n\nHer hands fell free with another gasp. The fine material of her pants pooled at her ankles, revealing a pair of tight, black boy-shorts. Her entire body rippled for a second, settled, and then rippled again.\n\nJoanie opened her mouth, but nothing came out. She licked her lips and seemed to be trying again with no luck.\n\nI stepped closer to her, my fingers just grazing her hips on both sides. \"Cat got your tongue, sweetheart?\"\n\n\"You...you're...\" She closed her eyes for a moment, visibly swallowed, and then slowly lifted her lids.\n\n\"Hmm?\" I moved my fingers up a little, touching her bare waist. Skated them up her sides, smiling at her sharper breaths. Her moans when I brushed my thumbs across her nipples. And when she undulated again, I gently tugged the jacket, vest, and shirt down past her ass and then her wrists.\n\nShe seemed to snap out of her reverie then, pausing only to toe off her dress shoes before stepping towards me from her pile of clothes. Forcing me to take a few steps back. She licked her lips and grinned, growling lowly again. \"You're overdressed, baby. I aim to rectify that...right...now.\"\n\nI don't know what came over me, but I turned and ran, giggling like a child. She chased me, laughing just as loud. We ended up in the kitchen area. Racing around the island until we stopped on opposite sides, panting. Whenever she moved right, I moved left. Vise a versa. Back and forth for at least a minute. A Mexican standoff of sorts.\n\nJoanie shook her head. \"Mer? It's no use. This only ends with you naked.\"\n\n\"Oh, I know.\" I eyed her heaving bare chest. Noticed her right nipple was starting to come out. Interesting. After toeing off my own shoes, I made a dash toward the partition separating the bedroom area from the rest of the space, yelling back, \"But you have to catch me first.\"\n\nMy goal had been the bathroom where I could shut the door between us and make her wait a little longer. But I'd forgotten she had longer legs. I'd just reached the bathroom doorway when she shoved me to the side, slamming me face-first into the wall next to it with a grunt.\n\n\"Enough foreplay,\" she hissed, grinding her hips against my ass. Her right hand snaked around my hip and tugged my blouse free from my waistband before slipping down the front. Slowly moving over the thin layer of my panties.\n\nMy own breath came out in sharp gasps.\n\nJoanie chuckled. \"Is that what you want, baby? You want me to touch your pussy?\"\n\nI nodded, whimpering, my fingers clutching futilely at the wall.\n\n\"Like this?\" Her hand slid lower, rubbing the fabric against my hot skin. \"Mmm. I can feel that you're wet. Good.\"\n\n\"P-please...\" I closed my eyes and bit my lip. Mentally asked her to press harder. Whimpered again when she didn't.\n\n\"Ah, but you ran from me.\" She pulled her hand away. \"Don't move.\"\n\nI'd just taken in a shaky breath when her weight disappeared from my back. Then I moaned at her hands tugging my skirt down. My panties. Pulling my blouse up over my head. Her nose nuzzling between my shoulder blades before she released my bra. I was clawing at the drywall again when her hands slid around to cup my breasts, her thumbs and middle fingers pinching and rolling my nipples. Just when I thought she was going to bring me to climax with that simple motion, she bit my shoulder then licked at the spot.\n\n\"That's for playing hard to get. Turn around.\"\n\nThough in a daze, I obeyed and then collapsed against the wall. She'd removed her underwear. Was completely naked before me except for a trimmed landing strip on her mound. Her right nipple was now identical to her left. Her confidence seemed to waiver, though, because I saw her knees shake when her head dipped, apparently as she took in my now-nude body.\n\nWhen her eyes returned to mine, they were the brilliant green I'd grown to love. Her kiss was tender, as were her fingers that she stroked over my bare mound. Her left hand slid behind my neck and buried in my hair just as her right parted my lips and rubbed my clit.\n\nI cried out against her mouth, which she pressed harder to mine. Her hand fisted in my hair when I tried to pull away. And then I was staring at the ceiling because she'd slid two fingers up into me.\n\n\"Damn, Mer,\" she mumbled before thrusting her tongue into my mouth. She moaned and took a breath, adding, \"You're so fucking tight. Hot. And wet.\"\n\nWhile I was trying to think straight, she began fucking me with her fingers below and her tongue above. My whole body tensed at her thumb strumming my clit. And then I was coming, humping her hand.\n\n\"That's it, baby.\" She surprised me by suddenly dropping to her knees and lifting my left leg over her shoulder before she lapped at my pussy.\n\nThe shudders that had started to diminish surged again. I gripped her hair for support, my body now humping between the wall and her face. And all the while, her fingers continued to thrust inside of me.\n\nI remember coming again but not walking over to my bed. When I opened my eyes, Joanie was lying beside me on the mattress, the sheet and blanket bundled at our feet. She was smiling at me, stroking her fingers through my hair at my forehead.\n\n\"Hiya, gorgeous.\" She kissed my nose and then my lips. \"You okay?\"\n\n\"What day is it?\" I grinned at her when she laughed. \"I'm good.\"\n\n\"You are amazing, you know that? You came four times.\"\n\nI scrunched up my nose. \"I remember twice.\"\n\n\"After the two against the wall, when I got you to the bed, you were still having a lot of aftershocks. Started coming again. And...well...I hate odd numbers, so I had to give you a fourth orgasm.\"\n\nI let out a deep sigh. \"I've given you none.\"\n\nJoanie shrugged, brushing my hair off my shoulder before kissing me there. \"I'm not going anywhere.\"\n\nFor the longest time, we just stared at each other. Smiling. Stroking our fingers over faces and arms. Through hair. Testing the weight of the other's breasts. How our nipples reacted to being stroked or pinched. Were the backs of our ears sensitive? The dips of our waists? Curves of our hips? That juncture where thigh met torso?\n\nI wondered what she was thinking. I, at least, was still processing internally that she was not only here but naked in my arms. In my bed. She felt so warm...soft...and smelled amazing. Like the air just after a rainstorm. I wanted to drink her in.\n\nEventually, I leaned my head back. Caressed my thumb over her lips. She read my mind.\n\nOur mouths melded. We wrapped our arms and legs around each other. Skin to skin, heat and sweat built between us. Our bodies writhed to the sound of our moans interspersed with gasps when we came up for air. We rolled back and forth, shifting who's weight was on top. Drawing the other back when one of us touched a sensitive spot and the other twitched away.\n\nWe ended up with her on the bottom. I was kneeling over her, one leg between hers. My hands on either side of her head, and my mouth brushing lightly over hers.\n\n\"You are so beautiful,\" Joanie whispered. Her fingertips trailed over my cheek for the hundredth time tonight. A feeling I would never get tired of or forget. She wrapped a lock of my hair around two of her fingers and then rubbed the feathered ends over her cheeks. \"I love touching you.\"",
        "\"The feeling's mutual, sweetheart.\" I kissed her nose, smiling. Closed my eyes when her hand trailed over my hip. My very sensitive left hip. I flinched and settled my weight down on her. \"It's my turn now.\"\n\nShe blinked slowly at me, nodded, and laid her hands above her head.\n\nI leaned down and kissed her softly. Nipped then licked her lower lip. Repeated that a couple of times, loving how I could make her hiss and moan. I sat back on my heels, running my fingertips down the sides of her neck. Down her arms. My thumbs reaching out to graze her breasts on the way. Continuing down to her waist then back up. Reveling in her quickening breaths.\n\n\"Such a beautiful tease,\" she whispered with a little shake in her voice.\n\nI grinned and scooted back between her spread legs. Keeping my eyes on hers\u2014which had started to drift close\u2014I leaned down to kiss her stomach. Along her waist. Then I ran the tip of my tongue along the same path. Circled her belly button. I trailed more kisses around that gentle dip and moved over to her left hip...back to her right. Felt her body trembling beneath my mouth the whole time.\n\nJoanie's hands rested beside her head on my pillow, the fingers on her left hand slowly rubbing together. The stark white of the linens were in deep contrast to her black hair. Her beautiful eyes had glazed over. And the creaminess of her skin was tinged red at her cheeks, neck, and chest from our impassioned tussling. \n\nMy hair fell across her hips when I ran my tongue up and down her sides from hip to tit. Her skin was so soft, and her gasps and squirms made me moan deeply. But I could no longer resist the jewel-tipped peaks I'd been eyeing since I'd first revealed them over an hour ago. The moment I sampled them? Oh. My. God.\n\nHer breasts tasted heavenly\u2014clean and warm\u2014when I ran my tongue all over them. Caressing one swollen mound while I gently nipped and sucked at the underside of the other. Alternating. Repeating. I couldn't get enough.\n\nOne of her hands tentatively touched my head. Stroked my hair.\n\nI moaned again at her encouragement. Growled when I sucked her left nipple between my teeth and she hissed, her hand tightening in my hair. I'd not expected that to feel so good when she'd done it earlier. I almost expected her to pull my head back now. When she didn't, I sucked harder...flicked my tongue at her supple peak. Rolled it back and forth.\n\nThe right side took more time as I had to coax her nipple to pop back out again. It was a challenge I was more than happy to take on. And she seemed to thoroughly enjoy it, as well, by her ever-increasing sounds and her fingers flexing against my scalp.\n\nI could have continued worshiping her breasts for hours. I knew I probably would later. But right now? I wanted\u2014no, I needed\u2014to taste her spicy nectar that I could smell drifting up from her parted thighs. I'd been tempted to press my knee against her, but I'd not wanted her humping me while I paid homage to the beautiful swells I'd been dreaming about for almost a year.\n\nNow, it was time to bring her more pleasure. Like she had given me. Four times over.\n\nJoanie groaned when I abandoned her breasts. She seemed to know, though, that it was for a good cause because she let out a soft coo when I scooted further back.\n\nOnce more, a feeling of entering dark territory drifted over me. Doubt entered my mind that I'd be able to thoroughly show her everything I'd left pent up inside of me all these months. So much so that tension gripped my shoulders when I settled them between her knees.\n\nI bent to get my first up-close-and-personal smell, taking a deep breath. That was all at first. Baby steps. I wanted to draw this out. But she jerked and gasped as though I'd licked her. Another sniff had the same reaction from her. Then I realized my nose had brushed her mound each time.\n\nInteresting. She had a sensitive pussy.\n\nGrinning, I repeated the motion. This time, I intentionally rubbed the tip of my nose against her soft folds over her clit.\n\nHer hips jerked up into my face with her loud \"Shit!\"\n\nMy face was going to be sore later from all my smiling. But it would be worth it.\n\nI waited until she had set her ass on the bed again before lying the flat of my tongue along her folds. When she rose up with another cry, I pressed with my tongue, parting her. That earned me a \"Fuck!\"\n\nA combination of her movements and sounds and my own burning desire catapulted me from slow torture to diving in like a starving woman at a buffet. The trigger had been the taste of her on the tip of my tongue. Spicy and thick, I'd gathered just enough of her essence and swallowed. Apparently, feeding the beast inside.\n\nTime disappeared. There was only the soft skin of her mound and thighs under my fingertips. Her folds and clit under my tongue. Her scent and taste filling my head...driving me on. Her hands in my hair guiding me. Her body rippling from her first orgasm.\n\nThrough the haze of lust blurring all other thoughts, I heard her ask me to suck on her clit. I obliged, to which she growled. I nibbled on the mixed hardness and softness of that button, tasting more of her honey whenever I swallowed. That made her shake harder beneath me. But she jerked up and down when I used my tongue and my teeth at the same time. She was apparently as sensitive there as she'd been with me brushing her mound. It only spurred me on.\n\n\"Mer...Mer...,\" she kept mumbling when she wasn't moaning or accentuating the air with sharp cries.\n\nA quick glance up showed her head rolling from side to side. Her eyes tightly closed. Her hands clenched, as well.\n\nI released her\u2014earning me a deep growl\u2014and used my fingers to part her feathery-soft folds. Then I waited, just watching her face. Breathed on her but didn't otherwise touch her.\n\nSlowly, her eyes began to open. Her gaze seemed to lock with mine.\n\nI flicked the tip of my tongue up and down over her ridged ring.\n\n\"Fuck! Fuck!\" Her whole body arched, merely giving me more access. Which resulted in more cussing from her. More shaking. All interspersed with lip licking and heavy panting...from us both. \"Whatever you're doing...don't stop!\"\n\nNot one to disappoint, I moaned against her skin and continued.\n\nA new sound reached my ears the longer I teased her: whimpering. Then scratching. The latter I saw was from her clawing and gripping at my headboard. Not long after, she shook. Hard. I tasted cream on my tongue. I stroked my thumbs over her bared pussy...her clit. Continuing the torture her while she cried out my name.\n\nHer thighs were still trembling against my head when I eased my right middle finger up into her wet channel, whimpering myself from her heat. Her internal spasms made it a little difficult to stroke in and out. I paused only to slide two fingers into her as her cream increased. Then I curled the tips up. Gathered her clit between my teeth.\n\nJoanie fell into another spiral of slurred vulgarity that was music to my ears.\n\nI continued to stroke, ceasing to suck so I could softly encourage her. \"That's it, sweetheart. Doesn't that feel good? You look so beautiful. You're so fucking tight.\"\n\nTogether, we rode out her longest orgasm yet, making us even.\n\nHer body was still shaking when I pulled my hand free and crawled up beside her. Her eyes were open and staring at the ceiling. But they shifted, focusing on mine when I slid my fingers\u2014one at a time\u2014into my mouth and licked them clean. Her tongue darted out, her eyes shifting downward.\n\nUnderstanding, I pressed my lips to hers. Buried my fingers in her hair and tipped her head back. We continued to kiss absently until she trembled again. Then I tucked her head under my chin and just held her, stroking her back. Trying to ignore the goosebumps on my arms when her shuddering breaths tickled my shoulder.\n\nI knew the moment she'd returned to me when her arms slid around my waist. \"Welcome back, sweetheart.\"\n\nWarmth from her deep sigh caressed my skin. Then she lifted her head. \"That was amazing.\"\n\n\"Mmm hmm.\" I kissed her forehead. \"I'm glad you enjoyed it. I sure did.\"\n\n\"No one has gone down on me in years.\" Her eyes clouded over, her lower lip quivering.\n\nI raised my eyebrows. \"Not even\u2014\"\n\n\"She was very...particular. Preferred fingers only. Though she insisted I be shaved.\" Joanie bit her lip, closing her eyes.\n\n\"So you didn't go down on her, either?\"\n\nShe shook her head.\n\nI kissed her softly, still flabbergasted. All I could keep saying was, \"I'm so sorry, sweetheart.\"\n\nJoanie wrapped her thigh over my hip, drawing us closer together. \"Thank you, Mer. For everything.\"\n\n###\n\nFor the first time, I wished I could take the entire summer off. Joanie spent the weekend with me after our first night together. Moved in officially the following week. I took that two-week vacation, but we rarely left the loft.\n\nWe were in love. Catching up on lost time. It was always amazing, whether we were in bed, the shower, against the wall, or on the kitchen island. We couldn't get enough...touching and kissing and finding new spots that made each other melt.\n\nBut it was more than just the sex. We had conversations...some deep, others nonsensical, all meaningful. Passed time just staring into each other's eyes. Luxuriated in falling asleep with our bodies intertwined. Cuddling while watching TV. Cooking meals together. Being domesticated.\n\nGetting up that first morning back to work was the hardest thing I had to do since telling her to go honor her family.\n\nJoanie was still asleep, lying on her stomach with her head turned away from me on the pillow. Her hair was slightly messy. Perfect. One hand was up by her head, the other relaxed by her side. The sheets were mostly crumpled around her, revealing her bare back and one knee sticking out...the tip of the Yin and Yang on her right butt cheek barely visible.\n\nI rubbed my hands up and down my arms, remembering when I'd seen the tattoo for the first time.\n\nIt had been later that night after we'd first had sex. We'd been lying with our limbs loosely entangled when she said she had to pee. I'd been entranced by her bare ass as she scurried away, the popular black-and-white swirl not registering right away. When it had, she'd already closed the bathroom door partly, blocking my line of sight.\n\nShe'd come back to find me sitting upright, shock still plastered on my face. She'd asked if I was all right. Sat beside me and wrapped me in her arms, rocking me. Telling me to talk to her when I was ready.\n\nSomehow, I managed to voice the question constantly running through my head: Why hadn't she said anything all night about the tattoo? She'd seen my backside hours earlier. My own ink. The polar opposite of hers.\n\nOn my upper-left ass cheek was the same symbol except with the colors and swirls reversed. I'd tried to explain that I had gotten mine that way because it was a reminder that I wasn't like everyone expected me to be. I was a non-conformist.\n\nJoanie had just hugged me tighter and whispered that she had been waiting for the right moment to talk about it. The sight of seeing my tattoo had floored her as much as hers had me. She'd just hidden her surprise better. Her tattoo was more recent...acquired when she'd gone back to Italy as a constant reminder of the connection she'd felt with me: me being the light to her darkness.\n\nWe shared a spooked look when she told me her turtles were named after the symbol...and I said we once had two bearded dragons with the same names. Then we had a good laugh over the bizarreness of the situation.\n\nI'd found her tattoo was one of her sensitive spots, especially if I ran my tongue over it. It had been fun to tease her while we talked about getting matching tattoos on our other ass cheeks. A set of turtles to represent us, the perfect pair: hard on the outside but soft inside. She'd suddenly flipped me onto my stomach and laid her body over mine, tickling me until I cried for mercy...then stroking her fingers inside me from behind while I begged to come.\n\nNow, as I stared at her naked body in my bed, I didn't want to leave her. Ever.\n\nIt suddenly felt like the party had ended. We'd been playing house, and now we had to be adults. At least I did.\n\nI kissed her shoulder, took a shower, got dressed, and grabbed some breakfast before heading out.\n\nThe hours drug on. I kept imaging Joanie sleeping. Moaning while we made out...had sex. Her making me moan. At quitting time, I rushed home to find her waiting with arms wide open. Eager to get me out of my clothes. We made it as far as the couch.\n\nI knew it would get easier as the days passed. I kept reminding myself that she was here now. She said she wasn't going anywhere.\n\nBut something still niggled at the back of my mind that we were trying to make the fairytale come true, and that just wasn't how it worked.\n\nThe magic had to run out eventually.\n\n###\n\nReally? I stared at my work calendar on the computer screen. Scrolled backwards. Counted forwards. Blinked and shook my head.\n\nSure enough. Joanie and I had been living together for three months now.\n\nIt had been almost that long since she'd gotten a job as a financial planner at a local investment agency, too. We'd easily settled into a routine. Thankfully, our schedules matched up, which always allowed us to eat dinner together. Sometimes, we were able to make lunch plans, too.\n\nWe'd agreed we weren't really into the club scene. Evenings and weekends had been spent attending cultural events in Northampton and the surrounding areas. Museums. Live theatre. Other scenic attractions. If we were out at night, it was dinner and cocktails or to see a local band. Several of those occasions had been spent with our friends or coworkers. We had a nightlife, it just wasn't the constant party scene of the younger generations.\n\nTwice, one of Joanie's old school friends\u2014Julian\u2014was in town for a weekend and joined our soiree. He was an emerging artist who took beautiful, poignant photographs of urban people and places. He'd said growing up in the projects had taught him to appreciate the art around him while others thought it looked old and worthless. And he, being gay himself, had been Joanie's only confidant when she'd struggled with her sexuality throughout her adolescence. After she came out in college at Amherst, he'd taken it upon himself to also be her stylist, helping her choose an image and wardrobe she was most comfortable with. I had him to thank for her penchant of fitted suits.\n\nHe was actually the reason I'd been looking at my calendar before I'd noticed the date and gotten sidetracked. Joanie had texted to see what my afternoon was like. Julian was having a little VIP get-together before his gallery showing in Holyoke tonight, and Joanie wanted to make sure we were available to attend. We had already planned to go to the showing\u2014and buy a print for the loft\u2014but I'd have to leave work early to go home and change in order to make the VIP party. Thankfully, it was Friday and a slow day.\n\nI clocked out at three-thirty and made it home in plenty of time to shower and pull on the green A-line dress Joanie had found on our excursion to a vintage shop last week. She'd said it complimented my hair perfectly. I'd thought it matched her eyes better and told her I'd love to see her try it on. I'd gotten a sideways glare with a smirk as a result.\n\nThat was the only downside to her preference of wearing pants: we couldn't share girly clothes. Now that we were together outside of the office, I got to see what she chose for everyday wear. Maybe I was being stereotypical of her being a soft-butch lesbian, but I wasn't surprised to see that it was usually khakis, a tucked-in chambray shirt, and Doc Martens. I wasn't complaining. She had a fine ass and long legs, so whatever she wore looked amazing on her. Including her new hairstyle where she buzzed the sides and wore it longer on top.\n\nBut I'd been surprised by the hat she'd been wearing ever since our first date. The accessory was perfect with her haircut and the lines of her face. It just wasn't something I'd gotten the impression she liked after seeing her almost every day for six months last year. Her explanation had been even less expected but very touching: it had belonged to her grandfather. Her grandmother had given it to him on his first day at the family business, and he'd worn it every day to work for fifty-four years. He'd given it to Joanie as a parting gift, a thank-you for honoring him. She now wore it to work\u2014and everywhere else she could\u2014as a reminder of his dedication...affection. Plus, she thought she looked fucking sexy wearing it. I had to agree.\n\nTonight, she'd chosen a dark gray suit with a lighter gray dress shirt. I smiled when she walked up to me while straightening a green tie that matched my dress. I gripped the tails, pulled her to me for a quick kiss, and then went back to applying my makeup. In the mirror, I caught her smirk and shake of her head while she fixed her tie again. Then I was smirking\u2014licking my lips\u2014when she set her now-signature black fedora on her head and adjusted it just right.\n\nThe VIP party was just getting started when we arrived. We exchanged hugs with Julian. Teased him about all the art lights that would be shining off his bald head. Then he put an arm around each of our shoulders and proceeded to parade us around, introducing us to all of his friends and family as though we all came together as a package\u2014the most sophisticated-looking inverse Oreo. I won't deny that I was glad when we were finally released to retrieve a cocktail and snag some of the horderves in the small reception area of the gallery.\n\nOnce the show was in full swing, Joanie and I wandered around arm in arm. Chatted with other guests. Perused the various enlarged photographs. Tried to decide which to buy for the wall above the couch.\n\nJoanie liked a landscape of an iron framework situated next to train tracks. It may have been a building at one time, but all that was left now were an odd ratio of vertical-to-horizontal rusted, red beams. Wild plants wound and draped the structure in a canopy of green, allowing the sun to peek through in places between clusters of leaves.\n\nI was partial to a smaller black-and-white print of a stone bridge over a sparkling river with wildflowers lining the banks on either side.\n\nWe compromised and decided to get both, the bridge print to go above our bed.\n\nI offered to go make the sale when one of her friends stepped up to talk by the ironwork piece. There was someone else ahead of me already talking to the gallery owner, so I had to wait my turn. Transaction finally completed, I was on my way back to my girlfriend when I heard a distinctive voice say she forgave someone else.\n\n\"Why are you here, Davina?\" Joanie asked, confusion evident in her voice.\n\nI froze next to the brick pillar separating me from the two women and our latest living room decoration, clutching my purse tighter to my chest.\n\n\"I am a lover of all art, not just fashion. You know that.\" There was a pause, during which Joanie probably rolled her eyes. I know I did. Then Davina continued, \"I've missed you, Joanie. I've been reconsidering everything that happened. And I am willing to take you back.\"\n\n\"That's not how it works, Davina,\" Joanie scoffed. I could picture her shaking her head now. \"It doesn't matter, anyway. I'm with Meredith. Happily.\"\n\nDavina scoffed this time. \"Mered\u2014 Wait, your old boss? The redheaded bitch? Ha!\"\n\nI scowled at the jab.\n\n\"Yes, my old boss,\" Joanie answered with a slight growl. \"Do you have a problem with that?\"\n\n\"Hmm. And are you in love with this Meredith?\"\n\nI held my breath, something in my brain shouting that it had all been too good to be true with Joanie. That this was the moment I'd been dreading. Even though I didn't want to believe it, I still needed to know. To hear her say it.",
        "\"I\u2014\"\n\nSomeone suddenly coughed nearby, making me miss Joanie's response.\n\nShit! I fought the urge to step around the pillar and show Davina just how much of a bitch I could be.\n\n\"What does that matter?\" Davina's voice didn't sound as crass. \"I really want to know.\"\n\nMy exhale came out shaky. It sounded as though she'd not liked Joanie's response. I closed my eyes and leaned my head against the cool bricks, concentrating on their words.\n\n\"She gave me the freedom to choose for myself,\" Joanie said.\n\nThe other woman scoffed again. \"I gave you a choice.\"\n\n\"No, Davina, you gave me an ultimatum. Just like my grandfather did about getting an education. My whole life, my family and friends...everyone has made me make hard decisions. But never has the result been for my benefit. What I want.\"\n\n\"I don't\u2014\"\n\n\"For the first time, I was given the opportunity to choose for myself. Meredith did that for me.\" Joanie sighed. \"I didn't come back to America because she asked me to, Davina. I came back because I wanted to. I needed to.\"\n\n\"So you really love her?\"\n\n\"Davina, I love her with every fiber of my being. I did almost a year ago...eight months...last week...this morning...right this very moment. And I will continue to love her until the day I die. Nothing will ever change that. Because it's what I choose. For me. I choose to love Meredith Swallow.\"\n\n\"Then this is goodbye, for good?\"\n\n\"Yes, Davina. Goodbye.\"\n\nThe sound of heels clacking on the tile floor echoed before the spindly woman\u2014who looked like Cruella De Vil tonight in her black-and-white getup\u2014stalked past me. I watched her weave through the crowd in the direction of the front door.\n\n\"It's about fucking time you told that bitch off, child,\" Julian said with a chuckle behind me.\n\nI stepped away from the pillar. Both Joanie and Julian turned towards me slack-jawed, their eyes wide. They were probably wondering how much I'd heard. I glanced at my girlfriend, her friend, and then back to my lover. The words she'd exchanged with her ex continued to ring in my head. What they really meant...to me.\n\nThe depth of her love was vast. It had lasted all this time. Would continue to do so. I realized that now.\n\nShe wasn't like all the women I'd been with before her. She was the real deal. I'd set her free, and she'd chosen to come back. She'd already proven to me that love-at-first-sight did exist. And now, as I cupped her cheeks and leaned in to kiss her while Julian clapped beside us, I admitted one more truth.\n\n\"I was wrong, Joanie Maserati. Fairytales really do come true.\"\n\n\"I know,\" she whispered and then kissed me back. \"I love you.\"\n\nI smirked. \"I know.\"\n\n###\n\n\"Wait, Jenna,\" I said Tuesday night from where I'd been reclining on the couch with my girl. I put my finger to my lips and turned on the speakerphone. \"Run that by me again?\"\n\nThere was a loud sigh from my older sister, but she repeated what she'd just said.\n\n\"Kat got fired from her job at the bank yesterday. Her boss said it was based on her annual review, but that's bullshit. She's the most dedicated and responsible person I know. Why wait a whole year if there are problems? Anyway, it all happened after he found out we were engaged, so it's obvious what it's really about.\"\n\n\"Are you looking for a good lawyer?\" I gestured for Joanie to pull up the contacts on her phone. One of her old classmates dealt with sexual harassment in the workplace.\n\n\"No, I'm looking for a job for Kat...in Northampton,\" Jenna laughed. \"She doesn't want to sue. I've learned before not to push her to change her mind when she's adamant about something. So I had this crazy idea that we could move out east to be by you.\"\n\nI cringed. Due to my fear of losing Joanie, I had procrastinated telling my sister about my own relationship. I stuck my tongue out at my girlfriend's amused look and said, \"Listen, sis, just because I told you I'm gay doesn't mean I'm into lesbian orgies. I'll leave that kinky shit to you and Kat. Though, I won't deny I'm intrigued by your fianc\u00e9e's genital piercing.\"\n\nJoanie flicked her tongue out like she was teasing that little silver ring and ball I'd been told about earlier this year. I swatted her hand, giving her a dirty look while trying not to laugh.\n\n\"We're not into orgies, either,\" Jenna snorted from the other end. \"But the kinky shit\u2014\"\n\n\"Uh...so...I take it you want to move out here?\" I rolled my eyes at my lover, who was giving me pouting lips while showing me the note she'd written on her phone that said she wanted more details about the 'kinky shit.' Just because we'd added blindfolds and a set of rope cuffs to the vibrator and strap-on in our toy box didn't mean we were into BDSM. Jenna had explained that much to me; the kinky lifestyle encompassed so much more than a few pieces of light bondage items. Her and Kat were into more of that lifestyle; I was not. I cleared my throat and added, \"You're going to need a place to live, Jenna.\"\n\n\"And a job for Kat,\" she reminded me, as though I'd forgotten.\n\n\"What's your pleasure for the first one?\" I read off what Joanie had changed her note to. \"Loft, two-bedroom apartment, townhouse, duplex, single-family?\"\n\n\"We've been doing the apartment life for a few years. I'd like something with a yard...a deck we could sit out on. Duplex sounds to be ideal. Private but with dedicated lawn care. I'll shoot you an Email with all the specs we're looking for. Our price point. We're okay with renting if necessary.\"\n\nJoanie stopped scrolling through the realtor app I had seen her pull up and typed another note. I relayed it to my sister. \"You said Kat worked at a bank?\"\n\n\"Yes. As a personal banker.\"\n\n\"Patty!\" Joanie and I both mouthed.\n\n\"Of course!\" I added aloud. I hid the face of my phone against my chest and started to brainstorm with Joanie in whispers.\n\n\"Hello? Mer?\" Jenna called out.\n\n\"Shit! Sorry, sis.\" I smacked Joanie's leg when she fell over on the couch laughing then winced at the loud slapping sound.\n\n\"Are you okay, Mer?\"\n\n\"Yeah, sorry. Mosquito. Um, anyway. Patty, the secretary in my office, was just saying at dinner last week how the admission office is still looking to hire someone fulltime to balance out the part-time students. Send me Kat's resume. I know the lady in charge of hiring.\"\n\n\"Thanks, Mer. If it doesn't work out, she can look when we get out there.\"\n\nJoanie turned the screen of her phone to me again, and I read it out loud. \"Do you have a timeframe for when you're thinking about coming?\"\n\n\"ASAP,\" Jenna said. \"I had to resort to blackmail to get my boss to agree that I could work out of the Amherst office. I'll put in the official transfer request tomorrow at work. I had wanted to check with you before going forward.\"\n\nJoanie tapped my hand and showed me another note.\n\n\"Send that Email as soon as you hang up. I...uh...think I have something for you that will be perfect, but I need to compare your specs.\"\n\n\"Will do. Thanks again, Mer.\"\n\n\"No problem,\" Joanie mumbled then stood. A second later, she was walking away, dialing someone.\n\nI switched off the speaker phone and finished up the call in private, finding out what else had been going on in my sister's life. I silently thanked God that I hadn't spilled my secret. But it would be out soon enough.\n\n###\n\nOn an unusually crisp, autumn Friday, I was standing in my parka on the front lawn of a gray duplex in one of the quainter sections of town. Joanie had really come through with this gem, a rental where the other side was occupied by the owners of the dual residences. It had a fenced-in backyard, a small patio area, and a balcony off the master bedroom upstairs. Everything Jenna had requested, and then some.\n\nKeeping one eye on the two men unloading the moving truck, I told the one standing in front of me holding a box labeled 'office' where to take it based on the clipboard of notes Jenna had sent me. I'd spent the last thirty minutes doing the same thing. Joanie had been gone maybe half that time to get us hot coffee and fresh pastries from our favorite bakery when my sister and future sister-in-law rolled up to their new digs.\n\nJenna had barely put the car into park before she was running across the sidewalk and throwing her arms around me. \"Oh, my God! I've missed you so much!\"\n\nI gasped, hugging her back, smiling widely. \"It's about fucking time you came to see me for once, big sis.\"\n\n\"I love you, too.\" Jenna pulled back, her eyes sparkling. \"I can't believe this is actually happening. Thank you so much for everything you've done!\"\n\nWe had just disengaged and I'd caught my breath when I saw a slender woman the same height as my sister approaching. She had auburn hair a few shades darker than my own and was carrying a coat although she was wearing one. Her smile made her eyes look like pools of melted chocolate.\n\n\"Kat,\" I barely breathed. She was beautiful. The pictures my sister had sent me over the past two years had not done her justice. No wonder Jenna had been in love with her for over two decades.\n\nKat stopped before us and tossed the extra coat at Jenna. \"Put this on, or you'll get pneumonia.\"\n\nJenna shrugged on the coat and then took her fianc\u00e9e's left hand. \"Mer, this is Kat.\"\n\n\"It's good to finally meet you,\" Kat said as she reached out her right hand to me.\n\n\"None of that bullshit. We're going to be sisters.\" I gave her a huge hug and a kiss on the cheek. Then I stepped back and smiled broadly. \"Congratulations to both of you. We can make chit-chat later. It's freezing, and the guys could use some help now that you're here.\"\n\nKat rubbed her hands together. \"I could use some coffee. We should have packed the Keurig in our car.\"\n\n\"Not to worry.\" I dug my phone out of my pocket, dialed Joanie, and said, \"They're here, sweetheart. Okay, see you in a few.\"\n\nBehind me, someone laughed. It was musical. Definitely Kat.\n\nI turned back to the girls. \"Reinforcements are on the way with refreshments.\"\n\nJenna cleared her throat. \"Sweetheart?\"\n\nShit! Shit! Shit!\n\nMy cheeks burned even hotter, and I couldn't blame it on the air. \"Uh...yeah. Did I forget to tell you about Joanie?\"\n\nJenna had her arms crossed now. \"Joanie, as in your intern?\"\n\nKat was still grinning from ear to ear while she jumped up and down, probably to keep warm. \"Um, maybe we should continue this inside, girls?\"\n\n\"Good idea, Kat.\" I looped my arm through hers and turned her toward her new home. \"I'm so glad you decided to move here. I know we're going to be good friends. It'll take a little bit, but you'll adjust. I can take you downtown tomorrow and show you all around. Oh, and I have the paperwork for Smith College. The job is yours, it's just a formality.\"\n\n###\n\n======= EPILOGUE - 2 YEARS LATER =======\n\nEverything had gone perfectly so far.\n\nThe venue. The flowers. The decorations. The weather.\n\nOutside, I knew all of our friends and family were in their seats at Look Park's Garden House. That Julian and Kat were seeing to anything Joanie needed in the other room as her \"man of honor\" and bridesmaid, respectively. But in here, my matron\u2014Jenna\u2014was finishing my makeup. And my mom was trying to keep her granddaughter and my one-year-old niece, Essie, occupied on the couch without wrinkling her flower girl dress. My bridesmaid, Patty, had gone to find Dad.\n\nI tried not to fidget while Jenna swapped places with Mom who did that thing where she patted your hair or a part of your clothing to make sure everything was in place without actually touching or adjusting anything. Air pats, she called them. Apparently satisfied, she told me to turn to face the floor-length mirror.\n\nMy lower lip trembled at seeing my simple tea-length, satin, strapless gown with a crystal-embellished belt in navy. I'd not wanted to go with the old adage of \"something old/new/borrowed/blue.\" But since I had added the little bit of color and bling to my dress, I knew it had pleased my mom when I'd asked to wear her blue-and-crystal jewelry from her own wedding. With everything in place and my hair loosely pulled back and up with crystal combs, I looked like a different woman.\n\nThe pieces of the fairytale had continued to fall into place. Time and again, I'd seen that Joanie's love for me was undying. Especially since she had proposed to me on that same veranda of Mulino's four months to the day of our first date.\n\nWe'd wanted to wait to make it official until after Kat and Jenna got married. But then my mom fell and broke her hip, Kat got pregnant, and we flew to Italy for Joanie's grandmother's funeral. We'd had a scare with a psycho coworker of Jenna's right before Essie came into our lives. Then our plans were further delayed when we helped Jenna and Kat move into a bigger house.\n\nBut now? Now it was my turn to shine.\n\nUs three ladies were playing a lively game of peekaboo with Essie when the Colonel finally knocked on the door to our room.\n\nI barely heard Dad say that everyone was ready for us. I was too in awe of his uniform. He looked so...regal. But very fitting to give away his youngest princess, the nickname he'd always called us girls. I'd just never felt like one until now.\n\nJenna had insisted he wear it since she'd chosen to not have him give her away at her wedding as Kat's dad wasn't alive to do the honor for her. The grin on my dad's face when he looked down at me at that moment said it all. He was proud of me. And then he'd whispered those words in my ear when he bent to kiss my cheek.\n\nThe nerves didn't set in until we were standing at the end of the aisle just out of sight of the guests and the music started. Dad must have felt me shaking because he squeezed my hand. I squeezed back and breathed a sigh of relief that I'd chosen to wear flats today. I didn't need to trip over my own two feet on the way to finally marry my version of Prince Charming.\n\nAhead of me, Mom carried Essie, who tossed all of the flowers from her basket before they'd reached the third row of chairs. Thankfully, Mom got her to keep blowing kisses until they reached the front.\n\nKat and Patty started walking down the aisle, followed by Julian and Jenna. Or rather, they all walked and Kat waddled. Eight months pregnant with their son, my sister-in-law still looked beautiful in her blue-and-white print dress. Jenna was equally stunning in her navy pantsuit. They were such an amazing couple. I was so lucky to have them close by.\n\nPatty and Julian had been overly thrilled to join our wedding party. We couldn't have asked for better friends who'd only grown closer over the years. And we couldn't have made this event as beautiful as it was without them.\n\nBut the happiest person\u2014besides myself and my fianc\u00e9e\u2014had to be Lorenzo, Joanie's grandfather. He'd brought the entire Maserati family overseas to celebrate the union of his youngest granddaughter. Last night, I'd teased him and said, if he thought he was taking his hat back with him, he was sorely mistaken. I'd never forget the way his face crinkled around his eyes and mouth at his rich laugh.\n\nOur guests rose suddenly. Turned to us. Dad stiffened his back...his arm beside mine. My feet moved on autopilot, my head somewhere in the clouds.\n\nEverything disappeared except the radiant woman at the end of the white aisle. I couldn't stop smiling at my bride-to-be. Joanie's black tux with a tie in the same color as my belt was striking. Her fedora\u2014adorned with a navy band\u2014was tilted to the side and made her look so damn sexy. Her green eyes never faltered, even when I felt mine rim with tears the closer I got. Then I was standing before her. Loosely gripping her fingers.\n\nAs the pastor spoke, the rest of the world trickled back in until I could see that Julian and Kat kept dabbing their eyes from where they stood next to Joanie. Hear Jenna sniffling behind me. Feel Joanie's hands respond in turn when I clenched and released mine. I tried not to laugh with the others at the occasional, gleeful babble from Essie who kept moving from my mom's lap to my dad's then back again.\n\nWe said our vows and exchanged our rings without any hiccups or tears. But I realized I was holding my breath when the pastor told us we could kiss. Thankfully, Joanie was more with it. She reached up and stroked the back of one hand across my cheek until I exhaled. Then she cupped my face, slowly leaning in to brush our lips together.\n\n\"Oh, shit!\" Kat cried.\n\nMy sister yelled, \"Oh, fuck!\"\n\nA collective gasp spread through the guests.\n\nJoanie and I turned to see Kat standing with her mouth agape, her hands cradling her extended belly, and the front of her dress soaked through.\n\nA second later, Julian chuckled. \"I think your water broke, child.\"\n\n---\n\n\"This is not how I expected to spend my wedding night,\" Joanie whispered, her thumb stroking the back of my right hand.\n\nI glanced at the clock over my niece's head while she slept against my left shoulder.\n\nJenna had insisted on taking Kat to the hospital by herself and leaving Essie with her parents while they stayed behind for the reception. She said that the show must go on, and I get to have the father/daughter dance with my dad...Joanie with her grandfather. We were given progress reports hourly by text, which we relayed to our guests between laughing, eating, and dancing. When the festivities were over, Dad had insisted on staying to help clean up and us women go wait for the latest Swallow to be born.\n\nKat had been in labor for about six hours. We'd been here for the last one. And the nurse had been saying for thirty minutes that it could be 'anytime now.'\n\nFive minutes later, Dad texted that he was on his way to sit with us. I'd barely put my phone down when Mom popped her head out of the double-doors with a huge grin to tell us Evan James Swallow had just been born. Both he and Kat were doing great, and we could visit them soon.\n\nI smiled at my beautiful wife, still in awe to call her that. \"You do realize, by now, what you've signed up for by marrying me, right, sweetheart?\"\n\n\"I know, baby.\" Joanie lifted my hand to her lips and kissed it. \"And I wouldn't trade this fairytale for the world, Meredith Maserati.\"\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "femme",
        "first time",
        "lesbian sex",
        "lesbian wedding"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/i-kissed-a-girl-ch-11"
}