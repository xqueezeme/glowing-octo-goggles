{
    "title": "Home for Horny Monsters Ch. 42",
    "pages": [
        "Hi all! Here it is, the finale of Book Three!\n\nIf you're new to the story, start at Ch. 1. This is a terrible place to jump in blind.\n\nReturning reader? Welcome back, I hope I did the ending justice! I have already started on Book Four, so no worried emails please :)\n\nAs always, thank you for your comments, reviews, etc. This community is amazing, and I couldn't have gotten this far without you. Book Three is currently somewhere around 160 thousand words, and I couldn't have done it without your support. You all rock.\n\nKeeping this brief so that you can hurry up and see how it ends!\n\nThe World\n\nYuki stood by the back door, her eyes on Naia's fountain. The nymph was currently absent, resting in her spring.\n\nUnstoning the others had taken some time. After reviving Beth, the minotaur had been next, and it had taken almost everyone to calm the beast down. Scowling, he had stormed back into the Labyrinth, disappearing behind its thick, metal doors. Beth had been unable to follow, still weak from her transformation. Sofia had simply collapsed, holding her sides tightly.\n\nNaia, after a quick kiss with Mike, turned into water and vanished.\n\nAshamed, Yuki had spent the next day or so helping Zel make preparations to begin restoring the centaurs. Beth described the ordeal as instantaneous, meaning that the men and women of the herd were frozen in time, and would likely come out swinging. Tink was helping build something similar to what she called a cattle-chute, which would stabilize the centaurs and prevent injuries upon awakening.\n\nYuki had dedicated a solid chunk of her time to finding the key to the wardrobe. It had been difficult, but she eventually found it buried beneath a portion of the front porch that hadn't collapsed. She had given it back to Mike, who had smiled and simply handed it back.\n\n\"You hold onto it,\" he told her. \"We don't really need it anymore, do we?\"\n\nThe next day, Tink had given her a chain to put it on. Yuki now wore it around her neck, as a memento. She found herself touching it often, thinking about what it must have taken for Emily to find the strength to turn the key, locking Yuki away for good.\n\nHowever painful those memories were, there was still one more thing to do, and she couldn't quite bring herself to do it yet. Standing at the back door, she took a deep breath and took a step forward. It was a path she had taken many times before, to a place she had spent countless hours. Now, though, she felt like a stranger, and couldn't help but to think back to a better time.\n\n\"Hey, Naia?\" It was a bright summer day, nearly thirty years ago. Yuki could smell the blossoming flowers in the garden, and was lying on her back on the fountain's edge, watching birds and insects swirl overhead.\n\n\"Yes?\" Naia was behind her, floating on the water. Ever since Yuki had arrived, the fountain had quickly become her favorite place. The inside of the house was okay, but it was often noisy and she didn't like how confined she felt within the walls of the house.\n\n\"I was wondering. Emily asked me if I would be willing to travel with her and find others. Like me.\"\n\n\"And? What's your question?\"\n\n\"What if I say no?\" The world outside of the house was suddenly so scary now that she had somewhere she finally felt safe. Over the last few weeks, her mind had been able to process all of her close calls, the times she had almost been caught. The thought of stepping back out into a world like that was scary, and more than a little intimidating.\n\n\"Then say no. She isn't going to make you leave because of it.\"\n\n\"Are you sure?\" Yuki rolled over. \"I mean, really sure? Because I don't really want to go, but, at the same time, I've noticed that everyone else here contributes.\" She caught a glimpse of fairy lights as they chased each other through the garden, Cerulea and Olivia giggling before disappearing through an open window of the house. Seconds later, the sound of breaking glass was followed by a stream of goblin curses, which made her laugh. \"Well, almost everyone.\"\n\n\"Believe it or not, everyone who lives here has a job that they do. It might not always be obvious, but it's how the house functions.\" Naia sat up and ran her fingers through the fur between Yuki's ears. \"But just because Emily asked doesn't mean that it has to be the job you end up with.\"\n\n\"What's your job? Like, I get that you're the spirit of the fountain, but what is the big thing that you do?\"\n\n\"Oh, I'm kind of like a guide. When a new Caretaker comes along, I can tell if they'll be a good fit, and then use my magic to bind them here.\"\n\n\"Have you ever screwed up?\" Yuki looked into Naia's eyes. \"Like, what if someone messes up their job?\"\n\n\"So far? No.\" Naia smiled down at her. \"It's not a decision I make. It's the house who chooses. Sometimes the Caretaker can hunt around for their successor in advance, but it's ultimately the house's choice.\"\n\n\"Well, then, what's the house's job?\"\n\n\"That's a very good question.\" Amymone had chimed in, her back against the fountain wall. The dryad was leaning against the opposite wall of the fountain, which was right at the edge of her tree's roots. Her head was still buried in the book that she was reading, her long, green and brown hair cascading over her shoulders. \"I think the house is up to something, personally, but my sister would tell you that it's to protect the others who live here.\"\n\nNaia threw the dryad a dirty look. \"Ignore her. She's just being snotty.\"\n\n\"Why do you think it's up to something?\"\n\nAmymone chuckled. \"Just a feeling I get. I wish I could go inside and see for myself what the fuss is about. Do you know that it's impossible to count all the rooms? Try it sometime. Just go through and count them. You'll always find that you forgot about one, or somehow counted one twice.\"\n\n\"That's not true,\" Yuki said. \"I can easily count them all.\"\n\n\"Can you?\"\n\n\"Stop it, Amy, you're scaring her.\"\n\n\"I'm not scared.\" At least, she didn't think she was.\n\nAmymone let out a sigh and set her book down on the edge of the fountain. She turned around and looked at Yuki. \"I finished another one. Do you suppose you could grab me another? A random one from the garage will do.\"\n\n\"Uh, yeah, sure.\" Yuki picked up the paperback and looked at it. \"You sure do like to read, don't you?\"\n\n\"I don't get around much.\" Amymone stood and stretched, her dark limbs cracking. \"Though holding the processed carcasses of my siblings is still a little disturbing.\"\n\n\"Processed... carcasses...\" Yuki looked at the book in her hand.\n\n\"She's just fucking with you,\" Naia told her. \"Not every tree has a dryad.\"\n\n\"Not anymore,\" Amymone grumped.\n\nThe nymph rolled her eyes. \"She's being dramatic on purpose. It's a bad habit she picked up from her books, I'm sure.\" She splashed her sister. \"Her job is to help maintain the plant life. Did you know she helped grow some of the stuff in the greenhouse?\" \n\n\"Really?\" Yuki asked. The greenhouse had fascinated her, but Emily had made it off-limits to the others. Apparently some of the flora was dangerous, not least of all the Mandragora. Even while docile, the tendrils of the plants liked to grab at Yuki's feet when she wasn't paying attention.\n\n\"Yeah. Sometime after the house was built, but...\" Amymone went blank for a second. \"Apparently that's all I'm allowed to remember on the subject.\"\n\n\"Is it weird? Forgetting things you've known forever?\"\n\nNaia nodded. \"It is, but it makes it that much more fun when you get to remember them!\"\n\n\"Okay, Pollyanna, settle down.\" Amymone put a hand on her hip, cocking her head impatiently.. \"If you don't mind? A new book?\"\n\n\"Oh, right.\" Yuki held the old book to her chest. \"Do you care which one?\"\n\n\"Nah. Put that one in the box by the door and just grab one out of another box. Emily keeps plenty of spares in there for me to read, so as long as it isn't part two in a series or whatever, it's fine.\"\n\n\"Sure, okay.\" Yuki walked into the garage, following Amymone's instructions. She picked a book at random with a strange ship on the front and returned it to the dryad. Yuki sat on the edge of the fountain.\n\n\"Thanks,\" Amymone said, then walked back to her tree and sat at the base. Within a few minutes, the ground near the dryad had sprouted clumps of wildflowers.\n\n\"Ooh, you picked her a good one,\" Naia told her. \"My sister is a sucker for science fiction, by the way. She likes reading about the stars and other planets and stuff. Helps make her feel like the world is a lot bigger than it really is. She never did take to being stuck in one place very well..\"\n\n\"I see. So Emily brings her books?\"\n\n\"That's Emily's job. To take care of us, meet our needs, maybe even make us happy.\" Naia patted Yuki between the ears. \"Has anyone ever told you how soft your fur is right here?\"\n\n\"No. No they haven't.\" Yuki watched the dryad for several more minutes, contemplating. How many other creatures were like her, hiding yet hoping? When brought here, would they see the love and care that the others had? It was a lot to think about, but now she wondered if it was something she wanted to help others find, too. \"Maybe I will travel with Emily. Help keep her safe. That's something I could do.\"\n\n\"Only if you wish it.\" Naia planted a kiss on her forehead, the first of many. How many days and nights had Yuki sat out here, lying on the grass between the two of them? Amymone spent several hours helping Yuki learn to read english, and even do some basic earth magic. Naia had been her confidante, with Amymone always willing to toss in her two cents worth. Did Naia feel that loss? Was she even aware of what it was she was missing?\n\nWhat would it have been like if Yuki could forget Emily? Back in the present, she held up one of her tarot cards, wiping away the tears that blurred her vision.\n\nIt was the Lovers card. Depicting a couple standing across from each other with eyes locked, it was a card containing enough magic to make two people fall in love, or at least think they were. After she had created the Death card, Yuki had spent months working on this one. At the time, she didn't know which one she was planning to use, but that desperate part of her had wanted Emily back so badly that she felt it had been a worthwhile investment, an opportunity to reclaim what had been lost.\n\nNaia seemed blissfully ignorant of her loss. Yuki wondered what her life would be like if Emily could be erased in such a manner from her own mind, a mysterious gap between then and now that her brain filled in with fiction and anecdotes.\n\nTucking the card away in her sleeve, Yuki rubbed the tears from her eyes once more and looked into the sky. Distant clouds had built into dark thunderheads, and a storm threatened to break in a couple of hours. Maybe she would climb the house later and watch it from the roof, if Abella was willing to share some space.\n\nIn a lot of ways, she wished she could forget about Emily, but she knew that doing so would change who she had become. And while it was likely that Naia would be happy to continue on with no knowledge of her lost sister, she owed it to the nymph to make certain that she remembered.\n\n\"Naia.\" Yuki poked her finger in the fountain. The water moved sluggishly, slowly forming into the nymph. Her hair was disheveled, and she let out a large yawn.\n\n\"Sorry, I'm not quite myself quite yet.\" Smacking her lips, she leaned over the water to see her reflection. \"Gods damn it.\" She shook her head a few times, her hair shifting into different styles before tumbling down her back in a smooth cascade. Looking at her reflection again, she gave a nod of approval, and then turned her attention to Yuki. \"Yes?\"\n\nThe kitsune sat on the edge of the wall and told her everything, starting from the beginning. Several tears were shed, and by the time she was done, Naia cried too, her entire body covered in tiny streams of water that ran into the fountain. The distant storm had now broken overhead, and Naia held Yuki in her arms, letting the rain wash over them both.\n\n--\n\n\"Those two seem to be getting along.\" Mike stood at the kitchen table, looking through the back window at Yuki and Naia.\n\n\"I guess.\" Beth swallowed a couple more tylenol with a glass of water. Ever since her unfreezing, she had felt like she had come down with a case of the flu. \"It'll be a road to recovery for all of us, I'm afraid.\"\n\n\"How have you been feeling? Any stray thoughts?\"\n\nBeth shook her head. \"Not that I can tell. I haven't been sleeping very well, but I think it's because I hurt so bad.\" She turned to Jenny, her constant companion. The doll stuck with her now, ready to alert anyone in the house if Oliver took back over. However, she was no longer missing any time, and she hadn't seen a trace of Oliver anywhere. \"Naia checked and said that the piece of him is still attached to my soul, but it's just sitting there, like it's sleeping.\"\n\n\"Well, hopefully, you won't have to worry about it for long.\" He sat across from her. \"I was wondering if you could help me with something.\"\n\n\"Anything.\" She couldn't help but notice how much he had changed recently. In some ways, he still seemed like the man she had met almost a month ago, but the way he stood and spoke elicited those odd feelings once more. She was attracted to him, that was for certain, but she also worried that she was being manipulated by Oliver somehow in an attempt to get closer to him. She hadn't mentioned this to Mike, but had made sure to keep her distance just in case.\n\n\"They're going to start waking up the centaurs soon. I was wondering, as my attorney, if you could help me broker a deal with the ones moving here and the ones staying behind.\"\n\n\"Like a treaty?\" Her heart leaped at the idea of putting together a treaty for an entire centaur herd. She wondered what the men looked like. \"Anything specific you want?\"\n\n\"Not to fight with Zel's tribe would be a good starting point. Orion needs to relinquish his claim on Zel. I probably need to apologize for antagonizing them.\" His forehead scrunched up as he thought on it some more. \"At worst, peaceful co-existence. At best... having a centaur army on hand might not be a bad idea.\"\n\n\"I'll see what I can do. What about the exiles? The ones coming here?\"\n\n\"They're gonna live in the greenhouse. Gonna need something that says they'll take care of the land and become part of the house, in a way. Zel has assured me that the greenhouse will be able to provide for them, so we won't have dozens of mouths to feed, but I want something in writing to prevent them from creating any unsafe situation.\"\n\n\"Like what?\"\n\nHe smiled. \"You're my attorney. You tell me.\"\n\nBeth smirked. \"Okay, I think I can write something up. Do you want a fancy title, too? I mean, it's almost like you're creating your own fiefdom here. Master of Monsters? Lord of the Land? We could poll the others, see what they like.\"\n\nMike made a face. \"They can call me the Caretaker. I'm not their boss of anything. I just want them to have somewhere safe to stay.\"\n\nA smile crossed her lips. \"I think that can be arranged. Anything else?\"\n\nMike shook his head. \"No. Nothing that I can think of. You'll probably need an escort. The centaurs are super grumpy with me right now and likely to crucify you on sight, but I imagine returning their missing warriors will soften them up a bit. I'm sure you'll be far more diplomatic than I was.\" He let out a sigh. \"While you're working on that, I'll just be here trying to figure out how to clean up the front yard.\"\n\n\"Sounds good.\" She turned her attention to the women outside, then back to Mike. \"Do you need anything else from me?\"\n\n\"Negotiating peace between a magic house and a centaur herd not enough for you?\" He lifted an eyebrow and grinned. \"I can't think of anything, but\u2014\"\n\nHe was interrupted by the slamming of a door and a litany of shrieks in goblin.\n\n\"I should probably go see what that's about.\" He stood up and walked out of the kitchen, leaving her behind.\n\nShe sat alone for several minutes, her thoughts suddenly slippery. At first, she worried that there was a more sinister explanation, but she realized that she was most likely under caffeinated. She put on a fresh pot of coffee and waited for it to brew, the warm, earthy scent flooding through the kitchen. Taking a quick trip to the office, she returned to the kitchen with her laptop to discover Daisy gazing at the coffee pot with interest.\n\n\"Hey there. Would you like some?\"\n\nDaisy spun around, clearly startled, then made a couple of signs with her hand.\n\nYes, please.\n\n\"If you help me find something you can drink from, I'll pour.\" Beth started to sign back, but then remembered that Daisy could hear through the vibrations in her wings. Her ASL was super rusty, a leftover from her college education, but she could understand the fairy just fine. \"So you got trapped on the other side with Yuki, right?\"\n\nYes. Daisy lifted off the ground, fluttering near one of the cabinets. Open this, please.\n\nBeth opened it up and saw that it was full of food. The fairy darted in, rummaging around in the back. Eventually she emerged with what looked to be a child's teacup, which looked more like a bowl in her hands.\n\n\"This is yours?\" It must have gone unnoticed when the cabinet had been filled. She poured out some coffee for the fairy. \"Room for cream?\"\n\nThe fairy nodded, then sat down on the table to wait. Beth poured herself a cup first, and then Daisy, then sat down with the half and half. She topped off Daisy's cup and held back a laugh when Daisy wrapped her arms around the cup, clearly enjoying the warmth.\n\n\"Would you be able to help me with the centaurs? I need someone familiar with the area who can tell me about them and their culture.\" She had heard a bit from Zel, but figured it would be good to hear it from an outside perspective.\n\nDaisy nodded, then took a sip of coffee, her wings fluttering in delight.\n\n\"Wonderful, I appreciate that.\" She held a finger out and the fairy gave it a shake, as if sealing a deal. With a grin on her face, she opened up a new document and started going through her templates. Daisy kept her company as she drafted out some ideas, speaking at length with the fairy. Her aches and pains eased up over the next couple of hours, and she looked over what she had, a broad smile on her face.\n\nTaking her laptop and Jenny with her, she walked to the stairs, Daisy sitting on her shoulder. She paused by the stairs, looking through the open front door. Abella was holding part of the roof of the porch in place while Mike pushed a piece of wood beneath it. Tink sat on his shoulders, ready with a hammer to shore it up. She smiled at them, though they didn't see her. By this time tomorrow, the front porch would be usable once again.\n\nOnce in her room, she put her laptop on the bed and opened her closet, revealing her clothes. Daisy helped her dig through her outfits, picking the one that would look best. She settled on a low cut blouse with black lace around the edges, and then found a matching red skirt that went down to her knees. Stripping down, she tried the outfit on, then piled her hair up on top of her head.\n\n\"What do you think?\" She stood in front of her mirror, turning back and forth.\n\nYou look great. Daisy sat on the edge of the bed, her legs dangling over the space below.\n\n\"I look better than I feel.\" She released her hair, letting it fall past her shoulders. For several moments, she was caught by her own reflection, her eyes darting around the corners of the room. Suspended in death, was it possible Oliver could still see her? What dark corners of her mind could he still be in?\n\n\"Are you in there, you bastard?\" Leaning toward the mirror, she stopped just short of her nose touching it. She half expected to see his grinning face in the pupils of her eyes, but all she saw was how tired she was. Though she had escaped his wrath, she had still fallen prey to him, had nearly become the victim. Though her body hurt, her heart hurt even more as a result, her pride damaged. He had tried to take everything from her for no reason other than he could. She had been absolutely powerless, and had the implications not been so severe, she would have been thrilled at the idea.",
        "\"Rot in Hell, you fucker,\" she whispered to the mirror, on the off chance he could hear her. Stepping back, she pulled off her outfit and hung it up in the closet, ready to wear for the day she met with the centaur herd. PIcking out a couple of good outfits for the rest of the week, she closed the closet door and put on the clothes she had been wearing before, then stood there for several moments, deep in contemplation.\n\nEverything okay? Daisy asked.\n\n\"Yeah. Everything is fine.\" She grabbed the knob of the closet and moved it through the proper sequence, revealing the cave behind it. \"I'm gonna have a busy week is all, think I'm going to pay Asterion a visit, maybe blow off some steam.\"\n\nA large grin crossed the fairy's face. Can I come too? \n\nBeth laughed. \"Sure, if you want.\" Picking up Jenny, she walked into the cave, letting the door close behind her. Daisy's glow lit the cavern well enough to see by, and Beth made the long trek to the Labyrinth. Oliver had tried to take her freedom from her, but he had failed. The experience had been awful, but she refused to let it define her. It was a lesson she had learned from Mike, to keep moving forward and live in the present. And while he had no control over her now, she refused to spend her time jumping at every shadow in the corner of her vision.\n\nSqueezing Jenny tightly, she followed the path down to the Labyrinth, happy to see that Asterion was waiting for her at the gate.\n\n\"Hey there, friend. Wanna show a girl a good time?\" She casually leaned against the stone wall nearest her. \"Sounds like I'm being deployed soon. Might not make it back. What do you say?\"\n\n\"Hmm. If it is dangerous, perhaps I should come with you.\" The minotaur's hand tightened on his axe.\n\n\"No, it's just a... never mind.\" She took him by the hand and led him into the Labyrinth, ready to live fully in the present. After all, who knew what tomorrow might bring?\n\n--\n\nMike tossed himself in bed, letting out a grunt. Tink had already rolled to the side, snoring loudly with her arms dangling off the edge of the mattress. It had been a busy week of rebuilding, and he had been caught up in ordering supplies and dealing with the mess around his house. Beth was supposed to come home in the morning and let him know how things went with the centaurs they had freed. He was hoping she had more success dealing with them than he had.\n\nThe house beneath him was quieter than normal. So many of the others had gone with Beth to the tower world that it was almost like the first few days in the house. It was only him, Tink, and Naia, though Sofia was lurking somewhere in the Library. He didn't count the rats, because they kept largely to themselves, though Reggie did show up sporadically. The Rat King certainly liked to be involved, and Mike was grateful to have the little guy on his side.\n\nLost in his thoughts, he found himself staring at a crack in the plaster above. Perhaps he had seen it every night, but he couldn't help but wonder if it had always been there. The house was always changing, manipulating their memories and its blueprints, working its way towards some eventual... something. The house and its occupants were part of a game, apparently, but to what end? It had already gone through some changes this week alone, changes that boggled his mind.\n\nYawning, he wondered what it would be like if he could see them all, the people of the house, laid out like game pieces. He thought about the strange garden from his vision, then blushed at the memory of masturbating as the house. Fighting the urge to fall asleep, he tried to slip into that space once again, to see if he could gain any more information.\n\nThe effort this time was minimal, and his consciousness rapidly shifted perspectives, the room around him bending like metal and then melting into the ground. He stood on the roof of the house, the wind blowing through his hair. He felt himself lifted into the sky, the world beneath him growing small and revealing several pinpricks of light scattered across the grounds. They moved like twinkling stars, shifting about beneath him.\n\nHe rocketed into the sky, the clouds clinging to his skin like morning dew until he was above them, his body illuminated by the moon. His whole body spun in place like a drunken top, and he fell, the soft clouds folding around him like a pair of hands.\n\nThe fall was long, and the moon vanished, leaving him in darkness. Down below, a tiny spot of light could be seen, and he fell through it, tumbling in space over a large body of sand. He crashed, scattering grains of sand in every direction.\n\n\"Mmmph!\" Pushing himself up, a fountain of sand fell out of his mouth.\n\n\"That... was quite the entrance, Romeo.\"\n\nMike stood up, squinting in the harsh light of the sun. Standing on the edge of the crater he stood in was the succubus Lily, wearing a bikini and a pair of thigh high boots. She lifted her sunglasses, appraising him with crimson eyes.\n\n\"Lily? Is that really you?\"\n\n\"In the flesh. Well... essentially.\" She knelt down and offered a hand. \"You're in the Dreamscape, but I've never seen anyone enter quite like that before.\"\n\n\"I was trying to go somewhere else.\" He took her hand and pulled himself out. It was an odd sensation, as if his entire body was being sucked into the ground in opposition to his movements. Instead of stepping out of the crater, the sand filled it in until he stood level with Lily. \"You're actually here?\"\n\n\"I am.\" She grinned. \"I'm in your bedroom right now, actually.\"\n\n\"Oh. Um, want me to wake up?\"\n\n\"I'm on a bit of a time crunch, actually. A couple minutes in the real world versus an hour in here. Thought I would drop in and talk to you for a change.\"\n\n\"What do you mean, for a change?\"\n\nShe chuckled. \"I've been sucking you off in your sleep. We've been super busy and I haven't had time to visit, just enough time to come home, get some juice, and fly back out to keep our little delivery girl sane.\"\n\n\"That's kind of a dick move. We've been worried about you.\"\n\nHer face darkened. \"You're one to talk. You were missing for a couple of days, and I spot this fox demon storming around the house like she owns the place. Thank the underworld I wasn't running on empty, otherwise you'd be reading about a zombie outbreak on the news.\"\n\n\"Oh yeah? Where at?\"\n\n\"No spoilers. You'll hear about it first hand in a week or so. We're headed your way, actually, so I'll let our girl fill you in on what we've been up to when we get home.\"\n\n\"Is she... did Dana... get cured?\"\n\nLily rolled her eyes and knocked on Mike's forehead. \"If she had, would I be here to get her a spooge smoothie?\"\n\nHe laughed. \"No, I guess not.\"\n\n\"So... where did you come from?\" Lily pointed up. \"It's called falling asleep, but you came in here like a meteor.\"\n\n\"I was trying something. It's like a trance, I've gone there a couple of times, but I ended up here instead.\" He told her about the visions, and about wearing the body of the house. \"Any ideas?\"\n\n\"If it's somewhere like the Dreamscape, it's not terribly far away. Metaphorically, anyway. Why do you want to go there anyway?\"\n\n\"Don't know.\" He shrugged. \"I keep ending up there, and it would be nice if I could control when I go. I feel like there's some big secret to be learned, but I don't know what.\"\n\n\"Well...\" Lily frowned. \"That might be something I can help you with, when I get back.\"\n\n\"You'd help me? Just like that?\" He crossed his arms. \"What's the catch?\"\n\n\"No catch.\" Her face darkened. \"Of late, I've been feeling very... nostalgic. When I left with Dana, part of it was I wanted to help her, to do a good thing. But honestly? I've been feeling things I haven't felt in a while, and I don't fully understand why.\"\n\n\"What kind of things?\"\n\n\"It sounds silly, but human things. Emotions. I don't know if it's because I'm bonded to you, or if its some other reason, but I've been unusually... kind, as of late.\"\n\nMike thought back to the last time he saw Lily, on the front porch. He had fucked her and Cecilia at the same time, the magic running rampant through all three of them. If Lily was feeling more human, what had he taken from her? \"I might know why that is, actually.\"\n\n\"Oh?\" Lily lifted an eyebrow.\n\n\"Yeah.\" He looked around to see if anyone was listening, and then leaned in close and whispered in her ear. \"I'll tell you when you get home.\"\n\n\"Asshole.\" She pushed him, and he fell back into a chair that he hadn't seen. The thick straps pushed against his back, and he saw that they were sitting at the edge of the ocean, an endless expanse facing them.\n\n\"Where's the house?\" Mike asked.\n\n\"Behind you.\" She answered.\n\nHe turned around to see it behind them on a cliff, the sun reflecting off its windows. \"Interesting.\"\n\n\"Yeah, well, I'm not a super big fan of it. I'm quite the sore loser.\" She waved her hand and another beach chair appeared. She settled into it and a servant appeared, a man with a blank face. He handed them a pair of drinks and then vanished.\n\n\"Was that...?\"\n\n\"One of my captured souls? Yep.\"\n\n\"I'm not certain I approve.\"\n\n\"Nobody cares if you approve.\" Lily sipped at her drink. \"Even if I wanted to, I couldn't let them go. They're a part of me now, a stain on my essence that can never be scrubbed free. But, if it makes you feel any better, my tastes have changed.\"\n\n\"How so?\"\n\n\"Some people deserve it.\" Her face darkened in a literal sense, the sun's light bending away from her face. From behind her sunglasses, he saw a pair of smoldering orbs. The moment passed, and she was back to normal, tilting back her glass again. \"So, want to fill me in on what happened?\"\n\nMike told her what he knew, everything about Emily and Yuki's relationship, and the fight to come home. Lily asked a few questions, and nodded appreciatively at times. The dream sun hovered just above the horizon, trapped in a perpetual state of sunset. When he was finished, Lily gestured for another drink, which was quickly brought to her.\n\n\"That's quite the tale. So this Yuki character. You let her move in?\"\n\n\"I did.\"\n\n\"Guess that explains why the house looks different now. However, I'm not certain I approve.\" She lifted an eyebrow. \"What's to keep her from turning on you someday?\"\n\n\"Honestly? Nothing. But I trust her. She deserves a second chance. Has earned it, in fact.\" He drank the beverage, feeling a rush. \"Can you get drunk here?\"\n\n\"Kind of. Being drunk in the Dreamscape is a pro-choice affair. You stay drunk as long as you want, and push it away when you're done.\" She licked her lips. \"I'm curious, Romeo. You seem to think she deserves a second chance. You certainly gave me one. Why so eager to give someone a second chance though? Why take the risk?\"\n\n\"Sometimes people don't get to choose. Yuki certainly didn't. What about you? I don't know much about your past, but I do know you were sent after me, and plenty of others as well. What would you have done with your life if you hadn't been forced to serve your previous master?\"\n\nLily slammed her drink and tossed the glass. It turned into a small cloud of butterflies and floated away. She slid out of her chair and joined Mike on his, her breasts hovering over his face.\n\n\"Enough talk about previous boyfriends.\" She pressed herself against him. \"Let's talk about the immediate future. Do you want to get sucked, or go straight to fucked? Pussy or ass? You have options, you know.\"\n\nThe sudden shift in conversation confused him, but an odd sensation manifested in his gut, his mind expanding across the beach and touching on the lapping waves. He closed his eyes for a moment, letting the magic flow through him.\n\n\"Honestly?\" He could feel the nymph magic inside of him now, reading Lily's desires. Strangely, though she had offered herself so freely, he could feel that she was uncertain. She clearly wasn't ready to move forward with their encounter, but why rush it if time was already stalled? \"I want your mouth.\"\n\n\"Of course. Who wouldn't?\" She pointed at her lips, and they changed color. \"Do you have a color preference, or should I leave a rainbow around the base of your\u2014\"\n\nHe grabbed the back of her head and pulled her in for a kiss. She tensed up for several seconds, his tongue exploring the inside of her mouth. She finally relaxed, melting into him and letting out a tiny moan. He moved his hands to her face, touching her cheek bones and then caressing one of her horns, stroking the calloused skin where they disappeared into her scalp.\n\nMoving his hands downward, he touched her wings, marveling at how smooth the flesh felt. The connection between the wings and her shoulders was no thicker than his wrist, and the bones beneath shifted at his touch.\n\nAfter several minutes, she broke the kiss. \"I don't understand.\"\n\n\"Do you need to leave? I knew you were in a hurry, but I figured we still had time here.\"\n\n\"We do. I just...\" She touched her lips. \"The way you kiss. It felt like...\" Her eyes narrowed. \"When you kiss me, it feels like more than just a kiss.\"\n\nMike shrugged. \"Why wouldn't it?\"\n\nHer wings fluttered behind her. \"You're more complicated than I give you credit for, Romeo.\"\n\n\"And that's after years of therapy.\" He grabbed her by the shoulders and tilted her to the side. The chair beneath them warped and distorted, forming into a queen-sized bed. \"Maybe it sounds a bit old fashioned, but maybe we can take our time tonight?\" The moment the words left his mouth, they felt right. She softened in his arms, touching his face now with her hands.\n\n\"It's been a long time since someone has been this gentle with me.\" Her voice was uncharacteristically soft, her eyes lost in a memory. \"You'll have to forgive me if I'm a little rusty.\"\n\n\"I'm willing to bet you'll catch on quick.\" He kissed her again, and she clung to him, her lips eager for his. It was so unlike her that he almost stopped, but he felt that she would take it as a rejection. He slid a hand down her side and gave one of her breasts a squeeze, eliciting a small laugh from the succubus.\n\nShe pulled her mouth away. \"Maybe you're feeling a little nostalgic, too. It feels like we're on a third date or something.\"\n\n\"Do you have to workout to stay this fit, or do you just get to be this sexy all the time?\" He traced a finger along her ribs, and she laughed.\n\n\"I'm always this sexy.\" She pushed him on his back and tried to mount him, but he pulled her down and rolled her onto her back.\n\n\"Not so fast, hellspawn.\" He leaned in to kiss her, pinning her hands together above her head. She bit his lip playfully, and let out a laugh when he bit her back.\n\n\"I never took you for a biter, Romeo.\"\n\n\"You should meet my wife sometime.\"\n\nLily frowned. \"Who? Oh, right. The goblin.\" She smirked at him and turned her head to the side, exposing her neck. \"Bite away, I suppose.\"\n\nHe obliged, nibbling at the sensitive flesh of her neck, then licked the skin along her jawline. She made happy sounds beneath him, arching her back to give him better access to her collarbone. He kissed his way down her chest, then pushed up her bikini top to reveal her breasts.\n\nThe moment her breasts were exposed, her bikini turned to smoke and formed into a lacy, red bra that covered her again. Mike reached behind Lily and undid the clasp, but when he pulled it away, it revealed the presence of a micro-bikini beneath.\n\n\"Are you just fucking with me?\" He pushed the bikini aside to reveal a pair of smiley face pasties over her nipples.\n\n\"Maybe a little.\" She wrapped her legs around his hips and pulled him down, burying his face in her cleavage. \"Or maybe I'm just shy.\"\n\nHe kissed along her sternum, enjoying the soft, warm mounds around his face. He kissed his way up her left breast, then peeled back the smiley face pastie. The nipple beneath winked at him and faded away, vanishing from sight.\n\n\"You are super fucking with me right now.\" He sucked the skin where her nipple had been, and Lily let out a groan.\n\n\"Oh, you've got me. I've been such a bad girl and deserved to be punished.\" She grabbed him tightly by the hair and yanked his face off her breast with a loud pop. \"What will it be? A spanking? A whip? Are you going to lock me in stocks and force me to pleasure you?\"\n\n\"I've already done that last one. Recently, actually.\" He moved to kiss her chin, but she yanked him away by the hair.\n\n\"Now you're fucking with me.\" Her eyes moved back and forth across his face. \"Oh shit, you're serious. I think you skipped over that part.\"\n\n\"I don't fuck and tell. It's unbecoming of a gentleman.\" He winked. \"Well, not usually.\"\n\n\"Who was it? I'm curious now.\"\n\n\"My lips are sealed.\" He mimed locking his lips with a key, then tossed it away.\n\n\"It was the goblin, wasn't it?\"\n\n\"No, it wasn't Tink.\" He slid a hand down her belly and beneath her bikini bottom. Her smooth skin was soft to the touch, and he found her labia to be quite damp.\n\n\"It couldn't have been the nymph.\" Lily's face scrunched up in concentration. \"The snake? The horse? Oh, I know! It was the cyclops!\"\n\n\"These people all have names you know.\" He pushed a finger inside her and she moaned.\n\n\"Oh, that shouldn't feel as good as it does.\" She loosened her grip on his hips, giving him more room to move. He rewarded her with an additional digit, and she let out a cry. \"Mmh, you've gotten good at this.\"\n\n\"That would be the nymph in me.\" He kissed her some more, fingering her slowly at first, then picking up speed.\n\n\"I imagine it's more than that.\" She pulled him in for another kiss, her free hand grabbing his cock through his pants. She slid her thumb across the front of his pants and his clothing vanished, turning to ash and floating away on the sea breeze.\n\nA wave of heat washed over him, and her hand encircled his cock, stroking him quickly. Lube appeared in her hand, and she got him nice and wet, running her fingers over his glans. Gripping him tightly at the base of his shaft, she squeezed and raised her hand to the very tip of his dick, then shifted the angle of her hand.\n\nWhen she pushed down on him, it felt like a warm mouth had sucked him in. He broke the kiss to take a peek and discovered that Lily's hand had become a fleshy mass with a pair of lips on the end.\n\nIt was more than a little freaky, but it felt so good that he kept his mouth shut. He kissed her some more, wondering if a similar feat could be accomplished with his own fingers. Breaking their kiss, he gazed deep into her eyes, willing reality to shift for him.\n\nIt was difficult at first, but heat radiated down his arm and into his hands. His fingers tingled and he felt them engorge, swelling up and merging together.\n\n\"Oh. Oh!\" Lily's hips bucked, and she looked down. \"You are a clever little boy, aren't you?\"\n\n\"Perhaps.\" He tilted his wrist down, marveling at the odd sensation in his hand. Withdrawing his cock fingers from her, he saw the world go temporarily blurry around them.\n\nLily grabbed his face and turned it toward her own. \"Don't look. Just go with it for now. The fewer senses involved, the easier it is to maintain the illusion.\"\n\n\"Are you giving me Dreamscape tips?\"\n\n\"I am. You can be the god of this place, but you have to understand that your mind isn't quite ready to step away from the trappings of reality.\" She grunted, pushing her hips into him. \"Right now, I'm lying on top of you, sucking your dick as hard as I can. But your mind is in here, with me, doing something else. How you see yourself as a person determines what you look like in here, and I know for a fact you don't have the kind of big dick energy to believe your fingers are actually cocks.\"\n\nMike laughed. \"Self manipulation is the hardest then?\"\n\n\"For mortals? Yes.\" She flickered beneath him, quickly transforming into Naia, then Beth, and eventually several different women before becoming herself once more. The entire time, her hand-mouth kept sucking him, his orgasm slowly building. \"I am not bound by such restrictions.\"",
        "\"I far prefer you as yourself, to be honest.\" He pushed a lock of black and red hair away from her forehead.\n\n\"I don't even know who I really am.\" She stopped stroking him, her eyes suddenly far away. \"Or rather, who I want to be.\"\n\n\"It's something we can both work on.\" He kissed her, and she melted against him, her hand now stroking him with a sense of urgency. He pushed his fingers into her, willing them to become thicker and harder. She gasped, her face turning bright red and a fiery halo forming above her horns.\n\n\"Fuck... fuck... FUCK!\" Her eyes burst into flame and the sand around them caught on fire. The succubus arched her back, toppling Mike off of the bed and onto the sand. Before he could sit up, she had mounted him, sitting straight up, her wings spread wide.\n\nThe clouds above burned away as she rode him, screeching in another language, her hips swiveling over his. Inside of her pussy, he felt dozens of tongues and fingers tickling him, quickly taking him to the brink and then beyond.\n\nGrunting, he came, and Lily opened her mouth, her tongue hanging out of her head and her eyes rolling back.\n\nGasping for air, she stood up, his spooge leaking from her pussy and coating his belly.\n\n\"I thought you needed that,\" Mike pointed out.\n\nLily's eyes focused on him. \"In the real world, I've already swallowed.\" She winked at him, then turned her head to look at his hand. \"No offense, but that's kind of gross.\"\n\nMike turned his head and looked at his dick hand. It was a gross, misshapen lump that had been coated in pussy juice and sand. The image became blurry, and the lumpy cock began to separate itself into his fingers, but they were stuck together.\n\n\"Here, can you help me wash it off in\u2014\" He turned his gaze back to Lily, but she was gone. Realizing that she had left, he fought to wake up, the world around him breaking apart as the Dreamscape fragmented in slow motion. When the ground beneath him broke away, he fell into darkness once more.\n\nMike awoke with a start, his eyes focusing on the crack in the plaster. The breeze through the now open window rustled his hair, and he slid out of bed to close it. Gripping the frame with both hands, he started to pull it down when he felt an odd tingling in his gut. It was similar to his danger sense, but different, far less ominous. He moved his hands away and stuck his head out the window to look around.\n\nWithout warning, a loud boom washed over the house, causing the walls to shake. The clouds hidden in the night sky above were illuminated from below by a red and yellow light, and then the whole house creaked in response to the hot, fierce gust of air that blew over it. The sky went dark, and the wind faded away into the cool air of the night.\n\nTink fell out of bed, scrambling for her club.\n\n\"Holy shit,\" he whispered, listening to the distant sound of dozens of car alarms going off at the same time. Echos of the rumble could be heard bouncing back to him from the distant hills, and Abella leaned down from above the roof, her upside-down face grimacing in pain.\n\n\"The sky was on fire,\" she yelled, her hands over her ears. \"I almost fell off the house, it startled me!\"\n\n\"Go check it out,\" he told her. \"But be careful.\" He didn't dare get his hopes up.\n\nThe gargoyle nodded, and took off, vanishing into the sky. Tink joined him at the window, looking outside.\n\n\"Bad witches go boom?\" she asked.\n\n\"We're about to find out.\" He yawned. \"You know what, though? I'm beat. It's been a busy week, and tomorrow is going to be even busier.\"\n\n\"Husband lie down. Tink watch for rock butt.\" She shooed him to the bed, then planted a kiss on his forehead, her nose wrinkling. \"Husband stink like demon. Need bath.\"\n\n\"I'll take one tomorrow.\" Yawning again, he lay on his side, watching the goblin keep watch until sleep came for him. This time, there was no Dreamscape or eerie visions.\n\nJust peaceful darkness.\n\n--\n\nMike stepped out of the front door of the house, a cup of coffee in one hand and a book about Irish Mythology in the other. He walked over to the porch swing and sat, placing his mug on the new side table he had bought. The yard was a flurry of activity now, with Tink shouting directions at a small group of centaurs who were hauling off the lumber he had ordered online. They milled about with tools that he had ordered them, stepping in and out of the small shed Tink had built with a portal chewed through it to the greenhouse.\n\nHe tried to read his book, but there was too much going on, so he sat back and watched. It had now been a week since his return to the house, and Tink had been in rare form for several of those days. Many of the handier centaurs had been instructed in the use of power tools and were not only helping to rebuild the house, but also using the tools to build their own dwellings deep in the jungle. Mike had made it a point to check in on them, but they had been entirely too busy for much of a visit. Zel was gone most of the time as well, helping coordinate their efforts.\n\nYesterday morning, Tink had showed him a plan for a lumber mill. He had already ordered the necessary parts to get her started, and when they came, the centaurs were going to clear out a swathe of jungle and begin harvesting the wood to build a proper village.\n\nBeth stepped through the front door in just a long shirt and flip-flops. She placed her hands on the recently repaired railing and took a deep sniff through her nose.\n\n\"The new garden smells so nice,\" she said, gesturing at the wall of vegetation that now separated them from the sundial. \"Has Zel identified all the flowers yet?\"\n\n\"Nope.\" The garden in the front of the house was new. On the day Zel had slowly ushered the exiled centaurs into the greenhouse, the front yard had expanded like a balloon with a hedge maze that sprouted overnight, the sundial sitting at its center. His front yard was now larger than an acre.\n\nThe backyard was now several acres of garden starting at the fountain and ending at the wrought-iron gate at the back. He had looked up a satellite image of the place and saw that the picture from almost seven years ago somehow agreed, a perfect example of the Mandela Effect in action. The inside of the house was still the same, to the best of his knowledge, and Tink bemoaned how much work it was going to take to fix everything until the centaurs had offered to lend a hand.\n\nHe set his book down on the swing and stood, casting a wistful glance at the empty seat beside him. Cecilia had yet to return, but as of two days ago, he had been able to produce his own version of the banshee scream. Wherever she was, she was still alive, so he would just have to wait until she came back. He stood next to Beth and leaned forward. \"How did it go with the centaurs at the tower?\"\n\nShe turned around and leaned her back against the rail, a mischievous grin on her face. \"They weren't super eager to speak with me, but Abella and Ratu got Zel's dad to relent. When I told them we had defeated the snow queen and wanted to return their missing tribesmen, they were all ears. By the way, that Orion guy? Smoking hot and a huge dick.\"\n\n\"Yeah, he is definitely a huge dick.\"\n\n\"No, literally. His dick is huge.\" She held her hands apart for emphasis. \"I was kind of tempted until I saw it. Damn thing would rip me in two.\"\n\nHe laughed, but stopped when he saw that she was serious. \"Well, he is also a huge dick. Zel's former fiance. Too much drama. So what were the terms?\"\n\n\"Yeah, that. Did you know centaurs have way too many laws? In a way, I feel bad for them. They live by all these weird codes and traditions. Anyway, the island is theirs, the tower is ours, but they are supposed to keep guarding the tower from outsiders just in case. They won't shoot you on sight, but Orion might. Something about cheating at a test of worth or something like that.\"\n\n\"Fair.\" He walked to the table and picked up his coffee. \"And?\"\n\n\"Zel is exiled, permanently. I tried to fight that, but they weren't hearing it. I know she'll say that she doesn't mind, but I don't know, I kind of get the impression that she still wanted a relationship with her dad. Anybody they exile can take a message to the rats in the tower and try to come and live in the greenhouse. They also will stop killing their young for minor birth defects, but that's the choice of the parents. Those children will come and live with the exiles. And... I think that's about it. In exchange, we returned their missing people and promised not to harass them anymore.\"\n\n\"I'm glad we got that sorted.\" He thought for several seconds. \"Anything else?\"\n\n\"Not that I can think of, no. It was a long night, but a good one. How about you?\"\n\nMike sipped his coffee, fighting the grin that threatened to cross his face. He gave in, a sadistic laugh escaping him.\n\n\"It's all over the news. Someone set off an enormous bomb at the local historical society's building. The whole building is completely gone, and, from what I've heard, there isn't even enough left to identify the survivors by.\" He chuckled to himself, then took another sip of his coffee.\n\n\"Oh god.\" Beth put her hands to her mouth. \"Did... did we get them?\"\n\n\"Don't know. Abella did a fly by this morning with a camera, and we looked at the pictures. It's simply gone, a giant crater in the ground. According to eyewitness reports, somebody thought they were in the middle of a big meeting or something, because the parking lot was full of cars. The explosion itself sent a fireball a hundred feet into the sky, and then vanished.\" Mike chuckled. \"I'm guessing they went to go check on their resident demon and had no idea they were essentially opening a doorway directly to the sun.\"\n\n\"And then Oliver's world caved in on itself and... what, blipped out of existence?\"\n\n\"Don't know for sure, but Reggie was certain that would be the case. One more opening would cause the whole place to cave in on itself. Oliver couldn't leave his world, but it's now been annihilated. So, either Oliver ceased to exist, or he's stuck... somewhere bad, I guess. But if he ever shows his ugly face to you again, you tell us right away.\"\n\n\"Of course. But... was anybody hurt?\" she asked. \"Around the building.\"\n\n\"Minimal injuries, but nothing serious. It was late at night. Some people now suspect that they may have secretly been a terrorist organization, cause when they started digging into its members to notify next of kin, a ton of red flags came up. Some of them were living with stolen identities, can you imagine?\"\n\nThis got a laugh from Beth. \"You did it. You got rid of the Society.\"\n\n\"Maybe.\" He sipped his coffee, his eyes passing over the dark figure by the hedges. Death was sitting on the grass, wiggling his bony toes in between the thick, green blades while watching a pair of centaurs carry a stack of lumber between them. As of now, only Mike and Yuki could see him. He had hoped that Death would simply disappear after news of the explosion reached Mike, but the spirit still lingered.\n\nMeaning that somewhere, Amir was still alive. Or his soul was, at least.\n\n\"Well, they shouldn't be hassling you now...\" her words trailed off when a dark figure appeared near the entry, walking cautiously between the lions, hands held up in peace.\n\n\"I got this.\" Mike walked around her, the activity in the yard coming to a halt. Mike set his coffee on the end of the railing and moved with confidence, feeling the magic awaken inside of him just a little. The lions turned their heads to watch the newcomer, just waiting to sense hostile magic and spring into action.\n\nThe hooded figure stopped, gazing across the yard with apprehension. It took Mike much longer to reach her than it would have a week ago, and when he drew near, the figure drew back its hood.\n\n\"Elizabeth, right?\" Mike's tone was cold, his voice carrying extra strength.\n\n\"Mr. Radley.\" She looked across the yard, her eyes wide as she saw the centaurs lift up spears and bows that they had set nearby.\n\n\"Can I help you?\" he asked, letting just a bit of Cecilia's magic through. His voice sounded like a whisper that had been pumped through an amplifier, and she flinched.\n\n\"I... it was my turn to keep watch last night. Ever since what happened to my daughter, they told me I was too involved, that I couldn't be trusted on my own. But after what happened here, they had no choice. Your fox demon hurt so many of us that we were forced to regroup, to reevaluate. As a result, it was my turn to watch you.\"\n\n\"And?\"\n\n\"I wasn't there when it happened, but...how?\" Her voice became a hiss. \"How did you... it doesn't make sense. You couldn't have done all that, but I... you destroyed everything we've worked so hard for, killed people who have survived several centuries, lived through wars and plagues and... I just don't understand.\"\n\n\"If you're asking if that was me, then yes. Yes it was.\" He crossed his arms. \"I didn't want to, but I had to, and I would do it again.\"\n\n\"You've taken so much from me, I...\" she dropped her gaze. \"Look. I don't wish to cross your path again, but I must know something before I go. Will I ever see my daughter again?\"\n\n\"No, you won't.\" His voice softened. \"For what it's worth, it really was self defense. I never wanted any of this, but she tried to kill me. If you all had quit coming here and trying to take my home, you would all still be alive. I recommend that you find a way to move on, to let it go. I promise that no good will come from harassing me or my family ever again.\"\n\n\"I just don't get how you became so powerful so fast. In all my centuries, I have never seen such a meteoric rise in strength.\"\n\n\"I'm not the one who is strong.\" Just as he said the words, Abella landed next to him, her talons clutching at the cobblestones to steady herself. Tink ran up to the right of Mike, a hammer in one hand and a screwdriver in the other. Rats with spears stepped from the shadows, surrounding the group, and a quartet of fairies circled above him like a crown of light.\n\nOff to the side of the garden, the motionless Jabberwock finally lifted its massive head and yawned, fixing its gaze on Elizabeth. Its jaws snapped together like a steel trap, the sound similar to a pair of cars colliding. It wore the remains of the iron golem as a helmet, hammered out in places by Tink and then strapped to its head, making it look like a giant, armored steed.\n\n\"Together, we are strong. We found each other and never plan on letting go.\" He gazed deeply into her eyes, seeing her fear manifest. \"That's the real secret of the house, and it's one I don't think you could ever understand.\"\n\nElizabeth backed down the walkway, an expression of cold rage on her face. She passed between the lions, and then walked out of view along the sidewalk. A few moments later, the sound of a car door slamming was followed by screeching rubber. Mike relaxed, and turned around to see that everybody had gone back to what they were doing. Abella landed on the roof and picked up her tablet, resuming whatever show she had been watching, and Tink was berating a centaur with multiple expletives for dropping a load of wood. The centaur rolled his eyes but took it in stride, throwing Mike a wink when their eyes met.\n\nMike smiled, and walked to the sundial to give it another twist. Since he was out here, he may as well reset it. Looking at everybody scattered across the lawn, he wondered what would come next. With the Society gone, he was no longer confined to the house, and with Reggie's help, he could go anywhere in the world in a matter of minutes.\n\nThen again, why leave when everything that mattered to him was right here? Turning his head, he saw the dark figure contemplating a blade of grass, his bony fingers bending it down until it popped free and stood back up.\n\nWalking to the edge of the yard, Mike put his hands on his hips and stared at Death.\n\n\"Hey.\"\n\nDeath looked up at Mike, his visage buried in the shadows of his hood.\n\n\"Yuki tells me that you technically can't collect any soul other than Amir's. Is this true?\"\n\nDeath nodded.\n\n\"Which means you're just stuck here with nothing to do. Is that correct?\"\n\nAgain, a nod.\n\n\"Is Amir dead?\"\n\nThis time, the hooded figure shook his head.\n\n\"So...\" Mike looked over his shoulder at the house. He had a feeling, deep in his gut, that was different from the icy cold grip of danger. It was warm, like a campfire on a cold night. \"If you're just going to hang around anyway, would you like to come inside? Might be a little less boring for you.\"\n\nDeath paused at this, then slowly rose, towering over Mike at nearly seven feet tall. He swept back his hood to reveal a bare skull with a fearsome visage, tiny red and yellow fires buried deep within his impossibly dark eye sockets. The scythe came up too, and Death smacked the butt of it on the ground, causing the blade to swing down and lock into place.\n\n\"Mike Radley, I thought you'd never ask,\" Death replied in a whisper with a slight british accent. They walked back up the stairs to where Beth was waiting, and Mike stopped long enough to grab his coffee and his book.\n\n\"Who were you talking to?\" Beth asked.\n\nMike held back a laugh. \"Here, come inside and I'll tell you about our latest guest.\"\n\nEnd Book Three\n\nThis chapter was a lot of fun to write, but it was tough. Ending a story is often the most difficult thing to do, because you want to leave just enough for readers who want more, but you have to close out story threads. \n\nSpeaking of closing story threads, the Society is actually destroyed. No Deux Ex Machina here, they opened a doorway to an unstable mirror dimension that had a star trapped inside of it and got toasted. Obviously Elizabeth and Amir survived, but two people don't constitute a Society, now do they?\n\nI always read feedback and comments, and I am about to address a couple of big requests I have gotten from so many of you. Many of you have asked that Mike spend more time exploring his home and that will finally happen in Book Four. His new buddy Death will be on hand to occasionally offer advice, and there will be some interesting new roommates for him to, uh, get acquainted with. \n\nAnd for those of you who are dying to hear news about our missing banshee, all will be revealed in Book Four, so make sure you come back and take a peek!\n\nStarting in August, I will be releasing chapters of my newest story, The Last Arachne. This tale takes place in the early seventies and does (lightly) tie in with Home for Horny Monsters, so give it a chance once it comes out! It was supposed to be a short story, but is officially a novel now, so that was a thing.\n\nThat's all I have to say, much love to you all and take care of yourselves!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "cum eating",
        "erotica with plot",
        "harem",
        "kissing",
        "monstergirls",
        "passionate sex",
        "succubus",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-42"
}