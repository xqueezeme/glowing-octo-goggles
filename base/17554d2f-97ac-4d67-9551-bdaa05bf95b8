{
    "title": "Chosen Ch. 04",
    "pages": [
        "\"The bell, and book and the candle all have this in common. They speak, they do not listen. The bell rings, the candle has a tongue of flame, the book is made of words. They call, they enlighten, they instruct and demand and declaim, but they do not bargain. It is not coincidence that all were used in the pronouncement of excommunication. The bell is rung, and falls silent; the candle is extinguished; the book is closed with a snap. You will no longer be called to worship, shown the light or taught words of holiness. Excommunication is the final warning; it is as far as the Church can go in announcing your damnation. \n\n\"The ritual was meant to be terrifying in its symbolism and finality. There was no answer to excommunication. There was no bargaining, there was no further human interaction or help, no further teaching or pleading or exhortation. The only choices left were a full and public repentance, or the prospect of eternal damnation. The church would intervene for you no more, and you were denied the Eucharist.\n\n\"It is not in the nature of believers to turn their backs on the fallen, since they are fallen themselves and dare not judge. Excommunication was and is rare. Except for a spike in activity in the 14th and 15th century, the incidence has roughly tracked the population of Catholics. Nonetheless, some excommunications have been overtly political.\"\n\nI closed the web page, there was nothing here I didn't know. I checked my email again. I had contacted, as discreetly as I could, four experts in Spanish medieval history. No replies. They'd probably all heard of Alan St. Laurent, the slightly too-well known thief of antiquities. \n\nThe Catholic religion was known for the way it tended to dissolve into mysticism and syncretism, and there were always rumors of magic in the mythology that tended to accrete in the dustier corners of the faith. But excommunication was the one ritual that contained none of that taint. The bell, candle and book were pure showmanship, designed to convince a sometimes illiterate population that something was happening. Eventually that particular set of symbols had been abandoned; there had never been anything essential about them. The next day the candle would be on an altar somewhere, the book would be back in service in a priest's devotionals and the bell would be ringing the start of mass. They weren't magic. \n\nExcept, apparently, once. Just once, the impossible had happened.\n\nI watched the candle, quietly burning. The church I'd taken it from had reported the theft of the gem I'd taken -- which only upped the gem's value to certain collectors -- and hadn't said a word about the candle. Because the candle was a secret, a mystery, and could never be discussed. That was, I thought, very Catholic of them, but it was making my research hard.\n\nA book might keep its secrets on a shelf and a bell can be put somewhere where it doesn't have to be rung, but a candle that doesn't want to go out, and makes you burn instead when it does... that is not something a person can stay unaware of. Of the three items -- because I knew the book must still exist -- I had the one that made it impossibly obvious that magic existed. It had been hidden in plain sight because there was no other way to hide it.\n\nWhy would a candle used in excommunication become a sexual object? People weren't excommunicated for sexual sins. The bell's reputed power made sense; the candle's didn't. \n\nThe book, I thought. The book could explain everything, that was certainly its role. But how do you find a book?\n\nI was out of options. Sighing softly, I began to arrange forged papers, and planned my itinerary back to Spain.\n\nBut before I left, I needed that bell.\n\nFrom: Alan.....@..... To: Mike----------@us.navy.mil\n\nMichael,\n\nThis will sound incomprehensible, but your friend with the bell has stumbled on something significant. I would take his account seriously. No, I have not gone mad. \n\nI am going back to Spain to learn more -- and I need to take the bell with me. I do not expect to sell it and if I do you will get half the proceeds, but I will tell you that for once I am acting as a historian, not a trading agent. You must understand that I'm wanted there for some trifling matters which nonetheless could lead to arrest, so I'm not heading back lightly. It is that important.\n\nCan you get the bell delivered to me? I'll send you a shipping address separately.\n\n+++\n\nFrom: Mike----------@us.navy.mil To: Alan.....@.....\n\nYou are being very mysterious.\n\n+++\n\nFrom: Alan.....@..... To: Mike----------@us.navy.mil\n\nNot I, but the world. I'd explain but you'd think I've finally gone crazy. I can only tell you that the bell is the second item in a set, and I already have the first. There is a third and I am already certain it is going to be found, if it hasn't already. The item I already have also has curious properties -- I suppose that's the sanest way to put it, but there is nothing sane about this affair. There is more in heaven and earth... \n\n+++\n\nFrom: Mike----------@us.navy.mil To: Alan.....@.....\n\nIt frightens me that you of all people is talking about heaven. Are you very certain you want this bell? Given the alleged power of bringing people to judgment... Alan old friend you have of a certainty offended against the God of the Catholics more times that you can even count. Not that I believe a word of all this; it just shocks me that you and my level headed student both seem to. \n\nThe two of you have unsettled me. I will get the bell sent to you. \n\nWhatever you're mixed up in, please be careful. The world would be a less colorful place without Alan, historian-turned-thief and sinner lose in it.\n\n+++\n\nThe phone call from Michael was disturbing. I'd turned to him because I'd been so rattled by what I'd seen the bell do; I'd been counting on his calm, no-nonsense approach to life to settle me down. But he'd talked to someone about it and now he sounded more rattled than I did. He was adamant that I had to ship the bell to an address in New York City, immediately.\n\nIt sounded like a good idea to me. The less time I had it, the safer I was.\n\n\"Fermin,\" the gruff postal officer said to me with a nod. \"Another rum delivery to your parents?\"\n\n\"Yes sir.\" Off duty he was James and a poker friend, rank forgotten, but on duty he was always Sir and always all business. I handed him the box.\n\n\"Very w- wait. This is not your parent's address and this doesn't weigh the right amount.\"\n\nIt figured, I thought grimly. James may have been in his 60s but he was far sharper than most, and his memory for things was why he had so many good nights at the poker table. And of course he handled packages all day long. I'd hoped I'd gotten the weight of the bell and some sand to match the weight of a bottle; they'd come out the same on my scale. But he was better than a scale.\n\nHe looked at me, blue eyes narrowing. Then without another word he picked up a box cutter.\n\n\"Don't,\" I said. \"I guess I mixed up the packages.\"\n\n\"Hell you did,\" he said, slicing. \"What the- Fermin. This is prohibited material.\"\n\n\"It's a bell. How is that prohibited?\"\n\n\"We're on Cuban soil. Mailing things from here to the US falls under special rules. You should know that. Objects of value, including historical artifacts -- those don't go in or out. An old Spanish bell? You aren't shipping this anywhere.\"\n\n\"We're the US Navy! Since when do we need Cuban permission to do anything?\"\n\n\"Lower your voice, we've got locals working in the back. And you're not shipping on Navy business, so the usual laws apply.\" He lifted the bell to take a closer look, and to my horror the paper I'd wadded into it fell out. \"What the hell, lad, you stole a church bell?\"\n\nBefore I could stop him, he rang it.\n\nI snatched it out of his hand, but he continued to stare at it, silently. Frantically I wadded paper back into it. \n\n\"I'll be right back,\" he said. \"I... need a word with our customs liaison. You better leave, lad.\"\n\n\"James,\" I said sickly, but he turned and went through the door behind him.\n\nI should have jumped the counter and grabbed him, instead of stuffing the bell back in the box in a panic. Besides, not James, I thought, he was arrow straight, he'd surely have nothing to repent of-\n\nThe sound of the shot, and the soft thump, and then the screams...Even now I can't get those sounds out of my head.\n\nIn the confusion I slipped out, shaking.\n\nThis bell couldn't be allowed into anyone else's hands. I couldn't ship it. I was going to have to take it myself. And as busy as the base was at the moment, with some foreign dignitary visiting... I wouldn't be getting any extended leave this week.\n\nI realized I was going to have to go AWOL. It meant stealing a local sailboat -- making off with a Navy boat was out of the question; I'd be caught inside a half hour. I'd sail to Haiti, a long but possible one day trip. In Haiti. I'd have no problem as a travelling American missionary, and a flight from Port Au Prince to New York under would be easy enough to arrange with a bribe. The risky part would be landing at JFK airport; by then they might have some nice Navy personnel with nice paperwork and a special car waiting for me. Yeah. (It's a rule in the military: when they're being nice to you, you are very, very screwed.)\n\nI'd have to arrange a task that took me off base for at least a day, so my absence would not be noted at first. \n\nI'd be caught in the end, of course, but if I could deliver the bell, and then self-reported at Lakehurst in New Jersey... I had no idea what story I'd tell them. If I reported in within three days the penalties would be unpleasant but not severe. I had a sterling record. Maybe that would count for something.\n\nThe penalties didn't matter. For whatever reason I'd taken on this job, and I'd see it through.\n\n+++\n\nYou are Adriana. You are mine. \n\n\"Oh... oh, shit,\" I whispered, softly. I pressed my fingers together, but the blood had already stopped. I started at the page, shaking.\n\nIt began to blur, sifting...\n\n\"Adriana.\"\n\nI was hearing a voice, a soft whisper. \n\nBut not all around me. It was inside me.\n\n\"What... who are you,\" I whispered, shuddering.\n\n\"You will remember in time,\" the whisper replied. I can't describe things like pitch and timbre. It was all in my head. But it was human, and male. Very male.\n\n\"Don't... don't make me forget again. Please. This hypnosis. Please.\"\n\n\"No more forgetting. You are mine now, mine at last.\"\n\n\"I don't und-\"\n\n\"There is not much time. This with the blood will not last long.\"\n\n\"Wait. You're speaking Spanish? How do I understand-\"\n\n\"You will always understand me. I will always understand you. But there is not much time like this, so listen-\"\n\n\"I'll just prick my finger again-\"\n\n\"No. If I allowed that again you would never stop. I will tell you when. I will tell you all things, until the day we meet. And then you won't need to be told anything anymore. You will have to travel. But for now close your eyes, there is something I need you to feel.\"\n\nMy eyes slid closed, obediently. \"Are... are you still here?\"\n\n\"Yes. Be silent. Feel.\"\n\nFor a moment, nothing....\n\nThen warmth, suffusing me.\n\n\"I-\"\n\n\"Silence!\"\n\nWarmth, and shivering, but the shivering was fear. And then...\n\nMy lips parted, my back arched, my body sifted into a kneeling position on the floor, my head went back...\n\nHands... touching me. His. Powerful hands, the kind you obey out of awe, not fear. I could not open my eyes, I could not see, it was not his will that I saw him, but it was his will that I be touched. My thighs parted before his hands got to them because I knew he would not be gentle if he had to part them himself. But he was gentle with my breasts, always... except sometimes with the nipples...\n\nA finger entered, violated me, but no, I'd wanted this; and then his lips on mine, and I could not breathe. In the distance I heard a bell, calling to Mass; we would not be attending. He needed me here, now, hidden among the olive vines of the ancient orchard, in this blazing heat. We'd been apart for too long, they'd tried to keep us apart but he'd sworn they would never succeed, and my mouth moved frantically on his. His lips still tasted of the orange he'd stolen from the grove we'd snuck though. He liked to steal what was not his, and now that included me. I was his, he gave me no choice, but then I'd never asked for one, not since that first rough kiss. His mouth, kissing, tasting me, demanding more...\n\nThe world spun, and then I was back in my apartment, panting, on the edge of an orgasm and sprawled on the floor like a toy, suddenly cast aside. Moaning, I reached for the needle again, but my eyes opened and I saw what was written.\n\nYou have been chosen.\n\n**\n\nNever show this to anyone. Take the job. Obey my words.\n\n**\n\nYou are Adriana. You are mine.\n\nBleed only when I ask, or you will never stop. You cannot live then, so I must live now. You will travel soon. Ring ring, Adriana.\n\nI stared at the words. Ring?\n\nThe phone rang. \n\nI shivered; I'd seen the Matrix, and as scary as that scene was on screen, it was so much more intense in real life.\n\nIt rang again and I picked it up. \"Ring ring, Adrienne speaking, Hi Steve,\" I said, voice shaking.\n\n(Why did it - he - call me Adriana?)\n\n\"Uh, yeah, hello to you too. Ok, now I'm begging, ok? He's offering more money.\"\n\n\"Then... yes... for two hundred and seventy five per hour, two hour minimum.\"\n\nThat got me a shocked silence. I smiled.\n\n\"Baby-\"\n\n\"I'm not your baby, Steve.\"\n\n\"Sweetheart... there are a lot of porn models making less. These are stills, not full video and blowjobs.\"\n\n\"Maybe you shouldn't have told me he was well regarded. That means rich.\"\n\n\"Rich doesn't mean stupid. You got about half that for the cover work.\"\n\n\"But he wants me, doesn't he. Look, I'm not cutting into your profit, I know you'll just pass the cost to him.\"\n\nHe hesitated. \"You'll get paid for set time only.\"\n\n\"No, you'll pay for the time I spend with your markup artists and all the rest. But I won't charge you for time I spent talking to the customer. I'm not a whore.\"\n\n\"Addy, when word gets out -- and it might -- you won't land more contracts. There's names for girls that act like this.\"\n\n\"Principled? Dignified?\"\n\n\"You know you're up past the range for fetish work, right? No one does anything dignified for those kinds of rates. My last solo masturbator got one hundred dollars and she faked her fucking orgasm.\"\n\n\"Well, I won't be faking any orgasms, seeing as I won't be having any sex.\"\n\n\"At those rates he's going to demand--\"\n\n\"No pussy shots. No penetration. No masturbation. No video, strictly stills. And absolutely no re-release. He and I get digital copies and I will be checking online for years, and if it shows up anywhere you and he will regret it. No copies for you.\"\n\n\"Shit, Addy! I'm going to tell him exactly what you're demanding and honestly I think you just blew a good contract for both of us. I hope you're happy, ice bitch.\"\n\nI put down the phone, and closed and reopened the book. The words hadn't changed. I was still shivering. \n\nTravel? Where was I going to travel? And why?\n\nI put the needle and alcohol on a small plate by the book. Maybe he'd ask for more blood soon. I stared at the book. \n\nOlive grove? Where had that strange fantasy even come from? It had been intoxicating, intense...\n\nI jolted when the phone rang again. I'd been sitting there, daydreaming, for half an hour. Sheesh.\n\nIt was Steven again, and I picked up.\n\n\"Sweetheart... Um... I'm very sorry for what I said. Honestly I am.\"\n\n\"He accepted the offer, didn't he.\"\n\n\"Um...\"\n\n\"Yeah?\"\n\n\"You're to get three hundred an hour. He liked your attitude, he says he's tired of subbie little Asian sluts and likes that you have backbone as well as tits. His words, not mine. It will be a two day shoot, maybe longer if he has more ideas. On location. He'll pay airfare for you, me, and my team, by which he means Marcia. He wants us there in three weeks. He was vague about the return date.\"\n\n\"Wait. He wants us where?\"\n\n\"C\u00f3rdoba. Spain.\"\n\n+++\n\nI broke up with my boyfriend, over the phone. I felt nothing. There was just so much else going on, and we'd both moved on, seemingly effortlessly. I remembered my first boyfriend in high school; it had lasted six weeks, we hadn't even gone all the way, and I'd cried my eyes out for a week afterwards.\n\nI hung up the phone and wondered vaguely about dinner. \n\nA two day shoot, six hours in front of the camera, plus an hour of makeup and costuming. Three hundred an hour... Something over four thousand dollars. \n\nI looked at the book, shivering. \"I'm... going to Spain with you,\" I said softly. \"You made it happen. It's almost like you're... kidnapping me.\"\n\nThere were strange half memories... I whimpered, suddenly.\n\n\"And it's not the first time you have... is it...\"\n\nSuddenly I heard the whispers, and I could not make out the words, but this time they did not frighten me. I felt warmth, and arousal... and I fell asleep, smiling softly, amidst his whispers."
    ],
    "authorname": "HandsInTheDark",
    "tags": [
        "spain",
        "romance",
        "magic",
        "bell",
        "book",
        "candle"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/chosen-ch-04"
}