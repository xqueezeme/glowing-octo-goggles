{
    "title": "The Infinite Bk. 03 Ch. 08",
    "pages": [
        "Great Minds\n\nIt was supposed to be a week like any other, at least, that's what the cadets thought. Half a year had passed since enrollment, and now it was time for a shakeup. They entered the mess hall to find a large notice board covering the dueling scores, displaying the various weapon classes. However, the names had been changed. The school had been split in half, with all the cadets who had elemental magic removed from the weapon classes to focus solely on magic training, along with some general exercise and staff training mixed in to keep them fit. Anyone with sword, spear, mace, or bow magic, or under special recommendation, would stay in that one class for daily training, with continued shield training incorporated. Those who displayed monk abilities would be training under Sir Kiev.\n\n\"It seems you and I will be training under Lady Zodiac in the same class. This is going to be interesting,\" said Noah.\n\n\"Gods be praised,\" Alexis said, \"no more of the shield class. I swear, digging that pit was a nightmare.\" It was a sentiment shared by every cadet. Beside her, Sophia was weeping in joy.\n\nAfter breakfast, the cadets split up into their new classes and new garb. Because of the winter cold, their uniforms had been supplemented with leather armor, including gloves and helmets. Noah and Alexis now stood side by side on the training field, facing Lady Zodiac. Usually, she would be armed with her khopesh blade, but today, she had an academy sword hanging from her waist.\n\n\"Good morning, all of you. Up until now, all of your training has been basic, each of you being trained in how to use any weapon you might need, even if it's not your first choice, as well as to see who has warrior magic. That time has passed. To truly master a weapon takes decades of dedication and skill, but I'm going to get you as close to that point as I can in the time we have left. It's going to be miserable, painful, and exhausting, but this is the art of swordplay, and when you leave my tutelage, you will be true artists.\n\nAt the start of this year, I faced each of you in a sparring match to see what level you were at. That time has come once again. I want all of you to fight me with the intent to kill and the readiness to die. Rather than one-on-one, I will be fighting all of you as a group. You are free to use any sword magic, but just so you know, I will use it as well.\" She drew her glass sword. \"I've been teaching you how to win, but today, I teach you how to lose. I want to see how you face a hopeless situation. I want to see you get up as many times as it takes, knowing you'll be knocked back down. No one leaves here today without drawing my blood or shedding their own. Know that if you come at me with anything held back, you will end up losing something in the process. Now, come at me.\"\n\nWhere once there would have been hesitation, today, there was only courage, and the cadets drew their swords and charged as one. The only exception was Noah and Alexis, his hand on her shoulder.\n\n\"What are you doing?\" she asked.\n\n\"She doesn't plan on ending this quickly. We've got time. Let's watch her moves, get a feel for her style and mood.\"\n\n\"You think we can take her on ourselves?\"\n\n\"Anyone who goes down in one hit wouldn't have been much help anyway. Besides, I've been looking forward to you and me working together again.\"\n\nThe cadets circled Valia, most, if not all of their blades glowing with warrior magic, both named and unnamed. They closed in and attacked, a single blade fending off a dozen. Valia spun back and forth, knocking the cadets' swords out of the way and sending them sprawling back with sheer strength. She was knocking them down, but her months of tutelage gave each of them the resilience to get back up. Every time they attacked, it was faster than the last, their skills sharpening with their mindset.\n\nOne of the most important lessons she taught them was to blend their moves together, wasting no energy on pauses and transitions. Every attack led to another. The longer they fought her, the better they were getting at reading the path of her blade and predicting her moves. They began to close in once more, this time able to resist her attempts to open up space. It was time to step up the intensity. Valia raised her sword, and a magic circle appeared.\n\n\"Zodiac: Baom!\"\n\nShe swung down her sword and struck the ground, causing the frozen earth to be launched skyward as if a missile had just impacted. The shockwave knocked the surrounding cadets off their feet, all but one. Ken Rilgis, still standing, went against her in a titanic clash. He swung at her with all of the speed and skill in his body, a rapid-fire attack that forcefully drew Valia's focus. Their glass blades collided in a horrifying display of edge-to-edge combat that should have destroyed their swords, but their styles were perfect, and their enchanted weapons didn't even chip.\n\nWhile she was distracted, one cadet held his sword as though it were a baseball bat and began to charge it with mana. It became a roaring torrent, like a jet of colorless flames, and he charged towards Valia for a swing to the back of the neck.\n\n\"Zodiac: Udan!\"\n\nFor all those watching, it was as if Valia existed within a different flow of time, with her movements becoming so fast that she was able to step past Ken's swinging blade, grab his wrist, knock him off his feet, and throw him aside. She then dodged the other cadet's swing, avoiding the mana torrent and then closing in to slash him across the chest. The blow was light, and with these dull blades, his leather armor withstood the force, but it still knocked the air from his lungs and dropped him to the ground.\n\nTheir timing was off by a few seconds, but several cadets still tried to take advantage of the opening and attacked her from all sides. They each aimed for her with a horizontal strike with no space to dodge or block. \"Zodiac: Sandulam!\"\n\nShe fell backwards, simply dropping as if she had fainted, and all the blades missed her. However, rather than hitting the ground, she stopped as though frozen in time. The heel of her right foot was touching the frosted soil, but the rest of her body, completely horizontal, was hovering as if on a cushion of air. All the cadets were flabbergasted by the sight, but before they could try to make sense of it, she lashed out. She swerved around like a joystick, slashing at each cadet and sending them sprawling back.\n\nOther cadets took their place, trying to put up a continuous assault. She continued to move without reason, spinning on a single point or moving back and forth from horizontal to vertical. She was like a buoy in the ocean, as no matter how far she leaned back, be it dodging or blocking an attack, she'd shoot right back up and counterattack. As long as her heel or toes were touching the ground, gravity itself seemed to have no effect on her.\n\nBefore long, almost every cadet had been knocked down, and the ground was littered with broken blades. Valia turned her attention to Noah and Alexis. \"Sometime today, please?\"\n\n\"I just wanted to wait until you were done putting the kids to bed,\" said Noah. He turned to Alexis. \"This would be better if you had your bow.\"\n\nShe gave a small huff of amusement and punched him in the arm. \"Come on, let's have some fun.\"\n\nShe and Noah approached Valia, both of them with swords in hand. They stared her down, all three assuming their stances. Then, in the mere blink of an eye, they were going at it like warring gods. Their glass blades were swinging so fast that all of the cadets were at a loss for words. Noah and Alexis were attacking Valia from opposite sides to divide her attention, moving as fast as physically possible, with Valia once more using her speed enhancement technique to keep up.\n\nShe was switching back and forth between them, struggling just to hold them back, let alone send any of her own attacks. For the cadets watching, it was like three tornadoes colliding. Something had to change. Zodiac cast her Baol spell and leaped backward through the air, high over everyone's heads. While she was airborne, Noah drew one of his flashbang cards and aimed it at her. He fired three shots, hitting her with two, and she stumbled on the landing.\n\n\"I told you to only use sword magic,\" she cursed as she rubbed her eyes.\n\n\"You also told us that this was supposed to be a no-win situation, in which case, I might as well cheat,\" said Noah.\n\nHe and Alexis charged towards her while grabbing broken blades and throwing them like knives. She blocked and deflected all of the shards, and the two once more went at her. They fought side by side this time, repeatedly trading positions to keep her distracted. The onslaught of their attacks was never-ending and only getting faster and faster. Alexis lacked that natural affinity when it came to using a sword, but her reflexes and coordination still put her ahead of everyone else, making her one of the few people who could keep up with Noah.\n\nValia reactivated her balancing spell, trying to open up a little more space between her and her opponents. Noah hit her with another flashbang as soon as she was out of their reach. She didn't dare stop moving, for every time she paused, he'd fire another spell at her. She kept running, both to dodge the spheres of light and any cadets trying to attack her while she was vulnerable. She could barely hear or see, and her head was throbbing. Noah wasn't giving her an inch. There were a few spells she could use if she genuinely wanted to make the fight unwinnable for him and Alexis, or even just kill them, but that would mean admitting she was beaten. She'd just have to try a little bit harder.\n\nValia tore off some bits of fabric from her shirt and stuffed them in her ears, as well as closed her eyes. She finally came to a stop and sheathed her sword, but the battle wasn't over. She assumed a stance, ready for a quick-draw attack. \"Zodiac: Avagath. Udan. Enter this killing field, if you dare.\"\n\nThe magic circle once more appeared, but this time, it was around her with a ten-foot radius. Several cadets, gathering what strength and courage they had left, attacked her from all sides. The moment they stepped into the magic circle, though she could not hear or see them, she felt them with crystal clarity. She felt the blood flowing through their veins, the constricting of their muscles, their fearful breaths, and the angles and speed of every move they made. It was not sensitivity to vibrations or any other awareness derived from the five senses, but one completely unique to her.\n\nThe cadets entered her reach, and in an instant, it was over. She drew her sword with inhuman speed, slashing one cadet across the stomach, another across the chest, across the legs of the third, and then similarly knocked out another three attackers, taking out six cadets in the blink of an eye. All those watching were shocked and horrified, and for the first time, Noah heard fear in Alexis's voice.\n\n\"Noah, I don't think we can top that,\" she said as the wounded cadets struggled to drag themselves away.\n\nNoah gave a slow exhale. \"I might be able to, might not. Hang on.\" His flashbang card had disintegrated, so he drew a new card from his pocket and aimed it at Valia. \"Mist Bomb.\"\n\nSeveral spheres of illusory water hit the ground around Valia, just outside her magic circle. Upon contact with the ground, they were vaporized, turning into a dense cloud of fog.\n\n\"That won't stop her.\"\n\n\"No, it won't. It's to stop everyone from seeing what I'm about to do.\"\n\nNoah approached Valia while continuing to fire mist bombs around her, expanding and deepening the cloud of fog. The cadets all watched with anticipation, trying to figure out what Noah had planned. Once he entered the cloud, he cast his invisibility and split from his clone. All he had to do was inflict a wound on her, and she'd hopefully end the fight. Noah readied his sword and stepped into the circle.\n\n\"Zodiac: Baol!\"\n\nValia immediately activated her magic and jumped back as high and as far as possible. She landed outside the cloud, hair on end, eyes wide, and heart racing. She pulled the fabric out of her ears and glared at Noah as the cloud vanished. \"What did you do?\"\n\n\"Lazy Zodiac, are you all right?\" Noah asked.\n\nShe fell to one knee. \"What did you just do?!\"\n\nNoah sheathed his sword, likewise concerned by the state she was in. \"What's say we resume this fight on another day? I think we could all use a break. Lady Zodiac, you should probably go to the infirmary.\"\n\nShe rubbed her forehead, wincing from the pain behind her eyes. \"Everyone, work on your endurance training until I get back. I'll know if you slack off.\"\n\nShe began the slow walk back to the academy. Alexis came up beside Noah. \"What just happened?\"\n\n\"She managed to sense me. Or at least, she managed to sense something had entered the circle. I've stood right in front of her while using that magic before and she didn't sense me then. That circle must enhance her spiritual sense to its maximum.\"\n\n\"Do you think she'll be ok?\"\n\n\"I'm not sure.\"\n\nOther cadets swarmed Noah to ask the same question as Alexis, but he pulled away and went after Valia. Her steps to the academy were slow and unbalanced. He saw her struggling to remain on her feet. Just when it seemed like she was about to fall over, he caught her.\n\n\"I got you,\" he said, keeping her steady on her feet with her arm over his shoulders.\n\n\"I can get there myself. Stay with the class.\"\n\n\"You sound just like Alexis, rarely accepting help. If you're mad about the fight, then consider this me making it up to you.\"\n\nShe gave a soft chuckle. \"It's not that. I heard about that show you did. I don't need people to see this and get ideas in their heads. They'll probably think you're taking me back to your room, or that I have morning sickness.\"\n\n\"If I were to take you back to my room, it would be in the princess carry. I'm romantic like that. If you prefer, I can heave you over my shoulder like a rolled-up carpet.\"\n\nShe leaned against him. \"Just know that if you grab my ass, you're dead.\"\n\n\"I wouldn't dream of it.\"\n\nThey managed to get inside and out of the cold.\n\n\"So, are you going to tell me or not? What did you do back there?\"\n\n\"You have your magic, and I have mine. Let's just leave it at that. If it's any consolation, though, I had no idea you'd have that kind of reaction, so I apologize for that.\"\n\n\"You and I need to have a serious talk soon.\"\n\n\"See? Now that's the kind of thing people will misinterpret.\"\n\n\"I'm not kidding. When I use that spell, I can feel everything within the circle as though it's a part of me. I can feel the distance in air the same way I feel the distance between my hand and my shoulder. I feel everything happening to my opponent and everything they are doing. You... it felt like you walked on my grave.\"\n\n\"Well my intentions were nothing of the sort, I promise you that.\"\n\n\"And that flashy spell of yours really hurt.\"\n\n\"I doubt many of the cadets will be sympathetic to you for that. You did just beat the shit out of them.\"\n\n\"It's called teaching.\"\n\n\"Yes, yes, I'm aware. It is a tried and true style. You have your way of teaching young people, and I have mine.\"\n\nDespite her headache, Valia still laughed.\n\n----------\n\n\"I'm sure your morning teachers already gave you this speech, but now it's my turn.\" Sir Elyot was addressing Noah and the rest of the class. Sitting beside Noah was Sophia. \"Half a year has passed, and you're now ready to move on from fundamental study to a more intensive course. However, rather than me teaching you, this will be hands-on work. Your task is to create a spell or tool with as much magic power as possible. You have to come up with an idea, perform the calculations, select the materials, and put it together with proper recordings. The purpose is whatever you wish it to be, but you must give it your all, and it must be a success.\n\nIf you fail to impress me, or I get the feeling that you're slacking off, there will be punishment, so think carefully and work hard. This is the only time that materials will be provided to you for personal interest, so don't let this opportunity pass by.\"\n\nNoah raised his hand and was called. \"What about discovering a new magic principle or expanding on something established?\"\n\n\"The main idea is to create a defining spell, one that will give you victory in battle and earn you recognition. However, contributing to the field of magic will also be acceptable, especially if your work will inspire others. What kind of teacher would I be if I dismissed the next revolution in magic? Just make sure you back it up with proper research and results. I want you to spend the rest of the class researching your idea. Look for examples of similar work and study the resources you'll be using. Come to me if you have any questions.\"\n\nAll the cadets got up from their chairs, either heading to the library or getting in line to speak with Sir Elyot. Sophia followed Noah like his shadow, but didn't speak until they were alone among the shelves.\n\n\"You have an idea already?\" Sophia asked him.\n\n\"A few, actually,\" he said as he began his search for a book in particular. \"What about you?\"\n\n\"Well... I have a bit of an idea, and I was hoping you could... help me out?\" Now that Alexis wasn't around, she seemed more flushed and nervous than usual.\n\n\"Sure, what's your idea?\"\n\n\"I want to expand on healing magic, and since you seem to know a lot about the human b-b-body, I was hoping you could provide some insight.\"\n\n\"I think I see what you're getting at. You want to use magic with a more secular mindset, rather than relying on religious doctrine.\"\n\nShe lit up. \"Yes, that's right!\" She immediately covered her mouth, realizing she had been too loud. \"I mean, that's correct. That lecture you gave on the human reproductive system, it made me realize that a lot of forbidden knowledge simply hasn't been properly researched.\"\n\nDespite its necessity, magical healing was more about mana and prayer than actual knowledge. Under the Lumendori faith, exposure to human blood or having an uncovered wound was considered sinful. Healers sometimes had to work with their eyes closed, so as not to be sullied by the sight of blood. Exposed organs and muscles were also not to be seen, as was being in the presence of dead bodies, so no cadaver-based research had ever been practiced.\n\n\"The label of taboo is a purely abstract concept. Knowledge can't be taboo or evil, only the methods it is acquired. I'd be glad to help you. Honestly, I could use your help as well. I have a bit of trouble casting magic, so I need someone who can activate it for me.\"\n\nShe bowed at a near 90\u00ba angle. \"Thank you so much!\"\n\n\"Sure thing. Come on, let's sit over here.\" With some books in hand, they selected a table to work undisturbed.\n\n\"What is your project on?\" Sophia asked.\n\n\"Alchemy.\"\n\n\"You mean those spells for preparing potion ingredients?\"\n\n\"That's right. It's used to break down materials into their base ingredients. An alchemist will take a potion and apply the commands to [divide] [contents] or dry ingredients with the runes [remove] and [water]. The problem is that the study and knowledge of alchemy are still in their infancy.\"\n\n\"I had heard that alchemy is one of the most accident-prone fields of study, so it hasn't progressed much with time, but the dwarves supposedly know it best. They use it as a way of purifying gems and ores.\"\n\n\"That's just scratching the surface. I'm not interested in breaking things down so much as assembling them. I want to figure out how to use alchemy to combine ingredients. The problem is that alchemists focus on the elements of nature, which only describe the states of matter, rather than elements of the universe and their actual identities.\" He laid out some parchment and began writing runes. \"I have a theory that the runes of the gods have actually been misinterpreted. Water, air, earth, fire, and lightning, otherwise known as liquid, gas, solid, plasma, and electricity. As for the holy element, I'm still on the fence as to whether it represents mana itself or the concept of abstraction and thought.\"",
        "\"Wait, you said something about the elements of the universe?\"\n\n\"I'm talking about the chemical elements, the building blocks that make up everything in the universe. You've probably already heard of several. Copper, iron, gold, silver, all chemical elements. Steel is a combination of iron and carbon, the black material of charcoal. Water is made of two different kinds of air, called hydrogen and oxygen. Those light particles bond together to create a heavier particle, and then when it's heated to become steam or mist, those bonds break down and become air once more.\"\n\nSophia seemed to be teetering between blind acceptance and natural skepticism. \"Are you sure about this?\"\n\n\"Perfectly sure. There are no runes I can find corresponding to the chemical elements, but that means they either wait to be found, or there is another way to depict them using runes. You help me look, and I'll tell you everything you want to know about the human body.\"\n\nNoah and Sophia studied together in the library for the rest of class and the open hours after. She helped look through and learn unknown runes, and he recited everything he knew about anatomy. Medicine had been a frequent research topic for him across the millennia, working as several different kinds of doctors, so his knowledge was immense. When Sophia wasn't looking through runes, she wrote down everything he said, page after page of knowledge.\n\nNoah would usually conceal his true personality in all of his past lives and abstain from sharing such information to blend in, but he found himself swayed by curiosity this time. He wanted to see what Sophia would achieve using the knowledge he gave her and how her magic would evolve. Still, handing out this kind of information would get him in trouble, so Sophia agreed that for now, his name would stay out of all of her work, and she'd never tell others where she learned everything she had. He spoke to her in a low voice, so no one could overhear, and paid no heed to Galvin, skulking around.\n\nWhen dinner arrived, he and Sophia met Alexis in the mess hall.\n\n\"Look at this, this what Noah says the inner ear looks like,\" said Sophia, pausing between bites to show Alexis the notes she had been taking.\n\n\"What are these loops?\" she asked as she looked at the sketch Noah had made.\n\n\"Semicircular canals, each one filled with fluid. As you move your head and body, the fluid shifts, pooling in the lowest area and letting you tell up from down. To think that our sense of balance comes from our ears!\" she babbled with her eyes sparkling with excitement.\n\n\"That is incredible,\" Alexis said, but without nearly as much enthusiasm.\n\n\"Oh, there's Mary. I have to show her this!\"\n\n\"Be careful with who you show this stuff to. I'm already on thin ice after that lecture,\" said Noah.\n\n\"Don't worry; she shares my thirst for knowledge.\"\n\nSophia raced off, and Alexis followed her with her eyes. \"She's happy,\" she murmured once it was just her and Noah.\n\n\"I thought that was what you wanted. I seem to recall you saying how nice it was to see her smile.\"\n\n\"It is. I just... I don't like the idea of you two being alone together.\"\n\n\"I can understand that, but you don't have to worry about me trying anything with her. I'm rooting for you two kids.\"\n\n\"It's not necessarily you that I'm worried about. You keep giving her things that I can't.\"\n\n\"Instead of thinking about what you can't give her, you should be focusing on what you can, but aren't willing to. You told her you needed time to think, which is fair, but if you want to be the only one in her heart, you have to actually be there.\"\n\n\"You aren't really in any position to judge me. You are far from innocent.\"\n\n\"If you don't trust her around me, you should study with us. Sir Elyot is going to give you the same assignment, and while I know you usually focus on swordplay in your spare time, you should probably crack open a book.\"\n\nFor the rest of the week, during their free time, Noah and Alexis studied together in the library, with Sophia attending whenever she could get away from the infirmary. Research assistants aside, they also served as excellent deterrents against female cadets. Ever since his demonstration at the Knight's Sheath, the flirting had become incessant, especially from Allison. Their affection wasn't unappreciated, but more sex on academy grounds would just get him in trouble, as well as cut into his study time. As long as he was in the academy, he had to focus on his research.\n\nAs for his sword class, not only was it now five days a week, but the intensity of the lessons had reached new, borderline-tortuous heights. The peace of study was a sweet relief, and he, along with all the other cadets, was overjoyed when the weekend arrived. On Saturday, Alexis helped him with his meditation, and on Sunday, he visited the Knight's Sheath. He listened to some music from Daniel, fucked around with Bella, and went on to see Cyrilo. She kept him up to date on all the fresh news, rumors, and gossip, as well as things not yet known by the public.\n\n\"People have been asking about you, or rather, asking about the young masked man skilled in bedroom techniques,\" said Cyrilo as she poured herself a glass of apple wine. Noah kept her on retainer as his information broker, and every week, he'd treat her to a bottle of wine in return for their services. \"They want to see you make your grand return. Women have even been volunteering to be your next assistant, and I don't just mean the women who work here.\"\n\n\"Whatever happened to your fear towards the church?\" Noah asked as he exhaled a cloud of gonlief smoke, further thickening the air in the room.\n\n\"You want me to eat my words? Fine, I'll fry them up, load them with spices, and lick the plate. Between you and Daniel, the Knight's Sheath could become the most profitable business in the entire city.\"\n\n\"But has there been any response?\"\n\n\"Some protests and letters of condemnation, nothing I'm not used to. Anyway, have you thought about coming back for another show?\"\n\n\"Unfortunately, I'm on very thin ice with the commandant. For the moment, I'm safe from expulsion with that parcel I gave you, but if I push my luck any farther, he may retaliate by some other means. For now, I'll have to take a sabbatical from the stage.\"\n\n\"So leave the academy. Come and work for me.\"\n\n\"I told you before, I can't. Maybe when things cool down, I can do another show, but for now, I can't jeopardize my studies.\"\n\n\"Well, as a researcher, I can certainly respect your priorities. What are you working on at the moment?\"\n\n\"That's actually one of the things I wanted to ask you about today. I was hoping you might let me borrow any notes or books you have on alchemy. It's for an academy project.\"\n\n\"Surely the academy has a library full of information on alchemy.\"\n\n\"Not as much as you might think, so I'd like to utilize every possible resource. Alchemy is a scarcely-understood magic from what I've seen, but I'm hoping to reinvent the technique by incorporating knowledge from my old world. While there is no magic where Daniel and I come from, our knowledge of everything else is centuries ahead. When I started my research, I was hoping that magic would provide all the answers I wanted if I just changed my mindset, but it seems like being open-minded is actually holding me back. I need to look at the world as I usually would, not as sages do.\"\n\n\"Hmmm, very well. I will compile my notes for you, on the condition you keep them secret and share your findings with me. I'll have a book ready by next week.\"\n\n\"I appreciate it, thank you.\" He looked past her to the wall of books and scrolls, possibly holding the answers he needed, and not just concerning alchemy. She caught him looking and knew there was more he wanted.\n\n\"I get the sense you want to ask about something else. Well, spit it out.\"\n\n\"Very well, I'll be blunt. You told me your aging curse came from a stone slab you found. Do you have it with you?\"\n\n\"Yes, I keep it here, but for your own safety, I shouldn't even let you see it.\"\n\n\"I just want to see how it's written, the runes used, and record the formulas.\"\n\n\"Is this still about alchemy?\"\n\n\"Alchemy is just a side project. What I really want to study is time magic.\"\n\n\"Time magic? You're a little young to be looking into that.\"\n\n\"So it does exist.\"\n\n\"No, it doesn't, but elderly researchers at the end of their careers love to waste their time on it.\"\n\n\"In all of my research and in every spell I've seen, time is only used as a frame of measurement. Time, as a malleable concept, has never been considered, at least beyond simple theory. I have yet to find any mentions of manipulating the flow of time or possibly traveling through it.\"\n\n\"That's because no one has ever made any progress on it. When it comes to runecrafting, time is an inert concept, so it's impossible to identify because it won't react to any triggers.\"\n\n\"So you've looked into it?\"\n\n\"Time magic was the first lead I followed in my hunt for a cure, but no such luck. Rather than actually manipulating time, my curse accelerates and reverses the process of aging. It sounds like an inane distinction, but while the runes for subsets like 'duration' or 'lifespan' are known, the actual rune for 'time' is a mystery.\"\n\n\"So it's a theoretical rune, right? A rune whose image has yet to be discovered or has been completely forgotten. Ironic, the rune for time being lost to time.\"\n\n\"Correct. Such runes unbalance every spell they're applied to, making them impossible to activate and thereby impossible to define. A few great sages in history are rumored to have forced a time spell of some kind, but it was always fatal. Those who try to mess with time either waste their lives or are painfully disintegrated.\"\n\n\"Well, I have something that those sages didn't: information from my world. Just like with alchemy, if I combine the power of magic with modern knowledge, mastery over time should be possible.\"\n\n\"Thinking you have knowledge or insight others don't is the hubris that leads arrogant sages down the path of destruction. Take it from me. Finish your alchemy project, then I'll consider showing you the slab.\"\n\n----------\n\nThat evening, Noah forsook the seclusion of his bedroom and took a chair by the fireplace in the dorm's common room. The noble cadets routinely gathered to lounge and socialize, but Noah's presence stood out. Rather than a social craving, he needed to use the fireplace. He had hung a cauldron over the flames, filled with monster blood and various forms of plant matter. He used incense to cover the smell of the blood, so no one complained. Once it had been boiled down to a thick paste, he planned to paint it onto a birch plank and expose it to moonlight for five nights. After, it would be mixed with special oil and set on fire, and the ashes would be added to a mixture of powdered goat hooves and distilled vinegar. All this work to make ink.\n\nThere were multiple inks favored for different kinds of runecrafting, and each one had a specific recipe and complicated preparation. The one Noah was making was known to assist in alchemy. Between making the ink, the endless hours spent researching, and the high failure rate for experimentation, it was no wonder runecrafting was ignored by most knights and adventurers. It was tedium on a level that would drive most people insane.\n\nHis company surprised many of the cadets. When Noah first arrived, he had enacted a contract of total avoidance and indifference, a contract he had gladly fulfilled, until now. However, their view of him had changed since then. He had proven himself in combat, and his recent infamies showed his exceptionalism in \"other\" qualities. They didn't like him or hate him, but he was someone to be wary of.\n\nThere were those who avoided him, repulsed by his deviance and fearing humiliation like the princes, and there were others who approached, women trying to flirt and men who sought his wisdom. The book he was reading failed to dissuade them, and he was interrupted a few times. He'd turn on the charm and indulge them a little, then direct their attention away like he was throwing a dog treat.\n\nThat trick didn't work on Galvin. They had avoided each other for the most part, Galvin bound by his mother's orders, but seeing Noah intruding on his territory was weighing on his frayed self-control. With everyone else watching, he walked over and glared down at Noah.\n\n\"What do you think you're doing here?\" Noah ignored him. \"I asked you a question! What the fuck do you think you're doing, sitting in this room that you aren't even worthy to clean?!\" Noah continued to read without even glancing at Galvin. \"I'm talking to you!\" Galvin threw a wild punch, and Noah raised his book to defend. Galvin's fist struck the rigid leather spine and he stepped back, cursing in pain. \"Son of a bitch!\" Noah resumed reading as if nothing had just happened. \"Answer me, Goddammit!\"\n\nNoah sighed. \"Instead of answering your question, I should be the one asking it. What do you think you're doing? What could you possibly hope to accomplish with pointless antagonism? Are you trying to impress your friends by berating me? Do you think I'll relinquish my chair and slink away? There is nothing you can do to intimidate me, and you know it. Just let it go, and remember you're one day closer to never having to see me again.\"\n\n\"You don't deserve to be in this room, this academy, or even this kingdom! I'm marking you as a traitor to the country!\"\n\nNoah had once more gone silent, causing a blue magic circle to appear around Galvin's wrist. In response, Noah put his hand on his sword, a silent warning. With the tension rising, Galvin's underlings got involved.\n\n\"Prince Galvin, he's not worth the trouble.\"\n\n\"Mark's right. Not here, Your Highness.\"\n\nThey managed to pull him away and defuse the situation. As they walked off, one of them, Mark Saveat, said lowly, \"I think I have an idea of how to get back at him.\"\n\nWith the annoyance gone, Noah returned to his astronomy book. Despite Cyrilo's warning, he continued to search for hints to time magic, having cast his focus off mysticism and returning to the realm of science. Any astronomer worth their salt would have studied the concept of gravity and at least come up with theories. Gravity was one of the fundamental forces of existence and could manipulate time, so the identity of its rune was his best lead at the moment.\n\nThanks to magic, the field of astronomy had developed far, despite the level of technology. The general awareness was that everyone lived on a round planet in a heliocentric system. Despite the progress, the actual rune for gravity was steeped in mystery, just like the time rune. Synonymic sub-concepts like 'weight' or 'momentum' would take its place in any spell.\n\nHe finally came across a name of interest: Valon Zodiac, Valia's brother. Years ago, he submitted a theory that gravity could be distorted and even experience ripples due to the celestial bodies. The fact that he had determined the existence of gravity waves put him far ahead of all his peers, despite the theory's rejection by the magical community. The problem was that he was dead. According to the kingdom, he was exposed to a deadly poison while brewing a new type of potion. Supposedly, Valia was so stricken with grief that she retired from active service as a knight and took up teaching. The fact that Valon was dead was a problem, but if his research and notes were intact, then hope endured.\n\nMonday brought with it the return of his sword training, though now that they had passed the midyear mark, every day meant sword training. Valia had spent the previous week drilling the cadets on advanced fighting styles and more difficult exercises. Today they were doing sustained handstands, with Valia leading them. However, she had upped the difficulty, not just by doing it with one hand, but by incorporating an academy sword, using it like a stilt. Her entire weight was balanced on the tip of a glass sword, while all the other cadets were struggling to remain upright with both hands. It was to show them what would be expected of them in future lessons. Noah maintained a one-handed handstand, but it left him steaming from all of his sweat evaporating in the frigid morning.\n\nHe wished to speak to her about her brother, but considering the difficulty of the subject, he had resigned to putting it off until the proper moment. During the passing days, Noah divided his study time between alchemy, assisting Alexis and Sophia with their projects, and now searching for everything he could on Valon Zodiac. His magical skill and power were equal to his sister's sword mastery, and his accomplishments were many. Over the centuries, he revolutionized the learned community's understanding of both magic and science.\n\nLike Noah, he understood magic formulas were not contracts with the gods, but mathematical equations. He theorized that every event in the universe, from the cosmic to the subatomic, had a corresponding runic sequence, like lines of code in a virtual world. The codes were changing every second with the progression of time, and to use magic was to alter those codes.\n\nUnfortunately, while he was spoken of in reference with great respect, finding anything he wrote was difficult. That was how it was with magic researchers. They didn't usually like to share or donate their work, at least without abridging it first to make themselves look good. The rough notes, the messy books and scrolls with scribbled thoughts and rough sketches, could only be retrieved from the homes of deceased researchers, often donated by their families who had no idea what else to do with them. After days of searching, he had to call it quits and turn to his final option.\n\nFriday arrived, and so too did the end of another sword class. While everyone else was leaving, Noah approached Valia. \"Lady Zodiac, could I speak to you for a minute?\"\n\n\"Cadet Noah, how can I help you?\"\n\nThe way she looked at him was different from how she looked at everyone else. He had seen the expression on her face, the glimmer in her eyes when other cadets came up to her. She'd praise and scold them as a teacher would, trying not to treat them as children showing her their finger-paintings. Then, when he'd speak to her, he'd see her raise her chin, not as though looking down on him, but the opposite.\n\n\"I'm afraid it's regarding a sensitive subject, and I'm sorry for bringing it up. I know your brother recently passed, for which you have my heartfelt condolences.\" He saw the light leave her eyes, but pressed on. \"I understand he was a brilliant and powerful magic caster, and reading about him, I can't help but admire his accomplishments and contributions to the various fields of study. As a likewise pursuer of knowledge, I find myself following in his footsteps, hoping his research can help me develop my own. The problem is that the library is rather scarce on his material. I was hoping that as his sister, you might have his notes and be willing to let me see them.\"\n\nValia took a deep, pained breath, and looked into the coming winter breeze. Like the cadets, she wore a leather helmet for protection against the cold, but he could still see her silver hair fluttering like twinkling starlight.\n\n\"A word of warning, cadet. Following in the footsteps of dead men is an easy way to end up like them, especially when it comes to magic.\"\n\n\"I'm aware of that, and I've been similarly warned before, but I'm asking you because this is important. I know the risks, and I'm prepared to take them. I'm not afraid to die to get my answers.\"\n\nValia turned to him. \"Death isn't the only thing for you to be afraid of.\"\n\n\"I know that, believe me.\"\n\n\"It's one of the few things you've said to me that I actually do believe. But this isn't something I can talk about, and I need you to believe that.\"",
        "Noah stepped past her. \"I believe that you can't talk about it here and now, but you wish you could.\"\n\nHe didn't wait for her dismissal and walked away. As he headed back into the academy, he glanced at a tree standing near the training field. Perched in its branches was an owl, watching him. It was there for every class, morning and afternoon, and he suspected it had been present since the beginning of the year. He had noticed it a few times in the past, but not until he had daily sword training did he become suspicious.\n\nWith his magic, he could see the swirl of its mana, the same kind of shimmer he always saw when Cyrilo was in her cat form. It wasn't a real owl, but a transformed shaman, spying on Valia. With her sharp senses, she was likely aware of it, and if she knew she was under surveillance and not doing anything about it, then that meant the kingdom was behind it. Simply killing the owl could just cause more trouble, but he had a good idea of how to deal with it.\n\nThat Saturday, he saw Valia leave the academy, with the owl keeping its distance while not letting her out of its sight. Rather than go after her, Noah went down to the training fields, where the cadets were dueling. There was one in particular he needed, Gideon, and he had just finished a match when Noah approached.\n\n\"Hey Gideon, a word?\"\n\n\"I'm busy. All right, who's next?\" he scoffed before turning to the crowd of cadets, ready to fight and gamble.\n\n\"I need a favor. Hear me out, and I'll make it worth your while.\"\n\n\"Not interested. I said, who's next!\" They hadn't spoken since Noah left the barracks, so the cold reception was expected.\n\n\"I guess that'll be me then,\" said Noah, stepping into the ring.\n\n\"You're going to fight me?\"\n\n\"If it'll get your attention, sure.\" Immediately, cadets swarmed the ring to get a good view. Noah's infamy in battle had reached new heights after his recent bout with Lady Zodiac, so to see him go against Gideon, one of the resident brawlers, was something everyone had only dreamt of. Bets were being exchanged so fast, and by so many people, it was hard to differentiate between individual voices.\n\n\"The challenger's payment?\" asked Sir Reyns, supervising the duel.\n\n\"Standard fee,\" replied Noah as he unfastened his sword from his waist and left it behind.\n\n\"You're going to need that,\" said Gideon.\n\n\"I didn't need it the first time we fought, I won't need it now.\" Abandoning his sword opened up a hundred new wagers among the cadets.\n\nSir Reyns raised his hand. \"Both combatants, ready yourselves.\" Both Noah and Gideon assumed their stances. \"Begin!\"\n\nGideon closed the distance instantly, shooting towards Noah and using his momentum to launch a straight kick with the strength of a battering ram. Noah stepped to the side at the last second and replied with a kick of his own, swinging around and striking Gideon's head with enough force to knock him through the air. He tucked and rolled, getting back to his feet just in time to block Noah's punch, but not the second or third. Still, his constant battles with Seraph had taught him how to take a punch and keep going, so he brushed off Noah's hits and countered with his own.\n\nHe pursued Noah with a barrage of kicks, almost spinning like a top. Noah continuously moved out of his range, for if he tried to dodge and close in, he'd be targeted by Gideon's spear-hand jabs, just as fast as they were sharp. Despite his age, he had great talent and skill in combat, and was one of the strongest cadets, even without any weapons or elemental magic. Still, it was a thousand years too soon for him to think he could defeat Noah when it came to hand-to-hand combat.\n\nIt was when Gideon was spinning around for yet another kick that Noah acted, grabbing his incoming right leg with one arm and using his other hand to slam his hip with a powerful palm strike. Noah was in perfect range for a jab, but it was all Gideon could do to stagger back. His leg was both numb and stinging, as though it had fallen asleep. Noah's strike was strong enough to momentarily dislocate his femur, and though it immediately snapped back into place, the joint was throbbing, and he wasn't sure if he could move with it.\n\nNoah closed in, giving him no time to recover. The blows he unleashed were rapid, either circumventing Gideon's defenses or hammering right through them. Stomach, kidneys, neck, face, ears; every vulnerable spot was targeted with no discernible pattern, and Gideon was struggling just to stay on his feet. Noah grabbed Gideon's right knee and pulled it forward, throwing him off balance. He dropped to his left knee, hissing in pain from his wounded leg, and was then silenced by a solid punch to the chin. He fell on his back and didn't get up, prompting Sir Reyns to end the match.\n\nWhile the cadets exchanged money, cigarettes, and lemons, two academy healers went to work, patching Gideon up and getting him back on his feet.\n\n\"So, are you ready to listen now?\" Noah asked.\n\n\"Yes, fine,\" he grumbled.\n\nNoah led him away, where no one would hear them. \"I need a favor.\"\n\n\"What kind of favor?\"\n\n\"The kind of favor only a beastman can do.\"\n\n\"How did you--?!\"\n\n\"I saw some of your handiwork during the Red Revelries, how you would swoop down and knock people out with powerful kicks. When I fought against you on enrollment day and examined your fighting style, it was easy to put two and two together.\"\n\n\"You knew all this time? Why not tell anyone?\"\n\n\"Because I don't care. Or, I don't care beyond your ability to be useful to me.\"\n\n\"So what? You're going to tell people about me if I don't do what you want?\"\n\n\"Or I could just pay you. No need to be so dramatic.\"\n\n\"Ok, so what's the favor?\"\n\n\"What kind of bird can you transform into?\"\n\n\"An eagle.\"\n\n\"Perfect. Change into your civilian attire and meet me at the front gate.\"\n\nNoah and Gideon split up and then met at the gate, heading into the city. \"Are you going to tell me about this favor or not?\" he asked as they walked through the icy streets.\n\n\"I need you to find an owl.\"\n\n\"An owl?\"\n\n\"Yes, and terrorize it. It'll be perched on top of a roof or a lamppost, but it is here in the city. Fly up above, and when you spot it, make noise and circle overhead, and I'll follow you. When I whistle, attack the owl. I believe it to be a beastman, so don't kill it. Just pretend you're a regular eagle fighting it for territory. Keep it distracted for as long as you can, drive it from the city if you have to, but it has to appear natural. If it transforms, flee.\"\n\nThey stepped into an empty alley where no one could see them, and Gideon cast the transformation spell. Like when Cyrilo transformed, his clothes changed with him, becoming feathers, while his body shrank down and his arms turned into great wings.\n\n\"You know, with that spiky red hair of yours, I'm rather surprised you don't transform into a rooster.\"\n\n\"You know, it's not a good idea to mock people who can shit on your head from above.\"\n\nAfter hearing Cyrilo speak in her cat form, the sound of a human voice coming from the eagle didn't shock Noah at all. It took some effort in the narrow alley, but Gideon flapped his wings and managed to take to the air. He soared high above the city, taking a moment to savor the rushing air. It had been so long since he had been able to fly, and he had missed it dearly. Sometimes, he felt more at home in the sky than on the ground.\n\nHe spotted the owl rather quickly, moving from rooftop to rooftop. Gideon released a piercing cry and circled overhead. Down below, Noah raced through the city to catch up. Running on the icy roads, he nearly fell twice before reaching the owl's location. He spotted it perched atop a lamppost, and, more importantly, he saw Valia walking through the busy street.\n\nNoah slipped off to the side and gave a loud whistle, loud enough for Gideon to hear it. He swooped down and attacked the owl, flapping his wings, threatening it with his beak and claws, and doing everything he could to intimidate it. It worked, and the owl desperately tried to stand its ground, hissing and making itself look as large as possible. As the two birds fought, Noah approached Valia.\n\n\"Lady Zodiac.\"\n\nShe spun around, surprised to see him. \"Cadet Noah, what are you doing here?\"\n\n\"Right now, it's not \"cadet,\" just \"Noah.\" You said before that we needed to have a serious talk, and now's the time.\"\n\n\"Sorry, but I'm a bit busy at the moment.\"\n\n\"Your tail isn't paying attention to you.\"\n\nValia looked over to the owl, forced from its perch and chased through the sky by an eagle. \"How did you...\"\n\n\"Does that really matter at the moment? You can either walk away and continue to run your errands until the owl comes back, or you can take advantage of this situation to come with me, and we can have the discussion you know we need to have. Like I said, right now, I'm not a cadet.\"\n\nValia bit her lip, but Noah knew she had already made her decision. \"Fine. Where to?\"\n\n\"Covington's.\"\n\n\"The tea house?\"\n\n\"We can talk in private there.\"\n\n\"Rumors would spread if someone like me was seen somewhere like that with someone like you.\"\n\n\"They'll see you, but they won't see me. Go there and reserve a room. I'll meet you inside shortly.\"\n\nThe two of them split up, or Valia thought so. As soon as she turned away from Noah, he activated his invisibility and followed her. They arrived at an exquisite manor, similar to the Knight's Sheath, but with a more respectable clientele. It was essentially a caf\u00e9 where men and women would talk over cups of expensive tea and stacks of sweets, with a roaring fire in the fireplace. Everything was kept meticulously clean, with the walls decorated with lavish paintings to match the richness of the building. The butlers and maids served with perfect decorum and etiquette, likewise expected from their customers.\n\nValia approached the concierge, a well-dressed man with an expertly-arranged combover. \"Ah, Lady Zodiac, it had been quite some time, hasn't it?\"\n\n\"Indeed it has, Jacob. I found myself needing a break from the cold and the commotion of the streets. Might you have a room where I can enjoy some fresh tea in solitude?\"\n\n\"For you, My Lady, anything.\"\n\nShe was brought upstairs to an empty room overlooking the nearby buildings. It was cold, but the maid leading her lit a fire in the hearth that warmed the air. The floor was carpeted, the room decorated with art and knick-knacks to use as conversation pieces, and by the window was an ornately-carved table with two matching chairs. A second maid arrived with a cart, topped with a silver tea set and a steaming pot. The dishes and utensils were set up on the spotless tablecloth with perfect precision, as though arranged like puzzle pieces. The first cup was poured, the hot water passing through the fresh tea leaves and filling the room with their delicious fragrance.\n\n\"That will be all, thank you,\" Valia said.\n\nThe two maids bowed and departed. Valia was alone in the room, staring into her swirling cup. Rather than take that first sip, she got up from her seat and looked out the window. It was beginning to snow, the first crisp flakes touching the glass. Behind her, she heard a second cup of tea being poured. She didn't know how to explain it happening, how Noah could be in the room without her sensing his arrival, but at this point, she would have been disappointed if the situation was any different.\n\n\"Ah, this is delicious. I've always wanted to come here, but kept putting it off.\"\n\nValia turned around, seeing him sitting at the table as though everything was completely normal. \"I was friends with the original David Covington. He always dreamed of running a place like this, but when I knew him, he was pouring drinks in a dingy tavern that happened to sell tea along with booze. It was his son, David Junior, who managed to elevate the family business to what it is now. He was a genius when it came to business, but was terrible with women, just so awkward. He was always pining after me, and his attempts at flirting were like a dog trying to hump my leg.\n\nHis son, David Covington III, wanted to be an adventurer. He was always arguing with his parents about it, claiming he wanted to be like Valon and me. We decided to take him with us on a mission for the kingdom, to show him what the real world was like. A falling boulder broke his leg, he got stabbed twice by a goblin, and nearly died from springburn. He cried tears of joy when he finally returned home and never picked up a sword again. For the best, I suppose, but he was a good cook. He could roast a pig that would knock you off your feet.\" She sat down at the table and took a sip of tea. \"This is his special blend. They haven't changed it, after all these years.\"\n\nOutside, the snowfall was increasing.\n\n\"Yeah, springburn will do that to you. The whole time he was sick, he was probably trying to think up the perfect flavor that would make him feel better.\"\n\n\"What are we doing here, Noah? I truly hope you didn't invite me here with illicit intentions.\"\n\n\"Nothing of the sort. Like I said before, I need your brother's research.\"\n\n\"Unfortunately, it's all gone.\"\n\n\"If that was all there was to it, you would have told me already. He's still alive, isn't he?\"\n\n\"How did you know?\"\n\n\"After you refused me, I decided to ask Sir Elyot about him. He told me your brother died, quite unconvincingly. That man wouldn't last five minutes in a card game. So what's the real story?\"\n\n\"Valon... has gone rogue. After a botched magic experiment, he went crazy and just disappeared. I haven't seen him since.\"\n\n\"What kind of experiment?\"\n\n\"He was searching for the gods, using the power of Zodiac. Most people believe that the gods watch over us, existing so close to our world but beyond our reach. Valon believed that they were more nomadic, that this world was just a tiny island in a vast ocean of stars, and they followed the currents like colossal whales.\"\n\n\"What is Zodiac?\"\n\n\"Our ability to draw power from constellations, specifically, constellations in the shape of magic runes. Ten constellations, ten concepts that we each utilize in different forms. For me, it manifests similarly to warrior and monk magic, but more specialized, enhancing my body and weapon skills beyond what other fighters can achieve. Valon can use arcane magic, magic that is similar to the elements, but far more powerful and unique. I told you before about my sensory spell, right? Valon's version lets him detect and read mana signatures from those around him. It is a power we were born with, but it took centuries for us to cultivate and master.\n\nIn Valon's \"star ocean\" theory, there were waves that could distort reality...\"\n\n\"Gravity waves.\"\n\n\"Not just gravity waves. He said there were waves in space and time, whatever that means, even mana waves, washing over endless worlds. His plan was to use one of these waves to boost his sensory powers, to ride it like a bird in an updraft. He predicted when one of these waves would reach our world and spent years planning for it. He believed that if he could combine our powers and use the mana wave to propel his consciousness, it would let him see farther than he ever could alone. I went along with it. I always believed in Valon, always supported him.\n\nThen things went horribly wrong...\"\n\n----------\n\nIt was a clear spring night, and Valia and her brother were standing on the roof of the royal observatory, a facility he helped build. A sheet had been laid out, made from hair, skin, and other materials gathered from the most powerful and unique monsters in all the land. The materials and species were selected based on their magic conductivity, and its conception had taken years of precise calculations to ensure that everything was perfectly chosen and used. Inscribed on it was a large magic circle, one of the most ornate and complex ever conceived and made entirely of avenium. The monetary value of this setup was incomprehensible, but it was all worth it.\n\n\"Are you sure tonight's the night?\" Valia asked.\n\nValon closed his eyes and took a deep breath, as though savoring a rich fragrance. He had the same deep complexion as his sister, with the same silver eyes and hair, and while many men ogled Valia, so too did many women lust for Valon. Despite his magic abilities, he was a mighty and skilled warrior in his own right.\n\n\"Oh yes, it is coming with the power of a billion sunrises. The spell isn't even active, but already, I can feel it, the pulse of the universe.\"\n\n\"I can't feel anything.\"\n\n\"You wouldn't. Very few probably could. If my calculations are correct, this is merely a ripple, but compared to our tiny world... We might as well be worms, slithering underground while a hurricane rages. We are simply too small to be affected. The time has come; we have to be quick.\"\n\nThey both sat down within the magic circle and each activated the power of Zodiac. A dome of silver light encompassed them, creating a star map of the constellations. In his hands, Valon held a rope of glittering gold. He wrapped one end around his arm, and Valia did the same, causing it to come alight with mana flowing from sister to brother. It was known as a medium rope, letting an individual cast the magic of whoever they were bound to. Like with runecrafting, the quality of the material determined how much power it could handle, and this rope, in particular, was made with every possible effort.\n\n\"Avagath,\" the two siblings murmured.\n\nImmediately, a deep shudder moved through Valon. \"Whew, I'll never get used to it, but I was right; my own powers are already being magnified. I can feel every life form in Colbrand, and it's incredible.\"\n\n\"How far can you feel physically?\"\n\n\"A hundred feet. All this information...\"\n\n\"Valon, are you sure you want to do this?\"\n\n\"I've never been so sure about anything.\" He held out his hand over the center of the magic circle, and it came alight, the avenium glowing like magma and throwing out bolts of electricity. \"Here goes nothing. Universal Outsight!\" He slammed his hand down onto the center, fully activating the spell.\n\nThe dome of light from Zodiac and the magic circle became blindly bright, so much so that Valia had to cover her eyes with her arm to keep them from being burned. Within the light, she could hear her brother howling. She couldn't see him, but she could feel him, gripping his skull and screaming with a voice she never wanted to hear again.\n\n\"Valon!\" she cried out as the sheet burned like thermite. She unwrapped her arm from the rope and grabbed her brother, pulling him away from the flames. He was violently thrashing and continuing to scream, with blood pouring from his eyes, nose, and mouth as his brain threatened to hemorrhage.\n\n\"Valon, snap out of it!\" There was nothing she could do to help him, and the screaming only stopped when he passed out, left comatose from the strain of the spell.\n\n----------\n\n\"The spell worked for just a couple seconds, but it was the closest he ever came to death, after a lifetime of combat. It took several potions and hours of work by knighthood healers to bring him back. He was unconscious for several days after that.\" Valia cleared her throat, trying to keep her voice steady. \"And when he finally did wake up... he wasn't the same. He was haunted, manic, screaming about the stars. \"So many stars!\" he'd say. \"So many worlds!\" I had never seen him so terrified. Then, one morning, he finally looked at me, and... it was like he was looking at dirt. There was no love, no hatred, just all-consuming indifference. His eyes were so dead; it was like he was a walking corpse. He disappeared after that, taking his notes and burning everything else. I haven't seen him since then.\n\nThen, during the Red Revelries, I found out that he released all the prisoners in the dungeon to use as a distraction while he raided the royal vault, stealing the kingdom's Enochian artifacts. He's lost his mind, and now I have to bear the weight of his sins.\"",
        "\"So that's why the kingdom has you under surveillance. They think you either helped him, or you can be used as bait to lure him back.\"\n\n\"My brother and I helped build this country to what it is now, and in the blink of an eye, all that trust has disappeared. The kingdom wants everyone to believe that Valon died to avoid a scandal, and in the hopes that it'll keep enemy countries from trying to recruit him. They forced me to go into teaching so that they could keep a close eye on me.\"\n\n\"Why didn't you go looking for him?\"\n\n\"As much as I would love to hunt him down and beat some sense into him, I honestly have no idea where he could be. The island of our clan was destroyed long ago by a tsunami, and he and I traveled the world for ages before coming to Uther. With all the craziness in his head, he could be a million miles away right now, zig-zagging across the map. Colbrand is our home now, and if I leave, we will never be able to return. It's not in my nature to do nothing, but Valon has gone to a place I can't follow, and right now, it feels like my only hope is that he comes to his senses and returns of his own will. But deep down, I know that it's a foolish hope. I still don't even know what he experienced to make him so crazy.\"\n\nNoah took a sip of tea. \"His ego was crushed.\"\n\n\"If that's a joke, I'm not laughing.\"\n\n\"I don't mean like he was beaten in a fight, and his manly pride was bruised. I mean he lost the ability to find meaning in anything around him. He became fully aware of his own insignificance in the cosmos and realized just how pointless everything is.\"\n\n\"I don't understand.\"\n\n\"You told me that your sensory spell lets you feel distance in the air the same way you can feel the distance from your hand to your shoulder. You can reach out ten feet or so, right? Imagine reaching out billions of miles across the cosmos, losing all meaning of time and space as you discover innumerable worlds and stars that overshadow everything you hold dear. None of your beliefs, your fears, your hopes, and your accomplishments matter. Imagine seeing, feeling, and living the entirety of creation, and then your mind snaps back to your tiny flesh-and-blood body. He realized just how small he is, how pointless everything is.\"\n\n\"How nihilistic.\"\n\n\"Nihilism is something that people believe, the same way a spoiled child believes that war is terrible, but they can't truly understand it, can't grasp the inarguable truth of it. Everyone believes in something, some kind of abstract value. It's how they live. It can be the importance of their wealth, faith, family, life, or anything. Whatever it is, everyone has to believe that something in their life matters. Even the most depressed, traumatized person with the most tragic life imaginable is capable of feeling something, believing that something is sacred and something is taboo.\"\n\n\"You speak as someone with experience. But what makes you someone who knows instead of someone who believes?\" Noah looked out the window, watching the snow pelt the glass. What was originally a light flurry was turning into a blizzard. \"Noah?\"\n\n\"How old are you, Valia? Seven, eight hundred years?\"\n\n\"It's rude to ask a woman about her age, but I'm closer to seven hundred.\"\n\n\"Well I'm closer to seven thousand, but I honestly don't know the exact number. It's just my best estimate.\"\n\nThe vastness of his age surprised her, but she maintained her composure. \"So you're an immortal, I thought as much. I always wondered what the reason was for the strange things you said, like when we spoke about guilt in killing our enemies. You were hoping I was someone like you. You looked at me and saw someone who knows what it's like to dwell among humans who live and die in a flash.\"\n\n\"Not immortal, eternal. My flesh ages and dies, but my soul lives on to find a new body after death. I have lived more than a hundred lives across more than a hundred different realities and timelines. There are infinite universes, in which every possible event that can happen does happen, and every time I die, I am reborn in another world, in the same time period, but with a different past or future. This world is just another I have journeyed to, and this body you see is just another vessel for my soul.\"\n\n\"I see. So then what do you need my brother's research for?\"\n\n\"It's my only hope of stopping this.\"\n\nHe emptied his teacup, but Valia didn't say anything. She just gazed at him with kind eyes, not in disbelief or confusion, but with the certainty that there was more he wanted to say. When he lowered the cup, she refilled it, but when he reached for it, she placed her hand on his, feeling him shake.\n\n\"Do you know what it's like to be unable to die?\" he finally asked, his voice trembling. \"To know you can never close your eyes one last time and just fade away into nothingness? To be trapped in your mind, forced to hear your thoughts and see your memories until the end of time, with no way out? I've seen and experienced so much, and... I'm just so tired. I just want it to end. I try to force myself to care, to find meaning in the small things, but I've lived too long to believe anything is important. In the multiverse, nothing is special, nothing is unique, and nothing matters. In every life I live, I have to fake every tear, every smile, every relationship.\"\n\n\"I know you aren't faking this.\"\n\nNoah turned his hand over, holding hers. \"I'll help you find him,\" he finally said. \"I still have hope that I can find the answers I need in the academy library or elsewhere in Colbrand, but if your brother hasn't come back by the end of the year, we can leave and track him down.\"\n\n\"You're serious?\"\n\n\"Valon is the best chance I have at finally ending my curse. With his help and research, maybe I can experience true death and my journey can end. And even if he can't help me, I suppose it would be nice to finally be able to talk to someone like myself. He learned the truth in an instant, and I had it ground into me over time. I'm curious what he'll be like.\"\n\n\"Unless ordered by the king, doing this would make both of us deserters, even traitors. As your teacher, my stance on desertion and treason should be fairly obvious. That said, lecturing you would just be lip service. I'm not the kind of person who refuses hope when it presents itself. Deep down, I've been waiting for a push like this. Thank you. We'll find him together and break your curse, I promise.\"\n\nThey continued to talk as snowflakes melted against the window.\n\nPlease comment! Tell me your thoughts!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "fantasy",
        "isekai",
        "action",
        "adventure"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-infinite-bk-03-ch-08"
}