{
    "title": "Enemy From Below",
    "pages": [
        "I wrote this straight ahead and didn't edit it or punch it up because frankly it wouldn't have been completed otherwise lol. The goal was just to write straight smut, but apparently it's impossible for me to not add a plot and character development :/ Maybe next time.\n\nThey came from the Mesophere.\n\nIn a once in an eon freak event, every tectonic plate on Earth simultaneously and violently shifted, resulting in magnitude 9.5 quakes happening all over the globe. Billions died, cities were destroyed, hills became valleys, and oceans became mountains. The topographical landscape of the world completely changed over the course of twenty four hours, and unsurprisingly every nation descended into chaos and anarchy.\n\nIn the midst of all the death and confusion, people began to report sightings of seven foot tall women. According to the rumors they'd climbed up from the center of the Earth during the Shift to conquer the humans, and if you believed the real nutcases, they were the ones who'd caused the plates to move in the first place. Using witchcraft.\n\nYeah, it was just as crazy as it sounded. Mainly because it was completely at odds with how they actually were.\n\nFor the most part the Ma'ro--at least, that's what people called them when they weren't calling them barbarians or amazon witches behind their backs--avoided humans entirely. They were largely nomadic, and if you didn't mess with them then they wouldn't mess with you. Hell, if you offered them food or shelter they'd even stay for a day or two to help rebuild or serve as guards. They were five times as strong as any man and never seemed to tire, so it was a real bargain for those who had the supplies to spare.\n\nIf that was the end of it things might've been fine. Humanity could've regrouped, and in a century or two the world may have even returned to its pre-Shift state.\n\nBut the Ma'ro weren't the 'they' I was talking about.\n\nMost people called them demons. They weren't, of course, because demons didn't exist, though with their savage viciousness and near impenetrable skin they may as well have been. Like the Ma'ro they'd come from beneath the Earth's surface, but unlike the Ma'ro they killed any living thing they saw. Small arms and blades had absolutely no effect on them, and if even a single one of the black, lizard-like creatures got into a settlement they could wipe it out within an hour.\n\nThe only things that could reliably wound and kill the creatures were the obsidian blades of the Ma'ro, and once that was discovered people quickly forgot about the whole witchcraft thing and began to seek them out for protection.\n\nI blew warm air into my hands and rubbed them together, desperately trying to work some warmth into my freezing fingers. I'd been travelling across the country for months trying to get home to my family in Maine and had vastly underestimated both how long it'd take to travel and how cold the weather would be.\n\nI'd been away at college for my freshman year--Stanford, if you can believe it--when the Shift happened. Though most of California had been hit hard, we were relatively okay if you didn't count the looting, anarchy, and general random violence. The surviving citizens and students had holed up and barricaded themselves inside the college against the monsters, and it was now one of the biggest settlements on the west coast as far as I knew.\n\nUnfortunately because radio towers everywhere were still down communicating with anyone further than a few miles away was all but impossible, and since everyone was too afraid to travel far no one truly knew what the hell was happening beyond whatever fractured reports could be picked up on the radio.\n\nEveryone had called me crazy for attempting the journey home on my own, and maybe they were right. But I had to know. I had to see if my family was still alive.\n\nI squinted at the green highway sign in the distance and smiled. If the stark white words were to be believed I was about a mile away from Missouri. I'd left California on my bike and had been making good time, but somewhere around Colorado my back tire had decided to give me the middle finger and flattened itself. I'd abandoned it almost immediately because there was no way that I was going to drag my shitty ten speed along when I was already so tired. It was a risky move, sure, but I figured I'd be able to come across a bike or sporting goods store at some point.\n\nSo far I'd had absolutely no luck. The stores I'd found were all either completely looted or the bikes that were left were for toddlers, meaning I was basically doomed to walk the rest of the way.\n\nMy thoughts were abruptly stopped by a strange low, steady chittering, and I froze. I threw myself behind the nearest abandoned car and tried the door, praying that it would open but was completely unsurprised to find that it was locked because of course it was. I was fucked.\n\nI'd heard the stories and knew that hiding from the demons was useless. Once they were within a certain range they just knew where you were, and the general rule of thumb was that if you could hear them you were already dead.\n\nI was already dead.\n\nIt crept closer and closer, steadily, its heavy steps thumping and crunching in the sparse snow, and I squeezed my eyes shut. There was no doubt that it knew where I was, its path too sure and straight for me to delude myself otherwise. I had a pistol, a scavenged military knife, and a machete on me--all of which were completely useless against the demons' near impenetrable skin. Short of a miracle I was going to be ripped apart and eaten, but I'd be damned if I wasn't going to at least injure the bastard. I armed myself with the gun and machete and waited, my breath coming faster the louder the creature's strange chittering got.\n\nTo my absolute shock, the sound of the monster's footsteps suddenly stopped. I then heard the sound of fast, heavy footfalls, and as much as I wanted to poke my head around the car to see what was going on my legs were refusing to cooperate.\n\nThe demon screeched--loud and shrill and terrifying--and then there was nothing besides the sound of wind, wet squelching, and a quiet thud. A soft shuffling followed, and after another couple minutes of not hearing much else I deemed it safe enough to take a peek.\n\nMoving as slowly as humanly possible I poked my head around the corner of the car. My eyebrows rose into my hairline when I saw the figure of a true hulk of a woman crouched over the now dead demon, her brow furrowed with concentration as she used a black dagger to dig into the monster's flesh. She was one of the Ma'ro.\n\nI'd never seen one in person before, but the stories truly didn't do them justice. Even sitting over the corpse of the demon as she was, it was clear that she was easily a foot taller than I'd ever be. Granted that wasn't much of an accomplishment given that I was five foot seven on a good day, but still.\n\nI didn't know how she could wear what was basically little more than a black tube top and skirt in the snow, but I'd heard that due to their unique physiology the weather didn't affect them much. Her braided reddish brown hair and tanned skin were caked with dirt, and it was hard not to notice that every part of her seemed to be made of rippling muscle. She had a giant black sword strapped to her back along with an even larger bow, and I could even spy a small quiver of arrows hanging from her waist.\n\nI watched her work for a bit from my hiding spot, curious as to why she was cutting the claws and bony spines off of the demon. She ran her jagged black dagger through its belly like butter, easily skinning the creature like she'd done it a thousand times before. She finally grouped her plundered materials up into a bag and stood, and that's when I decided to make myself known.\n\nI stowed my weapons back into my pack so that she wouldn't mistake me for a threat--laughable, I know--and stood up, making as much noise as I could so as not to spook her.\n\n\"Uh, hi,\" I said, smoothing down my chin length black hair and gripping the straps of my bag nervously. Despite knowing the Ma'ro weren't violent towards humans unless provoked, she was still incredibly intimidating.\n\nIf she was surprised by my presence she didn't show it, picking up her things with the nonchalance and confidence of someone who knew they were untouchable. Still, she spared a glance over at me and grunted, and now that she was looking at me I could see that her eyes were golden brown. Despite her size and roughness she had a strangely pretty face, her lips plump and full even though they were currently pulled into a thin line.\n\n\"Thanks for killing that demon. I thought I was dead.\" My eyes landed on the lump of disfigured pink flesh that used to be the monster and I blanched. Apparently they weren't very good for eating.\n\nShe dipped her head and grunted again, not bothering to look at me this time. She began to turn away towards the woods, and that's when I felt panic rise up in my chest. \"Wait! I want to hire you. I'm going to Maine.\" She paused and stared back at me blankly, and I gulped. \"East. That way,\" I said, pointing in the direction I'd been headed along the highway.\n\n\"Hmm. No. I go North.\" Her voice was deep for a woman and rough, like she hadn't spoken to another person in a while; same as me. She took a few purposeful strides and I rushed to run in front of her, holding out my arms.\n\nI was a bit surprised that she could speak English, even as broken and stilted as it was, and I'd have dwelled on it further if my knees weren't currently shaking. \"Where North? Can I go with you? At least until I have to start heading East again.\" She didn't say anything, and I panicked further. \"I have food. Rations.\"\n\n\"Hmm. Don't need,\" she said firmly.\n\nI was seconds away from getting on my knees in front of her. \"Please. I'll die out here alone. Please.\"\n\nThe silence between us stretched for what seemed like hours, even though realistically it was probably only a minute or two. Finally she sighed and nodded once, and I beamed.\n\n\"Thank you! I promise, I won't slow you down.\"\n\nShe didn't answer and headed off towards the woods again, and though I was more than a bit leery of leaving the highway, another glance at the glob of still-steaming flesh on the asphalt made my decision for me.\n\nDespite my assertions that I wouldn't get in the way, it was extremely hard to keep pace with her. Between her lack of fatigue and long stride I was basically jogging for hours, my breath coming in fast, tortured pants, and I was more relieved than I cared to admit when she finally stopped near a well-hidden alcove to rest.\n\nI plopped down on a fallen log and sucked in as much air as I could while she began to put down her things, unpacking her black leather bag to remove some kind of jerky. She wasn't looking at me as she ate, her eyes casually scanning the horizon, and it was only when she went for a second bite that I noticed something strange about her mouth. Unlike humans who only had two canine teeth, every single one of hers came to a sharp point.\n\n\"So, I'm Jesse. What's your name?\" I asked nervously once I'd caught my breath.\n\nShe looked at me for a long moment but didn't say anything, instead choosing to return to her meal. Alright then, no talking. I unpacked my own bag to remove a pouch of tuna fish and held it out to her.\n\n\"Here. The promised food,\" I said.\n\nShe stared at the bright packaging with barely hidden mistrust. \"Hmm. No.\"\n\n\"It's good, I promise. Doesn't expire for another year,\" I explained, but she only shook her head and took another bite of her mystery jerky.\n\nShrugging, I tore it open and stuffed a pinch of it into my mouth. I wasn't hungry after the scare I'd had not even three hours ago, but I knew I needed to eat to keep my strength up.\n\nUnfortunately though, now that we'd stopped moving and it was dark out, I quickly realized that I was freezing. I wrapped my blanket around my shoulders but it barely helped, so I decided the best course of action was to make a fire. I gathered a pile of dry twigs and paper and used my cheap lighter to get it going, and I was surprised when the woman immediately stuck her black leather covered foot out to smother it.\n\n\"Hey!\" I shouted, annoyed.\n\nThe woman glared right back at me. \"No fire. Beast come.\"\n\nMy next argument died in my throat. \"What? Because of the smoke?\"\n\n\"Hmm. No. Heat.\"\n\nMy eyes widened, and suddenly it all clicked. The demons could see thermal energy; Body heat. No wonder hiding from them never worked. My mind reeled with possibilities. That meant a space blanket--or hell, even simple aluminum foil--could hide a person's presence. This was huge, and not for the first time I wished that I had access to the internet to tell the world.\n\nStill, that didn't solve the freezing-my-ass-off problem in the short term, and I let my teeth chatter for about half an hour before I made a desperate decision.\n\nSucking in a breath, I slowly made my way over to her. Her eyes shot over to glare at me again, narrowing with suspicion, and I felt her tense when I carefully slid into her lap. Due to our difference in size I felt like a child as I curled up against her, but fuck if she wasn't warm. She felt like an actual space heater, the amount of heat her body gave off making me melt almost immediately. She smelled a bit ripe, but given that I hadn't so much as wiped myself off in days I couldn't really throw stones.\n\n\"No,\" she said, starting to shove me away, and I curled my arms around her to keep myself where I was.\n\n\"It's freezing out here, and since we can't start a fire the least I can do is be your hot water bottle,\" I mumbled. My cheeks reddened with shame, but there was absolutely no way I was going to freeze to death so soon after narrowly avoiding being eaten.\n\nShe sighed then, loud and deep, but then she finally relaxed. She pulled a large black tarp that looked like it was made from demon skin out of her bag and wrapped it around the both of us, and I was surprised to find that I felt even warmer with an additional layer protecting me from the wind. I wondered if it also helped to mask our presence, though before I could think about it much more I felt my chin begin to dip into my chest.\n\nAt some point I must have fully passed out, because when I woke up again I found myself fully resting on top of her. Gentle snores coming from above told me that my savior too had managed to fall asleep, her body lying on the snow covered ground, and when I shifted to find a more comfortable position against her firm body I felt something hard and throbbing brush against my stomach.\n\nMy heartbeat quickly sped up as I realized what I was touching, but I wasn't completely surprised. I'd heard that even though the Ma'ro were all female, not all of them had vaginas.\n\nI nervously licked my lips as a new idea crossed my mind. If she didn't want my food, what reason did she have to keep me around? What was stopping her from just up and leaving in the middle of the night? I had to earn my keep somehow, and giving her a bit of pleasure seemed like a fair trade off if it meant she wouldn't abandon me.\n\nMy hand shaking, I slid it further beneath the blanket to wrap around her clothed dick, and my eyes widened when I realized just how big it was. It was easily the size of my forearm, and just as thick. It felt hot to the touch even through her thin skirt, and when I gently began to massage it I felt it grow even larger and harder in my grip.\n\nShe moaned, the sound low and rumbly and in her chest, and then her large hand was wrapping itself tightly around my wrist. \"No.\"\n\n\"You don't like it?\" I asked, my voice quiet and unsure.\n\nShe didn't say anything for a long moment, her gaze confused, and it wasn't until I felt her release me that I began to slowly move my hand again. I watched her close her eyes and lean her head back against the cold ground, her heart beating more strongly against my own chest from where I lie on top of her.\n\nFeeling a bit bolder now I carefully untied and removed her demon skin skirt, and when she didn't stop me again I chanced a glance down at her penis to see that not only was it huge, it was strapped down to her thigh by a thin piece of rope. Steam rose from the thick, veiny appendage, throbbing with her heartbeat, and when I loosened the strap it immediately sprung up to slap against her stomach. She had a set of balls that looked amusingly similar to brown eggs, and even I had to admit that I was interested in seeing how much cum they could produce.\n\nI nervously licked my lips. I'd never touched a penis besides my own before, but I certainly wasn't adverse to the idea. Like most I'd ended up in certain corners of the internet and had grown curious about what it'd be like. I carefully wrapped my fingers around the thickest part of it and she inhaled sharply. Luckily her dick was uncut, the extra foreskin covering the majority of the head and making it easy to slide my hand up and up and down.\n\nI got into a slow, steady rhythm, gently massaging and stroking the heavy piece of meat. Her breath came faster as I picked up a bit speed, and when I chanced a look up at her face I could see that her eyes were closed and her cheeks held a tinge of red. It was hard to tell if she was enjoying it or not as she remained largely silent, but I figured if she wasn't telling me to stop I must've been doing something right.\n\nIt wasn't until I began to twist my wrist a bit on the upstroke that she finally released a sound, a soft sigh forcing its way past her lips while her body shuddered at the same time. Thick, sticky strands of clear precum leaked copiously from the head of her cock, helping to make the gliding of my palm against her skin even easier, and by now I could clearly smell her arousal. It was pungent and tart, a scent that was very familiar but also different in a way that I couldn't place.\n\nIt had my own much smaller dick rising to attention and I slowly ground my hips against her stomach as I played with her. I planted a kiss against the skin of her chest above her top, and that's when I felt the steel bar in my hand expand to its biggest size yet.\n\nShe cried out suddenly then, her voice higher and softer than I expected, and her back arched sharply to send me rising into the air. Ropes of molten white cum shot from her cock to splash up into her hair, onto her face, her chest, and my tightly gripping hand.\n\nTo me it seemed like she came for a full minute, her body jerking and twitching as I continued to milk everything I could from her heavy balls, and it was more fascinating than I'd expected to both watch and feel the thick appendage throb and spasm. Its veins bulged and strained between my fingers.\n\nIt was another full minute or two of gentle, consistent stroking before she finally stopped dribbling, though her body twitched with aftershocks every now and then even after I let her go. My hand was covered in her warm, milky cum, and when I chanced another look up at her face I noticed that she looked shocked, her eyes unfocused and glazed over.\n\nHer fingers dipped into the cum pooling on her belly, and she raised a finger to her nose to smell it. She stared at it curiously for a long moment, and then she turned her golden gaze to me. \"Hmm. What is this?\"\n\nI felt my jaw drop a bit. \"You've never cum before? Or had an orgasm?\"\n\nShe furrowed her brow and shook her head and I raised my eyebrows. It was hard to say for sure because she wasn't exactly human, but she looked older than me by at least ten or fifteen years. As hard as it was to believe, maybe her culture didn't do masturbation, or even sex--not the way we did, anyway. As far as I knew no one had tried to sleep with one of them, but then there wasn't exactly an internet I could look to anymore for answers.",
        "\"Oh. I can do it again for you sometime. If you want.\" My face burned as I realized what I'd just offered, and I rushed to explain. \"As thanks, I mean, for helping me.\"\n\nShe didn't say anything in response, just grunted and shoved me off of her and re-tied her now soft penis to her leg. She pulled a dirty cloth from her bag and mopped up what she could of her cum, though she missed most of what had gotten into her hair.\n\n\"Should move. Sun up.\"\n\nI stared up at her as she began to pack up and re-arm herself, a little confused by her reaction, and frowned as I did the same. I thought I'd done a good job, but maybe she hadn't liked it as much as I thought. I adjusted my own hard cock in my pants and nodded. \"Okay, sure.\"\n\nAs we trekked through the forest, my eyes and ears on high alert for demons, any attempts to talk to her were met with either nods, headshakes or grunts. It made me a bit worried that I'd overstepped by jerking her off, or that she wanted to be rid of me as soon as possible--which would really suck since now that I was no longer on the highway I didn't have the slightest idea as to where the hell we were.\n\nIn fact, for the entire next week of traveling I was completely lost, though since she still let me lie with her every night I figured she'd forgiven me enough to at least not let me freeze to death.\n\nI honestly felt terrible about freaking her out so much, and vowed never to touch her more than I had to. It was clear I'd made her uncomfortable since she barely even looked at me now. Not that she'd looked at me much before, but at least pre-handjob she wasn't actively ignoring me.\n\nWhy I cared so much was beyond me. Maybe it was loneliness that was making me yearn for the woman's attention, or maybe I just found her attractive--which was strange, since the bodybuilder type had never appealed much to me before. I had to think that part of it was because she'd saved my life and I still felt like I owed her.\n\nI glanced down at my paper map and sighed. The Shift had made most topographical maps completely obsolete, but they still served as a decent way to track progress regardless. As far as I could tell we were somewhere in Illinois now and still heading North. Eventually I'd have to split from her to head East towards Maine again and I was already dreading being on my own again, especially since the further North we went the colder and more dangerous it was.\n\nThe sound of rushing water met my ears, and when I glanced up I noticed that we'd stumbled upon a river. If I had to guess it was the Kaskaskia River, but it was impossible to say since so much of the country's terrain had changed after the whole worldwide magnitude 10 earthquake thing.\n\nI quickly took the chance to refill my canteen first, relieved to have actual fresh water since I was tired of subsisting on questionable snow. The bottle had a built-in filter to help make it safe, but the Ma'ro woman seemed to have no problem just taking it down by the handful, greedily and sloppily slurping the water down. She then filled her waterskin, and my eyes widened as she began to disrobe right in front of me.\n\nI glanced away even though she didn't seem to care in the slightest, yet I couldn't but peek over every few seconds to notice that she really did have muscle everywhere. Her breasts were small handfuls, most likely a result of both the aforementioned muscle and hard training, and the dark red hair beneath her arms was thick and untamed. I'd already noticed she had a dense bush of hair covering her crotch the week before, so apparently they didn't shave underground.\n\nAs I watched her bathe, her hands using the frigid water and a dirty rag to wipe herself down, I had to admit that she was efficient in her cleaning. She mostly focused on the parts that got especially sweaty and only gave her arms and legs and cursory wipe, and then she sat down on a nearby rock to unbraid and detangle her hair.\n\nI found the task strangely sexy, though a large part of that was probably because I hadn't had sex in over six months. My life after the Shift had just been about surviving, and before that trying not to flunk out of my freshman year of college. Between that and just my general loneliness, I was more eager than I should've been to touch her again.\n\n\"Does that happen a lot?\" I risked asking, looking down at her penis from a distance I hoped would put her at ease. Since it wasn't tied down It stood straight up against her stomach, reaching to the middle of her sternum, and it was pulsing with need.\n\nThe woman cast me a sideways glance. \"Hmm. What?\"\n\n\"Your...dick. It's hard again. Is that normal? Does that happen a lot?\"\n\nShe glanced down at it confused and then looked back up at me like I'd asked her if the sky was blue. \"Hmm. Is normal. Yes.\"\n\n\"Well, do you know how to make it...not do that? I know mine hurts if it's hard for too long.\"\n\nHer brow furrowed further. \"Is normal.\"\n\nI swallowed hard, wondering if I was really going to do this--if I was going to break the vow I'd just made and try to get her off again. \"It's not, and I can make it go away. If you want.\"\n\nI could see the moment she understood what I was offering, her lips parting and eyes widening by the slightest amount. She hesitated a moment longer, but then she slowly nodded and glanced away, lowering her hands from her hair down to her lap.\n\nBeing careful not to move too quickly, I walked over to where she was sitting on the rock and kneeled down in front of her. I looked up into her amber eyes to see that her pupils had become large as both of my hands wrapped around her giant cock. She sucked in a sharp breath of air and closed her eyes, and after only a few slow pumps of my hand, viscous drops of clear precum began to appear from the slit of her penis.\n\nI ran my palm over the head to collect it for extra lubrication, and smirked a bit when her hips jerked and she began to pant from the increased stimulus. It was oddly satisfying to see how much pleasure I was giving her, and with the hot slab of flesh so close to my face, I felt an idea spring up in my mind.\n\nNow that it was at least somewhat clean and it didn't smell as pungent as that first night, I felt much more comfortable giving it a quick, careful lick. She gasped at that, her breath hitching, and emboldened by the sound I decided to try my hand--mouth--at sucking it.\n\nIt was so monstrously huge that I could really only fit the head inside but she seemed to enjoy that regardless, her golden eyes closing into silts and her face turning towards the sky as she moaned softly. I ran my fingers through her musky bush and up to her chest, gently squeezing the pliant flesh. Her breasts were small on her frame, a bit less than a handful for me, though her thumb-sized nipples were large and hard.\n\nI pinched them hard enough to hurt but she only moaned louder and placed her much larger hand over mine to keep it there.\n\n\"Does that feel good?\" I asked, my lips still pressed against her crown. The question was a bit rhetorical as her drooling, throbbing cock made it obvious that I was doing something right; I was mainly asking to give my stretched jaw a little bit of break. I waited for her to open her eyes and look down at me and tried not to smile at the desperation in her gaze.\n\n\"Yes.\" The woman bit her lip and tilted her head adorably. \"More?\"\n\nMy grin widening because I found the sight of her frantic expression incredibly cute, I dipped down to take her into my mouth again. Her dick was so big that even with her entire head and an inch or two of her shaft between my lips there was still enough room for both of my hands to twist and slide up and down the rest of it.\n\nI slurped, choked, and drooled on her cock like a man on a mission. It wasn't long until her hands went to my dark hair, fingers threading tightly between the strands, and when I saw her legs begin to shake from the corner of my eye I knew it would only be seconds before came.\n\nShe let out a delighted moan, the first blast hit me square in the back of my throat to slide straight down into my stomach, hot and thick and filling. I tried to pull back a bit because I knew how much of her milky cum she could produce, but she held me fast in her strong grip as three more long ropes splashed against my tongue. It was warm and much sweeter than I'd expected, very different from the bitter saltiness of my own.\n\nIt seemed like I knelt there for hours trying to drink her cum. . I felt a little bit like a hamster with how full my cheeks were, the excess spurting out from between the tight seal of my lips around her pole.\n\nHer shots finally began to peter out after I'd swallowed at least a pint of the stuff, and the moment she let my head go I pulled her out of my mouth and I coughed hard to clear my airway of her jello-like pearlescent cum.\n\nThe woman panted hard and shivered through her aftershocks for another minute before staring down at me with a puzzled, unfocused gaze, cheeks flushed and a bit of sweat beading on her forehead.\n\n\"Is normal?\" she asked in her scratchy deep voice.\n\n\"Yeah, it's called a blowjob. As for it being normal...well, guys don't usually give them to women, but yeah, blowjobs are pretty normal.\"\n\nShe seemed to consider my answer for a long few seconds. \"Is not normal in Ma'ro.\"\n\n\"Do you...not want me to do it anymore?\" I asked with a frown.\n\nHer head cocked consideringly. \"Hmm. No mind. I like.\"\n\nRelieved by her reply, I nodded. Minus nearly drowning on her cum, it'd been sort of fun. Unfortunately my own dick was straining in my underwear, a clear wet spot on the front from where it'd dribbled through, but it was enough for me to know that the woman was pleased. I could always take care of myself later on in the night once we set up camp.\n\n\"El'na,\" she suddenly said, pounding a fist against her chest. \"You Jess?\"\n\n\"Jesse, yeah. You remembered.\" I stuck my hand out towards her with my best smile. \"It's nice to finally meet you Elna.\"\n\nThe woman looked down at the offered appendage before snapping her golden eyes back up to me with a glare. \"El'na,\" she said, putting extra emphasis on the second syllable.\n\nI nervously cleared my throat and awkwardly put my hand back down. \"Right, El'na. That's a pretty name.\"\n\nShe smiled a bit bashfully, nodded, and turned away to finish braiding her hair. I noticed that she seemed much more relaxed as she worked now, softened dick pointing lazily towards the ground, and I felt a weird sort of pride knowing that I was the one responsible for the small smile tugging at the corners of her lips.\n\n<p align=\"center\">* * *</p>\n\nEither El'na was walking a bit slower or I had gotten used to her pace, because I wasn't out of breath at all as we continued to make our way North through the frozen wasteland. She still didn't say much unless prompted, but at the very least she now looked at me or grunted her acknowledgement when I spoke to her. It was progress, and I was glad for it. Three weeks was a long time to be around someone and not have them warm up to you at all.\n\nI couldn't help but think that a large part of her walls coming down was the fact that I was getting her off every night, and I didn't even have to ask if she wanted it anymore. Her way of implying that she wanted to be 'comforted' was to simply untie her skirt and put my hand on her steaming cock, which I was more than happy to do. She was always much more cuddly post-orgasm, holding me tightly to her chest as we slept like I was her own personal heated teddy bear.\n\nI woke up after one such night of smothering to see her working on something above me. She was reclining against a tree while I was still curled up in her lap, and with a wide yawn I sat up to look at her fully.\n\n\"Morning,\" I mumbled, rubbing at my eyes with the back of my hand.\n\nEl'na hummed a reply but didn't look up from her task, and I curiously cocked my head at the black leathery cloth in her hands. She seemed to be sewing something, a truly large and terrifying looking black needle resting between fingers.\n\n\"What's that?\" I asked.\n\nShe remained silent for a minute longer, not even bothering to answer this time, but then she tied off the knot and cut the remaining thread with her teeth and a small, satisfied grin. She held up the black cloth, inspecting her work, and then she forced it on over my head.\n\nWhen I could finally sit back and take a good look at it, I saw that it was a crudely stitched hooded poncho made from the skin of the demon she'd slain after saving me. It was also more insulating than I'd expect, and I felt warmer with just that on than my own cheap puffer jacket.\n\nWhile I was busy inspecting my new cloak, El'na suddenly picked up her dagger and slashed me across the chest. I was expecting to see my guts spilling out--or at least feel a little pain--and was shocked when I felt absolutely nothing besides firm pressure. Hell, there was nothing more than a faint scratch on the fabric.\n\nShe nodded to herself like she'd been fully expecting it and patted the spot where she'd just cut me. \"Safe.\"\n\nI didn't want to think about what would've happened if it hadn't worked but it did, and knowing exactly what she could do with that weapon I couldn't help but feel invincible. \"Thanks,\" I said, beaming up at her. I leaned in to hug her and was unsurprised when she immediately returned it. I'd learned that she really liked hugging; like she was starved for touch. I felt her half hard dick twitch against me, and then she was abruptly pulling away and nudging me off of her lap.\n\n\"Light. We go.\"\n\nThe two of us walked together for a couple of hours in near silence, carefully picking our way through the forest. We came across a small town that looked like it'd been largely abandoned even before the Shift, and even better a tiny corner store that seemed virtually untouched from the outside. The locals had probably come through and looted the place on their way out of town, but since there were so few of them there were plenty of supplies left on the shelves. Jackpot.\n\nI filled my pack with the smallest, lightest, highest calorie things I could get my hands on like nuts, energy bars, and dried fruit, and since I knew El'na loved her dried meat I made sure to snatch up as much of the beef jerky as I could too. We could subsist on our haul for a solid three weeks at least, maybe more if we interspersed it with the wild game she hunted.\n\nI was just finishing zipping up my pack when El'na suddenly picked up both me and my pack and shoved me towards the store's tiny bathroom. I opened my mouth to complain, but any thoughts I had about protesting died quickly in my throat the moment I heard a low, quiet chittering sound in the distance.\n\nHer golden eyes met mine seriously; fearfully. \"Hide.\"\n\nShe didn't have to tell me twice after that. I shut the light off and closed the door enough so that I could just barely peek out, watching as she stalked over to her own bag sitting on the counter. She pulled out and tightly gripped her dagger in one hand and then her large obsidian sword in the other, finally settling herself into a ready stance.\n\nThe chittering grew louder, and it was only when I heard a screeching sound at the same time that I realized there were two of them. One of the creatures jumped through the plate glass window to land behind her, and the other nudged itself into the store straight through the front doors to stand in front of her. That one was huge and easily my size if it stood up on its hindlegs, and for the first time since we'd met I felt worried about her.\n\nShe was surrounded.\n\nThe demons slowly circled her, chittering loudly and drooling all over the dirty linoleum floor. Their black claws gleamed in the light pouring through the now open window, and I shivered.\n\nThe one in back attacked first. It sprung forward towards her head, jaws wide open and long claws extended. I opened my mouth to tell her to watch out, but before I could get a word out she spun on her heel and slammed her dagger up under its jaw into its brain, killing it so quickly that it couldn't even get out a dying squeal. El'na dropped the weapon entirely along with the demon's corpse to turn back to the one in front only to find that it was already right on top of her.\n\nShe landed hard on her back with a loud grunt, losing her jagged longsword in the process. Her forearm came up beneath her neck to fend it off while her other hand scrabbled blindly for her lost weapon, though even from where I was I could see that she didn't have a chance in hell of reaching it.\n\nThe demon snapped and clawed wildly at her, most of its attacks landing along the skin of her arms and boulder-like shoulders, and while any of the blows would've taken the arm off of a normal human it only left a few deep scratches on her thick limbs.\n\nI could see that she was beginning to tire though even as her muscles bulged with the effort of holding the creature back, and if its teeth got around her neck, she was dead.\n\nMy eyes landed on her black dagger still lodged in the head of the first demon, and with a battle cry, I ran forward, pulled the knife from the dead creature's head, and then jabbed it as hard as I could into its back. The monster screeched in pain and reared back, and in the process its spiked tail sent me flying into one of the nearby shelves.\n\n\"Jesse!\" I heard El'na cry out, and with the creature distracted she easily shoved the demon off of her and onto the floor. It continued to writhe around in pain, scratching at the blade sticking out of its body, but she ignored it to run over and fall to her knees in front of me. She ran her large hands over my body to check for any sign of injury. She looked truly terrified, her eyebrows pinched, and if I didn't know her any better I'd think she was even going to cry.\n\nI was shocked to notice that except for a throbbing pain in my stomach where it'd hit me, I was completely okay; the spines of the monster's tail hadn't pierced my new cloak at all.\n\n\"I'm fine! It just knocked the wind out of me,\" I said to calm her down.\n\nEl'na let out a long, relieved breath. She then smoothed my wild dark hair down and smiled. \"Good.\" Her smile quickly fell, and then she abruptly scowled and stood to stomp back over to the screeching, twitching creature. I watched with a bit of awe as she began to rain monstrous blows, her fists coming down over and over with heavy, smacking thuds.\n\nFrankly it was a little terrifying. She screamed with each punch, windows shaking as her fists impacted with the demon's flesh. The beast eventually fell silent and she panted, her great shoulders heaving.\n\nLike she hadn't just completely snapped right in front of me, she rushed back over and kneeled down in front of me. \"Okay?\" she asked, cupping my chin and darting her amber eyes between the two of mine.\n\n\"Well, I'm much better than the demon you just beat to death at least.\" Her face remained unchanged at my joke and I winced. Well, no one ever said humor was a strength of mine. \"Yeah, I'm okay. I promise.\"\n\nShe nodded once, shoulders finally falling away from her ears, and then went back to the demons to get to work slicing them up. She collected its parts into her cloth bag, and while she worked on that I gathered what was left of my nerves and continued to scour the shelves for whatever else I could find that hadn't yet been scavenged.\n\n\"It's getting dark; we should probably head out,\" I said, approaching El'na from where she was still crouched over the now pink lumps of flesh.\n\nEl'na cupped my chin to check my eyes again and I cringed a bit since her hands were slimy with demon guts. \"Hmm. Yes. We go.\"\n\nAs we headed out of the small convenience store, I spied an old SUV parked behind the building. I jogged over to check the wheel wells of the truck, and to my shock my hand brushed against a small box. I pulled the magnetically attached key holder and opened it to find a bronze key inside.",
        "\"Yes!\" I shouted, holding up the sliver of metal to her.\n\nEl'na stared at both me and the key like I'd grown another head. \"What is?\"\n\n\"It's a key! It means we can drive!\"\n\n\"Hmm. Drive?\"\n\nI nodded and opened the driver's side door. I took a deep breath and put the key in the ignition and tried to turn it over. I frowned when the engine sputtered. I tried it four times before, but finally the vehicle roared to life, expelling a black plunge of smoke from the tailpipe. I laughed incredulously, unable to believe my luck.\n\n\"We're in business! Here, get in,\" I said, opening the passenger side door for her. I had to take her weapons and shove them in the backseat, and then I had to let the seat back all the way so she could slip inside. She was still too big, having to scooch down a bit to avoid her head brushing against the roof, but she fit.\n\nI got into the driver's seat and checked the fuel tank to see that it was still about half full. Unfortunately I couldn't figure out how to work the gas station pumps so we'd just be driving until it ran out, but it'd cut our travel time down drastically and let us get some rest besides.\n\nA glance over at El'na showed that she was beginning to grow uncomfortable in her seat, her eyes a bit wide and bewildered.\n\n\"Relax, it's safe,\" I said, taking her much larger hand in mind. I paused as I remembered hearing about this specific SUV model being notorious for rolling over and immediately backtracked. \"Well, it's fast, anyway. Put on your seatbelt.\" She stared at me confused, and I reached over to do it for her.\n\nI put the car in drive right after, and then we were off. The tires were a bit flat so we couldn't really go that fast, but she still looked surprised at how quickly we were moving.\n\n\"I like drive,\" she said after we'd been riding for half an hour, sticking a large arm out the window to catch the air.\n\n\"Me too, it definitely beats walking. We can probably get around two hundred miles out of this thing if we're careful.\"\n\nWe only drove for around an hour before El'na insisted that we should camp for the night, and I pulled off of the road at a spot she pointed out. We hiked for five or so minutes into the woods to find a safe place, and once she found one that she deemed okay, we set about unpacking what we needed.\n\nI watched curiously as she pulled out a strange bowl that looked like it was made of stone. She dug a small, shallow pit to build a fire, and I briefly thought about mentioning the whole demon-heat-sensing-thing but figured she had a good reason and could take care of the both of us if needed.\n\nShe then began to melt down the black shiny claws and spines she'd scavenged from the lizard in the stone bowl until it looked like bubbling tar. Her golden eyes bore into mine consideringly, and I was beginning to feel more and more nervous the longer she went without saying anything.\n\nFinally she nodded as if she'd decided on something and leaned forward. \"Jesse. Give,\" El'na said, pointing at the knife strapped to my thigh.\n\nCurious about what she was going to do with it, I gingerly handed it over. She submerged the blade into the dark liquid, spinning it around until it was completely coated, and then she pulled it out to plunge it into the freezing snow. It sent up a white plume of smoke into the air, and after carefully inspecting it she nodded and handed it back to me. It looked exactly the same as it had before, only instead of silvery steel it was a glossy black.\n\n\"Kill beast,\" she said as I took it and held it up to the moon, mesmerized by how beautiful it looked.\n\n\"The demons?\" She nodded and I gulped. \"Uh, in that case, any chance you could do my machete too?\" I asked, reaching into my pack for my other weapon.\n\nEl'na smiled a bit and took it from my hands, repeating the actions she'd done on my knife. She handed it back and I immediately tested it out on the rock next to me, gasping a bit when it dug into the solid surface instead of just bouncing off like I expected it to. \"Holy shit.\"\n\n\"Eye. Jaw. Gut. Flesh easy,\" she said, pointing at each part she named them.\n\nShe proceeded to dip the tips of the wooden arrows she'd been making every night into the still bubbling liquid, and when she was done she bundled them up and stowed them into her knapsack along with the rest of her things. She poured the rest of the remaining goo over a couple of sharpened sticks, then put out the fire and leaned back against a large tree.\n\n\"Come,\" she said as she held out a thick arm to me. I gulped and I figured she wanted a blowjob or something, and was a bit surprised when she didn't immediately remove her skirt as I settled in her lap. Instead she hugged me tightly, resting her chin on the top of my head.\n\n\"Ma'ro...\" she paused and squinted like she was trying to find the right words. \"Hmm. No this.\" She gestured between the two of us, and I immediately understood.\n\n\"You mean, you don't hug or get close? Why?\" I asked, genuinely curious.\n\n\"Strong. Must fight.\"\n\n\"Hugging doesn't make you weak. Hell, I've heard people say that having something to protect can even make you stronger.\" If she heard me she didn't say anything, falling silent for a minute, so I decided to ask another question that had been bothering me ever since we'd met. \"Why aren't you with your tribe?\"\n\nShe tried to hide it, but I saw her lips twitch downward anyway. \"Hmm. Tribe...stay. South. I go North. Fight beasts.\"\n\nI nodded at her answer because I'd heard rumors that there were a lot more demons up north. The opening in the plates had been especially large up there, and Canada's population had been largely decimated as a result. It was only a matter of time before the pack started heading South towards the United States, and since my family was in Maine I was extra worried.\n\n\"That seems really dangerous though, doesn't it? Why do you have to go?\"\n\n\"Strongest. Help.\" She suddenly pointed at me with a resolute expression. \"I take home first.\"\n\nMy jaw dropped. \"You will?\" She nodded then, smiling a bit, and I beamed. Before I knew what I was doing I stretched up to press a kiss to her cheek, right on the corner of her plush lips. I felt her freeze against me and quickly backed off. \"Uh, I'm guessing you don't kiss either?\"\n\nEl'na slowly shook her head, fingertips brushing against the spot where my lips had just been. She seemed more confused than upset, so I gently turned her face towards me and kissed her fully on the lips. She didn't so much as breathe as I moved my lips against hers, and even though it was clumsy, she slowly began to try to kiss me back. She moaned against my mouth the more we got into it, and like usual it wasn't long before I felt her cock come to life below me.\n\nI reached down to wrap my hand around her thick shaft, massaging it with my fingers, and was surprised when she moved my hand away.\n\n\"I touch you?\" she asked, pulling back from the kiss to stare curiously at me.\n\n\"Uh, no, that's okay, you don't have to.\" My words fell on deaf ears though as her hand somewhat roughly began to paw at my pants anyway, and I sighed and decided to unbutton them for her lest she rip them in her eagerness. It felt odd to be so reluctant to have a woman touch my penis, but I'd grown to enjoy pleasuring her more than myself.\n\nIt was pretty humbling to see how easily my very average sized dick fit in her large palm, though her warmth enclosing it felt amazing. She didn't seem to know what to do with it initially, but after a second or two she began to slowly and gently massage it. She ran her calloused thumb up and down the shaft, golden eyes staring straight into mine with a mixture of curiosity and amusement.\n\nIt was barely even a minute before I was grunting and cumming hard all over her hand, days of not taking care of myself culminating in the strongest orgasm I'd had in a long time. I watched through heavily lidded eyes as she raised the hand with my cum all over it up to her nose and sniffed, frowning a bit at the smell, but then her large tongue poked out to lick it all up. I stared amazed as she slurped down my warm cum like it was melted ice cream.\n\nIt was the hottest thing I'd ever seen. She finished and smacked her lips, and I expected her to make a disgusted face; instead she pulled me to her for another clumsy kiss, forcing me to taste the bitter saltiness of my own semen.\n\n\"You like?\" she asked, breaking the kiss and smiling hesitantly.\n\n\"Yeah, thanks. it felt amazing.\" I snuggled closer and yawned, feeling more relaxed than I had in awhile, and in moments I passed out against her chest.\n\n<p align=\"center\">* * *</p>\n\nSince El'na had agreed to take me home, I used my map to find us the best route East towards Maine. The truck got us much further than I expected, and we'd gotten well into Ohio before it sputtered out and died on us. Luckily it broke down only a dozen or so miles from a roadside motel, and after clearing it to see if there were any people--or worse, demons--I chose a room for us on the second floor and picked the lock. It had two double beds and was in pretty good shape considering, and I grinned at our luck.\n\nThe electricity wasn't working, of course, but the water was still running which I counted as an absolute fucking win. I immediately stripped down for a shower. The water was ice cold, sure, though there was soap and shampoo and when I was done I felt cleaner than I had in ages.\n\n\"I needed that,\" I said as I exited the bathroom, sighing and running a towel over my now clean hair.\n\nEl'na leaned down to sniff at me, nose pressing curiously into my neck. \"You smell...odd.\"\n\nHer breath tickled, so I pushed her away with a laugh. \"I smell clean. Here, you take a shower too.\" Though she protested a bit, she let me take her clothing off and force her into the tiny shower. She was so tall that she couldn't even stand up in it all the way, and the showerhead only came up to her shoulders.\n\nI turned on the water for her and had to laugh again at her shock when water blasted against her chest. Luckily for her it wasn't nearly as cold as it'd been when I had used it, and soon enough she adjusted to the temperature.\n\n\"Here, try this. It's called soap,\" I said, handing her the bar I'd just used. She started to eat it and I quickly snatched it from between her fingers. \"It's not for eating, you rub it on yourself. It makes you clean.\"\n\nShe looked at the white bar of soap and then up at me, brows furrowed. \"Hmm. Help?\"\n\n\"Yeah, sure.\" Instead of a washcloth I used my discarded towel to bathe her, and honestly, she was filthy. The water ran brown as I scrubbed her tanned skin, and it wasn't long before the poor previously white towel was dark with dirt. I washed every crevice of her, which given her size was a lot of space to cover. I didn't let my hands wander and was careful to keep my task purely clinical, but she got hard anyway.\n\nOnce I was done with her body I squirted shampoo into her unruly locks, and even more dirt came out. I was a bit surprised to see that her dark brown hair was actually a lot redder than I expected it to be.\n\nI toweled her off using the remaining two towels in the bathroom and stood back with a satisfied grin. \"There, all clean.\"\n\nEl'na sniffed at her armpit and wrinkled her nose. \"I smell odd.\"\n\n\"No, you smell good. Fresh.\"\n\nThe corner of her lips twitched upwards. \"Hmm. You like?\" she asked, stepping closer, her hard penis bobbing against her stomach and chest. There was something teasing in both her voice and her gaze, and I gulped.\n\n\"Well, yeah. I like your normal smell, but this is good too.\" She smiled and leaned down to kiss my neck with such sudden aggression that it sent me reeling. \"Whoa, El'na.\"\n\n\"Stop?\" she asked, still sucking at my skin.\n\nI moaned at the feeling, my dick hardening and body tingling from the pleasure. \"I didn't say that.\" I let my towel drop to the ground, and even though I felt embarrassed to be naked in front of her, the look of lust on her face made it worth it.\n\nShe easily picked me up and leaned me against the motel wall, and I wrapped my legs around her hips as she greedily captured my mouth in a searing kiss. She forced her huge tongue into my mouth, easily taking control of my much smaller one, and I grunted with surprise. I'd figured out that she was a quick learner just based on how fast she'd learned to understand and speak basic English, and that quickness apparently also transferred to things involving fooling around.\n\nOur hard cocks rubbed against each other, and I moaned when I felt her hand grip us both and begin to gently jerk us off. Her large body was hot and solid as it pressed me into the cheap wallpaper, and I couldn't help but wonder what it would feel like to have her inside of me.\n\n\"Wait, let me down,\" I breathed when she pulled back to catch her breath. She did as I asked, frowning, and I felt her eyes follow my naked body as I rushed over to my pack. I pulled out a large clear bottle, though as I stared at her large throbbing cock I found myself beginning to have second thoughts.\n\n\"What is?\" she asked, pointing at my hands.\n\n\"Um, lube. It...we can have sex with it.\" I'd found the lube on the shelves at the convenience store where we'd been attacked, and in a fit of madness had decided to grab some just in case.\n\nShe still looked bewildered, tilting her head a bit as she stared at it, so I moved over to the bed and lay down on my back. I uncapped the top and poured a drizzle both onto my fingers and in the space between my balls and asshole.\n\nI wasn't exactly a stranger to playing with my ass. I'd stuck a finger up there plenty of times before--first out of curiosity, and then because it felt good--but I'd certainly never tried anything nearly as large as the monster between El'na's legs.\n\nShe watched me with barely hidden lust as I slowly worked a second finger into my ass, golden eyes darting between my hand and my face. Her own hand fell to wrap around her penis, and I grinned as her breath began to come in fast, short pants.\n\n\"Come here,\" I said, holding out my other hand to her. In a flash she was kneeling on the bed, her gargantuan body hovering closely over mine. I took her finger and coated it in lube, and when I brought it to my pink twitching hole she seemed to get the idea.\n\nHer long, thick finger filled me up in one smooth motion to force a surprised gasp from my throat. Her brow knit with concern, and I quickly rushed to reassure her. \"It's okay, it's just big,\" I said, wiggling my butt on her finger.\n\nShe relaxed a bit more and gently moved the digit in and out, playing close attention to my face as my expression fluctuated between pleasure and discomfort. Her other hand made wet, sloppy noises as she stroked her own hard cock, it's engorged head brushing against my thigh.\n\n\"Try a second finger,\" I breathed once I felt that I'd adjusted enough.\n\nShe nodded excitedly and slowly eased the finger in this time, and I felt more full than I'd ever been in my life. \"Okay?\"\n\n\"Yeah, keep going.\"\n\nIt took a few minutes of careful fingering, but soon enough she was pumping the both of them in easily to brush smoothly against the soft spot deep inside of me. I was just as scared as I was eager to feel her monster of a cock inside me, so I slid myself off of her fingers and pushed her until she was lying on her back, her eyes wide and curious. I rubbed extra lube all over her dick to get it slick--a bit unnecessary considering her precum had already done a pretty good job of that--and when I held it up so that I could straddle it with my ass, her eyes widened further.\n\nI attempted to lower myself onto her slick cock and was a little surprised when I struggled to get even an inch of her inside. It seemed like an impossible task, and I was seconds away from just giving up and offering her a blowjob instead.\n\nBut then she sharply jerked her hips up into mine, unceremoniously popping the thick head of her cock inside me, and I winced and gasped loudly at the sharp pain that accompanied the movement.\n\n\"Hurt?\" El'na asked worriedly.\n\n\"A little. It's okay, just...just give me a minute.\"\n\nShe nodded and ran her large, calloused hands up and down my sides until I felt okay enough to continue trying to work her inside of me. Compared to trying to force her bulbous head in the rest was much, much easier to take, and before long I had nearly all of her stuffed deep into my bowels.\n\nI'd never felt so full in my life, and I could tell from her gritted teeth and squinting eyes that she was doing everything she could to hold herself back from brutalizing me. I slid myself up and down as her horse cock rearranged my insides, panting with the effort of it all.\n\nHer dick battered my prostate each time I bottomed out and before long my dick was harder than it'd ever been, waving in the air as my ass cheeks slapped against her thighs. Thin ropes of clear precum flung from my slit until the sticky fluid covered the both of us.\n\nI was shocked when I came first with a long, breathy moan, my cum splashing against her small breasts and powerful rippling abs. Through my own heavily lidded eyes I could see her grinning up at me as her fingers dug into my thighs hard enough to bruise.\n\nShe gave me all of five seconds to shudder through my orgasm before she brought her arms up to wrap tightly around my hips. She pounded her hips up into me at a blistering pace, and it was all I could do to stay conscious as the pleasurable burning feeling behind my dick started up all over again. Her grunts were deep and guttural as she shoved herself inside of me, and for someone who'd just learned what sex was less than fifteen minutes ago she seemed to know exactly what she was doing.\n\nIt was astounding how quickly she adapted. Each time she bottomed out she twisted her hips in just the right way to brush up against the spot inside of me that made my dick drool excessively and endlessly. Never in my life did I think I'd be taking a cock up my ass let alone loving it like I was, but now I found myself seconds away from cumming all over again.\n\nUnfortunately she didn't last much longer with my hole pulsating around her cock. She battered my insides for only two or three more powerful strokes before she was throwing her head back and nearly howling as she emptied herself inside of me, her warm, creamy cum filling me up like a twinkie. Her strong arms squeezed me to her sweaty chest as she jerkily rode out her orgasm, gasping and moaning and whimpering as the pleasure overwhelmed her.\n\nIt felt good to know that I was at least somewhat responsible for the blissed out look on her face, even if my contribution to our coupling had mainly been just serving as a warm hole. Her glazed golden eyes blinked slowly--serenely--and once she'd gotten her breath under control, she leaned down to press her lips against my own with a satisfied hum.\n\nI don't know how long we made out for, lips and tongues exploring each others' mouths, but soon enough I felt her harden and grow inside of me. She began to slowly slide herself in and out of my abused hole again, and I looked up at her incredulously.\n\n\"You can still go?\" I asked.\n\n\"Mmhmm,\" El'na murmured into my neck. Her initial gentle strokes quickly gave way to the rough pounding of her thighs against my ass, and I shuddered once again at the feeling.\n\nShe then suddenly flipped us around so that I was lying on my back beneath her, and I felt like a rag doll in her hands as she squeezed my hips with bruising fingers to slam me up and down on her dick. Every thick vein of her cock rubbing inside me only added an additional layer of intense pleasure, and before long I found myself gripping weakly at her shoulders in a desperate attempt to hold on. My eyes rolled up into the back of my head and I came for the second time, weak spurts shooting out to cover my stomach, and even through my post-orgasmic haze I could clearly see her sharp, delighted grin.",
        "I watched her muscles ripple as she shoved herself into me almost painfully. She was growling almost animalistically as she focused solely on her own gratification, the sweat from her brow dripping down onto my chest despite the cool temperature in the room.\n\nIt wasn't long until she leaned down to gasp loudly into my ear, and then I felt her somehow grow even larger inside of me. With a long, keening moan, she released inside of me again. For the second time warmth flooded my insides, and for the second time what couldn't fit inside of me splashed out around the tight seal of her cock until it was dribbling down the back of my ass.\n\nShe fell down on top of me, spent, holding up her large body just enough to prevent me from being crushed. I ran my fingers through her wild reddish brown hair as she panted, planting long, slow kisses against the parts of her that I could reach. Her heart shook me with each powerful beat, sweaty chest pressing into my own. She stayed inside of me and turned onto her side so that I was still wrapped up in her arms and sighed into my neck.\n\n\"I like sex,\" she murmured tiredly, a small, satisfied smile on her face.\n\nI laughed and stared up into her golden eyes, watching as her eyelids steadily began to slide shut. \"Me too.\"\n\nWe cuddled in the small hotel bed together, her much larger body wrapped tightly around mine. Like usual, with the heat she gave off I didn't even need the blanket, and with her dick still stuffed snugly inside of me it felt like I was being warmed from the inside too.\n\nStill, a pressing question nagged at me, and I shook her until she grunted to show that she was still awake. \"Why are you so keen to go North, anyway?\" I asked.\n\nEl'na hummed tiredly. \"My job. I fight.\"\n\n\"Don't you ever want more out of life, though? Maybe do something that won't get you killed?\"\n\nShe cracked an eye open to stare down at me. \"Hmm. Why?\"\n\n\"Why what? Stay alive?\" She nodded, and I blinked. My heart broke a little for her because no matter how I thought about it was a sad way to live. \"Well, shit, there must be people who love you and things you want to do besides fight.\"\n\n\"No. I fight. My job.\"\n\n\"Fuck your job,\" I seethed, squeezing her tighter with my spindly arms. \"You're not in Ma'ro or wherever anymore. You can be more than just a warrior, and I...well, I like you and don't want you to die. If that counts for anything, I mean.\"\n\nShe didn't reply for a minute, and a quick glance up at her face showed that she was asleep and hadn't heard a word I'd said which frustrated the hell out of me. I felt happy that she was taking me home now, sure, but after that she'd be walking across the border to her death. I'd grown to really enjoy her company over the past couple of months, and the thought of her dying alone when I could've done something to prevent it just didn't sit well with me.\n\nUnfortunately she was as stubborn as she was beautiful and strong, so there was nothing I could do besides let her go and hope that she somehow made it back alive.\n\n<p align=\"center\">* * *</p>\n\nWe gave New York City a wide berth to avoid running into both people and demons, and after a brief trek through Pennsylvania, finally made it to my small community on the southern outskirts of Bangor.\n\nFrankly, I still couldn't believe I'd made it. I should've died at least three or four times, and I hugged El'na with all the gratitude that I could muster for her help in getting me home.\n\nThe entire town was deserted which on its own didn't raise any red flags given that most had abandoned their towns for the various walled settlements around the country, but what terrified me was that it looked like the demons had already been through there. My heart sank at the all of the dried blood and deep claw marks everywhere in what used to be the town square, and it was only El'na holding me up with her free arm that kept me from falling apart.\n\n\"Okay?\" she asked, brow furrowing.\n\nI swallowed hard and nodded. \"Yeah, I'm good, just...steeling myself.\" I led her down a few side streets towards my neighborhood, my dagger at the ready just like El'na, and soon enough we were standing on the sidewalk in front of my house.\n\nTo my relief it didn't look like the monsters had bothered to come out this far as there weren't any signs of destruction like there'd been in town, but it was still just as deserted. I took a deep breath and walked up the stone walkway leading to my front door and frowned to find that it was still unlocked.\n\nI started to turn the doorknob, but El'na almost shoved me aside to do it herself, making herself the first line of defense in case there was a demon waiting on the other side to attack. She poked her head in and glanced around while raising her nose to sniff at the air, and seemingly satisfied that it was safe, allowed me to enter behind her.\n\n\"Mom! Dad! Chrissy!\" I shouted into the empty house, even though I knew no one was home. It looked like they'd left in a hurry, every drawer open and items deemed unimportant strewn about everywhere. I carefully picked my way through the mess for a sign of where they'd gone--some clue to tell me where I should go next to look for them--but there was nothing.\n\nIf I thought about it, it sort of made sense. What reason would they have to think that I'd make my way clear across the country to come and find them? It had been a stupid idea when I'd left. Did I really expect them to still be anywhere near Canada knowing how dangerous it was?\n\nWorst case, they'd had the same idea to find me in Stanford and had been attacked on the way.\n\nI stumbled into my bedroom and collapsed on my childhood bed, dropping my head miserably into my hands. I'd trekked across the country, almost died multiple times, and for what? What the fuck did I even have to show for all that effort?\n\nThe bed creaked dangerously as El'na eased herself down beside me, and immediately I leaned my head against her strong shoulder. \"I don't know what to do. I have no idea where my family, and now I don't even have anywhere to go. I'm alone.\"\n\nEl'na frowned. \"No.\" She lifted my chin with her fingertips and then put her fist on her chest. \"Me.\"\n\n\"What do you mean, 'Me'?\" I said, pulling away from her grip and laughing disdainfully. \"You're going off to die fighting the demons. I'll never see you again after we leave here.\"\n\nShe shook her and pounded her fist to her chest again. \"No. I stay. With you.\"\n\nI looked up, confused. \"But you said it was your job.\"\n\n\"Fuck job.\"\n\nI laughed again--incredulously this time, because she really was a fast learner--and she smiled back, obviously pleased with herself.\n\n\"Really? You aren't going to just abandon me?\"\n\nShe nodded and smiled wider, and that's when I launched myself into her arms. She squeezed me back just as tightly, and suddenly I felt a spark of optimism in what was close to becoming a very bleak future.\n\nStill, we couldn't just travel around the country aimlessly. Not only was that not safe, but I was really looking forward to never trekking through a freezing forest ever again. Plus, knowing El'na, she wouldn't be happy if she didn't have a clear purpose or goal in mind. A spark of an idea sprouted in my head, and I cocked my head as I remembered the map of settlements pinned in the social studies lecture hall back at school.\n\n\"You know, there's a settlement down in Virginia that we can go to, and I hear they're desperately recruiting Ma'ro to help defend it. You can still fight and kill demons, but it'll be much less dangerous. Plus, I'll be there.\"\n\nShe frowned and tilted her head. \"Hmm. far?\"\n\n\"A little, maybe a two week walk if we can't find a car,\" I said, quickly doing the math in my head. \"And it'll be much harder to avoid the bigger cities; probably a lot of demons and people to worry about, too.\" I cringed as I pointed out the many flaws with my plan. I thought she was going to refuse or maybe suggest a different idea, but instead she just shrugged her huge shoulders and smiled.\n\n\"Hmm. Okay. When leave?\"\n\n<p align=\"center\">* * *</p>\n\n<p align=\"center\">Epilogue</p>\n\nThe first thing I felt when I woke was a warm, heavy arm wrapped around my stomach, fingers gently stroking the soft skin of my stomach. I made a sound in my throat to let her know that I was awake, and then her fingers moved from my stomach and up to my chest to play with nipples.\n\n\"I patrol soon,\" a husky voice, thick with sleep, whispered into my ear from behind.\n\n\"Then we'd better hurry,\" I murmured back.\n\n\"Yes.\" El'na ground her cock deeper into my bowels, and I sighed at the feeling.\n\nShe loved sleeping with her cock inside of me, and after a night or two of her refusing to take it out I'd grown to love it too. There was something comforting about being filled, and I'd come to crave the stretched, warm, comfort of it all. The downside to that was sometimes she'd get hard in the middle of the night and sleep fuck me, causing me to lose a bit of sleep, but it was a small price to pay for the amount of pleasure I received.\n\nI was still loose and full of her cum from the pounding I'd received the night before, so she was able to easily get started with slow, gentle strokes, the wet squelching sound of old cum filling the room. It was soft and leisurely, and I grunted each time she bottomed out inside of me.\n\nShe knew how to push every single one of my buttons now which was as awesome as it was frustrating; awesome because I'd never cum harder in my life before I met her, and frustrating because she could keep me on a knife's edge for basically as long as she wanted. Her large fingers pinched harder at my nipples, sending spasms through my body that made me clench around her dick.\n\nShe kissed me viciously and I quickly returned it, cocking my head at a bit of an uncomfortable angle to reach her mouth. Her sharp teeth gently bit into my lip as she gradually began to speed up her thrusts, her hips flexing against mine, and before long the only sounds in the room were our combined pants and the slapping sound of her thighs hitting my ass.\n\nUnsurprisingly she came first, releasing a long, low groan along with another load of cum into my already overfilled asshole. Her arm held me firm against her chest as she ground herself as deeply as she could as though trying to make sure that I got every ounce of what she had to give.\n\nOnce she was in control of faculties again, she lowered her large hand from my chest to wrap around my still hard dick. Normally she preferred to make me cum using only her battering ram of a cock, but we didn't have much having woken up a bit later than usual. \"You like?\" she asked, her voice filled with knowing.\n\nAs much as I wanted to reply with something snarky or sarcastic, I couldn't breathe let alone speak. She'd started fucking me again in earnest, and even though her dick was softer it was still plenty big enough to grind firmly against my prostate with every stroke.\n\nI gasped loudly and shuddered, cumming all over her large, slick hand. It was a weak dribble, nothing compared to the cup or so she'd just produced. I'd cum twice the night before--both while being fucked--and unlike her there was a limit to the number of times I could orgasm in a day before I started shooting dust.\n\nFrom the corner of my eye I saw her hand disappear, and then I heard the wet smacking sounds of her slurping down my cum. Her fingers came back down to my now defeated dick to scoop up the rest, and then she was sucking down the remainder with greedy smacks.\n\nWe spooned for a minute or two longer than we probably should've, the both of us indulging in a bit of comfortable laziness before we had to get our day started. Finally she sighed and rolled out of bed to get dressed in her captain's uniform, her dick making a wet schlopping sound as it slid free. Her cum drooled from the tip of her wet cock and onto the title floor, leaving another mess I'd have to clean up along with the one she'd left in my ass.\n\nI leaned up on my elbow to watch her get dressed in her captain's uniform from where I was still recovering from our coupling. It was all black and made from the skin of slayed demons just like her normal outfit was, only it covered a hell of a lot more of her skin than her old paltry halter top and skirt. It'd taken a bit of convincing to get her to cover up and protect herself--and by that I meant I'd had to fuck her silly so she'd realize what she would be leaving behind if she died--but I was glad that she was now taking her own self preservation much more seriously for both our sakes and the sake of the Virginia Commonwealth Colony.\n\nWhen we'd first arrived the settlement had been in pretty bad shape. Constant demon and bandit attacks had nearly crippled the college turned settlement, and they were down to their last fifty or so survivors with no hope in sight.\n\nWithin a week El'na had killed dozens of the beasts in the area, and her presence alone dissuaded any bandit from even thinking about getting too close. She'd trained up the strongest of the remaining people, helping them forge weapons made from the demons' obsidian claws and spines, and even better another Ma'ro had arrived a few months later--a woman that El'na didn't seem to particularly get along with if I was being honest. El'na was always more touchy and possessive when the woman was anywhere within speaking distance of me, her jealousy so obvious that I couldn't stop myself from teasing her to my own butt's detriment.\n\nOnce things had gotten a bit more stable, she'd been unanimously elected as the colony's head of security. Her team's primary mission was to patrol the area for threats, but they also went on scavenging runs to help guard the scavenging team and also went on search and rescue missions when we received distress calls.\n\nAfter only six months of hard work, we were easily one of the largest and most secure settlements on the East coast boasting over three hundred men, women, and children with more arriving every week. That came with its own problems of course, but for the first time since the Shift happened I had hope for the world's future.\n\nNow fully dressed El'na sat down on the bed to lace up her sandals, and I pushed myself up to braid her wild auburn hair. I'd gotten extremely good at it in the past six months and could give her a basic braid in about thirty seconds without too much effort, even if I was still sleepy.\n\n\"Hear from family?\" she asked as I worked on her hair.\n\nI frowned and shook my head. \"Not yet, but I'm still sending out broadcasts to every settlement I can find. I think we've hit everyone on the east coast, and now we're starting on the midwest. I have family in Illinois, so maybe they tried going there.\"\n\nMy high school AV club knowledge had surprisingly come in handy, and I was now the director of communications for the settlement. Mostly I intercepted distress signals for El'na and her team to investigate, but I also handled communications with the other settlements and maintained the equipment. We were extending our communicable range all the time as we found new parts, and it was only a matter of time before I'd be able to contact my old friends at Stanford if they hadn't been wiped out already.\n\nI strapped a rubber band onto the end of the braid and leaned in to kiss her on the cheek. She turned her head at the last second to capture my lips in a searing kiss, though when she began to force her tongue in I quickly backed away with a grin. \"Okay, no more procrastinating, off to work for you.\"\n\nEl'na pouted cutely but stood up reluctantly, her head brushing the ceiling of the former dorm room we were staying in, and with her back to me I slapped her as hard as I could on the ass. She snapped her head around to glare at me from over her shoulder, eyes flashing dangerously, and I knew I'd be paying dearly for that when she got back.\n\nI innocently smiled back, already feeling my asshole tingle with anticipation despite already getting fucked not even fifteen minutes ago.\n\nI was counting on it."
    ],
    "authorname": "dgirlanonymous",
    "tags": [
        "anal",
        "blowjob",
        "oral",
        "anal creampie",
        "bareback",
        "dickgirl on male",
        "dickgirl",
        "cock sucking",
        "creampie",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/enemy-from-below"
}