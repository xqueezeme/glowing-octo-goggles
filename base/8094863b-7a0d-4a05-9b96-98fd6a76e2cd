{
    "title": "Down on the Farm Ch. 03",
    "pages": [
        "The 4th July fell on a Saturday, that year and their usual custom was to attend the church celebration. It was an all day event planned with children's games in the morning, a picnic lunch on the church lawn, followed by a softball game in the afternoon and fireworks in the evening. The girl's rotation fell to Trish that morning and Edith and Sam would milk in the afternoon. If Trish and I did some extra work in the morning, we would push the time for PM chores back an hour.\n\n\"Come on girl, get the sleep out of your eyes. We have a lot of work to do.\" I said as we walked from the house to the barn that day.\n\nShe yawned but didn't say anything. Together we worked as a team. Each of us knew what was expected, knew what the other was doing and had developed a routine. Only an occasional word was spoken, our minds were on the job before us. The radio was on and patriotic music was playing, the weather report said the day would be hot and humid with a slight chance of a late afternoon shower.\n\nThe last cow was milked and we worked with cleaning and sterilizing. Side by side we stood at the deep double vat sink, our hands in the soapy mixture washing and scrubbing. For some reason I was feeling ornery and using my hips, I playfully pushed her away from her work. She struggled back in place and pushed me away from the sink. I don't say anything and return to the work. For a minute or two, nothing more is said, then I pushed her away again. In a second we are in a pushing contest, with our hips pushing against each other. Slowly I manage to move her away from the sink. Trish, seeing that she had lost the contest, stepped back, placed her hands on her hips and said, \"Looks like you'll be doing all the work now.\" As she grinned up at me.\n\nSuddenly I leaned down and give her a quick kiss on the lips, and then I return to my normal position in front of the sink and resume washing.\n\nTrish is still standing there with surprise on her face. \"What was that for?\" she asked.\n\n\"Pretty girls deserve to be kissed, so I kissed you.\"\n\nShe stood there with the funniest expression on her face, looking up at me.\n\n\"Come on.\" I encourage, let's get these done.\n\nShe returns to the task at hand, washing out the udder cups. With her hands deep in the water, she asks, \"Mark, do you think I'm pretty?\"\n\n\"I kissed you, didn't I?\"\n\n\"I'm serious, Mark. Am I really pretty?\"\n\nI look at her and search her face. The question is real. \"Yes, I think you are pretty. Very pretty.\"\n\n\"Then how come, guys don't ask me out?\"\n\nThat brought me up short. In all the time I'd known her, she'd never been on a date. She needed re-assurance. \"Trish, you are a very beautiful girl and if I were in high school again, I'd ask you out in a heart beat.\"\n\n\"You would?\"\n\n\"Yup, I sure would.\"\n\nThat put a smile on her face and we settled down to our work. It was close to 20 after ten as we finished up. As we walked to the house, to get cleaned up, Trish voiced what was on her mind. \"Could today \u2026 could \u2026 could today be like a date between us?\" she finished the sentence very quickly and her words ran together.\n\n\"I thought the guy was supposed to ask the girl out; not the other way around.\"\n\n\"MARK.\" She stamped her foot. \"Now-a-days some girls ask guys out.\" Then the question look was back in her eyes. \"Could it be?\"\n\nShe was a sweet kid, so I said, \"Sure.\"\n\nShe put her hand in mine and we strolled to the house. We got cleaned up and I drove to the church. Most of the morning games were over and we arrived in time to help setup the tables for the lunch. Trish was never far from me except once, talking to her mom. When we walked together, she made certain her hand was in mine. Edith looked at us, but refrained from saying anything.\n\nThere was lots of food to select from and we went through the line where our plates were filled to heaping. We sat at a table with some of the others in the youth group. \"What do you want to drink?\" I asked Trish.\n\n\"Iced tea.\" \n\nI went to the drinks table and returned with her drink and one for me. The talk among everyone was about the softball game that afternoon. Each year the competition was between the married and the unmarried. For the past 5 or 6 years, the married folks had been the victors and this stung the pride of everyone at the table. Positions were already allocated and extras would be stuffed into the outfield. I was new here and that is where they placed me, along with Trish. Now, I've played ball, in fact, I've played a lot of ball. But this was their competition and I just let it be.\n\nAfter we finished eating the unmarried folks got the equipment out and began warming up, playing catch, and taking some swings. Pop flies were placed into the field to give everyone an opportunity to play. They had one fellow who was pitching and I could see that his skill was not very good. They asked me to do some practice batting, which I did. I can swing a bat, but I cannot hit worth beans, and it showed. A few groans were heard and their hopes were dashed. Some hoped I could be a long ball hitter. Teams played with both men and women in a friendly match. \n\nGame time arrived and after a coin toss, the married folks got to bat first. The Pastor was the Umpire, standing behind the pitcher. The 'married' team, I observed, had the power hitters and by the time 3 outs had been reached, 6 runs were scored. Although they could hit, they were slow with fielding. Perhaps we could use this to our advantage. Sides were swapped and our team came to bat. Here the skills were reversed. Our team could field well, but our hitting was average. After the inning was over, we had garnered one run. From the comments heard, this was to be a repeat of the previous years. 'Not if I could help it.' I thought.\n\n\"Hey guys, over here.\" I requested of the captain. They gathered near me and wondered what was up.\n\n\"Come on, we can win this game. Give me the ball, let me pitch.\"\n\n\"You any good?\" someone asked. Trish was listening at the edge of the team.\n\n\"Would two state championships in three years be a good indication?\" I responded.\n\nThat produced some whistles from the group and I noticed Trish's eyes got big.\n\n\"Who's the best catcher?\"\n\n\"Joe here. He's pretty good.\" The captain mentioned.\n\n\"You got a good glove?\" I asked him. He showed it to me and I replied, \"You will need some extra padding. Does someone have some cotton gloves?\"\n\nThey were produced from the spectators and he inserted them into his glove. Everyone else took the field while I spoke to Joe. \"Look, I'll take seven warm up pitches. They will have some pep. After that, every pitch will smoke. You know each batter and where the best place to pitch to them. Put your glove in that spot and don't move it, because that is where the ball will arrive. If you can catch what I pitch, no one will reach base.\"\n\nWith that I took the pitching circle. Turning to the Pastor, \"Do I get seven warm ups?\"\n\n\"Throw em kid. Let's see what you've got.\"\n\nWith that I unloaded seven straight pitches and drew some loud comments from the opposing team. \"Where did you get this guy? He can pitch.\" Or, \"He throws straight stuff, we can hit that.\"\n\nThe first batter was up to the plate. He stood about 6 foot and 210 lbs. and a lot of upper arm strength. If he ever connected, the ball would be gone. The problem was, I was not about to let him get near the ball. Joe put his glove waist high and on the inside. Okay here goes.\n\nThe first pitch was in Joe's glove before he even knew I had thrown the ball. \"Strike one.\"\n\n\"Hey, I didn't even see that. Where's the ball?\" the batter commented. Others on the team suddenly took notice of what was happening. All eyes were on me. I grinned inwardly, because this was a show.\n\nThe second pitch was right down the pike. \"Strike two.\"\n\nThen \"Strike Three.\"\n\nJoe called time and walked out to the mound. \"Where can I get more padding?\" he grinned. \"This hand is gonna hurt tonight, but it's going to be worth it.\"\n\nWith that, we retired the next two batters. One took a swing but didn't come close.\n\nOur side came up to bat and everyone was giving me the 'high five' or patting me on the back. \"Look guys,\" I said, \"Let me do the pitching, they won't get any more runs. But it will be up to you to get the scores to beat them. They're slow with fielding. If we can put the ball into play, we can advance any runners. Come on, let's go.\"\n\nTrish came over and latched on to my arm. \"Did you really win the state championship?\" \n\n\"Yeah, two years straight.\" I smiled looking into her eyes of wonder.\n\n\"You could be a 'pro' ball player with an arm like that.\" Joe said from the other side of the fence.\n\n\"Na,\" I replied. \"I blew my elbow. I can't throw overhand any more. But this straight arm underhand pitch, that's another thing.\" \n\nJoe grinned. \"Boy, do these guys have a surprise this year.\"\n\nWe scored two runs this inning and the score was 6 to 3. I took the mound and retired the next three batters. By now the other team was getting wise to what they were up against. \"Where did you get this guy?\" and, \"Is he for real? Where's the rule book. There's gotta be something against him.\"\n\nI took my turn at bat and hit a blooper to the shortstop. \"At least he can't hit.\" was heard from the opposing team. \n\nWalking back, I saw Edith sitting among the women. I stepped over and squatted down beside her. \"You looked lonely sitting here.\" I commented.\n\nShe smiled in my direction. \"They say the year of firsts is the hardest.\" She paused. \"You never stop amazing me. Twice you did it today.\"\n\n\"Oh, how's that?\"\n\n\"Your pitching, for one.\"\n\n\"And the other?\"\n\n\"You and Trish.\" she said as we watched a close play at home plate.\n\n\"Huh?\"\n\n\"She told me about the kiss you stole and agreeing to call today a date.\"\n\nI jerked my head to look at her. \"She's already told you about all this, huh?\"\n\n\"She tells me everything about you.\"\n\n\"She's a really nice kid.\"\n\n\"Careful Mark. She's ...\" I heard her say before I left to take the mound.\n\nOur side had gotten 2 additions runs. The score stood at 6 to 5. I retired the next three batters, as expected. But not before one had gotten a piece of a pitch. It was a foul, but that was all.\n\nTrish came in from the field and we sat watching the game. \"How's it going?\" I asked.\n\n\"Okay.\" as she stuck her hand in mine. \"Think we'll win today?\"\n\n\"Maybe.\" One of our guys was on base, one out. \n\n\"Who's the next batter?\" someone queried.\n\n\"Oh, that's me\" as Trish got up.\n\n\"Hit 'em in.\" I encouraged.\n\n\"Yeah, right.\" she said back.\n\nThe first two pitches to her were called strikes while she watches them cross the plate. \"Swing at it.\" I said.\n\nThe next ball was thrown and she weakly swung. She got a piece of it and it bobbled down the third base line. The third baseman moved forward for the easy out. As he stooped to pick it up, his foot kicked the ball and drove into the spectators. By the time it was retrieved, one run had scored and Trish was safe on first. Tie score.\n\n\"Way to girl.\" I encouraged. \"Way to go.\"\n\nOur next batter flied out to center. Then the next one drove the ball deep between two defenders. When the dust cleared, Trish was on third. I moved to the baseline, \"You can score.\"\n\nHer face flushed with excitement, and her attention was on the next batter. The fourth pitch got away from the catcher and rolled to the backstop. \"Run\" I quietly said and she took off. Their catcher was not paying attention and by the time he realized it, it was too late and Trish crossed the plate. We were up one run.\n\n\"Way to go, way to go.\" I said as I ran up beside her. \n\nShe was excited at the accomplishment and wrapped her arms around me and squeezed. \"I did it. I really did it.\"\n\nThe next batter struck out and we took the field. The next two innings were pretty much the same. They did tighten up their defense but the damage was done and they didn't get on base. The final score was 6 to 8, the unmarried team was the winner. Joe walked over to me as we moved off the field; he was holding his hand out, palm up. \"You weren't joking about 'smoking' it.\"\n\n\"Be careful with your hand, it likely will be bruised by morning.\"\n\nOur team was excited at the victory and was asking me questions. The married men congratulated us. \"Gotta get you married before next year.\" one of them said. \"With you on our team, they wouldn't have a chance.\"\n\n\"Not likely to happen. Don't have a girlfriend.\" I added.\n\n\"What about Trish?\" another asked. \"She's available. We gotta get you on our side. There's the preacher, he can do the job.\"\n\nI grinned at the joke, and then it dawned on me she and I were holding hands. Nothing more needed to be said but I opened my mouth anyway. \"Not this year. That'd be too soon.\"\n\nTrish squeezed my hand. 'Yikes' I thought.\n\nIt was time for the milking, so Edith called the other two girls. Becky whined, \"Mom, let me come home with Mark. It's not my turn for chores.\"\n\n\"No,\" she insisted. \"You come with me.\" Becky continued to protest, but to no avail. They left in a few minutes and Trish and I strolled around, looking at things and talking to folks.\n\nTrish introduced me to the pastor's wife. \"So you're the young man working at Bud and Edith's place. I've heard good things about you and after today's performance you'll be the talk of the town.\" \n\n\"I'm helping Edith out now that Bud is gone. They're a good family, and he is sorely missed.\"\n\n\"You staying for the fireworks? We'd love to have you join our group.\" She asked.\n\n\"Not certain we can. It will be late before we get home and there's the milking at 3am. Besides, we didn't bring anything for supper.\"\n\n\"Should you choose to stay, food will not be a problem. There's plenty left over from our lunch.\" She replied as I looked down at Trish.\n\nShe didn't say a word, but her eyes took on the 'Bambi' look. Guess I'm a sucker for the 'doe' eyes with a pleading request in them. \"We'll stay.\" I said.\n\n\"Good. We can set another couple places. You should enjoy it.\"\n\nWith that, Trish and I walked into the shade of a nearby tree. \"You're getting up with me in the morning, girl. If you wanna stay, then you gotta help.\"\n\nShe smiled her acceptance. We sat down and leaned back, watching the other folks. We were silent for a few minutes, when I noticed that familiar 'far away' stare on Trish's face. She sat there, oblivious to all surroundings, not moving. \"Trish?\" I whispered. No response. \"Trish?\" I say louder. Still she did not hear. I disengaged my hand from hers and rotated my arm, it was sore from the workout. Hadn't been used for several months and I'd failed to warm up properly.\n\nHer attention returns to the present. \"Here, let me rub your shoulder.\" I swiveled so that her hands could work the muscles of the joint. Oh, that felt good.\n\nFor 10 minutes she kneaded and massaged the muscles. It took that long for the tension to be worked out. \"Mark?\"\n\n\"Yeah?\"\n\n\"Do you like me?\"\n\n\"Sure, I like you.\" I said with out thinking.\n\n\"No, I mean do you like me as a girl? You know, like a girlfriend?\"\n\nMy head slowly turns and looks her in the eye. She was dead serious and I was thinking fast. Could I extract myself without hurting her feelings? I didn't see how. If the wrong thing were said, or she took it the wrong way, her puppy love would lead her in the wrong direction. The way I considered her, she was a kid, the daughter of the family I worked for. The things I'd done and said earlier today probably lead up to this moment; plus comments by the other team may have added fuel. What could I possible tell her, and yet not offend her. She was waiting, and afraid of what I might say.\n\n\"Trish,\" I start out slowly. \"I'm not looking for a girlfriend, right now. I'm not in a hurry for a relationship. You are a sweet and very wonderful girl. I like you; in fact I like you a lot. Do I like you as a girlfriend? Honestly, I don't know because I've never allowed myself to explore that possibility. When your dad passed away, your life changed and my life changed. I have taken on some responsibilities which kind of scare me. That is what keeps me busy.\"\n\n\"Could you like me as a girlfriend?\" she emphasized the word 'could'.\n\nIf I said 'no', it would be lying. But if I said 'yes', it might get her hopes up. Her hands continue to work with my shoulder and our eyes meet, hers are searching mine, hoping beyond hope, hope I don't close the door to her. \"Yeah, I could.\" I smile. \"I could, easily.\" I added.\n\nThe look in her eyes became like a 'sigh', a sigh of a 'maybe'. The door hadn't been closed and just perhaps, perhaps she had come a step closer.\n\n\"I want to have fun today, Trish; fun just being here and fun with you.\"\n\nHer smile brightened and she gave me a quick kiss on the cheek. The sun was still shining in her eyes.\n\nTo change the subject I asked, \"Can you show me the church? I've only been here once.\"\n\n\"Sure. Come on.\" She grabbed my hand and pulled me to my feet. Together we walked to the back door, which was open and we stepped inside. My concept of a church was rather foggy, coming from my younger years. I figured it to be a 'holy' place with hushed voices, and as such.\n\nWe walked from room to room and I observed that no one place appeared more reverent than another. So I asked her.\n\n\"This church is only a building where we come together for worship of God.\" She started her explanation. \"God is holy, not the place. Items in this church are used to help us learn about Him.\"\n\nThere was an alter at the front of the auditorium. As a child I kind of remember it being a special place where God was supposed to work or do his thing. But here, Trish explained, it was used to help focus worship. It was not an object to be worshiped. As we continued, I asked all kinds of questions and she tried to give a good answer, but with some she did not know. \"You will have to ask the pastor about that.\"\n\n\"What do you believe, here?\"\n\n\"The Bible.\"\n\n\"Is that all? You don't have any other books?\"\n\n\"No, just the Bible. Let me show you something.\" Pulling me through a large doorway she pointed to some words over the top.\n\n\"The Bible, the Whole Bible, and nothing but the Bible.\"\n\nThat was sure different from what I had remembered. There were other things that were considered important, although I could not recall what they were. I guess I had a lot to learn. \"Can I ask you when I have a question?\"\n\n\"You can ask me, sure. And if I don't know, ask mom, or ask the Pastor.\"\n\nWe continued the tour with me asking a 'ton' of things. Leaving the church, we found the Pastor and joined him for supper. He had been impressed with the pitching prowess I demonstrated earlier that day and I told of my high school sporting days. After a lengthy discussion on that topic, Trish interrupted and shared I had some questions about the church. We changed gears and he politely explained what the church believed and how it applied to the lives of people. I must say he was very thorough and very understanding of my ignorance. He invited me to attend any service to observe and learn. I guess I figured there would be pressure, but there wasn't. He offered an invitation to visit and left it up to me.\n\nThe evening progressed as the sun set and darkness descended. The fireworks display was scheduled for 10pm and a few minutes before, we moved to a better viewing spot and blankets were provided to sit, while watching. Trish made a point of holding my hand and I gave it a slight squeeze. The fireworks started and I was impressed. Lasting over 20 minutes the bursts of colors never seemed to stop. The flares overhead were the exceptionally awesome.\n\nAt the conclusion, Trish and I walked to the car, swinging our hands. \"You have a good time today?\" I asked.\n\n\"The best, cause it was with you.\" \n\n\"Don't forget tomorrow morning. It will come all too soon.\"",
        "To Trish, today had been a date. For me, it was an enjoyable time with someone I thought of as a 'kid sister'.\n\nWe return home and we catch the few hours sleep before we begin milking.\n\nThe 'dog days' of summer arrived, and before I realized it fall would come. There had been a lot of hard work and everyone had pitched in. Edith still had not decided what to do with the dairy and as things were operating smoothly she was in no hurry to make a decision. We put in 4 other crops of hay before school started that fall. That summer, mucking the barn was one of the dirtiest jobs, but everyone worked at it. Most of the cows had calved, so production was high for the summer months. Edith and I discussed what the best course of action would be after I returned to school. Most classes I could schedule in the morning, leaving the afternoons and evenings to do milking and other work. Edith would do the morning milking during the week. The girls would help me when they arrived home from school. Weekends would be on a rotational basis. We talked about this arrangement and everyone was in agreement, it was the best for now. The summer holiday was over, the girls returned to high school and I started classes. It was quicker to catch the noon meal at the school cafeteria before heading out to the farm. \n\nThe corn crop still stood in the field. Bud had planted it. I would harvest it as silage. By mid October the silo was empty. I spent a lot of time scraping the walls, cleaning out the rotted remainder and sealing the joints. Having never done this before, Edith became the teacher. As the lower rings were prepared, a load or two of silage was cut and blown in. Then we moved higher to seal the next set of rings, followed by additional loads blown in. Slowly the silo was filled. The last load was blown in and Sam and I spent 3 hours tromping it down tight. Anything touched by air would spoil, the rest would cure. We wanted it to cure. Until then, hay was the roughage of choice.\n\nI was becoming exhausted from the daily routine. There was no let up. Classes in the mornings, farm work in the afternoon, followed by chores, more work, and late nights doing assignments. About Thanksgiving, I wanted a break. The last football game was our 'Homecoming' and we were playing our arch-rivals. Traditional activities included the parade of floats down Main Street in the afternoon; the football game was scheduled early in the evening, followed by a huge formal banquet and dance. Win or loose, we always invited the opposing school. All announcements which I had seen, indicated this was to be the largest 'Homecoming' ever. I wanted to take the afternoon and evening off. I arrived at the farm and discussed the possibility with Edith. \"Do you have a date?\" she asked.\n\nEdith had never questioned my social life, so this question took me a bit by surprise. \"No. I don't have a girlfriend. Just figured to go with some of the guys, and have a good time.\"\n\nBefore she spoke again, she paused and I waited. She had something on her mind. \"Mark, take Trish. Make it a date, a real date.\" She sensed my hesitation; then added. \"The two of you had fun on the 4th, didn't you?\"\n\nTaking a girl on a date had never entered my thinking, let alone Trish. \"Yes, we did have fun.\" I responded, thinking back to that time.\n\n\"She's told you, hasn't she, that no one has ever asked her out? Make her wish come true.\" Edith was watching, waiting.\n\nI thought 'Ya, know, a date to Homecoming with Trish would be fun.'\n\n\"Sure, I'll ask her.\"\n\nEdith smiled and slowly expelled the breath she had been holding. I was too caught up in thoughts to notice.\n\nFinishing up our conversation, I head to the barn. I was working in the mow, when the girls arrived home from school. They changed into their working clothes and Sam and Becky took off down the lane to bring the cows in. Trish came looking for me, asking what I wanted her to do. \"Let's go feed the calves. I want to check on the 'big one'. She's off her feed and has the 'trots'. May have to call the vet.\"\n\nTogether we walked down the ladder, through the door and into the pen. All the calves moved around us, looking to be fed. The 'big one' stood off from the rest and we cornered her for closer examination. While checking her out, I casually shared with Trish about Homecoming at school and that Edith had allowed me to take the time off. I explained about the parade, the ball game, banquet and the dance.\n\n\"Are you going with somebody?\" she asked. I wasn't looking at her, but did hear a wistfulness in her tone.\n\n\"Originally I thought about going 'stag', but changed my mind. There's a girl I'm going to ask.\"\n\n\"Oh.\" The disappointment hung heavy in her voice.\n\nI turn to face her, she is looking downwards. \"Trish?\" I ask.\n\nShe raises her eyes to mine.\n\n\"Would you be my date to Homecoming?\"\n\nIt took a second for my question to register, then the light in her eyes turned on and a smile spread across her face. \"Yes, I will.\" Was her reply. \"Gladly, I will.\""
    ],
    "authorname": "Rabbitrunner91",
    "tags": [
        "game afternoon",
        "farm work",
        "today date",
        "holy place",
        "girls arrived",
        "opposing team",
        "mark pretty",
        "house cleaned",
        "trish walked",
        "softball game"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/down-on-the-farm-ch-03"
}