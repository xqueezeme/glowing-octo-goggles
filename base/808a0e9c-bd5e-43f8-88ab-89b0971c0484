{
    "title": "Falling for Grace Pt. 05",
    "pages": [
        "A few days after that party at Chris', Grace took the bus over and was hanging out with me at my house. Edina was doing her work so we could hang in my room as long as the door was open. Whatever we wanted to be doing, we had to be respectful of Grace's mom. We could lie on my bed together, talking, kissing, but nothing more than that. It was very frustrating.\n\nAfter a while, I brought up something I wanted to talk to her about. \"Gracie, how would you feel if I bought you a car? A good used car, reliable transportation.\"\n\n\"You're not buying me a car! Are you out of your mind? I can barely drive! I have my license, but I haven't been behind the wheel of a car for six months at least. Put me in the drivers seat and you'll be visiting ME in the hospital! No way, Henry.\"\n\n\"But Grace, it's at least another month before I'll be able to drive. That means we don't get to see each other more than a couple of times a week. And we have no privacy. We can't even go out because in ten days, our friends will all be gone to start school. I don't think I could stand having my mom or dad drive us to the movies or anywhere else, like we're 15 years old. So what do we do for the next month at least?\"\n\n\"I don't have an answer for you. But I just don't have enough experience driving. Besides, in a few months we'll both be in New York. Neither of us can take a car there. We don't even need a car there. So what will I do with a car?\"\n\n\"You can let Gus drive it. Come on, I'll help you practice. You can help your mom with errands and chores.\"\n\n\"Henry, it's too much. My birthday is coming up in a few weeks; just buy me a nice sweater or something. Do not buy me a car.\"\n\nThat was that; she wouldn't hear of it. Best I could hope for was getting permission from my doctor to start driving sooner, maybe in a few weeks. In the meantime, our sex lives dropped to near zero. We just couldn't get any privacy.\n\nTwo weeks after the party with our friends, they were all gone off to school. A few people were around, either going to local colleges or not going at all, but these were not really friends. Grace took the bus over a few times a week, but she couldn't realistically come over on a Saturday night by bus, when my parents were likely to be out for the evening. I would have needed my dad to drive her home and while I was sure he would do it, it seemed like an imposition. \n\nAbout a week after Darrell, Chris and everyone else was gone, my dad came home from work in a great mood, smiling broadly. He had two things to share with me. Mom was in on one, but she didn't know the second. The first came down the driveway about 15 minutes later, a mint condition 76 two tone, dark green with white Gran Torino. I almost ran down the front steps to the driveway (as best as I could move with a cane) and checked it out. It was beautiful, a real muscle car almost exactly like my totaled car. A different color and some minor differences because this one was a year older, but it was basically the same car. He paid the delivery team and they left my new, old car there for me.\n\n\"Mom, dad, I love it! Thank you both so much! I can't wait to get the ok from Dr. Ryder to drive!\"\n\nDad said \"That's surprise number one.\"\n\nMom said, questioningly \"What else is there, Thomas? You look like the cat who are the canary.\"\n\n\"Both of you read this\" he said, handing over a sheet of paper. \"It's from the State Attorney General's office.\"\n\nMom and I read it together, with me reading aloud. \"The office of the Attorney General for the State of South Carolina announces an investigation into charges of corruption by Dorchester County Sheriff James Parker, aka Jim Parker, has resulted in an indictment of Sheriff Parker on six counts of bribery (two counts), extortion (two counts), theft of government funds and misuse of office. Also indicted on three counts is Deputy Wayne Brill on two counts of extortion and one of bribery. Further charges against these and other individuals may be forthcoming.\" We both looked at him like we had been slapped in the face. \"Thomas, is this true?\"\n\n\"Indeed it is. All true. They were both taken into custody two hours ago.\"\n\nI asked him \"Dad, did you have something to do with this?\"\n\n\"You know, Henry, South Carolina is a one party consent state, meaning only one person in a conversation needs to consent to it being recorded. I knew that son of a bitch was going to shake me down to get you released. So I put a recorder in my briefcase. I knew...well, I counted on him being too arrogant to even think a smart lawyer would trap him in a crime. I knew not to offer money first, to make sure he asked and for Brill to be recorded as well asking for a cut. They were dumb and greedy. And corrupt. Now they can think about the next ten or twenty years in state prison, not a 'farm'.\"\n\n\"Dad...I don't know what to say. It was incredibly risky. But I love it!\" I moved as quick as I could and hugged him hard and kissed his cheek.\n\n\"Thomas\" my mother added as she hugged him from the other side with what I can only describe as a sexy voice, \"you are just full of surprises.\" They kissed with a big kiss I rarely saw and figured my dad was in for a good time that night. Then I pushed it far out of my mind. \n\n\"Henry, why don't you sit behind the wheel of your car and start it up at least? See how she sounds and feels.\"\n\nWith my own big grin I sat in the drivers seat and ran my hands over the steering wheel. This model even had bucket seats instead of the bench. This was like the Starsky and Hutch car, except in green as opposed to red, and not the super charged engine. I didn't care. It was perfect. I turned the key and the engine purred to life, a sound any lover of fine cars loves to hear. I imagined driving it down the street and highway.......\n\nAnd I broke out in a cold sweat. Suddenly in my mind I could see bright headlights from my left and the sound of crunching metal. I was shaking all over. \n\nMom noticed first. \"Henry, are you all right? Henry! Thomas, somethings wrong with Henry!\"\n\nDad rushed over, reached across and turned the key to the off position. \"Henry, it's ok. You're fine, you're home with us.\" He opened the car door and helped me out and I fell into both their arms, crying hard. \n\nThey helped me to get inside the house. Edina was there, getting ready to put dinner on the table, when she saw me like that, in a bad state. \"Henry, what's wrong, sweetheart?\"\n\n\"He's ok, Edina, he's just a little upset\" my father said. My mom took her aside and talked for a few minutes while I tried to get myself together. I noticed mom leaving the house a few minutes later without really being aware of it. Dad held me while I gradually calmed down. Edina worried over me as well, then a half hour later, mom came back with Grace. Dad told mom I was better and Grace ran to me on the couch and held me to her, her arms around my back and my head. \"I'm here, baby. Everyone's here for you. We all love you.\" She kept saying these things over and over, comforting me. Her fingers stroked my hair and she just kept whispering to me. \n\n\"Come on, let's leave them alone for a while\" dad said to mom and Edina. \"Grace, if he gets upset again, call for us.\"\n\n\"I will Mr. Douglas. We'll be ok. And thank you all for calling me and coming to get me.\"\n\nThey all went into the kitchen, where Edina was holding dinner. I was clinging to Grace as if she was my oxygen. \"Honey, what is wrong with me?\" I said with frustration all through my voice. \"I just fell apart as soon as I started my car.\"\n\n\"Henry, I haven't pushed this because things have been a little rough for you and for us, but you need help. Professional help. I've been reading up on this PTSD that therapist told you about, and it is no joke. It can play havoc with your life if you don't address it. You keep reliving the accident because you haven't come to terms with it and how it changed your life. A good therapist can help you learn how to cope with the emotional pain you're still in. Baby, you need this.\"\n\n\"You read all about this? How did you know what to read?\"\n\n\"You know I'm pretty smart, right?\" Grace said, with a twinkle in her eye that made me smile. \"I went to the library and I got some books that covered this. I read them in two days, the relevant parts anyway. I can't help you; that has to be from a trained therapist. But I can help you a little just by being here for you.\"\n\n\"I think you're the smartest person I've ever met. The most beautiful as well.\"\n\n\"You are so darn sweet. Cute as hell, too.\" We kissed, not a big kiss, but a very loving kiss. \"Promise me you're going to deal with this?\"\n\n\"I will, Grace. I love you so very much.\" \n\n\"Same here, Henry. I love you too. Now lets see if we can get some dinner. I'm starved.\"\n\nWe went into the kitchen where the three parents were sitting, all three with worried expressions. We assured them I was better, that I understood I needed help, and that we were hungry. \n\n\"He must be feeling better\" my mom said with a look of relief. \"Hunger is always a good sign. Edina, why don't you let the kids get dinner on the table? You and Grace are joining us, please.\"\n\n\"We'll be glad to join you for dinner, but serving it is my job\" Edina said in a voice that tolerated no argument. \"They can help me, but it's my job.\"\n\nWe all had dinner together and I was feeling much better. Being around so many people who loved me helped most of all. As we were cleaning up, Grace asked her mom \"Mom, can I spend the night here? I can stay in a guest room. I don't want to have to run home after just getting here. And Henry and I just haven't had a lot of time together recently.\"\n\nEdina looked at her daughter hard. \"Don't you think you're fooling me, girl. I know what's what. Fine, I'll bring you a change of clothes in the morning. But don't you think you should check with Mr. and Mrs. Douglas first?\"\n\nI took care of that. I asked my parents and they said it was fine as long as Grace slept in one of the guest bedrooms. Then my parents took Edina home and they told us they were going to a movie. I was lucky my folks had come to care about Grace so much over the last few months. Not to mention how they felt about me.\n\nAfter everyone was gone, Grace said \"I'd say 'race you upstairs' but that would hardly be fair, would it?\" she smiled.\n\n\"No it wouldn't, but I wouldn't mind bring up your rear\" I teased, lightly slapping her ass.\n\n\"One of these days we're going to have to try that...bring it to my rear.\"\n\n\"You'd be willing, Gracie? To try anal?\"\n\n\"I'll try most anything once. Not tonight, but sometime. Get me in the right mood and we'll see, sexy stud.\"\n\n\"Maybe I'll get you drunk first.\"\n\n\"Maybe you won't have to. In the meantime, we're wasting time. Come upstairs with me, big boy. We shouldn't be wasting a minute of our time alone.\" Grace led the way upstairs, waiting every few steps while I staggered along behind her. At the top she took my hand and we quickly went into my room and attacked each other. Grace was snugly against me, which while wonderful, was also causing me some balance problems. I clumsily fell onto the bed, bringing Grace with me. We shared a lot of kisses that we hadn't been able to share in weeks.\n\nI had Grace lay back while I undressed her. The feeling of my touch and my lips on her body had Grace moaning and squirming around. I unbuttoned her floral white blouse, under which was a plain white bra. The blouse and bra came off and I kissed and licked her breasts all over, including under her perfect mounds. \"You're such a sexy man\" she gasped as my tongue and lips found her right nipple and my fingers found her left one. I sucked and flicked the right with my mouth and I rolled the left a little roughly with my hand. Grace grunted as her fingers grabbed my hair, which had been getting kind of long. \"Switch, baby. Suck my left one now\" Grace said with a growl. She was burning hot for me. \n\n\"It's been too fucking long\" I said with hunger in my voice. \"Way too long.\" I then applied my mouth and teeth to her left nipple while the right, all wet from my saliva, rolled easily in my fingers. Grace's hips were rising off the bed, falling back down, then rising again. \n\n\"Got to get out of these pants\" she moaned as she undid her tan shorts and we both pushed them down over her round ass and her long legs. A simple pair of white brief style panties covered her pussy. \"Sorry, baby. I didn't expect to see you today, let alone be attacked by you, or I would have worn something more fun.\"\n\n\"Gracie, right now I don't care. I just want you! I want to taste you, eat you slow and then fast, and I want to fuck my hot, gorgeous, dirty girl. I might even let you suck on my cock if you behave yourself.\"\n\n\"Then I'd better be a good, dirty girl, because I've been missing the taste of your hot dick! But since we're so close, me first?\" she pleaded.\n\n\"I can't say no to you, my love.\" I tugged her panties down and there was her dark hair and her fantastic curves. I bit her lower tummy and Grace both giggled and moaned. Her hands gently pushed my head down to from where her lovely scent was rising. I rubbed my nose through her pubic hair and blew gently on her clit. \n\n\"Dammit, Henry, that's fucking incredible! You naughty tease! That makes me throb!\" Grace said, breathing hard. \"Do that again!\"\n\n\"Hmm want me to just tease you like that?\" I blew again on her exposed pearl.\n\n\"Ohhh God, baby that feels so good! You're such a nasty boy! My legs are shaking. Where do you keep finding these new things to do to me? Or do I really want to know?\"\n\n\"It just seemed like the thing to do, I promise. And I like playing with you. It's a lot of fun.\"\n\n\"For me too! But now I'm so hot, so you need to put out my fire. Put that tongue to work for me!\"\n\nI dived in, lapping my tongue along her slit, from the bottom to the top, from her asshole to her clit, up the left side and down the right so my tongue was making a long oval over her pussy. Grace was shaking as I kept licking, then I paused every so often to suck on her lips. She was moaning and cursing and her thighs tightened around my head before relaxing and then tightening again. \"You do that so well, baby\" she said as a small climax went through her body. I pushed her legs wide apart and attacked her pussy with my mouth, sucking hard then licking fast while my mouth stayed wrapped around her whole gash. \"Fuck me with your mouth, Nasty Boy! Don't fucking stop!\" Grace cried out as she came, thrusting her hips into my face as her legs flailed about. I kept licking her pussy, going easier on her as her orgasm subsided, then she twisted me over on my back just using her legs around my upper body. I found myself on my back before I realized it.\n\n\"Hey, cute trick. You've got some damn strong legs, sexy.\"\n\n\"Soccer helped, and you've been giving me a hell of a workout the last few months. When we've had time. Question for you, Nasty Boy: how long do you think we have before your parents get home?\" \n\nI thought to myself how long they had been gone, and also took into account that they liked to stop for coffee and dessert after a movie, almost every time. \"We still have about two hours. Why?\"\n\n\"Because that means I have time to devour you, every drop of you, then get you hard all over again so you can fuck me. Isn't it great to be young?\" Grace laughed and I laughed with her. It was her turn to get me out of my pants and shorts after easing my shoes off. I was still self conscious, even with Grace, about my missing toes. But she put me at ease by kissing me starting at my feet, even sucking on my toes.\"\n\n\"Gracie\" I moaned, wanting to dissuade her.\n\n\"Don't say anything, baby. It's my turn to do things to you. Let me play the way I want.\" I gave in, and I let her do as she pleased, and I have to admit, it felt great. Her tongue licked from my heel to my toes and back. Then she licked up the back of my leg, along my tendon to the back of my knee and I twitched all over in pleasure. This was just wonderful, and I knew next time I'd have to do the same for her. With pleasure.\n\n\"Honey, you're amazing\" I gasped as she turned me back again on my stomach. Then she licked up the back of my thigh, her tongue leaving a thin, moist trail up to my cheeks. When she bit me there, gently of course, I nearly leaped out of my skin. \n\n\"Are you enjoying this, Nasty Boy? You taste so sweet.\"\n\n\"Are you kidding? I've never felt anything like this, Dirty Girl.\" She then upped the ante by reaching under me and grasping my dick, teasing around the rim of the crown with a single nail. My ass bounced up in the air on its own, then I fell back down on the bed with a series of whimpers. \n\n\"I think I found your sensitive spot. Whatever I do, don't you cum yet.\"\n\nI couldn't answer her; I could only react. Grace pulled my ass up so my cock was dangling down. She pushed my legs apart and then, while her hand slid up and down along my dick, I felt her tongue probe the tight ring of my anus. \n\n\"Ohmyfuckinggod!\" I shouted as Grace kept toying with me. Her tongue was stiff and she kept rimming me while her right hand was stroking my swollen dick. I was moaning and shaking, doing my very best to enjoy what she was doing while trying desperately not to cum. I was fucking her hand and she darted her tongue in and out while I moaned uncontrollably. \"Gracie, I'm getting close. I can't hold off much longer!\"\n\nShe moved under me and sucked on the head of my cock, just the head and I came as I fucked her mouth. Cum went down her throat and I felt it overflow from her lips and down the sides of her face. Gracie made muffled sounds but made no attempt to push me off her. My cock twitched a last time or two, leaking the last few strands of my load and I crawled off my love and twisted onto my back. I helped Grace come over to me as she wiped the remains of my orgasm off her face and licked it off her hand with a very sexy smile. \"You still taste great, baby. I could swallow you at least once a day.\"\n\n\"And I could let you do that to me twice a day! That was fucking incredible, Gracie! You don't know how hard I had to try to keep from cumming. You really are my Dirty Girl. And I love you more than I could ever tell you.\"\n\nGrace crawled into my arms and said \"II love you too, baby. My Nasty Boy. We're made for each other.\"\n\n\"We really are. Honey, thank you for coming over today. Not because of this...well, partly because of this\" I said with a lewd smile. \"But mostly because I needed you so much. Monday I'm going to call my doctor and get the names of a couple of therapists. I need it. Not just for driving, but to get my balance back. My inner balance.\"\n\n\"The most important step is knowing you need the help, baby. The rest comes with time.\" She snuggled closer, her face in the crook of my neck and shoulder. Grace kissed my cheek and my neck and her hair tickled my face. I loved that feeling.\n\nI was thinking about how I wished we could do something exciting besides the obvious. Something we could look forward to before school since we had so much time, something good. Then an idea hit me. \"Honey, you know we're going to get a little bored here over the next few months with everyone away. Everyone we really enjoy being with. How would you like to take a trip with me for a few weeks? My treat.\"\n\n\"A few weeks? That's a long trip, Henry. Where were you thinking of taking me?\"\n\n\"I figured you could get your passport and we could go to London and Paris, each for ten days. Or a week in each and then a week in either Amsterdam or West Berlin. We could stay in youth hostels so it won't be expensive. It's bare bones rooms, communal bathrooms and showers, but they do have some private rooms for two, most are very clean and safe.\" I looked at her awaiting her reaction.\n\n\"Henry, I can't afford anything like that. Airfare, food, expenses...I don't have that kind of money.\"",
        "\"I said it's my treat, Gracie. Everything. Bring a little spending money. But I'll cover the rest. We'll have a great time. See things we wouldn't get to see for years. I've been to Paris and London, and they're great cities. I even speak some French, enough to get by.\"\n\nThen Grace surprised me by breaking into fluent, conversational French, better than I could do. But we were able to talk back and forth fairly well. \"Let's do it, Gracie. We could go the beginning of November, before it gets too cold and I should be fit to go and walk all around by then.\"\n\nShe thought about it, weighing the pros and cons. How her mother would react. Hell, how my own parents would react. But I didn't think they'd mind (too much). She came to a decision. \"Henry, if you're really sure, if you don't mind paying....I guess I'm in. Let's go, First of November. I held her and kissed her, squeezing her hard. \"Henry, let me breathe! You're crushing my tits!\" We both laughed and I let her go, a little. \n\n\"Gracie, we will have such a great time. So many young people travel around Europe by train and backpacking. I'll take care of everything, from your backpack to extra clothing you'll need, airfare, room, food.\" We were sitting facing each other on my bed, our legs open around each other. We kissed lovingly, letting our hands roam a little as we got aroused for each other again. My cock was certainly getting hard and her dark nipples were doing the same. Soon we shifted around so still sitting close like that, legs akimbo, Grace leaned backwards a little and I pushed the head of my cock to the entrance to her pussy, all moist and swollen with desire. I slid in just about halfway, then I grabbed her butt and I helped her slide closer to me. As she got closer, the rest of my cock filled her pussy and we both moaned as we joined together. \"Gracie, you always give me just what I need. My perfect woman.\"\n\n\"This does feel pretty great, doesn't it, baby?\" Then she started talking to me in French, romantic talk, and I responded the same way. It was so sensuous, beautiful. We kissed every so often and our hands kept moving over each other as our motions became more intense and a light sweat broke out over our bodies. We were grunting and grinding, saying loving things in French only. Suddenly our bodies both became flush and our muscles tightened, my cock twitched inside her pussy, and Gracie came, squeezing my cock, and then I came, a warm stream of my cum gushing to her cervix and leaking out a little around our joined sex. We sat there breathing hard, looking in each others eyes, arms around each others' necks as we spoke soft, sweet words of love to each other. \"Mon cheri\" I whispered.\n\n\"Mon ami\" Grace whispered back. We stayed like that, not the most comfortable position, but it was very intimate. We lost track of time and then we heard my parents coming in the front door and calling out to us.\n\n\"Shit!\" I said as low as I could. We jumped off the bed and I called out \"Hey, we're up here! Uh, can you give us a few minutes?\"\n\nMy parents had to know what was going on while they were out, but they must have expected us to be done and to have gotten ourselves together before they came home. My dad called up \"Ok... please come down when you're 'ready'.\"\n\nWe were giggling together as we dressed. It was a little funny, our situation, but our laughs were really more from being nervous. We had never been so in their faces about the nature of our relationship before. When we were cleaned up (as best we could without a shower) and dressed again, we sheepishly made our way downstairs to the living room. My mom just gave us a withering look, every bit as disapproving as Edina could have done. Dad was clearly uncomfortable, and Grace and I were beet red with embarrassment. My dad said \"I know you're both adults now, and if you were in New York, you'd both be free to do as you please together. But this is still our house, Henry. You should have been a little more discreet and respectful and you should be thinking about how hard this still can be for your mother and I. Grace, the same applies to you. You're family as far as we're concerned. But family respects each other.\"\n\n\"I'm sorry, Mr. Douglas, Mrs. Douglas.\" Grace said with obvious sincerity. \n\n\"Dad, it's my fault. It's just a weird situation, you know? We love each other very much.\"\n\nMy mom spoke then. \"You think the two of you invented love? Not just as a feeling, but as a behavior? We were young once too, we got married at 21. We just ask for a little respect in return for a little tolerance.\" \n\nWe apologized again, then we went upstairs, separately, to get cleaned up for bed time. Grace didn't have any sleepwear there, so I gave her one of my long shirts and my mother gave her an old robe. After cleaning and changing, we all spent about an hour watching tv, some drama and the news, then we went to go to bed, with Grace bedding down in one of our guest rooms.\n\nAbout 2:20 in the morning, I felt this nice, warm, female body crawling into bed with me. Assuming it wasn't my mother (yuck!), I turned around and my Gracie kissed me softly as we held each other. \"Hey you, this is a pleasant surprise\" I said as quietly as I could.\n\n\"I just couldn't keep away all night, knowing you were just ten feet away. I had to get a little of your sweet loving.\"\n\n\"You can have all you want of that, honey. At least until about 6AM. My dad's alarm goes off around 6:30, so you have to get out before then. But for now, you can stay right here.\"\n\nShe snuggled next to me sleepily and we cuddled in the dark. And even though it was the middle of the night and we were tired, our natural instincts took over and soon we were just touching each other, in effect giving each other handjobs. It was much quieter that way than risking the sounds of my bed creaking and waking my parents. We were kissing passionately while our hands brought each other to the brink, then we backed down, edging each other a few times until we both came, with Grace guiding my cumshot to her tits, spraying her brown globes with my pearly white semen. We snuggled close together, my cum sticking to our bodies as we settled down. I was so deeply in love with this amazing woman. Somewhere in the back of my mind a voice was telling me She's the One, as Bruce Springsteen's song said. She's the One.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nOver the next few weeks, life continued to get better. We both informed our parents of our desire to spend a few weeks traveling in Europe. While neither Edina nor my parents were completely thrilled with the idea, they also realized how far our relationship had progressed, that we weren't just loving together, we were very much in love with each other. We weren't asking for money; I could easily afford to pay our way. They also understood how we would be bored just sitting around until the holidays and then mid-January when we went off to school, and how being bored is bad news for teenagers, no matter how smart they are.\n\nI called my doctor that Monday and got recommendations for a therapist. After meeting three of them, I settled on a nice woman, Dr. Seeger, and I went to see her twice a week. After a few weeks of talking and realizing a few very personal things about myself, she was able to give me some ideas about how to try to drive again. The first time, I still shook like a leaf in a wind storm. The second time (with my father next to me) I actually was able to drive. I was extra careful, taking longer than usual at stop signs and traffic lights, causing a couple of other drivers to honk their horns at me. My dad told me to ignore them and just take my time. It was a little like when he taught me to drive all over again. When we got home, it felt like a small victory and I hugged both him and my mom. After one more trip out with my dad, I felt I was ready to drive on my own to go and see Grace and take her out. The two things I couldn't do right away was drive on the highway, which meant not going to visit Darrell or Evelyn up at the U, and I couldn't drive home by the intersection where I had my accident. That was going to take some time.\n\nWhen Grace and I went on our next, first date, it was to go for pizza and a movie, the date we missed. Grace even paid for dinner like she had promised. I tried to tell her it wasn't necessary, that she had done so much for me the last few months, but she wouldn't let me argue with her. We went to a movie after, and then we made love in my new car at Lookout Point. All in all, it was a pretty great date. \n\nGrace's passport came in mid-October. Aside from some shopping, that was the last major issue. We were going to Europe in two weeks. We had our plane tickets, we looked up in travel guides the locations and ratings for hostels in London, Paris and Amsterdam and we planned all the things we wanted to see in each city. We worked out a rough budget, and I went to the bank and got three thousand dollars in traveler's cheques (\"Don't Leave Home Without Them!\" as Karl Malden used to say), half in my name and half in Grace's. And as a safety net, my dad helped me get a credit card with a ten thousand dollar limit, based on the money I had with the bank. In 1979, that was way more than we would need. We were taking no chances.\n\nEleven days before we left it was Grace's 19th birthday. \"Henry, don't make a big deal about it\" she warned me. \"You're already paying for an expensive trip for us. I told you weeks ago, buy me a sweater, something warm to wear. Don't do something ridiculous or I just might have to kill you.\" She was pretty adamant.\n\n\"Ok, I'll take it easy.\" So I wasn't going to buy her jewelry, just something nice, warm and stylish. But she didn't say anything about where we could go to celebrate. \n\nWe spent the day together, doing simple and fun things. We wandered around Charleston's historic district, checking out the area's distinctive architecture with the beautiful old homes and stores. We did a little shopping, nothing expensive. We went for a light lunch in a pub and had a beer with lunch while a couple of musicians played live music. And we had time to go to her house and make love before we had to be at my home to have dinner with everyone, my family, including Evelyn, and hers, Alton and Gus and Alton's girlfriend, Maddy. \n\nWhile we were getting dressed in her room, Grace said \"Thank you Henry. This has been a perfect day. You didn't make a big deal, but you still made today special. I love you.\"\n\n\"I love you too. And I had just as much fun as you did. I still have a gift for you, back home, and it's just something warm for you. But tomorrow night, we're going out for dinner, just you and me. So you have to get dressed for it. Nicely dressed.\"\n\n\"Baby, I told you not to make a thing out of my birthday. You're going crazy.\"\n\n\"I'm just showing my love for the woman who changed my life and helped me through one of the worst times I could have imagined. So let me appreciate you. You're the most incredible woman, Gracie. I remember you staying at the hospital for four days straight while I was out cold. We show our love for each other any way we can. Don't worry, after this trip, I'll cut it way back, except for something nice for Christmas. I'll have the vast majority of my money and it will stay in the bank. This birthday just feels like something very special we should be celebrating in style.\"\n\n\"Henry, what am I going to do with you?\" Grace asked, not actually frustrated. She actually liked me making a big deal over her. Her biggest worry was that she couldn't do the same for me, but I didn't care about that. She made me feel special in a hundred intangible ways and I told her so.\n\nDinner at my parents was great. Edina outdid herself making a glazed ham and all the fixings. After dinner, before the cake, we all gave her gifts, almost all of which were clothes, especially warm sweaters and cute socks, my sister got her a really nice pair of slacks to go out at night and my parents got her a very warm, expensive robe and slippers, essential for use in a communal bathroom. Gus and Alton got her a beautiful, soft cashmere hot pink sweater, which she loved. Edina gave her two charms for her bracelet; they'd been doing that for 10 years. It was something very special between them. And I gave her a coat, grey wool, soft and fine, with oversized black buttons, that flared out at the hips and a pair of black leather lined gloves. She'd look very stylish walking around the streets of Paris in that. \n\nLater, after cake had been served and Evelyn, Maddy and I cleaned up (Grace was the guest of honor), we had a few minutes alone out back of my house, before she had to go home. We were going to celebrate the next night. We kissed a few times as we cuddled in the cool of the night. \"I loved that coat, Henry. You have pretty good taste in clothing....for a guy\" she teased.\n\n\"Yeah, I do all right. Mom's been letting me buy most of my own clothes for a few years. I like nice things. So I think I have a good eye for fashion.\"\n\n\"Well, I approve. Everyone got me such lovely things. And most important, I'm so happy at the way our families get along. Alton I was never worried about. Gus, though...I'm just glad to see he's come around. He's a little hard about White people.\"\n\n\"So I've noticed. But, after that tense beginning, he's been nothing but nice to me. I guess he notices how much I love and adore his little sister.\" We kissed a few quick pecks. She really had to get going with her family. \"Remember, get dressed very nice tomorrow night. We have 7:30 reservations, so I'm picking you up at 7 sharp. And we're not coming home until the next morning, maybe afternoon. So if you need a few things with you...\"\n\n\"I'll be fine, baby. You're not going to tell me where we're going, are you? Give a girl a little hint?\"\n\n\"Not a chance. It's all a surprise.\"\n\n\"You're such a Nasty Boy. And I love it. I love you, Henry.\"\n\n\"I love you too, Gracie. My Dirty Girl.\" We embraced in a big, long kiss, until Evelyn came looking for us. She cleared her throat and gave us her million dollar smile. \"Your family is waiting, Grace. Happy Birthday again, sweetie.\" They kissed cheeks.\n\n\"Thanks for coming all the way down for me, Evelyn. I love you, I love your whole family. One member more than the others.\" Grace smiled at me.\n\n\"Lord, I hope so!\" Ev said with a chuckle. \"Come on, girl, they're getting impatient.\"\n\nWe kissed one last time, and she left for the night. I went back in the house and helped my family straighten up everything. Ev had afternoon classes the next day, so she was spending the night. We all watched something on the tube for a while, then we went to bed. Ev and I went into her room to talk. We hadn't done much of that in quite a while.\n\nI asked her \"So, what's up with you, Ev? Any guys recently? More than one?\" I teased her.\n\n\"Nope, not a one lately. My life is so boring. I haven't even had a date since I broke up with Keith. I feel like I lost some of my mojo\" Ev said with a wry laugh. \"I haven't gone more than two weeks without a date or a boyfriend since I was 17. In the meantime, my little brother has an awesome girlfriend he's probably screwing every other day!\"\n\n\"Ev! I'm not going there with you!\"\n\n\"Oh, why the hell not? We should be able to be open about these things. I have friends who are guys, but I've always felt closer to you than to any of them. And so many of my girlfriends just won't or can't talk about sex. I'm not talking about salacious gossip; I mean frank discussions. Sometimes I feel like I don't know what I'm missing out on.\"\n\n\"Ev, I don't know if I'm the one to help you with that. It's just so personal. I don't talk about it with my friends, not a lot anyway. I did when I was just screwing around but when it comes to Grace, I don't tell anyone anything. I'd feel like I was betraying her.\"\n\n\"I'm kind of glad to hear that, Henry. It shows you respect her a lot. I wasn't asking you for details. I just wanted to know if things with you and Grace were...satisfying.\"\n\n\"Very. We're both very happy there, sis. Can we just leave it there?\"\n\n\"Yes we can. I just wish I had someone I could confide in about the things I think about. So, I can't believe you two are traveling to Europe...\" and like that the conversation changed to more typical sibling talk. We stayed up about an hour and a half talking. I knew she needed to talk about more personal matters, and I hated shutting her out, but I just couldn't go there with her.\n\nThe next day I took a shower on the late side, around 4, and I shaved close and careful. At 6 I got dressed in my best suit, a grey conservative pinstripe with a brand new shirt and a silk blue and red tie and black loafers with a tassel. The only jewelry I wore was the Rolex my parents gave me when I turned 18. If I give the impression I was a bit of a clothes horse, it's because I was. I still am. I like nice clothes and I think dressing for success is important. Even my casual clothes are nice. If a t-shirt gets even a small hole, it becomes a cleaning rag. I get this from my mom. If she saw me wearing anything even a little bit ratty looking, she'd have had a fit.\n\nMy parents were sitting at dinner when I came downstairs and mom especially made a fuss over my appearance. \"You look like you're going to sweep a beautiful young lady off her feet tonight. I can't believe how handsome my son is.\" She hugged me and kissed my cheek, then wiped a trace of her lipstick off with a napkin. Dad of course made sure I had enough money with me. They told me to have a good time and they'd see me the next day. I had a small overnight bag in the car already, but they knew I wasn't coming home that night.\n\nI took Edina home, who also made a deal over how nice I looked for her daughter. \"You're such a handsome man, Henry. Most of all, I've seen how much you and Grace love each other. If it wasn't the case, I'd be furious with you, taking her to all those countries. You treat my baby like gold. She told me last night not to expect her home until tomorrow, and that still rubs me wrong. But she can choose her own life, and I know you're not just using her. So just keep treating her right, Henry. And no drinking and driving!\"\n\n\"I'll be very careful; you have my word, Edina. Last thing I want is to end up in the hospital again. And you know I would never do anything to hurt Grace, physically or emotionally.\"\n\nWe went into her house and of course, Grace wasn't quite ready yet. She never kept me waiting long, but she usually kept me waiting. She called for her mom to help her with her hair so I just sat on the couch and waited. It didn't take long, and the results were phenomenal. I don't know where she got it, but Grace wore a red cocktail dress, spaghetti straps, that fit her like a sheath. She wore matching pumps with a thin, 3 inch heel. And she had a set of faux pearls on her next that made her brown skin glow. The big change, though, was her hair. It was like the night of her prom, curled and reddish tinted, but it was fluffed out all around. She looked 25 instead of 19 and it brought attention right to her gorgeous face. I felt like another thunderbolt shocked my system. \n\n\"Grace, I don't know what to say. You belong on the cover of a fashion magazine. I mean, you're always beautiful, but this is unbelievable. I feel like I'm going out with Miss America. Not Miss South Carolina. I mean the winner.\"\n\nShe smiled kind of shyly, but also with great satisfaction. She loved having that effect on me. She didn't care what others thought, only me. \"You look incredibly handsome too, Henry. And I love that suit. You look like an executive at some big company. I helped her on with the new coat I bought her, which was a perfect length for her dress. She grabbed a clutch and an overnight bag, kissed Edina and we were off. ",
        "When we got around the corner, I had to pull over and kiss her the way I needed to kiss her. It was a long, passionate, loving kiss. \"I wasn't exaggerating, Gracie. You are breathtaking. You're going to give every man in the restaurant a heart attack tonight!\"\n\nI was about to drive on when Grace had me wait. \"I deliberately didn't put lipstick on so you could kiss me without ruining my lips.\" She applied a soft red that looked great on her and we headed to a prime steakhouse in one of the old historic neighborhoods our city is so famous for. When we pulled up to the valet, Grace said \"Henry, this is too expensive. You shouldn't be doing this. I've never been to a restaurant like this before.\" She looked nervous, like she didn't belong.\n\n\"Gracie, it's a restaurant. More expensive than most, but it's just a restaurant. If you have money, they will treat you right. And you look like you're going to be the classiest woman in here tonight. You are devastatingly gorgeous.\"\n\n\"Henry, I'm Black. The only other Black people in here are going to be the help.\"\n\n\"Then that's a shame on them. People have to get used to the fact that things are changing. I don't care if people have a problem with us or not. It's my girlfriends birthday and I'm treating her to the best meal either of us have ever had. Now I want a great steak tonight. Are you joining me?\" \n\nShe smiled, loving my insistence and confidence. \"I guess I am, Naughty Boy.\" The valet helped Grace out of the car and we headed inside. I had been to this restaurant before with my parents for a few special occasions. Oak wood chairs and pure white tablecloths, red plush carpeting. Very fancy. I helped Grace with her coat and checked it, then went to the maitre'd station. I saw him give us a glance of snobby disapproval, but after I slipped him ten bucks he found our reservation and he sat us right away at a good table like I had specified. He even held Grace's chair for her and she sat down as elegantly as any of these old money snobs, brushing the bottom of her dress under her so it wouldn't wrinkle. My girl had all sorts of class. \n\nI ordered us a bottle of red wine before we even looked at the menu, a suggestion for which I got from my dad. Grace subtly looked around and she was right, she was just about the only Black patron aside from a family of four. Others kept glancing at us, but no one said anything, not to us, anyway. The wine came, the waiter poured our glasses and then left us alone for a few minutes. I toasted Grace. \"To the woman I love more than anything in the world. You're beautiful, graceful, caring, loving and every other good thing I can or can't think of right now. And I'm the luckiest man there is to be with you. My darling Grace. I love you with all my soul.\"\n\nHer eyes sparkled with love and a touch of mischief, a hint as to what was in store later. \"I love you too, my sweet Henry. Thank you.\" We drank a little, then studied the menus. \"I don't know what to order here\" she said to me discreetly. I knew she liked steak so I asked if I should just order for her. I could see her smile pleasantly at the idea and she said yes. So I took care of ordering our dinners and we just settled into a nice, quiet conversation. \n\nAs we talked, I could see men mostly checking her out like men do with particularly beautiful women. Grace was drawing a lot of attention, especially from a lot of much older men who may have disapproved of a mixed race couple, but couldn't help being drawn by such a luscious lady. Then a couple, friends of my parents, saw me and they came over on their way to being seated at their table. I introduced them to Grace as my girlfriend. I knew they were from my mother's background, very old Southern stock. I was sure the wife was going to be calling my mother the next day. \n\nOur food came and everything was excellent as I had expected. The steaks were done just right and Grace dug in enthusiastically as I did. \"This is amazing, Henry!\" she said softly. \"I never knew beef could taste like this.\"\n\n\"It's great, isn't it? They age the meat in these dry rooms for about 28 days. Then they trim away the mold that forms, which draws out the flavor and...\"\n\n\"Wait, the meat gets moldy?!?\" Grace whispered with an incredulous look on her face.\n\n\"Don't worry, it's not what you think. It's a good mold. It gives the meat a nutty flavor and draws out some moisture so the meat gets a concentrated texture. It's amazing, isn't it?\"\n\n\"I guess so. But moldy meat...\"\n\nI laughed lightly at her, not in a mean or condescending way. \"It's a chemical process. It's been done for ages. And there's no mold on the meat; it's all trimmed away. You're enjoying it, aren't you?\"\n\n\"Yes. It just takes some getting used to, the idea of it. This is a wonderful dinner, Henry. With a wonderful boyfriend. Devilishly handsome, too.\"\n\nWe finished and I asked her if she wanted dessert. Softly she answered, so no one else could hear \"The only dessert I want tastes like you, baby. You're sweeter than anything they could serve here. Hotter, too.\" Grace had that look to her, slightly predatory, and full of lust. That was all the convincing I needed. I got the check and paid with a nice tip. We got her coat, then the car, and we drove towards the waterfront area. \n\n\"So where are you taking me, Nasty Boy? I assume we're not heading for Point Lookout\" she giggled in a very enticing way.\n\n\"No, we're going to a Bed and Breakfast for the night. Right on the waterfront, with a view of the harbor.\" I looked sideways at her and gave her a sweet, and I hoped, sexy smile.\n\n\"Why Henry Douglas, you're just full of surprises. But I have a surprise of my own for you. Just wait until I get you alone.\"\n\n\"Can't wait, my Dirty Girl. And I won't have to; we're almost there.\"\n\nThree minutes later I pulled into the parking lot of a converted house, very quaint, right on the north bank of the Ashley River. I grabbed our bags and it just took a few minutes to check in. It wasn't all that long ago that an unmarried couple, let alone an interracial couple, wouldn't be allowed to check into a hotel or inn. The woman at the desk didn't even give it a second thought. She was polite and friendly, an attractive woman in her mid-30s, and she checked us in with a smile and we told her we could find the room on the third floor ourselves. I even gave her the tip I would have given had she escorted us upstairs. \n\nWe got to our room and we both were very impressed. The furnishings were comfortable and cozy. The bed was a four poster, there was a small table with two chairs by one window and the other window overlooked the harbor, beautiful in the dark with ship and land lights scattered around. And there was a big fireplace with wood kindling and logs to make a fire. \n\n\"Very nice, baby\" Grace said softly. \"Very nice indeed.\" We walked over to the large window and stared out over the harbor. \"Henry, this has been an amazing night already. And we're just getting started.\"\n\nWe turned to each other and kissed a long, loving kiss that hinted at what was still to come. \"Anything for you honey. You saved me, you know. You, your mom and my family. I couldn't have bounced back without all of you. I owe you everything.\"\n\n\"Don't be silly, Henry\" Grace said as she undid my tie and slowly pulled it through my collar. \"I'm in love with you. How could I have done anything different? Wouldn't you have done all those things for me if our situations had been reversed?\"\n\n\"Of course. I'm in love with you too. I would have moved heaven and earth for you.\"\n\n\"So why would it be any different with me? You don't owe me anything. But I'm having the best time tonight. I even have one more present to unwrap.\" She started to unbutton my shirt, slowly, teasing, very playful. I started to unzip her dress but Grace stopped me. \"This is my birthday, right? Then I get to do what I want, my way. Now let's get this jacket off you.... that's better. I'm going to go in the bathroom for a little while. How about you make us a nice fire?\"\n\n\"I've made my share of fires in my life. I think I can handle that.\" We kissed again and then Grace disappeared into the bathroom with her bag. I got down, painfully, to my knee and took a long match from a container near the fireplace and lit some kindling, tending it until it all caught. I kept feeding more of the small pieces of wood into the budding flames and when I had a consistent small fire going, I added larger pieces from the log pile. Soon I had a roaring fire going and I put the grating in front of the flames. I had been so busy building the fire I didn't notice Grace had returned and was standing a couple of feet behind me.\n\nI got up with a little difficulty, then turned around and saw her there. For the second time that night, Grace took my breath away. She still had the red pumps on but the dress was gone. In its place she wore a pair of red, lace panties and a matching mini robe. Her legs were encased in thigh high red lace stockings, with the lace pattern in the nylon going up her shapely legs. Her hair was up in a small pile, exposing her elegant neck. \"Oh my God\" I said softly. \"Every time I think you can't get more beautiful, you prove me wrong.\"\n\nGrace glanced over my shoulder and said \"Looks like you've got a hell of a fire going there. I also have a hell of a fire going on here\" she said as she touched the front of her panties. \"Think you can do anything about it, stud? My Nasty Boy.\"\n\nI stepped into her arms and we shared one of our big, sexy kisses. Then another and another....and another. \"You are such a seductress. You look so sophisticated. Like you're ten years older, so experienced in men. All woman. My Dirty Girl.\"\n\n\"It's you, baby. You give me so much confidence. It's a huge turn on. I feel like I'm always hot when I'm around you. And I want to do things. Wicked things. Wild things. Only with you. My Nasty Boy.\"\n\nWe embraced again, more kisses were shared, as Grace opened my slacks and pushed them down my hips and over my legs. I kept my prosthetic toes on; I had better balance and they made me less insecure. \"Let's go by the fire, Gracie. It would be a shame to waste it.\" \n\nI took her hand and she followed me silently until we were a comfortable distance from the blazing fire. No other lights were on in the room; just the glow of a few lights from the harbor window. 90% of the illumination was from the fire which threw shadows all over us both. We stood facing each other, both of us barely controlled in our excitement. Then Grace slid off the mini robe and she was only in her panties, stockings and heels. I shed my boxers so my erect prick was almost touching her body. I squeezed the head and I small drop of my precum came to the tip and Grace licked her lips like she was starving. \"Could you put on some music, baby? I want to dance with you. Something nice and slow.\"\n\nI went over to the nightstand by the bed, where there was a clock radio. Not exactly great sound, but it would do. I found a soft jazz station and returned to Grace. \"I hope I can do this, honey. I don't know if I have the balance yet.\"\n\n\"The way we're going to dance, you don't need to worry. Just hold onto me.\"\n\nWe held each other close. Her head was turned under my throat and her big hair was so soft on my cheek and chest. We just swayed gently, moving along with the music while the fire crackled in the background. I was naked as the day I was born, and Grace wasn't wearing much more. The fire was warm, even from a bit of a distance, not that we needed the heat. We were producing plenty of our own. \n\nAfter about ten minutes Grace whispered \"Henry, take me to the rug by the fire. Make love to me right there.\"\n\n\"Who am I to argue with such a lovely, loving lady?\" We walked over to the fireside and sunk slowly to the dark, plush rug. Grace was on her back and we were just looking into each others eyes. The fire was casting flickering shadows across her face and body. I stroked her cheek and along the side of her neck and shoulder. Grace turned her head and kissed my hand which sent a sharp wave of desire through me. \n\n\"Come to me, Henry. I want the rest of my birthday present.\" I leaned down, kissed her tentatively a couple of times, then our bodies were flush against each other as we consumed each other with huge kisses. Our legs were rubbing on each other; the lacy nylon sent shivers all through me, tickling my legs. Grace's soft breasts were massaging my chest and my hands were going up and down her back as her hands lightly gripped my lower cheeks.\n\nAs opposed to many of our times together, when we'd talk to each other in ways varying from a little naughty to downright dirty, we were strictly communicating with our eyes, our touches and our kisses. And we were speaking volumes. Our desires were perfectly in tune to each other. Our kisses were hungry and our touches were getting frantic. Grace took my cock in her hand without any prompting and she brought it right to her smoldering pussy. Grace then said the only word either of us spoke that entire time: \"Please.\" I was coated in sweat from both the heat of the fire and the heat of our desire. I nodded my head and slowly pushed my way into her welcoming pussy. I took it as slow as I could, causing Grace to raise her hips, bringing my cock into her pleasure center.\n\nWe both cried out softly from the incredible feelings of warmth, of snugness, moisture and of course, love. She grabbed my face and we kissed as passionately as we ever had before. I could feel her pussy grasp and release as Grace came, then she wrapped her nylon covered legs around my hips and held me tight. Still we said nothing, just shared grunts and groans and looks of love and lust. Our bodies were grinding hard and my balls were moving lightly on her ass cheeks. \n\nThe music still played, the fire gradually burned its way down to hot embers and Grace and I were fixed on each other only. I rolled onto my back and she was straddling me. My cock slipped out of her pussy but she pulled me back in within just a couple of seconds. She ground down hard, pressing her clit to my pelvis and I used my thumb to give her more pressure. Grace arched her back, her thighs tightened on my hips as she cried out in orgasm. I made my cock twitch inside her, the way she loved so much, and another climax tore through her mind and body. Beads of sweat dripped from her brow onto my face as I grasped her ass in my hands, pulled her body down hard, and I came, flooding her soft, sweet pussy with my thick and creamy cum. I grunted louder, my eyes went wide open as one of the most powerful climaxes burst through my body and mind. My cock twitched again and Grace fell forward to my chest, exhausted for the moment.\n\nFor two young people in good physical shape, we were both breathing very hard. My heart was pounding and I could feel hers doing the same, right through her chest and my own. My right hand found her left and our fingers tangled together as we both came down from our mutual, incredible high. \n\nWe just laid there almost motionless except for the rising and falling of our chests. Within a minute we got control of ourselves and then our lips sought each others. We exchanged the most loving kisses as a feeling of bliss and peace overcame us both.\n\n\"Henry, my darling Henry, that was the best. Our best loving yet\" Grace moaned into my chest.\n\n\"Agreed. my love. That was perfect. The only problem is how are we ever going to top it?\" We both giggled like very happy lovers. \n\n\"I guess we're going to keep trying. It gives us something to aspire to.\" More giggles as we disentangled ourselves, but stayed there by the slowly dying fire. \"I love you so much, my sweet, sexy man. This has been the best birthday of my life. You made it perfect in every way.\"\n\n\"After all you've done for me, this has been not that much. You gave up five months of your life. More than just that. I was in love with you before the accident. Not many 18 year olds could handle what we've been through. I had to. You could have walked away.\"\n\nGrace sat up straight, the last of the fire shining on the side of her face. \"You really think I could have walked away? Do you really believe that, Henry? Is that what you think about me?\" she asked with more than a touch of anger.\n\n\"No, Gracie. I'm sorry, that didn't come out right. I wish I knew how to say what I'm thinking. I'm trying to say you weren't obligated to stay; you did it because you wanted to. Shit, I'm getting this all wrong. Honey, I will always appreciate you as well as love you. Who knows what the future will bring. We could get married down the road or we could go our separate ways. Either way, you're always going to be in my heart. I think that's why making love with you comes so easily. A part of you lives right here\" I said pointing to my chest, \"and you always will be there. No matter what.\"\n\nHer expression softened and Grace said \"Damn you, Henry. Just when I was about to get so angry with you, you said the sweetest thing I've ever heard.\" A few tears were rolling down her cheeks, the liquid making her eyes look twice as large as they were. \"It's so easy to love you, baby. I'm going to use the bathroom, get out of these stockings, and we're going to cuddle a while and see what else comes to mind. I'm sure something will come up. And Henry, there was no way in hell I was walking away from you.\" She got up and once again I was treated to the sight of her lovely ass moving from side to side as she went to the bathroom. \n\nThere was just one problem. I was so fixated on what Grace had been saying, I didn't realize how urgently I had to pee. And I do mean urgently. I went to the closed door and knocked. \"Gracie? Are you almost done in there?\"\n\n\"I just need a couple of minutes, Henry.\"\n\n\"Uh, that's not going to work for me.\" I was doing the dance, crossing my legs, desperate to get in there. \"I'm coming in!\"\n\n\"NO! Don't you dare, Henry!\"\n\nI went in anyway and Grace was on the toilet, mid-pee. I heard the tinkle of her urine hitting the water and it was making my situation even worse. \"GET OUT!\" she screamed. \n\n\"Too late\" I moaned as I peed in the sink. It was that or I was going to pee on the floor or the bathtub. \n\n\"Henry, that's disgusting!\" she shouted at me. \"What the fuck?!\"\n\n\"I had no choice, honey\" I said with the sound of relief filling my voice. \"If I didn't do this, the alternatives would have been worse.\n\n\"Well, all the mysteries are gone from this relationship now\" Grace grumbled as she wiped and flushed. \"Just rinse out the sink and wash those hands. And rinse it well!\"\n\n\"Yes, ma'am!\" I ran water down the sink, washed thoroughly and rinsed the sink some more.\n\n\"I can't believe I have to use this sink now. Gross\" grace muttered as I went back in the bedroom. \n\nI got into bed and then a couple of minutes later Grace joined me. \"Henry....\" and then we both burst into laughter. It was absurdly funny to us. We kept laughing for at least three or four minutes, just howling.\n\n\"Well, there are no more secrets between us\" I said, trying to get over the hysterics.\n\n\"That's the kind of thing that can take all the romance out of a relationship\" she said, also trying to get a hold of herself.\n\n\"We're never going to let that happen, are we?\" I asked, completely serious.\n\nGrace settled down as well. \"No, baby, we're not. You're my Nasty Boy. Just the way I love you.\"\n\n\"My Dirty Girl. So beautiful. And so wonderfully playful. Do you still have enough energy to play tonight?\"\n\n\"I always have the energy to play with you. We're still way behind from when you were unavailable. In fact, I've been thinking....\"\n\n\"Oh, what's my Dirty Girl been thinking about?\"\n\n\"I've been thinking about if we should try anal. You feel like trying it? Make tonight another level of special?\"\n\n\"I'm willing to try if you are. I've got the easy job. You've got the tougher role. So are you certain? If we start and you need to stop, just tell me. I'll do whatever you need.\" I was hoping she wouldn't back out, but if she did, I was ready to accept that. Always respect the woman's wishes, dad always told me. No means no. He taught me that long before it became a cause.",
        "\"I know you will, my sweet baby. There aren't many men I would trust to do this with me. Actually, you're the only one. I've never wanted to do this with anyone, not even in my fantasies with the gorgeous men I have on my walls. It's never occurred to me. But I want to try to do it with you. And I'd be willing to try almost anything with you. You make me feel so...sexual. I guess it's the incredible blend of love and lust I feel for you.\"\n\n\"Honey, you make me want to just melt inside. I trust you too, completely. I'd try almost anything with you. I think when we get to New York, we're going to be experimenting, a lot. But just between us. No more other partners.\"\n\n\"I couldn't agree more, my sweet Nasty Boy. There's plenty we can do just by ourselves. Like what we're about to do. I've been reading up, how to prepare for this.\"\n\nThat was a surprise to me. \"Really? Where did you 'read up' on how to get fucked in the ass?\" I said with a loud chuckle.\n\n\"Moron\" Grace said as she slapped my shoulder playfully. \"You can find almost anything about anything if you know where to look. Women's magazines like Cosmopolitan have tips.\" Grace stretched out next to me on her side, and I had a great view of her lovely curves, from her legs to her hips, the inner curve below her ribs, and her great breasts, hanging down a little towards the bed. So fucking sexy. Just looking at her like that was having the desired effect on me, and Grace couldn't miss it. \n\n\"Look at you, getting nice and hard for me again. You're a machine, baby. I love that about you.\"\n\n\"You bring out the best in me, as well as the devil in me\" I said with a lecherous drawl. \"So, since you've done the research, how do we start?\"\n\n\"We start like we always do, baby\" Grace said with a sultry tone as she moved into my arms and we kissed and kissed, and we touched and hugged. Our tongues were playful as were our hands and legs. She always, always felt amazing. No other girl had ever turned me on like Grace. My very sweet, loving, Dirty Girl. \n\nIt didn't take long for our passion to dominate us. I was kissing her neck and shoulder and she was breathing rapidly. Her hands were all over me as she kissed my head and ear. We were ready to start. \n\n\"We both have to be wet or lubricated. Lay back, baby.\" I got on my back and Grace got on top in the 69 position. \"Go ahead, dig in\" she said with a giggle. I used my tongue as she used her mouth. I licked around her pussy, then I sucked on her lips a little, but when I went to lick right around her clit, she told me not to. \"I don't want to cum yet, Henry. Just get me very hot for you.\"\n\n\"Ok, honey. You're the boss\" I said as I went back to teasing her, building her up. She was doing the same to me, sucking me in a very wet way, getting me all sloppy from her spit. \n\n\"Now lick around my ass\" Grace moaned and I moved up a little. She was very clean and it wasn't at all unpleasant licking her ring. I kept going around and around and Grace was whimpering on my dick. I was getting the idea on my own and I used my fingers to tease her pussy while I got her anus very wet. When my fingers were coated in her juices, I used my forefinger to push gently into her ass, going very slowly, one knuckle at a time. Grace let my cock free and cried out when my finger was all the way in her ass.\n\n\"Are you all right, honey? Should I stop?\"\n\n\"NO! God, Henry, you feel great! Just keep on doing what you're doing there. Nice and slow, and add another finger soon.\" She was jerking my cock while telling me what to do and I was throbbing. \n\n\"Honey, ease up a little, or you're going to get a handful of cum.\"\n\n\"Sorry, baby. You keep going, I'll be more careful. Fuck, that's so good....\"\n\nI worked my finger in and out, and when it moved easily, when her sphincter was relaxed enough, I added my middle finger. Grace gasped, clearly enjoying what her body was feeling. She kept licking my cock from time to time, keeping me excited and wet, but not bringing me close to cumming. She was grinding her hips all around and her breasts were scraping my belly as she moved around. \n\nFinally it was time for us to go for it. \"Lie on your back, Gracie. I want to be able to see your face.\"\n\n\"I like that, Henry. I want to look at you too. Just go slow, please?\"\n\nShe got on her back and pulled her legs back and bent them at the knees. I was between her legs, up on my knees, and then I leaned over and kissed her with a few short, loving kisses. \"Of course, honey. Whatever you need. And if it's too painful, please tell me. I'll stop if you need me to. I won't hurt you, not ever.\" One more kiss.\n\n\"I love you, baby. Ok, lets go for it before I change my mind.\"\n\nI edged closer to her and put the head of my cock to her anus. Here we go, I thought to myself. It was like we were both losing our virginity all over again. Actually, we were. I used my fingers of my right hand to squeeze the head in past the snug ring of her sphincter, and Grace gasped as she gripped the fingers of my left hand. \"Keep going\" she urged, breathing hard and rapidly. I slid an inch or two of my shaft and she moaned as her head twisted side to side.\n\n\"Are you all right, honey?\" I asked her, hoping she was. She was so incredibly tight and it felt amazing.\n\n\"Ok\" Grace said, still moaning. \"Don't stop, baby. I want the rest. Just keep going slow.\"\n\n\"All right, honey. I love you.\" She smiled at me, a distracted smile. Further I went, taking my time, her fingers tightening on mine. Finally I was buried fully in her ass and my cock twitched involuntarily.\n\n\"Oh God, baby!\" Grace cried out. \"You're throbbing inside me! I feel so fucking full!\"\n\nI kept staring at her beautiful face as I pulled back slowly until just the head of my cock was still in her ass, then moved forward again, filling her ass once more. Then back out, then back in, gradually increasing the pace. I still held her hand in mine and with my now free right hand I leaned over her and held my body up. \"Honey, you're so fucking tight. It feels like you're going to snap my cock off!\"\n\n\"I hope not! You do such wonderful things to me with that cock.\" Her eyes were open now and she stared back at me as she smiled. \"This feels so much better than I expected. Keep fucking me, baby. And watch me.\"\n\nI kept moving my hips, fucking her faster as her ass eventually adjusted to the size of my dick. Then Grace did something that drove me wild with lust. She reached between her thighs and stroked her pussy with her fingers of her free hand. Slow at first, but soon she was fingering her gash hard, then paying special attention to her clit.\n\n\"Fuck, that's so damn hot!\" I moaned as I pumped her ass. Every so often my cock twitched inside her and she loved it as much in her ass as she did when I did that in her pussy. Her fingers were working her clit and I was mesmerized by the sight.\n\n\"Baby, I'm so fucking close. Keep fucking me!\"\n\n\"I'm almost there. Where do you want me to cum?\"\n\n\"On my tummy. Shoot your cum all over my body!\"\n\nI couldn't take any more. Between the sight of Grace playing with herself and my cock in her snug anus, I had to cum. I arched my back and pulled out and I jerked my cock in time with her stroking her clit. I started spraying my pearly white cream all over her body, my spurts reaching her tits, and Grace then screamed as she came, her body twitching and shaking. Her tummy was covered in thick streams of semen, and she kept teasing her engorged clit as I forced out the last of my climax. I then collapsed next to her and we both giggled with great pleasure.\n\n\"Wow!\" Grace said with very wide eyes. \"We have got to do that again!\" We both laughed harder and held onto each other.\n\n\"No argument here! Not every time, but we will make time for it again...and again!\"\n\n\"Come here, my sexy stud!\" She kissed me hard, a big wet kiss with her hands on my cheek. \"I hope you enjoyed that as much as I did.\"\n\n\"Couldn't you tell? When you played with yourself, I thought I was going to lose my mind. You looked so hot like that. I think we have to do that some time, Just watch each other jerk/jill off for each other.\"\n\n\"Mmm sounds like very kinky fun. My Nasty Boy!\"\n\n\"My Dirty Girl! I love you so much!\"\n\n\"I love you too. Oh god! I have to go to the bathroom again. You're not going to pee in the sink again, are you?\" Grace asked mischievously.\n\n\"No, I can wait until you're done this time. Go ahead. I'll wait my turn,\"\n\nGrace used the bathroom while I laid in bed with great satisfaction. She came out a few minutes later and while she got out a nightshirt to sleep in, I used the bathroom. I got a pair of shorts and joined Grace in the big, four poster bed. Then we cuddled just like we loved to do. She made small sounds of contentment and I held her and kissed her head.\n\n\"Thank you for everything, Henry. I know I already said it, but this really has been the best birthday I've ever had. It's going to be almost impossible for me to top it when it's your turn in February. At least we'll be in New York then. I'm sure I can find something special for us to do.\"\n\n\"This was as much my pleasure as yours, honey. I had just as good a time as you did.\"\n\n\"I don't know about that\" she teased, her fingers playing with my chest hair. \"And this room, this place, is perfect. I feel so adult in here. Like we're 30 instead of almost 20. Very adult.\"\n\n\"Well, what we've been doing in here sure isn't kid stuff\" and we both laughed. We were both so happy we didn't want to go to sleep because the day, the magic day and evening would be over. So we kept cuddling, kept kissing lightly, laying there in the dark of the room, until inevitable sleep came over us. It just couldn't be helped. \n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nThe next ten days passed quickly. There was a lot of last minute shopping to do. Grace and I made plans for the things we wanted to see most of all in each city. A week was hardly enough for any of those cities, so we had to prioritize. We weren't spending a huge amount on lodging, but we did want to eat well at least a few nights. \n\nThe weekend before we left we drove up to the U to see Evelyn and Darrell and Cynthia, who were still together and enjoying campus life. We went up Friday afternoon and spent the evening with Evelyn, spent the night at the same motel we stayed in months earlier, then spent Saturday with Darrell and Cynthia. We went home- carefully- Saturday night, and we each spent Sunday with our parents. \n\nThe night before we left, Tuesday night, I was just sitting with my parents in the living room. I was all packed and mom was driving us to the airport for our 2PM flight to New York, then on to London. We'd be getting to London in the middle of the night, but that's how the flights worked out.\n\nI looked at my parents, and then realized they were looking at me as well. I thought about how much I was going to miss them. How special they were and how wrong I had been about them just a few months ago. I got up and sat on the couch between them and just hugged them both. We didn't have to say much. Most of it was said with our hugs.\n\n\"We're so proud of you Henry\" my mom said. \"This has been a challenging year, but you've come through it like the star we always knew you are. And you've got the sweetest, loveliest girl in the world with you... besides your sister, that is.\"\n\n\"Not to mention my mother.\" I wasn't bullshitting her. I meant it.\n\n\"Oh, stop kidding. You're such a charmer.\" She was smiling shyly, but she was also pleased.\n\nMy dad then said \"You be careful there, son. I know you've been to London and Paris with us, but you still have to watch out for some people. And you protect Grace.\"\n\n\"You know I will, dad. We'll be home in three weeks. Right before Thanksgiving.\"\n\n\"I know. Call us if you can; just reverse the charges. We don't care, Call us.\"\n\nThey both kissed my cheeks and I kissed them back. I thought back to just after my accident, when I was feeling sorry for myself. It was so foolish of me; I was actually a very lucky person who had a touch of bad luck. I was surrounded by loving people.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nI said goodbye to dad in the morning, then mom drove me and Edina over to her house to pick up Grace at 10 for the hour ride to the airport. Grace and I were very excited, even giddy, but the ride was mostly quiet, each of us with our own thoughts. In the middle of the day traffic was manageable and we were there in plenty of time for our flight, hours early, to deal with security (nothing like nowadays, but still a hassle). We said our goodbyes at the curb. Edina hugged me while mom hugged Grace.\n\n\"Henry, you take care of my baby. And take care of yourself. You're both so grown now.\" She was leaking tears, as were mom and Grace. And me. I can't deny it.\n\n\"We'll be fine, Edina. I promise. We're going to have a great time.\"\n\nThen I said goodbye to my mom. \"My baby boy. You're really a grown man now. Be safe. Have a great time. But be safe.\"\n\n\"We will. We'll be home before you know it. We'll take lots of pictures.\" \n\n\"You'd better. I love you, Henry.\"\n\n\"I love you too mom. We'd better go get checked in before we all end up like crying idiots here.\"\n\nA last kiss on the cheek each from Edina and my mom, and Grace and I went into the airport to begin a great trip, a great experience. I'll tell you all about that in the next chapter.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nPlease remember to vote and as always, comments are appreciated.\n\n \n"
    ],
    "authorname": "Rabbitman55",
    "tags": [
        "young",
        "love",
        "relationships",
        "oral",
        "rimming",
        "erotic",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/falling-for-grace-pt-05"
}