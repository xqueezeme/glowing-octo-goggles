{
    "title": "Amethyst",
    "pages": [
        "Amy Hayze sat on the edge of a precipice looking down into the chasm below. It was a long drop and clouds of misted spray rose up obscuring the white water at the end of the waterfall. It looked soft and comforting. She wasn't afraid to be perched on the edge of the stony outcropping high above the falls. She looked up into the bright white light above her and felt its warmth and life. She was content. Happy even, here in this place between life and death.\n\nShe heard the wind blow through the trees behind her and knew instinctively that she was in danger, yet she didn't want to turn to face it. She didn't want to leave the contented bliss of this moment. She reached down and grasped the edge of the rock ledge she sat on. If she ignored it, it would pass, but even as she thought it she knew she was lying to herself. The choice had to be made, and she was suddenly inexplicably scared.\n\nClouds began to obscure the warmth of the bright white glow of the sun. Standing, she turned to face the trees and the winds that brought the darkness of a storm. At the front of the clouds was a rider that seemed dark and malevolent, as it bore down upon her. Thunder rumbled as the rider sped toward her menacingly. She knew the decision had been made for her and she jumped, falling through what had seemed soft clouds but were insubstantial mist. She opened her mouth to scream...\n\n*****\n\n\"Amy wake up,\" Greg said shaking her shoulder gently. \"Amy it's just a dream.\" Amy looked up into his worried eyes, taking a large breath as she came back from the dream. He saw her eyes refocus and stroked her face. \"Maybe you should see someone about these dreams,\" his voice held concern.\n\n\"Maybe,\" she agreed. Recurring dreams always manifested for a reason, that much she knew. She could go to see a psychologist for counselling about it, a psychiatrist who would probably diagnose her with some form of PTSD or she could go home, to her mother, who was an expert on analysing dreams in addition to many other unusual skills.\n\nShe got up and went to get a drink. How on earth could she explain her mother or even her former life to Greg? He was so sane and rational. He lived in the real world and was cynical about all religions, especially the alternative ones. If she told him that her mother was a white witch and head of a Wiccan coven, he would laugh. He would accept it as one of those things that eccentric people did, but he would treat it as a joke. If she told him, she used to be part of that coven he would lose respect for her and realise she had been one of those eccentric people who didn't live in the real world.\n\nShe went back to bed and wrapped her chilled nakedness around Greg's warmth. \"Since we're both awake,\" she purred into his ear. She didn't want to think about the dream, and she knew Greg could erase her mind completely. Her hand slid down over his body to wrap around his rapidly hardening manhood.\n\n\"You're insatiable,\" he murmured, \"Not that I'm complaining.\" He wrapped his arms around her and pulled her into a heated kiss. She melted into that kiss letting the rush of chemistry between them fill her mind.\n\nShe positioned herself over him and covered his body with feather light kisses. She stroked along his exposed skin, with the flat of her hand and wasn't surprised to notice that Greg's arousal matched hers as usual. Then, as her dark hair tickled over Greg's lower belly, Amy took his thickness into her mouth.\n\nGreg groaned at the pleasure and pushed his fingers into the softness of Amy's hair. After a few moments, he pulled her mouth from his body and rolled her over onto her back. He parted her thighs and gazed at the folds of her pussy where it nestled shyly between her thighs. \n\n\"So beautiful,\" Greg whispered as he bent forward, eager to taste the warm wetness of Amy's excited body.\n\n\"Oh, yes!\" sighed Amy when Greg's busy, inquisitive tongue found her molten core. \"Just like that. Oh God, yes.\"\n\nGreg tongued Amy with mounting desire. His arousal only grew further at the soft moans of pleasure she made. Her words of encouragement spurred him on, and he was eventually rewarded by Amy's long, and almost animal-like keening as her climax washed over her senses. Then, when Amy's body had begun to relax, Greg moved between her widespread thighs and felt the molten heat of Amy envelop his cock. \n\nSlowly and tenderly he moved against Amy's body. He increased his pumping pace as Amy's breathing became more urgent, until he was finally thrusting forcefully into Amy's welcoming, wet heat. Amy herself was rocking her wide hips up to greet each charge from her lover. She pulled at his torso with her hands and was using her legs to pull Greg into her body, deeper and harder. It was as though Amy meant to devour him, like some kind of predatory man-eater, but finally, when Greg grunted and stiffened above her, Amy's second orgasm broke as well.\n\nAt the very moment of their mutual climax, Amy knew that the attraction between them was based more on lust and sex, than the friendship they had cobbled together, to overlay that chemical combustion that made them feel so alive and held them together as a couple. Satiated and relaxed again, she dozed wrapped in his strong, protective arms and didn't dream again that night.\n\n*****\n\nAmy sat on the edge of a precipice looking down into the chasm below. It was a long drop and clouds of misted spray rose up obscuring the white water at the end of the waterfall. It looked soft and comforting. She wasn't afraid to be perched on the edge of the stony outcropping high above the falls. She looked up into the bright white light above her and felt its warmth and life. She was content. Happy even, here in this place between remaining hidden in the rainforest behind her and bathing in the warmth of the sun.\n\nShe heard the wind blow through the trees behind her and knew instinctively that she was in danger, yet she didn't want to turn to face it. She wasn't ready to return to the darkness. She didn't want to leave the light and its warmth. She reached down and grasped the edge of the rock ledge she sat on. If she ignored him, he would let her stay but even as she thought it she knew she was lying to herself. She couldn't ignore him his attempts to reach her seemed urgent.\n\nClouds began to obscure the warmth of the bright, warm glow of the sun. Standing she turned to face the trees and the winds that brought the darkness she look at the growing storm. At the front of the clouds, a great wave carried a rider that seemed dark and malevolent as it bore down upon her. She took a step backwards; she wasn't ready to leave; she didn't want to go with him. Then she was falling through what had seemed to be soft clouds but were insubstantial mist. She opened her mouth to scream...\n\n*****\n\n\"It's no different to when you were in India and happily threw paint bombs on everyone for the Holi festival to celebrate Spring,\" Amy argued with Greg.\n\n\"So you are saying this festival is about Spring, but it falls on Halloween, and they talk to the spirits because the veil between worlds is at its lowest,\" he shook his head in confusion trying not to sound like he was mocking her. He could see that she was struggling to tell him about her family.\n\n\"Well yes but no. They choose to have the festival between the Spring and summer equinox at a time when they feel it is the most potent to ask the spirits for help. It's no different to Christians asking for miracles at Easter or Christmas time,\" she sighed thinking her words were falling on deaf ears.\n\n\"Okay and this is how you grew up, in this alternative religion?\" Greg asked sceptically. She was so straight laced he found it difficult to believe.\n\n\"Yes,\" she sighed. \"Look you don't have to come, I just didn't want you to think that I didn't want you to meet my family.\"\n\n\"Oh, I'm coming! I wouldn't miss this for the world,\" Greg chuckled.\n\n\"Don't mock them and their beliefs, Greg. Whatever you think, they are still my family,\" she said sadly knowing this was a bad idea.\n\n\"I wouldn't dream of it,\" Greg held up his hands as if surrendering to her rules. \"I'll ask for the time off work today. I'm not sure I'll get both weeks but at least one of them,\" he said and pulled her into his arms. \"I promise I will be on my best behaviour,\" he grinned at her. He loved her, and he knew she loved him, but she had baggage, and if this was the way to deal with it, he was going to be there to support her.\n\n\"Thank you,\" she said sincerely. She had thought about it a lot, and she wanted him to come with her and see the real person she was, rather than just the woman she projected to mainstream society here in the city. She was a massage therapist at a day spa and was more likely to get questions about prostitution rather than the Reiki healing she practised. She had left her alternative life behind her five years ago when she'd moved to the city and rarely spoke of the beliefs in earth magic she had grown up with. \n\nHe kissed her then. \"I love you,\" he murmured the three words that seemed to be so hard for her to hear. \"I want to know everything about you and that includes your family no matter how wacky you think they are.\"\n\n\"I don't think they're wacky I am worried that's what you will think,\" she argued to avoid reciprocating those three words.\n\n\"Honey, we've been together for almost a year now, we live together. When are you going to believe that I'm in this for the long haul? Short of something illegal like drug or human trafficking, I'm happy to celebrate your family's traditions with them. Just as I am sure they will celebrate the traditions we choose for our family in the future,\" Greg said confused by her reaction. He wasn't intolerant of anyone's choice of lifestyle. He may be sceptical of any religious fanaticism, but he was a live and let live kind of guy. \n\n\"We have a family in the future?\" she asked her eyes widening. \n\n\"Well, it would be a shame to put all this practise we've been doing to waste,\" he chuckled. \"Not right now but in the future some time I'd like a family,\" he said without guile. \"Speaking of practice,\" he kissed Amy again and pulled her body against his so she could feel his arousal.\n\nAmy loved Greg, he was everything she wanted and needed in a partner. He was safe, sane and offered her a sense of security she had never felt before in a relationship. She had never allowed herself to consider their future together. She lived each day for what it was, as if it could all come to a screeching halt at any time. If she was honest, each time she thought about a future with him or anyone, she was filled with a sense of foreboding and an ominous dark cloud seemed to surround that person. She realised she needed to deal with that feeling and the dreams which seemed to be increasing in length and intensity. \n\nHer intuition told her that her mother held the key to unlocking what was wrong with her. She had trouble committing to a future, not just with Greg, but of any kind. She remained a casual at work despite working there full time and being offered permanency within the company and the benefits that entailed, because it would have been a commitment. Moving in with Greg had happened so slowly and gradually that she hadn't had to commit to it, it was just a natural progression when her lease ran out and saved her from having to commit to another lease.\n\nMaybe she was broken after the accident. Maybe she hadn't dealt with it as well as she had thought she had and needed professional help, just as Greg had suggested. She hoped that by going home and confronting her past, she could chase away whatever haunted her dreams and kept her from committing to the life she had now. The kisses she and Greg shared became more passionate and her concerns ceased to cloud her mind, their clothes littered the floor and he lifted her to the kitchen island bench stepping between her thighs. He wrapped his arms around her as he entered her slowly and gently lay her back onto the cool surface. He began to move within her slowly, and his lips and fingers danced over her breasts. \n\nGreg began to fuck her placing his hands over her breasts and gripping them as he stared down at her beautifully expressive face. It was one real time, during sex, that he could see her real emotions and not the reserved, carefully contained woman that had stolen his heart. \n\nHe watched as the endorphins took over her carefully guarded mind and desire, lust and need had replaced the calm fa\u00e7ade she had worn all evening, even when arguing with him. He thrust into her with power strokes, feeling her hips rise to meet him and he revelled in the sight and sound of her.\n\n\"Oh fuck,\" he groaned deeply feeling her come with him. It was a quick, hard fuck but that made it no less powerful in his mind than if it had lasted hours. He loved everything about Amy, and he found himself eager to meet her family and find out more.\n\n*****\n\nAmy sat on the edge of a precipice looking down into the chasm below. It was a long drop and clouds of misted spray rose up obscuring the white water at the end of the waterfall. It looked soft and comforting. She wasn't afraid to be perched on the edge of the stony outcropping high above the falls. She looked up into the bright white light above her and felt its warmth and life. She was content. Happy even, here in this place between the darkness and the light.\n\nShe heard the wind howl through the trees behind her taking on a menacing note. She knew instinctively that she was in danger, yet she didn't want to turn to face it. She wasn't ready to return to the darkness. She didn't want to leave the light and its warmth. She reached down and grasped the edge of the rock ledge she sat on. It began to crumble beneath her hands.\n\nShe stood and moved from the edge, and she could hear the laughter of the dark figure in the waves of clouds rolling in behind her. It sounded like low rumbling thunder. She couldn't ignore the rider as he bore down on her but neither was she willing to be swallowed by his darkness. She loved the light and wasn't ready to forsake it. \n\nThe warmth of the sun had disappeared, and she shivered with cold and fear. The rush of life that was the waterfall made her turn, and she could see one last shaft of sunlight breaking through the darkness to illuminate it. She reached out towards it and didn't see the large cracks appear at her feet. Then she was falling through the insubstantial mist. She opened her mouth to scream...\n\n*****\n\n\"Oh, you're here! You're here!\" Shelly ran toward her daughter with her arms open wide. \"My darling girl, you've been gone far too long,\" Shelly wrapped Amy in a warm hug. \"And you must be the man she's told me absolutely nothing about,\" Shelly spoke to Greg over her daughter's shoulder holding her in a tight embrace for a long time.\n\n\"Seems we are both starting from the same place then,\" he chuckled. \"I'm Greg,\" he began to raise his hand to hold it out to Shelly when she released Amy and embraced him as she had her daughter. \n\n\"You are very welcome here, Greg,\" she said happily. \"Come inside, and we'll get you settled in.\" Shelly kept an arm around her daughter's waist as they walked inside with Greg following behind carrying their luggage.\n\nThe darkness of the night seemed to make the small cottage style house look eerie, and Greg stepped warily, approaching the house of someone who considered themselves a witch. With Amy's nightmares seeming to become increasingly worse they had travelled down after work on Friday. She seemed to sleep little now, and her eyes had taken on a haunted hollow look. In the end, he had been as eager to get here where she thought her mother could help her with the dreams, as she had been. He hadn't considered how eerie this place would feel to him once he was here.\n\nStepping through the threshold though was a revelation. It wasn't at all like what he had imagined as he approached it. It was warm and inviting with stone floors, and wood panelled walls giving it a golden glow from the fireplace and soft, warm lighting. No cauldron or dusty apothecary greeted his eyes but rather a reasonably modern interior, furnished using all natural materials. No plasterboards on the walls or ceiling, the stone of the fireplace matched that of the floors and even the carpets, which took the chill from the stone, seemed to have been handwoven in a loose weave of natural fibres. He immediately felt relaxed and smiled.\n\n\"If you want to point me in the direction of the bedroom, I'll put these away and give you girls a minute to catch up,\" Greg suggested.\n\n\"I refurbished your room remember,\" Shelly warned Amy as they turned to look at Greg in unison. \"Perhaps I should show it to you and explain.\" She moved toward the other end of the cabin. \"I needed the perfect cover for my book and couldn't find what I was looking for, so I extended your room. All your things are still there, just packed away for when you want them. It's still your room. It's just a little bit more grown up.\"\n\n\"It doesn't seem any different to me,\" Amy said entering the space and seeing her bed and furniture where they had always stood.\n\n\"I tried not to touch the interior too much because this will always be your home. I just decluttered a little, but everything is still here in the closet. She flicked on a light showing that the closet itself had been extended into a large walk-in area.\n\n\"Great, more space,\" Amy said not concerned at all. She had worried about facing the memories of this room and with her mother's decluttering as she called it most of her life in this house was now in neatly stacked cardboard boxes. Likewise, she was happy to have a small bathroom attached to the room now. The biggest surprise came when her mother opened the wide curtains that used to cover a window looking out into the rainforest to reveal bi-fold doors. These opened to reveal a small courtyard lit by blue and green lights that shone up from ground level into a range of rainforest greenery surrounding a sunken spa that lit up like a crystal blue hot spring. \n\n\"I feel like we have booked into a resort spa for the weekend,\" Greg said acknowledging the beauty of the space.\n\n\"Earth, air, water,\" Amy counted off the elements and turned to her mother. \"Candles or do you have a fire pit out here somewhere?\"\n\n\"Safety inspectors can be so finicky,\" Shelly said unhappily. \"There are some fire bowls that can be used with candles but no fire pit in this area,\" she said regretfully making Greg smile at the pair of women. He could see similar thoughtful expressions on their faces and marvelled at how much like her mother Amy was. He considered that if this was an image of how Amy would look in twenty-five years, he was a happy man. He smiled to himself. Amy may not want to talk about their future be, he knew they would have one together.\n\nGreg remained relatively quiet, content to listen to Amy and her mother talk, being drawn into the conversation when it turned to how they met and what he did for a living. They had met through mutual acquaintances who owned a house he had helped to design. They talked a little about the environmentally friendly ethos of the firm he worked for, but it was a dry subject at best unless you worked in the industry or were building a house he admitted.\n\n\"It's been a long day for me, and with the drive up here, I'm beat. So I think I will leave you ladies to discuss things,\" he looked at Amy meaningfully and bent his head to kiss her. \"Good night Shelly, thank you for letting me stay here with you. It's a truly beautiful house.\"\n\n\"Amethyst?\" Shelly asked in a curious but stern tone. \"What's wrong?\" She studied her daughter intently now, and Amy groaned.\n\n\"Amethyst?\" Greg stopped in his tracks and turned to face the women. \"Amy is short for Amethyst?\"\n\n\"Amethyst Ruby Sapphire,' she nodded unhappily. ",
        "\"How did I not know this until now?\" Greg asked. \n\n\"Everything except my birth certificate is in the name Amy. It's what I choose to be known as, why would you have known is the better question,\" Amy pointed out in a frustrated tone.\n\n\"I guess,\" Greg frowned and wandered away deciding not to pursue the topic after her rebuke.\n\n\"That was uncalled for Amy,\" Shelly chastised her daughter. \"It wasn't his fault he didn't know.\"\n\n\"No but it was his fault you used that name with me,\" she sighed. \"I haven't been sleeping well. I've had a recurring dream, but it will take longer to explain than I would like tonight, so can we talk tomorrow? I think I need some help understanding it so I can move on.\"\n\n\"Of course,\" Shelly tried to smile, but her daughter wouldn't have come home for help like this unless it was frightening her and that thought alone scared Shelly. \"Why don't we put the rose amethyst geode into your room tonight just to ward off anything nasty so you and Greg can both get a good night's sleep. It looks like you could both use it.\" She seemed to consider her daughter. \"Maybe some lavender as well?\"\n\n\"Thanks, Mum,\" Amy said quietly and relaxed.\n\n*****\n\nAmy sat on the edge of a precipice looking down into the chasm below. It was a long drop and clouds of misted spray rose up obscuring the white water at the end of the waterfall. It looked soft and comforting. She wasn't afraid to be perched on the edge of the stony outcropping high above the falls. She looked up into the bright white light above her and felt its warmth and life. She was content. Happy even despite the coming darkness of the night.\n\nShe felt the wind pierce her warmth with a blast of chilled air that rustled through the trees behind her. She shivered as if the cold air wrapped around her like a strong pair of arms, pulling her back toward the coming darkness. She knew instinctively that she was in danger, yet she didn't want to turn to face it. She wasn't ready to go into the darkness. She didn't want to leave the light and its warmth. She reached down and grasped the edge of the rock ledge she sat on. Her hands couldn't grip the slippery edge that seemed strangely covered in soft moss that slipped beneath her hands.\n\nShe felt herself sliding from the edge, and she could hear the voice of the dark figure in the waves of clouds rolling in behind her. She couldn't make out the words, but the voice seemed oddly familiar. She turned to face the voice and saw the dark rider. She felt herself slipping and the air around her tightening its grip, as if to stop her from escaping the coming darkness.\n\nThe warmth of the sun had disappeared, and she shivered with cold and fear. She felt the arms of insubstantial air lose their battle with gravity. The noisy rush of life that was the waterfall became louder, as she slipped from the grip of the frozen insubstantial arms holding her. She felt the warmth of the sun for a brief moment as she fell and smiled. She reached out towards it, but the mist began to obscure her vision as she slid through it. She opened her mouth to scream...\n\n*****\n\n\"Amythest!\" Shelly said in alarm. \"What is it?\"\n\nGreg went to her and wrapped her in his arms. \"I don't understand we both slept so well last night,\" he whispered to Shelly smoothing back Amy's hair as her eyes began to focus again. \"She can't have dozed off in the middle of doing yoga could she?\"\n\n\"Yoga is a form of meditation, and those who practise it in the correct frame of mind can go into a trance-like state,\" Shelly explained as she watched her daughters face relax and her eyes regain focus. \"I think we better have a talk about these dreams you've been having don't you?\" She said to Amy in a tone that conveyed that this wasn't negotiable.\n\n\"I'm okay,\" Amy finally whispered. \"I think all those nights of broken sleep just caught up with me, and I must have zoned out for a minute, but I am fine now, honestly,\" She began to stand up untangling herself from Greg's arms. While she didn't physically push him away, she put space between them feeling strangely uncomfortable.\n\nGreg was confused and frowned at her not saying anything. Usually after one of her nightmare's she wanted him close and more often than not initiated the intimacy between them. This daydream and the sudden distance he felt her put between them were new, and he wasn't sure how to deal with it. He considered whether coming here to see her mother had been the best course of action for either of them. She seemed edgy and taciturn here, rather than the free-spirited sweet girl he knew and loved.\n\n\"I think I'll take a drive up to Eagle Heights. I believe there is a lovely main street there to explore. We talked about it on the way up yesterday,\" Greg addressed Shelly giving Amy the space she seemed to need.\n\n\"You should it's lovely. My friend, Lillian has a small cafe there called Lilly's Pad, she bakes beautifully. I'll call and let her know you're coming if you like. She can point out some places of interest,\" Shelly said cheerily.\n\n\"Sure, why not, I'm happy to mingle with some of the locals,\" he said easily. His eyes though hadn't left Amy who seemed particularly rattled by the dream this time. Worry nagged at him, but he knew he had to give her time and space to talk to her mother about it. \"I'll go have a shower and then get out of your hair for a few hours.\" \n\nShelly watched him go and then turned to look speculatively at her daughter. \"Why are you so cruel to him. It's obvious he loves you and wants to help you?\" she asked sternly.\n\n\"I can't seem to help it, and it's only getting worse. Mum, I think I'm being haunted or possessed or something,\" Amy said her eyes showing her very real fear. \"You're right, though, he loves me, and he deserves better. I don't know what's happening to me. I knew after our first few dates he was everything I ever wanted and needed in a partner, but since I moved in with him,\" she shrugged and floundered for words. \"The dreams, the ominous dark clouds that follow not just me but him, I can see them.\" She was talking fast now, babbling almost, and she stopped only when Shelly wrapped her arms around her and held her tightly.\n\n\"Go and help him get ready. Send him off to explore with a smile rather than that concerned frown. If you love him, tell him. I have a feeling it is important for you both right now,\" Shelly advised. \"Then we will see about this spirit that is haunting you.\" She felt Amy begin to relax as she held her. \"First I have something for you, though.\"\n\nAmy took a deep breath and nodded. She followed her mother through to the living room. Her mind remained on the dream and the voice she had heard. It was so familiar and so startling, she knew she should recognise it, but she just couldn't place it.\n\n\"I dug this out last night after you went to bed,\" Shelly held up an amethyst ring. \"It will give you some protection against dark spirits if that is what we are dealing with here.\" \n\nAmy took the ring and placed it on her finger. She knew this was why she had come home after so long. When she had told her mother that she thought she was haunted or possessed; Shelly hadn't look at her as if she was mad. She had believed that something was happening and offered her hope. She felt better just knowing that she could tell someone about the dreams have them believe it was more than just a nightmare that would pass.\n\nShe found Greg stepping out of the shower when she finally went to see him. She stood leaning on the door and watched him towel off his beautiful body. Chemistry had never been an issue between the two of them, and she could watch him do this for some time quite happily.\n\n\"See something you like?\" he asked smoothly without stopping.\n\n\"Always,\" she murmured seductively and walked toward him. \"I'm sorry, the dream coming like that scared me a little more than I wanted to admit.\" She wrapped her arms around his now dry torso and leant in resting her head on his chest.\n\n\"There's the woman I know and love,\" he tilted her face up by the chin and kissed her. \"You had me worried that things were getting worse being here rather than better.\" \n\n\"I know I don't say it often enough but you know I love you, right?\" Amy asked forcing the dreaded words from her mouth not understanding why they always tasted so bitter when she said them to him.\n\n\"Yeah, well, I was hoping that was the case,\" he teased with a wide smile. \"Now either I need to get dressed, or you need to undress,\" Greg kissed her again pulling at her clothes. She offered no resistance as he walked her backwards into the bedroom shedding her clothes as they went.\n\n*****\n\nI'm sitting on the edge of a precipice looking down into the chasm below. It's a long drop, and there are clouds of misted spray rising to obscure the white water at the end of the waterfall. It looks soft and comforting. I'm not afraid to be perched so high above the falls, there is bright white light above me, and I can feel its warmth and life. I feel happy and content there, but I seem to know there is a darkness coming. I assume the darkness is the night, but then the wind picks up.\n\nAmy started to tell her mother about her dream, but it took her consciousness, and she found herself sitting on that ledge again with the sound of the rustling leaves around her. She found she was still holding her mother's hand just as she had been on the couch before she came here. Shelly was talking to her, but she couldn't hear what she was saying over the rustling of the wind through the trees\n\nShe felt the wind pierce her warmth with a blast of chilled air, and she screamed in horror as she saw Shelly pierced by a spear of ice. The woman tumbled forward toward the chasm, but Amy gripped tightly to her hand. \"No!\" she screamed feeling herself sliding from the edge under the weight of her falling mother.\n\n\"Let her go!\" thundered the voice of the dark rider behind her and she turned towards it unwilling to let Shelly go to fall to her death. She felt herself slipping, and a long arm reach out of the darkness toward her and grip her other hand. She saw the face then, distorted in rage and grief and she tried to pull away.\n\nThe warmth of the sun had disappeared, and she shivered with cold and fear. She felt the dark hand that held to hers lose its battle with gravity. The noisy rush of life that was the waterfall became loud drowning out the rider's cry of anguish as she slipped from his tenuous grip. She felt the warmth of the sun for a brief moment as she fell and smiled as her mother's eyes opened. She reached out towards her, but the mist began to obscure her vision as she fell through it. She opened her mouth to call her mother's name...\n\n*****\n\n\"I'm here, I'm here,\" Shelly soothed as Amy came back to reality.\n\n\"Mum!\" Amy wrapped her arms around her mother. \"You were there on the ledge with me. He killed you. Oh God, he killed you!\"\n\n\"I'm here. I'm not going anywhere. Whoever it was tried to make me let go of your hand, but I held tight,\" Shelly soothed. She was disturbed by what had just occurred. The deep voice that was not Amy's coming from her mouth shouting, \"Let her go!\" had been real enough to convince her that her daughter was in danger from a dark spirit.\n\n\"I think I saw him this time,\" Amy admitted weakly. \"He's so angry and sad all at the same time,\" she said trying to make sense of her thoughts. The familiar voice and face rapidly fading from her mind to leave her with the ominous dark cloud that now settled over her mother. \"He's mad at you now too. The dark cloud that hangs over Greg so often is now over you as well.\"\n\n\"You know who the spirit is?\" Shelly asked carefully. \n\n\"I thought I did, but it's like holes are opening up in mind, and I can't quite grasp it anymore,\" Amy shook her head. \n\n\"Okay so you are sitting bathed in the white light above a waterfall, and the dark rider comes?\" Shelly tried to get Amy to concentrate on the dream again. \n\n\"Yeah and I try to ignore him but I can't, and it's like I have to make a choice and each time I fall. He doesn't like it when I fall. The last few dreams he has tried to save me from falling and pull me into the darkness,\" Amy said remembering the cold tendrils of air that wrapped her around her. She shivered reflexively.\n\n\"What is he riding? When he comes for you, you said he rides at the front of dark clouds?\" Shelly asked seeing Amy's face darken in concentration.\n\n\"A horse maybe, the thunder is more like a motorbike rumble than horse's hooves. It's like when I try to remember the rider any details just evaporate almost like I'm not supposed to remember him,\" she sighed. \"It's all right there, I know it is, but I just can't grasp it,\" her frustration was evident in her voice, and she noticed the brief look of anxiety distort Shelly's calm face before it was gone again.\n\n\"As much as I could muddle my way through unblocking that wall that stops you from remembering the rider, I think we are going to need some help. We all have our gifts, and as much as I hate to admit, there is someone better suited to help you right now,\" Shelly sighed.\n\n\"Who?\" Amy asked. Her mother was the strongest and most confident of the coven if she couldn't help her, Amy wasn't sure who could.\n\n\"I think we need your father,\" Shelly admitted. \"Until then we will put some protection spells and wards around you. I'll call the ladies and have them come over tonight.\"\n\nAmy was stunned. Her father had always been an itinerant figure in her life. He came without warning blowing in on the wind and left just as suddenly. She loved him but felt like she'd never had a real relationship with him. Shelly began making phone calls to the coven and, Amy assumed, her father.\n\n\"I'm going to go out the back to sit in the sun,\" she said quietly, and at an answering nod from Shelly, she padded away.\n\n*****\n\nAmy sat on the edge of a precipice looking down into the chasm below. It was a long drop and clouds of misted spray rose up obscuring the white water at the end of the waterfall. It looked soft and comforting. She wasn't afraid to be perched on the edge of the stony outcropping high above the falls. She looked up into the bright white light above her and felt its warmth and life. She was content. Happy even despite the coming darkness of the night.\n\nShe the wind pierced her warmth with a blast of chilled air that rustled through the trees behind her. She shivered as the cold air wrapped around her like a strong pair of arms embracing her. \"Remember me,\" the familiar voice demanded in harsh tones. \"You have to remember me!\"\n\n\"I don't remember anything!\" Amy said, a sense of panic rising within her. She knew there was a danger in remembering that voice, and she didn't understand what it was. \n\nShe wasn't ready to go into his darkness. She didn't want to leave the light and its warmth. She reached down and grasped the edge of the rock ledge she sat on. Her hands couldn't grip the slippery edge that now seemed covered in ice. She shivered and took a deep breath. \"I don't want to remember you!\"\n\nShe felt herself sliding from the edge, and she could hear the thundering voice of the dark figure in the waves of clouds rolling in behind her like a storm as he raged impotently. She couldn't make out the words, but the voice seemed so familiar. She turned to face the voice and saw the dark rider. She felt herself slipping and the air around her tightening its grip as if to stop her from escaping his darkness.\n\n\"Remember me!\" he demanded making her look at him. Recognition slowly dawned on her then, she knew him; she had loved him once. Why couldn't she remember the details, not even his name? She stared at him blankly trying to fathom why he was here scaring her, making her choose between life and death.\n\nThe warmth of the sun had disappeared, and she shivered with cold and fear. She felt the arms of insubstantial air battle in the effort to hold her tightly in that place. The noisy rush of life that was the waterfall became softer as she felt the warmth of the sun for a brief moment then it was gone, and she was swallowed by the darkness. She opened her mouth to scream but nothing came out, and she was transported to a bed made of dark clouds.\n\n*****\n\nShelly found Amy lying on a daybed as if asleep. Shelly started to worry when she couldn't rouse her daughter then Amy's eyes popped open, and she looked at her mother malevolently. \n\n\"She is mine now as she always should have been,\" the voice growled deeply. \"Your hocus pocus can't help her now.\"\n\n\"Give me back my daughter, Simon,\" Shelly said strongly.\n\n\"Ah so you do remember me, not all traces of me were obliterated then,\" the deep menacing chuckle that came from Amy's throat sent chills through Shelly. \n\n\"Give her back,\" Shelly said through clenched teeth. \n\n\"No!\" Simon roared, and Amy's body went slack on the daybed as he departed her form.\n\n*****\n\nAmy sat on the edge of a bed of clouds. More clouds of misted spray rose up obscuring the floor below the bed like white water at the end of a waterfall. It looked soft and comforting. She wasn't afraid to be above the waterfall that she could hear now and as her mind raced she looked up into the bright white light above her and felt its warmth and life. She was content. Happy even despite the coming darkness of the night and the clouds that surrounded her.\n\nShe shivered as a strong pair of arms embraced her from behind. \"Remember me,\" the familiar voice demanded in harsh tones. \"You have to remember me!\"\n\n\"I don't remember anything!\" Amy said, a sense of panic rising within her. She knew there was a danger in remembering that voice, and she didn't understand what it was. She struggled against the cold dark arms holding her there on the bed as if to stop her from escaping his darkness.\n\n\"Remember me!\" he demanded making her look at him. Recognition slowly dawned once again, she knew him; she had loved him once. She stared at him blankly trying to fathom why he was scaring her. The noisy rush of life that was the waterfall became softer as she felt the warmth of the sun strengthen for a brief moment and she closed her eyes. \n\n\"Try to remember. We have loved each other deeply for the longest of times. Look into my face and try to remember,\" Simon begged Amy. \"They took your memories away to stop us from being together, you must remember me,\" he crooned. \n\nAmy opened her eyes, and they were sitting in a car on the edge of a cliff. The city sparkled below them after the rain shower, and she thought she could see all the way out to the ocean. \"Where am I, I know this place, and this car, but I don't know you.\" She looked at him as she spoke. \"You're scaring me,\" she whispered. \"I want to go home.\"\n\n\"No, I can't let you go until you remember that you love me, that you want to be with me,\" he growled and grabbed at her. She fought against his touch and opened her mouth to scream, but nothing came out. \"Sleep!\" he growled disgustedly passing his hand over her face and watched her go slack in the seat.\n\nAs soon as she relaxed into unconsciousness, he could feel the familiar pull of her loved ones tugging at her mind.\n\n*****\n\n\"Let her go!\" The strong guttural voice rasped from between Amy's lips. Startled Greg let her drop back to the daybed. \"You should leave now there is nothing left for you here. She is mine now,\" the deep voice taunted him. \"I'm sure you were a pleasant diversion, but I am back now, and she belongs to me.\"\n\n\"Be strong, call to her,\" Shelly said placing a hand on Greg's shoulder. \n\n\"Amy, I told you I was in this for the long haul. I'm here, and I am not leaving without you, so give up this insanity and come back to me,\" Greg said only half believing what he had been told by Shelly and her friends as he had returned that afternoon. \n\n\"Oh that's so sweet,\" the raspy voice responded. \"Amy's not here anymore; she's in my world now. She heard you call her insane. It was just as she expected from you. Disbelief and intolerance. Go home Greg she doesn't want you anymore.\"",
        "\"Amy I know you're in there. I love you come back to me,\" Greg begged ignoring the taunting raspy voice. He saw her blink and seem to struggle for a moment.\n\n\"Greg?\" she asked looking around confused. Six women circled the daybed including her mother. \"What's happening?\"\n\n\"You've been dreaming,\" he said in relief and pulled her up into his arms again. The women began a whispered chant, and she stiffened in his arms again twisting and contorting. \"I love you, stay with me, please Amy stay with me!\"\n\n\"No!\" she cried in a strangled voice and placed her hands to her temples. Greg watched as her eyes rolled and she sneered. \"Nice try ladies but I am far too strong for you now.\" He seemed to look at them all carefully. \"Where is the old warlock? I look forward to facing him again and seeing the chagrin on his face. Did he finally leave you, Shelly? Gone never to return?\"\n\n\"Why would you even care, Simon?\" Shelly spat. \"Do I detect a chink in your bravado?\"\n\n\"I'm disappointed not to see him here. I hope nothing untoward happened to him,\" Amy's face took on a sinister smirk that twisted her features in an unnatural way making Greg recoil as he watched her. A deep guttural laugh broke forth from Amy's throat. \"Go home little boy! You are not man enough to take her back from me.\"\n\n\"I'm not fucking around with this anymore, Shelly. I'm taking Amy to the hospital,\" Greg said clearly rattled by what he was witnessing.\n\n\"No, Greg that's not what she needs. If there is any hope of getting her back, she needs to be here. You can call a doctor if you need to, but I won't let you take her anywhere. She came here because she knew I would move heaven and earth to help her and I will,\" Shelly said in a loud stern voice.\n\n\"Witches are Bitches man, take the cue from the old warlock and get out of Dodge, my friend,\" Simon laughed in a rasping way. \"Now if you'll excuse me, I have a sexy woman waiting for me to fuck her into the next life.\"\n\n\"No!\" Greg shook her shoulders as if trying to shake the spirit free of her. Amy's body hung limply in his arms, and he pulled her to his chest. \"Don't leave me,\" he whispered, \"I love you, Amy, please don't leave me.\"\n\n*****\n\nAmy had been walking through the dark landscape for what seemed like days when she came upon the sunlit waterfall and sat happily in the bright, white light that seemed to warm her from within. It was a long drop and clouds of misted spray rose up obscuring the white water at the end of the waterfall. It looked soft and comforting. She wasn't afraid to be perched on the edge of the stony outcropping high above the falls. She looked up into the bright white light above her and felt its warmth and life. She was content. Happy even despite the surrounding darkness of the forest she had been walking through for so long.\n\n\"Amy!\" A familiar voice called. \"I've been looking for you for hours, did you hit your head or something?\"\n\n\"I, umm, I don't know,\" she murmured touching her brow. \"I'm a little confused as to how I got here, but it's so nice in the sun maybe I lost track of time?\" She stood close to the edge but wasn't afraid. She looked up into the bright white light above her and could see a large white bird circling. It was comforting to her, and she felt at peace somehow knowing it was there.\n\n\"Luckily I knew you would be here at our waterfall and came back for you. I love you, step away from the edge and come back to me\" Simon said in the begging tone he had heard Greg use with her.\n\n\"Greg?\" she asked tentatively seeing Simon's shape alter slightly to look more like the man she knew she loved.\n\n\"No it's Simon, Greg left, remember. We love each other now, he's accepted it and moved on,\" Simon said carefully seeing her confusion.\n\n\"Greg wouldn't do that. He loves me,\" she said softly, a great sadness welling up in her.\n\n\"He didn't have much choice; we've been fated to be together since time began. No one can fight a true love like that, not even you with your memory problems,\" Simon caressed her with his words trying to drown out the confusion and anxiety. \"Come let's go home,\" he said gently and held out a hand to her.\n\n\"Can't we just sit in the sun for a little while longer?\" she asked. \"I feel like I have been walking in that dark forest for days.\"\n\n\"We have to go,\" Simon said sternly looking up at the big white bird. \"There's a storm coming, and I want you safe and secure at home when it hits.\"\n\n\"Okay,\" she sighed and felt strangely frightened by the mention of the storm. She stood teetering on the edge of the ledge, and Simon reached out a hand to steady her and stop her from falling. The hand was ice-cold, and she shrank away from it, but he gripped her tightly. She looked over her shoulder into the waterfall and felt a warmth emanating from the clouds of mist and spray. \n\n\"Don't leave me. Please don't leave me,\" echoed up from the bottom of the chasm.\n\n\"Greg?\" she tried to pull her hand back struggling with Simon as she looked down into the waterfall. The large white bird swooped down to dislodge the icy hand that held her tightly. Struggling, the grip loosened then she teetered backwards and fell. She opened her mouth to scream...\n\n*****\n\n\"Greg?\" Amy opened her eyes blinking into the sunlight. \"You didn't leave?\" she sounded confused.\n\n\"I love you why would I leave?\" Greg said with more cheer than he felt. He certainly had considered it more than once over the last few days as she lapsed in and out of consciousness. \"You need to eat something while you're awake,\" he said picking up a cup of warm soup and handing it to her.\n\n\"Amethyst,\" Patrick said in a soft loving tone.\n\n\"Daddy you came?\" she smiled. \"Where's Mum?\"\n\n\"I'm here drink your soup, your father has something to tell you,\" Shelly said in a no-nonsense tone and Amy turned her eyes back to her father.\n\n\"Greg tells me you have been dreaming of the waterfall?\" Patrick asked rhetorically and watched her nod as she took a sip of the soup.\n\n\"When you were younger something dark and tragic happened there. I took that image of the waterfall and bathed it in white light so brightly that it would drown out all that tragedy and darkness. I made it a safe place for you, a place free of the awful memories that haunted you at the time,\" Patrick paused and let Amy take that in.\n\n\"So he was right you did take away my memories?\" she accused.\n\n\"With very good reason,\" he said unapologetically. \"If I attempt to hypnotise you and undo that subconscious block you have concerning the events at the waterfall you will be in such a deep state of sleep we may not be able to bring you back. Simon may well take over; do you understand?\"\n\n\"He already has!\" Shelly cried. \"She's barely been conscious for a week.\"\n\n\"A week?\" Amy shook her head and looked at Greg, who she now saw had dark circles under his eyes. He nodded in confirmation. \"I heard you in the waterfall,\" she stroked his face. \"Thank you for believing in me and bringing me back. I know this must be difficult for you.\" \n\n\"You know me, show me proof, and I'm a believer,\" he smiled lopsidedly. \"I've seen some strange things over the last few days, but it doesn't' change how I feel about you. I'm here for the long haul remember.\"\n\n\"Stay with me?\" she asked.\n\n\"I'm not going anywhere,\" Greg smiled and kissed her. \n\nIt was hard for her to believe she had been wandering in the darkness for a week before finally finding the waterfall. She hadn't remembered waking up at all since being on the daybed, but she assumed she must have by the way they all talked. It was frightening to know she wasn't in control of her world or her body.\n\n\"Halloween is in two days?\" She asked her mother who nodded. \"You have a plan then?\" Again her mother nodded without saying anything. \"Daddy, just do what Mum wants you to, I trust her to look after me, and as long as Greg doesn't let go, I will be fine.\" She held his hand in hers and squeezed gently. \"I want my memories back, how can I know what to do if I don't have all the information.\"\n\n\"I agree,\" Greg said. \"Amy has the right to face Simon knowing what he did to her.\"\n\n\"I want my memories back,\" she said quietly, shocked by Greg's words. The name seemed strangely familiar but once again the holes in her memories swallowed the information, and it was no more.\n\n\"We thought we were doing the right thing at the time, hiding them from you,\" Patrick said. \"Maybe we could have handled it differently, but no parent wants to stand by and watch their child suffer unnecessarily.\"\n\n\"I understand, but I need to remember, it can't be worse than this,\" she said helplessly looking around at the people who loved her.\n\n*****\n\nAmy sat on the edge of a footbridge looking down into the chasm below. It was a long drop and clouds of misted spray rose up obscuring the white water at the end of the waterfall. It looked soft and comforting. She wasn't afraid to be perched on the edge of the rickety bridge high above the falls. There was no cliff or stone outcropping she was on a bridge, and she remembered it. She looked up into the bright white light above her and felt its warmth and life. That warmth and light she knew was pure love from her family, especially Greg. \n\nImages of her childhood and adolescence flickered through her mind like a short movie and she smiled as Simon walked across the bridge toward her, she wasn't afraid of him. \"I remember you,\" she said quietly.\n\n\"I know,\" he came to sit beside her. \"I can feel it.\" \n\nShe shivered as the cold wind that seemed to accompany him blew around her. She gripped the railing and felt it crumble under her fingers. \n\n\"No!\" He reached forward as if to grab her hand. \"You'll fall again. Come off the bridge, come with me,\" he pleaded with her staying within the shadows of the trees at the edge of the bridge.\n\n\"Let's just stay and talk for a minute, my memory is still a little foggy,\" she gave a half-hearted smile not wanting to leave the warmth of the light she sat in. She saw him nod, but he came no closer to her. \"My memories are just starting to come back. Patrick removed to image he covered them with.\"\n\n\"We grew up together, loving each other. We were best friends from our first days at school,\" he said wistfully. \"I have loved you all my life Amethyst. I will love you for all eternity,\" he said softly watching her carefully.\n\n\"I remember,\" she laughed. \"Do you remember our first time?\"\n\n\"Best day of my life,\" he laughed with her. \"We could relive it here, we did get better at it over time, or at least I learned some self-control,\" he said genuinely happy that she remembered what they had meant to each other.\n\n\"I don't remember being here with you, though. I don't remember this place at all from those times,\" Amy said with a frown. \"Before when the railing came away you asked me not to fall again. Did I fall here before?\"\n\n\"You don't remember being here? Even now?\" Simon asked his face darkening and the air around her dropping further in temperature.\n\n\"I don't remember, honestly!\" Amy said, a sense of panic rising within her. She knew there was a danger in remembering that day, and she didn't understand what it was. She felt herself slipping and the air around her tightening its grip as if to stop her from escaping his darkening mood.\n\n\"Try to remember!\" he demanded making her look at him. \n\n\"I am trying, I asked Patrick to give me back my memories but,\" she shook her head feeling helpless again. She knew she had loved Simon once. She stared at him blankly trying to fathom why he was here scaring her and making her choose between life and death. The noisy rush of life that was the waterfall became louder as she felt the warmth of the sun again for a brief moment and she closed her eyes. \n\n\"Try to remember. We have loved each other deeply for the longest of times. Look into my face and try to remember,\" Simon begged Amy. \"They tried to stop us from being together. You must remember why I came here,\" he yelled at her. \n\n\"I don't so tell me instead of playing these games,\" Amy was becoming frustrated with the holes in her memory.\n\n\"Your parents sent you to visit your grandmother, to separate us. I bought a bike and rode for days to get here to see you,\" Simon said angry that she didn't remember how much he loved her and what he had done to get here and see her. \"I need you to remember that you loved me, that you wanted to be with me, no one else. Not now not ever!\" Simon growled and grabbed at Amy. She fought against his touch and opened her mouth to scream, but closed it again abruptly. \n\n\"I do remember. I did love you. I just don't remember why we came here. I don't know what it is you want from me,\" Amy sighed. \"You're dead, I'm not, tell me why you're playing these games with me!\"\n\n\"I was never the one who played games. You came here to meet someone else, he got here too late,\" Simon sneered. \"He didn't even care enough to be on time for your rendezvous.\" She followed his hand to where he pointed at the picnic area below the falls and saw a young man enter and call her name. He can't see us. We were gone by the time he showed up.\"\n\n\"That's my cousin, Keith,\" Amy said horrified by what Simon was saying. \"He worked here for the new owners.\" The memory flashed into her head. \"You were following me?\" Memories started to crowd in on her of that day making no sense and adding to her confusion.\n\n\"You didn't want me here, what else was I supposed to think,\" he raged.\n\n\"This is why I wanted a break, Simon. I couldn't do anything without you accusing me of cheating. It's ridiculous. I loved you, and you ruined everything by stalking me here to meet my goddamn cousin!\" She was angry now. \"What happened did you followed me onto this rickety bridge and picked a fight with me over some imaginary guy you dreamed up on your own?\" She stood to face him. \"Keith was my cousin, my friend, my family! What happened Simon? Did you push me? Force me over the edge? Decide that if you couldn't have me, no one could in some melodramatic moment of despair?\" \n\n\"I didn't mean to,\" he cried loudly. \"How did I know who he was?\"\n\n\"You should have known who I was and trusted me,\" she accused. \"You should have left me alone like I asked. You came here to kill me and thought you had succeeded,\" she spat. \n\n\"I never meant to kill you. I didn't come here to kill you. Things got out of control,\" Simon cried out in guilt and anguish faced with her anger and accusations.\n\n\"So what now? Do you plan to kill me again so that I can walk in the darkness with you forever?\" She asked. \"That will never happen because I will never forgive you. I loved you once but I never will again. Even with my memories, our love paled in comparison to what I have now. Look at me, look at my face, I'm older than you, I've changed. I'm not the same girl you loved and who loved you. Let me go, get out of my head and leave me alone,\" she demanded. \"I will never be yours again.\"\n\n\"That's where you are wrong!\" Simon stepped out of the shadows onto the sunlit bridge with her closing the distance between them in a just a few quick strides. He grabbed her then and spun her to face him. \"I plan to save you. Save you from your meddling parents and that loser Greg who fucks you all the time!\"\n\nAmy was frozen to the spot, not just by his words by the sheer sight of him. Simons translucent skin was stretched over an emaciated physique like some day of the dead parody. His dark hair had grown and hung limply to his shoulders, and his hollow eyes looked large and round in the skeletal face.\n\n\"When you fell I thought you were dead and searched for days with the emergency services,\" he admitted. \"When they finally called the search off I followed you into the darkness, only you weren't here! You left me here on my own! So now I have brought you here to spend eternity with me. Where no one and nothing can come between us again.\"\n\n\"You can't keep me here, Simon,\" she tried to reason with him hiding her revulsion. \"I don't love you anymore.It's been too long. I'm a different person now. We were just kids, I've grown up since the day you ruined both of our lives. I don't love you anymore,\" she repeated.\n\nAmy looked down into the swirling clouds of mist below her. She understood now that falling was her way to escape Simon and this place. She knew the people who loved her waited there. \n\n\"I can keep you here trapped for all eternity,\" he snarled. \"You will learn to love me again!\"\n\n\"You could, but this place isn't real, nothing about this is real. Why would you want this?\" Amy asked. \"Every time you bring me here you will have to relive my death,\" she said sadly. \"I can forgive you for the fight and making me fall from the bridge. I can forgive you for killing yourself and leaving me with the guilt of knowing you did that because of me. I can forgive you all those things and remember with love and warmth for all that we shared. If you trap me here, though, I will only remember the jealousy and possessiveness that destroyed our love in the first place. Look at yourself, do you think I won't recoil whenever you try to touch me?\"\n\n\"Then I would rather you were dead than see you love someone else!\" Simon raged and advanced on her. \n\nIn panic, Amy stepped off the bridge opened her mouth and called Greg's name hearing it echo around her. The darkness chased her downwards, and she heard Simon's whispering word, \"Sleep.\"\n\nThis time, she did not wake when the mist surrounded her. Instead, she seemed to stay in that insubstantial whiteness just out of reach of the ominous dark cloud that was Simon for what seemed an eternity.\n\n*****\n\n\"I'm here,\" Greg said gently cradling Amy in his arms. \n\n\"You might be, but Amethyst isn't\" Simons deeper rasping voice spoke into Greg's ear making him drop her. \"You can go home now. Amythest has decided to stay with me.\"\n\n\"So what's the plan, Simon? Keep her trapped there with you for a few days until she dies of dehydration and starvation? Then be separated from her forever?\" Patrick said matter-of-factly. You know someone as sweet as Amethyst would never be doomed to walk the void with you,\"\n\n\"Better option than letting him have her. You know he fucks her? Treats her like his own personal whore? You should see the things he does to her. It's not me you should be worried about here, old warlock,\" Simon growled.\n\n\"I've never seen her happier or more in love,\" Patrick shrugged. \"She's a grown woman with a healthy sex life. Greg seems like a reasonable guy, and he obviously loves her or else he would have run for the hills weeks ago when you showed up.\"\n\n\"What's he fucking you now too with that giant cock of his?\" Simon sneered. \"You sound like your in love with him too.\"\n\n\"Can't say that I've had the pleasure,\" Patrick chuckled. \"Impressive,\" he clapped Greg on the back trying to get him to snap out of the stunned look he was giving Simon. \"So was that the plan, Simon? We get rid of Greg, and you give her back to live like a nun for the rest of her life?\"\n\n\"Sounds like a plan but not what I had in mind. This is no longer a negotiation, Patrick. Leave her alone. I have her now,\" Simon threatened, and Amy's body went limp again as he departed.\n\n\"We gave her the time and information, but he was too strong. It's time to act and if you don't I will,\" he spoke directly to Shelly.\n\n\"Greg carry her to the small courtyard in her room,\" Shelly instructed ignoring Patrick with a shake of her head.\n\n*****\n\nAmy felt the mist beneath her strengthen and become solid as if she lay on a ledge with her feet dangling off the edge. She concentrated on the feeling, and the mist began to evaporate to show her on a ledge within the waterfall. The spray spread over her and her feet dangled into the rushing water making it bubble around her calves.\n\nThe great white bird appears above the waterfall again, and she marvelled at it as it flew higher. As she watched, small flaming specks dropped down toward her, and she realised the bird was flying too close to bright white light that kept her from the darkness surrounding her. The feathers flamed out in the spray of the water and the bird now fully alight with fire swooped and dived down toward her.",
        "\"No!\" she cried. Standing up to lift her arms in the hopes of catching the bird and putting out the fire. The closer it got the more the flames rained down on her along with the waterfall.\n\n\"You're awake I see,\" Simon smiled standing behind her in the shadow of an overhanging ledge. \"It seems the mother hen is not ready to let her chick fly.\" He looked up at the diving bird.\n\n\"Mum?\" Amy asked confused.\n\n\"I don't imagine Patrick would ever be altruistic enough to set himself on fire to help you,\" Simon laughed. \"They don't realise that you never believed as they did in the power of the coven. They are trying to save you with their silly little spells and non-existent magic.\"\n\n\"I hated being different. I let you mock them because I didn't like being teased. I was always trying to prove I was different to them. I closed myself off from their earth magic despite having seen it at work. I just wanted to be normal,\" she admitted sadly.\n\n\"Let me mock them? You were worse than I ever was. You gave the old warlock his name not me,\" Simon said pointedly.\n\n\"I guess I never appreciated the gifts they gave me until now,\" Amy admitted. She bent and took off her shoes holding them in each hand. I never understood the joys of dancing on the earth barefoot in the crisp night air as they did,\" she twirled around laughing. \n\nSimon watched her in bafflement daring to hope that she had accepted her place here with him. She seemed younger and carefree as she danced and laughed on the edge of the ledge that jutted from the side of the waterfall. He saw the girl he had been in love with his whole life for the first time in years, and he relaxed his guard the waterfall slowing from the flooding rainswept torrent to an easier fall. \n\n\"I loved you Simon and could have remembered you given time, fondly but to do this? To imprison me here and curse me to a life I didn't deserve. It's too much, and no matter how much you want it otherwise, I don't want to be here with you. I want to dance in the sunshine with my family and friends,\" Amy said trying one last time to make him understand while keeping a keen eye on the shoes she held in her hands as they filled with flaming feathers that sputtered and reignited as the next one fell. She danced around trying to catch them all.\n\n\"You will learn to love me or die,\" he said the malicious sneer returning to his voice.\n\n\"I have other plans I'm afraid and they involve marrying Greg and starting a family. Things you can't offer me here,\" she said knowing it would hurt Simon.\n\nHe stepped out of the shadows enraged by her words and advanced on her. His skeletal face showing all his rage and frustration with her. She waited until he was close, enough to be standing on the muddy ledge with her and the cool spray of the water coating him in the same sheen of moisture she wore.\n\n\"If spirits threaten me in this place,\" Amy began to chant the spell she had been taught as a child to rid herself of monsters under the bed. \"I will fight water by water,\" the waterfall thundered deafeningly around them. \"Earth by earth,\" the mud appeared to trap Simon's feet and his advance on her stalled. \"Air by air,\" a warm breeze seem to eddy around them tugging at their hair and clothes.\n\n\"No!\" Simon cried out pulling his clothes tighter and crouching down as if to protect himself.\n\nShe could see Simon struggling to hold his form as the warm wind stripped away the icy coldness of his death. \"Fire with Fire!\" she threw her shoes at him hoping there was enough flame to do the damage required.\n\n\"Stop!\" Simon groaned holding up his hand to protect himself from the flame and keeping it suspended for a few moments longer. She could see he was losing his battle as he glared at her and stood. \"You are not a witch. You do not believe in this hocus pocus. Stop this now!\" He roared. His lips were beginning to peel back from his teeth, and his translucent skin seemed ashen and turned a strange colour. He lost his battle with the elements, and the fire leapt toward him.\n\n\"Banish Simon's soul to nothingness and remove his powers over me until the last trace. Let his evil flee through time and space. Let me return to my rightful place.\n\nShe watched dispassionately as Simon melted before her eyes into a sticky puddle of goo. She stood transfixed for a long time watching the water wash him from the ledge and the landscape of her life. She felt free. She felt powerful. She felt strong, and she looked up hoping to see the white bird. It flew high above the falls now, and she smiled. \"I'm coming home mother,\" she said knowing she meant it in more ways than one. Then she stepped from the ledge.\n\n***** "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "possession",
        "haunted",
        "witch",
        "warlock",
        "ghost",
        "waterfall"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/amethyst-2"
}