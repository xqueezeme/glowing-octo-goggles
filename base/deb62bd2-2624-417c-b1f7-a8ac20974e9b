{
    "title": "Dream Drive Ch. 07",
    "pages": [
        "Author's Note:\n\nAll aspects of the story are fictional. All characters that participate in sexual activity are over the age of 18.\n\nEdited by Expoh and AnnabelleFalls13.\n\n<p style=\"text-align: center;\">****</p>\n\nStrength - 100 +10 (+10%)\n\nVitality - 185 +19 (+10%)\n\nAgility - 43 +2 (+5%)\n\nCompulsion - 0\n\nPersuasion - 0\n\nSpirit - 40 +10 (+25%)\n\nHealth -- 248.00/248.00\n\nEssence -- 123\n\nCarry Weight -- 28.4/59.0\n\n<p style=\"text-align: center;\">****</p>\n\n\"Now,\" Hanta said, \"I've said this before, with other words. But the reason a spear is good is because it is long.\"\n\n\"Analyze,\" Jackson murmured.\n\nA transparent screen blossomed in front of him.\n\n\n\nName: Hanta\n\nStatus: [NPC]\n\nFactions: People-Under-the-Mountain, The Windseekers\n\nTalents: Strength, Agility\n\nNotable Skills: Spears, Shields, Knives, Archery, Grappling, Hunting, Weapon Crafting, Tool Crafting, Leatherworking\n\n\n\nHanta's stats were revealing, but expected. Jackson wondered if there was a way to see more detail. Maybe it was just something the game wanted him to play by ear.\n\n\"Jackson, are you listening?\"\n\n\"Absolutely,\" Jackson said. He reached up and tapped the box closed. \"Just killing two birds with one stone.\"\n\n\"This is important,\" Hanta said. \"Focus.\"\n\n\"Sorry.\"\n\n\"Well,\" he said, \"I suppose I can't complain after the shield you had Shaka make me.\" The leather disk was strapped to the stocky man's back. Jackson could see the glint of the essence crystal that Shaka had embedded in its center, surrounded by several runes. He recognized them all on sight.\n\nProtect wielder from harm. Return magic unto source. Deflect weapons. Great Great Great Strength.\n\nIt made him feel a little better about his own crude healing magic. Runes were more flexible than they seemed; they weren't particular about grammar. It was more about the feeling of the words and the intent of the writer. In fact, the biggest factor when it came to enchantments was probably the spellcaster, not the spell.\n\n\"She did a pretty good job,\" Jackson said.\n\n\"Better than good,\" Hanta said. \"There won't be a warrior that can stand against me on the battlefield.\"\n\n\"It looks like it has different enchantments,\" Jackson said. \"Four of them.\"\n\n\"So it does.\"\n\n\"I thought you couldn't use magic. How do you pick the right one?\"\n\n\"Well,\" Hanta said, \"Shaka told me that when I use it, it will know what is needed. It won't draw magic from the crystal unless my body and soul acts.\"\n\nJackson wasn't sure if he'd trust an automatic enchantment. It sounded convenient, but what if the crystal ran dry of power while Hanta was doing something risky?\n\nLiving things were easier to work with, but aside from growing plants and healing, it was a limited aspect of magic. Jackson could apply an enchantment to his weapon or his clothes, writing on it like Shaka did, but to use it, he'd either have to burn his own essence or what he'd stockpiled in gemstones. And it was even trickier for someone like Hanta to use an enchantment -- without a natural magical talent, you had to use a raw essence crystal, which were dangerous to acquire. The last time Jackson had been around enemies which dropped them, he'd almost died.\n\n\"There has to be a better way to enchant things,\" Jackson said.\n\nHanta looked skeptical. \"This is already beyond me, Jackson. How could it be improved?\"\n\n\"I don't know.\"\n\n\"And neither does Shaka, or she would have given me that!\" Hanta chuckled. \"Come. We aren't here to ponder the mysteries of Shakhan, but the spear, yes?\"\n\nJackson found himself pondering. Shaka was an experienced shaman, a true medicine woman -- but that didn't mean she knew everything about magic.\n\nVuntha sighed. Hanta's son was sitting on the grass next to Jackson, leaning back on his hands. \"I tire of talking,\" he said. \"Let's spar again.\"\n\n\"Patience,\" Hanta said. \"Jackson's magic requires him to absorb knowledge this way, so that is how it must be.\"\n\n\"We can spar in a second, Vuntha,\" Jackson said. \"I'm almost there.\"\n\n\"I don't understand your scar, or your powers,\" Vuntha said, \"but if you say so.\"\n\nVuntha looked up at the mountain. And then, together, Jackson and Hanta did the same. When one person looked at it, everyone always followed suit.\n\nThe great black rise towered to their left. Looking up at the mountain was like leaning back to look at a skyscraper. It just went up, and up, and up, ending at some distant pinnacle that seemed infinitely high. The sky seemed small in comparison. \n\nNow that they were at its foot, Jackson could appreciate how abnormal it was. Aside from a long shoulder that stretched around a few foothills, the mountain jutted out of the plains all by itself, a lone stalagmite leaping from the endless green flats. The sharp slopes at its base consisted of a brittle, crumbling onyx that looked ready and willing to cut into bare feet. It gathered in mounds at the base of the cliffs.\n\nThe mountain was not natural. It was an anomaly. The only thing that came close to being normal was the fact it was the source of two of the rivers that wound across the plains, one running from either side of the slopes. It was the origin of the creek that they had been following on their long trek.\n\nThere was something about the mountain that Jackson couldn't place, something eerily attractive. It was an obelisk erected in the name of something ancient and unknowable. A dark monolith magnetized to the human heart.\n\nJackson could feel it pulling on him. It felt like a rope slithered into his body through the scar. It dove into the mark on his hand, ran through the inside of his arm, coiled around his torso. And it sat there, squeezing slightly. The pressure on his chest didn't hurt, but it damn sure didn't feel comfortable to have a lump sitting under his skin.\n\nThey'd reached the mountain four days previous. He'd grown accustomed to the sensation, but it still bothered him. He had trouble relaxing at night.\n\nHis gaze dropped. He didn't look at the peak for long; his eyes were drawn toward the base of the thing. That was where the rope pulled - under the mountain, beneath the spear of black rock.\n\nThe three of them had walked a half mile from the camp of the gathered tribes. That put them on the other side of one of the foothills, which offered a bit of privacy. Many of the other warriors that were going to participate in the games used a similar strategy to prepare themselves in relative peace.\n\nVuntha was still itching to spar. Jackson didn't blame him. Their plan was simple enough, but it had been a long wait. Anything to bleed the nerves away was welcome.\n\nBut, for the time being, they were sitting in the grass and listening to Hanta.\n\nLike before, Jackson noticed that his passive Spear skill increased when he sparred -- but it tended to jump in leaps and bounds when Hanta lectured him. They'd trained constantly for the past few days; when they were tired, Jackson sat and listened to what Hanta had to say. His skill had risen to level 97. He expected to hit 100 by the end of the day.\n\n100 was an important number. Within the context of Isis as a video game, Jackson figured there were two possibilities. There was a chance that nothing would happen, and he'd continue to level up past 100. Alternatively, he might cap at 100. If he did, he might unlock something cool.\n\nThis was not Jackson's first time playing an RPG. Passive skills were extremely important. They were foundational. His special abilities were useful tools, but overuse would transform them into permanent crutches. More importantly, they burned essence. Essence spent on Attributes were permanent investments that would follow him forever. Essence burned on active skills were one-use flares. Handy in a pinch, important to keep in mind, but not a good long-term strategy.\n\nAt the moment, he didn't have a good way of acquiring essence. The plains were relatively empty; no monsters to slay. He supposed he could kill some horses or a few bison if he really had to, but the People-Under-The-Mountain took only what they needed from nature, nothing more.\n\nEven without essence, he could still improve himself if he worked on his skills. He didn't have enough time to become the master of the universe, and, from what he'd learned so far, his investments had decreasing returns. He had to specialize.\n\nWhile his spear had more or less fallen into his lap by chance, it seemed as good a tool as any, and he'd already leveled his skill with it up quite a bit. A sidearm would help -- he still had his knives - but his current goal was to get as high-ranked in spears as possible.\n\nJackson looked at the spear resting on the ground next to him. What he really wanted to do was to go out there and get more essence, but there wasn't anywhere to get it from.\n\nWait.\n\nEssence. Chaki and Shaka could gather essence. That essence could be put in gemstones. Shaka had said gems could be used by anyone with the natural talent to use essence.\n\nWhat if he had Chaki put essence into a gemstone, and then drew it into himself?\n\nThere had been an endless essence fountain walking next to him for days on end, and he hadn't used it.\n\n\"Holy shit!\"\n\n\"Jackson,\" Hanta said, \"do you wish to participate, or not? If not, get back to camp and find Shaka. I'm sure she can put you to some form of hard labor.\"\n\nJackson looked at Hanta, then at Vuntha, then sat back down. \"Uh, my bad.\"\n\n\"Clearly,\" Hanta said. \"What was the meaning of your outburst?\"\n\n\"Something I realized about magic,\" Jackson said. \"I'm sorry, Hanta. Please continue. Even if I'm right, it can wait for a bit. This can't.\"\n\nHanta shrugged, nodded. \"It's fine.\"\n\nJackson eyed his status screen. He'd learned he could shrink and slide his status tabs around to the edges of his vision -- his HUD was fully customizable. With that, he had a constant view of whatever skills he liked. His passive spears skill sat in the bottom left corner, opposite his minimap.\n\nSpears: Skill in using spears. (Modifiers: Agi, Str)\n\n- Level: 97\n\n- Progress: 96.2%\n\nHe still wasn't sure what modifiers meant. Clearly, some attributes worked in favor of certain skills -- but what was the precise relationship?\n\nHe could investigate later. Right now, he needed to focus.\n\nWith the mountain as his backdrop, Hanta gestured. \"The spear is greatest amongst weapons because it is long, but not so long as to be unwieldy. Perhaps this seems overly simple.\"\n\n\"No, you explained well earlier,\" Jackson said. \"Winning a battle is about speed. In order to strike an opponent, you have to reach him. Therefore, speed equals distance. So, a spear is fast.\"\n\n\"And you learned well,\" Hanta said. \"There is hope for you yet.\"\n\nJackson's passive skill flicked. It jumped to level 98, with a few percentage points of progress.\n\n\"Today,\" Hanta said, \"I want to teach you three stances.\"\n\n\"Stances?\" Jackson asked. \"You haven't mentioned those before.\"\n\n\"That is because you were learning the basics,\" Hanta said.\n\n\"Basics, he says,\" Vuntha muttered. \"I haven't won a sparring match in three days.\"\n\n\"Your mouth keeps flapping,\" Hanta said, \"but I can't make out the words.\"\n\nVuntha snorted and waved a hand.\n\n\"First,\" Hanta said. \"The wolf.\" Hanta shifted himself sideways. His right hand gripped the spear at the end of the shaft; his left hand cupped it near the blade. \"The body is turned sideways to minimize the target presented to the foe. This style extends your reach and maximizes power. You are ready to step forward.\" Hanta did just that, shifting his weapon out in a basic thrust. \"But another technique.\" He went back to neutral; then, he pushed off his back foot, swinging his leg across the front of his body. He planted it forward and extended his spear.\n\nHanta returned to his original position. \"The second move takes more time, but what you lose by telegraphing your motion, you gain in reach. While I had to step across myself, I gained almost an additional full length of a spear.\"\n\nJackson nodded. \"Okay. Good at a distance.\"\n\n\"Yes, but I wouldn't recommend it in a melee, or if your opponent is aware and ready to defend. It risks your balance.\" Hanta brought his spear up to his shoulders, holding it like a baseball bat. \"A quick change to another attacking stance. An enemy will hesitate to close the distance when a spear might come down on his head. Remember, a spear has much the same prowess as a staff, if it is sturdy.\"\n\n\"What's the second stance?\" Jackson asked.\n\n\"The stone,\" Hanta said. He brought his feet closer together. Rather than hold the spear low, at the waist, he choked up and brought the weapon higher. The shaft crossed in front of his chest. \"Like so.\"\n\nJackson looked at his feet, then back up. \"Doesn't that give up a lot of your reach? I thought the whole point was the length of the thrust.\"\n\n\"True,\" Hanta said, \"but when facing an enemy of unknown skill and talent, with a strange weapon, it is better to observe than risk everything. The spear does not lie; it thrusts. Everyone knows this. Therefore, you must be cautious.\" While holding the spear mostly vertical, Hanta made quick swipes with the weapon, as if smacking away invisible attacks. \"While you have lost reach, the arms are closer to the body. This gives you more leverage, more power, quicker. It presents a barrier to weapons, shielding you from sweeping blows. A defense as strong as a stone.\"\n\nJackson leaned forward and nodded. \"Right. So what about the last one?\"\n\n\"The fang.\" Hanta drew his spear back -- far, far back, so his right hand gripped the spear in the center, and his left was all the way near the point. \"When an enemy manages to close the distance -- often, they might be using a shield -- you must be prepared to fight without your greatest advantage of reach. But truly, the spear is never at a total loss. From here, the point becomes a stabbing knife that can change angles.\" Hanta used his left hand as a fulcrum; his right hand moved about to change the position of the blade. \"And at a moment's notice, distance is regained.\" He shot his right hand forward, extending the spear in a long thrust.\n\n\"You know,\" Jackson said, \"I think I see why you have those little wingtips on your spear. They're good for fighting close, right? Catching other weapons.\"\n\nHanta smiled and tapped the small crosspiece under the blade of the spear. \"Exactly. It can knock things aside, or scoop them in, like a hook. And when fighting short, it prevents the hand from sliding up the handle and into the blade.\"\n\n\"I think I'm gonna need one.\"\n\n\"We can tie one to your spear,\" Vuntha said. \n\n\"You see, Jackson,\" Hanta said, \"the advantage of the spear is that everyone thinks they know it.\"\n\n\"...well, don't they?\"\n\nHanta laughed. \"Of course not! But how easy it is to think yourself the master of a piece of wood with a point at one end. It is simple, is it not? The spear's single attribute it its reach. Its main attack is a thrust. This is obvious. This is clear. The spear cannot lie. It can only be a spear. That is what they all think.\"\n\n\"What are you saying?\" Jackson asked.\n\n\"Versatility,\" Vuntha said.\n\n\"You are indeed my son!\" Hanta said.\n\n\"My confidence in defeating Boonta is assured with such grand words of encouragement.\"\n\n\"Don't make me whip your hide,\" Hanta said.\n\nVuntha huffed. \"For someone who makes so many poor jokes, you take them poorly enough yourself.\"\n\nHanta turned to Jackson, ignoring his son's last comment. \"Yes, the spear is versatile. It can be a knife!\" He drew it back into the fang position, holding his left hand just a bit below the wings. \"It can be a staff!\" He crossed the spear over his body, and then swung it back and forth. The shaft blurred as it gained speed, turning like the arms of a windmill. \"It can be the hand of death!\" Hanta stepped forward, and the last rotation of his weapon transformed into a thrust. He held there for a moment, and then straightened. \"The spear cannot lie, no. But it is the most articulate weapon!\"\n\n\"...heh.\"\n\n\"What?\" Hanta asked.\n\nJackson shrugged. \"Talking isn't my thing.\"\n\n\"Then let your weapon speak for you. The master does not separate the spear from himself; rather, the spear becomes part of the body. It is an extension of the spirit -- the third arm that strikes your enemy.\"\n\n\"I've never put any stock in martial arts mumbo-jumbo,\" Jackson said, \"but I guess that kinda makes sense.\"\n\n\"Don't think,\" Hanta said. He leveled the spear at his waist, and then thrust it forward. \"Act.\" He brought it back, shifted his back foot forward, and thrust again, putting his shoulders behind it. \"Move.\"\n\nA tone played in Jackson's ears. Three notes of a trumpet, rising in a cheery fanfare, and ending with the tap of a few drums.\n\nYou've reached level 100 in Spears!\n\n- Active Spear Abilities cost 10% less essence.\n\n- Spear and Polearm damage increased by 5%.\n\nYou have unlocked Spear Expertise.\n\nThree diamond-shaped icons flashed into place on the left side of Jackson's vision. Each one showed the silhouette of a spear. The first was red, the next blue, and the last was yellow.\n\nYou have learned Spear Stances. These are accessible while a spear is equipped as the main weapon.\n\nAggressive Stance [Tier 1, 0.00%]\n\n- 12% Attack Bonus\n\n- 5% Defense Penalty\n\nDefensive Stance [Tier 1, 0.00%]\n\n- 10% Defense Bonus\n\n- 4% Attack Penalty\n\nShort Stance [Tier 1, 0.00%]\n\n- 10% Agility Bonus\n\n- 5% Attack Penalty\n\n- 2% Defense Penalty\n\nYou have learned your first stances!\n\nNote: Stances are specific to each weapon type and require an Expertise-level passive skill to use. Stances provide passive bonuses to their associated weapon. Each stance comes with a drawback. With practice, stances can be enhanced. Expertise in various stances can lead to unique combat styles. Find one that suits you!\n\nJackson shot to his feet again. He expanded his passive skills window and scrolled down.\n\n Spears: Skill in using spears.\n\nModifiers: [Agility, Strength]\n\n- Level: 100 [capped]\n\n- Capped Bonuses:\n\n- Active Spear Abilities cost 10% less essence.\n\n- Spear, Staff, and Polearm damage increased by 5%.\n\nSpear Expertise: The expert use of spears.\n\nModifiers: [Agility, Strength]\n\nAmplifiers: [Power, Reflex, Dash, Technique]\n\n- Level: 1\n\n- Progress: 0.5%\n\nJackson pumped his fist. \"Fuck yes, cheaper abilities! Emil, I love you!\"\n\nHanta and Vuntha shared a look. \"Jackson?\" Vuntha asked.\n\n\"Ten percent cheaper!\" He jumped in the air and landed with a stomp. \"This fucking rocks!\"\n\nJackson settled back and took a breath. He needed Chaki - needed essence. Spear Expertise had the same modifiers as the base Spears skill. Would there be extra bonuses for the attributes that had doubled up, Strength and Agility?\n\nAnd what the hell were Amplifiers? He only had six main Attributes: Strength, Vitality, Agility, Compulsion, Persuasion, and Spirit. He scrolled through his list of passive abilities again, but he didn't see any other abilities with Amplifiers. Maybe they only worked with second-tier abilities. But even with that information, he still had no idea what they did, or even what they were.\n\nJackson sighed. He would sell a kidney for an Isis guidebook.\n\n\"Alright, Jackson,\" Hanta said, \"since you apparently have no need to sit and observe, it's time to spar.\"\n\nJackson blinked. Hanta stood, watching him, his back to the mountain. His face usually held the smirk of a man that was ready with sarcasm; now, he looked serious.\n\n\"...are you sure?\"\n\n\"Something happened,\" Hanta said. \"Your scar flashed.\"\n\nJackson looked at the star-scar embedded in his left hand. \"I didn't notice. Did you hear the music? Trumpets?\"\n\n\"Music?\" Vuntha asked. He shook his head. \"No.\"",
        "\"Hanta,\" Jackson said, \"I --\"\n\n\"I have my pride, too,\" Hanta said. \"Let me spar with a warrior of Shakhan. I wish to see how I fare!\" Hanta smiled and smacked his chest.\n\n\"Yeah,\" Jackson said. \"Let's do it.\"\n\nThey descended their side of the hill.\n\n<p style=\"text-align: center;\">****</p>\n\nBy the time they were finished, the sun was setting and Hanta could no longer lift his spear. Vuntha didn't get involved as much, as he didn't want to overly exhaust himself.\n\nJackson didn't have that problem. A few minutes lying on the grass cured his fatigue, so long as it wasn't hunger-related.\n\nAnd now they sat. Vuntha was staring up at the mountain. Jackson was staring down at it. He picked at the grass.\n\n\"Why is it,\" Hanta said, \"that you look at the bottom of the mountain?\"\n\n\"Huh?\"\n\nHanta gestured toward the field of black rock not far from where they lay. \"Everyone looks at the mountain in the same way. They look up, to the sky. It is only natural...\" Hanta's voice lowered. \"The way it pierces up, as if it is a spear meant to puncture the ceiling of the world. Shaka says it is a guidepost to the One-Above-The-Sky.\" He glanced at Jackson. \"You look down, not up. What are you looking for?\"\n\nJackson glanced at his scar. He hadn't touched it. He was afraid of touching it, ever since that first day - when he brushed it with a finger and a prompt asked him if he'd like to travel to the 9th Circle.\n\n\"Something bothers you,\" Hanta said.\n\n\"Is it normal,\" Jackson said, \"to learn as fast as I'm learning?\"\n\nHanta shook his head. \"You have an incredible talent.\"\n\nJackson frowned. He squinted at the pentagram.\n\n\"What's the problem?\" Vuntha said. \"I find myself wishing to have your ability.\"\n\n\"Yeah, but...\"\n\n\"But what?\"\n\n\"I don't know.\" Jackson let his hand fall to the grass. \"Is this right? Is this okay? What's the catch?\"\n\n\"The catch?\" Vuntha asked.\n\n\"Yeah,\" Jackson said. \"What's the downside? I mean, I've got a scar. Not a big deal. Where's the bad part?\"\n\n\"What makes you think there has to be a bad part?\"\n\n\"There's always a catch,\" Jackson said. \"Always. I haven't found it yet. It's freaking me out.\"\n\n\"They say power comes at a cost,\" Hanta said. \"You are gaining great power. You wonder at the cost.\"\n\n\"Exactly,\" Jackson said. \"I don't know what's happening to me.\" He snorted. \"I mean, I might not care so much, but I...I don't know.\"\n\n\"Hmm,\" Hanta said. \"I think I know.\"\n\nThe bond prodded him. Jackson glanced up. \"Chaki's coming.\"\n\n\"How do you know?\" Vuntha asked.\n\n\"I just do.\"\n\nLight flickered on the rocks behind them. Chaki, standing at the top of the hill, cast a distended shadow across the grass. She waved her hand, then cupped her mouth. \"Warriors! Have you finished sparring, or do you have more Death-Walkers to defeat?!\"\n\n\"Come back later!\" Jackson shouted back. \"We're busy saving the world!\"\n\nChaki's dark hair trailed behind her as she ran down the hill. A bow and a quiver were slung over her hide dress. She skittered to a halt when she reached them. \"Jackson, I have so much to tell you! I tried using my magic, like you asked. You won't believe what I can do with an arrow!\" She glanced at Hanta and Vuntha. \"Perhaps we could speak on it later, though.\"\n\n\"It's fine,\" Jackson said.\n\nHanta raised a hand. \"If it is your own business, Jackson, I understand.\"\n\n\"It's okay if you guys hear it. Besides, if I'm alone with Chaki, Shaka will show up and start peeling my skin off.\"\n\nVuntha snorted again. Hanta chuckled. \"Then I shall act as your chaperone.\"\n\n\"So, what's up?\" Jackson asked.\n\n\"Watch this,\" Chaki said. She moved away from them, closer the black rock at the base of the mountain. She drew her bow, nocked an arrow, and sighted down a boulder.\n\nShe held this position for a moment. Over the course of one or two seconds, the tip of the arrow began to shine, until it was as bright as a light bulb with the shade removed. Jackson made a tight squint; Hanta and Vuntha shielded their eyes.\n\nChaki released.\n\nThe arrow shot forward. A trail of gold traced its path through the air. It slammed into the boulder and impacted with a flash. The golden streamer marking the arrow's path hung in the air for a moment, then vanished.\n\nChaki continued to fire, nocking an arrow, holding, then releasing in quick succession. Explosive flashes struck the rock like firecrackers.\n\nChaki lowered her bow. She was panting hard; she wiped her hand across her forehead. \"Come on, come see.\"\n\nHanta was already on his feet. \"Chaki, are you alright? I do not know magic, but I know Shaka. That was several days of meditation you just expended.\"\n\nChaki gave them a tired grin. \"Not anymore. Come look at this!\"\n\nThey walked up to the boulder. Jackson's eyes widened. The head of each arrow was buried at least an inch into the rock. A blackened ring surrounded each one. He whistled in appreciation.\n\n\"I know. It punched straight through a straw target.\" Chaki set a foot on the boulder and grunted, trying to pull an arrow free. It snapped off, leaving the flint head still in the rock. She blinked for a moment, staring at the ruined shaft, then growled and threw it on the ground. \"Demons and dead suns!\"\n\n\"Watch your words, girl,\" Hanta said.\n\n\"Sorry.\"\n\n\"You should have thought more carefully before firing into a rock.\" Hanta peered at the tiny craters. \"That is something. Are you alright?\"\n\nChaki nodded. \"I'm fine. Anyway, Jackson, I was practicing with my bow, and you said to try using essence with my attacks. I tried focusing it into one of my shots. I got one of those screens -- with the see-through words! It said I learned an ability called 'Power Shot', and that it was level 1, and there was some other number with a strange symbol I didn't know.\"\n\n\"Probably the percentage,\" Jackson said. With a glance and a mental command -- he figured out he didn't need to use his fingers -- he brought up the status window. The pentagram with his attributes had her picture at the upper left-hand point. He tapped it.\n\nAn image of her appeared in front of him. It displayed her with her bow in hand, draped in her bison-skin dress, rotating slowly.\n\nChaki, the Dancing Huntress (Level 7)\n\nTalents: Agility, Persuasion, Spirit\n\n\"...I still can't see anything, but it says you're level 7 now. Try opening your status window.\"\n\n\"Um...\"\n\n\"Say game menu.\"\n\n\"Game menu?\" Chaki asked the air. A screen blipped in front of her. \"Oh, it's me! Wow...oh, there's a picture of you. Right, I'm that point on the star.\"\n\n\"Go to your abilities.\"\n\nChaki lifted her finger. \"Um...how do I do that?\"\n\nJackson made a face. \"How about the big tab that says abilities?\"\n\n\"Don't give me that look. I don't know about any of these...electronics, things.\"\n\n\"Did you forget how to read, too?\"\n\n\"You may take your words and shove them down your throat,\" Chaki said. She ignored Vuntha's sniggering and touched the button. The list of her active abilities took up the center of her menu. It was short -- only the one ability.\n\nPower Shot: Imbue an arrow with more force, giving the attack extra damage and increasing its chances of piercing armor.\n\n- Essence Cost: 15\n\n- Level: 9\n\n- Progress: 57.5%\n\n\"Level 9!\" Chaki clutched her bow to her chest. \"I'm getting stronger! This is amazing!\"\n\nJackson made a small smile. It was the first time he'd seen Chaki so excited about this aspect of their relationship. \"It's cool, right? This is why I like video games.\"\n\nShe pointed. \"Is that the percentage you mentioned, at the bottom?\"\n\n\"It's your progress to the next level,\" Jackson said. \"You leveled up fast because you were using essence to practice. I did some experiments, and that works better than doing it without essence. And doing it in a live situation helps even more.\" He squinted. \"That seems too easy for you, though, because you can restore your essence all the time. I bet it's capped by your overall level.\"\n\n\"So, I have to make myself stronger as a whole before I can progress far in any one area.\" \n\n\"I think that's it exactly,\" Jackson said. \"You sure you're okay on essence?\"\n\nChaki sat on the grass, folding her legs beneath her. She rested her hands on her knees. \"In a few minutes, I'll be back to normal. I can absorb essence incredibly quickly now.\"\n\n\"Chaki,\" Jackson said, \"what happens if you use too much essence? I asked Shaka once, and she said...well, that you'd die.\"\n\nHanta and Vuntha had been quiet. Their heads swiveled, trying to keep up with the game chatter. At that comment, their eyes widened.\n\n\"It's not guaranteed, but it's bad,\" Chaki said. \"If you use essence you do not have, your body pays the price. If you are not strong enough, you could die.\"\n\n\"So...\" Jackson's eyes flicked up to his status bar. His essence sat at 123. His health was full, now 248 points. If he overextended and used more than 123 essence, he'd pay for it in health. \"I get it. I'll be careful.\"\n\n\"How was your practice?\" Chaki asked.\n\n\"Very productive,\" Jackson said. \"I'll tell you in a second. I want to try something.\" He drew a gemstone out of his pocket; a ruby he'd bought on his trip back to Earth. It was small - barely the size of the tip of a pen. It was set in a plain metal band. \"Can you charge this with essence?\"\n\nChaki nodded. \"Where did you get this?\"\n\n\"The pawn shop next to Al's.\"\n\n\"I didn't know you could acquire them that easily.\"\n\n\"They're costly,\" Jackson said. \"But easier than digging them up.\"\n\nChaki held the ring in both her hands and focused. A gold-hued glow flickered to life around the ruby. Jackson could sense her effort; it pulsed at him, almost like a magic spell. Chaki held there for a moment, eyes shut tight, and then released it. \"Not much. It can hold a little more.\" She slumped a bit. \"Give me a moment. I need to recover.\"\n\n\"That's plenty already. Here, let me see.\" He took it back from her. It felt like an essence crystal, now -- raw energy, ready to go. It wanted to go. The essence was churning inside the ruby, eager to be used for something.\n\nHe clenched it with the same sort of mental grip he used for his own essence and pulled it into his core. It was sucked into him in a heartbeat. Easier to take than to give. He looked up at his essence bar.\n\nIt was now divided into two parts. A dark blue section -- the same as before -- contained the same number, 123. A smaller baby-blue bar was seated on top of it with the number 22.\n\nHe opened his menu and touched the pentagram to open his attributes screen. The six categories appeared at each point of the black star, with Spirit in the middle. Each one had a slider underneath it that let him contribute essence.\n\nOne line at the top of the screen told him everything he needed to know.\n\nAvailable Essence: 123\n\nJackson sighed. \"You win some, you lose some.\"\n\n\"What?\" Chaki asked.\n\n\"I thought I'd be able to use that essence to make myself stronger,\" Jackson said, \"but I can't. Only the stuff I earned myself can be put into Attributes. I can probably burn this for abilities or enchantments, though. Nothing to complain about.\"\n\nChaki thought for a moment. \"...I see what you mean. That is a shame.\" She smiled. \"I will have to give you all you can hold.\"\n\n\"We'll leave a little wiggle room, just in case I get more somehow,\" Jackson said. \"But we can fill up all the gems.\"\n\n\"Then we shall.\"\n\n\"You need a hand up?\"\n\nChaki smiled, and raised her hand. Jackson pulled her up.\n\nShe shot off the ground too-fast, waved her arms around dramatically, stumbled into him, and kissed him on the cheek. She drew her head back, leaving her arms wrapped around his shoulders. \"Oops! That was clumsy.\"\n\nHanta rolled his eyes. \"Accidents happen. Now separate before Shaka decides to kill me.\"\n\n\"Shaka isn't here.\"\n\n\"The woman can sense these things,\" Hanta said. He glanced up the hill with a haunted look. \"I swear by the One-Above. I don't know how she does it, but she does.\"\n\n\"It's not just you,\" Jackson said. \"She has a sixth sense.\"\n\n\"Thank goodness. No one else believes me.\"\n\n\"Don't encourage him,\" Vuntha muttered.\n\n\"Save your breath, son. You'll need it during the race.\"\n\nVuntha grinned and exchanged a knowing look with Jackson. \"I'll have breath to spare.\"\n\nChaki eyed the two of them. \"What are you planning, exactly? You're not going to cheat, are you?\"\n\n\"What?\" Jackson said. \"Of course not. What makes you say that? I'd never cheat.\"\n\nChaki stared at him. Her suspicion floated through their bond like a fog. \"I don't believe you.\"\n\n\"We should be getting back to camp,\" Jackson said. He started up the hill at a brisk pace, putting the mountain at his back. \"I need something to eat. You hungry, Vuntha?\"\n\n\"Starving,\" Vuntha said. \"I hope we're having soup tonight. I'm sick of wasna.\"\n\n\"I love that stuff.\"\n\n\"I'm surprised you like it. Most traders that pass through the tribes seem to avoid it.\"\n\n\"Guess I just have good taste.\"\n\nChaki kept pace with them. She was still giving Jackson a look, but she allowed the change of subject without further prodding. Jackson figured she wasn't going to prod too much either way. She wanted to see Boonta fall on his flat face as much as he did.\n\nThey crested the hill.\n\nSpread below them was a sea of tipis, campfires, and milling people. Over ten thousand of the People-Under-The-Mountain had gathered for the Meet. The tipis were roughly divided into fat, disorganized circles, each one marking one of the five tribes. The dark shoulder of the mountain swept out behind the chosen campsite, embracing the north and east sides of the camp. In the distance, the herds of horses were being led over the grasses, swept here and there under the watchful eyes of the herdsmen.\n\nAfter five days, lanes had been beaten into the grass along the borders of the groups - not by intent, but by the sheer number of people walking to and fro. The tribes traded and interacted incessantly. It was like one big family reunion, with political maneuvering injected somewhere between.\n\nMost of the tribes had one specialty or another. The Dust-Gatherers made pottery from the clay-rich soils in their territory. The East Walkers often traded with more sedentary farming villages on the other side of the plains from the empire of the Iron Men. The Windseekers and the Drawn Bows were both exclusively bison hunters; they were the most mobile in pursuing the herds. The Three Hills, on the other hand, were much more stationary; they had established farming villages and the largest overall population. The other tribes swarmed around their central position, hawking their gathered and crafted goods in exchange for dried fruits and vegetables.\n\nA thick plume of red smoke rose from a large tent central to the gathering. It looked like a cluster of tipis connected by a thick hide awning. That was where the elders and the spirit guides had been meeting every day to discuss the affairs of the People. Everyone gave the meeting space a respectful distance; while the smoke burned red, the discussions were private.\n\nShaka avoided talking about the meetings. She told them that war with the Iron Men was a major topic, but no more.\n\n\"Either way,\" Chaki said to him, \"make sure you eat well. You will need all your strength tomorrow.\"\n\n\"Heh, yeah.\"\n\nThey were still a good walk from the camp, so Jackson pulled his foldout screen out to study his rooms. Maybe it was the daily beating he'd suffered on his hands and wrists, but his hands seemed empty if he wasn't doing something while on the move.\n\nThe screen jumped, then buzzed. It shut off.\n\nJackson tapped it a few times. Nothing happened. He sighed, then let it snap back into the wristband.\n\n\"What's wrong?\" Chaki asked.\n\n\"I think it just needs a charge,\" Jackson said. \"I'll plug it into the solar panel later on. I must have forgot last night.\"\n\n\"Right, electricity,\" Chaki said. \"I don't understand how you question the soul, but you believe in little buzzing electrunes.\"\n\n\"Electrons.\"\n\nChaki waved him off. \"If you say so.\"\n\n\"If you're going to learn physics, you'll have to learn about them eventually.\"\n\n\"Math is not physics.\"\n\n\"Yeah, but you want to apply it, right?\"\n\n\"We can discuss that once I have a strong foundation,\" Chaki said. She smiled. \"I'm training in magic and math. I feel like I'm a novice again, learning my first runes.\"\n\n\"Don't remind me. My fingers still hurt.\"\n\n\"Poor Jackson. Did you forget a rune or three?\"\n\n\"More like a rune or twenty,\" Vuntha said.\n\nThey both started chuckling at their own wit. Jackson made a face. \"Yeah, yeah, laugh it up.\"\n\nThey reached the edge of the tents. Hanta went off in another direction -- something about checking on the horses.\n\nAlmost immediately, they were accosted. Jackson sighed. The word had gotten around that he wasn't interested, but it didn't stop some of them trying.\n\nA young woman presented herself in front of them. She was a little older than Jackson's age -- maybe her early twenties. Her brown hair was done in a traditional braid woven with beads; a necklace of feathers was strung around her neck. She had a small but bright smile.\n\nShe clasped her hands and bowed. \"Might I have the honor of meeting Tatanka Ska?\"\n\n\"Yeah, that's me,\" Jackson said.\n\n\"My name is Katha. I am of the Three Hills.\" She let her hands fall. \"Might we speak together?\"\n\n\"I'm not sharing my tent with anyone, if that's what you want to talk about.\"\n\nThe girl drew back slightly. \"I had heard that was so, but...I thought perhaps I might draw your attention.\"\n\n\"I mean...\" Jackson looked over at Chaki. She had her arms folded and her nose stuck so high in the air it might get caught in a passing cloud. Her face had a look that said I am going to ignore this but you had better not do anything. Or else.\n\n\"Yes?\" Katha said.\n\n\"You're, um, pretty,\" Jackson said. He cleared his throat. \"That's not it. I mean, I just don't do that. That sort of thing.\"\n\n\"I see. My husband wanted to know if some of Shakhan's strength would be passed to him.\"\n\n\"I don't think it works like that.\"\n\nKatha smiled again, and bowed. \"I had guessed this would be your answer. Thank you for not ignoring me. I wish you luck in the games.\"\n\nJackson found himself smiling back. \"Thanks, Katha. Sorry.\"\n\n\"No apology is needed.\" She turned and walked back toward her own encampment.\n\n\"You took your time rejecting her, didn't you?\" Chaki said.\n\n\"I'm not used to being propositioned by random strangers, alright? Can we just pretend this isn't happening?\"\n\nVuntha shook his head. \"I don't know why you snivel up to Chaki in this, Jackson. If a husband wants to let you borrow his wife so that he can share in your strength, it's your business, not hers.\"\n\n\"Jackson's culture doesn't work like that,\" Chaki said.\n\n\"You're just jealous.\"\n\n\"Um,\" Jackson said, \"I think --\"\n\n\"Jealous?\" Chaki said. \"We aren't yet wed. Their approaching him disrespects our engagement.\"\n\n\"Right.\"\n\n\"I'm not jealous.\"\n\n\"You seem pretty annoyed for someone who isn't jealous.\"\n\n\"Did you become the spirit guide while I wasn't looking, Vuntha?\"\n\nVuntha snorted. \"I don't need to be one to see what's right at my feet.\"\n\n\"Perhaps your eyesight needs a forceful adjustment.\"\n\n\"Look,\" Jackson said, \"I told you on the first day here I wouldn't do anything.\"\n\n\"I don't get to tease Chaki often,\" Vuntha said. \"Let me have my fun.\"\n\n\"It isn't funny,\" Chaki said.\n\nJackson sighed and rubbed the back of his neck. \"I never thought I'd get the chance to be a gigolo. Or that I'd turn it down.\"\n\n\"A what?\"\n\nJackson sighed again. \"It doesn't matter.\"\n\n\"You're so possessive, Chaki,\" Vuntha says. \"How will you deal with Jackson's second wife?\"\n\nJackson felt a flash of alarm. \"Who said I want a second?\"\n\n\"Oh, please,\" Vuntha said. \"You're a powerful warrior. You'll have a second wife sooner than most. You would have taken Katha if Chaki wasn't standing behind you with a knife.\"",
        "Chaki's words were through gritted teeth. \"We can discuss that topic once he has his first wife.\"\n\n\"I hope you're not talking about yourself.\"\n\n\"Is there some other competitor I'm not aware of?\"\n\n\"I think half the women in the camp are proving themselves to be so,\" Vuntha said. \"Tread carefully, Chaki. Maybe Jackson will take a woman that doesn't pull on him so hard.\"\n\n\"That's not gonna happen,\" Jackson said quickly.\n\n\"Vuntha, I swear,\" Chaki said, \"if you keep running your mouth, I will break your spear off in your ass!\"\n\nJackson was taken aback. Vuntha put a hand on his stomach and started laughing. \"This is too easy.\"\n\n\"Please stop,\" Jackson said.\n\n\"But it's so much fun.\" Vuntha sighed, then paused. He seemed to be considering his next biting remark, but instead of speaking, his head turned, slowly.\n\n\"What?\" Chaki asked. \"Did you decide that the continued health of your bowels was more important than moving your jaws?\"\n\nVuntha didn't answer.\n\nJackson frowned. \"What's up?\"\n\nVuntha gestured behind them. \"Drana.\"\n\nJackson found her in the crowd. Chaki's friend was making her way through the tipis. He glanced at his friend; Vuntha's gaze lingered on her.\n\nChaki's half-feigned indignation fell away. \"Perhaps you should speak with her.\"\n\nVuntha's hands worked on his spear. He licked his lips. \"You said she seemed upset.\"\n\n\"She was,\" Chaki said. \"Maybe...she will hear you, I think.\"\n\n\"Yeah. I should.\" Vuntha rubbed a hand through his hair. \"I should say something.\" \n\n\"Have confidence,\" Chaki said. \"I'm sure she has feelings for you.\"\n\n\"Alright. I'm going.\" He walked off after her.\n\nChaki looked at Jackson. \"Want to see what happens?\"\n\n\"Not really,\" Jackson mumbled.\n\n\"What?\"\n\n\"Maybe we shouldn't poke Drana,\" Jackson said more loudly. \"You guys got in a fight, right?\"\n\n\"Well, yes,\" Chaki said. \"She should have known better.\" Jackson decided not to point out that Chaki had been in tears over it a few days ago. \"Anyway, I want to know what Vuntha says to her.\"\n\n\"Or maybe,\" Jackson said, \"we should let their business be their business.\"\n\n\"Nonsense. You need to get into the role of a spirit guide, Jackson. Everyone's business is our business.\"\n\n\"I noticed.\"\n\n\"Don't take that tone with me.\" Chaki planted her hands on her hips. \"I'm going. If you want to stick yourself in the mud and wallow, you are welcome to do it. I'm sure my mother will be happy to have an extra hand to fix dinner.\"\n\nChaki started off. Jackson did a bit of wallowing, sighed, and jogged to catch up with her.\n\nThey found Vuntha coming up on Drana at the far edge of the tipis, where the noise of the crowds and trading faded to a distant murmur. Chaki crouched low behind a tent as Vuntha called for Drana's attention. Jackson kneeled down behind her.\n\n\"This is stupid,\" Jackson said.\n\n\"Shh. I can't hear.\"\n\nJackson held in another sigh.\n\n\"Drana,\" Vuntha said.\n\nChaki's somewhat shorter and curvier friend turned to face him. \"Vuntha. I haven't seen you lately.\"\n\n\"I...wasn't sure how to speak with you,\" Vuntha said. \"I heard Boonta proposed.\"\n\n\"He did.\"\n\n\"But you did not accept him.\"\n\n\"No. Neither way.\"\n\n\"I see.\" Vuntha rolled his spear in his fingers. His mouth worked slightly, but no words came out.\n\n\"Did you have something you wished to say?\" Drana asked.\n\n\"I...yes. Nothing that requires an answer,\" Vuntha said. \"I only hope...\" Vuntha fixed his grip on his weapon and pulled himself up. He tended to slouch, but fully straightened, he was every bit as stocky and intimidating as his father. \"It was my hope, when you did not quickly accept him, that your thoughts had turned to me. I regretted that I didn't have the courage to approach you sooner.\"\n\n\"I felt your affection,\" Drana said. Her bouncy, cheery self was gone; she was grimly serious. \"But I told Boonta I would watch him in the games.\"\n\n\"That is what I heard,\" Vuntha said. \"Drana...I was not certain of you, at first. You are friend to many. It was hard to tell if you were merely good friends with me, or...if there was something more. I was afraid to risk myself finding out. And in so doing, I fear I may have missed the chance to earn more.\"\n\n\"...I have never heard you speak this way.\"\n\n\"That is because I have never felt this way.\"\n\n\"When did you become so serious?\"\n\n\"When I realized that I wanted to make you my woman,\" Vuntha said.\n\nChaki drew in a sharp breath. She looked at Jackson, back over the edge of the tipi, then back at Jackson. \"He's proposing!\" she whispered.\n\n\"Quiet,\" Jackson said, \"I can't hear.\"\n\n\"You see security with Boonta,\" Vuntha said. \"Prestige. Respect. I can appreciate that.\" Vuntha pulled his spear from the ground. \"My father is the best hunter in the tribe. He trained me well. I will show you the difference between myself and the other who would steal you from me. The difference between a wolf...and a peacock.\"\n\nDrana looked at the ground. Eventually, she returned her gaze to him, and nodded. \"Then I will watch for you in the games, as well.\"\n\nA smile broke out of Vuntha's face. \"That makes me glad.\"\n\n\"Boonta isn't the only one with prestige,\" Drana said. \"Everyone says you are good friends with Tatanka Ska. You are favored by the guardian Shakhan.\"\n\n\"Maybe. He does allow me to call him Jackson.\"\n\n\"I think less than maybe.\" Drana said. She smiled, and set a hand on her hip. \"He seems shy, but he has a good wit. Maybe he will make Chaki loosen her braids more often.\"\n\nVuntha snorted. \"If he can't do it, there's no hope for her.\"\n\nChaki and Jackson looked at each other. Chaki raised an eyebrow and pointed at the braid she was wearing. Jackson shrugged. \"I dunno,\" he whispered. \"I kinda like the braid.\"\n\n\"I saw Chaki after you spoke,\" Vuntha added.\n\nDrana folded her arms. \"Oh?\"\n\n\"Perhaps it isn't my place to say anything, but I know how long you have been friends. And I would say, at least, I am friends with the both of you.\" Vuntha cleared his throat. \"She was crying, Drana. Not because you didn't listen to her. It was because she was afraid she had been stupidly stubborn, and that she had made being right more important than being your friend. She is terribly sorry.\"\n\nDrana's eyes were on the grass. It was a long moment before she spoke, and then, she only said two words. \"I see.\"\n\n\"I will leave you to your business.\" Vuntha clasped his hands and nodded to her. \"Thank you for hearing me, Drana. I ask that you lend me your eyes for a day.\"\n\n\"I can lend them, Vuntha. And I will wish you good fortune.\"\n\n\"That is more dear to me than many things.\" And with that, Vuntha turned and went back toward the camp. Chaki and Jackson ducked to the ground, letting him pass; Drana continued out toward the creek. From the pot she was carrying, she was going to fetch water.\n\nA minute passed. When they'd both gone from sight, Chaki raised herself back up. \"See? That was worth the risk, was it not?\"\n\n\"I mean, we probably could have inferred from how Drana was acting tomorrow, right?\" Jackson sighed. \"Or I could have just asked Vuntha. He'd probably tell me.\"\n\n\"That wouldn't be as much fun.\"\n\nJackson looked at Chaki. Her eyes were practically glowing. She rubbed her hands together like an evil witch. \"Can we not make a habit out of eavesdropping on people?\" he asked.\n\n\"What's the worst that could happen?\"\n\n\"I can think of a few things.\"\n\n\"Now I know why Shaka enjoys this so much.\" Chaki snapped her fingers. \"Jula! I should use her to help me, next time.\"\n\n\"And now you're using the children.\"\n\n\"Let's get back before someone notices us hanging about,\" Chaki said. She moved back into the center of camp. \"Honestly, Jackson, you should take more risks. Life isn't all about the calculation.\"\n\n\"So what you're saying is that I should sneak around camp, eavesdrop on my friends, and manipulate small children. Got it.\"\n\nJackson was expecting the whack to his shoulder. He was not disappointed. It stung about as much as he thought it would.\n\nThe night went on; Jackson had dinner with a noisy Palla, a calm and matronly Landri, and exchanged warm glances with Chaki. Shaka came to join them halfway through.\n\nChaki left dinner early with the vague excuse that she was working on something. She'd been working on something since they arrived at the Meet. Jackson could only wonder at it; maybe she was just studying her math.\n\nIn the end, Shaka and Jackson were left sitting on the log, sharing the growing quiet of the night as people took to their tipis and put out their campfires. Shaka stared at the coals; Jackson stared along with her.\n\nThe old woman turned to look at him. The bones hanging around her neck rattled slightly. She was wearing a lot more of her ceremonial stuff: beads, gems, necklaces. Jackson assumed it was for public appearances during all the discussions.\n\n\"Jackson,\" she said. \"The games are tomorrow. After they are over, once night has fallen, we will take you to see Shakhan.\"\n\nJackson nodded. He looked at the scar on his hand. The pulling sensation that led under the mountain seemed to throb. \"Anything about the war?\"\n\n\"We are evenly divided,\" Shaka said. \"The wandering tribes wish for war. We deal with outsiders most often. We appreciate the threat. The Three Hills, though -- the biggest tribe -- they are more sedentary. And they live on the opposite end of the lands under the mountain. It is difficult to convince them to commit themselves. I managed to get them to wait.\"\n\n\"Wait?\"\n\nShaka nodded. \"You will speak with Shakhan. It is widely suspected the guardian will advise you on what action the People should take. Listen carefully when she speaks, and relay her words on the matter to us.\"\n\nJackson nodded. \"So what about the wedding?\"\n\n\"I will perform it after the decision of war has been made.\"\n\n\"Okay.\"\n\n\"Hmm,\" Shaka said. \"That was a little easier than I expected.\"\n\n\"Well, you got a schedule. I don't have a good reason to change it.\"\n\n\"Do you have a gift for Chaki?\"\n\nJackson nodded. \"Hold on.\" He went behind them, to Shaka's tipi, where he'd left his duffle bag. He sorted through it for a moment, then came back out with the ring. \"Check this out.\"\n\nShaka's eyes widened appreciatively. \"That may be the biggest gemstone I have ever seen. May I?\"\n\nJackson handed her the diamond ring. She raised it in her fingers, examining the gold band in the firelight. \"You placed runes upon this. Hmm...\" Shaka read the runes, then lowered the ring. \"Jackson, that is beautiful.\"\n\n\"...um, good.\"\n\nShaka's face wrinkled in a smile. \"Be happy. You're to be wed.\" She handed the ring back to him.\n\n\"So, do I need to prepare, or anything?\"\n\n\"No,\" Shaka said. \"It's a simple ceremony. Think of a few words to articulate your feelings for her. That's all. What you wrote here is quite lovely, but it's nice to hear things aloud. I tell you that as a woman.\"\n\n\"Okay.\"\n\n\"Are you nervous?\"\n\n\"A little,\" Jackson said. \"I didn't think I'd be getting married any time soon. Or ever. I mean, I didn't rule it out, but...I dunno.\"\n\n\"Sometimes, life moves quickly,\" Shaka said. \"Be vigilant.\" She chuckled. \"I find it amusing you're more worried about the wedding than the games.\"\n\n\"Hey, Shaka?\"\n\n\"Hmm?\"\n\n\"How did Chaki's father die?\"\n\n\"...a sudden question. But I shall answer it.\" Shaka glanced at him. \"They were out hunting. A band of the Iron Men struck after the hunt, when they had let their guards down and were skinning the bison. They had one of their magic people with them. Hanta told me that a blast of red fire burned him to ash, but not before he stuck an arrow into the man.\"\n\n\"...at least he got the bastard.\"\n\n\"Indeed.\" Shaka sighed. \"It left an impression on the tribe. Some wanted revenge. Others were cowed. Out best warrior was destroyed so quickly, so...harshly. Some asserted their magic was stronger than mine, and that we could not face them.\"\n\n\"Some like Yukatan and Boonta.\"\n\n\"Perhaps.\"\n\n\"Is their magic stronger than yours?\"\n\n\"Perhaps.\"\n\n\"Depends on how you use it, right?\"\n\nShaka smiled again. \"Maybe. But if they attack Hanta with such magic, they will be very surprised when he raises his shield.\"\n\n\"Good.\"\n\nShaka yawned and stretched. \"You should take your rest. I will take mine. Prepare for the games.\"\n\n\"I will.\"\n\n\"By the way,\" Shaka said, \"try not to do anything too stupid.\"\n\n\"I'll try. No promises, though.\"\n\n\"Goodnight, Jackson,\" Shaka said. She slipped into the tipi.\n\nJackson turned back and watched the fire.\n\nIt had been a while since he'd entered the game. The other contest winners were already in Isis, somewhere. In a few days -- if that - the game would be flooded with the other 5,000 beta testers.\n\nWhat was going to happen to the world? Would they all converge here, at the mountain, looking for answers? What would happen to Earth when 5,000 would-be-superheroes appeared from nowhere?\n\nWhat would happen to the others? Would they start like him -- somewhere in the world, banished to the bottom of the tower? How many would die, not understanding that if they lost all their health, it would really be over?\n\nJackson thought on that for a time, and then he went to sleep.\n\n<p style=\"text-align: center;\">****</p>\n\n\"We've put surveillance on the residence of everyone that won the contest. He's the only one we could find.\"\n\n\"Where are the rest?\"\n\n\"Wherever they're all going.\"\n\nDan Miller hobbled along the hospital hallway. The hand he kept on the wall betrayed his age.\n\nCharles watched him with a raised eyebrow. Working for Ransfeld, Miller could easily get a prosthetic hip, but he stubbornly stuck by his home remedies. He wouldn't even take ibuprofen. Whether he was in pain or not was not important, from his point of view.\n\n\"Where are they going, exactly?\" Charles asked.\n\n\"Don't know yet. He hasn't said much of importance.\"\n\n\"What do Isis, Emil Mohammed, and teleportation all have in common?\" Charles asked.\n\nMiller stopped in front of the door to the isolation ward. He glanced back at Charles and Mivra. Charles's android had been walking beside them for a few minutes. She drifted like a ghost, eerie in her ability to move without making noise. The old Indian man cleared his throat. \"Mr. Ransfeld. Please proceed with caution.\"\n\nCharles fixed his suit collar. \"I'm not surprised by anything anymore.\" He straightened his hair, then checked his smile in the door's small window. \"Is he actually invincible?\"\n\n\"I struck him myself while trying to get him to talk,\" Miller said. \"We threatened to cut off his genitals. He doesn't care.\"\n\n\"But did you follow through?\"\n\n\"Yes.\"\n\nCharles blinked and looked down at the shriveled raisin that was Dan Miller. \"I take back what I said about surprise.\"\n\n\"This isn't just a video game,\" Miller said. \"You read the report?\"\n\n\"He's like a hologram.\"\n\n\"Yes,\" Miller said. \"My knife goes through him, but it's as if he's made of air. There's resistance. The knife stays buried in his flesh. It makes him uncomfortable, but there's no pain, no blood. I cut through several parts of his body. It creates a sort of red mark, but his limbs stay attached, and the lines fade away. He has no trouble moving them afterward.\"\n\n\"You said he tried to escape, at one point.\"\n\n\"The room held,\" Miller said. \"His chair did not. It was...\"\n\n\"What?\"\n\n\"It was as if he was using some sort of power,\" Miller said. \"We could only control him with the weight of numbers.\"\n\nCharles looked at Mivra, then back at the isolation ward door. \"Didn't you scan him for metal?\"\n\n\"We stripped him after that,\" Miller said. \"He didn't have anything on him that could make light.\"\n\n\"That makes no sense.\"\n\n\"We need to acknowledge,\" Miller said, \"that we may be dealing with something that we are not fully prepared to handle.\"\n\nMivra's tone was flat and metallic. \"I am prepared to deal with any number of contingencies.\"\n\n\"Could you deal with that which is beyond human understanding?\"\n\n\"I don't see the pertinence of comparing my preparedness to fictional ideas,\" Mivra said.\n\n\"It's not fiction anymore.\"\n\n\"Miller,\" Charles said, \"are you seriously proposing that it's magic? Some kind of mystical energy?\"\n\n\"...there are stories in my country.\" Miller pressed a strand of wispy hair back against his forehead. \"When the BLOC took over India, they destroyed many temples. But they could not kill Hinduism. It is ingrained in my people. Unlike other religions, we have legends, and heroes. Gods. Demons. They battled for the fate of mankind. I learned those stories when I was a boy. They captivated me, once.\"\n\n\"Are you getting sentimental on me?\"\n\n\"There are things in this world which defy common sense,\" Miller said. \"We have stumbled upon one such thing. I say again, as your security adviser: use caution.\"\n\n\"Call me a skeptic,\" Charles said. He pushed through the door.\n\nThe isolation ward was quiet. Nurses and robots moved through the tan-colored hallways. A spherical TOM buzzed by at a slow pace to lessen the noise it made. The lighting wasn't bright, but it wasn't dim, either. Everything was as neutral and calm as possible.\n\nThey took a side door leading to a stairwell. Another door at the bottom of the first flight held a security panel. Charles pressed his eye to the retina scanner. \"Charles Ransfeld,\" he said to the microphone.\n\nThe door's steel bars thumped open. They passed through, and Mivra closed it behind them. It sealed itself tight.\n\nThey went down another two flights. The quiet halls of the isolation ward transformed into plain concrete, exposed piping, and metal wiring. A group of guards nodded to them as they passed the first intersection. This was a branch off of the main security floor - it had been faster to go through the isolation ward than go all the way down through the command center.\n\nRansfeld Security's holding cells were located directly under the ward. It was a convenient setup. Charles had to deal with many undesirables that came from various clients ranging from prominent public figures to the government itself. It was common that such individuals were pronounced mentally unstable. From the isolation wards, they could be quietly shipped down the three floors to the real prison. At that point, their options were much more flexible.\n\nIt was efficient. Charles was proud to do his part to keep society a little bit cleaner. Of course, some of his clients were the dirtiest soils themselves, but he made do.\n\nThey'd get their turn eventually.\n\nThey didn't have to walk far to find the cell they were looking for. Five men with heavy armor, assault rifles, and reflective HUD helmets guarded the entrance. They opened the door for Charles and company.\n\nThe entrance room was dark. A few men were seated at terminals - John Steinson and his team. The big man looked up. \"Hey, boss. Nothing new. Oh, Mr. Ransfeld. How are things?\"\n\n\"Getting better by the day,\" Charles said. He looked at the one-way glass that stretched the length of one wall. It was cracked in the middle, damaged from some sort of impact, but he could still see through it.\n\nSitting alone in the room next to a steel table was a significantly overweight 28 year-old man. He had frizzy, unkempt brown hair, and was completely naked. He rested his forearms on his legs and stared at the floor. He was the picture of boredom. A single light dangled from the ceiling above him. His shadow was sharp against the concrete.\n\n\"This is him?\" Charles asked.\n\n\"Not what you were expecting?\"\n\nCharles's smile turned into a smirk. \"Jackson Vedalt was not what I was expecting, either.\"\n\n\"Well, don't sell him short, sir,\" Steinson said. \"I punched him across the face myself. Guy barely even flinched.\"\n\n\"Right. Mivra, let's go.\"\n\n\"Wait a second,\" Steinson said, \"he's dangerous. We should --\"\n\nCharles hit the latch to unlock the door. He tried to open it. It rattled in place for a moment. He put his shoulder against it, and it fell open.",
        "Gary Morgan looked up from his chair. \"Sorry, I broke that.\"\n\nMivra slammed the door shut with a tiny flick of her wrist. \"Appropriate force fixes most problems.\"\n\n\"Holy shit,\" Gary said. He stared at Charles. \"Are you Charles Ransfeld?\"\n\nCharles smiled brightly. \"The one and only.\"\n\nGary reclined in his chair, putting his arms behind his head. He folded a thick leg over the other. \"Damn, man. I never believed all those conspiracy theories, but I guess you guys are pretty fucked up over here. Kidnapping people and holding them against their will? When I get out of here, I'm bringing this fucking place down.\"\n\n\"I seriously doubt that.\"\n\nGary laughed. His belly fat jiggled slightly. \"What're you gonna do, cut my balls off? The old guy with half his teeth missing already tried that. I'm still hanging loose.\" Gary shifted his hips to emphasize his intact equipment. \"By the way, nice android. She's hot.\"\n\nCharles glanced at Mivra. She looked like a block of ice with red lips stuck on the front. He forced his smile wider and looked back to Gary. \"I understand your name is Gary Morgan?\"\n\n\"The one and only.\"\n\n\"There are 98 other men in the GAU named Gary Morgan,\" Mivra said. \"You are not unique.\"\n\n\"Is that a threat?\"\n\nCharles sighed. \"She can get testy when people treat her like an object.\"\n\n\"She's an android. What do you expect? I guess you can afford a serious personality chip, though. And big tits. But I don't think those are as expensive.\"\n\n\"Not particularly.\"\n\nMorgan sat up straight. \"Hey, you want to know about Isis, right? That's what this is about?\"\n\n\"I do.\"\n\n\"Alright,\" Gary said. \"I want your android to suck me off. I'll talk after my blowjob. And maybe a tittyfuck, too.\"\n\nCharles heard the slight grating sound of metal and plastic. Mivra's hands had curled up into fists.\n\nCharles tended to challenge Mivra. He liked to push her. He liked to make a person that had a computer for a brain think. He enjoyed those moments in which she wasn't sure what facial expression to create with her motorized muscles.\n\nHe was always very careful not to go too far. Charles wasn't above rubbing salt into the wounds for the sake of personal amusement, but pissing off an AI seemed like an extremely bad idea.\n\nCharles cleared his throat loudly in an effort to dispel the bad air. \"Mr. Morgan --\"\n\n\"Gary's fine, thanks. Mind if I call you Chuckie?\"\n\nCharles took a long, slow breath, then revived his smile. \"Gary, then. You guessed correctly. This is about Isis.\" Charles pointed at the pentagram scar carved into Gary's left hand. \"We've been down some bad roads lately. You've demonstrated that will get us nowhere. I'm a compromising man, but I need something before I can give back. So what's going on?\"\n\n\"You want to know?\" Gary said. \"It's deep shit, Chuck.\"\n\n\"I understand that.\"\n\n\"Well, it's all only a blowjob away. Time to get your money's worth out of the sex object.\" He raised a hand when Charles started to protest. \"Come on, dude, she doesn't have those tits because you like to think of her as your mother. Then again, who knows? Some people are into that shit.\"\n\n\"Mr. Ransfeld,\" Mivra said. Her voice had all the warmth of a hailstorm. \"Perhaps you could leave the room and let me handle this.\"\n\n\"See, there you go,\" Gary said. He hadn't been around Mivra as much as Charles; he did not detect the deadly level of sarcasm hidden in her tone. \"Leave the room and let her handle me.\"\n\n\"There won't be any sexual activity in your immediate future, Gary,\" Charles said.\n\n\"Why not?\" Gary said. \"You need to learn to share your toys. I'm an open-minded guy. You want to do her together?\"\n\n\"Gary,\" Charles said, \"I'm very, very tired of dealing with this situation. I'm frustrated by the fact that I don't know what you know. And you're really...\" Charles made a big smile. \"Well, you're really pushing my buttons.\"\n\nGary glanced at the silvery one-way window. \"Come here. I don't want those other bastards hearing. Not after what they did to me.\"\n\n\"Alright.\" Charles moved closer.\n\n\"I get the android after, alright?\"\n\n\"That depends on the consistency of your good behavior.\"\n\nGary waved his hand. \"I'm gonna whisper. Don't be shy, I'm not gay or anything.\"\n\nAlarm bells were ringing in Charles's head, but he ignored them. They had nothing; he needed to take a risk. He stepped forward.\n\nGary leapt from his chair faster that Charles would have believed a man of that size could move. His right fist came in.\n\nHe was fast, but he didn't have any experience. Charles saw the punch telegraphed as soon as Gary's feet hit the ground. Charles turned away from the attack, intending to catch the hand once it went by and lock Gary into a throw.\n\nGary's palm blazed white.\n\nCharles was blinded by the light; he squinted out of reflex. Before he knew it, there was an arm around his neck. Gary pressed up behind him. \"No homo,\" he said. He clinched his hold with his other hand, applying a little more pressure. \"No sudden movements, Chuckie. You guys aren't playing nice, so I consider that free reign to do whatever the hell I want.\"\n\nCharles looked to Mivra. Her legs were spread and bent; a long blade projected from one of her wrists. A gun was protruding from a slot on the other arm. It was aimed directly at Gary's head. \"Release him immediately,\" she said, \"or I will use lethal force.\"\n\n\"Careful, babe. You wouldn't want to hit Chuckie by mistake.\"\n\n\"How did you do that?\" Charles croaked.\n\n\"Special abilities, my friend. I leveled up my hand-to-hand skills. That was a grapple.\"\n\n\"What are you talking about?\"\n\n\"Yeah, you're not a gamer. Amazing what a few hundred points in Agility can do for a guy.\" Gary looked at the window. \"Hey, you fucks out there! Open the door or I break Chuckie's neck. Sweet cheeks, put the toys away and back off.\"\n\nCharles looked at Mivra and did the best he could to shake his head. The silvery blade retracted into her arm with a threatening schick sound. She lowered the gun to her side and took a few steps back.\n\n\"Great. Boys, get the door.\" The door rattled, then creaked open. Steinson moved into the room and held it there.\n\nCharles kept his hands at his sides. If Gary did whatever he did again, he might have a broken neck before he could react. \"So, Gary,\" he said, \"what's the gameplan?\"\n\n\"Gameplan? We walk out the front door, that's what. And if you cooperate, I won't kill you.\"\n\n\"That seems...\" Charles coughed. \"A little harsh.\"\n\n\"You guys tried to cut my balls off. You don't think that's fucking harsh?\"\n\n\"Fair enough,\" Charles said. \"So, you walk out the front door. And then you're in the middle of Boston, naked, with one single hostage the only thing between you and a very painful capture and imprisonment. Holding me like this won't stop you from getting shot in the back.\"\n\n\"Enough of the bullshit,\" Gary said. \"Hey, Mr. Universe. You keep the door open like that and don't move.\"\n\nSteinson nodded. \"I'm not moving.\"\n\n\"Good. Robot chick, do me a favor and make sure there's a VTOL on the roof. Chuckie convinced me the front door wasn't a good idea.\"\n\n\"I don't have access to outside public transportation networks.\"\n\n\"Don't shit me!\" Gary shouted. \"There's VTOLs taking off and landing on every skyscraper all day. Jack someone else's if you have to. Just make sure there's a dude with a car waiting. And where the hell is my Dream Drive?\"\n\n\"One demand at a time,\" Steinson said. \"I'll call for the car. Just take it easy.\"\n\n\"Dream Drive.\" Gary squeezed harder. Charles swallowed against the pressure on his neck. \"Make sure my Drive is in that car.\"\n\n\"You got it.\"\n\n\"That's more like it.\" Gary took a step forward. \"March, Chuckie. Nice and easy toward the door. Don't try anything.\"\n\nCharles shuffled forward as best as he could. It was slow going. \"How far do you think you'll get in a VTOL?\"\n\n\"Far enough.\"\n\n\"The whole Boston police force is going to be after you.\"\n\n\"Not unless you want to die, they won't. Stop talking.\"\n\nThey reached the door. Gary forced Charles to edge sideways so that they could pass through. They took it one step at a time.\n\n\"So,\" Charles said, \"Gary. I think we got off on the wrong foot. Let's reconsider this from --\"\n\nGary tightened his grip, choking Charles off. \"Shut up before I permanently shut you up. And keep --\"\n\nCharles pushed off his mechanical leg, shoving Gary into the doorframe. He brought both his elbows back as hard as he could, driving them into either side of Gary's gut. At the same time, he snapped his head back, landing a blow straight on Gary's teeth. \n\nThe combination was enough to get Gary to loosen his grip. Charles brought both arms back up and shoved Gary's lock loose. He dropped away from the hold and threw himself out of reach. Steinson's roundhouse kick brushed by Charles's ear even as he was falling to the ground.\n\nGary took the kick straight to the cheek. He bent to the side, then stopped. He stood there for a moment, a shoe planted in his face. He grabbed Steinson's leg.\n\nMivra hit him full-body in the side. Gary was a big man, but he couldn't withstand a veritable missile of steel and plastic. Mivra jammed her blade into his gut and shoved him out the door and into the entrance room of the isolation chamber.\n\nCharles was up again. Light flickered. He heard a sound like tearing metal. He rushed through the door, half a step behind Steinson.\n\nMivra and Gary were circling each other; the rest of the men were backed up against the walls of the observation room, pistols drawn and pointed. Mivra's suit and skirt were torn down the side; a black scar marked her skin. Gary's right hand was balled into a fist and glowing white. He glanced at the doorway out into the hall.\n\n\"You're already surrounded,\" Miller said. The small man stepped forward, arms neatly folded behind his back. \"Give it up before we're forced to hurt you.\"\n\n\"Haven't we been through this?\" Gary said. \"I won't hold back this time.\"\n\n\"Then there is no need to modulate my force,\" Mivra said. Her pistol arm adjusted with robotic precision; she fired. Everyone winced as the explosion of the gun echoed through the room.\n\nGary glanced down at the red haze on his leg where the bullet had struck. It faded over a few seconds.\n\nCharles watched him carefully, trying to predict what he'd do next. Gary's head didn't move, but his eyes shifted, narrowed. Focused. He was looking at something. Charles tried to follow his gaze, but as far as he could tell, Gary was just staring at the wall.\n\nGary snorted as his redness from the bullet disappeared entirely. \"Gonna take more than that to stop me.\"\n\nMivra rushed him. Gary's hand started to move in a simple punch. Mivra's head bobbed away -- but Gary's hand followed, moving as if he'd already known how she'd dodge. The white light flared.\n\nUnlike with Charles, that wasn't enough. Mivra was faster than the fastest human. The punch carved a black line across her cheek, but it didn't stop her.\n\nShe rammed her blade home into his chest. The breath rushed out of Gary's mouth. He stumbled backward and started beating his hands on her back, trying to shake her loose.\n\nCharles kept watching, looking for an opening. Gary's eyes weren't on his attacker, but on something behind her -- above? Charles glanced the way he was looking. Nothing -- just the ceiling.\n\nGary grunted and stopped Mivra's momentum. With her blade still being twisted in his chest, he forced her backward. The pistons in Mivra's legs whined as they locked in place.\n\nGary built up speed. Men ducked out of the way. He slammed Mivra into the opposite wall.\n\nMivra was tenacious. She kept her free hand latched on Gary's shoulder; her nails were like little blades on their own. Her main weapon started buzzing, carving a hole where it was stuck, but Gary kept shoving her against the wall as if he couldn't even feel it.\n\nMivra's pistol folded back into her arm. A plate on the center of her palm opened; a metallic prong extended out. She jammed it into Gary's neck.\n\nA blue spark of electricity arced across Gary's face. His arms and legs convulsed. He went slack, slid off Mivra's blade, and collapsed to the floor.\n\nMivra stood straight. \"Nonlethal takedown measures seem to be more effective,\" she announced.\n\n\"Get him back in the room,\" Charles said, \"and tie him down.\" He rubbed his freed neck and watched their incapacitated captive. Gary's chest was rising and falling; he groaned a bit as they started shifting him. \"How the hell is he still alive?\"\n\n\"I don't know,\" Mivra said.\n\n\"If that had gone differently, your father would have been extremely upset,\" Miller said. He watched the men drag Gary back to his chair.\n\n\"My father will be dead within a week,\" Charles said. He smiled brightly. \"At least I got a first-hand demonstration.\"\n\n\"Hmph.\" Miller started into the holding room. \"He didn't show all his cards, earlier. I'll make sure he can't move any limbs.\"\n\nMivra's weapons folded back into her hands and arms. She moved to stand next to Charles. \"Mr. Ransfeld. Are you alright?\"\n\n\"I'm fine.\"\n\n\"I am concerned, sir.\"\n\nCharles wasn't concerned for himself. His mind was racing. Gary had taken two elbows, a headbutt to the face, and a roundhouse kick to his face as if it was nothing. He'd been stabbed twice and shot in the leg. The only thing that put him down was 40 milliamps from Mivra's stun attachment, and even then, he'd probably be fine after another minute.\n\nBut there was something else. What was it that Gary was looking at? There was something only he could see. Something he was checking.\n\n\"Mr. Ransfeld. Are you sure you're alright?\"\n\nCharles put a hand over his mouth. Something Gary could see, but they couldn't. It might be a virtual overlay. A contact lens? No, they would have checked for that already. Something to do with Isis, then.\n\nYeah, you're not a gamer.\n\n\"Charles?\"\n\nHe glanced at her. Mivra was still watching him. She'd used his name. \"I'm fine, Mivra. Thank you for your concern.\"\n\nThe android manufactured a frown, and then her features returned to neutral. She looked through the cracked window where they were strapping Gary into his chair. Her military bun was frazzled. \"I am not sure how we will be able to threaten him. The report said he lived alone. He is unemployed and lives on government disability payments and winnings from game competitions. He has no close family.\"\n\n\"Disability? I'm more disabled than he is.\"\n\n\"Perhaps his newfound powers assisted in his condition,\" Mivra said.\n\nThe implications of that slowly filtered through Charles's brain.\n\n\"...is our motion on Crux Software almost ready?\"\n\n\"Everything is prepped for tomorrow night.\"\n\n\"Where is his Dream Drive?\"\n\n\"It is in this office.\"\n\n\"Retrieve it. We're going to have another go at conversation with Mr. Morgan.\"\n\n\"I advise against it. I can speak with him alone.\"\n\n\"I'm doing this myself,\" Charles said.\n\n\"Your concern for Rachel is making you impulsive. You should never have entered the room in the first place.\"\n\n\"This is important.\"\n\n\"I don't want you to get hurt,\" Mivra said.\n\nCharles looked at her. Mivra's face was as cold and still as it ever was. But those black eyes seemed soft. \"You'll just have to do a good job of protecting me,\" he said.\n\n\"If you insist.\"\n\n\"I do. More importantly,\" Charles said, \"he hurt you. That doesn't get a pass.\"\n\n\"I do not feel pain, sir. Not beyond indications that my functions have been impaired.\"\n\nCharles reached out and took Mivra's chin in his hand. Her eyes opened slightly in the barest hint of surprise. She didn't resist as he turned her cheek, inspecting her closely. The black line from Gary's punch lingered on the surface of her skin.\n\n\"He hurt you,\" Charles repeated. He smiled; his tone was bright. Cheery. \"I am going to extract what we need from him, and then I am going to destroy him for having the temerity to dare touch you.\"\n\n\"Oh,\" Mivra said.\n\nCharles let her chin go. He turned and marched into the room with a determined stride. Mivra was just behind him.\n\nThey had done better than tie Gary to his chair; they had also tied his chair to a hook on the ceiling. Steinson and another man worked to hoist him up a few inches at a time.\n\n\"Clear out, everyone,\" Charles said. \"Mivra, you stay.\"\n\n\"Yes, Mr. Ransfeld,\" Mivra said.\n\n\"Charles,\" Miller said, \"you've learned the hard way once already. As your security adviser, I'm telling you to leave it to me.\"\n\n\"Overruled,\" Charles said. \"But I appreciate it. I've figured out his little weakness.\"\n\nMiller frowned, but when Charles continued to smile, he smirked. \"Alright, that's enough! Leave it there!\"\n\nThey filed out of the room. Steinson paused at the door. \"Mr. Ransfeld, maybe I can stick around. Just as a little insurance?\"\n\n\"Oh, why not?\" Charles said. \"I do enjoy your enthusiasm.\"\n\nSteinson grinned. He sensed his boss's improving mood. \"You got it, sir.\"\n\n\"You've made some sort of connection,\" Mivra said. \"I do not understand.\"\n\n\"You will. Momentarily.\"\n\nGary stirred. His eyes fluttered. He gave his head a shake. \"Damn. That felt weird.\" He started to shift around, and then he realized his position a few feet off the ground. He glanced at where his arms were strapped to the chair.\n\n\"Are you ready to answer my questions?\" Charles said.\n\n\"Sorry,\" Gary said, \"I'm a little fucking tied up at the moment.\"\n\nCharles slapped him across the face, hard, with the flat of his palm.\n\nGary winced. His cheek turned red -- not with the redness of that strange ability, but the flushed red of inflammation. \"Shit, ow! What was that for?\"\n\n\"Heh. I was right.\" Charles slapped him again.\n\n\"Hey, fuck you, man! That hurts!\"\n\n\"No. This will hurt.\" Charles turned his body and threw his weight into it, slapping his palm forward as if it was a punch. Gary's head snapped to the side; his hanging chair rocked from the force. He grunted in pain.\n\n\"Hey...\" Steinson leaned up off the door. \"That's actually hurting him.\"\n\n\"No fucking shit!\" Gary said. \"Why are you --\" Charles slapped him again. Gary swung on his chair, his cheek now blossoming purple. \"What the fuck?\"\n\nCharles slapped him.\n\nGary swore. Tears were welling up in his eyes. \"Fuck you, man. Fuck.\"\n\nCharles slapped him twice as punishment for swearing twice over.\n\n\"Shit, that hurts. Shit.\"\n\nCharles backhanded him with his other hand, then slapped him again before he came down from his latest swing. He started laughing. \"Now that I get it, it's actually funny,\" he said.\n\n\"What the fuck is wrong with you?\" Gary said. \"You got some kind of shitty bondage fetish?\"\n\n\"That's two more coming your way.\"\n\n\"The fuck?\"\n\n\"Make that three.\" Charles looked back at Mivra and Steinson. \"Do either of you have a knife?\"\n\nMivra shook her head. \"My detachable blade is currently nonfunctional.\"\n\n\"I got one.\" Steinson flicked a blade out from somewhere in his suit. He offered the handle to Charles.\n\nCharles took it, turned back to Gary, and stabbed the knife into his stomach. A red haze surrounded where the blade entered his bare skin. Charles twisted it slightly. \"Mind if I just leave that there?\"\n\n\"Be my fucking guest,\" Gary growled.\n\n\"That's four, now. Don't you ever learn?\"\n\n\"What the fuck are you talking about?!\"\n\n\"Five.\"\n\n\"Fuck you!\"\n\n\"Six. You're really racking them up.\"\n\nGary went slack in his bonds. He was hopelessly lost.\n\nCharles crouched down so he was looking up at the plump man hanging in his chains. He hammered on the butt of the knife with his fist. Gary grimaced slightly, but he didn't call out.\n\nCharles stood, then slapped him across the face again. Gary made a sound somewhere between another grunt and a whimper.\n\n\"It seems you've lost a touch of confidence,\" Charles said. \"Didn't you want that blowjob?\" \n\n\"Fuck you!\"\n\n\"You were down to five, and you're right back up to six.\"",
        "\"What the --\" Gary stopped. Awareness washed over him. \"Are you...counting when I'm swearing?\"\n\n\"That was close,\" Charles said. \"You were almost as stupid as you look.\"\n\n\"What the fu -- I mean, what does that have to do with slapping me?\"\n\nCharles burst out laughing. The fact that Gary had stopped himself from swearing again was too much. \"Is your cheek getting a little sore?\"\n\n\"You little -- I -- shut up! Shut up! Stop laughing!\"\n\nCharles sighed the last bits of his amusement away and leaned forward. \"You're right, Gary. I'm not a gamer. But my little sister is. I've watched her play plenty of times. You know what I learned about games?\"\n\nGary's swinging slowly came to a halt. He stared at Charles. \"What?\"\n\n\"They're all about context,\" Charles said. \"She played this one game -- Final something. It had these people running around with ridiculously huge swords.\"\n\n\"Probably Final Fantasy,\" Gary said.\n\n\"Right, that was it,\" Charles said, smiling in recognition. \"There was this item she could use to bring a dead person back to life when she was in combat. A phoenix's feather.\"\n\n\"Phoenix down,\" Gary grumbled.\n\n\"Right you are, Gary. Anyway, later in the game, one of the main characters died during a cutscene. And there I was, wondering why they couldn't just use a phoenix down to bring her back.\"\n\n\"It doesn't work like that, you moron,\" Gary said. \"Battle is different than a...\" He trailed off.\n\n\"Aha,\" Charles said. \"He can be taught. That's right. Battle is different than a cutscene.\" Charles kicked up into Gary's stomach, jamming the knife deeper. \"Battle.\" He proceeded to slap Gary across the face again, eliciting another grunt of pain. \"Cutscene.\n\n\"But, you know,\" Charles said, \"I remembered something else, too.\" He turned and whipped his leg across Gary's face. Gary twisted sideways; the ropes creaked as he started swinging again. Charles kept spinning and caught him in the face again as he swung back the other way; Gary grunted under the force of the second kick.\n\nCharles settled on his feet. \"This is incredibly cathartic. Mivra, you want a try?\"\n\nMivra's next words were her least robotic yet. \"Of course, sir.\"\n\nAs Charles watched Mivra slap, kick, and pummel Gary like a living pi\u00f1ata, he began to wonder at the wisdom of teaching a budding AI the joys of revenge via personalized cruelty. But, watching what might be her first time having fun, he decided to let it go.\n\nShe'd come a long way. Just last week she was offering herself up as a tool for that disgusting layabout, Jeffery Harrington. Now she was viciously indignant at the prospect of being used as a sexual object by a random stranger.\n\nCharles folded his arms and nodded. It was a vast improvement. His woman ought to hold herself to the highest possible standard.\n\nHis woman. Now that was an interesting thought.\n\n\"Mivra, that's enough,\" Charles said.\n\nShe halted mid-kick, twisted upright, then neatly paced away. \"Yes sir.\"\n\nCharles walked up and kicked the end of the knife again. It sank in another half-inch; now part of the handle was inside of Gary's stomach.\n\n\"Shit,\" Gary grunted.\n\n\"I thought you'd learned not to swear in the presence of a lady,\" Charles said. \"I think you might have been projecting when you said I had a --\"\n\n\"I don't give a fuck!\" Gary shouted. He was breathing hard; sweat covered his body. He was tense in his bindings. \"Aren't you ever going to take this knife out of me?\"\n\nCharles leaned in very close to Gary's face. \"What's the matter, Gary? Are you running low on health points?\"\n\nGary's eyes bulged. \"How -- you --\"\n\n\"I didn't know, but you just confirmed it,\" Charles said. \"So, life as a video game character. Incredible. Isis, then...you're actually going into a game, aren't you? How does that work, exactly?\"\n\n\"You don't know shit,\" Gary said, \"and I won't talk.\"\n\n\"Really?\" Charles grabbed the knife and twisted. \"I wonder if that makes your health go down faster.\" He turned it back the other way. \"How is it?\"\n\n\"Stop it!\" Gary said. \"Stop!\"\n\nCharles drew the knife out. Gary wheezed, then went slack. He was shivering. Tears mixed with sweat fell off his face and dotted the concrete floor below him.\n\n\"I believe,\" Mivra said, \"he is ready to talk.\"\n\n\"I said I was going to destroy him,\" Charles said. He looked at the one-way glass. \"Bring his Drive in here.\"\n\nThat made Gary look up. Another man in a black Ransfeld Security suit entered the room with a sleek blue helmet.\n\nCharles took it. \"If this is a game, there should be a storage drive.\" He popped open the main port. \"Aha.\" Charles looked at the chip. It was jet black, but marked in the center with an inverted red pentagram. The word Isis was in cursive at the bottom. \n\nCharles held the chip out to Mivra. \"Smash it.\"\n\n\"What?\" Gary said. \"No! Don't!\"\n\n\"Mr. Ransfeld,\" Mivra said. \"This is an important piece of evidence.\"\n\n\"Smash it.\"\n\nNow Gary was crying in earnest. He watched Mivra place it on the ground. She lifted her foot; her heel hovered ominously over the chip. \"I'll talk. I said I'll talk!\"\n\n\"I don't care,\" Charles said. \"You obviously can't be trusted. This chip is the source of your abilities. We just have to pull the weed up by the roots.\"\n\n\"Don't!\" Gary's double chin quivered with his hysteria. \"Don't do it!\"\n\n\"Do it,\" Charles said.\n\nMivra's foot slowly descended.\n\n\"Please! I'll tell you everything! Please!\"\n\n\"Stop,\" Charles said.\n\nMivra's shoe froze, then set itself on the ground next to the chip. She picked it back up.\n\n\"So, Gary,\" Charles said. \"You were in the middle of telling me everything you know about Isis, and Crux Industries, and Emil Mohammed, and those powers of yours. Every last detail. Be sure you don't forget anything. I'm pretty good at telling when people are lying, but Mivra's even better.\"\n\nGary talked for over an hour. Mivra recorded everything; she saved one copy to each of her spare android shells. Charles decided to leave it exclusively in her care; he didn't even trust the command center's servers, not for this.\n\nSteinson, ever the enthusiast, volunteered to try out the chip himself. The Isis program rejected him immediately as an unrecognized user. The hardware was locked to Gary.\n\nCharles briefly thought about killing Gary and then trying to use the chip, but that probably wouldn't work. It was registered through the Crux servers, which were at their headquarters. It would take someone on the ground, inside Crux, in order to change that. Not worth the effort.\n\n\"Well, Gary, I think we're pretty much finished here.\" Charles casually tossed the chip in the air and caught it. Playing catch with the delicate piece of electronic media had become his favorite pastime over the course of their talk. \"So, the real question is, how can I get a copy?\"\n\n\"Only the Top Gamer winners got one,\" Gary said. \"The beta testers that were picked get one, too. I guess they're being shipped out in the mail.\"\n\n\"When's that?\"\n\n\"I dunno,\" Gary said. \"It was supposed to be a week or two after we got ours. Which is basically now.\"\n\n\"Mivra?\"\n\nMivra went still as she accessed the information. \"Based on our own agents' surveillance of Crux headquarters, they haven't gone out yet. A moment.\" She processed data in some distant place in cyberspace. \"They're scheduled to ship tomorrow night, and arrive the next day.\"\n\n\"There's going to be a change in plans,\" Charles said. \"This is no longer an invasion. It's an interception. We're going to capture as many of these chips as possible. Miller, if there's anything else you can squeeze to get more leeway for the team, squeeze it.\"\n\nMiller had entered the room once Gary had been cornered. He was hovering next to Steinson. \"Charles,\" he said. \"We might be overextending ourselves.\"\n\n\"It's fine,\" Charles said. \"This isn't just about Rachel anymore. She remains the priority, but this...it could change the entire world. No, it will change the world. At this point, it comes down to who gets their hands on it.\" Charles raised the chip against the holding chamber's hanging lamp. \"It's like the ultimate prosthetic. It's beyond prosthetics. This could be the hinge upon which humanity will turn forward.\"\n\n\"You're stupid.\"\n\nCharles looked at where Gary was still hanging. \"Yet more expert commentary from the fat man strapped to a steel chair.\"\n\n\"You don't even know what's going on,\" Gary said. \"Emil Mohammed is handing out Isis chips to random people. Gamers, yeah, but the other 5,000 got drawn in a lottery. If this is so world-changing, why isn't he changing the world?\"\n\n\"And what's your answer to that question?\" Charles asked.\n\n\"No fucking idea,\" Gary said. \"If it was me, I'd hold it just for myself until I was a superman. Then maybe give it to a few friends or something. Theoretically, you could take over the world. You'd have to kill a whole lot of shit first, and Isis is dangerous, I guess, but it's worth the risk. I don't get why he's giving it away.\" \n\n\"There's more to this story that we don't appreciate,\" Charles said. He faced the room. \"We'll be forming two teams,\" he said. \"Steinson, you'll be leading the chase team. You'll be making sure that we get our hands on those shipments. They'll be most vulnerable while they're in transfer. We'll intercept the trucks directly.\"\n\n\"You got it, bossman.\"\n\n\"...bossman?\"\n\nSteinson shrugged. \"It felt right.\"\n\nCharles renewed his smile. \"If you say so. I'll be leading an infiltration team. We're going inside Crux, and we're going to find out where Emil Mohammed is, why this is happening, and how he's making it happen.\"\n\n\"Hey,\" Gary said. \"What about me?\"\n\nEveryone looked at him. Charles slowly turned. \"Well, yes, of course. What about you, Gary?\"\n\n\"I did what you wanted. I talked. Hey! I can work with you guys.\" He started nodding at his own words. \"I know games, and I'm already pretty strong with my grappling skills. I can help you get started.\"\n\n\"No,\" Charles said, \"I don't think so.\"\n\n\"Um...\" Gary swallowed. \"Alright. We've both taken some nasty shots at each other. So how about we let bygones be bygones and go our separate ways?\"\n\n\"You made a fair argument for yourself,\" Charles said. He let the Isis chip fall to the floor. \"If you'd made that suggestion from the start, I might have taken it seriously.\"\n\n\"What?\" A rising note of panic entered Gary's voice. \"I -- I'm valuable. I know Isis!\"\n\n\"You do,\" Charles said. \"But the thing is, you just really push my buttons.\" He stomped on the chip with his prosthetic leg, crushing it to pieces.\n\nGary opened his mouth. An unearthly scream was loosed upon the room. Charles covered his ears and backed away. Even Mivra winced.\n\nGary started twitching in his bonds. His body shook, shivered. His arms bent in ways they weren't supposed to. The ropes holding him in place tore apart. His chair fell to the floor, but he hung there, suspended in the air like a puppet.\n\nThe twisted pentagram on his hand flashed white -- and then it turned black again. The points of the star grew. They stretched longer, and wavered. Charles could see Gary's skin move where the scar was reaching, as if the roots of a creeping fungus were pushing through his body. It pulsed up his arm in waves, and then, reaching his shoulder, flowed over his chest. A tendril latched onto his neck.\n\nGary couldn't move. His eyes bulged with awareness, but all he could do was watch. His arm was entirely gone now, eaten away. His torso was dissolved next. He was still floating there, his arms and legs hovering as if still attached to the body that was already consumed.\n\nThe mark reached his chin. It peeled up off his skin, and contorted into another distorted pentagram. It was the five-pronged claw of a demon that had come to settle a debt.\n\nThe claw fell over his face, then spread. It wrapped up his head and sucked it in. And then Gary was gone, and the only thing in the air was the black symbol.\n\nThe shrieking continued. Charles had thought the man was making the sound -- but it was coming from the pentagram. Charles plugged his ears, but he couldn't lessen its volume.\n\nThe shrieks were the cries of humans. Hundreds of them, thousands, all rolled into one. Screams of death and pain. Fear. Charles stared into the floating symbol, and it was like looking into a piece of nothing, a gateway into hell that shouldn't exist.\n\nIt vanished.\n\nSilence hung in the room. It seemed to be an extra sort of silence - not the lack of sound, but a negative quantity of it, as though the shrieks had eaten away at something vital in the air.\n\nAnd then Charles could hear his breath again. He lowered his hands from his ears and stood straight. There was only one thought on his mind.\n\nThis could happen to Rachel.\n\nMiller moved around him; he peered at the empty chair, now lying sideways on the ground, and then at the crushed bits of the data chip. He looked at Charles. \"Do you still believe this is something we can control?\"\n\nCharles looked over the room. Steinson and the rest of the men had paled. They were looking at him, waiting for direction.\n\nHe glanced at Mivra. His android stood tall and stoic, maintaining as much dignity as she could whilst wearing a ripped suit and bearing the scars of a fight.\n\nHe finally turned his gaze back to Miller. \"No. At least, not entirely.\"\n\n\"Then what do we do?\"\n\nCharles smiled. \"We adjust our plans accordingly.\"\n\n<p style=\"text-align: center;\">****</p>\n\nJackson woke just before sunrise.\n\nHe was rather disconcerted to learn that the games began with a communal bath in the creek. He stuck close to Vuntha, kept his head up, and kept his waist below the water line.\n\nThe rest of the men had little problem washing each other. When Vuntha approached with a cloth and a smile, Jackson begged off and hurriedly pinned it to cultural differences before he offended someone. Vuntha seemed confused, but he shrugged and left Jackson to his own devices.\n\nJackson always hated that part of gym class. Showering was the worst. At least it gave him a chance to clean off.\n\nIt was strange. He was usually meticulous about keeping clean, keeping organized. He'd been so busy just living through the past weeks that it had dropped off in priority.\n\nOnce they were cleansed of impurities, as the spirit guides would say, they dressed themselves and headed for the starting line of the race. The starting area was marked by two carved wooden totems. The rigid faces of men, bison, and various birds of prey were stacked on top of one another, staring down at the contestants with fierce gazes.\n\nA crowd of observers had already gathered. People milled about, exchanging greetings, calling to racers they knew. The competitors were focused. Some were warming up with light exercises; others were gathered in circles, discussing strategy.\n\nThe course was simple. A wooden post was staked into the ground on the other side of the mountain's shoulder. Each person had to grab one of the strings of beads tied to the post as proof, then run back to the start. Climbing up the sharp rocks and crumbling cliffs of the mountain was possible, but it would take a lot longer than simply running around. All said and done, it was about eight miles there and back.\n\nThere were 64 men competing, a number that was planned to work out for the spear tournament later on. The Windseekers had reached for an older warrior this year to fill an empty spot; he graciously bowed out in favor of Jackson.\n\nThe games were not friendly competitions. They were brutal. Once the competitors were out of sight of the spectators, there were no rules. Naturally, the contestants were universally stupid young men with something to prove. Jackson was sad to realize he was one of them.\n\nHow did I get myself into this, again?\n\n\"Jackson, watch out for those five.\" Vuntha indicated a group of tall men. They all styled their hair the same way, tied behind their neck by a single piece of bison bone. It made them look like clones. \"They're all brothers, from the Three Hills tribe. They'll be like us, working together. And those four, there, from the Dust-Gatherers -- they're together too.\"\n\n\"How do you know?\"\n\n\"Well, they were washing each other.\" Vuntha looked at him. \"Oh, now I get it! That's part of your strategy. No one will think we're on a team because we didn't wash one another.\"\n\nJackson quickly started nodding. \"Well, yeah, duh. Wasn't that obvious?\"\n\n\"Not as much as you might think.\"\n\n\"Too bad we can't rely on other people from our tribe.\"\n\nVuntha and Jackson glanced over. Boonta and Katran were looking their way. There was a tense moment as their gazes met, and then they turned away from each other.\n\n\"Jackson, I'm going to be by myself for a long time,\" Vuntha said. \"Are you sure this will work?\"\n\n\"Just stay out of the way,\" Jackson said. \"They'll think you're going to go all out, so hang back and let them psyche themselves out. If they really want to beat up on you, they're going to have to drop away from the group. That means they'll sacrifice major points, and Katran won't do it. If Boonta tries to take you alone, you kick his ass.\"\n\nVuntha clenched a fist and nodded. \"Right.\"\n\n\"Men of the Mountain!\" A chief from one of the Three Hills villages called out from the end of the line. He was tall -- it seemed like all the Three Hills tribesmen had an extra few inches. A headdress lined with white feathers rounded his head and draped down about his neck. \"Prepare your spirits! Before Shakhan, you will show your strength!\"\n\nEveryone responded in different ways. Some beat their chests; others shouted war cries or the name of one minor deity or another. Vuntha stomped his feet a few times, clearing a space in the dirt. Jackson just set himself on the line.\n\nThe first few hundred feet of the footrace was packed with tribesmen. Chaki and her family had gotten a spot near the front. Palla waved wildly at Jackson. Jackson smiled a bit and waved back.\n\n\"Be ready!\"\n\nThe sounds of the audience died off. The men crouched at the line. The chieftain kept one hand in the air, his palm out flat.\n\nA lone wind blew over the grass. Jackson could hear the runners next to him breathing.\n\nThe chief threw his hand down. \"Begin!\"\n\nEveryone took off at a near sprint. The crowd went crazy. Dust churned around the ankles of the runners.\n\nJackson and Vuntha went out at an easy jog, letting the pack get ahead. Confused murmurs filled the air as they were quickly left behind. Jackson threw another wave at Palla as they passed.\n\n\"Jackson, you've got to hurry!\"\n\n\"No worries, we've got this!\" Jackson called.\n\nThe sprinters had slowed up as soon as they'd left the audience behind -- it was just tradition to show off at the start. Jackson and Vuntha kept their pace up until they arrived a short distance from the back of the pack and held there.\n\nThey ran for a good five minutes. They'd left the border of the main encampment behind and were getting close to the foothills near the shoulder of the mountain. The leaders of the pack swung wide, intending to go around on the flatlands. Everyone swung out with them.\n\nOne of the tallest runners and one of the heftiest split off the main group. It was Katran and Boonta. They drifted left, out from the pack, and then started slowing.\n\n\"Looks like they want a fight early,\" Vuntha said.\n\n\"Whatever,\" Jackson said.\n\nThe two men got closer. Jackson pulled up on his jogging. Vuntha did the same.\n\nThe pack started getting ahead of them. Vuntha glanced at the other runners, then at Jackson. \"Are you sure about this?\"\n\n\"I'm sure,\" Jackson said.\n\nKatran and Boonta were checking behind themselves periodically. They were muttering something. They started slowing their pace, too.\n\n\"Alright, let's stop,\" Jackson said. He let his jog grind to a halt and wiped the sweat off his forehead. \"Did I mention I hate running?\"",
        "\"Jackson, we're going to be left behind,\" Vuntha said.\n\n\"You'll make it back up later.\"\n\nVuntha glanced down at his moccasins. He was wearing thicker ones than normal, usually meant for winter. They were covering up the metal jump trainers that were bound to the underside of his ankles.\n\nKatran and Boonta stopped, too. They were a few dozen yards ahead. \"Are you two cowards going to run, or shall we leave you behind?!\" Boonta shouted.\n\n\"What's the matter?\" Jackson called back. \"You want to hold hands?\"\n\n\"Face us like men!\"\n\n\"You guys are gonna lose if you keep waiting!\" Jackson said.\n\n\"Then what are you doing?!\"\n\n\"Hey, Katran!\" Jackson called. \"Didn't you say something about winning that flower thing?! You won't be able to make up the points at this rate!\"\n\nKatran's head swiveled to the retreating pack. All four of them were rapidly being left in the dust. He looked back at Jackson. \"Is this how you plan to fight? By running away?!\"\n\n\"We'll fight later! You just keep running!\"\n\n\"We will settle this now!\" Boonta shouted.\n\n\"You're losing points!\"\n\nKatran growled, turned, and smacked Boonta's shoulder. He said something Jackson couldn't hear, and then took off.\n\n\"Cowards!\" Boonta shouted. He turned and made to catch up to his partner.\n\nJackson gave their retreating backs the finger. \"Told you they'd chicken out. If they try to double-team you, just stop again. Or hell, run back this way if you have to.\"\n\n\"Jackson, do you have any consideration for my pride at all?\" Vuntha said.\n\n\"This isn't about pride. It's about winning.\"\n\nVuntha frowned. \"But that's just it.\"\n\n\"This is a race,\" Jackson said. \"The goal is to get you from point A to point B as quickly as possible. I came up with the best method to do that. That's worth some pride, right?\"\n\n\"But we're using...things from your world. Magic things.\"\n\n\"So what?\" Jackson said. \"I'm a warrior of Shakhan. Tatanka Ska. And I don't like to lose.\"\n\n\"It doesn't seem fair.\"\n\n\"Fair?\" Jackson snorted. \"Nothing is fair. Ever. Why the hell are we having this conversation again?\"\n\n\"This is important.\"\n\n\"Is it more important than Drana?\" Jackson said.\n\n\"It's important because of Drana!\" Vuntha said. \"I just feel like...I don't know. It seems underhanded.\"\n\nJackson watched a good man struggle with the idea of blatantly cheating to get what he wanted. It would be a little funny if it weren't so sad. \"It's not underhanded. Do you want to win or not?\"\n\n\"Not like this. And how is it not underhanded?\"\n\nJackson heaved a sigh. Maybe if he had a little more patience, and could word himself a bit better, he could put together something that would soothe Vuntha's worries and get them on the right track. But he didn't have either of those things. \"Look,\" Jackson said, \"Boonta started this. He knows what I am. He knew to expect something from me - they just didn't think it would give them trouble. They thought wrong.\" He folded his arms. \"I don't have all the answers, Vuntha, but this isn't just a friendly race to the tree and back. Boonta is trying to ruin your life because he thinks it'll get to me. If that's not a good enough reason for you to use everything at our disposal in order to win, then let's just walk back now and quit wasting our time. Because if we're going to do this then you kinda need to start running again. I'm here helping you because you asked, so whichever way you pick, just don't complain to me when you regret it later.\"\n\nVuntha wiped his face. He took a breath. \"Alright. I get it.\"\n\nJackson looked up at the foothills. \"You ready?\"\n\nHe nodded. \"Good fortune to you.\"\n\n\"You too.\"\n\nVuntha started running on the trail of the main pack -- he was over a minute behind them, but that wouldn't be a problem. \n\nJackson took a sharp turn and ran in along the shoulder of the mountain. He jogged up the first hill, and then back down. The rising crags of the black rock overtook his view of the runners.\n\nJackson ran alone until he reached the spot they'd found earlier. It looked like a sheer cliff, but just above it was a flat shelf that they'd spotted from the slopes of another nearby hill. Jackson picked out his first handhold and started to climb.\n\nThe black rock looked slick and smooth, but it had been dry the last few days. The tough leather of his moccasins gave his feet good purchase. He picked his way up the first cliff, checking his grip as he went. He was in a hurry, but not that much of a hurry.\n\nNormally, he wouldn't consider doing something like this. He was not a rock climber, but he had a safety net -- a health bar. Jackson didn't know how fall damage would be calculated, but it was a pretty safe bet that he wouldn't die easily.\n\nThe cliff continued up for a time, and then ended at a shelf, and then kept going. After climbing to his fourth such ledge, he took a short break. Looking down, he'd already climbed a good hundred feet or so; he couldn't pick out individual blades of grass. He slapped his hands together, shook his fingers loose, then started up again.\n\nHe made the next shelf of the shoulder when he heard a voice. \"Jackson, what are you doing?! You're gonna lose!\"\n\nJackson looked over the edge of the cliff he was on. Palla was standing at the base of the rock. \"What are you doing here?\"\n\n\"I came to wait for when the men come back around! It's too slow to climb, you'll never make it!\"\n\n\"Yeah, I know! Don't worry about it!\"\n\n\"But Jackson!\" Palla said. His shout was quickly turning into a whine.\n\n\"But nothing! Don't distract me!\"\n\n\"Fine! I tried to tell you!\"\n\nJackson chuckled and went back to it. Kid thought he had everything figured out.\n\n<p style=\"text-align: center;\">****</p>\n\nAfter what felt like days of climbing, Jackson was starting to think that Palla might have had the right idea. He was exhausted. His hands were chafed. His forearms were tired from clenching handholds. His back ached from pulling his body up over and over again. If he didn't have most of his points in strength and vitality, he might not have gotten this far. \n\nJackson grunted and tugged himself onto another ledge. It was barely two feet wide. He slid across it on his stomach.\n\nA heavy wind scoured across the rocks. He heard a few pebbles clatter around him. He pressed himself back against the wall of the cliff and wiped the sweat off his forehead. This had all looked a lot less insane from a distance.\n\nHe glanced down.\n\nJackson immediately drew his head back. No big deal. I've got a health bar. I can fall. That wouldn't kill me in one go. Probably.\n\nJackson glanced up. The cliff above him might have been the longest yet. It was too steep to tell where it stopped. He might not even be halfway there. He had to make it in time to meet Vuntha.\n\nHe grunted, then straightened. He found a handhold, then hoisted himself up. One hand at a time.\n\nThe wind came again. Jackson jammed his left foot into a crevice and braced himself. His hide shirt rippled across his back. His body heat was sucked away until his bones felt cold.\n\nThe wind died. Jackson made to move his foot.\n\nHe couldn't. It was stuck -- wedged in too tight. He checked his grip, then pulled harder. He wiggled the leg back and forth, trying not to think about what would happen if he struggled too hard and lost his handholds.\n\nHis foot came free -- and his moccasin flew off. The leather shoe tumbled back down the cliff and into oblivion. Jackson drew in a shaky breath. \"That's fucking great. That's fantastic. I hated that shoe anyway.\"\n\nJackson worked for another foothold. His skin was not as good at grabbing the rock as the moccasin. He tried to use his toes to compensate. It didn't work very well.\n\nHe wasn't sure if this was the longest cliff face yet, or if it was the fact that he felt like he was going to be flung away like a dead leaf any second, but it felt like a year before he reached the top. He dragged himself up just as another gust blew by. He pushed himself against the rock, then crawled the rest of the way, not daring to stand straight with the air howling around him.\n\nJackson raised himself up. Relief washed over him. This was it - the top of the shoulder of the mountain.\n\nThe shelf he stood on stretched on a good three or four dozen yards. It was like the surface of another planet. There were scattered rocks and boulders, depressions and cracks, but everything was solid black.\n\nJackson looked out over the plains. The rolling foothills around the mountain gave way to endless green flatlands that stretched in every direction. Only one of the two rivers broke the uniformity. It seemed as if he could see the entire world, and it was solely made up of grass and sky.\n\nJackson glanced up. Even after climbing all this way -- 1,000, 2,000 feet? -- he couldn't even begin to make out the top of the mountain. It was truly massive.\n\nJackson sat down behind a big rock; it helped cut most of the wind. He picked up a pebble and rubbed it between his hands. Despite the uniform color, it didn't feel that different from any other rock. It definitely wasn't obsidian; it wasn't shiny enough. That was the only mineral he knew was black off the top of his head.\n\nThere was something about the mountain - why did it seem so strange? Even people without any magic seemed to sense something about it.\n\nJackson realized what it was.\n\nThere wasn't any life up here. Even in Boston, there were weeds growing in the cracks between the concrete; there were mosquitoes. Mountaintops didn't have trees, but there would be moss and lichen on the rock. There would be shrubs. Grasses. Bugs.\n\nThe mountain had none of that. The prairie ended at the edge of the rock. The black surface could not be touched.\n\nJackson shivered again. Not from the cold, but from the feeling that was tugging him back below the mountain.\n\nHe took out his foldout. It came on with a tap of his finger. Time to settle in and play a video game. How long had it been? He was suffering from serious digital withdrawal. He'd have to ask Rachel for some Mentra the next time he saw her.\n\nHis foldout flickered and died.\n\n\"The shit?\" Jackson pressed the screen again. Nothing happened.\n\nWhat was going on? He'd just charged the thing and double-checked to make sure the battery cell he was using worked. He didn't want to be stuck on the side of the mountain twiddling his thumbs. He tried it a few more times, but it stayed unresponsive. Dammit.\n\nJackson checked his stats. He debated on putting essence into an Attribute, then decided to sit on it a bit longer. He hunted around the menus for some clues regarding the Amplifiers, but he couldn't see anything useful. The tabs and abilities in Isis only showed up after he discovered them for himself.\n\nJackson brought up his minimap and zoomed out. Most of the plains around the mountain were outlined. He scrolled to the side; he could see Chaki's indicator down in the camp. Jackson downsized the map and walked to the other side his plateau.\n\nFar below, he could see the ant-like movements of the runners. They had collapsed into a dispersed line. Groups huddled close together here and there, keeping a healthy distance from nearby competitors. Jackson could see more than one straggler in the back -- one was probably Vuntha. It was a bit too far to pick him out. \n\nThey were almost at the halfway post. It was a large totem pole, jutting from the ground like a lonely tree. When the wind blew, the chains of beads whipped out from it like tiny hairs.\n\nHaving run out of things to do, Jackson sat down again in the sheltered spot behind the boulder. He sighed, and shifted. Fucking piece of shit computer.\n\nHe took out the foldout again. He didn't have his tools, but maybe it was something simple. He dug his nails into the plastic holster. After a minute of wiggling and cursing, he managed to pry it open.\n\nA stench like burning rubber and old onions mixed together hit him right in the nose. Jackson winced and screwed up his face. He held the foldout away from himself and inspected it from afar.\n\nJackson yelped in disgust and dropped the foldout. He hopped to his feet and backed away as the thing clattered to the stone.\n\nThere was a black ooze inside of the foldout; it looked like some kind of glistening fungus. Parts of the wiring and the CPU had been eroded away. What the hell...?\n\nJackson's hand glowed white. He looked down. His scar pulsed white again, flashing like a light. It pulsed a third time, and then stopped.\n\nA screen blossomed in front of Jackson's face.\n\nMost of the menus in Isis were the same. They tended to be brown, almost like wood paneling, with curved blue lettering. On occasion, there would be a slate grey screen with squarish red letters; those were saved for alerts. All of them were slightly transparent, so he could move around while having a screen up.\n\nThis one was black. It was completely opaque. White letters etched themselves across the black screen in cursive, as if a hand was writing them even as Jackson watched.\n\nA hunter has entered this level of the tower.\n\nThe screen shrunk itself into the upper left hand corner of his view. In the tiny space between where his peripheral vision ended and his health and essence bars began, a tiny black pentagram revealed itself. Jackson swallowed. What the hell was going on? Was it because he was messing with his foldout, or was it just coincidence?\n\nHe didn't have his spear, his main weapon. Jackson quickly moved to the center of the plateau; it was a wide, open space. No way for anything to sneak up on him. He kept swiveling, turning his head every time he thought he saw a hint of motion.\n\nThe pentagram in the corner of his vision pulsed white. It went black again.\n\nHe remembered what Shakhan had said, back when it had spoken through Shaka. It said something about the Fallen -- whatever they were -- sending hunters. Had he taken too long? Was he going to be attacked?\n\nTime passed. Nothing happened. His only company was the wind.\n\nEvery once in a while, the black pentagram pulsed. Jackson studied it. It was very consistent. He tried counting the interval and found that they were about thirty seconds apart. After getting the same result five times in a row, he slowly relaxed.\n\nThe pulsing was probably an indicator. Maybe some kind of proximity alert?\n\n\"Shraaak!\"\n\nJackson spun. Something was crawling across the ground toward him -- a freakish, crab-like mass. It had a shiny black carapace and a maw filled with teeth.\n\nHis indicator hadn't changed. Was this the hunter? Or something else?\n\nThe creature skittered forward across the ground. It snapped its teeth, then cried out again. It was small - only about ankle-high. Jackson took a step back and kept his eyes peeled.\n\nThe creature lunged at him. Jackson kicked out at it, but it darted to the side. Another jump, and it latched onto his ankle.\n\nJackson felt a sharp twinge in his foot as it clamped down -- and it quickly got worse, as if it was seeping into his skin. Jackson kicked at it with his free foot, but it wouldn't let go; its legs hooked themselves around his ankle. \n\nHis health had already dropped by 20 points, and it was going fast. A red indicator flashed under his health bar.\n\nYou have been poisoned.\n\nA vial with a skull and crossbones blinked into place under his status bar. Jackson kicked harder, but it didn't help. His health had fallen to 210, and the rate of decrease was getting faster. He needed a solution fast.\n\nHe ran to a nearby boulder. This is gonna hurt. Jackson lifted his foot, then, as hard as he could, slammed his ankle into the rock. The creature was crushed between his leg and a hard place.\n\nIt didn't budge, but it made a sound -- maybe he'd hurt it. Unfortunately, that also made his health decrease. 187. His toes were starting to feel numb.\n\nJackson lifted his leg and smashed it again, and again. Black liquid started seeping from under its carapace. He kicked at it with his free foot. Two of its legs broke off, but its jaws were still buried deep.\n\nHis health was at 140. He had to make something happen.\n\nJackson fell to the ground on his rear. He picked up the sharpest looking rock he could find. He twisted, bringing his foot in reach.\n\nThe thing was disgusting up close -- oozing, pulsing, with green saliva dripping out from the red haze where it had bit into him. He swallowed his disgust and jammed his right hand into the wound he'd made in its shell, peeling it back and jamming the rock inside.\n\nThe creature cried out in pain -- and opening its jaws in the process. Jackson ripped it off, wincing as he did so. Its legs scrabbled to get another grip. He flung it away; it bounced off the rock and hit the ground.\n\nHe climbed to his feet, putting most of his weight on his good foot. His left leg didn't have a visible injury, but the numbness lingered, prickling at him with pins and needles. His health kept ticking down, drained away by the poison indicator.\n\nJackson hobbled over to the creature. It had landed on its back and was struggling to right itself. He brought a foot down and crushed it flat. A few kicks later, and it stopped moving.\n\nA white trail of essence flew out of the bug and into Jackson. His essence went up by 14 points. Not bad.\n\nHe sat down on the ground while keeping a careful eye out for more of the toothed bugs. The poison drained him until he reached 124 health. It wasn't strong; without the bug constantly injecting it, it faded quickly.\n\nAnd then, his status as a video game character took over. His health started to tick back up. After a good ten minutes, his red bar had filled up.\n\nOnce the adrenaline died down, he was able to think straight. He should have tried putting essence into a kick and creating a new ability; that probably would have helped a lot. But at least he didn't waste any.\n\nWhere the heck had that thing come from? There wasn't anything up here.\n\nJackson had a sudden thought. He walked back over to where he'd tossed his foldout to the ground. His suspicions were immediately confirmed. The black mass he'd taken for a fungus had hatched like an egg. The creature must have emerged from inside.\n\nBut how did it get into his foldout? The computer had been malfunctioning for a while. That must have meant it was growing inside for at least a day or two.\n\nJackson heard a scraping on his left. Another bug? He glanced at the pentagram -- the pulsing was the same, still slow. He crouched at the center of the plateau, ready for whatever was coming.\n\nVuntha's head appeared over edge of the cliff. He landed with an easy grace on the top of the plateau. A cord looped with red beads was tied tight around his forearm. \"Hey, Jackson!\"\n\n\"Vuntha.\" Jackson sighed. \"I'm glad to see you.\"\n\n\"These things are amazing,\" Vuntha said. He bounced from toe to toe. \"I feel like a deer! I was jumping up cliffs!\"\n\n\"They'll help you drop down the steps here,\" Jackson said. \"Whoa. What happened to your shoulder?\"\n\nVuntha brushed his hand over a bloody cut on his skin. \"It's worse than it looks. Boonta tried waiting for me at the totem pole. The trainers helped me get away, though. He'll have a serious bruise from the kick I gave him.\"\n\n\"Good.\"\n\n\"What's that smell?\" Vuntha's eyes followed his nose. \"Ugh. What is that thing?\"\n\n\"Don't know, and I don't wanna know. But I killed it.\" Jackson sighed. \"Take off your shoes.\"\n\nVuntha gave the crushed bug a long look, then kicked his moccasins away. Jackson brought a spare battery cell out of his pocket.\n\nClimbing over the shoulder of the mountain would take too much time -- unless you had jump trainers. But even then, the battery wouldn't last long enough to go the whole way. The plan Jackson devised was simple; he'd climb up the mountain and meet Vuntha halfway with a spare battery. And then, Vuntha would keep hopping right down the mountain and win the entire race without breaking a sweat."
    ],
    "authorname": "Over_Red",
    "tags": [
        "dream drive",
        "virtual reality",
        "sci-fi",
        "fantasy",
        "action adventure",
        "magic",
        "video game",
        "cyberpunk",
        "romance"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dream-drive-ch-07"
}