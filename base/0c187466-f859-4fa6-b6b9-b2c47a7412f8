{
    "title": "Mary Janes",
    "pages": [
        "I've been working on this story for a while and while it's not as full of hot sex as some others, it does get there. If you're looking for something quick to help with the 'pressures' of your day, you might want to save this one for later. If you're in the mood for a nice love story and another tale of transition, then give this one a try. Standard caveats, everybody doing anything risqu\u00e9 is 18, and I only do happy endings...\n\nI hope you enjoy my humble offering, and please, please, please, leave me a comment letting me know what you think.\n\n* * * * *\n\nVictor felt odd unlocking the door and stepping inside, he had driven past the house a thousand times and for some strange reason, it was now his. He had never actually met the old man but had seen him countless times toiling quietly in his yard, trimming the hedges, weeding the flower beds, and mowing the expansive yard with the antique push mower, Mr. Francis was a local icon, if only for his immaculate yard.\n\nVictor knew why but still didn't understand, the lawyer had explained it all very clearly, it had been three or four years ago, Victor was working for his dad, as he had been since he was old enough to tag along, doing odd jobs at first; go get me this tool, no not that one, that one. He had slowly learned the business, landscaping and general contracting and grew to enjoy it.\n\nReturning from a small job, he had driven past Mr. Francis' home just as he did almost every day, this time the old man was nowhere to be seen, in fact, his yard needed to be cut badly and the hedges were looking a bit rough, there were even a few dandelions.\n\nFor no real reason other than it just didn't look right, Victor pulled over, took his mower out of the bed of his truck, and went to work, it took the rest of the day with Victor only stopping to take a drink from the water hose on the side of the house and once to adjust his hair into a slightly higher ponytail to keep it off his neck. When he was done, the yard was back to its immaculate normal, the hedges were neat and the dandelions gone, he had even cleaned the pool. With a smile on his face, he packed up and headed home, exhausted.\n\nThe next week, Victor drove by, and the old man was back at it, vigorously tending to some begonias around a large tree off to the side of the front porch, all was right in the world once more, until a few years later when Victor got the call from Mr. Francis' lawyer, the old man had died in his sleep and left everything to Victor.\n\nThe house was immaculate inside as it was out, the large living room sparsely decorated with vintage furniture fed into a dining room with a beautiful cherry table and chairs. The kitchen had been modernized, whoever had done the work had made sure not to disturb the aesthetic of the old house. A sunporch covered the back of the house, looking over the pool and the huge back yard.\n\nThe rest of the ground floor was taken by a small office or library and a large master suite, an ornate king-sized bed dominated the space, a large bath, also modernized and a huge closet, one short wall was filled with business suits, black slacks and white shirts, Victor thought about it and he didn't think he had ever seen Mr. Francis in anything else as he worked in his yard, the other three walls, dresses, skirts, and other feminine clothes, these must have been Mrs. Francis' things that the old man just hadn't been able to part with. Upstairs were two more bedrooms with a shared bath and a sitting area with a huge bay window overlooking the backyard.\n\nThe only thing out of place in the entire house was a single pair of heels, simple black with a wide heel and a little strap across the front, Victor seemed to remember his mom having a pair that she called her Mary Janes, they were in the middle of the floor, one laying on its side, its strap undone, they looked so lonely, almost like they were lost, Victor righted the fallen shoe setting it carefully next to its sister and went back out to his truck to start bringing his things inside.\n\nThe lawyer had been very specific, that one act of random kindness had convinced Mr. Frances that Victor deserved his estate. A few ambiguous relatives had tried to protest, but lost, it was Victor, the old house, a more than modest trust, and vague memories of an old man he had never met.\n\nExcept for the house, Victor had fought for everything he had in his life, even his position at his father's company, he had learned at an early age to stand up for himself, hit fast, hit hard, and if that didn't work, run like hell.\n\nHe had always been shorter than the other boys and he liked to hang out with the girls, mostly because they were smarter than the guys. In elementary school, it hadn't been a big deal, at least not until fifth grade when Tommy Miller hit a growth spurt and started terrorizing the class. One day he picked Victor, pushed him off the swing he was on and stood over him, daring him to do anything about it, Victor came up fast and hard, a knee to Tommy's crotch was followed by a fist to his nose.\n\nTommy doubled over, clutching his crotch with one hand and his nose with the other as blood covered the sand. Both boys were suspended for two weeks, and Victor had learned the first part of the lesson, he learned the second half the next day when Tommy recruited two sixth graders to help him get payback, they were bigger and with their longer legs, faster, but Victor was quick as a rabbit and just as shifty, they never caught him.\n\nFor the rest of his suspension, Victor went to work with his dad, it was the first time of many. As the other boys grew and Victor didn't, he started to rebel in other ways, he grew his hair out and experimented with drugs a bit, which got him in a different kind of trouble.\n\nMiddle school was worse, all the boys and many of the girls were taller than Victor, their teasing was merciless. High school was no better, he still wasn't growing, had no facial or body hair. His friends were all girls, but there was never a girlfriend. The guys were brutal, with Tommy Miller in the lead, they shoved him in lockers and tossed him in dumpsters. He fought back with everything he had, doing his share of damage, and collecting his share of suspensions.\n\nBy the time he graduated, he was all of 5'6\" and 125# with long auburn hair, green eyes, a newly expunged police record, and a huge chip on his shoulder just begging to be knocked off. The funny thing was, he would give you the shirt off his back if you needed it.\n\nThe suspensions had grown into a summer job and then a full time one. The one place Victor felt he got the respect he deserved was at work, he knew his way around a landscaping job or a construction site as well as anybody and could fix just about anything, his dad had made him a crew chief as a result.\n\nHe had expected to put those skills to use on the old house, but it was immaculate, except for that one pair of shoes.\n\nVictor emptied the first ice chest into the refrigerator and the second into the freezer, he was not going to be hungry, his mom had made sure of that. He started on the closet in the master bedroom, meticulously packing Mr. Francis' clothes into boxes for the trip to the Salvation Army and replacing them with his own. On a whim, he slipped one of the suit jackets on, it fit perfectly. By the time he had dropped off the last box, it was late, and he was hungry and tired, he would tackle the bright soft fabrics in the rest of the closet tomorrow.\n\nHis stomach led him to the kitchen where he made a couple of sandwiches, grabbed a beer, and went to sit by the pool, no, his pool, it was going to take a while for the whole thing to settle in his mind. The night air felt good, the birds in the trees welcomed him to his new home. He took a deep breath, trying to take in the scents and smells of the night and realized he needed a shower, and badly.\n\nThe shower took a while to figure out, six control valves and five nozzles, two on each end of the shower and a massive rain-flow head above him. Once he got the spray he wanted and the temperature set, he grabbed the first bottle of body wash he found, squirted a big glob in his hand and started scrubbing, the delicate floral scent of lavender filled his head.\n\nPausing for just a minute, he decided what the hell and kept going, it smelled nice. He turned around and saw the simple bar of soap and the bottle of Head and Shoulders at the other end of the shower, oops.\n\nMaybe the body wash, shampoo, and clothes belonged to Mr. Francis' girlfriend, but if that were true, why didn't she get everything? \"Oh, well,\" Victor thought to himself, \"it's not worth worrying about anymore anyway.\"\n\nVictor dried off and took a long look at himself in the mirror, his mom often commented that he should smile more, \"no nice girls are going to date you if you look mad all the time,\" she would say, and she was right, he was pissed that he was so short, he was angry that his small hands sometimes made it difficult to do his job, and if you really wanted to see him mad, just mention his cute butt or tell him he looked like a girl.\n\nHe worked hard and it showed, there was no fat anywhere on his body, lean and taut, it was just small, \"too small for a real man,\" the last guy he had gotten into a fight with had said, he wouldn't say it again, at least not to Victor's face.\n\nGrabbing a pair of boxers out of the top drawer without thinking, Victor started to slip them on, the silk and lace running up his leg felt nice, dammit, wrong fricking drawer, he tossed the pink panties back where he had accidentally found them, turned around and took some boxers out of the drawer on the other wall. Shorts and a t-shirt were next, and he was good to go. There had been a T.V. in the office and a movie would be just the thing to help him relax, or so he thought.\n\nTaking a deep breath, he smiled at himself for the lavender and lace missteps as he headed for the closet door and tripped over the heels he had left in the middle of the floor. He picked them up and looked for the spot they obviously belonged, \"I mean everything in this whole house had a spot, right?\" He thought to himself.\n\nThe shoes were black and had a brogue accent on the toe and a matching heel cap, , he knew what a brogue was from 'The Kingsman.\" The heels weren't too tall, and they were kind of cute, \"mom would love these,\" he smiled. There was no spot for the shoes, so he set them down a little more out of the way and headed downstairs to grab one more beer and see what he could find on the television.\n\nHis plans fell apart when he discovered there was no cable, there was however a DVD player and a vast collection of documentaries on gardening and flowers. \"What the hell,\" he said it out loud, popping the case on a DVD called 'The Preparation and Care of Begonias', how bad can it really be, he laughed to himself.\n\nThere was no intro, the video started with an attractive young lady explaining to her teacher why her assignment was late, offering to do anything, sex literally dripped off the word anything the way she said it,\" Mr. Francis; you sly old fox,\" he leaned back in the chair behind the desk and sipped his beer. It was porn, raw and plain, the dialog was horrible and the photography almost as bad, but the man was hung like a horse, and the young girl was stunning, when she took the massive piece of meat all the way down her throat, Victor spewed beer across the room. When the man lifted her up and placed her on his desk, gently pulling her panties down her slender legs, exposing her tiny little penis, Victor choked, grabbing the remote, knocking it on the floor, scrambling to pick it up and hit the power button, or was it the pause button?\n\nWhen he looked at the screen, instead of blank it was a closeup of the young girl with the man's horse-cock all the way inside her and a small stream of liquid shooting from her tiny cock, she looked like she was in ecstasy. This time he made sure he hit the power button and the screen went dark, he put the DVD back in its case and for some reason, instead of tossing it out, put it back on the shelf where he had found it.\n\n\"Mr. Francis; you randy old goat,\" he laughed as he chugged the rest of his beer and decided to just call it a night, that huge king-sized bed did look comfortable. For once since he had gotten into the shower, he had been right.\n\nLaying there going over how crazy this whole thing was, he ran it all through his mind, the call from the lawyer, the challenge from relatives that new less about Mr. Francis than Victor did, moving in, the porn, and those stupid shoes, where did they go? It was driving him crazy, he threw his covers off and went back to the closet, if they could have the shoes would have laughed at him.\n\nVictor picked them up and looked at them closer, size ten, same as his mom; same size as him, he had borrowed some sneakers from his mom more than once. Undoing the remaining buckle, he set the shoes on the floor, took a deep breath, and stepped in, they fit perfectly. Fastening the straps one at a time, he half stumbled to the dressing mirror and looked at them on his feet, he could feel his heart starting to race, they looked nice, no not nice, that wasn't the right word, they looked cute.\n\nHe looked at the wall behind him, dozens and dozens of pairs of shoes, heels, boots, sandals, all different styles and colors, did he dare? He took the Mary Janes off and selected a pair of bright red stilettos with what must have been six-inch heels, wobbling back to the mirror, he was as confused as he was excited. Next were the knee-high boots, and then the strappy tan sandals with the short heel, he went on and on, before he knew it the floor was covered with shoes, and he was giggling like a little girl.\n\nSlowly and delicately, he put his new treasures back in their places until the only pair left were the black Mary Janes that had started it all. Smiling he crawled back in bed and passed out.\n\nOver breakfast he tried to justify what had happened, he couldn't, there was no rational explanation for how those shoes had made him feel. All he knew is he wanted to feel that way again. He cleaned up the kitchen and went back to the closet. Standing there looking at the shoes, trying to decide which ones he wanted to wear, his eyes drifted back to the dresser, what other wonders might there be?\n\nThe top drawer was panties and bras, next were tank tops and silky tops with thin straps, Victor thought they were called camisoles but wasn't sure, the third drawer was full of stockings, all different shades, and a wonderland of socks, some plain and some with frilly lace at the top, next were t-shirts, then nightgowns, and finally shorts and swimsuits. A wonderland of dresses, skirts, pants, and pretty tops filled the rest of the wall, Victor ran his hand across them letting the soft fabrics caress the tips of his fingers, vaguely aware of the movement in his crotch.\n\nHis hands trembled as he slowly pulled the top drawer open, selecting the pink panties he had grabbed by mistake last night, he stepped in and let out a sigh as they slid up his legs to replace the boxers now laying on the floor. They were just tight enough that they held his penis in place, not that it was all that huge anyway, another thing that had always bothered Victor. His mind flashed back to the girl in the porno he had found, he could feel himself blush, she had been about the same size as him.\n\nRunning his hands over the satin and lace, he took a few deep breaths soaking up the feeling of the soft fabric against his skin. There was a bra, just as pink and lacey, with a matching pattern that caught his eye, could he do it, did he dare? Another deep breath, another big sigh and he slipped it around his chest. After a few attempts and ultimately putting it on backwards and sliding it around, he adjusted it, so it was comfortable, admiring how the padding gave him modest breasts.\n\nVictor's mind was spinning, he wanted to look at himself in the mirror but was too afraid to, so he opened the next drawer, more satin and lace, a pink camisole slid over his shoulders and down his body, Victor had found heaven on earth, the delicate fabrics kissed and caressed his skin in ways he never thought possible, goosebumps raced across his arms and legs. \"This can't be real, it can't be happening,\" a small voice in the back of his head called out. Victor closed his eyes and sighed softly, \"but it is,\" he said it out loud as a smile crept across his face and a moan escaped his lips.\n\nThe stockings he chose had sticky elastic bands in them that held them up on his thighs, it took three tries to find a dress he felt right in, and thought would go with the shoes he had finally decided on. He slipped on the low heels and turned to look at the finished product, a huge knot growing in his stomach as doubt screamed from the back of his mind.\n\nVictor didn't recognize the person looking back at him, first, she wasn't angry, she was smiling, her face was relaxed, her big green eyes shown with something he hadn't seen in a long time. Modest breasts and a slender waist were complemented by slim hips and very nice legs, the stockings hid what little hair she did have. All in all, she was cute, and he liked it, all of it; mostly he liked how he felt when he saw her smiling back at him.\n\nA quick spin, giggling as he watched her, a mix of emotions welled within him as he stared at the girl in the mirror, was this right or wrong? Why did he like it so much? Did it make him gay? And what if someone found out, what would he do then? Part of him was terrified and another part could not have cared less, all of him wanted more information.\n\nUnfortunately, his laptop was behind the seat of his truck and even if he had it, he didn't have internet, he found his phone and called the cable company, they would have a technician out tomorrow morning. For today, he could do whatever he wanted. First things first, he looked around the room, the closet was a disaster, outfits everywhere, dresses and skirts scattered across the floor, at least a dozen pair of shoes mixed in, pants and tops and various items of lingerie added flashes of bright colors here and there.\n\nThere was an obvious system to the closet with everything having a specific place, except for those stupid Mary Janes, Victor laughed at himself as he frowned at the shoes. Once everything was in place, it was just a matter of what he wanted to wear, the skirt and top were nice, but did he really want to wear stockings and heels for the rest of the day?\n\nVictor eyed the clothes in the closet, he could play some more dress-up but that would mean having to clean up the closet again if he got carried away, and he knew he would. Instead, he opened the bottom drawer and chose a simple bikini, black with purple and pink flowers, the top had just enough padding to make him look like he had boobs, the bottoms weren't too skimpy but skimpy enough that it showed off just the right amount of his butt; he was just going to hang out by the pool and relax. It had been a long time since he had allowed himself to do anything like that.\n\nHe grabbed a few beers, set Pandora on his phone to his Jimmy Buffett channel and headed out to do nothing for the entire afternoon. He swam some laps and just laid in the sun, relishing the feeling of the warm rays as they slowly cooked his body. Several beers and several hours later he realized that he had missed something important, as he got in the shower to rinse off, he spied himself in the mirror, his tan lines were obvious.\n\nOld Victor would have been furious, new Victor just laughed and decided that going shirtless at jobsites wasn't going to be his thing anymore, some scented aloe lotion took the sting out of his sunburn, he pulled on a cotton sleepshirt and ordered a pizza, not caring what the delivery guy thought when he paid him at the door.",
        "Victor grabbed a beer and took the pizza to the office, this time picking a documentary about roses, they had to be safer than begonias, he rationalized. The production quality of this video was much higher than the one from last time and the young lady just as stunning, part of him hoped that the old man had varied tastes and another hoped he didn't, the image of her face as she erupted on her stomach, that massive thing inside her still haunted him.\n\nThe story was the same, pretty, young girl with something extra gets plowed by an unusually well-hung guy. This time Victor watched the whole video and when the young girl spewed, so did he.\n\nChanging his nightshirt and cleaning himself off, he climbed into bed. Without the worry of where the Mary Janes went, he slept even better than he had the night before.\n\nAs each of the outfits he had tried on yesterday had, his choice for what to wear when he woke up the next morning started with the shoes, which pair spoke to him, which ones demanded his attention, the knee-high boots with the four-inch heels won out. Victor chose simple cotton panties and a soft bra before wriggling into a pair of jeans that, if they hadn't had just enough stretch, he would never have gotten on. It took some experimentation, but he figured out how to hide his manhood, he chose a billowy cotton blouse to complete the outfit and headed downstairs to make breakfast almost forgetting about the cable guy until a loud knocking at the front door broke his trance, realizing he didn't have time to change, he just opened the door, it was just the cable guy after all.\n\n\"Service call, um, miss, cable installation,\" his name tag said George and he sounded like he had been caught off guard.\n\nOld Victor would have bristled a little at being called miss, but new Victor liked the way it felt, especially considering how he was dressed, he justified it a little by reminding himself it was just the cable guy and he'd never see him again, so he let it go, \"yeah sure, come on in.\"\n\nWhen George was done, Victor had cable, high-speed internet, and a wi-fi booster upstairs just in case, he was all set. Victor signed the form, George left making sure to take a second look at the cute butt on the redhead that had been following him around asking all kinds of questions for the past three hours, could her jeans have been any tighter, he doubted it and he wasn't about to complain.\n\nVictor watched as George made his way back to his truck smiling and waving one last time and then thinking about everything that had happened over the past few days, he really needed more information about what he was doing, and he needed it now. His computer was still behind the seat of his truck which he had let George move to the street so he could access the side of the house where he needed to. He thought about his options as he finished his lunch, go change so he could change back again when he got back inside, because he knew he would, or just go for it, nobody would recognize him anyway, right?\n\nHe fought with himself and rationalized and finally snuck out the side door and crept along the hedge until he got to the sidewalk. A quick dash to his truck and bingo, he figured he could run back inside before anyone ever saw him, perfect. He quickly realized he had missed one small piece of the puzzle, he had only been wearing heels for a few hours and could barely walk in them, he found out he couldn't run in them at all as he twisted an ankle and collapsed in the middle of the yard when he tried to dash back inside.\n\n\"You ok?\" a slightly familiar voice came up behind him. George had been eating his lunch in his truck.\n\nVictor was speechless, shaking his head no, as he grabbed his foot, his old P.E. coaches would have told him to walk it off, yeah, like any of those jerks could run in heels either, he almost smiled and then his ankle throbbed again.\n\n\"Let me help you inside, that was a pretty nasty fall there.\" Terrified, Victor just let George pick him up and carry him back toward the house.\n\n\"Side door,\" he finally spoke, he hadn't realized how big and strong George was and felt a strange mix of feelings start to grow inside him, one of them in his crotch.\n\nWhen George had Victor settled on the sofa in the sunroom, he took the boots off Victor's feet and gently checked the swollen ankle, running his hands just a little up the calf and back down, his big hands were so tender.\n\n\"Kitchen?\" George asked and Victor pointed, not sure what was really going on and trying to decide whether to tell George to just leave or to let him stay and take care of his injury.\n\nGeorge came back with a cold pack made from a zip lock bag full of ice wrapped in a towel, he put the injured foot on a pillow and laid the pack on top, patting it gently and smiling at Victor.\n\nVictor felt better almost immediately, something was going on inside him he couldn't comprehend. He was feeling things and thinking things he should never had felt or thought, someone had pulled the plug on a bottle of pent up wants and desires and Victor didn't know if it was ever going to be possible to put it back.\n\n\"If you're sure you're going to be ok, I'll just let myself out,\" George gave Victor a big smile, his eyes twinkled like he knew a secret.\n\n\"I think I'll be fine; I don't think it's as bad as it might have looked. \"Victor returned the smile.\n\n\"Well, ok then, it was nice to see you again,\" George turned to leave, stopping, and turning around with a puzzled look on his face,\" Um, can I ask you something?\"\n\nVictor just stared at him as millions of possible questions ran through his mind, none of them he wanted to answer.\n\n\"It's just, well, um,\" George was obviously trying to figure something out, \"the work order from earlier, it said Victor Marshall, is he like your husband, father, or brother, or something or was it supposed to say Victoria? None of my business really, it's just that you're either the prettiest Victor I have ever seen, or the paperwork was wrong.\"\n\nIt hadn't been just a slip, George really thought he was a girl, it was the first time in his life it hadn't pissed him off,\" Um yeah, Victoria, but you can call me Vicki if you like,\" she smiled at him.\n\nVictor hadn't noticed George, but Vicki was taking in all she could of the man flirting with her, tall and strong, big brown doe eyes with a nice smile and wavy brown hair just over his ears. His voice was a soft resonant baritone, she had felt it through his chest when he was carrying her inside, his large hands calloused from hard work but still gentle, and the way his jeans hung off his butt, Vicki caught herself blushing.\n\nGeorge started to leave a third time,\" You ever ride horses?\" he stopped and turned around again.\n\nVicki shook her head,\" always wanted to, though.\"\n\n\"Maybe we could go out to my parent's place sometime, we have a filly I think you'd get along with, if you're not busy, that is.\"\n\nVicki was swooning, the words couldn't be hers,\" yeah, I think I'd like that,\" she smiled, \"just call me sometime? You can get my number from the workorder, right?\"\n\n\"Yeah, I can do that, we can ride out a bit and have a picnic at a place I like, view, big oak tree, little pond, it's nice.\"\n\n\"That does sound nice, just give me some time to heal first,\" Vicki smiled and watched as George let himself out. As soon as she was sure he was out of earshot, she grabbed a pillow, put it over her face and screamed. Somewhere deep inside, Victor was screaming too.\n\nWhere Victor rarely got caught off guard, Vicki seemed to be developing a habit of not thinking things through, she was stuck on the sofa in the sunroom with her laptop just out of reach, the wi-fi password in the study, her phone in the kitchen, and she needed to pee.\n\nShe held on until she really didn't have a choice only to discover her ankle wasn't really that bad, sure it had hurt when she twisted it, but there was no swelling to speak of and she could walk with only a small amount of flinching, it had sure been nice the way George had taken care of her, though.\n\nThe afternoon was spent cloistered in the small study searching the internet, she found forums and blogs, she found whole websites dedicated to men in dresses and all kinds of discussions on 'being transgender,' she read it all, even creating a login and posting a couple of questions on one of the forums. The 'gurls' on the forum were awesome, offering advice and encouraging her, a few demanding pictures of the magical closet she had found and the treasure within and a few others asking politely for pictures of her.\n\nVictor would never have taken that kind of risk, but Vicki found it liberating, she made sure to give them a picture of the Mary Janes that had cracked the door open, too. When Vicki finally came up for air, it was after two in the morning, so many things she had never thought of swam through her mind as she slowly got undressed and ready for bed, she had found thread after thread in the forums on going out in public, coming out to your family and work, makeup and hair removal, all of the posters seemed to agree that manicures and pedicures were a gift from the gods, and, of course, cautionary tales about haters and predators, and even one about tucking that was important enough that the moderators had pinned it to the top of the board.\n\nVicki tossed and turned in fits of restlessness, struggling with all the new information and the strangeness of what had transpired, she hadn't been in this house for two days and her entire perception of who and of what she was had changed, then she thought of riding horses with George, she thought of how tender and delicate he had been with her and she remembered his big brown eyes and kind smile, everything else seemed to fade into the background.\n\nThe morning greeted her much later than usual, she stretched and yawned and slid out from under the massive comforter, listening to the sound her small feet made as she padded across the hardwood toward the bathroom. Smiling as she surveyed herself in the mirror, noticing how all the things that Victor had hated about himself, her height, small hands and, um yeah, that too, her inability to grow a beard, her slender body, and that round butt, were boons for Vicki.\n\nShe could use a little help here and there she thought and started rummaging through the drawers of the vanity until she found the beard trimmer, the unruly mass of red hair in her crotch was quickly trimmed neat as was the hair under her arms, she would finish in the shower when she did her legs.\n\n\"Shave my legs, what am I doing?\" Victor's voice screamed in her head.\n\nA shiver of anticipation ran through her as she remembered how sensual some of the posters in the forum had said shaving could be, she was subconsciously hoping she didn't bleed to death in the process. It went quickly and she enjoyed the whole process even more than she thought she would, it was a little like opening that last present at Christmas, the one you knew was going to be the perfect gift, it was made even better when she spread the scented moisturizer over her legs when she was done. She couldn't resist the temptation to just sit and rub her silky-smooth legs together for a few minutes.\n\nVicki felt like she had waisted the day yesterday in some ways, there were things that needed to be done around the house, the electrical still needed to be checked and she knew she wanted to exchange the incandescent bulbs for LED, so she headed for the closet to get dressed, Victor's side wasn't even a thought.\n\nShe opted for jeans and a t-shirt, the same jeans from the day before, the ones so tight she could barely get them on, the stuff she read about tucking helped, \"I guess this is what they mean by skinny jeans,\" she laughed as she admired the way they hugged her legs and butt. The t-shirt was smaller than what Victor would have worn, just tight enough to accent the small breasts the pushup bra gave her and long enough to barely cover her midriff, the knee boots with the four-inch heels finished the look.\n\nHer hair up in a ponytail she didn't hesitate as she headed out the door to her truck to get what she was going to need, even waving at a couple as they walked past, a small yorkie tugging at his leash as if he were in charge, she giggled, he probably was.\n\nThere were no surprises, everything was in excellent condition and Vicki had her list of bulbs she would need to pick up at the hardware store, the only thing she hadn't checked was the garage.\n\nHer heart stopped when she opened the door, sitting in front of her were three cars, one a newer Cadillac, the other two though, oh my god, a 1963 split window Corvette and a cherry red 1957, she could feel herself trying to get hard.\n\n\"Mr. Wilson, this is Vicki, I mean Victor Marshall, I'm in the garage and I have a couple of questions, are they part of the deal and if so, where are the keys?\"\n\nMr. Wilson laughed, \"small cabinet in the wall next to the side door in the kitchen, I'm guessing you have an idea what you're looking at?\"\n\n\"Oh, yeah, and they are beautiful,\" Victor's voice was giddy. Mr. Wilson laughed again as he hung up.\n\nThere was no question they ran, that the Cadillac was his mom's, or that Vicki was taking the red convertible to get lightbulbs.\n\nWho would have thought that picking out a purse was a big deal? Certainly not Victor, but it took Vicki thirty minutes. There wasn't much in it but there was no way her keys and wallet were going in the pockets of her jeans.\n\nThe 57 roared to life when she turned the key, pulling slowly out of the garage, she hit the button to close the door behind her and headed out, it was a dream come true. She was so much into the experience of driving the car that she let her auto pilot take her to the hardware store, only when she parked did it hit her that she knew almost the entire staff by first name, her confidence vanished, Victor screamed in her head, \"what the fuck am I doing here, like this?\" In her panic to get out of the parking lot, she almost hit one of her father's trucks.\n\nShe pulled into the strip center across the street, shaking and trying not to cry, cursing to herself about how stupid this whole thing was.\n\n\"Sweet ride,\" the strange voice suddenly gave her a center.\n\n\"Um yeah, thanks.\" She couldn't look at whoever it was.\n\n\"Serious, I'm not hitting on you or anything, but this is like my dream car, can you show me what she's got?\"\n\nVicki popped the hood and realized she hadn't looked either, the young man waited patiently while she got out of the car and opened it exposing and engine so clean you could have served dinner on it.\n\n\"To be honest, I just inherited her, so I don't know the details, but I'm pretty sure it's all original and the numbers match, she sure is fun to drive too.\" the distraction was helping her settle down. They talked cars for a bit, walking around the Corvette, admiring her classic lines, Vicki caught him admiring her a little, and it made her smile.\n\n\"Well, thanks, I gotta go, my mom is waiting, she's beautiful,\" he nodded at the car,\" almost as pretty as her driver,\" the young man blushed and started to turn and walk away.\n\nVicki grabbed his arm and kissed him on the cheek, \"thanks, you don't know how much I needed to hear that right now.\"\n\n\"Um, yeah, anytime,\" he put his hand to his cheek and almost tripped over the small curb, Vicki tried not to laugh wishing she had been wearing pink or red lipstick to leave a mark.\n\nShe closed the hood and smiled as the young man looked back over his shoulder at her, who knows, maybe he needed that too.\n\nThe sign said Olympic Day Spa. Walk-in's welcome, with a list of offerings; manicures, pedicures, facials, massages, and makeovers, without even realizing it, Vicki had parked right in front of the door when she ran away from the hardware store, she didn't even get back in the car, grabbing her purse, she took a breath and walked inside.\n\nThe girl at the desk was pleasant, describing the offerings and packages in detail helping Vicki choose, she got their most expensive package, paying a little extra for them to teach her the basics of makeup, Vicki even admitted she was trans, cross dresser just didn't seem to do justice to how she felt, and the girl acted like it was the most normal thing she had heard all day.\n\nThe mani-pedi was just as nice as the gurls in the forum had described, Vicki's nails were now bright red to compliment her hair, and her car, even as Victor, she thought her hair was her best feature, so they trimmed it and got rid of the split ends.\n\nThe polish would have to come off when she went back to work but for now, it was perfect.\n\nWhen they finished coaching her on her makeup, Vicki knew there was no going back, the young lady in the mirror was beautiful, the massage that capped it all off put her to sleep.\n\n\"OK, girly girl, this is a spa not a hotel,\" the masseuse slapped her on the butt to wake her up, and laughed when he was done, \"take your time getting dressed and I'll be right outside to show you out when you're ready.\"\n\n\"But mom,\" Vicki feigned a protest that got another laugh from her masseuse and rolled off the table to get dressed. Squiggling into her jeans, and pulling on her boots, she felt better than she had in a long time.\n\nThe receptionist had the makeup she had purchased ready for her at the front desk and booked her for another massage and a mani-pedi for six weeks from today. As she left, she checked herself out in the mirror, there was no Victor in the person looking back, it wasn't just the makeup and the clothes, there was something fundamentally different, gone was the hard angry face, in its place a soft pleasant smile, Vicki finally understood why Victor had truly been so angry all those years, why it pissed him off so badly when someone called him girly, deep inside, being girly was what he had really always wanted and he never thought he would get it; there was no need to be mad any longer.\n\nThe realization didn't make what she knew she had to do next any easier, tomorrow was a workday, the three days her father had given her off to get settled had put them behind schedule and she knew it. The horror stories she had read in the forum made her shudder, how was she going to tell her parents about this, and holy fuck, what was her dad going to do about it?\n\nVicki got in the little red Corvette and just drove letting the road take her wherever it wanted while she let her mind work on how she was going to move forward without ruining the life Victor had worked so hard to build.\n\nIt was well after dark when she got home, she parked in the garage and went inside, washed her face, took the polish off her fingernails, and crawled into bed deciding it was too soon, it was all too new to tell anyone else and besides, it just might all go away after the new wore off; that's what she told herself anyway.\n\nGetting dressed for work was a little more interesting than Victor had anticipated, he knew he couldn't wear what he had worn yesterday but something inside him kept drawing him to that side of the closet. When he was done, he had on his normal work jeans and shirt with a nice comfy pair of cotton panties underneath and his work boots, the panties would have to be enough.\n\nThe next couple of weeks were interesting as he toyed with what he could wear and when. His days were filled with work, his crew was finishing a remodel and he was in the thick of his element. As soon as he got home, he would take a nice hot bath, soaking in scented bath oils, Vicki would get dressed and either chill or go for a drive in her red Corvette, sometimes she would put on a bikini and go for a swim, days were for Victor, nights belonged to Vicki, but the lines were blurring quickly.\n\nA few days later, Victor was in the office going over plans for a new job helping his dad put together a quote when the potential customer accidentally called him miss, you could have heard a pin drop, his response was, \"yeah, I get that a lot, maybe a little less eye shadow or something might help,\" Victor's mind went to the purple lace panties and the garter and stockings he was wearing under his work clothes, he gave a wry smile.",
        "The customer laughed commenting, \"my wife sells Mary K, maybe she can help you with that.\"\n\n\"You have her card?\" Victor laughed and they got the job. The self-deprecating humor caught everyone by surprise, especially his dad who did a serious double take.\n\n\"If only they knew I wasn't joking,\" a voice in his head whispered.\n\nAnother week passed and while everyone seemed to be getting along with the new less angry Victor, he was struggling to keep his dressing in check. Vicki had gone shopping and bought several pair of women's jeans that had become Victor's new work jeans, just a little more snug and tighter in the crotch, they accented his butt in a way old Victor would have never tolerated. He managed to make it an entire day with no one noticing the sports bra he had worn under his shirt. When he did it again with a lacy pushup and some very modest breast forms Vicki had found online, Victor knew a tipping point was coming.\n\nIt had been a few months since she had moved into the old house and found those silly shoes, she had just left the spa, this time her fingernails were a simple clear coat while her toes were the same vibrant red, she had gotten before, she knew something was going to give that something was going to happen to push things over the edge, and then her phone rang, \"Um, hi. This is George, the cable guy. Is this Vicki?\"\n\nShe had almost forgotten him and his offer to go riding, \"Oh, hi, I was starting to think you were never going to call.\"\n\n\"How's your ankle? All better, I hope.\"\n\n\"Yes, thanks. It was just a sprain, I was actually up and about a few hours later, having to pee can be motivating,\" she laughed, and he joined her. There was a short awkward silence for a second or two.\n\n\"Listen,\" George started, \"do you have plans for Saturday? I was thinking we could go on that ride I promised you.\"\n\nVictor started to panic but Vicki didn't miss a beat, \"I think I'd like that. What time should I be ready?\"\n\n\"I'll pick you up about ten, if you have some boots with a shorter heel, they'd probably be better than the ones you had on the other day, less chance of injury, \"he chuckled and she smiled, \"See you Saturday,\" there was a slight lift in his voice as he said it, a hint of excitement. It made Vicki blush.\n\n\"What did I just do?\" Victor silently screamed at himself, \"I can't have a date with him! I'm a guy, he's a guy, what is wrong with me?\" The image of the beautiful young girl in the begonia video came to his mind and he blushed as something strange happened in his crotch.\n\nWhen Victor got home, he made his way to the office, grabbing the begonia video and sliding it into the DVD player. He watched the whole thing again, noticing the look on the young girls face as the guy with the horse-cock pounded her, the way she moaned and bit her lip, the way she moved with him, the look of ecstasy on her face as she erupted on her stomach once, twice, three times, and then her scream when her lover shoved his massive cock all the way inside her, filling her with his seed.\n\nVictor found his own hand feverishly pumping his own cock, his body clenching as he erupted all over the carpet. As he had done the day George connected his internet, Victor binged, pulling the Rose video out and watching that, then one on hedges, all the titles had gardening themes, but none of the videos had anything to do with plants. What they did have in common was diminutive trans girls getting fucked by large men with huge cocks, and Victor couldn't get enough.\n\nOne more, he promised himself, grabbing a video from the bottom shelf. There were four numbered DVDs in the case, choosing number 1, he put it into the player and hit play, recognizing the background immediately, this was filmed in his closet; it was a home movie.\n\nThe lady in front of him was immaculately dressed, in fact, he had worn the same dress. She was older than him, maybe fiftyish and very attractive, but something was just a little off, he couldn't quite put his finger on it. The scene changed, same closet, same woman, but a different outfit. Victor watched mesmerized until it hit him, there was no Mrs. Francis, or maybe there had been one at one time, but this was not her, Mr. Francis, the old man that had left everything to him was the one in the videos.\n\nJust like his initial reaction to the porn, Vicki was immediately revulsed, but that feeling was short lived. She watched the videos and noticed the transformation, Mr. Francis was a lonely old man, the handsome lady in the videos had a sense of peace, Vicki knew exactly how that woman felt and understood that, for whatever reason, there had really been on other choice in who should get the old house, maybe, just maybe, part of the reason Mr. Francis had left everything to Victor was that he saw something of himself in the young man that had taken care of his yard. Maybe he saw something that Victor didn't know was there, until he tripped over those damned shoes.\n\nNow more confused than ever, Victor knew who he needed to talk to, but he hadn't really talked to his mom since he had moved out, they had chatted and touched base, but not really talked, her incessant nagging about him not smiling and finding a nice girl had gotten to be too much and he knew it would be among the first things she brought up. Maybe it would be different this time, his dad had to have told her about his new and improved attitude after all.\n\nShe looked at her phone and called her mom. Vicki didn't even get to say hi,<br >\"Honey, how's everything at the house? It's so exciting? Does it need much work? Do you have any cute neighbors?\" her mom rattled off a dozen questions without taking a breath.\n\n\"There have been a few surprises, in fact I was hoping maybe we could get a coffee or something to talk about one of them.\"\n\n\"Oh, sweetheart, you met a cute girl, I can just feel it, what's her name? Does she make you smile? Is that why your dad can't stop talking about how you've changed?\"\n\n\"Well, her name is actually Vicki, and yeah mom, she makes me smile.\"\n\n\"Ok, honey, I'll grab my purse and meet you at the Starbucks by the hardware store in about fifteen minutes,\" she hung up without even saying goodbye.\n\nThat was easy enough, she checked her makeup, climbed into the 57 and headed to the coffee shop, ordering a Grande dark roast with two sugars, and sat down to wait.\n\nEven though it wasn't in the trademark pony tail, the red hair was her best feature and her mom saw it immediately, she ordered her coffee, picked it up and sat down, \"So, tell me about this girl,\" her face froze, \" Oh my,\" she looked up at Vicki, she saw the soft smile and the gentle green eyes totally devoid of anger, she saw the makeup, simple but the perfect accent to Vicki's features, \"Oh my, oh, my,\" she took a large sip of her coffee, \"so, this is the Vicki that makes you smile like that?\"\n\nVicki just nodded and started to cry.\n\nThere was silence for a few seconds, \"Honey. You're going to ruin your makeup,\" her mom handed her a napkin.\n\nVicki took it and dabbed the tears from her cheeks, \"you, you're not upset?\"\n\n\"Surprised would be a better word, but upset, no,\" the two women sat and looked at each other, \"why don't you tell me all about what happened, ok?\"\n\nVicki told her all about the stupid shoes with no place to be and everything that came after, her mom just sat and listened, smiling about how Vicki had gone crazy over the shoes and reaching across the table and touching her arm when she thought Vicki needed some reassurance, a soft, \"is that all,\" look in her eyes. The incident with George and the slight blush that went with the telling got a raised eyebrow, but Vicki's mom didn't say a word.\n\n\"I was afraid you would be upset, hurt, or angry,\" Vicki let out a long sigh.\n\n\"I'm your mother, I love you more than life itself, all I have ever wanted was to see you happy again. I haven't seen this look on your face in a very long time, so no, I'm not upset, a little shocked, yes, but upset that you seem to be happy for the first time in a very long time, never.\"\n\nThey talked for a while longer, discussing a few details and sharing some of the pictures she had taken with her phone, Vicki's mom loved the closet and did think the Mary Janes were cute, mostly, they just talked.\n\n\"What do you think dad will say?\"\n\n\"Let's go ask him, he has something he wants to talk to you about anyway, do you need a ride? I don't see your truck.\"\n\n\"No, that's another thing, there were a few cars in the garage, I'll follow you.\" When Vicki pulled up next to her mom at a light and honked, she could see her jaw drop.\n\nVicki could tell that her mom had already called her dad and told him to behave, but his face spoke volumes when she walked in the door, \"so, this,\" he made a gesture toward her with his hands,\" this is what you really want?\" he didn't like what he saw.\n\n\"To be honest dad, I'm not a hundred percent, but remember when that new client called me miss and I didn't want to punch him out, I can't remember ever being this relaxed, it's like somebody flipped a switch, I'm just not mad at everything anymore.\"\n\nThey sat and talked, the three of them, Vicki told him about the stupid Mary Janes with no home, and he thought that was funny. Mostly they talked about what it would mean and how it would work. She couldn't answer most of his questions which told her she still had a lot to figure out, admitting it would be a hard sell to the guys she worked with every day and explained to him that whatever she discovered, there was no way she could ever go back to being the angry man she had been before, she just couldn't do it.\n\n\"Emmy, you're ok with all this?\" he looked at his wife and then at Vicki, the look on his face nearing disgust.\n\n\"Henry Jackson Marshall,\" Vicki's mom stood up and looked at her husband like he had called her a cunt, \"Victor was ten years old the last time he smiled like she does, she is beautiful and happy and at peace, she had the courage to come and talk to us about it, how do you think I feel about this? I want my baby to be happy, I don't care what he or she wears!\"\n\n\"You go mom,\" Vicki thought to herself.\n\n\"And if you ever want to share my bed or eat a home cooked meal again, you will put that attitude back in the box it came in, do you understand me? Do you? Look at her,\" she was screaming now,\" are you that blind?\"\n\nVicki's dad got up and walked out of the room, she knew where he was going too. He had to think, he was going to his shop. In a little while, he would come back having thought it all through and he would either accept it or not.\n\nVicki hugged her mom, thanking her for how she had stood up for her, \"I think I need to let him know it's still me,\" Vicki pulled away from her mom and headed out the back door.\n\nHenry was pretending to work on a lawn mower engine, trying to take the carburetor off so he could rebuild it. He shuffled around his worktable looking for something, Vicki walked up behind him handing him the ten-millimeter box wrench and the can of Liquid Wrench.\n\n\"Thanks,\" he couldn't look at Vicki.\n\nThat was the last word spoken, they worked side by side until the carburetor was in pieces, neatly arranged for reassembly, the parts that needed it were soaking in a mild solvent.\n\nWiping his hands on a red shop rag, Henry turned to Vicki, \"you can really walk in those?\"\n\n\"Not very fast, but I'm getting better, twisted my ankle pretty bad a few weeks ago.\"\n\n\"How come you didn't fight with me tonight? When I talked about you like that?\"\n\n\"Is that really what you want dad? Do you really want that part of me? It has caused more problems than it ever solved, hasn't it?\"\n\n\"It's what I'm used to, I guess. I just never imagined,\" Henry let out a big sigh, \"I like the new attitude and the sense of humor but, I never saw something like this coming.\"\n\n\"You think I did? This blindsided me like a linebacker,\" Vicki laughed out loud, \"but I know it's right. Mom said it, I'm not mad anymore, I found some peace. The cable guy called me miss the other day and he still has all his teeth.\" They both laughed at that. Vicki decided the date would be too much for her dad to handle, she wasn't sure what she was going to do about it either.\n\nHenry got quiet again.\n\n\"Mom said you wanted to talk to me about something?\" Vicki looked at her dad.\n\n\"Micky's? I'll buy.\" Henry headed for the door, not waiting for a reply.\n\n\"Sure, let's take my car, I'll even let you drive.\"\n\n\"That POS truck, hell no,\" Henry laughed.\n\nThey went back inside to tell Vicki's mom where they were going and Vicki grabbed her purse, the look on Henry's face when she slipped the keys to the 57 in his hand was priceless, \"there's a 63-split window in the garage, too,\" she whispered it in his ear like she was suggesting something illicit.\n\nThey took the long way to the bar, Henry loving every minute of the drive. They were laughing when they walked in, until someone recognized Vicki's hair, and her ass, \"Damn that ass Marshall, I swear you get more girly every time I see you, why don't you bring that thing over here and let me get a closer look?\" Vicki recognized the voice immediately.\n\nHenry looked at Vicki, hoping he could stop the rage monster from emerging before it was too late, again. Instead, he watched as she turned and smiled, walked over to Tommy Miller, \"Oh, I know you like my ass, Tommy, you've been hot for me since fifth grade, but you've been too afraid to do anything about it. How about it, you man enough?\" she leaned down and kissed him full on the lips,\" so, are you?\" she wiped a smudge of lipstick off his lips with her thumb,\" I guess not.\" She turned and walked back to the bar, slipping into the seat next to her dad.\n\nTommy's face went white, and his buddies roared with laughter,\" fuck you Marshall, just fuck you,\" he got up and stormed out of the bar.\n\n\"Not on your best day, asshole,\" she said just loud enough for her dad to hear.\n\n\"Who are you anyway?\" Henry couldn't stop laughing.\n\n\"Just my daddy's little girl I guess,\" she picked up her beer and took a sip.\n\n\"I guess so,\" Henry picked up his and smiled at Vicki in the mirror behind the bar.\n\nThey talked and had another beer, Henry wanted her to take over as field supervisor for the entire company, she would be mostly driving around from job to job, making sure everything was on track and doing field interventions if any issues arrived. His, or her, new and improved attitude had been the final deciding factor.\n\nThey talked about dress codes and agreed that the skintight jeans were not a good idea, traditional work boots were probably more appropriate considering where she would be going, and that she would wear a company button down, which was standard for all office personnel. She would want a size smaller than she usually got and, after a little back and forth, her dad agreed, they would see about the makeup. Vicki drew the line at her nails, she was not giving up the polish and told her dad to not be surprised if it became bright red, and that was it.\n\nBack at the house, Vicki offered her mom a ride in the Corvette, the two were soon zipping around town with her mom begging her to slow down.\n\nWhen they pulled up to Vicki's house, her mom gave her an odd look, and Vicki assured her that she just needed to show her something. Of course, the closet was first, \"and almost all of it fits perfectly,\" Vicki beamed, her mom picked up the Mary Janes and just smiled.\n\nWhen Vicki showed her the Cadillac and gave her the key, she couldn't believe it, the company did well and they could afford to get whatever they wanted, but her mom had insisted the ten-year-old Buick was still running just fine, this she couldn't turn down.\n\nThe transition went smoother than she thought it would, she was late to the landscaping job her old crew was working on and Enrique had stepped up to make sure everything was going as planned, a little good-natured ribbing and a 'Damn Hefe' from one of the crew was about it. When she told Enrique, he was taking over the crew, a mini celebration ensued, her guys were like family.\n\nThe rest of the day was uneventful, everyone knew Victor's reputation and most decided to not push things, just in case. The only issue was a problem with a homeowner that was getting a kitchen remodel, they were complaining about the finish on the cabinet doors not being quite right, Vicki just listened for a few minutes until she understood the issue before going to find the cabinet guy.\n\n\"The finish on the kitchen cabinets, what's it going to take to get it right?\"\n\n\"We'd have to sand the doors and redo the stain, doable but it will take a day or two, Gene said he could talk the owner into keeping it as it is.\"\n\n\"And you think?\"\n\n\"I think we should fix it.\"\n\n\"Then do it. I'm Vicki Marshall, the new field super, by the way,\" she shook his hand, \"I'll make sure Hank hears about you taking care of this the right way.\"\n\nWalking back into the kitchen she stepped between the two men, \"Mr. Everson, I'm Vicki Marshall, the field supervisor, we should have your cabinets redone in a day or two, \"she interrupted Gene.\n\n\"Wha?, who do you think you are, coming in here like this?\"\n\n\"I'm your boss,\" she fired back, \"and as of right now, you have an appointment with Hank first thing in the morning at his office. Are we clear?\"\n\nGene looked very confused but nodded his head, she looked familiar, but he couldn't quite place her.\n\n\"Now, why don't you take the rest of the day off to figure out how you're going to explain what I just saw here to our boss?\"\n\nVicki turned back to Mrs. Everson this time, \"how would you like to fill me in on what you like about what we've done for you?\"\n\nMrs. Everson spent the next hour raving about the counter tops, the tile, the gorgeous finish on the walls, and the new fixtures, especially the custom chef's stove. By the time she was done, all the cabinet doors had been removed and the cabinet crew was busy sanding them down. Vicki promised to stop by every day and make sure she stayed just as happy as she was, an easy promised to keep since it was her job anyway. Mr. Emerson was smiling from ear to ear when Vicki left.\n\nMaking a call to her dad on the way back to the office to let him know about his 8:00 appointment with Gene, Vicki filled him in on everything that had happened, making sure to let him know that Mr. Benet and his crew had jumped in to do the right thing and assuring hm that the Everson's were still happy.\n\nWhen Vicki stopped by Friday afternoon, Gene was bending over backward to appease the Everson's as Mr. Benet's crew finished rehanging the last of the cabinet doors, they had stayed late to get them sanded and showed up early to start staining them, she had to agree, the new finish made all the difference in the world, if only to Mrs. Everson.\n\nThere had been almost no issues all week, they had a handful of workers that thought it was gross and disgusting and quit, lost a contractor who was a problem anyway, and one small landscaping job, but for the most part, everyone had respected Victor, and liked Vicki even more because she knew everything he did and didn't have his temper.\n\nShe was also amazed at how quickly she was adapting to presenting as a girl, using the ladies' room, even flirting back with some of the guys, it was fun and just felt right. Even her dad had to admit that it was starting to feel right for him, too and Vicki had a way with the customers that Victor never did.\n\nVicki had been so wrapped up in her new role and so focused on the adjustments she and the workers and contractors had to make, she completely forgot about her date with George. Elated at how well her coworkers had taken the changes and completely caught up in the moment, an impromptu party ensued at their favorite watering hole Friday after work, when the doorbell rang at ten the next morning, Vicki was in the kitchen, in nothing but panties and a t-shirt, trying to make coffee, and fighting a raging hangover.",
        "\"George, I am so sorry, we had a party after work and I got a little carried away,\" she was peeking around the door talking to him through the small opening trying to ignore the freight train screaming around in her head.\n\n\"Tell you what, I'll count to ten and give you a head start, you go get dressed and I'll fix you something for that headache, how does that sound?\" George smiled at her.\n\n\"Ok,\" Vicki nodded as she closed the door, undid the chain, and took off running to her bedroom, totally unaware that the door had sung open behind her giving George a full view of her pink panties with the bright red hearts that had slid just a little into the crack of her butt.\n\nVicki didn't have time to think and that was probably a good thing, she shifted into crisis management mode, the customer was not happy, and it needed to be fixed now. She scanned her closet deciding on the soft leather boots with the fringe, they were going horseback riding after all. Dropping her panties and tossing the t-shirt in the hamper, she gave herself a quick camp shower, washing her face, brushing her teeth, and scrubbing her pits and her crotch with a washcloth before she slipped on a clean pair of simple white cotton panties and pulled a sports bra with just a little padding on over her head.\n\nA T-shirt that fell just off her shoulder and a pair of jeans, she slipped the boots on and tied the rawhide lace into a nice bow that disappeared into the fringe that ran around the top of the boots. Closing her eyes and taking a deep breath to steady her nerves, she ran a brush through her hair, opting for a high ponytail, and sat down to do her makeup.\n\nDropping her lip gloss into her purse and grabbing a denim jacket, she smiled at herself in the mirror and headed to the kitchen before she had a chance to change her mind; it had taken all of thirty minutes.\n\n\"Now that has to be a world record, even my mom can't get ready that fast,\" George laughed when he saw her, handing her a glass of something that looked absolutely gross, \"just trust me on this, ok, it looks bad and it doesn't taste too great, but it will make you feel better.\"\n\nVicki looked at George and at the glass, he was smiling and nodding, so she pinched her nose and chugged it, it was gross, a mixture of pickle juice and orange juice with, what, raw eggs and some other stuff, cinnamon, really? It almost came back up. She grimaced and handed the glass back to George,\" that was disgusting, \"she started to laugh and after a minute or two of letting it settle, realized that she did feel better, whether it was the hangover cure, or the way George looked at her was up for debate.\n\nVicki was a bundle of nerves and had no idea what to expect, at least the meticulously restored 72 chevy step side George was driving would give them something to talk about. He opened the door and she climbed in, waiting patiently as he walked around and got in the driver's side.\n\nGetting George to talk about his truck was easy, he went into detail of everything he had done, overblown engine, upgraded suspension, modern electronics, he was impressed that Vicki not only seemed to be following along but that she knew what he was talking about.\n\nIt was going to happen, and George finally asked Vicki what she did, \"Mid-Valley Construction and Landscaping,\" I'm a field supervisor, feels like I've been there forever, I've known the owners since I was little, she fudged a bit.\n\nSmall world, they do some landscaping at some of the buildings my dad's company owns, and what about that house, was Mr. Francis like your grandfather?\"\n\n\"I didn't really even know him, I just did him a favor and evidently he appreciated it and didn't have any family, so he gave the whole thing to me, I'm still trying to wrap my head around it.\"\n\n\"Some favor, can I ask?\"\n\n\"He must have been sick, and I mowed his yard and pulled some weeds and stuff, just seemed like the right thing to do. All I can figure is he thought I'd take care of it like he always did.\"\n\n\"Wow, you are full of surprises, cars, construction, and you mow lawns, you are definitely not what I expected,\" George laughed, \"but in a good way,\" he tried to do a little damage control.\n\n\"What?\" it did bother her a little and the old ire started to rise,\" so because I'm small and a woman, and I twisted my ankle and you saved me and I smiled at you, you thought I'd be some vacuous bimbo?\"\n\n\"No, really, no, that's not what I meant,\" George was floundering a bit and Vicki found she was enjoying it, \"It's just, well, nice to meet a girl that I can talk to about stuff that I like, not many girls know what it means when you mention that your pistons are point five oversized,\" he was blushing, \"and you're well really cute too.\"\n\n\"So, I'm just a pretty face now, is that it?\" Vicki had been on the wrong side of this conversation a few times and was torn by what she knew George was feeling and the pleasure she was having tormenting him. There was no way out unless she gave it to him.\n\n\"No, well, yes, I mean no, dammit, yes you're cute and obviously smart and I like that you can talk about cars but, shit, I quit, I give up, I'm sorry I said anything.\"\n\nVicki couldn't help herself, she started laughing,\" George, I'm sorry, I shouldn't have done that to you, I'm glad that you think I'm cute,\" she smiled at him. She realized it was true, it freaked her out a bit, but somewhere in the back of her mind, she caught a glimpse of a thought, she thought he was cute too.\n\nThe realization caught her by surprise, and she got quiet, realizing again what she was doing, it had only been a few months since she had put on those damned shoes and less than a week since she had come out at work, she liked who she was becoming but still had no idea where this was going or what she was doing, and she was on a date with a guy. Vicki could feel the butterflies growing in her gut, she looked out the window and just watched the scenery go by, how far was it to his family's pace anyway?\n\n\"You ok over there?\"\n\n\"Yes, I'm just a little nervous, I've never been around horses,\" another white lie.\n\n\"They're just like big puppy dogs, especially Sundance, I think the two of you are going to get along just fine.\" George smiled at her, and she relaxed just a bit.\n\n\"Labs or rottweilers?\" she gave him a little side eye.\n\n\"Depends on the horse,\" George chuckled, \"but Sundance, definitely lab.\"\n\nThey pulled up to the gate, George pulled out a remote and clicked the button, the gate was huge, massive rock work with elaborate double gates with the name Granger Ranch cut into a huge metal sign above it all, it hit Vicki, other than his truck and where he worked, she didn't know anything about George.\n\n\"Wait a minute, Granger, as in Granger Communications, as in Granger Media Group, that's your family? I thought you just worked for them.\"\n\n\"Well, I do that too, and besides, all you had to do was ask and I would have told you anything you wanted to know. I do have to admit, the look on your face is worth it, especially after all that crap you gave me before,\" it was George's turn to laugh.\n\nThe drive up to the house and the horse barn took another thirty minutes, Vicki looked out the window at the fields, beautiful horses running and playing, some just standing around eating the lush green grass, the white rail fences immaculately painted, it was out of a movie. It was too much.\n\nJust like when Tommy and his friends chased Victor in the fifth grade, all she wanted to do right now was run.\n\nVicki couldn't get out of the truck when George opened the door. Petrified, she just stared at the huge ranch house in front of her and the massive horse barn off to the left. Yeah, her dad did ok, a lot better than ok, but this was ridiculous, this was real money and with that came a truck load of judgment and scrutiny and with everything else she was dealing with, it was just too much.\n\n\"Vicki, What's the matter?\"\n\n\"George, I just can't, this, all of this, it's too much. I don't belong here,\" there was no emotion in her voice. Her head was spinning, thoughts of everything that could, would go wrong flew through her mind.\n\n\"Georgie is that you?\" a woman's voice found her ears, her eyes focused and a handsome woman who was approaching the truck from the barn, slapping a pair of work gloves on her leg, she was dressed in a plaid shirt, with filthy jeans half in and out of a pair of boots that looked like that had been dug out of the ground, she had a huge smile and the kindest face. Vicki started to relax, \"and is this Vicki, the young lady that you haven't been able to stop talking about?\"\n\n\"Hey mom,\" George gave the lady a big hug, \"and yes, this is Vicki.\"\n\nWhat the hell was going on?\n\n\"Well, you two come up to the house, Martha just made some lunch and I'm sure there's plenty.\"\n\n\"That was your mom, she works here, I thought your family owned the ranch,\" Vicki was still in a daze.\n\n\"We do, but it is a ranch, everybody works here, now come on, Martha is an excellent cook and whatever she made is going to be a lot better than the sandwiches I packed.\"\n\nVicki turned toward George, \"explain,\" was the only thing she could think to say.\n\n\"My grandfather got into radio in the fifties, jumped on Rock and Roll almost before the term was coined and then bought up a bunch of other stations, the family got into cable when it was brand new and then internet, now we own a bunch of stuff all over the place, mostly infrastructure now, but still a few radio stations and a few other outlets. So yeah, we own this place, but from day one, my great grandfather said no free ride, if you're a Granger and you want a piece of the pie, you work your ass off and earn it, and we all do.\n\nMy mom was probably covering for Joe, whose wife just had a baby, and mucking the stalls in the barn because it needed to be done.\"\n\n\"And you?\"\n\n\"Me, I help run the cable company, when I met you, we were having a lot of service issues, so I was covering a route to make sure everybody got the help they needed. The fact that you are so damned cute and so damned clueless right now is just a bonus, now come on, I really think the reason my mom is out here today is because she wants to meet you. I don't date a lot, so like it or not, you are kind of a big deal to her.\"\n\nErica Granger was possibly the nicest person I had ever met, we chatted, and she told embarrassing stories about George and never pressed when I deferred on answering a question she asked, instead, she took my cue and went another direction. I was pretty sure the way I reacted when she first saw me and my wide eyes, told her I felt I was way out of my league, and I think that made her like me a little more.\n\nMartha serves us lunch and when she sat at the table with us, I knew there was something special about this family, when Erica got up to get a refill for her tea, she took Martha's glass with her; Martha was the cook and housekeeper, but Erica was no better than her, they just had different jobs.\n\n\"If you two are going for that ride, you'd better get to it, as for me, I think a shower is in order,\" Erica smiled at both of them,\" Vicki, it was so nice to meet you. I hope I get to see you again, and George, there's a bushel of apples in the tack room,\" she excused herself. Vicki looked at George, he smiled at her and winked, she was having trouble believing that this was all real.\n\n\"Apples?\"\n\n\"Come on, I'll show you, you are about to be Sundance's new best friend,\" George smiled and took her hand, leading her out the back door toward the barn.\n\nSundance was a beautiful pinto, smaller than the other horses in the barn, George had been right, she was nothing more than a big puppy dog, especially when he cut an apple in half and put it in Vicki's hand, showing her how to feed it to the mare. Sundance followed her out of the barn to the coral like a dog on a leash, waiting for the other half of the apple she knew Vicki had in her other hand.\n\nRanger was amazing, a big muscular chestnut colored stallion with three white socks, Vicki could see the fire in his eyes, when George walked up to him, gave him an apple, and hugged him around the neck, Ranger used his nose to pull George closer, those two were close.\n\nVicki stole another apple from the tack room for Sundance and George indicated that it was perfectly fine but that was probably enough for one day, she watched as he saddled the horses, noting how he moved around them, making sure that he always had a hand on the large animal, so they knew where he was, explaining that being behind a horse unannounced, even Sundance, was a very bad idea.\n\nGeorge put his hands together lacing his fingers like a cup and bent down next to Sundance, Vicki picked up in his cue and placed her left foot in his hands, letting him lift her up to get on the beautiful animal, before he adjusted the stirrups and made sure Vicki was secure. She was nervous, but excited, Sundance whinnied and shook her head.\n\n\"Somebody else want to go for a ride, too,\" George laughed.\n\nGeorge climbed on Ranger and gave Vicki a quick course in how to navigate, what was stop and what was go, left and right, especially with Sundance, was little more than touching her neck with the reigns, she should go in the opposite direction. A few quick turns around the corral and Vicki and Sundance were ready to go.\n\nOut the gate and across a huge pasture, walking at first and then George taught Vicki to gallop and even had her let Sundance run, by the time they got to the trees, Vicki was exhilarated, laughing uncontrollably and happier than she had been in a while, this was magic. George was having as much fun watching Vicki's reaction as he was being on his favorite horse.\n\nIt took over an hour to get to the plateau with the oak tree and the little pond, it was more beautiful than George had described, Vicki could see the entire ranch from here. George helped Vicki down and laid out a blanket for them to sit on, pulling out some apples for the horses and some fruit, cheese, and wine for the two of them, it was the most romantic thing Vicki could have imagined. Victor had thought it had been romantic the one time he took a girl to Olive Garden.\n\nThey sat and talked and snacked and drank wine while Ranger and Sundance milled around them nibbling on the grass. George had an MBA from a very good school and Vicki admitted that she had been in some trouble in high school and just went to work for Mid-Valley right after graduation. George didn't seem to care in the least, \"field supervisor, sounds like you're doing pretty well though?\"\n\n\"Yeah, I guess I am. I like what I do and I'm pretty good at it,\" she smiled at him and got a funny feeling in her stomach.\n\nGeorge never tried anything, nothing not even once. While Vicki appreciated it, it also made her wonder just what George was up to, Victor would have been all over a girl at this point or tried to be if a date had ever gotten this far. Was there something wrong with George, was there something wrong with her, had he figured it out and was he just being polite?\n\nThe conversation started to lag,\" You ready to head back?\" he asked, but there was that smile, dammit what was she feeling for him? She had never even looked at a guy before, much less thought she would go on a date with one, and now she was worried because he hadn't made a move on her, and his damned smile was giving her butterflies.\n\nShe helped George pack up their trash and waited patiently until he could help her onto Sundance, following him and Ranger down through the trees to the big meadow. George looked at her and smiled, Vicki replied with a broad grin and a devilish look in her eyes, George nodded, she flicked the reigns and shouted \"heyah.\" Sundance took off toward the barn, Vicki was flying, she had sprouted wings, the wind in her face, her red hair flowing behind her as the ground flew under Sundance's feet. The beautiful beast slowed to a trot and then a walk, pulling up to the barn, snorting and taking a deep drink from the water trough. Vicki slid from the saddle and collapsed, making a dirt angel in the corral, laughing uncontrollably.\n\n\"You might want to get up before you get stepped on,\" George was laughing just as hard as Vicki.\n\nThey worked together putting the tack away and George showed Vicki how to properly comb and brush a horse, she stole another apple and gave it to Sundance, hugging the filly hard, getting a nuzzle in return.\n\nThey walked back toward the house and without thinking, Vicki slipped her hand into his as they got to the kitchen door.\n\nErica and Martha were chatting busily working on something that smelled wonderful. If it was anything like lunch, it was better than it smelled. Erica turned as they walked in the door, \"You are staying for dinner, aren't you?\" Vicki recognized the same tone her own mother used; she was not asking.\n\n\"That would be nice,\" Vicki smiled at Erica and then at George, she was so excited and so happy, she completely forgot to be nervous.\n\nWilliam Granger was George's father and he insisted that Vicki call him Bill as soon as he met her, the CEO of a multi-billion-dollar telecommunications company, he acted like he ran the gas station down the street. Dinner was wonderful, once again, Martha joined them, this time it was Vicki who dominated the conversation, going on and on about their ride and how wonderful it had been and the feeling of being on Sundance's back at a full run, this got an interesting look from Bill, but George just smiled at him.\n\n\"Dad, she's a natural, you should see the way she sits a saddle.\" Vicki had worked for everything she had in her life, fought tooth and nail for a lot of it, but that simple comment made her as proud as anything else she had ever accomplished.\n\nVicki helped clear the table and George and his father disappeared for a little father son chat, both coming back with smiles, Vicki wondered exactly what they had talked about and decided that was one question she was absolutely going to ask. Erica gave her a big hug,\" it was nice to meet you, Vicki, please do come see us again,\" she smiled sweetly. Bill just smiled a huge smile as he shook her hand just before George opened the door and helped her into the truck.\n\nThey rode in silence for a while, Vicki looking out the window as the stars started to fill the sky, \"thank you for today,\" she said softly.\n\n\"It's me who should be thanking you, my parents are in love with you, by the way,\" George laughed,\" but don't worry, I explained that this is just one date. My mom won't start planning the wedding until at least date number three.\"\n\n\"Shut! Up!\" Vicki punched him in the arm, and they rode the rest of the way back to her main road in silence, both smiling and stealing glances at the other.\n\n\"So, you and your dad, what was that about,\" she finally broke the silence.\n\n\"To be honest, he wanted to make sure my intentions were above board, that I was being completely honest with you,\" George answered quietly.\n\n\"Well, are they, are you?\" she put her hand on his leg and gave it a gentle squeeze,\" it might be ok if your intentions were less than completely pure, you know,\" that made him smile.\n\n\"I promise, my intentions are mostly above board,\" he laughed, and as for honesty, \"I figure I'm dealing with a girl and a few secrets are just part of the game. Finding out what they are is all part of the fun,\" his hand found hers and held it in place on his thigh.\n\n\"I guess you're right,\" Vicki scooted across the bench seat next to him and laid her head on his shoulder looking out the front window at the lights in the distance, her mind awash in a sea of confused thoughts.\n\nGeorge walked her to the door and stood nervously for a minute, \"Vicki, today was really nice and I like you.\"\n\n\"Is there a 'but' in there?\" she was getting nervous.\n\n\"It's just, like I said, I don't date a lot, but, well, \"Suddenly, doubt raged inside her, Vicki could feel the tears welling in her eyes, she liked George, too much for just one date. Today had been wonderful and it was over before it even started, devastation, anger, fear, they were all there, the perfect little fantasy world she had been building for herself was about to come crashing down, she knew it.",
        "\"Can I kiss you goodnight?\" his voice drifted into her ears, time stopped, her doubt and fear vanished, blown away by the soft breath that carried his words.\n\nThere was no question, Vicki closed her eyes and lifted on her toes, letting George guide her lips to his. It was sweet and gentle, it was electric, it was a rainbow after a spring storm, it was a warm fire on a cold winter night, it filled her heart and soul with something she had never felt and her crotch with something she knew all too well. When their lips parted, it was as if he took a small piece of her with him, she watched as he climbed back in his truck, smiling as his taillights slowly faded into the night.\n\nTaking a nice hot bath and slipping into her favorite nightgown she closed her eyes to dreams of a tall man with big brown eyes and the softest lips she had ever tasted, what was she going to do, it had been wonderful, magical, she liked George in a way she had no reason liking a guy. Sundance was amazing, Erica, Bill, and Martha were the nicest people she had ever met, and it was all going to come crashing down around her shoulders when George found out her secret?\n\nOther than that, it had been the best day of her life.\n\nVicki had some explaining to do when the roses showed up at the office on Monday, dinner with her parents was mandatory that night and she tried to explain something she didn't understand herself. \"You did what?\" her dad screamed when she told them about George and how she felt when she was with him, about horseback riding and about her entire day, leaving out exactly who George was but nothing else, admitting that she had no idea what she was going to do. She had never felt this way before, Victor had never felt this way before, everything in her life was in uncharted seas now and someone had dropped a 6'3\" 225# iceberg with big brown eyes and oh so kissable lips, right in front of her ship.\n\nThe dinner conversation required another trip to Micky's for Vicki and her dad, mostly because that's where Hank felt comfortable talking about stuff that bothered him, but also because Vicki had brought the '63 and Hank really wanted to drive it.\n\nThey talked about the differences between Victor and Vicki, Hank admitting that while he liked seeing his son happy, he still had trouble with the whole thing. He also had to admit that, as a girl, Victor, or Vicki, was beautiful, and much easier to be around. They both laughed at that.\n\nVicki talked about how confused she was, especially about the whole George thing, \"dad, I can't explain it, when I was with him Saturday, I just didn't want to be anywhere else. It scares the hell out of me, but all I could think about was how I could so easily get used to being with him.\"\n\n\"What do I do daddy?\"\n\nShe called him 'daddy,' Hank felt his heart breaking as Vicki's green eyes started to fill with tears. He wrapped his strong arms around the beautiful girl next to him,\" I guess you do what girls do when they're afraid their heart is about to be broken, you just have a good cry.\"\n\n\"Now go wash your face and fix your makeup, it always made your mom feel better after a cry,\" Hank looked at Vicki when she finally finished sobbing.\n\n\"Everything ok down here Hank?\" it was the bartender.\n\n\"Yeah Micky, my little girl is just having some boy problems,\" Vicki gave her dad a sheepish smile.\n\nMicky reach across the bar and put his hand on Vicki's arm, \"Well, if he can't accept you the way you are, he's damned fool.\"\n\nVicki leaned over the bar and kissed Micki on the cheek, \"You really mean that Micky?\"\n\n\"Vict..., I mean Vicki, I've known you and your dad since you were in diapers, to see you as happy as you've been the past month or so, well, it warms an old man's heart, and yeah, I mean it; if I were a younger man and not so afraid of Hank,\" he smiled a big smile, \"hell, I'd have you on my arm in a New York minute.\"\n\nThings seemed to settle down after that, it helped more than she realized when her dad called her, 'his little girl', and when Micky had said what he said, that he'd be honored to have her on his arm, knowing more about her than anybody but his parents, in that moment she felt invincible.\n\nThings were good, she called George and thanked him for the roses, talking about stuff for a while before she sent a few kisses through the phone and went to sleep. They had plans for dinner and a movie Friday night and she was planning on strongarming him into taking her riding again on Saturday, she didn't think he'd object.\n\nWork was work, the crews were comfortable with Vicki and the contractors and clients preferred her to Victor, which surprised nobody, one of the contractors even asked her out; she smiled and let him down gently, explaining that, despite what he might have seen on the internet, just because she was transgender didn't mean she had no morals and noting that her father and his wife might not approve.\n\nFriday night with George was wonderful, he took her to a little family run Italian place he knew and let her pick the movie, when she picked the classic James Bond, 'Dr. No' at the discount cinema, George thought he might have fallen completely in love with the feisty redhead right there. Riding on Saturday was no problem, Sundance remembered her and while Erica and Bill weren't there, Martha was happy to see her, giving her a huge hug that she thought was a little excessive, but maybe that was just Martha.\n\nThe kiss she got from George Saturday night was epic, her toes curled, and her heart fluttered, she had a hard time catching her breath, when he jumped out of his truck to come back for one more, almost forgetting to put the truck in park, she laughed and started to get worried at the same time, George was falling for her hard.\n\nSunday, Vicki spent in her yard, with the new responsibilities and spending time with George, it needed some attention, she thought of Mr. Francis and how disappointed he would be if he saw how bad she had let it get. Mowing the grass and being on her knees, working the ground in her flower beds also gave her time to think about George and what she was going to do, she truly cared for him and knew he was falling for her, but how would he feel if he knew the full truth?\n\nFilthy and exhausted, she stripped and fell into the pool, letting the cool water and the warm sun rejuvenate her body, she had to slow things down, she had to take her time, not only for George, but to make sure this was truly what she wanted.\n\nThey had three new jobs, so the next week was even busier for Vicki and avoiding George wasn't that difficult. He seemed to understand but didn't seem happy about it. When she said she just wanted to stay home and chill over the weekend, he understood, when she didn't invite him to come join her, her was a little hurt, but decided to give her some space. He knew he had been pushing and maybe he had pushed too hard.\n\nBy Saturday afternoon Vicki couldn't stand it, so she drove to Micky's and decided to drown her problems, worst case, Micky would call her dad to come get her, after all, it was a safe place.\n\nShe was on her third beer and had told Micky far more than she had told her parents, like any good bartender, he just listened and nodded and made sure she had a fresh pint when she needed one.\n\n\"So, what's a little hottie like you doing I here all alone?\" great, all she needed was some guy hitting on her while she figured out what to do about the one guy she wanted to be with.\n\n\"Sorry, not today, ok? I just want to be left alone,\" she turned around to give him a smile, hoping it would be enough, crap, it was Steve Garvey, he was one of the guy's Tommy had recruited to teach Victor a lesson in the fifth grade, he was almost as bad as Tommy.\n\n\"What, you some stuck up bitch, too good for a working man like me, your rich sugar daddy cut off your allowance or something?\" It started to dawn on him who she was, \"Holy fuck, you're Victor Marshall! I always knew you were a freak, what are you a tranny dick girl now or something? You like dress in lingerie and jack off on your web cam for tips? You in here cruising for a cock up your ass or something?\"\n\nMicky was almost around the end of the bar when the strangest thing happened, \"shut the fuck up, Steve,\" it was Tommy Miller, of all people, he literally picked Steve up and physically threw him out of the bar.\n\nVicki was trembling, tears welling behind her eyes.\n\n\"You ok?\" he took the stool next to her.\n\n\"On the house, thanks Tommy,\" Micky put a glass of very good whiskey on the bar.\n\n\"One for her too?\" Tommy asked, \"I think she needs it.\"\n\n\"What the hell was going on, my worst nightmare had just saved my ass?\" Vicki looked at Tommy like she was seeing hi for the first time.\n\n\"Look, I've got a table over there, if you want someone to talk to,\" she wondered why was he being so nice to her?\n\n\"Tommy, what the hell...?\"\n\n\"Just talk, honest, talk,\" the sincerity on his face told me he needed it too.\n\nMicky set a glass of whiskey in front of Vicki, and she downed in in one gulp, picking up her beer, \"sure, why the hell not?\"\n\nThey just sat there for the longest time, Vicki sipping her beer and Tommy enjoying the whiskey Micky had given him, the uncomfortable tension growing slowly until there was no choice, one of us would talk or we would both explode.\n\n\"Victor, oh shit, I mean Vicki, I owe you an apology, the last time I was in here, hell, no, for the last fifteen years, I've been pretty rough on you and I'm sorry. It's just that,\" Tommy looked at the table and played with his glass,\" I knew back then that I liked you, I just didn't know what to do about it. Vicki, I think I'm gay and it is freaking me out. I see you, like this and you're going through some shit, too, but I don't know who to talk to, my parents would disown me,\" he took a deep breath and another sip of his whiskey.\n\n\"So, you're telling me this, why?\" Vicki still wasn't sure this wasn't a big prank.\n\n\"I know, of all people, right?\" he tried to laugh, \"I don't know, I thought you'd maybe understand, but why would you even believe me? You probably think I had Steve come on to you like that so I could rescue you and make you look like a fool or something.\"\n\n\"Thought has crossed my mind a time or two since we sat down.\"\n\n\"I guess I could give you a blowjob and prove it,\" this time Vicki laughed.\n\n\"So, you've been experimenting?\" Vicki leaned forward and put her hand on Tommy's arm.\n\n\"Yeah, I went over to Carver a few times to a place I've heard about, I really like guys,\" he blushed.\n\n\"Well, I kind of have one I'm sweet on, too, but he doesn't know about Victor and I'm not sure I'm as convinced as you seem to be that I like guys, so I think we're both kind of screwed,\" they both laughed.\n\nThe perfect storm hit when someone across the bar shouted, \"Fuck,\" Vicki looked up to see a pair of broad shoulders topped by a mess of curly brown hair storm out the door.\n\n\"George, wait,\" she got up and ran after him, getting outside just in time to see the back of his truck turn the corner.\n\nIt was Tommy that drove Vicki home and made sure she got inside safely.\n\nVicki tried to call George a dozen times Sunday, all going straight to voicemail, she drove to her parent's house and told her mom what had happened and the two of them shared a nice long cry. Hank told her to take a couple of days off and she agreed, using Monday morning to find a therapist to talk to, she had to figure this out or she was sure she was going to go insane.\n\nVicki saw her therapist twice a week for the next few months, they agreed it was best if she left George alone until she could come to grips with what she was doing. She was back at work, and everything seemed to be just fine, she still checked her phone four or five times a day, hoping for a voicemail or a text from George, but there was nothing.\n\nTommy and she became friends, he brought his new boyfriend over to swim and they had a great time, but Vicki still felt as if a part of her were missing.\n\n\"Have you started your hormones yet, the really help with the mood swings and stuff like that,\" It was Martha, Vicki was sitting at a sandwich shop eating lunch between jobs, how Martha had found her, she had no idea.\n\n\"Martha, what are you doing here?\"\n\n\"I come here when I come into town to do my shopping, I saw you and thought I'd come say hi,\" Martha smiled at her.\n\n\"That wasn't exactly a hi,\" Vicki tried to figure out how Martha knew about her hormones.\n\n\"Can I sit?\"\n\n\"Sure,\" Vicki was lost, \"Martha, what do you really want?\"\n\n\"I want my nephew to be happy and you seem to do that for him, at least you did. I'm not sure what happened with you two, but he hasn't been the same since it happened. Just talk to him, that's all I ask, ok? Talk to him.\"\n\n\"Your nephew?\"\n\n\"Yeah, Bill is my brother, we're twins,\" she smiled.\n\n\"Obviously not identical,\" she laughed, \"but I see the resemblance now,\" Vicki was starting to relax.\n\n\"Actually,\" she paused, \"we were identical, until I went through what you're going through now. That's how I knew to ask about the hormones.\"\n\n\"And you've known since...?\" Vicki didn't need to finish the sentence.\n\n\"I knew when I first met you, but it wasn't my place to say anything,\" Martha reached over the table and put her hand on Vicki's arm.\n\n\"Which means I'm probably not as screwed as I thought I was, right?\"\n\n\"Probably not,\" Martha gave Vicki a huge smile.\n\n\"So, what do I do about George, he will hate me for lying to him. I was in a bar getting drunk because I didn't know what to do and he saw me talking to someone I never in a million years thought I would ever talk to about this stuff. I guess he took it the wrong was and stormed out, he hasn't returned my calls since.\"\n\n\"He might, or he might not understand, I am his aunt, you know, he does know a little about what you are going through and if you really care for him, you owe it to him to trust him, let him make his own choice.\"\n\n\"But he won't talk to me, Martha what do I do?\"\n\n\"You be a girl and ambush his sorry butt and make him,\" she laughed,\" I happen to know he's been spending a lot of time on weekends with Ranger, and I'll bet Sundance would like an apple,\" she grinned,\" I can help you with the saddle and tack.\"\n\nRanger was already gone when the little red corvette pulled up next to the old chevy truck. Martha was already in the barn saddling Sundance, Vicki grabbed an apple from the tack room and let the filly eat it from her hand, getting a nuzzle in response. Tossing two more in the saddle bag, she climbed the rail fence and slipped into the saddle. Sundance and she both knew exactly where to go and a little over an hour later, Vicki slid off the saddle and went and sat next to George.\n\n\"So, you and Tommy, that's new,\" he didn't even look at her.\n\n\"If you had been thirty minutes earlier, you would have seen him rescue me from that dick Steve Garvey.\"\n\n\"So, he's your hero now and you two are a thing, I guess?\"\n\n\"No stupid, his boyfriend Gene would have issues with that.\"\n\n\"Tommy's gay?\" George turned and looked at Vicki.\n\n\"Yeah, he was trying to figure it out, just like I'm trying to figure some things out about me and this guy I really like, and we just started talking. When he's not being a total ass, he's really a nice guy.\"\n\n\"So, what's up with this guy you really like?\"\n\nIt was now or never, Vicki took a deep breath, \"well, I've been kind of hiding something from him, something pretty major, and I've been afraid to tell him because I'm afraid he'll hate me and never want to see me again, and I don't think I could take that,\" Vicki looked into George's big brown eyes.\n\n\"Well, maybe he's hiding something from you, too, and maybe if he'd been honest with you, it would have never gone sideways.\"\n\n\"George, what are you saying?\"\n\n\"My aunt Martha is different,\" he started, \"I asked her if I could tell you and she said ok,\" George was as nervous as Vicki was.\n\n\"Go on,\" she reached out for his arm.\n\n\"Um, my aunt Martha used to be my uncle Martin, and the reason I never dated too much is because well, when she was transitioning, I discovered that I really like girls like her. Vicki, I love women, they are so soft and beautiful, but I also like certain parts of boys, I'm not really gay or straight, maybe I'm bi, I just like to be with transgender girls, \"Vicki couldn't believe what she was hearing.\n\n\"You don't remember me because my parents sent me to boarding-school in the seventh grade and then I went off to college, but I never forgot the day me and Tommy and Steve chased you, you were so feminine and yet you were a boy, you were as perfect then as you are now, I'm sorry, I should have told you.\"\n\n\"You knew this whole time?\" she didn't know whether to be pissed or elated.\n\n\"I knew when I did your install, the name on the invoice, I remembered it, I just thought you were a little further along in the process than you are and so I wanted to wait until you were ready to tell me.\"\n\n\"And you let me go all this time, freaking out about how you were going to react when I told you, worrying about how to tell you and putting up with dickheads like Steve Garvey getting in my face and calling me awful names,\" she was shouting, on her knees pounding both fists into his broad chest,\" If I didn't love you, I'd hate you,\" she froze.\n\nGeorge wrapped her in his arms and just hugged her, \"I love you, too,\" their lips met, and the universe exploded, nothing else existed but them. Laying her on the grass, George kissed her cheek and then her neck while his hands delicately undid the buttons of her blouse. Vicki moaned and his fingers started to caress her stomach and her sides, she was surrendering completely to him and had no idea what that meant.\n\nUndoing her bra while George pulled his polo over his head, Vicki licked her lips at the vision of masculinity hovering above her, running her fingers through the hair on his chest as he lowered his lips to hers once again, his hands gently squeezing her budding breasts pinching her nipples, eliciting a loud moan.\n\n\"George, I don't know what to do,\" Vicki gasped as his jeans joined hers and she saw him naked for the first time.\n\n\"That's ok, I can show you,\" George looked down at her, slipping his fingers under the band of her panties and slowly pulling them down her legs, \"my god you are so beautiful,\" the look in his eyes was a mix of hunger and passion. Vicki had never had anyone look at her naked with anything more than ridicule before. George lowered his head to her crotch and licked the tip of her small cock, taking it delicately in his mouth and twirling his tongue around it while his hand played with her testicles.\n\n\"Was it possible,\" Vicki thought? \"Can he truly think I'm beautiful? Does he truly like me just the way I am?\" she smiled as the pleasure in her groin grew. When his hand slipped between her legs, she had no choice but to trust him, opening her legs she let out a soft moan when he started to probe her rose, an audible gasp when his fingers slid inside, she put her hand in her mouth and bit down, stifling a scream, when he found what he was looking for. A few minutes later, the earth shook as she exploded into his mouth, the orgasm lasted forever and the tremors running through her body took her breath away.\n\n\"My god, George, what did you do to me?\" she started laughing.\n\n\"So, you enjoyed that?\" his smile told her he knew exactly what he had done and exactly what it had done to her.\n\n\"Tech me how,\" she grinned hungrily as she shoved him onto his back, taking his impressive manhood in her hand, she had never even thought about touching another man before but with George, it was so right. She leaned down and kissed the tip of his cock, smiling at George as she did.\n\n\"Good start, \"he chuckled,\" just go slow and do what I did to you. \"",
        "\"There's a difference,\" she blushed and grinned at him, \"a big difference,\" it was true, George was not a small man, especially there.\n\nTracing her tongue around his glans, she kissed the tip of his cock and slid the head into her mouth, stopping to get used to the feeling and the taste, deciding that she liked both. Tentatively at first, she too him deeper, sliding him inch by inch across her tongue, using one hand to massage the shaft and the other to fondle his warm balls.\n\nGeorge moaned softly,\" that's it, just like that.\"\n\nVicki took him deeper until her throat complained, she was only halfway.\n\n\"That's ok, it's a lot, just keep doing what you're doing,\" George encouraged her, and Vicki started pumping, sliding him in and out of her mouth, using her tongue to guide him and to tease the slick shaft. When she went too deep or too hard, her throat would complain, but she kept going, challenging it time and again, while her hands continued to massage and fondle what her mouth couldn't handle.\n\nGeorge's moans got louder, and she could feel his body start to tense, could she do it, could she let him cum in her mouth, could she swallow as he had? All she knew is that she wanted him to experience a little of what he had given her. Vicki moved faster, gripping George's cock tighter and squeezing his balls a little more firmly, she got too aggressive, and she gagged, but when she did her throat spasmed and opened a little, she got another inch, she tried again and got the same result, the third time, she pushed a little harder and he slid all the way down her throat.\n\nGasping for breath, she pulled him free, lines of spit and saliva running from her lips to his cock she smiled down on him as his eyes begged her to do it again. It was easier the second time and the third, his hand found the back of her heads and he held her there as his back arched and his body spasmed and his cock pulsed, spewing rope after rope of think liquid down her throat.\n\nAs the spasms faded and his cock softened, George pulled Vicki to him, kissing her deeply and running his hands over her tight body as she settled under his arm, smiling, and laughing at what she had accomplished, \"I never thought I could do something like that,\" her hand running up and down the now flaccid beast, her mind wondering what else they could do. The memory of what George had done with his finger brought a smile to her lips, the vision of the beautiful girl in the begonia video made her blush.\n\n\"So, you and Martha,\" Vicki whispered as she nestled under George's arm, running her hand across his chest.\n\n\"Oh, hell no, \"George laughed out loud that the suggestion, \"I just walked in on her in the bathroom one day and when I saw her naked, her breasts and her hips and her cock, I just knew, I knew that's what I wanted, but it's kind of a niche market and transgender girls don't really advertise, so...\"\n\n\"So, why me?\"\n\n\"You're kidding right? You're smart, funny, and confident, you like cars and James Bond movies, you like horses and you don't take crap from anybody, besides, you're beautiful and you have a little extra something most girls don't.\"\n\n\"But down the road, that extra could go away,\" Vicki didn't finish the thought.\n\n\"I hope not, but that would be your decision and you did notice that I put that last, right? We all change, I mean I won't always be this studly handsome, someday, I'll be old and decrepit like my dad,\" George slid up on his elbow and looked down at Vicki.\n\n\"Hate to tell you this junior, but your dad is hot,\" Vicki pulled him down on top of her and kissed him hard,\" you're just lucky you got some of his good looks.\"\n\n\"Shit,\" George pulled away from Vicki.\n\n\"George, what did I say?\"\n\n\"It's not you, Dammit, Sundance went into heat, and we didn't catch it,\" Vicki looked over at the two horses, Ranger was on top of the pinto and appeared to be enjoying himself immensely, Sundance wasn't complaining either.\n\n\"I don't know, kind of looks like it might be fun,\" Vicki found George with her hand and gave him a gentle squeeze.\n\nGeorge looked down at Vicki and saw the raw lust in her eyes,\" You sure?\"\n\n\"George Granger, you have made me feel things I never thought I could feel and helped me do things I never thought I would ever do. I want my first time for this to be yours and only yours. And I swear, if you don't take me, I will go and get Tommy or Gene to do it,\" she grinned and kissed him, giving his cock a little tug at the same time.\n\n\"I love it when you get like this,\" he grinned,\" now roll over and show me what you got.\"\n\nVicki had no idea what to expect, but George's tongue licking her rose was not it, he licked and nuzzled and kissed her hole, sucking gently, driving Vicki nuts with the sensation, when it started to pulse, he slid his tongue into the opening, Vicki gasped. George's saliva ran down her legs and started to drip from her hardening cock as she started to moan. His fingers were next, probing and preparing her for what was to come,\" my god George, that feels so good. George, oh George, I'm going to cum.\"\n\nGeorge removed his fingers and started to use his tongue once again, taking Vicki's cock in his hand and stroking it, urging her to completion, her spunk covering his hand as she shuddered and shook.\n\nGeorge used her juice to coat his cock, pulling away, \"are you ready?\"\n\n\"Please George, make me yours,\" she pleaded. He moved his cock to her gate and pressed. Vicki gasped and the thick head popped inside her,\" oh shit that feels good,\" she moaned, surprised that it didn't hurt as badly as she had expected. It was a little uncomfortable at first, then she felt a growing sense of fullness that felt kind of nice, but now it felt wonderful, the way her sphincter was stretched, the twinges of pain mixed with the charges of pleasure; she just wanted more.\n\nGeorge pushed in slowly, dribbling his own spit onto his cock to provide a little more lubrication and Vicki continued to moan.\n\n\"Turn me over George, I want to see your face, please?\"\n\nHe pulled out and Vicki rolled onto her back, instinctively pulling her knees to her chest. George didn't waste any time shoving his cock back to where it had been and a little deeper. Vicki's eyes rolled back in her head, and she bit her lip as he started to move in and out, with each stroke probing deeper and deeper into her bowels until with a final thrust, he was all the way inside her.\n\n\"My god George, yes, oh, god yes,\" she shouted, \"George, yes, oh my god, oh my god.\"\n\nVicki looked into George's deep brown eyes, her green eyes sparkled with lust and her body ached for more of the wonderful feeling radiating through her, \"please George, take me, make me yours, please make me yours,\" she begged, and he began to thrust, slowly at first and then faster and harder, the more aggressive he got the louder Vicki moaned, when he would thrust all the way inside her she would let out little screams of pleasure, her cock dripped clear fluid on her stomach and strange feelings started to build deep inside her, this was not like anything she had ever felt, it touched every part of her body, tremors of pleasure coursed up and down her legs and arms, her breasts ached, her cock pulsed and shot streams of sticky liquid onto her stomach, and her mind exploded as it all came together in a massive tsunami of ecstasy. As uncontrollable shivers and spasms shook her very soul, George plunged as deep into her as he could, his body clenched, and he let out a huge groan. They collapsed together in a heap of lust and sweat and contentment, Vicki laughing uncontrollably, and George panting like he had just run a marathon.\n\nGeorge rolled onto his back and Vicki nestled under his arm, neither wanting to move or the moment to end. Only when Sundance nudged Vicki from behind, did they decide it was time to go home, she was probably a little worn out, too.\n\nThey took their time on the way back, watching the sunset from the back of a horse is an amazing thing. George helped Vicki with Sundance's saddle and they cast smiles and glances at each other as they brushed the horses down, Vicki remembering to reward Sundance with one of the apples she had taken, tossing the other to George to feed to Ranger.\n\nMartha was in the kitchen warming up some leftovers when they got to the house, \"so you two figure things out?\" she smiled. Vicki pulled her into a huge hug which George quickly joined.\n\nThey sat at the table and talked, George telling his aunt about Sundance and Ranger, \"And you didn't stop them?\" she looked at George and then at Vicki, their bright red faces told her everything she needed to know.\n\nWaking up in George's arms was better than anything she had experience since they had met, they way he ravaged her when he woke up was a very close second, filling her throat and her ass with his hot seed, and relishing the taste of hers just like he had on the vista by the big oak tree and the little pond. The breakfast Martha served them when they finally came downstairs was not too far from the top of the list. Victor was completely gone and there was no one left to care, the only regret was that Vicki hadn't shown up sooner in his tortured life, but then, would she have ended up here? In the final analysis, Vicki decided that things had worked out exactly as they should have.\n\n--- Epilogue ---\n\nOver the next several months, George and Vicki figured it out, he rented out his small cottage and moved in with Vicki, fully enjoying the job the hormones were doing with her breasts and her seemingly unending libido.\n\nAs Sundance progressed, Vicki had to find other horses to ride but her skill developed quickly even to the point that George let her ride Ranger, once. Weekends were always at the ranch, Vicki learned how to feed and care for the horses and to her disdain, how to muck stalls, but she loved every minute of it, never complaining once.\n\nBill gave Hank the contract for all his buildings and Vicki moved into the office, coordinating the efforts of the entire landscaping division.\n\nChristmas came and went with Vicki giving George a little more to play with, the surgeon Martha had recommended gave the hormones a little help and her burgeoning B cups became full C's; George was happy.\n\nGeorge gave Vicki a new saddle and a pair of handmade boots from a company in Texas called Lucchese, ostrich and they fit like a glove.\n\nFor New Year's Eve, Bill and Erica invited Vicki and her parents to their club for a special dinner, the men in their suits and the ladies in their cocktail dresses, it was a special night. As the ma\u00eetre 'd pushed the desert cart up to the table, George looked at Hank, Hank nodded, and George got up and knelt in front of Vicki, he didn't have to ask, she jumped in his arms and covered him with kisses, the ring was gorgeous.\n\nA year to the day after George and Vicki had figured it all out on the plateau, Sundance dropped the most beautiful foal, Vicki had been there to watch and had started to cry uncontrollably, George wrapped her in his arms and whispered in her ear, \"we can adopt, you know?\"\n\nShe turned in his arms and kissed him hard,\" I love you so much.\"\n\n\"I love you,\" too, he picked her up and carried into the house to their room, where he proceeded to show her just how much.\n\nGiggling, exhausted and a little sore, Vicki got up to use the bathroom tripping in the darkness and landing with a thump, George jumped up to make sure she was ok, finding her sitting in the middle of the floor, laughing uncontrollably, holding one of the shoes she had worn earlier when they went to dinner with his parents, it was a simple black shoe with a wide heel and a little strap across the front, it had a brogue accent on the toe, he thought Vicki called them her Mary Janes."
    ],
    "authorname": "ShelbyDawn57",
    "tags": [
        "oral sex",
        "blowjob",
        "masculinity",
        "pussy eating",
        "love story"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/mary-janes"
}