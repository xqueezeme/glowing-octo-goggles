{
    "title": "Jacob's Ladder",
    "pages": [
        "All rights reserved. No part of this work may be used or reproduced without written permission.\n\nThis is a work of fiction. Names, characters, places and incidents are either products of the author's imagination or are used fictitiously. Any resemblance to actual events, locales or persons is entirely coincidental.\n\n*****\n\nI push the button on my built-in coffeemaker and hear the beep that says it's starting my favorite brew. I stretch, reaching as far toward the kitchen's copper-coffered ceiling as I can reach, luxuriating in the feeling of not having to be at the office this morning. But then I glance at the clock and nearly gasp. I've been a little too leisurely. It's seven forty-five and my visitor is supposed to be here at eight. My makeup and hair are done, but I'm most emphatically not presentable just yet.\n\nI hurry across the front of the great room, heading for the master bedroom. My new five-inch heels beat a staccato rhythm on the entryway tile. I've been wearing them during my morning routine to make sure they'll be comfortable enough for the office. Shorter heels would probably be smarter, but I favor the taller ones to bring me eye-to-eye with the men in my department. And at the moment, the heels are all I'm wearing.\n\nI'm just pulling a pair of panties out of the drawer when the doorbell rings. Damn, he's early. In my professional opinion, when you're supposed to be somewhere at a stated time for a one-on-one appointment, being early is just as rude as being late.\n\nMy long, thick bathrobe is hanging on a hook just inside the bedroom door for just such emergencies. I slip into it and tie it off at the waist, then walk back to the front door and look through the peephole. Damn again, it's not who I was expecting; it's Wayne from next door. If every other visit he's paid me is any indication, he's going to get in my face about some minor infraction of the Homeowners Association covenants. Which one will it be this time?\n\nWhile I like to complain about the HOA, I know I probably shouldn't. Andrew and I knew very well what the covenants were when we bought this homesite. And on the positive side, they make sure the residents are diligent about upkeep and not letting our places get messy. They make our upscale subdivision a more beautiful place, which I appreciate. I work hard to be a good neighbor, so no one has ever had a negative thing to say about my home or how I maintain it.\n\nExcept for Wayne.\n\nHe never bothered us when Andrew was here, but now that I'm by myself, I get the feeling that Wayne stares at my house day and night, looking for any excuse to come over and harass me.\n\nI'd like to pretend I'm not home (and most days I'd have been at the office by now), but my car is still parked out in the driveway due to the death of my garage door opener, which won't be replaced until Monday. Sure enough, he rings again. I sigh and open the door a few inches, frowning.\n\nWayne's a big guy, maybe six foot five and four-hundred pounds. He must have been an imposing figure back in the day, but now, in his early forties, he's let himself go. He's less Hulk Hogan and more Homer Simpson, and if the HOA had any rules about regular bathing or wearing clean clothes while in public, I could nail him for some major infractions.\n\n\"What is it this time, Wayne?\" I demand. I'm beyond trying to be polite with him. I know from experience that any such effort won't be reciprocated.\n\n\"Your hummingbird feeder,\" he says. \"The covenants clearly state that bird feeders aren't allowed, due to the mess they make.\"\n\n\"It's not making a mess,\" I protest, \"because there's only colorless sugar-water in it. There are no seeds or hulls involved.\" Then it occurs to me. \"Hey, wait! How do you even know I have a hummingbird feeder? It's tucked into an alcove and can't be seen from any neighboring windows or backyards. As a matter of fact, the only way you can even see if from my yard is to come up on my back deck.\"\n\nWayne looks a bit nonplussed for a moment, but it doesn't last. \"Doesn't matter how I know,\" he says defiantly. \"I'm gonna have to report you.\"\n\nAnd he will, too. I actually had to get a lawyer involved last time when he ratted me out for having four tomato plants growing in a corner of my front flower bed. I'd somehow missed the clause decreeing that vegetables could only be grown in the backyard. Hell, I'd been complimented on them by other neighbors.\n\n\"Okay Wayne, I'll take the feeder down,\" I sigh. \"Just don't go to the board of directors about me again. I really don't need any more of that hassle.\"\n\n\"Sorry, I can't start covering up violations. It wouldn't be ethical.\"\n\nEthical? I slump, defeated. \"Do what you think you have to do, Wayne. Just go away.\"\n\nNormally he leaves right away once he's gotten his little victory, but this time he's staring at my bathrobe. It's only now that I notice the bulge in the front of his stained, one-size-too-small sweatpants. For a long moment, I almost get the feeling that he's not going to honor my request, but then he turns and plods across my lawn, heading back to his house.\n\nI stare at the realty sign in his front yard. Please God, let that place sell fast and get the creep out of my life. I close and lock the door.\n\nNow time is really tight. Bad enough I let Wayne see me in my bathrobe, but I know when the electrician is supposed to be here, so it would look bad if I wasn't fully dressed by then. I strip off my bathrobe as I walk back to my bedroom, but just as I hang it back on its hook, my phone rings. I retrieve it from the nightstand, then groan when I see who's calling.\n\n\"Happy Friday, Roger,\" I say with more enthusiasm than I feel.\n\n\"Claire, I really wish you were here right now,\" Roger grumbles.\n\n\"What's up, boss?\" (In my experience, corporate CEO's like it when you call them that.)\n\nI figure his call is to make sure I'm using this rare time off to meet the electrician and not for sleeping in.\n\n\"It's the Spartan account,\" he sighs.\n\nOkay, so maybe I was being overly cynical about the reason for his call. For the last week, the word around the water cooler has been that there's some trouble with that project.\n\n\"How can I help?\" In my role as VP of Finance, I get him the numbers he needs. But if the office scuttlebutt is even halfway accurate, his concern isn't a numbers thing. Yet.\n\n\"Well, ever since Raul and Megan left, the advertising division's supply of catchy slogans hasn't been what it was. They're having a hard time with this one, especially since Spartan's product is a bit... um... sensitive.\"\n\nI can almost hear him blush over the phone. \"I suppose that's one way to put it,\" I agree.\n\n\"Claire, you used to come up with some clever stuff when you interned with those folks back in college, and I need to have something they can develop pronto. We're scheduled to give the suits at Spartan a big presentation in two weeks.\"\n\n\"Well, I'm still waiting for the workman to arrive, but I'll see what I can come up with in the meantime.\"\n\n\"If you get me something we can use before noon, I'll throw in a thousand-dollar bonus, since it's not your department.\"\n\n\"I'm all over that, boss.\"\n\n\"Good. I'll expect to hear from you soon.\" With that, he's gone.\n\nI glance at my alarm clock and realize that it's a couple of minutes after eight now. The guy could be here at any time. I glance out my window through the sheers. There he is, carrying a toolbox up my front walkway.\n\nI frantically race for the clothes I laid out across my chair last night. I don't have time for undergarments now. I pull on my skirt, then grab my blouse and head for the door just as the bell rings.\n\nWhen I arrive, I've fastened enough of the blouse's buttons to be decent and I'm zipping it into my skirt. Looking through the peephole, I confirm that the workman has the Murphy Electric logo on his shirt. I open the door and a sudden look of surprise blooms on his face. I don't know what he was expecting, but the look is just as quickly replaced by a friendly smile.\n\n\"Hi, I'm Jacob,\" he says, his deep voice pleasant and professional.\n\n\"Thanks for being right on time, Jacob. I'm Claire. Come on in.\"\n\nHe appears to be in his early thirties, maybe just a couple years older than me. He's tall, trim, clean cut, and quite handsome. His dark hair is short and conservatively cut, his uniform clean and neatly pressed, and he shows no signs of the piercings or tattoos so common in his profession nowadays. Put him in a suit, and he wouldn't look out of place in the corporate meetings I spend so much time in. I also surreptitiously notice that, like me, he's not wearing a wedding ring.\n\nI lead him over to the east wall of the great room. The tall one. \"I've hired a professional stager to help me get this place ready to sell,\" I say. \"She insists that the entertainment system is screaming to be moved to this wall. There's no outlet here, though, and we don't want an extension cord ruining the flow of the room.\"\n\nHe nods sympathetically. \"There's never one where you need it.\" Then he turns to take in the setting more fully, eventually letting out a low whistle. \"I'm sorry to hear you're selling. Your home is as amazing on the inside as it is on the outside. Easily the best in the neighborhood. And that's saying something. It's... well... incredible.\"\n\nYeah, I suppose it is. Sleek, expansive and emphatically avant-garde, while somehow remaining warm, practical and timeless. My friends tell me it looks like something from the cover of Architectural Digest. The house sits on the best lot in the area too, at the top of the hill with a great view out over the city, and it's arranged in such a way that the backyard is completely private. The neighborhood is quiet, low-crime, and boasts a nationally ranked private school within walking distance.\n\nI nod. \"I'm going to miss this place. My husband and I were planning to raise kids here, but it's just me now and it's too much house for one person.\"\n\n\"Just me\" doesn't begin to relay the awful truth of it. Two years ago, the boy I'd married while we were still in high school, the man who had become the rising architect who'd designed this spectacular home just for us, had been taken from me in a motorcycle accident. Andrew had always told me he'd sell that damned bike the instant we got pregnant, but neither of those things ever happened.\n\n\"I can understand that,\" Jacob says. \"I sold my house last year when I found myself on my own. I miss the memories, but my apartment is a lot less hassle.\"\n\n\"My reasoning precisely.\"\n\nHe takes a deep breath, as if he's pushing back painful memories the way I am, then turns back to me. \"Okay, show me exactly where I need to put this thing.\"\n\n\"I'd like you to put it right here,\" I say, leaning down to mark the location. It's only when the words are out of my mouth that I realize I could have chosen them a lot better, especially following Jacob's own rather unfortunate phrasing.\n\nI'm bent way over in front of him, so close that he could reach out and stroke my proffered ass, or even step up behind me, wrap those big hands around my waist and...\n\nI stand up quickly, embarrassed at my unintentional double entendre and my wildly inappropriate fantasy. Unfortunately though, I've stood up too quickly and I somehow lose my balance up here on my ridiculous shoes. I start to stumble and try to stick a foot out to regain my equilibrium, but my heel catches on the thick carpet.\n\nUnbelievably, I'm falling unhindered toward the stone and glass coffee table. I'm in a bad orientation too, and I realize that, incredibly, I'm not going to be able to get a hand out to break my fall.\n\nThen I'm in Jacob's arms. \"Gotcha,\" he says calmly. \"Are you all right, ma'am?\"\n\n\"Uh...\" I say artfully. Then I regroup for an attempt to come up with something moderately coherent. It's not easy. I haven't been held by a man in a long time, and this feels really good. My shoulders are pressed against the heavy muscles of Jacob's chest, and I like the sensation of his strong arms wrapped around me, right up under my breasts. A sense of rightness washes over me, like I've been waiting for this for a long time.\n\nThen I remind myself that Jacob's not embracing me out of any romantic interest. I've just taken a bad step and he's saved me from what could have been a serious injury. And he's still holding me, probably waiting for my response before trusting me to stand on my own again.\n\nThen, even worse, I realize that in my hurry I didn't button my blouse up quite as high as I would have if I'd had more time. In my current position, it's tented way out and I can see both of my bare nipples. If he's looking down (and he most likely is) he's seeing them too. Yeah, real professional, Claire.\n\n\"I'm fine,\" I finally manage, doing my best to employ the cool and confident tone I use at work. \"I just tripped. Thanks, Jacob. That was really clumsy of me.\"\n\n\"Hey, it happens to everyone from time to time. I'm just glad I was there to catch you.\"\n\nOnly now does he set me back upright. He lets go slowly, as if waiting to make sure I'm competent to stand on my own two feet. Or else he's enjoying the view.\n\nI realize that I'm blushing fiercely. To make matters worse, he's noticed this. It's an awkward moment, but then he steps in and bails me out. \"Okay then,\" he says, his self-assured tone quite welcome under the circumstances, \"I'll get right to it.\"\n\n\"I'll be in the next room,\" I say, finally regaining my composure. \"Just let me know if there's anything you need.\"\n\n\"Will do. Thanks.\" As I turn, I catch another unexpected look on his face. It says he's waiting for me to say or do something more, but I have no idea what that might be.\n\nOnce I'm safely back in my room, I find that I'm almost shivering from the thrill of being held in Jacobs arms. My skin is tingling everywhere that we'd touched. He'd held me for a lot longer than necessary, but nowhere near as long as I would have liked.\n\n\"You're not going to sleep with him, Claire,\" I whisper to myself. Then that train of thought comes to an abrupt halt. Since when would I need a warning like that? I've only slept with one man in my entire life, and even then, only after we were married. I'm absolutely not going to start hooking up now.\n\nStill, there was something so solid, so masculine and so competent about him that I can feel myself getting wet down below just from the memory. Somehow, this humble electrician does things to me that I'd never realized were possible.\n\nThen an amazingly wanton idea comes to me. I almost blush again at the thought of it. I categorically push it away as needlessly indulgent and wildly improper, but then pause to reconsider. Why the hell not? I'm a grown woman and I can do whatever I want, so dammit, I will. As soon as he leaves, I'm going to pull out my vibrator and have some fun, fueled by the memory of his touch. After all, the job shouldn't take him long and I don't have to be back at the office until after lunch.\n\nBut if I'd thought that idea was out of character for me, the next one seems like it's from someone else's brain entirely. Why wait? Suddenly the risky and gratuitous fantasy of pleasuring myself while he's still in the house becomes absolutely irresistible.\n\nI kick off my heels, then peel off my blouse and skirt, draping them neatly back over the chair in case I need to get into them in a hurry again. Then I retrieve my vibrator from the nightstand drawer and do an evaluation in my full-length mirror.\n\nI was a competitive gymnast in high school and college, but at five foot seven, I was too tall to compete at the elite level. I've worked ridiculously hard to keep that body, though, and I'm proud to say that I don't look a whole lot different than I did then. My waist is small, my hips curved just enough to be womanly, my stomach flat and defined. My breasts are bigger now, of course, but they still sit up nice and high, even without a bra. I've got a light, lineless tan from occasional nude sunbathing sessions on my back deck. My friends tell me I look early twenties, not late.\n\nI imagine myself walking out to check on Jacob's progress like this. He'd gasp when he saw me, then get a sly smile on his face before walking over and wrapping me in his arms again. He'd stroke the warm flesh of my naked body with those big hands, cupping my ass cheeks. I'd grind my bare pussy against his hard cock through his jeans, then...\n\nMy nipples are rock hard now and sticking out like pencil erasers. I'm almost shivering with my desire. I reach down and touch myself. I'm swollen and slick. Yeah, Jacob's got me totally worked up.\n\nI know I've been masturbating way too much lately, (even keeping myself shaved bare to indulge my fantasies) but this time I've got some fresh material to work with. I prop my foot up on the chair, then bring the vibrator close to my center.\n\nI hit the switch and the device comes to life. It makes some noise, but with the thick acoustic insulation built into the wall between this room and the great room, it's nowhere nearly enough that Jacob would be able to hear it. I lay the shaft down into the embrace of my folds, then shiver from the sensations that travel through my body. Yeah, this is gonna be good.\n\nI insert the tip inside myself, moving it around a little to get it wet and slippery, but find that this really isn't necessary. I'm much wetter than usual. I begin to push it up inside, watching in the mirror as it disappears. Oh God that's sweet.\n\nThen I hear the soft, musical chime from the alarm system that says the front door has opened. I slide the vibrator out and walk over to the front window.\n\nJacob's heading down the walkway toward his truck. He's got it parked in the nearest space available, which is, unfortunately for him, clear at the other side of the cul-de-sac. Funny how Wayne never makes a peep when the neighbors park their cars on the street in violation of the covenants.\n\nI watch my handsome electrician intently. His gait is confident and strong, his back straight and his stride long. He's got the perfect ass, too, and it's enhanced by jeans that aren't tight, but fit him wonderfully. Oh my God, what he does to me!\n\nI put a foot up on the window bench and slide the vibrator home as I watch him through the sheers. I moan from both the physical and visual stimulation.\n\nWhen Jacob arrives at his truck, he reaches up and flips some levers or something on the rack that holds a couple of ladders above the roof. He grabs the longer one and lifts it down like it weighs nothing at all. He turns it in one hand above his head as he takes a few steps away from the truck, then rests it on his shoulder as he starts to walk back toward the house.\n\nOnly then does it occur to me that I'm in full view. I freeze. Then I realize that since the sun is in his eyes and my window is in the shade of the front porch, I'm not terribly conspicuous. Hell, with the sheers, he probably couldn't actually see me if he was looking. Still, it's probably best to not make any motions that would draw his eye. I stay stock-still with my toy buzzing away inside me as he approaches. I feel a bead of my fluids run down the inside of my finger.\n\nJacob doesn't appear to notice me as he steps up onto the porch. Then he turns his back momentarily as he opens the door, and I use the opportunity to step away from the window, going back to the mirror and watching myself as I get off to the vision of this handsome stranger.\n\nI take more and more of the tool, the vibrations on my inner tissues an amazing cocktail of erotic pleasure, but then it's finally inside far enough that the magic can start.",
        "There's a little vibrating bulb that sticks up from the base of the device. Gingerly, I slide the vibrator in just a little further, and the bulb touches my clit.\n\nI flinch hard, pulling the bulb away from the explosion of sensations emanating from my stiff little sex organ, but I'm just getting started. I slide the device out until only the tip is still within, then shove it in again.\n\nThis time I can hold the bulb against my little nubbin for a few seconds before it's too much. My third plunge lasts even longer. Soon I'm grinding the bulb against my clit, feeling the intense vibrations against the center of my pleasure. Christ, that feels amazing.\n\nThen I'm stroking myself with a will while I wildly diddle my clit with the fingers of my other hand. The vibrator is making wet, squishy noises now. I imagine Jacob between my legs, thrusting, his face in a state of wonder. Oh my God, it would feel so good to have him fuck me.\n\nIt's actually taken a while, but I'm finally there. My climax washes over me, my body stiffening with my release. I let out a long, low moan. I stay near the gentle peak for a while, gently massaging my clit, but finally slide down the backside and turn off the vibrator. I put the device on the glass top of my dresser, then collapse onto my bed, spent for the moment. I decide that I'm going to hold on tight to the memory of this guy as fodder for future sessions.\n\nAfter a few minutes, I get up and clean my vibrator, then put it away. My pussy is still dripping wet, but I decide to leave it. Jacob did that to me and I'm going to enjoy it a little longer.\n\nI consider getting dressed, but the thought that my handsome electrician is still in my home, just on the other side of this wall, is starting to turn me on once again. I wonder if I've put the vibrator away too soon.\n\nThen the alarm chimes again. For an instant, I think about another trip to the window to watch, but then a more scandalous idea pops into my sex-addled brain.\n\nMy morning coffee is still waiting for me. Due to Wayne's harassment, Roger's call and my sudden obsession with Jacob, I haven't had any of it yet. It's a long walk to the truck and back, so I've got more than enough time to pour a mug and snag a couple packets of sugar. If I go right now.\n\nMy caffeine fix is secondary of course. What I want, what I need, is the thrill of the risk I'd be taking, crossing that large open space in the nude while knowing that Jacob will be back soon. Of course I wouldn't want him to actually catch me that way, but the knowledge that he could thrills me to the core. My arousal soars as my common sense plummets.\n\nWith my decision now made, I quickly look out the window to be sure that Jacob's on his way to his truck. That confirmed, I open the bedroom door and force myself to walk, not run, toward the kitchen. The cool air caresses every square inch of me, and the sheer daring of it is making me feel more alive than I've felt in years. God, I'm going to be pulling out my vibrator again just as soon as I get back to my room!\n\nThis may be my second trip to the kitchen in the nude this morning, but that's far from unusual. Perhaps because of our strict upbringings, Andrew and I were looking to spread our wings a little after we got married. One of the hang ups we shed was our nudity taboos, at least around each other. At first, we would only remove our clothing to bathe or make love, but soon it became a game, challenging each other to do more and more things in the altogether.\n\nSoon, we only dressed to leave our little apartment or if we were expecting visitors. Then it went from being a contest to just being easy and convenient, and it's been my habit ever since. More than one friend who's dropped by unannounced has been greeted by my bathrobe-clad figure and the excuse that I'd been \"just about to step into the shower.\"\n\nThis is different, though, because Jacob won't be waiting for me to open the door for him when he gets back.\n\nThe coffee in the thermal carafe is still steaming as I pour half of it into a tall mug. I'll refill the mug with the rest when I leave for work. I tempt fate by wasting a precious ten seconds, spooning in some sugar and screwing on the lid. I should still have plenty of time.\n\nI'm almost to the front door, which will be the halfway point of my return journey, when it suddenly opens wide. I freeze.\n\nJacob's eyes meet mine, then quickly travel up and down my body, taking me in fully. I'm as still as a mouse caught in a cat's gaze, and I don't have even the vaguest clue of what I should do next.\n\nI would have expected surprise or embarrassment from Jacob, but instead I see the resolution of the confusion I'd seen earlier. It's like he was expecting to see me this way all along and now knows what he's supposed to be doing.\n\nNow I'm the one who's confused. It comes to mind that I should ask him what I'm missing here, but instead I say something really lame. \"I was, uh, just getting some coffee.\" I indicate the mug in my hand. Perhaps my overly stressed subconscious believes that if I don't act like I'm nude, he won't notice. That's beyond stupid of course, but in my current state, I run with it.\n\nHe smiles. \"That was the first thing I noticed.\"\n\nNow what do I say? Basic hospitality steps in and takes over. \"Um, would you like some?\"\n\n\"You know,\" he says in a completely even tone, \"I was running a little late this morning and didn't have time to make any. I would love some coffee, Claire.\"\n\n\"Great,\" I say, somehow managing to match his casual tone. \"Come on into the kitchen and we'll get you fixed up.\"\n\nHe follows me and I can practically feel his eyes on my nude form, but when I grab another mug and turn to him, his eyes are firmly on mine. \"How do you like it?\" I ask.\n\nI think I almost catch some amusement on his face, but perhaps that's just my realization that again, I could have phrased it better.\n\n\"I take mine black,\" he says.\n\nSomehow, this doesn't surprise me. I pour the rest of the carafe into his large porcelain mug. It's the perfect amount. It probably would have been a little late in the morning for me to have drunk the rest of it myself anyway. I hand it to him with a smile.\n\n\"Thank you,\" he says gratefully, then takes a sip. His face lights up with unalloyed pleasure. \"Hey, this is really good.\"\n\n\"Thanks,\" I say. \"I'm kind of into coffee. I get the beans from a small import house, then roast and grind them fresh every morning.\"\n\n\"Well I guess that really makes a difference. What do you use?\"\n\nAlmost on autopilot now, I show him my air roaster. He appears to be fascinated, asking me pertinent questions about how it works and how long it takes. He's equally intrigued by my Burr mill grinder. His interest seems to be genuine. I end up telling him about the intricacies of the process and how it leads to a better brew.\n\nThis is, hands down, the most surreal conversation I've ever had, because neither of us seems to be willing to acknowledge the elephant in the room. I should be dying of embarrassment right now, but instead, I'm becoming more and more aroused. My nipples are beginning to ache from being stiff for so long, and I can feel a tiny rivulet of my juices start to trickle down my leg. It's becoming increasingly more difficult to maintain my calm and conversational fa\u00e7ade. I'm starting to consider just throwing myself into his arms, but if my nudity is affecting him, I'm not detecting it.\n\n\"Well,\" I say at last, \"I think I've shown you about everything.\"\n\n\"And I really appreciate that,\" he says with a completely straight face.\n\nI nearly facepalm for somehow letting loose with yet another unintentional double entendre. Is this Freudian somehow?\n\nJacob drains the last of his mug and gives me a grateful smile. \"Thank you, Claire. That may have been the best coffee I've ever had. I think I'm going to look into doing it that way myself. You've shown me that it's not as difficult as I would have guessed.\"\n\nThen he clears his throat. \"But speaking of difficulty, I was having trouble pulling one of the wires. Since you're out here, would you mind giving me a hand for just a minute?\"\n\nPart of me wants to race for the safety of my bedroom, but another part of me wants to stay naked with him until he does something about it.\n\n\"Uh, sure, Jacob. What can I do for you?\"\n\n\"Come on, I'll show you.\"\n\nI feel another wave of embarrassment as we walk out of the relatively small and intimate confines of the kitchen and into the lofty spaces of the great room. I swallow hard and resolve to brazen this out. I'm getting more used to being nude in his presence, but it hasn't made this situation any less surreal.\n\nI follow Jacob to the ladder. \"To avoid tearing up the wall,\" he says, \"I'm running power from that wired smoke detector up near the ceiling. I've dropped a Romex cable down through the wall cavity from there, but I can't seem to fish it out of the new outlet's hole. I thought I'd left the special tool I need for that in the truck, but I was only halfway there when I remembered that I loaned it to one of the other guys.\"\n\nMurphy's Law, I guess. And it got me caught doing the full Monty.\n\n\"I need you to go up on the ladder and make the cable swing a little so I can catch it,\" he finishes.\n\n\"Okay, I think I can do that,\" I manage.\n\n\"I really appreciate this.\"\n\nIt occurs to me that it would make more sense for him to go up the ladder and have me catch the cable, but he's the expert. I climb easily, my gymnastics training making me nimble and fearless about heights.\n\nThe peak of the ceiling is twenty-three feet high, (a number that Andrew and I used to quote to visitors when they'd almost inevitably ask) and the hole where the smoke detector was is inches from there. It helps that Jacob's ladder is equipped with the extra legs that splay out to the sides at the bottom to make it super stable. At least I don't need to worry about it toppling over. Jacob stands at the base of the ladder, holding it steady as I go up.\n\nIf I'd felt exposed before, it's nothing compared to how I feel now. He's looking straight up at me, his view of my privates completely unobstructed. He'll see that I'm dripping wet, and that my pussy is red and swollen from what I did to myself earlier. But knowing that Jacob is observing this only makes me wetter.\n\nWhen I arrive at the top, I see that the thick electrical cable is bent into a hook shape to keep it from falling down into the wall. I grab a hold of it and experimentally twist a little, feeling the cable move inside its narrow space. It only takes a few seconds before I get the hang of it, and soon it's slowly swinging back and forth.\n\n\"That's perfect,\" Jacob says. I look down. He's on his knees, bent forward with his fingers in the hole, evidently feeling for the cable. His other hand is underneath him, doing I don't know what.\n\n\"There!\" he exclaims as he pulls the end out through the hole. He looks up with a grin. \"That worked great. Thanks Claire.\"\n\n\"Don't mention it,\" I say, about to start back down.\n\n\"Hang on,\" he says quickly. \"Coming down is more dangerous than going up. Let me spot you.\" He's on his feet in an instant and comes up the ladder behind me. When he arrives, I start to take a step down, but then freeze as his hands grip the front of my hips. His long fingers are maybe an inch from my pussy. My breath catches in my throat.\n\nI look down and see the expression on his face. His professional visage is gone, replaced by a lustful, commanding presence. His fly is open, and protruding from it is an exceptionally long, thick, erect cock. His intentions are quite clear.\n\n\"Wh-what are you doing?\" I stutter anyway.\n\n\"Claire,\" Jacob growls, his voice hard now, \"you sowed the wind with your little \"let's see if he says anything about me being naked\" stunt. And now you're going to reap the fucking whirlwind.\"\n\nI'm about to tell him that it had all been a mistake and that I'd had no intention of him actually seeing me naked, but the words get stuck in my throat. The desire in his eyes is hypnotic, freezing me in place.\n\n\"You're my fuck toy now,\" he says. \"I'm going to do with you as I please, for as long as I want. You can't stop me, and no one will hear you scream, so don't bother.\"\n\nHe looks deadly serious, but I still have to believe there's more going on here than meets the eye. I mean, he seemed surprised by how I was dressed when he first saw me, then relieved when he caught me naked, like he was expecting that all along. And if he was expecting me to be naked, then he's got to think I want this.\n\nThe damning thing, though, is that I do. I want to surrender total, unquestioning control of my body to him. I want him to have his way with me, to please himself with my body in any way he wants. But if I'm going to play this game with him, I'll need to hold up my end. I think I can do that.\n\nI grab his wrists and try to pull his hands off my body. \"Leave me alone!\" I scream.\n\nIgnoring my feeble efforts, he pulls his arms out of my grip and catches both of my wrists in one hand, pushing them up painfully and leaving me completely immobile. Then he hauls off and spanks my ass with his other hand. One, two, three blows, and hard.\n\nThe sounds of the slaps and my resulting yelps echo in the large space. I haven't been spanked since I was a child, and never on bare skin. I'm automatically filled with shame, but then I find that my arousal has somehow soared to a level previously unknown to me, and my pussy is aching almost painfully with its need. My God, I liked that!\n\n\"That's just the slightest taste of what I'll do if you defy me again,\" he growls menacingly. \"You've got only one choice left in this, and that's whether it goes down hard or really hard. Do you understand me?\"\n\n\"Tell me what you want,\" I whimper. Jacob has turned me into a ball of contradictory emotions now. I'm excited, I'm scared, I'm horny, I'm worried he might kill me, I'm dying to have him touch me there, I'm afraid of more pain, and I hope he hurts me some more.\n\n\"Turn around,\" he orders. I comply, now facing him.\n\n\"Squat.\"\n\nI do, bringing my crotch right down to his face level. My legs are spread and his face is inches from my sopping pussy. I've got both hands behind me, holding on to the ladder.\n\nNow, looking out across the great room, I realize just how precarious my situation is. I'm up really high. If the ladder tips, or if either or both of us slip, serious injuries or worse could result. I should be scared to death, but other emotions are running this show.\n\nI'm dying to feel his tongue and lips on me, but he's got other priorities. He reaches into his back pocket and pulls out a length of rope.\n\n\"No,\" I murmur in horror. I'm suddenly not so sure he's playing. I may have really screwed up here.\n\n\"Shut it, bitch,\" he snarls. He climbs further up the ladder, rubbing his work shirt across my pussy as he brings his face level with mine. I feel each button as it drags between my lips and bumps across my clit.\n\nHis bare cock nestles in between my pussy lips. I can feel that it's rock hard. Despite my sudden fear that he's about to strangle me, I have to fight the impulse to grind myself on it. He's got me seriously fucked in the head.\n\n\"Reach way up and grab a rung,\" he demands. Still squatting, I let go of the ladder with one hand and put my arm up above my head. At the limit of my reach, I grip a tubular rung from behind, feeling its flat top and aluminum ridges under my fingers.\n\nAs I crane my neck to watch, he expertly ties a sophisticated looking knot around my wrist, then cinches it down. It's tight enough that there's no way I could pull out of it, but not quite tight enough to cut off my circulation.\n\nJacob takes another step up the ladder, dragging his cock across my pussy and lower belly. He's leaving a trail of precum, obviously as aroused as I am.\n\nHe ties the other end of the rope to the rung above the one I'm holding, cinching it up tight. Then he pulls out another length of rope and quickly ties my other wrist the same as my first. If I were to let go of the rung, I still wouldn't be going anywhere.\n\nI can't believe I've let myself get into this situation. Part of me wants to tell him I've had enough of this play-acting scenario. Another part is afraid to do that because it could reveal that the man isn't playing. But the biggest part of me is reveling in the sensation of just letting go and allowing him to do whatever he will with me.\n\nHe climbs back down to where he's got his face in my crotch again, then looks up at me with an evil grin. \"You're thinking you're gonna enjoy having me eat your cunt, but you're sadly mistaken.\" With that, he tips his head, leans in and sucks my left pussy lip into his mouth, then bites me.\n\nI shriek and jerk upward, yanking my labia from between his teeth. Oh my God, I can't believe he just did that. But even as I'm processing the shock, I realize that he hasn't actually hurt me. It was barely a nip, and my reaction was more surprise and anticipation of pain than any actual injury. Jacob's reaction, though, is a little less forgiving.\n\n\"Fuck, woman, I leave you a little freedom to move and this is how you repay me? I'm afraid you leave me no choice.\" With that, he produces another piece of rope, laying it across my belly, over the backs of my thighs and down to the rung I'm squatting on. He ties some sort of slip knots around the rung on both ends, then cinches it down tight. He's nowhere near done with me though.\n\nMore lengths of rope appear, which oddly makes me feel a little better. I mean, who randomly walks around with that kind of stuff in his pocket? There was some planning that went into this. Of course, that plan could still include killing me at some point.\n\nJacob binds each foot to the rung, then each knee to the vertical rails of the ladder, splaying my thighs way out to the sides. If I didn't still have most of my gymnast's flexibility, it could have been truly painful.\n\nLastly, he loops a rope over two rungs behind me, then diagonally across my chest, between my breasts. He cinches this one down tightly as well. I can still breathe, with some effort, but I'm pinned down tightly to the rungs.\n\nNow I'm well and truly immobilized. I can't help but wonder if Jacob earned the Tying up Helpless Women merit badge from the Boy Scouts. Yet after all of that, I'm still wanting to feel his mouth on my sex.\n\nFor better or worse, Jacob complies.\n\nI don't even try to jerk away this time when he clamps down on my other pussy lip. Knowing what's likely coming, I'm prepared to wait and see where he's going with it, but as his impromptu partner in this scenario, I feel it's my duty to protest.\n\n\"Get your mouth off me, you bastard,\" I snarl.\n\nJacob doesn't even do me the honor of a verbal response. Instead, he casually reaches up and slaps the side of my left breast. Again, the sound of it is surprisingly loud. I gasp as my sensitive mammary whips back and forth. No sooner does it settle back into place when he slaps it again. I stifle my cry, mostly because the pain, while sharp, is more erotic than agonizing. Is that skill on his part, or sheer wantonness on mine?\n\nI suspect that it's me because of my reaction to the way he's chewing on my labia. I don't think he's drawing blood or even bruising me, but the sheer outrageousness of his actions is turning me inside out. I never even knew pussy-chewing was a thing, but I'm soon skirting the edges of an orgasm.\n\nThen all hell breaks loose in my body as he moves up fractionally and sucks my clit into his mouth. I screech as he bites down on my stiff little organ and pulls it out of its hood, stretching it to an incredible tightness. Then he lets it slowly slide out from between his clenched teeth. It feels like my entire body is being roasted in the fire blazing in my center. The pulling and scraping sensations should have been horrific, but instead, my lust-o-meter pegs hard.",
        "Somehow, even with me thrashing within the limits of my bonds, he manages to suck my clit into his mouth and do it again and again. \"No, No, No!\" I scream, but what I really mean is \"Yes, Yes, Yes!\" I didn't know that a physical sensation could be this intense, but perhaps this is more than physical. It's become a transcendental experience, almost spiritual. It's possible that he's seriously injuring me, but at this moment I don't give a rat's ass.\n\nJust as I'm approaching my absolutely essential orgasm, though, Jacob cruelly pulls away. I cry out at this outrageous loss, thrusting my hips forward as far as my bonds will allow, but his teeth are gone. Jacob is climbing up the ladder and dragging his hard cock the length of my immobilized body. I mourn as I feel my release slip away.\n\nWhen he stops, his head is right up against the peak of the ceiling and his work boots are between my bare feet, on the same rung. I desperately try to rub my needy pussy against his boot, but he slides it out of the way. I'm inconsolably bereft.\n\nLife goes on, though, and from where he's standing, I can guess what's coming next. What I still don't see coming, though, is the immediacy of it. Without preamble, Jacob presses himself insistently against my mouth. To avoid having my lips bruised, I open up and let him in.\n\nI'm still mired in the disappointment of not being allowed to climax, but I need to regain control to handle what he's about to do to me. He slides into my mouth slowly, going just a few inches, then slides most of the way back out. At least he's starting off gently.\n\nI'm not going to be able to keep his cock out of my mouth, so I do my best to accommodate him, letting him move back and forth. It's been a long time and I'm out of practice, so I have to concentrate at first to keep my mouth open as wide as I can, especially since he's so big. I don't know if it's kindness on his part, but he continues to go slow for a minute or two, allowing me to pull myself back together.\n\nHe hasn't gone soft on me, though, either physically or behaviorally. His member is like a chunk of hot granite in my mouth. He starts to speed up, going a little deeper now. \"Fuck, that's good,\" he groans, suddenly losing control and thrusting hard.\n\nHis cock slams brutally against the back of my mouth and my head bangs against the rung. It hurts like hell, but then he does it again.\" Fuck yeah,\" he murmurs. \"You got a real sweet mouth, Claire.\" Then he begins thrusting in earnest, pounding hard against me over and over. I need to make him stop before he does real damage, but being bound to the ladder, and with my mouth full, I can't exactly articulate any suggestions. I figure I've only got one choice.\n\nBack in the day, I'd been eager to do whatever it took to keep my husband happy, just like he'd always gone out of his way to do extra things for me. One thing I'd done was to teach myself how to deepthroat him. He'd absolutely loved it, so I'd become something of an expert at it.\n\nThat particular skill comes in handy now, as I tip my head and take Jacob down my throat. He freezes when he feels where he is.\n\nI freeze too. Deepthroating my husband had been a reasonably straightforward proposition. He'd been what I understand to be pretty average size for a man. But Jacob is built like the guys I often watch on my laptop during vibrator sessions. It's not just my gag reflex I'm dealing with, it's the way his cock stretches the moist tissues of my throat. I force myself to relax and go with it. Fighting it will only make it worse.\n\nIf I'm to hold up my end of this deal, I should be thrashing and trying to get him out of there. Instead, I go ahead and take him the rest of the way. I press my face tight to denim and curly hair, then shake my head a little, wiggling his cock in my throat. Bless his heart, my Andrew could never have approached the place where the head of Jacob's cock is wedged right now.\n\n\"Oh Jesus,\" he moans. Yeah, I used to get that a lot. I back off and gasp, taking a deep breath. Sure, divers can hold their breath for two minutes, but probably not with a long cock down their throats.\n\nWith the excuse that I don't want Jacob carelessly thrusting into my helpless face anymore, I take over. I attack Jacob's magnificent member with a vengeance, sucking and licking him with everything I've learned over the years. Then I take him deep again, ready for the stretch this time. A dark, curly hair tickles the inside of my nostril as I wiggle on him some more. He moans.\n\nI concentrate on relaxing so I can stay down longer. I wonder to myself what exactly I'm trying to do here. Most men will never experience the pleasure of being deepthroated, yet I'm working hard to give my best service to a stranger who may just end up killing me? I must be some kind of mental.\n\nMental or not, I repeat the process three or four times, sucking, licking, then taking him deep and keeping him there for as long as I can. Then, just as I've taken the plunge again, his time approaches.\n\n\"Oh God,\" Jacob moans, \"I'm getting close.\" He wraps my head in a vise-like grip and takes over. I'm getting my wish that he'll do what he wills with my body. And I'm getting it hard and fast. His hips are almost a blur, and he slams my face against his firm abdomen with each stroke, thrusting frantically, brutally fucking my throat as he rises to his climax. Then he stops and presses my face into his crotch so hard that I wonder if he's going to break my nose.\n\nI reflect on the idea that he wouldn't need a rope to suffocate me if he held me to him like this for long enough. My life is literally in his hands now.\n\nHe cries out lustily and I feel hot, sticky ropes of cum shoot deep into my throat. I should be gagging and struggling, but instead I use all of my willpower to stay still. They say we're all born with five minutes to live, then reset that clock every time we take a breath. I wonder if I've taken my last.\n\nFortunately, Jacob is done in relatively short order. He slides himself most of the way out. I cough up his issue, then swallow it down. I really should bite his penis clean off his body and spit it onto the coffee table, but instead I habitually begin to clean him off. Yup, mental.\n\n\"Not bad, woman,\" he allows. His voice might be just a little gentler now, with the slightest trace of apology in it, but I may be imagining that.\n\nWhen he's clean, he pulls himself out, then reaches down and strokes my cheek with his unit. \"Not bad at all,\" he reiterates. \"I have high hopes for round two.\"\n\nI shiver.\n\nJacob takes a step down the ladder, then dries his clean but still moist cock on my breast. \"You got a real nice set of knockers for a two-bit whore, Claire.\"\n\n\"I'm gonna cut off your balls for this,\" I warn him, back in character.\n\nHe chuckles humorlessly. \"I rather doubt that.\"\n\nHe takes a couple more steps down and draws a nipple into his mouth, then seemingly sucks in half my breast. He grabs a big handful of the other one and squeezes. Hard. I cry out. It's rough and painful, but I've never enjoyed having my breasts touched as much as I am right now.\n\nJacob lets his hand drop, and then he's touching my pussy. He's not being gentle. He runs his finger up and down through my slot, squishing my lips to the sides and feeling how wet I am.\n\n\"My, Claire,\" he mutters, \"it seems that you enjoy rough stuff. In that case, I've got just the thing for you.\" Without further warning, he plunges two, then three, long fingers into me, all the way to the hilt. I cry out, but seemingly he takes no notice.\n\nJacob then squeezes his hand in a powerful grip, as if he's trying to crush my pubic bone. His fingers are clamped down hard across my G-spot, moving rhythmically as he begins to grind the heel of his hand against my slippery labia and clit.\n\nI've never been manhandled like this before, Andrew having always been gentle and considerate, but incredibly, I'm loving this. Craving this. Being bound and helpless only accentuates that feeling. Jacob is quickly driving me to places I didn't know I could go. Where has this been all my life?\n\nThere's no stopping me this time. The pressure on my clit and deep in my pussy soon shoves me forcefully into a massive orgasm. It's strong, deep and nearly mind-blowing. I forget where I am and who I am, losing myself in the sensory overload.\n\nJacob never slackens with the motions of his hand in my privates. I find that if he wanted to get even rougher, I wouldn't complain. My next orgasm arrives a couple of minutes after the first, and a third not long after that. It's good. So good.\n\nWhen I come down from my high this time, Jacob removes his hand, wiping his palm on my hip and then forcing his goopy fingers into my mouth. This time I'm cleaning my own juices off him. I suck his fingers greedily.\n\nWhen my taste is mostly gone, he pulls his hand away, then wipes his fingers dry, using my breasts as a towel again. \"You impress me, Claire,\" he says. \"You've gone along with everything, probably trying to win my approval in the hope that I'll show mercy and not actually fuck your cunt.\"\n\nYeah right. My thinking hasn't been anywhere near that foresighted.\n\n\"The deepthroat thing was especially nice,\" he continues, \"so I'm sorry to have to break it to you that your plan didn't work. I'm still gonna fuck your messy little twat.\"\n\nHe takes a step up the ladder, then reaches into his pocket and pulls out a condom. He tears the wrapper open with his teeth, then rolls it on one-handed. I feel himself rub the tip of his latex-clad cock in my folds.\n\n\"Jacob,\" I gasp, \"I've never been with anyone but my husband.\" I don't even know myself what I'm trying to convey with this. Is it a plea for him to desist, to be gentle, or a notice to him that he's getting to do something exceedingly rare and special?\n\n\"Yeah,\" he chuckles mirthlessly, \"and I'm your fairy godmother.\" He rubs himself in my wet folds for barely an instant, then pushes inside.\n\nI gasp. He's way thicker than my vibrator, thicker than Andrew, and even thicker than his three big fingers had been. I can feel sensitive tissues stretch much further than they've ever been asked to. I bite my lip to keep from crying out, but it's not about the pain. I can handle the pain, and I don't think he's actually tearing me. It's because I have zero control over how fast and how deep he goes. I'm completely and utterly at his mercy.\n\nI should be scared to death, but somehow I'm not. This is probably stupid on my part. There's still no credible reason to think he won't kill me when he's done. Or maybe before he's done.\n\nUsing short, hard strokes, Jacob thrusts deeper and deeper. Oh God, my shocked and dazed mind asks, will I survive this? I'm opened further and further as he plows ahead, relentlessly and mercilessly. He's moving into virgin territory here.\n\nFinally, denim rasps hard against my clit just as the head of his cock comes to rest against my cervix. I yelp. I've never been touched there. Part of me wants to pull up and off of him, to make him stay out of my body, but my lustful side wants more.\n\n\"Jesus Christ,\" he exclaims, actual admiration on his face, \"I've never fucked a woman that could come close to taking all of me, but you've got me sheathed to the hilt.\"\n\nHuh? I never knew there was anything unusual about me there, but then again, why would I? Still, a girl always appreciates a compliment. Perhaps even if it's from her potential murderer.\n\nBut then his voice hardens. \"So you can handle all of my meat. Isn't that special? Now let's see if you can handle this.\" With that, he starts to thrust, slowly at first, but then building in intensity. He's pulling almost all the way out on each stroke, leaving only a bit of the head inside, then ramming himself back in until our bodies make a loud slap as he bottoms out. He goes faster and faster, his hips eventually nearly a blur.\n\nI've never been fucked so hard in my life. I gasp and writhe, but not in any sort of attempt to get him to stop. God help me, I'm loving this. Still, I know I should be protesting. \"You're hurting me,\" I sob. While true, I consider this a feature, not a bug.\n\nWithout stopping the movement of his hips, he grabs a big fistful of my hair and presses his lips to my ear. \"Like I give a flying fuck,\" he growls. \"It's supposed to hurt.\" He roughly pulls my head to the side so it can slide under the rung, then yanks it back. Way back, until I can only see the beige of the wall. He holds me like that, with my throat totally exposed to him.\n\nJacob is a dynamo, pumping in and out of me like a dervish. I keep expecting him to slow, because no man can maintain this kind of pace for long, but he keeps going. He's still got my head pulled back with one hand and he's mauling my breasts with the other. He pinches a painfully stiff nipple and yanks hard. It feels like he's trying to pop it clean off my body, but in my current state, he's not pulling nearly as hard as I want him to.\n\nSoon, and despite myself, I rise to another climax. When it hits, Jacob drops his hand to my crotch and squeezes my stiff clit between his fingers. I cry out and convulse hard against my bonds and the ladder. It's so intense that I lose the concept of the world around me, my universe drawn into a tight little ball around my fiery crotch. It's the glory of heaven and the depths of hell, all rolled into one.\n\nMy orgasm finally eases, but he keeps pulling and twisting at my clit, driving me right into my next one. All the while, he never stops thrusting. I'm nearly delirious now, sometimes coming, sometimes not, but always feeling that constant pounding deep inside me. Wham, wham, wham.\n\nMy sense of time goes away. I'm scared that this will go on forever, yet praying that it never ends, but eventually I feel him stiffen. With a gasp, he holds himself inside as far as he can go. I feel the rhythmic pulsing of his cock as he fills the condom.\n\nThen he's done, and I feel him relax. He releases his grip on my hair and I twist my neck to get my head back to the same side of the ladder as the rest of me. For a long moment he collapses onto me, pressing my back hard into the ladder. \"Holy shit, that was good,\" he murmurs. I welcome his weight and the feel of his clothes against my sweaty body.\n\nAt last, though, he pulls out and moves a few inches away from me. He carefully removes the condom, ties it off, then lets it fall onto the canvas drop cloth far below. It doesn't escape me that this would allow him to take the DNA evidence with him.\n\nThis is the crucial moment. My life is now hanging in the balance. Was this a wayward game, like I'd hoped? Or is he going to kill me to avoid a long stretch in the state pen?\n\n\"Like Brad always says,\" he murmurs, giving me a warm and conspiratorial smile, \"\n\nI inwardly heave a big sigh of relief. My instinct was right all along. He indeed thinks I'm somehow in on this whole scene. I have questions, though, like...\n\n\"Who's Brad?\"\n\nHe looks at me like he thinks I'm joking, but when he sees that I'm not, he suddenly looks twice as confused as he did when I first opened the door to him. \"Uh, Claire. I'm talking about your ex.\"\n\n\"Huh? I don't have an ex. My husband passed away two years ago.\"\n\nIt's like I've literally stunned him. He gasps, and for a moment I think he's going to fall off the ladder. Then he seems to mentally catch himself and straightens back up. His unexpected reaction makes me ashamed of my nudity for the first time, and I suddenly wish I had my hands free to cover my breasts and crotch.\n\n\"Oh shit,\" he finally murmurs, staring at me and looking a little sick. \"You're not Claire Daniels?\"\n\n\"No, I'm Claire Davis.\"\n\n\"Oh my God,\" he gasps, looking about as distressed as I've ever seen a human being look. \"I just raped you, didn't I?\"\n\nI'm about to reassure him that you can't rape the willing when he suddenly jams his hand in his pocket.\n\n\"Hang on,\" he says. He pulls out his phone and his finger dances across the screen. I decide to be patient.\n\n\"Ms. Davis,\" he says at last, \"It must have been some crazy data entry error because of the similarity of your names, but your work order was mixed up with Ms. Daniels'. I was supposed to go to her house this morning.\"\n\n\"So I take it she was expecting you to do something like this to her?\"\n\nHe looks even more ashamed of himself now, if that's even possible. \"Yeah, that was the plan.\"\n\n\"But you've obviously never met this woman, or you wouldn't have mistaken me for her. Who exactly is she?\"\n\nHe sighs. \"Claire Daniels is my foreman's ex-wife. They decided they couldn't live with each other anymore, but according to him they still enjoy, uh, occasional physical relations. She and Brad like to roleplay a variety of scenarios, and they supposedly get a bit rough with each other.\"\n\n\"It seems you like to get a little rough too,\" I say, my voice carefully neutral.\n\n\"Ms. Davis,\" he says, looking like he feels about an inch tall, \"again I'm deeply sorry for what I just did to you. Whether I meant to or not, I sexually assaulted you.\n\nIt's time to let him off the hook. \"Jacob,\" I say, \"when you suddenly turned into a raging beast, I figured there was something more going on than met the eye. I wasn't completely sure you were roleplaying, but I wanted in on the game so badly that I was willing to take that risk. It was stupid of me, but I'd have to say that overall, I'm glad I did.\"\n\nHis expression is hopeful. \"So you're not upset?\"\n\n\"Not at all. Everything you did to me was totally, off-the-charts perfect, and I loved it. I've never done anything like it before, but it may have been the most exciting experience of my life.\"\n\nHis relief is palpable. I've obviously lifted the weight of the world from his shoulders. \"Then I feel much better, Ms. Davis.\"\n\n\"Please, Jacob, as intimate as we've been, I think you can safely go back to calling me by my first name.\"\n\n\"Okay Claire.\"\n\n\"You can also do me a little favor.\"\n\n\"Name it.\"\n\n\"Untie me so I can get down off this ladder.\"\n\nHis eyes go wide. \"Oh shit, I wasn't even thinking. I'm so sorry.\"\n\nHe starts to move up the ladder to get at the bonds holding my wrists, but his still mostly hard cock pokes my taint.\n\n\"Shit, sorry,\" he says, reaching down and somehow managing to tuck it back in his pants.\n\n\"Do me another favor?\"\n\n\"Anything.\"\n\n\"Stop saying you're sorry. You haven't done anything wrong and I'm still enjoying myself.\"\n\nHe grins. \"Gotcha.\" Hell, even if he had done wrong, that smile would have made me forgive him anything.\n\nJacob unties my hands, then my chest, hips, knees and feet, but my first attempt to move my legs is a non-starter. \"They're asleep,\" I lament. I should have expected this, what with being in a squatting position for who knows how long.\n\nHe understands instantly and wraps an arm around me, just under my butt. \"Hold on to me,\" he says.\n\nI carefully let go of the rung and wrap my arms around his neck. Jacob uses his other hand to gently pull my feet loose, and my deadened legs flop free. I try to wrap them around him, but settle for just holding them clear of the side rails.\n\nWith near-infinite care, Jacob carries me down the ladder, then across the open space to my bedroom. With his free hand, he pulls down the covers from my neatly made bed. (I grew up in a very traditional home where beds were made within a minute of rising. It's still a habit.) He lays me down, then pulls the sheet up over me to the chin. Such chivalry!\n\nI'm pleased, though, that he doesn't ask permission before beginning to massage life back into my legs, working through the butter-smooth sheet. I stifle a groan as the intense pins-and-needles sensations announce the return of feeling. His strong, sure hands are doing amazing work, though, easing the transition greatly.",
        "\"So tell me,\" I say through almost gritted teeth as he massages my upper thigh, \"why were you planning to play-rape this Claire Daniels?\"\n\nHe sighs. \"Honestly?\"\n\n\"Yeah honestly. I think you do owe me that, at least.\"\n\n\"Claire, I haven't been with a woman since my Jamie passed away last year.\"\n\n\"Oh Jacob, I'm so sorry.\" Despite my own experience, when he'd said he was now on his own, I'd just assumed a divorce.\n\nHe nods, acknowledging my condolences. \"When the last of the cancer treatments failed, she made me promise that I would find someone new. Somehow, though, I've been finding excuses not to even look.\"\n\nI nod. \"It was the same with Andrew and me. After a friend's funeral a few years ago, we vowed to each other that if one of us died, the other would give them six months of mourning, max, but then find someone who could make them happy. I just never did. Dating is so hard, especially after not having done it in so long.\"\n\n\"Yeah,\" he says, nodding. \"Dating is hard. I don't know how long I would have gone, but a few days ago Brad reminded me that Jamie wouldn't have wanted me to be celibate for so long. He felt that having me roleplay with his ex would be a fun and commitment-free way to get me started. He'd already talked to her, and she'd been quite enthusiastic about the idea, as long as I'd do her favorite thing by pretending to force myself on her.\"\n\nI'd be happy to let Jacob massage me all day, but honesty forbids. \"I think you've got my legs back to normal,\" I say.\n\nHe nods and almost completely hides his own disappointment, but then backs off and sits down in the chair before continuing.\n\n\"I was a little leery about even pretending to do something like that, but Brad swore to me that she really wanted it, and the rougher the better. I finally decided that, being so out of practice, a quick encounter with zero expectations of romance or relationship might be a good way to dip my toes back into the water.\"\n\nThen Jacob softens his voice a little and looks me right in the eye. \"Brad also said that his Claire was an amazingly beautiful woman. When I saw you, though, I figured that he'd utterly failed to convey just how beautiful she was.\"\n\nI actually blush at that. \"Thank you,\" I murmur.\n\n\"What threw me off,\" he continues, \"was that she was supposed to meet me at the door with no clothes on, allegedly because Brad had tricked her by saying that he was the one coming over. I was supposed to grab her, then bind her hand and foot to the bedposts and have my way with her in any and all creative ways possible.\"\n\n\"So that's why you conveniently had lengths of rope in your pocket?\"\n\n\"Exactly, but when you came to the door fully dressed, the plan went out the window. I figured you'd chickened out, so to save you any embarrassment I decided to treat it as an actual service call. Brad hadn't told me that his ex had a real electrical job that needed to be done, so the request for the new outlet kind of threw me as well. Fortunately, I'd brought the tools I needed.\"\n\n\"I did notice that you were confused at first,\" I say, \"but I thought you were ridiculously handsome. When I tripped and ended up in your arms, the feel of your body against mine turned me on big time. I hadn't been held by a man in so long. That's why I was out in the great room with only a smile on. I was fantasizing about you catching me that way. Honestly, though, I didn't mean for that to actually happen, but you came back early.\"\n\nHe nods. \"When I saw that you had finally gotten naked like we'd planned, I figured it was game-on after all.\"\n\n\"So why didn't you grab me right then?\"\n\n\"Well, you didn't scream and run like you were supposed to. Also, I really did need the coffee. I wasn't kidding about it being the best I've ever had, by the way.\"\n\nI laugh. \"Glad you liked it. I enjoyed explaining my methods to you.\"\n\n\"Yeah, that was a fun little interlude. It was nice getting to know you a bit before raping you.\"\n\nI snort in a most unladylike fashion. \"You were all business once you got around to that part though.\n\n\"Yeah, but even though I thought you were in on it, I had to work really hard to stay in character. I've never treated a woman roughly before.\"\n\n\"Then how did you know how to do all that stuff?\"\n\nHe looks a little embarrassed. \"I had a few days before it was going to happen, so I did a deep dive into some rather, uh, unsavory web sites. A lot of it was just too gross, but I picked up a few ideas. I figured the rest would have to be in my attitude. Was I convincing?\"\n\nI smile at him. \"You'd have been one hell of an actor. You had me guessing right up until you made that silly comment about covering your willie.\"\n\nHe chuckles. \"Pretty lame, huh? The safe word was 'alfalfa' by the way. Brad bet me fifty bucks that I wouldn't be able to get his ex to say it. I don't think I would have been nearly so rough with you if I hadn't been trying so hard to win that wager. It's also why I got you to climb that ladder instead of dragging you to your bed. I thought the discomfort and added sense of danger would be enough to get you to tap out.\"\n\n\"Oh, it definitely added another element of excitement. And you probably would have stopped if you'd tried to tie me to the bed.\"\n\n\"Huh? Why?\"\n\n\"No bedposts.\"\n\nHe looks and his eyebrows go up. \"Hah, I didn't notice that. I suppose it would have been another hint that something wasn't quite right.\"\n\n\"Indeed.\"\n\nThen his brow furls. \"If you had known the safe word, would you have said it?\"\n\nI don't even have to think about it. \"No, but I'll keep 'alfalfa' in my back pocket if you ever pretend to molest me again,\" I say with a giggle. \"So did you enjoy doing the whole dominance thing?\"\n\nHe's silent for a long moment, but then he nods. \"You know, I really didn't think I'd be able to pull it off, but your beauty and amazing reactions to everything I did really got me into it. To be completely honest, I don't recall having so much fun during sex since... well... ever.\"\n\n\"So you'd do it again?\"\n\nHe looks almost guilty, but I can see that he's trying to be completely honest. \"Yeah, but I'd probably discuss it with my partner ahead of time.\"\n\nI smile. \"Good idea. So is Claire Daniels still going to get her visit today?\" I find that the thought actually stirs up a little jealousy.\n\n\"Certainly not from me,\" he says, but then his eyes get big and he pulls out his phone again. \"Oh boy,\" he murmurs after a moment.\n\n\"What?\"\n\n\"Before the work orders got switched, you were supposed to get a two-man team, but Jon and Jim were dispatched to Brad's ex's house instead. They're identical twins, and they've been known to have a good time, if you know what I mean.\"\n\nI do my best to stifle a giggle. \"If she showed up to the door in the nude, I suppose things might have gotten a little wild.\"\n\n\"Knowing what I do about the three of them, what happened here this morning was probably tame in comparison. The twins are capable of just about anything.\"\n\n\"Speaking of capable, Jacob, do you normally last that long? I've never even heard of the kind of stamina you showed me.\"\n\nHe shakes his head. \"I had already come once, as you, uh, may have been aware of,\" (he blushes a little) \"and I was using one of those sensation-deadening condoms. After a couple of minutes, I could hardly even feel my penis. I'm kind of amazed that I ever came at all.\"\n\n\"So those things actually work, huh?\"\n\n\"I guess so. I haven't used a condom since I was a teenager. I used up half the box relearning how to roll them on smoothly.\"\n\nI laugh. \"Well it was a first for me. I was already on the pill when I got married.\" I sigh, thinking again of how much I miss Andrew. \"What was it like, Jacob, making love with your wife?\" It's a very intimate question, but we've been very intimate.\n\n\"It was good. I did have to be careful with her, due to my size, but we worked around that pretty well. The emotional and spiritual component was the best part, though. Our sex was never about goals, it was more about being as close to each other as we could possibly get. We were always best together when we were making love.\"\n\nI find myself nodding in agreement. \"It was like that with Andrew and me. We could talk more freely with each other during sex than at any other time. We made sure to do it often, even when everything in our lives was crazy. Or maybe especially then.\" I sigh. \"I miss him terribly.\"\n\nThen I see the expression come over Jacob's face. I recognize it because I'm feeling it too. He puts those feelings into words for us.\n\n\"Claire, it's good to recall cherished memories, but not at the expense of what's right in front of us. I want to make love with you. This time for real.\"\n\nMy mind is racing. Part of me feels guilty for what I've already done to my memory of Andrew. Still, the sex I had with Jacob this morning was a strictly physical act. Making love with him now would be much more than that. Am I ready for this so soon?\n\nBut then a peace comes over me. It's almost as if Andrew is speaking to me, reminding me that I'm not supposed to spend the rest of my life mourning him. Making me recall that he'd actually told me that he'd want me to find a new life for myself. Jacob may or may not be the man I'm supposed to be with forever, but he's the man I should be with right now.\n\nI kick the sheet down around my ankles, then beckon him to me. He stands up from the chair and reaches into his pocket.\n\n\"You don't need another one of those as far as I'm concerned, Jacob,\" I say softly. \"I'm still on the pill. I'm clean, and I trust that you are too.\"\n\nHe nods, then quickly strips out of his clothes, laying them neatly across the arms of the chair, next to mine. His magnificent cock is standing tall and proud. Again, I marvel at its size and beauty. The man is glorious from head to foot. Then he's with me on the bed and we're kissing, softly and slowly.\n\nWe're in no rush, but there's no reason to delay either. He moves us so that we're on our sides, face-to-face. I put a foot up on his hip, opening myself to him. His entry is exquisitely gentle this time and it doesn't hurt. It's an almost inexplicable mixture of new thrill and familiar comfort. Once he's gloriously and fully within me, he stays right where he is, only moving enough to keep himself hard and me lubricated.\n\nThe actual sex, though toe-curlingly good, is almost secondary. We're both basking in being close to another human being again. We talk, we laugh, we touch, we kiss, and we cry. (Okay, I cry, but I'd swear that he gets almost misty-eyed at one point.) Over the next hour, we share our stories of love and loss, and our hopes for the future.\n\nI learn that he and Jamie had gotten married during the summer before their last year of college, but that she'd been diagnosed with cancer just a few months later. She had been in and out of remission for almost nine years before she'd finally succumbed. They'd both desperately wanted children, but the disease had made that impossible.\n\nI tell Jacob about how Andrew and I had fallen in love back in high school. We'd thrown caution to the wind and eloped a month before graduation, much to the consternation of our parents. They'd come around, though, seeing how committed we were to each other. The four of them had helped set us up in a place of our own, then supported us through college.\n\nI talk about how Andrew had wanted to start our family as soon as he got his first good job as an architect, but how I'd wanted to build a career first and prove that I was more than just a womb. The years had gone by as we'd both quickly advanced in our professions.\n\nMaybe his dying hadn't been my fault, but if I had given in and had his babies, he wouldn't have been on his Ducati that morning. I'd lost out on raising our children and growing old with him, and for what? Pushing people at the office harder and harder to make better numbers on a quarterly statement?\n\nJacob holds me as I cry, not saying anything, but offering great comfort nonetheless. Finally, and now feeling much better, I slip off him, gently rolling him onto his back, then throw a leg over his chest, presenting my pussy to him and taking his hard, slippery cock into my mouth.\n\nMy lover quickly shows me that as good as he is at driving me crazy by being rough on my most sensitive tissues, he's way better when he's being gentle. His lips and tongue are knowing, and my pussy seems to melt in his mouth.\n\nI'm doing my best to give him the same treatment. I encircle him with my lips, getting him good and wet, then bathe his glans with my tongue as he moans. In turn, his vocalizations stimulate my privates in a very nice way. In thanks, I slide him into my throat.\n\nThere's no urgency this time, but as I bob my head up and down a little on the very base of his prodigious manhood, I hope that I'm giving as good as I'm getting. Jacob is working almost literal magic now, his tongue penetrating me and a wetted thumb massaging my sensitive anus.\n\nI groan, and the vibrations on his cock make him flinch at the sensation. He involuntarily thrusts upward a little.\n\n\"Oh shit, I'm sorry, Claire.\"\n\nIn reply, I slip my fingers under his firm buttocks and guide him to continue to thrust. He complies enthusiastically.\n\nIn the past, I enjoyed deepthroat because of how much pleasure my partner took from it, not from the actual physical sensation. But this time I find that Jacob's long cock sliding back and forth inside me is delightful in and of itself. I bob my head to meet his thrusts.\n\nAs if I wasn't deriving enough pleasure already, Jacob hasn't slowed in his ministrations. He's driving me absolutely crazy by licking and sucking my clit while simultaneously fucking me with two fingers and continuing to massage my cinnamon ring with his thumb. The man is quite the multitasker. Three deep dives onto his cock later, I climax yet again. Jesus, how many is that today?\n\nAs I stiffen, I convulsively dive to the base of his straining member and stay there, not able to breathe, but not caring. His tongue slows to a near stop, his warm mouth comforting me as I experience the Little Death. It's all so incredibly good. If there's a heaven on Earth, this is it.\n\nAs I come down from my celestial experience, Jacob gently, but firmly takes over, reaching down and sliding my head up and off of him. I breathe again. He guides me onto my back beside him, then moves over me and enters in the Missionary position, fully sheathing himself in one long, easy stroke.\n\nNow he begins to move with a purpose. After an hour of intercourse and deepthroat (albeit very gentle versions of each) I fully (and admittedly sadly) expect him to be near the limits of his endurance. Instead, he proves to me that his stamina is more than just a fancy rubber. We move to the ancient rhythm, our bodies as one. Our tongues duel, deep in each other's mouths. In its own way, this is just as intense as our ladder-top experience.\n\nFinally, I can sense that he's close. \"Complete yourself in me,\" I murmur, before he can ask the question. As I feel him tense, then splash his precious seed, I come one last time. My ecstasy is heightened by the emotional bond we've already formed.\n\nIs it the best sex I've ever had? I don't want to think of it in those terms, but it's certainly the sex I've needed. I think it is for him too.\n\nIn the afterglow, Jacob kisses me again, staying inside me for as long as he can before softening and being expelled. He lies down on his back beside me, his hand in mine, as we come down from our mountaintop experience. Our conversation picks up again, right where it left off. Our thirst to know more about each other is seemingly unquenchable.\n\nFinally, though, and with obvious reluctance, he gently pulls away and gets to his feet. \"I'd best finish the job on that outlet,\" he says. He bends down to kiss me again.\n\n\"You have to do that now?\" I almost whine.\n\n\"Well, there's this thing I do for a living. As much as I'd love to stay with you all afternoon, I'll be expected back soon.\"\n\nI nod. \"I took the morning off, but I need to get to work myself.\"\n\nHe starts to turn, but I put a hand on his firm ass cheek and draw him to the side of the bed. I quickly and efficiently clean him again while he gently strokes my hair. \"There,\" I say at last, \"you're ready to get back to work.\"\n\nActually, my ministrations appear to have him ready for something more than electrical stuff, but we both know we're getting tight on time.\n\nJacob gives me a wink and a mischievous grin as he heads out the bedroom door, leaving his clothes on the chair with mine. I'm pleased to see that he's a clothing-optional type too. If I weren't so incredibly satiated, I know what I'd do with the image of him installing an outlet in my great room while buck naked and sporting a huge stiffy. Maybe later. For now I pick up my phone and call the boss.\n\n\"It's eleven fifty-three,\" Roger growls. \"You're cutting it close. What've you got for me?\"\n\n\"How about this. Don't be silly, cover your Willie.\"\n\nThere's a bit of a pause, then the man actually chuckles. \"As a slogan for Spartan Condoms? You know, I think there are some possibilities there. I'll relay it to Howard and put that bonus on your next check.\"\n\n\"Thanks boss. You're the best.\"\n\n\"Suck-up.\" With that, he clicks off. Typical Roger.\n\nI know where that thousand dollars is going. The slogan and the idea for this adventure were Brad's, after all.\n\nTen minutes later, Jacob is done with the job and joins me in the shower. We gently wash each other, not being overtly sexual, but exploring each other's wet and slippery bodies with a lot of physical affection. After we dry each other, (an unexpectedly intimate act) he dresses while I make the bed again. I've just finished when the doorbell rings.\n\nJesus, I have to answer the door in my robe again? I look through the peephole with dismay.\n\nThis time I engage the chain before opening the door a crack.\n\n\"What do you want now, Wayne?\"\n\n\"Look,\" he says, licking his lips, \"I could be talked into not reporting you to the HOA. Why don't you let me in so we can, uh, discuss it?\"\n\nOh, hell no. Not after the way he looked at me earlier and especially with the obviously lustful look on his face right now. I'm congratulating myself on my foresight in fastening the chain.\n\nI shake my head. \"Why don't you just get on your phone and get it over with. I can't bring myself to care anymore. I just need you out of my face.\"\n\n\"Oh, come on, Claire. We're both single and it would be fun. This could be a win-win for you.\"\n\n\"Wayne,\" I say, quietly but forcefully, \"get off my property right now!\"\n\n\"Not happening, Claire,\" he growls, now setting aside any pretense of trying to talk me into it. \"We're gonna have some fun.\" He throws his shoulder against the door and the chain's anchor rips right out of the doorframe.\n\nWayne weighs at least triple what I do, so there's no way for me to stop him from coming in. I turn to run, but his hand grips the collar of my bathrobe. Before I can even get my arms up to clutch it to me, he yanks hard.\n\nThe simple twist I'd given the belt unravels without protest, but my arms are wrenched behind me painfully as he jerks the garment off me as easily as I might pluck a Kleenex from the box. Unfortunately, he's also yanked me clean off my feet. For a moment I'm sure I'm going to land on the back of my head, but my gymnastics training kicks in and I manage to twist in the air, getting an arm down and landing on my side instead. My head never touches the floor, but I'm still momentarily stunned.",
        "I look up just as Wayne absently tosses the robe behind him, out onto the porch. His hands go to the tie of his sweatpants and he takes a step toward me, a lecherous grin on his face, but then there's a flash of movement from my peripheral vision and Wayne suddenly doubles over with a whoosh. He falls hard onto his side, silently writhing on the Italian marble, about three feet away.\n\nThen Jacob is with me. He gently gets his arms under my shoulders and knees, then scoops me up off the floor. I'm still a bit shocked and disoriented from the rapid-fire pace of events over the last five seconds, so I'm paying little actual attention as he settles me into a recliner. He grabs the blanket from the open shelf under the side table and spreads it out, covering me from neck to ankles.\n\n\"Are you okay?\" he asks, dropping to a knee beside me.\n\n\"Uh, yeah,\" I say. \"I don't think he did me any permanent damage. Thanks to you.\" I don't even want to imagine what would have happened if not for Jacob's intervention.\n\n\"You're sure?\"\n\nI move my arms around, verifying that my shoulders are basically okay. I bring my left knee up to make sure I haven't done anything to my hip. No, it doesn't feel like there's anything wrong there but the sting of having landed on it. \"Yeah, Jacob. I'm pretty sure I'm fine.\"\n\n\"Good. Stay here for a minute.\" He gets back up and walks over to Wayne, who's still on the floor, gasping for breath. Jacob nudges him with the toe of his work boot, none too gently.\n\n\"Come on, Wayne, get up,\" he says. \"You're not hurt. I just knocked the wind out of you.\" Wayne doesn't even attempt it, so Jacob gives him some more encouragement, a little more insistent this time. Wayne groans and staggers to his feet, mostly. He's still bent over, holding his hands to his chest.\n\nJacob looks to me. \"Ms. Davis,\" he asks, \"would you like me to call the police? I'd be happy to provide my eyewitness account of events to them.\" His formality says he's not going to give Wayne reason to believe there's anything personal between us. I'm with him there. It's none of Wayne's damn business.\n\nUnfortunately, with as much as I'd like to see the creep in cuffs, and despite Jacob's offer, I know it would be difficult getting a conviction. And anything less than a years-long sentence (highly unlikely) would only make things between us worse. One thing's for certain, though. I'm never going to answer the door in my bathrobe again unless my visitor is someone I fully trust.\n\nI shake my head. \"I really don't want to get the law involved. I think this was a one-time loss of control on Wayne's part. As obnoxious as he is, he's never tried anything like this with me before.\"\n\nJacob looks at Wayne, who's now able to stand up almost straight. \"Is this true?\" The cold hard look on Jacob's face makes Wayne take a step backward. He bangs up hard against the doorjamb, clunking his head audibly. Jacob steps up close, his face just inches from the bigger man's.\n\nWayne looks around wildly, desperate to get away from Jacob. \"Yeah, that's it,\" he says hurriedly. \"She looked so hot in that robe that I kind of just snapped. I swear to God it's never gonna happen again.\"\n\n\"I should think not,\" Jacob says, \"especially since you're never going to set foot on Ms. Davis' property again. Are we clear?\"\n\n\"You got it,\" Wayne says, nodding vigorously. From the look on his face, I think he'd rather pet a rattlesnake than get face-to-face with me again.\n\nJacob turns his attention back to me. \"Ms. Davis, I find the way this man has treated you to be personally offensive. I'd appreciate it if you would let me know if you even suspect that he's done anything improper from here on in.\"\n\nI nod. \"Thank you. I certainly will.\"\n\nJacob looks back at Wayne. \"You're also never going to report her to the HOA again. Hell, if she throws eggs at your house, you're going to thank her politely and offer to pay for the next dozen. Are you catching my drift here?\"\n\n\"Absolutely,\" Wayne says, his sincerity obvious. But then he can't quite contain his curiosity. \"Just who are you?\"\n\n\"I'm the electrician Ms. Davis hired,\" Jacob says, indicating the truck parked at the other side of the cul-de-sac where Wayne had probably never noticed it. \"I'm also the man who will be very irritated if he has to come back here on your account.\"\n\nWayne shakes his head. \"Not gonna be a problem.\"\n\n\"You make damn sure of that. Now leave.\"\n\nWayne scurries away, but then stops and picks up my bathrobe. Timidly, he walks back and hands it to Jacob. \"Thank you,\" Jacob murmurs.\n\n\"Don't mention it,\" Wayne says, then leaves for good. Jacob closes the door behind him.\n\nI shuck the blanket and race to him, holding him tight. \"Oh my God, Jacob, you were amazing.\"\n\nHe shakes his head. \"I know his type. Wayne's nothing but a weak bully. I'd judge that he'll leave you alone from now on, but I'm serious about you telling me if he does anything improper, even little stuff in revenge. I won't have him messing with you.\"\n\nI tip my face up and kiss him. \"Thank you. I will.\"\n\n\"Are you sure you're okay?\"\n\nI take a step back, then roll my shoulders in big circles a few times to make sure. This evidently does things to my breasts that Jacob appreciates.\n\n\"Yeah, I'm fine,\" I report. I give Jacob one last roll. I never knew I was such a tease. Not that it's necessarily a tease. If Jacob wants to go another round right now, being late for work wouldn't kill me.\n\n\"Alas, I've got to get to work,\" he says regretfully, obviously catching my offer. \"Brad's gonna think I ran off with his ex.\"\n\nI nod regretfully. \"Yeah, I've delayed too long myself.\" I go to him, but turn and nestle my back against his chest, twisting and tipping my face up to kiss him. His hands go to my breasts, gently caressing them. I almost think I've got him, but then he twists slightly and spanks my butt cheek. I yelp, but Jesus that felt good. And I'm sure Jacob knows it.\n\n\"Naughty girl,\" he chuckles. \"Don't you go thinking I can't see what you're trying to do. Now go get ready for work while I finish up.\"\n\nI giggle, then give him a quick peck before heading back to the bedroom.\n\nJacob carries the ladder back to his truck, then gathers his tools while I do my hair and makeup. When he's got it all at the door, I'm still not dressed, but I go to meet him there. He wraps me in his arms and I cling to him, loving the feel of his uniform shirt against my bare skin.\n\nSo where do we go from here?\n\nMy morning with Jacob has woken me from a long, unhealthy personal and emotional slumber. Thanks to him, I'm ready to keep my promise to Andrew and move on. I now realize that I want two things in this new life, but I don't know if they can go together.\n\nOn one hand, I want Jacob. I know that relationships are tricky and capricious things, but even with Andrew I never felt such an overwhelming sense of rightness. I want to give this a go.\n\nBut then there's the other hand.\n\nSince the horrific day I lost Andrew, I've had lots of time to look at my life. Thus far, I've focused my best efforts on my career, and I've been extremely successful. But now, when I spend my evenings working late, then eating Chinese takeout on the couch while watching Netflix, the years I spent in pursuit of professional success feel hollow.\n\nSo now that I'm awake again, I'm going to pursue my new goal; I want a husband and a house full of kids. I now realize that when I'm old, I want my family near me, because Roger and the gang from work surely won't be. But if I'm going to do this, I'm going to give it the same single-minded focus that took me up the corporate ladder so quickly. That means being a full-time wife and mother.\n\nBut that's where the problem now lies.\n\nAs wonderful as Jacob is, an electrician doesn't make a whole lot of money, at least not in comparison with what I make or what Andrew brought in from his practice. It may sound crass, but I'm almost thirty and my biological clock is ticking, so I can't devote my limited fertile years dating men I wouldn't marry.\n\nSo I need to decide right now if I'm okay with going back to the standard of living Andrew and I worked so hard to rise above. It would mean Folgers and Hamburger Helper, second-hand clothes and cars, vacations to the lake instead of Europe, and a modest tract home instead of this brilliant architectural masterpiece.\n\nIn short, do I want Jacob so badly that I'd be willing to live that life? There's really only one possible answer.\n\nI reluctantly slip out of our embrace. He's perceptive, and I think he sees that I'm on the cusp of a big decision. He waits patiently.\n\n\"Jacob,\" I say, \"if you'd like, you can call and ask me out on a real date. A date where we'd go do something fun, laugh a lot, and enjoy each other's company. After that, you'd kiss me goodnight at the door. I think it would be a nice way for the both of us to get back into the swing of dating. And if it goes really well, you never know what might happen.\"\n\n\"That sounds nice,\" he says, rather neutrally. \"I may just do that.\"\n\nWow. After what we've shared over the last few hours, I'm rather hurt by his underwhelming response. What's going on here? Was I just a one-morning stand? No, I think I know better than that. Perhaps, like I did, he has some kind of issue that he's got to work out before starting an actual relationship.\n\nSo what do I do? Wait until he resolves the issue, hopefully in my favor? How long will that take? If I don't hear from him, should I give him a call to see if it's something I can help him work out? I don't even have his phone number, but it would seem kind of desperate to ask for it now. I suppose I could call his employer and ask for him, but...\n\n\"Jacob,\" I say, \"I don't even know your last name.\"\n\nHe smiles. \"It's Murphy.\"\n\n\"Wait. You're Jacob Murphy?\"\n\nMurphy Electric is the third largest electrical contractor in the state, with annual revenues of over ninety-five million dollars. I know this because I'm on the committee to select a contractor to wire our new headquarters building.\n\nHe nods. \"My dad founded the company, but he left it to me when he passed away. I was just graduating from college and it felt like a lot to take on, but I'd grown up around the industry and had some ideas I wanted to try. It was pretty much a mom and pop operation, but we've grown a bit since then.\"\n\nI barely manage to keep my jaw from dropping. Murphy Electric doesn't have stockholders. It's 100% family owned. So the guy who just stuck an outlet in my wall (and a very nice cock in my pussy) is a millionaire many times over.\n\nJacob can obviously see that I'm speechless, but he continues earnestly. \"This morning was very special, Claire. I'll never forget it. Thank you.\"\n\nHe kisses me one last time, then picks up his toolbox and walks out to his truck. I barely recover enough to return his wave as he drives away. I'm still standing in the open doorway, but my mind is so consumed with this revelation that my nudity doesn't even rise to the level of consciousness. I close and lock the door when Jacob goes around the corner and out of sight.\n\nMy heart is heavy as I walk back to my bedroom. This little revelation has changed everything. Jacob is handsome, smart, honorable and tough, but he's also ludicrously wealthy. That explains his non-committal attitude about seeing me again. Men like him play the field, or marry twenty-year-old models as trophy wives. He was never going to want some kind of ongoing relationship with me, a woman ten years older than that, and with the baggage of a previous marriage.\n\nIt feels like my world has ended, but then, as always, I get to work on pulling myself back together. I look in the mirror. Other than a few red marks that probably aren't even going to turn into bruises, I look just the same as I did this morning.\n\n\"Claire,\" I lecture my reflection, \"you've got your health, you've got a great career, you live in a wonderful home and you just had incredible sex with a very handsome man. You haven't lost anything this morning. Hell, you probably even got that outlet installed for free. Now quit feeling sorry for yourself.\" My reflection nods, but I'm not sure I've gotten through to her.\n\nBroken heart or not, life must go on. I really need to get to work. I turn to finally get dressed.\n\nNaturally, my phone rings before I've even gotten my panties on. \"Hello?\"\n\n\"Hi, this is Jacob from Murphy Electric. May I speak to Claire Davis please?\"\n\nAt the sound of his voice, my heart is suddenly soaring again, but what's with the formality? \"Speaking. Hello Jacob.\" I find myself being somewhat formal in return. Are we play acting again?\n\n\"Hi Claire. You know, it was a real pleasure making your acquaintance during my service call this morning.\"\n\n\"It was my pleasure too, Jacob.\"\n\n\"Well, Claire, I had this wild idea, and I hope you don't feel that I'm being too forward, but I'd like to take you out sometime.\"\n\nMy gasp of surprised pleasure is surely audible over the phone, and that part's not acting. \"Why Jacob, I'd love that. What night are you thinking of?\"\n\n\"Would tonight be too soon?\"\n\nI pause for a long moment, strictly for effect. \"Hmm, I suppose that would be fine. What should I wear?\"\n\n\"Well, I'd have to say that you looked rather fetching in what you were wearing when you served up the coffee, and I hope to see you dressed like that again sometime, but I don't know if it would be appropriate for the activity I have in mind. Do you like ballroom dancing?\"\n\nHe knows I do. It was one of the multitude of things we found we have in common during our conversation in bed. \"Why yes, Jacob. As a matter of fact I do like ballroom dancing.\"\n\n\"Great. Dress for that. We'll do dinner first. Pick you up at six?\"\n\n\"That sounds wonderful.\"\n\n\"Great,\" Jacob says. \"I'll see you tonight.\"\n\n\"Thank you, Jacob.\"\n\n\"No, Claire. Thank you.\" He clicks off.\n\nI whoop in excitement, then jump up and down on the bed like a girl who's just heard she's getting a pony, messing up the perfect creases. It's not just that he's asked me out that's got me so thrilled, it's that I now understand why he did it this way. Jacob, like me, is thinking long term.\n\nIt's like this; if things work out for us, we'll have to tell our kids someday about how we met. They won't need to know about the rough and intense nature of their father's service call, so making a clean break and creating an alternate beginning like this is truly inspired, if for no other reason than it will help us keep our stories straight.\n\nBut it's certainly not just about hypothetical rug rats. It would be nice, just for us, to start off our dating lives again on a more formal and civilized foot.\n\nWell, outwardly formal maybe. If things tonight indeed go really well (and I have a sneaking feeling that they will), after he kisses me at the door, I'm going to drag him inside and let him have his way with me some more. Maybe he'll take me right there on the entry's tile floor, or perhaps on the kitchen island. Then, maybe we'll talk and make some more love until the early morning hours before collapsing in each other's arms and sleeping 'til noon. After all, tomorrow is Saturday.\n\nAnd speaking of hypothetical rug rats, I might want to hang on to this house just in case. I'll be calling my realtor as soon as I get to work.\n\nMaybe this dating thing really isn't so hard after all.\n\nI hope you've enjoyed this story. I'd love for you to give it a rating, and even better, leave a comment.\n\nThanks!\n\nKara"
    ],
    "authorname": "Kara_Song",
    "tags": [
        "ducati",
        "bdsm",
        "bound",
        "coffee",
        "electrician",
        "ladder",
        "non-consent",
        "reluctance",
        "restraint",
        "rope"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/jacobs-ladder-2"
}