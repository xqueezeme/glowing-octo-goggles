{
    "title": "Audrey's Awakening Pt. 04",
    "pages": [
        "I sat on the floor of the foyer with Audrey cradled in my arms as she cried. My heart went out to her. She had inadvertently walked in on her husband with another woman.\n\nHoly shit, I thought, I had difficulty imagining Ken with another woman. Mild-mannered, conservative Ken? The right-wing, religious zealot who took pointed exception to his daughter marrying a musician because he knew musicians to be of low character and loose morals. THAT Ken? It seemed inconceivable.\n\nAudrey drew up her knees, curling into a fetal position, completely unmindful of her skirt as it rose well beyond the middle of her thighs. She wore pantyhose and, even in the dim light of the foyer, I could see the nylon glinting sleekly from the living room lamp.\n\nI held her silently, bending occasionally to kiss her forehead as I gently stroked the length of her exposed leg from her ankle to her knee and thrilling to the sensation of her sleek hosiery.\n\nFinally, her crying quieted and I felt the tenseness leave her body as she sagged against me. She raised her head and, lowering her knees, opened her purse which was beside her on the floor. She removed a handful of tissues and began to wipe the tears from her cheeks, blotting her eyes and wiping away the dark smudges of her eyeliner from her cheeks.\n\n\"I'm so glad you're here, Jessie,\" she said, her voice shaking with emotion as she leaned forward to kiss my cheek. \"I honestly don't know what I would have done if I was alone.\"\n\n\"I'm here for you, Mom. Do you want to talk about it? Can you tell me what happened?\"\n\nAudrey nodded and blew her nose delicately into the tissues, balling them up in her hand as she retrieved fresh tissues from her purse, \"I think I'd like to get a drink first,\" she said as she began to stand up.\n\nI hurriedly rose and helped her to her feet, and she took a moment to modestly lower her skirt as we made our way to the kitchen. She took a bottle of Jack Daniels from the liquor cabinet and scooped up two glasses. We sat together at the kitchen table as she carelessly splashed the bourbon into our glasses. She lifted her glass and took a very large swallow, gasping and coughing as the whiskey burned her throat.\n\n\"I'll bet that you were pretty surprised to see me back home so soon,\" she said, looking up into my eyes and smiling half-heartedly.\n\nI smiled, \"I think surprised is pretty much the operative word, Mom,\" I responded softly.\n\nAudrey nodded and sipped her whiskey once more. \"Well,\" she began, with another half-hearted laugh. \"I think surprise is going to be the word of the night. Ken looked pretty damn surprised to suddenly see me standing in his hotel room. And the woman with him looked rather surprised as well. Suffice it to say, I was probably even more surprised than they were.\"\n\nI nodded, \"But, surely there must have been some kind of a reasonable explanation. What did Ken say?\"\n\nAudrey shook her head and pressed her lips together as her eyes welled with tears once more, \"He didn't say anything,\" she said, her voice filled with emotion. \"There was no possible way to explain it away. They were both naked on the bed and Ken was lying between her legs.\" She paused, to wipe away a renewed welling in her eyes. \"It certainly didn't take a rocket scientist to understand that Ken was fucking her. And he was still fucking her as I backed out of the room and closed the door.\"\n\nI swallowed, it still surprised me to hear Audrey using the word 'fuck', but I certainly had a better understanding of her anger and outrage. It gave me pause to imagine how if Ken had come home early this afternoon, to surprise HER...he might very well have found her coupled with me on the living room floor. I doubted very seriously that Ken would have cared very much for her explanation as to the experimental nature of our actions either.\n\nShe took another swallow of bourbon, \"There was even a box of condoms on the bedside table,\" she continued, wiping her nose with the tissues. \"I suppose I should at least be grateful that he was taking precautions THAT way.\"\n\nI swallowed a large gulp of whiskey and shook my head, finding the whole thing difficult to believe.\n\nShe blew her nose softly and I replaced her balled tissues with fresh ones. \"Thanks,\" she said softly as she took the tissues from my hand.\n\n\"So...what's going to happen now?\" I asked softly. \"Have you given any thought to that?\"\n\nAudrey shrugged and laughed softly, \"That's just about all I HAVE been thinking about all the way home,\" she said. \"He is supposed to be home on Monday. At least I assume he'll still return home. I'm not going to make any major decisions until I've at least talked to him, but I sure don't feel very good about our life together right now.\"\n\n\"That's completely understandable,\" I replied, reaching out to place my hand over hers.\n\nShe laughed softly and shook her head, \"It's funny, you know,\" she said. \"I mean, I had told him that I thought we needed to work a little more on our sex life, maybe he was just practicing.\"\n\nI laughed with her, happy to see her normal cheerful composure begin to reassert itself.\n\n\"Oh well,\" she continued with another shrug. \"I suppose I can definitely write off this year's birthday celebration.\"\n\nDamn, I thought, I had completely forgotten all about her birthday. She had been so looking forward to having a fun time with Ken in Las Vegas, combining her birthday with a hoped-for second honeymoon. My mind began to race, trying to form some kind of a plan of action. I couldn't let her spend her birthday with this huge mess weighing so heavily on her mind.\n\n\"Now, hang on a second,\" I said. \"Let's not jump to conclusions.\"\n\n\"What?\" She asked, looking at me skeptically, \"What are you saying?\"\n\n\"I'm saying,\" I continued. \"That no matter what, your birthday is a special occasion. I know it's not going to be quite the same as you had imagined, but you're not alone, I'm right here with you and, if I do say so myself, I can bake a pretty mean birthday cake.\"\n\nShe looked at me curiously, then smiled and shook her head. \"God, you are such a sweet man,\" she said, reaching over to pat my hand affectionately, \"You really are. And I'm EVER so glad that you're here right now. I really appreciate what you're trying to do, but I really don't think I'm going to feel much feel like celebrating, if you know what I mean.\"\n\n\"Of course,\" I said, smiling sadly. \"Look, I know you're really hurting right now, but you can't just let yourself drown in all those bad feelings. It's unhealthy.\"\n\nAudrey tried to smile and ended up only grimacing.\n\n\"At least let me take you out to dinner tomorrow.\" I offered.\n\nShe shifted her eyes up to mine and this time her smile was more genuine, \"All right,\" she said, wiping her eyes once more. \"That actually sounds rather appealing to me right now. I think I can handle going out to dinner.\"\n\n\"Good,\" I smiled. \"It's a date.\"\n\nAudrey stretched and rubbed her face in her hands, looking very tired. \"I'm sorry, but right now I think I'd just like to go to bed.\"\n\n\"Absolutely.\" I returned, rising from my chair as she stood, \"You just call out if you need anything.\"\n\nShe smiled and stroked my cheek affectionately as she passed. \"Thank you, Jessie,\" she said. \"I know I already said it, but I'm REALLY glad you're here.\"\n\nI watched Audrey as she left the kitchen and, even though I was ashamed of myself for doing so, I couldn't take my eyes from the sensual sway of her hips and the flexing of her buttocks beneath her skirt as she walked.\n\nI sighed heavily, sitting alone in the kitchen, and my heart went out to her. Ken had crushed her spirit, not only putting off her celebratory birthday getaway to Las Vegas but doing so in order to spend time with another woman. What an asshole.\n\nI made up my mind at that moment that I would do whatever I could to ease her mind and, at the very least, give her a birthday celebration she would enjoy. I didn't have to think long on the matter, and I made two phone calls. I telephoned Laura's friend Dana, the travel agent, asking her specifically for any Las Vegas specials. After only a few minutes, she returned my call with a perfect solution. Two nights' accommodation in two adjoining rooms at the Bellagio Hotel/Casino, with complimentary breakfast and dinner for two in their fancy dining room overlooking the fountains. And, all for the stunning price of one hundred and fifty dollars a night. Needless to say, I had her make the arrangements right away and to start tomorrow night, Audrey's birthday.\n\nMy next call was to my friend Larry. Larry was a big strong Ukrainian who would act as an occasional bodyguard and bouncer for my band when we played in town. He was also the owner/operator of Larry's Limousine Service. Once I had explained my plan to him, he was immediately on board. He had always had a special fondness for Laura's mom and was happy to donate his time and effort on her behalf.\n\nI put away the whiskey bottle and put the glasses into the dishwasher, switching off the kitchen lights as I exited. Returning to the living room, I switched off the television and, as I was about to turn off the living room light, I caught sight of Audrey's suitcase where she had left it in the foyer and placed it behind the sofa where she would not immediately see it when she came downstairs.\n\nI was reasonably sure that she would vehemently decline a trip to Las Vegas for dinner, let alone an overnight stay. So, my plan was to keep that part of the dinner outing a secret until it would be too late for her to back out of it.\n\nI turned off the lights and made my way up the stairs, surprised to see a dim light coming from Audrey's bedroom. I peeked in the doorway and sighed, seeing she had collapsed onto her bed without even removing her clothing and was breathing deeply as sleep had finally overcome her anxiety. She lay in a semi-fetal position with her knees drawn up, her skirt carelessly revealing a great deal of her lovely legs.\n\nI stepped into the room and carefully unbuckled her strappy sandals and removed them without waking her. I gathered a quilt from the bench at the foot of her bed and gently draped it over her. As I switched off the bedside lamp and made my way to the door she spoke, startling me.\n\n\"Don't go,\" she said, her voice soft and breathy. \"Will you...stay with me tonight? I don't want to be alone.\"\n\n\"Of course,\" I said, grieved by the sad tone of her voice. I kicked off my shoes and crawled onto the bed beside her and slipped under the quilt. As I settled onto my back beside her, she rolled over and threw her arm over me. I raised my arm and she settled into my embrace, my arm around her shoulders as she nestled her head against my shoulder.\n\n\"Thank you,\" she murmured, snuggling her body against mine. In only moments I heard her breathing deepen and knew she had slipped off to sleep once more. I closed my eyes, warmed by the physical intimacy of lying with her in her bed. Even fully clothed, the inherent sexuality of being so near to her was not lost to me and my erection was immediate.\n\nThe smell of her hair was almost intoxicating, and I kept turning my head to breathe in her scent. She murmured in her sleep and slid her leg over mine, the silky whisper of her nylon pantyhose sent a shiver of deeper arousal coursing through me. With the sensual warmth of her body nestled against me, I very slowly inched my fingers beneath the waistband of my jeans. I moved slowly and patiently, moving my hand only a few inches and then pausing to listen for her deep regular breathing.\n\nMy erection was straining the confines of my briefs, springing free as I slipped my fingers beneath the waistband. I waited patiently for a full minute until I was sure Audrey was still soundly asleep and then closed my hand around the tip of my cock. I laid perfectly still, moving only my fingers as I gently squeezed the tip of my cock. I cradled Audrey's body a little more firmly and held my breath as pulse after pulse of warm semen flooded into my hand and squeezed through my fingers. As I let go, I turned my head to take in her scent, my heart pounding in my chest.\n\nAs my orgasm waned, I couldn't help but smile broadly. I was almost astonished by my own shamelessness, but as my heartbeat began to slow to normal, the sheer pleasurable satisfaction of my release could not be denied, and I continued to smile as I wiped the semen from my fingers against my already inundated briefs.\n\nI nestled closer to Audrey and closed my eyes as I felt myself slipping away into sleep. I awoke several hours later with the daylight only beginning to lighten the curtains of her room and gently got out of bed so as to not disturb her sleep. The thought of Audrey's sexy dress hanging, never worn, in her closet fueled the fantasy I had created in my mind while lying sleepless. While I knew her secret fantasy had always been to wear something so utterly sexy and revealing out in public, I doubted very seriously she would ever act upon that fantasy without some kind of external pressure. But now, given her present situation, her feelings of pain and anger toward her husband might just be the catalyst I needed to remove most of her inhibitions or feelings of guilt.\n\nI quickly made my way to her clothes closet and retrieved her special cocktail dress, as well as the stiletto heels she had purchased to go with the dress. I spirited them to my room where I put her dress into my garment bag along with my navy, pin-stripe suit. I packed her shoes into my suitcase, along with my dress shoes and a couple of changes of clothes.\n\nMaking my way downstairs, I placed my suitcase and garment bag with hers behind the sofa and then made my way into the kitchen to put on some coffee.\n\nAs I sat down with my coffee at the kitchen table, I heard the upstairs toilet flush and knew Audrey was up and around. She arrived in the kitchen a few minutes later, padding quietly in her stockinged feet and still in the clothes she had slept in.\n\n\"Hey...happy birthday,\" I greeted with a smile as she entered the kitchen. She returned my smile, somewhat wistfully, and thanked me, seating herself at the table as I poured her a coffee. Even without her usual makeup and her hair slightly disheveled from sleep, she was still one of the most physically attractive women I had ever seen.\n\nWe chatted for quite some time, making our way through an entire pot of coffee, and never once broached the subject of Ken or her aborted second honeymoon attempt. I was actually quite pleased to see how she seemed to maintain a relatively cheerful demeanor despite what I perceived to be an underlying sadness in her eyes.\n\nI reminded her about going to dinner and she smiled, \"Yes,\" she said. \"I'm actually looking forward to it.\"\n\n\"Good,\" I smiled. \"But you have to be ready to go by noon. That's when Larry is picking us up in his limousine.\"\n\n\"Larry? The one I met at your wedding? The big man?\" She asked, looking confused.\n\n\"That would be him,\" I smiled.\n\n\"Oh,\" she said with a nod. \"Why noon? That's awfully early for dinner. It sounds more like it's going to be lunch instead.\"\n\nI shrugged noncommittally and smiled, \"Well, it might take us a bit of time to get to the dining room.\" I replied enigmatically.\n\nAudrey frowned and then smiled slightly with a shake of her head. \"Really? Where on earth are you taking me?\"\n\n\"It's a birthday surprise,\" I said, unable to hide my smile.\n\n\"All right,\" she said after a pause. \"I suppose I should dress for the evening now then. What kind of place is it? Should I be dressy or casual?\"\n\nI pursed my lips as if thinking it over. \"Maybe just casually dressy,\" I replied.\n\nHer eyes widened slightly, \"All right,\" she said. \"I sincerely hope you haven't made arrangements for someplace too expensive.\"\n\nMy smile widened. If she only knew. \"Not to worry,\" I answered. \"I have everything well in hand.\"\n\nAudrey smiled and shook her head, then turned and left the room. As she showered and dressed, I too took the opportunity to quickly do the same, wearing a nice pair of gray slacks with a white shirt and tie and my best black blazer. Larry arrived a little before noon, while Audrey was still attending to her makeup. I took the opportunity to run out with our luggage and clothing bags, stowing them in the spacious trunk of the long, stretch limo.\n\n\"So, where is the birthday girl?\" Said Larry with a smile.\n\n\"Coming right up,\" I said, quickly returning to the house to find Audrey was just coming down the stairs. She looked lovely, wearing a black, silk, shift style dress that formed to her figure rather provocatively and revealed just a hint of cleavage while displaying her glistening, shapely legs to just above the knee. She wore black, patent leather pumps and accessorized with a silver, charm-style bracelet and a single strand of pearls about her neck.\n\nAs she entered the living room, she was attending to the final adjustments to one of her pearl stud earrings. She smiled as she entered, filling the room with the intoxicating scent of her perfume.\n\nGod, she looked amazing. It occurred to me to wonder yet again, for probably the hundredth time, what kind of woman Ken could possibly have found to be more appealing than the woman he had at home.\n\n\"Would you do me the honor?\" She asked, turning her back to me to reveal the very top of her dress unhooked with the zipper still several inches from the top. I performed the finishing touches to her dress as she looked out the living room window to see Larry standing beside his long stretch limo.\n\n\"Oh, my,\" she said, turning to me with a smile. \"I think this is going to be a fun evening.\" We left the house, locking the door behind us and made our way down to the waiting limousine.\n\nAudrey smiled as she approached, \"Hello, Larry,\" she beamed, embracing him and kissing his cheek lightly. \"It's been a long time. Thank you for this...I've always wanted to go somewhere in a limousine.\"\n\n\"Happy birthday, milady, your chariot awaits,\" returned Larry with an effusive bow and parting his arms widely. \"And it's my pleasure.\"\n\nAudrey laughed, her eyes almost twinkling.\" Oh,\" she said. \"I can hardly wait.\"\n\nLarry bent and opened the door, elegantly ushering Audrey into the limousine with his hand on hers, and then slapping my proffered hand playfully with a roll of his eyes as I stepped into the vehicle and he closed the door behind me.\n\nIn a moment we were off, pulling away from the curb with a swirl of fallen leaves in our wake.\n\n\"This is WONDERFUL,\" said Audrey, her eyes wide with happiness as she looked around at the opulent interior. Two long, plush seats faced one another across the expanse of the limousine, which was darkened dramatically by the smoked black, privacy windows and romantically lit by soft, indirect lighting. She crossed her legs and her hosiery glistened sleekly in the subdued lights.\n\n\"Wow,\" I responded in agreement, having never been inside one of Larry's vehicles before.\n\nMoments later, Larry's voice came over the intercom. \"We'd like to thank you for flying with Larry's Limousine Service this evening. We'll be cruising at an altitude of...well, let's just say a fair amount above sea level, with an airspeed of...whatever the speed limit happens to be at any given time. Please feel free to move about the cabin and avail yourselves of the refreshments from the bar and the refrigerator. As I know this is a birthday celebration, I have stocked the refreshment area with an assortment of celebratory items as my way of expressing happy birthday to the lovely lady. So, relax and enjoy the flight...I'll see you all again when we arrive at our destination.\"\n\nAudrey giggled almost girlishly as Larry spoke. \"That man is so sweet,\" she said with a smile. \"I've always liked him.\"\n\nI opened the refrigerator to discover a silver champagne bucket filled with two bottles of champagne, both with decorative ribbons tied about the neck.",
        "\"Oh, my goodness,\" said Audrey as I handed her a delicate fluted glass and then popped the cork gently so as not to spray the interior of the limousine or spill anything on the plush, deep-pile carpeting. \"Do we have time?\"\n\nI smiled at her and nodded as I filled her glass and then my own. \"Actually, we do have a bit of driving time,\" I said, setting aside the bottle and then lifting my glass to her. She clinked her glass against mine.\n\n\"Happy birthday,\" I toasted.\"\n\n\"Thank you,\" she smiled, sipping from her glass. \"Mmm...this is wonderful. We better not take too long to get where we're going, or I'm liable to be pretty loopy when we get there. I LOVE champagne.\"\n\nI removed my blazer and settled back into the deep-piled velvet seat. \"You just go ahead and indulge yourself,\" I said, smiling at her over the rim of my glass. \"I'll look after the loopy woman when we get there.\"\n\n\"All right,\" she said, giggling girlishly once more. \"So, tell me...where exactly ARE we going?\"\n\n\"Would you believe...the Bellagio Hotel.\" I replied with a grin.\n\nAudrey's eyes widened dramatically, \"The BELLAGIO!\" She gasped aloud. \"But isn't that...\"\n\n\"On the sunny Las Vegas Strip?\" I interrupted, finishing her thought. \"Why, yes, as a matter of fact, it is.\"\n\nShe gaped at me in astonishment and then her lips slowly curled into a smile, \"You're taking me to Las Vegas?\"\n\nI nodded and toasted her with my glass.\n\nAudrey sank back into the seat with a sigh of resignation and shook her head, \"This is a lovely thought, Jessie. But I really didn't want you spending a lot of money on me like this.\"\n\n\"Listen,\" I said, sipping my champagne. \"Larry has a girlfriend in Las Vegas and was happy to donate his services. He was going there anyway. And the suites at the Bellagio were actually beyond reasonable.\"\n\n\"SUITES!\" She gasped, almost choking on her champagne as she abruptly sat up, her wide. \"What suites? We're spending the night in Las Vegas?\"\n\n\"Not to worry,\" I replied, smiling broadly and trying to look more self-assured than I actually felt at that moment. \"Everything has been taken care of.\"\n\nAudrey gasped again and shook her head, \"Taken care of? I thought we were just going out to dinner, I'm not at all prepared to stay overnight anywhere. I don't even have anything to wear but this dress.\"\n\nI nodded, leaning forward to smile at her, \"Then I guess it's a good thing I had the foresight to bring along that suitcase that you never unpacked.\"\n\n\"My suitcase?\" She repeated with yet another look of complete astonishment. \"My suitcase is here?\"\n\nI nodded, \"Carefully stowed away in the trunk along with my own.\"\n\nShe sat back into the seat once more and sipped her champagne with a thoughtful look. \"Well, I suppose I'm slightly more mollified to know I at least have a change of clothes. But, damn it, Jessie, you really shouldn't spring things on me like this.\"\n\n\"I meant it to be a surprise,\" I answered. \"And, if you think about it, I'm sure you'll realize it had to be that way. Because I doubt very seriously that you would have agreed to let me take you out to dinner in Las Vegas AND spend the night in a luxury hotel suite if I had told you about it beforehand.\"\n\nAudrey pursed her lips thoughtfully and then nodded, \"I see what you mean,\" she said. \"And you're right, I doubt I would have ever agreed to something like this.\" She sat quietly, sipping her champagne for several moments, and I was beginning to worry that she might actually be a little unhappy with the plans I had made for her.\n\n\"Well,\" she said with a heavy sigh, \"First of all, thank you very much for thinking so much of me to want to make my birthday something special. I'm sorry if I made it sound otherwise, it was just such a big surprise. Now...as long as we're off to Las Vegas,\" she added, holding out her empty champagne flute with a broad smile. \"May I have some more champagne, please?\"\n\nOver the next hour, we each had several more glasses, almost emptying one entire bottle. Audrey loosened up dramatically, talking almost non-stop and laughing as we watched the city lights disappear and fade away behind us.\n\n\"Wow,\" she said, shaking her head, her words slightly slurred, \"I can't believe I'm actually going to Las Vegas. I've always wanted to go there.\"\n\nI nodded, \"I hear it's a fun place,\" I said. \"They say you can find whatever your heart desires there.\"\n\n\"So I've heard,\" she laughed, \"What happens in Vegas...stays in Vegas,\" she said, repeating the commercial mantra we'd seen on television.\n\n\"Exactly,\" I said. \"It's even the kind of place where you could have worn that sexy black dress of yours out in public without worrying, even slightly, what anyone might think of you.\"\n\nI looked at her thoughtfully to try to gauge her reaction to what I just said, and her eyes widened. \"Oh, my God, that's so true,\" she said with a thoughtful nod of her head. \"I could have finally lived out my slutty fantasy in complete anonymity. What a hoot that would have been, huh? Can you just imagine?\"\n\nShe bit her lip thoughtfully and looked out the back window of the limousine, \"I suppose we've come too far now to actually turn around and go back for the dress, haven't we? Damn, I can't think of a better opportunity to ever wear the damn thing.\"\n\n\"Actually,\" I began tentatively. \"I was kind of hoping you might feel that way because...well, because I sort of took the liberty of putting your dress into a garment bag and put it into the trunk with your suitcase.\"\n\nHer mouth opened, her lips forming a perfect 'O', \"You didn't!\" She gasped, her face a mask of astonishment.\n\n\"I most certainly did,\" I said, raising my glass to her with a self-satisfied smile. \"Not only that, but I also brought along those very sexy stiletto heels as well. Like you once told me, you can't wear that dress with just any pair of shoes. Right?\"\n\nAudrey laughed aloud, covering her mouth with her fingertips. \"Oh, my God,\" she said through her fingers. \"It's really going to happen, isn't it?\"\n\n\"It is,\" I returned with a broad smile of satisfaction. \"And speaking personally, I can't wait to walk into that dining room with you on my arm tonight.\"\n\nShe sipped her champagne and smiled, \"My stomach is going all butterflies just thinking about it.\"\n\n\"You're still free to back out of it,\" I offered, giving her an out if she wanted to take it. \"Because the dress you're wearing now is perfectly suitable for a dinner date.\"\n\nShe looked at me thoughtfully for several moments and then shook her head. \"Jessie, if I don't do this now, I know I'll never do it. And, damn it, it's high time I started asserted myself. I've done a lot of thinking since...well since I found Ken in bed with another woman. And frankly, I'm damned tired of being little miss goody two shoes and always trying to be the perfect wife and mother. I'm tired of envying my daughters always going out nightclubbing in their skimpy little outfits. I WANT to dress sexy; it makes me FEEL sexy. And I WANT to feel sexy, I've always felt that way deep down inside but...well, I guess I also always felt that wasn't the way a housewife and mother was supposed to feel. Am I making sense?\"\n\n\"Oh, perfectly,\" I responded, sipping my champagne and enjoying the way this conversation was going.\n\n\"Thank you,\" she said, smiling as she took a large swallow of her drink. \"And...thank you also for everything you did for me yesterday. The way you comforted me and made me feel as if I wasn't so all alone. It really meant a lot to me. Thank you for that, and also for spending the night with me.\"\n\nShe paused and a little smile curved the corners of her mouth, \"And I especially want to thank you for that amazing sex yesterday. In all honesty, until yesterday I never really physically enjoyed sex. I mean, oh sure, it always gave me a great amount of nurturing pleasure to give of my body to Ken for his pleasure. I liked pleasing him that way.\"\n\nShe smiled and reached over to take my hand in hers, \"Spending those wonderful moments with you really opened my eyes about a lot of things missing in my life. And not just about having orgasms, but it also made me realize how I had been unconsciously repressing my true nature all these years. I feel as though I have just awoken from a bad dream.\"\n\nShe looked at me and smiled, \"And, starting today...at this very moment, I'm completely done with the old Audrey. I'm going to thoroughly enjoy my time with you in Las Vegas. I want to do everything there is to do there. I want to see the sights and gamble. I'm going to drink much more than I should, dress slutty, and flirt with every man I see.\"\n\n\"Wow,\" I said, smiling broadly. \"I think I'm going to like the new Audrey.\"\n\n\"And so you should,\" she laughed, slapping my arm playfully. \"Just make sure you're there to set me straight in case I've let things get out of hand.\"\n\n\"Are you kidding?\" I laughed. \"I'm not letting you out of my sight the entire time.\"\n\nAudrey smiled broadly and sipped her drink. \"Then let's start right now then, shall we?\" She said, holding out her empty glass. \n\nAs luck would have it at that very moment, the limousine crested a rise and the neon glow of Las Vegas came into view. It wasn't long before the limousine was pulling into the valet parking area of the Bellagio and Larry was leaping out to get the door. He held his hand for Audrey and assisted her as she stepped from the vehicle while I exited from the other side.\n\nBellmen appeared with luggage carriers as if by magic and no sooner was the trunk opened then the carts were filled with our belongings. We were whisked into the lobby where an efficient desk person punched my name into her computer and then handed the keys to the bellman.\n\nAs we waited for an elevator, Audrey and I gaped in transfixed awe at the stunning ceiling of the lobby, which consisted entirely of multi-colored, blown glass flowers. Audrey beamed excitedly and held onto my arm as her eyes moved over the lobby and the bustling casino beyond.\n\nOnce our luggage was ensconced into our respective adjoining suites, we wandered about each suite together, appreciating the luxurious appointments as well as the stunning view of the Las Vegas Strip from the floor to ceiling wall of glass.\n\n\"Wow,\" I said, smiling at Audrey, \"It's Disneyland for adults. I feel like a kid in the proverbial candy shop, what would you like to do first?\"\n\nAudrey didn't even have to think about it, \"I hope it's not too early to eat,\" she said. \"I'm absolutely starved.\n\nI glanced at my watch to see the hour at just after six, \"All right,\" I smiled, already looking forward to seeing her dressed for dinner. \"Why don't you get dressed for dinner and I'll phone the dining room for reservations.\"\n\nI retreated to my suite and closed the adjoining door. I quickly looked up the dining room number and made a reservation for two at seven. After hanging up, I quickly showered and shaved, changing into my suit and splashing some cologne onto my face.\n\nI had just finished when I heard the soft knock at the connecting door between our adjoining suites. Audrey opened the door a few inches and stuck her head into the room, her face wreathed in smiles.\n\n\"I need your help with something,\" she said, opening the door wider to reveal she was, indeed wearing her stunning dress.\n\nI gaped in awe and admiration as Audrey stepped gingerly into the room and closed the door behind her. She looked even more stunningly sensual than I had remembered and she, quite literally, took my breath away. The sheer fabric seemed to lovingly caress every swell and curve of her body and revealed her deep, voluptuous cleavage shamelessly. Her large, full breasts inundated the small strips of material that constituted the bodice of her dress and swayed alluringly with every step she took. Her legs were completely bare, shaved to a glistening sheen and the smooth, unbroken line of her body from hips to knees provided striking evidence to the fact that she wore absolutely nothing beneath her dress.\n\nShe smiled self-consciously and slowly turned in a circle with her arms outstretched. \"Is it still all right?\"\n\n\"Holy shit.\" I gasped appreciatively, feeling my cock stir with longing as my eyes moved over her.\n\nHer eyes widened apprehensively, \"Is holy shit a good thing or bad?\" She asked. \"I can change back into the other dress in only a minute or so.\"\n\n\"Don't you dare,\" I said, unable to tear my eyes from her unbelievable body. \"God. Mom, you look even better than I remembered. You're going to devastate every man in the dining room.\"\n\nShe laughed demurely, color rising to her cheeks as she turned to study her reflection in the mirror. \"God,\" she said as she smoothed the dress over her hips. \"I feel like I'm practically naked.\"\n\n\"I see that,\" I replied with a broad appreciative grin.\n\nShe turned away from the mirror, biting her lip thoughtfully, \"But, I need your advice. When I bought the dress, I knew I needed the shoes to go along with it. But, looking at myself in the mirror, I see I forgot to think at all about my hair.\"\n\n\"What's wrong with your hair?\" I asked, already knowing what she was going to say.\n\n\"It's a...well, a mature woman's hairstyle. And personally, I think it ruins the whole look. What do you think?\"\n\nI nodded, watching her as she moved her fingers through her hair pushing it around to different looks. She took a comb from the dressing table and combed her hair straight back from her forehead and on each side of her head. \"How's this?\"\n\nI smiled, it changed her entire look and gave her a Vogue magazine kind of stylish look. \"I like it,\" I smiled. \"I like it a lot.\"\n\n\"Oh,\" she said, turning to make her way back into her suite. \"I think I have just the thing.\"\n\n\"How about this?\" She said moments later wearing a pair of sunglasses. They were over-large, with tortoiseshell frames, the glass smoked dark to light from top to bottom.\n\n\"Excellent,\" I smiled. \"Very Sophia Loren-ish.\"\n\n\"Hey, very good,\" said Audrey with a smile. \"These actually are one of her fashion line of sunglasses.\"\n\nIt was surprising how much something so small and insignificant as changing her hairstyle and wearing glasses could change her overall appearance.\n\n\"Wow, Mom, you look absolutely amazing,\" I said again as she turned and leaned into the mirror to adjust her lipstick. \"I think changing your hair and wearing those glasses changes your normal appearance enough that even someone who knows you might not even recognize you.\"\n\nAudrey smiled at me in the mirror. \"I like that,\" she said. \"That eases my mind a little.\"\n\nShe turned and sighed heavily, \"Well, it's now or never,\" she said with a shrug of her shoulders. \"Let's get out of here before I have a chance to change my mind.\"\n\nWe exited the suite and made our way down the long hallway toward the elevator. As we neared the elevator, the bell rang to announce that the elevator had just arrived and, as we approached, the doors parted and a middle-aged couple began to exit.\n\nAudrey clung to my arm, her fingers gripping me tightly as the couple passed and we entered the elevator.\n\nAs the doors began to close, the woman's voice was hushed but clearly audible as she spoke. \"HERB! Put your eyes back in your head. Honestly.\"\n\nAudrey giggled softly, \"Well, I certainly seemed to have made quite an impression on both of them.\"\n\n\"And, if I'm not mistaken, I think his eyes almost had a heart attack,\" I replied with a broad grin.\n\nMoments later the doors parted to reveal the opulence of the grand dining room. \"Oh, my,\" said Audrey as we stepped from the elevator and looked around. \"This looks frightfully expensive, Jessie. Are you sure you want to eat here?\"\n\n\"Absolutely,\" I said, guiding Audrey with my hand at the small of her back as we crossed the foyer to the podium where stood the dining room hostess in a long satin gown. \"This is a celebration, and nothing but the best will do.\"\n\nThe hostess glanced at Audrey and then looked away with an air of moderate boredom as if to say she had seen it all in Las Vegas and nothing shocked or surprised her anymore. She looked through the reservation list as I gave her my name and then picked up two leather-bound menus. \"If you will follow me, please,\" she said with a warm smile.\n\nAs we passed through the dining area, I couldn't help but smile to notice how Audrey added a more pronounced sway to her hips as we passed the other tables. I watched as heads turned and eyes popped, and forkfuls of victuals were held motionless before gaping mouths. The hostess led us to a curved booth that faced a window and looked out over the large lighted lake and fountains at the front of the Bellagio.\n\n\"Oh, wow,\" I said, captivated by the view. \"This is amazing.\"\n\n\"It's absolutely stunning,\" beamed Audrey as we seated ourselves and began to peruse the menus.\n\n\"Did you happen to notice the reaction you created as we walked through the dining room?\" I said, leaning closer to her.\n\n\"I certainly did,\" said Audrey with a smile as her face flushed slightly. \"And t be perfectly honest, I rather enjoyed my little moment of notoriety.\"\n\n\"Did you now?\" I asked, raising my eyebrows at her. \"How very slutty of you.\"\n\nAudrey laughed and winked at me. Moments later our waiter arrived with a flourish. He introduced himself and told us what the specials of the house were that evening, his eyes dropping to Audrey's spectacular cleavage several times as he spoke.\n\nWe ordered a bottle of Merlot and we each ordered the filet mignon. As the wine steward arrived and uncorked our bottle, the water show began outside, and all heads turned to watch the display. All heads except for our wine steward.\n\nAudrey gasped pleasurably, her eyes wide with joy and fascination as the beautiful water show began. The wine steward, for his part, filled our glasses and attempted to covertly hover behind Audrey in order to get a better look down the front of her dress.\n\n\"Thank you,\" she purred almost seductively, smiling warmly at the wine steward as she lifted her glass and sipped her wine.\n\n\"Is the wine to your liking?\" He asked graciously, glancing down once more lingeringly.\n\n\"Oh, it's very nice, thank you,\" said Audrey, smiling up at him with the color rising in her cheeks.\n\n\"I would be happy to bring you another bottle right away if this one displeases you,\" said the steward, so obviously obsequious in order to remain hovering over Audrey.\n\nAudrey smiled up at him warmly and crossed her legs with a sensual slowness that only women with beautiful legs are able to do. I had to bite my lip to keep from laughing aloud to watch as the steward made a herculean attempt to keep his eyes on Audrey's eyes and managed to fail miserably.\n\n\"Oh!\" Said Audrey, turning her head to focus on the fountain show once more. \"It's so beautiful.\"\n\nI glanced out the window and then surreptitiously back at the steward in time to see his move over Audrey almost hungrily as he licked his lips.\n\n\"Just let me know if you need anything else,\" he stammered as he finally backed away.\n\n\"Thank you,\" smiled Audrey batting her eyes almost flirtatiously.\n\n\"Well,\" I said, leaning closer and lowering my voice. \"He certainly seemed quite taken by you. Wouldn't you say?\"\n\nAudrey smiled and lowered her eyes demurely, \"I think that's putting it mildly,\" she said. \"His eyes were all over me.\"\n\nI laughed, \"Well,\" I said with a wink. \"If I didn't know any better, I might think you enjoyed his attention almost shamelessly.\"\n\nShe smiled demurely and slapped my arm playfully.\n\nWe toasted one another and sipped our wine, enjoying the water show. As the show ended and most of the diners resumed eating, a small three-piece jazz trio began to play. Audrey and I swiveled our heads to look in the direction of the music and watched as a couple stood from their table and made their way onto the small dance floor in front of the stage. ",
        "\"They certainly sound awfully good,\" she said, her eyes on the musicians. \"Is that Moon River they're playing?\"\n\n\"It is, indeed,\" I smiled. \"Would you like to dance?\"\n\nAudrey turned to me and smiled, \"I would love to,\" she responded.\n\nI stood and offered her my hand. As she slid from the booth, her knees parted momentarily, providing a very fleeting, yet absolutely stunning glimpse of her pubic hair. She rose and took my hand, her eyes on mine, and laughed softly.\n\n\"You're almost as bad as the wine steward,\" she said, as she adjusted the hem of her dress.\n\nI felt my cheeks flush, I hadn't thought I had been anywhere near as blatant about looking as the wine steward had been and it was moderately embarrassing to have Audrey call me on it.\n\n\"Sorry,\" I said, smiling sheepishly. \"In my own defense, all I can say is I'm a guy. It's inherent in our nature to always look at beautiful women.\"\n\nAudrey laughed softly and bent to lightly kiss my cheek, \"There's no reason to be embarrassed about it,\" she said, giving me a little wink. \"And I certainly wasn't offended.\"\n\nAs we meandered through the dining room tables toward the dance floor, I smiled to see heads turning, men nudging other men and women leaning across tables to speak in quiet tones to their male companions.\n\nI turned and faced Audrey on the dance floor, and she raised her eyes to mine. Even in the dim lighting, I could see her face flushed with the excitement to have been the center of everyone's attention once more. I smiled and slipped my hand along her waist to the small of her back as she took my other hand and we began to move to the slow rhythm of the music.\n\nIn her heels, she stood a few inches taller than me, and something about that size difference I found to be surprisingly exciting and even arousing. I couldn't help but wonder what the other people in the room might be speculating about our relationship. I held her close, her breasts pressed provocatively against my chest and I was forced to do some mental gymnastics to keep from getting an erection and tenting my slacks, it would have been obscenely noticeable.\n\nAudrey laughed softly; her lips close to my ear. \"I can almost feel everyone's eyes on me,\" she said.\n\n\"That's because YOU...are, without even the slightest exaggeration, the sexiest woman in the entire room,\" I said with a smile.\n\nAudrey raised her head to look into my eyes, her lashes fluttering in obvious flustered embarrassment. \"Well...I...doubt that very much,\" she whispered, \"But, thank you for saying so.\"\n\n\"They're probably wondering how on earth a short little, average looking guy like me managed to persuade such a sexual goddess to a dinner date,\" I replied with a laugh.\n\nAudrey opened her mouth as if shocked by what I said, \"I doubt THAT,\" she retorted with a smile. \"They're probably wondering something more along the lines of...How did that fat old cow manage to finagle a date with such a cute young guy?\"\n\nI laughed aloud, \"Touch\u00e9,\" I said. \"But seriously...I'll bet almost everyone is wondering exactly WHAT our relationship is.\"\n\n\"Oh...I don't doubt THAT for a minute,\" she replied. \"I'm enjoying this very much.\"\n\nAs we slowly turned and I faced toward the band, the upright bass player, an elderly black gentleman, smiled broadly at me and held his thumb up as if to congratulate me on my choice of dancing partner. Moments later, as we turned more and Audrey's back was to the band, I slid my hands down over her hips to caress her buttocks.\n\n\"Jessie!\" Said Audrey, her eyes widening in surprise.\n\n\"Just teasing the band,\" I replied, smiling broadly.\n\nShe laughed and her entire body shook against mine. \"You're so BAD,\" she replied.\n\n\"Sorry,\" I said with a laugh, as I lifted my hand to a more respectable height.\n\nAudrey laughed and tightened her embrace about my neck, kissing my cheek. \"I was only surprised, not offended,\" she said.\n\nAs the music ended and we parted, I approached the bandstand and slipped a twenty-dollar bill into a tip-jar at the front of the stage.\n\n\"Thank you, gentlemen,\" I smiled. \"You guys are amazing players.\"\n\n\"No,\" smiled the bassist. \"Thank YOU for leading that lovely lady onto the dance floor. We in the band haven't had that much entertainment in a LONG time.\"\n\nI turned and took Audrey's hand and led her from the floor, as the band struck up an up-tempo number, we meandered through the tables once more to our booth by the window.\n\nAs we resumed our places in the booth, Audrey slid over very close to me and slipped her arm about my neck. \"Thank you,\" she said, her face flushed with pleasure. \"You have made this little fantasy of mine happen so beautifully.\" She kissed my cheek once more and then moved away to resume her position.\n\n\"Now,\" she said, taking up her small clutch purse. \"Before dinner actually arrives, I just need to visit the ladies' room to freshen up a little bit.\"\n\nJust then, our waiter was passing near our booth, and Audrey raised her hand to signal him. He smiled and directed her to the ladies' lounge near the front foyer by the elevators.\n\nAudrey looked at me pointedly and rolled her eyes, smiling broadly. \"Of course,\" she said. \"Nothing like parading myself through the entire dining room several more times.\"\n\nWith that, she stood and made her way back toward the foyer. I watched her cross the room, smiling pleasurable to notice her emphasized provocative sway to her hips as she walked, her head held high as she quite literally owned the room.\n\nNear the foyer, a table of four young men spoke to Audrey as she passed. Audrey paused near their table, responding to them and speaking momentarily until finally making her way to the ladies' room.\n\nAs she left the room, the four men put their heads together, gesticulating excitedly. I smiled; Audrey had obviously made a rather dramatic impression on them.\n\nSeveral minutes later, as Audrey entered the dining room, the men at the table spoke to her once more. I watched as Audrey turned and spoke to them again at some length, nodding and smiling graciously, before turning on her heel and wending her way back to our booth.\n\nShe arrived back at our booth positively buoyant, her face flushed and smiling broadly. \"Oh, my god,\" she said as she resumed her seat in the booth. \"Did you see me with those young men just now?\"\n\n\"I did,\" I replied. \"And I hope they were being respectful.\"\n\n\"Oh, yes,\" she replied, smiling and nodding emphatically. \"They're just college kids, out here from Florida for spring break. And they were very nice and polite. But, judging from their reactions as we spoke, it suddenly struck me how dressed as I am, I suddenly felt a kind of power like I've never experienced before. Do you know what I mean?\"\n\nI nodded and smiled; reasonably sure I knew exactly the power she possessed while wearing that dress.\n\n\"I mean...while speaking to them, I actually felt like I was a big piece of cake that everyone at the table wanted. God, I've never in my life felt so...so desired before. And I have to admit, the feeling was absolutely intoxicating. I think that, if I had seriously wanted to, I could have had any one of them in my bed tonight.\"\n\n\"Or,\" I added, toasting her with the remains of the champagne in my glass. \"I would strongly suspect you could have had even more than one.\"\n\nAudrey gasped in astonishment. \"Oh, my god,\" she said, softly, fanning her cheeks with her fingertips. \"I hadn't thought of that, but wow, you're probably right.\"\n\n\"Well, you know what they say,\" I responded with a raised eyebrow. \"What happens in Vegas...\"\n\n\"STAYS in Vegas,\" we both said, laughing aloud in unison.\n\nShe took a deep breath and sighed with a smile, \"I think that's a fantasy better left for another time. I'm still enjoying the one I'm living right now too much.\"\n\nAt that moment, our dinners arrived, and the waiter served us with a flourish as the wide-eyed wine steward hovered once again at Audrey's shoulder to refill her glass.\n\n\"Thank you,\" she cooed seductively at him, leaning forward slightly to hold out her glass and also to give him an even more revealing glimpse of her cleavage.\n\n\"Oh,\" he stammered, obviously flustered by her overt flirtatiousness. \"Believe me, It's my distinct pleasure. Please, enjoy your dinners.\"\n\nAs the wine steward turned and walked away, Audrey inclined her head toward me and winked playfully. \"You know,\" she said, whispering conspiratorially. \"It's a little embarrassing to admit, but I think I could actually become rather fond of all this fawning adoration.\"\n\nI laughed and toasted her with my wine glass, \"My God,\" I said. \"I've created a MON-STAH!\" I replied in my best Boris Karloff imitation.\n\nAudrey laughed and sipped her wine. We toasted one another a second time and then began to dine. The dinner was superb, the filets were perfectly grilled. Halfway through the dinner, the wine steward returned carrying another bottle of wine. Before I could say to him that we would probably be fine with just the one bottle, he smiled knowingly and winked at Audrey.\n\n\"Actually, this bottle of wine is courtesy of the gentlemen at table number four,\" he said, gesturing toward the table by the door where the four college guys all smiled and lifted their glasses to us.\n\n\"Oh,\" said Audrey, smiling warmly at the wine steward. \"How very sweet of them, will you please be sure and thank them for me?\" As he began to move away, she leaned forward and reached out, placing her hand over his arm. \"And please,\" she continued, smiling up at him almost flirtatiously. \"If you would be so kind as to send this bottle down to our room, I would appreciate it very much.\"\n\n\"Certainly, Ma'am,\" he responded, his eyes widening at the intimacy of her contact and the revealing view of her cleavage.\n\n\"You're really enjoying all this, aren't you?\" I laughed as the steward moved away.\n\nAudrey smiled and sipped her wine, licking her lips. \"It's the new me,\" she said with a wink.\n\n\"You've got that poor wine steward so rattled by flirting with him that way, I'm surprised he hasn't spilled wine all over the table.\" I continued.\n\nAudrey laughed playfully. \"I guess, deep down inside, I really do enjoy the teasing and flirting. I've never done anything like this before in my life...and I find it positively exhilarating. It actually even turns me on a little.\"\n\nThe waiter arrived with the bill and placed it before me. I placed the complimentary ticket on the tray with the bill along with a one hundred dollar bill as a tip. He bowed and smiled, whisking the tray away and turning his heel to leave the table.\n\n\"That was a rather hefty tip,\" said Audrey with a canted eyebrow as we stood to make our way out of the dining room.\n\nI nodded and smiled, \"I suppose,\" I nodded. \"But I thoroughly enjoyed watching him and the waiter falling all over themselves to look down your dress.\" At the elevators, I glanced at my watch. It was still relatively early. \"Why don't we try out luck down in the casino?\" I suggested, smiling as Audrey's eyes lit up.\n\nThe elevator door opened on the casino floor with a rush of flashing lights and noise. Stepping into the casino was almost like stepping into a fantasyland. We wandered arm and arm about the huge floor space until Audrey became intrigued by a particular machine's flashing lights. She sat at the machine, her dress rising dramatically on her thighs, and crossed her legs demurely. She played the machine for a while, then moved to another...and another. Rather than gamble myself, I preferred to watch Audrey and the men around her reacting to her presence.\n\nAfter a while, we retired to the casino lounge for a nightcap. We sipped Grand Marnier in the plush easy chairs, smiling and laughing at one another as we chatted. As she sat facing me with her legs crossed, I found myself every bit as captivated by her gorgeous legs as every other man she had come into contact with that evening.\n\n\"You know, Mom?\" I began, toasting her with my glass, and then draining the contents. \"In complete honesty, I believe you have the most beautiful legs I have ever seen.\"\n\nAudrey smiled and leaned forward, taking the glass from my hand and setting it on the little table between us. \"Well,\" she said, smiling teasingly. \"If you're going to start fawning over me like all the other men around here, it's probably time you stopped drinking.\"\n\nI laughed aloud and shook my head, \"Booze has nothing to do with it, Mom. I'm a guy and I can't help myself. I notice.\"\n\nAudrey smiled and drained her glass. \"It's probably time we turned in anyway, don't you think? What time are we leaving tomorrow?\"\n\nI shrugged, \"Not early,\" I responded tentatively, as I had yet to tell her about the two-night stay I had booked. \"I'll call Larry in the morning.\"\n\nWe paid the tab and walked arm in arm to the elevators and then up to our floor. I walked Audrey to her room, leaning against the door jamb as she inserted her key card and unlocked the door.\n\n\"I can't thank you enough for tonight, Jessie,\" she said, smiling winsomely. \"This has been a birthday that I'll never forget.\"\n\nI smiled and leaned in, bringing my lips to hers and kissing her lightly, pulling away after lingering a little longer than I should have. Audrey's eyes widened in surprise as she just looked at me silently, bringing her fingertips to her lips.\n\nI swallowed uncomfortably, suddenly realizing I had crossed a line with her. \"Oh,\" I stammered, backing up a little. \"I'm sorry, I...shouldn't have done that.\" I backpedaled to my door and keyed the lock as Audrey stood silently in front of her door with a look of bewilderment on her face.\n\n\"I'm sorry, Mom,\" I said. \"Good night, I'll call you in the morning.\"\n\nAudrey nodded, saying nothing, her fingertips still touching her lips. I quickly stepped into my room and shut the door, cursing myself for my stupidity. I had just kissed her in a way that was decidedly less than platonic, and I was sure I had ruined what up to then had been a perfect evening together. I smacked my forehead with the palm of my hand. \"Way to go, ass hole. Fuck!\"\n\nI took off my suit jacket and tossed it carelessly onto an easy chair, thinking I would likely spend the rest of the night in front of the television. I picked up the remote and was about to switch on the television when there came a soft knock on the door that separated our suites.\n\nI quickly opened the door and smiled. \"Hey,\" I said. \"I was...\"\n\nI got no farther because Audrey stepped quickly into the room, put her arms around my neck, and crushed her lips to mine. She kissed me with a passion that astonished me, her lips parting and finding the tip of my tongue with hers. We kissed for several moments, our mouths moving ever so sensually together.\n\nShe pulled back, breaking the kiss, her eyes searching mine. \"Jessie, I'm so sorry,\" she said. \"I acted a complete fool in the hallway just now, and I...\"\n\nI stopped her in mid-sentence, just as she had stopped me, by pressing my lips against hers and kissing her passionately. She moaned softly deep in her throat and I felt her body press warmly into mine. I encircled her waist with my arms and held her tightly to me and then slowly slid my hands down her back to tenderly caress the cheeks of her buttocks.\n\nAudrey made another sound from deep in her throat and made no attempt to move my hands or pull away. I cupped her cheeks and pulled her tightly to me. I was fully erect after the first kiss and I wanted her to feel the urgency of my need for her.\n\nI felt the muscles in her buttock cheeks flexing in my hands as she began to press her hips against mine and felt my traitorous erection swelling with the need for release way too soon. I grasped handfuls of her dress, pulling her dress up over her hips almost desperate to be inside her as I reached down to cup her bare buttocks and grind my erection against her pubic mound.\n\nAudrey tore her lips from mine with a soft cry of her own need, her hands reaching to fumble with the front of my pants as her eyes searched mine almost imploringly. As my slacks fell to the floor, puddling around my ankles, Audrey roughly yanked down my briefs. As my cock sprang free from its confines, I pressed Audrey back against the wall, probing her silky pubic hair with the tip of my cock as I thrust into her rapidly with my need.\n\nAudrey crushed her lips to mine once more as she parted her knees and I felt the warmth of her wet lips with the tip of my cock and thrust myself into her, penetrating her as deeply as I could and then thrusting hard a second time to penetrate her fully. She tore her lips from mine, crying out loudly as I thrust myself into her, her arms almost painfully tight around my neck with her cheek against mine.\n\n\"Oh, God!\" She gasped, her hips moving to match the speed of my thrusts. \"Oh, God...YES!\"\n\nAs I felt her vaginal muscles spasming in orgasm, I released into her. \"Oh, Mom,\" I sighed as my first ejaculation erupted into her. We stood together almost motionless as we both came simultaneously, only our hips moving together almost gently as we both surrendered to the intense pleasure.\n\n\"Oh, Jessie,\" she sighed breathlessly, her lips close to my ear as we stood motionless and I held myself inside her. I raised my head and found her lips once more, kissing her passionately. Only moments later, I felt her hips moving once more as if to savor the sensation of my erection still within her. Sensing her renewed need, I felt a rising desire for her building within me.\n\nI pulled away from her, slipping my cock from her as I took her arm to guide her toward the bed. I stepped one foot from my pants and briefs, still gathered about my ankles as we began to move, dragging my pants and briefs behind me as I walked.\n\nAudrey lay back on the bed and spread her leg wide as I lay myself down on top of her. I found her vagina once more, and thrust myself into her, feeling how copiously slick and wet she now was after my orgasm. I fucked her then, with a fervent need to finally release all the repressed desire and frustrating need for her that had accumulated over the past many weeks.\n\nAudrey matched me thrust for thrust, groaning delicately each time our bodies came together, my pelvis slapping almost loudly against her soft fleshy buttocks. \"Oh, God... Oh, God, yes!\" She cried as her second orgasm took her away and her hips seemed to vibrate beneath me. I thrust into her hard, striving for my own release that I sensed was only beginning at that moment.\n\nAs her orgasm began to wane, I crushed my mouth to hers and continued to thrust rapidly. I was lost in the beauty of that moment, with an almost out-of-body experience where I savored every physical sensation all at once. The feel of her plush voluptuous body beneath me, the sensation of her hard, peaked nipples pressing into my chest, and the warm press of her thighs against my ribs. I sensed the warm sweet, wetness of her labial lips spreading over my own body and the wet sensual sound we made together as I thrust into her.\n\n\"Oh, Mom!\" I gasped, feeling my orgasm finally reach the point of no return. \"Yes!\" she cried, her fingernails digging into my back almost painfully. I called out to her again as I blissfully erupted inside her, her hips rising gently to the rhythm of my ejaculations, her vagina pulling deliciously on me as if she were milking every ounce of semen I had to give her.\n\n\"Jessie!\" She cried, her hips moving with increased rapidity just as my orgasm began to wane. \"Don't stop! Oh, God...don't stop fucking me!\"\n\nI could feel my erection beginning to fade, but I redoubled my efforts for her, thrusting into her to match the movements of her hips. Moments later, she cried out as her third orgasm coursed through her body. Her hands gripped my buttocks firmly, pulling me into her tightly as her hips pressed up into me, her nails digging into my flesh.",
        "Moments later we both collapsed, gasping for breath, our bodies coated with a sheen of perspiration from our pleasurable exertions. She lowered her legs with a sigh, and I rolled from her. We lay side by side with our hands clasped until our breathing returned to normal.\n\n\"That...was the most...amazing experience...of my life,\" said Audrey softly, turning her head to look at me.\n\nI smiled at her, \"For me too, Mom,\" I responded honestly. I had never felt so utterly drained and satisfied in all my sexual experiences. \"I've wanted to be with you like this for a long time now.\"\n\nShe reached over and stroked my cheek affectionately. \"Really?\" She said with a teasing smile. \"And just how long have you wanted me like this?\"\n\n\"Probably since that first evening when Laura and I came over for Thanksgiving dinner,\" I answered honestly with a broad smile.\n\nShe slapped my chest playfully with a feigned look of incredulity, \"Seriously? You Cad. If I had known how you felt about me at back then, I would have never allowed you to marry my daughter.\"\n\n\"Is that so?\" I responded with a smile.\n\n\"Absolutely,\" she said, her smile fading. \"I would have never allowed you to be married to such a foolish, idiotic narcissist. I would have stolen you away from her in a heartbeat.\"\n\nWe laughed aloud at her little joke and kissed warmly once more.\n\n\"Thank you,\" she said, smiling wistfully. \"For making me feel so beautiful tonight.\"\n\n\"I would say the same thing to you,\" I responded, moving my hand lovingly over the soft rise of her bare hip. \"Oh, hey. Can you hear that?\" I asked with a playful smile.\n\nShe shook her head looking at me curiously, \"Hear what?\"\n\n\"I believe I hear that jacuzzi in the other room calling our names. Can't you hear it?\"\n\nAudrey laughed, \"Ah, yes, I DO hear it now. And, I believe we also have a bottle of wine that has been delivered to my room.\"\n\nI smiled at her once more, kissing her lightly as we both sat up. \"Why don't get the wine while l get the jacuzzi going,\" I said.\n\nShe stood, smiling down at me and then gasped, \"Oh!\" she said, her eyes wide as she hurriedly reached for a box of tissues on the bedside table. Grasped a handful of tissues and pressed them between her legs. \"My God, honey...you REALLY filled me up,\" she said with a broad grin.\n\n\"I have more,\" I offered with an even broader grin on my face.\n\n\"I'm counting on it,\" she said with an impish smile as she turned away to get the wine.\n\nI sat on the bed, watching her as she walked away, her beautiful dress bunched unceremoniously about her waist and her gorgeous wide buttocks flexing sensually with each step.\n\n\"Quit looking at my butt,\" she said, pausing to look over her shoulder with a playful smile. \"I promise I'll bring it right back.\"\n\n***\n\n(The story continues in Audrey's Awakening Pt. 05)"
    ],
    "authorname": "Jaymie_dee",
    "tags": [
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/audreys-awakening-pt-04"
}