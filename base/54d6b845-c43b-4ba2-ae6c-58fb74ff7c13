{
    "title": "Photographing at the Pond Ch. 01",
    "pages": [
        "All of my writing is fiction and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. Enjoy!\n\n*\n\nMy brother and I had always been a lot different. Three years older than me, I had thought I might follow in his footsteps but, that wasn't to be the case as I was always an excellent athlete, all sports seemingly coming very natural to me, while he could barely walk and chew gum at the same time. He had tried but just couldn't do anything well in the athletic line. We looked very different too. I always had the build that you'd expect for an athlete, trim and fairly muscular with hardly any excess baggage on my 5'-10\" frame while he was certainly not fat but also not very well defined on his 6'-1\" frame. I was, of course, jealous of his height -- having it would have made my athletic career a little different, but I adapted to what I had and made the most of it over the years. Both of us had kind of sandy colored hair, mine usually cut short and his a little longer, but, I took after my father with dark brown eyes while he took mother's pale blue eyes. I was a little jealous of that too, since the girls seemed to find his eyes fascinating, but girls and the two of us were another story indeed.\n\nJimmy, my brother, from the time he was in the later years of elementary school, always had to have a girlfriend, or at least a girl he could call a girlfriend. He was almost always with a girl and, when he broke up with one of them, which was fairly often, he had to find another almost immediately. It was a kind of compulsion that seemed to possess him and he was only happy or at least somewhat content when he had that girl, or seemingly any girl for that matter. Of course, when he graduated from high school he got a job and immediately married his current high school sweetheart but, similar to high school, that didn't last very long and he was soon divorced and chasing another woman, ready to get married again immediately. When that marriage ended rather quickly in divorce it was like he stepped back and evaluated himself and his life and decided he had somehow missed the mark and he changed totally, not dating or chasing women at all. He bought a little cabin out away from things and seemed to be very content again, but in a totally different way. He became a very dedicated wood worker and built some beautiful things which he shared with the family and which he also sold to locals at flea markets and craft shows in the area.\n\nI, on the other hand, zipped off to college for two years before deciding that was just not my thing so I came home, worked odd jobs to make a little money and bought a camera as I had decided that I really wanted to be a photographer. It just seemed like a good line of work, meeting people some of the time and working by myself much of the time as well. I experimented with pictures and finally saved up enough to purchase a commercial quality camera and some lights which I knew I needed if I was really going to make this my profession. I wasn't a total recluse as I had a few dates with some of the girls I'd known in high school when the opportunity presented itself but the whole relationship thing didn't really fit into my picture of life at the moment. I have to admit that I'm not a bad looking guy so it wasn't surprising that the girls wanted to date me. Still, I usually ran away once they seemed to be looking for something more than casual dating. With a couple of the really aggressive ones I'd found the sex to be very enjoyable but, just as with the casual relationships, I wanted casual sex and that didn't seem to be their intent. I'm not blaming them, of course. We all have dreams and plans and just sometimes the dreams and plans of one crash into the dreams and plans of another and so you back off to avoid any more collisions.\n\nI was really fortunate in my photography business as a couple of my high school friends, who I have to admit, were from some of the more prominent families in town had me do their wedding pictures. I could see that this was my chance to become really established and to build a reputation so I took lots of extra pictures, worked on them extra hard, took great pains with the printing and touching up process which meant that I didn't make a lot of money on those two jobs. However, the pictures were shared with friends, they showed up here and there, I used some of them to advertise the business and to decorate the little shop I'd been able to rent and, before I knew it, business was good and I was busy, very busy indeed. I also picked up a lot of business through family photos and children's stuff too as I seemed to have a way with the little ones and they liked me rather than being afraid of me so the pictures came out very well.\n\nOver the next couple of years I had about all the business I could comfortably handle. The other photographer in town and I had kind of split the senior picture business at the high school, using a common format for the school yearbook and letting the students and family choose which one of us to use. We furnished a picture that the student chose for the yearbook and then sold packages of photos to the family of the student. It worked out well for both of us. Plus, I handled all the athletic team pictures and he did all the social event things and we were both happy. When they opened the second high school, he took over doing all their things and I did the same for the old school. Life was good and I was very happy with the way things were going.\n\nOne day I had stopped at our only Panera Bread store for a soup and sandwich lunch and was checking my email on my phone when I saw someone come in who looked very familiar. I watched as she was walking toward me and realized it was Peggy Lambert, or at least she had been Peggy Lambert in high school but, since I could actually see a wedding ring on her finger as she got closer, I knew she wasn't Lambert any longer. She was a senior when I was a freshman and had easily been one of the prettiest girls in the school, and, now probably 30, she hadn't lost that prettiness, just let it mature a little. And, she was obviously headed right for me.\n\n\"Hi,\" she said in a very rich, alto voice. \"You're Larry Baxter, aren't you? Baxter Photography?\"\n\n\"You've got it,\" I replied. \"And, I know you were Peggy Lambert at one time, when we were in high school.\"\n\n\"I thought we had gone to school together,\" she quickly replied. \"And I'm Peggy Hollister now.\" She offered her hand and I stood and shook it.\n\nNot sure why she had stopped to talk to me, never-the-less, I gestured toward to empty bench. \"Join me?\" I offered.\n\n\"Thank you,\" she said, sitting down.\n\nI sat back down and looked at her with, I guess, a slightly questioning look on my face. Obviously she wasn't here to hit on me so I wondered just what was up.\n\n\"I love your photography. So many of my friends have had you take their picture and I've seen them so often. They're so well done, and very flattering as well.\"\n\nI had to smile at that. \"Well, everyone has a certain beauty or grace or mark of character about them. It's my job to find that and bring it out in the photograph. And thank you for the compliment. I appreciate it very much.\"\n\n\"No problem, you deserve it. Actually I was going to stop by your studio but I thought I recognized you when I came in here. I have some photography I'd like done.\"\n\nLet me hear about it, then,\" I encouraged.\n\nShe coughed a little nervously as she looked away out the window for a moment. I wondered if I could imagine what might be coming here.\n\n\"My husband has a birthday in two months and I wanted to do something special for him. We've been married about 7 years . . . \" She paused. \"I've been looking on the internet and had this idea. Have you ever done any boudoir photography?\" Now, amazingly, she was looking me right in the eye.\n\n\"Not exactly,\" I answered, hesitantly. \"Not really anything close,\" I continued.\n\n\"Are you interested?\"\n\nLooking at her and being 99% sure she was going to be the object of the photography, how could I not be interested. \"Very much so,\" I assured her. \"It's an addition to what I do now that I've been thinking about it.\" Not quite true since I had only been thinking about it for about the past 10 seconds but close enough for now.\n\n\"I'd like to surprise my husband with a tasteful book of pictures for his birthday. I think he'd like that.\"\n\nI'd think he was crazy if he didn't like that as she was by far the best looking 30 year old I'd seen for a long, long time. Plus, I was trying to think quickly about just how to carry this off. But, I needn't have worried as Peggy had obviously been doing a little planning herself.\"\n\n\"I've been looking at pictures and trying to decide just what I want and how I want it to look.\" Now she had my eyes again. \"Plus, you're a professional and, even though this is different for you, I'm sure you have ideas and will have more of them as time goes by.\" Then, I thought I could notice a slight reddening of her cheeks. \"I'd kind of like to start very, um, sedately I guess you could say, and then move on to . . .\" Again she paused.\n\n\"More, shall we say, risqu\u00e9 photos?\"\n\nDefinitely red cheeks now. \"Yes, that's it.\" She smiled.\n\n\"I'd definitely interested in this and, since I'll be experimenting and, hopefully building a portfolio, with your permission of course, the cost to you will be very minimal.\n\n\"I'm willing to pay a normal price.\"\n\n\"Don't worry, we can work that out.\" I took a deep breath, ready for a speech that had just popped into my head. That happened to me occasionally and I never knew quite where they came from. \"I know I'm a male and that probably makes things a little more awkward for you but, let me just suggest that you think of me as a life-long girlfriend that you can talk to freely, or even think of it as just talking to yourself.\"\n\nThat brought a little laugh from her. \"I've decided to do this and I'll do what it takes to get it done.\" She took a deep breath. \"I'm not sure what you have in your studio but, we can use my house if you'd like for some of the inside pictures, you know, living room, bed room, etc. And, I was thinking of some outdoors pictures too but don't know where we could do that.\"\n\nNow it was my turn. \"I have a perfect place for outdoor pictures. It has a pond, grass, trees, bare rocks, mud, if you want to get weird.\"\n\nNow she laughed, a warm and comfortable laugh that made me smile along with it. \"Sounds perfect. Are you busy now?\n\n\"Busy with this new venture.\"\n\n\"Okay then. I have already picked out a few things that I want to wear but, I'm just not sure and think I should leave some of it to you, if that's okay.\"\n\n\"I know a couple of photographers who do this all the time so I'll talk to them. And, if you don't mind, I'll probably pick up a few things for just-in-case.\"\n\n\"You don't need to buy clothes -- just tell me what to get and I can pick them up.\"\n\n\"It'll be easier if I do it and then I'll have them on hand for the future. Once I get started in this I expect it'll go on and grow. I may have to pay you a commission for helping me get started.\"\n\n\"We'll have to work that out,\" she laughed.\n\nI dug in my pocket and found a piece of paper. \"You have something to write with? I need your sizes so at least what I get will fit right.\" My mind was thinking that maybe I would buy a size smaller but I had to stop thinking like that. She took a pen from her purse and wrote down a bunch of sizes, way more than I'd need I'm sure.\n\n\"I just put down every size,\" she said. \"It was easier than trying to think what might be needed.\" I tucked it carefully in my shirt pocket.\n\n\"Since we're both beginners at this, I think it might take more than one day.\" She looked at me for a moment and nodded. \"So, if you can, let's start day after tomorrow.\"\n\n\"How long do you think it might take, if we have more than one session?\"\n\n\"I'm open to taking as long as it takes,\" I said and her eyes widened. \"Don't worry, this is just like a photography class or seminar that I take and it's not going to cost you much, except for a few supplies maybe.\"\n\n\"But, this is your job and how you make your living.\" Her voice trailed off as I was sure she wasn't sure just what to say. \"I don't want to impose or take up much of your time.\n\n\"No problem, and,\" I quickly replied, \"if this goes well, this kind of work will certainly add to that living.\" I wasn't just saying that either as I knew this could be a lucrative addition to my photography.\n\n\"Okay then, day after tomorrow.\"\n\n\"At 9:00 am. And, I have someone who is fantastic with makeup if you'd like them to help out.\"\n\n\"No thanks. I don't think I need anyone else around, at least for the first day.\" I decided I'd have Linda there anyway, if she could come, just in case.\n\nWe shook hands again and she left and I couldn't help but smile. This could be a very interesting bunch of sessions.\n\nI stopped by the studio as I had two mothers coming in with children for birthday shoots which went very well and both moms were extremely pleased with the pictures I showed them on the computer. I had a break next so I took my little piece of paper and headed for Victoria's Secret. I didn't think the VC models worked in the stores but that sure appeared to be the case here. Blond, very pretty and very nicely dressed in a classy but sexy way, she greeted me when I came in the store as I appeared to be the only customer right then. I explained what I was doing and showed her the little paper, asking for any suggestions she might have. She questioned me about what the limits might be regarding model exposure and the like, which got my brain racing at near light speed of course, but I tried to describe what I thought Peggy's limits might be and she went to work. I explained that Peggy was a 30 year old wife and mom and probably didn't have a lot of exotic things to wear but neither did I want to spend a fortune -- maybe three or four items.\n\nShe asked me a few questions about Peggy and soon came back with a red bra with some carefully placed lace, a pair of red bikini style panties that seemed to have several strings and not much material to them and a pair of nearly transparent white pajamas, the bottoms again very small and the top sleeveless with scooped back and front, accented with lace. I thanked her for her help, hopeful that I might be back to see her again, paid and headed back to the studio for the last two appointments of the day.\n\nAll too quickly but taking forever, the day after tomorrow finally came and, on that day, 9:00 am also finally arrived. I was up at 6:30 and in the studio by 7:00 getting things ready even though I wasn't quite sure what I was getting ready for. Linda got there a little before 9 and was ready to help out if needed. But, at 9:01 the front door opened and Peggy was there, dressed in a very sharp looking black business outfit, with a tight black skirt, black stockings and red high heels. I was looking forward to the day ahead. Yet, she was shaking her head.\n\n\"So,\" I ventured, \"you look a little unsettled.\"\n\n\"Well,\" she began, \"I had decided we could start the pictures with me in this very proper suit, but the more I thought about it driving over here, the more I realized that was silly as him seeing me like this would not be surprising or . . . tantalizing either,\" she said grinning. \"So, I think we can just start with the regular boudoir pictures.\" Then she paused and looked me in the eye. \"I've decided that, while we're taking these pictures, you're just going to be a machine taking pictures. Since you're a machine and not a person,\" she took a deep breath, \"I can say what I want to and you won't react like a man but just like a machine that's taking pictures and doing exactly as it's instructed to do.\" Another deep breath. \"At least we can start that way.\"\n\nI smiled but I did appreciate her nervousness and her way of handling it seemed very original. \"Sounds perfect,\" I replied. \"And, I do have Linda, the makeup lady here if you'd like to have her help out.\n\n\"Sure, why not,\" she shrugged. Linda asked her a few questions about the look she wanted, what she was expecting, etc., then told her lshe'd like to try something. She got her makeup kit, did some magical things with brushes and pencils and other stuff that I didn't understand at all, then got a mirror and let Peggy have a look.\n\nA smile slowly crossed Peggy's face and she looked over at me. \"Did you say she was a magicial or did I just pick that up from looking in the mirror?\" I smiled back and Linda blushed a little. An already very pretty lady now looked even better which I hadn't imagined possible.\n\n\"I'm ready to get started if you are,\" she said, \"unless you have something you want to say too.\"\n\n\"Just this, I guess,\" I said, \"that we're both new at this so we'll play it a little by ear as we go and see what happens. You know what your husband likes and you know what you can do. So, to start I'm going to let you lead. Some pictures I think we can carefully pose and take. Other times I'll just be clicking away. Sometimes it's surprising what you get that way.\" I gestured toward the door leading out of the general studio area into my living quarters which was a fairly small lounge/living room area with a kitchen area in the corner and a separate bedroom which was actually decorated very nicely if I do say so myself. I had set up some lights in the bed area as I had figured this was where many of the pictures would be taken.\n\nAs we walked into the bedroom she began taking off the business suit, laying the jacket carefully on one of the chairs. Then, she carefully unbuttoned her blouse and slipped it off, laying it on top of the jacket. That revealed the lacy red bra she was wearing and lots of nicely tanned skin. Without pausing she unbuttoned, then unzipped the skirt and slid it off to join the other items on the chair. This let me see the red bikini panties she was wearing, not quite as brief as the ones I had purchased, but very nice indeed along with the black hose that stopped at mid-thigh and, of course, the red heels. Now she stood there, at about 5'-8\" and with the three inch hells close to six feet tall, dark brunet hair to her shoulders, lots of tanned skin and legs longer than I'd expected and I knew I was going to enjoy this, even if I was just a machine.\n\n\"I've fixed the tan lines on the front but not the back,\" she said, turning her back toward me. Sure enough, the panties she had on were clearly a little smaller than the bikini bottoms she usually wore in the sun. \"I have some concealer and a little brush. She dug in the little sack she had brought and handed me a little container and a brush. \"Be sure you get it all,\" she added which I appreciated as this would be very interesting. Since I was a machine, I opened the container, put some of the concealer on the brush, and very carefully put a finger under the edge of the panties and lifted, brushing the lighter skin with the brush until the color difference had disappeared. I probably brushed a little long than necessary but, as I was doing the same to the other leg I couldn't help but remember how, as a freshman in high school, I had had sat in the library ogling the senior, Peggy Lambert, who was in there the same period I was, Linda came in then suggesting that she could finish up with that. I had anticipated my finger lifting the leg of her bikini underwear but that wasn't going to happen now.\n\nNow Peggy took a deep breath. \"Ready?\" she asked somewhat expectantly.",
        "Camera in hand I flipped on the lights to a little start from Peggy, but she went straight to the bed. \"Go ahead and just be sexy, Peggy,\" I said as she climbed on the bed. \"You move and I'll take pictures.\n\nShe began to move and I started taking pictures but it was really hard to concentrate as Peggy Lambert Hollister needed no coaching at all to be sexy and I was instantly jealous of her husband. She squeezed her arms together and her 36C's looked like they might burst right out of that red bra. She lay on her back, arms out to the side, then squeezing those breasts with both hands. The camera was clicking away relentlessly as she turned to face away, the globes of her ass gleaming in the light, the little strap of the panties doing its best to squeeze between those globes. Sometimes she looked away from the camera and other times she looked directly at it with some of the most sensuous looks that I'd ever seen. If her husband didn't like these pictures I think I'd have his testosterone level checked. And, we were just getting started.\n\nSuddenly she stopped moving, slid her legs around and sat on the end of the bed. Another deep breath and she said, \"Well, what do you think?\"\n\nHonesty is the best policy so I said. \"I think there are some very good pictures in this camera because, you're a very sexy poser.\"\n\nHer cheeks reddened just a touch. \"Thanks,\" she replied gently, \"and you should know that Steve will get double enjoyment from these. First, he'll be excited seeing and thinking about me posing and second,\" she looked me straight in the eye, \"he'll be excited by knowing that another man was seeing me doing the posing and was taking the pictures.\"\n\nAll three of us actually chatted for a few minutes while she rested and she seemed much more relaxed. We were ready to get started again and as she stood to begin she said, \"Whether it's true or not Steve says my breasts are my best asset so, if you can think of any ways to highlight them just let me know.\"\n\nI could sure think of at least one way to highlight them but I wasn't going to suggest that quite yet. So I replied simply, \"You're doing a pretty well without any help from me but, before we start again, let's just pose some pictures on the bed. She lay back down and I posed her as provocatively as I could with absolutely no hesitation on her part. When I was satisfied with what we had she stood up again and began moving and posing and, of course, standing, her long legs were highlighted to a large extent but she was able to bend over and make her breasts, hanging there nearly exposed, very enticing. Also, I was hoping that my pants were doing an adequate job of hiding the erection that no amount of my thinking could prevent from happening.\n\nSuddenly Peggy was standing there, her back to me, not moving and I realized she was thinking, perhaps debating and, I was exactly right. Slowly she reached around behind her and unfastened the bra and tossed it aside, out of the pictures. I started taking photos of that smooth and now bare back as her arms went out to the side and were slowly raised over her head. Then, they moved down in front of her and I could tell she was cupping her breasts, one in each hand. Now she twisted to one side and then the other, the sides of those breasts bare and captured by my camera. Now she dropped her right arm to her side and I could see her move the left one across. She lifted her right arm, hand to her head and twisted sideways again and I could see the whole side of her right breast as she had two fingers covering the nipple. Then she lay down on the bed, the fingers covering each nipple and I was kind of amazed because those breasts hardly flattened at all. A minute or two of that and she stood up, looked around for a moment and spotted the discarded bra.\n\nHands on her breasts, she walked over to the bra and, back to me, bent and picked it up and put it on. As she was fastening the little clips in the back she glanced to her left and our eyes met in the mirror and she immediately realized that it was not only her eyes that had met mine in that mirror. She turned and, surprisingly to me, smiled and then I saw her eyes drop a little lower on my body. Her smile broadened and she said, \"I guess you aren't totally a machine are you.\" I went ahead and glanced down and the tent that had formed in my pants was hard to miss. I wasn't sure how to reply, so I didn't.\n\nShe sat down on the end of the bed and her legs were spread enough that I could see the dark spot against the brighter red of her panties. So, she was enjoying this shoot along with me. And, she was certainly looking much more relaxed.\n\n\"So, did you get to the store to buy some things for today?\" She was smiling again. I nodded, went out to the desk in the other room and returned with the little sack. I decided the best plan was to just hand it to her. She took it and looked inside, pulling out the red bra and panties. \"Whoa,\" she said. These are a little smaller than anything I have but,\" and she looked up at me, \"we might want to try these later and see how those pictures turn out.\" She laid them on the bed beside her and returned to the bag. She took out the white top and bottom and looked at them. She quickly stood up and slipped the top over her head and smoothed it along her sides. Then she reached up under it and removed her bra. She looked at me and I turned my back, heard some rustling and then she walked around and stood in front of me. The top was not quite transparent, more like translucent, but what the eyes couldn't quite make out, the imagination could easily fill in. And, her shoes and the black hose were gone too.\n\nSo, we took some pictures in that outfit. On the bed, on hands and knees facing me, she bent lower and lower as I clicked the camera. As she bent, more and more of the pale skin of her breasts showed. I let her bend just a little lower than I should have, of course, until her nicely erect nipples came clearly into view and after a few clicks I cautioned her to stop. A few more sensuous shots and we stopped again and I had an idea. I checked it out with her and, not surprisingly now I guess, she was all for it. I had her stand, hands behind her head and turn her head with a seductive look toward the camera. Then I took one of my lights and positioned it on the other side of her and directed it so that it would shine through the flimsy top. I walked to the other side to look and, sure enough, shadowed and outlined against the white material was her breast, erect nipple included. I took several pictures, having her turn slightly one way and then the other to get the best effect. When I was finished I showed them to her on the camera viewer and she nodded.\n\n\"Steve will like those,\" she said gently. Then she turned to me and smiled. \"You're getting to see a little more of me than I had planned but I think Steve is getting some good pictures so I don't mind. You said you had an outdoor place to take pictures too, didn't you, a pond or something?\"\n\n\"Sure do. It's a beautiful place.\n\n\"If it's not imposing on your regular business, why don't we go there and take some more pictures if that's okay with you. I'm kind of into this now and we might as well keep going.\"\n\n\"I don't have any appointments today so that's fine with me.\"\n\nNow I could read all kinds of things into that last thing she said but I was doing my best to contain myself and be totally professional. But, this was Peggy Lambert, who I'd ogled in the library and fantasized about just a little that freshman year in high school so I wasn't going to miss this chance for the world. She headed to the rest room to get dressed and I grabbed my cell phone.\n\n\"Jimmy,\" I said quietly as my brother answered. \"You remember Peggy Lambert?\"\n\n\"Hell yes, I do. How could I forget her? Why?\"\n\n\"You know the place in the woods with the pond? Well, be there in a while with your binoculars, hidden somewhere, and you might see something you'll enjoy. Gotta go,\" and I hung up. Not very professional but I tried to help out my brother when I could.\n\nShe came out of the rest room, dressed and looking like she did when she had come in the front door.\n\n\"You want to follow me out there in your car?\"\n\n\"Can I just ride with you? My sense of direction is horrible and I'd probably end up lost.\"\n\nSo, I put the Closed sign in the window, locked the door and she climbed into my car, with my little sack in her hand and we headed for the woods and the pond. I felt a little ashamed about telling my brother to get there and spy on us but, nothing would come of it except he'd enjoy whatever he saw. Linda had some other things to do so she didn't go with us.\n\nWe hadn't gone very far when she said, \"By-the-way, I took the liberty of wearing the bra and panties that were in your sack. I think Steve will like them a lot.\" I smiled and glanced over at her and, from the look on her face, I knew she was saying that someone else besides Steve would enjoy them too. And, as I pictured them and her, I knew she was right.\n\nWe did chat some as we drove and she was very candid with some of the things she was saying which pleased me no end. Then we were at the edge of the woods and pulled off onto a little dirt road that really didn't go anywhere but was a place to leave the car where it was actually unseen from the road. I had forgotten that we'd have to hike about a quarter of a mile and all she had was the high heels but, trooper that she was, she simply took both them and the hose off and started off bare foot. I knew the path back to the pond was almost all grass so it shouldn't be too bad. I had the big camera bag over my shoulder so I was plodding along and she would slip up beside me and hit me with a shoe and then dance away. She really did seem to be enjoying just walking through the woods. And I was enjoying walking and thinking about what was to come. Little did I know that my thoughts weren't anywhere close to what was actually coming.\n\nWe finally came to the pond and she walked around exclaiming how beautiful it was and what a perfect place to just get away to. It was very nice for sure. The pond wasn't huge at all, maybe a half acre but it was stream fed so the water stayed fairly clear and fresh, and a little cold as I remembered from the past. Not sure quite what to say I got the camera ready. Peggy returned from her wanderings and, without hesitation, took off the jacket, blouse and skirt and sat on a rock and put the hose and shoes back on.\n\n\"You're staring,\" she said to me, laughing, and she was right.\n\n\"Sorry, hard not to,\" I replied very truthfully.\n\n\"I take it as a compliment,\" she added. The tiny bra and the very skimpy panties left very little not exposed and, as she turned to lay her clothes very carefully on a large rock I could see a string around her neck, another crossing her back, a third low around her waist and a forth disappearing in the cleft between her butt cheeks.\n\nNow I heard her laugh. \"Nothing much on the backside but me is there?\" she said without turning around.\n\n\"I think Steve will like it.\" I said, trying to recover.\n\nShe had certainly gotten very comfortable with me very quickly as she said, \"If I'm moving around and posing here, things are going to occasionally pop out of this little bra so just ignore it while I put them back where they belong.\" She raised her eyebrows and gave me a look. I hoped she was right, about the popping out at least.\n\nShe began posing and I was shooting, she lying on the grass, peeking around a tree, sitting on a rock, stretching backward on a fallen tree trunk. Lots of very good pictures I was sure. Actually, with all the clicking I was doing I had hundreds of photos already and it was going to be quite a task to select the best ones for Steve's present. Then she walked over to where her clothes were laying, along with the little bag.\n\n\"Maybe we should do some with this little white thing. Plus, I'll be barefoot with it which is more appropriate for out here.\" With that she stood right in front of me and unfastened the red bra and tossed it onto the rock. Those shapely and still perfectly perky 30 year old breasts with the dark and nicely erect nipples were staring right at me. She slipped the white top over her head and the slid the little panties off, showing me very clearly her shaved mons and just the hint of a slit that disappeared between her legs. She did bend and slip the white bottoms over her slightly raised feet so I didn't get the full view. But, what I had seen was fantastic. So, we took more pictures in that outfit, with bending over and no hesitancy about letting me see her nipples. She waded into the pond, exclaiming about how cold it was as I kept clicking away. Some more poses and walking around and she was in water just a little over her waist.\n\nSlowly, in profile to me, she began lowering herself into the water, and I couldn't click fast enough. I flipped the camera to auto so it would take photos in rapid succession without a need for me to click as long as I held the little button down. Quickly her head was under the water and she raised up, sweeping that dark and now very wet hair away from her face. Then she was standing again, only the flimsy white top now clung to her like her own skin and was more transparent than ever, the dark nipples showing clearly and more erect than ever in the cold water. In addition, she was covered with goose bumps on her bare arms. She turned directly toward me, so both nipples were clearly in view. Click, click went the camera.\n\n\"You think Steve will like that,\" she said with a sly smile on her face as she climbed out of the water. I wondered where she had learned to be so sexy. She sat down on the rock next to her clothes, that transparent top still clinging to her body. I realized she was totally wet and we had no towel. She stood up, turned her back to me and took the top off. She wadded it up in her hands and wrung it as hard as she could, then carefully put it back on. Somehow, when she turned around, it didn't look much different. Suddenly she was quiet, with a look on her face that puzzled me. She was obviously thinking of something which got my mind to racing, but, even in its racing, it wasn't close to catching up with her.\n\n\"You know,\" she began very decisively, \"when I had the idea for these pictures I searched online to get an idea what they might look like, and then I looked at some other things as well. You know how lots of those sites have links to other sites and stuff like that. I saw lots of pictures that weren't exactly boudoir pictures. Lots of very pretty women with very nice figures and not many clothes on at those sites.\" She paused and took a deep breath and I wondered just where she was headed. \"Some of the sites were supposedly pictures that husbands had posted of their wives, or sisters-in-law, or neighbors or who knows what else.\" She was biting her lower lip for a moment. Lots of them had no faces showing or faces blurred out or blacked out even.\" She stood up and walked around for long seconds, the wet bottoms clinging seductively to her butt cheeks. Then she faced me with a determined look on her face.\n\n\"I want to do that,\" she said almost defiantly. \"Will you take the pictures and post them and then tell me where they are?\"\n\n\"Wait,\" I said, totally not believing what I was hearing. \"Slow down a little.\n\n\"I don't want to slow down because I might turn around and go back and I don't want to do that.\" She quickly pulled off the white top and slid out of the still very wet bottoms. With the wet hair, water still clinging to her body and the way she was standing there, thrusting herself toward me she was totally breathtaking. This sure hadn't been my plan when I agreed to take those pictures for her husband, but it was too late to stop now. Plus, from the look she had on her face, I could tell that she knew she had me.\n\n\"Take some pictures here while I dry out, then we can go back to your studio and take more.\"\n\n\"You're sure?\" was my feeble response. She held her arms out, showing me her body. I guess she was sure, at least for now.\n\nI changed the memory card in the camera and, for 30 minutes or so, we took some seductive, erotic and very unexpected photos of Peggy Lambert Hollister. Finally, she put on the skirt, blouse and jacket, picked up the bag that now held two bras, two pairs of tiny panties, hose and shoes. As I walked along with this very distinctively dressed woman, except for the bare feet of course, I couldn't believe what I'd just seen. She was certainly one gorgeous 30 year old.\n\nJust before we climbed into the car and started back for the studio I received a text message that said only THANKS in all capital letters. I guess Jimmy had made it to the pond. Once more, I just wasn't quite sure what to say, but, she was having no trouble filling the silence.\n\n\"On one site, there were pictures posted that were called something like Mr. sombody's wife and she was one beautiful woman, at least figure-wise as you never saw her face. There were four or five posted every couple of days. And, I'll take my rings off so they won't be recognized and I know you can touch up any blemishes I might have.\" I hadn't noticed any yet but then I hadn't been doing that kind of checking either. \"Honestly,\" and she put her hand on my arm, \"I think my figure is still pretty good for my age and seeing those pictures online made me kind of want to flaunt it, even if it is kind of in secret.\"\n\n\"Speaking as your photographer, I have to agree with that. And again, you're sure?\"\n\n\"I knew there was a reason for that working out that I've been doing and now it's going to be paying dividends, even if I'm the only one to know about it.\" I nodded. She talked pretty continuously all the way back to the studio. She was obviously hyped up thinking about what she had done and was going to do. Once back and inside I left the Closed sign in place and we went to my rooms and, before I could get the camera ready she was naked again. She got a brush from her purse and worked on her hair a little, checking herself carefully in the mirror, that same mirror that had given me the first view of her nipple which I thought would be my big thrill for the day. Silly me.\n\n\"Okay,\" she began, \"these will be the Mr. Martin's Mrs. photos. Some of those I saw had bra and no panties, panties and no bra, just hose and heels, and some nothing.\" I could see that I wasn't going to have to do much coaching here, as if I had any coaching insights. Oh, I surfed porn occasionally but I was looking at overall effect and not so much at details then. I might have to change that a little in the future.\n\nSo, she put on the hose, heels and the tiny red panties I had gotten and we took pictures, from many angles, even with me lying on the floor. She played with her breasts, pulled on the nipples, put her hand in the almost-not-there panties. Then, she put the little bra on, took the panties off and we took more, from all those angles again, then more with both bra and panties off, with lots of playing with that now obviously very wet place between her legs and next with the hose off and just the heels. She decided that the heels should be a \"trademark\" for Mr. Martin's Mrs. so she kept them on. I clearly wasn't used to taking pictures like these and I was suffering a good bit which she occasionally observed and finally commented that if I wasn't like that there'd be something very wrong with either her or me and since neither was true, I had to survive the erection that threatened to rip a hole right through my pants.\n\nAfter a couple of hundred pictures, she decided that was enough for now, and I began to salivate I think when she said, \"for now.\" She put her own bra and panties on, the blouse, the skirt and the jacket and was ready to head for home.\n\nShe stuck out her hand and I shook it. \"I know I surprised you today, but I just felt like I could trust you",
        "and so . . . \" She smiled at me. \"I'd give you a kiss on the cheek but,\" and she looked down again at the tent in my pants, \"it might not be safe.\" We both had a good laugh at that.\n\n\"I'll try to have both sets of pictures ready for review the day after tomorrow. We can do your husband's present first.\"\n\n\"Sounds good,\" she replied. I'll call to set up a time. I think Steve has a trip scheduled so I should have lots of free time.\" She gave me a little wave and was gone.\n\nThe next day I was in early again, because going through all those photos was going to be a challenge. I had a setup in back that allowed me to use my computer to put the photos on the flat screen TV in my room so I could get a good, large view and see lots of details. I did have one appointment, a bride was coming in for some pre-wedding pictures and so I had Linda there to help out. She was about 25 and worked at one of the big department stores in town in the cosmetics department and had lots of training in makeup and seemed to really have a knack for it. I was in the back rooms when both Linda and the bride came through the front door. Linda said hi and that she'd be right back which meant she was headed to the rest room. The bride apologized and said something had come up that she really needed to do and could she come back tomorrow. I told her that would be fine and she apologized again, then headed quickly back out the door.\n\nI went to the back room where I found Linda, looking from the TV to the computer. \"Wow,\" she said. \"Did you take these too?\" There was no sense denying it so I shook my head. I had been looking at the Mr. Martin's Mrs. group so she was seeing some pretty good shots. I sat down in my chair while she continued to look. I knew I could trust her not to spoil things. I also knew that she kind of had a crush on me if adults can have crushes. She came by the studio to check on things when there really wasn't any need to. She hung around and the way she looked at me told me a lot too. Being about 25, she was appealingly pretty without being beautiful, had a good figure without being modelesque, was sweet without being syrupy and had this long and glistening ash-blond hair that made her very alluring as well as amber eyes that were very fascinating to look at.\n\n\"I could pose for you like that,\" she said suddenly, but very softly without looking at me. She flipped through some more pictures, those where Peggy had on only the shoes. She turned and faced me and began unbuttoning her shirt.\n\n\"Linda, wait,\" I said as she bent forward, put her hand on my mouth and shushed me with a finger to her lips.\n\nShe slid the shirt off and tossed it aside. What had suddenly happened to my life? It was strange but I couldn't help but enjoy it. She reached behind her and unfastened her bra and tossed it aside with the shirt. Her skin was pale and flawless and those breasts that I had never particularly noticed before were very noticeable now, wonderfully shaped and pointed. She pulled on the nipples, stretching them out. \"See,\" she said, \"mine can look like that too.\" Then she unfastened the skirt and slid it off. She kicked her shoes aside and was now standing there in a pair of white thong panties with about 98% of her body visible as she turned 180 degrees, paused to allow me to fully appreciate her nearly bare ass that was right in front of my face, then turned another 180 degrees so she was facing me again. She hooked her thumbs in the waist band of the thong. \"Should I take these off too?\" she asked breathily. I couldn't answer. \"Give me your hands.\" I held my hands out, helpless now as that very nearly perfect body had me totally under its spell. She took my hands and hooked the thumbs in that waist band. She bent over and kissed me. \"Take them off,\" she said. I was nearly numb and she kissed me again, her tongue licking my lips as she did. \"Take them off,\" she repeated. Another kiss, this one a little more intense as her tongue parted my lips and she moaned ever so softly but it was more than I needed and I slid the pants down her legs as far as I could, not able to see the results with her kissing me, but I felt her step out of them and knew she had kicked them away.\n\nSlowly she pulled back and stood there, letting me get the full effect of that naked body placed very carefully in front of me. With Peggy's body in full display on the flat screen and Linda's live and breathing right here in front of me, it was nearly overwhelming as I had never imagined that Linda could look quite like this. She took a couple of steps forward so that she was straddling my legs. That delightful blond muff was just below my face and she raised up on her tip toes and thrust it forward. Yesterday it had been, look but don't touch. Today I was looking and then I was touching. My hands went behind her and squeezed those soft and warm ass cheeks. I rubbed their smoothness, spreading them apart. I rubbed the softness of her back but could feel the muscles underneath. Then around to her stomach, her navel just the right height for my tongue. I felt her muscles clench at the touch of my tongue. Then I was rubbing higher until those two beautiful and delicate breasts were being squeezed and fondled, the nipples pulled, rolled, and rubbed, their hardness delicious to the touch.\n\nSlowly my hands moved down again, to her stomach, her flat belly and into that delicate fur. One finger slid down between those legs as she spread them just enough. It sought the wetness, found it and probed it, sliding up and down the length of the entrance to her womanhood. Not able to stop any longer it pressed into that warm and slippery love tunnel to a long gasp from Linda. Slowly in and out and in and out, her hips moving ever so slightly with the rhythm. On the last out stroke it slid upward, under the hood and pressed against the soft nub of her clit to an even longer gasp and groan. Not able to contain it any longer I lowered my head and began using my tongue where my finger had been and I could feel her fingers in my hair, holding me in place, not that I needed to be held in that musky and delicious place. Now my hands parted her and held her open and my tongue flicked away to more gasps and groans and movement of hips. With her held wide open, my lips could work as well and they slid over that nub and sucked on it, pulling it out for the tongue to rub it, her moans getting louder and longer until there was one long vibrating moan as her hips began to buck to gasped out \"yes, yes, yes, yes.\" It lasted for long seconds and I didn't stop until her begged \"please, please\" hit my ears.\n\nFingers still locked in my hair, she raised my head and kissed me, tasting her own juices as she did, her tongue probing and dancing, tangling and twisting with mine as I explored her mouth and she mine. Then, very quickly she dropped to her knees and began fumbling with my pants, working to unfasten and unzip them. I lifted my hips to help and she slid them down and pulled them off over my shoes, followed by my boxers. She took hold of my very stiff cock and looked at it for long seconds, then looked up at me with a wondrous smile that melted any resistance that might have remained in my now very inflamed body. She held it in both hands and moved them gently up and down and it was my turn to grunt and groan at the ecstasy that raced from my head to my toes but settled mostly where she was holding, all from that very simple act. I knew what was coming next and I hoped I wouldn't explode into flames at her touch. As her lips touched the head, then moved down its length, my head went back and it was my turn to lock my fingers in her hair, that hair that began to bounce up and down, her tongue working the length of the underside, her cheeks caving in as she sucked hard, the head bumping the back of her throat to the smallest gagging sounds.\n\nI watched now, as it glistened with her saliva and then totally disappeared, only to appear again, seemingly wetter each time until suddenly she stopped, reached up and grabbed my arms and fairly dragged me out of the chair and onto the floor. She quickly hovered over me, looking at me with a look I'd never seen before on anyone, let alone Linda, and then, swinging a leg over to straddle me, she guided that erection home to a place it longed to be as she settled down and hungrily began to move her hips up and down and in circles, pumping me and rubbing me at the same time. My hands automatically went to those breasts, bouncing above me and I squeezed and kneaded as I felt myself tensing, my hips thrusting upward in preparation as finally, deep grunts came from far down as I emptied myself into her time after time to her accompanying little squeals of joy.\n\nMy eyes were closed as her hips came to rest and she bent down, her face an inch above mine. \"I've wanted that for a long time,\" she said, still breathing hard. \"And I think you have too.\"\n\n\"I think you're right,\" I replied with equally heavy breathing. \"I just didn't know it.\" She kissed me again, very gently this time, our lips lingering for long seconds. \"You hide yourself well. I had no idea what was . . . well, underneath.\"\n\n\"I hide myself so only special people can see,\" she said, teasingly.\n\n\"So, I'm special people then?\"\n\n\"If you don't know that now, I think you need a brain transplant.\"\n\nAs I looked over her shoulder, Peggy Lambert's naked body still hovered above us. I'm sure Peggy knew that, once her pictures were on the internet, some sort of sex would happen. She just didn't know it would be so soon and so close to home.\n\n\"Were you just talking about wanting to pose for pictures like that? \" I said, gesturing.\n\n\"I saw some that were in the woods somewhere. I'd love to do that.\"\n\nObviously, there was a demand for those type of pictures, and it suddenly seemed like a good supply of people willing to pose as well. Very perceptively, Linda told me she'd not say a word about the pictures she had seen but made me promise that I'd photograph her one of these days at the pond. I agreed.\n\nTwo mornings later, after a call to confirm it, Peggy came through the front door, ready to pick the photos for Steve's birthday book. She was dressed quite differently and seemed to be very businesslike today. Although I had a viewer in the regular studio, I thought it best to check these photos in the back room so I had the computer hooked to the flat screen again. I showed her how to scroll thorough the photos and suggested she note the numbers of the pictures she really liked and then we could make a final decision. She said she'd like to have maybe 30 of the prints in the final book as I heard the front door of the studio open and the sound of children's voices. I had an appointment.\n\nSurprisingly, the kids were great, smiling when they should, holding still when they should and mom looked totally proud. When the pictures were done we went to the viewer and mom picked out a good sized group of pictures she liked, ordered several of each to distribute to family and friends and left, satisfied with the whole process, as was I. I'd make a tidy profit from those pictures. Then I hurried to the back room to see how Peggy was doing. She had narrowed her choices to about 50 and I suggested she pick the one she liked best and the one she liked least, then fill in the middle and finally get it down to 30. She agreed and, not surprisingly the one she liked best was of her coming up out of the water at the pond, head back as she swept the wet hair away from her face and that white top glued to her body like a second skin, breasts totally displayed with dark areolas clearly showing through the material and nipples hard and pushing erotic bulges in the gauzy cloth. She kept looking and selecting and finally got her choices down to the 30 she wanted.\n\nI moved the 30 to a separate folder on the memory card, happy myself with what she'd chosen and equally happy with the ones she hadn't chosen. She quickly opened her purse and handed me three one hundred dollar bills. \"A down payment,\" she said, smiling at me. I realized that, actually, a session like we'd had would normally cost many hundreds of dollars but I was content with both the session, which I'd enjoyed no end, the three hundred dollars and, the bonus the pictures had brought in that very wonderful time with Linda.\n\n\"Thanks,\" I said. \"I'll get a very appropriate album and print the pictures and get them to you before Steve's birthday.\"\n\n\"Don't do anything to fancy with the pictures,\" she cautioned. \"They're not like a wedding album that we'll be showing to all our friends.\" She laughed as she said that. \"They just need to be pictures he can enjoy looking at.\"\n\nI was sure they would be pictures he'd enjoy, but I wasn't quite ready for what she said next. Then she showed me four other pictures she had picked out, very nice and tasteful boudoir pictures. \"If I can get copies of these, I'll show them to a select group of my friends who I think might like to have some similar pictures for their husbands.\"\n\n\"Thank you,\" was my simple reply and then she looked a little more pensive.\n\n\"I know my husband,\" she began, \"so I kind of know what's coming. He'll love the pictures and I told you before he'll secretly love the fact that another man was seeing me in those skimpy clothes and taking those pictures. He'll wait a while and then suggest he'd like to see more pictures, maybe with even less clothes, which means naked, of course. And he'll get a double thrill knowing that another man was seeing me naked. He's tried to get me naked in front of other men before but I wouldn't do it. And, based on some of his talk when we're ummm, well, having sex, I know he fantasizes about seeing me with another man. Not real hardcore or anything, just another man looking and maybe touching a little.\" She paused and looked at me for long seconds. \"So, we have lots of pictures to fill in the naked part, for sure. But, if you can handle it, be ready for the other at some time. And, the man won't be you,\" she added, giggling. \"I'll just have to figure out something for that when the time comes.\"\n\nMy mind was racing, listening and thinking about what she was saying. Plus, a little light was blinking in my brain. \"If you're really serious and the time comes, I think I might have a man for those pictures.\",\n\nNow she looked at me really hard. \"I think I can trust you so hold that thought. We'll see what happens.\"\n\nI was game for that and I'm sure Jimmy would be more than happy to help out although he wasn't going to hear about it until the time was right.\n\nTime slipped by and I printed the pictures for Peggy, including the extra four she had requested, and found a nice but not too expensive album to display them. She came in when they were ready and I had her decide what order they should be in for the album, adding a few suggestions of my own based on my experience and also how my hormones reacted to the photos. When it was finished she was happy, thanked me profusely for taking them and for just being who I was. Then I got a very pleasant kiss on the check and an added, \"don't read anything into that,\" comment with a laugh. She left, armed and ready for Steve's birthday.\n\nSince my life seemed to be centered around the day-after-tomorrow it was the day-after-tomorrow that I had agreed to take photos of Linda. She had brought it up again when she was in the studio the last time and, as I was asking if she was sure my mouth was smothered by hers and her darting tongue convinced me that she was sure. She said she'd bring some things to wear and to strip off and I had my little bag, of course. I knew the panties and the nighty outfit would work just fine but wasn't sure about the tiny bra. I don't think she was quite as filled out as Peggy, but not too far off so it might work. I couldn't help pondering what might happen at this session.\n\nThe day before the day-after-tomorrow was a busy one, with several appointments with several families and some senior pictures for the high school kids. I had to work to keep my mind from wandering, thinking about tomorrow since Linda was there, helping with the makeup for the senior pictures. She was excellent working with the kids, joking and teasing and keeping them laughing and in good humor. When everyone had finally left and I was closing up for the day, she just switched her teasing from the kids to me, asking about tomorrow, was I as excited about it as she was, had I been thinking about the poses and clothes she would wear, \"or take off\" she loved to add. As we were leaving to go our separate ways, I got another of those luscious kisses that had me wishing we weren't going off separately, but she had to get back to work for the evening so we each got in our separate cars and away we went, a horn toot for good measure.\n\nThe next morning she was at the studio as I opened the door. She helped get the camera packed up, then ran out to her car and took a large sack out of the back seat and tossed it into the back seat of my car. She was so excited she was nearly vibrating which, of course, had about the same effect on me. We drove to the little parking place by the woods and made the quarter-mile hike to the pond area. She talked the whole time we walked about how beautiful it was. She was very excited. At last we were there and I got the camera ready. When I turned around to check, Linda was casually stripping off her clothes and then dumped the bag of things on the ground behind a big rock. When she saw me looking at her she started toward me, licking her lips as she swung her hips back and forth in the most tantalizing walk I'd ever seen. And, I could see very clearly that she had shaved.\n\n\"Don't you want to start with some clothes on?\" I hollowly suggested.\n\n\"I want to be photographed by a naked photographer,\" she said softly, starting to unbutton my shirt. I knew that if she kept that up there was a good chance of no pictures today so I quickly stepped backward.\n\n\"Pictures first,\" I managed to gasp out.\n\nShe took hold of my shirt and pulled me to her. \"And afterward?\" she questioned in that sultry voice that I had quickly grown to really enjoy.\n\n\"There'll be no stopping me,\" I answered as her mouth tried to swallow mine. Then, a fairly rational thought came to my mind. \"What are you planning to do with these pictures?\" I asked.\n\nIn return I got a smile. \"Those pictures I saw were for her husband, right?\"\n\n\"That and . . .\" My voice trailed off.\n\n\"Then, these are for you and . . .,\" was her coy reply.\n\n\"Mr. Martin's other Mrs.,\" popped into my head before I could stop it.\n\n\"You're very trusting,\" I said and smiled back at her.\n\n\"Obviously.\"\n\nLots of pictures were taken, with Linda in a number of sexy outfits that she had brought in the bag, then many naked pictures as well, and I was amazed at how sultry she was able to look. There were also many pictures taken with her face not showing without me even suggesting it as she seemed to know what might be done with the those photos. At last she went to the pile behind the rock and put on the white nighty top that Peggy had worn so seductively but she left the bottoms lying on the ground. Her eyes almost never left mine as she stepped carefully into the water and moved away from the edge till it was about waist deep. Still watching me she lowered herself very slowly into that still very chilly water, the bottom of the nighty floating out and up as she disappeared. Then, still very slowly she reappeared above the water and my camera was snapping about as fast as it could. As she rose, the white and now very wet material clung to her body just as it had Peggy's. That beautiful ash blond hair clung to her face as she slowly reached up and swept it back and the combination of the cold water and the sensual nature of the picture had her nipples harder than I had seen them before.",
        "She slowly turned her head toward me, water still cascading off her, then reached down and lifted the top off and let it float away on the water. The sun reflecting off the pond surface only highlighted the water glistening on her naked body, goose bumps clearly visible as the camera captured it all. All, of course, except the way I was feeling as I snapped away. As I held the camera aside for a moment the look on her face said very clearly that \"afterward\" was now here. I put the camera down carefully and finished unbuttoning my shirt. Next came the shoes and socks, then the pants and boxers. As I stepped out into the chilly water, a pair of inviting arms were waiting to warm me.\n\n\"Is seeing me naked and taking my picture different than seeing me naked like this?\" she asked, kissing my chest.\n\n\"Yes,\" I feebly replied. \"Just like seeing and touching are two very different things.\"\n\n\"Touching, like this?\" she said, taking hold of me under the water.\n\n\"And like this,\" I answered, putting my hand between her legs and my finger in a much warmer place to her slight grunt and jerk. \"Do that some more,\" I quickly added, rubbing with that finger. \"I love that.\" Her body moved and her throat let out a quiet groan with each rub.\n\n\"Touch just a little higher and see what happens,\" she murmured as her mouth met mine. So I did and now the jerks were more pronounced and the moans louder and longer. She gently licked my lips so I used those lips to grab her tongue and stroked it with mine. Her arms were quickly around my neck as I think her legs wouldn't hold her any longer. My finger kept working and I heard a breathy, \"You know how to make me feel soooo good.\" I could feel her hard nipples rubbing on my chest as her movements became more and more intense. I heard the beginnings of a very quiet, \"oh, oh, oh,\" coming from that mouth that was still against my face and they got louder and louder until finally, one long, \"ooooooohhhhh,\" as her body shook and vibrated and jerked convulsively, nearly dragging me under the water.\n\nWhen she stopped moving I reached under her legs and lifted her, settling her slowly as my extremely hard erection sought its home. It took three tries before it slid from the cool wetness into the very warm wetness of a wonderfully welcoming tunnel that gripped it firmly. Losing my balance a little I slipped into deeper water and found she was lighter there but no less inviting. She was kissing my eyes, my nose, my lips, then all around my face as I rocked her hips back and forth and with every inward thrust she squeezed, releasing me as I moved out only to squeeze again. I had never imagined what this could be like, in the water like this and with someone who wanted it as badly as Linda did. But here I was and I was about to explode and I pumped and she squeezed and now she was whispering in my ear, \"Can you do it, can you make it cum, can you fill me up, I want to hear you, come on let it go, give it to me, all you've got,\" and with that I gave her all I had, over and over and over, grunting into her ear and squeezing her tight again my body. When I was finally finished I opened my eyes to see her rather amber eyes looking at mine, and smiling. \"You're good,\" she quipped, \"best I've ever had.\"\n\n\"Is that a compliment or an admission?\" I asked, drinking in those eyes that were drinking me in as well.\n\n\"This is not my first rodeo, as I think you can figure, but I've never ridden a stallion like you before.\"\n\n\"You're shivering,\" was the best I could reply to that.\n\n\"I have a towel,\" she replied as she dropped her legs and stood up. We sloshed to the dry ground and climbed out of the pond, the sunshine warming us almost immediately. We took turns drying with the towel, got dressed, gathered up everything and headed for the studio. Once there, I put the OPEN sign out and Linda went to the back to look at the pictures we'd taken today. Since no one had come in yet I went too.\n\n\"Those other pictures from the other day,\" she said as she started looking at hers, \"can you tell me about them, and maybe about her?\"\n\nAfter the last few days, and since she was actually my makeup lady and therefore almost an employee, I judged I could share a confidence with her so I told her about the pictures for her husband, then the other pictures that would probably eventually be for her husband and finally the Mr. Martin's Mrs. pictures, six of which I planned to post to the internet tonight. I didn't mention the others she thought might happen as they hadn't happened yet.\n\n\"You've really branched out lately, haven't you.\"\n\n\"In more ways than one,\" I answered, kissing her on top of the wet hair.\n\n\"Are you hoping for more of the boudoir things?\"\n\n\"I'm expecting it since,\" and I paused for a moment but, since I'd shared the rest with Linda, I might as well not hold anything back, \"Peggy took a few of the more subdued and normal boudoir shots to share with some of her friends. I expect I may get some more business out of that.\"\n\n\"And make some money too.\" She tilted her head back and looked up at me. I bent to kiss those inviting lips but she jerked her head away. \"They say it's bad luck to kiss upside down,\" she giggled. \"But,\" and she turned her face toward me and gave me a warm and tender, if a little sensuous kiss, \"I don't want to miss a good chance when it comes my way.\"\n\nContinuing my previous thought I added, \"Yours are free.\"\n\nAs she continued looking through the pictures I could tell she was pondering something. She'd look at a picture, cock her head to the side and look again, then click to the next and repeat the process. I kind of knew what was coming as I had seen it before from others who's pictures I'd take, of course, none quite like this but, never-the-less, similar.\n\n\"You are a very pretty lady,\" I finally said.\n\n\"Are you just saying that or do you really think that?\"\n\n\"You can see the pictures. You see what they look like. You are.\n\n\"But, those others, of Peggy, she's so striking with the dark hair and the tan.\"\n\n\"And you're thinking of her breasts that are bigger than yours.\"\n\n\"I suppose.\"\n\n\"And you're wondering if your pictures were on the internet, would anyone take the time to look at them.\"\n\nShe sighed. \"I guess I'm typical, huh.\"\n\n\"Untypically pretty.\"\n\nNow she stood up and turned around. She stood just inches from my face and I wasn't about to move. \"Do you think I could seduce you before a customer comes through the door?\"\n\n\"We'll only know the answer to that if you try.\"\n\n\"I love a challenge,\" she said breathily as she began kissing me and shedding her clothes at the same time. I loved a challenge too and the risk was more than worth it as the reward would be exquisite. She quickly grabbed my hand and pulled me to the bed, lying down and beckoning. She spread her legs wide and I slipped between them. \"Just a quicky,\" she said and guided me home. Amazingly she was ready for me, wet and slippery as I slid in. It felt so warm and so satisfying just being on top of her and inside of her that I thought I might be able to stay that way for hours. But, she began moving her hips, reminding me of where I was and what I was doing so I began to move too and, our first time in this position, my hips slapped against her thighs as she put her legs over my shoulders. She grunted as I banged away harder and harder and, since I had cum just as hour ago or so, I knew this would last a little longer. I couldn't hold back though as she was squeezing again as if she knew it drove me nearly insane to feel that. Then she whispered, \"It's ready, isn't it. You're going to fill me up again,\" and I didn't need anything more to begin my own grunting as I emptied into her the second time today. She pulled my face to hers and kissed me as I was slowing down as we both heard the front door open.\n\n\"Be right there,\" I managed to gasp out as I jumped up and put on my pants and shirt and jammed my feet into my shoes, hoping whoever it was wouldn't notice I didn't have on socks. As I went through the door into the front of the studio, who should I see but Peggy Lambert Hollister.\n\n\"Hi,\" she said cheerfully. Then more softly, \"You said you might post those Mr. Martin's Mrs. pictures sometime and I was just passing by so I thought I'd stop and see which ones you had picked to post.\" As she finished, Linda emerged from the back .\n\n\"Hi there,\" she said.\n\nLinda replied with a friendly smile.\n\n\"You should photograph this one,\" Peggy said, gesturing and, when Linda's face turned bright red, she looked back at me. \"Good taste,\" she said, grinning broadly.\n\nI knew what she wanted to ask but thought it best not to right now. Plus, when I looked more carefully at Linda, it was obvious she had only partially dressed and those very exquisite nipples had raised rather large bumps in the front of her blouse. Quickly I had an idea.\n\n\"We were at the pond,\" I said, pointing at Linda's still damp hair.\n\nPeggy looked at Linda, then at me and then back at Linda. It was obvious that she got the connection. \"A beautiful and intimate place isn't it?\" she said to her.\n\nLinda's still very rosy face nodded back at her.\n\nIt was obvious Peggy had decided to not hold back at all when she said, \"Is she Mr. Martin's other Mrs.?\" If it were possible, Linda's cheeks got even redder. I put my arm around her shoulder and hoped that might help. But, Peggy sealed the deal when she said, \"Should we all three go back and chose the pictures to post. I could use another woman's opinion.\" She winked at Linda who was now smiling as well."
    ],
    "authorname": "PickFiction",
    "tags": [
        "photos",
        "exhibitionism",
        "photographer",
        "model",
        "boudoir",
        "milf"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/photographing-at-the-pond-ch-01"
}