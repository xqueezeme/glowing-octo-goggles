{
    "title": "Breathless Ch. 06",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\nThe following story is a work of fiction. Any resemblance between these character and events and any real person or events is strictly coincidental . . . and pretty darn impressive seeing as it is a science fiction story. Do not reproduce or copy this story without the consent of the author.\n\nThis story is based in an alternative universe, where history took a different course than the one we are used to. In this world, the creatures which we now believe to be legends have walked alongside man for the duration of our existence. Vampires, werewolves, wizards, witches, sorcerers, and a host of other beings share our world.\n\nThe following story contains, in one chapter or another, lesbian and heterosexual activity in different proportions.\n\n-------------- ----------------\n\n\"What's going on?\" Officer Vladimir Koloff of the Gravestones Police Department asked as Melissa exited the long silver, windowless trailer that Arbiter Sadie Hewitt called home. It had been a bizarre twenty four hours for all those present.\n\nJust twelve hours earlier, Melissa had died. Overall, she was handling it rather well. Before her last breath had been drawn, her frantic lover Mary had gotten a hold of Sadie and convinced her to save Melissa by Turning her. Sadie had laid with her new daughter below the earth until the sun had risen and set. No one knew what happened in that grave except for Sadie and Mel, and neither of them were talking about it, but Melissa had emerged far more confident and capable than a newborn vampire should. \n\nThings had gone to hell in a hand basket quickly. Vlad had taken over control of the Northwestern werewolf pack in a bloodless coup and brought a number of them to Mary's house to guard the resting vamps. Then they found out that a friend and ally, Terrence McDermott, had been killed for the same reason that Melissa had . . . they had crossed Lord Frost. There would be no second chance for Terrence . . . his second chance had already expired. But in some ways, Frost had failed. Melissa had survived, in a fashion, and now everyone knew what Frost was doing. The vampire lord was arranging a Turning of epic proportions that would put the vampire race at the top of the political food chain in the western world. \n\nBut it was the news that Solomon the Blood Saint would be coming to Turn Officer Matt Devlin that had pushed Sadie over the edge, and no one knew why. They only knew that Sadie had come unhinged and had fled back the sanctuary of her own trailer and wouldn't let anyone near her but Melissa.\n\n\"She's just muttering to herself,\" Mel said, sitting on the porch and looking pale. Mary quickly appeared at her side, wrapping her hand in her lover's. Mel's gaze was drawn to an insect darting around a tree only to be eaten by some species of nocturnal bird. She was seeing things as she had never seen them before. She had gone from an analog picture to high-definition, and the difference was amazing . . . as different as night and day. \"I don't even think that she saw me,\" she whispered. \"Somehow I know that I need her, but she's cut off from me.\"\n\nMel shook her head and tried to bring herself back to the matters at hand. She had to be careful about what she said. Sadie had begged her not to discuss what she saw or felt because according to Sadie, Melissa wasn't exactly a normal Turn. This meant that Sadie wasn't a normal vampire, and Melissa was dying to know what made her so different.\n\nMary hovered nearby, still glowing with scarcely contained rage. Her lover had been attacked and brought to death's doorstep, and her first friend in a century had apparently lost her mind. To make matters worse, no one was calling for vengeance. She was sure that such vengeance would be righteous, but she could not act unless called upon to act.\n\n\"Would you like for me to try again?\" the wraith whispered. \n\nMelissa grimaced. \"She doesn't want you in there,\" the girl said sadly. \"She's afraid of you right now, but I'm not sure why.\" She put her head in her hands. \"I'm not sure of anything.\"\n\nMary put her hand on her lover's shoulder. \"Be sure of me,\" she said. \"My feelings for you have not changed. And be sure of Sadie. I could sense how much it pained her . . . this breaking of her vow against Turning. Like you, I wish I understood why --\"\n\n\"We've got company,\" Vlad muttered angrily.\n\nSure enough, a low rumbling of vehicles emanated from the driveway and the gravel driveway crackled underneath a great many tires. Five SUVs and a Gravestones patrol car came trundling into the parking area around Sadie's residence. It was Frost's entourage to be sure. Vampires, including Lord Frost, came pouring out of the larger vehicles and Captain Grom stepped out of the patrol car.\n\n\"Captain,\" Vlad said. \"You in a squad car? I'm pretty sure that I just lost the precinct betting pool.\"\n\nThe Captain wanted to smile, but things were too serious. His eyes found Melissa and he had a look of relief. \"You're looking . . . pale.\"\n\nShe smiled at him, just a hint fang showing. \"I've always been pale. I doubt I'll be trying to tan anytime soon.\" She glared at Frost as he walked up and stood beside Grom.\n\n\"Captain Grom, I must insist that we get down to business. There was an unauthorized Turning and --\"\n\n\"I am well aware of the law,\" Grom said. \"Don't forget that while you're the Vampire Council representative, you're still a civilian.\" The captain looked back to Vlad. \"Things moved fast Vlad. As soon as Dazza was arrested for what he did to Melissa --\"\n\n\"What he was accused of doing,\" Frost tried to correct.\n\n\"Shut . . . up.\" Grom shot a glare. More cop cars were arriving, and things were getting awfully crowded. \"But he's right Vlad. Word spread quickly. I got called at home by the Arbiter Bureau, who informed me that until this gets all sorted out, Sadie's status has been revoked. She's on unpaid leave pending investigation.\"\n\n\"She saved Mel!\" Vlad growled. \"And they're going to punish her?\"\n\n\"Mortals die,\" Grom replied. \"They don't all get a second chance. It's ugly, but it's part of the rules they made to keep vampire numbers in check and to keep war from breaking out between the mortals and immortals It's worked for thousands of years Vlad. The law is the law. You're a cop, so you know I'm right.\"\n\n\"It's my night off,\" Vladimir replied coldly. In his own mind, he knew what Grom said was the truth and he bore no ill will towards his boss. But to emphasize his point, a number of his pack mates made their presence quite conspicuous, standing between the intruders and the trailer.\n\nMelissa stood up, her fangs extending slightly, but this time it was on purpose. \"I won't let you hurt her.\"\n\nFrost laughed, but there was no mirth in it. \"A babe in the woods,\" he chuckled, but then he collected himself. Melissa wasn't backing down, nor was she apparently overly cowed by his presence. \"You have adjusted to the darkworld well, haven't you my kitten?\"\n\n\"I'm not 'your' anything,\" she said.\n\nMary floated to Melissa's side. \"I would be very careful how you address my love.\"\n\nFrost didn't know how to respond to that. No one in their right mind screwed with a wraith, and most wraiths just kept to themselves. This one was an anomaly. \"There has been no call for vengeance against me, has there?\"\n\nMelissa hated Frost, but he wasn't the one who had plowed into her car. Rather, it had been . . . \"Dazza,\" Mel muttered.\n\n\"Dazza,\" Mary whispered, vengeance flowing into her like wine so sweet she could feel it on her lips. \"I feel your need,\" the wraith said, slowly vanishing into the midrealm. \"It will be done.\"\n\nFrost looked alarmed, but not half so-much as Melissa. \"No!\" she shouted. \"That's not the way things work in this world!\"\n\nThe last thing any of them heard before Mary was gone was, \"But that's the way it works in mine.\"\n\nFrost turned to Captain Grom. \"You have to protect him! He has not been convicted --\"\n\n\"Convictions and human law means squat to the wraiths and you know it,\" Grom said, sounding not-at-all apologetic. \"Vengeance was called for, even indirectly, and the fates determined that such vengeance is justified. But wraiths can't crossed emplaced magic or spells, and luckily our holding cells are properly protected --\"\n\n\"He's not in your holding cells you idiot!\" Frost snapped. \"He made bail an hour ago!\" Frost stopped. Captain Grom knew that Dazza had been set free.\n\nGrom shrugged. \"Not my fault he got bailed, now is it? I'd suggest you get him somewhere safe, but we both know that it's probably a bit late. You should've let him stay in jail.\"\n\nFrost let all of the barriers he used to control his presence fall, and his magnetism and power spilled out into the surrounding air. \"I have had enough of this,\" Frost said, realizing that his favorite henchman was probably dying a horrible second death as they spoke. He saw the werewolves rankle their hair or fur as his presence spilled over them. The humans all took a step away, and even the other vampires looked nervous.\n\nOnly two people did not step back when his presence was freed: Officer Vladimir Koloff and Melissa. Koloff was an alpha wolf, so he had power against the vampire lords, but the girl? \"Why do you not tremble?\" he asked her.\n\n\"Because I've seen scarier things than you,\" Melissa said, so calm that she even surprised herself. \"My lover and mistress is a thing beyond your power and . . . my mother,\" she whispered, deciding she liked the sound of it, \"is a vampire that you've never been able to control.\" She stood up, her body feeling lean and powerful. For the first time, she was realizing what Sadie has meant when she told Mel that she would be different. \"Dazza almost took everything from me. I won't let him or you take anything else.\"\n\n\"Let me?!\" Frost's laugh was more genuine but still not pleasant this time. \"The wraith you're fucking won't stand in my way --\"\n\n\"I will,\" came an empty voice from the trailer.\n\nAll eyes looked up as Sadie appeared in the doorway. Melissa couldn't be sure if it was the shadows cast by moonlight or her unkempt hair, but Sadie's eyes were hidden from view.\n\nSadie across her deck to the ground. She was unarmed, but was carrying her badge. She approached where Frost and Captain Grom stood, offering the badge to the police officer.\n\n\"I know the law,\" she whispered. \"I will accept the consequences of my actions.\"\n\n\"Sadie,\" Vlad said, stepping forward, \"you were just --\"\n\n\"What I did was illegal,\" Sadie interrupted. \"I do not regret my decision, but will accept responsibility for it.\" She looked at Frost, her eyes suddenly visible and as cold as an Alaskan winter. \"And I do know the law,\" she continued. \"I am more than entitled to a Turn.\"\n\n\"You did so without prior authorization,\" Frost crooned happily. He was enjoying having the upper hand.\n\n\"Yes, but that can only be held against me and NOT Melissa. Besides, since when did secret Turnings bother you? Considering what you have planned for Halloween?\"\n\nFrost had known this was coming. \"Yes, we have several Turnings planned for Halloween. All of which have been approved with the proper authorities. The actual Turning dates and names do not need to be made public until after the event.\"\n\n\"And what would people do if they knew who you planned on Turning?\"\n\n\"Miss Hewitt,\" Frost said smugly, enjoying that he didn't need to say \"Arbiter\" for the time being, \"how would YOU know? That list has not been made public to anyone. The only way you could know who is going to be Turned would be if you or someone else had broken into my home and looked through my personal files, which would be highly illegal.\"\n\n\"I'm aware of that,\" Sadie said, yielding ground slightly. \"But I can guess, can't I?\"\n\n\"Guess away, but be very careful. If your guesses were too correct, I might be forced to wonder how.\"\n\n\"Women's intuition?\"\n\n\"Don't insult my intelligence.\"\n\n\"Then don't insult mine,\" Sadie replied. \"You wouldn't have come all the way out here just to watch Captain Grom do his job. You know that I'm not going to get hauled away in chains, and you KNOW that I won't let you try to punish Melissa. So why are you here?\"\n\nFrost's smile reached from ear to ear, almost touching his eyes. \"You have been denied what you really are since you arrived here. You've denied your vampire heritage since you were created, I suspect. It is time for you to be reminded . . . it is time for you to be humbled. I have great influence with the Vampire Council, Miss Hewitt. When we recommend a course of action to the authorities for your behavior, we could make things very hard for you, or we could make them much easier.\" \n\nSadie shook her head. \"You aren't a man of compassion Frost. Why would you help me?\"\n\n\"I am quite capable of compassion and understanding,\" Frost replied.\n\nSadie locked his gaze. \"I'd ask Terrence about that, but he's not talking much these days, is he?\"\n\nFor the first time, Frost lost his cool. His teeth extended and his and his pupils went black. But the episode only lasted a moment, and then he was composed again. \"Mr. McDermott's death was quite unfortunate. He was one of my children.\"\n\n\"I'm sure you're really broken up about it,\" Melissa muttered. \n\n\"Keep your child in line,\" Frost warned Sadie, glancing at Mel, \"or I will.\"\n\n\"Touch the daughter of my blood, and I'll see yours spilled before anyone here can even pull a trigger.\"\n\nThere was something in Sadie's voice that even Frost found unnerving. There was none of the warm mocking or dry wit with which Sadie normally acted. She had just made a promise, and everyone present would swear on their lives that she would keep it.\n\nJust then, Mary reappeared, oozing through the pores of the mid-realm to stand beside Melissa. \"Justice,\" she whispered with unnatural yet sultry heat, \"is served.\" With that, she raised her blood covered hands. \n\nFrost actually paled. He most definitely wanted to leave. It didn't help when the wraith's lover licked some of Dazza's blood of those long, deadly fingers.\n\n\"Your former aid tastes foul,\" Melissa said, flashing Frost a deadly smile. \"I wonder if it was something about his cage or his keeper?\"\n\nFrost would not be so easily shown up by a fledgling. He looked at Sadie. \"I have come to offer you one last chance. You will attend the Halloween feast, and you will through yourself on the mercy of the Vampire Council. You will face Solomon the Blood Saint and repent for your sins against our race. You will accept your place in our hierarchy. If you do these things and Solomon the Blood Saint feels that you can be a loyal member of our race, then the Council will suggest leniency for you to your superiors in Washington. If not --\" He left it hanging. They both knew that the Bureau of Arbiters was especially harsh with its agents who broke the law.\n\n\"Sadie? Bow?\" Vladimir actually chuckled. \"You don't seriously think --\"\n\nSadie's voice was empty as she interrupted with, \"I will attend the Feast. I will offer penance for my actions and sins, and I will accept my place in the vampire hierarchy.\" She actually had tears in those beautiful eyes when she looked at Frost now. Her will had broken. \"To these things I swear my last drop of blood.\"\n\nEven Frost was shocked. He had expected her to cave eventually, but she had just made a blood oath in front of witnesses. If she failed to live up to any of the things that she had sworn, then it was open season on her for the entire vampire race, and there was nothing that mortal law could do about it.\n\n\"It's about time you saw reason,\" Frost said delightedly. \"Once you have --\"\n\n\"Now get off my property,\" Sadie said, her voice tired but firm. \"I am tired of this feud as much as you. It must end. But I have a week until Halloween, and until then I owe you nothing. And my promise stands. Hurt Melissa because of me, and there is no place in heaven or hell, sunlight or darkness that you'll be safe from me. To this I also swear.\"\n\nFrost nodded. There was no reason to go after the young vampire anymore, since she had done as much damage as she would be able to do. Besides, when Sadie came on board, then Melissa would have to follow. It was easy to see that Sadie's bond with her vampire daughter was strong. \n\n\"Very well,\" he said. \"We will be off. Officer Devlin, if you might ride with me, I would like to --\"\n\n\"No,\" the young human replied with a strength he didn't know he had.\n\nFrost stopped just as he was preparing to climb into his vehicle. \"No?\"\n\n\"I'm sorry Lord Frost, but I must respectfully withdraw my petition to become a vampire at this time.\"\n\nEveryone was staring at the young man now, no one sure where this was going.\n\n\"Officer Devlin, I know this is a trying time for you, but think about what you're saying. Remember why you wanted to join our ranks.\"\n\n\"I haven't forgotten. I still fear death, and I still want the darkworld gift. But not like this.\"\n\n\"Like what?\"\n\nDevlin looked at his shoes. \"I will not make direct accusations sir,\" he said, looking up again, \"but I no longer feel that I can trust you. People are dying or close to,\" he added, glancing at Mel, \"and you don't seem to care. Terrence McDermott was my friend, yet you don't seem to be shedding any real tears for him. Your faithful aid was just slaughtered, yet you can't seem to take your mind of Sadie and making her 'remember her place.' I don't agree with Miss Hewitt on a lot of things, but she's been nothing but a boost to this community since she got here, and you just want to see her broken. I did too once. I was mad at her for not wanting to Turn me. Hell, I still am. But I won't be indebted to you, Lord Frost. I've seen what happens to those that are.\"\n\nFrost sneered. \"I was mistaken to think that you had the backbone or will to be one of us. Very well, consider any chance you had of becoming one of us summarily squashed.\"\n\nHe looked at Sadie. \"I will still hold onto some hope,\" he said, \"of finding a Lord . . . or Lady . . . that I would be proud to call my creator. But not you, Lord Frost. Not even the Blood Saint himself is worth it.\"\n\nSadie actually cracked her first smile of the night. She'd been as wrong about Matt Devlin as Frost had been, and she couldn't be happier about it. \"This is still my land,\" she directed at Frost. \"And until I say otherwise, you're trespassing.\"\n\n\"Captain Grom,\" the vampire lord pleaded, \"I am completely within my rights here!\"\n\n\"You're within your rights to influence judgement on her,\" Grom replied, \"but you're not a cop. I'd suggest you leave now.\"\n\n\"While she walks free?\" Frost snarled.\n\n\"Miss Hewitt will be taken down to the station shortly so charges can be filed. But I'd just as soon see you gone before that happens.\"\n\nFrost was going to growl, but he looked over and saw a dejected Sadie, which in turn made him grin. \"Very well,\" he said. \"I'll see you soon, Miss Hewitt.\" He and his vampire brethren got back in their vehicles, sharing a good laugh at the fallen Arbiter.\n\nSadie extended her hands. \"I'm ready to go,\" she said softly, waiting for the cuffs to be put on.\n\nGrom looked at her. \"Just get in the car Sadie. I'm not worried about you trying to escape. For what it's worth, I'm sorry.\"\n\n\"You're a good man,\" she replied. \"And you're a good cop. I'd never ask you to be anything else.\" She looked over at Mary. \"Could you look after the cat? She hasn't been fed yet.\" Her voice was hollow, but she seemed satisfied when she saw the wraith nod.\n\nGrom opened the back of the patrol car and Sadie got it. It made Vladimir sick to watch. She had wanted to see him free like the beast that he was, but now she was the one in a cage. Someone like Sadie should never be locked up. She'd served in the military as a pilot because she loved to serve and she loved to fly . . . she loved feeling that free. When she rested her head on the plastic divider, he thought he saw her grimace in emotional pain.",
        "\"Melissa --\" he started.\n\n\"I'll go,\" she replied before he could even finish. She kissed Mary's bloodied but eerily compassionate face and then got in the passenger side of the car. She had an excuse ready that she shouldn't be separated from her creator, but Grom didn't even ask. No one wanted Sadie to feel alone.\n\nThe car-ride was a unnerving experience for Mel, as she watched the fire behind Sadie's eyes flicker and almost extinguish. She looked like she wanted to cry but had almost forgotten how. And she kept looking out the window and up to the sky. She wanted to be that free again, soaring amongst the angels. \n\n----------- ----------------\n\nThe next night . . .\n\n----------- ----------------\n\nWhen Sadie got out of the patrol car after it pulled back into her driveway, she ran from it like it was a snake. She didn't mind cars, but didn't like being trapped in one. She didn't like not having a choice. \n\nShe had been forced to spend the day in jail while a very confused group of law enforcement personnel, lawyers, and reps from the Arbiter's Bureau tried to figure out what to do. The Arbiter representatives were firm in their belief that Sadie would be punished, but it turned out that saving a girl's life, however illegally, cut her some slack. There had been no one injured as a result of her actions, and there had been no planning or malice. Bail was set, and it was paid before anyone could even blink. A consortium of townsfolk from Gravestones, led by the werewolves, had hurried to her aid. She had thanked them so much that her jaws ached, and she promised them that she wouldn't skip out on them. It was Vladimir's sister Anya who had said something that made her heart feel a little less heavy. \n\n\"Girl, we KNOW you wouldn't skip out on us. That's why we're here.\"\n\nMelissa had never left Sadie's side, sleeping in a cot next to the vampire's cell. Sadie knew that Melissa wasn't the one that needed comforting. She was stronger than most people realized. She was just there because Sadie needed comforting. Mel said that Mary wanted to come visit, but they both knew how bad of and idea that was. Bringing a wraith into a jail, even a city lock-up, was a monumentally bad idea.\n\nVladimir and Mary were waiting by the trailer when Sadie and Melissa got back. The rest of the pack had to get back to their lives, and the police were out on the streets in force. It turned out that Sadie wasn't the only one worried about the newly-discovered mass Turning, and a lot of folk were eying their fanged neighbors with hostility. Battle-lines were being drawn in the streets, and their was enough tension in the air to stop traffic.\n\n\"Hey,\" Sadie said, not really meeting anyone's gaze. She was back on her own soil, and she needed a moment to collect herself. \n\nMary floated over, touching a finger to Sadie's chin with one hand while grasping Mel's hand with the other. \"I'm sorry this has happened, and I am sorry for the loss of your friend Terrence.\"\n\n\"Did Dazza scream?\" Sadie's voice came from behind the straggles of hair covering her face.\n\nMary looked dazed for a moment, like she was remembering what it was like to be drunk on rich red wine. \"Oh yes,\" she whispered, touching one of her now clean fingers to her mouth, \"he screamed.\"\n\nMelissa trembled. However inadvertently, she had caused that man's death by willing vengeance upon him. She'd never had anyone's blood on her hands and soul before. \n\nSuddenly, Sadie was next to her, eyes fixed and burning with a kind of anger that Melissa couldn't comprehend. \"Do . . . not . . . mourn him,\" she hissed. \"He brought this on himself.\"\n\n\"How did you know what I was thinking?\"\n\n\"I'm . . . slightly sensitive to you right now. It will pass. I think it will.\"\n\n\"You think?!\" Mel was a little freaked out. \"You can get in my head like that and you THINK it will pass?\"\n\n\"What? Mary's good enough but I'm not?\" Sadie still sounded angry, but it was more of a general anger.\n\nMary got in her face. \"She's scared,\" the wraith said coldly. \"She's had a lot to deal with, and you're the one who needs to help her through it. I remember what being a vampire is like, but I'm not one anymore.\"\n\nSadie sighed. She just needed a target, and Mel had been it for a moment. \"Melissa, it won't be a problem. It shouldn't last too long, and if you concentrate on it, you can shield me from your thoughts in the meantime.\"\n\n\"What do you mean 'shouldn't last'?\" Mel said, a little panicked still. \n\n\"I've only ever Turned one person before!\" Sadie said, her throat choking on the excuse. \"And it was a long fucking time ago!\"\n\nVlad stepped in, not wanting things to get uglier between the two friends. \"How long?\"\n\nSadie stopped. Mary and Mel knew some of the truth, but they hadn't told Vlad. He deserved to know.\n\n\"Longer than you think,\" she whispered. \"Vlad, before you risk your neck for me, you should know that --\" She paused, unable to force the words out into the cold night air.\n\n\"Know what?\"\n\nMel stepped forward. \"She isn't exactly who you think she is.\" She stood beside her vampiric mother. \"When Captain Grom told me to find her birth certificate for Frost to get him off her back, I found something else.\" She looked at her friend.\n\nSadie had to take the next step. \"Sadie Hewitt . . . isn't my real name. Sadie Hewitt died a hundred and twenty years ago. I took out the rogue that killed her and took her name.\"\n\nVlad cocked his head. This was NOT something that he'd been expecting. \"And your real name is --\"\n\n\"Better not said out loud,\" she replied. \"There are reasons I hid, Vlad. Frost isn't the first vampire in this world that wanted me out of it.\"\n\nVladimir gritted his teeth. \"So this has all been a lie?\"\n\n\"No,\" she said firmly this time. \"This person . . . Sadie Hewit . . . it's me now. I say what I think and what I feel, and that hasn't changed. Not about anything or anyone.\"\n\nThe werewolf simply didn't know how to react. \"How old are you? What are you running from?\" That was a question that scared him. Sadie didn't strike him as someone who'd be afraid of much.\n\nShe looked at him, then and Melissa and finally Mary. \"Come to the Halloween festival,\" she said. \"Next week, I stop hiding.\"\n\nEveryone around her heard exactly what was veiled in her speech: a threat.\n\n'She's not afraid,' Vlad thought, countering his earlier beliefs. 'She's angry.'\n\n\"Melissa, it might be better if you stayed the day with Mary. You are strong enough to survive --\"\n\nIt was Mary shaking her head. \"I do not fear losing her heart, even though it no longer beats. Melissa my love, proximity to your parent will make you whole. But as always, the choice is up to you.\"\n\nSadie watched the two lovers discuss the issue without saying a word, with the dancing of their eyes their only form of communication. She looked to Vlad. \"I'm sorry,\" she said. \"After all the crap I've given you about needing to be yourself . . . it's almost ironic. You're a good man, and I hope you find happiness.\" \n\nVlad sensed that she was genuinely sorry about lying, but he was equally as convinced that she hadn't lied about everything. She was as genuine of a person as she had ever been. There was just more to her story than he'd guessed. He stepped forward, grabbed the sides of her face and kissed her.\n\nSadie was in too much shock to do anything initially. His strong hands kept her face pointed directly at him and his lips were firm and demanding. She melted into her own lips and desire rising to meet him like a beach welcoming the waves. She couldn't remember the last time she'd given herself so utterly to something as seemingly innocent as a kiss, but she felt herself being swept into it until her mind could no longer get its feet underneath her. \n\nVlad let her go. He wasn't normally a Casanova, but he was no slouch either. He'd been out of practice though. \"Stop talking as if you aren't going to be around anymore. You're the most interesting woman I've ever met. I may not know you completely, but I want to.\" His voice was low and husky, and it held warm promise.\n\n\"But you're married --\"\n\n\"I had a little discussion with Teresa right before I took over the pack. I really think that relationship . . . isn't good for either of us anymore.\" Saying it out loud should have pained him, but it didn't.\n\n\"But your word to your friend . . . her brother --\"\n\n\"I did everything I could. I denied everything that I was and wanted to be what I thought he expected of me. I hope his spirit forgives me when the day comes and we chase the stars across the sky . . . I think he will forgive me. Teresa didn't deserve a brother who cared for her so much, and she doesn't deserve me.\"\n\nSadie's skin was growing very warm. \"So, are we expecting a messy divorce?\"\n\n\"No. I told her I knew about the affair and that I'd take everything if she decided to keep being a bitch.\" He smiled. \"That's right, I get to call her a bitch now. Anyway, I'll make sure she gets enough to get started. Most of my important possessions are tied up with the pack, hence untouchable by human law.\"\n\n\"So,\" she said, shy for the first time in a long time. \"you're going to be single? Soon?\"\n\n\"Very much so,\" he said, liking the way her body fit against his. \n\nSadie felt sadness and joy wrapped tightly around her heart. Joy because Vlad was free to hunt and be wild again, and sadness because she knew it unlikely now that she could ever experience him the way that she wanted. If he even wanted to be near her in a week . . . if she was even still alive. She had to tear away, because she didn't want to now give him hope when none was warranted. She wouldn't hurt him like Teresa had.\n\n\"Happy hunting,\" she murmured, pushing away from him, obviously unhappy about it.\n\nVlad growled. He didn't understand this at all. He knew how she felt, and he damn sure understood his own feelings and desires. Then he felt Melissa grab his arm as Sadie retreated to her sanctuary.\n\n\"Don't give up the hunt,\" the newly-made vampire said, glancing at the doorway, \"because no other catch will be as rewarding. She's messed up in the head right now. Is this even how you would really want her?\" Melissa had suspected that Vlad had stronger feelings for Sadie than he had been letting on, but nothing compared to what she saw in his eyes now. She had freed the wolf, and it was powerful and it was hungry in more ways than one.\n\nHis shoulders trembled, but he nodded. \"The wolves will patrol the area to make sure she is not harassed in the next week. Cops too, though technically they're unbiased.\"\n\n\"Gravestones cops?\"\n\n\"Yep.\"\n\nMelissa smiled. There wasn't a cop she knew of that would move against Vlad and Sadie. They loved their wacky Arbiter because she loved them. Then she got an idea.\n\n\"That biker friend of hers . . . Frankenstein?\"\n\n\"Frank? What about him?\"\n\n\"Call him. Sounds like he and his boys are a bit fond of Sadie and they don't take kindly to authority --\"\n\n\"Authority like Frost?\"\n\n\"Like Frost.\"\n\nVlad actually hugged Melissa. She didn't remember him ever being that friendly with her in the past. He'd always been very respectful, but not huggie. \n\n\"You're a smart girl. Nice to know we won't be losing you too. You coming into work this week?\"\n\nShe nodded. I think that would be good. I want to find out how Frost knew what we were up to, though I've got a pretty damn good guess.\"\n\nVlad looked at her and then snarled, \"Bart?\"\n\nShe nodded again. The demon had been bound to serve the police force for some \"unspecified\" crime and wasn't able to physically hurt anyone, but there were many other ways to cause harm. If she could connect him back to Frost somehow and then showed that his actions, even indirectly, caused the death of Terrence, they could have his sentence revoked and simply banish him straight back to hell. And she had heard fearful whisperings about what happened to wayward demons who were finally brought back home. \n\n\"He's been stalking me on and off since my first time with Sadie. And it sounds like something he would do.\"\n\n\"If so, he won't make it to trial.\" Vlad was positively glowing with rage.\n\n\"Let him, and do it with a smile. The forces of hell are much more creative than we are, and they aren't bound by any laws but their own.\"\n\nAnd THAT made Vlad smile. He went back to his car and Melissa gave Mary a long, deep kiss before following Sadie inside. Her mother needed her more than her lover that night.\n\n--------------- ----------------------\n\nA week later . . .\n\n--------------- ----------------------\n\n'An hour to go,' Sadie thought, her thoughts as cold as her blood. She had put an her \"dress\" for the evening, and had one more accessory before festivities began. She grabbed her bed and shoved it to one side, barely hearing it collide with the wall of her trailer. Directly underneath where the bed had been was a safe, complete with fingerprint ID scanner, retinal scan, and ten digit combination. She pulled her hair back in a ponytail so the retinal scan would go more smoothly, then placed her hand on the pad. So far, so good. She struggled to remember the combination, since she didn't open the safe hardly at all. She did have her dark moments where she gazed into that tiny vault and remembered . . . oh the things she remembered. An unflattering smiled played across her heavenly face, and she wondered what Frost's face would look like when he finally realized what he had wrought. \n\nShe punched the last digit and heard the bars retract. She pulled the door open and lifted a small sack from the dark recesses. It felt . . . wrong . . . in her hands, and that was just the feeling she got muffled through the harsh fabric. \n\n\"Well Dad, it's time to finish this.\" \n\n--------------- --------------------------\n\nAt the Halloween Festival . . .\n\n--------------- --------------------------\n\nMelissa was getting more than a little bit nervous. The ceremony was supposed to begin in just a few minutes and she hadn't seen hide nor hair of Sadie. Apparently, new vampires were expected to be \"presented\" to the Court by their creators, something Melissa hadn't known until she had arrived. Of course, she hadn't gotten an official invitation until the day before, since a lot of vampires were unsure what to do about her. Over the course of the week, she had become more comfortable living under the stars, though she seemed to have inherited some of Sadie's immunity to the sun after all. She could go about for several hours during broad daylight with no ill effects, but she couldn't stay out indefinitely. It was fun, not needing help to open pickle jars or needing to catch a breath while jogging. Being undead had its perks.\n\nShe was in hostile territory, that much she knew for sure. The elite of Midian society was in attendance, as well as some honored guests, including senators, mayors (including the mayor of Midian), and many heads of business. There was a smattering of private security, but the West End Police Department was out in force. They were the best financed and most spoiled department in Midian, and they were definitely in the literal and proverbial pocket of Frost and the council. Melissa had drawn the eye of several attendees, and she felt like a single fish in a school of sharks. It was generally accepted that if a new vampire lost his or her creator, then they were taken under the wing of someone more experienced. Apparently, there were several people getting ahead of themselves and checking out the merchandise.\n\n'Screw them,' she thought. 'They want me, they can go through Mary to get me.' She grinned. She doubted any of them were willing to tangle with the wraith for ownership. \n\nWithout even seeing her, Melissa felt Sadie's presence, then felt a hand slip into her own. \n\n\"Thank goodness that --\" Mel stopped. She stopped. Sadie was dressed in some simple, bizarre dress that looked like it had been pulled out of a history text, made of plain cloth with a belt made of old rope. A hood completely encompassed the older vampire's head and she was keeping her face pointed towards the ground. And she had a sack of some kind tucked into the crook of her arm.\n\n\"What's going --\"\n\n\"Don't say anything,\" Sadie whispered. Her voice sounded like pure pressure, hissing at the edges and looking for release. \"Just keep looking forward. Don't blink. Don't show fear.\"\n\nMelissa had just gotten ahold of her fear, but now it was Sadie scaring her. But her mother had demanded silence, and she realized it wasn't the time to question her.\n\nFrost took his place at the podium. \"Welcome friends, family, and honored guests. Welcome to those who embrace the night and a better way of life for its denizens. This is going to be a memorable night for us, and for the world.\" He paused for a round of applause. \"Over the last several years, the number of vampires who walk under the night sky has diminished due to unfortunate accidents, as well as our continued persecution by the . . . other . . . races.\"\n\nSadie clenched her hand. She knew what Frost had wanted to say instead of \"other.\" He'd wanted to say \"lesser.\"\n\n\"Tonight, we bring our numbers back up to what the were meant to be. We have found a crop of enlightened, educated, and talented entities that have shown sufficient merit to walk amongst us. One hundred new souls will belong to the vampire world tonight. One hundred people will be reborn.\" His look soured. \"We had one hundred-and-one planned, but we caught a defective model late in the design cycle,\" he said, earning a chuckled from the crowd.\n\n\"But first,\" Frost continued, his voice low and bordering on humble, \"I feel it my honor, my duty, and my privilege to introduce our guest of honor for tonight. He has walked the earth for seven thousand years, has outlasted civilizations, defied time and nature, and survived the Betrayer. He has bled for all of us . . . his children . . . since human 'civilization' was in its infancy, and when the wolves still cowered in the woods and chased rabbits.\" He stood, looking at a darkened pavililion that stood nearby. \"Ladies and gentlemen, allow me to introduce you to . . . Solomon, the Blood Saint!\"\n\nThere was a feeling on manic awe that swept over the crowd as an enterouge emerged from the dark recesses of the canopy. There were a full circle of witches, all of whom glowed with power. These were Solomon's Blood Rampart, and their job was to prevent Solomon from being targeted by magic. There were thirteen young men and women dressed in red robes, and those were the Well of the Saint, and the were there to provide a supply of blood for Solomon. Then there were six vampires of massive size and power. Just looking at them, Melissa had a feeling than non of them were less than fifteen-hundred years old. All of them were dressed in identical sets of riot armor, and all had cleanly shaven heads. You could never tell one from another, as their identities had been stripped away. They were the Blood Brood, and there entire reason to exist was to guard the body of Solomon, and they would defend him until the death. \n\nBut nothing could have prepared Melissa for the sight of Solomon himself. The Blood Saint was, well, the most beautiful man that she had ever seen. Men shouldn't be beautiful. They should be strong, muscular, handsome, but he was so much more than any of those things. His rich brown hair flowed down past his shoulders until it reached his knees. His face was a picture of symmetry, and his skin was pale and perfect. His eyes were such a dark blue that they were almost purple, and his lips were pale but full. Everything was balanced exactly right, except . . . over his right eyebrow was a cut about an inch long that was oozing blood, leaving a crimson stream running over his eyebrow and down the side of his face. One of the members of the Well was constantly attending him, making sure that no drop of blood ever fell on his pristine white robes.",
        "He stood on the platform, a well-placed bank of black lights shining up to make his robe glow while a golden yellow back lit his head. He didn't need such trickeries though. He was Solomon, and he was power. Most vampires had presence, old ones had enough presence to influence those around him. Melissa actually saw some younger vampires fall to their knees in his presence, and the older ones were clasping their hands in an almost sexual joy. \n\nMelissa was confused. She was just a week out of the ground, so she should have felt more affected by him. So why didn't she? She could feel his power, but was not enslaved to it.\n\n\"Greetings,\" the Blood Saint began in heavily accented English, his voice as sooth as a mountain brook, \"and thank you all for you attendance this glorious night.\" He let his gaze drift over the crowd, seeming to look in each creature's eyes in turn. Melissa wondered about those eyes, which seemed to burn red even from this distance. But her eyes were drawn to the hand grasped by Sadie. Her friend was trembling. \n\n'She must be terrified,' she thought at first. Then she realized that Sadie wasn't terrified. Her ties to her creator were strong enough that she could pick up feelings, leaking out of that carefully crafted shell like molten rock. Sadie was angry. 'No, anger isn't a strong enough word. This is hatred.' Melissa wanted to pull away. There was so much hatred in Sadie's mind that it hurt to be this close. \n\nSolomon continued his address. \"For over seven thousand years, I have watched our race grow strong. With our noble allies the elves and the noble magicians, we have come back from oblivion. Now, we are poised to take the next step. We are no longer content to live in the shadows of mortality when they should be standing in ours. We have been bound by mortal law, and we vowed never to break the law.\" Solomon's full lips crept upward, but didn't make it as far up his face as they should. That wasn't a happy smile. \"But there is nothing to say that we can't change the laws.\" He looked at Frost.\n\n\"We have long been stymied by human law, but here, in the New World, we have a chance to change that. We now have all the pieces in place to make 'democracy' work for us.\" Frost smiled. It was a handsome smile, but Mel didn't think it compared to Solomon's. Nothing did. \"And what makes this so delightful is that it is completely within the boundaries of the current law.\"\n\nSolomon nodded. \"One vote on the Darkworlder Oversight Committee is all we need to tip the balance to open up our ranks in the United States, and Senator Trefauld, who will be joining us this very night, will be able to provide that. We have the judges needed to validate the new rules, and will be gaining enough members of both houses shortly to keep the new rules from being overturned. We will soon have sufficient clout in the business and financial sectors to keep the President himself in line. And when the United States opens its arms, it will influence the rest of the world and embolden our people overseas. And it starts here . . . in Midian.\"\n\n\"Friends,\" Frost picked up, \"Midian is to be the genesis of our rebirth. The largest population of vampires in the world is here. The most powerful vampires in the world are here.\"\n\nIt was time for Solomon's finale. \"It is here in Midian where our new Paradise begins. What was thwarted so long will be given a second chance.\"\n\nThe applause was like thunder and it shook the ground beneath them. \n\n\"But,\" Frost began, \"first we have some business to conduct. Before the Turning of the new candidates, we would like to introduce those who have Turned in the last month, as well as their creators.\" \n\nMelissa watched as each pair was escorted to the front, and both the Turned and the creator kissed the hand of Solomon. It wasn't uncommon at all for the newly undead to stumble or even faint in the presence of the Blood Saint. Melissa had had a feeling they were saving her and Sadie for last. She was right.\n\n\"Finally,\" Frost said, his voice raising to a gloat, \"we have our last couple of the night before the Turnings can begin. A recent tragedy involved my own personal assistant and a young woman named Melissa Neron left that very woman in a state near death. Even though it breached protocol and tradition and law, Sadie Hewitt, formerly of the Arbiter's Bureau, took it upon herself to bring Miss Neron over rather than losing her to the eternal night. While I understand the compunction to save the life of a friend and concubine --\"\n\nMel almost growled herself at that comment. She belonged to Mary, and that was by her choice.\n\n\"--, nevertheless, we have laws of our own. But Lady Hewitt has agreed to throw herself on the mercy of her fellow vampires and the Blood Saint. She will humble herself before this court and beg its forgiveness. The, if it pleases Solomon, we as a body may decide to speak on her behalf to the authorities and return her to the role which could prove quite useful to her brethren. Would Sadie Hewitt and Melissa Neron please approach the front.\"\n\n\"Show time,\" Melissa whispered. Even though the time was almost upon them, she still couldn't believe that Sadie had caved. What was it about Solomon being here that made things so different? Why had that finally made the vampire shut down inside? She was tempted to spit in Frost's face, but she didn't want to get her friend in more trouble than she was already in.\n\nSolomon stood up, staring at the woman in the simple peasant dress that approached. There was something not right. Melissa could see it in his eyes that he was concerned, but even he couldn't tell why. Then Melissa and Solomon met stares, and Melissa was shocked to her core. She didn't know why or how, but she knew Solomon, as if they had a connection. It was obvious from his face that he sensed it to. \n\n\"Sadie,\" Melissa started to say, \"what's going on?\"\n\nFrost looked at Solomon. \"My leige, whatever is the matter?\" He looked at Sadie, growling. \"Show your face to your God!\" he shouted. \"Take your place at his feet!\"\n\n\"His feet?\" came Sadie's voice from beneath the hood. Then the laugh started, low and and maniacal. \"Oh no, I think not. There was a time I worshiped Solomon all right, but those days are long in the past.\" She raised her face and pulled the hood back. \"Aren't they?\"\n\nEveryone in the clearing stopped and stood silent as they gazed upon what was unfolding. Solomon's face had frozen for a moment, then shifted into disbelief and finally . . . finally terror.\n\n\"No,\" he whispered, \"it's not possible.\" He looked from Sadie to Mel and then back to Sadie. \"It can't be you!\"\n\n\"Don't go making a scene,\" Sadie hissed. \"I thought you might want to meet your sister.\"\n\nMurmuring broke out everywhere. The former Arbiter had apparently gone stark raving mad. Frost was glowering at Sadie, though he seemed shocked at Solomon's reaction. The Blood Saint was the most powerful vampire alive. Why would he be nervous about these younglings? \"Sadie Hewitt, you will --\"\n\n\"I know what I said I would do,\" Sadie said, staring down Solomon. His guards, both physical and magical, had no idea what to do. \"I will take responsibility for my actions and accept my place within the hierarchy. And I intend to do just that. I've made mistakes in the past,\" she said, glaring a hole in Solomon's head, \"and I intend to correct one of them tonight.\"\n\nFrost and the entire congregation saw Solomon take a step back. \"No,\" he said shaking his head, his mouth breaking into an evil sneer. \"You can't be her! I killed her!\"\n\n\"You tried,\" Sadie replied, her eyes beginning to roll back in her head. \n\nMelissa was terrified. \"Are you okay?\"\n\n\"You know her?\" Frost asked, looking at Solomon. The Blood Saint never left his fortress retreat except under the most rare and blessed of circumstances, and he had never previously been to the United States. \n\n\"Tell him my name!\" Sadie shouted, and her voice carried over the throng with power that even made Solomon tremble. \n\n\"You can't be --\"\n\n\"TELL HIM MY NAME!\" Sadie's voice almost seem to glow as it emanated from her mouth.\n\n\"I will not --\"\n\n\"SPEAK MY NAME!\"\n\n\"Eve!\" Solomon shouted, his voice cracking like a twig. \"Betrayer!\"\n\nAnd just like that, silence returned. No one was staring at Frost or Melissa or even Solomon. Everyone was looking at Sadie . . . the woman Solomon claimed was Eve the Betrayer. By their legend, Eve was one of the three original vampires born of Lillith, and she had made war out of jealousy against her brothers Adam and Solomon. She was supposed to have died in that war along with Adam, and Solomon had barely survived.\n\n\"That's not possible,\" Frost said. \n\nSadie smiled, but the smile was cold and empty. \"Do not claim to know what is possible or impossible,\" she said. Her eyes were rolling back and her body began to tremble. To Melissa, it almost seemed like . . . like she was going to orgasm. Then Sadie's body seized up, and a rush of power rolled over the ground and through the air. Sadie . . . Eve . . . had achieved release, but not in the way Melissa thought. But somehow, Melissa understood. Eve . . . Sadie . . . no, definitely Eve, had been hiding her presence and her power. She had kept it bottled up for . . . millennium. But why?\n\nIf Solomon's power had been river, then Sadie's was a tidal wave. Those vampires excluding Melissa and Solomon were forced to their knees before it's onslaught as it freed itself from Sadie's barriers. It was so deep and so rich, and it filled Melissa up from her toes to the ends of her hair. It was so glorious to her that she actually had an orgasm right there on the spot. It was like bathing it the purest, cleanest, warmest sunlight. While all others trembled, Melissa simply drank in her creator until her cup overflowed.\n\n\"I . . . am . . . Eve,\" Sadie said, her voice coming out like the roll of thunder.\n\nMelissa gulped, but discovered the show wasn't over. The peasant dress was cut low in back, and she watched as Eve's smooth and beautiful back seemed to split open in two places. Eve was screaming as two great and leathery wings emerged from nowhere, leaving Eve's back bleeding but otherwise apparently unharmed. And Eve sighed in great pleasure as she spread her wings for the first time in thousands upon thousands of years.\n\nFor a moment, Eve looked into Melissa's eyes, and Melissa saw regret. But there was no room for softness or weakness now.\n\n\"This,\" the ancient vampire said, \"is me.\"\n\n\"Begone!\" Frost shouted, his voice squeaking around the edges like a mouse yelling at a lion. \"You have no place here! Do not suffer the wrath of Solomon again!\" Frost almost immediately realized that he had made a horrible mistake.\n\n\"The wrath of Solomon?!\" Eve cackled. \"Should I fear your wrath?\" she said stepping forward, her wings shooting outward and making her seem even bigger and more terrifying. \"I'm facing you this time Solomon! I won't offer you my back again!\" She took a step forward and the entire Blood Brood moved to intercept her.\n\n\"NO!\" Solomon shouted. There were tears in the Blood Saints eyes and dribbling down his cheek. There were drops of blood on his previously white robe because his human followers were too terrified to clean him up. \"Eve, we don't have to do this,\" he said, his voice becoming low and soothing, like warm chocolate on a winter's night. \"Please?\"\n\nEve's face softened. \"There was a time . . . a time when I would have given you the world if I could,\" she whispered, her wings pulling in as if to cocoon her . . . to protect her. \"Just to listen to the sound of your voice. Just to feel you.\"\n\n\"We can be that way again,\" he whispered.\n\nEveryone in the area could feel the power in his voice, and the promise that it carried across the winds and earth to reach Eve. Women swooned, and even the most manly of males felt a stirring in their loins. That was the kind of power that Solomon possessed. You wanted him, even if you feared him.\n\n\"We can go back to the way things were,\" he continued, stepping forward. He seemed emboldened by Eve's silence. \"Just you and me.\"\n\nMelissa's brain was going a mile a minute as he watched these two creature's who had walked the earth when the pyramids were a distant dream. 'You and me?' she thought. 'That's a little too \"all in the family\" for me.' Because there was no doubt in her or anyone else's mind what Solomon meant.\n\nThe Blood Saint was standing straight now and took another step. \"You are still the most beautiful woman to grace the darkworld since time's beginning. It pains me to think of what happened between us. I have felt it dragging on my spirit for all these years, and now I have a chance to make it right.\" He glanced as his throng who was standing there in rapt attention. For a moment, the arrogance returned when he said, \"I can forgive you.\"\n\nSadie's face hardened again. \"And there it is again,\" she said, stepping forward while Solomon retreated. Her wings flared out again. \"Forgive me? I gave you everything,\" she growled. \"Everything I had, and you took it from me! You and Adam . . . what you did --\" Her voice gave out for a second. \"You may have convinced the rest of our race of your Lie, but you and I know the truth. Have you told them all of what you really plan to do?\" she asked waving at the ceremonial area. \"Do they know what 'Paradise' means to you Solomon? Because I do. Your Paradise is to make the world Hell for the mortal races, and I won't let you. I stopped you once,\" she continued, her tone dipping into freezing temperatures, \"and now I will finish you.\" With that, she pulled something out of the sack she was carrying.\n\nIn her hand, Eve wielded a long dagger which seemed to be made of bone. It was a foot long and with a slight curve to it, and it reminded Melissa more of a tooth . . . the fang of some great serpent. The only thing she knew for sure that if Eve had scared Solomon before, he might very well be wetting himself now. \n\n\"The Thorn?! Blood Rampart, take us from this accursed place! Build your shields and hurry!\"\n\nTwo of Solomon's Blood Brood strode forward to intercept Eve.\n\n\"No you fools!\" Solomon shouted, hiding behind his witches. \"You can't stop her!\"\n\nMelissa looked at the hulking and ancient vampires and wondered why Solomon was so worried about them. She soon found out.\n\nEve took a step forward and plunged the strange dagger into the chest of one assailant before anyone could even blink. Without so much as a thought, she had pushed a dagger of bone through the most high-tech body armor available on the market. She used her free hand to maneuver her victim between her and the other guard. Using the vampire in her hands, she batterd the other one to the ground, then ripped her captive's throat open with her teeth. \n\nMelissa wanted to vomit so badly it almost hurt. 'I didn't just see that,' she thought. 'Sadie . . . . Eve . . . she couldn't --'\n\nEve threw a vampire twice her size twenty feet through the air to crash into the pavilion. Solomon's remaining guards surrounded him while his witches prepared his escape. Frost stood with them, but his eyes were transfixed on the woman he once thought he could break. He had once thought that nothing could touch Solomon, but he had realized his error. If Eve reached the Blood Saint, then she would kill him. And that terrified him.\n\nEve dove on top of the other guard, who had probably never been on the defensive in his life. And the entire crowd got to watch as Eve tore him to pieces, his last blood decorating her simple peasant dress. The face that then turned towards Frost and Solomon was more animal than vampire. It was more animal than anything Frost had ever seen.\n\nMelissa saw a regular security guard pull a gun and take aim at Eve's back. Without thinking, she moved towards him, and at that point her own powers kicked in. It was like she was moving faster . . . no, that everyone else was moving slower. She was next to the guard before he could turn his head, and she ripped the gun from his hand as easily as if he were a child. Then she back-handed him, sending him flying into a row of folding chairs. She hoped she didn't kill him, despite what he'd been trying to do. If Eve had seen him first, he would be dead indeed. \n\nThe Betrayer charged forward, but Solomon's Blood Rampart had erected a set shield of enormous power. Sadie wailed on it anyway, causing little cracks to appear almost as fast as the Rampart could fix them. \n\n\"You won't escape me!\" she shrieked at the trembling Blood Saint. \"My Father waits for you! He will know what you did, and he will torture you for eternity! There are no words ever spoken that can describe the hell your life will become!\"\n\nA blue light appeared next to her, and Mary stepped through, slipping out of the midrealm. And she looked . . . drunk.\n\n\"Mary?\" Melissa said.\n\nThe wraith shook her head, swaying gently in a non-existant breeze. \"No . . . no, tonight is not for you my love,\" the wraith said. She sounded on the verge of orgasm. \"I feel it. I feel her calling to me.\"\n\nAnother blue glow appeared nearby, and then another. More wraiths had arrived, and each seemed just as stricken as Mary did. \n\n'Three wraiths?' Melissa wondered worriedly. 'No, there's another, and there's another!'\n\nMore and more wraiths were arriving by the second. It was like a sea of jellyfish in the ocean of night, each one adding to the ethereal glow. They all gathered around Sadie, who was still pounding on the magical wall. They were staring at her, waiting.\n\n\"Call for it,\" Mary whispered heatedly. \"Why do you try and bottle it up again? We felt it! All around the world, my kind felt the call of vengeance! Never has it felt so sweet and so rich! It consumes us,\" she said, almost begging now. \"Please, free it! Call your vengeance --\"\n\n\"No! I want him!\" Sadie screamed, almost unaware that she was surround by a gathering that was the stuff of nightmares. Never before had so many wraiths been drawn to one place. \"I want his blood! I want to rip his heart out like he did mine!\"\n\nFor a moment, Melissa saw genuine pain on Solomon's face. 'What did you do?' she wondered as she stood back from the gathering of glowing vengeance. 'What did you do that could call this?'\n\nA flash of light appeared, and the Blood Saint and his enterouge vanished in a flash of light, transported to a secure location. Eve screamed as stumbled through where the wall had just been. She destroyed the podium and anything else within reach. Even the wraiths stood back, though they stll looked at her with sadistic eagerness. All the other vampires were still on their knees, crushed by the wait of the Betrayer's power. \n\nEve looked at the wraiths. She wasn't going to let him get away. \"Find him!\" she shouted. \"Bring me him, his blood or his heart, but bring him!\"\n\n\"Vengeance,\" Mary shouted, her voice rising he a devilish cackle. \"Vengeance is called!\"\n\nAll the wraiths began chanting that same word, over and over again. \"Vengeance.\" Then they disappeared back into the midrealm, the order for the hunt having been given.\n\nEve turned back to the crowd, most of whom were frozen in place. They couldn't really be blamed, seeing as they had come face to face with the vampiric answer to the Lucifer. The funny thing was that despite their fear, they felt inclined to worship. Vampire culture was based to an enormous amount on age, for age equated to wisdom and power. Eve may have been each of their nightmares, but she was as old as Solomon, so she could command their respect. Her years on this earth made them stop, but it was her power that made them tremble. They should tremble, because she wanted blood. She had killed the two members of the Blood Brood out of wrath, but now she was hungry. Her eyes fell on the neck of Senator Trefauld, who had been left behind by those he would have betrayed humanity for.",
        "\"You sought power,\" she crooned maliciously, \"like a dog chasing a car. Ever figure out what you were going to do if the car stopped?\"\n\nMelissa moved between Eve and her prey. She was as confused as hell as to what had transpired that night, but there was one thing for certain: kill a United States Senator who technically hadn't violated the law in any way, and you were going to jail or worse.\n\n\"Sadie!\" she shouted, trying to overcome her own terror. The woman she had known as Sadie was giving off vibes that were crashing against her fragile shores. \"Please stop! You're hurting me!\"\n\n\"Get out of my way,\" Eve hissed. \"I will not allow Solomon to tear the world apart again. I can stop it by drinking him dry.\" Her eyes were burning white now, and it looked like she could eat him alive with that gaze. \n\n\"Don't do it,\" Mel said.\n\nEve screeched to the sky . \"He wants to know what being a vampire is like? He has no idea --\" Eve stepped forward but Melissa didn't budge. Much to her chagrin, she had wet herself with fear. She had never done that before, even as a little girl. But when she was a little girl, her parents had convinced her that the monsters weren't real. As an adult, she realized that her parents had lied. Her face was even whiter than usual and her skin was shivering. She wasn't sure there was anything left of Sadie in there. But Eve stopped short, her bloody dress just inches away from from Melissa.\n\n\"Look at me,\" Eve said, running her hands just centimeters off of Mel's clothes, tracing the contours of her body until she reached her face, where she caressed that delicate chin with one blood-encrusted finger. Melissa knew that this woman . . . this creature . . . could snap her neck with those delicate steel fingers. \"I would never hurt you,\" the ancient vampire said, her voice now laced with sorrow. \"I'm sorry I couldn't tell you. Now, you know what I am. Who I am.\"\n\n\"No, I don't,\" Mel whimpered. She was still scared, and more than a little bit humiliated. \"Sadie would never have made me do this.\" She glanced downward, seeing the stain on her pants. \"You killed those men. You just ripped them apart.\"\n\n\"They would have done the same to me. Solomon will try to kill me if he cannot have me, and he knows now that I will never again want his touch.\"\n\n\"His touch? He's your brother!\" Melissa stopped. \"He isn't your brother is he? You spoke about him like he was --\"\n\n\"A lover?\" Eve replied, that sorrow in her voice growing. \"He was. He was my first.\" The vampire actually seemed choked up when she said it. \n\nSenator Trefauld, who was lying on the ground behind Melissa, finally found his voice. \"But the Provenance says --\"\n\n\"The Provenance is a Lie,\" she replied, looking down at her would-be victim with more pity than anger now. \"Solomon is not my brother. In the ways of my race, he is my son. He was the first human ever Turned, and that made him powerful. You have made a deal with a great evil Senator. Your constituents may forgive you if you can convince them that you fell for Solomon's illusion. I promise you, it was an illusion, for that is Solomon's power. It was his power before he entered the darkworld, and it simply grew after that. He makes promises, but you never know what you will truly be getting.\" She looked around the cowering mob. \"All of you, go home. There will be no Turnings this night. Any who try will suffer my wrath.\" With that, she looked at the remains of the Blood Brood that she had torn asunder. \"You do not want my wrath, I promise you.\"\n\nHer eyes fell on the Senator again. \"She stopped me from killing you,\" she said, glancing at Melissa. \"Someday, you might want to thank her for that. Now go back to Washington and undo the damage you were planning. Or do I need to tell you what will happen if you don't?\"\n\nThe Senator stared at the mangled vampire guard nearby. \"No, I don't think you do.\"\n\nThe police grew braver the longer Eve went without killing anyone. A few of them came forward with guns drawn. One of them said, \"You, drop the weapon and step away from the woman and the Senator.\"\n\nMelissa spun around. She needed to yell at someone, if for no other reason that to help her retrieve some of her dignity. \"This was a vampiric contest of dominance between Eve and the Blood Saint. By vampire law, those two men that attacked her broke the rules of the contest and could be punishable by death. This is beyond human law.\"\n\nThe officer's look unconvinced, but none of them wanted to fuck with Eve. No one wanted to come near her. \"We still can't let her kill the Senator,\" another one replied.\n\nEve spoke. \"The Senator will not be harmed this night, at least not by me.\" She wrapped her ams around Melissa's waist and chest from behind. \"Now I have some explaining to do to my daughter.\" With that, her wings flapped and Eve carried Mel into the night sky.\n\nMel was scared again, but this was much more reasonable and mundane kind of fear. She was hurtling through the darkness with the buffeting of those wide, leathery wings. They shot up over the houses of West End and towards the forest on the edge of Gravestones. Eve was going home . . . Sadie's home. \n\nAfter a few minutes, some of Mel's fear began to melt away. She could remember Solomon and Frost and what Eve had done to the Blood Brood, but it seemed not so important for now. She glanced over her shoulder and saw Eve's face. 'No,' she thought, 'that looks more like Sadie's face again.' There was an odd joy bordering on relief playing across those features.\n\n\"I haven't flown free in so long,\" Sadie said, her voice sounded more like what Mel was used to. \n\n\"This is why you flew for the Army isn't it?\"\n\nMelissa nodded, her eyes brimming with tears of joy. \"Ever since I saw the Wright brothers that first time it Kitty Hawk, I knew I could fly again and not have to hide it.\"\n\n\"Why couldn't you fly? With your wings I mean?\"\n\n\"Because they would know I was still alive,\" she whispered. \"I won't give this up again.\" \n\nShe swooped and dove, and soon Melissa saw it more of a ride than something to inspire terror. Her vampire mother was coated in blood and Mel had pissed herself earlier in fear, but it was all forgotten in those few moments where even the wind envied them.\n\nShe approached the open area next to her house, noticing a large number of motorcycles and cars littered the area around her house. And she saw police lights shining up at her like fireflies. When her feet touched soil, she saw her old friend Frankenstein and his biker gang kicking back on her redwood deck. She saw Devlin and Fitzpatrick and Captain Grom and Vlad, and Vlad had brought all the available werewolves again. It was like she had an army there, and she wasn't sure who's side they were on. \n\nEveryone just stared at her, and Eve had never felt more like a freak. She couldn't imagine what they were thinking . . . how betrayed they must feel. She had lied to all of them.\n\n\"Good God,\" Frankie muttered. \"You . . . those are . . . when they hell did you get wings?\"\n\nEve looked at the ground. \"Over seven thousand years ago.\"\n\nVlad was shaking his head. \"It's true then. After you left . . . hell, apparently almost before you left the ceremony, there were people talking to cops and news crews, with everyone saying that the devil herself walks the earth. Is that true? Who the hell are you?\"\n\nEve shook, but now with sorrow rather than rage. There were many ways she had wanted Vladimir Koloff to look at her, but not like this.\n\nMelissa made a choice. Her friend had not told her the whole truth, but she had otherwise never lied. She had saved Mel and introduced her to Mary. She would stand by her now. Melissa slipped an arm around Eve's waist, letting her mother pull those wings around them both. \n\nAt that moment, Mary appeared in a blue halo of light, her face still echoing a feeling of almost drunken bliss. She looked at Melissa and Mary and expressed no jealousy. She had been a vampire once, and even after her second death she could feel that old blood calling to her. \n\n\"Are you all right my sweet?\" she asked, that initial \"s\" drawing out like a serpent's sigh. \"I cannot stay long, and am only hear because there are so many of us to feed and only so many seats at the table. Even for a bounty such as this.\"\n\n\"That's true too?\" Devlin asked, his eyes wide. When Eve nodded, he continued with, \"That doesn't make sense. If the Provenance was true, then the wraiths should be allied with Solomon.\"\n\nEveryone looked at him. No one had stopped to think about that.\n\nGrom looked over Eve. \"So do we call you Eve or Sadie or what?\"\n\nShe shook her head. \"I don't know. Eve is who I am, but I like Sadie. I like her more than anyone I've been for a long time.\"\n\nMelissa smiled. \"I like Sadie better.\"\n\nVladimir still looked serious. \"Girl, you've got the whole frickin' planet in an uproar. A vamp that's as old as Solomon? There are a lot of vamps who don't know whether to launch a holy crusade against you or grovel at your feet. There's an emergency session of both houses of Congress getting called as we speak. The National Guard has been called to Midian to keep the peace.\"\n\nMelissa stepped away from Sadie and the comfort being close to her creator brought. \"You promised me you'd tell me. Tell us all the truth Sadie, because right now I really need to believe in you.\"\n\n\"I would never have wished this chaos on you Melissa. Not for anything.\"\n\n\"Start with the Provenance,\" Devlin said. \n\n\"The beginning. It's been a long time since I've been there.\" Sadie sat on the rail of her porch, looking out into her yard as if it were a concert. Everyone was paying rapt attention. \n\n\"Some of it is just stories I heard when I was a child. While I have always been a vampire, the first vampires were in fact mortal. When I was a child, my mother Lillith was not a good mother. It didn't take much to figure that out. She did the bare minimum, but we loved her. She was our mother after all. We lived away from other people. My mother was human, but she didn't want us to associate with other humans. She said we were too good for them. My brother believed her. Adam was an arrogant prick from birth,\" she added, sounding not at all happy about it. \"I got away from them whenever I could, playing in the forest. Sometimes I ran into human children. They'd been told to stay away from me just I'd been told to stay away from them.\"\n\n\"Let me guess,\" Vlad said. \"That didn't happen?\" He was actually pleased that Sadie had shocked the world. He had thought that she was going to submit to Frost that night, and the idea unnerved him.\n\n\"No. I played with them and we became friends. Lillith would beat me if she caught me, but that just made me more determined. Eventually, some of the adults in the nearby villages began to treat me nice, especially when they found out what my mother was doing. When I was old enough to understand, they explained that Lillith had been anything but 'immaculate.' She had in fact spread her legs for anyone or anything that would have her. She developed a reputation for depravity that eventually frightened any would-be suitors away. Well, almost all.\"\n\n\"Almost?\" Melissa asked.\n\nPain was etched in Sadie's face when she continued the story. \"Yes. Almost. But before I go more into that, I have to introduce another character into this little history. When I was just truly . . . well, I guess you might call it 'growing into womanhood,' I encountered a young man who had moved into the closest village, looking for work. I didn't know that he had been kicked out of his own village for being lazy when it came to work and too persistent in pursuit of any female he could see. None of it would have mattered to me anyway. He was the most perfect man I had ever seen, and he found me interesting. So I did what any young woman would have done in my shoes. I fell in love.\"\n\n\"Solomon.\" This was Devlin's statement, rather than a question.\n\n\"Oh yes, Solomon.\" Despite everything, Sadie's voice seemed somewhat wistful. She had truly loved him once. It was what made the rest of the story so horrible for her to speak of. \"He was fascinated by me. He was older than I and a male, but I was stronger and faster than he, and of course I had the wings. Keep in mind that this is when Adam and I were both mortal.\"\n\n\"Mortal?\" Vlad asked. \"I thought you lived forever?\"\n\n\"We do now. But there was a time when we aged just like everyone else. Solomon told me that he wanted me because I was beautiful and special, and I believed him. So much so that I gave my maidenhood to him. In the act of intercourse, I bit him. I think it was more instinct than anything, but I drank of his blood and pumped my own back into him. I had created the first new living vampire. Since I was still mortal, so was he when got Turned. He gained strength and speed, but didn't need to sleep under the earth like an newly Turned undead vamp. I didn't understand what I had done, so I told my mother. The fact that I Turned Solomon and spread my legs for him was the first thing . . . the only thing that ever made her proud of me.\"\n\nSadie stood up and began to pace the length of her deck, with humans and werewolves and vampires looking on. Mary was still in vengeance intoxication, so she was only half paying attention. \n\n\"Adam was obsessed with the idea when he found out. He turned an entire village into living vampires, and they followed him like a god. About then, we both reached the age that our father felt was necessary to make his presence known. One night, the King of Blood sent his spectral body to inform his children of their heritage.\"\n\nNot a sound could be heard throughout the clearing, as even the crickets seemed shocked into disbelief.\n\n\"The . . . King of Blood?\" Captain Grom asked. Those with magical knowledge were forced to understand the complicated demon realms as one of their first lessons, because demons fucked with all the other rules. Dante had fallen a little short in his guess, as it turned out there were thirteen layers of the demon realm, each more dangerous than the one before. The thirteenth layer was ruled by The Nameless One, and He was beginning and end of evil as any race understood it. His primary general, the ruler of the twelfth layer of the demon realm, was the King of Blood. His world was literally a lake of the spilled life-force of every evil-doer that had ever been denied access to that place considered \"heaven\" by the races of Earth. The King of Blood was the boogeyman, plain and simple. \n\n\"I told you my mother's wantonness attracted many to her bed. Apparently, even the kings of hell were impressed. He had come to her one night and . . . done things,\" she whispered, not ever wanting to think about those things her demonic father had admitted to. \"He had broken her in some way so that only he could provide the pleasure and pain she needed just to exist. He told Adam and I that it was his demand for his children to rule the world, and subjugate those favored by their enemies above. He told us that we would receive our birthright upon our death. It didn't make any sense to me, but Adam embraced his destiny. I didn't, but 'no' isn't the sort of thing you casually say to the King of Blood. He beat me until a mere thought from him would kill me, but he stopped short. Two of his fangs fell to the ground in the form of daggers, and he said one was for each of us. He gave the first to Adam and called it 'The Spike.' The second he called 'The Thorn,' and told me I could have it when I learned to behave. In the meantime, he would help my brother into his powers, and I was tasked to look after him. Then with one blow, he killed my brother and gave him his first death. He buried Adam in a shallow grave, looked at me and said, 'When he rises, you will understand what you can become.' Then he grabbed Lillith and took her back down to the Twelfth Realm.\"\n\n\"He just left you there?\"\n\nSadie nodded. She had felt so helpless, lying on the ground like a discarded doll waiting for only hell knew what. She couldn't even raise her arms to get water. \"I was recovering faster than a human, but still not fast enough. When Adam rose . . . I knew something was wrong. He was half human and half demon, and his powers as the first ever undead were so --\" She actually stopped and shuddered. The energy in the air when Adam emerged from the Earth had beaten her down so much that if she hadn't healed some during the day, it probably would have ended her. \"Adam rose and knew what he was. He understood his power . . . glowed with it. He wanted to show me what power meant to him, and I was too weak to resist him.\"\n\n\"Too weak to . . . resist?\" Vlad asked. He didn't want to ask the next part, but something in her wouldn't let it go. \"Resist what?\"\n\nMelissa was on the verge of crying. She could feel her creator's pain across thousands and thousands of years. Some wounds never healed. \"He raped you, didn't he?\"\n\nSadie looked towards the ground, ashamed despite the fact that there was nothing she could have done. \"Rape is about power. He had it, and I didn't. That was the kind of creature that Adam was. Then he left me there to find his followers. He was going to deliver the first death to all of them. He promised that if I didn't swear loyalty to him when he returned that he would give me to his followers as a present, and that I would remain a slave until I died of old age. He was going to raise an army and conquer the human race, just like our father wanted. If the forces of hell couldn't conquer heaven, they would conquer earth through us.\n\n\"But his plans were interrupted when daylight came. He didn't know that it weakened him, and he had to hide. It gave me enough time to recover, grab the Thorn, and go to the nearest villages for help. I told them what was happening and what Adam had planned. I tried to explain what he was, but it was hard since I didn't really know. Solomon seemed to understand though. Somehow, he knew exactly what we would be capable of in our undeath. That should have scared me, but I trusted him so much.\" She paused, since she was fighting not to say that she had loved him so much. Love, even when betrayed, never dies. Sometimes it festers and stews and morphs into a hate so passionate that it eats away at you, but it doesn't actually die. \"All the humans capable of fighting gathered what tools and weapons they could and began to search. Solomon and I headed up the party, and I thought he was so brave. We got back to my home shortly after nightfall, but Adam and his forces had already arrived. That was when I found out what Solomon's real intent was. He wasn't being brave, but rather wanted to join Adam. After everything my brother had done, Solomon cared more about sharing my brother's power than anything I could offer him. So he pulled a stone knife and stabbed me in the back. I spun and slashed him across the forehead with the Thorn, but it was almost out of instinct. Part of me couldn't believe he'd betrayed me.\"\n\n\"Son of a bitch!\" Devlin growled. He felt dirty in the deep places of he soul when he thought that he'd almost let the Blood Saint Turn him. He had been obsessed with the power and magic of being a vampire, just like Solomon had. \"That's how he got the wound that never heals?\"\n\nSadie nodded and actually smiled a little. She saw Devlin's anger and her opinion of him grew. It was a hard way to learn a lesson, but he now realized there was a cost to everything, and he was now wondering if he'd be willing to pay it. \"Solomon's blow didn't kill me, but it took me out of the early part of the fight. Some of the villagers I had befriended pulled me out of the way before hell broke loose. We had them outnumbered, but they were powerful. But even with their abilities, they were all new. Not even Adam completely grasped his own his own capabilities, but he was still so vicious. I knew that if we didn't stop him that the undead would win.\"",
        "There was a moment of quiet in the clearing. This listeners, almost as if part of a group mind, together realized that this moment had been one of the most important in history. If Sadie's . . . Eve's meager army had lost, then vampires would have ruled the world. And it was a secret that this one woman had carried alone for so long.\n\nSadie continued. \"Adam had grabbed a young man and hauled him into the air. I saw that the human was terrified. I couldn't let him die . . . not like that. The wound in my back hurt so much, but I had to stop Adam. I launched into the air and grabbed the young man away from him. I protected him as much as I could while getting him to the ground, but Adam was in a rage. He tried to slash up my back, but I managed to evade. We fought in the sky as the battle went on below, and I knew that I was losing. He was so much stronger than I was. But he was distracted when he saw that the vampires had been backed up to the cliff. While I had distracted him, the humans had rallied. With his attention drawn elsewhere, I plunged the Thorn into his heart, then drove both of us into Solomon. I knocked Solomon down, but Adam and I went over the edge. Adam was dead and I was close to it. With Adam gone, Solomon fled the battle, and the rest of the vampires were killed and pushed over the cliff. That was how I finally died, bleeding to death under the corpses of my enemies.\" She could still taste their dead blood running into her mouth as she was unable to move, and the suffocating feeling of corpses piled up on top of her. The humans she had wanted to save thought she was dead, so she was left there.\n\n\"The bodies on top of me acting as my earth, and even as they charred and turned to ash above me, they apparently counted as protection. When night fell I . . . I got myself out of the pile of bodies.\"\n\nAgain it was Melissa who heard the part that had been left unspoken, but it was something that didn't need to be shared with the mob. She could taste dead flesh and feel it under her own nails as assuredly as if she had been there with Eve when it happened. Mel's creator had litterally clawed and chewed her way to freedom.\n\nSadie stared up at the night sky. \"I was mad by the time I was freed, as in 'stark raving mad'. Everything that had happened . . . just too much. I fled into the wilderness, surviving as best I could off the blood of animals.\" Animal blood could do in a pinch, but it isn't healthy for a vamp to try and stay on it too long. It had probably kept her mind unstable for as long as it did. \"I think I was lost for decades before I encountered a nomadic tribe. I found a young girl alone by a river and I saw her as prey, so I jumped on her and fed. But her blood helped bring my mind back, and I stopped before I killed her or Turned her. I released her and apologized profusely, but she didn't understand a word that I said. But she was unhurt and was curious about me despite what I had done and the very sexual reaction she had to it. I let her look me over while I tried to figure out some way of making amends for taking her blood. She took me back to her tribe, and there was someone there who spoke my language. They heard about what had happened and saw that I was powerful. They said that if that I served them for three years as a protector during the night, and they would protect me during the day. I was mostly immune to the sun by then, but I still needed to rest sometime.\"\n\n\"So you stayed with them?\" Vlad asked.\n\n\"Yes. I think that's where my love of traveling started. I saw so much of that tiny world and was fascinated by all of it. Once the tribesmen and women realized that my bite had very pleasant side-effects, finding donors was not a problem. Everyone got a chance to donate before I would repeat anyone. I figured out that if I didn't immediately mix my blood with someone else's that it had magical properties all its own. It could be used to heal, but I had to be careful not to use it on someone whose blood I had recently shared. After seeing what had happened with Solomon and Adam, I swore that I wouldn't create any more like me.\" She looked at Mel and touched the girl's face. \"I kept that promise for seven thousand years, but don't think I regret saving you. I hope you don't hate me for what I did.\"\n\n\"Why would I hate you?\"\n\nSadie's eyes misted over. \"I made you part demon. Except for myself, you and Solomon are closer to the source of our power than any other vampire.\"\n\nCaptain Grom looked perplexed and awed. \"So with Lilith gone, your brother gone, and Solomon being one of your 'children,' then that means . . . good God, you're the mother of every vampire alive today in some way or another.\"\n\nThe crowd was hushed again. The rules of the world, both vampire and otherwise, had just changed irrevocably. \n\nVlad's face was almost unreadable when he asked, \"Why didn't you go after Solomon? Why not take him out before now?\"\n\nSadie's face fell. \"Communication wasn't the same back then. You could live just five miles away from someone for your entire life and never know they existed. Solomon had fled far north before suffering his first death, after which he had run even further. I later found out that he was terrified that he'd be discovered. I never formed a bond with him like I did with Melissa, so he and I didn't even know the other was still alive. It was a thousand years before I had ever heard of him again, and almost five hundred more years until I discovered that he was holed up in Russia somewhere. The people up there were suspicious of him, so he wasn't able to amass an army like Adam had tried to do. He had created some vampires and had them Turn others, then he killed his immediate children.\"\n\n\"Why?\" Fitzpatrick asked.\n\nGrom understood the basics here. \"Let me guess . . . the closer to the original source of vampire power, the more powerful you are. He probably did it to make sure that none of his underlings could ever challenge him.\"\n\nSadie agreed. \"That would be my guess. And fifteen hundred years was a long time to continuously hold a grudge. It would have taken a much bigger war to drag him out of his hideout, and the vampires those days were neither as fanatically obedient nor as violent as Adam's had been. Solomon was more obsessed with personal glory than conquering the world, so I decided it was best to let the vampire race make its own way. If Solomon had known I still lived, then there would have been another fight, and the known world would have had no choice but to take sides. So for the sake of everyone, I decided to disappear forever. I found a village shaman in Africa who helped me control my animal side, allowing me to hide my wings and keep my presence under wraps. I became just another vampire, including taking a new name.\" She looked at Melissa and gave her daughter a shy smile. \"I've had about twenty. I started changing more often once the Book of Names was created.\" She looked back to the crowd. \"I stayed away from my own kind as much as I could, staying off of the radar of anyone who might report back to Solomon. Finally, 'Eve' was nothing more than a distant memory in the mythology that Solomon had created, and I was fine with that. I didn't want to be Eve ever again.\" She laughed a dark laugh and said, \"Fat lot of good that did.\"\n\n\"There's no running this time, is there?\" Vlad asked.\n\n\"No. I could never just vanish again. I don't want to. I like being Sadie Hewitt. I like being here. And now that I know that Solomon wishes to follow in Adam's footsteps, I can't let him go.\"\n\nGrom looked abashed when he said, \"He may be an evil son of a bitch, but he hasn't actually broken any laws yet. How are you going to stop him?\"\n\n\"Can you use vampire law?\" Devlin asked.\n\nSadie pursed her eyes. \"What do you mean?\"\n\n\"By vampire law, a child who turns against his or her creator or otherwise acts in a way that endangers vampires in their associations with the mortal races can be punished by their creator in whatever way he/she sees fit.\"\n\nSadie smiled. \"You really WERE doing your homework weren't you.?\"\n\nDevlin blushed. \"I had free time on my hands.\"\n\nSadie stood before the assembled crowd that had been hanging on her every word. She felt a profound sense of relief. She had born that cross of memories for a long time, and it was nice to finally be able to share some of the load. \"The question is, do any of you believe me?\"\n\nThere was an awkward silence that was finally broken by an unknown voice. A human male stepped forward and it took Sadie a moment to recognize him as the man she had saved in the warehouse.\n\n\"I do,\" he said softly but firmly.\n\n\"And you are --\" Grom started.\n\n\"My name is Thomas Jervin.\" Thomas's . . . or Tommy's . . . eyes never left Sadie, and it was a look of admiration and a deep, soul-searching kind of love. \"She saved my in that warehouse fire. I've been working up the courage to come here, but when I heard about tonight . . . You can't be a thing of evil. I had lost my mind as was on the verge of losing my life, and you saved both. Nothing evil would have done that. My thoughts are my own for the first time in years. You know what that means, don't you? When you recovered from your own madness, what was it like?\"\n\nShe sighed. \"Like life was beginning again.\"\n\n\"Yes, that's it exactly.\"\n\nVlad looked from Sadie to Tommy and back. \"You used your blood? It wasn't a backlash of the spell at all, was it? You could've been discovered --\"\n\n\"I couldn't let him die,\" she whispered, her eyes on the man in front of her.\n\nVlad walked up the stairs and stood next to her, drawing her eyes to him. He could see how badly she wanted to cry and break. \"Tell the world, he said. \"Let them know what Solomon is going to do. Don't the vampires have to follow you now?\"\n\n\"If they believed me, then maybe. I'm the oldest of us, but changing a mindset that is this old isn't easy.\"\n\nVlad looked out to the crowd this time, drawing himself up as an alpha wolf and saying, \"Who here believes her? Who believes what this woman has said?\" \n\nAlmost every hand went up.\n\nVlad nodded. \"Remember what Devlin said . . . the wraiths do not aid those with selfish motives.\"\n\nThe rest of the hands went up.\n\nVlad smiled and once more directed his attention to the beautiful creature on the deck with him. \"Let everyone spread the word that the true Mother of all Vampires has returned to correct the Lie of Solomon. Tell every vampire that their 'Blood Saint' has decieved them for his own ends, and tell every mortal what Solomon intends to do.\"\n\n\"That'll start riots in the street Vlad,\" Grom replied.\n\n\"No,\" Sadie said, \"I won't allow that.\" She looked at Grom. \"Solomon will be holed up with Lord Frost. Send him a message. I demand punishment of my offspring for creating a rift between vampires and the mortal races. Where would be a good place to meet?\" she asked.\n\nIt was the human Tommy who was first to respond. \"How about Downlands Park? There's a large field there, and it's not in West End.\"\n\n\"That sounds good,\" she said. \n\nHe smiled. \"I'll talk to the media. My story should help win you support amongst the human population at the very least.\"\n\nVlad nodded. \"And you've already got the support of the wolves. We've taken enough crap from Solomon's vampires that we're more than willing to stand with you.\" \n\nThis was the Vladimir Koloff that Sadie had longed to see. This Vlad had a power that was as potent and wild as an avalanche, and it was ready to be unloaded on those who opposed Sadie Hewitt.\n\nVlad wasn't done. \"Todd, go home so that you and my sister can start a calling spree. I want every pack leader you can find to know about this and I want them keeping an eye on the vampires. I don't want them doing anything, but I don't want the vamps coming to Solomon's aid either.\"\n\nMary seemed calmer now. \"We will make sure that Solomon doesn't flee,\" she said, her voice filled with ghostly promise.\n\n\"Can your wraiths control your hunt for long?\" Sadie asked.\n\n\"Yes. Your need for vengeance is so personal that we can bury our hunger for a time being, but we will see that justice is served. Solomon will face you because if he doesn't, the wraiths will hound him for now until the end of time and from the gates of Heaven to the lowest of Hell's realms.\"\n\nVlad looked at Grom. \"Captain, I advise a police presence at the entrance to Ms. Hewitt's property for a while.\" He turned to Frankie. \"You think that you and your boys can patrol the area and discourage any unwelcome visitors. \n\nFrankenstein grinned. \"I think the boys might just have fun with that.\" \n\n\"Then everybody get moving.\" \n\nAs the crowd began to clear out, Sadie jumped down and caught up with Devlin. \"Thank you,\" she said. \"The things you said . . . the things you did --\"\n\n\"I was a fool before,\" the young officer replied. \"And you were right. I need to think about this a lot more now.\"\n\nShe looked him in his big brown eyes and said, \"When you are done searching your soul and if you decide you still want it, I would be proud to bring you over.\"\n\nDevlin blushed. \"Letting you nibble on my neck? I'm not sure I'd survive.\"\n\nSadie smiled. \"I hear its not so bad once the mind-numbing orgasm starts.\" She patted him on the cheek, then turned back to the porch only to find Tommy in her way. The handsome man looked at her with eyes as clear as a desert morning after a long rain. He hugged her and she let him. There were no more words to express what she had given him, and no need to tell him that she would do it all again. \n\nSoon, all that was left was Sadie, Melissa, Mary, and Vlad. Everyone else faded into the woodwork to accomplish the tasks that the alpha wolf had laid out for them. \n\n\"I've made such a mess of this,\" Sadie said, her eyes looking towards the moon and the darkness that surrounded it. \n\n\"This isn't your fault,\" Melissa replied. \"You can't --\"\n\n\"I should've hunted that bastard down,\" Sadie interrupted. \"Hell, we both should' have died on that cliff. The children of the Throne of Blood should never have walked the mortal world.\" She ripped one of the boards off her deck railing and hurled it across the yard. It was a pointless gesture, but it gave her something to do. \"I'm cursed, and my curse has spread.\" She looked at Mel. \"If not for me, you're living a nice, normal life. No one is trying to kill you.\"\n\n\"I don't want a nice normal life,\" Mel said, wringing her hands. \"I don't think I lived a day of my life until you showed up.\"\n\nMary's eyes cleared for a moment as she controlled her deadly thirst. \"I would be alone.\" She looked at Melissa with such hope-filled eyes that it pulled at Sadie's heart to watch. Maybe something good would come out of all of this, assuming they lived.\n\n\"I'd be stuck in a dead end marriage,\" Vlad added. \"I wouldn't be who I needed to be.\"\n\n\"You couldn't be anyone else,\" Sadie replied. \"You don't have to be doing this.\"\n\nVlad actually looked miffed. \"Doing what? Guarding your ass? Actually, yeah I do.\"\n\n\"Why?\"\n\nHe rolled his eyes.\n\nMelissa looked at Mary. \"This might be a good time for me to go check on the cats.\"\n\nMary smiled. \"I'll go see how the rest of the wraiths are doing. Solomon has some impressive set spells protecting him right now, so all we are doing is holding him.\" She kissed Melissa and then vanished. Melissa hugged Sadie, drank in her mother's presence and then vanished into the woods.\n\nSadie looked back to Vlad, who was staring at her and tapping his foot.\n\n\"Let's start,\" Vlad began, \"with the fact that you're defending all the mortal races, not just humans. That means the weres, which makes it my business. Let's not forget that because of you, I'm free. You finally made me see that Teresa was an albatross that I kept around my own neck. YOU, in you own insanely frustrating and highly confusing manner, have made life more interesting than it has been . . . ever!\" At this point, Vlad was waving his arms wildly.\n\n\"Interesting? Vlad, I lied to everyone! I'm in the process of screwing an entire race's self image straight to hell, and I'm probably going to be put in jail afterward for lying to the Arbiter Bureau!\"\n\nVlad raised one eyebrow. \"See? Interesting.\"\n\nShe threw her hands up in frustration. \"I just wanted a place to hole up for forty years or so before moving on. I didn't want this.\"\n\nVlad stepped forward. \"Want what? You think that if you weren't here that Solomon wouldn't have tried this? You being here is the only reason we may have headed off a vampire take over.\"\n\n\"If I'd been a responsible parent, I would've taken charge of my children a long time ago. I never should've let it come to this.\"\n\n\"You already said why you let it go, and I can't say I would've made any different of a call. If you remember, I wasn't exactly willing to take control of my charges either, and I didn't have nearly as good a reason.\"\n\n\"You're pack had a good leader, just not as alpha as he should have been. The guy leading my race is a psychopath. And now, one of us has to die.\"\n\n\"Can't you just force him to admit what really happened? Make him back down?\"\n\nSadie laughed a humorless laugh. \"We are a proud people and Solomon knows this. If you just found out that the person providing moral and spiritual guidance to you for thousands of years was a liar and a crook, they won't just let you walk away. He has to kill me to keep the Lie going, and even then he'll have a small revolution on his hands. If I win, then people will be forced to accept my version of things. Besides, as long as I'm alive, the wraiths will keep after him. I've floating in a pool of vengeance for seven thousand plus years, and now they've all come to drink. I can't call for if I'm dead. Right now, I just have to figure out how he's coming for me. He won't wait for a fair fight or challenge. It's just not in his nature.\"\n\nVlad stepped up behind her and put hands on his shoulders. \"Which is one of many reasons that he never deserved you.\"\n\nShe smiled a little. \"A romantic sentiment from someone whose marriage I ruined.\" She felt his strong hands on her shoulders, spinning her around so fast she almost slapped him the face with her wings. \n\n\"Teresa ruined my marriage, not you. You just finally gave me enough to see that I couldn't ignore it anymore. Now, I feel more free and alive than I have in ten years.\"\n\nSadie couldn't deny how \"alive\" Vlad felt. This close to her, his scent was heavy and warm in her nostrils, and he practically glowed with his own power. Potent muscles rippling in his hands, his arms, and in that broad chest covered in a thin layer of flannel. She remembered what it had been like when she had fed off of him and how that entire body had been pressed against her. She had many a pleasant if somewhat embarrassing dream about that night. \n\nVlad hadn't forgotten that night either. \"Now,\" he muttered in a deep, darkly-handsome voice, \"I have something worth fighting for.\"\n\nSadie willed her heart to beat, though it didn't take much coaxing. If there was a chance that she might not live another night, then there was something she very badly wanted before this one was over. \"So, are you just a fighter?\" she asked, running her hands over that wonderful chest.\n\nVlad had resisted temptation for so long. Everything about Sadie Hewitt was perfect . . . not just physically, but for Vlad himself. She was wild, passionate, and wholly wonderful. Teresa had scoffed at his animal nature, while Sadie soaked it in and took comfort in it. Now, for the first time, there was no reason whatsoever to resist that temptation. He lifted her off her feet and kissed her like he'd wanted to for so long. He drove both of their bodies back into her trailer with a resounding thud, but Sadie hardly seemed put off. Rather, she wrapped her legs around his waist and her arms around his neck, kissing him back with a fever that he never would have imagined possible. Maybe for any woman less than Sadie, such heat wasn't possible.",
        "He cupped her ass while pressing her against the cool steel frame of her home, pushing his tongue into her mouth to tangle with hers. Sadie accepted the invasion, teasing Vlad's tongue and sucking on it, then pressed her lips harder against his. Against her groin, she felt his manhood rising and she remembered clearer than ever just how massive he was. \n\nThe alpha male needed to feel more of her flesh, ripping Sadie's peasant dress off with just a few powerful tears. Her perfect breasts were immediately exposed, letting him grope one of them hard while he supported her and kissed her. \n\nSadie hardly thought it fair that she was the only one naked at that point, so she began shredding Vlad's shirt. \"Pants,\" she gasped. She put her feet down and spun him around, shoving him against the trailer. In a flash, she was down on her knees and taking his pants with him.\n\n\"Good grief,\" she muttered. Vladimir wasn't even all the way hard, but he was already intimidating in size. It was just as well, since this state was a bit easier to manipulate. She took the head into her mouth and began to work her way down the firm length. Even partially soft, she was unable to take all of it, but she was enjoying giving it the old college try. \n\nVladimir removed the remains of his shirt as Sadie's mouth devoured his cock. It didn't take long to realize that being with a woman with over seven millennium of practice at fellatio had its advantages. She had raised her body temperature and was drawing air in, making her mouth and throat a hot and humid treat. His manhood didn't stay in its softened state long. She cupped his heavy testicles while she drew her mouth back to concentrate on the fleshy head of his penis, teasing the pee-hole with her tongue. Vlad's soon-to-be-ex wife had rarely been willing to provide oral pleasure, and usually had sent him on a guilt trip afterward. She had made sex with him seem like a burden, whereas Sadie appeared quite ready to devour him alive. Almost literally.\n\nThe mother of all vampires was unable to wrap one hand all the way around that tool, so she stroked him with both hands while she sucked on the head and the first few inches of the shaft. Sadie wasn't normally much of a size queen, but there was just something so right about Vlad being hung so generously. He was so perfectly alpha . . . alpha males should have impressive equipment.\n\nOnce fully erect, Vlad grabbed Sadie's head and began pushing his way deeper into her mouth. He remembered when she'd tricked him during the sparring session . . . she didn't need to breath. He grinned and shoved a little deeper. Her body still has some physical limitations and he didn't want to injure her, but he wanted to find where her limits were. After all, she was more than capable of stopping him whenever she wanted. Apparently, she didn't really want to.\n\nSadie had more of her lover's shaft down her throat than she had any right to, but the added pressure was more than a bit of a turn on. This wasn't the neutered puppy that Teresa had tried to make him. This was Vlad taking what he wanted. Luckily for him, what Vlad wanted overlapped nicely with what Sadie wanted, which was hot, rough, primal sex. She dug her fingernails deep into his pounding hips, drawing just the faintest about of blood as she swallowed almost half of his fleshy monster.\n\n\"Oh sweet moonlight,\" he groaned as he felt that tingling of pain where he was being gripped. He smiled down at her, letting her know that he was plenty game for getting as rough as she wanted. Her eyes met his and she pulled away, standing several feet from him. Her gaze carried a desire strong enough to scorch stone and her lips called out to him.\n\n\"Hunt me,\" she whispered. Then she took off for the woods. She heard his footsteps following after her as she entered the protection of the forest, but she didn't look back. She wanted to challenge him . . . to make him earn her favors. For a second, the sound of his feet vanished and she realized that he had jumped. She dodged to one side, but she was unused to running with her wings, so his hand grasped her shoulder and they went tumbling to the ground. \n\nVlad turned her on to her back and shoved both her shoulders into the forest floor. He didn't know how much damage her wings could take, but she didn't seem to concerned. To tell the truth, she looked enormously pleased to have been caught. He pushed his way between her thighs and slide his cock into her delicious sex. He felt that if he were to die the next day, then that one night where he could experience the delight that was her body would have made it a life worth living.\n\nHe drove what air she had in her body out and her stared at him with immense hunger as he pounded into her, savoring the tightness of her tunnel. Her face was the quintessential display of ecstasy, and she spurred his ass on with her feet.\n\nBut when he released his shoulder to grab her hips, she placed her feet on his chest instead and shoved him away. She grinned and took off again. \n\n\"This bitch is crazy,\" Vlad said to the darkness around him, but he was smiling as he did. This was wild . . . this was free. He took off after her, relying more on his sense of smell than his eyes. He got to a point where her scent seemed to vanish.\n\n'No,' he thought. 'She didn't go away, so she must have gone --' Vlad didn't have time to react before Sadie swooped out of the sky and knocked him on his back. She pounced on him and again took his manhood into her mouth. But she didn't stay there long. A few strokes while sucking on the head, a few licks along the fleshy underside and then she mounted it in a reverse cowgirl position, riding him for all she was worth. \n\nVlad had never experienced anyone like Sadie. She had the passion of a mortal woman, but the experience of an immortal. She splayed her wings outward and, under the light of the moon filtering through the trees, she closer resembled an angel than her demonic heritage. \n\nSadie rotated her hips, letting some of him slip out of her before sliding back in. After several circles, she bounced up and down on him, feeling him stretch her. He was large enough that she was still adjusting to him, but she was quite capable of taking a little pain with her pleasure. After a few minutes, she decided it was time to continue the chase. She stood up, buffeted her wings and rose off the ground. \n\nBut Vlad was ready this time, quickly gaining his feet and grabbing onto her ankles, pulling her downward. He was able to get a solid grip on her waist and pulled her down, thrusting her onto his cock. Then he pressed her against a tree, trapping her with his weight as he jackhammered her like a man possessed. \n\nBark and twigs were digging into Sadie's back in a way that most people would have found uncomfortable. For her, they were just more points of sensation to titillate her already heightened awareness. Sex was her drug of choice, and this was her ultimate high. She dug her fingers into his muscular shoulders, drawing blood yet again. It dripped and flowed in small creeks around his muscles and lightly furred chest. She licked some off his chest as he continued fucking her straight into the tree. \n\nHer head started to buzz and her blood started to boil as she consumed even the minutest traces of his life's blood. She felt a warm tightness down in the deepest part of her body, and it was growing to ravish her just as Vlad was. Small tremors became cascading shockwaves and she screamed into the comforting veil of night. It was a moment of such exquisite pleasure that she couldn't remember the last time she'd felt that way. \n\n'Sometime during Egypt's third dyansty,' she thought. And that had taken getting banged on top of a pyramid by a group of workers. And quite frankly, that had fallen short of what Vladimir was doing to her.\n\nVlad stopped long enough for her vaginal walls to unclench, reveling in the tightness of her. He felt her tongue dancing over the crimson pools adorning his upper body, and it made him feel harder. \n\n\"More,\" Sadie growled hungrily in his ear before nibbling on it. \"But you know where I want it?\" she murmured. She had narrowly resisted one of her favorite carnal indulgences over the past month or so, and she would deny it no longer. He was suitably coated in her juices --\n\n\"Sweetheart, even you can't handle --\"\n\n\"Awh,\" she whispered, grabbing a couple of branches and raising up until he slid out of her pussy and then let the head of his member brush up against the entrance to her ass. It would be like trying to drive a freight train up a logging trail, but she had no intention of backing down. \"Don't tell me I caught myself a were-chicken, did I?\"\n\n\"I seem to recall,\" he started, pushing her slowly down onto him, trying not to lose it the second that his cock-head penetrated her rectum, \"that I was the one that caught . . . (grunt) . . . you.\"\n\nSadie was capable of withstanding a great deal of punishment, but even she was on the verge of passing out as her back door was gently and methodically violated. Deeper and deeper it went, and Sadie's grip on her lover's shoulders tightened. The woodland crickets seronaded as she gasped, waiting for that one incredible moment when her ass would relax and she would accept all of him into her, or at least all that she could. And she wanted to . . . by the dark of night, she desperately wanted to.\n\nThe moment came, and several more inches of him slid into her. This would not be as forceful as more traditional entry, but it would be amazing just the same. Short strokes started them off, gradually increasing in both length and tempo. Sadie responded to each penetration with a grunt or a groan, all of which vanished into the shadows to be swallowed by the wild around them.\n\nVlad's hands began mauling Sadie's breasts, squeezing them forcefully as her ass consumed his manhood. This is something else his wife would never have allowed, much less enjoyed for passionately. So many people had warned him, but only Sadie had given him something more worthwhile to pursue.\n\nHe was halfway inside her bottom when he was simply unable to control himself anymore. He thrust in as far as Sadie could comfortably accept him, pressing himself against her body as he unloaded into her dark recesses. He had to be leaking out somewhat, because his seed kept coming in wave after wave, and he wondered if blood was the only life-giving fluid that Sadie could feed on. Indeed, he felt himself more than a little bit drained as his cock quivered its last.\n\n\"Oh God,\" he grumbled, leaning all of his weight against her as she wrapped herself around him.\n\n\"Goddess, actually,\" she said, almost giggling. \"It doesn't have to stop now,\" she promised.\n\n\"I'm . . . I'm completely spent,\" he replied. \"I couldn't possibly --\" Then he remembered what her fangs had done to him once before . . . he remembered because she was nibbling on his neck. \"Do it!\"\n\nShe needed no further encouragement, sinking her fangs into his thick neck. She didn't withdraw any blood, but pumped him full of the chemicals that lit his whole body ablaze with lust. She normally wouldn't give someone this much, but Vladimir was a sturdy guy, and she had work for him to do.\n\nShe felt him growing hard inside her ass again, but that wasn't what she wanted now. She shoved him away, watching his eyes as he prepared to give chase. But she didn't want to get away . . . not this time. She quickly got on the ground, spreading her wings so that she could look over her shoulder, crawling across the forest floor on all fours.\n\n\"Call your beast,\" she growled. \"Show me the best of you!\"\n\nHe did. All lycanthropes walked a world between humanity and pure animal, and that was what emerged from beneath Vladimir's skin. His human body became more furred, his chest and limbs more muscular and --\n\n'Oh my,' she thought in a lust-crazed haze, glancing at the fence-post that was thrusting up between Vlad's thighs. 'That's bigger too!' \n\nThe shaggy wolf head that adorned those shoulders may have represented his animal nature in this half-form, but the desire behind those eyes was clearly Vlad . . . clearly for her and for her alone. His put his clawed hands on the ground and sniffed at her exposed pussy. During mating, the alpha female decides when mating occcurs, not the male. He might be in charge the rest of the time, but not at this moment. His lupine tongue caressed her sweetness and he gave her a love bite on the firm flesh of her ass. Not enough to draw blood, but certainly enough to get her attention. \n\nShe glanced over her shoulder again and chuckled, thrusting her hips backward on that long tongue. That was an option to be explored at a later date, but she wanted him to mount her. So she met his eyes and then lowered her head, a sign of willing submission to his desire. \n\nVladimir quickly moved down her body, entering his even more potent manhood into her sex as he did so. He reached around her body and pressed his hands down on top of hers, letting her vaginal walls clamp down on his massive cock. He had her locked in placed. She was his, but he was no fool. She was his for now because she had had wanted him as badly as he wanted her. Sadie had been caught by choice, and it made his heart and pride swell that she had chosen him.\n\nAs when he had fucked her ass, he started slowly, but it took all the patience he could muster to keep it that way. She pushed back against him, taking as much as she could, but even her talented pussy couldn't handle all of him in this form. So he thrust in until her discomfort became obvious, then he withdrew. A few more penetrations to make sure he had his distance, and then he gave her exactly what she wanted: everything that he had. \n\nHis hips thrust into hers with power and speed like nothing Sadie had ever experienced before. She was so stretched and so full and so on edge that she couldn't imagine settling for less ever again. His cock raged inside her, stronger and harder than anything before. His hands gripped hers so hard she knew he could crush them, but was just as sure that he wouldn't. His furred chest pressed against her back between her wings, pressing down heavily upon her. He surrounded her and penetrated her and gave her everything she had ever wanted in a carnal act. He was primal and powerful and perfect for her.\n\nSadie realized that she loved him. No one matched her like he did. His character made up for her flaws, his body was built to satisfy her needs, and he power called to hers. She had not been in love in a very long time, at least not love with a capital \"L.\" She had cared deeply for many, but not like this. The last time she had fallen so hard, she had been utterly betrayed. She did not fear that from Vlad. She didn't fear anything from him except potentially his absence.\n\nVlad saw Sadie's face look back at him. Again, he thought of the differences between this magnificent creature and Teresa. Even when things had been better between them, the elf woman had never looked at him with such passion or . . . love?\n\n'Yes,' he realized, almost the same time that Sadie herself did. 'She loves me.' The sentiment swelled in his own heart to match hers. She had given him back to himself, and he loved her for that. That, and for so many other reasons. He remembered that biting your lover during coitus rather than just feeding was a sign of great affection in vampire culture, and for it to be allowed was a sign of trust and respect. She had bitten him, and now turn about was fair play.\n\nSadie felt those powerful jaws pressing down on her skin, prickling both sides of her neck. She froze, but not from fear. She wondered if he truly had any idea how that felt to her. It was like lightning bolts of ecstasy jabbing into her in a dozen different places. \n\n\"Yes,\" she crooned heatedly. \"Oh yes!\"\n\nWith that, Vlad exerted more pressure. He broke skin lightly in a few places, but nothing dangerous. The effect was instantaneous and amazing. \n\nSadie started to climax the moment that those little deadly tips crossed the barrier of her skin and let her blood flow. And the orgasm seemed to have no endpoint, wracking her body as he continued his machine-like thrusting. She was like a snake being electrocuted, her body writhing underneath him as pleasure rampaged through every nerve ending. \n\nVlad was getting a taste of Sadie's blood, and it was sweet, powerful elixir. The blood of a powerful demon flowed through her veins, but he didn't fear it. Sadie had shown that her blood could heal, and he saw no evil in that. Rather, just a taste of it invigorated him, healing the bite wounds and claw marks she had given him and giving him energy. He used that energy to redouble his efforts.\n\nWhat the pain of anal intercourse had not accomplished, the pure bliss of what Vlad was doing to her almost pulled off . . . Sadie almost passed out. She was in the throes of a powerful series of orgasms that seemed to go on forever. Her sexual juices flowed from between her thighs and covered both of them, as well as making Vlad's job that much easier. \n\nAfter what seemed like forever, he released his jaws from her neck, thrusting all the way into her body and raising his face to the moon. He let out a howl that sent prey animals scurrying as far as they could, while the wild wolves of the northwest had no choice but to answer. The night filled with their primal howls. Sadie simply screamed her pleasure, joining her wild counterpart. Once again, Vladimir's sperm flowed into her and once again she accepted it. \n\nHer mind and soul glowed with a delicate sense of peace and contentment. She sank to the earth and a bed of leaves, but it felt comfortable. Vlad came with her, his warmth making her feel safe, something she didn't even know that she needed or wanted. He was still firm and strong inside her, keeping them joined. She didn't want to be separated from him now that she'd found him. She did feel him shift back to his full human form, and his lips kissed the neck that he had gripped with his animal teeth just moments earlier. He had taken her like an animal, but now he loved her like a man. Between the two, he had become everything to her, so she rolled over and kissed him back. \n\n----------------------- ----------\n\nThe next night . . . .\n\n----------------------- ----------\n\nMelissa had been grinning up a storm when she arrived at Sadie's trailer. Vlad was sitting in a lawn chair on the deck looking like he just ate the canary. One of Frankenstein's bikers had been able to lend him a set of clothes, and the Gravestones police officer looked damn good in leather pants and a denim shirt. Sadie looked more than a little satisfied herself. She was back wearing her skin-tight blue-jeans, tanker boots, and a vest that she had altered to let her wings stay free. She was showing quite a bit of cleavage, which didn't seem to bother her, Vlad, or anyone else standing nearby. \n\nMelissa had been staying at Mary's house since she'd left the previous evening, and she'd heard the two of them \"cementing their relationship\" from a mile away. There probably wasn't a creature in the surrounding area who hadn't heard it. She poked her head in the door of the trailer on a whim, and found that just about every piece of furniture had been busted or overturned except the bed, which was made of sterner stuff. The cat came out and looked around. The poor thing had been terrified. Apparently, the sex-fest had continued inside well after they'd had their fill of the great outdoors.\n\n\"Tell me you at least fed the cat,\" Mel said with a smile, hugging her creator firmly. Due to their close psychic connection, she had a pretty good idea just how much Sadie had enjoyed Vlad's company. There was a glow about her that couldn't be mistaken for anything other than love, even though Mel had never seen it before. Of course, she hadn't spent a night with Mary since she'd Turned, but she hoped to see that glow in her own mistress some night. ",
        "\"I think I put a bowl in the closet at some point,\" she pondered lazily, her eyes traipsing Vlad's taut form, while his lingering on the vampire's tantalizing breasts. There were bikers, werewolves, a number of police officers, and the human that Sadie had saved at the warehouse present, but Sadie and Vlad only had eyes for each other. \n\nMel rolled her eyes. She stood near Sadie and snapped her fingers in front of the vampire's face. \"Hello? Anyone in there? Potentially apocalyptic fight with Solomon coming up? Any of this ring a bell?\"\n\nSadie's face fell a bit. \"Spoilsport.\" With one last glance at Vlad, she brought her attention back to where it needed to be. \"But you're right. He won't play this fair. Hell, he won't even play by the rules he wrote. He's only a quarter demon, and he's had the Blood Brood defending him for most of recorded history.\"\n\n\"Don't discount him,\" Vlad said, his mind back in the game. \"He's backed into a corner. And there are those who have a lot to lose if the vampires wind up following you instead of the Blood Saint.\"\n\n\"Frost you mean?\" Sadie asked.\n\nDevlin raised a fist and started to count on his fingers. \"Frost, the Blood Brood and the rest of Solomon's entourage, the elves and the witches who have been sucking up to them --\"\n\n\"I get it, I get it. He's got a lot of friends,\" Sadie said, rubbing her temples. \n\n\"Don't underestimate your own support,\" Vlad said, standing up and rubbing her temples and shoulders for her. He just didn't want to go long without touching her. \"The vampires have stepped on a lot of toes, so most of the mortal races don't trust them. You KNOW the wolves are behind you, and probably the goblins and humans as well.\"\n\n\"True dat,\" Frankenstein said, popping open one of Sadie's last bottles of Guinness. \n\n\"So he comes for me, but when? He's not going to attack me here,\" Sadie pondered. \"It would be suicide to attack a vampire on her own ground, particularly when she's got support.\" \n\n\"We could go on the offensive,\" Todd said. Sadie was convince that Vlad's nephew had a future in wolf politics, because he was interested and involved at a relatively young age.\n\n\"Nope,\" Sadie said. \"I've got to play by the rules. Remember, my own children call me the Betrayer. If I want to convince them otherwise, I have to take the high road.\" She growled. \"I can't turn this into another war,\" she said. \"The last one almost ended my species. While sometimes I think that might not have been a bad thing, I've found there's some hope for us yet.\" This last was directed at Melissa, who blushed just a little bit. \"Heard from Mary yet?\"\n\n\"Yeah, she appeared for a bit this evening. The wraiths still have Frost's mansion surrounded, but the Blood Rampart has it pretty secure. They're probably planning just like we are.\" She glared at Vlad, who's hands were drifting a little low to be giving a \"shoulder rub.\" \"Get a room,\" she chuckled.\n\nSadie looked towards the trailer. \"We kind of trashed it,\" she said happily. Then she reluctantly pushed his hands away, just as a patrol car pulled up the drive with Captain Grom inside.\n\n\"Hey Cap'n\" Vladimir said, leaning against the wall of the trailer.\n\nGrom met the officer's eyes. \"So this is why you called in sick? Again?\"\n\nVlad shrugged. \"Something came up.\"\n\nSadie was grinning from ear to ear. \"Several times as a matter of fact.\"\n\n\"Good grief.\" Mel rolled her eyes again. \"What's the word Captain?\"\n\n\"You know you've got a ring of camera crews around your property? They're all wanting to talk to you and figure out if you're going to accept his challenge.\"\n\n\"Challenge?\"\n\n\"Yes. He is challenging you to meet him at Downlands Park, where, and I quote, 'She will beg for my mercy or her own life.' The fact that YOU challenged him first hasn't quite registered yet. He's claiming that you are demon-tainted alright, and that it was you and not your 'mutual' mother that lay down with them. He's saying that the reason you seem so powerful is a deal you made with the Lords of Hell, and NOT that you are superior to him in any way.\"\n\nSadie's face changed to stone. \"He wouldn't challenge me to a fair fight,\" she uttered. \"Even if he were so sure of his own power, mine would be a mystery to him. Solomon is a coward above all else.\"\n\n\"He's a coward with nowhere left to run,\" Vlad reminded her. \"He's more dangerous than ever.\"\n\n\"I have to face him though,\" the mother of all vampires reminded him. \"I try to play it safe or wait him out, then his words gain strength. When did he want to meet?\"\n\n\"Midnight,\" Grom said. \"High noon for darkworlders.\"\n\nSadie walked to the edge of her deck, staring up at the risen moon and letting it softly caress her face, realizing it could be her last night on earth. She didn't want anyone else to know how much the notion of death scared her now. Never mind that she had a vampiric child that she cared about, or a lover than made her dead blood sing. She had walked the earth for seven thousand years, and she was used to the world. What lay beyond was . . . well, beyond her.\n\n\"Once more into the breach, dear friends,\" she whispered. \"Let's mount up.\" She looked at her friends, the daughter of her blood, then the holder of her heart. Then with a powerful stroke of her wings, she took to the sky.\n\nMel felt Sadie's fear. Her connection to the vampire mother was powerful. \"Uneasy lies the head that wears the crown,\" the goth vampire replied softly, then headed for her car. \n\n------------ -----------------\n\nMidnight . . .\n\n------------ -----------------\n\nThe area around the park was around Downlands Park was a sea of movement, consisting of both mortal and immortal races, cars, camera-crews, and cops. It was so thick that movement was almost impossible, except for two roads leading up to the par that were kept clear by the national guard. One road for Solomon, and the other road was for Sadie's forces . . . Eve's forces. Not that she much cared, as she flew the whole way in. There was a large stone circle in the middle of the park, and it was encased in a set magical sphere. Solomon's Blood Rampart were part of its power supply, but so was the Northwestern Coven. It seems like lines had been drawn in the sand while the primary players had slept. \n\nThere was a pavilion set up on one side of the circle, and Sadie could feel Solomon's presence emanating from inside. She landing on the other side of the circle, where she was joined by her entourage. She looked around and saw Vlad, Mel, Devlin, Tommy, Frankenstein and his riders, a smattering of werewolves that this time included Todd, Ivan, and Anya. And Bart?\n\nShe walked up to the captive demon, anger and pain on her mind.\n\n\"Give me one reason why I shouldn't --\" Her thoughts of vengeance stopped when Bart got down on his knees, bowing before her.\n\n\"I beg your forgiveness your majesty,\" the yellow-skinned demon said. There was no sarcasm or disdain in his voice this time. \"Had I known, I would have shown you the respect you so richly deserve.\"\n\nSome people nearby took pictures of the demon groveling at Sadie's feet. She didn't know if this would help or hurt her cause, but if she didn't defeat Solomon then it really wouldn't matter. \"Your majesty?\"\n\n\"You are the daughter of the King of Blood,\" he whispered, pressing his forehead to the ground. \"You are the heir to one of the Thrones of Hell.\"\n\nSadie shook her head in disbelief. \"Bullshit. I hate my Father, and I have no intention of claiming anything of his.\"\n\nBart met her gaze now, and it looked hungry. He knew who she was, and serving her would put him in good graces with the King of Blood. \"Hate is a good thing in Hell,\" he replied. \"And you are his heir whether you intend to inherit or not. Even should you choose not to rule on Earth, you will serve at his right hand when you find your way to the next world.\"\n\nShe turned and walked away. This was not a conversation that she wanted to have with Bart. Hell, there wasn't any conversation that she wanted to have with him. \n\nMelissa was glaring at Bart as Sadie walked away. She knew what he had done as surely as she knew the sun would rise that morning. Terrence was dead because the demon had been playing games. Melissa had been left crumpled and bloody in the ruins of her car because of Bart, and Sadie had been forced to make the decision that had led to this war. Melissa had never been a hateful person in her life, but she wanted Bart gone from this plane of existence, and for the first time she could see herself being responsible for it.\n\n\"What did he want?\" she growled.\n\n\"To worship me, apparently.\" She was quickly surrounded by her crew, all of whom looked all business. Cameras were flashing and a ton of reporters were trying to get close, only to be held at bay by the majority of the Northwestern wolf pack, along with bikers and a number of . . . goblins?\n\n\"Where'd the goblins come from?\" Sadie asked. The squat creatures weren't known for being organized fighters, thought they could be really nasty when backed into a corner. \n\n\"We called some folk,\" came a voice near the circle. It was Marge, the goblin waitress/co-owner of \"Roll the Bones.\" \n\n\"What the heck are you doing here?\" Sadie asked, grinning in spite of the situation. She liked the sass-mouthed waitress. \n\n\"Lady, you've been paying attention to the little people since you got here, makin' sure they's taken care of. Time for us little people to watch your back.\"\n\n\"You didn't have to do this,\" Sadie said, looking at the goblins interspersed amongst her impromptu guard. \n\n\"Goblins never HAVE to do anything that they don't want to,\" Marge said, then held up a little brown bag. \"Made ya some fresh rolls. Shouldn't face the apocalypse on an empty stomach.\"\n\n'How can a woman seven thousand years younger than me act like a mother?' Sadie thought, taking the bag and kissing the goblin on the head. Vlad was at her side instantly. She smiled and handed him a bit of baked heaven while she scarfed down another. \"Mmmh,\" she moaned happily. \n\nMel came over, but she wasn't interested in food. \"Sadie, they've been holed up in there for an hour. Solomon's got most of the Rampart on the shields, but not all of them, and what's left of his Blood Brood is inside too.\"\n\n\"They can't accept the challenge for him,\" Sadie said. \"They can't enter the circle once the challenge has begun. I know he's up to something, but I'll be damned if I can say what it is.\"\n\nMel kissed her creator's forehead, then a brief but warm kiss on the lips. Mary would forgive her this one indiscretion. \"You're smarter than anyone I know, and you're a survivor. You'll figure out how to win this. I know you will.\"\n\nLord Frost had walked out to the center of the circle, looking like he was preparing to make an announcement.\n\n\"Arrogant bastard,\" Sadie said. \"He isn't the master of ceremonies here.\"\n\n\"Ladies and gentlemen,\" Frost's voice boomed out, hushing the enormous crowd to silence, \"tonight, the Devil incarnate has returned from the grave to challenge the Blood Saint of the vampires --\"\n\n\"Blah blah blah,\" Vlad growled. \"He's just trying the crowd against you again.\"\n\n\"The energy of the crowd can be a weapon,\" Sadie replied. \"Many a king were toppled by an angry mob.\"\n\n\"Then you need to get your message out there.\"\n\nShe nodded, turning to Melissa. \"So what do you think? Want to be my spokesperson?\"\n\n\"Me?!\" Mel yipped. \"I'm a horrible public speaker and --\"\n\n\"You are perfect,\" Sadie said, taking her daughter's hands. \"You believe in me, and that means something. Don't be intimidated by Frost. He may be older than you, but you are of MY blood, and don't forget that. You can be just as powerful as him, maybe moreso. I need whoever speaks for me to speak from the heart, even if that heart is dead.\" Sadie returned the kiss from earlier. \"Mary chose you not because you were weak but because you were strong enough to withstand anything. I believe in your strength too.\"\n\nMel turned back to Frost, who was just finishing up his speech, reciting the great Lie . . . the story of Eve's betrayal of Adam and Solomon. It raise the hair on her necks to think of the pain and scorn that her friend had endured in silence for so long. Without looking back, she walked towards the center, the magical shield allowing her to slip by. She was terrified, but she wasn't going to let Sadie down.\n\nOn the outskirts of the circles, she saw many blue glows. The wraiths wanted to get closer . . . to kill Solomon, but they were being held at bay by hordes of witches. One wraith seemed less animalistic than the rest, and her eyes followed every step Melissa made. Mary even raised her hand to her heart then her lips, finally pointing at Mel.\n\n\"You're in way over your head little girl,\" Frost snarled under his breath, pushing down on her with his presence. He looked somewhat shocked when all she did was smile in response.\n\n\"Don't try parlor tricks on me old man. My mother is the mother of us all, and I look forward to her punishing you for you insolence.\" Then she turned her back on him. \"To all those in attendance here and those watching from afar, I have a far different story to tell.\" Her voice carried like music through the air, surprising even herself. She could do this. She WOULD do this. \"Since many great civilizations now long gone were nothing but a dream of the future, a great Lie has been told by Solomon and by people like Lord Frost.\" She launched into the truth that Sadie had described to her, leaving nothing out. Some would be embarrassing to Sadie and some would be graphic, but she wanted the mob to know the real woman . . . the beautiful creature who had suffered for the mortal world and suffered still. When Frost had finished his speech, the crowd had seemed suspicious of Sadie . . . of Eve. Now, a balance had been formed.\n\nFrost and Melissa, having spoken their respective pieces, headed towards the edge of the circle again. \n\n\"You'll pay dearly for this,\" Frost muttered.\n\n\"When Solomon is gone, you'll be the one left at the table holding the check,\" Melissa replied.\n\n\"I'm going to enjoy putting you in your place,\" Frost said. \"At my feet, begging my forgiveness.\"\n\n\"I'd just as soon rip your heart out through your asshole.\" Melissa wanted to hurt him, Bart may have started her problems, but Frost was the one who ordered Dazza to do it. She didn't know if Frost had done it himself, but she was sure he was responsible for Terrence's death. \"But I think I'll let HER do it,\" she added, glancing over her shoulder at Sadie who was taking the field, \"after she's done ripping Solomon apart.\"\n\nFrost smiled, and it made Melissa more nervous than she could say. \"I wouldn't be betting on that if I were you.\"\n\n'Damn it,' she thought as she stepped out of the circle, 'What are they up to?'\n\nVlad gave Sadie a quick but well formed kiss before she passed completely over into the challenge area. Again, it probably wasn't the wisest thing to be displaying affection in front of the cameras, but she wanted to know the taste of him before the fight. A reminder of what she would win. Then she put him behind her and walked on alone. \n\nIt didn't take long before Solomon emerged from the canvas cave where she had sensed him. He dressed this time in black robes and was smiling from ear to ear. Sadie had never heard of him wearing anything but red or white, but she didn't know the significance of the change. Around them, the magical dome seemed to shift, taking on the consistency of glass. No one else could come in now. It was as it had begun . . . Eve and Solomon.\n\n\"So my love, what name shall I call you?\" Solomon crooned, using that voice of his. Sadie wasn't sure if he was actually trying to affect her or he couldn't help himself. It wasn't working regardless . . . mostly. She remembered the first time that voice had whispered in her ear after losing her virginity all that time ago. It had been so magical, to her at least. \n\n\"As long as you don't call me your 'love,' it doesn't really matter does it?\"\n\n\"You've had many names I suspect, but I shall call you Eve. Though if you want, I can call you MINE again. We don't have to do this.\"\n\n\"Oh I think we do,\" Eve said calmly. \"You can fool the rest of them, but we both know what happened on the ground of your 'paradise.' We know what Adam did to me . . . what YOU did to me. We know who made who here, and we know that you're just a pretender.\"\n\nSolomon's face glowed with a pure kind of anger. \"You were as much a fool then as you are now. All the power that you could have had and still could, yet you live in . . . in some metal tube and cavort with the lowest of all life forms. You take some desk clerk and make her one of us?\"\n\n\"Your sister will make a better vampire than you ever could,\" Eve replied. \"And as for the lower life forms, they have more life and heart and passion than you could imagine. Unlike you, they deserve the love I offer them. Unlike you, they accept it. I would've given you the world once,\" she whispered, but more out of nostalgia than weakness. \"Now, I will take it from you, and salt the earth so that you will never come back. You should have made sure I had died my second death on that beach.\"\n\n\"I should have done many things,\" Solomon said, cracking his neck in one direction and then the other. For a moment, he almost sounded . . . regretful? \"But it is too late to change the past. It is too late to stop me Eve. You have no chance here.\"\n\nShe shook her head. \"You never did respect my power,\" she said. \"That will change now.\" She raised her head and shoulders high. \"Solomon, you have betrayed me, your creator and mother of our race. You have lied to those you have Turned, and you have lied to the mortal races. What you seek is blasphemous in my eyes, and now it must stop. I challenge you to a dual to the death. The eternal embrace of darkness is all that is left to you.\"\n\n\"Not quite all,\" he said, his grin now genuinely evil. With that, he struck her . . . hard. She went flying thirty feet through the air, striking the side of the dome.\n\n\"What the fuck?!\" Vlad shouted. 'There's no way he should be able to have done that!'\n\nThat was the same thought that was shooting through Sadie's pain-wracked mind. That had been too fast, and he hit harder than she had ever imagined. Where did he find that kind of power? She didn't have time to dwell on it, as Solomon was charging forward, his elbow coming for her neck. She launched upward, her wings carrying her over his head as she kicked him in the bloody cut over his eye, then another kick in the back of his head as she landed on the other side. Whatever his power level was doing, she was still a better fighter. She had served in more militaries and on more police forces than Solomon could imagine.\n\n\"Clever,\" Solomon said, turning around. He didn't seemed to be to badly effected, and those had been some hard kicks. \"Clever won't save you. Submit now, and I will be merciful. You will have to be punished of course and renounce your side of the story --\"\n\nEve did a spinning back kick, but Solomon caught her foot and shoved her away. She was able to catch her balance using her wings, but her opponent was right behind her. He punched her once in the lower back, and she was afraid he might have ruptured something. True, she didn't really need her kidneys anymore, but it still hurt like a son of a bitch. She collapsed onto the ground and heard Solomon approaching from behind. She braced herself on her forearms and mule-kicked him in the stomach with both feet. That made him stagger backward while she regained her footing, but then he just kept coming. \n\n'That's not possible,' she thought. 'He's not even bothered.' As he took another step, she noticed that his robe has slipped a little, and there were marks on his chest . . . marks that appeared to be drawn in blood. She snarled.",
        "\"Blood magic?!\" she shouted at him. \"You coward!\"\n\nSolomons made a tisking noise as he swung and she dodged. \"The stakes are too high to leave this to chance my love. You should have taken my offer.\" He swung again, this time hitting her shoulder and causing her to spin. \n\nShe had to expose him and she knew it. If she could, he would be exposed as a coward and a cheat even if he killed her. Blood magic was taboo, even amongst the vampires. Only dark witches could . . . 'The Blood Rampart,' she thought. 'They must have done this.' She was backhanded across the face, sending blood splattering from her mouth and she went spinning to the ground.\n\nMelissa was terrified. This wasn't how she thought this would go at all. She watched on as Solomon began to demolish Mel's creator . . . hell, his own creator, and she didn't seem to be fighting back. It was as if she was waiting for something. Melissa could feel something in the back of her mind, something that Sadie was afraid of. \n\n\"She knows what he's doing,\" she muttered. She looked around and saw Grom, who looked pretty nervous. \"Grom, she knows why he's so strong, but I can tell the specifics. How could you boost a vampires power?!\"\n\nThe police captain shrugged his shoulders. \"Could just be that he's more bad-ass than we thought, or could be a bunch of reasons. Even drugs can work on vamps if you find the right ones.\"\n\nShe turned back to watch Sadie fight a defensive battle, which against Solomon meant a losing battle. \n\n\"I thought you would've made more of a fight of it than this,\" Solomon said, moving in again. Sadie was sitting flat on her ass, bleeding from her mouth, cuts on her face, and one of her eyes was swelling shut. He yanked her up by the vest, holding her two feet off the ground. \"Submit,\" he whispered. Even then, he felt her blood calling to him and reminding him of the flesh he had once enjoyed . . . reminding him of who made him and --\n\n\"You're doing that on purpose?!\" he belted. She had been drawing him in for some reason. \n\nWithout warning, his opponent found some life left in her. She grabbed the front of his robe and ripped it open and then spun him toward the crowed were her allies stood.\n\n\"Son of a bitch!\" Grom shouted. He looked at Melissa. \"Blood magic! Solomon fed off something powerful and then had it magically linked to him!\"\n\n\"Fed off what?!\" she replied. She realized that she was more angry than scared now. There was no honor in the man. 'When did I start caring about honor?' she wondered. She smiled slightly. 'Maybe there's more of Sadie in me than I thought.' \n\nVlad looked enraged. \"If we cut off the power?\"\n\n\"Then he's just his normal self,\" Grom said. \"But we don't know where they are. And Sadie's already weakened.\" \n\nVlad cocked an eyebrow. \"How far away can the blood source be?\"\n\n\"Not far. The connection grows weaker with distance.\" \n\nVlad looked directly at the pavillion. \"Has anyone seen his Blood Brood since this started?\"\n\nGrom stared. \"Crap, that would be bad. He still has four of them, and all of them are at least two thousand years old. That's a shitload of power!\"\n\n\"Devlin!\" the alpha wolf growled, looking around until he saw the young officer. \"If they're violating the rules of the challenge --\"\n\n\"Then all bets are off. Solomon's life is forfeit.\"\n\n\"Doesn't do us a lot of good if he kills Sadie anyway. Let everyone on both sides know what those marks mean!\" he shouted at everyone nearby. \"I'm going to go take out his Solomon's food supply!\"\n\nVlad's nephew Todd stepped up. \"I'm going with you,\" he said. \"Sadie's more one of us than one of them anyway.\"\n\n\"If you get killed, don't tell your mother,\" he said. But he was pleased with the young man. He'd be a great leader some day.\n\n\"I'm in too,\" Ivan said. \n\nFitzpatrick stepped forward, pulling wands from under his belt. With that Irish accent, he said, \"I'll give them witches of 'is somethin' to worry 'bout.\"\n\nSeveral other wolves, goblins, and humans stepped forward. Sadie had a lot of friends.\n\nVlad looked at Grom. \"You need to stay neutral. Get with the national guard and be ready to stop the riot.\"\n\n\"What riot?\"\n\n\"The one I'm going to start.\" Vlad looked at Mel. \"You in?\"\n\nShe nodded. \"In a bit. I think I know something that will help Sadie.\" Then she vanished into the crowd, an evil gleam in her eye.\n\nInside the dome, the Blood Saint was furious beyond words. He knew that if anyone saw the symbols on his chest that he was a marked man. He hated this woman. Hell, he'd barely even liked her when she gave up her sex to him, but she'd been so vulnerable that he couldn't resist himself. \n\n\"You bitch!\" he screamed grabbing her by the throat and hurling her into the ground. \n\nEve was seeing stars and her throat ached. Hell, everything ached. She'd lost a lot of blood, and Solomon wasn't even breathing hard.\n\n\"I'm going to relish ripping your heart out . . . again. I'll sever your spine, and maybe show you the same gentle touch that Adam did.\"\n\nThat did it. Sadie had been beaten up, betrayed, and would probably die, but she would not allow this pathetic creature to rape her. She thrust her leg out and kicked him in the testicles. Super-powered or not, that was going to hurt.\n\nSolomon doubled over, grabbing the family jewels and cursing in a language that didn't even exist anymore while Sadie backpedaled, trying to catch her breath.\n\nOutside, Melissa was seeking out a very particularly quarry. If the other side was going to send in power, then so would she. Finally, she spotted who she was looking for. Rather, she spotted WHAT she was looking for.\n\nBart saw Melissa striding towards him, a hungry sway in her walk. She had accepted what she was, the daughter of a powerful vampire. She had taken on a sensual quality that few mortals could even approach. \n\nHe grinned. Eve might be off limits to him, but this little strumpet --\n\nBart didn't even get the thought completed. Melissa pushed him against the dome and grabbed his head, yanking it to one side. For the first time in a long time, Bart was afraid. He was a pure demon but only from the fourth realm. Melissa was effectively the grandchild of the Lord of Blood, and she was so much stronger than he had imagined now. He should have picked his victims more carefully.\n\n\"You told Frost about what Sadie and I were doing,\" Melissa hissed. \"Terrence is dead because of you. And unfortunately for you,\" she crooned, \"so am I.\" Then she plunged her fangs into his scaly neck and drank deep. She could feel his foul demonic desire rising in his pants, but she was unconcerned with his comfort or release. She just wanted his demonic blood. She drank in his power, and she felt . . . goddess-like. He was different than the human blood she had consumed from those little plastic bags. His life-force was pure energy, and it was energy that her creator needed.\n\nMelissa dropped the prone body to the ground. She wasn't sure he'd live. She was sure that she didn't care. She stood against the dome, placing her hands on the humming wall of power. She felt her connection to Sadie, one much stronger than the older vampire had ever shared with Solomon. Sadie loved her and Melissa loved her back. Sadie had given Mel eternal life and introduced her to someone she could share that life with. It was time to pay her creator back, and she let her power flow through the channel that connected them. \n\n\"Drink of me,\" Melissa said, feeling herself returning to her normal but still powerful self.\n\nAbout that time, Vlad and his crew busted into Frost's private security and the proverbial shit hit the fan. Bodies started flying everywhere, guns started going off, and the moon was filled with angry shouts and howling. Vlad was the first one into the pavilion. The remaining members of Solomon's Blood Brood were sitting a circle of chairs and the were surrounded by witches who were chanting in low, powerful voices. Frost was there too, and he looked angry. \n\n\"Stop them!\" he shouted at his remaining guards. \"No, not you!\" he said as one of the Blood Brood started to stand. \"You need to save your strength for --\" Frost was promptly speared in the gut by Vladimir Koloff, and the fight was on in earnest. \n\nBack outside, Solomon had Sadie back on the ground. He had punched holes in bother her wings and broken her ankle, and all she could do was crawl. \n\n\"This time,\" he muttered, realizing that he was beginning to feel a little tired for the first time, \"I'll make sure that you stay dead.\" He raised one foot and brought it down on her neck . . . almost. She had caught his foot. \"Just give up!\" But when he saw her eyes, he knew that her quitting wasn't likely to happen.\n\nSadie's eyes were lit up, burning red as the blood her father had imparted on her so long ago. Solomon and Adam would have lived the King of Blood's dream, but it was Eve who held the power. Somehow, she had gotten the power back. \n\n\"Your sister sends her greetings,\" Sadie said, her voice practically humming with demonic energy. She may have hated the son of a bitch but, for the moment, she was totally her daddy's girl. Sadie snapped Solomon's ankle. \"Now we're even.\"\n\nSolomon screamed. Even with the juice flowing to him from his bodyguards, that had hurt. He fell backward, landing unceremoniously on his back. To make matters worse, he felt himself growing weaker . . . rapidly. His forehead still bled, but he had nothing replenishing him. He looked towards the pavilion just in time to see one of his Blood Brood come flying out and slam into the side of the circle. There was an enormous half-form werewolf on top of the vampire guard tearing him to kibbles and bits. \"No,\" he gasped. He looked around and saw Eve crawling towards him. He tried to get away, but she was stronger than him again and caught up, grabbing his broken ankle and making him scream. She crawled up his body as he tried desperately to get away.\n\n\"I gave you something,\" Sadie growled, her face having reached his abdomen, \"a long time ago.\" She dug her fingers into the flesh of his stomach and grabbing a handful of intestines. She listened to his sweet, sweet scream of agony. \"I gave you my heart and my blood,\" she continued, crawling further up his body. He was flailing at her, but she know longer felt his blows. She did catch one of his arms and break it at the elbow, making him scream again. \"Now,\" she whispered directly into his ear, \"I want them back.\" \n\nSolomon had never imagined it ending like this. He actually saw Eve plunge her hand into his chest and grab his lifeless heart. He tried to scream, but he had no air left. When she plunged her fangs into his neck, he didn't even have his blood anymore. She was taking everything from him. \n\nThe crowd quieted as she made her way to her feet. She hobbled on one leg, but she still managed to stand tall and proud. The magical circle came tumbling down. Solomon was dead, his last blood dripping from Sadie's lips.\n\n\"My name,\" she started, her voice growing in strength, \"is Sadie Hewitt.\" She saw Melissa rushing forward to support her, that beautiful woman who had given her the strength she needed. \"You may know me as Eve, but I haven't gone by that name since before any of you were born. Some have called me the Betrayer, but the true Betrayer lays dead at my feet.\" She extended her presence to engulf the crowd. \"Know the truth of me.\" Her voice boomed like thunder, sweeping through the onlookers like a flood. All cameras turned toward her, all microphones listened. The world would finally know.\n\n\"Liar!\" came a gargled shout from off to one side. Lord Frost stumbled forward, injured in the battle with Vlad and his men. Vlad ignored him, moving to stand beside the woman who had awoken a passion in him, kissing her on the cheek. The three of them stared down the fallen vampire lord as he stood in front of the throng, making one last attempt to save himself. The Blood Brood had been torn apart and the Rampart dismantled. Frost's allies were gone.\n\n\"You have no proof!\" he shouted. \"The only other witness to what happened is dead at your feet, conveniently silenced!\"\n\n\"There is nothing convenient about what happened here today,\" Sadie said. She saw that Devlin, Fitzpatrick and the rest of the werewolves had joined her in the middle of the circle, as had Marge and the human Tommy. Frost was conspicuously still alone. \n\n\"I denounce you!\" Frost bellowed, looking around desperately for someone who might still listen. \"You --\"\n\n\"Oh shut up,\" Melissa said, walking forward and belting him in the face. Frost went flying, as Mel was still hopped up on demon blood. \"You wanted her to take her place in the vampire hierarchy,\" she said, pointed at Sadie, \"well she just damn well did. You betrayed the mother of us all! You broke the rules of challenge by letting Solomon use outside help. I'm pretty damn sure that you're responsible for the death of Terrence McDermott, and I'm damned sure you're responsible for me getting killed!\" Melissa had worked up tremendous rage, and this time she was feeding it. She hated Frost for what he had done to her and to Sadie and to Terrence and to the entire vampire race. She hated him for who he was and had been. \n\nFrost was just staring at her. He was thousands of years older than her, but he couldn't touch her power . . . her anger . . . her need for --\n\n\"Oh no,\" he whispered, noticing for the first time that the light around him had begun to glow blue. The air swirled and took form. It mere moments, he was surround by wraiths. The shield had fallen, and there was nothing to keep them out. Solomon was dead, but vengeance had been called for against someone else . . . Frost.\n\n\"For everything you have done and for every person you have hurt,\" Melissa muttered, her mind and vision clouded with rage, \"I call for vengeance.\"\n\nSadie thought that Solomon's screams had been sweet, but Frost's were just the icing on the cake. He was surrounded by those angry spirits, and soon there wasn't enough left of him to fill a thimble. The wraiths were good at what they did. Frost was dead, and no one could do anything about it.\n\nThis time, it was Devlin who spoke up. He looked at Sadie and then Melissa, then at the crowd. \"The wraiths have spoken,\" he said, his voice cracking at first but gaining strength. \"Since time's beginning, the wraiths have always sided with the just. So who will you believe now?\"\n\nVlad left the speeches and rallying to the others. He lifted Sadie up off her good food and carried her towards his waiting vehicle. His lips rarely strayed from hers as he placed her gently in the back seat. She was exhausted. She had seven thousand years of hurt and heartache that she had just unloaded, and that was a lot for anyone to bear, even the mother of all vampires. The werewolves, many of whom were walking wounded but still walking with pride, cleared the cameras and screaming onlookers away. Melissa came over to the car.\n\n\"Going with us?\" Vlad asked.\n\nMel smiled. \"I think so. For a while anyway. Once Mary gets the rest of Frost out of her teeth, I think she'll want to spend some quiet time together.\" She got into the back seat next to Sadie and pulled the battered goddess into her arms, comforting her and lending her strength. \"For now --\" She left it at that.\n\nFrankenstein and his bikers, with the blessings of the Gravestones Police Department, escorted the weary warrior home for some long overdue peace and quiet.\n\n----------- ------------------------\n\nTwo months later . . .\n\n----------- ------------------------\n\nYou would think that few would want to brave a cold northwestern night for New Year's Eve party, but the crowd around the recently purchased home of Sadie Hewitt was enormous. Shortly after her victory over Solomon, Sadie had realized that she had finally found a place she could settle down for more than a couple of years and gone looking for a more permanent residence. She had bought a house in New Plymouth, complete with four bedrooms, an enormous kitchen, and a master bathroom to die for. Oh, and a finished basement that was perfect for its nocturnal occupants. It was also right across the street from Mary's. That made the population of New Plymouth . . . four. Melissa had thrown herself into the role of \"servant\" for her wraith mistress, and both of them were ecstatic about it.\n\nVlad had come home with Sadie that night and had simply never left. His clothes shared her closet, his toothbrush was in her bathroom, and he showed no sign of wanting to leave. Which was good, because Sadie would have been forced to hunt him down if he tried to escape. \n\nSadie had recovered from her wounds in about a month, during which time she was officially fired as being an Arbiter. She didn't hold a grudge against the Bureau, seeing as they could have technically put her in jail for lying to them. Besides, she was far too well known to do undercover work ever again, and having a walking religious icon tended to make things complicated for the Arbiters. So she had officially joined the Gravestones Police Department. They even let her keep her guns. \n\nOver the world, vampire society was in chaos. Up was now down, and black was now white, and no one knew how to make sense of it. Many vampires had gone underground, fearing reprisal from the mortal races for what Solomon had decided to do, while others simply kicked back and waited to see the fallout. A few had been unable to cope with the notion that the quintessential evil of vampire legend was actually their creator and savior, and had taken their second deaths upon them. That had made Sadie sad, but she had no control over them. \n\nMany vampires had flocked to Midian over the last few months as their personal Mecca, with some of the leaders of the great houses seeking audiences with Sadie. She had wanted to blow them off, but Vlad and Mel had convinced her that she couldn't run from this responsibility unless she wanted to risk someone else like Frost stepping in to the fill the power void. So she made time every weekday to meet with those of the vampire race who were just trying to understand what had happened. It turned out that they weren't all bad. And her living across the street from a wraith made them all behave themselves.\n\nShe smiled when she thought about \"good\" vampires. There were at least two that she could say with pride were her immortal brethren . . . her children Melissa Neron and Matt Devlin. Devlin had still wanted to come over to the darkworld, and he has shown such promise and courage under fire that she had brought him over with open arms. Laying beneath the earth still freaked her out, but Devlin behaved himself, though he promised that he was going to brag to his friends about the \"hot babe\" that he'd slept with. He wouldn't name names, of course.\n\nDevlin was the new keeper of the Book of Names, by order of Sadie. It turned out that he was a sharp mind and a history buff, so he was also the official historian of the vampire race. He got a stipend from the World Vampire Council that allowed him to quit the police department and travel the world, getting more than the names of the vampires but their stories as well. He had come back to town for New Years Eve, to spend it with his creator and, for all intents and purposes, his new sister. \n\nSadie had been part of many things over the years, but this was the first time she could remember having a family. Mary had become like her own sister, Melissa her daughter and best friend, Devlin her overly geeky son, and Vlad . . . Mmh, it warmed her in her naughty places to think about HIS role in her life. He actually had held a pack meeting at their new residence together, to emphasize to his friends, family, and followers that Sadie was part of his life and would be for a long time. The sex after that meeting had been fabulous. \n\nFrost and his crowd were gone or hiding. Mayor Jefferson and Senator Trefauld had been thrust into public scrutiny and were in the process of being recalled. The United States Government and other foreign powers were interacting with Sadie to try and wrap their minds around the apparent coup attempt and to establish new rules. Sadie hated being in charge of political crap.",
        "She looked around the party, seeing Frankenstein laughing it up with Vlad. Her lover was explaining the details of his divorce and getting a lot of sympathy from the testosterone-laden portion of the crowd. And his sister, who had never liked Teresa anyway. Vlad's nephew Todd, with a girl on each arm, was talking with Tommy, who had fully recovered his mind and was getting offers from psychologists around the country to lecture on what going insane had been like. He was going to be just fine. Mary and Melissa were making googly eyes at each other, and Mel seemed to be blushing a lot. They had a \"play room\" in the basement of Mary's house where they would often disappear for hours, leaving both wholly satisfied. \n\n'Damn,' Sadie thought, watching the smooth and sensual grace that Mel moved with, 'she is smoking hot. Mary SO owes me for making her a vamp.' About that time, Mary noticed that she was being stared at, and she gave Sadie a warm and grateful smile. She understood and appreciated the gift that was Melissa. \n\nFor the evening, Sadie had pulled her wings back into her body, making it easier to navigate the crowds. She didn't mind so much, since she knew she could unfurl them anytime. She never had to hide again. Slowly she made her way to the edge of the crowd, looking up at the quarter moon and the endless stars, seeing them in a whole new way. And she felt a presence approaching her from behind. It was strong, warm, and smelled of pine trees and winter winds, and it wrapped her up in powerful arms.\n\n\"This is your party,\" Vlad said softly, kissing her on the neck just behind her ear. He had spent a lot of time learning what made her tick, and was delighted by how many ways he could make her purr. \"Shouldn't you be in it?\"\n\n\"I've been enjoying it,\" she said, running her hands over his forearms. \"Can you believe how many people are talking to Mary? I love this town!\" \n\n\"She and the wraiths stepped up big time,\" he replied. They both looked over to where Anya had Mary cornered in order to find out how she got her landscaping so perfect. The wraith had a lot of free time on her hands before Sadie entered her life, and was quite a competent home improvement guru. \"She promised to help install that hot-tub.\" Sadie glared at him. \"You ARE going to keep it cleaned right? Get that hair out of the filter?\" She wasn't a big fan of water anyway, but he really wanted one.\n\n\"I promised I would, didn't I?\" He kissed her again. \"Besides, the possibilities --\"\n\n\"I am quite aware of the possibilities having a hot-tub provides,\" she crooned. Damn, she wanted to throw him down on the ground and make love to him right then, but they had guests. She sighed. \"I just can't believe it, ya know? This is the first time in seven thousand years I've welcomed a new year as . . . me. Yeah, maybe my name is only one-hundred and twenty years old, but everyone knows it's me.\"\n\n\"Any regrets?\"\n\n\"Besides the pronounced lack of privacy, getting fired from a job, being worshiped as a goddess and the devil at the same time --\"\n\n\"You're loving it, aren't you?\"\n\nShe turned her head and kissed his lips. \"Could be worse.\"\n\nIn a few moments, a new year would dawn and she would be surrounded by friends. She would kiss Vlad again, hug her children and her neighbor and all those who had walked through hell on earth with her, and then she spend the night with a man who encompassed all the passion that mortality gave. She promised herself she wouldn't wait another seven thousand years after dieing before she started living again. \n\n\"Deep thoughts can wait until next year,\" Vlad said sternly, picking Sadie up and carrying her back into the party. Sadie started humming an old Jimmy Buffett tune, and soon Vlad was singing along. Badly off key, but no one seemed to care. It wasn't long before \"Cheesburger in Paradise\" had taken the place of \"Auld Lang Syne,\" the traditional New Years Eve song. There was energy in the air, ripe with the promise of starting over. And when Vlad and Sadie kissed again at the stroke of midnight, the only fireworks being seen weren't in the New Year's sky.\n\n------------ -----------------\n\nThe End . . . "
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "sci-fi novella",
        "sci-fi",
        "science fiction novella",
        "vampire",
        "werewolf",
        "monsters",
        "wraith",
        "magic",
        "fantasy novella",
        "vampire novella"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/breathless-ch-06"
}