{
    "title": "Girl in the Painting",
    "pages": [
        "She first noticed him on a slow afternoon at the pool where she was life-guarding for the summer. She'd just finished her first year of college and the Kinsmen Park pool was only a five minute walk from her grandparents' home in Brandon, where she'd grown up.\n\nIt was a cool, cloudy day, and there weren't many people. He was sitting against the fence, in the shade of an overhanging tree, sketching. She realized she'd seen him there before, but since her attention was always on the swimmers in and around the water, he really hadn't registered until now.\n\nHe seemed to be studying a young boy and girl\u2014probably brother and sister\u2014splashing in the shallow end of the pool. She had a sudden start of recognition; she remembered seeing his slight figure and brooding expression in the halls of Brandon University on her way past the Fine Arts studios.\n\nA squall of windblown rain drove everyone to shelter. She huddled under the shelter of her sunshade, arms cuddled around her knees. The young man retreated to a bench on the lee side of the bathroom pavilion. His occasional glances in her direction told her that she was now the subject of his drawing.\n\nThe rain lasted about twenty minutes; by then they were the only ones left inside the fence. She checked in the change rooms and bathrooms and found them deserted, even though the pool didn't close for another two hours. The young man was still sitting on the bench when she came out.\n\nShe sat down beside him, and glanced at his open sketch book. It gave her a strange turn to recognize herself, sitting in her tower, knees drawn up to her chest.\n\n\"That's me!\" she blurted without meaning to.\n\nHis eyes flicked to her face, and then away, slightly embarrassed. \"Do you mind?\" he asked.\n\n\"No!\" For some strange reason she felt she had to reassure him. \"No, it's okay.\" She held out her hand. \"I'm Beth.\"\n\n\"Aaron,\" he muttered. His hand briefly touched and released hers.\n\n\"You're an arts student,\" she offered. \"I think I've seen you at the college.\"\n\n\"Yes.\"\n\n\"You're here almost every day,\" she persisted. \"Drawing the people here.\"\n\nAaron looked apologetic. \"Is that okay? I'm not breaking any rules?\"\n\nShe suppressed an urge to laugh. He's sweet. \"Yes, it's okay. You're not breaking any rules. And no one's complained.\" The relief on his face fired a surge of sympathy through her heart.\n\n\"At university they have models for us to draw,\" he volunteered. \"But there aren't any classes now, and I can't afford to hire someone to pose for me. So I come here.\"\n\n\"Why here?\"\n\nAn embarrassed blush colored his face. \"At school the models don't have clothes on, so we can draw their body structure\u2014their muscles and tendons and bones. And the skin texture. The people here at the pool\u2014in their bathing suits\u2014they're almost as good as the models.\"\n\n\"Why do you need to see their muscles and stuff? Most paintings I see, people are wearing clothes.\"\n\nAaron sighed. \"You need to know what's under the clothes to make them look right. If you paint a blacksmith, you have to show that under his shirt he has big muscly arms.\"\n\nBeth nodded. \"That makes sense.\" She looked at the drawing of her again and noticed that although her face was very recognizable, and her arms and legs, the rest of her\u2014the parts covered by her one-piece bathing suit\u2014was quite indistinct. She was surprised at the amount of muscle definition he had drawn in her calves and thighs. \"Do my legs really look like that?\"\n\nAaron nodded. \"Uh-huh. I guess you must swim a lot.\"\n\nBeth felt a warm flush on her face. \"Yeah. After I close the pool at six, I stay for an hour and swim laps. I love the water, and it's great exercise.\"\n\n\"Even on a day like this? It must be cold.\"\n\n\"It's warmer in the water. And swimming laps, my body gets pretty heated. I work up quite a sweat.\"\n\n\"Are you going to swim today?\"\n\n\"Yes.\"\n\nAaron hesitated. \"Would it be okay if I stay while you swim? I'd like to draw you.\"\n\nBeth's eyes widened in surprise. \"You want to draw me? Swimming?\" It was her turn to hesitate. \"I'm really not supposed to let anyone in here after I close. But you're not going to be in the water. Just\u2014if anyone comes\u2014you have to hide.\"\n\n\"Okay.\" Aaron nodded eagerly, a slight smile curving his mouth.\n\nIt was the first time Beth had seen him smile. He's actually quite cute.\n\nAaron's appearance was not immediately attractive. He was small and slight, with light brown hair and darker eyebrows that almost joined over his prominent nose. When he was deep in thought, or concentrating on something, which was most of the time, his face took on a somber, brooding expression\n\nBeth didn't consider herself attractive, either. She was small, just under five feet tall. She had strong, shapely swimmer's legs and butt, and hips to match. In contrast her narrow waist and thin, small-breasted torso seemed to belong to a much younger girl The brown skin, dark eyes, and long black hair she'd inherited from her Thai mother did even more to set her apart from most Canadian girls her age.\n\nThe pool was still empty at five o'clock, and Beth took a chance on starting her cleaning early\u2014mopping the pool deck area, then the floors of the change stalls, showers, and toilets. By ten minutes to six she had finished. She locked the gate and turned the 'Open' sign to 'Closed'.\n\nShe swam for an hour, counting laps, working on her swim strokes, doing the occasional sprint lap, enjoying the freedom of being the only one in the pool, and the sensation of the water against her skin, buoying her up.\n\nAs she pulled herself up out of the water, she was briefly startled at Aaron's presence. She'd been so focused on her swim that she'd completely put him out of her mind.\n\n\"I have to shower and change,\" she told him. \"I'll let you out.\"\n\n\"Can I stay until you leave?\" he asked. \"Some of these sketches are not quite finished, and I need to work on them while the images are still fresh in my mind.\"\n\nThe thought of letting him stay while she showered and dressed brought a brief thrill of danger, but she shrugged her assent. \"Okay. I'll be about twenty minutes.\"\n\nIt turned out that their paths home shared the same route; he lived just a block away from her grandparents' house. As they walked together she learned that he, too, had been raised by his grandparents, and had his own living space in their basement, complete with his own entrance, allowing him to come and go without disturbing them.\n\nThe following day Aaron was back in his usual place. As Beth watched throughout the afternoon, she realized that no one else was paying attention to him. It was almost as though they didn't see him. Just before six, when the last family left, Beth locked the gate and turned the sign to 'Closed'. It hardly surprised her at all when she saw Aaron still sitting in his spot.\n\nAs she got out her cleaning supplies he moved to the bench under the eaves of the bathroom pavilion, and started sketching. Several times while she was mopping the pool deck he asked her to hold a certain position.\n\n\"You have beautiful leg muscles,\" he commented. \"I love drawing them.\"\n\nIt was past eight o'clock when she finished showering and dressing after her swim. Aaron waited to walk home with her, and she felt a little sorry when they had to part.\n\nAs the days melted into weeks and July became August, their acquaintance grew into friendship. Beth noticed that her lap times were getting faster\u2014or at least she was getting in more laps during the hour She attributed the improvement to Aaron watching her, trying to capture her on paper as she moved through the clear water. His attention made her more keenly aware of her body, more attentive to the position of her arms and legs as she propelled herself forward. Similarly, focusing on the movements of her body as she cleaned the deck area and the bathrooms made those chores almost pleasurable.\n\nOn a Friday evening late in August a torrent of rain pelted from the sky just as Beth was finishing her laps. She reached the far wall, climbed out of the pool, and ran into the ladies' side of the pavilion. To her surprise Aaron was inside, sitting on a bench in the changing area.\n\n\"Aaron!\" she protested. \"You can't be in here! I have to change out of my suit and take a shower.\"\n\n\"I know. I'm sorry,\" he apologized. \"But it was really starting to pour, and this was the closest door. I didn't want my sketchbook to get all wet.\"\n\nThe rain on the metal roof of the pavilion drummed maniacally, and Beth knew she couldn't send him outside. Let him stay here while I shower? She looked at the empty shower room beyond Aaron. The three open shower stalls were in plain sight. He'll want to draw me. And I can't really stop him. \n\nShe tried to picture herself taking off her bathing suit while he sat there, sketching. It was a scary thought. Raised by her very conservative grandparents, she'd been taught that good girls didn't allow men who weren't their husbands to see them naked. Even though intellectually she knew that belief was outmoded, emotionally it still held a powerful grip on her.\n\nShe considered her options. I could just put my clothes on over my suit, and not shower until I get home But from the sound of the rain on the roof, that would be quite a while. I don't want to wait that long in a wet bathing suit. And I hate the smell of chlorine in my hair ... \n\nShe almost stamped her foot in frustration. Why am I making such a big deal about him seeing me naked? He's drawn nude models in school. I'm sure lots of them were women. Probably much prettier than me.\n\nA compromise came to her. What if I kept my back to him? She pictured herself again, naked in the shower, Aaron sitting on the bench behind her, sketching. I think I could do that. I need a shower and I don't care if he sees my butt. \n\n\"Alright,\" she said. \"From the sound of that rain, we're going to be here awhile. I'm going to take a shower. With my back turned. You can sketch me if you want., but don't you dare move from here.\"\n\nShe walked to her locker and took out her shampoo and conditioner, her soap, her mesh scrubber, and her towels. After a moment's thought she dropped the towels on the bench beside Aaron. \"Would you pass me the big towel when I ask you?\"\n\nHe looked surprised, but nodded assent. \"Sure.\"\n\nNow that she'd made up her mind Beth felt surprisingly confident. She walked to the central shower and turned the taps, waiting until the water reached the right temperature. Then, turning her back to Aaron, she reached behind her, pulled down the zipper, and peeled off her suit.\n\nShe was aware of his eyes on her. But just as when she was cleaning the pool deck, or swimming her laps, that awareness made her focus more on her body\u2014its position, the sensation of her muscles stretching and contracting, the feel of the warm spray of water on her skin.\n\nThree times he asked her to hold a position, and each time she stopped to allow him to draw her. And then she was done. She stepped toward the wall and turned off the taps.\n\n\"Aaron, my towel please?\" Beth held her hand out behind her. A few seconds later, she felt the rough texture of the towel on her palm.\n\nWith the towel securely wrapped around her she turned and walked back to the bench where Aaron was still drawing.\n\nShe sat down next to him. \"May I see?\" she asked, coiling another towel around her long, black hair.\n\nAaron riffled through the pages, then stopped and held up the book for her to see. It was a simple sketch, just a few lines, but she could see the curve of her spine, the shadow between her buttocks, the outline of her thighs.\n\nAaron turned the page. It held more detailed drawings of her lower back, her buttocks, her left hip and leg. He turned the page again to images of her upper back, neck and head.\n\nThe next page was the first time he'd asked her to stop, in mid-action of rinsing her hair\u2014her hair piled on top of her head, arms bent, shoulder muscles beautifully shaded. A few pages further on was the second pose\u2014her body arched to the right, left arm raised, her right arm curling round to her left. She hadn't been aware that she'd turned slightly, revealing the curve of her right breast. If he'd asked her to show him the side of her breast she would have refused, but now that she saw how lovely and innocent it looked in the drawing, she found that she didn't mind.\n\nThe last page was her final pose\u2014leaning forward to wash her left leg. She gasped in surprise as she saw, peeking out from below her fully detailed buttocks, the shaded contours of her labia.\n\n\"I didn't know you'd be able to see that!\" Beth burst out, blushing with embarrassment. \"I thought when you asked me to stop, that you were just drawing my bum.\"\n\n\"I was,\" Aaron responded, his face pinking. \"You have beautiful glutes. But when I caught sight of your ... labia. I couldn't not draw them.\" His blush grew deeper. \"I don't think you know how beautiful you are. I love drawing you.\"\n\n\"Thank you.\"\n\nBeth didn't know what else to say. To cover her confusion she took the sketchbook from Aaron's hands and, starting from the beginning, examined all the sketches he'd done of her.\n\nThe sketchbook was thick, with only a few blank pages left. Many pages were just studies of parts of her body\u2014legs, feet, hands, arms. Five pages were devoted to just her face, from different angles, with varied expressions. Several more pages showed her bathing suit covered torso. There were two portraits of her\u2014head and shoulders\u2014one in her lifeguard tower, the other on the side of the pool after a swim. And her poses while cleaning the pool deck and the bathrooms.\n\nWhen Beth looked at herself in the mirror, she saw a thin, gawky, Asian kid. The girl Aaron had drawn was slim, graceful, and athletic, with exotic features and gorgeous, long black hair.\n\nOnce again she came to the pictures of her in the shower. They had a sensuousness and beauty that she'd never dreamt she might possess. Is this really how I look?\n\nThe roar of the rain on the roof intensified. I like seeing myself the way he sees me. I want him to draw me some more. Beth handed the sketchbook back to Aaron. \"It sounds like we're going to be here for awhile,\" she told him. \"You have just enough pages left to draw me getting dressed.\"\n\nBeth walked to her locker. Carefully facing away from Aaron, she loosened the towel around her body and let it drop. Taking her panties from the locker, she bent forward, lifting her left leg to step into them. She knew what Aaron would be seeing from his vantage position behind her, and wasn't surprised when he asked her to hold the pose. A warm, liquid sensation surged through her lower parts as she imagined where his eyes were focused. She felt her nipples hardening, standing erect, her areolae crinkling. I'm getting turned on.\n\nHe released her from her pose. Beth pulled up her panties and slipped her bra on over her arms. Aaron again asked her to stop, this time to repeat the motion of raising her arms to let the bra slide to her chest, then to pose with her arms behind her back fastening the hooks.\n\n\"Can you turn to face me while you're doing that?\" he asked.\n\nBeth unhooked her bra and turned to face him. He was silent for a few minutes, drawing. \"Turn a bit more to your right,\" he directed.\n\nNow would be a good time to 'accidentally' drop my bra. But her breasts were the one part of her anatomy Beth was most critical of. Her bra securely fastened, she sat down beside Aaron to look at the drawings he had just done. The one that really captivated her was a study of her lower body as she bent forward. Her vulva, bottom, and hips were drawn in decreasing focus, pulling the eye to her exposed labia.\n\nI always thought I would look ugly down there, but this drawing is lovely. What if I had dropped my bra and let him draw me? How would he have made them look? Beth glanced down at herself, still just in her underwear. Good girls don't show their breasts to strange boys.\n\nThe rain had slowed to a few solitary drops on the roof. Beth pulled on her t-shirt and shorts and they walked together to her grandparents' house.\n\n\"Thank you,\" said Aaron.\n\n\"You're welcome,\" Beth replied. She surprised herself by adding, \"I enjoyed it.\"\n\nThe following week was the final one of the swim season. On Monday Beth mopped and cleaned as usual, then swam for an hour. Aaron followed her to the door to the ladies' change room and stopped.\n\n\"Do you want to come in and draw me while I shower and change?\" Beth invited.\n\nIn the shower room Beth turned her back and stripped off her suit. The feelings of excitement she'd experienced three days before returned even more strongly. She took her time showering, relishing the feel of the warm water on her skin, the almost tangible sensation of Aaron's gaze, and the deep, coiling itch of her arousal.\n\nThis wasn't a feeling she'd experienced very often. On the handful of occasions when she and her grandmother had talked about sex, most of the advice Beth had received was along the lines of 'good girls don't ...'. Beth had only ever gone out with three boys. She'd enjoyed the kissing, but not the groping that almost inevitably followed. Aaron was the first boy she genuinely enjoyed spending time with.\n\nWhen Beth had turned eighteen her grandmother had shared a secret stash of 'bodice rippers'\u2014erotic paperback romances from the seventies and eighties. \"Sometimes a woman just needs to do something for herself,\" she'd told Beth with a mischievous wink.\n\nThose paperback books had become Beth's guilty pleasure. Their eroticism roused in her some of the same sensations she was feeling now, under the shower, with Aaron drawing her naked body. But she still held herself back from turning and letting him see all of her.\n\nOn Saturday Beth stayed late while a crew drained the pool and stored the equipment for the winter. Aaron had no choice but to leave with everyone else. It was nine-thirty by the time the crew was finished. After locking up for the final time, Beth walked home; but instead of going inside, she continued on to Aaron's house.\n\nThe house was dark, except for a light in the basement. She knew the entrance to the basement was in the back of the house, and that she had to go down a ramp to get there. It took her a minute to find the gate to the ramp, and a moment later she was in front of Aaron's door.\n\nShould I knock? I might wake up his grandparents. Taking a breath, she turned the handle and pushed the door open.\n\nAaron's room was huge, taking up most of the basement. The area in front of the door was clearly his art studio, with easels, shelves of paints and brushes, a paint-stained sink, and stacks of canvases. Large windows on two adjacent walls provided natural light during the daytime.\n\nBeyond the studio was Aaron's living area\u2014a comfortable couch and chair, a desk, a bed and wardrobe, a washbasin, shower and toilet. Aaron was lying on the couch reading. He looked up with surprise.\n\n\"Beth!\" His surprised expression turned to joy. \"What are you doing here?\"\n\n\"I missed our evening together,\" she answered simply.\n\n\"Oh, I'm glad you came. I missed it, too.\"\n\nBeth looked around. Aaron's artwork was everywhere\u2014on the walls, on the easels, stacked on shelves and leaning against walls. A large canvas on an easel drew her eye and she walked over to it. It was only half finished\u2014a nude girl with her back turned to the viewer. Beth thought she recognized it from a drawing of her in Aaron's sketchbook\n\n\"Is that me?\" She turned towards Aaron.\n\nAaron sprang up from the couch, his pace pink. \"Yes, it is. I'm sorry. I should have asked you first.\"\n\n\"No, it's okay. I just ... I'm surprised that you'd want to paint me.\"",
        "\"Why not? You're beautiful.\" Aaron came to stand beside her, looking at the unfinished painting. \"I'm afraid it's not very good. Your skin color isn't right, and your hair ...\"\n\nIt was her. The original drawing in the sketchbook was just lines on a page, but this painting gave her an eerie feeling. It's so ... real! That's me! Naked! \n\n\"With you here now, I can see where I went wrong,\" Aaron continued.\n\n\"I guess that's why artists need to paint their subjects from life.\"\n\n\"Yes.\" Aaron's face took on the brooding aspect she'd seen in the halls of the college.\n\n\"Can you fix it?\" she asked\n\nAaron nodded slowly. \"I think so.\" He paused, peering at her shyly. \"It would help if you ...\"\n\n\"If I posed for you?\" Beth finished for him.\n\nAaron blushed. \"Yes. But ...\" His voice was apologetic. \"I can't afford to pay you.\"\n\n\"Pay me? To pose?!\" The idea of posing nude for money shocked her. \"No, I'd never do that. But ... could you paint a portrait of me instead? One that I could let my grandparents see?\"\n\n\"I-instead of this?\"\n\n\"No\u2014I mean instead of paying me.\"\n\nRelief flooded his face. \"Oh. Sure. I can do that. It might take quite a bit of time, though. Doing both of them. You're not used to posing for long periods of time.\"\n\n\"True. And school starts next week. Are you going to have the time to do both of them?\"\n\n\"I think so. l have to produce and show four major projects this year. Your portrait would definitely be one, and this could be another.\"\n\n\"This one? You want to show me? Nude?\"\n\n\"Yes.\" Aaron's face fell. \"You don't want anyone else to see it?\"\n\nBeth hesitated. Her first impulse was to forbid him from showing it to anyone. What if someone recognizes me? They'd know what I looked like naked. A syrupy itch percolated deep inside her. Good girls don't pose for nude paintings of themselves. The itch persisted, urging her to pay attention. She tried to ignore it. This is crazy! I shouldn't be getting excited at the thought of someone seeing me naked!\n\nA liquid warmth welled up, seeping into the intimate spaces between her thighs. She clenched her fists, fighting against the temptation to yield to the delicious sensations. \"No, it's okay. You can show it.\"\n\nAaron's face glowed with relief. \"Can we start tomorrow?\" he asked. \"Late morning or early afternoon? Full sunlight is better for me to paint in.\"\n\n\"Sure. I can come by around eleven tomorrow. And most of my classes are in the mornings, so I have afternoons free during the week.\"\n\n\"You'll need to decide what you want to wear for your portrait. Bring some outfits with you tomorrow.\"\n\nSunday morning, after her grandparents had left for church, Beth walked over to Aaron's carrying a small suitcase with several changes of clothing. He was waiting for her when she arrived.\n\n\"Let me see what you brought,\" he asked.\n\nHe studied the three outfits she'd packed into the suitcase: a white dress with large red and green florals, a red and green plaid skirt with a red sweater, and a pink, peekaboo blouse with matching slacks. Aaron pointed to the blouse and slacks. \"Let me see how those look on you.\"\n\nWhen she'd dressed this morning, Beth had put on the lightest, laciest lingerie she owned. Aaron had seen her in her underwear half a dozen times, but the camisole and bikini panties under her t-shirt and shorts were very revealing. I knew I'd have to get undressed in front of him. Why did I pick those to wear? The answer came unbidden into her mind. Because you wanted to look pretty and sexy for him.\n\nBeth unfastened her blue denim shorts and let them fall to the floor. She saw Aaron's gaze move to her groin where her pubic hair showed dark through the sheer lace. Bad girl! You wanted him to see that! She felt her nipples hardening. He'll see those, too. A naughty thrill shivered through her as she tugged her t-shirt up over her head.\n\n\"Stop! Don't move!\" Aaron cried.\n\nHer t-shirt was covering her eyes. Beth froze, her arms above her head She sensed Aaron moving for his sketchbook, then sitting in front of her. She felt a coolness on her skin as if her camisole had ridden up with the t-shirt, leaving her breasts bare. The thought that she was practically naked to his gaze sent a shiver of delight through her, and she clenched her thighs to contain the sudden surge of warmth.\n\nThe muscles in her shoulders were just beginning to ache when he told her she could move.\n\n\"Can I see?\" she asked, pulling off the t-shirt. As she had feared, the camisole came with it. She was naked to the waist.\n\nHe had drawn just her torso. Her raised arms had lifted her breasts, making them appear larger and fuller, her nipples erect amid the dark, puckered ovals of her areolae. She looked down at herself, then again at the drawing. She'd always seen her breasts as being too small, but on the page they looked just right.\n\nShe picked up her blouse and slipped it on, feeling the silken material rub over her already stimulated nipples. Beth knew the thin material wouldn't hide their outline. \"You can't let my nipples show,\" she cautioned. \"My grandparents would be horrified.\"\n\nAaron nodded seriously. \"I'll do my best.\"\n\nHe indicated a platform just to the left of his easel, where he'd placed a chair turned partway to the windows. \"Can you put your slacks on and sit there, please?\"\n\nAaron placed her in a simple pose, hands folded on her lap. He moved back to his easel and started working.\n\nSitting absolutely still was much harder than Beth had imagined. The nearby easel with her nude portrait caught her eye, and she focused her attention on it.\n\nThe girl in the painting had a beautiful bottom and strong shapely legs. Her waist was narrow and trim, but her back was perhaps a little thin\u2014her ribs, spine, and shoulder blades were quite noticeable. If I concentrated more on using my arms and shoulders when I swim, I could get my top half to look more like my bottom half.\n\nThe girl seemed comfortable being nude; her shoulders were relaxed, and her arms made no effort to conceal her body. Beth recalled the evening Aaron had drawn her\u2014the fourth time she had showered and dressed while he sat and sketched. I was comfortable. I enjoyed the feeling of his eyes on my naked body. It made me feel desirable and sexy and daring. I remember half hoping he'd ask me to turn around, so I would have to show him the rest of me.\n\nIt was almost forty minutes later when Aaron called a break. \"Get up and stretch your muscles,\" he told her. \"I can finish what I'm doing without you.\"\n\nBeth wandered around the studio, looking at the canvases Aaron had painted. She saw his face on a canvas poking up from a stack of paintings in the corner between the windows. She walked over and moved aside the canvases in front of it, and gasped in surprise. It was a full-length portrait of Aaron, nude. \"I'm sorry!\" she blurted, hastily moving the canvases back to cover it. \"I didn't mean to ...\"\n\n\"Sorry?\" Aaron responded. \"Why? It's just a painting. Haven't you seen a naked boy before?\"\n\n\"It's not that,\" Beth protested, dodging his question. \"I just ... I didn't want to invade your privacy.\"\n\n\"Privacy?\" Aaron laughed. \"You've never complained about me invading yours. I've drawn almost every part of you. It's only fair if you see me without my clothes on. Go ahead and look.\"\n\nBeth took the painting out again and studied it. \"Did you do this from a photograph?\" she asked.\n\n\"Yes,\" he replied. \"I set up a camera to take pictures while I stood in front of it. It took quite a few tries before I got it right.\"\n\nHe was thin and under-developed, and his skin was pale, with no body hair that Beth could see, except for a few curls on the lowest point of his abdomen. His penis was soft and small\u2014very much like those Beth had seen on Renaissance paintings of cherubs or fauns. His face had that brooding expression that made him look so fierce.\n\n\"Sometime, you should let me take a better picture of you,\" Beth commented. \"You're quite handsome when you smile.\"\n\n\"You'd do that?\" Aaron asked in surprise. \"Take a picture of me? Naked?\"\n\n\"You naked? Or me naked?\" Beth teased.\n\nAaron chuckled. \"I meant me. But if you want to be naked, too...\"\n\nBeth blushed. \"If I do that\u2014get naked and photograph you\u2014you have to be naked while you paint me.\"\n\nAaron gazed at her seriously for a long moment. \"Alright. It's a deal.\"\n\nHe walked over to his sleeping area, opened his wardrobe and took out a camera. After quickly checking it, he put it down and began to undress.\n\nBeth's heart fluttered and pounded; she'd never seen a naked boy before. She knew what naked men looked like from Renaissance paintings and statues, and her grandmother's paperbacks had some very graphic descriptions of male anatomy, but watching Aaron undress and reveal his boy parts was both unsettling and exciting.\n\nAaron picked up the camera and walked back into the studio.\n\nThere was no way out of it\u2014she'd made a deal. The girl in the painting is you! She's naked and she's beautiful, and so are you. Besides, you like him looking at you. Beth slipped off her blouse and pushed down her slacks and panties. They stood looking at one another.\n\nBeth watched in amazement as Aaron's cute, little penis began to grow and swell. She'd seen boys with erections inside their pants, and overheard locker-room tales about what girls had done with their boyfriends, so she was aware what happened to boys' penises when they got excited. But Aaron's reaction to the sight of her naked body came as a pleasant surprise. He finds me sexy!\n\nShe took the camera from his hand, raised the viewfinder to her eye, and pressed the shutter release. Aaron looked startled but he didn't protest. Beth took several more shots to make sure she got the image.\n\n\"I should do a photo essay,\" she teased. \"Aaron and His Erection.\"\n\nAaron's face flushed pink. He grinned. \"If you want to do that you'll need some close-ups of both of us,\" he said, pointing to his erect member.\n\nBeth quickly moved forward to get shots of his smiling face, then knelt to capture his penis, standing tall and stiff against his flat belly. \"It's quite impressive close up,\" she commented.\n\nAaron's blush grew deeper. \"You've seen a lot of erect penises, then?'\n\n\"Oh, sure. Dozens.\" It was Beth's turn to blush. \"But they were all Renaissance paintings and statues. You're my first live boy.\"\n\nThey teased and bantered back and forth, and after a few minutes Aaron's erection subsided, although not quite to its original small size. Now that he was relaxed and smiling, Beth stepped back to get a full length shot of him. After shooting several more frames, she handed the camera back to him.\n\n\"I hope there's at least one shot you can use,\" she said. \"Where do you get them developed?\"\n\n\"I use the dark room at the college,\" he replied. \"All Fine Arts students can use it if they can demonstrate they know how.\" He raised the camera. \"I should take some pictures of you, too.\"\n\n\"What?! No!\" Beth reflexively covered her breasts and groin with her hands.\n\n\"Why not? You and I are the only ones who will ever see them. If I have photos of you, I won't need you to pose as often.\"\n\n\"But I like posing for you!\" The admission shot out before she could stop it. She dropped her arms. \"I like you looking at me. It makes me feel beautiful and sexy.\"\n\n\"You are beautiful!\" Aaron affirmed emphatically. \"And sexy. You're the most attractive model I've ever had. I love drawing you. I'd love to have you pose for me for hours and hours. I could never get tired of looking at you, of finding new ways to paint you.\"\n\nI am the girl in the painting. Beth thought for a long moment. \"You'll still want me to pose for you?\"\n\n\"Yes, of course.\"\n\n\"Alright.\"\n\nAaron walked past her toward the large windows. Beth turned to face him. Over his shoulder she saw an elderly woman in the garden outside, puttering among the flowers.\n\n\"Is that your grandmother? Can she see us?\"\n\nAaron turned to look. \"Yes it is. Don't worry. When the sun is shining on the window like this, it reflects so much light you can't see inside.\"\n\nFor the next ten minutes Aaron walked around her taking pictures, getting close-ups of her face, her breasts, her bottom, her groin, then some half-length and full length shots in various poses.\n\n\"Will you sit and let me take close-ups between your legs?\" he asked shyly. \"And draw you?\"\n\nHe'll see how wet I am down there! Beth was very aroused, more so than she'd ever been with her grandmother's paperbacks. What Aaron was asking was very intimate. What her body was urging her to do was shockingly intimate, and she wasn't sure she'd be able to resist much longer.\n\nThe girl in the painting\u2014she'd do that. She'd let him. She'd open her legs and show him her beautiful, intimate parts. And I am her\u2014the girl in the painting. And I do want him to see all of me.\n\nBeth moved to the platform and sat in the chair, parting her legs so Aaron could see between. He knelt in front of her, his sketchbook on the floor next to him, his camera to his eye. Beth kept her eyes on the painting.\n\nHer hands moved between her thighs and opened her labia. Grandma's heroines never did this. Aaron's camera clicked several times. She let her index finger slide between the folds, seeking out the spot that was crying out to be touched. A jolt of intense pleasure made her cry out in joy. No longer able or willing to resist, she gave herself up to the urges she'd been trying to ignore; stroking and rubbing, touching and caressing\u2014holding herself open, showing Aaron all her secret places\u2014dipping her fingers inside, lubricating them, playing them over all her surfaces; then, finally, moving up to her pleasure button.\n\nSounds escaped from her throat\u2014gasps and moans and cries. She glanced at Aaron, now seated on the floor, sketchbook in hand, eyes flicking from her to the page and back. She sank down in the chair, splaying her legs over the armrests, both her orifices exposed to his view. She wasn't thinking any more, just feeling, doing whatever felt good, the escalating urgency of her desire her only concern. Her right hand fingers were slick with her juices; she pushed them deep into herself\u2014two in each orifice\u2014while her left hand attended to her pleasure.\n\nIf she were on her own, reading one of her grandmother's erotic romances, she would have climaxed long ago. Nothing intense\u2014just a nice little buzz. But now she was far beyond anything she'd previously experienced, and getting more and more frantic. She wanted to come; she needed to release the pressure deep inside her. Both her hands were moving as fast as she could make them\u2014her right pistoning inside her, her left thrumming violently against her puss.\n\nAnd then it came. She screamed\u2014torn by the most agonizing, unbearable pleasure she'd ever felt. It pounded and ripped at her, wave after unrelenting wave, her uterus and vagina contracting and clenching in spasm after cascading spasm. Time stretched on forever. Slowly, slowly the ecstasy ebbed and faded, subsiding at last to a pleasant hum.\n\nBeth opened her eyes, wondered at the unfamiliar ceiling. After a few seconds of confusion she sat upright, staring at Aaron seated on the floor in front of her, his graphite pencil scratching over the page.\n\n\"I didn't know girls did that.\"\n\nBeth looked blankly at Aaron. Didn't know girls did what? What's he talking about? \"What?\"\n\n\"I didn't know girls masturbated,\" Aaron elaborated.\n\nOh! \"Oh. Yes. We do. Not all girls\" Not good girls. \"But most of us, I think. At one time or another. My grandmother does. While she reads those steamy paperback romances. She lets me borrow them.\"\n\n\"Bodice busters.\" Aaron nodded, a gentle smile on his face. He got up from the floor. \"You were pretty noisy\u2014it must have been a good one.\"\n\nBeth blushed. \"I think it was more than one. I've never had one that big before.\" She held out her hand for his sketchbook. \"Can I see? I've never seen what I look like down there.\"\n\nThere were pages of drawings and sketches. How long was I ... Some were just composites of lines and shadows\u2014her hands playing between her legs, the tension in her body, the joy and agony on her face\u2014but several were detailed. One in particular held her attention. It showed her thighs and bottom, her vagina and anus both open. Her inner labia were prominent, long and full, their edges slightly scalloped, the right longer than the left. At the top, between her outer lips, her swollen clitoris pushed out of its shallow hood. One hand rested on her thigh, the fingers wet and shiny from her lubricating fluids. He must have drawn that after I orgasmed.\n\nBeth looked up at him. \"You're going to paint this.\" It wasn't a question.\n\nAaron simply nodded. \"How could I not. You are so beautiful!\"\n\nBeth nodded in assent. \"Will you need me to ... pose ... like that again?\"\n\n\"Yes, please.\" Aaron's penis stiffened and sprung against his belly.\n\nI wonder if he'd let me watch him?\n\n \n"
    ],
    "authorname": "asadama",
    "tags": [
        "exhibitionism",
        "masturbation",
        "erotic",
        "pose",
        "nudity",
        "aroused"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/girl-in-the-painting"
}