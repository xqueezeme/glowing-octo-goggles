{
    "title": "Speech and Debate Pt. 10",
    "pages": [
        "I hope this chapter will ease some fears and tie up some burning questions.\n\nThis chapter is a doozy! There's a lot of ground to cover so it's an extra-long addition this time. Longest one yet, by far. I hope you enjoy it! \n\nThere are still more chapters on the way...and a possibility of a side line extension once this main series comes to a close. Fingers crossed!\n\n*****\n\nThus, the Serpent was Driven from the Garden\n\nBy D. A. Mackey\n\nAs a nerd, when you enter a place as complex and hierarchical as the American High School, you naturally take your spot towards the bottom of that hierarchy. The strata become readily apparent on day one, though the criteria of each level may still remain mysterious. By the end of your first week, you unconsciously assume all of the rules and regulations associated with whichever level you found yourself a part of, willingly or not. That may seem cruel at face value, but it was the way of the world I had lived in for the past three and a half years. It was social Darwinism at its most basic level: survival of the fittest. This was simply crucial to your survival in a place where the tiniest mistake could have drastic and far reaching consequences for the wrong type of person. It was also why it was imperative that you know if you WERE the wrong type of person in the first place before you did or said anything. \n\nI hadn't spent much time mourning my lack of social standing or decrying the things that I had missed out on. I didn't lay awake at night and wallow in self-pity or wonder why things were the way they were. I saw the things portrayed on the popular T.V. shows and movies: the parties, games, and friends, and all the drama, laughter, and heartache that came with them. But I didn't pine for them. What would be the point? I was where I was. There was no conceivable way that one single person could change the structure of an entire institution that had operated this way for decades. \n\nAnd then Daniel happened. \n\nI had started climbing the ladder I had never even considered before. In truth, I didn't climb it; I was pushed up it rung by metaphorical rung. In a blink, I was forced to adjust my view on nearly everything that surrounded me. No longer was my world simply me, my mind, my books, and my futile fantasies about one day showing them all. Things had become intricate beyond my wildest imaginings from the moment Daniel and I had begun our pilgrimage of exploration in the frozen wasteland of Boston on the night of my 18th birthday. \n\nOne of those views I found myself suddenly concerned with was the prospect of Prom, now less than a week away. I'd always considered Proms and Formals and Debutante Balls as an outdated, outmoded, and semi-misogynistic spectacle. However, one cannot deny the rite of passage element that the late spring dance possesses. \n\nFrom my new vantage point and somewhat to my horror, I found myself actually wanting to attend, curious to see what all the fuss was about. I worried that I might miss something if I stayed home like I'd always assumed I would from the day I was placed in the bottom tier of the social order. That I was even entertaining the idea of Prom was off-putting enough for me. Add to that the rising emotions Daniel elicited in me and the possibility of Ian revealing our relationship to the rest of the school,...my teenaged brain was rapidly approaching full capacity.\n\nThus, I found myself cleaning up the Varsity locker rooms after baseball practice on a late Spring afternoon, my normally ordered and logical mind in a dizzying whirl of contradictions in logic. I could barely concentrate on the equipment as I stored it on the proper shelves, (or what I hoped were the proper shelves.) For once, I paid absolutely no attention to the naked teammates showering just a few feet away. It's truly stunning what your brain can gloss over when your mind is otherwise occupied. Even a bevy of abdominal muscles, pecs, and flopping cocks in all shapes and sizes. The jovial back-and-forth of my teammates barely registered to my ears.\n\n\"Should I take Amanda or Katy, do you think?\" Gordon slurred, still sounding stoned as usual. I had flashing images of his natural voice being the cause of many troubles with the police in his upcoming college days.\n\n\"You asked them both?\" Daniel's sultry baritone voice asked. Even in my stupor, his voice always sounded clear as bell.\n\n\"I asked Katy; and THEN Amanda asked ME.\"\n\n\"Either way, you're gonna get laid. So just flip a coin, dude. They're both hot,\" Tall Paul offered his two cents on the matter.\n\nI shook my head in disbelief. \n\nBoys, am I right?\n\n\"Take 'em both and have a threesome,\" Ian joked. \n\nThe growls and grunts and teases of approval and mock surprise echoed from the tiled walls. I tried to concentrate on my menial tasks and headed to the exit to grab the final equipment bag, passing the showers on the way.\n\n\"David,\" Ian called to me, stopping me in my tracks Was he going to reveal everything right now? Naked in the showers in front of everyone? My mind began to postulate theories and strategies, various angles of avoidance and denial. \n\n\"Why don't you take one of these chicks off Gordon's hands, huh?\" he continued, \"I mean, with what you got hanging between your legs, either one of them would jump at the offer, gay or not.\"\n\nThe team burst into laughter, Daniel included, though when he looked at me standing in the doorway I could sense his tension, his protective nature ready to spring forward at the smallest indication of my distress. I smiled back at him, silently thanking him for always being my back up plan. Just in case. I readied my response as the words \"hung,\" \"huge,\" \"crazy,\" \"insane,\" and \"lucky,\" bounced around me.\n\n\"Aww, but Ian, I was still holding out hope that you would ask me?\" I said with mock sadness as I grabbed my crotch through my jeans, pushing it towards him. \n\nThat got the response I'd hoped: everyone turned from me and began to hassle and harass Ian instead.\n\n\"Oooo, he got you, dude.\" \n\nI walked on and thanked my lucky stars that wit and intelligence still had power, even in this higher social strata. It was always a game of one-ups-manship. That was a game I could usually play to my advantage, if the medium was brains and not brawn. \n\nIt seemed that I could feel Daniel's eyes on my back as I walked past the showers. I imagined his gaze resting on the muscles of my back and ass as it moved silently beneath my jeans. I felt my cock start to grow, pushing down my leg. I played out the fantasy in my mind, a smile unconsciously creeping across my face.\n\nTo my surprise, my interactions and budding friendship with the Baseball team soon started to bleed into my daily routine at school as well. I hadn't stood alone against my favorite reading tree in the Annex for weeks. Instead, I was often included in the conversations of the \"popular crowd.\"\n\nTrue, I still stood on the outer edge of that crowd and only interjected or offered my own voice when asked. But I was there none the less. When I walked to my classes, I found that the other students all stepped aside to let me pass. Their stares and gazes no longer held the edge of contempt or distrust that I had grown so accustomed to. Now, they seemed to possess a bit of something I couldn't quite classify. Respect? I decided it served little purpose to think about it too much and just continued to go about my normal routine, with some slight adjustments.\n\nI still avoided these social interactions whenever they incorporated Amy and her crew of minions. Though I had somehow broken the barrier between Jock and Nerd, that tenuous relationship did not go so far as to grant access to the Jock/Popular Girl world. \n\n\"Could you read over this history paper for me?\" Ian asked as we sat on one of the benches in the cafeteria during Senior lunch, only two days before Prom. \"I know you're, like, a genius or some shit. I really need to do well on this one so I don't have to take summer school.\"\n\n\"Sure,\" I offered. He was in \"regular\" U.S. History, so how hard could it be right? \"Let me see it.\"\n\nIan handed it over and I immediately noted the larger than normal font and extra wide margins. I raised my eyebrows at him.\n\n\"What?! It has to be four pages! It's four pages,\" he offered, picking up on my implicit judgement.\n\n\"14 point font, inch-and-a-half margins, and extra wide headers is cheating,\" I said frankly. \"But, let me see what I can do. I'll get this back to you after practice, okay?\" I slid his paper into the backpack stashed between my feet just as Daniel and Tall Paul took seats across from us.\n\n\"Awesome,\" Ian said with a smile before tearing into a sandwich that could have easily fed three grown men with the amount of Roast Beef it just barely held in place between too small slices of wheat bread. The sheer amount of food it took to keep up a body like Ian's still flabbergasted me. He never seemed to stop stuffing his face with some form of sustenance. I felt for his parents and their pantry, but Ian drove a Mercedes, so I was less concerned for their wallets.\n\nWhen I looked up, I saw Dr. Plarston carrying her lunch tray across the room, headed towards the faculty table in the corner near a large, sunny window. She caught my eye and we looked at each other across the crowded lunch room for a moment. Without warning, I felt myself wracked with something that felt suspiciously like guilt.\n\nHer eyes were so...sad. Where she had always looked at me with pride and protective motherliness before, now she seemed almost disappointed and somewhat confused. As if she couldn't quite understand what I was doing where she found me. I was an exotic bird that had flown the coop and taken up residence in the Silverback Gorilla enclosure. \n\nMy teachers had always been like surrogate parents for me when I was away from home. They had been my sole friends for years now, my advisors and protectors, my biggest fans and ardent supporters. It killed me to think that I was somehow letting them down.\n\nBut why should who I decided to socialize with concern them? True, this crowd of athletes I found myself associated with was far from the norm, especially for me. But I wasn't in distress. I wasn't being mocked or derided. I wasn't being ignored anymore. I was finally being SEEN. Why couldn't she understand that?\n\nI wondered if she felt that I was betraying my true nature. I had wrestled with much the same thing as I lay awake most nights, staring at my ceiling and trying to organize my distracted mind. But I wasn't. I was simply discovering a part of my nature that I hadn't known was there before. I didn't want to spend the rest of my life alone and isolated. No one does, no matter what bravado and bluster they may muster to the contrary. Not if they are being honest with themselves. \n\nI was growing into a person who enjoyed human interaction, who was comfortable enough with himself to be included in the rest of the world. The quiet nerd who loved to read fantasy novels and poetry was still there. He wasn't gone. He was just finally becoming...happy. That part of me would never disappear. It couldn't. It was, and always will be, integral to who I was and am. But I had come to find that it didn't need to be mutually exclusive from this other, newer piece of me. \n\n\"Earth to David? Come in, David?\" \n\nI heard Daniel's voice as if from a great distance.\n\n\"Hmm?\" I mumbled, shaking Dr. Plarston's apparent disappointment from my mind and returning my attention to the man who now sat before me. As usual, it took a few moments for the gentle revelation of Daniel's beauty to fade enough for me to regain my powers of thought and speech.\n\n\"Do you want to work out with the team tonight?\" Daniel asked, apparently for the second time.\n\n\"With the team?\" I mimmicked, still a little dumbfounded.\n\n\"Yeah,\" Tall Paul interjected. \"You've been working out with Daniel most nights, right? Why not just join us instead?\"\n\n\"I bet I can whip you into shape better than this puny little man,\" Ian joked and kicked Daniel squarely in the shins under the table\n\nDaniel punched him in the shoulder. Ian barely budged and Daniel nursed his sore knuckles in his lap, where he thought no one would notice. Punching Ian was like punching a cinder block wall and equally as effective.\n\nIt was true that Daniel and I had continued our work out regimen most afternoons after practice, and our morning runs as well. We weren't AS diligent in the routine since Ian's inclusion in our bedroom antics during the away game. The weight room held all sorts of erotic potential when it was just the two of us alone together. Erotic potential could be dangerous when you were always waiting for the other shoe to drop. \n\nThree sets of eyes stared at me and I realized that I needed to respond and fast. \n\nI don't know why, but I nodded my acceptance of their proposal.\n\n\"Cool,\" Ian said in tandem with Tall Paul. \n\nThe bell rang, warning us to the five minutes remaining in our lunch period. Ian and Paul stood and made their goodbyes before grabbing their stuff and exiting. \n\nI stared at Daniel for a moment. When we found ourselves alone like that, the rest of the world quieted to a buzz like a fluorescent light bulb and motion faded away to a hazy mist.\n\n\"You ready for this, Nerd?\" he asked, his brown eyes twinkling at me.\n\n\"Are you?\" I shot back. \"Are you going to keep your hands to yourself in there? You haven't been able to thus far.\"\n\n\"Hey! I wasn't the one on my knees in front of the bench press machine last night, dude.\"\n\n\"No, you're right. That was me. But you were the one who whipped out his cock and asked me to take that position, as I recall.\"\n\nDaniel blushed bright scarlet. Point: Nerd. He was off balance. Might as well finish him off and put him out of his misery. It was the humane thing to do.\n\n\"We'll see who can keep his cock in his pants this afternoon, won't we jock boy?\" I stood and leaned my lips close to his ear, my breath just barely brushing against his skin. \"Try not to think about fucking me when the rest of the team is spotting me tonight, okay? Don't even think about my dick filling you up when they all teach me new moves. When we get all sweaty. Just put it from your mind. Don't even wonder if I'll be wearing one of your jock straps beneath my shorts. I will be. But that won't matter at all to you, will it? You'll be just fine. See you in the weight room, baby.\" \n\nI straightened and walked from the lunch room. I didn't need to look back to know that Daniel was stuck to his seat. I had watched he his cock grow rigid in his jeans when I spoke. I passed his wide-eyed face and it was proof enough that my speech had found its home. I had planted that seed and I was absolutely certain that it would grow as I intended. I looked forward to the harvest.\n\nIt was perplexing to find myself in the Varsity Weight Room later that afternoon with someone other than Daniel. I'd grown accustomed to the space, with its machines and free-weights and myriad devices of torment and torture. But always with Daniel as my guide. Having six other men crammed in the room with us ignited a competitive spark in me that I was previously unaware I was capable of.\n\nI wore a black tank top that clung tightly to my torso and a pair of loose maroon basketball shorts over a white jock. I'd made sure to dress in private so as to not allow Daniel the knowledge of what, if anything, was under my clothes. I wanted him guessing. I basked in the tormented looks he would cast in my direction every now and again. He was normally in his element in that room especially, always the dominant and more sure of us two. Watching him struggle to maintain his composure and fidget uncomfortably with his crotch on occasion was akin to making him squirm when I'd bring him just to brink of orgasm.\n\n\"Put your hands further apart and go slow. Like, really slow this time,\" Ian instructed from just behind me. I held two twenty-five pound dumbbells to my shoulders, preparing to lift them above my head in a Military Press. I could feel the massive bulk of Ian at my back as I pushed them slowly above my head.\n\nIan's hands on my pecs startled me. He pressed his fingers into my upper chest where my shoulders joined the larger muscle, reaching around my torso to highlight the area he wanted me to focus on.\n\n\"Feel that?\" he coached, his voice just at my right ear. \"Slow. Slow. Good.\" \n\nHis finger tips touched me lightly, just pressing into my skin so that I could feel the muscles straining beneath. My eyes widened and I sighed when his hand brushed against my nipple through my shirt. \n\n\"Sorry,\" he whispered so that only I could hear. \"Slipped.\"\n\n\"He can use more weight that that,\" Daniel said from his seated position on padded weight bench off to my right. My eyes snapped to him and I found that they could indeed go even wider. What was he up to?\n\n\"Oh really? You been holding out on me, dude?\" Ian asked with sarcastic admonition.\n\nI felt my face heat. I tried in vain to focus on my form and counting slowly to eigh, attempting to ignore Ian's rippled muscles and musky scent just inches from my back.\n\n\"That was more than enough weight, thank you very much,\" I said as I bent over to drop the dumbbells to the floor. As I did, my ass pressed against Ian's hips, his bulge squeezed into my covered crack. \n\nI couldn't help myself; I let out a barely audible moan and pushed back a little more than was absolutely necessary. \n\nI turned to see Daniel's face twist in barely concealed jealousy. His poorly hidden emotional response to the slightest touch from Ian gave me an idea. \n\n\"Why don't you two show us all how it's supposed to be done, if you're so sure I can do more?\"\n\nYou would think I had just thrown down the gauntlet instead of offering to supervise a friendly competition between teammates. Ian and Daniel both looked to the rack of free weights is if it held their salvation. \n\n\"Forty Fives? Preacher Curls?\" Daniel asked, rising from the bench.\n\n\"You're on,\" Ian barked back, his voice dropping nearly an octave in an unnecessary attempt to further his already obvious masculinity before this test of strength.\n\n\"Paul, will you be the judge?\" I asked, getting the tall teen's attention from where he blasted his abdominals on a hanging bar.\n\n\"Why don't you judge, dude?\" He asked, dropping to the floor and wiping his forehead with one lean forearm.\n\n\"I'm gay. I don't think I can be impartial here.\" \n\nI winked at the two men who had each grabbed their own sets of matching dumbbells. Ian smiled and flexed his muscles, all of them, in a wave that went from his pecs to his pelvis. Daniel looked to the floor and blushed. I smirked at him.\n\nHe brought this on himself. He was making it almost too easy.\n\n\"You two, in the middle of the room. Everyone else along the wall,\" I commanded. \n\nSurprisingly, everyone obeyed without comment. In short order, Daniel and Ian stood facing each other in the middle of the room. The rest lined up against the far wall to either side of me, two on my right and three on my left.\n\n\"First one who drops the weight is the looser,\" Paul said. \"On the count of three. One. Two...\"\n\n\"Wait!\" I called out. \"Make it fair as fair can be, boys. Shirts off, gentlemen, and face us, please.\" \n\nIan and Daniel stared at me. I smirked at Daniel again, and caught my breath as they both dropped their weights to comply. Even though Ian was chiseled like a God, I couldn't tear my eyes from Daniel's hairy chest, his dark nipples erect now and standing out like little mountains. His stomach tightened and relaxed, each of his abs clearly outlined. His treasure trail beckoned me to travel it's length and claim my prize.\n\n\"Alright. One. Two. Three!\" Paul counted out.\n\nIan started at a blistering pace. I struggled not to gasp at the sheer speed and raw power he exhibited. He'd already gotten to 20 by the time Daniel had reached 10. While the rest of my teammates clapped and cheered them on, I just stared into Daniel and he stared right back at me. I watched Daniel's eyes follow my hands as I slid them up my thighs slowly, so as to not draw attention to myself.",
        "Daniel hit 17 and Ian was on 30. The gap was narrowing.\n\nI raised my fingers a bit and very gently placed my right hand over my bulge. Daniel's eyes widened. I squeezed my cock and opened my mouth ever so slightly.\n\nDaniel 24. Ian 33.\n\nThe tip of my tongue darted out over my lower lips as I squeezed my cock for him again. My free hand came to my chest and I twisted my nipple beneath my sweat dampened tank top. \n\nDaniel 30. Ian 37.\n\nI let my head fall back to the wall I leaned on and closed my eyes. I imagined Daniel kneeling before me and taking my soft cock into his mouth, his talented tongue working my flesh to rigidity. I knew he was thinking the same, I could sense it from across the room. I had to concentrate on NOT getting fully hard, though my cock was already swelling beneath my palm.\n\nDaniel 37. Ian 41.\n\nI traced the outline of my growing cock in my shorts. I gripped it through the fabric and jostled it, the head and rim clearly outlined, the length of my shaft thick and undeniable to anyone who happened to look. \n\nDaniel 41. Ian 43.\n\nThe noise and cheers of the other jocks came only in short bursts to my ears. I stared at Daniel. My eyes pleaded with him. I ached to touch him, to feel my skin on his, to feel his biceps flex beneath my loving touch as he competed against this mountain of muscle. I imagined my tongue tasting the sweat of his skin, the buzz of him filling my nostrils. My cock pulsed in my grip. Surrounded by so many, I was shocked that none of them had appeared to notice. Yet.\n\nDaniel 46. Ian 46.\n\nThe bulge in Daniel's shorts was undeniable now. Had anyone but me been paying closer attention, they all would have surely seen it. For me, it was all I could see.\n\nCome on, baby. You can do it. Finish him. For me.\n\nDaniel 50. Ian 49.\n\nIan dropped the weight from his right hand and it clattered noisily to the floor. The room erupted in cheers before it finished bouncing. The boys to my right and left sprang from the wall and rushed towards Daniel and Ian, surrounding them and jumping up and down in a pile of limbs and muscles, sweat and sinew.\n\nI stood stock still on the wall and smiled proudly at Daniel, whose soft brown eyes were still staring into my own, speaking volumes without words.\n\nWhen the cheers eventually quieted and Ian and Daniel shook hands as sportsmanship demanded, the room quickly returned to normal. Everyone made their way back towards their various machines without discussion. I faced the wall and quickly adjusted my hard cock upwards so that it was pressed to my stomach by the wide elastic of the jock. Though the risk of being caught was at an all time high, I took the chance and swiped a small drop of precum from my slit and brought it to my tongue and swallowed. \n\nThankfully, that gesture went unseen.\n\n\"Dude,\" Ian started the conversation after a moment, shrugging his massive shoulders into his t-shirt again and still breathing a little more heavily than normal, \"Did you ever decide who you're taking to prom, Gordo?\"\n\nGordon shrugged.\n\n\"I just picked Katy.\"\n\n\"Bring condoms,\" Tall Paul chided. \"That chick is a walking petri dish, ya know. Human biological weapon. She took out the entire football team last year, remember?\"\n\nThat illicited chuckles all around. \n\n\"You never gave us a straight answer earlier, David,\" Paul continued. \"Do you have a special friend or something that you wanna take? Boyfriend?\"\n\nAll eyes were once again on me, awaiting my reply. I doubted that a well placed joke would have the same effect a second time. It took everything I had in me not to look at Daniel. I focused on the floor instead.\n\n\"No.\" \n\nI looked up to find Daniel's eyes had replaced my own in the careful study of the floor.\n\n\"No one? Really?\" Ian asked. \n\nDaniel and I both stared at him in abject horror. \n\nNow? He was going to choose NOW to bring what he knew into the light? I felt my stomach doing backflips and had to suppress the urge to flee the room in tears.\n\nWhen I met Ian's gaze, I found that his eyes weren't alight with maliciousness, as I half expected. He stared at me, his expression open.\n\n\"I wasn't planning on going at all, actually. Not unless you still want to take me? You may have lost the competition, but I still got a thing for big muscles and all\" I said quietly, falling back on the tried and true method of evasion by witticism.\n\nI felt a little bad for removing the attention to Ian yet again. He smiled at me a bit and seemed to resign himself to what was coming. He was a hulking wall of muscles, but I think he understood that I just wasn't ready to enter the door he had just tried to hold open for me. Not yet.\n\n\"You've been obsessed with me ever since the away game,\" I continued. \"You guys should see the text messages I get.\" \n\nI winked at Ian, made a kissy face in his directions, and shrugged my shoulders as the rest of the team laughed. All except Daniel.\n\nDaniel looked at me with an expression I couldn't have begun to define. It seemed he was sad and thankful, happy and disappointed all wrapped into one. I wasn't sure what he was disappointed in, me or himself. Either way, my heart broke a little and I had to focus on not running into his embrace to comfort and reassure him.\n\n\"You're still going with Amy, I assume?\" Ian asked, turning his attention to Daniel, who nodded.\n\nIan snorted a small laugh. No one noticed, except for me and Daniel.\n\n\"You can come with us, if you want,\" Gordon offered, clasping a hand on my shoulder in good natured commaradarie.\n\n\"What?\" \n\nDaniel's expression began to brighten. Ian's eyes took on a new light as well.\n\n\"Yeah,\" Daniel said. \"You can come along with us, Nerd.\" \n\nI was happy to see that his regular smile had retaken its place on his full lips, but I was totally unsure what he was driving at.\n\n\"Totally. We got a huge limo and all that. You should come with,\" Ian added. His eyes darted towards Daniel and back to me as he spoke. My heart leapt. For a multitude of reasons.\n\n\"Really? You sure?\"\n\nThe rest of the team all grunted and nodded their approval of the offer. I felt my eyes begin to water and had to take a deep breath to steady my nerves and stop myself from crying. The gesture alone was touching and something I had never expected. \n\n\"Won't it be crowded with all of your dates?\" I asked.\n\n\"Have you seen the girls we're taking?\" Paul scoffed. \"Most of them haven't eaten in days to prepare for this. They take up next to no room at this point,\" he finished with a grin.\n\nHe was starting to grow on me. I favored him with a genuine smile.\n\n\"Most of those girls don't give me the time of day. They're going to be pissed if I crash your party.\"\n\nSomewhere in the back of my mind I knew that I was grasping at straws. Part of me was trying to protect myself from the strange situation, trying to remain safe behind my established walls. I realized it for what it was: fear.\n\n\"Ignore them,\" Gordon said, coming to join the semi-circle of jocks that had begun to take shape in front of me, each of them looking at me with questioning eyes.\n\n\"I usually do,\" Daniel offered. His wink made me laugh. I could have kissed him right there in front of everyone. He knew exactly what to say to break through my self-imposed tensions.\n\n\"You're sure it won't be weird?\" I said, my lingering doubts and last questions and excuses sounding ever more feeble even to my ears.\n\n\"Totally sure,\" Daniel declared with his normal confidence. \"You shouldn't miss your Senior Prom, Nerd.\"\n\nI stared at him for a moment. His eyes were full and open and they silently pleaded with me. \n\n\"Please...\" he mouthed.\n\nI broke.\n\n\"Okay. I'll go.\"\n\nDaniel's smile was more than enough reward for me shouldering the potential risks. Even if these plans fell through, the pure joy I saw on his face when I said I would go will stay with me forever. I wasn't even going WITH him. I would just be there, in the same car, the same ball room. But that was enough for his face to light up like the sun. \n\n\"I'll pick you up the night of,\" Daniel stated matter-of-factly. \"I'll drive us to the meeting location and we'll take the limo from there. Cool?\"\n\n\"Cool,\" I said, my voice barely above a whisper. \n\nI tried to memorize everything about his face at that moment, every line and angle, every wrinkle and twinkle in his gorgeous brown eyes. I puzzled over how the rest of the team could be so oblivious to what had just happened between us, how they couldn't see the true nature of the interaction writ clear as day on our faces.\n\nThat was, until I saw Ian's face in a pleased and gratified smile. He nodded his head almost imperceptibly at me.\n\nSo maybe ONE teammate understood.\n\nWith that small gesture of true happiness at my own possible happiness, I felt my fears of exposure at Ian's hands lessen. A little bit. They were still there, but they no longer weighed me down. He wasn't going to reveal me and Daniel to anyone else for the time being. He simply rooted silently for us from the shadows. I would have to remember to thank him for that one day.\n\nIt seemed that my acceptance of their kind offer was a signal that the workout session was at an end. With the usual grunts and jock-ish verbalizations I was coming to realize were the norm for this group of guys, they each gathered their respective gym bags and discarded bits of clothing.\n\n\"It's getting late,\" Ian said to no one in particular, even though his gaze stayed locked on me. \"Shower at home so David doesn't have to stay late and wait for us to finish.\"\n\nI had almost forgotten that I had a set of keys to lock the door on the way out. But in my defense, my mind was otherwise occupied. \n\nDaniel and I both took our time collecting our things. In short order, I had closed and locked the Weight Room door behind me and walked between Daniel and Ian down the long hallway towards the locker room and showers. The rest of the team had already disappeared ahead of us, evaporating into the darkness.\n\n\"I'm headed home, too,\" Ian said.\n\n\"Alrighty,\" Daniel offered as Ian quickened his pace towards the exit. I felt my heart beating faster in my chest as I watched his massive back retreat down the hallway.\n\n\"Hey! Ian!\" I called out to him, grabbing his attention so he turned back towards us.\n\n\"Yeah?\"\n\n\"Thank you. Really,\" I said. \n\nI felt my face color when the words left my lips. I could have been thanking him for the offer to join them at the Prom. In a way, I was. But all three of us in that hallway knew that there was so much more to thank him for. \n\nIan smiled at us, his gym bag slung over his shoulder.\n\n\"Anytime, dude.\" He turned and continued walking towards the exit. \"You two have fun tonight! Don't do anything I wouldn't do.\"\n\nHe pushed open the door with a dramatic flair and disappeared into the darkening landscape outside. Daniel and I stared at each other with our mouths hanging nearly to our chests.\n\n\"Well, I guess that means he's not gonna tell,\" Daniel said when the initial shock wore off.\n\nI didn't know how to respond. So I didn't. I reached for Daniel's hand and laced my fingers through his. He squeezed my grip and I felt his thumb running circles on the back of my hand. I held on to him and walked down the hallway, leading him behind me. \n\n\"What are you...?\" He asked from behind me. \"David?\"\n\nI pulled us into the Varsity Locker Room and dropped my bag to the floor. I refused to let his hand fall from my fingers, but I didn't stop walking. I heard Daniel's bag drop too, following my lead, as I pulled him to the right and into the vacant shower room. I turned to press my back into the tiled wall and pulled Daniel's body around to crash into me, finally releasing his hand. \n\nI felt his arms encircle my lower back, felt the fabric of his shorts slide against mine. I brought one hand to his face and traced his firm jaw.\n\n\"What is it, babe? What's wrong?\" He asked, his voice growing a little concerned around the edges. I didn't know how to tell him that nothing was wrong. In fact, nothing could have possibly been more right.\n\nI let my hand trace over the lines of his face, marveled at the soft trimmed black stubble on his chin and upper lip. I couldn't have answered him if I'd wanted to.\n\nWith my free hand, I felt along the wall for the silver knob I knew I would find there and turned it hard to the right. Tepid water rained down on us, soaking my t-shirt immediately, matting my blonde hair to my face. Still, I couldn't speak. I pulled Daniel's face to my own and pressed my lips to his. I heard his breath catch in his throat, tasted his tongue as he probed my mouth gently. My eyes closed and I felt myself melting into him, becoming one body, one soul again. As we were supposed to be.\n\nI didn't care that my clothes were soaked, and from the passion Daniel displayed with his kisses, neither did he. The water began to warm slowly as my hands found the hem of his drenched shirt. I broke our kiss for the time it took me to lift it over his head and for him to do the same with mine before our mouths crashed back together. The water pinged off the tile floor and Daniel buried his face into the side of my neck, sucking and licking at my earlobe. He bit down hard and I moaned, my head falling back, my fingers grabbing onto the muscles of his broad back.\n\nI don't know how we removed our shoes and socks. Somehow, they ended up in a discarded pile with the shapeless lumps of our shirts. \n\nThe water streamed down Daniel's face, making small rivers on his skin, beading on his facial hair. I couldn't stop staring at him. I had seen him wet like this many times before, but he was still so utterly beautiful it was nearly painful for me. My fingers were unable to stop their explorations of his face. I pressed them to his slightly swollen lips and he kissed them gently and nuzzled his face close to my own. \n\nI almost felt sadness at that moment. I knew that it would be nearly impossible for me to ever again be as truly happy as I was in that moment. In that space that needed no speech, that was ruled by his heart beat and mine, his chest pressed against me. I was glad for the spray of the shower. It masked the tears of joy that I could no longer hold at bay.\n\nDaniel raised his face and kissed me gently, tenderly, until I wanted to burst with it.\n\n\"Are you sure you are okay, baby?\" He asked as he traced one finger across my forehead, pushing my saturated hair from my eyes. The word \"baby\" came so easily to him now, so effortlessly.\n\nI nodded and kissed him in return. I had to show him. \n\nMy hands were around his waist already, so I hooked my thumbs under the elastic of his shorts and knelt before him as I pushed them to the floor. His uncut cock bobbed before my eyes for a moment. I could have engulfed him right there. Trust me, I wanted to. But I had bigger plans. I straightened only long enough to push my own sodden shorts and jock to the floor, flinging them somewhere off to my left. \n\nAll it took was gentle pressure on his shoulders for Daniel's knees to bend. I pushed him gently towards the wet tile floor and followed him down. He never took his eyes from me as I did. I hovered over him until he was flat on his back, arranging his legs straight out beneath him. My knees ached with pain, the tiny black and white tiles and grout lines pressing into them as I carefully arranged myself and straddled his hips. I didn't even notice. My hard cock arched up in front of me, visibly throbbing with pent up passions. If he'd touched me at that moment, I might had cum on the spot and ruined all my plans.\n\n\"David, what...\" \n\nI pressed my fingers to his lips and shook my head. No talking. Not tonight. \n\nReaching behind me, I gripped Daniel's smooth, wet shaft in my palm and jerked his loose skin upwards. His hands came to my hips and held me gently, not pushing, not prodding, just resting on my pale skin. His eyes closed and he moaned as I jerked him slowly, my back arching of it own accord, readying my body for what was to come.\n\nI kept my firm grip on his shaft and leaned my torso forward, resting on my forearms on the wet tile floor to hover above him. The now hot water splashed against my back and neck, easing any lingering tension from the workout that seemed ages in the past. Daniel's deep brown eyes stared at me, a look of wonder on his face as I sheltered him from the falling water with my body.\n\n\"God, you are...,\" he whispered as his hand slid up my spine slowly, making me shiver, \"you are just so damned beautiful.\"\n\nI couldn't help but smile as I closed the small distance between us and felt our lips touch. With the hand that still held his cock like a holy relic, I guided him towards my exposed hole, my back arched and waiting to welcome him in. I pushed down and exposed his cock head, rolling his foreskin back and pressed him to my pink opening. \n\nThe heat of him was spectacular. He groaned into our kiss and his grip tightened on my back, one hand coming to rest again on my hips. I pressed firmly and felt my ass relax instantaneously against the pressure. The tip of him entered me. My breathe stopped short and I gasped. I felt the head of his beautiful prick disappear inside me; my ass gripped him and convulsed in uncontrollable waves.\n\nSlowly, I pressed my hips back. Inch by glorious inch I slid down his cock, feeling him fill me as he had never filled me before. My mind was bouncing like a pinball, ricocheting from one intense pleasure to another, all focused on Daniel's thick cock as it sank deeper into me. When I felt his head siding pass that special spot inside my hole, my dick pulsed out a stream of precum that made a slick trail on the soft hairs of Daniel's abs. \n\nI was nearly there, nearly to that place where Daniel and I ceased to be two people. With a final push, I squared my hips onto his and felt his trimmed pubes settle onto the warm damp skin of my ass.\n\nThough I wanted to kiss him forever, wanted our tongues to dance like that until time ceased, his cock twitching inside me made my spine go straight. My fingers gripped his hairy pecs and I watched the red lines form as I raked my fingernails against his olive skin. \n\nIt was as if something came alive within me when I saw his blissful face, felt him encased in me and gripped tightly inside. I could sense a light behind my own eyes, saw it reflected in Daniel's awestruck features. I may lack the coordination for athletic achievements on a normal day, but right then, I felt every joint and muscle loosen and begin to work in perfect harmony as I writhed on top of Daniel.\n\nI squeezed him inside me, aghast at the control I suddenly had over my own hole. Normally, it had a mind of its own, but Daniel had just unlocked some long dormant talent. I never removed him from inside me, never lifted my hips from his. I rocked on him, back and forth, feeling him move inside me. \n\nI panted at the effort. Every time my hips rocked forward I felt his shaft push hard against my prostate. My cock pointed straight up towards my chest, so hard it throbbed on the precipice between pleasure and actual pain. I leaked a seemingly continuous stream of precum that traveled down my shaft and balls to Daniel's stomach, only to be washed away my the steaming hot water that still flooded over us.\n\nI picked up my pace and watched Daniel's eyes widen. My breath came is short gasps now, my fingers still clamped on his chest for support. If I wasn't careful, I was going to break the skin and draw blood.\n\n\"David,...\" he moaned. \n\nHis hand fell from my hips and he lay on the floor, unable to muster the strength needed to return my thrusts with his own. Good. I didn't need him to. I had found my rhythm. I felt his cock grow inside me, felt it lengthen and thicken just slightly, warning me that he was nearly there. I almost had my prize. I rocked harder and harder, wiggled my ass against his balls and felt them pull up tight against my ass.",
        "\"Baby,...Oh, god...please,...\" he whimpered beneath me, his face slackening and his eyes fluttering closed. \n\nI pressed his cock against my prostate and squeezed him inside me, my chute rippling around his girth. His eyes sprang open and his mouth dropped open on his chest.\n\nI felt his cock head fatten, felt every cell of it press into my insides when the first volley erupted from him. The heat of it shot through me, putting to shame the water that had now filled the shower room with steam. I rocked backwards when the second blast of his seed coated my guts, my head falling back.\n\nThe scream that came from Daniel seemed to be ripped from somewhere so far inside him I swear his ancestors felt it. My dick pulsed once and then spewed a thick jet of cum that arched into the air between us, mixing with the spray. I couldn't separate the feelings as more and more of me burst into the air, draining me until I felt I might dry up on the spot.\n\nI'm not sure if it was the workout, the sexual release, or some combination of the two that did it in the end, but I lost all strength in my body and collapsed onto Daniel's chest, even as his prick continued pulsing his thick white cum deeper and deeper inside me. I could feel some of it as it trickled from my hole and dripped from his balls to the floor. His heart beat and my own pounded in time in my skull, blocking out the sounds of the water that fell on my back and shoulders, suddenly stingingly hot. We both struggled to gulp in air as if we'd run a marathon in world record speed.\n\nTwenty minutes later, after some semblance of strength had returned to our muscles, Daniel followed behind me as I wobbled towards the supply closet to grab us some towels. We left wet foot prints on the floor as we walked and I quickly did the calculations to reassure myself that they would dry to nothingness before anyone entered the gym again in the morning. We left our wet clothes in small heaps on the shower floor and made the trip naked as the day we were born.\n\nI could feel Daniel's eyes on me as we walked, caressing the skin of my back and ass. I wondered if my ass was pink and red from the workout I'd just put it through, or if any of Daniel's thick cum had escaped. Suddenly, my forward motion was halted as Daniel wrapped both of his big arms around me and crushed my back into his chest. I felt his lips and the scratchy wonderfulness of his stubble as he kissed the base of my neck. \n\nI eased myself into his embrace and leaded my head back against his shoulder, closing my eyes. I breathed in that wonderful scent of his, clean and deep and manly.\n\n\"Thanks,\" he whispered and kissed my ear. I could feel his soft cock pressing into my ass and my hips pushed back into his mound on their own. \n\n\"Thank you. For everything: Prom, Boston...everything,\" I mumbled in reply. \n\nMy whole body was more relaxed that I ever remember it being. I have always carried a little tension in me, a readiness in my muscles, always on the look out. I guess it's a side effect of being in the social \"prey\" level of the hierarchy, free game for torture and humiliation. But it was gone now, as Daniel gently swayed gently back and forth with his arms around my chest, my arms resting on top of his. I swayed with him, dancing there in the abandoned gym hallway to music that no one else could hear.\n\nHe kissed the side of my neck again. And again.\n\n\"Come on,\" I sighed, unsure if I really meant what I was about to say, \"Let's get dried off and dressed.\"\n\n\"Do we have to?\" he asked, kissing my shoulder.\n\nI nodded and bit my lower lip, thankful he couldn't see the struggle playing out on my face. I seriously debated the possibility of staying in the gym overnight with him, but thought better of it in the end.\n\n\"I gotta get home or Mama won't let me go to the Prom at all. Be just my luck. Get invited to Prom against all odd, then get my sorry ass grounded and can't go.\"\n\nDaniel's arms unwound just a little and his palms pressed to my ribs. He moved them slowly over my abs and down my plate until he could grab my sore cock and spent balls in his cupped hand. He squeezed gently and pressed his own cock deeper into the valley between my cheeks; my breath stopped short and I went onto my toes in a flash.\n\n\"Alright. If you insist,\" he growled, his lips just a millimeter from my ear. \n\nSuddenly, I was standing like a lone palm tree against hurricane force winds. The wall of Daniel's body was all around me one moment and then gone the next. I wasn't sure what had happened for a half second and I wobbled and stumbled drunkenly catching myself against the white painted cinderblock wall. \n\nThen I noticed the shape of Daniel's perfectly tanned bubble butt moving ahead of me, jiggling slightly, beaded with drops of water like rain on a windsheild. His ass and legs tensed so that the shadows and valleys of each individual ligament made themselves known, hinting at his prowess without shouting it.\n\n\"Pick up the pace, Nerd,\" he called, his voice echoing down the empty hallway as he got farther and farther away, \"let's get you dressed and back home to Mama!\" \n\nIt only took us 30 minutes of trying to actually accomplish the re-dressing. \n\nIt's more than a little difficult when every time you catch a glimpse of the boy across from you, you are overcome with the desire to push him to the floor and have your way with him. Again. We had to pull our selves back from intense make out sessions that were well on their way to becoming round two of the \"David and Daniel sex adventures\" for the night. Three times we neared that brink and three times we halted before the point of no return! We deserve a medal for that achievement alone.\n\nEventually, we made it to the Senior parking lot. The street lamps had come on, clouds of little flying insects darting through the stream of faded yellow and back into the twilight shadows like fish in the river. Daniel's Jeep and my Camry were the only two cars there. I liked when that happened. It was almost like being public. Something of his and something of mine, together so that you can't possibly miss them if you are looking. Out in the open, there for everyone to see. \n\nAnd yet, no one did. \n\n\"So I'll be at your house around 6:00, okay?\" Daniel said. The prom was two days away, but he was already planning out the events of the night.\n\n\"Sure,\" I said, opening my driver's side door and hopping in. Daniel stood in the opening, his torso blocking the light from above.\n\n\"Then we'll go to my house and finish getting ready till the Limo picks us up at 7:30. Amy is the last stop and then we hit the dance around...what?\" He stopped his itinerary break down and looked at me with eyebrows raised.\n\nI hadn't realized it, but when he mentioned Amy, my face must have fallen or twisted or contorted, giving away the growing mix of hatred, jealousy, and abject terror I felt towards Daniel's \"girlfriend.\"\n\n\"Sorry,\" I said, trying to smooth out my features. \"I guess I'm just nervous to be in the same space as Amy. Tiny, confined space. Next to all that...meanness\"\n\nDaniel waved his hand in dismissal.\n\n\"Please. Don't even think about it. Trust me, nothing is going to happen between you two. I won't let it.\"\n\n\"How can you possibly control that? I mean, she's AMY!\"\n\n\"She's just a human being, David. She's not some kind of goddess. God knows!\"\n\nI sighed again and did my best to conceal my nerves.\n\n\"I guess,\" I whispered, looking down at my lap.\n\n\"Hey,\" Daniel's finger lifted my chin so I stared into his soft brown eyes. \"Nothing is going to happen, okay? I promise.\" He leaned in my car and kissed me gently.\n\nMy head spun too quickly for me to respond.\n\n\"Text me when you get home safely, okay?\" Daniel said, shifting his weight. \"And wear your seatbelt.\"\n\nHe closed my car door and I soon heard his own close behind him. His engine rumbling to life beside me reminded me that I needed to breathe and that I had a task to accomplish. I started my car and drove home on complete auto pilot mode.\n\nI texted Daniel while I lay in bed.\n\nDAVID: Made it home safe. Headed to bed. See you at school tomorrow.\n\nHe replied immediately.\n\nDANIEL: Sweet dreams, babe. Miss you already. Xoxo -D\n\nTo say that my mother was shocked when I told her I needed to go rent a tux for the prom would be the understatement of the century. She did her best to control her giddy glee at the prospect, but she bounced around the rental shop like a deranged humming bird, extolling the virtues of a vest over the cummerbund, the real bow tie over the clip on. I was in no mental state to try and bring her head out of the clouds, so I let her have her moment. I played the silent mannequin as she dressed me like a baby doll, barely able to hold back her tears. It was kind of cute, actually.\n\nIn the end we chose,(and by we, I mean my Mama STRONGLY suggested that I choose) a classic slim-cut black tuxedo with a white shirt, no frills and a royal blue silk vest and bow-tie to match. The rental shoes gleamed in the light and the faux-sapphire cufflinks and studs sparkled at my wrists and down my chest. \n\nI had to to admit, it was a good look for me. I actually found myself feeling somewhat attractive for the first time, without the aid of Daniel. With him, I always felt special and wanted. But by myself in my room, that was rarely the case. The blue color worked well with my complexion and made my already blue eyes deepen to nearly match the dark cerulean of the vest. It was a striking combination with my blonde hair falling just to my eyes.\n\nIf I'd thought that the process of getting the tux had been a hassle, the night of the Prom itself proved too much for my mother. She must have taken 200 pictures just following me down the stairs and into the living room. I felt like some kind of celebrity with a single, very enthusiastic, very supportive, but certifiably insane paparazzo. \n\nI was made to stand by the fire place, by the ficus tree, next to the front door, on the porch, against a tree in the front yard, by my car, in front of the garage door, at the kitchen table, backwards across a chair, and any other number of poses my mother could think of in the moment as she clicked and turned to get different angles.\n\nMy little sister watched the entire thing with a smile of absolute evil marching across her face. I took solace in the seeing that at least she had suffered a recent battle with teenaged acne and come away with multiple large zits in unfortunately prominent places. It was a small victory, as she watched me twist in my mothers' clutches, but it was a victory I clung to amidst my ongoing photographic humiliations.\n\n\"He's not even taking anyone, mom,\" she mumbled in her typical lethargic apathy. \"Why are you taking so many pictures?\"\n\n\"You shut your mouth, young lady,\" mamma snapped. \"Your brother's going to Prom, god damn it, so show a little sibling affection, get your head out of your ass, and shut up if you can't say something nice.\"\n\nIt was my turn to smile as I watched my sister's shoulders hunch down and her eyes start to vigorously study the carpet. It was always worse to be called out by your Mama IN FRONT of your siblings than it was to be called out when no one else could hear. Witnesses to your powerlessness. Highly satisfying when it wasn't happening to me.\n\nI was just reveling in her distress when I heard a car door close outside. Mama reacted first, her nerves already on high alert.\n\n\"Your friend is here, honey!\" She almost sang as she peered out the front window, holding back the dainty lace curtain. \"Oh my, doesn't he look GORGEOUS.\"\n\n\"Mom!\" I whined.\n\n\"What? A woman can look,\" She admonished. To my absolute devastating horror she added under her breath, \"Let me tell you, if I was 20 years younger...dear Jesus help me.\"\n\n\"MOTHER!\" \n\nShe laughed at me and told me to hush up at the same time she opened the door for Daniel. \n\n\"Hello, hun! Come in, Come in!\"\n\nI was all of a sudden a very large ball of barely concealed nerves. Daniel was meeting my mother. Well, he had already met her on the first day he'd made me run to school. But he was meeting my mother now, after all of the developments. It felt like a \"meet the parents\" kind of meeting now. \n\nMy mama was correct. Daniel did look absolutely gorgeous.\n\nHis tux was black as well, and looked tailored specifically to fit him exactly. His lapels were thinner than mine, and a shade lighter than the rest of his suit. His tuxedo shirt was solid black as well and he wore a crisp red bow tie and blindingly red satin patterned vest. The black and red extremes cut a very dashing line. His dark hair and dark olive skin made him seem almost dangerous.\n\nMy mouth was watering just looking at him. I tried not to stare at him too much as my mom fidgeted with him and with me in equal measure. To this day, I think she just wanted to touch him. More than once I heard her make some aside comment about, \"So big and strong.\" \"Broad shoulders.\" Etc etc. \n\nMy mother was hitting on my almost-maybe-more-than-boyfriend. \n\nI wanted to die.\n\n\"Alright, let me just get a few of the two of you together and I'll let you guys be on your way.\"\n\nMama scooted Daniel and I to stand in front of the fireplace. I had to restrain myself from wrapping my arms around his waist and striking the traditional Prom pose. I must not have restrained well enough because my sister decided to open her vitriolic pie hole once more.\n\n\"Oh, yes. One of the happy couple in front of the fire place!\" She quipped snidely.\n\nIf looks could kill...well, she would have been dead a million times over by that point. I made a mental note to destroy her at the first available opportunity. \n\nYou'd have thought I was an immigrant leaving on a steamer ship for the New World circa 1900, the way my mom stood on the porch and waved as we drove off in Daniel's red Jeep. I saw her wiping her eyes on her sleeve through Daniel's side view mirrors.\n\n\"She's great, babe,\" Daniel said as he moved his right arm to rest palm up and waiting on my thigh. I wound my fingers into his and squeezed.\n\n\"Thanks,\" I said distracted. \"Sorry about my sister. She can be a bitch sometimes.\"\n\n\"It's cool. You've met Adam. I understand.\"\n\nWe drove the rest of the way to his house in content silence, holding hands while we still could. Our thumbs never stopped moving over the skin of the other person's hand the entire ride.\n\nDaniel's house was just as large as I'd remembered, his mother just as warm and welcoming. She only asked to snap a few dozen pictures before Daniel and I were released. She'd already done this whole thing with Adam, so the novelty was less intense for her with her younger son.\n\nI followed Daniel to his room and finally released a big breath when I closed his bedroom door behind me. I hadn't realized how tense I had been since I'd started getting ready early in the afternoon. I half expected Daniel to push me against a wall and kiss me. I wanted him to. It may have taken two hours to get ready but if he wanted to I'd shoot it all to hell and start over again. \n\nBut he didn't. \n\nHe walked to the far corner of his room and left me leaning against his door. I watched him bend down and rifle through something on the floor. When he stood and turned to face me, music started to play behind him.\n\nHe extended his arm to me and beckoned me to come to him with one crook of his long fingers.\n\n\"Dance with me?\" he asked, his smile broadening.\n\nIt felt like someone else was walking towards him. I couldn't stop looking at his face, his beautiful brown eyes and the smile that I knew was only for me. It was slow song, one I wasn't familiar with, but it could have been Death Metal for all the difference it would have made. \n\nI took Daniel's raised left hand in my right and placed my left hand on his shoulder. He slipped his left arm around the small of my back and pulled me gently to him. I felt his stomach pressing into mine, the warmth of his hips as he swayed us back and forth, taking the lead.\n\nFor the second time this week, we were dancing on our own. I leaned my forehead down and pressed it to his and closed my eyes. Nothing the prom could offer could possibly come close to this. Not a snowball's chance in hell, as the saying goes. \n\nWe didn't talk for that first song. Maybe not even for the second. My arms had moved to encircle Daniel's waist and he clung to my neck when I heard him speak.\n\n\"I just wanted to dance with you in our fancy suits and stuff. Just once... on Prom night.\"\n\nI opened a small space between us so I could lean down and kiss him long and slow. I held that kiss and pressed into him as hard as I could until the need to draw breath made my lungs burn. \n\n\"Thank you,\" I breathed.\n\nHe was quiet for a long time. \n\n\"You know I would take you...to prom...tonight? I'd take you if you asked me to.\"\n\nI stared at him. For someone who has always been of above average intelligence, it is not often that I find myself unable to speak. But I just...stared at him.\n\nHe was serious, his face made that plain as day. Somewhere in those deep pools, somewhere behind my own reflection that floated on their surface, a part of Daniel wanted me to ask him. He may not have been fully there, not entirely free of doubt, but there was some growing ember that was ready for it.\n\nI just wasn't sure I was. I had dreamed of walking arm in arm into Prom with Daniel. Of course I had. But I also dreamed of spending the summer before college together. Then of college itself. And beyond. But none of those dreams involved other people. When I dreamed about Daniel, it was as if I dreamed of us as the last two people on the planet: no one else mattered and no one else existed. I didn't even miss their presence or remember that other people once may have roamed the restaurants and vacation havens Daniel and I visited together, night after night. \n\nIt was not that I wasn't ready for the world to know about me and Daniel. I just didn't NEED them to know. It simply didn't matter. It accomplished none of my own goals to broadcast it when the only opinion I truly cared about was Daniel's.\n\n\"I know you would,\" I whispered back, unsure it was really me talking. \"I don't need that. This is our Prom. And I don't have to share it, or you, with any one else. It will just be us in this memory. For as long as I live. That's how I like it.\"\n\nHe kissed me softly and nodded.\n\nThe door made only the slightest scraping noise as Adam pushed it open and barged into the room without knocking.\n\nDaniel and I sprung apart as quickly as possible and began straightening our clothes and doing an all around horrible job of covering up the fact that we had just been caught.\n\n\"Settle down, Love Birds,\" Adam chuckled and raised his palms in a non threatening gesture.\n\n\"Shut up, ass wipe,\" Daniel spat back instantly.\n\n\"Cool it, little dipshit. I just came up to tell you the Limo is here,\" Adam declared and started to leave. Suddenly he stopped and turned to Daniel.\n\n\"But while I'm here, what the fuck are you doing?\" He asked his little brother to a stunned and reaction from the both of us. \n\n\"Why on God's green earth would you take that Amy NIGHTMARE when it is so plainly obvious that you would rather take David? Huh? Why even go at all? I've met her, little bro, and let me tell you, that chick is grade-A-type-1-bat-shit-crazy-pants. Not to mention a stone cold bitch. So what's the big deal? You bring a dude to prom. Who gives a flying fuck? And if they do, fuck 'em.\"\n\nAdam's face was red with the passion of his tirade. I didn't seem to exist for the two brothers. Adam locked his eyes right on Daniel, reading him the riot act but essentially being the most supportive and astute sibling a guy could hope for at the same time. Daniel's eyes were wide and his lips parted but otherwise he stood as still as stone.",
        "I didn't often have the opportunity to rescue him, so I took it.\n\n\"I don't want him to,\" I shot to Adam. \"I want him to go with her. It...it doesn't matter to me if anyone knows...about...us. I mean, I appreciate your support. But don't blame Daniel. He offered. I want to keep him to myself, as much as I can. If that makes sense.\"\n\nI stammered through the speech, unsure how to put into words what I needed to convey. With Daniel, it was simpler; I didn't need to use logic or make total sense and he would just...get it. He was Daniel. I'd never tried to verbalize this to someone else. It only served to prove the entire point of what I couldn't express: Daniel and I were something unto ourselves; other people complicated things and screwed with the laws that ruled our relationship.\n\nAdam stared at me for a long moment. From the corner of my eye, I saw Daniel visibly relax.\n\n\"Understood,\" Adam finally said with a nod. \"The Limo's here. Hurry it up you two, don't wanna be late.\"\n\nHe turned and left without closing the door behind him. \n\nDaniel's eyes were still wide when he finally turned to me.\n\n\"You ready?\" He asked.\n\n\"Are you?\" \n\nHe nodded and gestured for me to leave before him. I started to walk out but turned before I left. \n\n\"Daniel, can we...\" I started. His lips stopped my words and sent my mind into space. When I floated back into my body Daniel was smiling at me.\n\n\"I got something for you. I almost forgot,\" he said. The world was still fuzzy but I think I tried to nod in confirmation that at least I'd heard him speak.\n\nI felt his fingers at my lapel. When I looked I saw that he had pinned a white and red rose boutineer to my lapel. I have no idea where he had gotten it from, but it matched the one that stood out on his own broad chest. Almost perfectly. The one on Daniel's breast was surrounded by small blue blossoms. Mine was surrounded by small red blossoms.\n\n\"I get the blue one, because you are wearing blue,\" he explained. \"You get the red to match me wearing red. This way, even though we aren't there together, you get a little bit of me, and I get a little bit of you.\"\n\nHe finished attaching the flower to my coat and straightened it on my shoulders, dusting me off, though I didn't need it. His thumb came to my face and wiped across my cheek. I felt wetness. I hadn't realized I cried.\n\n\"I thought you would like that.\" He kissed me softly. \"Okay then. Here we go.\"\n\nI walked down the stairs like a zombie. At least I assume I did. He could have very well carried me over his shoulder like a caveman, I really don't remember. My brain was elsewhere and my muscles worked on autopilot and the grace of god alone. \n\nThe limo was an...experience.\n\nI climbed in still in my half zombie state and Daniel slid in next to me. Tall Paul, Gordon, and Ian sat on the far seat closest to the back and their dates, Amanda, Katy, and Adrienne took up one row along a side wall. Daniel and I sat across from them. \n\n\"DAVID!\" Tall Paul roared and raised his fists in the air. \"Dude, you clean up nice!\"\n\nHis words slurred. Seemed our Paul was already two sheets to wind. He would have to pace himself or we'd get ourselves thrown out.\n\nIan and Gordon echoed their own compliments as well; but it was the girls reactions that surprised me the most. They actually turned to me as one, all three heads clearly sizing me up, scanning from the tip of my head to the bottom of my rental shoes. And then in one creepy move straight out of the Stepford Wives, they smiled identical smiles and cocked their head to the left just slightly.\n\n\"You do look good,\" Katy said from the middle.\n\n\"Thanks,\" I replied, unsure if I should be worried that they were going to kidnap me for some nefarious popular girl plot. I felt very \"Carrie\" all of a sudden.\n\nThe drive to pick up Amy, the last of us to join the group, passed with amiable chit chat and whoops of boyish testosterone from the back row.\n\nI waited in the car with the rest of the people as Daniel went inside to retrieve his date. I was suddenly very aware of just how out of place I was without Daniel there. I hadn't realized how much he had become like my armor and shield in the strange land he inhabited. I may know the sights and have a few blossoming friendships, but I was still a visitor in their prestigious world.\n\nDaniel retook his seat next to me on the smallest bench and Amy climbed in after him, a floor length red spaghetti strap couture gown clinging to her tiny frame. Say what you will about the woman, you couldn't deny that she was quite beautiful. Or that her dress most likely cost as much as my car.\n\nThe girls parted to make room for their leader without the need for words. Amy didn't even look back before she sat. She fully expected that whoever was in the way of her descending backside would be gone before she had to come into contact with them. And she was correct. \n\nThe Stepford girls creepy smiles were nothing to the ice cold death glare that Amy gave me. There wasn't even a hint of a smile on her features. She stared at me for a heartbeat and then...I ceased to exist for her. She turned to the girls and started talking about this and that as if I had suddenly gone invisible and she didn't even care to wonder how or why. \n\nDaniel sighed, squeezed my thigh for a second and called to the driver that we were ready to go.\n\nThe amount of money allotted for the Varsity Baseball team seemed almost paltry when compared to the vast wealth the PTA moms could raise for Senior Prom. The theme for the dance was \"Old Hollywood,\" and they had gone all out, no expenses spared, no punches pulled. There were small countries who could have run full tilt for a year on what this one night must have cost those women.\n\nRed velvet hung in heavy swaths from all the windows that lined the long walls of the massive ballroom. Crystal and gold chandeliers dripped elegance from the painted and plastered ceiling while brass and gold filigree sparkled on the wallpapered walls. Gold table cloths covered a sea of round tables, each seating ten people at fully laid place settings with white and gold china and more forks than any one person could ever logically need in the course of a given meal. Lilies and lilacs and white roses spilled from vases on all the tables and tall marble plinths spaced regularly around the room. Someone had taken the time, or paid someone else to take the time more likely, to paint the tips of every single flower with gold paint. They had, quite literally, gilded the lilies.\n\nAn honest-to-god red carpet, complete with red velvet dividing ropes on brass poles to hold back the paparazzi, lined the path to the photography area where no fewer than six cameras flashed like fireflies, foreshadowing the approaching languid southern summer nights. Projectors mounted to the ceilings showed 1930's and 40's hollywood era Silent Movies against the wall paper all over the wall. Katherine Hepburn, Bette Davis, Veronica Lake, Cary Grant and many more stars from a bygone era stared down at my classmates and I in our finery. I wondered how many of my peers could name any of them, much less the title of a film they had starred in. My hopes were not high for those odds. \n\nWhen we entered the room, as I tried to acclimate myself to the glitz and glamour of the space itself, our group was ushered into the line to take the obligatory prom photo. My nerves began to show and I had to wipe a sheen of sweat from my brow. My companions were arm in arm with their dates, waiting patiently and adjusting their ties and vests in preparation. While I watched Amy hook her arm around Daniel's elbow, I was suddenly very much alone.\n\nI would be taking this photo solo. It shouldn't have bothered me as much as it did. I was used to being alone after all. I had spent the vast majority of my life to that point as a self prescribed loner. But this was somehow different.\n\nEach of my teammates took their photos, smiling broadly and gripping their waifish dates around the waist as the lights flashed brightly around them. \n\n\"Don't you have a date, guy?\" The primary photographer asked as I took my place in front of the photo backdrop of Grauman's Chinese Theater, complete with brass stars in the sidewalk.\n\n\"No. I'm here alone,\" I muttered, suddenly embarrassed by the fact. The photographer shrugged, told me where to look and snapped the photo before I even had time to obey. I was still in a flash-blinded daze when he called out: \"NEXT!\"\n\n\"We wanna get one of the team,\" I heard Daniel say from the far side of the photo area. I saw him disentangling Amy's claws from his arm as he prodded the other three boys to join him in front of backdrop again.\n\n\"Alright.,\" the photographer said with obvious annoyance. Fuck him. This night wasn't about him anyways. He was leaving with a check in his pocket. \n\n\"Ian, Gordon, get your asses over here,\" Daniel barked like a drill sergeant. Those he called obeyed on the double. Paul was already at Daniel's side.\n\n\"Get in here David,\" Paul quipped and motioned me to take a spot in the line up with a jerk of his head.\n\n\"You guys go ahead,\" I tried to dissuade him.\n\n\"Get your ass in here, dude,\" Ian shot back. \"Get in the middle.\"\n\nIan and Paul made a little space for me to get between them with Daniel and Gordon on my right. I couldn't help but think of the old Sesame Street song: \"One of these things is not like the other. One of these things just doesn't belong.\"\n\nI draped my right arm over Daniel's shoulder and did the same to Paul on my left. I felt Paul's arm on top of my own. \n\nThen I felt Daniel's hand on the small of my back. He pressed firmly and then ever so slowly slid his hand over the curve of my ass, coming to settle on my left ass check with deliberate and constant pressure. My eyes must have widened and I am quite sure I lost any powers of concentration I may have otherwise possessed. I didn't even hear the photographer count down. \n\nA blinding flash of white and we were ushered off the stage yet again.\n\nThe dance itself began in earnest. I found place at a large round table and took a seat to survey the spectacle. It wasn't long before Gordon and Paul were obviously tipsy. The chaperones must have been willfully ignoring their intoxication because it was not hard to spot them with their bright silver flasks. They were not even attempting to be subtle. \n\n\"Come and dance, little dude!\" Paul slurred to me on one of his semi-drunken twirls around the floor. \"At least take a swig.\"\n\nHe held out his flask to me in shaky fingers, eyes drooping and begin to glaze.\n\n\"Trust me, Pauly,\" I began,\" You are going to need that alcohol more than me. It's a disinfectant after all. And you are here with Katy.\"\n\nThat seemed to confuse him a bit, my witticism flying over his drunken head. He shrugged, took another long swig from the flask, and wandered back into the pulsing crowd of dancers.\n\n\"Mind if I take a seat?\" came a deep voice at my shoulder.\n\nI looked up and stared directly into the smiling face of Coach B. He looked extremely handsome in his classic black tuxedo. No few of the single female teachers would be vying for his attention this evening, to be sure.\n\n\"Of course.\"\n\nCoach settled himself into a seat next to mine and we watched the dancers for a moment. I saw Daniel and Amy twirl by at one point.\n\n\"He's certainly something, isn't he?\" Coach B asked quietly.\n\n\"Mmhmm,\" I replied, not even realizing that he could have meant any one of the boys arrayed in front of me. I had eyes only for Daniel.\n\n\"You've been good for him.\" \n\nThat got my attention. \n\nI turned to look at him and did my best to hide the disbelief that must have painted my features. I felt the blood drain from my skin and I tried to come up with something, anything, to say that might change the subject. Coach B rescued me before I could speak.\n\n\"Don't look so stunned, David. It's not like you can exactly hide it all that well. And not every old man like me is some bigoted ass hole. I had my share of wild times at your age, believe you me.\"\n\n\"You did?\" I couldn't think of anything else to say. I know it was a vapid response, but I just felt the need to keep him talking.\n\n\"Of course. Nothing like what you and Daniel have, not from the little I've seen anyways.\"\n\n\"What exactly gave us away?\" I asked, genuinely curious. He had made it clear that denial was out of the question at this point. Coach B knew and Coach B didn't care. A few weeks ago I would have been trembling in a pool of my own urine at the thought of the mere possibility of this interaction, but I was strangely calm now that it was happening.\n\n\"I saw you two in the shower that first morning. And I forgot my bag one evening and accidentally caught the tail end of something in Daniel's jeep. I had to run like the god damned wind to get back to my office when Daniel saw me. I didn't want to freak him out too bad, so I just waited till the coast was clear.\"\n\n\"That was YOU!?\" I squeaked. Several people turned towards me, so I lowered my voice. \"Daniel's been going crazy for days trying to figure out who it was. He thought he was losing his marbles and he imagined the whole thing.\"\n\n\"I didn't mean to scare you guys, just didn't want to interrupt is all.\"\n\nMy face flushed and I looked down.\n\n\"Hey. None of that, okay? It's very obvious that you two care for each other. Don't be ashamed of that.\"\n\n\"I'm not.\" \n\nI looked up and found Daniel looking towards me. He noticed Coach B seated next to me and his face grew concerned. I smiled at him warmly, more warmly than was probably necessary. Amy's face glowered at me from over Daniel's shoulder and I swallowed hard.\n\n\"Good,\" Coach B finished. \"I just thought you should know, is all. You've been a huge help to the team and I wanted you to know you are appreciated for that and for everything else.\" His big hand clasped down on my shoulder as he rose from the chair. I had to fight back the lump rising in my throat and the tears that had suddenly come unbidden to my eyes.\n\n\"Thank you, Coach.\" \n\n\"You should dance with him,\" he said. \"I'd pay to see the faces of some of these Soccer Moms if you did.\" \n\nHe smiled broadly and walked back to the his spot on the far wall, leaving me to process our conversation in stunned silence. \n\nAn hour or so later, after being pulled into a few group dances with the team, I was contentedly munching on some of the food the Prom committee had provided. It felt strange to eat carrot stick and ranch dressing off of gold lined plates, but that was what there was. Full dinner was available as well, but I couldn't have eaten much. Thankfully I didn't or it would have made a spectacular reappearance when Amy slithered into the empty seat beside me.\n\n\"Are you enjoying yourself?\" She asked. \n\nHer eyes sparkled in the dim light and I was reminded of the serpent in the Garden. Her voice was nice, but I didn't trust her as far as I could throw her.\n\n\"So far, yes. You?\"\n\n\"Oh, it's a lovely night.\" She gestured around the room to the decorations. \"The PTA really outdid themselves this year.\"\n\n\"Mmhmm.\" I replied. My guard was up and I was ready for the axe to descend at any moment.\n\n\"Have you seen Daniel?\" She asked sweetly. \"I can't find him anywhere.\"\n\n\"Have you checked the bathroom?\"\n\n\"I'm sure he'll find me at some point,\" she sighed, as if it was minor annoyance that her date wasn't at her side. \"Gives us a chance to chat.\"\n\nHer long red painted nails rested on my forearm and she gripped me tightly. I felt ice begin to run in my veins and my heartbeat was suddenly rushing in my ears.\n\n\"You certainly have had quite a year. You just came out of no where. No one knew your name and then, poof, you arrived. Like magic.\" \n\nHer fingers dug a little deeper into my arm. Maybe there was a way to salvage this conversation yet. She was wading into dangerous waters, close to subjects that I didn't want to broach with her, here or anywhere for that matter.\n\n\"I'm still just me, I guess,\" I said with a shrug. Maybe humility would throw her off.\n\nNo such luck. Her eyes narrowed and she moved her face closer to my own and lowered her voice.\n\n\"Cut the bull shit, you little faggot,\" she hissed through clenched white teeth.\n\n\"Amy, please,\" I started, \"name-calling isn't...\"\n\n\"Fuck you and your whining, princess. Everyone knows why you joined the baseball team. We all talk about it. You're just there to check out all the hot popular guys in the showers so you can jerk off at home. It's fucking disgusting is what it is. You may have them all fooled, but the rest of the school knows you're nothing but a gross little pervert trying to have his way with the popular guys. It's never. Going. To. Happen. You understand? Not in a million fucking years. No one wants anything to do with a nasty little fag like you. Okay?\"\n\nIf I hadn't been wearing a suit, her nails would have been drawing blood. \n\nTo say that her tirade had no effect on me would be a bald faced lie. I felt each word like a whip to my soul. My mind screamed that her words weren't true. The team enjoyed my company, the liked me as a person. But she shattered my only just emerging confidence with practiced ease. She read my reactions like a book and new just which words landed and with what efficacy. \n\n\"I asked you if you understand me, fag,\" she hissed again, her fingers clutching my arm so hard that I felt my bone shift beneath her grip.\n\nI tried to speak but no words came out. To my complete and utter humiliation, I felt a tear leak from my eye and burn a path down my bloodless face.\n\n\"Jesus,\" Amy snorted a derisive laugh. \"The faggot is crying. Whatever. Waste your time trying to be popular if you want. School is over in three weeks anyway. Do you think any of your new 'friends' are going to even speak to you again once we graduate? Don't fucking plan on it. No one wants you around, fag. Got that? No one. Not me, not the team, not Daniel. Get it through your thick skull and leave everyone alone. Just go back to your little faggot hole you crawled out of and ...\"\n\n\"Amy.\" \n\nThe voice that called her name and blessedly drew her ice cold eyes from the tears that betrayed me was colder than Amy could ever hope to be. I recognized it as Daniel's immediately, though the violence that permeated that single syllable frightened me. \n\n\"You will apologize to him, Amy. Right. Fucking. Now.\" \n\nIt wasn't a request. Amy stood and her finger finally lost their grip on my arm. It shames a little to say that I immediately pulled it to my stomach and soothed the soreness. \n\n\"What?\" Amy snapped, her eyes flashing over my head. \n\nDaniel stepped from behind me and placed himself directly in her path, essentially shielding me from her with his own body. He'd come up behind me, as if in answer to my silent prayers and now he stood as my champion before this monster who sought to do me harm.\n\n\"You heard me. Apologize to him. Now.\" \n\n\"I will do no such thing,\" Amy snapped.\n\n\"You will and you will do it now. You understand me? I heard what you just called him. Say you are sorry.\"\n\n\"No.\"\n\nDaniel stared at her for a moment. For the space of a few heartbeats I was genuinely terrified that he might punch her square in the face. His fingers were curled into tight fists at his side and shook with the effort to control his rage. When he spoke, it was with controlled and deliberate volume and speed, though his voice trembled with the difficulty of the task.\n\n\"I hope you have your cell phone in your tiny little purse. You should call your parents. Now. Because you aren't riding home with me.\"\n\nFor the first time, I registered a look of actual shock on Amy's pristine features.\n\n\"But...,\"she stuttered, looking around to see if anyone had noticed what had just happened. Only a few eyes had started to turn in our direction, but I caught sight of Ian and Gordon making their way through the crowd and headed in our direction.",
        "\"But, Daniel. I already booked us a hotel room for the...\"\n\n\"Cancel it.\" Daniel's voice was cold steel. \"I wouldn't be caught dead in a room with a nasty, vile, bigoted, disgusting bitch like you. You have about 20 seconds to get the fuck out of my sight.\"\n\n\"Daniel!\" She whined, her eyes going wide.\n\n\"19. We are done, Amy. Through. For prom and for ever. 15 seconds.\"\n\nA small crowd had begun to form around us now. Amy suddenly realized that her humiliation at the hands of Daniel could no longer be a private matter. Everyone would know now. She'd chosen the battlefield and she had been defeated, but she wasn't out just yet. She was a cornered animal and she still had claws.\n\n\"You're seriously going to break up with me over this stupid little queer?\" she spat, flinging one red tipped claw towards my face. \"You can't honestly be that fucking stupid!?\"\n\n\"I SAID DON'T. CALL. HIM. NAMES!\" Daniel roared at the top of his lungs. \n\nHis face was flushed and his eyes crackled with electricity. If only a few people had noticed before, Daniel's volume caught the eye of every person in the ball room. The music still played overhead, but no one else spoke. Very few even moved.\n\n\"Are you really that dense, Amy?\" Daniel asked, visibly trying to calm himself. \"Is there only room for yourself in that pretty little head of yours? Just you and your hate rolling around inside your skull? Is that all you are? Get away from me. If you speak to me again or if I hear even a whisper of something about David that comes from you, mark my words Amelia: I will put you in the fucking ground.\"\n\nThe assembled crowd and even Amy understood that this was not an idle threat. I wondered if Daniel would actually do her physical harm right there.\n\n\"Like you fucking could,\" Amy spat back. \"Without me, you're just as much of a nothing as that little fag! You can't touch me. You wouldn't dare!\"\n\nI felt a hand on my shoulder.\n\n\"He won't be at it alone, you cunt-faced bitch,\" Ian added, his voice much more sober than the last time I'd heard him speak. \n\n\"You really want to take on all of us?\" Paul slurred, adding his hand to my shoulder.\n\nIan leaned down to whisper in my ear.\n\n\"You okay, little dude?\" \n\nI nodded. I was still unable to speak, but this time not because of Amy.\n\n\"Get out of here. Now,\" Daniel finished.\n\nAmy took the arrival of each of my new defenders like a physical blow. She may have been able to stand up to Daniel alone, even one on one, but the entire baseball team had arrayed themselves against her. \n\n\"Katy, Amanda, Adrienne, come on. We're leaving.\" Amy spat to her minions. I had to hand it to her, she was graceful even in humiliating defeat as she gathered her long silk dress and turned to walk out.\n\n\"If you go with her, you can forget about ever speaking to us again,\" Ian said to his date.\n\n\"Ditto,\" Gordon said to Katy.\n\nAmy waited for the girls to follow her in her storming out. But she waited in vain. All three girls remained at the side's of their dates. \n\nAmy turned and left in a huff, throwing chairs and table settings to floor in her wake. My previous characterization as a harpy was proved true when she let out a screech fit to wake the dead before throwing open the double doors and slamming them closed behind her.\n\nIt took a few moments for everything to begin moving again once she left. Daniel sank into the chair next to me and breathed deeply through his nose and out of his mouth, trying to calm himself down. He rested his elbows on the table and held his head in his hands.\n\n\"I'm so sorry, David,\" he breathed almost too quietly for me to make out. \n\nHe turned to look at me. His brown eyes were wide and shone with wetness. He looked...hurt. I realized that he didn't need to calm down from confronting Amy. That was already far from his mind. He was mad at himself for not protecting me sooner.\n\n\"Daniel,\" I whispered, placing my hand on his knee, \"don't blame...\"\n\n\"I'm going to take him home, guys,\" Daniel declared loudly. It took me a moment to realize that he wasn't talking to me anymore. He pitched his words to our surrounding teammates.\n\n\"Yeah, of course,\" Gordon slurred. \"David, dude, don't worry about it. She's always been a bitch. Even in kindergarten\"\n\n\"Ian, call my dad and have him come pick you guys up. I'm going to take the limo if that's alright. I want to get out of here right now.\"\n\n\"Got it,\" Ian chimed in.\n\nDaniel rose from the table, using his hands on the surface to steady himself. I just stared at him from where I sat glued to my seat. He extended his hand to me.\n\n\"Come on. We're going home.\" \n\nIt felt like I was two people. One part of me felt like someone else raised their hand to clasp the one Daniel offered. It wasn't real. It couldn't be real. The other part of me was aware of every single molecule of my body as it made contact with Daniel's palm. It pierced me so completely, that awareness of him, that I wondered if I would ever recover.\n\nNo one said anything as Daniel lead me by the hand from the ballroom. No one whispered behind their hands. No one's eyes darted or judged. Or they may have. I can't really be trusted to recount things accurately. Daniel was my all consuming thought. His strength flowed through our hands and held me aloft so that I seemed to float from the ballroom and out into the crisp spring night.\n\nOur limousine was only one of several dozen parked in front of the hall. Daniel called the driver on his cell and the obscenely long car pulled around to pick us up.\n\nDaniel held the door open for me and I slid inside without comment. Daniel followed and retook our original seats close to the diving window between the cab and the seats. \n\n\"Just you two?\" the driver asked.\n\n\"Yes,\" Daniel replied. He instructed the driver to take us to my house. I didn't interject. Daniel pressed the button to raise the dividing window.\n\n\"Let's go to the back and get comfortable\" Daniel offered. \n\nHe took the lead and I was gifted with a superb view of his ass as he hunched over and shuffled to the long back seat with its shiny, plush black leather. He plopped himself down in the corner and beckoned for me to sit with him.\n\nI slid in beside him and snuggled up close, my head resting lightly on his chest. His arm circled my neck and held me close, his fingers raking through my hair. I felt him kiss me tenderly on the top of my head. My eyes closed and I breathed him in, my ear pressing to his chest, listening as his heart beat as it slowed and he returned to calm.\n\n\"I'm so sorry, baby,\" he whispered. \"I never thought she would dare to...\"\n\n\"It doesn't matter,\" I cut him off. \n\n\"But it DOES.\" Daniel interjected\n\n\"No. I promise you, it doesn't,\" I said, pulling myself back so I could look him in the eyes. \"What you just did for me...I...There are no words, Daniel. What you just did, what you are still doing...It's all so...\"\n\nDaniel's eyes searched my own, as if he was still looking for any more pain or hurt behind them that he could eradicate for me. There was none. My eyes were glistening with tears, but there was not even a scratch left over from Amy. I felt my heart swell in my chest again, beating so quickly that it hurt, like my chest would burst from the pressure and I would cease to exist.\n\nI shot forward, hoping my lips would do what my words could not, and kissed him. I must have been more forceful that I anticipated because I heard and felt the back of Daniel's head rebound against the tinted glass window. But the dam had opened now. Unless he was bleeding to death on the carpet, there was no stopping this.\n\nMy tongue danced with his like I'd wished we danced at the prom itself. I had kissed him so many times before, countless time. And it still amazed me how new it felt every time. There was always a new level to achieve, a new sensation to set my mind blazing like a comet in a starless sky.\n\nThough my body covered his and I tried to pin him beneath me, Daniel was always and ever more the stronger of our pair. His fingers grabbed for the button of my tuxedo jacket and he stripped it from my shoulders and flung it aside without ever breaking our kiss. I felt him undoing the buttons of my white shirt as well, slower. He took his time fishing the hem of it from my pants and even more time with each button. His fingers tweaked my nipple when he got that far up my torso and I jerked in surprise.\n\nIt didn't take much for him to flip me off of him and back into a seated position. He swung around in front of me, kneeling between my opened legs on the floor of the limo as his hands traveled up my torso, sending sparks along my spine.\n\n\"David,\" he said as his fingers explored my pecs and gently cupped my face in his palm, \"I need you to know how much you...\" he trailed off. \n\nI nodded and smiled at him, pressing my cheek into his embrace and kissing the warm skin of his fingertips.\n\nDaniel stared at me as he worked the button and clasp of my tuxedo pants with sure fingers. He stood and hovered above me while his hand found my zipper and he slid his hand into the elastic waistband of my tight boxer briefs. I heard him moan into my mouth when he touched my cock, already awakening to his embrace. He gripped me gently and fished my cock and balls out of their fabric enclosure and hooked the elastic beneath them.\n\nI hadn't heard him undo his own pants, but when I saw them hit the floor of the limo as he used his toes to throw off his shiny shoes, I figured out his plan. It was awkward for him to kick his pants and shoes aside in the cramped space, but he managed and straddled my now closed knees wearing only the white jockstrap I had seen him don the first night we were together in Boston. His hard cock throbbed beneath the thin cotton and I spied the darker white spot that told me he'd already leaked sweet precum. \n\nHe scooted forward so that his cock was just inches from my face. I buried my nose into his jock, my mouth opening around the fabric covered tool I yearned to set free. My tongue traveled his length, tasting only the fabric but smelling his musky manliness. I swear I could have survived on that scent alone. I reached around him to grip both globes of his ass and maneuvered my mouth over his covered cock head and flicked my tongue across him.\n\nHe reached behind me and took my now stiff-as-a-board member in a backhanded grip. I oozed crystal liquid now. I felt it roll languidly down my supremely sensitive shaft. He worked it into my skin with expert quickness.\n\n\"Let me lead, okay?\" He asked as he removed his tuxedo jacket and pulled on one end of his red bow tie, letting it fall open on his chest. My fingers began to work on the buttons of his shirt as I nodded.\n\nDaniel guided my cock head to his hole, squatting easily over me. I watched the muscles of his thick thighs strain, the ligaments standing out beneath the black hair there. I groaned as he worked some of my pre cum over his hot opening, felt my cock respond and pulse out another stream for his use.\n\n\"It's still so big...,\" he whispered as he closed his eyes. \n\nI thought I would die when he pushed down and I felt the head of my dick slip gently inside him. We'd never done this without preparation before, so the tightness of him was almost frightening. It felt like his whole body wanted to suck me inside him with violent force. Daniel controlled it and I watched in awe. I felt him slide down my shaft slowly, letting himself get used to it, sometimes pulling up a little and then thrusting down even farther. Each new movement made him twitch. My fingers were frozen on the buttons of his shirt and my mouth hung open, so engrossed was I in the feeling of Daniel's tight ass accepting my throbbing hard cock into his muscled body.\n\nI knew immediately when I pressed into his prostate. His cock jumped in front of me and I abandoned his half opened shift to tear aside his jock strap. Decorum be damned, I needed to see his cock. I gripped him in my palm and worked his silky foreskin over and around his head, pressing my thumb into the soft underside and bringing his precum to my lips.\n\n\"Oh, baby. It's so good...I'm not going to last long, I can already tell.\" Daniel whimpered. \n\nHe was nearly all the way down to my hips. With a final push he hit home and the world exploded. Daniel rested his full weight on my lap and placed his hands on either side of my neck, gripping me tightly as he wiggled his ass over the cock that filled him completely.\n\n\"Make love to me,\" he said leaning forward, his forehead touching mine, our lips hovering a hairs breadth apart. His entire ass squeezed my twitching cock buried inside of him and he rocked forward gently. I didn't need him to ask twice. Hell, I didn't even need him to ask the first time.\n\nMy hips pressed upwards and I felt his whole body quake around me. I didn't pull out of him or thrust deeper into him. I didn't want to disturb the delicate balance we had or make this end too quickly. But we rocked together on the back seat.\n\n\"Mmm, yes, David. Please don't stop,\" Daniel whined. \n\nHe buried his face into the crook of my neck and kissed me gently. I pressed into him again and pushed us both upwards, gaining new ground inside him.\n\n\"Ahhh,\" he groaned. \"Again. I'm so close.\"\n\nI pressed forward. Daniel's cock spewed a massive jet of precum onto my exposed chest. I was sure that there must be some on my rented shirt, but I didn't care.\n\nMy cock felt like hot iron sliding through butter as Daniel worked his muscles around it, never stopping his motion with his hips and timing it with the still tighter muscles of his chute and hole. I felt myself getting close as well.\n\n\"Make me forget,\" Daniel's lips were at my ear, nibbling softly. \"Take it away. Make it all go away.\"\n\nI pushed my hips up as far as they would go, burying my cock to the hilt. Daniel's smooth ass checks ground into my trimmed pubes. I concentrated and made my cock expand inside him even as I felt myself pulse another stream of precum deep into him. \n\n\"Oh, god,\" he moaned. \"Do it again. Quicker.\"\n\nI expanded. Again. Again.\n\nDaniel's breath came in gasps. His grip around my neck tightened and the once controlled movements of his ass became erratic but more intense.\n\nAgain. Again. Again. \n\nI pulsed my thick cock inside, milking my own balls with his hole, knowing that if I did it just a few more times, I would explode.\n\n\"Tell me,\" Daniel said, pulling his face from my neck and looking me straight in the eye. His face was a contorted mass of pleasure, his eyes shining brightly as he held back the inevitable. \"Please, baby, tell me...\"\n\n\"You know already.\" I said, barely able to hold myself from the brink.\n\n\"I know. But tell me, please. Tell me you love me as much as I love you.\"\n\nHe stared at me, his eyes waiting for my reply, holding us both from the edge of the cliff, unable to go over until this was finished.\n\n\"I love you, Daniel.\" I breathed...\n\nand we let go, falling through the open air, barreling over our cliff wrapped tightly in each other's arms.\n\nI'm not sure which of us started first, but I know we each drove the other to ever increasing volumes and speed. It felt like ice water replaced the hot blood as I pumped all of my heat and cum deep inside of Daniel. It was different this time. This time, it carried my love. It had always been there, of course. But now it had a name. A true name. \n\nDaniel's load plastered my face and chest in thick ropes of white. Any hopes I had of returning the rental shirt were dashed now. As if that mattered.\n\nWatching Daniel gingerly remove himself from my cock, and seeing some of my cum drip from his used hole and down the inside of one massive hairy thigh was a treat. Especially since he waddled awkwardly to the front, slid down the dividing window and got the attention of our driver.\n\n\"Change of plans,\" he called forward. \"We're going to my house.\"\n\n\"Yes, Sir.\" The driver replied, but Daniel was already raising the window again. He settled himself, still pantsless, into the seat beside me. He reached over to wipe some cum from my cock and played with my shaft nonchalantly. He leaned over to kiss me gently.\n\n\"You are staying over tonight,\" he said.\n\n\"I can't, Daniel,\" I said, \"I have to get home. Mama's expecting me in by midnight and I... what?\" \n\nI stopped because Daniel suddenly wore the most devious smile I had ever seen him crack.\n\n\"Nope. She's not. I told her we got you a hotel room with the rest of us. She's not expecting you until around 4 PM tomorrow.\"\n\n\"Why you little...\" I didn't finish the sentence. \n\nI tackled Daniel and we spent the remaining journey to his house in uncontrollable fits of laughter and never ceasing kisses. \n\nEvery so often we would stop for a moment, out of breath, gasping and smiling as our fingers laced comfortably together. In these brief pauses, Daniel would turn to me and repeat the words that I never wanted him to stop saying:\n\n\"I love you, David.\""
    ],
    "authorname": "DAMackey",
    "tags": [
        "prom",
        "high school",
        "nerd",
        "jock",
        "romance",
        "bottom",
        "top",
        "bareback",
        "cum",
        "girlfriend"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-10"
}