{
    "title": "A Guide to Great Anal Sex Pt. 04",
    "pages": [
        "Celeste: It may seem strange having Jimmy describe my orgasms, but we agreed at the beginning that he would do most of the writing so there wouldn't be the confusion of two voices. These are his words, but I almost dictated what he has written, at least the parts about me. It certainly is my list and men who are reading this might want to play close attention, particularly if they are interested in what gives at least one experienced woman the greatest pleasure from anal sex. I also think I should say something about expectations. It's true that I can have what I think is a perfect orgasm any time I want. It's also true that there are many times when I don't want to. Then, all I want is to get totally turned on, wet, and walk around feeling good. Jimmy and I have been ass fucking all our married lives. It's not an occasional treat; it's how we express our love for each other. If we don't know what we're doing by now, we're never going to. If you're just starting out or if your commitment to your partner isn't as strong, your experiences be different and less intensely pleasurable. Getting to great anal sex is a journey, not something that happens all at once. But stick with it. Have a couple of orgasms with your lover's mouth or dick in or on your ass and you'll know a basic true. VAGINAL SEX IS FOR BABY MAKING; ANAL SEX IS FOR PURE, UNADULTERATED PLEASURE. The journey to this discovery is a wonderful experience by itself. Back to J.\n\nCeleste and I have rank ordered her four favorite orgasms. Number two (and almost number one) is having me tongue fuck her hole. We talked about this in Part Three. Her three other favorite orgasms, in ascending order, come from:\n\nNumber four: long stroking or bottoming out. There are two types. One is when I fully insert my penis into Celeste's anal canal and thrust rhythmically in and out as hard as I can while she strokes her clit and/or g-spot. This is ideal for the times when Celeste wants to be possessed, when all she wants is for me to fuck her. (Celeste: It is absolutely true that there are times when this is exactly what I want.) These times are not frequent, are usually memorable, and SHE ALWAYS TELLS ME WHEN THIS IS WHAT SHE WANTS. I NEVER PRESUME THAT IT IS. Long stroking does give her a very pleasurable sense of fullness and she knows how much I like the feeling of having my dick in what feels like a warm, pulsing, form-fitting glove that is squeezing me everywhere. Giving me pleasure gives her pleasure just as the opposite is true.\n\nHowever, when you think about the areas in her body that I am trying to stimulate (the furrow between her sphincters, her clit, her g-spot, and the hidden ends of her clit [although these become almost irrelevant during intercourse]), once I pass beyond the g-spot, I'm not adding anything to Celeste's pleasure. In fact, I'm somewhat taking away from it by passing beyond the g-spot. My other problem with traditional long stroking is that it is such a male dominant act, with me as the deliverer of pleasure. Great anal sex is achieved through a complete partnership with Celeste.\n\nTo improve long stroking, there's a second version that has me playing a more passive role. In it, Celeste fucks herself on my dick. Not only does this give her the sense of security that she is in control of the situation, but it also allows her, by subtly changing her position, to pass the head of my dick over her elusive g-spot while she is fucking herself. BTW, I'm not sure that this is scientifically accurate, but it seems to me that Celeste's g-spot moves slightly from time to time. I think of it as resembling a lily pad, firmly anchored on the exterior wall of her vagina, but capable of movement. Since one of the major reasons anal sex is so pleasurable is that I can press the head of my penis directly on Celeste's g-spot through the membrane separating her anal canal and vagina, it's well worth finding. Celeste can always do this with version two of bottoming out.\n\nGuys, remember when long-stroking that the shape of your penis is a very important element in choosing the position that maximizes your contact with your partner's g-spot. If your erection sticks straight out from your body and is flexible, any position will work, if it curves back toward your belly, choose one that has your partner facing you. If it curves away from your body, approach her from the rear. Also, if you have a long dick, be very careful about the depth of your penetration so as to avoid bruising her. (Celeste: I think we've said this before, but Jimmy has a perfectly sized dick for my butt. I can just go crazy on it, knowing that there's not going to be any pain, just total pleasure.) \n\nWhen you're talking about the level of pleasure that anal sex permits, it seems kind of silly to say this, but long stroking in both forms is only fourth on Celeste's pleasure meter.\n\nNumber three: docking. This may be difficult for other guys and again has a great deal to do with the shape of your dick. When I was born, my parents had me circumcised. I was also born with a penis whose head flairs out at the base, creating a very distinct rim, like the edge of a saucer. These two facts let me dock with Celeste. That is, I can insert only the head of my penis beyond her sphincters and dock my rim between the two, directly on the furrow. It's exactly like putting two pieces of a jigsaw puzzle together. Once we're docked, all I do is contract and relax the same muscle(s) you use when urinating while Celeste strokes herself with any intensity that she wants. This is Celeste's favorite orgasm when she wants a long, gentle approach. I think uncircumcised men would find this position difficult to achieve exactly, but even if you only come close it's worth the effort.\n\nNumber two: rimming, which we talked about in part three but deserves a bit more attention. Celeste does have a slight preference for what follows, mainly because she ejaculates some of the time with it and she thinks of that as the ultimate way to express her sexuality. However, if you put together both of our orgasms and pleasure (see Jim's orgasms) rimming is number one and nothing is even close. If you don't rim, know how, or are unwilling to, and your partner is in the same place, you're walking past the biggest candy shop in the world and not going in. Give it up, guys. Your ass is just as sensitive as your partner's, and it gives her just as much pleasure to make you scream and cum as it gives you to do the same to her. \n\nNumber one: and the winner is.... Celeste's favorite orgasm occurs when I insert two or three inches of my penis into her ass and find her g-spot together (or as close as we can come to it). I press my dick against it and then...do nothing! As I'm pressing against her g-spot, she strokes her clit but moves away when she feels herself approaching the point of inevitability (below) and then returns to apply pressure when the crisis has passed. Celeste will do this two or even three times and before she orgasms. To both of us, they The periods of constant pressure against Celeste's g-spot result in her ejaculating about half the time when she orgasms in this position. These are two or three very distinct little squirts that I can feel as they occur. \n\nIt seems to me that the point has been made, but Celeste wants it repeated for the sake of all women. Her three favorite orgasms result from my penetrating her ass with only the head of my penis (three), only my tongue, and that really isn't penetrating (two), and only two or three inches of my dick (one). All three are also all extremely gentle. Add in the way we usually long stroke, and all four techniques leave her completely within her comfort zone, feeling in control of what happens to her body. This feeling of safety is what allows her to relax and truly enjoy the experience and our bodies. (Celeste, who is standing over my shoulder to make sure I get this right: \"Amen.\") \n\nWhile I have a rather passive role in helping Celeste to her favorite orgasms, there are things that I do during intercourse that add greatly to her pleasure. Remember that we're almost always on our sides in a spoons position with me in the rear, a pun as well as the truth. Among the things I do are find a very small but sensitive spot on her scalp and slowly rub it. I also trace the line of her jaw and apply gentle pressure where the carotid artery passes over it, massage between her shoulder blades, rub the insides of her elbows, blow in her ear, and fuck her ear with my tongue as in rimming. She loves all of these, but what she likes most of all, the touch that makes her torso break out in goose bumps, is somewhat more complicated and requires some concentration on my part. Because it gives her so much pleasure, it's worth being a bit technical about it. Think of the basic spoons position as me behind Celeste with our bodies in two straight lines. From here, she bends her torso forward so that the part above her butt is lying at an angle away from me. I take my fingertips and, just barely touching her skin, trace her spin down to her hole as slowly as I can. When I get there, I gently press against the arc between where my penis is and her outer sphincter and start up her body again. When I repeat this several times, she gets totally wet.\n\nThe pleasure that Celeste gets from this come from the fact that great anal sex is not linear. To achieve it, you don't start to fuck and follow whatever you are doing in a straight line to an orgasm. We all have a point of inevitability (p.o.i.) and when it's crossed there is virtually nothing that can prevent an orgasm. (The dead giveaway to its approach is not your partner's body motions, but her breathing. When regular rhythmic breathing is replaced a sort of gasping for air, you're getting close to the p.o.i.) The key to a woman eventually having a great orgasm is to get as close to the p.o.i. as possible several times without crossing over. Nobody is going to put a stop watch on your activities, but if you want to experience the total beauty and intensity of anal sex, think in terms of twelve to fifteen minutes from the end of foreplay to orgasm and two, or better yet three approaches to near the p.o.i. before giving in to it.\n\nHowever you choose to ass fuck, your partner's orgasm is only part of the pleasure she receives. For Celeste the aftermath is almost as pleasurable as her climax itself. After she orgasms or when she wants to stop without having one, she begins to turn her body. This is the signal that she wants to reverse position and become the rear spoon. When we do, she mounts me, sticking her clit into one of my butt cheeks. At first, I can feel it very distinctly. It's like the head of a nail sticking into me. As she comes down from her natural high, her clit recedes into her body as sticky substance oozes out that seems to glue us together. This is a really sweet time for us as she ruffles my hair, telling me how happy she is. It can last ten or fifteen minutes and is a very important part of her pleasure.\n\nSpontaneous ass fucking is a great deal of fun. More on this later. However, when Celeste and I \"go to bed\" to have sex, we always try to give ourselves enough time to enjoy it completely. A slow pace results in maximum pleasure. Think of ass fucking as divided into four almost equal parts that take about an hour altogether: 1) Celeste and I prep our bodies; 2) foreplay\u2014for us almost always toe-sucking and rimming, but occasionally Celeste want to sit on me with my penis in her vagina and get wet; 3) the period from anal insertion to orgasm (or Celeste's decision that she exactly is where she want to be without orgasming); and 4) the period of afterglow. The third part is eliminated when Celeste decides to orgasm during rimming.\n\nTwo final points for guys about this section. If you dock (number three) or press directly against the g-spot (number one), don't be surprised if the force of your partner's orgasm expels you from her ass. This is particularly true with docking, but can also happen with number one. Your partner should not be embarrassed nor you frustrated by this. It's a compliment, saying that you've done things exactly right. There's also an ironic reversal to the \"pain\" situation that occurs when a woman orgasms, again if you're doing things correctly. Just before the contractions of Celeste's orgasm begin, her sphincters slam shut on my penis for a moment. It's an exaggeration to say that pain is the result; it's more like tenderness. But I can sure tell where my dick has been the next day.\n\nPart five (and patient readers will be glad to know that there are only six) discusses sequential orgasms and then my orgasms."
    ],
    "authorname": "celesteandjim",
    "tags": [
        "orgasm"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/a-guide-to-great-anal-sex-pt-04"
}