{
    "title": "Unicorn Ch. 01",
    "pages": [
        "**Author's Note: Everyone in this story is over 18.**\n\nMay \n\n\"So you're not going to be here for Memorial Day?\" her mother clucked around Lauren, exactly like the mother hen that she was. With six children, Mrs. McCullum was constantly clucking and surveying and scolding and pushing.\n\n\"No, I said I wasn't going to be here tonight but today's only Saturday.\"\n\nLauren was used to her mother being scatterbrained. As the oldest of the six kids, she had only had her mother's undivided attention for about a year, just long enough for Mrs. McCullum to squeeze out her younger brother Josh. \n\n\"Oh, okay honey. Are you going somewhere with Aiden?\"\n\nHaving so many other kids actually worked in Lauren's favor because she was conveniently forgotten about. Aiden was the boyfriend from almost a year ago, or at least that's what she'd called him when he met the McCullums. The boyfriend that had really only lasted about two months but Lauren had used him as her cover story for much longer. \"Not sure,\" she kissed her mother on the forehead and pirouetted out of reach before her mother could hug her. \"Gotta go, Mom. Later dude,\" she punched her next younger brother, Dave, in the bicep as she passed.\n\n\"Skank,\" he muttered to her before letting out a belch that reeked of pizza.\n\n\"Dickbreath,\" Lauren snarled back, as if they weren't really best buddies.\n\nHer mother started, \"Lauren, that's disgusting.\" The rest of the speech was lost on her but she'd memorized it long ago. It was part of the whole, \"you're the oldest and supposed to set an example\" speech that Lauren had been listening to since she was too young to remember. Lauren was already in the Toyota Corolla and almost at the end of the driveway and she was sure that her mother was probably only halfway through the spiel.\n\nIt was better to be under the radar. \n\nLauren put on her sunglasses and checked the rear view before shifting into drive. She wanted to look nice, but not like she was trying, especially not as she walked past her mother and brothers. She had taken the whole example thing to heart; which was why she was such a liar now.\n\nShe slammed her foot on the gas of the Corolla. As of yesterday, it was officially one year older than her. She had turned 19 and the car had turned twenty. Lauren had wanted to ask her parents for a new car for her birthday; not new, as in shiny, brand new from the dealership. Her father would have laughed right in her face if she had made that request. No, she meant \"McCullum new\", which meant maybe only ten years old. Maybe twelve.\n\nBut they had forgotten her birthday altogether though and Lauren was also used to that. It was around Memorial Day weekend and that meant that there were graduations and cookouts to plan. They had forgotten before and they would forget again. Besides, she didn't need anyone paying attention to her right now. If anyone had really asked her, like really quizzed her, Lauren wasn't sure that she'd be able to keep it to herself.\n\nShe was going to meet them. \n\nFinally, Lauren was going to meet the Prestons. Just from their text messages, she could tell that the Prestons were the exact opposite of the McCullums in every way that counted. They were maybe, just maybe, she had her fingers crossed, all of Lauren's dreams come true.\n\n***\n\nMrs. Preston was easy to pick out in the lobby of the spa. She looked exactly like the photos that she'd sent. In her pictures, her long, black hair was straight and loose and shone in the light. It was casual in a perfect way that suggested it had been professionally done. Today, Mrs. Preston's hair was slicked back into a neat ponytail. Even in her yoga pants and tunic, she looked expensive and impeccable and so did everyone else. Lauren immediately wished she had worn something better when she stepped inside Elizabeth Arden.\n\n\"Lauren,\" Mrs. Preston greeted her by the front desk with open arms. God, okay, it was a hug then. Even though Lauren really didn't hug, when she considered the rest of it, a hug was a good place to start. Mrs. Preston even smelled rich. Lauren had been poor her whole life and she knew that rich had a definite scent. \"I'm so glad you could come. I was a little worried that you had changed your mind.\" \n\n\"No, not at all,\" Lauren assured her. \"It just took me forever to find parking.\" Lauren was on Michigan Avenue and there was no explaining how far away from reality it was. The magnificent mile was a million miles away from the sticks and everything else she knew. Even though the spa was supposed to be relaxing, she felt like she was going to jump out of her skin. Lauren's hands had gotten sweatier and sweatier as she'd circled the block again and again.\n\n\"Here? You poor thing,\" Mrs. Preston took her by the arm. Her fingers were soft and sent a wave of something immediate through Lauren's body. \"It completely slipped my mind to tell you to valet.\"\n\nValet cost like a million dollars though and Lauren felt her stomach lurch. \"It's okay, it's a beautiful day to walk,\" she murmured.\n\n\"Nonsense,\" Mrs. Preston flicked her hand as if to say that money grew on trees. \"Besides, we're headed to Neiman Marcus after,\" Mrs. Preston flagged down a small woman in a black shirt. \"Give me your keys,\" she told Lauren in a tone that said there were no other options than to follow directions. There was Mrs. Preston's wedding ring, it flashed and shimmered on her ring finger. It looked heavy, like something royalty would wear.\n\nLauren did as she was told. \n\n\"She's going to valet too,\" the dark haired woman said with a smile. \"Put everything on my card.\"\n\nMoments later, another employee walked them down a dimly lit corridor. Everything smelled of vanilla. The sounds of trickling water and the occasional call of a bird seemed to follow them everywhere they went, as if they were in the jungle. The woman opened the door for them and led them inside a candlelit room. \"Please undress to your level of comfort and lie face down on the tables. Your massage therapists will be with you in a few minutes.\"\n\nShe closed the door behind her quietly and Lauren thought, well fuck.\n\nThey'd talked an awful lot about getting undressed. The text messages had been explicit almost right out of the gate. Now it was time to nut up or shut up, like Josh would say. The thing was, for all of their talk, Lauren had never been with a woman. Never even a little bit.\n\nMrs. Preston didn't seem to have her hang ups though. She had already reached her arms up overhead and pulled the tunic up. \"So is this your first couples massage?\" she asked from inside the shirt.\n\nLauren was too busy staring at Mrs. Preston's sheer, blue lace bra to answer. The dark haired woman had perfectly round breasts. They were high on her chest and heavy and even though the room was quite warm, Mrs. Preston's nipples were hard and aroused. She had two small, deep red stones. Even under the fabric, Lauren knew that they were the color of roses in bloom. \"Yes, it's my first,\" she murmured. First any kind of massage, first everything and she finally yanked her green tee shirt overhead plopped it on the floor.\n\nMrs. Preston openly stared at Lauren, she didn't seem to have a hang up about that either. The woman's dark eyes were covetous and glittered in the candlelight as she took in Lauren's bareness. Lauren rarely wore a bra but today she kind of wished she had. It would have given her a few more moments before totally naked happened.\n\nMrs. Preston just said, \"Lovely.\" Lauren felt her cheeks get hot and the accompanying, warm gush in the center of her panties. The dark haired woman reached behind her and unhooked her brassiere. Lauren watched as the underwire released her and her breasts sank down, only maybe an inch.\n\nMrs. Preston sure was tight and toned. She looked athletic and purposeful and lean and ready to spring. Lauren noticed that her abs were more defined than Lauren's. She remembered seeing her mother half undressed and the loose rolls around her waist. Mrs. McCullum was only a few years older than Mrs. Preston but of course, there were those six pregnancies in between. \"You're in really good shape,\" Lauren said. It was too loud and came blurting out. She was immediately embarrassed as busied herself with scooting out of her Keds. \n\nMrs. Preston smiled, \"Oh my god, you're kidding right? I mean I work out like a fiend but my metabolism?\" Mrs. Preston whistled and it was a cartoon noise; the piano that crashed down on the coyote's unsuspecting head. She already had the yoga pants halfway down her almost straight hips. \"Enjoy being young, that's all I can say.\"\n\nThat's exactly what she was going to do, Lauren thought, as she eyed Mrs. Preston almost hungrily. The dark haired woman only had on the matching panties to her bra. Lauren saw the dark triangle of her pubic hair through the fabric and she exhaled deeply. She had never seen a full bush, not in real life anyway. In fact, Lauren never even thought about pussies with hair. \n\nIt made her feel swollen and obvious in her panties and Lauren didn't know why. Her labia were heavy and dewy and sensitive. If Mrs. Preston touched her right now, Lauren wondered if she wouldn't drip down her thigh.\n\nLauren unbuttoned her jeans and tugged them over her hips while Mrs. Preston took down the panties. She showed Lauren her dark, gleaming ringlets of soft, secret hair. Now there was a new scent that overpowered the woman's subtle, rich perfume and Lauren knew it even if it was unfamiliar. \n\nMrs. Preston was wet. That was the scent that would greet Lauren if she parted Mrs. Preston's thighs and sealed their deal with a kiss.\n\nThere was a knock on the door and someone asked, \"Are you ladies ready?\"\n\n\"Hurry,\" Mrs. Preston told Lauren and giggled. She hopped up onto the massage table and nestled down under the sheet. \n\n\"Almost,\" Lauren called out. This was ridiculous, she thought. Lauren was the oldest of six kids. She was a person who had shared a bathroom with seven other people her whole life. She definitely wasn't modest. Mrs. Preston had certainly seen plenty of other women naked. Lauren skimmed off the jeans and tugged down her panties quickly. She lay face down just like Mrs. Preston and announced, \"Ready.\"\n\n\"So your parents still didn't remember your birthday?\" Mrs. Preston asked, her voice muffled by the massage table.\n\n\"No, not yet,\" Lauren told her as she closed her eyes.\n\n\"Mark and I are so happy that we get to take you somewhere special,\" Mrs. Preston said but it seemed far away as the hands and the heat entered Lauren's body. Yes, taking her to Alinea for dinner. Lauren didn't know anything about fancy restaurants but she had Googled it and it was supposed to be impossible to get into. Lauren had said regretfully that she didn't have anything to wear to a place like that and the Prestons had insisted that she should get a dress and shoes before dinner. Their treat. Mrs. Preston had suggested that first, they go for a massage to relax. Like shopping was stressful.\n\nIt was all the lead up to getting to know the Prestons much more intimately.\n\n***\n\nLauren wouldn't call it sleeping, but with the sounds of the waterfall in the background, she drifted off into her recurring daydream. The fruity, rich scent of the oil and the warmth that radiated from the table slipped over Lauren as if she'd been drugged. The hands; soft, feminine hands; strong, knowing hands kneaded her flesh and brought a shiver of delight to every inch of her young body.\n\nIt was the preparation. Lauren let the hands take her away to the fantasy. It was the bath and they were there to prepare her. They were there to open her and make her ripe and ready. The hands stirred the desire that she'd kept tucked away all this time. \n\nLauren had fallen in love with the idea of being a harem girl. Ever since she had first heard of Arabian Nights, she was captivated by the thought of being a concubine. She wanted nothing more than to hold a man under her spell and to belong to the sultan. In her fantasy, Lauren was a woman made for pleasure, kept hidden away in secret, her beauty guarded by eunuchs. She would only be brought to the king after she had been bathed and oiled and dressed and adorned by slaves. \n\nIt hadn't been that long ago that Lauren had begun to masturbate to that fantasy. It had become multifaceted and if she were to confess to anyone, she could touch herself for hours as she went over the most minute detail.\n\nLiving among women, she imagined that the concubines must learn their sexual arts in the caress of other women. Lauren luxuriated in the sensation of the woman who rubbed her hips at the moment. Lauren was somewhere between masturbation and sleep and as relaxed as she was, she was vividly aware of the masseuse's body. The woman's large, bell shaped breasts pushed into Lauren's arm as she kneaded her cheeks. The brush of the towel beneath Lauren's lower lips was just enough friction to make her push and feel her clitoris pulse. If only the masseuse was naked, like in her harem fantasy. The woman should be naked and wet herself. Her heavy breasts would drag back and forth over Lauren's slippery skin as she readied the concubine for a night of pleasure. If only the masseuse would dip her fingers and let them linger between Lauren's hot, swollen lips. \n\nA concubine should always be wet, or at least that's what Lauren said to herself under her covers. She knew that she could cum so easily right now. On her belly like this, it was all sensation. Just the touch of a woman. No guilt, nothing but rubbing herself, jutting her hips and vibrating on the lovely fingers. Once she had poured her sweet cream into the masseuse's palm, Lauren would melt into the table with her thighs open wide. She imagined feeling the woman rub all of her orgasm into her skin so she smelled of fruity, luscious sex.\n\n\"Is that pressure good?\" the woman asked, in a warm whisper that caressed Lauren's ear. Every hair on her neck stood at attention as she thought about the woman moving her hands to Lauren's inner thighs \n\n\"Yes,\" she whispered back and her body pushed her bottom up. It wasn't a thought, it was an instinct, an invitation. Please slave, caress me, worship me, pleasure my divinity.\n\nIt was the bath scenario that had started Lauren down this path, she was fairly certain. The thought of being naked and adored and teased by women was something that made Lauren quiver from head to toe. The thought that she'd be delivered, enslaved and on the cusp of uncontrollable delight, to a man who owned her never failed to bring her to an explosive orgasm. It was almost more than she could bear.\n\nThe fantasy had grown and evolved. This year when she'd gone to college, Lauren finally heard the word that made her heart race and her nipples sing. It was the only word that described her heart's desire \n\nThreesome.\n\nIt had evolved to this point. Almost two weeks ago, Lauren had responded to the Prestons discreet online ad. \"Seeking our unicorn for the summer. Successful middle aged, married, white couple seeking our third. Please be discreet, drug, disease and drama free.\"\n\nThe four D's. Lauren had answered and she and Mrs. Preston began a text conversation. Initially, Lauren had blushed and giggled over the dialogue but then, it got to the point where she had to touch herself. She couldn't help it, there was no stopping it. The Prestons wanted Lauren to spend the summer with them in Lake Geneva. They had a boat and a house on the lake. It even had a pool. They would shop and dine and swim. Mrs. Preston had assured her that Mr. Preston came in mostly on weekends. The dark haired woman assured her that it would be a \"fuck marathon\" when her husband was home. Otherwise, it would be \"just us girls.\" She had added that part with the wink emoji that seemed to suggest that they hardly needed a man around in order to have fun.\n\nIt was the harem fantasy all right. Living with a woman, a woman experienced in the art of seduction. Surely Mrs. Preston knew the language of a young girl's body. Her daydreams had become so lascivious. Lauren pictured herself bare and tangled with Mrs. Preston, naked flesh as far as the eye could see. \n\nThen came Mr. Preston. He was all dark eyes and demanding mouth and flexing, muscular arms that as he pulled Lauren to the center of the king sized mattress. \n\nShe was a unicorn. It was the first time she had heard the term and Lauren thought it was the most appropriate word for what her dream scenario was. Magic. \n\nThe masseuse tapped Lauren, prompting her to roll over. As she eased onto her back, she heard Mrs. Preston's noises of pleasure. It was a gasp and then a low whimper and Lauren imagined how wet she must be. Mrs. Preston, with her soft, furry pussy. It was so natural and erotic like that, covered in thick, lush hair. There was something mysterious about hiding it away like that and all she wanted was to see the dark haired woman. Lauren imagined the feel of it on her fingers as Mrs. Preston taught her how to touch a pussy that wasn't her own. \n\nLauren felt vulnerable like this, on display. On her back it was easy for the masseuse to see her tipped nipples and maybe even her hard, aching clit. She had never been so horny. All she wanted to do was slide her fingers down under the sheet and touch herself. Lauren wanted to grind and rub herself with her hand. She wanted to cum as she imagined herself, her concubine self, on her knees between Mrs. Preston's legs.\n\nLauren wanted to lick her pussy.\n\nLauren could only imagine it so far and she could barely do that. She didn't know anything really at all and even now, even here, she still didn't know. What if they made love with her tonight? \n\n\"Okay, Lauren, take your time getting dressed,\" the masseuse murmured. Her low voice barely shook Lauren from the hazy, almost dreamlike state of sexual fervor she was in. Just a bath slave, a bath slave touching my body. Just here to make me wet for the king. \"There's water on the table over there,\" the woman said.\n\nAnd with that, both of the masseuses were gone and Lauren was alone with Mrs. Preston, naked. \n\nMrs. Preston stretched languorously and she looked like a cat, all lean and sleek and elegant. \"Oh my god, that was amazing. Was yours good?\" she asked as she hopped off the massage table.\n\nMrs. Preston headed straight for her, naked Mrs. Preston who was still scented of sex. Her black pubic hair shone in the candlelight and she was the queen. Lauren would do anything the woman told her to do. Her posture was even regal. With her breasts proud and her shoulders back, wet and shining, she stopped and placed both hands on Lauren's thighs. \n\nTheir breasts touched. Mrs. Preston's small, beaded red nipples grazed Lauren's looser, wrinkled pink ones. Her breasts were a handful, maybe more than a handful and Lauren felt like such a girl with her two bee stings. \"Yes, it was good,\" Lauren whispered, throat parched, she was dry in her mouth because all of the liquid in her body had rushed to her gushing crevice. \n\n\"Good,\" Mrs. Preston placed both hands on Lauren's face. \"You remind me of a fairy princess,\" she said with hidden warmth in her voice. \"So young and lovely,\" Mrs. Preston grasped her, held her close and for a moment, Lauren wondered if the queen wouldn't sample Lauren's mouth right here. She didn't need permission and it would be nothing for her to put Lauren on her knees. Mrs. Preston could push Lauren's mouth into her sex and writhe, with her dripping muff on Lauren's lips. Lauren would lick her lips apart and wet her clitoris with her greedy tongue. She wouldn't have to hold Lauren's head to keep her there but she hoped Mrs. Preston would anyway.\n\nInstead, Mrs. Preston placed a light, friendly kiss on Lauren's mouth. It was quick and easy and could have just been a friendship kiss. It held no helpless longing, no obsession; not like Lauren's would.",
        "It made Lauren gush on the sheet anyway, as brief and as soft as it was. \n\n\"Let's go shopping,\" Mrs. Preston exclaimed. She turned and walked toward her clothes and left Lauren with a sopping ache between her legs. She felt warm and frothy and wondered if her clit wouldn't rub inside her panties all afternoon. \"What are you, a size four? Am I right?\"\n\nAs the dark haired woman dressed, Lauren studied the woman's hips and her crack. Her bottom was lean and muscled, not like the fleshy bouncing roundness that Lauren had. She had to hurry but her eyes were too busy studying, trying to catch a glimpse of Mrs. Preston's asshole.\n\nIt was too late, the blue panties were on and in place.\n\n\"Just about,\" Lauren said, trying to sound casual, like she wasn't dying inside.\n\n***\n\nMrs. Preston had an eye for clothes and Lauren was grateful. When they first arrived on the second floor of Neiman Marcus, they were bombarded with saleswomen. Mrs. Preston put out her hand with a flash of that hunk of diamond. It almost seemed to be a protective gesture. \"She's picking out some things for this evening. What we need is one of the private dressing rooms in the back and a bottle of Pinot Grigio.\"\n\nAn older, heavyset woman stared at Lauren over the top of her glasses. She seemed to disapprove of everything that Lauren was in that glance. Too poor, too disheveled, too young to be drinking wine. \"Right away ma'am,\" was what she said out loud and skulked away.\n\nJust like a queen, in moments they had everything that Mrs. Preston commanded. They were escorted into a dressing room. This wasn't a place to stand under fluorescent lights and squeeze a glimpse at a skinny mirror. So far, those were the only kinds of dressing rooms that Lauren had ever been in. This room was larger than Lauren's bedroom and had a chandelier in the center. There were two pink chaise lounges, one each on opposite sides of the space. There were mirrors everywhere you turned and probably for the first time ever in her life, Lauren had a full 360 degree look at herself.\n\n\"This hair,\" Mrs. Preston said as she came up behind Lauren. The dark haired woman ran her fingers through Lauren's hair. Lauren had kept it in a sloppy bun for the massage but had pulled out the rubber band in the car. The massage oil and the humidity had worked its way into her curls and they hung heavy, almost in ringlets, almost down to her ass. Lauren's hair was naturally dirty blonde up top and almost white at the tips. \"You're like a wood nymph with that hair,\" Mrs. Preston murmured. \"Twirl around?\" she asked and Lauren wondered if the woman could tell that she did that all the time, just when no one was looking.\n\nShe twirled and her hair circled her hips and cascaded back to the tops of her cheeks when she stopped. Lauren giggled and blushed, \"Should I put it up for dinner?\" She felt a deep need to please Mrs. Preston, her queen. In fact, her panties were slick and almost soaked through to her jeans at the thought that Mrs. Preston found her beautiful.\n\nThe woman gave her a knowing smile and her dark eyes gleamed. \"Personally, I don't think you should ever wear your hair any other way. Just loose and wild and free,\" her voice was a husky, bedroom voice and Lauren wondered if Mrs. Preston wasn't talking about something other than her hair.\n\nThe woman brought the wine and poured two glasses and handed the first to Mrs. Preston. She tasted and hummed and licked the shining droplet from her lower lip. Mrs. Preston smiled and said, \"That's just what we need.\" As the woman poured Lauren a glass with her disapproving stare, Mrs. Preston, the queen, added, \"Lauren is going to look around but bring out some new dresses as well. We'll need a rack of size four's and another of two's please.\"\n\n\"Right away,\" the woman said with a nod. Like a slave should, Lauren couldn't help but think. The concubine fantasy had never been fleshed out like this and every detail, no matter how minute, seemed to send a flutter between her legs.\n\nIf Mrs. Preston commanded Lauren, here in the dressing room, here as she lay back on one of the chaise lounges, Lauren couldn't stop herself. Here with her blue panties down around one ankle, Lauren would melt and look up at the woman in sheer gratitude.  \n\n\"What were you thinking for a dress?\" Mrs. Preston asked Lauren's reflection. She opened the door and stood back, waiting. The dark haired woman's smile was benevolent and her gesture was, \"I've brought you the world.\"\n\nLauren walked out and took a quick sip of wine as she checked the front and back of a dress. Too frilly. It was almost like a prom dress and tonight she wanted to be grown up. Another sip of wine and another display; the dress was awfully short. Lauren was sure that she'd wonder if her ass was covered all night. She wanted to look sexy but not slutty, even if she felt both. \n\nLauren continued to walk and look at the dresses. She didn't like the taste of Pinot Grigio, she decided by the time her glass was half empty but she had continued sipping because it seemed to calm her nerves.\n\nThis one had possibilities, Lauren thought and grabbed the handle of the hanger. There weren't even price tags on anything. She knew that it was the kind of place that expected that you didn't need to know those things. She brought the dress back for Mrs. Preston to inspect.\n\n\"Oh, it's a Jovani,\" she nodded with approval. \"Good eye,\" her eyebrows went up, \"simple and cinched at the waist. Simple is always best \"\n\n\"What should I do?\" Lauren whispered. She hoped that Mrs. Preston would command her like the concubine she was. Or wanted to be.\n\n\"Try it on,\" Mrs. Preston laughed wickedly and took her glass. \"It's just us girls.\"\n\nJust us girls, Lauren nodded and felt something electric prickle down her spine. Mrs. Preston took the glass and set it on the small table next to one chaise. She took a seat and lay the dress carefully over the back of the couch and Lauren would have to approach her naked in order to retrieve it.\n\nShe pulled her tee shirt off again and unbuttoned her jeans. Mrs. Preston wasn't even pretending to politely look away. The dark haired woman's eyes were riveted on Lauren's breasts. Once her jeans were off, Lauren scooted them away with her toes. \n\n\"You should take off your underwear too,\" Mrs. Preston whispered. \"You don't want panty lines in this.\"\n\nThe queen wanted her naked. Lauren could hardly breathe and part of her wanted to grab herself just to make sure this was real. This was happening. She slid her panties to the floor and boldly approached Mrs. Preston in nothing but her birthday suit.\n\nThe dark haired woman sighed, \"Look at you, look at you. Exquisite fairy princess,\" she murmured. Mrs. Preston placed her fingertips delicately on Lauren's bare hips \"And you're trembling.\"\n\nShe was. Her whole body felt like a new, separate current ran beneath her skin. \n\n\"Such sweet, young breasts,\" Mrs. Preston's breath tantalized Lauren's skin as she looked up and let her fingers skim from hip to the tips of Lauren's nipples.\n\nLauren made a noise that sounded like she was choking as she watched Mrs. Preston circled both of her buds. \"Responsive and so sensitive,\" she continued with her assessment and Lauren vibrated. \"Turn around for me,\" Mrs. Preston didn't ask, she gave directions. Lauren followed them perfectly.\n\n\"This round, beautiful bottom,\" Mrs. Preston sighed and let her fingers sink into the underneath side of Lauren's cheeks. \"So perfect and juicy,\" Mrs. Preston wiggled her cheeks and emitted a purr. \"I'm afraid that my husband will try to monopolize this bottom.\" The woman let out a long, slow sigh as if she were imagining all of the possibilities and added, \"given the opportunity anyway.\"\n\nLauren stood still, not wanting to breathe, not wanting to break the spell of whatever this was.\n\n\"Turn back for me,\" Mrs. Preston told her and Lauren felt it. The telltale dribble of her juices on her inner thigh as she did what the queen commanded.\n\n\"Bare,\" was all she said as Mrs. Preston ran her finger along Lauren's crevice. She barely touched Lauren but it was enough, more than enough as she outlined Lauren's labia. God, if she fingered Lauren's aching pussy right here in the dressing room, she'd cum so hard. Lauren prepared to press her hands over her mouth to hold back the squeal. \"Bare and sweet. My god, you look like a little cherub between your legs,\" Mrs. Preston passed her finger slowly over Lauren's slit. \"Now tell me something, Lauren. How many women have you made love with?\"\n\nWell, fuck, it was time to spill the beans. \"None. Mrs. Preston,\" Lauren whispered and couldn't stop her moan that came from somewhere deep down, something untouched and raw and needy. \n\n\"I didn't think so,\" Mrs. Preston increased the tempo. Lauren's lips were hot and greedy and far too open to keep any secrets. \"My little virgin is dripping,\" Mrs. Preston murmured and Lauren tilted her head back and looked up at the light and hoped that she wouldn't fall.\n\nMrs. Preston wasn't a virgin and her knowing fingertip found Lauren's clitoris. It was hard as a bead and throbbed for the queen's touch. Lauren's thighs trembled as she looked Mrs. Preston in the eye and gave herself over entirely.\n\nThere was a knock on the door and the disapproving older woman croaked, \"I'm leaving the two dress racks here for you.\"\n\nAs quickly as it had begun, Mrs. Preston stopped fondling Lauren. She slid her hand back and contemplated her fingers. She bowed her head and inhaled Lauren's scent and smiled hungrily at Lauren. She licked her fingers and closed her eyes as if she had a secret fantasy that Lauren was the center of and she had to taste this in her hidden world.\n\nAfter she held her fingers in her mouth for a moment, she released them and came back to the world with a wry smile. \"Just as well, I guess. They'd definitely hear us if I put you on this couch.\"\n\nThey would and Lauren's cheeks flamed with the thoughts of it all coming true. \n\n\"Just one thing,\" Mrs. Preston's dark eyes flashed with something mischievous. \n\n\"Yes, Mrs. Preston?\" Lauren froze in place and pressed her thighs together. She wondered what it would feel like to cum on the plush chaise fabric.\n\n\"Two things,\" she murmured and slid her fingers down the front of her yoga pants. Lauren watched and thought her fingers must be inside her panties. She must be touching that wild, black field of dripping hair. She brought her fingers out and up to Lauren's face. Lauren opened her lips but paused, it seemed like something she needed permission for. \"Taste me,\" Mrs. Preston breathed the words and Lauren hummed as her tongue wrapped around her two fingers and sucked her inside.\n\nShe tasted sweet and earthy and musky and savory. She was creamy and her juice lingered on Lauren's tongue. The scent of Mrs. Preston was heat and sex and sticky panties and need. Lauren felt the urge to fall to her knees. She needed to suck. She needed to learn the scent of a woman and the curve of her wet, slippery places and the taste of her longing.\n\n\"Second, please call me Sharon,\" she grinned, \"although I have to admit that you in a catholic schoolgirl uniform, licking me while you call me Mrs. Preston is kinky as fuck.\"\n\nThey both giggled.\n\n\"Seriously though, if we're going to be lovers,\" Mrs. Preston's heated whisper suggested all of the longing in that sentence, \"call me Sharon.\"\n\nThe dress was lace over flesh colored fabric. It seemed to hint of nakedness but she was fully clothed. The lace was a dusty blue, like the blue along the horizon just before sunset. It had three quarter sleeves and a V neckline in front and in back. Once Lauren had the dress on Mrs. Preston nodded, \"That's it. You hit it out of the park. It's a classic.\"\n\nLauren blushed and twirled and basked in the glory of her praise. \n\nMrs. Preston clasped Lauren in her arms and looked at her in the mirror with her face on Lauren's shoulder. \"You look like a young Bridgette Bardot, except Bridgette would be jealous of your ass.\" She shook her head. \"What you need is a really fabulous pair of shoes. What are you, a nine?\"\n\nIt was like Mrs. Preston had known her all along.\n\n***\n\nMr. Preston was equally easy to pick out. He sat at the bar, in the corner seat so that he could see the street. He was dark haired and dark complected. He looked like he could be a gypsy or a sheik. Lauren immediately responded to that thought in her ladylike, lacy dress with a very unladylike thought. He had streaks of gray in his hair and under his eyes were dark circles. He was handsome but careworn. His handshake was gentle and his hands were warm and large and engulfed hers completely. \"Lauren, my goodness it's nice to meet you,\" the smile creased his face in the usual places and it seemed genuine.\n\n\"It's nice to meet you too,\" she nodded and bit her bottom lip and then reminded herself to stop.\n\nDinner was an otherworldly experience. There was always at least one staff person who hovered over the table. Lauren didn't understand much of the conversation about ingredients and how things were served. She preferred to fade in and out of her concubine fantasy. It was easy to imagine that this was a feast laden table for the king and after which, her body was the entertainment.\n\n\"Lauren, what's your favorite restaurant so far?\" Mr. Preston wanted to know. He had a habit of leaning in whenever he addressed her. He would always place his colossal, beefy hand over hers. Lauren had been seated between the Prestons and she wondered if it weren't symbolic. Mr. Preston peered into her eyes as he waited for her to answer and Lauren felt him undressing her at the table, right in front of his wife.\n\nWho rules her when there are two of them? Lauren wondered and simmered in her lace dress.\n\n\"I don't know,\" Lauren shrugged. She popped an exquisite bite of something that she couldn't pronounce into her mouth.\n\n\"Don't worry,\" Mrs. Preston touched Lauren's thigh under the table. The queen had also bought a dress at Neiman Marcus. She had found it on the rack of size two's and it was almost exactly the color of the Red Zinfandel that they drank now. Her black hair was loose and ran over her bare, pale shoulders. Mrs. Preston's scent this evening was warmer and closer to the surface but Lauren was certain that she could still smell the woman's pussy underneath. \"Mark comes from money so he grew up eating like this,\" the dark haired woman gestured to the space around them. \"But I'm from the wrong side of the tracks so I understand.\"\n\nMr. Preston leaned in and touched his wife's chin with an indulgent smile. \"Darling, Northbrook is hardly the wrong side of the tracks.\"\n\n\"You know what I mean though, Mark. She's new. She's a blank page.\"\n\nMr. Preston had a flush of warmth on his face and it wasn't the wine or the food. It was his wife's words and the implication. Lauren felt the electricity crackle between them. Yes, a blank page, no Michelin star restaurants, no designer dresses. She was wearing her first pair of Monolos and this was her very first threesome. Or hopefully anyway. Lauren buzzed between her legs and suddenly they all seemed to be able to feel it.\n\nMr. Preston closed his fingers around Lauren's hand and raised her fingers to his lips. \"Well then, let's have a glorious time sharing all of the firsts together, shall we?\" His eyebrows went up and at that moment, Lauren knew that was the expression that he'd have on his face right before he fucked her. Right before he impaled her on his cock and she didn't have to see it to know that he was larger than either of the two dicks that she'd seen in real life.\n\n\"Yes, let's,\" Mrs. Preston's hand lingered on her thigh once again and the three of them were close enough to kiss. That's what they would do, wasn't it? Lauren felt the warm puddle at the center of the new Agent Provocateur panties Mrs. Preston had purchased for her. They would both kiss her and she'd feel Mrs. Preston's tongue on her upper lip and then Mr. Preston's teeth nibbling her lower lip. They'd kiss each other and then Mr. Preston would watch as the two women in his bed ravished each other. At least he'd watch in the beginning.\n\nShe wasn't sure how much more she could eat.\n\nOnce they were in the backseat of the car, Lauren felt almost dizzy. It wasn't the wine or even the cognac afterward, although she definitely could have done without the liquor. It was the pheromones between them. The longing was the most intense, instant high she'd ever felt. Mrs. Preston put her left arm around Lauren and pressed her breasts into Lauren's arm as she murmured, \"You're absolutely perfect in this dress. Isn't she, Mark? She's stunning.\"\n\nMr. Preston rested his heavy right forearm on Lauren's lap and from the weight of him, Lauren was fairly certain that she could imagine him naked. Mr. Preston would be stocky. He would be solid under soft, he would be wide and heavy and muscular under a comforting layer of softness around his middle. A man's man, she thought as his proximity sent a new wave of longing through her hips. \"Stunning,\" he agreed and folded her fingers through his. \"So tell me something, Lauren,\" he said with a sigh as he looked her over. \"Have you ever smoked pot?\"\n\nThat made her giggle. At her age, pot was easy to get. Without adults around to buy her alcohol, drinking was almost impossible. Lauren had never enjoyed the sensation of being drunk anyway. Being high was blissful though. \"Yes, I have,\" she admitted.\n\n\"Don't encourage him,\" Mrs. Preston said as she tried to be serious and failed completely as she chuckled. \"If Mark wasn't such a Type A personality, we'd probably live in the sticks and he'd be stoned and just paint all day.\"\n\n\"And you'd be going nuts because there'd be nothing to do,\" he laughed fiendishly. \"Lauren, hopefully you'll get to know my wife soon enough and you'll realize that the only time she ever really relaxes is when,\" the dark haired man leaned in and whispered, \"she's just cum.\"\n\nThe word hung there in the air between them and they all seemed to waft in the fantasy. Was it even just her fantasy anymore or was it conjoined? Lauren wondered if they could feel it, the edges of it creeping up on them. The place where she gave herself over, their slave, their plaything, their lover. Their concubine.\n\n\"Well this is perfect timing,\" Mrs. Preston told him with a pat of her hand. There was the brush of her fingers adorned with the king's jewels, along the hand that Mr. Preston touched Lauren with. Two intense and intensely different sensations collided and rolled down Lauren's body. \n\nThey had come to a stop in front of the black and glass tower that glittered in the lights of Navy Pier. Lake Point Tower was the only skyscraper east of Lake Shore Drive and that was all Lauren knew about it until she'd asked her father the other day.\n\nHis reply, \"Big money. But beautiful if you like that kind of stuff.\" Mr. McCullum had shrugged. All of her life, Lauren had the distinct impression that he really did like the finer things in life and he was prematurely aged and dried up from the bitterness of not having them.\n\nThe Prestons sailed past the concierge with a hearty, \"Evening Kenny.\" They commanded the space and they swept Lauren along with them.\n\n\"Mr. and Mrs. Preston,\" Kenny nodded and gave them a toothy smile.\n\nThe Prestons lived on the twenty second floor and Lauren's ears popped in the elevator as it rocketed up to the correct level. Mr. Preston pressed the key code into the lock and once it clicked open, he waved them inside. \"Voila, home sweet home.\"\n\nHome sweet home had floor to ceiling windows that looked out at Lake Michigan. Lauren couldn't help but gasp. The living room was lined with gray suede sectionals that were covered in a multitude of different colored, velvet pillows. The low lights created shadows on the walls and cast the sofas in a warm glow. Well, fuck, even the living room seemed like something out of her harem girl fantasy.",
        "\"It's a really good view,\" Mrs. Preston stated and it seemed like perhaps she was seeing it through Lauren's eyes now. This would be one of their many firsts.\n\n\"Can I offer you a nightcap, Lauren?\" Mr. Preston, the king, wondered. He looked larger and broader here in this room. In this light and perhaps because she'd never taken the time to really look yet, Lauren really saw him. Six two, maybe six three and when he took the gray suit jacket off, she thought her assessment was right. His shoulders were broad and strong and although she knew from Mrs. Preston that he was in \"finance\", whatever that meant, he was built in a way that looked like he could live off the land. He was a lumberjack of a man.\n\n\"Do you have any Coke?\" she wondered. Lauren's mouth was dry and she wanted it to be wet and sweet, just in case there was kissing.\n\n\"Let me get you one,\" Mrs. Preston chirped, her stilettos clicked across the dark, wood floors. She was tall as well, willowy and graceful and lean. She had an alertness about her, Lauren thought that her husband was right. She seemed poised to jump into action and she seemed to have rhythm in everything she did. Perhaps she had been a dancer before she became the queen. She had muscular, long legs and the sinewy place on the tops of both her thighs made shadows in her wine colored dress. \"Actually that sounds good. I could use a Coke too. Mark?\" she asked her husband with a smile.\n\n\"No, I'll stick with cognac.\" The king had slipped his blue tie from his collar and unbuttoned the top two buttons. Lauren watched as he eased out of his loafers and headed to the bar cart in the dark corner.\n\n\"Ugh, cognac.\" Mrs. Preston tsked and her heels clicked away to the kitchen.\n\nLauren sat in the center of sofa and placed her hands on the suede. She basked in the feel of it, it was something akin to soft skin; it was plush and yet firm underneath. Maybe everything felt like skin because she was in the middle of a rolling boil and had been ever since she'd laid eyes on Mrs. Preston this afternoon. It had only been hours but it seemed far longer, like her whole life had become this slow glide of pornographic images and luxurious settings.\n\nHer king and queen returned to the living room and they had previously, they took seats on the opposite sides of her. Mrs. Preston set two glasses with ice cubes on marble coasters and poured Coke into each. Mr. Preston set the snifter with the amber liquid on another coaster and let out a long sigh. \"Are we comfortable?\" He asked and cleared his throat.\n\nSomething was about to begin.\n\n\"Happy birthday, Lauren,\" Mrs. Preston began and raised her glass.\n\nThey all responded cheers and clinked their glasses together.\n\n\"My wife tells me that you've never been with another woman,\" Mr. Preston began as he settled back deeper into the sofa. His meaty thighs were parted and Lauren picked up a faint trace of his scent. Mr. Preston smelled of cedar and maybe cigar smoke and perhaps some cologne. Then there was something else too, a hint of musk and something secret. Lauren immediately thought that would be the scent that would rise from his balls once his underwear came off. \n\nWell fuck.\n\n\"I haven't,\" she told him.\n\n\"Do I dare ask?\" he seemed amused and amazed, \"You've had sex with men, right?\"\n\n\"Yes,\" Lauren said quietly with blazing, hot cheeks. If Mr. Preston placed his hand on her thighs right now, he'd feel them twitch. His low voice was sensual and his scent was erotic and she could picture herself straddling him on the sofa. Lauren's concubine fantasy had come to life and she was slippery wet in the very sophisticated panties. She wanted to be stripped and ravished here in front of the windows. \"Two.\" She added.\n\n\"Oh my goodness,\" he replied and he and Mrs. Preston touched hands in back of her. \"And yet, here you are,\" he added. It seemed like he was waiting for Lauren's story. She didn't know how to tell it.\n\n\"I think we should explain a few things to you, Lauren.\" Mrs. Preston held hands with her husband and touched Lauren's knee with the other hand. \"I mean, usually, when we do this kind of thing, frankly, I expect another woman to tell us what she has to offer. Because, come on,\" the woman meant all of this. All of this opulence and sexual daydreams included. \"But you, you're way beyond our expectations. Like one in a million.\"\n\n\"A real unicorn,\" Mr. Preston added.\n\n\"You're breathtaking, you're sweet, you're articulate,\" Mrs. Preston started. \"You're clearly a decent person with a future ahead of her.\"\n\n\"Discreet and lovely and we can take you out,\" Mr. Preston continued. \"And you're not from our circle of acquaintances.\"\n\n\"You are absolutely Mark's type, like his walking wet dream,\" Mrs. Preston added, \"if that's not too crass.\"\n\nMr. Preston interjected in a husky voice that Lauren imagined he'd use when he unzipped her dress. \"She's right of course. Sharon knows me so well.\"\n\n\"And you know I'm crazy about you,\" Mrs. Preston murmured in the heated tone that she'd used when touching Lauren's clitoris in the dressing room. Just like it had the first time, Lauren's body melted as if the woman's fingers were inside and opening her and probing her damp heat.\n\n\"She is,\" Mr. Preston added. He smelled of cognac and Lauren wanted to feel his mouth on hers.\n\n\"And even in the best of scenarios, finding a third that clicks, I mean really clicks is hard,\" Mrs. Preston said with a sigh.\n\n\"So hard,\" her husband agreed.\n\n\"So what can we tell you about us?\" Mrs. Preston asked. \"Damn, I seem nervous. I guess I am.\"\n\n\"We want to impress you.\" Mr. Preston said before he finished his drink.\n\n\"Yeah, heck, we feel lucky that you came tonight.\"\n\n\"We are lucky.\" Mr. Preston echoed.\n\n\"Maybe we'll keep it simple,\" Mrs. Preston leaned into Lauren. The woman's nipples burned on Lauren's back, the heat entered Lauren's body and slipped down her spine. She was coming undone here, between the two of them. \"What's your idea about this?\" Mrs. Preston asked, \"What's your fantasy?\" She said fantasy in a lower voice and Lauren felt the liquid from between her legs spill. She had soaked her panties through and might even leave a telltale mark on their pristine suede sofa.\n\nMr. Preston came close, his thigh touched Lauren's and his breath caressed the lacy neckline of the dress. \"Tell us.\" Lauren let her eyes wander down and realized that she had outlined the shape and girth of his cock through his pants.\n\nHe was big.\n\n\"Okay,\" Lauren sounded frightened but that's because she was. She'd never told a soul, never dreamed of it. Like Mrs. Preston said, she was new. \"Don't laugh,\" she murmured.\n\n\"We would never,\" Mrs. Preston whispered and brought her hand to Lauren's waist and began the slow ascent to her nipple.\n\n\"I have this fantasy about being a concubine,\" Lauren heard the tremor in her voice. The place where Mrs. Preston touched her was warm and melted. Lauren's nipple hummed when the woman caressed her lightly through the dress. The bra that went with the panties was only a wire and two straps. The material was entirely sheer and cut in a way that teased her tender buds all night. Both of them sung with want and Lauren sighed into Mrs. Preston's hand. \"About pleasing the king and queen,\" she faltered. Lauren closed her eyes in embarrassment and longing as Mr. Preston kissed her forehead. \"About being only for your pleasure, only for you both, to serve you both with my body.\" That was it, that was everything and Lauren held her breath, waiting for their response.\n\n\"Fuck,\" Mr. Preston mumbled.\n\n\"Oh my god,\" Mrs. Preston whispered. Her breath was hot and it clung to the back of Lauren's neck.\n\nMr. Preston closed the gap between them and asked in a quiet, gentle voice, \"May I kiss you?\"\n\n\"Yes please,\" Lauren surrendered entirely. Mr. Preston was heavy and his mouth overpowered her. His lips were full and his tongue was warm, wet satin on her upper lip and then her lower lip. He coaxed her tongue from its hiding spot and hummed deeply into her mouth as Lauren kissed him back. As lost as Lauren was in his embrace, all the while, Mrs. Preston tantalized her body as her knowing fingers ran back and forth from nipple to nipple.\n\n\"Our very own harem girl,\" Mrs. Preston whispered in Lauren's ear as she joined the kiss. Mr. Preston moved his head and invited his wife's tongue as well. Their hungry mouths both feasted on Lauren. Their slippery lips and sighs melted Lauren as she lay back in their embrace and they filled her mouth with love.\n\nMr. Preston leaned back and watched as Lauren and his wife continued their kiss one on one. Mrs. Preston held Lauren's face with both hands and like this, with the dark haired woman's lithe body pressed up against Lauren, she could feel the molten heat that rose from Mrs. Preston's center. Maybe there would be two wet spots on the couch. \"My beauties,\" Mr. Preston stared at them with his own unabashed longing. Lauren opened her eyes and her hand reached out to touch his chest while she kissed his wife. His heart galloped there. It thudded fast and full and Lauren ached to run her fingers down between his legs. He was a magnificent sultan.\n\nMrs. Preston sighed into Lauren's mouth and pulled her lips back as she pressed their foreheads together. \"Oh Lauren,\" she whispered, \"I could absolutely devour you.\"\n\n\"My poor love,\" Mr. Preston touched his wife's arm and then Lauren's breast. His fingers eased to the very tip of her bud. He made a low growl and then moved his hand back to Mrs. Preston's arm, \"What a tease. We're used to disappointment. Not this.\"\n\n\"Fuck the party,\" his wife muttered and groaned as she moved her voracious mouth down Lauren's throat. \n\n\"But you're only saying that now, Sharon. You don't mean it.\" Mr. Preston was amused and his dark eyes shone with laughter and secrets. \"Besides, it will just be the most magnificent foreplay.\"\n\n\"We have family coming in tomorrow morning,\" Mrs. Preston said glumly, \"For the holiday weekend.\" She couldn't have looked more disappointed.\n\n\"What about Tuesday?\" Mr. Preston asked. \"The office will be light. I can make it back here early afternoon and we can do this properly.\"\n\n\"I guess,\" Mrs. Preston's lips were straight and surly. \"I mean we were just hoping you didn't blow us off tonight. I had no hopes that we'd be like this.\" \n\nLike a pot ready to boil over. A spark, a flame, a fucking firecracker.\n\nLauren and Mrs. Preston both giggled and wrapped their arms about each other's waist. \"Would that work for you, Lauren?\" Mr. Preston officially extended the invitation, \"Tuesday afternoon? We'll send the car for you if you like.\"\n\n\"Yes, absolutely,\" she murmured into the soft place where Mrs. Preston's neck ended and her shoulder began. \"But I'd rather drive, if you don't mind.\" Better to lie to her nosy mother, there was no Aiden backstory that included a limousine.\n\n\"Of course,\" Mr. Preston told her, \"Just want to take care of everything for my girls.\" There it was, Lauren thought, she felt his protective air. It wasn't just his size or his calm manner. He was solicitous and caring, he was gallant and regal, a king from head to toe. \n\n\"Then Tuesday,\" Mrs. Preston kissed Lauren's cheek softly and ran her fingers through her long, blonde hair.\n\n\"I think we should smoke on it,\" Mr. Preston said with a wink and told Lauren and his wife, \"Wait right there,\" as he rose to his feet.\n\nHe returned with an ornate box. It looked like an antique and it had a brass hook and eye that closed the lid. The perfume was rich and vibrant, the scent of marijuana was almost overpowering and he hadn't even opened the box. \"I've got something new, well a couple new things.\"\n\n\"Oh Lauren, he's such a weed snob,\" Mrs. Preston laughed and Lauren could feel her chest and belly move when she did. The dark haired woman clung tightly to Lauren, she was pressed up against her back.\n\n\"Hey, you know me,\" Mr. Preston shrugged his wide, bulky shoulders. \"I tend to be a nerd, Lauren, in case you hadn't picked that up.\"\n\n\"Me too,\" she nodded. Honor student, math league, chess club, was there really a question about her not having been with a woman? She would probably still be a total virgin if she hadn't kind of insisted that Aiden fuck her.\n\nHe procured one small envelope and shook it at Lauren and Mrs. Preston, \"this is called Gusher, it's got a real wallop of THC. Then there's this,\" he showed Lauren a Ziploc bag, \"this is Strawberry Dragon and it's a mellow smoke and a productive high.\"\n\nMrs. Preston shook with laughter.\n\n\"I recommend mixing the two,\" he added.\n\nLauren grinned and scooted a little further back. She let her right hand dangle on Mrs. Preston's knee. Lauren had no idea about gourmet food or expensive wine but smoking weed was something Lauren filed under hobby and the reason she usually had an after school job or two. \"Let's do it,\" she said with gusto.\n\n\"That's our girl,\" Mr. Preston murmured as he opened one envelope and began crumbling some of the weed between his fingers. While Mr. Preston prepared the marijuana, Mrs. Preston played with Lauren's hair and Lauren wondered if she wasn't just as high on desire as she'd ever been on drugs. \n\nMr. Preston had packed the bowl. It was a beautiful, sea green glass pipe and he held it to Lauren's lips. That glittering heat of longing in his huge, dark eyes made Lauren ache. The pipe seemed sexual now and she imagined looking up at him as he placed the head of his hard cock in her mouth like this, right on the tip of her tongue. Her king, her master, her lover, Lauren would lick him gratefully as she drank down his essence.\n\nHe lit the pipe and Lauren inhaled deeply. She stared into the man's eyes as she breathed in deeply. She was lost in the haze of his body and his scent and the smoke that streamed from her nostrils now. Her pussy had never been this wet and it was so easy to imagine Mr. Preston feeding her every inch of his throbbing manhood.\n\n\"She's a pro,\" Mrs. Preston sounded impressed as Lauren finally blew the buildup of smoke out.\n\n\"She is,\" Mr. Preston leaned in and inhaled the smoke directly from her mouth. He swallowed it down and then blew the blue-tinged breath into his wife's mouth as his hands lingered in her beautiful, black hair. \n\nThey sat and smoked and kissed until the pipe had burned out and only ash and embers remained. Once the flame died out, Lauren eased back on the sofa. Now it seemed that their entangled arms and legs were every bit as much of the furniture as where they sat. She could feel the tremor that had been almost frantic between them mellow and wind down. Still there, there with every beat of their hearts but now it was a slow rhythm instead of the desperate staccato.\n\nTuesday.\n\nIt seemed like forever but it was really only three days. Two and a half if you figured that it was almost one o'clock in the morning now. And then she would finally have them. \n\n***\n\nLauren handed the Corolla keys over like royalty when she arrived promptly at 2:30 Tuesday afternoon. Mrs. Preston said to valet and Lauren followed her instructions word for word. Lauren jangled the keys and told the young man, \"I'll be spending the night here.\" There it was again, that almost painful gulp of the craving that had been her constant companion since the first text message. Forever ago. \"I'm visiting the Prestons and Mrs. Preston said put it in front.\"\n\nThe young man in the navy blue hat nodded, \"She told me too.\" He took Lauren's keys and scribbled something in illegible handwriting on a piece of paper that said Pioneer Parking. \"Keep that and call the number when you want to leave.\"\n\nUmm, that would be never, Lauren thought as she hurried through the lobby toward the row of gleaming elevator doors. As she waited for the ding, she went over the checklist in her mind one last time. Backpack, check. Lied to mom about spending a couple days with Heather, check. She had cheap lingerie that she wasn't sure about, she wouldn't say check to that. There was also a sundress and shorts in the pack too, just in case they went somewhere, check.\n\nOnce inside the elevator, she pressed the button and waited for the doors to close. Lauren reached down and stroked the back of each calf to make sure that she hadn't missed any spots while shaving. Okay, check. One last sniff of the armpits to make sure that the Corolla's shitty air conditioning hadn't left her damp or stinky. No, pretty good, Lauren affirmed with a deep inhale. Not as elegant and opulent as Mrs. Preston but she'd pass muster.\n\nWhen she arrived at the Preston's front door, it was wide open. The blender was on and so was the stereo and Lauren hesitated at the threshold. \"Mrs. Preston,\" she called out as she knocked on the open door.\n\nThe blender turned off and she heard the scuff of bare feet crossing the wood floor. \"I'm so happy to see you!\" Mrs. Preston welcomed her with open arms and a kiss on the forehead. \"I've been so hyper that I'm making margaritas just to take the edge off.\" \n\nLauren could relate. She followed Mrs. Preston into the kitchen. It was all cool, white marble countertops and a refrigerator that was almost as big as the Corolla. It was open space with a view straight to the living room where they had gotten high and kissed just three days before. \"I know, I couldn't sleep last night.\"\n\n\"Too nervous?\" Mrs. Preston asked. She was wearing a clingy, strapless dress which was almost worse than naked. Her long, black hair floated free and fell in thick waves halfway down her back today. The dress was black and offset her perfect, gleaming, almost golden skin. Lauren's eyes were on the crease between her breasts, with a lover's knowledge, having seen them bare once before. Lauren could identify the ridges of Mrs. Preston's hard nipples in the front of her dress. No bra, Lauren knew and she almost bet no panties either.\n\n\"Too excited,\" she confessed and placed the backpack on a barstool. She wasn't as sexy as Mrs. Preston, in her tee shirt and flowered skirt but it would be almost impossible to be as sexy as Mrs. Preston.\n\n\"You want a drink?\" Mrs. Preston asked. \n\nLauren nodded, \"Yes please.\" She watched the line of muscle that outlined Mrs. Preston's lean shoulders as she poured some of the slightly green icy concoction into a glass.\n\n\"So we haven't had sex, you know, in anticipation. Well, except for after you left Saturday,\" Mrs. Preston spoke quickly, at a rapid fire pace really and Lauren knew what her husband had meant about her not being able to relax. \"I mean, we couldn't help that. It was very fast and it was all about you.\"\n\nLauren simmered in her pink, cotton panties at the thought of that. Her king and her queen, discussing Lauren's intimate details as they made love. \"What did you talk about?\" Lauren asked just above a whisper, shocked that she even had the nerve to ask.\n\nMrs. Preston had a gleam in her eye as she took a drink. \"Well, your fantasy, now our fantasy,\" Mrs. Preston's dark eyes grew large. \"Being our little harem girl,\" she let go of the glass and her fingers were chilly as she took Lauren's hand. \"Our love slave, teaching you everything, making love to a sweet, inexperienced girl.\" Lauren could tell by the tone of her voice that Mrs. Preston was wet down her thighs just like Lauren was.\n\n\"Me too,\" she told the dark haired woman, her queen. \"It's all I can think about.\"\n\nMrs. Preston kissed Lauren's hand. \"Mark should be up in ten. Oh and you know how much of a geek he is with the weed?\" Mrs. Preston asked with an eye roll.\n\n\"Yes.\" Lauren had driven home so slowly after she left them. She was too happy and she'd also wanted to savor the high. The lights had shimmered on Lake Michigan all the way home and she had thought over and over again that Mr. Preston had concocted exactly the right formula.\n\n\"Expect him to take the harem thing just as far. That's what he does.\" Mrs. Preston sounded proud of him though.",
        "\"That's why you love me though,\" his familiar, deep authoritative voice came from the door. Here they were, all together, with nowhere to go and all night to get there. \"I'm surprised you girls didn't start without me,\" Mark chuckled as he entered the kitchen. His hands were full of bags, obviously he had been shopping. He looked elegant as well, as if they'd both thought of the perfect clothing for seduction. He wore a white dress shirt but it clung to his body, thicker and softly creased in his elbows and on the back. The collar was open and the sleeves were folded on his forearms. He wore linen pants and seemed like he was ready for a tropical vacation. Gone were the circles under his eyes, today he glowed and looked beautifully tanned. He was every bit the king of her naked body and when Mr. Preston leaned in for a soft kiss, Lauren sighed loud enough for both of them to hear.\n\n\"We would have started if you got here after Lauren finished her drink,\" Mrs. Preston stated.\n\n\"That's why I was prompt,\" the king told his wife. \"Didn't want my girls to forget about me.\"\n\nMrs. Preston gave him a drink from her glass and Lauren watched them intently. They kept their eyes on each other, consumed with the other. \"We couldn't forget about you, my love,\" Mrs. Preston purred.\n\nOnce he swallowed, he looked back and forth between the two of them. Mr. Preston had a rapturous look of excitement, he was almost radiant. \"Give me five minutes, ladies, so that I can make some preparations and then please bring your beverages to the bedroom.\"\n\nHe bowed with a flourish and his wife chuckled as he walked away. \"He's such a ham, but he's got a really good heart,\" Mrs. Preston said with a hum.\n\nAnd an amazing ass, Lauren thought as she watched him walk away. Like the rest of his body, it was big, it was solid and sturdy. She was sure that it was fleshy over muscle and by the shape of the back of the linen pants, it was beautiful.\n\nIt hadn't been five minutes when Mr. Preston announced, \"I'm ready for you.\"\n\nMrs. Preston took Lauren's hand and knit her fingers through carefully. They padded slowly to the bedroom. The floor changed from marble to wood to carpet and the rug was thick and soft and their feet didn't make a sound here. Lauren wondered if Mrs. Preston was as nervously excited as she was. After all, the Prestons had done this before, a bunch of times. Something about the way that the dark haired woman looked at Lauren, so serious, made it seem like it was new for her as well.\n\n\"Ta da,\" Mr. Preston gestured to the bed with a grin. \n\nLauren had never been in the bedroom so she had nothing to compare it to but it was even more amazing than the living room. The wall on the north side was also floor to ceiling windows. They had a magnificent view of the Gold Coast and Evanston and Lauren thought that on a clear day, she might even be able to see all the way to the McCullum's hovel.\n\nThe bed was large, had to be king sized and the headboard was purple fabric with a sheen. There were black sheets on the bed and only sheets. They had stripped it of any other bedding, this was now a place for sex instead of sleep. There were candles everywhere and even though it was the middle of the afternoon, it was overcast and the candles gave it a feeling of dusk. There were cushions on the floor at the foot of the bed along with a bench and she imagined any one of them there, watching, as the other two melted into an embrace.\n\nThe black lacquer dresser to the left had a variety of sex toys laid out and bottles of different lubricants. Everything gleamed in the glow of the candlelight. There was a scent here, a heavy, sweet smell and it mixed with the scent of longing and brought a tingle to Lauren's skin. \"Do you like it?\" Mrs. Preston asked as she placed her margarita glass on the dresser.\n\nIt was a love nest. It was the most perfect hidden away place for lovemaking that Lauren had ever seen and she wasn't sure if she could even speak. \"I do,\" she murmured and turned to stare at her queen and worship her with her eyes.\n\n\"Oh good,\" Mrs. Preston clasped Lauren in her arms and Lauren could feel the woman's pulse as she pressed into Lauren's body. \"Good,\" she said it again as she swept Lauren's cascade of thick, blonde curls over her shoulders. \"I want you to like us,\" Mrs. Preston clasped Lauren's face and they touched noses. \"God, I just want you so much.\"\n\nLauren wrapped her arms around Mrs. Preston's waist. Like this, face to face, she could feel the heat from between both of their legs rise and their hips sealed together. \"I want you,\" Lauren kissed Mrs. Preston with her lips closed. It was just a taste, a moment of relief, \"So much. Both of you,\" Lauren couldn't stop kissing and she felt the heat dissolving through her saturated panties. \"Both of you so much.\"\n\nMrs. Preston couldn't have looked more pleased. Her eyes made Lauren's body respond with a wave, almost as if every inch gasped all at once as the dark haired woman possessed her with her mouth. This was the kiss of abandon. The kiss where a queen took a fledgling concubine and filled her body with a prickly heat and an endless yearning that she could feel in her heart.\n\nMrs. Preston's tongue explored Lauren's mouth in a way that had never happened before. The woman would know her by taste alone after this. Her tongue was hot and surprisingly long and Lauren's was fat and wet and anxious . Lauren felt some spit trickle down her chin and spill on the tee shirt. She was literally drooling for Mrs. Preston.\n\n\"Does this mean that I finally get to undress you, sweetheart?\" Mrs. Preston asked with her hands still wrapped in Lauren's hair.\n\nLauren nodded and it was half shiver. She might be shaking all over or she might just be on the verge of an orgasm just like this, she thought. She put her hands up and Mrs. Preston pulled her tee shirt up, over her head.\n\nOut of the corner of her eye, Lauren saw Mr. Preston as he sat slowly on the bench. His eyes were riveted on Lauren and his wife. He sat with his sturdy thighs parted and she noticed that he was too hard to sit any other way. His thick cock lay against his hip, a bulge in his pleated vacation pants. A big bulge that Lauren couldn't fit in one hand.\n\nWell fuck, she thought and tossed her hair down her bare back as she looked up at the ceiling. She hadn't worn a bra today either and Mrs. Preston purred as she let her trembling fingers fondle Lauren's nakedness. \"These little buds,\" she said with a catch in her voice that seemed to betray that Mrs. Preston might be dripping for Lauren as well. \"Perfect little breasts,\" she sighed and cupped them, one in each hand. She turned Lauren and whispered intimately, \"Show Mark, darling.\"\n\nMrs. Preston held Lauren at the waist as Lauren displayed herself for the sultan. \"What a beautiful girl,\" he said in a parched voice, full of delicious desire. He brought his eyes up to meet Lauren's but couldn't help himself. They came right back to her nipples and his heavy gaze matched his hand that fondled his cock openly as he stared. Mr. Preston pushed his pelvis and made a growl. It was this gruff, almost foreboding noise that came from his throat as he touched himself. \"My little concubine,\" he whispered and Lauren felt the pulse there at her core.\n\nGod, would she cum like this? Could she cum without even touching herself? \n\nMrs. Preston kissed Lauren's neck all the way to her shoulder and reached around Lauren's body. Her left hand grazed Lauren's nipples and her right hand passed over her crotch, up and down. Lauren's skirt would be wet too in a minute. \"Can I take down your skirt, honey?\" Mrs. Preston asked, her hot breath on Lauren's bare back made her sigh.\n\nShe nodded. Yes, take it off. Rip it off, all of it. She never wanted to wear clothes again. \n\nLauren shuddered as she felt the material slide down her hips and then to her legs. It skimmed her body and fell to the floor. Mrs. Preston took in her breath sharply. \"Pink panties,\" her voice quivered, as if those two words were everything there was to say.\n\nMrs. Preston was behind her. The woman's hair tickled Lauren's back as her deft fingers, today bare of all jewelry, reached inside Lauren's panties. \"My god,\" the woman's whole body shook, as well as her hand as she opened Lauren's lips up wide. \"You're soaking wet, Lauren,\" she whispered, shocked and it seemed like Lauren should tell.\n\n\"I've been wet for you since the beginning,\" Lauren said in a small voice. She sounded ashamed of herself and maybe she was. At least, just a little because good girls didn't masturbate to things like this, let alone do them.\n\n\"I can't wait anymore,\" Mrs. Preston was burning up through her slippery sleeve of a dress. It felt like she had a fever as she pressed her crotch against Lauren's voluptuous backside. The stir, there it was, the warm press of Mrs. Preston's bush. No panties, just naked and long and glowing and wet under the fabric.\n\nBefore Lauren could reach behind her and boldly touch her queen right there, Mrs. Preston pushed down Lauren's panties and they dropped to the floor to join her skirt.\n\nMr. Preston let out a long, loud moan. \n\nMrs. Preston whispered, \"I told him you have the most exquisite, little angel pussy I've ever seen.\" She kissed Lauren's shoulder and then her back and then there was a flurry of kisses on her body. \"And you're so wet. God, I couldn't have hoped you'd be so ready.\"\n\nMr. Preston crooked his finger to her, to both of them. They were to come to him, come to the man with the enormous bulge. When Lauren was within arm's reach, he pulled her to his lap. His eyes were ravenous and his mouth was greedy and his tongue delved into Lauren's mouth. Mr. Preston licked her on her tongue the way she knew that he would lick her clitoris and it was her clit that responded. It was a hot, wet whelp of sensation and sound and passion. Lauren knew that she'd just wet the place on his pants where his bulge was closest to the surface.\n\nMrs. Preston wrapped her body behind and pressed her husband and their concubine tighter together. Mr. Preston moaned into Lauren's mouth and his persistent tongue dipped deeper and deeper inside. Lauren's body melted and shivered, every inch radiated with the desires of two.\n\n\"Wait,\" Mr. Preston pulled away suddenly. The man panted hard as if he'd just run uphill. \"Wait, I can't be this far gone already. Goddamn, my whole body is shaking. I've got to slow down. Sharon?\"\n\nHis wife moaned into Lauren's hair and a dribble of her saliva dripped down Lauren's back. \"I know,\" she said in a shaky, dry voice. \"But I don't want to wait anymore,\" and Mrs. Preston went back to kissing Lauren desperately. \n\n\"My love, we've waited this long,\" the king reminded Mrs. Preston and there was the shadow of years of intimacies there in his eyes that shone for the woman he loved. Lauren could feel his wife surrender.\n\n\"Lauren, you stand there,\" he was the king and he was used to issuing commands, maybe lots of them. In the bedroom and anywhere else he saw fit. Lauren scrambled to her feet as quickly as she could. Her limbs were heavy and uncoordinated and all the blood in her body seemed to course through her crotch. Mr. Preston nodded and pointed to the place. \"There, that's perfect. Sharon,\" he patted the place on the bench for her. \"You're going to sit here with me once you've taken your wet dress off.\"\n\nMrs. Preston; cool, elegant Mrs. Preston wiggled the top down to her waist and stepped out of the tube dress. In an effort to get naked as quickly as possible and push the clothes away, she almost fell over following Mr. Preston's directions. \n\nHer large breasts bubbled up and her nipples were ridges, all stiff and pointed and needed to be sucked. Mrs. Preston's buds were a mesmerizing, deep red. Her slender hips were in the shadows cast by her breasts and then there was the black, glistening valley of her fur. Lauren was drawn to it, she couldn't take her eyes from Mrs. Preston's hairy pussy. The scent came from her there. It was the heady, heavy scent of sex and liquid and heat. Lauren imagined that if she pressed her face between Mrs. Preston's legs that it would burn.\n\n\"My love,\" Mr. Preston murmured and ran his hands intimately over her, lovingly skimming his wife's curves. His fingers knew her well and he too, must be fascinated by her full bush. He let his hand stay there and basked in his wife's want. \"You really can't wait any longer, can you darling?\"\n\n\"No,\" she said, her body was for her husband but her eyes were for Lauren.\n\n\"Would you masturbate for us, Lauren?\" he asked and the words sent shivers down her spine. All limp and loose and languid like this, Lauren whimpered and nodded. She was lost in how swollen her damp, lower lips were. She'd never masturbated in front of anyone before.\n\n\"And we'll masturbate and watch you.\" Mr. Preston rose to his feet and quickly began to unbutton his shirt. \"Otherwise, I'm afraid we'll be in a panic and I don't want to spoil this by hurrying.\" His voice was calm and soothing. It was the reassuring voice of reason and Lauren wanted to hear it in her ear as he guided her with her fingers on her body.\n\nHis bare skin gleamed. His olive skin was beautiful and smooth and scented. Mr. Preston was thick, he had bulk to him and every button that he opened revealed something new and wondrous. His chest was powerful and his arms were strong. His neck was muscular and his belly was rounded. His chest hair began in the center and ran in a thick, black trail to the button on his pants. \n\nHis muscular shoulders flexed as he took his shirt off. His wife reached out with a deeply contented sigh and her fingers groped his pounding erection through the front of his pants. She seemed to touch him like it was the very first time, leisurely and almost reverently. \"Baby, thank you,\" she said and blew him a kiss. \"You always know what I want.\"\n\nMr. Preston smiled and took his pants down. Once the linen pants were gone, all Lauren could see was Mr. Preston's naked body. His legs were powerful as well but Lauren's eyes weren't studying his legs.\n\nIt was his cock. It beckoned to Lauren, like it knew her. Like it was greeting her and it throbbed and slapped Mr. Preston's pelvis and reached to get at Lauren. He sat with his wife and nodded to Lauren, with his left arm around Mrs. Preston's shoulders. \"Can you hand me that lube, darling girl? The bottle with the blue label?\" \n\nShe did as he asked. Lauren's knees knocked as she thought that in a moment, she was about to touch herself under his watchful eye \n\nHe squirted some lube into his wife's left hand and then his right. \"I do know what you want, my love. I know you want to inhale her but this way we can see how Lauren likes to be touched.\"\n\n\"Lube, my concubine?\" he asked with an amused smile.\n\n\"Sure,\" Lauren whispered and put her hand out. She'd never used lube before and her cream had already dripped down her inner thigh; a rivulet of her lust was already at her knee. \n\nBut when in Rome. The lube was sticky in her hand and she waited. \"Have you ever masturbated for someone, Lauren?\" his deep, rolling voice held quiet authority and made her knees buckle.\n\nShe could only shake her head no.\n\n\"God, she's such a girl, Mark,\" Mrs. Preston sighed and propped one bent knee up. She gave Lauren a full look at her fur trimmed nether regions. \"So sweet,\" Mrs. Preston stroked her fur the full length from her cunt to her clit and grunted in satisfaction.\n\nThey were going to stare at her nakedness and touch themselves. Lauren felt lightheaded as the harem girl inside her unfurled.\n\n\"Sweet,\" Mr. Preston agreed, staring at Lauren. \"Virginal. Please Lauren, I want to see you. I've never watched a woman masturbate for the first time like this.\" His voice dipped down, low and gravelly. It tugged at her body.\n\nLauren closed her eyes. She had to pretend that she was home alone, burrowed under the covers because that was the only place she had ever done this. She bit her bottom lip instinctively to keep her little noises to herself as she sent her fingers through, a pass over her damp folds.\n\nA steamy drip of her craving on her hand and the lube made a slurping sound, like a mouth that insisted on sucking. She passed her hand back again and then slowly to the front. The lube squished between her index and middle fingers as she plucked her clitoris. It was a simmering, hard ache. Lauren's clitoris seemed to bulge as big as Mr. Preston's cock and that's when she remembered. She wasn't alone, they were watching. She opened her eyes and let out a low moan.\n\nLauren let her eyes feast on the Prestons nakedness. There was Mrs. Preston with her legs parted and her eyes heavy with longing. The woman's mouth was open, just enough that Lauren could see a glimpse of her tongue, just enough. It would have been perverted if a stranger on the street looked at her like that, like she was begging for a taste. The wet slapping sounds that came from Mrs. Preston's pussy was delicious. It made Lauren groan as she found her own body keeping the queen's time.\n\nMr. Preston's hand moved and the lube squished and sloshed in his hand. His thighs were beautiful and Lauren traced the line of muscles there with her eyes. She watched them flex and loosen as he thrust. His gaze was lost in her. She knew that in his mind's eye, the sultan was fucking Lauren. Even in her innocence, she could tell that he had sprang on top of her and mounted her like she was an animal in heat. An animal that couldn't say no even if she wanted to.\n\nLauren shook as her fingers twitched and slipped forward and back. The wet slaps and squeezes and groans and sighs mingled together as they all stroked and studied each other. Lauren had ever been this naked, this exposed, this utterly vulnerable. It was soaking her hand to think of it. It was unbearable and impossible to hold back as her hips pushed into the bliss.\n\nShe belonged to them. With this orgasm, she them wed. Lauren stiffened and felt the quickening in her bottom. \"Oh my god,\" she arched her back and vibrated her two fingers right on her clit as the pleasure pulsed and swelled and took hold.\n\n\"Fuck,\" Mrs. Preston cried out and shuddered. What accompanied the queen's orgasm was a train of cries, whimpers and little whispered, \"Fuck,\" again and again.\n\nLauren dropped to her knees. She was no longer able to stand. She had no balance and no strength and she had melted into nothing but her fingers and clitoris. It was a harsh sound, something like choking, as her body slapped and pushed and she felt the warm gush spurt into her hand. Much more came with the second gush. As the climax continued, with every twitch of her hips more and more liquid shot from her body as the ecstasy reverberated through every damp inch.\n\n\"Lauren,\" Mr. Preston barely whispered her name but erupted with a lion's roar as his cum tore from his throbbing cock. It shot in an arch and a little splattered Lauren's shaking thigh. Then a little more on her foot and then more of his cream on his own leg and Mrs. Preston's thighs and all over the bench.\n\nThey were nothing but breath now, and even that had seemed to settle into a compatible rhythm of three. Lauren rolled into a ball and stared at her lovers curled in an embrace on the bench. \"Mark,\" Mrs. Preston groaned in a husky voice. \"Lauren,\" she kissed her husband and then gestured for Lauren to come to them. \n\nShe crawled across the carpet and sank her face between her king and queen. Lauren's voice was hoarse when she said, \"That was unbelievable.\"\n\nMr. Preston kissed her forehead and then her cheek. \"Our concubine, so perfect,\" he murmured, adding in a delighted voice, \"And she squirts.\"\n\nMrs. Preston kissed Lauren's lips and her eyes were dark pools of desire as she said, \"I know. So fucking delicious. What Lauren lacks in experience, she more than makes up for in innocent, untouched beauty.\"",
        "\"My god,\" Mr. Preston kissed his wife's neck and touched the tip of Lauren's nipples. His fingers sent a new tingle through her skin. Mr. Preston had never touched her nipples and they hardened instantly for him. \"Beauty is right.\"\n\nMrs. Preston took Lauren's hand and let her eyes linger on Lauren's eyes. \"Come to bed with us, please,\" Mrs. Preston whispered and placed a soft kiss on her hand. \"Come here,\" her voice and her wild, black hair and her shiny skin was all a seduction and Lauren wanted to heed its call.\n\nShe followed Mrs. Preston across the black sheets and fell down into her arms. Lauren circled her waist and held Mrs. Preston close and pressed her face into her perfumed skin. Lauren could make a pillow of Mrs. Preston's breasts, soft but firm and fleshy all at the same time. Lauren kissed her right at the top of her cleavage and sighed contentedly.\n\n\"Come here, you gorgeous girl,\" Mrs. Preston chuckled and held Lauren tightly. \"I've wanted to lick every inch of your body and now that we're calm,\" she winked at her husband, \"I have no intention of stopping.\"\n\n\"I wouldn't dream of stopping my two girls,\" Mr. Preston was at the foot of the bed and stalked them with a hungry animal's gaze. \"You know that I love watching you,\" he touched his wife's calf lovingly. \n\nMrs. Preston whispered hotly, \"He does. He loves to watch me with another woman.\" She kissed Lauren's forehead and then her closed eyelids, \"But he's just as crazy about you as I am.\"\n\nLauren met Mrs. Preston's mouth, hungry for her kisses, Lauren ached for the queen's mouth. She had never been aroused so quickly after she'd cum. Her forearm was still shaky and weak but she needed her fix of Mrs. Preston's skin. \"I'm crazy about both of you,\" Lauren whispered. She finally admitted it, there seemed to be no reason to say anything else. Both of them were perfect. Apart they were singly amazing and attractive. It would be easy to want either of them on their own but together, they were everything.\n\nMrs. Preston kissed her. It was a slow, deep kiss that made Lauren's legs open wide and invite Mrs. Preston between them. Lauren's nipples sizzled as Mrs. Preston's tongue dipped in and out and lapped her lips and even her teeth. \"Jesus,\" Mrs. Preston said in a faraway voice as one kiss ended and another had yet to begin. \"Your hungry little mouth,\" Mrs. Preston hovered above Lauren. \"So you've been called to pleasure your king and queen, little concubine.\" Pleasure raced down Lauren's legs. She was almost to the precipice already, an instantaneous, aching pleasure that made her belly heavy and warm. \"What your queen wants now is to taste your delicious honey,\" Mrs. Preston took Lauren's right hand, her fingers sticky with cum. \"Your sweet juices that you've been saving for me, my beauty.\"\n\nMrs. Preston placed her two fingers that Lauren had used to bring herself to her climax in her mouth. The dark haired woman hummed with pleasure as she sucked Lauren's fingers clean.\n\nWell, fuck, Lauren thought as her inner thighs quivered. Mrs. Preston must know, she must know what a teenage girl craved. The dark haired woman must know just how to lick and suck and torment and delight a girl with the promises of ecstasy. That was just the beginning.\n\nMrs. Preston kissed Lauren from her lips to her clitoris. Hot, closed mouth, reverent kisses. Tender, loving kisses on Lauren's throat and then her collar bones. She kissed Lauren's arms and wound around from her armpit to the crook of her elbow to her wrist. Every kiss Mrs. Preston laid anywhere else on Lauren's body, she felt the twinge of need grow between her legs. It was all foreplay and once Mrs. Preston kissed Lauren's nipples with tongue and teeth, Lauren was wet and shivered with need.\n\n\"Please,\" Lauren begged. Her hips thrust up, her body was more articulate than her brain.\n\n\"Please?\" Mrs. Preston asked with a gleam in her eye as she let her tongue drip on the aching tip of Lauren's bud.\n\n\"Please,\" Lauren gasped and dug her fingers into the sheets just to hang on. She needed something to cling to. The head rush of want seemed like it could sweep her away entirely.\n\nMrs. Preston kissed down her belly and around Lauren's hips. The dark haired woman seemed intent on making Lauren wait and buck her hips and simmer with need. Lauren watched as Mrs. Preston stared at her splayed pussy lips but wouldn't even touch them. Lauren cried out for mercy as Mrs. Preston began to kiss her at the top of her thigh.\n\n\"My god, Sharon,\" Mr. Preston called from the bench. His deep voice stirred the longing Lauren had deep inside for his pulsing manhood, \"Such a tease.\"\n\n\"I know,\" Mrs. Preston murmured, \"But I think once I taste her, I won't ever be able to stop.\" She dallied with her fingers. She let her index finger outline Lauren's juicy lips in a slow, tantalizing touch. Lauren's body shuddered and palpitated. She was sure that she'd lose all control and rub herself frantically for them once more if Mrs. Preston didn't show some mercy with her wet tongue. Her dripping tongue. \n\nMrs. Preston took Lauren's hand and they laced fingers together. She showed Lauren her tongue and dripped saliva down into Lauren's pink crevice. \"My little concubine,\" Mrs. Preston whispered and bowed her head. Her kiss to Lauren's clit was a slow, wet one. \n\n\"Yes,\" Lauren cried out in relief as her clitoris fluttered on Mrs. Preston's tongue. It kissed her back. It fell instantly and completely in love with Mrs. Preston's tongue and her sucking lips that circled her. Mrs. Preston made little sounds as she wrapped her lips firmly around Lauren's bud and drank her inside. \n\nLauren looked down and saw her eyes. Mrs. Preston's melted chocolate eyes. Her big, moony eyes were wet pools of hot, wanton need. They drew her in, just as steadily as the mouth, the sweet, steady suckle between her legs. Lauren gave one long, heated glance to Mr. Preston at the foot of the bed. She could tell by the movement of his arm that he'd begun to stroke himself again. \n\nShe felt the hitch, the throb, the pressure had built up inside and she became it. Once more, Lauren felt that she'd shatter into a million little bits of liquid ecstasy. Mrs. Preston, her queen, the beautiful dark haired woman from the only fantasy she'd ever had, kept her on the ragged edge of a mind blowing orgasm.\n\nShe was about to fall in deep.\n\nLauren screamed god and yes and Mrs. Preston again and again as the waves racked her body. Lauren's hips shook and her thighs were melded to Mrs. Preston's body. She couldn't stop shaking and she couldn't stop coming. Mrs. Preston gulped and sucked and kept her eyes on Lauren all the while as she swallowed her all the way down to her heartbeat.\n\nWhen she peaked, Lauren shivered and drew her legs back. \"It's too much, oh god. It's too much, oh please.\" \n\nMrs. Preston released her and held onto her hips instead. The woman's mouth glistened with Lauren's fluids. Her chin and neck were wet with Lauren's desire and her eyes, her crazy eyes shone with something else. Something deeper.\n\nMrs. Preston reached up to touch Lauren's cheek. \"Thank you, oh god, thank you,\" there was a tremor in her voice. \"Thank you for letting me be your first time with a woman.\" Mrs. Preston swept a piece of Lauren's hair back. \"You taste unbelievably good,\" she added with a contented smile.\n\nLauren watched as Mrs. Preston bent back and kissed Mr. Preston full on the mouth. She fed him the taste of Lauren's pussy. He was hungry for her and sucked Lauren's orgasm off his wife's lips. He thrust his tongue deep in her mouth as he stroked himself. \n\n\"That was fucking amazing,\" he said to both of them. The king beamed as he looked at his wife and then at Lauren and back to his wife.\n\n\"Isn't she the sweetest tasting little girl?\" Mrs. Preston asked.\n\n\"Our little girl,\" he whispered and wrapped his other hand around Lauren's ankle possessively. \"Our little love slave.\"\n\nHis voice and his words, Lauren knew even if she were empty, that she could orgasm again and again to Mr. Preston's voice. \"I like that she called you Mrs. Preston while she squirted in your mouth,\" he said with a wicked gleam in his eye. \"Seems right, very kinky.\"\n\n\"Please call me Sharon,\" Mrs. Preston requested as she lay down next to Lauren. \"Especially when I'm licking your pussy.\"\n\nLauren felt the spark and it was fresh and it clamored along her spine. \"What do you want me to call you when I lick your pussy, Mrs. Preston?\" \n\nLauren slithered down Mrs. Preston's glistening body. The woman was damp everywhere. Some of it was sweat, some of it was probably the first orgasm. Every inch of the queen's body had a soft glow about it, a sex scented slickness that made Lauren ravenous. She knew there were a thousand other places to kiss, maybe a million, but her mouth was too greedy. Lauren needed to drink from the well of a woman's desire, from this woman, her lover, her queen.\n\nShe wanted to learn how to give Mrs. Preston head. \"Tell me what to do, please,\" Lauren whispered as she lay between Mrs. Preston's thighs. \n\n\"Oh god,\" Mrs. Preston sighed and reached down to touch Lauren's hair. She looked so grateful and happy and shining. Lauren would do anything to make her look like that always. \n\n\"Please Mrs. Preston,\" Lauren called her that on purpose now, \"Hold my head down.\" The thought of it made Lauren shiver. \"Take my mouth and teach me how to suck you off.\"\n\n\"Jesus,\" Mr. Preston murmured in a low voice behind her. The sound of his hand on his dick began once more, a steady, sticky sound of flesh on flesh.\n\n\"Kiss my slit, just very softly along the edge of my lips,\" Mrs. Preston was going to teach her. There was a stern edge to her voice now. Lauren wondered when her gentle hands would stop caressing her and hold the back of her head down into her thick, black muff.\n\nLauren wound the tip of her nose through Mrs. Preston's sex scented hairs and found her slit. The source of the heat and liquid was easy to find. Lauren inhaled deeply right there, where she parted and dripped and sweltered. Lauren kissed her tenderly. She pressed row of tender, closed mouth kisses along Mrs. Preston's swollen, solid labia. \n\nHer lover let out a little moan as Lauren reached the fleshiness over her clitoris. Lauren kissed her again and again right there. She pressed her lips harder and harder as she felt Mrs. Preston's juicy clit grow and harden. It was long and her fat pussy lips had already swollen and parted and shown Lauren what they had been hiding. Mrs. Preston's clitoris was huge. It was crimson, really deeply red, even darker red than her nipples. Her clit bulged and thumped and it showed itself proudly to Lauren. It gleamed with slickness, all wet and needy.\n\n\"Oh, Mrs. Preston,\" Lauren sighed as the clitoris pulsed again. \"Yes, please push my head down on you. Make me suck you until you fill my mouth with your cream.\" Lauren's voice shook as she made her request and it seemed right, being a sex slave, a concubine after all. It was all of her masturbation fantasies come true.\n\n\"Yes, my girl,\" Mrs. Preston gasped and pushed Lauren down and held her there with some strength. \"Suck my clit. Make love to it. Worship it with your mouth. Bathe me with your sweet, adoring tongue.\"\n\nLauren gasped and lapped and sucked. She wondered if even like this, even with her head held in place and pushed down on Mrs. Preston, if Lauren wasn't still receiving the most pleasure. It was heaven to swill and swallow the dark haired woman's juices. Her body responded accordingly. The liquid heat dribbled from Lauren's sopping pussy to the sheet as she sucked her queen diligently and hungrily. \n\nShe sucked and licked and swallowed. Lauren felt as if she were drowning in sensation. The taste of Mrs. Preston. The hot, little bursts of cream and milky musk. The incredible softness of her glistening fur. The feel of her skin, her silky thighs and her luscious hips. Underneath there was the feel of the damp sheets and the heavy smell of all the cum that clung to everything. \n\nThen was also the prickle of a reminder behind her. Lauren felt his hand on her calf, he teased her skin and opened her legs wide. The heavy hand of Mr. Preston, her king, her master. He spread her legs open a little wider and jacked off as he stared at her ass crack and her sopping pussy.\n\nLauren lapped a little faster now. She slurped and swallowed and sucked her queen and deep down inside, she was hungry for more. Hungry for more of Mrs. Preston's mouth and all the while, ached for Mr. Preston to impale her on the beastly dick that waited for her. Yes, she may be innocent and young but she rutted on the sheet, she couldn't stop it. Lauren rubbed herself for him, just for him to watch as she drank the golden, love elixir from his delicious wife.\n\nFuck me please, Lauren ached and thought, yes to both. Fuck my mouth and my pussy and anything else you want.\n\nMrs. Preston tensed and it was a sob that tore from her depths. Her taut belly trembled and her grip on Lauren's head loosened as her legs shook. \"God, god yes, Lauren, drink it. God, yes I'm coming,\" she cried. Her legs stiffened with a tremor and there was a molten burst of Mrs. Preston's orgasm deep in Lauren's mouth.\n\n\"My sweet girl,\" Mrs. Preston moaned and rocked her hips. As her orgasm continued, her huge clitoris throbbed between Lauren's lips and the steady stream of her syrupy milk poured into Lauren's mouth. Again and again and again, Mrs. Preston burst with cum and Lauren couldn't swallow fast enough. It dripped down Lauren's face and wet the bed below.\n\nMrs. Preston pulled back and held Lauren's face in her hands. \"Darling girl,\" she sighed as one last dollop spurt and touched Lauren's upper lip. \n\nLauren bowed her head and rested there, between Mrs. Preston's legs. She felt every movement, every vibration, every nerve pulse through the woman's body and they all seemed to enter Lauren's. Mrs. Preston's orgasm was her orgasm and as she felt Mr. Preston move up onto the mattress, she wondered if he could feel the original climax all the way down to her toes.\n\nLauren kissed Mrs. Preston's sopping pelt and listened to her lover sigh from somewhere deep, down inside. \"Well, well, well, I guess that shouldn't surprise me, should it?\" Mrs. Preston asked.\n\nLauren had her eyes closed as she basked in her lover's wetness on her cheeks. \"What?\" She wondered from somewhere far away.\n\n\"That you eat pussy like that,\" Mrs. Preston said wryly. \"Everything about you is exceptional.\"\n\n\"Like this ass,\" Mr. Preston remarked from behind. Lauren felt the chill between her shoulder blades, the sensation of his long, thick fingers having moved up from her knees to her thighs to her bouncing ass cheeks. He weighed them back and forth with a groan and a deep breath that flooded her senses as it caressed her body.\n\n\"Told you,\" Mrs. Preston whispered, as if her husband couldn't hear her. \"It sounds like trouble's coming,\" the dark haired beauty said with a chuckle. \n\nMr. Preston placed a kiss that burned on the dimple at the top of Lauren's crack. He pressed his forehead there and groaned. \"To be continued,\" he whispered. His sultry breath danced along her most sensitive skin. He made Lauren quiver with just his breath on her body and she couldn't help but wonder what it would be like to be taken by her king. \n\nAs he moved up the bed, his bristly hair teased every nerve. Being touched by the king was a dance of a thousand sensations on her skin. Lauren sighed as she wallowed in all of them. \n\nMr. Preston joined Lauren and his wife in an embrace and his sex scent and his power and his fierceness came over Lauren like a wave. The pheromones answered his call desperately. Her body, even like this, almost limp, almost drained, still every hair stood at attention with the electrical crackle of the man's big dick energy. \n\n\"Lauren,\" he addressed her softly, \"Let me taste my wife on your lovely, full lips.\" Mr. Preston leaned in for a kiss that was so different from their tender kisses, tentative, sweet, seductive kisses. This was a demand of her mouth, a possession. It was wild and relentless and Mr. Preston pushed his tongue deeper into Lauren's mouth and swallowed down her air. When she breathed again, it was his air, it was from deep inside him.\n\nHe kissed her like Lauren imagined a sultan would. He owned her utterly, he conquered her mouth as well as every other part of her body. With the kiss, he answered the question and left no doubt. When both king and queen were present, the king was master of everything he saw.\n\nThere was a sweetness in his ferocity though and when he released Lauren's mouth, he hummed with pleasure. \"Did you enjoy tasting a woman for the first time?\" he murmured. One of his large hands was on Lauren's hip and the other on Mrs. Preston's thigh. They were his, the women belonged to him and Lauren pulsed as the thought of his control and mastery seeped into her skin.\n\n\"I loved it,\" she whispered. \"It was even more amazing than I thought it would be.\" The taste of Mrs. Preston was down inside her throat, maybe even in her belly. It was warm and sensual and Lauren liked the thought of bearing her mark. Being taken by Mrs. Preston.\n\n\"That's our girl,\" he said with a smile. \"If you'll permit me, there's something else I have in mind now.\" His almost black eyes glittered in the glow of the candlelight. They were hypnotic, they were magnets in the twilight of their room.\n\nMrs. Preston kissed her hand and added, \"He's been so patient. I know he's been dying to have you since Saturday.\"\n\nLauren felt her cheeks flush. Being wanted by both of them was an almost indescribable pleasure.\n\nMr. Preston left the bed and went to the dresser. His ass, Lauren let her eyes linger down the backside of his body and she couldn't stop herself from smiling. He was beautiful, as beautiful as Mrs. Preston, if men were beautiful anyway. Tan and swarthy and solid, he was powerful in the way he moved. Lauren looked at the line of muscle on the back of his shoulders and the back of his thighs but mostly, it was his ass.\n\nHe picked up a strange looking contraption and brought it back to the bed. \"I know that my wife will enjoy making love with you wearing this.\" \n\nAs she inspected it, Lauren furrowed her forehead. \"It's two dicks?\" She wasn't sure.\n\nMrs. Preston giggled and prompted Mr. Preston, \"Come on Mark, tell her.\"\n\nHe looked enormously pleased as he smiled. \"It is two dicks. More specifically it's two exact replicas of my dick. We had it made. One that can be placed inside Sharon,\" he showed Lauren with the cock in his hands. It was a deep pink, almost red color. As Lauren looked at the contraption and then back at Mr. Preston, it seemed to be an uncanny replica as far as she could tell. There were three black straps and two buckles that she didn't understand. \"Then these straps go around her lovely hips and she has a cock to make love to you with, my dear.\"\n\nLauren suddenly understood and had goosebumps when she nodded.\n\n\"While Sharon makes love to you,\" he dropped his voice down low, as if it were just for their ears, a dirty, little secret that no one else should know about. \"I would love to feel your mouth on me.\" Mr. Preston touched Lauren's cheek and added. \"I love knowing that my cock is inside your pussy and your mouth at the same time.\"\n\nLauren made a little squeak. She quickly covered her mouth with her hand to keep it inside, all of her quivering achiness. All of her want. She'd only had one cock in her mouth, only one time and it had been over with before it began. Nineteen year old boys went off unpredictably, like a leaky hose with no warning. Mr. Preston was a man though, a real man, with a lifetime of experience. He was sure to take his time with her mouth after waiting for so long. \"Yes please,\" was all she said.",
        "Mrs. Preston released a long sigh as she took the tool from her husband's hands. \"Oh my god, look at this,\" she said in a lusty voice. She and Mr. Preston had shifted places in the bed. The dark haired woman was behind Lauren now and Mr. Preston lay in front. Lauren's body had folded and moved on its own. It knew what to do, what it wanted, what it craved. She put her bottom up in the air for Mrs. Preston and felt her muscular legs press up against the back of Lauren's thighs. \"This sexy bottom,\" Mrs. Preston grabbed both of her jiggly cheeks and pulled them apart, almost roughly. She placed a sweltering, sticky kiss on Lauren's asshole and Lauren squealed once more. \n\nMrs. Preston had the cock in place and Mr. Preston beckoned to Lauren. \"Come to me, my little concubine,\" he murmured and showed her his bulging erection. Like this, it was front and center and there was nothing else that Lauren could see but Mr. Preston's amazing penis. \"You're hungry for this, I can tell by your eyes.\" He knew her secret already and added, \"How many times have you touched your sweet, young pussy and thought of having your mouth on your king, my pet?\"\n\nOh god, it was like he could hear the words that Lauren played and replayed over and over in her mind. Yes, she wanted to suck the king. She wanted to take his perfect, throbbing stiffness inside and worship it. She wanted to lavish him with her wet lips and tongue. It was a privilege, one that she thirsted for. \"So many times,\" she nodded. She wanted to say it, to call him my king or lord or something that showed her respect and honor. \"Yes Mr. Preston,\" she nodded. Her teeth chattered, she wanted him so badly.\n\nMr. Preston's thick, dark pink cock had sprung from the velvety cover of black pubic hair. It dripped precum, a silver, silky strand of his hot need, all the while. A river of it coursed down the crease between his pelvis and thigh and Lauren wanted to clean it with her tongue.\n\nMrs. Preston pushed the head of her cock inside and Lauren arched her back. Her body trembled as the girth opened her. The cock was big. No matter how sopping wet Lauren was, it was by far the biggest thing she'd ever had inside. \"Oh, Lauren,\" Mrs. Preston whispered in awe as she worked a little more of her husband's dick inside her.\n\n\"You feel how big I am inside you?\" Mr. Preston wanted to know as his real cock pulsed and called to her.\n\n\"Yes, Mr. Preston,\" she gasped as his wife pushed a little deeper inside. \"So big,\" Lauren moaned and pushed her bottom back for more, \"So perfect.\"\n\n\"Show me, my little love slave,\" Mr. Preston gripped his cock at the base and shook it at her. His precum splattered her upper lip and Lauren licked it up greedily and quickly as if she were worried that he wouldn't allow it. \"Lick me there, right on my slit,\" he murmured and as soon as she opened her mouth, she thrilled with the sensation of his strong hand on the back of her neck. He guided her, he pushed her down and in that moment he was completely the king. He was the king and he took what was his and he conquered a young girl's lips for his own pleasure.\n\nShe did as she was told and pushed back again into Mrs. Preston's dick. The toy was completely inside her now. Lauren felt the base of the cock up against her lips. Mrs. Preston's fingers were on her cheeks and wound back and forth over her hips. The queen fucked Lauren with sighs and deep exhales of overwhelming pleasure.\n\nBut the taste of him was all consuming. Mr. Preston was her king in every way and he hummed as he watched the tip of her tongue weave over his slit and siphon and lap up his juices. \"Yes, yes just like that,\" he whispered, his grip in her hair only tightened. \"Now show me your tongue, drip your saliva down on my cock,\" Lauren did exactly that. Normally she'd be ashamed of drooling like this but the king had commanded it. \n\n\"You want to taste me, all the way in your throat don't you, sweet girl?\" Mr. Preston asked but he knew the answer. Lauren was sure he did because otherwise, his eyes wouldn't sparkle with that carnal knowledge like they did.\n\nThe desire was excruciating. \"Yes, Mr. Preston, yes I do.\"\n\n\"Show me, my concubine,\" he whispered. Mr. Preston kept his hand on her neck and Lauren hungrily opened her mouth wide for him. He was velvety skin, soft as a feather, over steel. His dick was lava and molten hot. Lauren felt the pulse in the vein that drummed like a heartbeat. It ran the full length of him and Lauren followed the trail of it with her tongue.\n\nShe was instantly in love with the taste of him. The salty, clean musky taste of Mr. Preston covered her tongue and permeated her mouth. She dripped saliva down his shaft. After three of four passes up and down his quivering dick, there was a frothy puddle of spit on top of his ballsack. Mr. Preston's balls were heavy and full and scented of manly aroma. It made Lauren drip to think about the smell of her king rubbed into her skin.\n\nMrs. Preston picked up her pace and plunged deeper inside. Lauren moaned with her mouth full of dick and went down further and then further again until Mr. Preston's head had passed into her throat. She could only take him like that for two gulps and she would have to come up for air. Lauren's lips drew all the way up his shaft and left a river of saliva running down as she gasped for breath. \"Yes,\" Mr. Preston mouthed the word. No sound came out but she knew. Lauren knew that he needed it like this, he craved this. He wanted his concubine's complete adoration.\n\nWas there any other confirmation of ownership that was more complete than coming right down into someone's esophagus? Lauren didn't know but she sucked deeply and frantically to find out. She placed her hands more firmly on his muscular thighs and worked her lips tightly on his sticky shaft.\n\n\"God,\" Mrs. Preston moaned and then came a sob, something she couldn't help, something she couldn't hold back. \"Yes, fuck me,\" she screamed and her thighs were glued to Lauren's bottom as the dicks worked their magic inside the women. \n\nMrs. Preston pressed the head of the massive cock into a spot and there was a spasm that came with it. It was a place that Lauren had never found before. A place that made her pussy sing, and with the electrical pulse of pleasure, a fountain of cum bubbled up.\n\nLauren felt the hot gush run down her thighs as Mrs. Preston fucked every last drop out of her, panting and cursing with her effort and her ecstasy. \n\nLauren picked up the pace with her lips and tongue. Mr. Preston's hand trembled on her neck and his breath came in stops and starts as he shifted under Lauren. His balls were swollen and so full. His dick bulged and thumped and Lauren felt the spill of wetness from her mouth cover him once more as she pushed him past her mouth into her throat.\n\n\"Fuck,\" he muttered and grit his teeth. Lauren looked up as she choked on his full length inside. She looked him in the eye and felt all of the dirty dreams that she'd ever had reflected back in those dark eyes. Those eyes full of promise and a dark desire that frightened and thrilled her.\n\nHe came with a roar. It almost sounded like panic, like perhaps Mr. Preston was even frightened of what Lauren had unleashed inside him. He spurt down her throat and Lauren pulled back immediately. She gulped down mouthfuls of his milky seed. He kept coming, burst after burst of his hot saltiness ran into her belly and Mr. Preston's whole body trembled under her. \n\nThey tremored in unison, all three of them. It was a burst of electricity down her spine as the orgasm filled Lauren and emptied her all at the same time. She suckled and sipped and finally licked the last of Mr. Preston's enormous climax as she felt his cock relax along her tongue. \n\nLauren knew that once she opened her mouth, his mighty penis would slip from her lips to rest. Sated, at least for a little while, she had pleasured the king. She knew by the way that his eyes shone that he was happy with her.\n\n\"Baby girl,\" Mr. Preston whispered when his dick fell back to nestle in his dark nest of hair.\n\nMrs. Preston had also withdrawn the cock and the dark haired woman crawled to Lauren's side. She collapsed next to her. She still wore the two dicks and Lauren could feel how wet the outer cock was against her forearm. The big dick was completely saturated with Lauren's cum.\n\nShe rested her head on Mr. Preston's pelvis and turned to kiss Mrs. Preston's cheek with her cum sticky lips.\n\nLauren was surrounded in warm flesh and covered in love and she was too tired to move. She told herself that she'd just close her eyes for a minute, just a rest. She was rocked to sleep by the steady breath of both of the Prestons.\n\n***\n\nWhen she awoke, the room was dark and for a minute she didn't know where she was. She stretched out and remembered it all in a flash. Her bed was a twin. Her bedroom didn't smell of incense and sweat and cum. Her sheets didn't feel like silk.\n\nBut where were the Prestons?\n\nShe sat up and called out in a quiet voice, \"Mrs. Preston? Mr. Preston?\" There was no answer but there was a low tone, a voice in the background, somewhere outside the room.\n\nLauren got out of bed and stretched from head to toe. She felt fabulous. She hadn't slept well lately. She'd been too jittery about her arrangements. Of course, she grinned to herself in the almost dark, she just had what; maybe the most orgasms anyone ever had? That would wear anyone out.\n\nIt was almost dark outside now and the lights twinkled all the way north up Lake Shore Drive. All the way to the McCullum house where her parents were probably asleep in front of the television.\n\nLauren tugged the sheet from the bed and wrapped it around her naked body. There was no telling where her clothes were right now and besides, she didn't really want to get dressed, did she?\n\nShe opened the bedroom door and tiptoed down the hallway toward the kitchen. Lauren heard Mr. Preston's baritone, \"You know I wouldn't do anything like that with her. I guess I'm much more possessive than you think.\"\n\n\"But that's not really fair to her then, Mark, now is it?\"\n\n\"She's not like these other women that we've been with.\"\n\n\"No she's not,\" Mrs. Preston paused as if she were reminding herself of all the ways Lauren was different. They were talking about her, weren't they? Lauren's pulse throbbed in her ears and she felt like she was doing something forbidden, listening to them like this. \"But that's why she should have all the experiences that she's after. She should travel everywhere and do everything. Try everything.\"\n\n\"What's wrong with Lake Geneva?\"\n\n\"It's fine for us Mark. Us old fuddy duddies who have already done this.\"\n\nLauren gulped hard and felt the tears spring up. They didn't want her after all, did they? Lauren stepped into the light of the kitchen and whispered, \"Hi guys.\"\n\n\"Honey,\" Mrs. Preston smiled at her and pointed to the empty bar stool next to Mr. Preston. Her lover wore a baggy tee shirt and her dark hair was still wild from the bedroom. \"We didn't want to wake you but your timing is perfect for snacks.\"\n\nLauren nodded and huddled in the seat with the sheet wound tightly around her.\n\nMark wore a long, gray velour bathrobe. He leaned in close. Once again, his eyes had the dark circles and he looked sleepy but his smile was deeply contented. \"Brownies or pizza rolls, sleepyhead?\" he asked before he kissed her forehead.\n\n\"What were you guys talking about?\" Lauren asked in a quiet, even tone. Goddammit, she wasn't going to cry, she was going to be a grownup about the most grownup thing she'd ever done.\n\nMrs. Preston opened the massive oven door and put on a long blue oven mitt. She reached inside and pulled out a square pan of brownies, the rich smell of chocolate invaded Lauren's nose. \"Well, we realized that we weren't really prepared for this,\" she told Lauren as she reached in again and brought out a cookie sheet covered with pizza rolls. Cheese and sauce twinkled in the light and suddenly, Lauren's stomach growled.\n\n\"Prepared for what?\" Lauren wanted to know.\n\n\"We've both fallen in love with you and it's posed a couple of quandaries,\" Mr. Preston told Lauren as he pushed a bit of her hair behind her ear. \"Some philosophical differences of opinion.\"\n\nWell fuck.\n\n\"What do you want, Lauren? Brownies or pizza rolls?\" Mrs. Preston waited with an empty plate.\n\n\"Can I have both please?\" Lauren asked."
    ],
    "authorname": "macymadison",
    "tags": [
        "first time",
        "cunnilingus",
        "threeway",
        "romance",
        "squirt",
        "masturbation",
        "lesbian sex",
        "blow job",
        "bisexual wife",
        "series"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unicorn-ch-01"
}