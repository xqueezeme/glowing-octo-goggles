{
    "title": "WBDP - Valentine's in Vegas",
    "pages": [
        "This is a follow up to World's Best Diet Plan - Jingle Bells. If you want to see how the characters reached this point in their story, you can read the first story, however, this does stand on its own.\n\n*\n\nTrue to her word, Marcia did begin working out with me. She had no time to do so before going to work, so I would go in the mornings and work on my aerobics and swimming. Instead of walking on the treadmill, I was now able to do light jogging. On the bikes, I could now get between 15-20 miles in an hours time, depending on the program I set the bike on. I was working towards 30 laps in swimming. It was only a 25 meter pool, so 30 laps was only 750 meters, but it was still a far cry from where I started.\n\nAfter she got off work, Marcia would come with me and we'd work on weights for an hour. She showed me more of the machines and how to use them to effectively strengthen different muscle groups. She also informed me that my idea that I didn't have to work my legs due to aerobics was totally wrong. She said that the two things were different and that my legs had to keep up with the rest of my strength training. She did agree with me that lower weights and more repetitions would be better overall in building strength rather than going for heavier weights and lower reps, which would tend to bulk me up. She also had me working my abdominals more to get rid of the little belly I was still carrying around. She alternated the days that we would work on different muscle groups, doing three different groups on three different days, saying that our muscles usually required three days to recover from a heavy workout.\n\n\"I actually like the more athletic look,\" she said, \"rather than the body builder physique. You maintain more flexibility and don't look so muscle bound. More like Michael Phelps or LeBron James than Arnold Schwarzenegger or his ilk. Plus I've talked to some of the older body builders and weight lifters and they said the bigger weights put a lot of stress on their joints when they were younger and many of them have joint or back problems now.\"\n\nWe would take turns pushing each other on the weight machines. I noted that she was using 40 or 50 pounds for her reps, less for the upper body, more for the legs, although she easily managed multiple sets of 30 reps at those levels.\n\nI asked her why and she said that she still wanted to look like a woman and not some type of cyborg hybrid. God knows she looked like a hell of a woman, so I didn't question her methods. Working out with her while she wore leotards was a kind of torture. She could easily have worn sweats, but she knew the affect she was having on me and every other male in the place. It was her way of reminding me of what I was shooting for.\n\nAfter we returned home, we'd usually shower together, taking the perfectly appropriate amount of time to wash each other off, wink, wink. She was keeping herself clean shaven for me, which I found to be highly erotic. There's nothing like going down on a woman and not having to contend with hair. Let's just say I liked tacos better than shredded wheat. I started doing a little man trimming as well, so she had less hair to contend with when fellating me. The hair trimmer with the shortest hair attachment kept everything at a nice manageable length.\n\nI learned to automate some of my day trading. I would have orders entered that would only execute if a stock was at a certain price, I would put trailing stops on some of my stocks to sell if they started dropping too much so I could keep more of my profits without paying an excessive amount of attention to them. I would get warning alerts on my smart phone when stocks crossed over certain moving averages. I could spend more time working on my life and less time sitting on a computer screen.\n\nOne of the things I had more time to do was look into dominance/submission relationships. My 2 days of being a Master to Marcia were based more upon my desire to fuck her and use her in every way possible, than in any understanding of the lifestyle. Other than trying out a lot of the fantasies that my fevered imagination had held for years, I hadn't really thought about what it meant to be in a Master/slave relationship. But it turned out that it really was a lifestyle for a lot of people.\n\nI did a lot of reading and investigation and found there were a lot of variations in the lifestyle. There were the sadists and masochists who tended to get off on giving and receiving pain. A lot of the things that they were into, I would have considered torture, things like body mutilations, needle piercings, cuts, public humiliations, golden showers, scat or shit stuff, caning which could leave the submissive bruised for weeks. None of that appealed to me at all, nor, would I guess, appeal to Marcia. I loved her too much to ever hurt her or mark her up. We both realized that a little spanking now or then, something that would wear off in a couple hours, was not a permanent hurt. Even though there was pain, it was transitory and fleeting. There was a difference between erotic pain and just pain. She might cum from a spanking, but never would from a headache. I suppose if those types of people can find each other and are happy, that's on them, but not for me.\n\nThe milder form of that was bondage and discipline, a lesser form of submission. That's what we'd just explored in our own little way. Tying a person down, administering spankings, paddling or whatnot in ways designed to not leave more than temporary striping or bruising, milder humiliation, all of it designed primarily to just enhance sex. What was clear about what we'd done is that the submissive was ultimately in charge. She was the one who set the levels of what she was willing to tolerate, that safe words would always be used and respected. While the submissive was allowing more to her master than the normal person might, the ultimate limits were always the submissives and never the masters. That's where I saw ourselves. No matter what I did, how far and how long it proceeded was totally up to Marcia, her limits, not mine.\n\nThere were other variations I saw, pony play or pet play, Gorean play, based upon the novels of John Norman and Gor, and a lot of other stuff I hadn't fully investigated yet. Dominants could be male or female, as could their submissives. Some adventurous souls would have both male and female submissives, while some submissives would alternate between male and female masters, probably depending on their overall sexual orientation.\n\nOne other item that I ran across was a huge D/s lifestyle convention around Valentine's Day in, where else, Las Vegas. It lasted for three days, February 12-14, perfect as it looked as though I was going to make 215 pounds by my next weigh-in on January 24 and that meant Marcia had to submit to me for 3 days. It would mean delaying our play time until mid-February, not a particular hardship as I was getting regular sex again, but putting me awful close to our next weigh-in February 24 which was crowding our play dates.\n\nThe organizers were renting an entire hotel for the duration and the hotel would be closed to any other guests. That meant that nudity could abound, play could be organized, scenarios played out. The hotel staffing was going to be at a reduced level, as they had to depend on volunteers to work during that time, people who wouldn't be affected or offended by nudity or anything else that might happen, but the hotel had done this for three straight years, so about 75% of the staff was okay with whatever went on. And of course, since it was in Vegas, it stayed in Vegas.\n\nI really wanted to go to this thing. We could meet others who thought playing was fun, much the same as we did, discover something about each of the variations in the lifestyle, see what others were doing and if we wanted to incorporate any of it into our own life. I printed off something about the convention to show Marcia later.\n\nAfter working out, eating and showering that night, we retired to the bedroom. I used the vibrator on my wife while she sucked my cock, followed by a pleasurable interlude of my fucking her pussy for fifteen minutes; before I replaced my cock with her vibrator. My cock, now free, could plunge in her dark hole for another ten before she managed to vacuum the cum from my balls. Of course, this happened as she was spasming on my cock during her third orgasm of the evening. There are times when it pays to be a woman. We were both feeling quite sated and were cuddling while catching our breath.\n\n\"I want to show you something, honey,\" I said.\n\n\"What is it?\"\n\n\"Take a look at this I printed off the internet today.\"\n\nShe looked at me askance. \"Is this something I want to see?\"\n\n\"I won't know until you look at it.\"\n\nShe read it over; the hotel, the location, the purpose of the convention. She wasn't dismissing it out of hand, I could almost see the gears in her head spinning.\n\n\"Would you want me nude in front of bunch of strangers?\" She asked.\n\n\"That is my hope, you and me both. What good is it to have the best sex slave in all the world if you can't brag on it to anybody? I'm proud of my little sex slave and would like to show her off, in all her natural wonder.\"\n\n\"Would I be having sex in front of strangers?\"\n\n\"Only with me. Nobody else gets to have sex with you but me. There may be some other touching though.\"\n\n\"What kind of touching?\" She asked, concerned.\n\n\"Almost certainly spanking or paddling, I'm guessing some digital penetration, playing with your breasts, maybe some licking, kissing, and fondling, maybe some toys. No cocks other than mine, in any way, shape or form.\"\n\n\"And you would be okay with this, other people touching me?\"\n\n\"Under controlled circumstances determined by me with your agreement; yeah, I'm okay with it. It's for three days, I'm a week away from my weigh-in and I'm a pound away. The three days at the convention would be your three days of slavery. The issues would be waiting for the convention, plus my next weigh in is ten days later so we're crowding a lot of your slavery into two weeks.\"\n\n\"And don't forget the issue of 'Will I do this'\", Marcia said. \"You really want to do this? This is pretty far out there, even for you. Parading me naked in front of a bunch of strangers, having sex with me in front of others. Why do you want to do this?\"\n\n\"The fact that it is strangers actually makes it easier,\" I said. \"Parading you naked in front of people we know would be a problem, but strangers; not so much. The main thing is, we get to meet other people with similar interests, maybe learn some things we didn't know, incorporate new ideas in our play; really see what the whole Domination/submission thing is all about. And, you know that what happens in Vegas -\"\n\n\"Stays in Vegas,\" she finished for me. \"I'm familiar with the concept. What if we meet some people we do actually know?\"\n\n\"Let's say we meet your Chief of Police at the convention. Do you think he's going to be any more eager in exposing his proclivities than you are in exposing yours? I think it would still 'Stay in Vegas', if you know what I mean.\"\n\n\"I want to think about it,\" she said. \"I'll let you know my answer at your weigh-in.\"\n\nThe next week went by rather slowly for me, I think a little too quickly for Marcia. We continued to work out together, do our jobs, everything normal. Two days before the weigh-in, Marcia submitted to a light spanking, using my hand. Thirty wonderful swats, after which I finger fucked her aroused pussy to orgasm and after which she swallowed my cock whole, licking and tonguing and sucking while she fondled my balls until I gave her a nice, juicy taste treat. I thought she might say something afterward, but she didn't.\n\nThe day of my weigh-in arrived and I stood on the scales.\n\n\"215 pounds, Master. You've earned yourself three days with your little slave.\"\n\n\"It was with your help, Marcia. I really appreciate the work you're putting in to help me.\"\n\n\"Well, it is for my benefit too, isn't it.\"\n\n\"Yes it is. At least you seem to enjoy it as much as I do. Have you thought about Vegas? Are you ready to make a decision?\" I asked.\n\n\"You still want to go through with this?\" Marcia asked.\n\n\"I do.\"\n\n\"I will agree to go under the following conditions. You don't gain a single pound back before we leave.\"\n\n\"Done,\" I agreed. \"What are the other conditions?\"\n\n\"The whole trip is assigned a safe word. If at any time I give that safe word, we're done, we're out of there. No complaints, protests, whining, or push back. We're coming home and the three days are over. Future slave days may be up for renegotiation. I'm really nervous about this and while I want to be your little slave on this, we're bumping against my limits.\"\n\nHow much do I want to do this, I thought. If the whole master/slave thing were to end up cancelled, would it be worth it to me to go to Vegas for Valentines Day. I'll have to be very careful what happens out there, or I'm screwed. I'll have to make sure that nothing bad happens to Marcia. But I still thought it would be worth it.\n\n\"Agreed,\" I said. \"What do you want the safe word to be?\"\n\n\"Cocoa Puffs, because I feel like I'm being a little cuckoo right now.\"\n\n\"Anything else?\" I asked.\n\n\"One more thing,\" she said. \"Every night, before we go to sleep, we talk about everything that happened that day. What was good or bad and why, and if we still want to continue. Even though you say you have no problems with other people touching me, I know your first wife fooled around on you and it fucked you up a little. It took awhile before you really trusted me and knew that I wasn't going to do the same thing to you. So, this isn't just my decision. If you start getting uncomfortable about what's happening, you can call it off too. My relationship with you is far too important to jeopardize over what's essentially our games. I'm not going to ruin our life for games. If I even think you're having a problem with anything that's happening, I will call Cocoa Puffs, no matter if you think you're having a problem or not. Understood?\"\n\n\"Good call, honey. That makes a ton of sense. I don't want to jeopardize our relationship either. I'm okay with all those things.\"\n\n\"Then I'll go.\"\n\n\"I'll make all the arrangements; you don't have to worry about a thing.\"\n\n\"Make sure I don't, here or there.\"\n\nCould I love this woman any more? I kissed her goodnight and drifted off to sleep with visions of Marcia naked in front of strangers in my head and how proud I would be that she was my little slave.\n\n********\n\nThe day of our departure arrived. I'd done all of the packing. Essentially it was clothes for the flights to and from Vegas and some lingerie for Marcia, some shorts and t-shirts for me. I really didn't know what was considered normal Masters wear. The only examples I had were cheesy porno pics. I figured shorts and tee's would do to start, and once I had an idea of what was commonplace, I could buy something else. I could easily move down in attire and that was another benefit of my diet and exercise plan. If I ended up naked, I was not going to look fat and cheesy. Because it was a convention, there were going to be booths by some manufacturers of D/s equipment and clothing. If I found something I liked, I could buy something from them.\n\nI also brought a selection of our toys; well, really, most of them. We didn't have that many as far as I was concerned. We were just starting down this path. I left the largest of the butt plugs and one of the vibrators. Everything else was going. I placed a couple items in my carry on, the rest went into our checked luggage. I really wondered what the TSA guys would think if they had to open my luggage. Probably have a lot of laughs tonight over beers.\n\nMarcia was normally a calm, collected flyer, but she seemed edgier today. I tried to keep her engaged in conversations about work and our families, but I'm sure she was just thinking about the next three days and her part in it. This was a big step for her. She was nominally a private person. I was planning to negate her privacy. She was taking a real flyer here, and it was all due to me. She agreed, but this is not something that would show up at even the bottom of her bucket list. Not only would she be naked in front of many people, men and women, she would be exposing a lifestyle choice she'd done once for two days almost seven weeks ago. If it was just up to her, this wouldn't be happening. She was doing it as a gift to me, a Valentine's gift par excellence demonstrating unequivocally, how much she loved me.\n\nFinally, I realized something that might help calm her down; an orgasm or two. Whispering, I handed her my carry-on and told her to take it to the restroom, insert her butt plug and attach her butterfly. She looked at me like my head had fallen off.\n\n\"No, seriously. Put it on and come back here,\" I whispered.\n\n\"Your three days hasn't started yet!\" Marcia exclaimed, handing it back.\n\n\"This isn't for me; this is for you. You're as nervous as a chicken in a fox den. You're too wrapped up in what might happen; you need to relax. The best way I know for that to happen is if you have a little happy time. No one needs to know. You're not going through a scanner anywhere. You can even keep the remote, be in full control.\"\n\nShe thought about it for a minute, then said, \"You may be right. Give me that thing.\"\n\nShe got up and went to the bathroom for about five minutes, then returned to her seat. She got comfortable in her seat, took the airline magazine out like she was going to read it, looked around briefly, then I saw her turn the remote on. She made a small movement as she felt it come on, then started turning the pages like she was actually scanning the pages, but I could tell by the look in her eye, she wasn't really paying attention to any of it. I saw her adjust the setting at one point, finding a vibration that was doing more for her. After awhile, she slid an inch or two down her seat, her hips rolling forward, and she gave a small smile of contentment I'm sure I was the only one to notice.\n\nI expected her to turn the thing off, but apparently, it was feeling much too fine to stop the sensations now. I was watching her closely, pretending to read a book. She grabbed my arm when she spasmed again, squeezing it pretty hard. Just as she'd hidden her orgasms quite well during our Christmas dinner out, she was giving no outward signs to anyone not paying close attention and looking for them that she was joining the mile high club on her own. One more time, she shivered slightly as if she were cold before I saw her turn her butterfly off. She floated off to sleep with a smile on her face, the magazine resting in her lap.\n\nWhen the plane began it's descent into Vegas, I woke her up and told her we would be landing soon. Apparently, her anxiety was ratcheting up again as I noticed she used the remote again. Two orgasms later, we touched down in Las Vegas. As it was still winter, the sun had already set, but it was almost like daylight, at least along the strip. Neon lights were blazing everywhere.\n\nWe grabbed a taxi to the hotel as we weren't planning on going anywhere while we were there. The hotel wasn't one of the big ones along the strip, but a couple blocks away from most of the gambling action. It was a modest structure, three stories tall and only taking up a corner of the street. From the outside, it looked like any other smaller hotel catering to a more modest crowd than the normal Vegas tourist. What it was catering to was the more kinky crowd, a fact immediately apparent when one entered the lobby. There a sign proclaimed that there was to be no nudity until 2/12, not the kind of sign likely to be seen in any other hotel in town.\n\nThe hotel was allowing the conventioneers to check in the day before and would be closed for cleaning the day after. So we were essentially paying for 5 days although no one would be there for longer than four. I know Marcia was happy that she didn't have to shuck down to her birthday suit until tomorrow. We picked up a program listing the activities scheduled for the three days of the convention plus the exhibitors who were going to be there and went to our room. Marcia lay down on the bed and did some deep breathing, still pretty tense. I told her she might want to cum a couple more times since she was still so worked up. She apparently agreed with me. Removing her underwear, I saw her turn her butterfly on high and thrust two fingers up her sheath until I heard her moan out her release, her cunt contracting around her fingers as she came.",
        "\"It's always better if I don't have to hide my orgasms. They seem better if I can move and make noise instead of just letting them wash over me in silence,\" she said.\n\n\"I don't want you to hide any orgasms during our three days here. You can be as loud and demonstrative as you want,\" I said. \"I want people to know what an exciting sex slave I have,\" licking the fluids from her fingers.\n\n\"Just letting you know ahead of time; I'm not even sure if I'm capable of having an orgasm in front of others.\"\n\n\"I will be doing my best to make sure that won't happen. I want you to enjoy these three days as much as you did the first two.\"\n\nI showed her the program. There were at least eight activities scheduled every day, more on the first two days as they extended until 10:00 PM, fewer on Valentine's Day as the exhibiters shut down at 12 PM. There would be a banquet and dance the last afternoon. Champagne and a special Valentine's Day dessert were included. Some of the activities were contests, two of which I wanted us to enter, but a lot of them were exhibitors demonstrating their products or modeling their clothes to the guests. I pointed out those exhibitions that I would like us to attend. Marcia said she was willing to go along with anything that didn't violate our pre-arranged limits.\n\n\"There are two contests that I'd like to enter, one tomorrow and one the following day,\" I told her. \"There are prizes for first, second and third place for each contest of $1000, $700 and $400. The contest tomorrow is to see which slave will cum the most while riding a Sybian while sucking a Master's cock or cunt before the Master cums. The one day after tomorrow is to see which slave cums first while being punished by his or her master. I'm thinking of how quickly you released when I was hitting your pussy with the tawse. I think we have a shot at winning both. And of course the dinner and dance on Valentines's Day\"\n\n\"What's a Sybian?\" Marcia asked.\n\n\"It's a large vibrator that you sit astride like you're riding a horse. I understand the orgasms are quite frequent and intense. Some Master's use it as a form of punishment by tying the slave down on to it and forcing them to cum.\"\n\n\"I've never thought of cumming as a form of punishment,\" she said.\n\n\"I suppose it depends upon if they're allowed to stop.\"\n\nMarcia pondered that.\n\n\"That could be a punishment, I guess. You do get kind of sensitive after awhile.\"\n\nShe looked at me awhile, studying my face. She pulled me towards her and held me very close, \"Are you sure we're doing the right thing?\"\n\n\"I know that if we're careful and keep communicating, this could be a very rewarding time. Look at me,\" pointing to my erection, pushing against my pants, \"look at how excited I am right now, and all we're doing is talking. I'm so proud of you, Marcia. I can't tell you how much I appreciate your agreement to go along with this. I know more than anyone how difficult this is for you. This could very well be the best Valentine's Day present ever.\"\n\n\"I'm so worried that we'll end up harming our marriage. I don't want to do that.\"\n\n\"We will be cautious. I'm confident we can do this. I would be devastated if we damaged our relationship, but I know we're good.\"\n\n\"Make love to me, Sam. Don't fuck me, love me.\"\n\nI kissed her. I stood her up and removed her skirt and blouse. I undid her bra and removed the butterfly.\n\n\"Plug in or out?\" I asked.\n\n\"In please.\"\n\nShe climbed into bed while I undressed. When naked, I climbed into bed with her and pulled her into my arms, showering kisses upon her upturned lips. They parted and my tongue stole into her mouth and entwined with her own, dancing, swirling, sucking, making her breathless. I kissed my way across her cheek to her neck, nibbled and licked my way down her neck, giving her goose bumps. I chased the goose bumps down her chest, across her breasts, nibbling at the sensitive skin around her areolae before locking my lips around the hardened points of her nipples. She thrust her chest out against my mouth, pushing her flesh deeper into my mouth. I suckled the dimpled flesh, hearing her moans of arousal as I teased the taut tips atop her mounds. She began grinding her hips against my leg and I could feel the wetness of her sex against my thigh.\n\nMy hand reached down between us and she spread her legs, opening herself to my questing fingers. I could feel the heat of her blood engorged labia growing as her arousal grew, the lips parting for my manual stimulation. First one, then a second digit dug into the spongy flesh of her sheath, feeling the slick, silky smoothness as her body prepared itself for mating. My thumb rubbed the stiffened peak of her clit as it poked itself from the protective folds.\n\nI couldn't wait any longer to taste her, the tangy, spicy center of her and my mouth left her breasts and my tongue speared into her core, feeling her excitement as her cunt squeezed against my tongue, trying to draw it deeper into her molten recesses. My fingers, freed from her sheath by my tongue, stroked the perineum in lazy strokes while simultaneously tapping lightly on her plug, sending little shock waves into her anal ring.\n\nLapping hungrily at the fluids flowing from her sex, I swirled my tongue upward through her cleft, tantalizing her lower lips before nipping gently at her engorged clit. Suckling softly on the turgid flesh while my tongue began dancing on the tip of her exposed nub, I felt her hips rolling against my mouth, thrusting against me, seeking more pressure. Two fingers slid back into her cunt and sought the roughened skin of her g-spot on the top of her sheath.\n\nRubbing against the nerve bundle while my tongue worked the nubbin on the outside, I heard her cry out, \"I'm cumming, Sam. Oh, God! It feels so good.\"\n\nHer hands grabbed my head and pulled me tighter to her sex, her sheath spasming around my fingers, deep moans spilling from her lips as I kept up my oral and manual stimulation of her trigger points.\n\n\"Put your thick cock in me, Sam. I want to feel you inside me, thrusting, driving, making me yours again.\"\n\nI didn't need a second invitation. Positioning myself between her legs, I threw her calves over my shoulder and eased myself into her liquid heat, sliding easily in until our pubic bones fused together, the plug in her ass making her exquisitely tight and increasing her sensitivity.\n\n\"Yes, oh yes! I don't think I've stopped cumming. It seems to be going on and on and it feels so fucking good, feeling you buried in me.\"\n\nShe was right. I felt her spasms pulsating on my prick, massaging, milking, swallowing my cock whole. I began a nice, steady thrusting, pacing my plunges with the contractions of her cunt. Sinking in on the tightening of her sheath, withdrawing on the dilation. The intensity of that tight sleeve pulling and tugging on my shaft was divine.\n\nIt appeared to me that the more we had sex, the better it got. That our act of pleasure was perfected with practice and the rediscovery of our bodies. Marcia had an almost unlimited capacity for sex. I had never reached a point where it was too much for her. Always, she was capable of giving and taking more.\n\nWhat's more; she'd apparently determined to exercise her Kegel muscles after our little game the last time we played at Master and slave. I could feel her bear down on my prick as her orgasm continued and the excitement building up all day exploded as I shot huge wads of my cum into her womb in spurts that jetted from my cock. It was like having my cock in a vice.\n\n\"Fuck, fuck, fuck, how can you be squeezing me so tightly while you cum?\" I said, panting my release.\n\n\"Ben wa balls, honey. You gave them to me so I could practice. I've been practicing.\"\n\n\"You're not kidding. My cock was so sensitive after I orgasmed and you just kept squeezing and squeezing. It was wonderful. If you left a single drop of juice in me, it must have been hiding in the deepest darkest recess of my balls.\" She was still compressing my cock although the poor little boy was giving up and going home.\n\nMy wife grew silent after our passion and I knew that she was thinking about what the next few days would bring. The fact that she would agree to this left me with a feeling of awe and wonder. I could not think of any greater way for her to show her love to me than agreeing to this despite how I knew she felt.\n\n\"My love, I know you're nervous and the fact that you would consent to do this means the world to me,\" I said. \"I will do my utmost to make sure that I don't violate the trust you've placed in me. Remember, either one of us can cancel this by saying 'Cocoa Puffs'. We'll start at 7:00 tomorrow morning. I trust that all will be okay.\"\n\n\"Please hold me, Sam.\"\n\nI wrapped her in my arms and pulled her close. Gradually, her breathing slowed and I knew that whatever bedeviled her mind, it no longer troubled her sleep. I held her in my arms as I too settled into sleep.\n\n*******\n\nI'd set our alarm for 6:30 AM, and after it went off, Marcia went into the bathroom and took care of all her necessities. When she got out of the shower, I was waiting for her in the bedroom with her collar, slave tag, cuffs, leash and a black mesh romper that could scarce be called clothing. She knelt when she entered the room and I had her display so I could fit all of the items on her. The romper went over her neck, had two sheer panels that went over her breasts before they came together again to pass between her legs, then parted again to wrap around her waist and tying in the front. It left nothing the imagination as it could not be said to cover anything, merely accenting and accentuating her nudity. She looked stunning and I could feel my cock responding both to her beauty and the situation. I hooked the leash to the collar and asked her to follow three feet behind me and to kneel if we came to a stop. I wore a plain white t-shirt and cargo pants shorts with a few of our toys in the pockets, and sandals. I also carried an express bag with a few more toys in it. It would allow me to add any purchases to it while looking around.\n\nI can say without equivocation that as I walked her to the elevators to go to breakfast, I was the proudest man in the world. When we got in the elevator, there were two other couples already there. Marcia knelt down at my feet. I introduced myself and my slave.\n\n\"Hello, my name is Sam and my slave here is Marcia. Pleased to meet you,\" I said, holding my hand out to the nearest fellow.\n\nHe shook my hand and said, \"Frank and my pet, Cathy.\" Cathy was on her knees leaning against Frank and rubbing her face on his leg. She was wearing cat ears on her head and had a plug in her ass with a cat's tail attached to it and nothing else but some body paint that suggested she was a gray and white tabby.\n\nThe other man stuck out his hand as well and identified himself as well. \"I'm George and my little slave has been given the name of Dina, which means flower in Gorean.\" Dina had on a sheer red silk shift, essentially nothing more than single piece of fabric with a hole in the middle for her head and a piece of rope at the waist. She sat on her knees much like Marcia, but with her hands open on her thighs.\n\nFrank was perhaps a little overweight, but not unduly so. He was around 5-9 and around 200 pounds. George was taller, 5-11 I guessed and perhaps 185. Both of them were wearing leather, so perhaps that was a commonality with people calling themselves Masters. I determined that I would have to keep an eye on what others were wearing and determine what I might want to wear to fit in. George also had a whip wrapped around his waist.\n\n\"I'm guessing that you and Cathy are into pet play, Frank; and that Dina is your slave in the Gorean style, George?\"\n\n\"Right.\" \"Correct.\" Came the the answers and George asked, \"What do you practice, Sam?\"\n\nI looked down at Marcia and said, \"Marcia and I are new to the lifestyle. That's part of the reason for our coming here. We wanted to see what was out there and see if we had a particular kink or would develop our own.\"\n\nGeorge followed my gaze and said, \"You have an outstanding slave, extremely beautiful, and she appears quite obedient. Do you share?\"\n\nMarcia looked at me with a dangerous look in her eyes, awaiting my response but relaxed when I said, \"Look at her, George. Would you want to share this flower of womanhood with anyone were she yours?\"\n\nGeorge laughed. \"You're right,\" he said. \"It's unlikely that I would share something so lovely either, but if you should ever change your mind, let me know, would you.\" Dina said nothing but she pouted slightly at hearing that her Master would be interested in sharing another slave.\n\n\"Not likely, George,\" I smilingly said. \"Would I be asking too much if I imposed on you both to have breakfast with us? I'm interested in what each of you considers to be the benefits of your particular lifestyles.\"\n\nBoth of them thought that would be most agreeable although I suspect their primary reason was to be able to keep watching Marcia, even though both of them had lovely slaves of their own. Cathy was perhaps a little plump, to match her master, but she had beautiful eyes and breasts. Dina did not appear to me to like the idea, but she had no say in the matter if what I knew of Goreans was true. Cathy didn't appear to care one way or the other.\n\n\"I notice it's rather warm in the hotel,\" I said. \"Is the air conditioner broken?\"\n\nGeorge and Frank laughed. \"Not likely,\" George said, \"but with all the nudity, they keep the temperature above 78 so the guests won't be uncomfortable. The staff find it a little warm, especially if they're working hard, but the hotel's relaxed their dress code so the staff can dress down to be more comfortable. Some of them may even be nude if they like the lifestyle. The only way you can tell they're staff is they still have to wear the hotel name tag, but it's usually attached to a chain around their neck.\"\n\nFrank added, \"I think they still have air on in the kitchen because of the stoves and ovens, but it's pretty warm everywhere else.\"\n\nWe took seats at a larger table, rather the masters did. The hotel had thoughtfully provided large fabric cushions on the floors next to the chairs for the slaves. They knelt down next to us.\n\nWe ordered and made small talk until our food order was delivered, at which point I asked Frank, \"So, what can you tell me about pet play and why I and my slave might be interested in it.\" I fed Marcia some of her breakfast by hand as I did so. All of the masters fed their slaves while our conversation went on, eating our own food as well.\n\nFrank thought a few moments, then said, \"Pet owners want to have our own pets. Pets that are more special than the run of the mill pet. Our pet is essentially treated as such, using a litter box, kept on a cushion or a cage when we are busy, fed on the floor in their own little bowls, drinking the same way. In return, we love and caress our pets, take care of them, treat them nicely when they behave and punish them when they are bad.\"\n\n\"How do you decide what type of pet you will have?\" I asked.\n\n\"Sometimes it's the will of the master, but those relationships rarely last as the pet usually has an affinity to a particular animal and this affinity is usually reflected in their behavior. The best relationships usually result when the pet chooses the type of animal she is and the master respects the choice.\" I saw Marcia watching and listening with interest as Frank gave Cathy a morsel of her food and she rubbed up against his leg and purred just as a cat would. He reached down and stroked her head and down her back, then scratching her head between her ears.\n\n\"And what attracted you to pet play?\" I continued.\n\n\"You know how devoted some people are to their pets and their pets to them. Think of that times ten. The love and devotion of a beloved animal with the intelligence of a person. Able to cater to you and your every whim, please you in ways that an animal can't. What could be better?\"\n\n\"A human slave,\" George chimed in. \"One who has been trained to serve perfectly, to dance with grace, and makes every effort to satisfy her master in every way, one who is filled with slave heat and constantly needs her master to satisfy her and reduce her heat, even if for only a moment. That would be better than a pet. For example, 'Serve me my juice, slave'.\"\n\nDina rose gracefully to her feet, and twirling with lithe movements, took the pitcher of orange juice left at our table, poured it into a glass, knelt again with a little pirouette, took the glass and touching it briefly to her sex, her breasts and then kissing the glass, turned the glass to face her master and handed it up to him on upraised arms, saying, \"This slave would ask that her master accept this juice as a sign that she finds favor in her masters eyes.\" The whole thing was done almost as a ritual, but so smoothly and elegantly, it was more than ritual, almost ceremony. This too was watched closely by Marcia, I noticed. I could see that she appreciated how graceful and dancelike Dina's movements were. George reached under Dina's silks and stroked her sex and she shuddered with the touch.\n\n\"This is slave heat,\" George said, licking her moisture from his fingers. \"She can almost cum on command, she is so well trained and attuned to the needs of her master.\"\n\n\"But,\" Frank interjected. \"She has little or no voice in her slavery. You Goreans buy and sell your slaves almost like cattle. There is no relationship there other than what the master wants.\"\n\n\"Slaves are happier when they are used in such a way. If she is sold, a slave knows that she hasn't been pleasing to her master and she will strive to do better with the next one so she isn't sold again and eventually ends up with the cheapest and most brutal of masters. They have no decisions to make, they only have to obey their masters,\" George replied.\n\n\"It doesn't sound as if you use safe words,\" I asked. \"Isn't that dangerous?\"\n\n\"If a slave doesn't want to be punished and misused, she should serve her master better, be more pleasing,\" George answered. \"There is nothing more graceful and pleasing than a Gorean slave girl. They are demonstrating some of the Gorean slave dances tonight at nine at the sand pit. Dina will be one of the dancers. She is a most lovely dancer and the dancing makes her so hot that I must usually service her immediately to calm her down. You should come.\"\n\n\"I'll definitely consider it,\" I said, \"but like I said, we're looking at a lot of things here this weekend and my time will be at a premium.\"\n\nFrank also chimed in. \"They're also having pony races tonight at 8:00 and pony dressage at 3:30 PM tomorrow. I would invite you to observe a branch of pet play then. Granted, it's a little specialized, but would give you an idea of how our pets perform for us.\"\n\n\"Thanks, Frank. We'll see if we have time. I'd better get going now. There's a lot to see today.\"\n\nAs we walked away, I asked Marcia what she thought.\n\n\"Neither one of the lifestyles particularly fits in with us, Master\" she said. \"I loved the grace and style of the Gorean slave, but the lack of a safe word and the general lack of consideration for the slave was totally distasteful to me. And having to act like an animal all the time would be a no go as far as I'm concerned. I'm nobody's rabbit or cat or doggy. And using a litter box! Not for us.\"\n\n\"I agree,\" I said. \"Let's check out some of the vendors.\"\n\nWe entered out on the exhibition floor. Masters were everywhere, leading naked or near naked slaves of all types, men and women. Some even had more than one slave on their leash. As anticipated, many masters did wear leather of some kind or another. Others were dressed in business suits, some were dressed as casually as I was, some had on no more than the slaves they led around. I saw one man with three young ladies he herded around with a riding crop, getting them to go in whatever direction he desired with a quick swat upon the buttocks.",
        "\"I wonder how he keeps them all satisfied,\" I wondered out loud.\n\n\"Lots of viagra or a severe case of priapism, Master,\" Marcia hazarded. \"Or maybe they have to pleasure each other while he watches.\"\n\nThe first place that I wanted to stop was a toy booth. Marcia had an amazing sexual capacity, and the more orgasms she had, the easier they came. If we wanted to win the contest this afternoon, I had to get her warmed up. The booth had every possible shape, size and variety of dildo, vibrator, and butt plug imaginable, and what they didn't have, they could order. The company agent was demonstrating each of the individual pieces of equipment. When he asked for a volunteer, I offered Marcia for several of the demonstrations, but only of the toys I was interested in. I asked her to divest herself of her romper and she removed the garment and I stowed it in my bag. He gave her a hand up on the platform and I told her to display. She snapped into her display position. The first thing that I wanted him to demonstrate was the We/Vibe 4 Plus. I'd read about its smart phone app that could be used to control the device from anywhere in the world.\n\nTed, as that was the demonstrators name, took the device which looked something like a U. He put a little lube on the part that was inserted into Marcia's pussy. He pushed it up until the base of the U was firmly against her pubic bone. The lower arm was positioned on her g-spot and the upper arm of the U then was adjusted over her clitoris. He handed me his smart phone with the app opened. He showed me the different vibe modes that were available and also indicated that it was possible to create your own vibration patterns by playing with the device and once you found the pattern that worked best, save the pattern. \"Try it out, sir.\"\n\nI pushed one of the buttons and noticed Marcia start. I touched each of the buttons in turn, looking for which one of them most seemed to 'push her buttons'. All of them seemed to be stimulating, but the fourth pattern really started to make her squirm. Her vaginal lips began glistening with her moisture.\n\nTed said, \"Now, this vibrator is designed so that it can be used while you're having sex.\" He went to Marcia and pushed two fingers into her cunt. \"The device is very small where it enters the vagina, leaving lots of room for the penis to enter at the same time.\" He wiggled his fingers in her cunt.\n\n\"Master, may I cum,\" she said.\n\n\"Cum for me, slave,\" I replied.\n\nShe shuddered, moaning, her hips rolling with the spasms. The look on her face was priceless. Many of the other masters also appeared to be impressed as well. Quite a few of them had their slaves sucking their cocks and a mistress had bared her cunt so her male slave could lick her. Marcia was still twitching lightly on the platform, trying to maintain her display position while the vibrations still pulsed in her pussy and on her clit. I turned it off and handed the phone back to Ted. Ted removed the We/Vibe from Marcia and dipped it in a basin of liquid.\n\n\"As you can see,\" Ted said, \"the We/Vibe is totally waterproof and can easily be washed with water and a mild soap or this hypoallergenic, anti-microbial cleanser that we also sell. The nice thing about this is it can also be used in the bath or shower. It's charged by induction so it has no openings for water to get in.\n\n\"I'll take one of those,\" I told Ted. Several others also put in orders. It was obvious to everyone that it worked like a charm.\n\n\"I'd also like to see the 'Womanizer',\" I told Ted.\n\n\"No problem, man.\" He lowered his voice so that he was speaking only to me. \"You got a great lady here. I'm sure she just doubled my orders. Hey, if you end up buying anything else from me, I'll give you a 50% discount.\"\n\nTed went into his sales spiel. \"All right, folks, the gentleman here wants his slave to check out the 'Womanizer',\" Ted said. \"I'm sure you would like to see this demonstrated as well. This is a great little product for the discriminating buyer. 73% of all women who have tested the Womanizer have reported that it gives them multiple orgasms. Another item of note, it does not use direct stimulation of the clitoris to achieve these results.\" He pulled out the device; it was small, easily fitting in his hand. \"They come with these individual silicone tips in a couple different sizes just in case a woman should have a large clit. Now this kind of simulates a sucking action and the pulsing around the clitoris is what causes the orgasm.\" He turned to me and said, \"You should have the lady lie down for this. It gets pretty intense.\"\n\n\"Slave,\" I said, \"lie down, spread your legs. Hold still.\"\n\nMarcia obeyed. Ted bent down over her and separated the lips at the top of her cleft, pulling back the folds, exposing her clit. He placed the cone like structure over the top of her clit and turned it on.\n\n\"Okay,\" Ted said, \"this has got ten settings from mild to extreme. I'm going to start on the mild setting, then go to number five, and then jump to ten. I don't think you need to see all ten settings to get the idea here.\"\n\nMarcia was making lovely petite moaning sounds, the sounds I loved to hear, music to my ears. When he bumped it up to five, her legs twitched and she struggled to keep her hands up instead of putting them down on her cunt. I don't think she was aware of it, but her legs edged a little wider as did the petals of her sex.\n\n\"Master, I need to cum, please let me cum!\"\n\n\"Cum, slave.\"\n\nShe arched her back, her hips rolling up and thrusting against the Womanizer, her hands grabbing at her breasts and pinching and pulling at her nipples.\n\nTed upped it to ten and she started exclaiming, \"God, I'm cumming again, I'm cumming again, Ooooohhhhh shit, it won't stop.\" Her moans of passion attracted people from across the room and they began crowding around the display area. She kept humping against the device in Ted's hand and he used his other hand to hold her hips down they were bucking so much. One of her arms went into her mouth, trying to stifle the noise she was making.\n\n\"That is one hot bitch,\" I heard a voice behind me say, and another voice answered, \"I'd give a thousand dollars, hell, five thousand, to fuck her right now.\"\n\n\"That's enough, Ted. Let her down easy, okay,\" I said.\n\nHe shut off the Womanizer and Marcia just lay there, her cunt continuing to contract and open, her legs still twitching, her stomach muscles rolling in waves from her sex to her breasts, her breathing in huge panting gasps, trying to suck air in because she'd been holding her breath so long. Ted just patted her thigh, saying, \"Good girl, good girl. Relax, take a deep breath, good girl.\"\n\nGood, I thought. Not good, that was fucking spectacular. Several other master's had been impressed as well. Almost a dozen of them had a slave bent over so they could fuck them, standing up. Several more than previously were getting their cocks or cunts serviced.\n\n\"Slave, here, position 1.\" I ordered.\n\nMarcia was unable to move with her usual alacrity, but she did manage to come to my side and kneel at my feet. She grabbed my leg in an attempt to establish some equilibrium. I rubbed her head.\n\n\"Master, that was incredible,\" Marcia said. \"I've never felt anything like it. My clit never became over-stimulated. I could just keep cumming and cumming. Normally after that many orgasms, I would be covering my clit because it would become painful. This didn't. It never got painful. Would a slave be out of line if she implored her Master to purchase one of those things?\"\n\n\"No, she would not.\" I turned to Ted and said, \"I'll take one of those, too.\"\n\nAt least 60 masters had ended up watching the end of Marcia's orgasm. Over half of them also ended up buying one for their slaves, or in the case of the mistresses, themselves.\n\n\"Is there anything else you would like your slave to demonstrate for you?\" Ted asked. He added, whispering, \"I'm going to give you yours for free. I think your slave sold most of them for me.\"\n\n\"No, I think my slave has had enough for now.\"\n\n\"I could give you a great deal on a Sybian if you let her demonstrate that for me.\"\n\n\"We are entered in the Sybian contest later today. If you feel that our performance at that time in any way helps your business, seek me out and I'll take you up on your offer.\"\n\n\"Thanks, I will,\" Ted said.\n\nWe collected our purchases and headed to my next stop, the Kinbaku or Shibari Japanese rope tying demonstration where a Japanese master of the craft called a kinbakushi, planned a show. I moved to the front of the crowd and when Master Kou asked for a volunteer, I offered Marcia up. Master Kou was happy to accept as he had seen my lovely wife earlier during the We/Vibe demonstration as he'd passed through the hall to set up for his own exhibit.\n\n\"Is there anything in particular you would like to witness,\" Master Kou asked.\n\n\"Some type of suspension, I believe,\" I replied.\n\n\"I will be pleased to demonstrate, but you must not attempt alone without much study. You could hurt your slave,\" he warned.\n\n\"I understand. It is not my intent to practice any more than the most basic ties. I understand that you are selling a book?\" I asked.\n\n\"Yes, but let me make clear that in the book, each tie is the basis of the next one. You must master the first one before proceeding to the second. Do not go further until each is mastered in turn,\" Master Kou said.\n\n\"Thank you. I will take your warning to heart. I do not wish to harm my slave in any way.\"\n\n\"Then I shall proceed.\"\n\nMaster Kou began by tying Marcia's hands over and behind her head. Her arms and elbows were kept from separating more than her shoulder's width by manipulating the ropes between them. Several loops were left where the suspensions would be made. He also made sure that each of the pressure points had a minimum of four strands of the rope, but more often six to eight where her suspension would occur.\n\n\"I prefer the natural fibers, hemp or jute,\" Kou said to the crowd gathered around, \"although some Master's will now use some artificial materials. I find properly treated natural fibers will slip less and better for slave if there is no slippage.\"\n\nAfter her arms and hands were tied down, he moved to Marcia's chest, crisscrossing the strands of ropes across it above and below her breasts and tightening the strands on either side with knots between her breasts and under her arms, squeezing her breasts, pinching them and forcing them to jut out. Loops were again left which would become suspension points. I could see Marcia was becoming excited as her nipples swelled into hardened points, her areolae puckering as they swelled. More strands were tied around her waist, the knot work becoming more intricate, joined to that already created, becoming almost a cradle from which she would hang.\n\nNext, he connected two strands to her stomach knots and passed them down her stomach. He made a knot at the location of her clitoris before passing one strand on either side of her inner labia and up the crease of her ass to connect the strands to the knots on her back.\n\n\"This should be tight enough to cause discomfort, but not tight enough to impede access to her sex.\" He demonstrated by pushing two fingers between the strands and into her cunt. Marcia moaned. When he withdrew his fingers, they were wet. He held them to Marcia's mouth and told her to lick them.\n\nWhen she was done, he continued tying in several locations along her left leg, three times above the knee and twice below.\n\n\"As you can see, I now have ten anchor points with which to start the suspension although only seven are primary as they will be supporting most of her weight. The other three are there mostly to hold the limbs in a particular position relative to her body.\"\n\nHe began the process of suspending her, beginning with the loops near her breasts, her waist and upper thighs. Her body was raised above the platform upon which she had been standing. Working quickly so that ties at that location did not solely support her for long, he quickly added suspension ropes to the other four suspension loops so all seven of the primary points were in use. He then added the ties for the other points, securing the left foot bent toward her thigh. She now hung sideways from her left side, her head to the left of the crowd and her legs to the right. Her right leg was dangling, but that was only momentarily as he took her right leg and bent it, her foot going nearly to her crotch. He quickly passed ropes around the limb that tied her leg in that position.\n\nWhen that was completed, Marcia hung with her thighs widely separated, her sex gaping open accentuated by two narrow strands of rope. Her moisture was flowing freely and I saw beads of her natural lubricant running down her right thigh.\n\n\"From here, more ties may be added restricting hands or fingers more, restrain the feet, the hair may be tied to the ropes restricting neck movement, a gag may be added, vibrators may be tied to sensitive areas,\" Master Kou said. \"Possibilities abound for the master and slave.\"\n\n\"Where is the pleasure for the master?\" I asked. \"It doesn't seem that there is much here to stimulate him.\"\n\n\"Ah, for the master, the pleasure is usually in the journey, not the destination. The master is touching his slave during the process, caressing the flesh as he manipulates the ropes. He is guiding the slave into her position with the ropes. I admit it is more zen, like a garden. You tend the garden and when you are done, the flowers are blooming and you may enjoy the beauty of your garden.\" He reached over and patted Marcia's leg. \"I would say that you have a most beautiful garden.\"\n\n\"How are you, slave?\" I asked her.\n\n\"It's somewhat painful, no,\" she said thoughtfully, \"more uncomfortable than painful. It might be an hour or more before this becomes very painful.\"\n\n\"And what does the slave gain by this\" I asked Master Kou.\n\n\"The ropes have created pressure points at pleasure centers of her body, her breasts, her sex, her clit. The ropes binding her breasts are squeezing them, trapping some blood in them keeping the nipples aroused.\" He touched the stiff points and she flinched, moaning. \"The knot at her clit is placing pressure there. The ties passing between the labia also have pressure on the lips, plus there may be some rubbing as the ropes move or are adjusted. You can see from the fluids leaking from her sex she is quite aroused.\" He ran a finger through her slit in demonstration, giving it to Marcia to lick clean. \"Truthfully, she is being kept in a state of high arousal, near climax, by her nudity, her display, the ropes, her helplessness. The discomfort is masking it from her. But all it takes is something like this,\" and he tapped the knot over her clit, \"and she orgasms.\"\n\nHis last words were almost drowned by Marcia screaming, \"Master, I'm cumming. Oh God, I'm sorry, I'm cumming.\"\n\nShe wriggled in the ropes, moving as much as the ropes would allow, which wasn't much. The spasms wracked her body, causing her to shiver uncontrollably as they poured through her. The crowd was clapping, happy with the demonstration.\n\n\"Thank you for your demonstration, Master Kou, it has been most enlightening. I should like to purchase your book.\"\n\n\"It is not often that I may work with a subject this lovely. Your slave is quite splendid to work with,\" he bowed low, finishing. \"I must thank you also.\"\n\nWhen Marcia lay quiescent in her ropes, Master Kou began the process of untying her, getting her to the platform first, then removing all of the restraining ropes. The ropes had left marks upon her body. Master Kou took a cream and smoothed it over Marcia's flesh rubbing out most of the marks except those closest to the suspensions.\n\n\"The rest of her rope marks should fade over the next hour or two,\" Kou said.\n\n\"My thanks again. My slave thanks you also for her climax.\"\n\n\"Really, the pleasure was mine.\" Master Kou smiled at Marcia.\n\nWe had one other place to stop before lunch. There was an exhibit of bondage devices and furniture by a large manufacturer of such equipment. When we arrived, it already had a large gathering as another slave was suspended by her arms on a pulley rig with her legs parted by spreader bar and another was spread-eagled on a wooden bondage bed, her arms, legs and neck all held down by leather straps.\n\nI whispered to my slave, \"I'm going to do something a little different here. It may not be what you expected, but it does not violate any of the terms we previously agreed to. Are you willing to go forward?\"\n\n\"If my Master wishes it,\" she replied.\n\n\"Good girl.\"\n\nI got the attention of the main demonstrator whose name was Ben and said, \"My slave would like to demonstrate the St. Andrews Cross apparatus you have over there,\" I said pointing to the equipment in question. \"And then I would like to propose a contest.\" Most of the exhibitors had already heard or seen my slave that morning and were only too happy to allow her to demonstrate their equipment as they felt sure that more sales would result. There was nothing like a beautiful, squirming, climaxing slave to drive up business. They happily led Marcia to the equipment and fastened her cuffs to the free standing St. Andrews Cross X, back out.\n\n\"I'm sorry, Ben, that I wasn't clear about this, but can you place her upside down and facing outward?\"\n\n\"Certainly, sir. Our equipment is designed to be used either way.\"\n\nHe laid the cross down and turned Marcia the other way, back against the cross. He used a stronger suspension boot more able to support her weight hanging upside down than the ones I had on her ankles. He handed me her ankle cuffs which he removed. When she was fully strapped in, he lifted the cross and propped it against it's bracing board. When finished, her head was forward of her feet due to the slant, her arms and legs spread-eagled on the cross.\n\n\"And a ball gag, please,\" I said.\n\nBen said, \"Of course,\" and placed a ball gag on my slave.\n\nBen then announced to the crowd, \"This master would like to propose a contest.\"\n\nI got up on the stage and said, \"My slave came without permission while demonstrating the shibari ropes. The punishment for her offense is usually 50 lashes to the her body with this.\" I showed them the whip which I removed from my bag. \"The contest is this. My slave normally cums during this whipping. Everyone who wishes to participate may write down on a piece of paper their name, and the number of lashes my slave will withstand before asking permission to cum. Whoever comes closest to the number of lashes may use this vibrator on my slave for ten minutes.\" I held up the vibrating dildo.\n\n\"She's gagged,\" one of the masters said, \"how is she supposed to ask permission?\"\n\n\"When she's gagged, she holds out two fingers, followed by one, and that is her signal she is requesting permission to cum,\" I responded.\n\n\"What if more than one person guesses the correct number?\" A female asked.\n\n\"Then each of the persons guessing the correct number may have ten minutes with the vibrator and my slave. And to make it more interesting, if there are more than one, then whoever gives my slave the greatest number of orgasms during their initial ten minutes, may have an additional ten minutes with her.\"\n\n\"That sounds like an excellent contest,\" Ben said. \"How many here wish to participate?\"\n\nEvery master there raised their hand, as did a few slaves.\n\n\"Are slaves allowed to participate?\" Ben asked.\n\n\"Sure, why not,\" I said. \"Who better than a slave to guess a slaves heat.\"\n\nBen handed out sheets of paper and pencils to all who raised their hands.\n\n\"One more question,\" a master asked. \"How are we to know how close she is to climax? She could be on the cusp of cumming or be tired from all of her previous orgasms and thus be more distant from climax.\"",
        "\"A good question,\" I replied. \"Let me say this. This slave has already cum three times this morning, one of which was a multiple. She has a very large sexual capacity and if I were to guess, I think it's going to be under 25 rather than over. However, you have no reason to believe me, so why don't you,\" I pointed, \"and you, and you, and you, and let's see, you,\" I pointed to one of the slaves, \"inspect this slave to assess her heat. You can report to the rest whether she is close or far from her next orgasm.\"\n\nThe three men, and two women, one a slave, got up on the platform and approached Marcia. Each of them fingered her slit, a couple of them, a master and the mistress, sliding their fingers into her sheath, the slave, going last, used her fingers in her sheath and also brushed lightly against her clit. Every time she was touched, Marcia moaned a little bit, whimpering a little more when she was penetrated and shivering slightly when the slave touched her clit. Each of them showed the crowd the dampness on their fingers and agreed that she was very hot and likely close to climax.\n\nEverybody wrote down their numbers and names and turned them into Ben, who held them all.\n\n\"I don't know what any of you wrote down, so I have no desire or inclination to affect this in any particular direction. By the way, she also has a safety signal, which is just two fingers, and not followed by the single digit. Make sure you don't confuse the two in determining a winner.\"\n\nI approached my slave and bent down to whisper in her ear. \"Once again, you have my permission to cum as soon as you provide the signal requesting permission. You should also know that your punishment will stop whenever you cum; we don't have to do the full 50 under the circumstances of this contest. Do you still agree to do this?\"\n\nShe nodded her head, yes.\n\nI stood and slithered the strands between her legs and down her abdomen and over her breasts. Flick, the first strike was against her stomach; I was using the first one on her abdomen to gauge how hard I wished to hit. Ben began counting, keeping track of each blow. She flinched as much as her position allowed, a groan escaping her gag. Another, on the tops of her breasts, a third on the tender underside, and a fourth across her nipples, her groans becoming louder, wincing with each strike of the whip. My blows were measured, having no desire to speed the process along and relatively gentle as I had no desire to mark her.\n\nThe next two blows fell across her mound and the groans grew. Another whack smacking both her nipples and the underside, two more across her mound, and one striking the cleft, brushing her clit as well. The groans and whimpers gradually became moans and whimpers. The signs of her arousal grew more apparent; her nipples stiffening and her folds parting and a drop of her cream running down her stomach. Those who had guessed much higher numbers began to react in distress. They had been sure that the whip would have slowed her arousal response. I delivered two more strikes to her breasts, cutting across her turgid tips, another to her mound, one more to her slit and on the next blow, made sure to strike her clit. She immediately flashed the signal that she wished to cum and started twisting back and forth against the cross, her spasms causing her legs to shiver as she hung down.\n\n\"Fifteen, I have fifteen strikes,\" Ben shouted. \"How many of you had 15?\" He asked.\n\nThree people raised their hands, including the slave who'd tested Marcia's heat upon the platform.\n\n\"What are your names?\" Ben asked. He checked each name against the papers in his hand and confirmed each of them had guessed fifteen. \"These three did indeed all guess fifteen,\" he said.\n\n\"I think the masters should precede the slave, don't you, Ben?\" I asked.\n\n\"I agree. Master's first everyone,\" he called out.\n\nSome of the losers left in despair of their losing, but most wished to stay and observe what happened next. I handed the dildo to the first master who approached Marcia slowly, contemplating how best to make her cum for him. He apparently decided that his best bet was to alternate the vibrations between her cunt and her clit. He sank the dildo in her pussy and thrust several times, going deeply in, then removed it and applied it to her nubbin. His strategy was to change the location every 30-40 seconds, and he was rewarded with her first climax after about four minutes. Satisfied he was on the right path, he continued in this vein, just hitting her third orgasm at the ten minute mark. Ben called time. Marcia was twitching on her cross, her eyes closed.\n\nThe second master decided that he had to alter his approach if he wished to beat the first one. He decided that only by applying the vibrator directly to her clit and ignoring her cunt would he have the opportunity to win. He placed it directly on her clit and held it there, never removing it more than a few seconds and then, only to alter it's position by micro inches. He knew he ran the risk of desensitizing her clit if he kept it in one place for too long. Marcia finally flashed the signal for her next climax after around three minutes. Convinced he was now ahead of the first man, he continued his strategy and although she reached her third orgasm at the nine minute mark, he was unable to get her to the fourth before the end of his 10 minutes.\n\n\"What if we end in a two or three way tie and we all give her three orgasms? Do all the winners go again?\" He asked.\n\n\"Then it will have to end a tie,\" I said. \"By that time she will have climaxed seven or more times in roughly 30 minutes. I'm not willing to exhaust my slave in furthering a silly contest. You will all have to be satisfied with your ten minutes. She is entering a contest at 3 PM and I wish her to have some energy left over.\"\n\nThe slave approached for her chance with the dildo.\n\n\"Master, may I speak to your slave while I am arousing her?\" she asked.\n\n\"I don't see why not. Do you want to tell me what you'll say to her?\"\n\n\"I will let her tell you later,\" she said.\n\n\"What's your name, slave?\" I asked.\n\n\"My master named me 'Alicia', sir.\"\n\nSo she was probably a Gorean slave, as most of their master's tended to rename them, removing all aspects of their past identity.\n\nShe approached Marcia who had her eyes closed and was hanging almost drained.\n\nThe slave knelt down and whispered and Marcia's eyes opened. I saw her looking around, at me, all of the men and women crowded around the platform, and finally at the other slave girl. She continued to whisper in Marcia's ear and finally one of the two Master's standing with me shouted out, \"Get on with it then. What are you waiting for?\"\n\nHe turned to me and asked, \"Do you know what she's saying to her?\"\n\n\"No idea,\" I replied.\n\nShe turned on the dildo's vibrations and inserted it into Marcia's cunt. Other than the way she was holding it, with both hands rather widely spread over Marcia's sex, she didn't seem to be doing any particular thing to get my slave off. Rather than thrusting rapidly and deeply in and out, she worked the dildo gently, penetrating at most, one or two inches into her sheath and keeping up a slow, almost languid pace. She continued to speak softly in Marcia's ear as she rocked the dildo into and out of her pussy. Shortly before Ben called out two minutes, Marcia signaled her orgasm. Just after he called out four, Marcia signaled another climax. And so it went, about every two minutes, Marcia signaled she was cumming again. Unlike with the two men, Marcia had her eyes open and was watching everyone.\n\nJust before Ben called time, the slave said, \"Cum for me, slave, you slut!\" and plunged the dildo into it's deepest depth and Marcia signaled her fifth climax, shuddering in her bonds, almost expelling the vibrator in the throes of her passion.\n\n\"Time!\" Ben called. \"The slave is the winner!\"\n\nScattered applause broke out in the audience, primarily from other slaves until their master's silenced them, but I also saw a few of the Master's clapping in admiration of her performance. The two master's with me muttered in disgust and left the stage.\n\n\"The slave Alicia's time with the slave will continue for another ten minutes as per the contest rules,\" Ben called out.\n\nSome of the others left at this time, many making orders before they left, but many more stayed, wondering at the slave's secrets much as I was. Alicia stayed where she was, going back to her languid stimulation of Marcia, speaking quietly in Marcia's ear, whispering what I had no idea, but it must have been good as Marcia came four more times during the following ten minutes, the last time I'm sure it was a multiple orgasm as Marcia kept thrashing for a couple minutes after she signaled the climax. After Ben called time, I approached them.\n\nAlicia knelt as I approached and offered me the dildo, dripping with thick streaks of Marcia's cum. \"I will clean it for you, Master, if you desire,\" she offered. I nodded yes and she proceeded to lick it clean. Marcia had rivulets of her cream running down her tummy, dripping from her nipples and even into her face. No wonder. She'd cum sixteen times in the last 40 minutes or so, nine times in the last 20.\n\nI asked Alicia as she handed me the dildo, cleaned of Marcia's accumulated spend. \"What did you do to get my slave to climax like that?\"\n\n\"I had a very wise master once. He knew that the trick to making a slave cum was to engage her mind. A woman is stimulated as much by what goes on in her head as she is by any physical stimulation. I talked to her to engage her mind. She can tell you what I said.\"\n\n\"He sounds like a wonderful master. Are you still with him?\" I asked.\n\n\"No,\" she said. \"He died. I was collared by one of his acquaintances after his death. He is not quite so wise, although I still care for him.\"\n\n\"I'm sorry.\"\n\n\"You needn't be, Master. It happened long ago. I should also tell you that I may have bent the rules slightly?\"\n\n\"How did you bend the rules?\"\n\nI put a little finger partly up her anus and last two fingers of my other hand were on her clit. The vibrations from the vibrator passed through my hands into those erogenous zones. The rules said we were to use the dildo. I used both dildo and my hands.\"\n\n\"I don't know that I would consider that cheating,\" I said. \"You thought of it and the others didn't. It was all in the way that you held it, you were not making any other movements.\"\n\n\"Thank you, Master. I enjoyed myself. You have a beautiful slave; so hot. I must go now. My Master will be wondering what I am doing.\"\n\nI asked Ben to release Marcia and I followed Alicia to her master.\n\n\"I return your slave to you in good condition,\" I said. \"I'd like to thank you for the time of your slave during my contest. It has proven most enlightening.\"\n\n\"You're welcome,\" he said.\n\n\"You have a remarkable slave,\" I said. \"I believe that she has given me a good education today.\"\n\n\"Thank you. I think she's remarkable as well,\" he replied. \"I would also congratulate you on your slave. Quite an amazing performance she's given an old man this morning. I believe I will have to take this one to a quiet corner and fuck her, I'm so aroused.\"\n\n\"Thank you, Master. A slave is greatly appreciative of a good fucking,\" she said.\n\nI added, \"And thank you for your kind comments about my slave. It was, as you say, an amazing performance.\"\n\n\"Good day to you, sir,\" he said taking his slave by the arm and pulling her toward a corner of the room.\n\nI returned to Marcia, who had been released from the cross but was still lying in a semi-stupor upon the floor next to it.\n\nBen said, \"Thanks for the use of your slave for a demonstration. We sold twice as much equipment in the past hour than we usually do on the first day. Most of our orders usually come on the last day. Let me know if there is anything that you want and I'll be happy to give you a discount. I think that your slave has more than doubled the usual business the vendors have at this event. She's a keeper.\"\n\n\"That she is. I'll let you know. Come slave, it's time to feed you. I need to keep up your energy.\"\n\nI refastened her ankle cuffs and I attached her leash to her collar and led her out of the exhibition hall. We returned to the dining room and I sat down at a smaller table, Marcia kneeling on the pad at my side. I told her she could sit if she wished as I wished her to rest up. I ordered some chicken salad for Marcia with an energy drink and sandwich and water for myself. After the waitress left, I asked Marcia what the slave had been saying to her.\n\n\"First she told me to open my eyes and look at all of the people there watching me, half of them having sex. She said that all of them were eager to see me climax again, to see what a slut I was; that I was very lovely and very hot, and every man there and half of the women wanted to fuck me. She would indicate a man or woman in the audience that was having sex due to my performance and told me that if they could, they would be fucking me instead. She told me I was so hot that she would fuck me herself if she could, sucking the cum from my cunt when I climaxed. She told me that there wasn't a master there that didn't think I was the hottest slave in the building and that they would fight to put their collar on me. She said I had so much slave heat that normal people would think I was a common slut. One thing I remember her saying distinctly was, 'Picture yourself now, hanging upside down, your legs spread, your cunt gaping open, your cum running down your body, over your breasts and into your face, while I fuck your pussy with this dildo' she said. 'What man here doesn't want to spear his cock into your dripping cunt or ass, or fuck your mouth until he spurts down your throat.' As we got close to the ten minute mark, she jammed the dildo into my cunt and ordered me to cum. When she did, I couldn't stop myself. I don't think I could have disobeyed if I tried.\"\n\n\"What did she say during her bonus minutes?\"\n\n\"More of the same, just not as emotionally charged, gentler. At one point, she said 'Look at your Master over there, watching you after the two other masters made you cum. He's watching me make you cum now. He knows what a hot slave you are. Wouldn't you like to suck his big, beautiful cock while I fuck your juicy cunt to orgasm, feel his sperm bathing your tongue and throat and know he loves your slave heat; how proud he is that his slave is making everyone else here jealous of his lovely fuck toy.' I did. I would gladly have sucked you at that moment and swallowed every drop of your cum, right in front of everyone, I was that hot. Never have I felt more desirable and desired than I did then.\"\n\n\"Speaking of swallowing cum, I am so aroused right now, I could use a little relief.\"\n\nShe got back on her knees and opened my fly, pulling my stiff prick out and giving the head a little lick. I was not ready for teasing games now, I grabbed her head and thrust into her throat until my cock was buried in her mouth. I held her there, feeling her throat muscles and tongue work my cock as she gagged slightly, then releasing her so she could grab a quick breath, and thrusting again. I had been so worked up by the mornings activities, it would not take long. The waitress returned to the table and I indicated to her, hoarsely, that she should set the food on the table. She did, but she lingered there, fingering her own cunt through her panties, watching my hot slave take my cock to the root, her throat swelling as my prick pushed into it.\n\n\"Fuck, I'm cumming, slave. Swallow it all.\"\n\nJet after jet of my pent up supply of seed coated her throat and tongue, but she swallowed every drop. The waitress just shook her head in awe and walked off. After Marcia cleaned the remains of my discharge from prick, she tucked it back in my shorts.\n\n\"Is that better, Master?\"\n\n\"Much better. You're very good at that.\"\n\n\"A slave must be good or her Master will punish her until she becomes good.\"\n\n\"You know me so well. Let's eat.\"\n\nI fed her first, taking an occasional bite when she was taking a moment. When she indicated she was full, I gave her the energy drink.\n\n\"Thank you, Master.\"\n\n\"I'd like to go back to the furniture/device exhibit and try out an additional piece of furniture I saw there. I know that we're entered into the Sybian contest at 3:00 PM, but I believe we have time before then to put you on display once more.\"\n\n\"Whatever you say, Master.\"\n\nTaking her leash in hand, I led her back to the exhibition hall. I approached Ben once we got back to his exhibit. I had Marcia kneel at the base of the platform.\n\n\"Ben, I'd like my slave to demonstrate for us one more piece of furniture I saw you had here.\"\n\n\"What would that be, sir?\"\n\n\"That pillory/stock type thing you have sitting over there,\" I said, pointing to the device in question. \"How does that work? Can you bring that up toward the front of the stage, please.\"\n\n\"Great choice, sir. That's a wonderful piece of equipment, sir. Are you familiar with it at all? Ted asked.\n\n\"I've seen that or something like it on the internet, but they don't really show everything, do they?\"\n\n\"No sir, they don't. How would you like it positioned then?\"\n\nConsidering what I was contemplating, I finally had him set it so that the stock portion was toward the back, but still turned sideways enough that if you were on the left side of the stage, you could see what was happening there. The seating portion was toward the front of the stage but aimed at the right side.\n\n\"I'm going to have to be up here for the demonstration as I intend to use my slave. Do you have a problem with that?\"\n\n\"No sir. I'm looking forward to it, in fact.\"\n\nI called Marcia to my side and unhooked her leash. I handed her over to Ben.\n\n\"Show me what you can do with this piece of equipment, Ben.\"\n\nApparently the word went around the exhibition hall that my slave was going to be demonstrating another piece of equipment. Another large crowd began to form around his stage. Ben was going to be happy about that. He led Marcia up to the stocks part of the equipment with her back toward the right of the crowd. He placed her hands and neck into the stocks while she was in a standing position. Once again, I was amazed that my slave was so beautiful. Strong, sleek legs rising to a perfect rounded ass, two dimples at the top of it. Narrow waist flaring to muscular back and the loveliest face I knew.\n\nBen started his sales pitch. \"Now like a lot of pillories, this is good at holding your slaves in a standing position. What makes this unique is that you can adjust the stocks up and down to different heights, from the full standing position down to the floor.\"\n\nHe released a catch on the side and the stocks started sliding down with it. He brought it down to within two feet of the ground. My slave had to kneel when it reached that level and was bowed over, her fantastic ass raised in the air, the brown rosebud of her asshole pointed at the crowd to the right of the stage, along with her cleft, the folds already separating as my slaves arousal rose. The crowd started drifting to the right for a better view.\n\nI stood in front of the stock and asked Ben to raise it again until her head was even with my cock, when I told him to stop. Level with her face, I pulled down my zipper and pulled out my prick, already stiff and looking for a place to land. My slave saw and opened her mouth, sucking me in. She couldn't move her head, so I thrust back and forth, tickling the back of her mouth with the knob. I gave her some time to adjust to my thrusting, allowing her to open her throat, so that I could push in until I felt her lips on my balls. The crowd started moving to the left, drawn by the exclamations of those who had not originally moved as they could see her throat bulge as she swallowed the whole thing. The feeling of her tongue, her lips, the suction she made as I pulled out before plunging back in. If it weren't for the fact that she'd just swallowed my load right before lunch, I would have cum right there. However, the sheer and utter carnality of this act was making the cum stir in my balls once more. It would be hard to hold back much longer. I remembered the wisdom of the little slave girl, Alicia. I pulled out momentarily and turned her head, making my slave look at the gathered people, some of them already resorting to their own sexual acts to relieve the pressure on their own balls.",
        "After she got a good look at the people staring at her, I pushed my prick back into her mouth and said, \"Look at them, little slave, watching me fuck your face, watching my cock completely disappear down your throat, because you are a superior cocksucker. They see my prick swallowed up by your mouth until your lips caress my sack while you nibble on my root. They imagine themselves up here, imagine their own cocks delving into your sweet, hot, fucking mouth, wishing they could cum down your throat or splash your face with their sticky, white cream. What you can't see right now, are the dozens of other people standing behind you, watching your ass, your cunt, because you're bent over sucking my dick, and it's all open to them. They can see that sweet dimpled ass with that hole they're just dying to plug, that velvety cunt already releasing your juices because you know you're going to climax when I release my load in your hungry, cocksucking mouth, don't you. They'll be staring at that gaping cunt that's just aching to be filled, spasming, dilating and contracting, because you know they're watching. It's got you so turned on and they're so hot, hoping for the show that you're giving them.\"\n\nNow, I don't know what my words were doing to her, but they were driving me up the peak. Then I hit the edge and I didn't slow down as I fell over the lip and plummeted down the cliff. Right at that moment, the room was so quiet you could hear a pin drop. I think everyone was holding their breath.\n\n\"Cum with me, slave. Cum for your Master like the hot, fucking slut that you are!\" I screamed as I pulsed stream after stream into her welcoming mouth. \"Swallow it all.\"\n\nIt must have worked because I saw her flash her permission sign with her fingers while I creamed her throat, flooding it with my cum. Over the edge of the stocks, I saw her ass bouncing up and down, humping the air while her toes curled. She might have tried to scream but I was plugging her throat and only a gurgle came out. My pulses slowed and my prick began to shrink, but not before she licked it clean. The room burst into applause, screams and whistles pierced the air along with vigorous clapping. I tucked my prick back in my shorts.\n\n\"That was quite a show,\" said Ben. \"I just came in my pants. Luckily, I bring a spare pair with me because that almost always happens at least once at these shows.\"\n\nBending down to her face, I caressed it and said, \"Did you hear that, little slave? Ben climaxed just from watching your lips wrapped around my cock as you swallowed my cum. How sexy do you have to be to make that happen? I don't think he was the only one it happened to though. I see a lot of slaves cleaning their masters cocks right now, or wiping their lips from the excess that spilled out of their mouths. Half of the room must have cum when we did.\"\n\nI stood up and said, \"Ben, why don't you show us what else this thing can do.\"\n\nHe kind of stood there a moment, like he was trying to gather his thoughts. \"Yeah, yeah, this baby has a lot more features I should show you.\"\n\nHe raised the stock up another foot or so until my slave was standing again. \"This stock comes with a type of bench here\" which he mounted behind her. He lowered the stocks again and set Marcia's upper thighs down on it. \"It's quite narrow, about two inches wide, so it becomes uncomfortable after awhile. What really sets this apart is this other piece that goes over the legs and into the stomach. You then bend her over that piece, holding her in place because her hands and head can't go anywhere. Now you can individually raise and lower either of those two sections to adjust the height of her sex and ass, which can be independent of her head and arms.\"\n\nHe demonstrated by raising the seat, then moving the seat backward, stretching her back almost flat. He then lowered the stocks, creating a most enticing scene. Her ass was higher than her head, thrusting out backward, her thighs perched precariously on the narrow seat but unable to go anywhere as her spine was stretched from her neck to her hips. If she had been exposed before, just bent over, she was doubly exposed now, her ass stretched tight as a drum from the enforced position, her cunt protruding between her legs, wet and swollen, her slit leaking fluids from her last orgasm, both holes at the perfect height for a standing penetration, or a delicious spanking. Why not both, I thought.\n\n\"Stop, Ben, right there. That's perfect.\"\n\nI went to the front of the stocks and bent down again. My slave looked up at me. I pulled something else from my bag and showed it to her. Her tawse.\n\n\"You have been so good today, little slave, and you really don't deserve to be punished because I am so proud of you. But these people are here expecting a show, and I just feel we have to give them one. They were so enthusiastic about the last one; I know you heard the applause. Now they're standing behind you, staring at that perfect ass, watching your cum leak down your leg, and I think they want an encore. Every great entertainer holds that one thing back, that big hit, that golden oldie everyone remembers, that magic jump shot from the three point line to win the game. Today, we're entertainers. You've put on a great show thus far. There's not a straight man in here that doesn't want to fuck you. Hell, you might have converted most of the rest. I want to send them away happy, so I've got a big encore planned. I promise it won't be that bad.\"\n\n\"Yes, Master.\"\n\nWalking back behind her, I set my bag down and stripped off my clothes. I picked up the tawse, patted her ass with my hand and then smacked her with the tawse. Not hard, but enough she could feel it. I smoothed my hand over the red spot, before proceeding with another, just as hard.\n\n\"Another contest,\" shouted someone from the crowd. \"How many smacks before she cums.\"\n\n\"Ooh, and the winner gets to fuck her,\" somebody else shouted.\n\n\"No contest, and nobody fucks this slave but me!\" I shouted. \"Shut up or this stops.\"\n\n\"Yeah, shut up man. If you owned this slave, you wouldn't let anyone lay a hand on her, I bet. Just shut the fuck up.\" A third voice said.\n\nI waited until the noise quieted down, then continued swatting her beautiful body, gradually increasing the force of the blows, but keeping them well below what I knew my slave could normally tolerate. She'd been used hard today and had a lot more to do, and her ass was not normally stretched so tight, so I wanted to keep on the safe side. She didn't even groan with the first seven or eight strokes, but the next one made her whimper. She was unable to move up or down or front to back, but she had a little play from side to side and I could see her buttocks wiggle as the tawse smacked her. The groaning began in earnest when I laid a couple of weaker smacks on her protruding sex. Already swollen from her arousal, the twin smacks seemed to cause her outer labia to swell even more.\n\nA couple times the tips of the tawse had come close to her anal ring, and I made sure they received a stinger on the next blow, causing further whimpers and a delicious wriggling of her butt cheeks. Despite my holding back on my smacks, her ass was getting that rosy hue I so appreciated when spanking her. I could see that despite the warming I was giving her cheeks, her arousal was increasing. The whimpers of pain she'd first made after the spanking started were often mixed with the lower, warmer moans of her excitement. Her inner lips started to protrude slightly and her fluid flow increased in earnest as her pleasure grew. I shifted the tawse to my left hand and used my right hand to delicately smack her sex, bringing her loudest moan yet. Gripping the tawse again, I delivered a few more well monitored blows to her ass cheeks, another to her anal cleft, two more to her cheeks, before delivering a light smack to her pussy. That was all she needed.\n\n\"Master, may I cum.\"\n\n\"Cum, slave.\" I said as her spasms started.\n\nBefore they'd finished, I plunged my cock into her well coated cunt, sliding slickly as deep as it could go on the first thrust, initiating another orgasm.\n\n\"I told you that you had a greedy, hungry cunt just waiting to be filled, didn't I slave.\"\n\n\"You did, Master,\" gasping as her pussy massaged my prick as it throbbed it's release.\n\n\"Your cunt is very wet and creamy right now,\" I said, continuing to plunge into her hot core.\n\n\"Whose fault is that, Master. How many times have you ensured I climaxed today? Two dozen? More?\" She panted. \"I'm a simple slave who only does what she's told by her Master.\"\n\nI pulled out and she whimpered in frustration as she tried to drag her climax out. I bent over and licked her asshole, getting her wet and ceasing her frustrated sounds and exchanging them for excited ones. The slickness of the fluids from her cunt coating my cock and my saliva combined with the tautness of her stretched ass was more than sufficient to allow me to slide the head of my prick past her anal ring and then drive forward into her dark hole.\n\n\"Tell these people what you want me to do now, slave.\"\n\n\"Fuck me in the ass,\" she cried out. \"Fuck my ass until I cum, Master,\"\n\nI did. Repeatedly. Driving my cock to the root in her ass, pulling out to the glans, then stabbing back in. Long, deliberate strokes in a steady rhythm, slapping my balls against her cunt until she was ready to climax again. She quickly asked for permission to cum and I granted it as quickly, being ready to cum myself. She wasted no time in following my instructions and the contractions of her rectum drew my third load of the day from my sack and deposited it in her asshole. Five or six quick stabbing thrusts timed to the pulsing of my prick and I was finished; wiped out by my little slave girl. Shrinking quickly now with my third release, it plopped from her ass followed by a thin trail of my cum.\n\nI knelt down by her head and softly said, \"You cannot see them, but there are 60-70 people standing behind you now, staring at your gaping asshole, watching my cum drip out of it, watching your cum leaking from your cunt. Can you feel it running down your leg, slave?\"\n\n\"Yes, Master.\"\n\n\"Every person out there right now wishes they were you, or wishing they were me. Me, for fucking a hot, beautiful slave who has a tremendous sexual capacity, or you because of all the times that you've cum. When we came here, I had no idea how much this would end up turning you on and how easily you would cum in front of dozens of people. We will talk about this later.\"\n\n\"Yes Master.\"\n\n\"Let's go get cleaned up. We have almost an hour before the contest starts.\"\n\nBen released her from the stocks while I put my clothes back on, grabbed our stuff, and then, taking her leash, led her back to our room.\n\nOnce there, we showered together, soaping each other, cleaning off the accumulated fruits of our passion. I toweled her off first, then she dried me off. Her attentions in the shower and with the towel had me at half mast and she asked if I wished her to finish me off.\n\n\"Not now, slave, we need to get moving. The contest starts at three.\"\n\n\"What exactly is this contest, Master?\"\n\n\"They'll explain the rules at the contest, little slave. Come on.\"\n\nAs I was going to be naked during the contest, I didn't bother wearing any clothes this time. Taking her leash in hand we returned to the dining room which had been set up for the contest. All the tables had been removed and the chairs and slave pads were moved to the outside of the room for non-contestants to use while watching. There was a large raised platform in the center of the room upon which twenty Sybians had been arranged, evenly distributed on the platform.\n\nAt precisely 3:00 PM, a master walked to the center of the platform and using a portable mike, began to speak.\n\n\"Good afternoon everyone, Masters and slaves alike. My name is Master Don. I am the host of this event.\" Polite applause broke out. \"Nine years ago, I decided that a convention like this was something that we needed to have. To meet others like us who shared our lifestyle choices, to see what new things the good folks who catered to our lifestyles had come up with in the way of toys, equipment, furniture, etc. over the past year. Of course, Vegas had to be the place to hold such an event because What Happens in Vegas....\" He cupped his hand to his ear and most of us shouted out 'Stays in Vegas.' \"Right!\" He continued, \"It took about a year to set up due to the logistics of booking an entire hotel for our stay under the conditions that we enjoy now, and when we first started, it was in a much smaller venue than the one we enjoy today. It stayed there for the first five years, but grew so much\" loud applause and cheering broke out and Don had to pause momentarily, \"that by the fourth year, it was obvious that by the sixth, we would need a larger place. Hence we now enjoy this first rate location. Let's give a round of applause to the wonderful folks hosting our little event, without whose acceptance and hospitality, our little vacation on the wild side would not be possible. Would any staff members here please stand up!\"\n\nStrong applause broke out, growing louder as several people stood up.\n\n\"I want you to know that the people who serve us have to volunteer to be here,\" Don continued, \"although the fact that they get a 50% boost in salary for working the convention, doesn't hurt\" A smattering of laughter followed. \"Some of them are so enamored of the things they observe here, that quite a few of them have chosen to join our ranks.\" More applause. \"But in order to make sure we have sufficient service, they give up all but one day of the convention to wait on you.\" Louder applause greeted this.\n\n\"Now for the order of business that brings us all here today; the Sybian contest.\" Strong cheering broke out. \"Yes, this contest has proven to be one of the most popular and enduring of the little games we play here. Let me explain the rules, so that there are no misunderstandings. Each female slave participating in the contest will take a seat on a Sybian. Her master or mistress will stand in front of her, naked. Electrodes will be attached to the slave or any mistresses near her clit and on her nipples and on the Masters under their cocks. As everyone who has watched 'When Harry Met Sally' knows, it's possible for a woman to fake her orgasm, and it may also be possible for a Master to hide his orgasm, but it's not possible to fool the electrodes. Your sexual responses are measured and recorded by equipment capable of measuring sexual response. The machine knows.\n\n\"At the exact same time, all of the Sybians will begin vibrating on the exact same setting. As soon as the vibrations start, the slave will begin sucking or licking her Master or Mistress. Now, the main purpose of this contest is to see which slave can have the most orgasms before making her Master or Mistress cum, but the contest is actually graded in three categories with prizes in each category as the contest is a measure of both the Master's or Mistresses stamina, and the slaves responsiveness or slave heat. So, as stated, the largest number of orgasms by the slave before their partner cums, the longest the Master or Mistress delays their own orgasm and the most climaxes per minute of the slave; $1000 for first prize, $700 for second and $400 for third. Any questions thus far, raise your hand.\" No one did.\n\n\"Now, to avoid any cheating, five masters and five slaves who are not participating in the contest will be paired together as Judges watching the various couples. If at any time, both of them agree that the slave is not doing enough to make their partner climax, they will both tap them on the shoulder and that couple is disqualified. If only one of them believes the slave is slacking, the slave will receive a swat on the ass with a riding crop and encouraged to work harder. If a slave receives more stimulation than she can withstand and leaves the Sybian, that couple is disqualified. Are there any questions now.\" The explanation had been quite clearly stated and no one raised their hand.\n\n\"May I have any couples participating, please stand.\"\n\nI had Marcia display as she stood. There were around 35 couples standing by my quick estimation.\n\n\"Okay, due to the number of participants standing, we will have to break into two groups. Starting on this side, introduce yourselves to our audience. Oh, there is one further announcement. All of the Sybians today were donated by our friends at 'The Stockroom'. Ted, their agent here during the convention has announced that all of them will be available for sale for 25% off after the contest. You know, because they've been well used.\" A smattering of laughter followed the announcement.\n\nEach couple was pointed out in turn, introduced themselves and was assigned a number in order, which Don ordered them to remember. I noted that George and Dina were entered and assigned number 13. When it came time for us, I said, \"Master Sam and slave, Marcia.\"\n\nDon said, \"I think I can safely say that Marcia has been the hit of the convention thus far, don't you? Let's give her a round of applause please.\" A loud round of applause and cheering broke out and Marcia blushed. So far today, she'd been kept naked most of the day, made to climax multiple times in front of strangers, sometimes by strangers, forced to expose her heat; but it was being acknowledged for all this by a rowdy group of naked people that caused her to blush.\n\n\"We're glad you've chosen to enter the contest, Sam and Marcia; it should be interesting. There is usually side betting that goes on during the contest and I'm prepared to guess you're going to be the odds on favorite. You're assigned number 22.\" He continued around the room until all 37 couples had been identified. \"We will begin the contest with the odd couples.\" I sat down and Marcia knelt beside me.\n\n\"Slaves, take your positions,\" Don said.\n\nAll of the participating slaves were given a small tube of lube and lubing themselves and the five and one-half inch dildo on each Sybian, they squatted down and speared themselves on it. Several Masters and Mistresses went around to each slave, smeared a gel designed to conduct electrical current easier and attached the electrodes.\n\n\"Any Mistresses, please find your slave and stand in front of her.\" I noted that only other Mistresses were allowed to attach the electrodes to a Mistress. There were five Mistresses in the first group of nineteen.\n\n\"Masters, you're next.\" Only Masters were allowed attach the electrodes to other Masters. I wondered about this protocol; what the reasoning for it was; that anybody could touch a slave, but only a Mistress for a Mistress or Master for a Master. This is the first time that any male other than a doctor would be touching my groin. The Master lifted each cock, smeared the gel and placed the electrode at the base of their shaft where it met the sack. All in all, it was pretty clinical and not much different from a doctors visit except the purpose.\n\nWhen all were ready, Master Don said, \"Get ready\" small delay, \"and begin.\"\n\nI could see each of the slaves startle as the Sybian began vibrating, then they quickly went to the cock or cunt before them and began working the sex organ, attempting to bring their partner to climax. Apparently one slave wasn't trying hard enough, because that couple was disqualified in under two minutes. Three others were given a riding crop warning, all by the slave of the Judge pairing. Apparently the slaves were more demanding of what was expected of another slave than a master was. One of those three was disqualified by both judges within three more minutes when they agreed that the encouragement previously administered was insufficient to make the slave work hard enough. I could tell after the two minute mark that several of the slaves had started having orgasms. The way they moved and the expressions on their faces were sufficient to tell me that. Once the orgasms started, the slaves more frequently had difficulty properly attending to arousing their partner and more swats of the riding crop were administered, but by about a 75% margin, the slaves remained the more demanding of the two judges.",
        "The first of the Master's surrendered his spunk at about the six minute mark, rapidly followed by the Mistress right beside him. Apparently his explosion beside her was enough to trigger her own and she collapsed gasping on the floor her hand covering her sensitized cunt. It was time to start applying my psychological program on my little slave. Thank you, Alicia, I thought to myself.\n\n\"Look at the slaves up on the platform, little slave. Soon that will be you, thrashing about on a Sybian, subjected to unending orgasms while you attempt to drain me again. This whole crowd will be watching your cocksucking little mouth locked around my prick, vacuuming the cum from my balls, squirming in the throes of one release after another. Do you see Dina, slave?\"\n\n\"Yes, Master.\"\n\n\"See her body quiver and shake as she's overcome by climax after climax. She is indeed a hot slave girl, just as her master said. She is going to be tough to beat. I'll bet she's cumming almost constantly. What do you think?\"\n\n\"Yes, Master. She can't stop squirming.\"\n\n\"You don't see the judges cropping her ass to make her suck her Master's cock, either. Even in the midst of her climax, she's sucking his prick like the good little slave she is. She's oblivious to everything else but his cock and her cum. That's you. You won't care that a whole room of people is watching while you cum like a slut and suck cock like a whore, will you. Just thinking about it makes you hot, doesn't it slave?\"\n\nShe couldn't lie. I could see the tell-tale signs already, her nipples hardening to rigid points, her legs spreading wider, her petals opening, the inner lips descending, her clit peeking from between her folds and her liquid beginning to coat her sex. The picture of herself out there cumming over and over while she licked and fondled my prick was raising her heat exponentially.\n\n\"Yes, Master.\"\n\n\"What a wanton slut you've become, haven't you slave? Display!\" I ordered.\n\nShe leapt to her feet and displayed for me. I ran my finger the length of her slit and showed her the signs of her arousal. \"Yes, Master,\" she said. \"I am a wanton slut. You've turned me into a wanton slut. I'm a wanton slut for you, Master.\"\n\n\"You're a wanton slut for everyone, slave. Four different people other than myself have made you cum today. You've always been a slut, but never allowed yourself to let go. I just released you to be the slut you've always been, didn't I?\" I put two fingers into her cunt and fucked them in and out. \"You want to cum now, don't you slave?\"\n\n\"Yes, Master. Please let me cum.\"\n\nHer cunt was almost frothing as I worked my fingers in her sheath.\n\n\"Cum for me, slave,\" and she climaxed for me over my fingers.\n\nI continued working my fingers against her g-spot while I turned back to the spectacle in front of me. I had to admit that having Marcia admit she was a slut and watching all those beautiful slaves climaxing over and over again while fingering my slave, was having it's effect on me as well. My cock was beginning to swell. I heard her plead to cum again, and I told her to cum all she wanted and I felt her pussy tighten around my fingers and a fresh burst of fluid bathed my hand. When her spasms ceased, I gave her my hand to clean and I felt her lips and tongue working to clean her releases from my hand. Several more masters and mistresses had climaxed while I was talking to my slave. There were only three left including George and Dina. Dina really was a hot slave. George had trained her well. It seemed that she was in the throes of a particularly long orgasm when she fell off the Sybian holding her pussy, apparently over-sensitized to the continuous vibrations and unable to continue any longer. Damn, too bad, although it gave us a chance at a prize that she might have taken. Eighteen minutes had gone by and only two couples were left. The last Master surrendered his cum to his slave after 21 minutes and the last Mistress lasted for 25. Going to be tough to beat, at least in terms of stamina. Hopefully, my slave could make some of it up in frequency. I noticed that much of the crowd was also engaged in various sexual acts.\n\nAfter consulting with the electronic records, Don announced the results for the first round. Not too many surprises there, those couples who lasted longest generally had done the best although one person who'd only lasted seventeen minutes was in third because his slave had cum more often than either of the next two finishers. That was my hope, because I don't know if I could last over twenty minutes with the way that my slave sucked cock even though I'd already released three times today, all after lunch.\n\nDon made one final announcement. \"The slave known as Dina came over 25 times in eighteen minutes, the last one lasting almost two minutes; which would have been a new record for slave heat had she not been forced to leave the Sybian and been disqualified. Nevertheless, I believe we should applaud the amazing slave heat of Dina with a nice round of applause.\" While George couldn't be happy about the disqualification, it had to make him happy to know he had such a hot slave.\n\nAll of the Sybians had the vibrating sleeves removed and the saddles were wiped down with anti-microbial sprays and new sleeves were placed over the metal shafts. At least they were thinking about STD's and taking steps to prevent their spread. That was good to know as I would have withdrawn if they weren't.\n\n\"All of the slaves going next, please take your seats on the Sybians.\"\n\nMarcia quickly chose one of the units closest to my seat and taking the provided lube, quickly oiled down her dildo and the sleeve, and used a little on herself, although I felt sure she was still well lubricated from her spend. I watched the Masters and Mistresses applying the electrodes to the slaves, and a Mistress placed the electrodes on Marcia, talking to her as she did so, Marcia blushing and lowering her head as she spoke. I was curious what she said so when I was called to the platform, I asked her what the Mistress said.\n\n\"She told me she'd watched the slave make me climax while I was upside down on the cross and said I was a very hot slave. She said that she was betting a substantial amount of money on me to win the slave heat portion of this contest and that if I didn't, she was going to speak to you about having me for an hour to punish me for failing to live up to her expectations.\"\n\n\"Would you like me to give you to her if you fail to win, slave?\"\n\n\"No, Master. It seemed to me that she would be very angry and quite brutal with this slave.\"\n\n\"Then you had better win, slave, because I may grant her that permission if she asks. Did she tell you her name?\"\n\n\"No, Master.\"\n\n\"I'll keep an eye out for her. Maybe she can give me some punishment pointers. Remember, our goal is for you to cum. Don't ask for permission.\"\n\nThe master had stopped by and attached my electrode while we were talking and I'd barely noticed his presence while it was being done.\n\nI heard Don say, \"Get ready,\" two seconds, \"Begin.\"\n\nI saw the Sybian sleeve begin to vibrate, buzzing up and down and Marcia pulled my semi-tumescent cock into her mouth. Fortunately, she too understood that we needed to work at winning this contest and rather than gobbling it down her throat where her throat muscles would also work on it, she kept it within her mouth, exclusively using only her tongue and lips on me. Not that it felt one whit less spectacular that way, but it allowed her to keep a hand on my cock near the base and if she felt that I was getting close, she would squeeze me and suppress the orgasm. Less than a minute in, she moaned around my prick and I knew she was climaxing for the first time. It was time to put my psychological advantage to work.\n\n\"You just came, didn't you?\" She nodded watching my eyes. \"In less that a minute you climaxed in front of all these people, watching you fuck yourself on a fucking machine and you came like a slut, spilling your cream all over the baby dildo in your cunt. I'll bet you wished it was bigger, really stretching that pretty pussy of yours. In fact, I'm guessing that you wished it also had an ass attachment so both your cunt and your ass were getting fucked by this machine. You can't wait to cum again, can you?\" She moaned. \"Oh, I'm guessing you just came again, didn't you. By the time you're done, this machine will be so sloppy with your cum they might have to throw it away. I don't know if the machine is fucking you or you're fucking the machine. My guess is both. It can't fuck you fast enough so you have to fuck it so you can cum all you want like the slut you are.\"\n\nMy words were having an affect on her. She was rocking back and forth on the Sybian, sliding up and down on the dildo attachment and moaning almost constantly. The flange of the silicon sheath had tiny raised dots that she was rubbing her clit against. My words were also having an effect on me, luckily she noticed and squeezed down on the base of my cock, suppressing my orgasm.\n\n\"Instead of fucking this machine, I'm guessing you wish it was people instead, that you could be riding; one cock in your cunt while another master plundered your ass and a third was fucking your face just like I am. And your hands could be working two more cocks. You could be satisfying five cocks at once, feel them throb while they thrust in you, feel them twitch as you gave them a hand job. Then you couldn't blame your slutty behavior on how the machine was making you feel, you'd have to blame it on who is truly to blame; that's the slut sucking my dick. It would feel so good and dirty to feel their cocks all shoot off at once, in your cunt, you ass and your mouth and the two in your hand spew their cream into your face. Then you wouldn't just feel like a slut, everyone could see you were a slut, walking around with jism on your face. Then the whole world could know who and what you truly were. A cum hungry slut who would do anything to have another cock pounding up her cunt.\"\n\nShe was cumming pretty regular now, a slave in heat, driven by her needs and the words being pounded into her head by my incessant voice.\n\n\"I'll bet you'd love to be gang-banged wouldn't you. No one person can keep up with you but ten or fifteen, that might do it. They would be like the machine fucking your pussy right now, able to pound your pussy at will, no off switch, as soon as one left their creamy load in or on you, another one could take his place. All the benefits of a machine but with live, spurting cocks to spew their juice in you and on you until you were covered in a shower of cum, creamy white stuff like frosting icing a cake, except you would be the cake. Just like that dildo is awash in your fuck juice right now because you just can't stop climaxing on it.\"\n\nShe caught another orgasm by squeezing my cock as it started to throb. No matter how good she was at that, she wasn't going to stop this for long. I was getting ready to explode big time and it wouldn't take much to do it. I'd lost track of how much time had passed, missing the voice calling the minutes as I'd spoken to my slave.\n\n\"Damn, slave! You are one fine cocksucker. Are you sure you weren't born with a cock in your mouth. You must practice every day sucking cock to get that good. I'm sure every male in here would like to experience your mouth sucking their cum laden pricks, feel you suck the juice from their balls and swallow it like the good little whore you are. If you weren't my slave, you'd be a streetwalker, making a $1000 dollars a night at $20 dollars a pop, just to have as much cock and cum as you could get. Oh, shit, slave, get ready, I'm about to fill your stomach with so much jizz, you won't need to eat supper.\"\n\nShe tried to stop it again, but I slammed into her throat and let loose, hosing her throat with the biggest load of cum I may have ever fired off. Seven or eight powerful pulses later, I felt myself start to shrink and my slave sucked and licked me clean. I backed away, pulling the electrode off so I could sit down. I could barely walk I was so whipped. Marcia climbed off the Sybian and came over to me, cradling me in her arms. I had been right about her Sybian. Her orgasmic fluids drenched the thing. My little slave. God, how I loved her. I looked around and saw there was only one Master left. He was still going strong.\n\nI found out that I'd actually lasted 22 minutes. The final contestant lasted a full 28 minutes. I don't know how he managed to last that long, although he was an older man. Something to be said for that. Well that meant I got third place for stamina. My competitor was first and the Mistress from the first group was second. Master Don was going over all the calculations, consulting the data.\n\n\"We have some winners to announce,\" Master Don reported. \"For Master or Mistress stamina, the winner is Master Carl at 28 minutes, Mistress Veronica was second at 25 minutes, and Master Sam came in at 22 minutes for third. I'm going to break procedure here for a minute and announce the overall winners first. In first place comes Master Carl's slave, Sheba, who had 36 orgasms before swallowing Carl's cum. In second place is Master Sam's slave, Marcia who had 35 orgasms before Sam climaxed, and in third place, Mistress Veronica's slave, Honey, who had 22 orgasms.\" Master Don paused.\n\n\"I have a new record to report for slave heat. Sam's slave, Marcia, takes first place with 35 orgasms in 22 minutes. Folks, I have to tell you, that is almost 1.6 orgasms every minute.\" Widespread and very loud applause broke out among the spectators. I could see the Mistress who'd placed the electrodes on Marcia jumping up and down. She'd apparently won a very substantial amount of money. I wondered who she'd won it from. \"There is something else to report about this phenomenal slave. At first we thought that she'd had one single orgasm lasting for over the final five minutes of the contest, but we checked the wave form data and she actually climaxed fifteen times in that interval or an average of 3 per minute. An extended multiple orgasm sequence; I've never seen anything like it during one of these contests. And I should also report Sheba came in second and Honey came in third. The winners can pick up their prize money tonight at the Slave Dances at the Gorean slave pit in conference room 3 at 9:00 PM or from me any time tomorrow between 8-12 AM in the dining room. Congratulations to all of the winners.\"\n\nNot bad, $2100 for a little over 22 minutes work, which, let's face it, wasn't really work at all, but pleasure. I looked at amazement at my little slave. 35 climaxes. She'd had over 50 of them already today and it wasn't yet 5:30. She was truly amazing. God, she must be exhausted. I led her up to our room and ordered a light supper from room service to be delivered at 7:30. I told her to sleep and I'd wake her when supper arrived. She collapsed on the bed and was asleep almost as soon as her head hit the pillow. I set my smart watch to wake me at 7:15 with a gentle tapping on my wrist and lay down beside her, hugging her body to my chest. She molded her body to mine and we both slept. I got up at 7:15, washed up a little; brushed my teeth again. There was a soft knock and the door. Marcia was sprawled out on the bed, a vision of naked glory. I briefly pondered covering her with the sheet, but thought, what the hell, I'm sure everyone at the hotel has seen her naked by now unless they were on the night shift last night.\n\nI opened the door and the bellhop took a long, lingering look at my little slave when he wheeled the cart in. I tipped him and he thanked me, took another slow peek at Marcia and left. Really, the young guys especially must love it when they had the convention here. There was more nudity here than on the French Riviera and much more sex. I woke Marcia up and we ate, talking about what I wanted to do tomorrow. While not exactly enamored of what I'd seen about the Gorean lifestyle, I did appreciate the beauty and grace of their slaves and watching them dance would be a lovely way to spend the evening. Plus, I could collect my winnings from Master Don. When 8:45 rolled around, I grabbed my bag of tricks with one of the new purchases in it, attached my slaves leash again and led her down to Conference Room 3. Like her, I decided to go naked. Just about everyone had seen me as well.\n\nThe conference room was already quite crowded, as much from the furniture, or should I say, lack thereof, as from people. Apparently the Goreans don't believe in chairs, everything was cushions and people were all sprawled out. I saw Master Don and approached him and he handed me a thin envelope with a check for $2100 in it. I added it to my bag. When everyone saw who it was, they shifted around to make room for us, I think they mostly wanted to be close to my slave so they could see more closely what I saw every day; that she was one hell of a woman. I did find a spot next to George. He indicated that Dina was going to be dancing in the first contested dance, 'The Dance of the Newly Collared Slave'.\n\nThere was a sand pit set up in the middle of the room with a wooden pole in the middle. Apparently, almost all dances took place in a sand pit at most Gorean gatherings. Dina was the first one up. She stood beside the pole and the music started, primarily the beating of primitive drums. She crossed the pit several times, gracefully and lithely back and forth, her red silks flying around her, like she was looking for a way to escape. Each time she was brought up about five feet from the pole, like she was in a cage, or there was a rope or chain attached to her collar, she collapsed to her knees and brought her hands up to the collar on her neck, tugging at it like she wished to be free of it; sinking dejectedly when it wouldn't come off. A clang of a cymbal and she turned, as if a door had just opened. She backed away from the supposed intruder in cat-like steps. Then it appeared her master was whipping her as she dodged to and fro as if she hoped to escape the whip, flinching when the imaginary strands touched her. Tearfully, she stood and shed her silks, trying to stand bravely and proudly, until the imaginary whip struck her three more times. She sank to her knees and sat back on her heels, spreading her thighs wide, showing her sex to her new master, her wrists and hands lying face-up on her thighs in the Gorean way, her arms and shoulders back, thrusting her breasts at the man who now owned her. She then elegantly bent forward from the waist, putting her head in the sand, her arms extended toward her master in 'la Kajira', the slave bow to her master.\n\nThe crowd started clapping, many of them slapping their chests or their thighs in the Gorean way. Her entire dance took no more than four minutes, but Dina was sweating with exertion from all the spinning and twisting of the dance. Without words, the dance had eloquently portrayed the poor slaves realization of her captivity, her desire to escape, her punishment at the hands of her master, until she finally accepted the inevitable and submitted herself to him. Dina came rushing to George and knelt in front of him on her hands and knees, pleading with no more than her eyes that he should use her right now. Her sex was damp with her lubrication, the petals of her sex spread for him. He did not keep his slave waiting, but undid his leather breechclout and forcefully entered his slave in a single push, causing her to climax instantly. She was as hot from the dance as her Master.\n\nFor that matter, so was I. It had been inspired dancing and Dina was a lovely slave. I pulled my slave to her hands and knees and entered her as roughly as George had used Dina. The dance had aroused my slave as much as it had me, and I found her cunt well oiled by her arousal. Twenty deep strokes into the warm dampness of her sex and she asked for permission to cum."
    ],
    "authorname": "Thors_Fist",
    "tags": [
        "bondage",
        "discipline",
        "anal",
        "oral",
        "lesbian sex",
        "nudity",
        "public nudity",
        "public sex",
        "toys"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/wbdp-valentines-in-vegas"
}